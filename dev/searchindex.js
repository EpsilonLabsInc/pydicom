Search.setIndex({"alltitles": {"(Optional) Install required libraries": [[585, "optional-install-required-libraries"]], "A simple example": [[24, "a-simple-example"], [26, "a-simple-example"]], "API Reference": [[53, "api-reference"], [551, "api-reference"]], "Add items to the private DICOM dictionary": [[16, "add-items-to-the-private-dicom-dictionary"]], "Adding Plugins to a Decoder": [[30, "adding-plugins-to-a-decoder"]], "Adding Plugins to an Encoder": [[34, "adding-plugins-to-an-encoder"]], "Adding SOP instances": [[589, "adding-sop-instances"]], "Adding elements": [[587, "adding-elements"]], "Adding new entries to the DICOM dictionary": [[46, "adding-new-entries-to-the-dicom-dictionary"]], "Analyse differences between DICOM files": [[20, "analyse-differences-between-dicom-files"]], "Anonymize DICOM data": [[17, "anonymize-dicom-data"]], "Anonymize a single file": [[17, "anonymize-a-single-file"]], "Any category": [[587, "any-category"]], "Applying the changes": [[589, "applying-the-changes"]], "Available Plugins": [[36, "available-plugins"], [37, "available-plugins"], [38, "available-plugins"]], "Best Practices": [[42, "best-practices"]], "Bits Stored": [[36, "bits-stored"]], "Bug Fixes": [[561, "id44"], [561, "id48"], [562, "bug-fixes"], [563, "bug-fixes"]], "Bug fixes": [[561, "bug-fixes"], [561, "id36"], [561, "id39"], [566, "bug-fixes"], [567, "bug-fixes"], [568, "bug-fixes"]], "Build and preview the documentation": [[586, "build-and-preview-the-documentation"]], "Bulk Data Encapsulation Utilities (pydicom.encaps)": [[66, "module-pydicom.encaps"]], "Bulk Data Handlers": [[549, "bulk-data-handlers"]], "Changelog": [[561, "changelog"], [576, "changelog"]], "Changes": [[561, "changes"], [561, "id1"], [561, "id5"], [561, "id8"], [561, "id13"], [561, "id18"], [561, "id21"], [561, "id22"], [561, "id25"], [572, "changes"], [573, "changes"], [574, "changes"], [575, "changes"], [577, "changes"], [579, "changes"], [580, "changes"], [581, "changes"], [582, "changes"]], "Character Encoding and Decoding (pydicom.charset)": [[54, "character-encoding-and-decoding-pydicom-charset"]], "Codifying a part of a DICOM file": [[24, "codifying-a-part-of-a-dicom-file"], [26, "codifying-a-part-of-a-dicom-file"]], "Color space": [[49, "color-space"]], "Combining with other CLIs": [[26, "combining-with-other-clis"], [27, "combining-with-other-clis"]], "Command options": [[24, "command-options"], [26, "command-options"]], "Command-line Interface Guide": [[26, "command-line-interface-guide"]], "Commit your changes and make a pull request": [[585, "commit-your-changes-and-make-a-pull-request"], [586, "commit-your-changes-and-make-a-pull-request"]], "Compressing Pixel Data": [[43, "compressing-pixel-data"], [592, "compressing-pixel-data"]], "Compressing using pydicom": [[43, "compressing-using-pydicom"], [592, "compressing-using-pydicom"]], "Compressing using third-party packages": [[43, "compressing-using-third-party-packages"]], "Compressing with Dataset.compress()": [[43, "compressing-with-dataset-compress"]], "Computation times": [[5, "computation-times"], [13, "computation-times"], [19, "computation-times"], [21, "computation-times"], [583, "computation-times"]], "Conclusion": [[589, "conclusion"]], "Configuration Options (pydicom.config)": [[55, "configuration-options-pydicom-config"]], "Contrib file changes": [[561, "contrib-file-changes"], [561, "id34"], [568, "contrib-file-changes"], [569, "contrib-file-changes"]], "Contributing a documentation change": [[586, "contributing-a-documentation-change"]], "Contributing a source code change": [[585, "contributing-a-source-code-change"]], "Contributing to pydicom": [[584, "contributing-to-pydicom"]], "Converting a dataset into JSON format": [[588, "converting-a-dataset-into-json-format"]], "Core elements in pydicom": [[41, "core-elements-in-pydicom"]], "Create a new branch": [[585, "create-a-new-branch"], [586, "create-a-new-branch"]], "Creating Encapsulated Data": [[66, "creating-encapsulated-data"]], "Creating a dataset from JSON": [[588, "creating-a-dataset-from-json"]], "Creating a new File-set": [[589, "creating-a-new-file-set"]], "DICOM Data Dictionary": [[57, "dicom-data-dictionary"]], "DICOM File-sets (pydicom.fileset)": [[74, "dicom-file-sets-pydicom-fileset"]], "DICOM File-sets and DICOMDIR": [[589, "dicom-file-sets-and-dicomdir"]], "Data Dictionary Utilities (pydicom.datadict)": [[57, "data-dictionary-utilities-pydicom-datadict"]], "Data Elements (pydicom.dataelem)": [[60, "data-elements-pydicom-dataelem"]], "DataElement": [[41, "dataelement"]], "Dataset": [[41, "dataset"]], "Dataset IO": [[69, "dataset-io"]], "Dataset Reading (pydicom.filereader)": [[71, "dataset-reading-pydicom-filereader"]], "Dataset Writing (pydicom.filewriter)": [[73, "dataset-writing-pydicom-filewriter"]], "Dataset basics: read, access, modify, write": [[587, "dataset-basics-read-access-modify-write"]], "Dataset.overlay_array()": [[48, "dataset-overlay-array"]], "Dataset.pixel_array": [[49, "dataset-pixel-array"]], "Dataset.waveform_array()": [[50, "dataset-waveform-array"]], "Decode and plot Waveform Data": [[3, "decode-and-plot-waveform-data"]], "Decoding Plugin Options": [[29, "decoding-plugin-options"]], "Decoding Waveform Data": [[594, "decoding-waveform-data"]], "Deleting elements": [[587, "deleting-elements"]], "Deprecations": [[561, "deprecations"], [582, "deprecations"]], "Display unicode person names": [[22, "display-unicode-person-names"]], "Displaying Private Data Elements in pydicom": [[46, "displaying-private-data-elements-in-pydicom"]], "Documentation": [[561, "documentation"], [573, "documentation"]], "Download the current source code": [[585, "download-the-current-source-code"]], "Download the documentation": [[586, "download-the-documentation"]], "Downloading example/test DICOM files": [[591, "downloading-example-test-dicom-files"]], "Downsize MRI image using pydicom": [[2, "downsize-mri-image-using-pydicom"]], "Element Multi-value Representation (pydicom.multival)": [[61, "element-multi-value-representation-pydicom-multival"]], "Element Tags (pydicom.tag)": [[63, "element-tags-pydicom-tag"]], "Element VRs and Python types": [[32, "element-vrs-and-python-types"]], "Element Value Decoding (pydicom.values)": [[65, "element-value-decoding-pydicom-values"]], "Elements": [[587, "elements"]], "Encapsulating data compressed by third-party packages": [[592, "encapsulating-data-compressed-by-third-party-packages"]], "Encoder Plugins Options": [[33, "encoder-plugins-options"]], "Encoding Waveform Data": [[594, "encoding-waveform-data"]], "Enforcing Valid DICOM": [[42, "enforcing-valid-dicom"]], "Enhancements": [[561, "enhancements"], [561, "id2"], [561, "id6"], [561, "id9"], [561, "id12"], [561, "id15"], [561, "id20"], [561, "id23"], [561, "id26"], [561, "id28"], [561, "id31"], [561, "id33"], [568, "enhancements"], [569, "enhancements"], [571, "enhancements"], [572, "enhancements"], [573, "enhancements"], [574, "enhancements"], [576, "enhancements"], [577, "enhancements"], [579, "enhancements"], [580, "enhancements"], [581, "enhancements"], [582, "enhancements"]], "Example Datasets (pydicom.examples)": [[68, "example-datasets-pydicom-examples"]], "Examples": [[36, "examples"], [37, "examples"], [38, "examples"], [53, "examples"]], "Exceptions (pydicom.errors)": [[67, "exceptions-pydicom-errors"]], "Extending the CLI": [[25, "extending-the-cli"], [26, "extending-the-cli"]], "File Meta Information": [[39, "file-meta-information"]], "FileSet": [[589, "fileset"]], "FileSet and staging": [[589, "fileset-and-staging"]], "Fixes": [[561, "fixes"], [561, "id3"], [561, "id7"], [561, "id10"], [561, "id11"], [561, "id14"], [561, "id16"], [561, "id17"], [561, "id19"], [561, "id24"], [561, "id27"], [561, "id29"], [561, "id30"], [570, "fixes"], [571, "fixes"], [572, "fixes"], [573, "fixes"], [574, "fixes"], [575, "fixes"], [576, "fixes"], [577, "fixes"], [578, "fixes"], [579, "fixes"], [580, "fixes"], [581, "fixes"], [582, "fixes"]], "Format the output of the data set printing": [[8, "format-the-output-of-the-data-set-printing"]], "Frequently asked questions": [[23, "frequently-asked-questions"]], "Future-proofing your code": [[42, "future-proofing-your-code"]], "General": [[23, "general"]], "General examples": [[6, "general-examples"]], "General style guidelines": [[52, "general-style-guidelines"]], "Getting Included Datasets (pydicom.data)": [[56, "getting-included-datasets-pydicom-data"]], "Getting Started": [[53, "getting-started"]], "Getting the path to the example dataset": [[587, "getting-the-path-to-the-example-dataset"]], "Glossary": [[39, "glossary"]], "Guidelines for reStructuredText": [[52, "guidelines-for-restructuredtext"]], "Guides": [[40, "guides"]], "Handling of compressed pixel data": [[44, "handling-of-compressed-pixel-data"]], "How do I cite pydicom?": [[23, "how-do-i-cite-pydicom"]], "How to install pydicom": [[591, "how-to-install-pydicom"]], "IO Base Classes (pydicom.filebase)": [[70, "io-base-classes-pydicom-filebase"]], "IO Utilities (pydicom.fileutil)": [[72, "io-utilities-pydicom-fileutil"]], "Image Pixel Module": [[39, "image-pixel-module"]], "Image Pixel Options": [[29, "image-pixel-options"]], "Image Processing Options": [[29, "image-processing-options"]], "Image processing": [[1, "image-processing"], [6, "image-processing"]], "Infrastructure": [[561, "infrastructure"], [570, "infrastructure"]], "Input-output": [[6, "input-output"], [7, "input-output"]], "Install pytest and run the test suite": [[585, "install-pytest-and-run-the-test-suite"]], "Install the development version": [[591, "install-the-development-version"]], "Install the official release": [[591, "install-the-official-release"]], "Install the optional libraries": [[591, "install-the-optional-libraries"]], "Install using conda": [[591, "install-using-conda"]], "Install using pip": [[591, "install-using-pip"]], "Installation": [[23, "installation"]], "Installing GDCM": [[591, "installing-gdcm"]], "Installing Pillow": [[591, "installing-pillow"]], "Installing pyjpegls": [[591, "installing-pyjpegls"]], "Installing pylibjpeg": [[591, "installing-pylibjpeg"]], "Installing the pydicom CLI": [[26, "installing-the-pydicom-cli"], [27, "installing-the-pydicom-cli"]], "Introduction": [[26, "introduction"], [27, "introduction"], [42, "introduction"], [46, "introduction"], [47, "introduction"], [48, "introduction"], [49, "introduction"], [50, "introduction"], [51, "introduction"], [592, "introduction"]], "Introduction to JSON support": [[588, "introduction-to-json-support"]], "JPEG 2000": [[36, "jpeg-2000"]], "JPEG 2000 Encoding": [[36, "jpeg-2000-encoding"]], "JPEG 2000 Lossless": [[36, "jpeg-2000-lossless"]], "JPEG-LS Encoding": [[37, "jpeg-ls-encoding"]], "JPEG-LS Lossless": [[37, "jpeg-ls-lossless"]], "JPEG-LS Near-lossless": [[37, "jpeg-ls-near-lossless"]], "Limiting the pydicom major version in your package": [[42, "limiting-the-pydicom-major-version-in-your-package"]], "Load CT slices and plot axial, sagittal and coronal images": [[4, "load-ct-slices-and-plot-axial-sagittal-and-coronal-images"]], "Loading existing File-sets": [[589, "loading-existing-file-sets"]], "Major changes": [[561, "major-changes"], [561, "id32"], [561, "id35"], [561, "id38"], [561, "id42"], [561, "id46"], [562, "major-changes"], [563, "major-changes"], [566, "major-changes"], [567, "major-changes"], [568, "major-changes"], [570, "major-changes"]], "Major changes/additions in this version": [[561, "major-changes-additions-in-this-version"], [564, "major-changes-additions-in-this-version"]], "Major fixes in this release": [[561, "major-fixes-in-this-release"], [565, "major-fixes-in-this-release"]], "Make a change to the documentation": [[586, "make-a-change-to-the-documentation"]], "Make a code change and document it": [[585, "make-a-code-change-and-document-it"]], "Metadata processing": [[6, "metadata-processing"], [15, "metadata-processing"]], "Miscellaneous (pydicom.misc)": [[552, "miscellaneous-pydicom-misc"]], "Miscellaneous Options": [[29, "miscellaneous-options"]], "Modality LUT or Rescale Operation": [[49, "modality-lut-or-rescale-operation"]], "Modifying": [[587, "modifying"]], "Modifying a File-set": [[589, "modifying-a-file-set"]], "Modifying elements": [[587, "modifying-elements"]], "New \u2018Contrib\u2019 files": [[561, "new-contrib-files"], [565, "new-contrib-files"]], "Next steps": [[587, "next-steps"]], "Optional": [[23, "optional"]], "Other": [[561, "other"], [561, "id40"], [561, "id41"], [561, "id45"], [561, "id49"], [562, "other"], [563, "other"], [565, "other"], [566, "other"], [571, "other"]], "Other Contributors": [[561, "other-contributors"], [569, "other-contributors"]], "Other Enhancements": [[561, "id37"], [561, "id43"], [561, "id47"], [562, "other-enhancements"], [563, "other-enhancements"], [567, "other-enhancements"]], "Other changes and bug fixes": [[561, "other-changes-and-bug-fixes"], [564, "other-changes-and-bug-fixes"]], "Other enhancements": [[561, "other-enhancements"], [570, "other-enhancements"]], "Other fixes in this release": [[561, "other-fixes-in-this-release"], [565, "other-fixes-in-this-release"]], "Overlay Data Handling (pydicom.overlays)": [[553, "overlay-data-handling-pydicom-overlays"]], "Palette Color": [[49, "palette-color"]], "Parsing Encapsulated Data": [[66, "parsing-encapsulated-data"]], "Photometric Interpretation": [[36, "photometric-interpretation"], [37, "photometric-interpretation"]], "Pixel Data (pydicom.pixels)": [[554, "module-pydicom.pixels"]], "Pixel Data Decoder Options": [[29, "pixel-data-decoder-options"]], "Pixel Data Decoder Plugins": [[30, "pixel-data-decoder-plugins"]], "Pixel Data Decoders (pydicom.pixels.decoders)": [[555, "module-pydicom.pixels.decoders"]], "Pixel Data Decoding": [[31, "pixel-data-decoding"]], "Pixel Data Encoder Plugins": [[34, "pixel-data-encoder-plugins"]], "Pixel Data Encoders (pydicom.pixels.encoders)": [[556, "module-pydicom.pixels.encoders"]], "Pixel Data Encoding": [[35, "pixel-data-encoding"]], "Pixel Data Handlers (pydicom.pixel_data_handlers)": [[550, "pixel-data-handlers-pydicom-pixel-data-handlers"]], "Pixel Data Processing (pydicom.pixels.processing)": [[557, "pixel-data-processing-pydicom-pixels-processing"]], "Pixel Data Utilities (pydicom.pixels.utils)": [[558, "module-pydicom.pixels.utils"]], "Pixel Representation": [[37, "pixel-representation"]], "Planar Configuration": [[37, "planar-configuration"]], "Plugin Requirements": [[30, "plugin-requirements"], [34, "plugin-requirements"]], "Prerequisites": [[44, "prerequisites"]], "Preview your changes": [[585, "preview-your-changes"]], "Private Data Dictionary": [[57, "private-data-dictionary"]], "Private Data Elements": [[46, "private-data-elements"]], "Pydicom Internals": [[561, "pydicom-internals"], [561, "id4"], [581, "pydicom-internals"], [582, "pydicom-internals"]], "RLE Lossless": [[29, "rle-lossless"]], "RLE Lossless Encoding": [[38, "rle-lossless-encoding"]], "Read RTPLAN DICOM and list information": [[11, "read-rtplan-dicom-and-list-information"]], "Read a DICOM File-set": [[10, "read-a-dicom-file-set"]], "Read a Dataset and plot Pixel Data": [[9, "read-a-dataset-and-plot-pixel-data"]], "Reading": [[587, "reading"]], "Release notes": [[561, "release-notes"]], "Removals": [[561, "removals"], [582, "removals"]], "Removing All Private Data Elements": [[46, "removing-all-private-data-elements"]], "Removing instances": [[589, "removing-instances"]], "Representation of Data Elements": [[59, "representation-of-data-elements"]], "Representation of Datasets (pydicom.dataset)": [[58, "representation-of-datasets-pydicom-dataset"]], "Required": [[23, "required"]], "Sequence": [[41, "sequence"]], "Sequence Element Value Representation (pydicom.sequence)": [[62, "sequence-element-value-representation-pydicom-sequence"]], "Sequences": [[587, "sequences"], [587, "id1"]], "Setting Private Data Elements with pydicom": [[46, "setting-private-data-elements-with-pydicom"]], "Show a dicom file using hierarchical tree": [[0, "show-a-dicom-file-using-hierarchical-tree"]], "Show working with memory-based dataset": [[14, "show-working-with-memory-based-dataset"]], "Specialized Element Value Representation (pydicom.valuerep)": [[64, "specialized-element-value-representation-pydicom-valuerep"]], "Standard elements": [[587, "standard-elements"]], "Storage SOP Class UIDs": [[559, "storage-sop-class-uids"]], "Structured Reporting": [[593, "structured-reporting"]], "Sub-modules": [[554, "sub-modules"]], "Supported Transfer Syntaxes": [[43, "supported-transfer-syntaxes"], [44, "supported-transfer-syntaxes"]], "Tag": [[41, "tag"]], "The DICOM File-set": [[589, "the-dicom-file-set"]], "The DICOMDIR file": [[589, "the-dicomdir-file"]], "Transfer Syntax Lists": [[559, "transfer-syntax-lists"]], "Transfer Syntax UIDs": [[559, "transfer-syntax-uids"]], "Tutorials": [[590, "tutorials"]], "Types of documentation": [[52, "types-of-documentation"]], "UID Definitions and Utilities (pydicom.uid)": [[559, "module-pydicom.uid"]], "UID Utilities": [[559, "uid-utilities"]], "Usage": [[44, "usage"], [68, "usage"]], "User Guide": [[53, "user-guide"]], "Using codify": [[51, "using-codify"]], "Using pydicom with Python Imaging Library (PIL)": [[47, "using-pydicom-with-python-imaging-library-pil"]], "Using pydicom with Tkinter": [[47, "using-pydicom-with-tkinter"]], "Using pydicom with matplotlib": [[47, "using-pydicom-with-matplotlib"]], "Using pydicom with wxPython": [[47, "using-pydicom-with-wxpython"]], "VOI LUT or Windowing Operation": [[49, "voi-lut-or-windowing-operation"]], "Valid Image Pixel Parameters": [[36, "valid-image-pixel-parameters"], [37, "valid-image-pixel-parameters"], [38, "valid-image-pixel-parameters"]], "Version 0.9.2": [[561, "version-0-9-2"], [562, "version-0-9-2"]], "Version 0.9.3": [[561, "version-0-9-3"], [563, "version-0-9-3"]], "Version 0.9.4": [[561, "version-0-9-4"], [564, "version-0-9-4"]], "Version 0.9.5": [[561, "version-0-9-5"], [565, "version-0-9-5"]], "Version 0.9.6": [[561, "version-0-9-6"], [566, "version-0-9-6"]], "Version 0.9.7": [[561, "version-0-9-7"], [567, "version-0-9-7"]], "Version 0.9.8": [[561, "version-0-9-8"], [568, "version-0-9-8"]], "Version 0.9.9": [[561, "version-0-9-9"], [569, "version-0-9-9"]], "Version 1.0.0": [[561, "version-1-0-0"], [570, "version-1-0-0"]], "Version 1.1.0": [[561, "version-1-1-0"], [571, "version-1-1-0"]], "Version 1.2.0": [[561, "version-1-2-0"], [572, "version-1-2-0"]], "Version 1.3.0": [[561, "version-1-3-0"], [573, "version-1-3-0"]], "Version 1.4.0": [[561, "version-1-4-0"], [574, "version-1-4-0"]], "Version 1.4.1": [[561, "version-1-4-1"], [575, "version-1-4-1"]], "Version 2.0.0": [[561, "version-2-0-0"], [576, "version-2-0-0"]], "Version 2.1.0": [[561, "version-2-1-0"], [577, "version-2-1-0"]], "Version 2.1.1": [[561, "version-2-1-1"], [578, "version-2-1-1"]], "Version 2.2.0": [[561, "version-2-2-0"], [579, "version-2-2-0"]], "Version 2.3.0": [[561, "version-2-3-0"], [580, "version-2-3-0"]], "Version 2.4.0": [[561, "version-2-4-0"], [581, "version-2-4-0"]], "Version 3.0.0": [[561, "version-3-0-0"], [582, "version-3-0-0"]], "Viewing Images": [[47, "viewing-images"]], "Viewing and accessing": [[587, "viewing-and-accessing"]], "Waveform Data Handlers (pydicom.waveforms)": [[560, "waveform-data-handlers-pydicom-waveforms"]], "Waveforms": [[594, "waveforms"]], "Waveforms in DICOM": [[594, "waveforms-in-dicom"]], "What are pydicom\u2019s prerequisites?": [[23, "what-are-pydicom-s-prerequisites"]], "What happens next?": [[585, "what-happens-next"], [586, "what-happens-next"]], "What license does pydicom use?": [[23, "what-license-does-pydicom-use"]], "What version of Python can I use?": [[23, "what-version-of-python-can-i-use"]], "Working with Overlay Data": [[48, "working-with-overlay-data"]], "Working with Pixel Data": [[49, "working-with-pixel-data"]], "Working with Waveform Data": [[50, "working-with-waveform-data"]], "Working with large binary data": [[588, "working-with-large-binary-data"]], "Working with sequences": [[18, "working-with-sequences"]], "Write DICOM data": [[12, "write-dicom-data"]], "Write tests for your changes": [[585, "write-tests-for-your-changes"]], "Writing": [[587, "writing"]], "Writing DICOM Files": [[51, "writing-dicom-files"]], "Writing a file from scratch": [[51, "writing-a-file-from-scratch"]], "Writing documentation": [[52, "writing-documentation"]], "file_meta": [[587, "file-meta"]], "gdcm": [[33, "gdcm"]], "pydicom": [[33, "pydicom"]], "pydicom User Guide": [[45, "pydicom-user-guide"]], "pydicom codify command": [[24, "pydicom-codify-command"], [26, "pydicom-codify-command"]], "pydicom documentation": [[53, "pydicom-documentation"]], "pydicom show command": [[26, "pydicom-show-command"], [28, "pydicom-show-command"]], "pydicom.charset.convert_encodings": [[75, "pydicom-charset-convert-encodings"]], "pydicom.charset.decode_bytes": [[76, "pydicom-charset-decode-bytes"]], "pydicom.charset.decode_element": [[77, "pydicom-charset-decode-element"]], "pydicom.charset.encode_string": [[78, "pydicom-charset-encode-string"]], "pydicom.config.APPLY_J2K_CORRECTIONS": [[79, "pydicom-config-apply-j2k-corrections"]], "pydicom.config.DS_decimal": [[80, "pydicom-config-ds-decimal"]], "pydicom.config.DS_numpy": [[81, "pydicom-config-ds-numpy"]], "pydicom.config.IGNORE": [[82, "pydicom-config-ignore"]], "pydicom.config.INVALID_KEYWORD_BEHAVIOR": [[83, "pydicom-config-invalid-keyword-behavior"]], "pydicom.config.INVALID_KEY_BEHAVIOR": [[84, "pydicom-config-invalid-key-behavior"]], "pydicom.config.RAISE": [[85, "pydicom-config-raise"]], "pydicom.config.WARN": [[86, "pydicom-config-warn"]], "pydicom.config.allow_DS_float": [[87, "pydicom-config-allow-ds-float"]], "pydicom.config.assume_implicit_vr_switch": [[88, "pydicom-config-assume-implicit-vr-switch"]], "pydicom.config.convert_wrong_length_to_UN": [[89, "pydicom-config-convert-wrong-length-to-un"]], "pydicom.config.data_element_callback": [[90, "pydicom-config-data-element-callback"]], "pydicom.config.data_element_callback_kwargs": [[91, "pydicom-config-data-element-callback-kwargs"]], "pydicom.config.datetime_conversion": [[92, "pydicom-config-datetime-conversion"]], "pydicom.config.debug": [[93, "pydicom-config-debug"]], "pydicom.config.enforce_valid_values": [[94, "pydicom-config-enforce-valid-values"]], "pydicom.config.future_behavior": [[95, "pydicom-config-future-behavior"]], "pydicom.config.pixel_data_handlers": [[96, "pydicom-config-pixel-data-handlers"]], "pydicom.config.reset_data_element_callback": [[97, "pydicom-config-reset-data-element-callback"]], "pydicom.config.settings": [[98, "pydicom-config-settings"]], "pydicom.config.show_file_meta": [[99, "pydicom-config-show-file-meta"]], "pydicom.config.use_DS_decimal": [[100, "pydicom-config-use-ds-decimal"]], "pydicom.config.use_DS_numpy": [[101, "pydicom-config-use-ds-numpy"]], "pydicom.config.use_IS_numpy": [[102, "pydicom-config-use-is-numpy"]], "pydicom.data.get_charset_files": [[103, "pydicom-data-get-charset-files"]], "pydicom.data.get_palette_files": [[104, "pydicom-data-get-palette-files"]], "pydicom.data.get_testdata_file": [[105, "pydicom-data-get-testdata-file"]], "pydicom.data.get_testdata_files": [[106, "pydicom-data-get-testdata-files"]], "pydicom.datadict.add_dict_entries": [[107, "pydicom-datadict-add-dict-entries"]], "pydicom.datadict.add_dict_entry": [[108, "pydicom-datadict-add-dict-entry"]], "pydicom.datadict.add_private_dict_entries": [[109, "pydicom-datadict-add-private-dict-entries"]], "pydicom.datadict.add_private_dict_entry": [[110, "pydicom-datadict-add-private-dict-entry"]], "pydicom.datadict.dictionary_VM": [[111, "pydicom-datadict-dictionary-vm"]], "pydicom.datadict.dictionary_VR": [[112, "pydicom-datadict-dictionary-vr"]], "pydicom.datadict.dictionary_description": [[113, "pydicom-datadict-dictionary-description"]], "pydicom.datadict.dictionary_has_tag": [[114, "pydicom-datadict-dictionary-has-tag"]], "pydicom.datadict.dictionary_is_retired": [[115, "pydicom-datadict-dictionary-is-retired"]], "pydicom.datadict.dictionary_keyword": [[116, "pydicom-datadict-dictionary-keyword"]], "pydicom.datadict.get_entry": [[117, "pydicom-datadict-get-entry"]], "pydicom.datadict.get_private_entry": [[118, "pydicom-datadict-get-private-entry"]], "pydicom.datadict.keyword_for_tag": [[119, "pydicom-datadict-keyword-for-tag"]], "pydicom.datadict.mask_match": [[120, "pydicom-datadict-mask-match"]], "pydicom.datadict.private_dictionary_VM": [[121, "pydicom-datadict-private-dictionary-vm"]], "pydicom.datadict.private_dictionary_VR": [[122, "pydicom-datadict-private-dictionary-vr"]], "pydicom.datadict.private_dictionary_description": [[123, "pydicom-datadict-private-dictionary-description"]], "pydicom.datadict.repeater_has_keyword": [[124, "pydicom-datadict-repeater-has-keyword"]], "pydicom.datadict.repeater_has_tag": [[125, "pydicom-datadict-repeater-has-tag"]], "pydicom.datadict.tag_for_keyword": [[126, "pydicom-datadict-tag-for-keyword"]], "pydicom.dataelem.DataElement": [[127, "pydicom-dataelem-dataelement"]], "pydicom.dataelem.DataElement_from_raw": [[128, "pydicom-dataelem-dataelement-from-raw"]], "pydicom.dataelem.RawDataElement": [[129, "pydicom-dataelem-rawdataelement"]], "pydicom.dataset.Dataset": [[130, "pydicom-dataset-dataset"]], "pydicom.dataset.FileDataset": [[131, "pydicom-dataset-filedataset"]], "pydicom.dataset.FileMetaDataset": [[132, "pydicom-dataset-filemetadataset"]], "pydicom.dataset.PrivateBlock": [[133, "pydicom-dataset-privateblock"]], "pydicom.dataset.validate_file_meta": [[134, "pydicom-dataset-validate-file-meta"]], "pydicom.encaps.decode_data_sequence": [[135, "pydicom-encaps-decode-data-sequence"]], "pydicom.encaps.defragment_data": [[136, "pydicom-encaps-defragment-data"]], "pydicom.encaps.encapsulate": [[137, "pydicom-encaps-encapsulate"]], "pydicom.encaps.encapsulate_extended": [[138, "pydicom-encaps-encapsulate-extended"]], "pydicom.encaps.fragment_frame": [[139, "pydicom-encaps-fragment-frame"]], "pydicom.encaps.generate_fragmented_frames": [[140, "pydicom-encaps-generate-fragmented-frames"]], "pydicom.encaps.generate_fragments": [[141, "pydicom-encaps-generate-fragments"]], "pydicom.encaps.generate_frames": [[142, "pydicom-encaps-generate-frames"]], "pydicom.encaps.generate_pixel_data": [[143, "pydicom-encaps-generate-pixel-data"]], "pydicom.encaps.generate_pixel_data_fragment": [[144, "pydicom-encaps-generate-pixel-data-fragment"]], "pydicom.encaps.generate_pixel_data_frame": [[145, "pydicom-encaps-generate-pixel-data-frame"]], "pydicom.encaps.get_frame": [[146, "pydicom-encaps-get-frame"]], "pydicom.encaps.get_frame_offsets": [[147, "pydicom-encaps-get-frame-offsets"]], "pydicom.encaps.itemize_fragment": [[148, "pydicom-encaps-itemize-fragment"]], "pydicom.encaps.itemize_frame": [[149, "pydicom-encaps-itemize-frame"]], "pydicom.encaps.parse_basic_offsets": [[150, "pydicom-encaps-parse-basic-offsets"]], "pydicom.encaps.parse_fragments": [[151, "pydicom-encaps-parse-fragments"]], "pydicom.encaps.read_item": [[152, "pydicom-encaps-read-item"]], "pydicom.errors.InvalidDicomError": [[153, "pydicom-errors-invaliddicomerror"]], "pydicom.filebase.DicomBytesIO": [[154, "pydicom-filebase-dicombytesio"]], "pydicom.filebase.DicomFile": [[155, "pydicom-filebase-dicomfile"]], "pydicom.filebase.DicomFileLike": [[156, "pydicom-filebase-dicomfilelike"]], "pydicom.filebase.DicomIO": [[157, "pydicom-filebase-dicomio"]], "pydicom.filereader.data_element_generator": [[158, "pydicom-filereader-data-element-generator"]], "pydicom.filereader.data_element_offset_to_value": [[159, "pydicom-filereader-data-element-offset-to-value"]], "pydicom.filereader.dcmread": [[160, "pydicom-filereader-dcmread"]], "pydicom.filereader.read_dataset": [[161, "pydicom-filereader-read-dataset"]], "pydicom.filereader.read_deferred_data_element": [[162, "pydicom-filereader-read-deferred-data-element"]], "pydicom.filereader.read_file_meta_info": [[163, "pydicom-filereader-read-file-meta-info"]], "pydicom.filereader.read_partial": [[164, "pydicom-filereader-read-partial"]], "pydicom.filereader.read_preamble": [[165, "pydicom-filereader-read-preamble"]], "pydicom.filereader.read_sequence": [[166, "pydicom-filereader-read-sequence"]], "pydicom.filereader.read_sequence_item": [[167, "pydicom-filereader-read-sequence-item"]], "pydicom.fileset.DIRECTORY_RECORDERS": [[168, "pydicom-fileset-directory-recorders"]], "pydicom.fileset.FileInstance": [[169, "pydicom-fileset-fileinstance"]], "pydicom.fileset.FileSet": [[170, "pydicom-fileset-fileset"]], "pydicom.fileset.RecordNode": [[171, "pydicom-fileset-recordnode"]], "pydicom.fileset.generate_filename": [[172, "pydicom-fileset-generate-filename"]], "pydicom.fileset.is_conformant_file_id": [[173, "pydicom-fileset-is-conformant-file-id"]], "pydicom.fileutil.absorb_delimiter_item": [[174, "pydicom-fileutil-absorb-delimiter-item"]], "pydicom.fileutil.find_bytes": [[175, "pydicom-fileutil-find-bytes"]], "pydicom.fileutil.find_delimiter": [[176, "pydicom-fileutil-find-delimiter"]], "pydicom.fileutil.length_of_undefined_length": [[177, "pydicom-fileutil-length-of-undefined-length"]], "pydicom.fileutil.read_undefined_length_value": [[178, "pydicom-fileutil-read-undefined-length-value"]], "pydicom.filewriter.correct_ambiguous_vr": [[179, "pydicom-filewriter-correct-ambiguous-vr"]], "pydicom.filewriter.correct_ambiguous_vr_element": [[180, "pydicom-filewriter-correct-ambiguous-vr-element"]], "pydicom.filewriter.dcmwrite": [[181, "pydicom-filewriter-dcmwrite"]], "pydicom.filewriter.multi_string": [[182, "pydicom-filewriter-multi-string"]], "pydicom.filewriter.write_ATvalue": [[183, "pydicom-filewriter-write-atvalue"]], "pydicom.filewriter.write_DA": [[184, "pydicom-filewriter-write-da"]], "pydicom.filewriter.write_DT": [[185, "pydicom-filewriter-write-dt"]], "pydicom.filewriter.write_OBvalue": [[186, "pydicom-filewriter-write-obvalue"]], "pydicom.filewriter.write_OWvalue": [[187, "pydicom-filewriter-write-owvalue"]], "pydicom.filewriter.write_PN": [[188, "pydicom-filewriter-write-pn"]], "pydicom.filewriter.write_TM": [[189, "pydicom-filewriter-write-tm"]], "pydicom.filewriter.write_UI": [[190, "pydicom-filewriter-write-ui"]], "pydicom.filewriter.write_UN": [[191, "pydicom-filewriter-write-un"]], "pydicom.filewriter.write_data_element": [[192, "pydicom-filewriter-write-data-element"]], "pydicom.filewriter.write_dataset": [[193, "pydicom-filewriter-write-dataset"]], "pydicom.filewriter.write_file_meta_info": [[194, "pydicom-filewriter-write-file-meta-info"]], "pydicom.filewriter.write_number_string": [[195, "pydicom-filewriter-write-number-string"]], "pydicom.filewriter.write_numbers": [[196, "pydicom-filewriter-write-numbers"]], "pydicom.filewriter.write_sequence": [[197, "pydicom-filewriter-write-sequence"]], "pydicom.filewriter.write_sequence_item": [[198, "pydicom-filewriter-write-sequence-item"]], "pydicom.filewriter.write_string": [[199, "pydicom-filewriter-write-string"]], "pydicom.filewriter.write_text": [[200, "pydicom-filewriter-write-text"]], "pydicom.misc.is_dicom": [[201, "pydicom-misc-is-dicom"]], "pydicom.misc.size_in_bytes": [[202, "pydicom-misc-size-in-bytes"]], "pydicom.multival.MultiValue": [[203, "pydicom-multival-multivalue"]], "pydicom.overlays.numpy_handler": [[204, "module-pydicom.overlays.numpy_handler"]], "pydicom.pixel_data_handlers.gdcm_handler": [[205, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[206, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "pydicom.pixel_data_handlers.numpy_handler": [[207, "module-pydicom.pixel_data_handlers.numpy_handler"]], "pydicom.pixel_data_handlers.pillow_handler": [[208, "module-pydicom.pixel_data_handlers.pillow_handler"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[209, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "pydicom.pixel_data_handlers.rle_handler": [[210, "module-pydicom.pixel_data_handlers.rle_handler"]], "pydicom.pixels.apply_color_lut": [[211, "pydicom-pixels-apply-color-lut"]], "pydicom.pixels.apply_modality_lut": [[212, "pydicom-pixels-apply-modality-lut"]], "pydicom.pixels.apply_voi": [[213, "pydicom-pixels-apply-voi"]], "pydicom.pixels.apply_voi_lut": [[214, "pydicom-pixels-apply-voi-lut"]], "pydicom.pixels.apply_windowing": [[215, "pydicom-pixels-apply-windowing"]], "pydicom.pixels.as_pixel_options": [[216, "pydicom-pixels-as-pixel-options"]], "pydicom.pixels.compress": [[217, "pydicom-pixels-compress"]], "pydicom.pixels.convert_color_space": [[218, "pydicom-pixels-convert-color-space"]], "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder": [[219, "pydicom-pixels-decoders-deflatedexplicitvrlittleendiandecoder"]], "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder": [[220, "pydicom-pixels-decoders-explicitvrbigendiandecoder"]], "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder": [[221, "pydicom-pixels-decoders-explicitvrlittleendiandecoder"]], "pydicom.pixels.decoders.HTJ2KDecoder": [[222, "pydicom-pixels-decoders-htj2kdecoder"]], "pydicom.pixels.decoders.HTJ2KLosslessDecoder": [[223, "pydicom-pixels-decoders-htj2klosslessdecoder"]], "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder": [[224, "pydicom-pixels-decoders-htj2klosslessrpcldecoder"]], "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder": [[225, "pydicom-pixels-decoders-implicitvrlittleendiandecoder"]], "pydicom.pixels.decoders.JPEG2000Decoder": [[226, "pydicom-pixels-decoders-jpeg2000decoder"]], "pydicom.pixels.decoders.JPEG2000LosslessDecoder": [[227, "pydicom-pixels-decoders-jpeg2000losslessdecoder"]], "pydicom.pixels.decoders.JPEGBaseline8BitDecoder": [[228, "pydicom-pixels-decoders-jpegbaseline8bitdecoder"]], "pydicom.pixels.decoders.JPEGExtended12BitDecoder": [[229, "pydicom-pixels-decoders-jpegextended12bitdecoder"]], "pydicom.pixels.decoders.JPEGLSLosslessDecoder": [[230, "pydicom-pixels-decoders-jpeglslosslessdecoder"]], "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder": [[231, "pydicom-pixels-decoders-jpeglsnearlosslessdecoder"]], "pydicom.pixels.decoders.JPEGLosslessDecoder": [[232, "pydicom-pixels-decoders-jpeglosslessdecoder"]], "pydicom.pixels.decoders.JPEGLosslessSV1Decoder": [[233, "pydicom-pixels-decoders-jpeglosslesssv1decoder"]], "pydicom.pixels.decoders.RLELosslessDecoder": [[234, "pydicom-pixels-decoders-rlelosslessdecoder"]], "pydicom.pixels.decoders.base.DecodeRunner": [[235, "pydicom-pixels-decoders-base-decoderunner"]], "pydicom.pixels.decoders.base.Decoder": [[236, "pydicom-pixels-decoders-base-decoder"]], "pydicom.pixels.decompress": [[237, "pydicom-pixels-decompress"]], "pydicom.pixels.encoders.JPEG2000Encoder": [[238, "pydicom-pixels-encoders-jpeg2000encoder"]], "pydicom.pixels.encoders.JPEG2000LosslessEncoder": [[239, "pydicom-pixels-encoders-jpeg2000losslessencoder"]], "pydicom.pixels.encoders.JPEGLSLosslessEncoder": [[240, "pydicom-pixels-encoders-jpeglslosslessencoder"]], "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder": [[241, "pydicom-pixels-encoders-jpeglsnearlosslessencoder"]], "pydicom.pixels.encoders.RLELosslessEncoder": [[242, "pydicom-pixels-encoders-rlelosslessencoder"]], "pydicom.pixels.encoders.base.EncodeRunner": [[243, "pydicom-pixels-encoders-base-encoderunner"]], "pydicom.pixels.encoders.base.Encoder": [[244, "pydicom-pixels-encoders-base-encoder"]], "pydicom.pixels.get_decoder": [[245, "pydicom-pixels-get-decoder"]], "pydicom.pixels.get_encoder": [[246, "pydicom-pixels-get-encoder"]], "pydicom.pixels.iter_pixels": [[247, "pydicom-pixels-iter-pixels"]], "pydicom.pixels.pack_bits": [[248, "pydicom-pixels-pack-bits"]], "pydicom.pixels.pixel_array": [[249, "pydicom-pixels-pixel-array"]], "pydicom.pixels.processing.apply_color_lut": [[250, "pydicom-pixels-processing-apply-color-lut"]], "pydicom.pixels.processing.apply_modality_lut": [[251, "pydicom-pixels-processing-apply-modality-lut"]], "pydicom.pixels.processing.apply_rescale": [[252, "pydicom-pixels-processing-apply-rescale"]], "pydicom.pixels.processing.apply_voi": [[253, "pydicom-pixels-processing-apply-voi"]], "pydicom.pixels.processing.apply_voi_lut": [[254, "pydicom-pixels-processing-apply-voi-lut"]], "pydicom.pixels.processing.apply_windowing": [[255, "pydicom-pixels-processing-apply-windowing"]], "pydicom.pixels.processing.convert_color_space": [[256, "pydicom-pixels-processing-convert-color-space"]], "pydicom.pixels.unpack_bits": [[257, "pydicom-pixels-unpack-bits"]], "pydicom.pixels.utils.as_pixel_options": [[258, "pydicom-pixels-utils-as-pixel-options"]], "pydicom.pixels.utils.compress": [[259, "pydicom-pixels-utils-compress"]], "pydicom.pixels.utils.decompress": [[260, "pydicom-pixels-utils-decompress"]], "pydicom.pixels.utils.expand_ybr422": [[261, "pydicom-pixels-utils-expand-ybr422"]], "pydicom.pixels.utils.get_expected_length": [[262, "pydicom-pixels-utils-get-expected-length"]], "pydicom.pixels.utils.get_image_pixel_ids": [[263, "pydicom-pixels-utils-get-image-pixel-ids"]], "pydicom.pixels.utils.get_j2k_parameters": [[264, "pydicom-pixels-utils-get-j2k-parameters"]], "pydicom.pixels.utils.get_nr_frames": [[265, "pydicom-pixels-utils-get-nr-frames"]], "pydicom.pixels.utils.iter_pixels": [[266, "pydicom-pixels-utils-iter-pixels"]], "pydicom.pixels.utils.pack_bits": [[267, "pydicom-pixels-utils-pack-bits"]], "pydicom.pixels.utils.pixel_array": [[268, "pydicom-pixels-utils-pixel-array"]], "pydicom.pixels.utils.pixel_dtype": [[269, "pydicom-pixels-utils-pixel-dtype"]], "pydicom.pixels.utils.reshape_pixel_array": [[270, "pydicom-pixels-utils-reshape-pixel-array"]], "pydicom.pixels.utils.unpack_bits": [[271, "pydicom-pixels-utils-unpack-bits"]], "pydicom.sequence.Sequence": [[272, "pydicom-sequence-sequence"]], "pydicom.tag.BaseTag": [[273, "pydicom-tag-basetag"]], "pydicom.tag.Tag": [[274, "pydicom-tag-tag"]], "pydicom.tag.TupleTag": [[275, "pydicom-tag-tupletag"]], "pydicom.tag.tag_in_exception": [[276, "pydicom-tag-tag-in-exception"]], "pydicom.uid.AcquisitionContextSRStorage": [[277, "pydicom-uid-acquisitioncontextsrstorage"]], "pydicom.uid.AdvancedBlendingPresentationStateStorage": [[278, "pydicom-uid-advancedblendingpresentationstatestorage"]], "pydicom.uid.AllTransferSyntaxes": [[279, "pydicom-uid-alltransfersyntaxes"]], "pydicom.uid.AmbulatoryECGWaveformStorage": [[280, "pydicom-uid-ambulatoryecgwaveformstorage"]], "pydicom.uid.ArterialPulseWaveformStorage": [[281, "pydicom-uid-arterialpulsewaveformstorage"]], "pydicom.uid.AutorefractionMeasurementsStorage": [[282, "pydicom-uid-autorefractionmeasurementsstorage"]], "pydicom.uid.BasicStructuredDisplayStorage": [[283, "pydicom-uid-basicstructureddisplaystorage"]], "pydicom.uid.BasicTextSRStorage": [[284, "pydicom-uid-basictextsrstorage"]], "pydicom.uid.BasicVoiceAudioWaveformStorage": [[285, "pydicom-uid-basicvoiceaudiowaveformstorage"]], "pydicom.uid.BlendingSoftcopyPresentationStateStorage": [[286, "pydicom-uid-blendingsoftcopypresentationstatestorage"]], "pydicom.uid.BodyPositionWaveformStorage": [[287, "pydicom-uid-bodypositionwaveformstorage"]], "pydicom.uid.BreastProjectionXRayImageStorageForPresentation": [[288, "pydicom-uid-breastprojectionxrayimagestorageforpresentation"]], "pydicom.uid.BreastProjectionXRayImageStorageForProcessing": [[289, "pydicom-uid-breastprojectionxrayimagestorageforprocessing"]], "pydicom.uid.BreastTomosynthesisImageStorage": [[290, "pydicom-uid-breasttomosynthesisimagestorage"]], "pydicom.uid.CArmPhotonElectronRadiationRecordStorage": [[291, "pydicom-uid-carmphotonelectronradiationrecordstorage"]], "pydicom.uid.CArmPhotonElectronRadiationStorage": [[292, "pydicom-uid-carmphotonelectronradiationstorage"]], "pydicom.uid.CTDefinedProcedureProtocolStorage": [[293, "pydicom-uid-ctdefinedprocedureprotocolstorage"]], "pydicom.uid.CTImageStorage": [[294, "pydicom-uid-ctimagestorage"]], "pydicom.uid.CTPerformedProcedureProtocolStorage": [[295, "pydicom-uid-ctperformedprocedureprotocolstorage"]], "pydicom.uid.CardiacElectrophysiologyWaveformStorage": [[296, "pydicom-uid-cardiacelectrophysiologywaveformstorage"]], "pydicom.uid.ChestCADSRStorage": [[297, "pydicom-uid-chestcadsrstorage"]], "pydicom.uid.ColonCADSRStorage": [[298, "pydicom-uid-coloncadsrstorage"]], "pydicom.uid.ColorPaletteStorage": [[299, "pydicom-uid-colorpalettestorage"]], "pydicom.uid.ColorSoftcopyPresentationStateStorage": [[300, "pydicom-uid-colorsoftcopypresentationstatestorage"]], "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage": [[301, "pydicom-uid-compositingplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.Comprehensive3DSRStorage": [[302, "pydicom-uid-comprehensive3dsrstorage"]], "pydicom.uid.ComprehensiveSRStorage": [[303, "pydicom-uid-comprehensivesrstorage"]], "pydicom.uid.ComputedRadiographyImageStorage": [[304, "pydicom-uid-computedradiographyimagestorage"]], "pydicom.uid.ConfocalMicroscopyImageStorage": [[305, "pydicom-uid-confocalmicroscopyimagestorage"]], "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage": [[306, "pydicom-uid-confocalmicroscopytiledpyramidalimagestorage"]], "pydicom.uid.ContentAssessmentResultsStorage": [[307, "pydicom-uid-contentassessmentresultsstorage"]], "pydicom.uid.CornealTopographyMapStorage": [[308, "pydicom-uid-cornealtopographymapstorage"]], "pydicom.uid.DICOS2DAITStorage": [[309, "pydicom-uid-dicos2daitstorage"]], "pydicom.uid.DICOS3DAITStorage": [[310, "pydicom-uid-dicos3daitstorage"]], "pydicom.uid.DICOSCTImageStorage": [[311, "pydicom-uid-dicosctimagestorage"]], "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation": [[312, "pydicom-uid-dicosdigitalxrayimagestorageforpresentation"]], "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing": [[313, "pydicom-uid-dicosdigitalxrayimagestorageforprocessing"]], "pydicom.uid.DICOSQuadrupoleResonanceStorage": [[314, "pydicom-uid-dicosquadrupoleresonancestorage"]], "pydicom.uid.DICOSThreatDetectionReportStorage": [[315, "pydicom-uid-dicosthreatdetectionreportstorage"]], "pydicom.uid.DeflatedExplicitVRLittleEndian": [[316, "pydicom-uid-deflatedexplicitvrlittleendian"]], "pydicom.uid.DeformableSpatialRegistrationStorage": [[317, "pydicom-uid-deformablespatialregistrationstorage"]], "pydicom.uid.DermoscopicPhotographyImageStorage": [[318, "pydicom-uid-dermoscopicphotographyimagestorage"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation": [[319, "pydicom-uid-digitalintraoralxrayimagestorageforpresentation"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing": [[320, "pydicom-uid-digitalintraoralxrayimagestorageforprocessing"]], "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation": [[321, "pydicom-uid-digitalmammographyxrayimagestorageforpresentation"]], "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing": [[322, "pydicom-uid-digitalmammographyxrayimagestorageforprocessing"]], "pydicom.uid.DigitalXRayImageStorageForPresentation": [[323, "pydicom-uid-digitalxrayimagestorageforpresentation"]], "pydicom.uid.DigitalXRayImageStorageForProcessing": [[324, "pydicom-uid-digitalxrayimagestorageforprocessing"]], "pydicom.uid.EddyCurrentImageStorage": [[325, "pydicom-uid-eddycurrentimagestorage"]], "pydicom.uid.EddyCurrentMultiFrameImageStorage": [[326, "pydicom-uid-eddycurrentmultiframeimagestorage"]], "pydicom.uid.ElectromyogramWaveformStorage": [[327, "pydicom-uid-electromyogramwaveformstorage"]], "pydicom.uid.ElectrooculogramWaveformStorage": [[328, "pydicom-uid-electrooculogramwaveformstorage"]], "pydicom.uid.EncapsulatedCDAStorage": [[329, "pydicom-uid-encapsulatedcdastorage"]], "pydicom.uid.EncapsulatedMTLStorage": [[330, "pydicom-uid-encapsulatedmtlstorage"]], "pydicom.uid.EncapsulatedOBJStorage": [[331, "pydicom-uid-encapsulatedobjstorage"]], "pydicom.uid.EncapsulatedPDFStorage": [[332, "pydicom-uid-encapsulatedpdfstorage"]], "pydicom.uid.EncapsulatedSTLStorage": [[333, "pydicom-uid-encapsulatedstlstorage"]], "pydicom.uid.EnhancedCTImageStorage": [[334, "pydicom-uid-enhancedctimagestorage"]], "pydicom.uid.EnhancedContinuousRTImageStorage": [[335, "pydicom-uid-enhancedcontinuousrtimagestorage"]], "pydicom.uid.EnhancedMRColorImageStorage": [[336, "pydicom-uid-enhancedmrcolorimagestorage"]], "pydicom.uid.EnhancedMRImageStorage": [[337, "pydicom-uid-enhancedmrimagestorage"]], "pydicom.uid.EnhancedPETImageStorage": [[338, "pydicom-uid-enhancedpetimagestorage"]], "pydicom.uid.EnhancedRTImageStorage": [[339, "pydicom-uid-enhancedrtimagestorage"]], "pydicom.uid.EnhancedSRStorage": [[340, "pydicom-uid-enhancedsrstorage"]], "pydicom.uid.EnhancedUSVolumeStorage": [[341, "pydicom-uid-enhancedusvolumestorage"]], "pydicom.uid.EnhancedXAImageStorage": [[342, "pydicom-uid-enhancedxaimagestorage"]], "pydicom.uid.EnhancedXRFImageStorage": [[343, "pydicom-uid-enhancedxrfimagestorage"]], "pydicom.uid.EnhancedXRayRadiationDoseSRStorage": [[344, "pydicom-uid-enhancedxrayradiationdosesrstorage"]], "pydicom.uid.ExplicitVRBigEndian": [[345, "pydicom-uid-explicitvrbigendian"]], "pydicom.uid.ExplicitVRLittleEndian": [[346, "pydicom-uid-explicitvrlittleendian"]], "pydicom.uid.ExtensibleSRStorage": [[347, "pydicom-uid-extensiblesrstorage"]], "pydicom.uid.General32bitECGWaveformStorage": [[348, "pydicom-uid-general32bitecgwaveformstorage"]], "pydicom.uid.GeneralAudioWaveformStorage": [[349, "pydicom-uid-generalaudiowaveformstorage"]], "pydicom.uid.GeneralECGWaveformStorage": [[350, "pydicom-uid-generalecgwaveformstorage"]], "pydicom.uid.GenericImplantTemplateStorage": [[351, "pydicom-uid-genericimplanttemplatestorage"]], "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage": [[352, "pydicom-uid-grayscaleplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage": [[353, "pydicom-uid-grayscalesoftcopypresentationstatestorage"]], "pydicom.uid.HEVCM10P51": [[354, "pydicom-uid-hevcm10p51"]], "pydicom.uid.HEVCMP51": [[355, "pydicom-uid-hevcmp51"]], "pydicom.uid.HTJ2K": [[356, "pydicom-uid-htj2k"]], "pydicom.uid.HTJ2KLossless": [[357, "pydicom-uid-htj2klossless"]], "pydicom.uid.HTJ2KLosslessRPCL": [[358, "pydicom-uid-htj2klosslessrpcl"]], "pydicom.uid.HangingProtocolStorage": [[359, "pydicom-uid-hangingprotocolstorage"]], "pydicom.uid.HemodynamicWaveformStorage": [[360, "pydicom-uid-hemodynamicwaveformstorage"]], "pydicom.uid.ImplantAssemblyTemplateStorage": [[361, "pydicom-uid-implantassemblytemplatestorage"]], "pydicom.uid.ImplantTemplateGroupStorage": [[362, "pydicom-uid-implanttemplategroupstorage"]], "pydicom.uid.ImplantationPlanSRStorage": [[363, "pydicom-uid-implantationplansrstorage"]], "pydicom.uid.ImplicitVRLittleEndian": [[364, "pydicom-uid-implicitvrlittleendian"]], "pydicom.uid.IntraocularLensCalculationsStorage": [[365, "pydicom-uid-intraocularlenscalculationsstorage"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation": [[366, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforpresentation"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing": [[367, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforprocessing"]], "pydicom.uid.InventoryStorage": [[368, "pydicom-uid-inventorystorage"]], "pydicom.uid.JPEG2000": [[369, "pydicom-uid-jpeg2000"]], "pydicom.uid.JPEG2000Lossless": [[370, "pydicom-uid-jpeg2000lossless"]], "pydicom.uid.JPEG2000MC": [[371, "pydicom-uid-jpeg2000mc"]], "pydicom.uid.JPEG2000MCLossless": [[372, "pydicom-uid-jpeg2000mclossless"]], "pydicom.uid.JPEG2000TransferSyntaxes": [[373, "pydicom-uid-jpeg2000transfersyntaxes"]], "pydicom.uid.JPEGBaseline8Bit": [[374, "pydicom-uid-jpegbaseline8bit"]], "pydicom.uid.JPEGExtended12Bit": [[375, "pydicom-uid-jpegextended12bit"]], "pydicom.uid.JPEGLSLossless": [[376, "pydicom-uid-jpeglslossless"]], "pydicom.uid.JPEGLSNearLossless": [[377, "pydicom-uid-jpeglsnearlossless"]], "pydicom.uid.JPEGLSTransferSyntaxes": [[378, "pydicom-uid-jpeglstransfersyntaxes"]], "pydicom.uid.JPEGLossless": [[379, "pydicom-uid-jpeglossless"]], "pydicom.uid.JPEGLosslessSV1": [[380, "pydicom-uid-jpeglosslesssv1"]], "pydicom.uid.JPEGTransferSyntaxes": [[381, "pydicom-uid-jpegtransfersyntaxes"]], "pydicom.uid.JPIPHTJ2KReferenced": [[382, "pydicom-uid-jpiphtj2kreferenced"]], "pydicom.uid.JPIPHTJ2KReferencedDeflate": [[383, "pydicom-uid-jpiphtj2kreferenceddeflate"]], "pydicom.uid.KeratometryMeasurementsStorage": [[384, "pydicom-uid-keratometrymeasurementsstorage"]], "pydicom.uid.KeyObjectSelectionDocumentStorage": [[385, "pydicom-uid-keyobjectselectiondocumentstorage"]], "pydicom.uid.LegacyConvertedEnhancedCTImageStorage": [[386, "pydicom-uid-legacyconvertedenhancedctimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedMRImageStorage": [[387, "pydicom-uid-legacyconvertedenhancedmrimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedPETImageStorage": [[388, "pydicom-uid-legacyconvertedenhancedpetimagestorage"]], "pydicom.uid.LensometryMeasurementsStorage": [[389, "pydicom-uid-lensometrymeasurementsstorage"]], "pydicom.uid.MPEG2MPHL": [[390, "pydicom-uid-mpeg2mphl"]], "pydicom.uid.MPEG2MPHLF": [[391, "pydicom-uid-mpeg2mphlf"]], "pydicom.uid.MPEG2MPML": [[392, "pydicom-uid-mpeg2mpml"]], "pydicom.uid.MPEG2MPMLF": [[393, "pydicom-uid-mpeg2mpmlf"]], "pydicom.uid.MPEG4HP41": [[394, "pydicom-uid-mpeg4hp41"]], "pydicom.uid.MPEG4HP41BD": [[395, "pydicom-uid-mpeg4hp41bd"]], "pydicom.uid.MPEG4HP41BDF": [[396, "pydicom-uid-mpeg4hp41bdf"]], "pydicom.uid.MPEG4HP41F": [[397, "pydicom-uid-mpeg4hp41f"]], "pydicom.uid.MPEG4HP422D": [[398, "pydicom-uid-mpeg4hp422d"]], "pydicom.uid.MPEG4HP422DF": [[399, "pydicom-uid-mpeg4hp422df"]], "pydicom.uid.MPEG4HP423D": [[400, "pydicom-uid-mpeg4hp423d"]], "pydicom.uid.MPEG4HP423DF": [[401, "pydicom-uid-mpeg4hp423df"]], "pydicom.uid.MPEG4HP42STEREO": [[402, "pydicom-uid-mpeg4hp42stereo"]], "pydicom.uid.MPEG4HP42STEREOF": [[403, "pydicom-uid-mpeg4hp42stereof"]], "pydicom.uid.MPEGTransferSyntaxes": [[404, "pydicom-uid-mpegtransfersyntaxes"]], "pydicom.uid.MRImageStorage": [[405, "pydicom-uid-mrimagestorage"]], "pydicom.uid.MRSpectroscopyStorage": [[406, "pydicom-uid-mrspectroscopystorage"]], "pydicom.uid.MacularGridThicknessAndVolumeReportStorage": [[407, "pydicom-uid-maculargridthicknessandvolumereportstorage"]], "pydicom.uid.MammographyCADSRStorage": [[408, "pydicom-uid-mammographycadsrstorage"]], "pydicom.uid.MediaStorageDirectoryStorage": [[409, "pydicom-uid-mediastoragedirectorystorage"]], "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage": [[410, "pydicom-uid-microscopybulksimpleannotationsstorage"]], "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage": [[411, "pydicom-uid-multiframegrayscalebytesecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage": [[412, "pydicom-uid-multiframegrayscalewordsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage": [[413, "pydicom-uid-multiframesinglebitsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage": [[414, "pydicom-uid-multiframetruecolorsecondarycaptureimagestorage"]], "pydicom.uid.MultichannelRespiratoryWaveformStorage": [[415, "pydicom-uid-multichannelrespiratorywaveformstorage"]], "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage": [[416, "pydicom-uid-multiplevolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.NuclearMedicineImageStorage": [[417, "pydicom-uid-nuclearmedicineimagestorage"]], "pydicom.uid.OphthalmicAxialMeasurementsStorage": [[418, "pydicom-uid-ophthalmicaxialmeasurementsstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage": [[419, "pydicom-uid-ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage": [[420, "pydicom-uid-ophthalmicopticalcoherencetomographyenfaceimagestorage"]], "pydicom.uid.OphthalmicPhotography16BitImageStorage": [[421, "pydicom-uid-ophthalmicphotography16bitimagestorage"]], "pydicom.uid.OphthalmicPhotography8BitImageStorage": [[422, "pydicom-uid-ophthalmicphotography8bitimagestorage"]], "pydicom.uid.OphthalmicThicknessMapStorage": [[423, "pydicom-uid-ophthalmicthicknessmapstorage"]], "pydicom.uid.OphthalmicTomographyImageStorage": [[424, "pydicom-uid-ophthalmictomographyimagestorage"]], "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage": [[425, "pydicom-uid-ophthalmicvisualfieldstaticperimetrymeasurementsstorage"]], "pydicom.uid.PYDICOM_IMPLEMENTATION_UID": [[426, "pydicom-uid-pydicom-implementation-uid"]], "pydicom.uid.PYDICOM_ROOT_UID": [[427, "pydicom-uid-pydicom-root-uid"]], "pydicom.uid.ParametricMapStorage": [[428, "pydicom-uid-parametricmapstorage"]], "pydicom.uid.PatientRadiationDoseSRStorage": [[429, "pydicom-uid-patientradiationdosesrstorage"]], "pydicom.uid.PerformedImagingAgentAdministrationSRStorage": [[430, "pydicom-uid-performedimagingagentadministrationsrstorage"]], "pydicom.uid.PhotoacousticImageStorage": [[431, "pydicom-uid-photoacousticimagestorage"]], "pydicom.uid.PlannedImagingAgentAdministrationSRStorage": [[432, "pydicom-uid-plannedimagingagentadministrationsrstorage"]], "pydicom.uid.PositronEmissionTomographyImageStorage": [[433, "pydicom-uid-positronemissiontomographyimagestorage"]], "pydicom.uid.PrivateTransferSyntaxes": [[434, "pydicom-uid-privatetransfersyntaxes"]], "pydicom.uid.ProcedureLogStorage": [[435, "pydicom-uid-procedurelogstorage"]], "pydicom.uid.ProtocolApprovalStorage": [[436, "pydicom-uid-protocolapprovalstorage"]], "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage": [[437, "pydicom-uid-pseudocolorsoftcopypresentationstatestorage"]], "pydicom.uid.RE_VALID_UID": [[438, "pydicom-uid-re-valid-uid"]], "pydicom.uid.RE_VALID_UID_PREFIX": [[439, "pydicom-uid-re-valid-uid-prefix"]], "pydicom.uid.RLELossless": [[440, "pydicom-uid-rlelossless"]], "pydicom.uid.RLETransferSyntaxes": [[441, "pydicom-uid-rletransfersyntaxes"]], "pydicom.uid.RTBeamsDeliveryInstructionStorage": [[442, "pydicom-uid-rtbeamsdeliveryinstructionstorage"]], "pydicom.uid.RTBeamsTreatmentRecordStorage": [[443, "pydicom-uid-rtbeamstreatmentrecordstorage"]], "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage": [[444, "pydicom-uid-rtbrachyapplicationsetupdeliveryinstructionstorage"]], "pydicom.uid.RTBrachyTreatmentRecordStorage": [[445, "pydicom-uid-rtbrachytreatmentrecordstorage"]], "pydicom.uid.RTDoseStorage": [[446, "pydicom-uid-rtdosestorage"]], "pydicom.uid.RTImageStorage": [[447, "pydicom-uid-rtimagestorage"]], "pydicom.uid.RTIonBeamsTreatmentRecordStorage": [[448, "pydicom-uid-rtionbeamstreatmentrecordstorage"]], "pydicom.uid.RTIonPlanStorage": [[449, "pydicom-uid-rtionplanstorage"]], "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage": [[450, "pydicom-uid-rtpatientpositionacquisitioninstructionstorage"]], "pydicom.uid.RTPhysicianIntentStorage": [[451, "pydicom-uid-rtphysicianintentstorage"]], "pydicom.uid.RTPlanStorage": [[452, "pydicom-uid-rtplanstorage"]], "pydicom.uid.RTRadiationRecordSetStorage": [[453, "pydicom-uid-rtradiationrecordsetstorage"]], "pydicom.uid.RTRadiationSalvageRecordStorage": [[454, "pydicom-uid-rtradiationsalvagerecordstorage"]], "pydicom.uid.RTRadiationSetDeliveryInstructionStorage": [[455, "pydicom-uid-rtradiationsetdeliveryinstructionstorage"]], "pydicom.uid.RTRadiationSetStorage": [[456, "pydicom-uid-rtradiationsetstorage"]], "pydicom.uid.RTSegmentAnnotationStorage": [[457, "pydicom-uid-rtsegmentannotationstorage"]], "pydicom.uid.RTStructureSetStorage": [[458, "pydicom-uid-rtstructuresetstorage"]], "pydicom.uid.RTTreatmentPreparationStorage": [[459, "pydicom-uid-rttreatmentpreparationstorage"]], "pydicom.uid.RTTreatmentSummaryRecordStorage": [[460, "pydicom-uid-rttreatmentsummaryrecordstorage"]], "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage": [[461, "pydicom-uid-radiopharmaceuticalradiationdosesrstorage"]], "pydicom.uid.RawDataStorage": [[462, "pydicom-uid-rawdatastorage"]], "pydicom.uid.RealWorldValueMappingStorage": [[463, "pydicom-uid-realworldvaluemappingstorage"]], "pydicom.uid.RespiratoryWaveformStorage": [[464, "pydicom-uid-respiratorywaveformstorage"]], "pydicom.uid.RoboticArmRadiationStorage": [[465, "pydicom-uid-roboticarmradiationstorage"]], "pydicom.uid.RoboticRadiationRecordStorage": [[466, "pydicom-uid-roboticradiationrecordstorage"]], "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage": [[467, "pydicom-uid-routinescalpelectroencephalogramwaveformstorage"]], "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo": [[468, "pydicom-uid-smptest211020uncompressedinterlacedactivevideo"]], "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo": [[469, "pydicom-uid-smptest211020uncompressedprogressiveactivevideo"]], "pydicom.uid.SMPTEST211030PCMDigitalAudio": [[470, "pydicom-uid-smptest211030pcmdigitalaudio"]], "pydicom.uid.SecondaryCaptureImageStorage": [[471, "pydicom-uid-secondarycaptureimagestorage"]], "pydicom.uid.SegmentationStorage": [[472, "pydicom-uid-segmentationstorage"]], "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage": [[473, "pydicom-uid-segmentedvolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.SimplifiedAdultEchoSRStorage": [[474, "pydicom-uid-simplifiedadultechosrstorage"]], "pydicom.uid.SleepElectroencephalogramWaveformStorage": [[475, "pydicom-uid-sleepelectroencephalogramwaveformstorage"]], "pydicom.uid.SpatialFiducialsStorage": [[476, "pydicom-uid-spatialfiducialsstorage"]], "pydicom.uid.SpatialRegistrationStorage": [[477, "pydicom-uid-spatialregistrationstorage"]], "pydicom.uid.SpectaclePrescriptionReportStorage": [[478, "pydicom-uid-spectacleprescriptionreportstorage"]], "pydicom.uid.StereometricRelationshipStorage": [[479, "pydicom-uid-stereometricrelationshipstorage"]], "pydicom.uid.SubjectiveRefractionMeasurementsStorage": [[480, "pydicom-uid-subjectiverefractionmeasurementsstorage"]], "pydicom.uid.SurfaceScanMeshStorage": [[481, "pydicom-uid-surfacescanmeshstorage"]], "pydicom.uid.SurfaceScanPointCloudStorage": [[482, "pydicom-uid-surfacescanpointcloudstorage"]], "pydicom.uid.SurfaceSegmentationStorage": [[483, "pydicom-uid-surfacesegmentationstorage"]], "pydicom.uid.TomotherapeuticRadiationRecordStorage": [[484, "pydicom-uid-tomotherapeuticradiationrecordstorage"]], "pydicom.uid.TomotherapeuticRadiationStorage": [[485, "pydicom-uid-tomotherapeuticradiationstorage"]], "pydicom.uid.TractographyResultsStorage": [[486, "pydicom-uid-tractographyresultsstorage"]], "pydicom.uid.TwelveLeadECGWaveformStorage": [[487, "pydicom-uid-twelveleadecgwaveformstorage"]], "pydicom.uid.UID": [[488, "pydicom-uid-uid"]], "pydicom.uid.UltrasoundImageStorage": [[489, "pydicom-uid-ultrasoundimagestorage"]], "pydicom.uid.UltrasoundMultiFrameImageStorage": [[490, "pydicom-uid-ultrasoundmultiframeimagestorage"]], "pydicom.uid.UncompressedTransferSyntaxes": [[491, "pydicom-uid-uncompressedtransfersyntaxes"]], "pydicom.uid.VLEndoscopicImageStorage": [[492, "pydicom-uid-vlendoscopicimagestorage"]], "pydicom.uid.VLMicroscopicImageStorage": [[493, "pydicom-uid-vlmicroscopicimagestorage"]], "pydicom.uid.VLPhotographicImageStorage": [[494, "pydicom-uid-vlphotographicimagestorage"]], "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage": [[495, "pydicom-uid-vlslidecoordinatesmicroscopicimagestorage"]], "pydicom.uid.VLWholeSlideMicroscopyImageStorage": [[496, "pydicom-uid-vlwholeslidemicroscopyimagestorage"]], "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage": [[497, "pydicom-uid-variablemodalitylutsoftcopypresentationstatestorage"]], "pydicom.uid.VideoEndoscopicImageStorage": [[498, "pydicom-uid-videoendoscopicimagestorage"]], "pydicom.uid.VideoMicroscopicImageStorage": [[499, "pydicom-uid-videomicroscopicimagestorage"]], "pydicom.uid.VideoPhotographicImageStorage": [[500, "pydicom-uid-videophotographicimagestorage"]], "pydicom.uid.VisualAcuityMeasurementsStorage": [[501, "pydicom-uid-visualacuitymeasurementsstorage"]], "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage": [[502, "pydicom-uid-volumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage": [[503, "pydicom-uid-widefieldophthalmicphotography3dcoordinatesimagestorage"]], "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage": [[504, "pydicom-uid-widefieldophthalmicphotographystereographicprojectionimagestorage"]], "pydicom.uid.XADefinedProcedureProtocolStorage": [[505, "pydicom-uid-xadefinedprocedureprotocolstorage"]], "pydicom.uid.XAPerformedProcedureProtocolStorage": [[506, "pydicom-uid-xaperformedprocedureprotocolstorage"]], "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage": [[507, "pydicom-uid-xaxrfgrayscalesoftcopypresentationstatestorage"]], "pydicom.uid.XRay3DAngiographicImageStorage": [[508, "pydicom-uid-xray3dangiographicimagestorage"]], "pydicom.uid.XRay3DCraniofacialImageStorage": [[509, "pydicom-uid-xray3dcraniofacialimagestorage"]], "pydicom.uid.XRayAngiographicImageStorage": [[510, "pydicom-uid-xrayangiographicimagestorage"]], "pydicom.uid.XRayRadiationDoseSRStorage": [[511, "pydicom-uid-xrayradiationdosesrstorage"]], "pydicom.uid.XRayRadiofluoroscopicImageStorage": [[512, "pydicom-uid-xrayradiofluoroscopicimagestorage"]], "pydicom.uid.generate_uid": [[513, "pydicom-uid-generate-uid"]], "pydicom.uid.register_transfer_syntax": [[514, "pydicom-uid-register-transfer-syntax"]], "pydicom.valuerep.DA": [[515, "pydicom-valuerep-da"]], "pydicom.valuerep.DS": [[516, "pydicom-valuerep-ds"]], "pydicom.valuerep.DSdecimal": [[517, "pydicom-valuerep-dsdecimal"]], "pydicom.valuerep.DSfloat": [[518, "pydicom-valuerep-dsfloat"]], "pydicom.valuerep.DT": [[519, "pydicom-valuerep-dt"]], "pydicom.valuerep.IS": [[520, "pydicom-valuerep-is"]], "pydicom.valuerep.ISfloat": [[521, "pydicom-valuerep-isfloat"]], "pydicom.valuerep.PersonName": [[522, "pydicom-valuerep-personname"]], "pydicom.valuerep.TM": [[523, "pydicom-valuerep-tm"]], "pydicom.valuerep.VR": [[524, "pydicom-valuerep-vr"]], "pydicom.valuerep.format_number_as_ds": [[525, "pydicom-valuerep-format-number-as-ds"]], "pydicom.valuerep.is_valid_ds": [[526, "pydicom-valuerep-is-valid-ds"]], "pydicom.values.convert_AE_string": [[527, "pydicom-values-convert-ae-string"]], "pydicom.values.convert_ATvalue": [[528, "pydicom-values-convert-atvalue"]], "pydicom.values.convert_DA_string": [[529, "pydicom-values-convert-da-string"]], "pydicom.values.convert_DS_string": [[530, "pydicom-values-convert-ds-string"]], "pydicom.values.convert_DT_string": [[531, "pydicom-values-convert-dt-string"]], "pydicom.values.convert_IS_string": [[532, "pydicom-values-convert-is-string"]], "pydicom.values.convert_OBvalue": [[533, "pydicom-values-convert-obvalue"]], "pydicom.values.convert_OWvalue": [[534, "pydicom-values-convert-owvalue"]], "pydicom.values.convert_PN": [[535, "pydicom-values-convert-pn"]], "pydicom.values.convert_SQ": [[536, "pydicom-values-convert-sq"]], "pydicom.values.convert_TM_string": [[537, "pydicom-values-convert-tm-string"]], "pydicom.values.convert_UI": [[538, "pydicom-values-convert-ui"]], "pydicom.values.convert_UN": [[539, "pydicom-values-convert-un"]], "pydicom.values.convert_UR_string": [[540, "pydicom-values-convert-ur-string"]], "pydicom.values.convert_numbers": [[541, "pydicom-values-convert-numbers"]], "pydicom.values.convert_single_string": [[542, "pydicom-values-convert-single-string"]], "pydicom.values.convert_string": [[543, "pydicom-values-convert-string"]], "pydicom.values.convert_tag": [[544, "pydicom-values-convert-tag"]], "pydicom.values.convert_text": [[545, "pydicom-values-convert-text"]], "pydicom.values.convert_value": [[546, "pydicom-values-convert-value"]], "pydicom.values.multi_string": [[547, "pydicom-values-multi-string"]], "pydicom.waveforms.numpy_handler": [[548, "module-pydicom.waveforms.numpy_handler"]], "pyjpegls": [[33, "pyjpegls"]], "pylibjpeg": [[33, "pylibjpeg"], [36, "pylibjpeg"]]}, "docnames": ["auto_examples/dicomtree", "auto_examples/image_processing/index", "auto_examples/image_processing/plot_downsize_image", "auto_examples/image_processing/plot_waveforms", "auto_examples/image_processing/reslice", "auto_examples/image_processing/sg_execution_times", "auto_examples/index", "auto_examples/input_output/index", "auto_examples/input_output/plot_printing_dataset", "auto_examples/input_output/plot_read_dicom", "auto_examples/input_output/plot_read_fileset", "auto_examples/input_output/plot_read_rtplan", "auto_examples/input_output/plot_write_dicom", "auto_examples/input_output/sg_execution_times", "auto_examples/memory_dataset", "auto_examples/metadata_processing/index", "auto_examples/metadata_processing/plot_add_dict_entries", "auto_examples/metadata_processing/plot_anonymize", "auto_examples/metadata_processing/plot_sequences", "auto_examples/metadata_processing/sg_execution_times", "auto_examples/plot_dicom_difference", "auto_examples/sg_execution_times", "auto_examples/show_charset_name", "faq/index", "guides/cli/cli_codify", "guides/cli/cli_dev", "guides/cli/cli_guide", "guides/cli/cli_intro", "guides/cli/cli_show", "guides/decoding/decoder_options", "guides/decoding/decoder_plugins", "guides/decoding/index", "guides/element_value_types", "guides/encoding/encoder_plugin_options", "guides/encoding/encoder_plugins", "guides/encoding/index", "guides/encoding/jpeg_2k", "guides/encoding/jpeg_ls", "guides/encoding/rle_lossless", "guides/glossary", "guides/index", "guides/user/base_element", "guides/user/best_practices", "guides/user/image_data_compression", "guides/user/image_data_handlers", "guides/user/index", "guides/user/private_data_elements", "guides/user/viewing_images", "guides/user/working_with_overlays", "guides/user/working_with_pixel_data", "guides/user/working_with_waveforms", "guides/user/writing_files", "guides/writing_documentation", "index", "reference/charset", "reference/config", "reference/data", "reference/datadict", "reference/dataset", "reference/elem", "reference/elem.dataelem", "reference/elem.multival", "reference/elem.sequence", "reference/elem.tag", "reference/elem.valuerep", "reference/elem.values", "reference/encaps", "reference/errors", "reference/examples", "reference/fileio", "reference/fileio.base", "reference/fileio.read", "reference/fileio.util", "reference/fileio.write", "reference/fileset", "reference/generated/pydicom.charset.convert_encodings", "reference/generated/pydicom.charset.decode_bytes", "reference/generated/pydicom.charset.decode_element", "reference/generated/pydicom.charset.encode_string", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS", "reference/generated/pydicom.config.DS_decimal", "reference/generated/pydicom.config.DS_numpy", "reference/generated/pydicom.config.IGNORE", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR", "reference/generated/pydicom.config.RAISE", "reference/generated/pydicom.config.WARN", "reference/generated/pydicom.config.allow_DS_float", "reference/generated/pydicom.config.assume_implicit_vr_switch", "reference/generated/pydicom.config.convert_wrong_length_to_UN", "reference/generated/pydicom.config.data_element_callback", "reference/generated/pydicom.config.data_element_callback_kwargs", "reference/generated/pydicom.config.datetime_conversion", "reference/generated/pydicom.config.debug", "reference/generated/pydicom.config.enforce_valid_values", "reference/generated/pydicom.config.future_behavior", "reference/generated/pydicom.config.pixel_data_handlers", "reference/generated/pydicom.config.reset_data_element_callback", "reference/generated/pydicom.config.settings", "reference/generated/pydicom.config.show_file_meta", "reference/generated/pydicom.config.use_DS_decimal", "reference/generated/pydicom.config.use_DS_numpy", "reference/generated/pydicom.config.use_IS_numpy", "reference/generated/pydicom.data.get_charset_files", "reference/generated/pydicom.data.get_palette_files", "reference/generated/pydicom.data.get_testdata_file", "reference/generated/pydicom.data.get_testdata_files", "reference/generated/pydicom.datadict.add_dict_entries", "reference/generated/pydicom.datadict.add_dict_entry", "reference/generated/pydicom.datadict.add_private_dict_entries", "reference/generated/pydicom.datadict.add_private_dict_entry", "reference/generated/pydicom.datadict.dictionary_VM", "reference/generated/pydicom.datadict.dictionary_VR", "reference/generated/pydicom.datadict.dictionary_description", "reference/generated/pydicom.datadict.dictionary_has_tag", "reference/generated/pydicom.datadict.dictionary_is_retired", "reference/generated/pydicom.datadict.dictionary_keyword", "reference/generated/pydicom.datadict.get_entry", "reference/generated/pydicom.datadict.get_private_entry", "reference/generated/pydicom.datadict.keyword_for_tag", "reference/generated/pydicom.datadict.mask_match", "reference/generated/pydicom.datadict.private_dictionary_VM", "reference/generated/pydicom.datadict.private_dictionary_VR", "reference/generated/pydicom.datadict.private_dictionary_description", "reference/generated/pydicom.datadict.repeater_has_keyword", "reference/generated/pydicom.datadict.repeater_has_tag", "reference/generated/pydicom.datadict.tag_for_keyword", "reference/generated/pydicom.dataelem.DataElement", "reference/generated/pydicom.dataelem.DataElement_from_raw", "reference/generated/pydicom.dataelem.RawDataElement", "reference/generated/pydicom.dataset.Dataset", "reference/generated/pydicom.dataset.FileDataset", "reference/generated/pydicom.dataset.FileMetaDataset", "reference/generated/pydicom.dataset.PrivateBlock", "reference/generated/pydicom.dataset.validate_file_meta", "reference/generated/pydicom.encaps.decode_data_sequence", "reference/generated/pydicom.encaps.defragment_data", "reference/generated/pydicom.encaps.encapsulate", "reference/generated/pydicom.encaps.encapsulate_extended", "reference/generated/pydicom.encaps.fragment_frame", "reference/generated/pydicom.encaps.generate_fragmented_frames", "reference/generated/pydicom.encaps.generate_fragments", "reference/generated/pydicom.encaps.generate_frames", "reference/generated/pydicom.encaps.generate_pixel_data", "reference/generated/pydicom.encaps.generate_pixel_data_fragment", "reference/generated/pydicom.encaps.generate_pixel_data_frame", "reference/generated/pydicom.encaps.get_frame", "reference/generated/pydicom.encaps.get_frame_offsets", "reference/generated/pydicom.encaps.itemize_fragment", "reference/generated/pydicom.encaps.itemize_frame", "reference/generated/pydicom.encaps.parse_basic_offsets", "reference/generated/pydicom.encaps.parse_fragments", "reference/generated/pydicom.encaps.read_item", "reference/generated/pydicom.errors.InvalidDicomError", "reference/generated/pydicom.filebase.DicomBytesIO", "reference/generated/pydicom.filebase.DicomFile", "reference/generated/pydicom.filebase.DicomFileLike", "reference/generated/pydicom.filebase.DicomIO", "reference/generated/pydicom.filereader.data_element_generator", "reference/generated/pydicom.filereader.data_element_offset_to_value", "reference/generated/pydicom.filereader.dcmread", "reference/generated/pydicom.filereader.read_dataset", "reference/generated/pydicom.filereader.read_deferred_data_element", "reference/generated/pydicom.filereader.read_file_meta_info", "reference/generated/pydicom.filereader.read_partial", "reference/generated/pydicom.filereader.read_preamble", "reference/generated/pydicom.filereader.read_sequence", "reference/generated/pydicom.filereader.read_sequence_item", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS", "reference/generated/pydicom.fileset.FileInstance", "reference/generated/pydicom.fileset.FileSet", "reference/generated/pydicom.fileset.RecordNode", "reference/generated/pydicom.fileset.generate_filename", "reference/generated/pydicom.fileset.is_conformant_file_id", "reference/generated/pydicom.fileutil.absorb_delimiter_item", "reference/generated/pydicom.fileutil.find_bytes", "reference/generated/pydicom.fileutil.find_delimiter", "reference/generated/pydicom.fileutil.length_of_undefined_length", "reference/generated/pydicom.fileutil.read_undefined_length_value", "reference/generated/pydicom.filewriter.correct_ambiguous_vr", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element", "reference/generated/pydicom.filewriter.dcmwrite", "reference/generated/pydicom.filewriter.multi_string", "reference/generated/pydicom.filewriter.write_ATvalue", "reference/generated/pydicom.filewriter.write_DA", "reference/generated/pydicom.filewriter.write_DT", "reference/generated/pydicom.filewriter.write_OBvalue", "reference/generated/pydicom.filewriter.write_OWvalue", "reference/generated/pydicom.filewriter.write_PN", "reference/generated/pydicom.filewriter.write_TM", "reference/generated/pydicom.filewriter.write_UI", "reference/generated/pydicom.filewriter.write_UN", "reference/generated/pydicom.filewriter.write_data_element", "reference/generated/pydicom.filewriter.write_dataset", "reference/generated/pydicom.filewriter.write_file_meta_info", "reference/generated/pydicom.filewriter.write_number_string", "reference/generated/pydicom.filewriter.write_numbers", "reference/generated/pydicom.filewriter.write_sequence", "reference/generated/pydicom.filewriter.write_sequence_item", "reference/generated/pydicom.filewriter.write_string", "reference/generated/pydicom.filewriter.write_text", "reference/generated/pydicom.misc.is_dicom", "reference/generated/pydicom.misc.size_in_bytes", "reference/generated/pydicom.multival.MultiValue", "reference/generated/pydicom.overlays.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler", "reference/generated/pydicom.pixel_data_handlers.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.pillow_handler", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler", "reference/generated/pydicom.pixel_data_handlers.rle_handler", "reference/generated/pydicom.pixels.apply_color_lut", "reference/generated/pydicom.pixels.apply_modality_lut", "reference/generated/pydicom.pixels.apply_voi", "reference/generated/pydicom.pixels.apply_voi_lut", "reference/generated/pydicom.pixels.apply_windowing", "reference/generated/pydicom.pixels.as_pixel_options", "reference/generated/pydicom.pixels.compress", "reference/generated/pydicom.pixels.convert_color_space", "reference/generated/pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", "reference/generated/pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", "reference/generated/pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.JPEG2000Decoder", "reference/generated/pydicom.pixels.decoders.JPEG2000LosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGBaseline8BitDecoder", "reference/generated/pydicom.pixels.decoders.JPEGExtended12BitDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLSLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLosslessSV1Decoder", "reference/generated/pydicom.pixels.decoders.RLELosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner", "reference/generated/pydicom.pixels.decoders.base.Decoder", "reference/generated/pydicom.pixels.decompress", "reference/generated/pydicom.pixels.encoders.JPEG2000Encoder", "reference/generated/pydicom.pixels.encoders.JPEG2000LosslessEncoder", "reference/generated/pydicom.pixels.encoders.JPEGLSLosslessEncoder", "reference/generated/pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", "reference/generated/pydicom.pixels.encoders.RLELosslessEncoder", "reference/generated/pydicom.pixels.encoders.base.EncodeRunner", "reference/generated/pydicom.pixels.encoders.base.Encoder", "reference/generated/pydicom.pixels.get_decoder", "reference/generated/pydicom.pixels.get_encoder", "reference/generated/pydicom.pixels.iter_pixels", "reference/generated/pydicom.pixels.pack_bits", "reference/generated/pydicom.pixels.pixel_array", "reference/generated/pydicom.pixels.processing.apply_color_lut", "reference/generated/pydicom.pixels.processing.apply_modality_lut", "reference/generated/pydicom.pixels.processing.apply_rescale", "reference/generated/pydicom.pixels.processing.apply_voi", "reference/generated/pydicom.pixels.processing.apply_voi_lut", "reference/generated/pydicom.pixels.processing.apply_windowing", "reference/generated/pydicom.pixels.processing.convert_color_space", "reference/generated/pydicom.pixels.unpack_bits", "reference/generated/pydicom.pixels.utils.as_pixel_options", "reference/generated/pydicom.pixels.utils.compress", "reference/generated/pydicom.pixels.utils.decompress", "reference/generated/pydicom.pixels.utils.expand_ybr422", "reference/generated/pydicom.pixels.utils.get_expected_length", "reference/generated/pydicom.pixels.utils.get_image_pixel_ids", "reference/generated/pydicom.pixels.utils.get_j2k_parameters", "reference/generated/pydicom.pixels.utils.get_nr_frames", "reference/generated/pydicom.pixels.utils.iter_pixels", "reference/generated/pydicom.pixels.utils.pack_bits", "reference/generated/pydicom.pixels.utils.pixel_array", "reference/generated/pydicom.pixels.utils.pixel_dtype", "reference/generated/pydicom.pixels.utils.reshape_pixel_array", "reference/generated/pydicom.pixels.utils.unpack_bits", "reference/generated/pydicom.sequence.Sequence", "reference/generated/pydicom.tag.BaseTag", "reference/generated/pydicom.tag.Tag", "reference/generated/pydicom.tag.TupleTag", "reference/generated/pydicom.tag.tag_in_exception", "reference/generated/pydicom.uid.AcquisitionContextSRStorage", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage", "reference/generated/pydicom.uid.AllTransferSyntaxes", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage", "reference/generated/pydicom.uid.BasicTextSRStorage", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.BodyPositionWaveformStorage", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.CTImageStorage", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage", "reference/generated/pydicom.uid.ChestCADSRStorage", "reference/generated/pydicom.uid.ColonCADSRStorage", "reference/generated/pydicom.uid.ColorPaletteStorage", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.Comprehensive3DSRStorage", "reference/generated/pydicom.uid.ComprehensiveSRStorage", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage", "reference/generated/pydicom.uid.CornealTopographyMapStorage", "reference/generated/pydicom.uid.DICOS2DAITStorage", "reference/generated/pydicom.uid.DICOS3DAITStorage", "reference/generated/pydicom.uid.DICOSCTImageStorage", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.EddyCurrentImageStorage", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage", "reference/generated/pydicom.uid.EncapsulatedCDAStorage", "reference/generated/pydicom.uid.EncapsulatedMTLStorage", "reference/generated/pydicom.uid.EncapsulatedOBJStorage", "reference/generated/pydicom.uid.EncapsulatedPDFStorage", "reference/generated/pydicom.uid.EncapsulatedSTLStorage", "reference/generated/pydicom.uid.EnhancedCTImageStorage", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage", "reference/generated/pydicom.uid.EnhancedMRImageStorage", "reference/generated/pydicom.uid.EnhancedPETImageStorage", "reference/generated/pydicom.uid.EnhancedRTImageStorage", "reference/generated/pydicom.uid.EnhancedSRStorage", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage", "reference/generated/pydicom.uid.EnhancedXAImageStorage", "reference/generated/pydicom.uid.EnhancedXRFImageStorage", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.ExplicitVRBigEndian", "reference/generated/pydicom.uid.ExplicitVRLittleEndian", "reference/generated/pydicom.uid.ExtensibleSRStorage", "reference/generated/pydicom.uid.General32bitECGWaveformStorage", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage", "reference/generated/pydicom.uid.GeneralECGWaveformStorage", "reference/generated/pydicom.uid.GenericImplantTemplateStorage", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.HEVCM10P51", "reference/generated/pydicom.uid.HEVCMP51", "reference/generated/pydicom.uid.HTJ2K", "reference/generated/pydicom.uid.HTJ2KLossless", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL", "reference/generated/pydicom.uid.HangingProtocolStorage", "reference/generated/pydicom.uid.HemodynamicWaveformStorage", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage", "reference/generated/pydicom.uid.ImplantationPlanSRStorage", "reference/generated/pydicom.uid.ImplicitVRLittleEndian", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pydicom.uid.InventoryStorage", "reference/generated/pydicom.uid.JPEG2000", "reference/generated/pydicom.uid.JPEG2000Lossless", "reference/generated/pydicom.uid.JPEG2000MC", "reference/generated/pydicom.uid.JPEG2000MCLossless", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes", "reference/generated/pydicom.uid.JPEGBaseline8Bit", "reference/generated/pydicom.uid.JPEGExtended12Bit", "reference/generated/pydicom.uid.JPEGLSLossless", "reference/generated/pydicom.uid.JPEGLSNearLossless", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes", "reference/generated/pydicom.uid.JPEGLossless", "reference/generated/pydicom.uid.JPEGLosslessSV1", "reference/generated/pydicom.uid.JPEGTransferSyntaxes", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pydicom.uid.LensometryMeasurementsStorage", "reference/generated/pydicom.uid.MPEG2MPHL", "reference/generated/pydicom.uid.MPEG2MPHLF", "reference/generated/pydicom.uid.MPEG2MPML", "reference/generated/pydicom.uid.MPEG2MPMLF", "reference/generated/pydicom.uid.MPEG4HP41", "reference/generated/pydicom.uid.MPEG4HP41BD", "reference/generated/pydicom.uid.MPEG4HP41BDF", "reference/generated/pydicom.uid.MPEG4HP41F", "reference/generated/pydicom.uid.MPEG4HP422D", "reference/generated/pydicom.uid.MPEG4HP422DF", "reference/generated/pydicom.uid.MPEG4HP423D", "reference/generated/pydicom.uid.MPEG4HP423DF", "reference/generated/pydicom.uid.MPEG4HP42STEREO", "reference/generated/pydicom.uid.MPEG4HP42STEREOF", "reference/generated/pydicom.uid.MPEGTransferSyntaxes", "reference/generated/pydicom.uid.MRImageStorage", "reference/generated/pydicom.uid.MRSpectroscopyStorage", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pydicom.uid.MammographyCADSRStorage", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.NuclearMedicineImageStorage", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID", "reference/generated/pydicom.uid.ParametricMapStorage", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PhotoacousticImageStorage", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage", "reference/generated/pydicom.uid.PrivateTransferSyntaxes", "reference/generated/pydicom.uid.ProcedureLogStorage", "reference/generated/pydicom.uid.ProtocolApprovalStorage", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.RE_VALID_UID", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX", "reference/generated/pydicom.uid.RLELossless", "reference/generated/pydicom.uid.RLETransferSyntaxes", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage", "reference/generated/pydicom.uid.RTDoseStorage", "reference/generated/pydicom.uid.RTImageStorage", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTIonPlanStorage", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "reference/generated/pydicom.uid.RTPhysicianIntentStorage", "reference/generated/pydicom.uid.RTPlanStorage", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTRadiationSetStorage", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage", "reference/generated/pydicom.uid.RTStructureSetStorage", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pydicom.uid.RawDataStorage", "reference/generated/pydicom.uid.RealWorldValueMappingStorage", "reference/generated/pydicom.uid.RespiratoryWaveformStorage", "reference/generated/pydicom.uid.RoboticArmRadiationStorage", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage", "reference/generated/pydicom.uid.SegmentationStorage", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SpatialFiducialsStorage", "reference/generated/pydicom.uid.SpatialRegistrationStorage", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage", "reference/generated/pydicom.uid.StereometricRelationshipStorage", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage", "reference/generated/pydicom.uid.SurfaceScanMeshStorage", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage", "reference/generated/pydicom.uid.SurfaceSegmentationStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage", "reference/generated/pydicom.uid.TractographyResultsStorage", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage", "reference/generated/pydicom.uid.UID", "reference/generated/pydicom.uid.UltrasoundImageStorage", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes", "reference/generated/pydicom.uid.VLEndoscopicImageStorage", "reference/generated/pydicom.uid.VLMicroscopicImageStorage", "reference/generated/pydicom.uid.VLPhotographicImageStorage", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage", "reference/generated/pydicom.uid.VideoPhotographicImageStorage", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage", "reference/generated/pydicom.uid.XRayAngiographicImageStorage", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage", "reference/generated/pydicom.uid.generate_uid", "reference/generated/pydicom.uid.register_transfer_syntax", "reference/generated/pydicom.valuerep.DA", "reference/generated/pydicom.valuerep.DS", "reference/generated/pydicom.valuerep.DSdecimal", "reference/generated/pydicom.valuerep.DSfloat", "reference/generated/pydicom.valuerep.DT", "reference/generated/pydicom.valuerep.IS", "reference/generated/pydicom.valuerep.ISfloat", "reference/generated/pydicom.valuerep.PersonName", "reference/generated/pydicom.valuerep.TM", "reference/generated/pydicom.valuerep.VR", "reference/generated/pydicom.valuerep.format_number_as_ds", "reference/generated/pydicom.valuerep.is_valid_ds", "reference/generated/pydicom.values.convert_AE_string", "reference/generated/pydicom.values.convert_ATvalue", "reference/generated/pydicom.values.convert_DA_string", "reference/generated/pydicom.values.convert_DS_string", "reference/generated/pydicom.values.convert_DT_string", "reference/generated/pydicom.values.convert_IS_string", "reference/generated/pydicom.values.convert_OBvalue", "reference/generated/pydicom.values.convert_OWvalue", "reference/generated/pydicom.values.convert_PN", "reference/generated/pydicom.values.convert_SQ", "reference/generated/pydicom.values.convert_TM_string", "reference/generated/pydicom.values.convert_UI", "reference/generated/pydicom.values.convert_UN", "reference/generated/pydicom.values.convert_UR_string", "reference/generated/pydicom.values.convert_numbers", "reference/generated/pydicom.values.convert_single_string", "reference/generated/pydicom.values.convert_string", "reference/generated/pydicom.values.convert_tag", "reference/generated/pydicom.values.convert_text", "reference/generated/pydicom.values.convert_value", "reference/generated/pydicom.values.multi_string", "reference/generated/pydicom.waveforms.numpy_handler", "reference/handlers", "reference/handlers.pixel_data", "reference/index", "reference/misc", "reference/overlays", "reference/pixels", "reference/pixels.decoders", "reference/pixels.encoders", "reference/pixels.processing", "reference/pixels.utils", "reference/uid", "reference/waveforms", "release_notes/index", "release_notes/v0.9.2", "release_notes/v0.9.3", "release_notes/v0.9.4", "release_notes/v0.9.5", "release_notes/v0.9.6", "release_notes/v0.9.7", "release_notes/v0.9.8", "release_notes/v0.9.9", "release_notes/v1.0.0", "release_notes/v1.1.0", "release_notes/v1.2.0", "release_notes/v1.3.0", "release_notes/v1.4.0", "release_notes/v1.4.1", "release_notes/v2.0.0", "release_notes/v2.1.0", "release_notes/v2.1.1", "release_notes/v2.2.0", "release_notes/v2.3.0", "release_notes/v2.4.0", "release_notes/v3.0.0", "sg_execution_times", "tutorials/contributing", "tutorials/contributing_code", "tutorials/contributing_docs", "tutorials/dataset_basics", "tutorials/dicom_json", "tutorials/filesets", "tutorials/index", "tutorials/installation", "tutorials/pixel_data/compressing", "tutorials/sr_basics", "tutorials/waveforms"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["auto_examples/dicomtree.rst", "auto_examples/image_processing/index.rst", "auto_examples/image_processing/plot_downsize_image.rst", "auto_examples/image_processing/plot_waveforms.rst", "auto_examples/image_processing/reslice.rst", "auto_examples/image_processing/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/input_output/index.rst", "auto_examples/input_output/plot_printing_dataset.rst", "auto_examples/input_output/plot_read_dicom.rst", "auto_examples/input_output/plot_read_fileset.rst", "auto_examples/input_output/plot_read_rtplan.rst", "auto_examples/input_output/plot_write_dicom.rst", "auto_examples/input_output/sg_execution_times.rst", "auto_examples/memory_dataset.rst", "auto_examples/metadata_processing/index.rst", "auto_examples/metadata_processing/plot_add_dict_entries.rst", "auto_examples/metadata_processing/plot_anonymize.rst", "auto_examples/metadata_processing/plot_sequences.rst", "auto_examples/metadata_processing/sg_execution_times.rst", "auto_examples/plot_dicom_difference.rst", "auto_examples/sg_execution_times.rst", "auto_examples/show_charset_name.rst", "faq/index.rst", "guides/cli/cli_codify.rst", "guides/cli/cli_dev.rst", "guides/cli/cli_guide.rst", "guides/cli/cli_intro.rst", "guides/cli/cli_show.rst", "guides/decoding/decoder_options.rst", "guides/decoding/decoder_plugins.rst", "guides/decoding/index.rst", "guides/element_value_types.rst", "guides/encoding/encoder_plugin_options.rst", "guides/encoding/encoder_plugins.rst", "guides/encoding/index.rst", "guides/encoding/jpeg_2k.rst", "guides/encoding/jpeg_ls.rst", "guides/encoding/rle_lossless.rst", "guides/glossary.rst", "guides/index.rst", "guides/user/base_element.rst", "guides/user/best_practices.rst", "guides/user/image_data_compression.rst", "guides/user/image_data_handlers.rst", "guides/user/index.rst", "guides/user/private_data_elements.rst", "guides/user/viewing_images.rst", "guides/user/working_with_overlays.rst", "guides/user/working_with_pixel_data.rst", "guides/user/working_with_waveforms.rst", "guides/user/writing_files.rst", "guides/writing_documentation.rst", "index.rst", "reference/charset.rst", "reference/config.rst", "reference/data.rst", "reference/datadict.rst", "reference/dataset.rst", "reference/elem.rst", "reference/elem.dataelem.rst", "reference/elem.multival.rst", "reference/elem.sequence.rst", "reference/elem.tag.rst", "reference/elem.valuerep.rst", "reference/elem.values.rst", "reference/encaps.rst", "reference/errors.rst", "reference/examples.rst", "reference/fileio.rst", "reference/fileio.base.rst", "reference/fileio.read.rst", "reference/fileio.util.rst", "reference/fileio.write.rst", "reference/fileset.rst", "reference/generated/pydicom.charset.convert_encodings.rst", "reference/generated/pydicom.charset.decode_bytes.rst", "reference/generated/pydicom.charset.decode_element.rst", "reference/generated/pydicom.charset.encode_string.rst", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS.rst", "reference/generated/pydicom.config.DS_decimal.rst", "reference/generated/pydicom.config.DS_numpy.rst", "reference/generated/pydicom.config.IGNORE.rst", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR.rst", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR.rst", "reference/generated/pydicom.config.RAISE.rst", "reference/generated/pydicom.config.WARN.rst", "reference/generated/pydicom.config.allow_DS_float.rst", "reference/generated/pydicom.config.assume_implicit_vr_switch.rst", "reference/generated/pydicom.config.convert_wrong_length_to_UN.rst", "reference/generated/pydicom.config.data_element_callback.rst", "reference/generated/pydicom.config.data_element_callback_kwargs.rst", "reference/generated/pydicom.config.datetime_conversion.rst", "reference/generated/pydicom.config.debug.rst", "reference/generated/pydicom.config.enforce_valid_values.rst", "reference/generated/pydicom.config.future_behavior.rst", "reference/generated/pydicom.config.pixel_data_handlers.rst", "reference/generated/pydicom.config.reset_data_element_callback.rst", "reference/generated/pydicom.config.settings.rst", "reference/generated/pydicom.config.show_file_meta.rst", "reference/generated/pydicom.config.use_DS_decimal.rst", "reference/generated/pydicom.config.use_DS_numpy.rst", "reference/generated/pydicom.config.use_IS_numpy.rst", "reference/generated/pydicom.data.get_charset_files.rst", "reference/generated/pydicom.data.get_palette_files.rst", "reference/generated/pydicom.data.get_testdata_file.rst", "reference/generated/pydicom.data.get_testdata_files.rst", "reference/generated/pydicom.datadict.add_dict_entries.rst", "reference/generated/pydicom.datadict.add_dict_entry.rst", "reference/generated/pydicom.datadict.add_private_dict_entries.rst", "reference/generated/pydicom.datadict.add_private_dict_entry.rst", "reference/generated/pydicom.datadict.dictionary_VM.rst", "reference/generated/pydicom.datadict.dictionary_VR.rst", "reference/generated/pydicom.datadict.dictionary_description.rst", "reference/generated/pydicom.datadict.dictionary_has_tag.rst", "reference/generated/pydicom.datadict.dictionary_is_retired.rst", "reference/generated/pydicom.datadict.dictionary_keyword.rst", "reference/generated/pydicom.datadict.get_entry.rst", "reference/generated/pydicom.datadict.get_private_entry.rst", "reference/generated/pydicom.datadict.keyword_for_tag.rst", "reference/generated/pydicom.datadict.mask_match.rst", "reference/generated/pydicom.datadict.private_dictionary_VM.rst", "reference/generated/pydicom.datadict.private_dictionary_VR.rst", "reference/generated/pydicom.datadict.private_dictionary_description.rst", "reference/generated/pydicom.datadict.repeater_has_keyword.rst", "reference/generated/pydicom.datadict.repeater_has_tag.rst", "reference/generated/pydicom.datadict.tag_for_keyword.rst", "reference/generated/pydicom.dataelem.DataElement.rst", "reference/generated/pydicom.dataelem.DataElement_from_raw.rst", "reference/generated/pydicom.dataelem.RawDataElement.rst", "reference/generated/pydicom.dataset.Dataset.rst", "reference/generated/pydicom.dataset.FileDataset.rst", "reference/generated/pydicom.dataset.FileMetaDataset.rst", "reference/generated/pydicom.dataset.PrivateBlock.rst", "reference/generated/pydicom.dataset.validate_file_meta.rst", "reference/generated/pydicom.encaps.decode_data_sequence.rst", "reference/generated/pydicom.encaps.defragment_data.rst", "reference/generated/pydicom.encaps.encapsulate.rst", "reference/generated/pydicom.encaps.encapsulate_extended.rst", "reference/generated/pydicom.encaps.fragment_frame.rst", "reference/generated/pydicom.encaps.generate_fragmented_frames.rst", "reference/generated/pydicom.encaps.generate_fragments.rst", "reference/generated/pydicom.encaps.generate_frames.rst", "reference/generated/pydicom.encaps.generate_pixel_data.rst", "reference/generated/pydicom.encaps.generate_pixel_data_fragment.rst", "reference/generated/pydicom.encaps.generate_pixel_data_frame.rst", "reference/generated/pydicom.encaps.get_frame.rst", "reference/generated/pydicom.encaps.get_frame_offsets.rst", "reference/generated/pydicom.encaps.itemize_fragment.rst", "reference/generated/pydicom.encaps.itemize_frame.rst", "reference/generated/pydicom.encaps.parse_basic_offsets.rst", "reference/generated/pydicom.encaps.parse_fragments.rst", "reference/generated/pydicom.encaps.read_item.rst", "reference/generated/pydicom.errors.InvalidDicomError.rst", "reference/generated/pydicom.filebase.DicomBytesIO.rst", "reference/generated/pydicom.filebase.DicomFile.rst", "reference/generated/pydicom.filebase.DicomFileLike.rst", "reference/generated/pydicom.filebase.DicomIO.rst", "reference/generated/pydicom.filereader.data_element_generator.rst", "reference/generated/pydicom.filereader.data_element_offset_to_value.rst", "reference/generated/pydicom.filereader.dcmread.rst", "reference/generated/pydicom.filereader.read_dataset.rst", "reference/generated/pydicom.filereader.read_deferred_data_element.rst", "reference/generated/pydicom.filereader.read_file_meta_info.rst", "reference/generated/pydicom.filereader.read_partial.rst", "reference/generated/pydicom.filereader.read_preamble.rst", "reference/generated/pydicom.filereader.read_sequence.rst", "reference/generated/pydicom.filereader.read_sequence_item.rst", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS.rst", "reference/generated/pydicom.fileset.FileInstance.rst", "reference/generated/pydicom.fileset.FileSet.rst", "reference/generated/pydicom.fileset.RecordNode.rst", "reference/generated/pydicom.fileset.generate_filename.rst", "reference/generated/pydicom.fileset.is_conformant_file_id.rst", "reference/generated/pydicom.fileutil.absorb_delimiter_item.rst", "reference/generated/pydicom.fileutil.find_bytes.rst", "reference/generated/pydicom.fileutil.find_delimiter.rst", "reference/generated/pydicom.fileutil.length_of_undefined_length.rst", "reference/generated/pydicom.fileutil.read_undefined_length_value.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element.rst", "reference/generated/pydicom.filewriter.dcmwrite.rst", "reference/generated/pydicom.filewriter.multi_string.rst", "reference/generated/pydicom.filewriter.write_ATvalue.rst", "reference/generated/pydicom.filewriter.write_DA.rst", "reference/generated/pydicom.filewriter.write_DT.rst", "reference/generated/pydicom.filewriter.write_OBvalue.rst", "reference/generated/pydicom.filewriter.write_OWvalue.rst", "reference/generated/pydicom.filewriter.write_PN.rst", "reference/generated/pydicom.filewriter.write_TM.rst", "reference/generated/pydicom.filewriter.write_UI.rst", "reference/generated/pydicom.filewriter.write_UN.rst", "reference/generated/pydicom.filewriter.write_data_element.rst", "reference/generated/pydicom.filewriter.write_dataset.rst", "reference/generated/pydicom.filewriter.write_file_meta_info.rst", "reference/generated/pydicom.filewriter.write_number_string.rst", "reference/generated/pydicom.filewriter.write_numbers.rst", "reference/generated/pydicom.filewriter.write_sequence.rst", "reference/generated/pydicom.filewriter.write_sequence_item.rst", "reference/generated/pydicom.filewriter.write_string.rst", "reference/generated/pydicom.filewriter.write_text.rst", "reference/generated/pydicom.misc.is_dicom.rst", "reference/generated/pydicom.misc.size_in_bytes.rst", "reference/generated/pydicom.multival.MultiValue.rst", "reference/generated/pydicom.overlays.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler.rst", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler.rst", "reference/generated/pydicom.pixel_data_handlers.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pillow_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler.rst", "reference/generated/pydicom.pixel_data_handlers.rle_handler.rst", "reference/generated/pydicom.pixels.apply_color_lut.rst", "reference/generated/pydicom.pixels.apply_modality_lut.rst", "reference/generated/pydicom.pixels.apply_voi.rst", "reference/generated/pydicom.pixels.apply_voi_lut.rst", "reference/generated/pydicom.pixels.apply_windowing.rst", "reference/generated/pydicom.pixels.as_pixel_options.rst", "reference/generated/pydicom.pixels.compress.rst", "reference/generated/pydicom.pixels.convert_color_space.rst", "reference/generated/pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.ExplicitVRBigEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder.rst", "reference/generated/pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEG2000Decoder.rst", "reference/generated/pydicom.pixels.decoders.JPEG2000LosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGBaseline8BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGExtended12BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLSLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLSNearLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLosslessSV1Decoder.rst", "reference/generated/pydicom.pixels.decoders.RLELosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner.rst", "reference/generated/pydicom.pixels.decoders.base.Decoder.rst", "reference/generated/pydicom.pixels.decompress.rst", "reference/generated/pydicom.pixels.encoders.JPEG2000Encoder.rst", "reference/generated/pydicom.pixels.encoders.JPEG2000LosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.JPEGLSLosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.JPEGLSNearLosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.RLELosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.base.EncodeRunner.rst", "reference/generated/pydicom.pixels.encoders.base.Encoder.rst", "reference/generated/pydicom.pixels.get_decoder.rst", "reference/generated/pydicom.pixels.get_encoder.rst", "reference/generated/pydicom.pixels.iter_pixels.rst", "reference/generated/pydicom.pixels.pack_bits.rst", "reference/generated/pydicom.pixels.pixel_array.rst", "reference/generated/pydicom.pixels.processing.apply_color_lut.rst", "reference/generated/pydicom.pixels.processing.apply_modality_lut.rst", "reference/generated/pydicom.pixels.processing.apply_rescale.rst", "reference/generated/pydicom.pixels.processing.apply_voi.rst", "reference/generated/pydicom.pixels.processing.apply_voi_lut.rst", "reference/generated/pydicom.pixels.processing.apply_windowing.rst", "reference/generated/pydicom.pixels.processing.convert_color_space.rst", "reference/generated/pydicom.pixels.unpack_bits.rst", "reference/generated/pydicom.pixels.utils.as_pixel_options.rst", "reference/generated/pydicom.pixels.utils.compress.rst", "reference/generated/pydicom.pixels.utils.decompress.rst", "reference/generated/pydicom.pixels.utils.expand_ybr422.rst", "reference/generated/pydicom.pixels.utils.get_expected_length.rst", "reference/generated/pydicom.pixels.utils.get_image_pixel_ids.rst", "reference/generated/pydicom.pixels.utils.get_j2k_parameters.rst", "reference/generated/pydicom.pixels.utils.get_nr_frames.rst", "reference/generated/pydicom.pixels.utils.iter_pixels.rst", "reference/generated/pydicom.pixels.utils.pack_bits.rst", "reference/generated/pydicom.pixels.utils.pixel_array.rst", "reference/generated/pydicom.pixels.utils.pixel_dtype.rst", "reference/generated/pydicom.pixels.utils.reshape_pixel_array.rst", "reference/generated/pydicom.pixels.utils.unpack_bits.rst", "reference/generated/pydicom.sequence.Sequence.rst", "reference/generated/pydicom.tag.BaseTag.rst", "reference/generated/pydicom.tag.Tag.rst", "reference/generated/pydicom.tag.TupleTag.rst", "reference/generated/pydicom.tag.tag_in_exception.rst", "reference/generated/pydicom.uid.AcquisitionContextSRStorage.rst", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pydicom.uid.AllTransferSyntaxes.rst", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage.rst", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage.rst", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage.rst", "reference/generated/pydicom.uid.BasicTextSRStorage.rst", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.BodyPositionWaveformStorage.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CTImageStorage.rst", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pydicom.uid.ChestCADSRStorage.rst", "reference/generated/pydicom.uid.ColonCADSRStorage.rst", "reference/generated/pydicom.uid.ColorPaletteStorage.rst", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.Comprehensive3DSRStorage.rst", "reference/generated/pydicom.uid.ComprehensiveSRStorage.rst", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage.rst", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage.rst", "reference/generated/pydicom.uid.CornealTopographyMapStorage.rst", "reference/generated/pydicom.uid.DICOS2DAITStorage.rst", "reference/generated/pydicom.uid.DICOS3DAITStorage.rst", "reference/generated/pydicom.uid.DICOSCTImageStorage.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage.rst", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage.rst", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.EddyCurrentImageStorage.rst", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage.rst", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage.rst", "reference/generated/pydicom.uid.EncapsulatedCDAStorage.rst", "reference/generated/pydicom.uid.EncapsulatedMTLStorage.rst", "reference/generated/pydicom.uid.EncapsulatedOBJStorage.rst", "reference/generated/pydicom.uid.EncapsulatedPDFStorage.rst", "reference/generated/pydicom.uid.EncapsulatedSTLStorage.rst", "reference/generated/pydicom.uid.EnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.EnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.EnhancedRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedSRStorage.rst", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage.rst", "reference/generated/pydicom.uid.EnhancedXAImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRFImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.ExplicitVRBigEndian.rst", "reference/generated/pydicom.uid.ExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.ExtensibleSRStorage.rst", "reference/generated/pydicom.uid.General32bitECGWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralECGWaveformStorage.rst", "reference/generated/pydicom.uid.GenericImplantTemplateStorage.rst", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.HEVCM10P51.rst", "reference/generated/pydicom.uid.HEVCMP51.rst", "reference/generated/pydicom.uid.HTJ2K.rst", "reference/generated/pydicom.uid.HTJ2KLossless.rst", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL.rst", "reference/generated/pydicom.uid.HangingProtocolStorage.rst", "reference/generated/pydicom.uid.HemodynamicWaveformStorage.rst", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage.rst", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage.rst", "reference/generated/pydicom.uid.ImplantationPlanSRStorage.rst", "reference/generated/pydicom.uid.ImplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pydicom.uid.InventoryStorage.rst", "reference/generated/pydicom.uid.JPEG2000.rst", "reference/generated/pydicom.uid.JPEG2000Lossless.rst", "reference/generated/pydicom.uid.JPEG2000MC.rst", "reference/generated/pydicom.uid.JPEG2000MCLossless.rst", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGBaseline8Bit.rst", "reference/generated/pydicom.uid.JPEGExtended12Bit.rst", "reference/generated/pydicom.uid.JPEGLSLossless.rst", "reference/generated/pydicom.uid.JPEGLSNearLossless.rst", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGLossless.rst", "reference/generated/pydicom.uid.JPEGLosslessSV1.rst", "reference/generated/pydicom.uid.JPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate.rst", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.LensometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.MPEG2MPHL.rst", "reference/generated/pydicom.uid.MPEG2MPHLF.rst", "reference/generated/pydicom.uid.MPEG2MPML.rst", "reference/generated/pydicom.uid.MPEG2MPMLF.rst", "reference/generated/pydicom.uid.MPEG4HP41.rst", "reference/generated/pydicom.uid.MPEG4HP41BD.rst", "reference/generated/pydicom.uid.MPEG4HP41BDF.rst", "reference/generated/pydicom.uid.MPEG4HP41F.rst", "reference/generated/pydicom.uid.MPEG4HP422D.rst", "reference/generated/pydicom.uid.MPEG4HP422DF.rst", "reference/generated/pydicom.uid.MPEG4HP423D.rst", "reference/generated/pydicom.uid.MPEG4HP423DF.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREO.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREOF.rst", "reference/generated/pydicom.uid.MPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.MRImageStorage.rst", "reference/generated/pydicom.uid.MRSpectroscopyStorage.rst", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pydicom.uid.MammographyCADSRStorage.rst", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage.rst", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.NuclearMedicineImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage.rst", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID.rst", "reference/generated/pydicom.uid.ParametricMapStorage.rst", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PhotoacousticImageStorage.rst", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage.rst", "reference/generated/pydicom.uid.PrivateTransferSyntaxes.rst", "reference/generated/pydicom.uid.ProcedureLogStorage.rst", "reference/generated/pydicom.uid.ProtocolApprovalStorage.rst", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.RE_VALID_UID.rst", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX.rst", "reference/generated/pydicom.uid.RLELossless.rst", "reference/generated/pydicom.uid.RLETransferSyntaxes.rst", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTDoseStorage.rst", "reference/generated/pydicom.uid.RTImageStorage.rst", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTIonPlanStorage.rst", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage.rst", "reference/generated/pydicom.uid.RTPhysicianIntentStorage.rst", "reference/generated/pydicom.uid.RTPlanStorage.rst", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage.rst", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetStorage.rst", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage.rst", "reference/generated/pydicom.uid.RTStructureSetStorage.rst", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage.rst", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.RawDataStorage.rst", "reference/generated/pydicom.uid.RealWorldValueMappingStorage.rst", "reference/generated/pydicom.uid.RespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.RoboticArmRadiationStorage.rst", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio.rst", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.SegmentationStorage.rst", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SpatialFiducialsStorage.rst", "reference/generated/pydicom.uid.SpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage.rst", "reference/generated/pydicom.uid.StereometricRelationshipStorage.rst", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.SurfaceScanMeshStorage.rst", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage.rst", "reference/generated/pydicom.uid.SurfaceSegmentationStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage.rst", "reference/generated/pydicom.uid.TractographyResultsStorage.rst", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage.rst", "reference/generated/pydicom.uid.UID.rst", "reference/generated/pydicom.uid.UltrasoundImageStorage.rst", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes.rst", "reference/generated/pydicom.uid.VLEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VLMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage.rst", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage.rst", "reference/generated/pydicom.uid.XRayAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pydicom.uid.generate_uid.rst", "reference/generated/pydicom.uid.register_transfer_syntax.rst", "reference/generated/pydicom.valuerep.DA.rst", "reference/generated/pydicom.valuerep.DS.rst", "reference/generated/pydicom.valuerep.DSdecimal.rst", "reference/generated/pydicom.valuerep.DSfloat.rst", "reference/generated/pydicom.valuerep.DT.rst", "reference/generated/pydicom.valuerep.IS.rst", "reference/generated/pydicom.valuerep.ISfloat.rst", "reference/generated/pydicom.valuerep.PersonName.rst", "reference/generated/pydicom.valuerep.TM.rst", "reference/generated/pydicom.valuerep.VR.rst", "reference/generated/pydicom.valuerep.format_number_as_ds.rst", "reference/generated/pydicom.valuerep.is_valid_ds.rst", "reference/generated/pydicom.values.convert_AE_string.rst", "reference/generated/pydicom.values.convert_ATvalue.rst", "reference/generated/pydicom.values.convert_DA_string.rst", "reference/generated/pydicom.values.convert_DS_string.rst", "reference/generated/pydicom.values.convert_DT_string.rst", "reference/generated/pydicom.values.convert_IS_string.rst", "reference/generated/pydicom.values.convert_OBvalue.rst", "reference/generated/pydicom.values.convert_OWvalue.rst", "reference/generated/pydicom.values.convert_PN.rst", "reference/generated/pydicom.values.convert_SQ.rst", "reference/generated/pydicom.values.convert_TM_string.rst", "reference/generated/pydicom.values.convert_UI.rst", "reference/generated/pydicom.values.convert_UN.rst", "reference/generated/pydicom.values.convert_UR_string.rst", "reference/generated/pydicom.values.convert_numbers.rst", "reference/generated/pydicom.values.convert_single_string.rst", "reference/generated/pydicom.values.convert_string.rst", "reference/generated/pydicom.values.convert_tag.rst", "reference/generated/pydicom.values.convert_text.rst", "reference/generated/pydicom.values.convert_value.rst", "reference/generated/pydicom.values.multi_string.rst", "reference/generated/pydicom.waveforms.numpy_handler.rst", "reference/handlers.rst", "reference/handlers.pixel_data.rst", "reference/index.rst", "reference/misc.rst", "reference/overlays.rst", "reference/pixels.rst", "reference/pixels.decoders.rst", "reference/pixels.encoders.rst", "reference/pixels.processing.rst", "reference/pixels.utils.rst", "reference/uid.rst", "reference/waveforms.rst", "release_notes/index.rst", "release_notes/v0.9.2.rst", "release_notes/v0.9.3.rst", "release_notes/v0.9.4.rst", "release_notes/v0.9.5.rst", "release_notes/v0.9.6.rst", "release_notes/v0.9.7.rst", "release_notes/v0.9.8.rst", "release_notes/v0.9.9.rst", "release_notes/v1.0.0.rst", "release_notes/v1.1.0.rst", "release_notes/v1.2.0.rst", "release_notes/v1.3.0.rst", "release_notes/v1.4.0.rst", "release_notes/v1.4.1.rst", "release_notes/v2.0.0.rst", "release_notes/v2.1.0.rst", "release_notes/v2.1.1.rst", "release_notes/v2.2.0.rst", "release_notes/v2.3.0.rst", "release_notes/v2.4.0.rst", "release_notes/v3.0.0.rst", "sg_execution_times.rst", "tutorials/contributing.rst", "tutorials/contributing_code.rst", "tutorials/contributing_docs.rst", "tutorials/dataset_basics.rst", "tutorials/dicom_json.rst", "tutorials/filesets.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/pixel_data/compressing.rst", "tutorials/sr_basics.rst", "tutorials/waveforms.rst"], "indexentries": {"__init__() (pydicom.dataelem.dataelement method)": [[127, "pydicom.dataelem.DataElement.__init__", false]], "__init__() (pydicom.dataelem.rawdataelement method)": [[129, "pydicom.dataelem.RawDataElement.__init__", false]], "__init__() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.__init__", false]], "__init__() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.__init__", false]], "__init__() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.__init__", false]], "__init__() (pydicom.dataset.privateblock method)": [[133, "pydicom.dataset.PrivateBlock.__init__", false]], "__init__() (pydicom.filebase.dicombytesio method)": [[154, "pydicom.filebase.DicomBytesIO.__init__", false]], "__init__() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.__init__", false]], "__init__() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.__init__", false]], "__init__() (pydicom.fileset.fileinstance method)": [[169, "pydicom.fileset.FileInstance.__init__", false]], "__init__() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.__init__", false]], "__init__() (pydicom.fileset.recordnode method)": [[171, "pydicom.fileset.RecordNode.__init__", false]], "__init__() (pydicom.multival.multivalue method)": [[203, "pydicom.multival.MultiValue.__init__", false]], "__init__() (pydicom.pixels.decoders.base.decoder method)": [[236, "pydicom.pixels.decoders.base.Decoder.__init__", false]], "__init__() (pydicom.pixels.decoders.base.decoderunner method)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.__init__", false]], "__init__() (pydicom.pixels.encoders.base.encoder method)": [[244, "pydicom.pixels.encoders.base.Encoder.__init__", false]], "__init__() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.__init__", false]], "__init__() (pydicom.sequence.sequence method)": [[272, "pydicom.sequence.Sequence.__init__", false]], "__init__() (pydicom.tag.basetag method)": [[273, "pydicom.tag.BaseTag.__init__", false]], "__init__() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.__init__", false]], "__init__() (pydicom.valuerep.da method)": [[515, "pydicom.valuerep.DA.__init__", false]], "__init__() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.__init__", false]], "__init__() (pydicom.valuerep.dsfloat method)": [[518, "pydicom.valuerep.DSfloat.__init__", false]], "__init__() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.__init__", false]], "__init__() (pydicom.valuerep.is method)": [[520, "pydicom.valuerep.IS.__init__", false]], "__init__() (pydicom.valuerep.isfloat method)": [[521, "pydicom.valuerep.ISfloat.__init__", false]], "__init__() (pydicom.valuerep.personname method)": [[522, "pydicom.valuerep.PersonName.__init__", false]], "__init__() (pydicom.valuerep.tm method)": [[523, "pydicom.valuerep.TM.__init__", false]], "__init__() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.__init__", false]], "absorb_delimiter_item() (in module pydicom.fileutil)": [[174, "pydicom.fileutil.absorb_delimiter_item", false]], "acquisitioncontextsrstorage (in module pydicom.uid)": [[277, "pydicom.uid.AcquisitionContextSRStorage", false]], "add() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.add", false]], "add() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.add", false]], "add() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.add", false]], "add() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.add", false]], "add() (pydicom.fileset.recordnode method)": [[171, "pydicom.fileset.RecordNode.add", false]], "add_custom() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.add_custom", false]], "add_dict_entries() (in module pydicom.datadict)": [[107, "pydicom.datadict.add_dict_entries", false]], "add_dict_entry() (in module pydicom.datadict)": [[108, "pydicom.datadict.add_dict_entry", false]], "add_new() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.add_new", false]], "add_new() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.add_new", false]], "add_new() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.add_new", false]], "add_new() (pydicom.dataset.privateblock method)": [[133, "pydicom.dataset.PrivateBlock.add_new", false]], "add_new_private() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.add_new_private", false]], "add_new_private() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.add_new_private", false]], "add_new_private() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.add_new_private", false]], "add_plugin() (pydicom.pixels.decoders.base.decoder method)": [[236, "pydicom.pixels.decoders.base.Decoder.add_plugin", false]], "add_plugin() (pydicom.pixels.encoders.base.encoder method)": [[244, "pydicom.pixels.encoders.base.Encoder.add_plugin", false]], "add_plugins() (pydicom.pixels.decoders.base.decoder method)": [[236, "pydicom.pixels.decoders.base.Decoder.add_plugins", false]], "add_plugins() (pydicom.pixels.encoders.base.encoder method)": [[244, "pydicom.pixels.encoders.base.Encoder.add_plugins", false]], "add_private_dict_entries() (in module pydicom.datadict)": [[109, "pydicom.datadict.add_private_dict_entries", false]], "add_private_dict_entry() (in module pydicom.datadict)": [[110, "pydicom.datadict.add_private_dict_entry", false]], "adjusted() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.adjusted", false]], "advancedblendingpresentationstatestorage (in module pydicom.uid)": [[278, "pydicom.uid.AdvancedBlendingPresentationStateStorage", false]], "allow_ds_float (in module pydicom.config)": [[87, "pydicom.config.allow_DS_float", false]], "alltransfersyntaxes (in module pydicom.uid)": [[279, "pydicom.uid.AllTransferSyntaxes", false]], "alphabetic (pydicom.valuerep.personname property)": [[522, "pydicom.valuerep.PersonName.alphabetic", false]], "ambulatoryecgwaveformstorage (in module pydicom.uid)": [[280, "pydicom.uid.AmbulatoryECGWaveformStorage", false]], "ancestors (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.ancestors", false]], "append() (pydicom.multival.multivalue method)": [[203, "pydicom.multival.MultiValue.append", false]], "append() (pydicom.sequence.sequence method)": [[272, "pydicom.sequence.Sequence.append", false]], "apply_color_lut() (in module pydicom.pixels)": [[211, "pydicom.pixels.apply_color_lut", false]], "apply_color_lut() (in module pydicom.pixels.processing)": [[250, "pydicom.pixels.processing.apply_color_lut", false]], "apply_j2k_corrections (in module pydicom.config)": [[79, "pydicom.config.APPLY_J2K_CORRECTIONS", false]], "apply_modality_lut() (in module pydicom.pixels)": [[212, "pydicom.pixels.apply_modality_lut", false]], "apply_modality_lut() (in module pydicom.pixels.processing)": [[251, "pydicom.pixels.processing.apply_modality_lut", false]], "apply_rescale() (in module pydicom.pixels.processing)": [[252, "pydicom.pixels.processing.apply_rescale", false]], "apply_voi() (in module pydicom.pixels)": [[213, "pydicom.pixels.apply_voi", false]], "apply_voi() (in module pydicom.pixels.processing)": [[253, "pydicom.pixels.processing.apply_voi", false]], "apply_voi_lut() (in module pydicom.pixels)": [[214, "pydicom.pixels.apply_voi_lut", false]], "apply_voi_lut() (in module pydicom.pixels.processing)": [[254, "pydicom.pixels.processing.apply_voi_lut", false]], "apply_windowing() (in module pydicom.pixels)": [[215, "pydicom.pixels.apply_windowing", false]], "apply_windowing() (in module pydicom.pixels.processing)": [[255, "pydicom.pixels.processing.apply_windowing", false]], "arterialpulsewaveformstorage (in module pydicom.uid)": [[281, "pydicom.uid.ArterialPulseWaveformStorage", false]], "as_array() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[209, "pydicom.pixel_data_handlers.pylibjpeg_handler.as_array", false]], "as_array() (pydicom.pixels.decoders.base.decoder method)": [[236, "pydicom.pixels.decoders.base.Decoder.as_array", false]], "as_buffer() (pydicom.pixels.decoders.base.decoder method)": [[236, "pydicom.pixels.decoders.base.Decoder.as_buffer", false]], "as_integer_ratio() (pydicom.tag.basetag method)": [[273, "pydicom.tag.BaseTag.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.dsfloat method)": [[518, "pydicom.valuerep.DSfloat.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.is method)": [[520, "pydicom.valuerep.IS.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.isfloat method)": [[521, "pydicom.valuerep.ISfloat.as_integer_ratio", false]], "as_pixel_options() (in module pydicom.pixels)": [[216, "pydicom.pixels.as_pixel_options", false]], "as_pixel_options() (in module pydicom.pixels.utils)": [[258, "pydicom.pixels.utils.as_pixel_options", false]], "as_tuple() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.as_tuple", false]], "assume_implicit_vr_switch (in module pydicom.config)": [[88, "pydicom.config.assume_implicit_vr_switch", false]], "astimezone() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.astimezone", false]], "autorefractionmeasurementsstorage (in module pydicom.uid)": [[282, "pydicom.uid.AutorefractionMeasurementsStorage", false]], "basetag (class in pydicom.tag)": [[273, "pydicom.tag.BaseTag", false]], "basicstructureddisplaystorage (in module pydicom.uid)": [[283, "pydicom.uid.BasicStructuredDisplayStorage", false]], "basictextsrstorage (in module pydicom.uid)": [[284, "pydicom.uid.BasicTextSRStorage", false]], "basicvoiceaudiowaveformstorage (in module pydicom.uid)": [[285, "pydicom.uid.BasicVoiceAudioWaveformStorage", false]], "bit_count() (pydicom.tag.basetag method)": [[273, "pydicom.tag.BaseTag.bit_count", false]], "bit_count() (pydicom.valuerep.is method)": [[520, "pydicom.valuerep.IS.bit_count", false]], "bit_length() (pydicom.tag.basetag method)": [[273, "pydicom.tag.BaseTag.bit_length", false]], "bit_length() (pydicom.valuerep.is method)": [[520, "pydicom.valuerep.IS.bit_length", false]], "bits_allocated (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.bits_allocated", false]], "bits_allocated (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.bits_allocated", false]], "bits_stored (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.bits_stored", false]], "bits_stored (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.bits_stored", false]], "blendingsoftcopypresentationstatestorage (in module pydicom.uid)": [[286, "pydicom.uid.BlendingSoftcopyPresentationStateStorage", false]], "block_start (pydicom.dataset.privateblock attribute)": [[133, "pydicom.dataset.PrivateBlock.block_start", false]], "bodypositionwaveformstorage (in module pydicom.uid)": [[287, "pydicom.uid.BodyPositionWaveformStorage", false]], "breastprojectionxrayimagestorageforpresentation (in module pydicom.uid)": [[288, "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", false]], "breastprojectionxrayimagestorageforprocessing (in module pydicom.uid)": [[289, "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", false]], "breasttomosynthesisimagestorage (in module pydicom.uid)": [[290, "pydicom.uid.BreastTomosynthesisImageStorage", false]], "canonical() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.canonical", false]], "capitalize() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.capitalize", false]], "capitalize() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.capitalize", false]], "cardiacelectrophysiologywaveformstorage (in module pydicom.uid)": [[296, "pydicom.uid.CardiacElectrophysiologyWaveformStorage", false]], "carmphotonelectronradiationrecordstorage (in module pydicom.uid)": [[291, "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", false]], "carmphotonelectronradiationstorage (in module pydicom.uid)": [[292, "pydicom.uid.CArmPhotonElectronRadiationStorage", false]], "casefold() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.casefold", false]], "casefold() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.casefold", false]], "center() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.center", false]], "center() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.center", false]], "chestcadsrstorage (in module pydicom.uid)": [[297, "pydicom.uid.ChestCADSRStorage", false]], "children (pydicom.fileset.recordnode attribute)": [[171, "pydicom.fileset.RecordNode.children", false]], "clear() (pydicom.dataelem.dataelement method)": [[127, "pydicom.dataelem.DataElement.clear", false]], "clear() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.clear", false]], "clear() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.clear", false]], "clear() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.clear", false]], "clear() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.clear", false]], "clear() (pydicom.multival.multivalue method)": [[203, "pydicom.multival.MultiValue.clear", false]], "clear() (pydicom.sequence.sequence method)": [[272, "pydicom.sequence.Sequence.clear", false]], "close() (pydicom.filebase.dicombytesio method)": [[154, "pydicom.filebase.DicomBytesIO.close", false]], "close() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.close", false]], "close() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.close", false]], "coloncadsrstorage (in module pydicom.uid)": [[298, "pydicom.uid.ColonCADSRStorage", false]], "colorpalettestorage (in module pydicom.uid)": [[299, "pydicom.uid.ColorPaletteStorage", false]], "colorsoftcopypresentationstatestorage (in module pydicom.uid)": [[300, "pydicom.uid.ColorSoftcopyPresentationStateStorage", false]], "columns (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.columns", false]], "columns (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.columns", false]], "combine() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.combine", false]], "compare() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.compare", false]], "compare_signal() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.compare_signal", false]], "compare_total() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.compare_total", false]], "compare_total_mag() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.compare_total_mag", false]], "component (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.component", false]], "components (pydicom.valuerep.personname property)": [[522, "pydicom.valuerep.PersonName.components", false]], "compositingplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[301, "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", false]], "comprehensive3dsrstorage (in module pydicom.uid)": [[302, "pydicom.uid.Comprehensive3DSRStorage", false]], "comprehensivesrstorage (in module pydicom.uid)": [[303, "pydicom.uid.ComprehensiveSRStorage", false]], "compress() (in module pydicom.pixels)": [[217, "pydicom.pixels.compress", false]], "compress() (in module pydicom.pixels.utils)": [[259, "pydicom.pixels.utils.compress", false]], "compress() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.compress", false]], "compress() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.compress", false]], "compress() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.compress", false]], "computedradiographyimagestorage (in module pydicom.uid)": [[304, "pydicom.uid.ComputedRadiographyImageStorage", false]], "confocalmicroscopyimagestorage (in module pydicom.uid)": [[305, "pydicom.uid.ConfocalMicroscopyImageStorage", false]], "confocalmicroscopytiledpyramidalimagestorage (in module pydicom.uid)": [[306, "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", false]], "conjugate() (pydicom.tag.basetag method)": [[273, "pydicom.tag.BaseTag.conjugate", false]], "conjugate() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.conjugate", false]], "conjugate() (pydicom.valuerep.dsfloat method)": [[518, "pydicom.valuerep.DSfloat.conjugate", false]], "conjugate() (pydicom.valuerep.is method)": [[520, "pydicom.valuerep.IS.conjugate", false]], "conjugate() (pydicom.valuerep.isfloat method)": [[521, "pydicom.valuerep.ISfloat.conjugate", false]], "contentassessmentresultsstorage (in module pydicom.uid)": [[307, "pydicom.uid.ContentAssessmentResultsStorage", false]], "convert_ae_string() (in module pydicom.values)": [[527, "pydicom.values.convert_AE_string", false]], "convert_atvalue() (in module pydicom.values)": [[528, "pydicom.values.convert_ATvalue", false]], "convert_color_space() (in module pydicom.pixels)": [[218, "pydicom.pixels.convert_color_space", false]], "convert_color_space() (in module pydicom.pixels.processing)": [[256, "pydicom.pixels.processing.convert_color_space", false]], "convert_da_string() (in module pydicom.values)": [[529, "pydicom.values.convert_DA_string", false]], "convert_ds_string() (in module pydicom.values)": [[530, "pydicom.values.convert_DS_string", false]], "convert_dt_string() (in module pydicom.values)": [[531, "pydicom.values.convert_DT_string", false]], "convert_encodings() (in module pydicom.charset)": [[75, "pydicom.charset.convert_encodings", false]], "convert_is_string() (in module pydicom.values)": [[532, "pydicom.values.convert_IS_string", false]], "convert_numbers() (in module pydicom.values)": [[541, "pydicom.values.convert_numbers", false]], "convert_obvalue() (in module pydicom.values)": [[533, "pydicom.values.convert_OBvalue", false]], "convert_owvalue() (in module pydicom.values)": [[534, "pydicom.values.convert_OWvalue", false]], "convert_pixel_data() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.convert_pixel_data", false]], "convert_pixel_data() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.convert_pixel_data", false]], "convert_pixel_data() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.convert_pixel_data", false]], "convert_pn() (in module pydicom.values)": [[535, "pydicom.values.convert_PN", false]], "convert_single_string() (in module pydicom.values)": [[542, "pydicom.values.convert_single_string", false]], "convert_sq() (in module pydicom.values)": [[536, "pydicom.values.convert_SQ", false]], "convert_string() (in module pydicom.values)": [[543, "pydicom.values.convert_string", false]], "convert_tag() (in module pydicom.values)": [[544, "pydicom.values.convert_tag", false]], "convert_text() (in module pydicom.values)": [[545, "pydicom.values.convert_text", false]], "convert_tm_string() (in module pydicom.values)": [[537, "pydicom.values.convert_TM_string", false]], "convert_ui() (in module pydicom.values)": [[538, "pydicom.values.convert_UI", false]], "convert_un() (in module pydicom.values)": [[539, "pydicom.values.convert_UN", false]], "convert_ur_string() (in module pydicom.values)": [[540, "pydicom.values.convert_UR_string", false]], "convert_value() (in module pydicom.values)": [[546, "pydicom.values.convert_value", false]], "convert_wrong_length_to_un (in module pydicom.config)": [[89, "pydicom.config.convert_wrong_length_to_UN", false]], "copy() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.copy", false]], "copy() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.copy", false]], "copy() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.copy", false]], "copy() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.copy", false]], "copy_abs() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.copy_abs", false]], "copy_negate() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.copy_negate", false]], "copy_sign() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.copy_sign", false]], "cornealtopographymapstorage (in module pydicom.uid)": [[308, "pydicom.uid.CornealTopographyMapStorage", false]], "correct_ambiguous_vr() (in module pydicom.filewriter)": [[179, "pydicom.filewriter.correct_ambiguous_vr", false]], "correct_ambiguous_vr_element() (in module pydicom.filewriter)": [[180, "pydicom.filewriter.correct_ambiguous_vr_element", false]], "count() (pydicom.dataelem.rawdataelement method)": [[129, "pydicom.dataelem.RawDataElement.count", false]], "count() (pydicom.multival.multivalue method)": [[203, "pydicom.multival.MultiValue.count", false]], "count() (pydicom.sequence.sequence method)": [[272, "pydicom.sequence.Sequence.count", false]], "count() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.count", false]], "count() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.count", false]], "create_data_element() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[205, "pydicom.pixel_data_handlers.gdcm_handler.create_data_element", false]], "create_image() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[205, "pydicom.pixel_data_handlers.gdcm_handler.create_image", false]], "ctdefinedprocedureprotocolstorage (in module pydicom.uid)": [[293, "pydicom.uid.CTDefinedProcedureProtocolStorage", false]], "ctimagestorage (in module pydicom.uid)": [[294, "pydicom.uid.CTImageStorage", false]], "ctime() (pydicom.valuerep.da method)": [[515, "pydicom.valuerep.DA.ctime", false]], "ctime() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.ctime", false]], "ctperformedprocedureprotocolstorage (in module pydicom.uid)": [[295, "pydicom.uid.CTPerformedProcedureProtocolStorage", false]], "da (class in pydicom.valuerep)": [[515, "pydicom.valuerep.DA", false]], "data_element() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.data_element", false]], "data_element() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.data_element", false]], "data_element() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.data_element", false]], "data_element_callback (in module pydicom.config)": [[90, "pydicom.config.data_element_callback", false]], "data_element_callback_kwargs (in module pydicom.config)": [[91, "pydicom.config.data_element_callback_kwargs", false]], "data_element_generator() (in module pydicom.filereader)": [[158, "pydicom.filereader.data_element_generator", false]], "data_element_offset_to_value() (in module pydicom.filereader)": [[159, "pydicom.filereader.data_element_offset_to_value", false]], "dataelement (class in pydicom.dataelem)": [[127, "pydicom.dataelem.DataElement", false]], "dataelement_from_raw() (in module pydicom.dataelem)": [[128, "pydicom.dataelem.DataElement_from_raw", false]], "dataset (class in pydicom.dataset)": [[130, "pydicom.dataset.Dataset", false]], "dataset (pydicom.dataset.privateblock attribute)": [[133, "pydicom.dataset.PrivateBlock.dataset", false]], "date() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.date", false]], "datetime_conversion (in module pydicom.config)": [[92, "pydicom.config.datetime_conversion", false]], "dcmread() (in module pydicom.filereader)": [[160, "pydicom.filereader.dcmread", false]], "dcmwrite() (in module pydicom.filewriter)": [[181, "pydicom.filewriter.dcmwrite", false]], "debug() (in module pydicom.config)": [[93, "pydicom.config.debug", false]], "decode() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.decode", false]], "decode() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.decode", false]], "decode() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.decode", false]], "decode() (pydicom.pixels.decoders.base.decoderunner method)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.decode", false]], "decode() (pydicom.valuerep.personname method)": [[522, "pydicom.valuerep.PersonName.decode", false]], "decode_bytes() (in module pydicom.charset)": [[76, "pydicom.charset.decode_bytes", false]], "decode_data_sequence() (in module pydicom.encaps)": [[135, "pydicom.encaps.decode_data_sequence", false]], "decode_element() (in module pydicom.charset)": [[77, "pydicom.charset.decode_element", false]], "decoder (class in pydicom.pixels.decoders.base)": [[236, "pydicom.pixels.decoders.base.Decoder", false]], "decoderunner (class in pydicom.pixels.decoders.base)": [[235, "pydicom.pixels.decoders.base.DecodeRunner", false]], "decompress() (in module pydicom.pixels)": [[237, "pydicom.pixels.decompress", false]], "decompress() (in module pydicom.pixels.utils)": [[260, "pydicom.pixels.utils.decompress", false]], "decompress() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.decompress", false]], "decompress() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.decompress", false]], "decompress() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.decompress", false]], "default_element_format (pydicom.dataset.dataset attribute)": [[130, "pydicom.dataset.Dataset.default_element_format", false]], "default_sequence_element_format (pydicom.dataset.dataset attribute)": [[130, "pydicom.dataset.Dataset.default_sequence_element_format", false]], "deflatedexplicitvrlittleendian (in module pydicom.uid)": [[316, "pydicom.uid.DeflatedExplicitVRLittleEndian", false]], "deflatedexplicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[219, "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", false]], "deformablespatialregistrationstorage (in module pydicom.uid)": [[317, "pydicom.uid.DeformableSpatialRegistrationStorage", false]], "defragment_data() (in module pydicom.encaps)": [[136, "pydicom.encaps.defragment_data", false]], "del_option() (pydicom.pixels.decoders.base.decoderunner method)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.del_option", false]], "del_option() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.del_option", false]], "denominator (pydicom.tag.basetag attribute)": [[273, "pydicom.tag.BaseTag.denominator", false]], "denominator (pydicom.valuerep.is attribute)": [[520, "pydicom.valuerep.IS.denominator", false]], "depth (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.depth", false]], "dermoscopicphotographyimagestorage (in module pydicom.uid)": [[318, "pydicom.uid.DermoscopicPhotographyImageStorage", false]], "descriptor_character_set (pydicom.fileset.fileset property)": [[170, "pydicom.fileset.FileSet.descriptor_character_set", false]], "descriptor_file_id (pydicom.fileset.fileset property)": [[170, "pydicom.fileset.FileSet.descriptor_file_id", false]], "descripwidth (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.descripWidth", false]], "dicombytesio (class in pydicom.filebase)": [[154, "pydicom.filebase.DicomBytesIO", false]], "dicomfile() (in module pydicom.filebase)": [[155, "pydicom.filebase.DicomFile", false]], "dicomfilelike (class in pydicom.filebase)": [[156, "pydicom.filebase.DicomFileLike", false]], "dicomio (class in pydicom.filebase)": [[157, "pydicom.filebase.DicomIO", false]], "dicos2daitstorage (in module pydicom.uid)": [[309, "pydicom.uid.DICOS2DAITStorage", false]], "dicos3daitstorage (in module pydicom.uid)": [[310, "pydicom.uid.DICOS3DAITStorage", false]], "dicosctimagestorage (in module pydicom.uid)": [[311, "pydicom.uid.DICOSCTImageStorage", false]], "dicosdigitalxrayimagestorageforpresentation (in module pydicom.uid)": [[312, "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", false]], "dicosdigitalxrayimagestorageforprocessing (in module pydicom.uid)": [[313, "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", false]], "dicosquadrupoleresonancestorage (in module pydicom.uid)": [[314, "pydicom.uid.DICOSQuadrupoleResonanceStorage", false]], "dicosthreatdetectionreportstorage (in module pydicom.uid)": [[315, "pydicom.uid.DICOSThreatDetectionReportStorage", false]], "dictionary_description() (in module pydicom.datadict)": [[113, "pydicom.datadict.dictionary_description", false]], "dictionary_has_tag() (in module pydicom.datadict)": [[114, "pydicom.datadict.dictionary_has_tag", false]], "dictionary_is_retired() (in module pydicom.datadict)": [[115, "pydicom.datadict.dictionary_is_retired", false]], "dictionary_keyword() (in module pydicom.datadict)": [[116, "pydicom.datadict.dictionary_keyword", false]], "dictionary_vm() (in module pydicom.datadict)": [[111, "pydicom.datadict.dictionary_VM", false]], "dictionary_vr() (in module pydicom.datadict)": [[112, "pydicom.datadict.dictionary_VR", false]], "digitalintraoralxrayimagestorageforpresentation (in module pydicom.uid)": [[319, "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", false]], "digitalintraoralxrayimagestorageforprocessing (in module pydicom.uid)": [[320, "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", false]], "digitalmammographyxrayimagestorageforpresentation (in module pydicom.uid)": [[321, "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", false]], "digitalmammographyxrayimagestorageforprocessing (in module pydicom.uid)": [[322, "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", false]], "digitalxrayimagestorageforpresentation (in module pydicom.uid)": [[323, "pydicom.uid.DigitalXRayImageStorageForPresentation", false]], "digitalxrayimagestorageforprocessing (in module pydicom.uid)": [[324, "pydicom.uid.DigitalXRayImageStorageForProcessing", false]], "dir() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.dir", false]], "dir() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.dir", false]], "dir() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.dir", false]], "directory_recorders (in module pydicom.fileset)": [[168, "pydicom.fileset.DIRECTORY_RECORDERS", false]], "ds() (in module pydicom.valuerep)": [[516, "pydicom.valuerep.DS", false]], "ds_decimal() (in module pydicom.config)": [[80, "pydicom.config.DS_decimal", false]], "ds_numpy() (in module pydicom.config)": [[81, "pydicom.config.DS_numpy", false]], "dsdecimal (class in pydicom.valuerep)": [[517, "pydicom.valuerep.DSdecimal", false]], "dsfloat (class in pydicom.valuerep)": [[518, "pydicom.valuerep.DSfloat", false]], "dst() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.dst", false]], "dst() (pydicom.valuerep.tm method)": [[523, "pydicom.valuerep.TM.dst", false]], "dt (class in pydicom.valuerep)": [[519, "pydicom.valuerep.DT", false]], "eddycurrentimagestorage (in module pydicom.uid)": [[325, "pydicom.uid.EddyCurrentImageStorage", false]], "eddycurrentmultiframeimagestorage (in module pydicom.uid)": [[326, "pydicom.uid.EddyCurrentMultiFrameImageStorage", false]], "electromyogramwaveformstorage (in module pydicom.uid)": [[327, "pydicom.uid.ElectromyogramWaveformStorage", false]], "electrooculogramwaveformstorage (in module pydicom.uid)": [[328, "pydicom.uid.ElectrooculogramWaveformStorage", false]], "elem (pydicom.tag.basetag property)": [[273, "pydicom.tag.BaseTag.elem", false]], "element (pydicom.tag.basetag property)": [[273, "pydicom.tag.BaseTag.element", false]], "elements() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.elements", false]], "elements() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.elements", false]], "elements() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.elements", false]], "empty_value (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.empty_value", false]], "encapsulate() (in module pydicom.encaps)": [[137, "pydicom.encaps.encapsulate", false]], "encapsulate_extended() (in module pydicom.encaps)": [[138, "pydicom.encaps.encapsulate_extended", false]], "encapsulatedcdastorage (in module pydicom.uid)": [[329, "pydicom.uid.EncapsulatedCDAStorage", false]], "encapsulatedmtlstorage (in module pydicom.uid)": [[330, "pydicom.uid.EncapsulatedMTLStorage", false]], "encapsulatedobjstorage (in module pydicom.uid)": [[331, "pydicom.uid.EncapsulatedOBJStorage", false]], "encapsulatedpdfstorage (in module pydicom.uid)": [[332, "pydicom.uid.EncapsulatedPDFStorage", false]], "encapsulatedstlstorage (in module pydicom.uid)": [[333, "pydicom.uid.EncapsulatedSTLStorage", false]], "encode() (pydicom.pixels.encoders.base.encoder method)": [[244, "pydicom.pixels.encoders.base.Encoder.encode", false]], "encode() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.encode", false]], "encode() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.encode", false]], "encode() (pydicom.valuerep.personname method)": [[522, "pydicom.valuerep.PersonName.encode", false]], "encode() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.encode", false]], "encode_string() (in module pydicom.charset)": [[78, "pydicom.charset.encode_string", false]], "encoder (class in pydicom.pixels.encoders.base)": [[244, "pydicom.pixels.encoders.base.Encoder", false]], "encoderunner (class in pydicom.pixels.encoders.base)": [[243, "pydicom.pixels.encoders.base.EncodeRunner", false]], "endswith() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.endswith", false]], "endswith() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.endswith", false]], "enforce_valid_values (in module pydicom.config)": [[94, "pydicom.config.enforce_valid_values", false]], "enhancedcontinuousrtimagestorage (in module pydicom.uid)": [[335, "pydicom.uid.EnhancedContinuousRTImageStorage", false]], "enhancedctimagestorage (in module pydicom.uid)": [[334, "pydicom.uid.EnhancedCTImageStorage", false]], "enhancedmrcolorimagestorage (in module pydicom.uid)": [[336, "pydicom.uid.EnhancedMRColorImageStorage", false]], "enhancedmrimagestorage (in module pydicom.uid)": [[337, "pydicom.uid.EnhancedMRImageStorage", false]], "enhancedpetimagestorage (in module pydicom.uid)": [[338, "pydicom.uid.EnhancedPETImageStorage", false]], "enhancedrtimagestorage (in module pydicom.uid)": [[339, "pydicom.uid.EnhancedRTImageStorage", false]], "enhancedsrstorage (in module pydicom.uid)": [[340, "pydicom.uid.EnhancedSRStorage", false]], "enhancedusvolumestorage (in module pydicom.uid)": [[341, "pydicom.uid.EnhancedUSVolumeStorage", false]], "enhancedxaimagestorage (in module pydicom.uid)": [[342, "pydicom.uid.EnhancedXAImageStorage", false]], "enhancedxrayradiationdosesrstorage (in module pydicom.uid)": [[344, "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", false]], "enhancedxrfimagestorage (in module pydicom.uid)": [[343, "pydicom.uid.EnhancedXRFImageStorage", false]], "ensure_file_meta() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.ensure_file_meta", false]], "ensure_file_meta() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.ensure_file_meta", false]], "ensure_file_meta() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.ensure_file_meta", false]], "exp() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.exp", false]], "expand_ybr422() (in module pydicom.pixels.utils)": [[261, "pydicom.pixels.utils.expand_ybr422", false]], "expandtabs() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.expandtabs", false]], "expandtabs() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.expandtabs", false]], "explicitvrbigendian (in module pydicom.uid)": [[345, "pydicom.uid.ExplicitVRBigEndian", false]], "explicitvrbigendiandecoder (in module pydicom.pixels.decoders)": [[220, "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", false]], "explicitvrlittleendian (in module pydicom.uid)": [[346, "pydicom.uid.ExplicitVRLittleEndian", false]], "explicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[221, "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", false]], "extend() (pydicom.multival.multivalue method)": [[203, "pydicom.multival.MultiValue.extend", false]], "extend() (pydicom.sequence.sequence method)": [[272, "pydicom.sequence.Sequence.extend", false]], "extended_offsets (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.extended_offsets", false]], "extended_offsets (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.extended_offsets", false]], "extensiblesrstorage (in module pydicom.uid)": [[347, "pydicom.uid.ExtensibleSRStorage", false]], "family_comma_given() (pydicom.valuerep.personname method)": [[522, "pydicom.valuerep.PersonName.family_comma_given", false]], "family_name (pydicom.valuerep.personname property)": [[522, "pydicom.valuerep.PersonName.family_name", false]], "file_meta (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.file_meta", false]], "file_set (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.file_set", false]], "file_set (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.file_set", false]], "filedataset (class in pydicom.dataset)": [[131, "pydicom.dataset.FileDataset", false]], "fileid (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.FileID", false]], "fileinstance (class in pydicom.fileset)": [[169, "pydicom.fileset.FileInstance", false]], "filemetadataset (class in pydicom.dataset)": [[132, "pydicom.dataset.FileMetaDataset", false]], "filename (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.filename", false]], "fileobj_type (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.fileobj_type", false]], "fileset (class in pydicom.fileset)": [[170, "pydicom.fileset.FileSet", false]], "find() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.find", false]], "find() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.find", false]], "find() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.find", false]], "find_bytes() (in module pydicom.fileutil)": [[175, "pydicom.fileutil.find_bytes", false]], "find_delimiter() (in module pydicom.fileutil)": [[176, "pydicom.fileutil.find_delimiter", false]], "find_values() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.find_values", false]], "fma() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.fma", false]], "for_addition (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.for_addition", false]], "for_moving (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.for_moving", false]], "for_removal (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.for_removal", false]], "format() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.format", false]], "format() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.format", false]], "format_map() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.format_map", false]], "format_map() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.format_map", false]], "format_number_as_ds() (in module pydicom.valuerep)": [[525, "pydicom.valuerep.format_number_as_ds", false]], "formatted() (pydicom.valuerep.personname method)": [[522, "pydicom.valuerep.PersonName.formatted", false]], "formatted_lines() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.formatted_lines", false]], "formatted_lines() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.formatted_lines", false]], "formatted_lines() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.formatted_lines", false]], "fragment_frame() (in module pydicom.encaps)": [[139, "pydicom.encaps.fragment_frame", false]], "frame_length() (pydicom.pixels.decoders.base.decoderunner method)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.frame_length", false]], "frame_length() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.frame_length", false]], "from_bytes() (pydicom.tag.basetag method)": [[273, "pydicom.tag.BaseTag.from_bytes", false]], "from_bytes() (pydicom.valuerep.is method)": [[520, "pydicom.valuerep.IS.from_bytes", false]], "from_float() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.from_float", false]], "from_json() (pydicom.dataelem.dataelement class method)": [[127, "pydicom.dataelem.DataElement.from_json", false]], "from_json() (pydicom.dataset.dataset class method)": [[130, "pydicom.dataset.Dataset.from_json", false]], "from_json() (pydicom.dataset.filedataset class method)": [[131, "pydicom.dataset.FileDataset.from_json", false]], "from_json() (pydicom.dataset.filemetadataset class method)": [[132, "pydicom.dataset.FileMetaDataset.from_json", false]], "from_named_components() (pydicom.valuerep.personname class method)": [[522, "pydicom.valuerep.PersonName.from_named_components", false]], "from_named_components_veterinary() (pydicom.valuerep.personname class method)": [[522, "pydicom.valuerep.PersonName.from_named_components_veterinary", false]], "fromhex() (pydicom.valuerep.dsfloat method)": [[518, "pydicom.valuerep.DSfloat.fromhex", false]], "fromhex() (pydicom.valuerep.isfloat method)": [[521, "pydicom.valuerep.ISfloat.fromhex", false]], "fromisocalendar() (pydicom.valuerep.da method)": [[515, "pydicom.valuerep.DA.fromisocalendar", false]], "fromisocalendar() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.fromisocalendar", false]], "fromisoformat() (pydicom.valuerep.da method)": [[515, "pydicom.valuerep.DA.fromisoformat", false]], "fromisoformat() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.fromisoformat", false]], "fromisoformat() (pydicom.valuerep.tm method)": [[523, "pydicom.valuerep.TM.fromisoformat", false]], "fromordinal() (pydicom.valuerep.da method)": [[515, "pydicom.valuerep.DA.fromordinal", false]], "fromordinal() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.fromordinal", false]], "fromtimestamp() (pydicom.valuerep.da method)": [[515, "pydicom.valuerep.DA.fromtimestamp", false]], "fromtimestamp() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.fromtimestamp", false]], "future_behavior() (in module pydicom.config)": [[95, "pydicom.config.future_behavior", false]], "general32bitecgwaveformstorage (in module pydicom.uid)": [[348, "pydicom.uid.General32bitECGWaveformStorage", false]], "generalaudiowaveformstorage (in module pydicom.uid)": [[349, "pydicom.uid.GeneralAudioWaveformStorage", false]], "generalecgwaveformstorage (in module pydicom.uid)": [[350, "pydicom.uid.GeneralECGWaveformStorage", false]], "generate_filename() (in module pydicom.fileset)": [[172, "pydicom.fileset.generate_filename", false]], "generate_fragmented_frames() (in module pydicom.encaps)": [[140, "pydicom.encaps.generate_fragmented_frames", false]], "generate_fragments() (in module pydicom.encaps)": [[141, "pydicom.encaps.generate_fragments", false]], "generate_frames() (in module pydicom.encaps)": [[142, "pydicom.encaps.generate_frames", false]], "generate_frames() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[209, "pydicom.pixel_data_handlers.pylibjpeg_handler.generate_frames", false]], "generate_multiplex() (in module pydicom.waveforms.numpy_handler)": [[548, "pydicom.waveforms.numpy_handler.generate_multiplex", false]], "generate_pixel_data() (in module pydicom.encaps)": [[143, "pydicom.encaps.generate_pixel_data", false]], "generate_pixel_data_fragment() (in module pydicom.encaps)": [[144, "pydicom.encaps.generate_pixel_data_fragment", false]], "generate_pixel_data_frame() (in module pydicom.encaps)": [[145, "pydicom.encaps.generate_pixel_data_frame", false]], "generate_uid() (in module pydicom.uid)": [[513, "pydicom.uid.generate_uid", false]], "genericimplanttemplatestorage (in module pydicom.uid)": [[351, "pydicom.uid.GenericImplantTemplateStorage", false]], "get() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.get", false]], "get() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.get", false]], "get() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.get", false]], "get_charset_files() (in module pydicom.data)": [[103, "pydicom.data.get_charset_files", false]], "get_data() (pydicom.pixels.decoders.base.decoderunner method)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.get_data", false]], "get_decoder() (in module pydicom.pixels)": [[245, "pydicom.pixels.get_decoder", false]], "get_encoder() (in module pydicom.pixels)": [[246, "pydicom.pixels.get_encoder", false]], "get_entry() (in module pydicom.datadict)": [[117, "pydicom.datadict.get_entry", false]], "get_expected_length() (in module pydicom.overlays.numpy_handler)": [[204, "pydicom.overlays.numpy_handler.get_expected_length", false]], "get_expected_length() (in module pydicom.pixels.utils)": [[262, "pydicom.pixels.utils.get_expected_length", false]], "get_frame() (in module pydicom.encaps)": [[146, "pydicom.encaps.get_frame", false]], "get_frame() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.get_frame", false]], "get_frame_offsets() (in module pydicom.encaps)": [[147, "pydicom.encaps.get_frame_offsets", false]], "get_image_pixel_ids() (in module pydicom.pixels.utils)": [[263, "pydicom.pixels.utils.get_image_pixel_ids", false]], "get_item() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.get_item", false]], "get_item() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.get_item", false]], "get_item() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.get_item", false]], "get_j2k_parameters() (in module pydicom.pixels.utils)": [[264, "pydicom.pixels.utils.get_j2k_parameters", false]], "get_nr_frames() (in module pydicom.pixels.utils)": [[265, "pydicom.pixels.utils.get_nr_frames", false]], "get_option() (pydicom.pixels.decoders.base.decoderunner method)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.get_option", false]], "get_option() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.get_option", false]], "get_overlay_array() (in module pydicom.overlays.numpy_handler)": [[204, "pydicom.overlays.numpy_handler.get_overlay_array", false]], "get_palette_files() (in module pydicom.data)": [[104, "pydicom.data.get_palette_files", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[205, "pydicom.pixel_data_handlers.gdcm_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[206, "pydicom.pixel_data_handlers.jpeg_ls_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.numpy_handler)": [[207, "pydicom.pixel_data_handlers.numpy_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pillow_handler)": [[208, "pydicom.pixel_data_handlers.pillow_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[209, "pydicom.pixel_data_handlers.pylibjpeg_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.rle_handler)": [[210, "pydicom.pixel_data_handlers.rle_handler.get_pixeldata", false]], "get_private_entry() (in module pydicom.datadict)": [[118, "pydicom.datadict.get_private_entry", false]], "get_private_item() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.get_private_item", false]], "get_private_item() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.get_private_item", false]], "get_private_item() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.get_private_item", false]], "get_tag() (pydicom.dataset.privateblock method)": [[133, "pydicom.dataset.PrivateBlock.get_tag", false]], "get_testdata_file() (in module pydicom.data)": [[105, "pydicom.data.get_testdata_file", false]], "get_testdata_files() (in module pydicom.data)": [[106, "pydicom.data.get_testdata_files", false]], "given_name (pydicom.valuerep.personname property)": [[522, "pydicom.valuerep.PersonName.given_name", false]], "grayscaleplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[352, "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", false]], "grayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[353, "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", false]], "group (pydicom.dataset.privateblock attribute)": [[133, "pydicom.dataset.PrivateBlock.group", false]], "group (pydicom.tag.basetag property)": [[273, "pydicom.tag.BaseTag.group", false]], "group_dataset() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.group_dataset", false]], "group_dataset() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.group_dataset", false]], "group_dataset() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.group_dataset", false]], "hangingprotocolstorage (in module pydicom.uid)": [[359, "pydicom.uid.HangingProtocolStorage", false]], "has_instance (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.has_instance", false]], "hemodynamicwaveformstorage (in module pydicom.uid)": [[360, "pydicom.uid.HemodynamicWaveformStorage", false]], "hevcm10p51 (in module pydicom.uid)": [[354, "pydicom.uid.HEVCM10P51", false]], "hevcmp51 (in module pydicom.uid)": [[355, "pydicom.uid.HEVCMP51", false]], "hex() (pydicom.valuerep.dsfloat method)": [[518, "pydicom.valuerep.DSfloat.hex", false]], "hex() (pydicom.valuerep.isfloat method)": [[521, "pydicom.valuerep.ISfloat.hex", false]], "htj2k (in module pydicom.uid)": [[356, "pydicom.uid.HTJ2K", false]], "htj2kdecoder (in module pydicom.pixels.decoders)": [[222, "pydicom.pixels.decoders.HTJ2KDecoder", false]], "htj2klossless (in module pydicom.uid)": [[357, "pydicom.uid.HTJ2KLossless", false]], "htj2klosslessdecoder (in module pydicom.pixels.decoders)": [[223, "pydicom.pixels.decoders.HTJ2KLosslessDecoder", false]], "htj2klosslessrpcl (in module pydicom.uid)": [[358, "pydicom.uid.HTJ2KLosslessRPCL", false]], "htj2klosslessrpcldecoder (in module pydicom.pixels.decoders)": [[224, "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", false]], "id (pydicom.fileset.fileset property)": [[170, "pydicom.fileset.FileSet.ID", false]], "ideographic (pydicom.valuerep.personname property)": [[522, "pydicom.valuerep.PersonName.ideographic", false]], "ignore (in module pydicom.config)": [[82, "pydicom.config.IGNORE", false]], "imag (pydicom.tag.basetag attribute)": [[273, "pydicom.tag.BaseTag.imag", false]], "imag (pydicom.valuerep.dsfloat attribute)": [[518, "pydicom.valuerep.DSfloat.imag", false]], "imag (pydicom.valuerep.is attribute)": [[520, "pydicom.valuerep.IS.imag", false]], "imag (pydicom.valuerep.isfloat attribute)": [[521, "pydicom.valuerep.ISfloat.imag", false]], "implantassemblytemplatestorage (in module pydicom.uid)": [[361, "pydicom.uid.ImplantAssemblyTemplateStorage", false]], "implantationplansrstorage (in module pydicom.uid)": [[363, "pydicom.uid.ImplantationPlanSRStorage", false]], "implanttemplategroupstorage (in module pydicom.uid)": [[362, "pydicom.uid.ImplantTemplateGroupStorage", false]], "implicitvrlittleendian (in module pydicom.uid)": [[364, "pydicom.uid.ImplicitVRLittleEndian", false]], "implicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[225, "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", false]], "indent_chars (pydicom.dataset.dataset attribute)": [[130, "pydicom.dataset.Dataset.indent_chars", false]], "index (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.index", false]], "index() (pydicom.dataelem.rawdataelement method)": [[129, "pydicom.dataelem.RawDataElement.index", false]], "index() (pydicom.multival.multivalue method)": [[203, "pydicom.multival.MultiValue.index", false]], "index() (pydicom.sequence.sequence method)": [[272, "pydicom.sequence.Sequence.index", false]], "index() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.index", false]], "index() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.index", false]], "infer_sq_for_un_vr (pydicom.config.settings property)": [[55, "pydicom.config.Settings.infer_sq_for_un_vr", false]], "info (pydicom.uid.uid property)": [[488, "pydicom.uid.UID.info", false]], "insert() (pydicom.multival.multivalue method)": [[203, "pydicom.multival.MultiValue.insert", false]], "insert() (pydicom.sequence.sequence method)": [[272, "pydicom.sequence.Sequence.insert", false]], "instance (pydicom.fileset.recordnode attribute)": [[171, "pydicom.fileset.RecordNode.instance", false]], "intraocularlenscalculationsstorage (in module pydicom.uid)": [[365, "pydicom.uid.IntraocularLensCalculationsStorage", false]], "intravascularopticalcoherencetomographyimagestorageforpresentation (in module pydicom.uid)": [[366, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", false]], "intravascularopticalcoherencetomographyimagestorageforprocessing (in module pydicom.uid)": [[367, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", false]], "invalid_key_behavior (in module pydicom.config)": [[84, "pydicom.config.INVALID_KEY_BEHAVIOR", false]], "invalid_keyword_behavior (in module pydicom.config)": [[83, "pydicom.config.INVALID_KEYWORD_BEHAVIOR", false]], "invaliddicomerror": [[153, "pydicom.errors.InvalidDicomError", false]], "inventorystorage (in module pydicom.uid)": [[368, "pydicom.uid.InventoryStorage", false]], "is (class in pydicom.valuerep)": [[520, "pydicom.valuerep.IS", false]], "is_array (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.is_array", false]], "is_array (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.is_array", false]], "is_available (pydicom.pixels.decoders.base.decoder property)": [[236, "pydicom.pixels.decoders.base.Decoder.is_available", false]], "is_available (pydicom.pixels.encoders.base.encoder property)": [[244, "pydicom.pixels.encoders.base.Encoder.is_available", false]], "is_available() (in module pydicom.overlays.numpy_handler)": [[204, "pydicom.overlays.numpy_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[205, "pydicom.pixel_data_handlers.gdcm_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[206, "pydicom.pixel_data_handlers.jpeg_ls_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.numpy_handler)": [[207, "pydicom.pixel_data_handlers.numpy_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.pillow_handler)": [[208, "pydicom.pixel_data_handlers.pillow_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[209, "pydicom.pixel_data_handlers.pylibjpeg_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.rle_handler)": [[210, "pydicom.pixel_data_handlers.rle_handler.is_available", false]], "is_available() (in module pydicom.waveforms.numpy_handler)": [[548, "pydicom.waveforms.numpy_handler.is_available", false]], "is_binary (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.is_binary", false]], "is_binary (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.is_binary", false]], "is_buffer (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.is_buffer", false]], "is_buffer (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.is_buffer", false]], "is_canonical() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.is_canonical", false]], "is_compressed (pydicom.uid.uid property)": [[488, "pydicom.uid.UID.is_compressed", false]], "is_conformant_file_id() (in module pydicom.fileset)": [[173, "pydicom.fileset.is_conformant_file_id", false]], "is_dataset (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.is_dataset", false]], "is_dataset (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.is_dataset", false]], "is_deflated (pydicom.uid.uid property)": [[488, "pydicom.uid.UID.is_deflated", false]], "is_dicom() (in module pydicom.misc)": [[201, "pydicom.misc.is_dicom", false]], "is_empty (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.is_empty", false]], "is_encapsulated (pydicom.pixels.decoders.base.decoder property)": [[236, "pydicom.pixels.decoders.base.Decoder.is_encapsulated", false]], "is_encapsulated (pydicom.pixels.encoders.base.encoder property)": [[244, "pydicom.pixels.encoders.base.Encoder.is_encapsulated", false]], "is_encapsulated (pydicom.uid.uid property)": [[488, "pydicom.uid.UID.is_encapsulated", false]], "is_finite() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.is_finite", false]], "is_implicit_vr (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.filedataset property)": [[131, "pydicom.dataset.FileDataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.filemetadataset property)": [[132, "pydicom.dataset.FileMetaDataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicombytesio property)": [[154, "pydicom.filebase.DicomBytesIO.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicomfilelike property)": [[156, "pydicom.filebase.DicomFileLike.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicomio property)": [[157, "pydicom.filebase.DicomIO.is_implicit_VR", false]], "is_implicit_vr (pydicom.uid.uid property)": [[488, "pydicom.uid.UID.is_implicit_VR", false]], "is_infinite() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.is_infinite", false]], "is_integer() (pydicom.valuerep.dsfloat method)": [[518, "pydicom.valuerep.DSfloat.is_integer", false]], "is_integer() (pydicom.valuerep.isfloat method)": [[521, "pydicom.valuerep.ISfloat.is_integer", false]], "is_little_endian (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.is_little_endian", false]], "is_little_endian (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.is_little_endian", false]], "is_little_endian (pydicom.dataset.filedataset property)": [[131, "pydicom.dataset.FileDataset.is_little_endian", false]], "is_little_endian (pydicom.dataset.filemetadataset property)": [[132, "pydicom.dataset.FileMetaDataset.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicombytesio property)": [[154, "pydicom.filebase.DicomBytesIO.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicomfilelike property)": [[156, "pydicom.filebase.DicomFileLike.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicomio property)": [[157, "pydicom.filebase.DicomIO.is_little_endian", false]], "is_little_endian (pydicom.uid.uid property)": [[488, "pydicom.uid.UID.is_little_endian", false]], "is_nan() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.is_nan", false]], "is_native (pydicom.pixels.decoders.base.decoder property)": [[236, "pydicom.pixels.decoders.base.Decoder.is_native", false]], "is_native (pydicom.pixels.encoders.base.encoder property)": [[244, "pydicom.pixels.encoders.base.Encoder.is_native", false]], "is_normal() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.is_normal", false]], "is_original_encoding (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.is_original_encoding", false]], "is_original_encoding (pydicom.dataset.filedataset property)": [[131, "pydicom.dataset.FileDataset.is_original_encoding", false]], "is_original_encoding (pydicom.dataset.filemetadataset property)": [[132, "pydicom.dataset.FileMetaDataset.is_original_encoding", false]], "is_private (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.is_private", false]], "is_private (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.is_private", false]], "is_private (pydicom.tag.basetag property)": [[273, "pydicom.tag.BaseTag.is_private", false]], "is_private (pydicom.uid.uid property)": [[488, "pydicom.uid.UID.is_private", false]], "is_private_creator (pydicom.tag.basetag property)": [[273, "pydicom.tag.BaseTag.is_private_creator", false]], "is_qnan() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.is_qnan", false]], "is_raw (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.is_raw", false]], "is_retired (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.is_retired", false]], "is_retired (pydicom.uid.uid property)": [[488, "pydicom.uid.UID.is_retired", false]], "is_root (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.is_root", false]], "is_signed() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.is_signed", false]], "is_snan() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.is_snan", false]], "is_staged (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.is_staged", false]], "is_staged (pydicom.fileset.fileset property)": [[170, "pydicom.fileset.FileSet.is_staged", false]], "is_subnormal() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.is_subnormal", false]], "is_transfer_syntax (pydicom.uid.uid property)": [[488, "pydicom.uid.UID.is_transfer_syntax", false]], "is_undefined_length (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.is_undefined_length", false]], "is_valid (pydicom.uid.uid property)": [[488, "pydicom.uid.UID.is_valid", false]], "is_valid_ds() (in module pydicom.valuerep)": [[526, "pydicom.valuerep.is_valid_ds", false]], "is_zero() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.is_zero", false]], "isalnum() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.isalnum", false]], "isalnum() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.isalnum", false]], "isalpha() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.isalpha", false]], "isalpha() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.isalpha", false]], "isascii() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.isascii", false]], "isascii() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.isascii", false]], "isdecimal() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.isdecimal", false]], "isdecimal() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.isdecimal", false]], "isdigit() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.isdigit", false]], "isdigit() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.isdigit", false]], "isfloat (class in pydicom.valuerep)": [[521, "pydicom.valuerep.ISfloat", false]], "isidentifier() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.isidentifier", false]], "isidentifier() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.isidentifier", false]], "islower() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.islower", false]], "islower() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.islower", false]], "isnumeric() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.isnumeric", false]], "isnumeric() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.isnumeric", false]], "isocalendar() (pydicom.valuerep.da method)": [[515, "pydicom.valuerep.DA.isocalendar", false]], "isocalendar() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.isocalendar", false]], "isoformat() (pydicom.valuerep.da method)": [[515, "pydicom.valuerep.DA.isoformat", false]], "isoformat() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.isoformat", false]], "isoformat() (pydicom.valuerep.tm method)": [[523, "pydicom.valuerep.TM.isoformat", false]], "isoweekday() (pydicom.valuerep.da method)": [[515, "pydicom.valuerep.DA.isoweekday", false]], "isoweekday() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.isoweekday", false]], "isprintable() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.isprintable", false]], "isprintable() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.isprintable", false]], "isspace() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.isspace", false]], "isspace() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.isspace", false]], "istitle() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.istitle", false]], "istitle() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.istitle", false]], "isupper() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.isupper", false]], "isupper() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.isupper", false]], "itemize_fragment() (in module pydicom.encaps)": [[148, "pydicom.encaps.itemize_fragment", false]], "itemize_frame() (in module pydicom.encaps)": [[149, "pydicom.encaps.itemize_frame", false]], "items() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.items", false]], "items() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.items", false]], "items() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.items", false]], "iter_array() (pydicom.pixels.decoders.base.decoder method)": [[236, "pydicom.pixels.decoders.base.Decoder.iter_array", false]], "iter_buffer() (pydicom.pixels.decoders.base.decoder method)": [[236, "pydicom.pixels.decoders.base.Decoder.iter_buffer", false]], "iter_decode() (pydicom.pixels.decoders.base.decoderunner method)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.iter_decode", false]], "iter_encode() (pydicom.pixels.encoders.base.encoder method)": [[244, "pydicom.pixels.encoders.base.Encoder.iter_encode", false]], "iter_pixels() (in module pydicom.pixels)": [[247, "pydicom.pixels.iter_pixels", false]], "iter_pixels() (in module pydicom.pixels.utils)": [[266, "pydicom.pixels.utils.iter_pixels", false]], "iterall() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.iterall", false]], "iterall() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.iterall", false]], "iterall() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.iterall", false]], "join() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.join", false]], "join() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.join", false]], "jpeg2000 (in module pydicom.uid)": [[369, "pydicom.uid.JPEG2000", false]], "jpeg2000decoder (in module pydicom.pixels.decoders)": [[226, "pydicom.pixels.decoders.JPEG2000Decoder", false]], "jpeg2000encoder (in module pydicom.pixels.encoders)": [[238, "pydicom.pixels.encoders.JPEG2000Encoder", false]], "jpeg2000lossless (in module pydicom.uid)": [[370, "pydicom.uid.JPEG2000Lossless", false]], "jpeg2000losslessdecoder (in module pydicom.pixels.decoders)": [[227, "pydicom.pixels.decoders.JPEG2000LosslessDecoder", false]], "jpeg2000losslessencoder (in module pydicom.pixels.encoders)": [[239, "pydicom.pixels.encoders.JPEG2000LosslessEncoder", false]], "jpeg2000mc (in module pydicom.uid)": [[371, "pydicom.uid.JPEG2000MC", false]], "jpeg2000mclossless (in module pydicom.uid)": [[372, "pydicom.uid.JPEG2000MCLossless", false]], "jpeg2000transfersyntaxes (in module pydicom.uid)": [[373, "pydicom.uid.JPEG2000TransferSyntaxes", false]], "jpegbaseline8bit (in module pydicom.uid)": [[374, "pydicom.uid.JPEGBaseline8Bit", false]], "jpegbaseline8bitdecoder (in module pydicom.pixels.decoders)": [[228, "pydicom.pixels.decoders.JPEGBaseline8BitDecoder", false]], "jpegextended12bit (in module pydicom.uid)": [[375, "pydicom.uid.JPEGExtended12Bit", false]], "jpegextended12bitdecoder (in module pydicom.pixels.decoders)": [[229, "pydicom.pixels.decoders.JPEGExtended12BitDecoder", false]], "jpeglossless (in module pydicom.uid)": [[379, "pydicom.uid.JPEGLossless", false]], "jpeglosslessdecoder (in module pydicom.pixels.decoders)": [[232, "pydicom.pixels.decoders.JPEGLosslessDecoder", false]], "jpeglosslesssv1 (in module pydicom.uid)": [[380, "pydicom.uid.JPEGLosslessSV1", false]], "jpeglosslesssv1decoder (in module pydicom.pixels.decoders)": [[233, "pydicom.pixels.decoders.JPEGLosslessSV1Decoder", false]], "jpeglslossless (in module pydicom.uid)": [[376, "pydicom.uid.JPEGLSLossless", false]], "jpeglslosslessdecoder (in module pydicom.pixels.decoders)": [[230, "pydicom.pixels.decoders.JPEGLSLosslessDecoder", false]], "jpeglslosslessencoder (in module pydicom.pixels.encoders)": [[240, "pydicom.pixels.encoders.JPEGLSLosslessEncoder", false]], "jpeglsnearlossless (in module pydicom.uid)": [[377, "pydicom.uid.JPEGLSNearLossless", false]], "jpeglsnearlosslessdecoder (in module pydicom.pixels.decoders)": [[231, "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", false]], "jpeglsnearlosslessencoder (in module pydicom.pixels.encoders)": [[241, "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", false]], "jpeglstransfersyntaxes (in module pydicom.uid)": [[378, "pydicom.uid.JPEGLSTransferSyntaxes", false]], "jpegtransfersyntaxes (in module pydicom.uid)": [[381, "pydicom.uid.JPEGTransferSyntaxes", false]], "jpiphtj2kreferenced (in module pydicom.uid)": [[382, "pydicom.uid.JPIPHTJ2KReferenced", false]], "jpiphtj2kreferenceddeflate (in module pydicom.uid)": [[383, "pydicom.uid.JPIPHTJ2KReferencedDeflate", false]], "json_key (pydicom.tag.basetag property)": [[273, "pydicom.tag.BaseTag.json_key", false]], "keratometrymeasurementsstorage (in module pydicom.uid)": [[384, "pydicom.uid.KeratometryMeasurementsStorage", false]], "key (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.key", false]], "keyobjectselectiondocumentstorage (in module pydicom.uid)": [[385, "pydicom.uid.KeyObjectSelectionDocumentStorage", false]], "keys() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.keys", false]], "keys() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.keys", false]], "keys() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.keys", false]], "keyword (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.keyword", false]], "keyword (pydicom.uid.uid property)": [[488, "pydicom.uid.UID.keyword", false]], "keyword_for_tag() (in module pydicom.datadict)": [[119, "pydicom.datadict.keyword_for_tag", false]], "legacyconvertedenhancedctimagestorage (in module pydicom.uid)": [[386, "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", false]], "legacyconvertedenhancedmrimagestorage (in module pydicom.uid)": [[387, "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", false]], "legacyconvertedenhancedpetimagestorage (in module pydicom.uid)": [[388, "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", false]], "length (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.length", false]], "length_of_undefined_length() (in module pydicom.fileutil)": [[177, "pydicom.fileutil.length_of_undefined_length", false]], "lensometrymeasurementsstorage (in module pydicom.uid)": [[389, "pydicom.uid.LensometryMeasurementsStorage", false]], "ljust() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.ljust", false]], "ljust() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.ljust", false]], "ln() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.ln", false]], "load() (pydicom.fileset.fileinstance method)": [[169, "pydicom.fileset.FileInstance.load", false]], "load() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.load", false]], "log10() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.log10", false]], "logb() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.logb", false]], "logical_and() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.logical_and", false]], "logical_invert() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.logical_invert", false]], "logical_or() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.logical_or", false]], "logical_xor() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.logical_xor", false]], "lower() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.lower", false]], "lower() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.lower", false]], "lstrip() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.lstrip", false]], "lstrip() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.lstrip", false]], "maculargridthicknessandvolumereportstorage (in module pydicom.uid)": [[407, "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", false]], "maketrans() (pydicom.uid.uid static method)": [[488, "pydicom.uid.UID.maketrans", false]], "maketrans() (pydicom.valuerep.vr static method)": [[524, "pydicom.valuerep.VR.maketrans", false]], "mammographycadsrstorage (in module pydicom.uid)": [[408, "pydicom.uid.MammographyCADSRStorage", false]], "mask_match() (in module pydicom.datadict)": [[120, "pydicom.datadict.mask_match", false]], "max() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.max", false]], "max_mag() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.max_mag", false]], "maxbytestodisplay (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.maxBytesToDisplay", false]], "mediastoragedirectorystorage (in module pydicom.uid)": [[409, "pydicom.uid.MediaStorageDirectoryStorage", false]], "microscopybulksimpleannotationsstorage (in module pydicom.uid)": [[410, "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", false]], "middle_name (pydicom.valuerep.personname property)": [[522, "pydicom.valuerep.PersonName.middle_name", false]], "min() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.min", false]], "min_mag() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.min_mag", false]], "missing_dependencies (pydicom.pixels.decoders.base.decoder property)": [[236, "pydicom.pixels.decoders.base.Decoder.missing_dependencies", false]], "missing_dependencies (pydicom.pixels.encoders.base.encoder property)": [[244, "pydicom.pixels.encoders.base.Encoder.missing_dependencies", false]], "module": [[66, "module-pydicom.encaps", false], [204, "module-pydicom.overlays.numpy_handler", false], [205, "module-pydicom.pixel_data_handlers.gdcm_handler", false], [206, "module-pydicom.pixel_data_handlers.jpeg_ls_handler", false], [207, "module-pydicom.pixel_data_handlers.numpy_handler", false], [208, "module-pydicom.pixel_data_handlers.pillow_handler", false], [209, "module-pydicom.pixel_data_handlers.pylibjpeg_handler", false], [210, "module-pydicom.pixel_data_handlers.rle_handler", false], [548, "module-pydicom.waveforms.numpy_handler", false], [550, "module-pydicom.pixel_data_handlers", false], [551, "module-pydicom", false], [553, "module-pydicom.overlays", false], [554, "module-pydicom.pixels", false], [555, "module-pydicom.pixels.decoders", false], [556, "module-pydicom.pixels.encoders", false], [557, "module-pydicom.pixels.processing", false], [558, "module-pydicom.pixels.utils", false], [559, "module-pydicom.uid", false], [560, "module-pydicom.waveforms", false]], "mpeg2mphl (in module pydicom.uid)": [[390, "pydicom.uid.MPEG2MPHL", false]], "mpeg2mphlf (in module pydicom.uid)": [[391, "pydicom.uid.MPEG2MPHLF", false]], "mpeg2mpml (in module pydicom.uid)": [[392, "pydicom.uid.MPEG2MPML", false]], "mpeg2mpmlf (in module pydicom.uid)": [[393, "pydicom.uid.MPEG2MPMLF", false]], "mpeg4hp41 (in module pydicom.uid)": [[394, "pydicom.uid.MPEG4HP41", false]], "mpeg4hp41bd (in module pydicom.uid)": [[395, "pydicom.uid.MPEG4HP41BD", false]], "mpeg4hp41bdf (in module pydicom.uid)": [[396, "pydicom.uid.MPEG4HP41BDF", false]], "mpeg4hp41f (in module pydicom.uid)": [[397, "pydicom.uid.MPEG4HP41F", false]], "mpeg4hp422d (in module pydicom.uid)": [[398, "pydicom.uid.MPEG4HP422D", false]], "mpeg4hp422df (in module pydicom.uid)": [[399, "pydicom.uid.MPEG4HP422DF", false]], "mpeg4hp423d (in module pydicom.uid)": [[400, "pydicom.uid.MPEG4HP423D", false]], "mpeg4hp423df (in module pydicom.uid)": [[401, "pydicom.uid.MPEG4HP423DF", false]], "mpeg4hp42stereo (in module pydicom.uid)": [[402, "pydicom.uid.MPEG4HP42STEREO", false]], "mpeg4hp42stereof (in module pydicom.uid)": [[403, "pydicom.uid.MPEG4HP42STEREOF", false]], "mpegtransfersyntaxes (in module pydicom.uid)": [[404, "pydicom.uid.MPEGTransferSyntaxes", false]], "mrimagestorage (in module pydicom.uid)": [[405, "pydicom.uid.MRImageStorage", false]], "mrspectroscopystorage (in module pydicom.uid)": [[406, "pydicom.uid.MRSpectroscopyStorage", false]], "multi_string() (in module pydicom.filewriter)": [[182, "pydicom.filewriter.multi_string", false]], "multi_string() (in module pydicom.values)": [[547, "pydicom.values.multi_string", false]], "multichannelrespiratorywaveformstorage (in module pydicom.uid)": [[415, "pydicom.uid.MultichannelRespiratoryWaveformStorage", false]], "multiframegrayscalebytesecondarycaptureimagestorage (in module pydicom.uid)": [[411, "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", false]], "multiframegrayscalewordsecondarycaptureimagestorage (in module pydicom.uid)": [[412, "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", false]], "multiframesinglebitsecondarycaptureimagestorage (in module pydicom.uid)": [[413, "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", false]], "multiframetruecolorsecondarycaptureimagestorage (in module pydicom.uid)": [[414, "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", false]], "multiplevolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[416, "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", false]], "multiplex_array() (in module pydicom.waveforms.numpy_handler)": [[548, "pydicom.waveforms.numpy_handler.multiplex_array", false]], "multivalue (class in pydicom.multival)": [[203, "pydicom.multival.MultiValue", false]], "name (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.name", false]], "name (pydicom.filebase.dicombytesio property)": [[154, "pydicom.filebase.DicomBytesIO.name", false]], "name (pydicom.filebase.dicomfilelike property)": [[156, "pydicom.filebase.DicomFileLike.name", false]], "name (pydicom.filebase.dicomio property)": [[157, "pydicom.filebase.DicomIO.name", false]], "name (pydicom.uid.uid property)": [[488, "pydicom.uid.UID.name", false]], "name_prefix (pydicom.valuerep.personname property)": [[522, "pydicom.valuerep.PersonName.name_prefix", false]], "name_suffix (pydicom.valuerep.personname property)": [[522, "pydicom.valuerep.PersonName.name_suffix", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[205, "pydicom.pixel_data_handlers.gdcm_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[206, "pydicom.pixel_data_handlers.jpeg_ls_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[207, "pydicom.pixel_data_handlers.numpy_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[208, "pydicom.pixel_data_handlers.pillow_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[209, "pydicom.pixel_data_handlers.pylibjpeg_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[210, "pydicom.pixel_data_handlers.rle_handler.needs_to_convert_to_RGB", false]], "next (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.next", false]], "next_minus() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.next_minus", false]], "next_plus() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.next_plus", false]], "next_toward() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.next_toward", false]], "node (pydicom.fileset.fileinstance attribute)": [[169, "pydicom.fileset.FileInstance.node", false]], "normalize() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.normalize", false]], "now() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.now", false]], "nuclearmedicineimagestorage (in module pydicom.uid)": [[417, "pydicom.uid.NuclearMedicineImageStorage", false]], "number_class() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.number_class", false]], "number_of_frames (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.number_of_frames", false]], "number_of_frames (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.number_of_frames", false]], "numerator (pydicom.tag.basetag attribute)": [[273, "pydicom.tag.BaseTag.numerator", false]], "numerator (pydicom.valuerep.is attribute)": [[520, "pydicom.valuerep.IS.numerator", false]], "ophthalmicaxialmeasurementsstorage (in module pydicom.uid)": [[418, "pydicom.uid.OphthalmicAxialMeasurementsStorage", false]], "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage (in module pydicom.uid)": [[419, "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", false]], "ophthalmicopticalcoherencetomographyenfaceimagestorage (in module pydicom.uid)": [[420, "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", false]], "ophthalmicphotography16bitimagestorage (in module pydicom.uid)": [[421, "pydicom.uid.OphthalmicPhotography16BitImageStorage", false]], "ophthalmicphotography8bitimagestorage (in module pydicom.uid)": [[422, "pydicom.uid.OphthalmicPhotography8BitImageStorage", false]], "ophthalmicthicknessmapstorage (in module pydicom.uid)": [[423, "pydicom.uid.OphthalmicThicknessMapStorage", false]], "ophthalmictomographyimagestorage (in module pydicom.uid)": [[424, "pydicom.uid.OphthalmicTomographyImageStorage", false]], "ophthalmicvisualfieldstaticperimetrymeasurementsstorage (in module pydicom.uid)": [[425, "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", false]], "options (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.options", false]], "options (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.options", false]], "original_character_set (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.original_character_set", false]], "original_character_set (pydicom.dataset.filedataset property)": [[131, "pydicom.dataset.FileDataset.original_character_set", false]], "original_character_set (pydicom.dataset.filemetadataset property)": [[132, "pydicom.dataset.FileMetaDataset.original_character_set", false]], "original_encoding (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.original_encoding", false]], "original_encoding (pydicom.dataset.filedataset property)": [[131, "pydicom.dataset.FileDataset.original_encoding", false]], "original_encoding (pydicom.dataset.filemetadataset property)": [[132, "pydicom.dataset.FileMetaDataset.original_encoding", false]], "overlay_array() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.overlay_array", false]], "overlay_array() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.overlay_array", false]], "overlay_array() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.overlay_array", false]], "pack_bits() (in module pydicom.pixels)": [[248, "pydicom.pixels.pack_bits", false]], "pack_bits() (in module pydicom.pixels.utils)": [[267, "pydicom.pixels.utils.pack_bits", false]], "parametricmapstorage (in module pydicom.uid)": [[428, "pydicom.uid.ParametricMapStorage", false]], "parent (pydicom.filebase.dicombytesio property)": [[154, "pydicom.filebase.DicomBytesIO.parent", false]], "parent (pydicom.filebase.dicomfilelike property)": [[156, "pydicom.filebase.DicomFileLike.parent", false]], "parent (pydicom.filebase.dicomio property)": [[157, "pydicom.filebase.DicomIO.parent", false]], "parent (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.parent", false]], "parse_basic_offsets() (in module pydicom.encaps)": [[150, "pydicom.encaps.parse_basic_offsets", false]], "parse_fragments() (in module pydicom.encaps)": [[151, "pydicom.encaps.parse_fragments", false]], "partition() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.partition", false]], "partition() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.partition", false]], "path (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.path", false]], "path (pydicom.fileset.fileset property)": [[170, "pydicom.fileset.FileSet.path", false]], "patientradiationdosesrstorage (in module pydicom.uid)": [[429, "pydicom.uid.PatientRadiationDoseSRStorage", false]], "performedimagingagentadministrationsrstorage (in module pydicom.uid)": [[430, "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", false]], "personname (class in pydicom.valuerep)": [[522, "pydicom.valuerep.PersonName", false]], "phonetic (pydicom.valuerep.personname property)": [[522, "pydicom.valuerep.PersonName.phonetic", false]], "photoacousticimagestorage (in module pydicom.uid)": [[431, "pydicom.uid.PhotoacousticImageStorage", false]], "photometric_interpretation (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.photometric_interpretation", false]], "photometric_interpretation (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.photometric_interpretation", false]], "pixel_array (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.pixel_array", false]], "pixel_array (pydicom.dataset.filedataset property)": [[131, "pydicom.dataset.FileDataset.pixel_array", false]], "pixel_array (pydicom.dataset.filemetadataset property)": [[132, "pydicom.dataset.FileMetaDataset.pixel_array", false]], "pixel_array() (in module pydicom.pixels)": [[249, "pydicom.pixels.pixel_array", false]], "pixel_array() (in module pydicom.pixels.utils)": [[268, "pydicom.pixels.utils.pixel_array", false]], "pixel_array_options() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.pixel_array_options", false]], "pixel_array_options() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.pixel_array_options", false]], "pixel_array_options() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.pixel_array_options", false]], "pixel_data_handlers (in module pydicom.config)": [[96, "pydicom.config.pixel_data_handlers", false]], "pixel_dtype (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.pixel_dtype", false]], "pixel_dtype() (in module pydicom.pixels.utils)": [[269, "pydicom.pixels.utils.pixel_dtype", false]], "pixel_keyword (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.pixel_keyword", false]], "pixel_keyword (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.pixel_keyword", false]], "pixel_properties() (pydicom.pixels.decoders.base.decoderunner method)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.pixel_properties", false]], "pixel_representation (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.pixel_representation", false]], "pixel_representation (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.pixel_representation", false]], "planar_configuration (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.planar_configuration", false]], "planar_configuration (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.planar_configuration", false]], "plannedimagingagentadministrationsrstorage (in module pydicom.uid)": [[432, "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", false]], "pop() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.pop", false]], "pop() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.pop", false]], "pop() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.pop", false]], "pop() (pydicom.multival.multivalue method)": [[203, "pydicom.multival.MultiValue.pop", false]], "pop() (pydicom.sequence.sequence method)": [[272, "pydicom.sequence.Sequence.pop", false]], "popitem() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.popitem", false]], "popitem() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.popitem", false]], "popitem() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.popitem", false]], "positronemissiontomographyimagestorage (in module pydicom.uid)": [[433, "pydicom.uid.PositronEmissionTomographyImageStorage", false]], "preamble (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.preamble", false]], "prettify() (pydicom.fileset.recordnode method)": [[171, "pydicom.fileset.RecordNode.prettify", false]], "previous (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.previous", false]], "private_block() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.private_block", false]], "private_block() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.private_block", false]], "private_block() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.private_block", false]], "private_creator (pydicom.dataset.privateblock attribute)": [[133, "pydicom.dataset.PrivateBlock.private_creator", false]], "private_creator (pydicom.tag.basetag property)": [[273, "pydicom.tag.BaseTag.private_creator", false]], "private_creators() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.private_creators", false]], "private_creators() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.private_creators", false]], "private_creators() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.private_creators", false]], "private_dictionary_description() (in module pydicom.datadict)": [[123, "pydicom.datadict.private_dictionary_description", false]], "private_dictionary_vm() (in module pydicom.datadict)": [[121, "pydicom.datadict.private_dictionary_VM", false]], "private_dictionary_vr() (in module pydicom.datadict)": [[122, "pydicom.datadict.private_dictionary_VR", false]], "privateblock (class in pydicom.dataset)": [[133, "pydicom.dataset.PrivateBlock", false]], "privatetransfersyntaxes (in module pydicom.uid)": [[434, "pydicom.uid.PrivateTransferSyntaxes", false]], "procedurelogstorage (in module pydicom.uid)": [[435, "pydicom.uid.ProcedureLogStorage", false]], "process() (pydicom.pixels.decoders.base.decoderunner method)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.process", false]], "protocolapprovalstorage (in module pydicom.uid)": [[436, "pydicom.uid.ProtocolApprovalStorage", false]], "pseudocolorsoftcopypresentationstatestorage (in module pydicom.uid)": [[437, "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", false]], "pydicom": [[551, "module-pydicom", false]], "pydicom.encaps": [[66, "module-pydicom.encaps", false]], "pydicom.overlays": [[553, "module-pydicom.overlays", false]], "pydicom.overlays.numpy_handler": [[204, "module-pydicom.overlays.numpy_handler", false]], "pydicom.pixel_data_handlers": [[550, "module-pydicom.pixel_data_handlers", false]], "pydicom.pixel_data_handlers.gdcm_handler": [[205, "module-pydicom.pixel_data_handlers.gdcm_handler", false]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[206, "module-pydicom.pixel_data_handlers.jpeg_ls_handler", false]], "pydicom.pixel_data_handlers.numpy_handler": [[207, "module-pydicom.pixel_data_handlers.numpy_handler", false]], "pydicom.pixel_data_handlers.pillow_handler": [[208, "module-pydicom.pixel_data_handlers.pillow_handler", false]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[209, "module-pydicom.pixel_data_handlers.pylibjpeg_handler", false]], "pydicom.pixel_data_handlers.rle_handler": [[210, "module-pydicom.pixel_data_handlers.rle_handler", false]], "pydicom.pixels": [[554, "module-pydicom.pixels", false]], "pydicom.pixels.decoders": [[555, "module-pydicom.pixels.decoders", false]], "pydicom.pixels.encoders": [[556, "module-pydicom.pixels.encoders", false]], "pydicom.pixels.processing": [[557, "module-pydicom.pixels.processing", false]], "pydicom.pixels.utils": [[558, "module-pydicom.pixels.utils", false]], "pydicom.uid": [[559, "module-pydicom.uid", false]], "pydicom.waveforms": [[560, "module-pydicom.waveforms", false]], "pydicom.waveforms.numpy_handler": [[548, "module-pydicom.waveforms.numpy_handler", false]], "pydicom_implementation_uid (in module pydicom.uid)": [[426, "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", false]], "pydicom_root_uid (in module pydicom.uid)": [[427, "pydicom.uid.PYDICOM_ROOT_UID", false]], "quantize() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.quantize", false]], "radiopharmaceuticalradiationdosesrstorage (in module pydicom.uid)": [[461, "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", false]], "radix() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.radix", false]], "raise (in module pydicom.config)": [[85, "pydicom.config.RAISE", false]], "rawdataelement (class in pydicom.dataelem)": [[129, "pydicom.dataelem.RawDataElement", false]], "rawdatastorage (in module pydicom.uid)": [[462, "pydicom.uid.RawDataStorage", false]], "re_valid_uid (in module pydicom.uid)": [[438, "pydicom.uid.RE_VALID_UID", false]], "re_valid_uid_prefix (in module pydicom.uid)": [[439, "pydicom.uid.RE_VALID_UID_PREFIX", false]], "read() (pydicom.filebase.dicombytesio method)": [[154, "pydicom.filebase.DicomBytesIO.read", false]], "read() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.read", false]], "read() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.read", false]], "read_dataset() (in module pydicom.filereader)": [[161, "pydicom.filereader.read_dataset", false]], "read_deferred_data_element() (in module pydicom.filereader)": [[162, "pydicom.filereader.read_deferred_data_element", false]], "read_encoding (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.read_encoding", false]], "read_encoding (pydicom.dataset.filedataset property)": [[131, "pydicom.dataset.FileDataset.read_encoding", false]], "read_encoding (pydicom.dataset.filemetadataset property)": [[132, "pydicom.dataset.FileMetaDataset.read_encoding", false]], "read_exact() (pydicom.filebase.dicombytesio method)": [[154, "pydicom.filebase.DicomBytesIO.read_exact", false]], "read_exact() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.read_exact", false]], "read_exact() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.read_exact", false]], "read_file_meta_info() (in module pydicom.filereader)": [[163, "pydicom.filereader.read_file_meta_info", false]], "read_implicit_vr (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.read_implicit_vr", false]], "read_implicit_vr (pydicom.dataset.filedataset property)": [[131, "pydicom.dataset.FileDataset.read_implicit_vr", false]], "read_implicit_vr (pydicom.dataset.filemetadataset property)": [[132, "pydicom.dataset.FileMetaDataset.read_implicit_vr", false]], "read_item() (in module pydicom.encaps)": [[152, "pydicom.encaps.read_item", false]], "read_little_endian (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.read_little_endian", false]], "read_little_endian (pydicom.dataset.filedataset property)": [[131, "pydicom.dataset.FileDataset.read_little_endian", false]], "read_little_endian (pydicom.dataset.filemetadataset property)": [[132, "pydicom.dataset.FileMetaDataset.read_little_endian", false]], "read_partial() (in module pydicom.filereader)": [[164, "pydicom.filereader.read_partial", false]], "read_preamble() (in module pydicom.filereader)": [[165, "pydicom.filereader.read_preamble", false]], "read_sequence() (in module pydicom.filereader)": [[166, "pydicom.filereader.read_sequence", false]], "read_sequence_item() (in module pydicom.filereader)": [[167, "pydicom.filereader.read_sequence_item", false]], "read_tag() (pydicom.filebase.dicombytesio method)": [[154, "pydicom.filebase.DicomBytesIO.read_tag", false]], "read_tag() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.read_tag", false]], "read_tag() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.read_tag", false]], "read_ul() (pydicom.filebase.dicombytesio method)": [[154, "pydicom.filebase.DicomBytesIO.read_UL", false]], "read_ul() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.read_UL", false]], "read_ul() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.read_UL", false]], "read_undefined_length_value() (in module pydicom.fileutil)": [[178, "pydicom.fileutil.read_undefined_length_value", false]], "read_us() (pydicom.filebase.dicombytesio method)": [[154, "pydicom.filebase.DicomBytesIO.read_US", false]], "read_us() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.read_US", false]], "read_us() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.read_US", false]], "reading_validation_mode (pydicom.config.settings property)": [[55, "pydicom.config.Settings.reading_validation_mode", false]], "real (pydicom.tag.basetag attribute)": [[273, "pydicom.tag.BaseTag.real", false]], "real (pydicom.valuerep.dsfloat attribute)": [[518, "pydicom.valuerep.DSfloat.real", false]], "real (pydicom.valuerep.is attribute)": [[520, "pydicom.valuerep.IS.real", false]], "real (pydicom.valuerep.isfloat attribute)": [[521, "pydicom.valuerep.ISfloat.real", false]], "realworldvaluemappingstorage (in module pydicom.uid)": [[463, "pydicom.uid.RealWorldValueMappingStorage", false]], "record_type (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.record_type", false]], "recordnode (class in pydicom.fileset)": [[171, "pydicom.fileset.RecordNode", false]], "register_transfer_syntax() (in module pydicom.uid)": [[514, "pydicom.uid.register_transfer_syntax", false]], "remainder_near() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.remainder_near", false]], "remove() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.remove", false]], "remove() (pydicom.fileset.recordnode method)": [[171, "pydicom.fileset.RecordNode.remove", false]], "remove() (pydicom.multival.multivalue method)": [[203, "pydicom.multival.MultiValue.remove", false]], "remove() (pydicom.sequence.sequence method)": [[272, "pydicom.sequence.Sequence.remove", false]], "remove_plugin() (pydicom.pixels.decoders.base.decoder method)": [[236, "pydicom.pixels.decoders.base.Decoder.remove_plugin", false]], "remove_plugin() (pydicom.pixels.encoders.base.encoder method)": [[244, "pydicom.pixels.encoders.base.Encoder.remove_plugin", false]], "remove_private_tags() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.remove_private_tags", false]], "remove_private_tags() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.remove_private_tags", false]], "remove_private_tags() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.remove_private_tags", false]], "removeprefix() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.removeprefix", false]], "removeprefix() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.removeprefix", false]], "removesuffix() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.removesuffix", false]], "removesuffix() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.removesuffix", false]], "repeater_has_keyword() (in module pydicom.datadict)": [[124, "pydicom.datadict.repeater_has_keyword", false]], "repeater_has_tag() (in module pydicom.datadict)": [[125, "pydicom.datadict.repeater_has_tag", false]], "replace() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.replace", false]], "replace() (pydicom.valuerep.da method)": [[515, "pydicom.valuerep.DA.replace", false]], "replace() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.replace", false]], "replace() (pydicom.valuerep.tm method)": [[523, "pydicom.valuerep.TM.replace", false]], "replace() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.replace", false]], "repval (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.repval", false]], "reset_data_element_callback() (in module pydicom.config)": [[97, "pydicom.config.reset_data_element_callback", false]], "reshape() (pydicom.pixels.decoders.base.decoderunner method)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.reshape", false]], "reshape_overlay_array() (in module pydicom.overlays.numpy_handler)": [[204, "pydicom.overlays.numpy_handler.reshape_overlay_array", false]], "reshape_pixel_array() (in module pydicom.pixels.utils)": [[270, "pydicom.pixels.utils.reshape_pixel_array", false]], "respiratorywaveformstorage (in module pydicom.uid)": [[464, "pydicom.uid.RespiratoryWaveformStorage", false]], "reverse() (pydicom.fileset.recordnode method)": [[171, "pydicom.fileset.RecordNode.reverse", false]], "reverse() (pydicom.multival.multivalue method)": [[203, "pydicom.multival.MultiValue.reverse", false]], "reverse() (pydicom.sequence.sequence method)": [[272, "pydicom.sequence.Sequence.reverse", false]], "rfind() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.rfind", false]], "rfind() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.rfind", false]], "rindex() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.rindex", false]], "rindex() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.rindex", false]], "rjust() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.rjust", false]], "rjust() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.rjust", false]], "rlelossless (in module pydicom.uid)": [[440, "pydicom.uid.RLELossless", false]], "rlelosslessdecoder (in module pydicom.pixels.decoders)": [[234, "pydicom.pixels.decoders.RLELosslessDecoder", false]], "rlelosslessencoder (in module pydicom.pixels.encoders)": [[242, "pydicom.pixels.encoders.RLELosslessEncoder", false]], "rletransfersyntaxes (in module pydicom.uid)": [[441, "pydicom.uid.RLETransferSyntaxes", false]], "roboticarmradiationstorage (in module pydicom.uid)": [[465, "pydicom.uid.RoboticArmRadiationStorage", false]], "roboticradiationrecordstorage (in module pydicom.uid)": [[466, "pydicom.uid.RoboticRadiationRecordStorage", false]], "root (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.root", false]], "rotate() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.rotate", false]], "routinescalpelectroencephalogramwaveformstorage (in module pydicom.uid)": [[467, "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", false]], "rows (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.rows", false]], "rows (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.rows", false]], "rpartition() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.rpartition", false]], "rpartition() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.rpartition", false]], "rsplit() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.rsplit", false]], "rsplit() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.rsplit", false]], "rstrip() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.rstrip", false]], "rstrip() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.rstrip", false]], "rtbeamsdeliveryinstructionstorage (in module pydicom.uid)": [[442, "pydicom.uid.RTBeamsDeliveryInstructionStorage", false]], "rtbeamstreatmentrecordstorage (in module pydicom.uid)": [[443, "pydicom.uid.RTBeamsTreatmentRecordStorage", false]], "rtbrachyapplicationsetupdeliveryinstructionstorage (in module pydicom.uid)": [[444, "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", false]], "rtbrachytreatmentrecordstorage (in module pydicom.uid)": [[445, "pydicom.uid.RTBrachyTreatmentRecordStorage", false]], "rtdosestorage (in module pydicom.uid)": [[446, "pydicom.uid.RTDoseStorage", false]], "rtimagestorage (in module pydicom.uid)": [[447, "pydicom.uid.RTImageStorage", false]], "rtionbeamstreatmentrecordstorage (in module pydicom.uid)": [[448, "pydicom.uid.RTIonBeamsTreatmentRecordStorage", false]], "rtionplanstorage (in module pydicom.uid)": [[449, "pydicom.uid.RTIonPlanStorage", false]], "rtpatientpositionacquisitioninstructionstorage (in module pydicom.uid)": [[450, "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", false]], "rtphysicianintentstorage (in module pydicom.uid)": [[451, "pydicom.uid.RTPhysicianIntentStorage", false]], "rtplanstorage (in module pydicom.uid)": [[452, "pydicom.uid.RTPlanStorage", false]], "rtradiationrecordsetstorage (in module pydicom.uid)": [[453, "pydicom.uid.RTRadiationRecordSetStorage", false]], "rtradiationsalvagerecordstorage (in module pydicom.uid)": [[454, "pydicom.uid.RTRadiationSalvageRecordStorage", false]], "rtradiationsetdeliveryinstructionstorage (in module pydicom.uid)": [[455, "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", false]], "rtradiationsetstorage (in module pydicom.uid)": [[456, "pydicom.uid.RTRadiationSetStorage", false]], "rtsegmentannotationstorage (in module pydicom.uid)": [[457, "pydicom.uid.RTSegmentAnnotationStorage", false]], "rtstructuresetstorage (in module pydicom.uid)": [[458, "pydicom.uid.RTStructureSetStorage", false]], "rttreatmentpreparationstorage (in module pydicom.uid)": [[459, "pydicom.uid.RTTreatmentPreparationStorage", false]], "rttreatmentsummaryrecordstorage (in module pydicom.uid)": [[460, "pydicom.uid.RTTreatmentSummaryRecordStorage", false]], "same_quantum() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.same_quantum", false]], "samples_per_pixel (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.samples_per_pixel", false]], "samples_per_pixel (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.samples_per_pixel", false]], "save_as() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.save_as", false]], "save_as() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.save_as", false]], "save_as() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.save_as", false]], "scaleb() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.scaleb", false]], "secondarycaptureimagestorage (in module pydicom.uid)": [[471, "pydicom.uid.SecondaryCaptureImageStorage", false]], "seek() (pydicom.filebase.dicombytesio method)": [[154, "pydicom.filebase.DicomBytesIO.seek", false]], "seek() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.seek", false]], "seek() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.seek", false]], "segmentationstorage (in module pydicom.uid)": [[472, "pydicom.uid.SegmentationStorage", false]], "segmentedvolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[473, "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", false]], "sequence (class in pydicom.sequence)": [[272, "pydicom.sequence.Sequence", false]], "set_decoders() (pydicom.pixels.decoders.base.decoderunner method)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.set_decoders", false]], "set_encoders() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.set_encoders", false]], "set_option() (pydicom.pixels.decoders.base.decoderunner method)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.set_option", false]], "set_option() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.set_option", false]], "set_options() (pydicom.pixels.decoders.base.decoderunner method)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.set_options", false]], "set_options() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.set_options", false]], "set_original_encoding() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.set_original_encoding", false]], "set_original_encoding() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.set_original_encoding", false]], "set_original_encoding() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.set_original_encoding", false]], "set_private_encoding() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.set_private_encoding", false]], "set_source() (pydicom.pixels.decoders.base.decoderunner method)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.set_source", false]], "set_source() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.set_source", false]], "setdefault() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.setdefault", false]], "setdefault() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.setdefault", false]], "setdefault() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.setdefault", false]], "settings (class in pydicom.config)": [[55, "pydicom.config.Settings", false]], "settings (in module pydicom.config)": [[98, "pydicom.config.settings", false]], "shift() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.shift", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[205, "pydicom.pixel_data_handlers.gdcm_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[206, "pydicom.pixel_data_handlers.jpeg_ls_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[207, "pydicom.pixel_data_handlers.numpy_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[208, "pydicom.pixel_data_handlers.pillow_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[209, "pydicom.pixel_data_handlers.pylibjpeg_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[210, "pydicom.pixel_data_handlers.rle_handler.should_change_PhotometricInterpretation_to_RGB", false]], "show_file_meta (in module pydicom.config)": [[99, "pydicom.config.show_file_meta", false]], "showvr (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.showVR", false]], "simplifiedadultechosrstorage (in module pydicom.uid)": [[474, "pydicom.uid.SimplifiedAdultEchoSRStorage", false]], "size_in_bytes() (in module pydicom.misc)": [[202, "pydicom.misc.size_in_bytes", false]], "sleepelectroencephalogramwaveformstorage (in module pydicom.uid)": [[475, "pydicom.uid.SleepElectroencephalogramWaveformStorage", false]], "smptest211020uncompressedinterlacedactivevideo (in module pydicom.uid)": [[468, "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", false]], "smptest211020uncompressedprogressiveactivevideo (in module pydicom.uid)": [[469, "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", false]], "smptest211030pcmdigitalaudio (in module pydicom.uid)": [[470, "pydicom.uid.SMPTEST211030PCMDigitalAudio", false]], "sopclassuid (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.SOPClassUID", false]], "sopinstanceuid (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.SOPInstanceUID", false]], "spatialfiducialsstorage (in module pydicom.uid)": [[476, "pydicom.uid.SpatialFiducialsStorage", false]], "spatialregistrationstorage (in module pydicom.uid)": [[477, "pydicom.uid.SpatialRegistrationStorage", false]], "spectacleprescriptionreportstorage (in module pydicom.uid)": [[478, "pydicom.uid.SpectaclePrescriptionReportStorage", false]], "split() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.split", false]], "split() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.split", false]], "splitlines() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.splitlines", false]], "splitlines() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.splitlines", false]], "sqrt() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.sqrt", false]], "src (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.src", false]], "src (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.src", false]], "startswith() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.startswith", false]], "startswith() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.startswith", false]], "stereometricrelationshipstorage (in module pydicom.uid)": [[479, "pydicom.uid.StereometricRelationshipStorage", false]], "strftime() (pydicom.valuerep.da method)": [[515, "pydicom.valuerep.DA.strftime", false]], "strftime() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.strftime", false]], "strftime() (pydicom.valuerep.tm method)": [[523, "pydicom.valuerep.TM.strftime", false]], "strip() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.strip", false]], "strip() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.strip", false]], "strptime() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.strptime", false]], "subjectiverefractionmeasurementsstorage (in module pydicom.uid)": [[480, "pydicom.uid.SubjectiveRefractionMeasurementsStorage", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[205, "pydicom.pixel_data_handlers.gdcm_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[206, "pydicom.pixel_data_handlers.jpeg_ls_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.numpy_handler)": [[207, "pydicom.pixel_data_handlers.numpy_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pillow_handler)": [[208, "pydicom.pixel_data_handlers.pillow_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[209, "pydicom.pixel_data_handlers.pylibjpeg_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.rle_handler)": [[210, "pydicom.pixel_data_handlers.rle_handler.supports_transfer_syntax", false]], "surfacescanmeshstorage (in module pydicom.uid)": [[481, "pydicom.uid.SurfaceScanMeshStorage", false]], "surfacescanpointcloudstorage (in module pydicom.uid)": [[482, "pydicom.uid.SurfaceScanPointCloudStorage", false]], "surfacesegmentationstorage (in module pydicom.uid)": [[483, "pydicom.uid.SurfaceSegmentationStorage", false]], "swapcase() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.swapcase", false]], "swapcase() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.swapcase", false]], "tag (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.tag", false]], "tag (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.tag", false]], "tag() (in module pydicom.tag)": [[274, "pydicom.tag.Tag", false]], "tag_for_keyword() (in module pydicom.datadict)": [[126, "pydicom.datadict.tag_for_keyword", false]], "tag_in_exception() (in module pydicom.tag)": [[276, "pydicom.tag.tag_in_exception", false]], "tell() (pydicom.filebase.dicombytesio method)": [[154, "pydicom.filebase.DicomBytesIO.tell", false]], "tell() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.tell", false]], "tell() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.tell", false]], "time() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.time", false]], "timestamp (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.timestamp", false]], "timestamp() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.timestamp", false]], "timetuple() (pydicom.valuerep.da method)": [[515, "pydicom.valuerep.DA.timetuple", false]], "timetuple() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.timetuple", false]], "timetz() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.timetz", false]], "title() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.title", false]], "title() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.title", false]], "tm (class in pydicom.valuerep)": [[523, "pydicom.valuerep.TM", false]], "to_bytes() (pydicom.tag.basetag method)": [[273, "pydicom.tag.BaseTag.to_bytes", false]], "to_bytes() (pydicom.valuerep.is method)": [[520, "pydicom.valuerep.IS.to_bytes", false]], "to_eng_string() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.to_eng_string", false]], "to_integral() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.to_integral", false]], "to_integral_exact() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.to_integral_exact", false]], "to_integral_value() (pydicom.valuerep.dsdecimal method)": [[517, "pydicom.valuerep.DSdecimal.to_integral_value", false]], "to_json() (pydicom.dataelem.dataelement method)": [[127, "pydicom.dataelem.DataElement.to_json", false]], "to_json() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.to_json", false]], "to_json() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.to_json", false]], "to_json() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.to_json", false]], "to_json_dict() (pydicom.dataelem.dataelement method)": [[127, "pydicom.dataelem.DataElement.to_json_dict", false]], "to_json_dict() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.to_json_dict", false]], "to_json_dict() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.to_json_dict", false]], "to_json_dict() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.to_json_dict", false]], "today() (pydicom.valuerep.da method)": [[515, "pydicom.valuerep.DA.today", false]], "today() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.today", false]], "tomotherapeuticradiationrecordstorage (in module pydicom.uid)": [[484, "pydicom.uid.TomotherapeuticRadiationRecordStorage", false]], "tomotherapeuticradiationstorage (in module pydicom.uid)": [[485, "pydicom.uid.TomotherapeuticRadiationStorage", false]], "toordinal() (pydicom.valuerep.da method)": [[515, "pydicom.valuerep.DA.toordinal", false]], "toordinal() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.toordinal", false]], "top() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.top", false]], "top() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.top", false]], "top() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.top", false]], "tractographyresultsstorage (in module pydicom.uid)": [[486, "pydicom.uid.TractographyResultsStorage", false]], "trait_names() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.trait_names", false]], "trait_names() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.trait_names", false]], "trait_names() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.trait_names", false]], "transfer_syntax (pydicom.pixels.decoders.base.decoderunner property)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.transfer_syntax", false]], "transfer_syntax (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.transfer_syntax", false]], "transfersyntaxuid (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.TransferSyntaxUID", false]], "translate() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.translate", false]], "translate() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.translate", false]], "tupletag() (in module pydicom.tag)": [[275, "pydicom.tag.TupleTag", false]], "twelveleadecgwaveformstorage (in module pydicom.uid)": [[487, "pydicom.uid.TwelveLeadECGWaveformStorage", false]], "type (pydicom.uid.uid property)": [[488, "pydicom.uid.UID.type", false]], "tzname() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.tzname", false]], "tzname() (pydicom.valuerep.tm method)": [[523, "pydicom.valuerep.TM.tzname", false]], "uid (class in pydicom.uid)": [[488, "pydicom.uid.UID", false]], "uid (pydicom.fileset.fileset property)": [[170, "pydicom.fileset.FileSet.UID", false]], "uid (pydicom.pixels.decoders.base.decoder property)": [[236, "pydicom.pixels.decoders.base.Decoder.UID", false]], "uid (pydicom.pixels.encoders.base.encoder property)": [[244, "pydicom.pixels.encoders.base.Encoder.UID", false]], "ultrasoundimagestorage (in module pydicom.uid)": [[489, "pydicom.uid.UltrasoundImageStorage", false]], "ultrasoundmultiframeimagestorage (in module pydicom.uid)": [[490, "pydicom.uid.UltrasoundMultiFrameImageStorage", false]], "uncompressedtransfersyntaxes (in module pydicom.uid)": [[491, "pydicom.uid.UncompressedTransferSyntaxes", false]], "unpack_bits() (in module pydicom.pixels)": [[257, "pydicom.pixels.unpack_bits", false]], "unpack_bits() (in module pydicom.pixels.utils)": [[271, "pydicom.pixels.utils.unpack_bits", false]], "update() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.update", false]], "update() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.update", false]], "update() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.update", false]], "upper() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.upper", false]], "upper() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.upper", false]], "use_ds_decimal (in module pydicom.config)": [[100, "pydicom.config.use_DS_decimal", false]], "use_ds_numpy (in module pydicom.config)": [[101, "pydicom.config.use_DS_numpy", false]], "use_is_numpy (in module pydicom.config)": [[102, "pydicom.config.use_IS_numpy", false]], "utcfromtimestamp() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.utcfromtimestamp", false]], "utcnow() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.utcnow", false]], "utcoffset() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.utcoffset", false]], "utcoffset() (pydicom.valuerep.tm method)": [[523, "pydicom.valuerep.TM.utcoffset", false]], "utctimetuple() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.utctimetuple", false]], "validate() (pydicom.dataelem.dataelement method)": [[127, "pydicom.dataelem.DataElement.validate", false]], "validate() (pydicom.dataset.filemetadataset static method)": [[132, "pydicom.dataset.FileMetaDataset.validate", false]], "validate() (pydicom.pixels.decoders.base.decoderunner method)": [[235, "pydicom.pixels.decoders.base.DecodeRunner.validate", false]], "validate() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.validate", false]], "validate_file_meta() (in module pydicom.dataset)": [[134, "pydicom.dataset.validate_file_meta", false]], "value (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.value", false]], "value (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.value", false]], "value_tell (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.value_tell", false]], "values() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.values", false]], "values() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.values", false]], "values() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.values", false]], "variablemodalitylutsoftcopypresentationstatestorage (in module pydicom.uid)": [[497, "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", false]], "videoendoscopicimagestorage (in module pydicom.uid)": [[498, "pydicom.uid.VideoEndoscopicImageStorage", false]], "videomicroscopicimagestorage (in module pydicom.uid)": [[499, "pydicom.uid.VideoMicroscopicImageStorage", false]], "videophotographicimagestorage (in module pydicom.uid)": [[500, "pydicom.uid.VideoPhotographicImageStorage", false]], "visualacuitymeasurementsstorage (in module pydicom.uid)": [[501, "pydicom.uid.VisualAcuityMeasurementsStorage", false]], "vlendoscopicimagestorage (in module pydicom.uid)": [[492, "pydicom.uid.VLEndoscopicImageStorage", false]], "vlmicroscopicimagestorage (in module pydicom.uid)": [[493, "pydicom.uid.VLMicroscopicImageStorage", false]], "vlphotographicimagestorage (in module pydicom.uid)": [[494, "pydicom.uid.VLPhotographicImageStorage", false]], "vlslidecoordinatesmicroscopicimagestorage (in module pydicom.uid)": [[495, "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", false]], "vlwholeslidemicroscopyimagestorage (in module pydicom.uid)": [[496, "pydicom.uid.VLWholeSlideMicroscopyImageStorage", false]], "vm (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.VM", false]], "volumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[502, "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", false]], "vr (class in pydicom.valuerep)": [[524, "pydicom.valuerep.VR", false]], "vr (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.VR", false]], "vr (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.VR", false]], "walk() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.walk", false]], "walk() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.walk", false]], "walk() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.walk", false]], "warn (in module pydicom.config)": [[86, "pydicom.config.WARN", false]], "waveform_array() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.waveform_array", false]], "waveform_array() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.waveform_array", false]], "waveform_array() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.waveform_array", false]], "weekday() (pydicom.valuerep.da method)": [[515, "pydicom.valuerep.DA.weekday", false]], "weekday() (pydicom.valuerep.dt method)": [[519, "pydicom.valuerep.DT.weekday", false]], "widefieldophthalmicphotography3dcoordinatesimagestorage (in module pydicom.uid)": [[503, "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", false]], "widefieldophthalmicphotographystereographicprojectionimagestorage (in module pydicom.uid)": [[504, "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", false]], "with_traceback() (pydicom.errors.invaliddicomerror method)": [[153, "pydicom.errors.InvalidDicomError.with_traceback", false]], "write() (pydicom.filebase.dicombytesio method)": [[154, "pydicom.filebase.DicomBytesIO.write", false]], "write() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.write", false]], "write() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.write", false]], "write() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.write", false]], "write_atvalue() (in module pydicom.filewriter)": [[183, "pydicom.filewriter.write_ATvalue", false]], "write_da() (in module pydicom.filewriter)": [[184, "pydicom.filewriter.write_DA", false]], "write_data_element() (in module pydicom.filewriter)": [[192, "pydicom.filewriter.write_data_element", false]], "write_dataset() (in module pydicom.filewriter)": [[193, "pydicom.filewriter.write_dataset", false]], "write_dt() (in module pydicom.filewriter)": [[185, "pydicom.filewriter.write_DT", false]], "write_file_meta_info() (in module pydicom.filewriter)": [[194, "pydicom.filewriter.write_file_meta_info", false]], "write_number_string() (in module pydicom.filewriter)": [[195, "pydicom.filewriter.write_number_string", false]], "write_numbers() (in module pydicom.filewriter)": [[196, "pydicom.filewriter.write_numbers", false]], "write_obvalue() (in module pydicom.filewriter)": [[186, "pydicom.filewriter.write_OBvalue", false]], "write_owvalue() (in module pydicom.filewriter)": [[187, "pydicom.filewriter.write_OWvalue", false]], "write_pn() (in module pydicom.filewriter)": [[188, "pydicom.filewriter.write_PN", false]], "write_sequence() (in module pydicom.filewriter)": [[197, "pydicom.filewriter.write_sequence", false]], "write_sequence_item() (in module pydicom.filewriter)": [[198, "pydicom.filewriter.write_sequence_item", false]], "write_string() (in module pydicom.filewriter)": [[199, "pydicom.filewriter.write_string", false]], "write_tag() (pydicom.filebase.dicombytesio method)": [[154, "pydicom.filebase.DicomBytesIO.write_tag", false]], "write_tag() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.write_tag", false]], "write_tag() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.write_tag", false]], "write_text() (in module pydicom.filewriter)": [[200, "pydicom.filewriter.write_text", false]], "write_tm() (in module pydicom.filewriter)": [[189, "pydicom.filewriter.write_TM", false]], "write_ui() (in module pydicom.filewriter)": [[190, "pydicom.filewriter.write_UI", false]], "write_ul() (pydicom.filebase.dicombytesio method)": [[154, "pydicom.filebase.DicomBytesIO.write_UL", false]], "write_ul() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.write_UL", false]], "write_ul() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.write_UL", false]], "write_un() (in module pydicom.filewriter)": [[191, "pydicom.filewriter.write_UN", false]], "write_us() (pydicom.filebase.dicombytesio method)": [[154, "pydicom.filebase.DicomBytesIO.write_US", false]], "write_us() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.write_US", false]], "write_us() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.write_US", false]], "writing_validation_mode (pydicom.config.settings property)": [[55, "pydicom.config.Settings.writing_validation_mode", false]], "xadefinedprocedureprotocolstorage (in module pydicom.uid)": [[505, "pydicom.uid.XADefinedProcedureProtocolStorage", false]], "xaperformedprocedureprotocolstorage (in module pydicom.uid)": [[506, "pydicom.uid.XAPerformedProcedureProtocolStorage", false]], "xaxrfgrayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[507, "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", false]], "xray3dangiographicimagestorage (in module pydicom.uid)": [[508, "pydicom.uid.XRay3DAngiographicImageStorage", false]], "xray3dcraniofacialimagestorage (in module pydicom.uid)": [[509, "pydicom.uid.XRay3DCraniofacialImageStorage", false]], "xrayangiographicimagestorage (in module pydicom.uid)": [[510, "pydicom.uid.XRayAngiographicImageStorage", false]], "xrayradiationdosesrstorage (in module pydicom.uid)": [[511, "pydicom.uid.XRayRadiationDoseSRStorage", false]], "xrayradiofluoroscopicimagestorage (in module pydicom.uid)": [[512, "pydicom.uid.XRayRadiofluoroscopicImageStorage", false]], "zfill() (pydicom.uid.uid method)": [[488, "pydicom.uid.UID.zfill", false]], "zfill() (pydicom.valuerep.vr method)": [[524, "pydicom.valuerep.VR.zfill", false]]}, "objects": {"": [[551, 0, 0, "-", "pydicom"]], "pydicom": [[66, 0, 0, "-", "encaps"], [553, 0, 0, "-", "overlays"], [550, 0, 0, "-", "pixel_data_handlers"], [554, 0, 0, "-", "pixels"], [559, 0, 0, "-", "uid"], [560, 0, 0, "-", "waveforms"]], "pydicom.charset": [[75, 1, 1, "", "convert_encodings"], [76, 1, 1, "", "decode_bytes"], [77, 1, 1, "", "decode_element"], [78, 1, 1, "", "encode_string"]], "pydicom.config": [[79, 2, 1, "", "APPLY_J2K_CORRECTIONS"], [80, 1, 1, "", "DS_decimal"], [81, 1, 1, "", "DS_numpy"], [82, 2, 1, "", "IGNORE"], [83, 2, 1, "", "INVALID_KEYWORD_BEHAVIOR"], [84, 2, 1, "", "INVALID_KEY_BEHAVIOR"], [85, 2, 1, "", "RAISE"], [55, 3, 1, "", "Settings"], [86, 2, 1, "", "WARN"], [87, 2, 1, "", "allow_DS_float"], [88, 2, 1, "", "assume_implicit_vr_switch"], [89, 2, 1, "", "convert_wrong_length_to_UN"], [90, 2, 1, "", "data_element_callback"], [91, 2, 1, "", "data_element_callback_kwargs"], [92, 2, 1, "", "datetime_conversion"], [93, 1, 1, "", "debug"], [94, 2, 1, "", "enforce_valid_values"], [95, 1, 1, "", "future_behavior"], [96, 2, 1, "", "pixel_data_handlers"], [97, 1, 1, "", "reset_data_element_callback"], [98, 2, 1, "", "settings"], [99, 2, 1, "", "show_file_meta"], [100, 2, 1, "", "use_DS_decimal"], [101, 2, 1, "", "use_DS_numpy"], [102, 2, 1, "", "use_IS_numpy"]], "pydicom.config.Settings": [[55, 4, 1, "", "infer_sq_for_un_vr"], [55, 4, 1, "", "reading_validation_mode"], [55, 4, 1, "", "writing_validation_mode"]], "pydicom.data": [[103, 1, 1, "", "get_charset_files"], [104, 1, 1, "", "get_palette_files"], [105, 1, 1, "", "get_testdata_file"], [106, 1, 1, "", "get_testdata_files"]], "pydicom.datadict": [[107, 1, 1, "", "add_dict_entries"], [108, 1, 1, "", "add_dict_entry"], [109, 1, 1, "", "add_private_dict_entries"], [110, 1, 1, "", "add_private_dict_entry"], [111, 1, 1, "", "dictionary_VM"], [112, 1, 1, "", "dictionary_VR"], [113, 1, 1, "", "dictionary_description"], [114, 1, 1, "", "dictionary_has_tag"], [115, 1, 1, "", "dictionary_is_retired"], [116, 1, 1, "", "dictionary_keyword"], [117, 1, 1, "", "get_entry"], [118, 1, 1, "", "get_private_entry"], [119, 1, 1, "", "keyword_for_tag"], [120, 1, 1, "", "mask_match"], [121, 1, 1, "", "private_dictionary_VM"], [122, 1, 1, "", "private_dictionary_VR"], [123, 1, 1, "", "private_dictionary_description"], [124, 1, 1, "", "repeater_has_keyword"], [125, 1, 1, "", "repeater_has_tag"], [126, 1, 1, "", "tag_for_keyword"]], "pydicom.dataelem": [[127, 3, 1, "", "DataElement"], [128, 1, 1, "", "DataElement_from_raw"], [129, 3, 1, "", "RawDataElement"]], "pydicom.dataelem.DataElement": [[127, 4, 1, "", "VM"], [127, 5, 1, "", "VR"], [127, 6, 1, "", "__init__"], [127, 6, 1, "", "clear"], [127, 5, 1, "", "descripWidth"], [127, 4, 1, "", "empty_value"], [127, 6, 1, "", "from_json"], [127, 4, 1, "", "is_empty"], [127, 4, 1, "", "is_private"], [127, 4, 1, "", "is_retired"], [127, 5, 1, "", "is_undefined_length"], [127, 4, 1, "", "keyword"], [127, 5, 1, "", "maxBytesToDisplay"], [127, 4, 1, "", "name"], [127, 4, 1, "", "repval"], [127, 5, 1, "", "showVR"], [127, 5, 1, "", "tag"], [127, 6, 1, "", "to_json"], [127, 6, 1, "", "to_json_dict"], [127, 6, 1, "", "validate"], [127, 4, 1, "", "value"]], "pydicom.dataelem.RawDataElement": [[129, 5, 1, "", "VR"], [129, 6, 1, "", "__init__"], [129, 6, 1, "", "count"], [129, 6, 1, "", "index"], [129, 5, 1, "", "is_implicit_VR"], [129, 5, 1, "", "is_little_endian"], [129, 5, 1, "", "is_raw"], [129, 5, 1, "", "length"], [129, 5, 1, "", "tag"], [129, 5, 1, "", "value"], [129, 5, 1, "", "value_tell"]], "pydicom.dataset": [[130, 3, 1, "", "Dataset"], [131, 3, 1, "", "FileDataset"], [132, 3, 1, "", "FileMetaDataset"], [133, 3, 1, "", "PrivateBlock"], [134, 1, 1, "", "validate_file_meta"]], "pydicom.dataset.Dataset": [[130, 6, 1, "", "__init__"], [130, 6, 1, "", "add"], [130, 6, 1, "", "add_new"], [130, 6, 1, "", "add_new_private"], [130, 6, 1, "", "clear"], [130, 6, 1, "", "compress"], [130, 6, 1, "", "convert_pixel_data"], [130, 6, 1, "", "copy"], [130, 6, 1, "", "data_element"], [130, 6, 1, "", "decode"], [130, 6, 1, "", "decompress"], [130, 5, 1, "", "default_element_format"], [130, 5, 1, "", "default_sequence_element_format"], [130, 6, 1, "", "dir"], [130, 6, 1, "", "elements"], [130, 6, 1, "", "ensure_file_meta"], [130, 6, 1, "", "formatted_lines"], [130, 6, 1, "", "from_json"], [130, 6, 1, "", "get"], [130, 6, 1, "", "get_item"], [130, 6, 1, "", "get_private_item"], [130, 6, 1, "", "group_dataset"], [130, 5, 1, "", "indent_chars"], [130, 4, 1, "", "is_implicit_VR"], [130, 4, 1, "", "is_little_endian"], [130, 4, 1, "", "is_original_encoding"], [130, 6, 1, "", "items"], [130, 6, 1, "", "iterall"], [130, 6, 1, "", "keys"], [130, 4, 1, "", "original_character_set"], [130, 4, 1, "", "original_encoding"], [130, 6, 1, "", "overlay_array"], [130, 4, 1, "", "pixel_array"], [130, 6, 1, "", "pixel_array_options"], [130, 6, 1, "", "pop"], [130, 6, 1, "", "popitem"], [130, 6, 1, "", "private_block"], [130, 6, 1, "", "private_creators"], [130, 4, 1, "", "read_encoding"], [130, 4, 1, "", "read_implicit_vr"], [130, 4, 1, "", "read_little_endian"], [130, 6, 1, "", "remove_private_tags"], [130, 6, 1, "", "save_as"], [130, 6, 1, "", "set_original_encoding"], [130, 6, 1, "", "setdefault"], [130, 6, 1, "", "to_json"], [130, 6, 1, "", "to_json_dict"], [130, 6, 1, "", "top"], [130, 6, 1, "", "trait_names"], [130, 6, 1, "", "update"], [130, 6, 1, "", "values"], [130, 6, 1, "", "walk"], [130, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileDataset": [[131, 6, 1, "", "__init__"], [131, 6, 1, "", "add"], [131, 6, 1, "", "add_new"], [131, 6, 1, "", "add_new_private"], [131, 6, 1, "", "clear"], [131, 6, 1, "", "compress"], [131, 6, 1, "", "convert_pixel_data"], [131, 6, 1, "", "copy"], [131, 6, 1, "", "data_element"], [131, 6, 1, "", "decode"], [131, 6, 1, "", "decompress"], [131, 6, 1, "", "dir"], [131, 6, 1, "", "elements"], [131, 6, 1, "", "ensure_file_meta"], [131, 5, 1, "", "file_meta"], [131, 5, 1, "", "filename"], [131, 5, 1, "", "fileobj_type"], [131, 6, 1, "", "formatted_lines"], [131, 6, 1, "", "from_json"], [131, 6, 1, "", "get"], [131, 6, 1, "", "get_item"], [131, 6, 1, "", "get_private_item"], [131, 6, 1, "", "group_dataset"], [131, 4, 1, "", "is_implicit_VR"], [131, 4, 1, "", "is_little_endian"], [131, 4, 1, "", "is_original_encoding"], [131, 6, 1, "", "items"], [131, 6, 1, "", "iterall"], [131, 6, 1, "", "keys"], [131, 4, 1, "", "original_character_set"], [131, 4, 1, "", "original_encoding"], [131, 6, 1, "", "overlay_array"], [131, 4, 1, "", "pixel_array"], [131, 6, 1, "", "pixel_array_options"], [131, 6, 1, "", "pop"], [131, 6, 1, "", "popitem"], [131, 5, 1, "", "preamble"], [131, 6, 1, "", "private_block"], [131, 6, 1, "", "private_creators"], [131, 4, 1, "", "read_encoding"], [131, 4, 1, "", "read_implicit_vr"], [131, 4, 1, "", "read_little_endian"], [131, 6, 1, "", "remove_private_tags"], [131, 6, 1, "", "save_as"], [131, 6, 1, "", "set_original_encoding"], [131, 6, 1, "", "setdefault"], [131, 5, 1, "", "timestamp"], [131, 6, 1, "", "to_json"], [131, 6, 1, "", "to_json_dict"], [131, 6, 1, "", "top"], [131, 6, 1, "", "trait_names"], [131, 6, 1, "", "update"], [131, 6, 1, "", "values"], [131, 6, 1, "", "walk"], [131, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileMetaDataset": [[132, 6, 1, "", "__init__"], [132, 6, 1, "", "add"], [132, 6, 1, "", "add_new"], [132, 6, 1, "", "add_new_private"], [132, 6, 1, "", "clear"], [132, 6, 1, "", "compress"], [132, 6, 1, "", "convert_pixel_data"], [132, 6, 1, "", "copy"], [132, 6, 1, "", "data_element"], [132, 6, 1, "", "decode"], [132, 6, 1, "", "decompress"], [132, 6, 1, "", "dir"], [132, 6, 1, "", "elements"], [132, 6, 1, "", "ensure_file_meta"], [132, 6, 1, "", "formatted_lines"], [132, 6, 1, "", "from_json"], [132, 6, 1, "", "get"], [132, 6, 1, "", "get_item"], [132, 6, 1, "", "get_private_item"], [132, 6, 1, "", "group_dataset"], [132, 4, 1, "", "is_implicit_VR"], [132, 4, 1, "", "is_little_endian"], [132, 4, 1, "", "is_original_encoding"], [132, 6, 1, "", "items"], [132, 6, 1, "", "iterall"], [132, 6, 1, "", "keys"], [132, 4, 1, "", "original_character_set"], [132, 4, 1, "", "original_encoding"], [132, 6, 1, "", "overlay_array"], [132, 4, 1, "", "pixel_array"], [132, 6, 1, "", "pixel_array_options"], [132, 6, 1, "", "pop"], [132, 6, 1, "", "popitem"], [132, 6, 1, "", "private_block"], [132, 6, 1, "", "private_creators"], [132, 4, 1, "", "read_encoding"], [132, 4, 1, "", "read_implicit_vr"], [132, 4, 1, "", "read_little_endian"], [132, 6, 1, "", "remove_private_tags"], [132, 6, 1, "", "save_as"], [132, 6, 1, "", "set_original_encoding"], [132, 6, 1, "", "setdefault"], [132, 6, 1, "", "to_json"], [132, 6, 1, "", "to_json_dict"], [132, 6, 1, "", "top"], [132, 6, 1, "", "trait_names"], [132, 6, 1, "", "update"], [132, 6, 1, "", "validate"], [132, 6, 1, "", "values"], [132, 6, 1, "", "walk"], [132, 6, 1, "", "waveform_array"]], "pydicom.dataset.PrivateBlock": [[133, 6, 1, "", "__init__"], [133, 6, 1, "", "add_new"], [133, 5, 1, "", "block_start"], [133, 5, 1, "", "dataset"], [133, 6, 1, "", "get_tag"], [133, 5, 1, "", "group"], [133, 5, 1, "", "private_creator"]], "pydicom.encaps": [[135, 1, 1, "", "decode_data_sequence"], [136, 1, 1, "", "defragment_data"], [137, 1, 1, "", "encapsulate"], [138, 1, 1, "", "encapsulate_extended"], [139, 1, 1, "", "fragment_frame"], [140, 1, 1, "", "generate_fragmented_frames"], [141, 1, 1, "", "generate_fragments"], [142, 1, 1, "", "generate_frames"], [143, 1, 1, "", "generate_pixel_data"], [144, 1, 1, "", "generate_pixel_data_fragment"], [145, 1, 1, "", "generate_pixel_data_frame"], [146, 1, 1, "", "get_frame"], [147, 1, 1, "", "get_frame_offsets"], [148, 1, 1, "", "itemize_fragment"], [149, 1, 1, "", "itemize_frame"], [150, 1, 1, "", "parse_basic_offsets"], [151, 1, 1, "", "parse_fragments"], [152, 1, 1, "", "read_item"]], "pydicom.errors": [[153, 7, 1, "", "InvalidDicomError"]], "pydicom.errors.InvalidDicomError": [[153, 6, 1, "", "with_traceback"]], "pydicom.filebase": [[154, 3, 1, "", "DicomBytesIO"], [155, 1, 1, "", "DicomFile"], [156, 3, 1, "", "DicomFileLike"], [157, 3, 1, "", "DicomIO"]], "pydicom.filebase.DicomBytesIO": [[154, 6, 1, "", "__init__"], [154, 6, 1, "", "close"], [154, 4, 1, "", "is_implicit_VR"], [154, 4, 1, "", "is_little_endian"], [154, 4, 1, "", "name"], [154, 4, 1, "", "parent"], [154, 6, 1, "", "read"], [154, 6, 1, "", "read_UL"], [154, 6, 1, "", "read_US"], [154, 6, 1, "", "read_exact"], [154, 6, 1, "", "read_tag"], [154, 6, 1, "", "seek"], [154, 6, 1, "", "tell"], [154, 6, 1, "", "write"], [154, 6, 1, "", "write_UL"], [154, 6, 1, "", "write_US"], [154, 6, 1, "", "write_tag"]], "pydicom.filebase.DicomFileLike": [[156, 6, 1, "", "__init__"], [156, 6, 1, "", "close"], [156, 4, 1, "", "is_implicit_VR"], [156, 4, 1, "", "is_little_endian"], [156, 4, 1, "", "name"], [156, 4, 1, "", "parent"], [156, 6, 1, "", "read"], [156, 6, 1, "", "read_UL"], [156, 6, 1, "", "read_US"], [156, 6, 1, "", "read_exact"], [156, 6, 1, "", "read_tag"], [156, 6, 1, "", "seek"], [156, 6, 1, "", "tell"], [156, 6, 1, "", "write"], [156, 6, 1, "", "write_UL"], [156, 6, 1, "", "write_US"], [156, 6, 1, "", "write_tag"]], "pydicom.filebase.DicomIO": [[157, 6, 1, "", "__init__"], [157, 6, 1, "", "close"], [157, 4, 1, "", "is_implicit_VR"], [157, 4, 1, "", "is_little_endian"], [157, 4, 1, "", "name"], [157, 4, 1, "", "parent"], [157, 6, 1, "", "read"], [157, 6, 1, "", "read_UL"], [157, 6, 1, "", "read_US"], [157, 6, 1, "", "read_exact"], [157, 6, 1, "", "read_tag"], [157, 6, 1, "", "seek"], [157, 6, 1, "", "tell"], [157, 6, 1, "", "write"], [157, 6, 1, "", "write_UL"], [157, 6, 1, "", "write_US"], [157, 6, 1, "", "write_tag"]], "pydicom.filereader": [[158, 1, 1, "", "data_element_generator"], [159, 1, 1, "", "data_element_offset_to_value"], [160, 1, 1, "", "dcmread"], [161, 1, 1, "", "read_dataset"], [162, 1, 1, "", "read_deferred_data_element"], [163, 1, 1, "", "read_file_meta_info"], [164, 1, 1, "", "read_partial"], [165, 1, 1, "", "read_preamble"], [166, 1, 1, "", "read_sequence"], [167, 1, 1, "", "read_sequence_item"]], "pydicom.fileset": [[168, 2, 1, "", "DIRECTORY_RECORDERS"], [169, 3, 1, "", "FileInstance"], [170, 3, 1, "", "FileSet"], [171, 3, 1, "", "RecordNode"], [172, 1, 1, "", "generate_filename"], [173, 1, 1, "", "is_conformant_file_id"]], "pydicom.fileset.FileInstance": [[169, 4, 1, "", "FileID"], [169, 4, 1, "", "SOPClassUID"], [169, 4, 1, "", "SOPInstanceUID"], [169, 4, 1, "", "TransferSyntaxUID"], [169, 6, 1, "", "__init__"], [169, 4, 1, "", "file_set"], [169, 4, 1, "", "for_addition"], [169, 4, 1, "", "for_moving"], [169, 4, 1, "", "for_removal"], [169, 4, 1, "", "is_private"], [169, 4, 1, "", "is_staged"], [169, 6, 1, "", "load"], [169, 5, 1, "", "node"], [169, 4, 1, "", "path"]], "pydicom.fileset.FileSet": [[170, 4, 1, "", "ID"], [170, 4, 1, "", "UID"], [170, 6, 1, "", "__init__"], [170, 6, 1, "", "add"], [170, 6, 1, "", "add_custom"], [170, 6, 1, "", "clear"], [170, 6, 1, "", "copy"], [170, 4, 1, "", "descriptor_character_set"], [170, 4, 1, "", "descriptor_file_id"], [170, 6, 1, "", "find"], [170, 6, 1, "", "find_values"], [170, 4, 1, "", "is_staged"], [170, 6, 1, "", "load"], [170, 4, 1, "", "path"], [170, 6, 1, "", "remove"], [170, 6, 1, "", "write"]], "pydicom.fileset.RecordNode": [[171, 6, 1, "", "__init__"], [171, 6, 1, "", "add"], [171, 4, 1, "", "ancestors"], [171, 5, 1, "", "children"], [171, 4, 1, "", "component"], [171, 4, 1, "", "depth"], [171, 4, 1, "", "file_set"], [171, 4, 1, "", "has_instance"], [171, 4, 1, "", "index"], [171, 5, 1, "", "instance"], [171, 4, 1, "", "is_root"], [171, 4, 1, "", "key"], [171, 4, 1, "", "next"], [171, 4, 1, "", "parent"], [171, 6, 1, "", "prettify"], [171, 4, 1, "", "previous"], [171, 4, 1, "", "record_type"], [171, 6, 1, "", "remove"], [171, 6, 1, "", "reverse"], [171, 4, 1, "", "root"]], "pydicom.fileutil": [[174, 1, 1, "", "absorb_delimiter_item"], [175, 1, 1, "", "find_bytes"], [176, 1, 1, "", "find_delimiter"], [177, 1, 1, "", "length_of_undefined_length"], [178, 1, 1, "", "read_undefined_length_value"]], "pydicom.filewriter": [[179, 1, 1, "", "correct_ambiguous_vr"], [180, 1, 1, "", "correct_ambiguous_vr_element"], [181, 1, 1, "", "dcmwrite"], [182, 1, 1, "", "multi_string"], [183, 1, 1, "", "write_ATvalue"], [184, 1, 1, "", "write_DA"], [185, 1, 1, "", "write_DT"], [186, 1, 1, "", "write_OBvalue"], [187, 1, 1, "", "write_OWvalue"], [188, 1, 1, "", "write_PN"], [189, 1, 1, "", "write_TM"], [190, 1, 1, "", "write_UI"], [191, 1, 1, "", "write_UN"], [192, 1, 1, "", "write_data_element"], [193, 1, 1, "", "write_dataset"], [194, 1, 1, "", "write_file_meta_info"], [195, 1, 1, "", "write_number_string"], [196, 1, 1, "", "write_numbers"], [197, 1, 1, "", "write_sequence"], [198, 1, 1, "", "write_sequence_item"], [199, 1, 1, "", "write_string"], [200, 1, 1, "", "write_text"]], "pydicom.misc": [[201, 1, 1, "", "is_dicom"], [202, 1, 1, "", "size_in_bytes"]], "pydicom.multival": [[203, 3, 1, "", "MultiValue"]], "pydicom.multival.MultiValue": [[203, 6, 1, "", "__init__"], [203, 6, 1, "", "append"], [203, 6, 1, "", "clear"], [203, 6, 1, "", "count"], [203, 6, 1, "", "extend"], [203, 6, 1, "", "index"], [203, 6, 1, "", "insert"], [203, 6, 1, "", "pop"], [203, 6, 1, "", "remove"], [203, 6, 1, "", "reverse"]], "pydicom.overlays": [[204, 0, 0, "-", "numpy_handler"]], "pydicom.overlays.numpy_handler": [[204, 1, 1, "", "get_expected_length"], [204, 1, 1, "", "get_overlay_array"], [204, 1, 1, "", "is_available"], [204, 1, 1, "", "reshape_overlay_array"]], "pydicom.pixel_data_handlers": [[205, 0, 0, "-", "gdcm_handler"], [206, 0, 0, "-", "jpeg_ls_handler"], [207, 0, 0, "-", "numpy_handler"], [208, 0, 0, "-", "pillow_handler"], [209, 0, 0, "-", "pylibjpeg_handler"], [210, 0, 0, "-", "rle_handler"]], "pydicom.pixel_data_handlers.gdcm_handler": [[205, 1, 1, "", "create_data_element"], [205, 1, 1, "", "create_image"], [205, 1, 1, "", "get_pixeldata"], [205, 1, 1, "", "is_available"], [205, 1, 1, "", "needs_to_convert_to_RGB"], [205, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [205, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[206, 1, 1, "", "get_pixeldata"], [206, 1, 1, "", "is_available"], [206, 1, 1, "", "needs_to_convert_to_RGB"], [206, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [206, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.numpy_handler": [[207, 1, 1, "", "get_pixeldata"], [207, 1, 1, "", "is_available"], [207, 1, 1, "", "needs_to_convert_to_RGB"], [207, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [207, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pillow_handler": [[208, 1, 1, "", "get_pixeldata"], [208, 1, 1, "", "is_available"], [208, 1, 1, "", "needs_to_convert_to_RGB"], [208, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [208, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[209, 1, 1, "", "as_array"], [209, 1, 1, "", "generate_frames"], [209, 1, 1, "", "get_pixeldata"], [209, 1, 1, "", "is_available"], [209, 1, 1, "", "needs_to_convert_to_RGB"], [209, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [209, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.rle_handler": [[210, 1, 1, "", "get_pixeldata"], [210, 1, 1, "", "is_available"], [210, 1, 1, "", "needs_to_convert_to_RGB"], [210, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [210, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixels": [[211, 1, 1, "", "apply_color_lut"], [212, 1, 1, "", "apply_modality_lut"], [213, 1, 1, "", "apply_voi"], [214, 1, 1, "", "apply_voi_lut"], [215, 1, 1, "", "apply_windowing"], [216, 1, 1, "", "as_pixel_options"], [217, 1, 1, "", "compress"], [218, 1, 1, "", "convert_color_space"], [555, 0, 0, "-", "decoders"], [237, 1, 1, "", "decompress"], [556, 0, 0, "-", "encoders"], [245, 1, 1, "", "get_decoder"], [246, 1, 1, "", "get_encoder"], [247, 1, 1, "", "iter_pixels"], [248, 1, 1, "", "pack_bits"], [249, 1, 1, "", "pixel_array"], [557, 0, 0, "-", "processing"], [257, 1, 1, "", "unpack_bits"], [558, 0, 0, "-", "utils"]], "pydicom.pixels.decoders": [[219, 2, 1, "", "DeflatedExplicitVRLittleEndianDecoder"], [220, 2, 1, "", "ExplicitVRBigEndianDecoder"], [221, 2, 1, "", "ExplicitVRLittleEndianDecoder"], [222, 2, 1, "", "HTJ2KDecoder"], [223, 2, 1, "", "HTJ2KLosslessDecoder"], [224, 2, 1, "", "HTJ2KLosslessRPCLDecoder"], [225, 2, 1, "", "ImplicitVRLittleEndianDecoder"], [226, 2, 1, "", "JPEG2000Decoder"], [227, 2, 1, "", "JPEG2000LosslessDecoder"], [228, 2, 1, "", "JPEGBaseline8BitDecoder"], [229, 2, 1, "", "JPEGExtended12BitDecoder"], [230, 2, 1, "", "JPEGLSLosslessDecoder"], [231, 2, 1, "", "JPEGLSNearLosslessDecoder"], [232, 2, 1, "", "JPEGLosslessDecoder"], [233, 2, 1, "", "JPEGLosslessSV1Decoder"], [234, 2, 1, "", "RLELosslessDecoder"]], "pydicom.pixels.decoders.base": [[235, 3, 1, "", "DecodeRunner"], [236, 3, 1, "", "Decoder"]], "pydicom.pixels.decoders.base.DecodeRunner": [[235, 6, 1, "", "__init__"], [235, 4, 1, "", "bits_allocated"], [235, 4, 1, "", "bits_stored"], [235, 4, 1, "", "columns"], [235, 6, 1, "", "decode"], [235, 6, 1, "", "del_option"], [235, 4, 1, "", "extended_offsets"], [235, 6, 1, "", "frame_length"], [235, 6, 1, "", "get_data"], [235, 6, 1, "", "get_option"], [235, 4, 1, "", "is_array"], [235, 4, 1, "", "is_binary"], [235, 4, 1, "", "is_buffer"], [235, 4, 1, "", "is_dataset"], [235, 6, 1, "", "iter_decode"], [235, 4, 1, "", "number_of_frames"], [235, 4, 1, "", "options"], [235, 4, 1, "", "photometric_interpretation"], [235, 4, 1, "", "pixel_dtype"], [235, 4, 1, "", "pixel_keyword"], [235, 6, 1, "", "pixel_properties"], [235, 4, 1, "", "pixel_representation"], [235, 4, 1, "", "planar_configuration"], [235, 6, 1, "", "process"], [235, 6, 1, "", "reshape"], [235, 4, 1, "", "rows"], [235, 4, 1, "", "samples_per_pixel"], [235, 6, 1, "", "set_decoders"], [235, 6, 1, "", "set_option"], [235, 6, 1, "", "set_options"], [235, 6, 1, "", "set_source"], [235, 4, 1, "", "src"], [235, 4, 1, "", "transfer_syntax"], [235, 6, 1, "", "validate"]], "pydicom.pixels.decoders.base.Decoder": [[236, 4, 1, "", "UID"], [236, 6, 1, "", "__init__"], [236, 6, 1, "", "add_plugin"], [236, 6, 1, "", "add_plugins"], [236, 6, 1, "", "as_array"], [236, 6, 1, "", "as_buffer"], [236, 4, 1, "", "is_available"], [236, 4, 1, "", "is_encapsulated"], [236, 4, 1, "", "is_native"], [236, 6, 1, "", "iter_array"], [236, 6, 1, "", "iter_buffer"], [236, 4, 1, "", "missing_dependencies"], [236, 6, 1, "", "remove_plugin"]], "pydicom.pixels.encoders": [[238, 2, 1, "", "JPEG2000Encoder"], [239, 2, 1, "", "JPEG2000LosslessEncoder"], [240, 2, 1, "", "JPEGLSLosslessEncoder"], [241, 2, 1, "", "JPEGLSNearLosslessEncoder"], [242, 2, 1, "", "RLELosslessEncoder"]], "pydicom.pixels.encoders.base": [[243, 3, 1, "", "EncodeRunner"], [244, 3, 1, "", "Encoder"]], "pydicom.pixels.encoders.base.EncodeRunner": [[243, 6, 1, "", "__init__"], [243, 4, 1, "", "bits_allocated"], [243, 4, 1, "", "bits_stored"], [243, 4, 1, "", "columns"], [243, 6, 1, "", "del_option"], [243, 6, 1, "", "encode"], [243, 4, 1, "", "extended_offsets"], [243, 6, 1, "", "frame_length"], [243, 6, 1, "", "get_frame"], [243, 6, 1, "", "get_option"], [243, 4, 1, "", "is_array"], [243, 4, 1, "", "is_binary"], [243, 4, 1, "", "is_buffer"], [243, 4, 1, "", "is_dataset"], [243, 4, 1, "", "number_of_frames"], [243, 4, 1, "", "options"], [243, 4, 1, "", "photometric_interpretation"], [243, 4, 1, "", "pixel_keyword"], [243, 4, 1, "", "pixel_representation"], [243, 4, 1, "", "planar_configuration"], [243, 4, 1, "", "rows"], [243, 4, 1, "", "samples_per_pixel"], [243, 6, 1, "", "set_encoders"], [243, 6, 1, "", "set_option"], [243, 6, 1, "", "set_options"], [243, 6, 1, "", "set_source"], [243, 4, 1, "", "src"], [243, 4, 1, "", "transfer_syntax"], [243, 6, 1, "", "validate"]], "pydicom.pixels.encoders.base.Encoder": [[244, 4, 1, "", "UID"], [244, 6, 1, "", "__init__"], [244, 6, 1, "", "add_plugin"], [244, 6, 1, "", "add_plugins"], [244, 6, 1, "", "encode"], [244, 4, 1, "", "is_available"], [244, 4, 1, "", "is_encapsulated"], [244, 4, 1, "", "is_native"], [244, 6, 1, "", "iter_encode"], [244, 4, 1, "", "missing_dependencies"], [244, 6, 1, "", "remove_plugin"]], "pydicom.pixels.processing": [[250, 1, 1, "", "apply_color_lut"], [251, 1, 1, "", "apply_modality_lut"], [252, 1, 1, "", "apply_rescale"], [253, 1, 1, "", "apply_voi"], [254, 1, 1, "", "apply_voi_lut"], [255, 1, 1, "", "apply_windowing"], [256, 1, 1, "", "convert_color_space"]], "pydicom.pixels.utils": [[258, 1, 1, "", "as_pixel_options"], [259, 1, 1, "", "compress"], [260, 1, 1, "", "decompress"], [261, 1, 1, "", "expand_ybr422"], [262, 1, 1, "", "get_expected_length"], [263, 1, 1, "", "get_image_pixel_ids"], [264, 1, 1, "", "get_j2k_parameters"], [265, 1, 1, "", "get_nr_frames"], [266, 1, 1, "", "iter_pixels"], [267, 1, 1, "", "pack_bits"], [268, 1, 1, "", "pixel_array"], [269, 1, 1, "", "pixel_dtype"], [270, 1, 1, "", "reshape_pixel_array"], [271, 1, 1, "", "unpack_bits"]], "pydicom.sequence": [[272, 3, 1, "", "Sequence"]], "pydicom.sequence.Sequence": [[272, 6, 1, "", "__init__"], [272, 6, 1, "", "append"], [272, 6, 1, "", "clear"], [272, 6, 1, "", "count"], [272, 6, 1, "", "extend"], [272, 6, 1, "", "index"], [272, 6, 1, "", "insert"], [272, 6, 1, "", "pop"], [272, 6, 1, "", "remove"], [272, 6, 1, "", "reverse"]], "pydicom.tag": [[273, 3, 1, "", "BaseTag"], [274, 1, 1, "", "Tag"], [275, 1, 1, "", "TupleTag"], [276, 1, 1, "", "tag_in_exception"]], "pydicom.tag.BaseTag": [[273, 6, 1, "", "__init__"], [273, 6, 1, "", "as_integer_ratio"], [273, 6, 1, "", "bit_count"], [273, 6, 1, "", "bit_length"], [273, 6, 1, "", "conjugate"], [273, 5, 1, "", "denominator"], [273, 4, 1, "", "elem"], [273, 4, 1, "", "element"], [273, 6, 1, "", "from_bytes"], [273, 4, 1, "", "group"], [273, 5, 1, "", "imag"], [273, 4, 1, "", "is_private"], [273, 4, 1, "", "is_private_creator"], [273, 4, 1, "", "json_key"], [273, 5, 1, "", "numerator"], [273, 4, 1, "", "private_creator"], [273, 5, 1, "", "real"], [273, 6, 1, "", "to_bytes"]], "pydicom.uid": [[277, 2, 1, "", "AcquisitionContextSRStorage"], [278, 2, 1, "", "AdvancedBlendingPresentationStateStorage"], [279, 2, 1, "", "AllTransferSyntaxes"], [280, 2, 1, "", "AmbulatoryECGWaveformStorage"], [281, 2, 1, "", "ArterialPulseWaveformStorage"], [282, 2, 1, "", "AutorefractionMeasurementsStorage"], [283, 2, 1, "", "BasicStructuredDisplayStorage"], [284, 2, 1, "", "BasicTextSRStorage"], [285, 2, 1, "", "BasicVoiceAudioWaveformStorage"], [286, 2, 1, "", "BlendingSoftcopyPresentationStateStorage"], [287, 2, 1, "", "BodyPositionWaveformStorage"], [288, 2, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [289, 2, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [290, 2, 1, "", "BreastTomosynthesisImageStorage"], [291, 2, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [292, 2, 1, "", "CArmPhotonElectronRadiationStorage"], [293, 2, 1, "", "CTDefinedProcedureProtocolStorage"], [294, 2, 1, "", "CTImageStorage"], [295, 2, 1, "", "CTPerformedProcedureProtocolStorage"], [296, 2, 1, "", "CardiacElectrophysiologyWaveformStorage"], [297, 2, 1, "", "ChestCADSRStorage"], [298, 2, 1, "", "ColonCADSRStorage"], [299, 2, 1, "", "ColorPaletteStorage"], [300, 2, 1, "", "ColorSoftcopyPresentationStateStorage"], [301, 2, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [302, 2, 1, "", "Comprehensive3DSRStorage"], [303, 2, 1, "", "ComprehensiveSRStorage"], [304, 2, 1, "", "ComputedRadiographyImageStorage"], [305, 2, 1, "", "ConfocalMicroscopyImageStorage"], [306, 2, 1, "", "ConfocalMicroscopyTiledPyramidalImageStorage"], [307, 2, 1, "", "ContentAssessmentResultsStorage"], [308, 2, 1, "", "CornealTopographyMapStorage"], [309, 2, 1, "", "DICOS2DAITStorage"], [310, 2, 1, "", "DICOS3DAITStorage"], [311, 2, 1, "", "DICOSCTImageStorage"], [312, 2, 1, "", "DICOSDigitalXRayImageStorageForPresentation"], [313, 2, 1, "", "DICOSDigitalXRayImageStorageForProcessing"], [314, 2, 1, "", "DICOSQuadrupoleResonanceStorage"], [315, 2, 1, "", "DICOSThreatDetectionReportStorage"], [316, 2, 1, "", "DeflatedExplicitVRLittleEndian"], [317, 2, 1, "", "DeformableSpatialRegistrationStorage"], [318, 2, 1, "", "DermoscopicPhotographyImageStorage"], [319, 2, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [320, 2, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [321, 2, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [322, 2, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [323, 2, 1, "", "DigitalXRayImageStorageForPresentation"], [324, 2, 1, "", "DigitalXRayImageStorageForProcessing"], [325, 2, 1, "", "EddyCurrentImageStorage"], [326, 2, 1, "", "EddyCurrentMultiFrameImageStorage"], [327, 2, 1, "", "ElectromyogramWaveformStorage"], [328, 2, 1, "", "ElectrooculogramWaveformStorage"], [329, 2, 1, "", "EncapsulatedCDAStorage"], [330, 2, 1, "", "EncapsulatedMTLStorage"], [331, 2, 1, "", "EncapsulatedOBJStorage"], [332, 2, 1, "", "EncapsulatedPDFStorage"], [333, 2, 1, "", "EncapsulatedSTLStorage"], [334, 2, 1, "", "EnhancedCTImageStorage"], [335, 2, 1, "", "EnhancedContinuousRTImageStorage"], [336, 2, 1, "", "EnhancedMRColorImageStorage"], [337, 2, 1, "", "EnhancedMRImageStorage"], [338, 2, 1, "", "EnhancedPETImageStorage"], [339, 2, 1, "", "EnhancedRTImageStorage"], [340, 2, 1, "", "EnhancedSRStorage"], [341, 2, 1, "", "EnhancedUSVolumeStorage"], [342, 2, 1, "", "EnhancedXAImageStorage"], [343, 2, 1, "", "EnhancedXRFImageStorage"], [344, 2, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [345, 2, 1, "", "ExplicitVRBigEndian"], [346, 2, 1, "", "ExplicitVRLittleEndian"], [347, 2, 1, "", "ExtensibleSRStorage"], [348, 2, 1, "", "General32bitECGWaveformStorage"], [349, 2, 1, "", "GeneralAudioWaveformStorage"], [350, 2, 1, "", "GeneralECGWaveformStorage"], [351, 2, 1, "", "GenericImplantTemplateStorage"], [352, 2, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [353, 2, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [354, 2, 1, "", "HEVCM10P51"], [355, 2, 1, "", "HEVCMP51"], [356, 2, 1, "", "HTJ2K"], [357, 2, 1, "", "HTJ2KLossless"], [358, 2, 1, "", "HTJ2KLosslessRPCL"], [359, 2, 1, "", "HangingProtocolStorage"], [360, 2, 1, "", "HemodynamicWaveformStorage"], [361, 2, 1, "", "ImplantAssemblyTemplateStorage"], [362, 2, 1, "", "ImplantTemplateGroupStorage"], [363, 2, 1, "", "ImplantationPlanSRStorage"], [364, 2, 1, "", "ImplicitVRLittleEndian"], [365, 2, 1, "", "IntraocularLensCalculationsStorage"], [366, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [367, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [368, 2, 1, "", "InventoryStorage"], [369, 2, 1, "", "JPEG2000"], [370, 2, 1, "", "JPEG2000Lossless"], [371, 2, 1, "", "JPEG2000MC"], [372, 2, 1, "", "JPEG2000MCLossless"], [373, 2, 1, "", "JPEG2000TransferSyntaxes"], [374, 2, 1, "", "JPEGBaseline8Bit"], [375, 2, 1, "", "JPEGExtended12Bit"], [376, 2, 1, "", "JPEGLSLossless"], [377, 2, 1, "", "JPEGLSNearLossless"], [378, 2, 1, "", "JPEGLSTransferSyntaxes"], [379, 2, 1, "", "JPEGLossless"], [380, 2, 1, "", "JPEGLosslessSV1"], [381, 2, 1, "", "JPEGTransferSyntaxes"], [382, 2, 1, "", "JPIPHTJ2KReferenced"], [383, 2, 1, "", "JPIPHTJ2KReferencedDeflate"], [384, 2, 1, "", "KeratometryMeasurementsStorage"], [385, 2, 1, "", "KeyObjectSelectionDocumentStorage"], [386, 2, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [387, 2, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [388, 2, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [389, 2, 1, "", "LensometryMeasurementsStorage"], [390, 2, 1, "", "MPEG2MPHL"], [391, 2, 1, "", "MPEG2MPHLF"], [392, 2, 1, "", "MPEG2MPML"], [393, 2, 1, "", "MPEG2MPMLF"], [394, 2, 1, "", "MPEG4HP41"], [395, 2, 1, "", "MPEG4HP41BD"], [396, 2, 1, "", "MPEG4HP41BDF"], [397, 2, 1, "", "MPEG4HP41F"], [398, 2, 1, "", "MPEG4HP422D"], [399, 2, 1, "", "MPEG4HP422DF"], [400, 2, 1, "", "MPEG4HP423D"], [401, 2, 1, "", "MPEG4HP423DF"], [402, 2, 1, "", "MPEG4HP42STEREO"], [403, 2, 1, "", "MPEG4HP42STEREOF"], [404, 2, 1, "", "MPEGTransferSyntaxes"], [405, 2, 1, "", "MRImageStorage"], [406, 2, 1, "", "MRSpectroscopyStorage"], [407, 2, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [408, 2, 1, "", "MammographyCADSRStorage"], [409, 2, 1, "", "MediaStorageDirectoryStorage"], [410, 2, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [411, 2, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [412, 2, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [413, 2, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [414, 2, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [415, 2, 1, "", "MultichannelRespiratoryWaveformStorage"], [416, 2, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [417, 2, 1, "", "NuclearMedicineImageStorage"], [418, 2, 1, "", "OphthalmicAxialMeasurementsStorage"], [419, 2, 1, "", "OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [420, 2, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [421, 2, 1, "", "OphthalmicPhotography16BitImageStorage"], [422, 2, 1, "", "OphthalmicPhotography8BitImageStorage"], [423, 2, 1, "", "OphthalmicThicknessMapStorage"], [424, 2, 1, "", "OphthalmicTomographyImageStorage"], [425, 2, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [426, 2, 1, "", "PYDICOM_IMPLEMENTATION_UID"], [427, 2, 1, "", "PYDICOM_ROOT_UID"], [428, 2, 1, "", "ParametricMapStorage"], [429, 2, 1, "", "PatientRadiationDoseSRStorage"], [430, 2, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [431, 2, 1, "", "PhotoacousticImageStorage"], [432, 2, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [433, 2, 1, "", "PositronEmissionTomographyImageStorage"], [434, 2, 1, "", "PrivateTransferSyntaxes"], [435, 2, 1, "", "ProcedureLogStorage"], [436, 2, 1, "", "ProtocolApprovalStorage"], [437, 2, 1, "", "PseudoColorSoftcopyPresentationStateStorage"], [438, 2, 1, "", "RE_VALID_UID"], [439, 2, 1, "", "RE_VALID_UID_PREFIX"], [440, 2, 1, "", "RLELossless"], [441, 2, 1, "", "RLETransferSyntaxes"], [442, 2, 1, "", "RTBeamsDeliveryInstructionStorage"], [443, 2, 1, "", "RTBeamsTreatmentRecordStorage"], [444, 2, 1, "", "RTBrachyApplicationSetupDeliveryInstructionStorage"], [445, 2, 1, "", "RTBrachyTreatmentRecordStorage"], [446, 2, 1, "", "RTDoseStorage"], [447, 2, 1, "", "RTImageStorage"], [448, 2, 1, "", "RTIonBeamsTreatmentRecordStorage"], [449, 2, 1, "", "RTIonPlanStorage"], [450, 2, 1, "", "RTPatientPositionAcquisitionInstructionStorage"], [451, 2, 1, "", "RTPhysicianIntentStorage"], [452, 2, 1, "", "RTPlanStorage"], [453, 2, 1, "", "RTRadiationRecordSetStorage"], [454, 2, 1, "", "RTRadiationSalvageRecordStorage"], [455, 2, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [456, 2, 1, "", "RTRadiationSetStorage"], [457, 2, 1, "", "RTSegmentAnnotationStorage"], [458, 2, 1, "", "RTStructureSetStorage"], [459, 2, 1, "", "RTTreatmentPreparationStorage"], [460, 2, 1, "", "RTTreatmentSummaryRecordStorage"], [461, 2, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [462, 2, 1, "", "RawDataStorage"], [463, 2, 1, "", "RealWorldValueMappingStorage"], [464, 2, 1, "", "RespiratoryWaveformStorage"], [465, 2, 1, "", "RoboticArmRadiationStorage"], [466, 2, 1, "", "RoboticRadiationRecordStorage"], [467, 2, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [468, 2, 1, "", "SMPTEST211020UncompressedInterlacedActiveVideo"], [469, 2, 1, "", "SMPTEST211020UncompressedProgressiveActiveVideo"], [470, 2, 1, "", "SMPTEST211030PCMDigitalAudio"], [471, 2, 1, "", "SecondaryCaptureImageStorage"], [472, 2, 1, "", "SegmentationStorage"], [473, 2, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [474, 2, 1, "", "SimplifiedAdultEchoSRStorage"], [475, 2, 1, "", "SleepElectroencephalogramWaveformStorage"], [476, 2, 1, "", "SpatialFiducialsStorage"], [477, 2, 1, "", "SpatialRegistrationStorage"], [478, 2, 1, "", "SpectaclePrescriptionReportStorage"], [479, 2, 1, "", "StereometricRelationshipStorage"], [480, 2, 1, "", "SubjectiveRefractionMeasurementsStorage"], [481, 2, 1, "", "SurfaceScanMeshStorage"], [482, 2, 1, "", "SurfaceScanPointCloudStorage"], [483, 2, 1, "", "SurfaceSegmentationStorage"], [484, 2, 1, "", "TomotherapeuticRadiationRecordStorage"], [485, 2, 1, "", "TomotherapeuticRadiationStorage"], [486, 2, 1, "", "TractographyResultsStorage"], [487, 2, 1, "", "TwelveLeadECGWaveformStorage"], [488, 3, 1, "", "UID"], [489, 2, 1, "", "UltrasoundImageStorage"], [490, 2, 1, "", "UltrasoundMultiFrameImageStorage"], [491, 2, 1, "", "UncompressedTransferSyntaxes"], [492, 2, 1, "", "VLEndoscopicImageStorage"], [493, 2, 1, "", "VLMicroscopicImageStorage"], [494, 2, 1, "", "VLPhotographicImageStorage"], [495, 2, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [496, 2, 1, "", "VLWholeSlideMicroscopyImageStorage"], [497, 2, 1, "", "VariableModalityLUTSoftcopyPresentationStateStorage"], [498, 2, 1, "", "VideoEndoscopicImageStorage"], [499, 2, 1, "", "VideoMicroscopicImageStorage"], [500, 2, 1, "", "VideoPhotographicImageStorage"], [501, 2, 1, "", "VisualAcuityMeasurementsStorage"], [502, 2, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [503, 2, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [504, 2, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [505, 2, 1, "", "XADefinedProcedureProtocolStorage"], [506, 2, 1, "", "XAPerformedProcedureProtocolStorage"], [507, 2, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [508, 2, 1, "", "XRay3DAngiographicImageStorage"], [509, 2, 1, "", "XRay3DCraniofacialImageStorage"], [510, 2, 1, "", "XRayAngiographicImageStorage"], [511, 2, 1, "", "XRayRadiationDoseSRStorage"], [512, 2, 1, "", "XRayRadiofluoroscopicImageStorage"], [513, 1, 1, "", "generate_uid"], [514, 1, 1, "", "register_transfer_syntax"]], "pydicom.uid.UID": [[488, 6, 1, "", "__init__"], [488, 6, 1, "", "capitalize"], [488, 6, 1, "", "casefold"], [488, 6, 1, "", "center"], [488, 6, 1, "", "count"], [488, 6, 1, "", "encode"], [488, 6, 1, "", "endswith"], [488, 6, 1, "", "expandtabs"], [488, 6, 1, "", "find"], [488, 6, 1, "", "format"], [488, 6, 1, "", "format_map"], [488, 6, 1, "", "index"], [488, 4, 1, "", "info"], [488, 4, 1, "", "is_compressed"], [488, 4, 1, "", "is_deflated"], [488, 4, 1, "", "is_encapsulated"], [488, 4, 1, "", "is_implicit_VR"], [488, 4, 1, "", "is_little_endian"], [488, 4, 1, "", "is_private"], [488, 4, 1, "", "is_retired"], [488, 4, 1, "", "is_transfer_syntax"], [488, 4, 1, "", "is_valid"], [488, 6, 1, "", "isalnum"], [488, 6, 1, "", "isalpha"], [488, 6, 1, "", "isascii"], [488, 6, 1, "", "isdecimal"], [488, 6, 1, "", "isdigit"], [488, 6, 1, "", "isidentifier"], [488, 6, 1, "", "islower"], [488, 6, 1, "", "isnumeric"], [488, 6, 1, "", "isprintable"], [488, 6, 1, "", "isspace"], [488, 6, 1, "", "istitle"], [488, 6, 1, "", "isupper"], [488, 6, 1, "", "join"], [488, 4, 1, "", "keyword"], [488, 6, 1, "", "ljust"], [488, 6, 1, "", "lower"], [488, 6, 1, "", "lstrip"], [488, 6, 1, "", "maketrans"], [488, 4, 1, "", "name"], [488, 6, 1, "", "partition"], [488, 6, 1, "", "removeprefix"], [488, 6, 1, "", "removesuffix"], [488, 6, 1, "", "replace"], [488, 6, 1, "", "rfind"], [488, 6, 1, "", "rindex"], [488, 6, 1, "", "rjust"], [488, 6, 1, "", "rpartition"], [488, 6, 1, "", "rsplit"], [488, 6, 1, "", "rstrip"], [488, 6, 1, "", "set_private_encoding"], [488, 6, 1, "", "split"], [488, 6, 1, "", "splitlines"], [488, 6, 1, "", "startswith"], [488, 6, 1, "", "strip"], [488, 6, 1, "", "swapcase"], [488, 6, 1, "", "title"], [488, 6, 1, "", "translate"], [488, 4, 1, "", "type"], [488, 6, 1, "", "upper"], [488, 6, 1, "", "zfill"]], "pydicom.valuerep": [[515, 3, 1, "", "DA"], [516, 1, 1, "", "DS"], [517, 3, 1, "", "DSdecimal"], [518, 3, 1, "", "DSfloat"], [519, 3, 1, "", "DT"], [520, 3, 1, "", "IS"], [521, 3, 1, "", "ISfloat"], [522, 3, 1, "", "PersonName"], [523, 3, 1, "", "TM"], [524, 3, 1, "", "VR"], [525, 1, 1, "", "format_number_as_ds"], [526, 1, 1, "", "is_valid_ds"]], "pydicom.valuerep.DA": [[515, 6, 1, "", "__init__"], [515, 6, 1, "", "ctime"], [515, 6, 1, "", "fromisocalendar"], [515, 6, 1, "", "fromisoformat"], [515, 6, 1, "", "fromordinal"], [515, 6, 1, "", "fromtimestamp"], [515, 6, 1, "", "isocalendar"], [515, 6, 1, "", "isoformat"], [515, 6, 1, "", "isoweekday"], [515, 6, 1, "", "replace"], [515, 6, 1, "", "strftime"], [515, 6, 1, "", "timetuple"], [515, 6, 1, "", "today"], [515, 6, 1, "", "toordinal"], [515, 6, 1, "", "weekday"]], "pydicom.valuerep.DSdecimal": [[517, 6, 1, "", "__init__"], [517, 6, 1, "", "adjusted"], [517, 6, 1, "", "as_integer_ratio"], [517, 6, 1, "", "as_tuple"], [517, 6, 1, "", "canonical"], [517, 6, 1, "", "compare"], [517, 6, 1, "", "compare_signal"], [517, 6, 1, "", "compare_total"], [517, 6, 1, "", "compare_total_mag"], [517, 6, 1, "", "conjugate"], [517, 6, 1, "", "copy_abs"], [517, 6, 1, "", "copy_negate"], [517, 6, 1, "", "copy_sign"], [517, 6, 1, "", "exp"], [517, 6, 1, "", "fma"], [517, 6, 1, "", "from_float"], [517, 6, 1, "", "is_canonical"], [517, 6, 1, "", "is_finite"], [517, 6, 1, "", "is_infinite"], [517, 6, 1, "", "is_nan"], [517, 6, 1, "", "is_normal"], [517, 6, 1, "", "is_qnan"], [517, 6, 1, "", "is_signed"], [517, 6, 1, "", "is_snan"], [517, 6, 1, "", "is_subnormal"], [517, 6, 1, "", "is_zero"], [517, 6, 1, "", "ln"], [517, 6, 1, "", "log10"], [517, 6, 1, "", "logb"], [517, 6, 1, "", "logical_and"], [517, 6, 1, "", "logical_invert"], [517, 6, 1, "", "logical_or"], [517, 6, 1, "", "logical_xor"], [517, 6, 1, "", "max"], [517, 6, 1, "", "max_mag"], [517, 6, 1, "", "min"], [517, 6, 1, "", "min_mag"], [517, 6, 1, "", "next_minus"], [517, 6, 1, "", "next_plus"], [517, 6, 1, "", "next_toward"], [517, 6, 1, "", "normalize"], [517, 6, 1, "", "number_class"], [517, 6, 1, "", "quantize"], [517, 6, 1, "", "radix"], [517, 6, 1, "", "remainder_near"], [517, 6, 1, "", "rotate"], [517, 6, 1, "", "same_quantum"], [517, 6, 1, "", "scaleb"], [517, 6, 1, "", "shift"], [517, 6, 1, "", "sqrt"], [517, 6, 1, "", "to_eng_string"], [517, 6, 1, "", "to_integral"], [517, 6, 1, "", "to_integral_exact"], [517, 6, 1, "", "to_integral_value"]], "pydicom.valuerep.DSfloat": [[518, 6, 1, "", "__init__"], [518, 6, 1, "", "as_integer_ratio"], [518, 6, 1, "", "conjugate"], [518, 6, 1, "", "fromhex"], [518, 6, 1, "", "hex"], [518, 5, 1, "", "imag"], [518, 6, 1, "", "is_integer"], [518, 5, 1, "", "real"]], "pydicom.valuerep.DT": [[519, 6, 1, "", "__init__"], [519, 6, 1, "", "astimezone"], [519, 6, 1, "", "combine"], [519, 6, 1, "", "ctime"], [519, 6, 1, "", "date"], [519, 6, 1, "", "dst"], [519, 6, 1, "", "fromisocalendar"], [519, 6, 1, "", "fromisoformat"], [519, 6, 1, "", "fromordinal"], [519, 6, 1, "", "fromtimestamp"], [519, 6, 1, "", "isocalendar"], [519, 6, 1, "", "isoformat"], [519, 6, 1, "", "isoweekday"], [519, 6, 1, "", "now"], [519, 6, 1, "", "replace"], [519, 6, 1, "", "strftime"], [519, 6, 1, "", "strptime"], [519, 6, 1, "", "time"], [519, 6, 1, "", "timestamp"], [519, 6, 1, "", "timetuple"], [519, 6, 1, "", "timetz"], [519, 6, 1, "", "today"], [519, 6, 1, "", "toordinal"], [519, 6, 1, "", "tzname"], [519, 6, 1, "", "utcfromtimestamp"], [519, 6, 1, "", "utcnow"], [519, 6, 1, "", "utcoffset"], [519, 6, 1, "", "utctimetuple"], [519, 6, 1, "", "weekday"]], "pydicom.valuerep.IS": [[520, 6, 1, "", "__init__"], [520, 6, 1, "", "as_integer_ratio"], [520, 6, 1, "", "bit_count"], [520, 6, 1, "", "bit_length"], [520, 6, 1, "", "conjugate"], [520, 5, 1, "", "denominator"], [520, 6, 1, "", "from_bytes"], [520, 5, 1, "", "imag"], [520, 5, 1, "", "numerator"], [520, 5, 1, "", "real"], [520, 6, 1, "", "to_bytes"]], "pydicom.valuerep.ISfloat": [[521, 6, 1, "", "__init__"], [521, 6, 1, "", "as_integer_ratio"], [521, 6, 1, "", "conjugate"], [521, 6, 1, "", "fromhex"], [521, 6, 1, "", "hex"], [521, 5, 1, "", "imag"], [521, 6, 1, "", "is_integer"], [521, 5, 1, "", "real"]], "pydicom.valuerep.PersonName": [[522, 6, 1, "", "__init__"], [522, 4, 1, "", "alphabetic"], [522, 4, 1, "", "components"], [522, 6, 1, "", "decode"], [522, 6, 1, "", "encode"], [522, 6, 1, "", "family_comma_given"], [522, 4, 1, "", "family_name"], [522, 6, 1, "", "formatted"], [522, 6, 1, "", "from_named_components"], [522, 6, 1, "", "from_named_components_veterinary"], [522, 4, 1, "", "given_name"], [522, 4, 1, "", "ideographic"], [522, 4, 1, "", "middle_name"], [522, 4, 1, "", "name_prefix"], [522, 4, 1, "", "name_suffix"], [522, 4, 1, "", "phonetic"]], "pydicom.valuerep.TM": [[523, 6, 1, "", "__init__"], [523, 6, 1, "", "dst"], [523, 6, 1, "", "fromisoformat"], [523, 6, 1, "", "isoformat"], [523, 6, 1, "", "replace"], [523, 6, 1, "", "strftime"], [523, 6, 1, "", "tzname"], [523, 6, 1, "", "utcoffset"]], "pydicom.valuerep.VR": [[524, 6, 1, "", "__init__"], [524, 6, 1, "", "capitalize"], [524, 6, 1, "", "casefold"], [524, 6, 1, "", "center"], [524, 6, 1, "", "count"], [524, 6, 1, "", "encode"], [524, 6, 1, "", "endswith"], [524, 6, 1, "", "expandtabs"], [524, 6, 1, "", "find"], [524, 6, 1, "", "format"], [524, 6, 1, "", "format_map"], [524, 6, 1, "", "index"], [524, 6, 1, "", "isalnum"], [524, 6, 1, "", "isalpha"], [524, 6, 1, "", "isascii"], [524, 6, 1, "", "isdecimal"], [524, 6, 1, "", "isdigit"], [524, 6, 1, "", "isidentifier"], [524, 6, 1, "", "islower"], [524, 6, 1, "", "isnumeric"], [524, 6, 1, "", "isprintable"], [524, 6, 1, "", "isspace"], [524, 6, 1, "", "istitle"], [524, 6, 1, "", "isupper"], [524, 6, 1, "", "join"], [524, 6, 1, "", "ljust"], [524, 6, 1, "", "lower"], [524, 6, 1, "", "lstrip"], [524, 6, 1, "", "maketrans"], [524, 6, 1, "", "partition"], [524, 6, 1, "", "removeprefix"], [524, 6, 1, "", "removesuffix"], [524, 6, 1, "", "replace"], [524, 6, 1, "", "rfind"], [524, 6, 1, "", "rindex"], [524, 6, 1, "", "rjust"], [524, 6, 1, "", "rpartition"], [524, 6, 1, "", "rsplit"], [524, 6, 1, "", "rstrip"], [524, 6, 1, "", "split"], [524, 6, 1, "", "splitlines"], [524, 6, 1, "", "startswith"], [524, 6, 1, "", "strip"], [524, 6, 1, "", "swapcase"], [524, 6, 1, "", "title"], [524, 6, 1, "", "translate"], [524, 6, 1, "", "upper"], [524, 6, 1, "", "zfill"]], "pydicom.values": [[527, 1, 1, "", "convert_AE_string"], [528, 1, 1, "", "convert_ATvalue"], [529, 1, 1, "", "convert_DA_string"], [530, 1, 1, "", "convert_DS_string"], [531, 1, 1, "", "convert_DT_string"], [532, 1, 1, "", "convert_IS_string"], [533, 1, 1, "", "convert_OBvalue"], [534, 1, 1, "", "convert_OWvalue"], [535, 1, 1, "", "convert_PN"], [536, 1, 1, "", "convert_SQ"], [537, 1, 1, "", "convert_TM_string"], [538, 1, 1, "", "convert_UI"], [539, 1, 1, "", "convert_UN"], [540, 1, 1, "", "convert_UR_string"], [541, 1, 1, "", "convert_numbers"], [542, 1, 1, "", "convert_single_string"], [543, 1, 1, "", "convert_string"], [544, 1, 1, "", "convert_tag"], [545, 1, 1, "", "convert_text"], [546, 1, 1, "", "convert_value"], [547, 1, 1, "", "multi_string"]], "pydicom.waveforms": [[548, 0, 0, "-", "numpy_handler"]], "pydicom.waveforms.numpy_handler": [[548, 1, 1, "", "generate_multiplex"], [548, 1, 1, "", "is_available"], [548, 1, 1, "", "multiplex_array"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:method", "7": "py:exception"}, "terms": {"": [0, 2, 3, 4, 8, 9, 10, 12, 16, 17, 20, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 41, 43, 46, 47, 48, 49, 51, 52, 53, 83, 92, 93, 96, 109, 115, 119, 126, 127, 130, 131, 132, 137, 140, 143, 146, 147, 150, 152, 154, 156, 157, 160, 170, 171, 179, 180, 181, 203, 218, 235, 236, 237, 243, 244, 247, 248, 249, 256, 260, 263, 266, 267, 268, 272, 273, 274, 426, 427, 488, 517, 519, 520, 524, 525, 526, 528, 535, 536, 543, 545, 546, 561, 563, 564, 566, 571, 572, 574, 577, 579, 582, 584, 585, 586, 587, 589, 591, 592, 594], "0": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 33, 34, 36, 37, 38, 39, 41, 42, 43, 46, 48, 49, 50, 80, 81, 82, 99, 101, 102, 127, 129, 130, 131, 132, 133, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 156, 157, 166, 167, 168, 172, 173, 179, 180, 181, 204, 207, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 258, 259, 260, 265, 266, 267, 268, 269, 270, 273, 426, 427, 438, 439, 488, 513, 515, 517, 518, 519, 520, 521, 530, 532, 536, 544, 548, 549, 550, 551, 578, 583, 586, 587, 589, 591, 592, 594], "00": [5, 13, 19, 21, 147, 583], "000": [5, 21, 517, 583, 594], "0000": [2, 8, 12, 20, 26, 27, 28, 41, 46, 194, 488, 524, 561, 582, 587], "000000": [10, 20, 589], "00000000": 172, "000000000": [2, 8, 20], "00000000000000": [26, 28], "00000001": 172, "00000002": 172, "0000200": [2, 8, 20], "0001": [2, 12, 20, 26, 27, 28, 41, 46, 130, 131, 132, 134, 140, 142, 146, 194, 217, 259, 587], "00010": 172, "0002": [2, 12, 20, 26, 27, 28, 29, 39, 41, 46, 49, 130, 131, 132, 134, 140, 142, 146, 181, 194, 207, 209, 210, 217, 237, 259, 260, 262, 263, 270, 426, 587, 591], "0003": [2, 12, 20, 26, 27, 28, 41, 46, 134, 194, 587], "0004": [2, 10, 20, 26, 27, 28, 29, 39, 49, 130, 131, 132, 168, 170, 207, 209, 217, 218, 256, 259, 261, 262, 263, 561, 574, 589], "0005": [20, 26, 28, 46, 75, 76, 77, 78, 130, 131, 132, 160, 161, 548, 561, 562, 587, 588, 589], "0006": [26, 27, 28, 29, 39, 130, 131, 132, 207, 209, 210, 217, 259, 263, 270], "0008": [2, 12, 20, 26, 27, 28, 29, 39, 41, 46, 49, 75, 76, 77, 78, 130, 131, 132, 140, 142, 143, 145, 146, 160, 161, 207, 209, 210, 211, 217, 237, 250, 259, 260, 262, 263, 270, 555, 561, 562, 574, 587, 588, 589], "00080005": 588, "00080008": 588, "0009": [20, 46, 49, 130, 131, 132, 207, 263, 555, 561, 574], "00091002": 588, "000b": 46, "000d": [2, 20], "000e": [2, 20], "000y": 20, "001": [18, 19, 46, 583], "0010": [2, 12, 16, 17, 20, 26, 27, 28, 29, 39, 41, 46, 48, 49, 52, 66, 96, 130, 131, 132, 134, 143, 144, 145, 160, 194, 204, 207, 208, 209, 210, 217, 237, 259, 260, 262, 263, 270, 548, 549, 555, 556, 561, 570, 582, 586, 587, 589, 591], "0011": [2, 20, 29, 39, 48, 130, 131, 132, 204, 207, 209, 210, 217, 257, 259, 262, 263, 270, 271], "0012": [2, 12, 20, 26, 27, 28, 41, 46, 134, 194, 426, 587], "0013": [2, 12, 20, 26, 27, 28, 41, 46, 134, 194, 587, 589], "0014": [2, 20, 26, 27, 28, 587], "0015": 204, "0016": [2, 20, 26, 27, 28, 41, 46, 194, 587], "0017": 194, "0018": [2, 20, 26, 27, 28, 41, 130, 131, 132, 194, 211, 217, 237, 250, 259, 260], "0019": 20, "0019xx43": [561, 580], "001a": 50, "0020": [2, 12, 17, 20, 26, 27, 28, 41, 587, 589], "0021": [2, 20], "0022": [2, 20, 587], "0023": [2, 12, 20, 26, 27], "0025": 20, "0026": [26, 27], "0027": 20, "0028": [2, 20, 29, 39, 44, 49, 130, 131, 132, 140, 142, 143, 145, 146, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 244, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 267, 269, 270, 271, 561, 574, 576, 587], "0029": 20, "002c": [26, 27], "003": [11, 13, 16, 19, 583], "0030": [2, 17, 20, 41], "0031": [2, 20], "0032": [2, 20], "0033": [12, 20], "0036697": [26, 27, 28], "003669700000": [26, 28], "0037": [2, 20], "003a": [50, 130, 131, 132, 548, 594], "004": [12, 13, 583], "0040": [2, 20], "0041": 130, "0043": [20, 26, 28, 587], "005": [2, 5, 8, 13, 583], "0050": [2, 20, 26, 27, 41, 48], "0051": [26, 27], "0052": [2, 20], "0060": [2, 20, 26, 27, 41], "007": [14, 17, 19, 583], "0070": [2, 20, 26, 27], "0071": [26, 27, 28], "0078": [26, 27, 28], "007f": [488, 524], "0080": [2, 20, 26, 27, 28], "0081": [2, 20], "0082": [26, 27, 28], "0083": [2, 20], "0084": [2, 20, 26, 27, 28], "0085": [2, 20], "0086": [2, 20, 26, 27, 28], "0088": 20, "0090": [2, 20], "0091": [2, 20], "00a0": [26, 27, 28], "00b0": [26, 27], "00b6": [26, 27], "00f8": 18, "00fe": 18, "0100": [2, 20, 29, 39, 44, 50, 130, 131, 132, 194, 204, 207, 209, 210, 217, 248, 257, 259, 261, 262, 263, 267, 271, 548, 594], "0101": [2, 20, 29, 39, 130, 131, 132, 207, 209, 212, 217, 251, 252, 259, 263, 269], "0102": [2, 20, 39, 194, 204], "0103": [2, 20, 29, 39, 130, 131, 132, 207, 209, 210, 212, 217, 244, 251, 252, 259, 263, 269], "0106": [2, 20], "0107": [2, 20], "010c": [26, 27], "011": 19, "0111": [26, 27], "0115": [26, 27], "011a": [26, 27], "0120": 20, "0166": 20, "0180": [26, 27], "0197b5846bb5": [561, 568], "0200": 594, "0201": [2, 20, 561, 573], "0210": [130, 131, 132, 548, 594], "0211": [130, 131, 132], "025109": [10, 589], "0275401": [26, 27, 28], "02754010000000": [26, 28], "03": 551, "033": 22, "035797": 20, "03579711914062": 20, "0400": [2, 8, 20], "0411bab7c985": [561, 568], "045357": [10, 589], "05": [20, 586], "0500": 20, "050743": [10, 589], "051801": 12, "072730": [20, 26, 28], "072731": [20, 26, 28, 587], "07992553710938": 20, "079926": 20, "079956": 20, "08": 147, "085000": 20, "095": 20, "095000": 20, "097": [20, 21, 583], "0b01111111": 37, "0b10000000": 37, "0b100101": [273, 520], "0b1101": [273, 520], "0e0": 517, "0x00": [130, 131, 132, 137, 139, 181, 538], "0x0000": 181, "0x00000000": [144, 147], "0x0002": [131, 181, 247, 249, 266, 268, 587], "0x0006": [561, 571], "0x0008": 587, "0x0009": [46, 130, 131, 132], "0x00091001": 46, "0x000b": 46, "0x0010": [41, 130, 131, 132, 274, 587], "0x00100010": [41, 127, 130, 131, 132], "0x00100015": 274, "0x00100020": 130, "0x00100030": 130, "0x00100040": [130, 131, 132], "0x0015": 274, "0x0016": 587, "0x0018": 41, "0x0028": [235, 243, 247, 249, 266, 268, 587], "0x0030": 130, "0x0041": [130, 131, 132], "0x004100001": 46, "0x00410001": 109, "0x00410002": 109, "0x0043": 587, "0x01": [16, 46, 130], "0x02": [16, 46], "0x03": 16, "0x1": [518, 521], "0x10": [41, 127, 130, 131, 132, 274], "0x1001": 16, "0x100100010": 84, "0x10011001": 16, "0x10011002": 16, "0x10011003": 16, "0x1002": 587, "0x10021001": [107, 108], "0x10021002": [107, 108], "0x1020": 41, "0x104e": 587, "0x1050": 587, "0x1p": [518, 521], "0x3000": 48, "0x300a": 41, "0x50": 274, "0x5000": 17, "0x6000": [48, 204, 587], "0x6002": 587, "0x6004": 587, "0x6010": 204, "0x601e": 587, "0x60ff": 204, "0x888800001": 46, "0xb0": 41, "0xb4": 52, "0xc2": 41, "0xff": [130, 131, 132], "0xff00": 17, "0xffd9": 143, "0xffff": [130, 131, 132, 168, 561, 571], "0xffffffff": 127, "0xffffffffl": 127, "1": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 41, 43, 44, 46, 48, 49, 50, 52, 61, 79, 83, 84, 86, 95, 105, 107, 108, 109, 110, 127, 129, 130, 131, 132, 133, 134, 137, 138, 139, 143, 147, 148, 149, 154, 156, 157, 160, 172, 181, 194, 204, 207, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 522, 524, 548, 562, 565, 568, 576, 579, 582, 585, 586, 587, 588, 589, 591, 592, 593, 594], "10": [11, 20, 23, 26, 28, 39, 48, 50, 147, 172, 194, 247, 266, 273, 409, 444, 451, 473, 517, 518, 520, 521, 561, 568, 572, 582, 587, 589, 594], "100": [10, 20, 24, 26, 28, 36, 46, 50, 279, 392, 393, 404, 517, 587, 588, 589, 594], "1000": [2, 20, 50, 594], "10000": [50, 594], "1000000000000000055511151231257827021181583404541015625": 517, "10008": [8, 9, 12, 24, 26, 43, 44, 49, 130, 131, 132, 143, 207, 210, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 241, 242, 245, 246, 259, 270, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 561, 571, 572, 574, 576, 577, 582, 585, 587], "1001": [16, 20, 46, 130], "1002": [16, 20, 46, 587], "1003": [16, 20], "1004": [20, 548, 561, 574], "1005": 20, "1006": [20, 548, 561, 574], "1007": 20, "1008": 20, "1009": 20, "100a": 20, "100f": 20, "101": [22, 279, 390, 391, 404], "1010": [2, 20, 50, 594], "1011": 20, "1012": 20, "1013": [20, 561, 574], "1014": [20, 561, 577], "1015": 20, "1016": [20, 561, 574], "1017": 20, "1018": 20, "1019": [20, 49], "101a": 20, "101b": 20, "101c": 20, "101d": 20, "101e": 20, "101f": 20, "102": [279, 394, 397, 404, 561, 567], "1020": [2, 20], "102000": 20, "1021": 20, "1023": 20, "1024": [20, 127, 130, 131, 132, 561, 575, 588, 592], "1025": 20, "1026": 20, "1027": 20, "1028": 20, "1029": [20, 561, 575], "102a": 20, "102b": 20, "102c": 20, "102e": 20, "102f": 20, "103": [279, 395, 396, 404, 561, 567], "1030": [2, 20, 561, 575], "1031": 20, "1034": 20, "1035": 20, "1037": 20, "1038": [561, 576], "1039": [20, 589], "104": [22, 279, 329, 330, 331, 332, 333, 398, 399, 404], "1040": [2, 20], "1041": [2, 20], "1042": [20, 561, 576], "1043": 20, "10431": 20, "1044": 20, "1045": 20, "1046": 20, "1047": [20, 561, 576], "1048": 20, "1049": [20, 561, 576], "104a": 20, "104b": [20, 26, 28], "104c": [20, 26, 28], "104d": [20, 26, 28], "104e": [20, 26, 28, 587], "105": [22, 50, 279, 400, 401, 404], "1050": [2, 20, 214, 215, 254, 255, 587], "1051": [2, 20, 214, 215, 254, 255, 561, 579, 587], "1052": [20, 212, 251, 252], "1053": [20, 212, 251, 252, 561, 576], "1054": 20, "1055": 20, "1057": 20, "1058": 20, "105e": 20, "105f": 20, "106": [50, 279, 402, 403, 404], "1060": [2, 20], "1061": 20, "1062": 20, "1067": [561, 576], "1068": 49, "106a": 20, "106b": 20, "107": [9, 13, 20, 279, 355, 404, 561, 568, 583], "1070": [2, 20], "1071": 20, "1072": 20, "1073": [20, 561, 576], "1074": [20, 518, 521], "1075": [20, 561, 576], "1076": 20, "1078": [561, 576], "1079": 587, "107d": 20, "108": [279, 354, 404, 522], "1082": [561, 576], "1083": 49, "1086": [561, 576], "1090": [2, 20], "1091": 20, "10918": [39, 43, 218, 256, 381, 561, 579], "1092": 20, "1093": [20, 561, 577], "1094": 49, "1097": [561, 576], "1099": 20, "10da": 20, "10db": 20, "10dc": 20, "10dd": 20, "10de": 20, "10e6": 20, "10e7": 20, "10e9": 20, "11": [11, 20, 23, 212, 213, 214, 215, 251, 252, 253, 254, 255, 278, 284, 286, 300, 301, 352, 353, 416, 437, 457, 473, 497, 502, 507, 517, 561, 581, 582, 594], "110": [50, 561, 567], "1100": 20, "1101": [561, 574], "1103": [561, 574, 577], "111": [561, 567], "1110": 20, "111079": 20, "1111": 20, "112": 50, "1120": 20, "1127": [561, 577], "112749": 20, "1129": 49, "112936": 20, "113": [561, 568], "1130": [10, 20], "113008": 20, "1133": [561, 582], "114": [561, 568], "1140": [561, 577], "1141": 10, "1142": 10, "1146": [561, 577], "1147": [561, 579], "1149": [561, 577], "1150": 20, "1151": 20, "1152": 20, "1153": [561, 577], "1155": [561, 577], "1156": [561, 577], "116": [20, 26, 27, 28, 50], "1160": 20, "1161": [561, 577], "117": [561, 564], "1178": [561, 577], "118": 10, "1181": [561, 577], "119": [561, 564], "1190": [20, 561, 577], "1193": [561, 577], "1196533885": 10, "12": [0, 23, 30, 34, 39, 50, 68, 207, 244, 245, 342, 343, 456, 497, 510, 512, 517, 589, 594], "120": [20, 50], "1200": [50, 561, 577, 594], "1200x900": 0, "1201": [211, 250], "1203": [211, 250], "1204": [211, 250], "1210": 20, "121006": 593, "1211": [561, 577], "1215": [561, 577], "122": [561, 564], "1220": 589, "1221": [211, 250], "1223": [211, 250], "1224": [211, 250], "1227": 49, "123": [517, 588], "12322": [20, 26, 28, 46, 587], "1234": [561, 577], "12345": [41, 130], "123456": 12, "1234567": 170, "1234abcd": [20, 587], "1237": [561, 577], "123e": 517, "1240": [561, 577], "1243": [561, 582], "125": [561, 570], "1251": [561, 578], "1253": [561, 578], "1254": [561, 578], "126": [2, 20, 26, 28, 587, 594], "1262": [561, 579], "1263": [561, 582], "127": 37, "1278": [561, 579], "128": [2, 9, 12, 20, 26, 28, 37, 131, 153, 165, 175, 176, 177, 181, 194, 388, 433, 587, 592], "128002": 593, "129": [20, 592], "13": [11, 273, 288, 289, 290, 292, 508, 509, 520], "130": 338, "131": [50, 283], "1311": 587, "1312": [561, 579], "1314": [2, 20], "1318": 49, "1327": [561, 579], "133": [20, 165], "1332": [561, 579], "1336": 49, "1338": [561, 579], "1340": [561, 579], "1341": [561, 579], "1346": 49, "1348": [561, 579], "135803": 20, "1359940846": [10, 589], "1361": [561, 579], "13656": 36, "1369": 49, "137": 50, "1372": [561, 579], "14": [20, 44, 143, 232, 233, 366, 367, 485, 561, 576], "1400": [170, 589], "1410": [170, 589], "1412": [561, 579], "1414": [561, 581], "1415": [561, 579], "14159": [518, 521], "14180": 37, "1420": [170, 589], "1428": [561, 579], "143": [561, 570], "1430": [168, 589], "1434": [561, 579], "1436": 587, "1438": [561, 579], "1444": [561, 579], "1449": [561, 579], "14495": [37, 378], "1457": [561, 579], "1479": 10, "1481": [561, 582], "1487": [561, 580], "149188": 37, "1498": [561, 580], "15": [2, 8, 20, 465, 583, 587, 594], "150": [20, 50], "1500": [170, 561, 580], "150031": [24, 26, 27, 41], "151": [561, 570], "1510": 170, "1511": [170, 561, 580], "1512": 170, "152": 41, "152342": 36, "1529": [561, 582], "153557": [24, 26, 28, 41], "15444": [36, 264, 373], "156": [26, 27, 41], "1565": [561, 580], "157": 41, "1571": [561, 580], "1576": 20, "158": 20, "1581": [561, 580], "1582": 36, "1588": [561, 580], "159": [20, 561, 574], "1593": [561, 580], "1594": [561, 580], "1596": [561, 580], "1599": [561, 580], "16": [2, 8, 20, 26, 28, 30, 34, 36, 37, 38, 39, 44, 55, 127, 130, 131, 132, 133, 207, 209, 210, 269, 453, 525, 526, 548, 561, 574, 582, 592, 594], "1600": [2, 8, 20], "1601": 20, "1605775145": 20, "1606": [561, 580], "1609": [561, 580], "1611": [561, 581], "1617": [561, 580], "1632": [561, 581], "1634": [561, 581], "1638": [561, 581], "164": 41, "1648": [561, 581], "1658": [561, 581], "166": 41, "1661": [561, 581], "1666": [561, 582], "1667": [561, 581], "1670": [561, 581], "167161297070865690102504091919570542144": 513, "1674": [561, 581], "1680": [561, 581], "1683": [561, 581], "1689": [561, 582], "1693": [561, 581], "17": [20, 50, 454], "170": 20, "1702": [561, 581], "1703": 587, "171": 41, "17106": 589, "17136": 589, "17166": 589, "17196": 589, "172": [561, 570], "1728": [561, 581], "173032": [10, 589], "1734": [561, 581], "1738": [561, 581], "1743": [561, 582], "1747": [561, 581], "175": 41, "1752": [561, 582], "1773": [561, 582], "1774": [561, 582], "178": 20, "1781": [561, 582], "1788": [561, 581], "179": 20, "1792": [561, 581], "18": [127, 130, 131, 132, 484, 561, 570, 588], "180": [20, 41], "1803": [561, 581], "181": 41, "18148": 10, "1816": [561, 582], "183": 41, "1838265625": [561, 582], "184": 41, "1844": [561, 582], "1848": [561, 582], "185059": [2, 8, 20], "185434": [2, 8, 20], "1858": 589, "186": 41, "1860": 589, "1873": [561, 582], "1874": [561, 582], "187460": 38, "1895": 83, "19": 291, "190": [2, 20, 41], "19000101": 17, "1907": [561, 582], "192": [20, 26, 28, 46, 587], "1922": [561, 582], "193": [10, 13, 583], "1943": [561, 582], "1957": 592, "1965": [561, 582], "1968": [561, 582], "1969": 20, "197": [561, 570], "197968": 20, "1983": [561, 582], "1994": [561, 582], "19950903": [10, 589], "1997": [561, 582], "19970430": 20, "19999694824219": 20, "199999809265137": 20, "1c": [3, 181, 194, 207, 209, 210, 262, 263, 270, 594], "1c32791bf0": [561, 565], "1ct1": [9, 20, 26, 28, 589], "1d": [96, 204, 207, 208, 209, 210, 235, 248, 267, 270], "1f": 11, "2": [0, 2, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46, 49, 50, 52, 55, 79, 81, 83, 84, 85, 88, 95, 98, 99, 101, 102, 105, 107, 108, 109, 110, 127, 129, 130, 131, 132, 133, 134, 137, 138, 139, 143, 144, 147, 148, 149, 160, 168, 194, 204, 207, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 264, 266, 267, 268, 270, 271, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 517, 522, 530, 532, 548, 564, 565, 567, 568, 570, 571, 573, 574, 582, 585, 587, 589, 591, 592, 594], "20": [20, 36, 50, 130, 131, 132, 217, 257, 259, 271, 417, 466, 561, 579], "200": [36, 293, 295, 436, 505, 506], "2000": [2, 8, 20, 29, 35, 39, 43, 44, 79, 130, 131, 132, 143, 217, 222, 223, 224, 226, 227, 236, 238, 239, 246, 247, 249, 259, 264, 266, 268, 270, 373, 561, 574, 577, 582, 591, 592], "200000": 20, "20010101": [10, 130, 589], "20030505": [10, 589], "20030716": [24, 26, 27, 28, 41], "20030903": [24, 26, 27, 41], "20030903150023": [24, 26, 27, 41], "20040119": [9, 20, 26, 28, 587], "20040119072730": [20, 26, 28, 46, 587], "20040826": [2, 8, 20], "20040826185059": [2, 8, 20], "2006": [130, 131, 132, 561, 582], "2008": [22, 522, 561, 582], "2009": [561, 582], "201": [44, 223, 245, 279, 357, 368, 373], "2010": [561, 582], "2011": [561, 566, 567], "2012": [218, 256], "2013": [561, 582], "2017c": [561, 570], "2018": [23, 586], "2018b": [561, 571], "2018c": [561, 572], "2019": 23, "2019e": [561, 574], "202": [44, 224, 245, 279, 358, 373], "2020": 23, "2020d": [561, 577], "2021": [23, 561, 581], "2021b": [561, 579], "2022": 23, "2022a": [561, 580], "2023": 23, "2023b": [561, 581], "2023d": [561, 582], "2024": [23, 551, 561, 582], "20240603": 12, "203": [41, 44, 222, 245, 279, 356, 373], "20304870605469": 20, "2035": [561, 582], "204": [279, 382], "2040634155": [9, 20, 26, 28], "20406341552734": 20, "2047": [518, 521], "205": [279, 383, 561, 574], "2068": 20, "207": 41, "20x": [38, 43, 130, 131, 132, 217, 259, 561, 579], "21": [20, 50, 455], "212": [561, 570], "216": 41, "217": [3, 5, 583], "219482421875": 20, "21b0": 20, "22": [340, 459], "223": 5, "22463838056059845879389038257786771680": 513, "2281": 589, "23": [339, 561, 582], "2338": 589, "235": 41, "236": 585, "239": [24, 26, 27, 28, 41], "23e": 517, "23e2": 517, "24": [20, 36, 335], "240": [2, 8, 20], "240000": [50, 594], "24078": 20, "243": [561, 577], "2452": 587, "25": [50, 450, 513, 518, 521], "253": 22, "255": 37, "256": [561, 571], "256x256": [48, 49], "258": [561, 570], "261": 22, "261792": 37, "263": [561, 574], "265": 22, "270": 593, "273": [561, 574], "276": [10, 589], "277": [22, 561, 574], "280": 49, "285": 49, "291": [561, 572], "292": [561, 571], "29282": 48, "298": 49, "299316": 20, "2d": [561, 577], "3": [2, 4, 5, 8, 10, 12, 16, 17, 19, 20, 22, 23, 26, 28, 30, 32, 34, 36, 37, 38, 39, 41, 42, 44, 46, 49, 50, 55, 98, 105, 107, 108, 109, 127, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 156, 157, 168, 172, 179, 180, 181, 194, 204, 207, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 266, 268, 270, 271, 273, 279, 280, 290, 296, 315, 317, 319, 320, 328, 333, 336, 384, 409, 412, 431, 436, 437, 458, 470, 479, 488, 490, 495, 513, 517, 518, 520, 521, 524, 549, 550, 551, 564, 565, 567, 568, 569, 570, 571, 572, 576, 577, 578, 581, 585, 586, 587, 588, 589, 592, 594], "30": [24, 26, 27, 28, 50, 51, 428, 586], "300": [49, 130, 131, 132, 217, 259], "3000": [48, 130, 131, 132, 204, 212, 251, 252, 561, 574, 587], "3002": [212, 213, 214, 251, 252, 253, 254, 561, 574], "3006": [561, 576], "300a": [18, 26, 27, 28], "300c": [26, 27, 28], "3010": [213, 214, 253, 254], "302": 49, "304": [49, 592], "31": 137, "310": 22, "3100585938": 20, "312": 13, "3125": [2, 8, 20], "3126": 589, "316": 22, "31906": [10, 589], "32": [34, 36, 39, 130, 131, 132, 133, 138, 147, 207, 210, 269, 517, 548, 561, 571, 579, 582, 594], "320": [20, 49], "3204": 587, "321": 22, "321000e": 517, "324": [22, 518, 521], "327": 22, "32768": [20, 26, 28, 36, 37, 587], "328": 49, "33": 303, "331": 49, "333": 592, "334": 49, "334412": 36, "338": 20, "339": 49, "34": [302, 442, 444], "346": [22, 561, 570], "35": [127, 130, 131, 132, 172, 347], "350": 20, "353": [561, 570], "355": 49, "363": 22, "3678b1be6aca": [561, 568], "3680043": [426, 427, 513], "37": [50, 273, 520], "371919006": 593, "373": [20, 22], "374": 49, "377": 49, "378": 49, "379301": 12, "38": [36, 359], "380": 585, "3816": 20, "39": 299, "3994": 20, "3d": [2, 4, 8, 20, 248, 267, 561, 577], "3ed": 22, "3rd": [211, 212, 213, 214, 249, 250, 251, 252, 253, 254, 268], "4": [2, 8, 9, 10, 12, 16, 20, 21, 23, 24, 26, 28, 34, 36, 37, 38, 39, 41, 43, 44, 46, 49, 52, 129, 130, 131, 132, 137, 139, 143, 144, 147, 148, 149, 150, 176, 177, 181, 194, 212, 213, 214, 215, 217, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 238, 239, 240, 241, 244, 245, 246, 251, 252, 253, 254, 255, 259, 270, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 435, 436, 437, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 518, 521, 544, 567, 572, 573, 576, 577, 579, 582, 585, 587, 589, 593, 594], "40": [20, 36, 50, 435, 561, 579], "400": [20, 49], "4000": [2, 8, 20], "4095": [30, 34, 39, 244], "413": 49, "414": 517, "41421356": 517, "42": [16, 561, 564], "422": 49, "424152": 38, "43": [351, 561, 564], "431": 49, "44": [20, 361], "45": 362, "452": [561, 574], "46": 586, "46076": 36, "46100": 36, "464": [561, 571], "46af": 589, "47": [561, 564], "480": 20, "481": [24, 26, 291, 292, 335, 339, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 465, 466, 484, 485], "484": 48, "489": [561, 571], "494": 84, "498": [49, 426, 427, 513, 561, 571], "4ed698a7bfb": [561, 567], "4mr1": [2, 8, 17, 20], "5": [8, 9, 10, 12, 13, 16, 20, 22, 23, 24, 26, 32, 36, 37, 38, 39, 41, 43, 44, 49, 50, 55, 127, 129, 130, 131, 132, 133, 137, 139, 142, 143, 144, 145, 146, 147, 149, 150, 198, 204, 210, 213, 214, 215, 217, 218, 234, 242, 245, 246, 248, 253, 254, 255, 256, 257, 259, 267, 270, 271, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 359, 360, 361, 362, 363, 365, 366, 367, 368, 384, 385, 386, 387, 388, 389, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 517, 522, 576, 577, 585, 586, 587, 589, 592, 594], "50": [8, 44, 49, 50, 143, 228, 245, 270, 279, 374, 381, 408, 488], "500": [585, 587], "501": [309, 310, 311, 312, 313, 314, 315], "51": [2, 8, 20, 44, 143, 229, 245, 279, 375, 381], "510": 589, "5100": [2, 20], "512": [2, 20, 160, 204, 561, 571], "512x512": [48, 49], "51698a8366f2": 589, "52": [561, 567], "524288": 51, "531250000000": [24, 26, 27, 28], "53579711914062": 20, "537": [561, 574], "54": [513, 561, 582], "5400": [50, 130, 131, 132, 548, 594], "5457": [2, 8, 20], "55": [50, 561, 564], "566": 49, "57": [44, 143, 232, 245, 270, 279, 379, 381, 561, 572, 577, 582], "58": [561, 564], "581": 587, "584": [561, 572], "59": 385, "5962": [2, 8, 10, 20, 26, 28, 46, 587], "597": [561, 571], "599": [561, 571], "5e": [518, 521], "5x": [44, 130, 131, 132, 217, 259, 561, 579], "6": [2, 8, 10, 20, 23, 26, 28, 32, 36, 39, 44, 46, 49, 55, 77, 127, 129, 130, 131, 132, 139, 207, 218, 256, 270, 273, 314, 341, 352, 415, 431, 445, 464, 478, 486, 489, 496, 503, 515, 519, 520, 522, 562, 567, 568, 570, 577, 578, 581, 582, 586, 587, 594], "60": [50, 561, 568, 579], "600": [2, 8, 20], "6000": 48, "6002": 48, "60060977935791": [20, 26, 28, 587], "601": [325, 326], "601e": 48, "605": [561, 571], "60xx": [48, 204, 257, 271, 561, 574, 587], "6154": 589, "62": 50, "620": [561, 571], "623": [561, 576], "624": [561, 572], "6247": 589, "625": [561, 571], "6278": 589, "628": 49, "63": [2, 8, 20, 587], "630": 20, "631": 587, "63580322265625": 20, "64": [2, 8, 20, 32, 34, 36, 39, 49, 207, 216, 258, 269, 513, 548, 561, 564, 594], "640": [561, 571], "6406": [2, 8, 20], "643": 583, "649": [561, 571], "65": [50, 297], "650": [26, 27], "65535": [30, 34, 39, 244, 589], "66": [317, 462, 472, 476, 477, 483, 486], "660": [561, 572], "661468": [9, 20], "663": [561, 572], "666": [561, 573], "667": 513, "67": [463, 511], "6716": 20, "677": [561, 572], "678": [587, 592], "68": [50, 461, 481, 482], "682": [561, 572], "685": [561, 574], "6854": 587, "689": [561, 572], "69": 298, "693": [561, 574], "695": [561, 572], "696": [561, 572], "69999694824219": 20, "699997": 20, "699999809265137": 20, "6b949a5b925b": [561, 568], "7": [10, 20, 23, 24, 26, 27, 36, 39, 41, 49, 129, 133, 137, 149, 170, 194, 198, 207, 218, 256, 270, 279, 301, 318, 327, 328, 411, 412, 413, 414, 418, 420, 442, 460, 467, 468, 469, 470, 471, 475, 505, 515, 519, 568, 572, 581, 582, 586, 589, 594], "70": [44, 143, 233, 245, 270, 279, 363, 380, 381, 561, 576, 577, 582], "700": [10, 561, 572, 589], "700000": 20, "704": [561, 572], "706": 49, "707": [561, 572], "71": 277, "713": [561, 572], "715": [561, 572], "716": [561, 572], "717": [561, 572], "718": 20, "72": [474, 561, 564], "722": [561, 572], "7230010": [10, 589], "726": [561, 572], "728": [561, 572], "729": [561, 572], "73": [429, 561, 564], "730": [561, 573], "7369": 587, "737": [561, 572], "74": 432, "740": [561, 572], "7400": 20, "741": [26, 27], "746": [561, 582], "748": 20, "749": 20, "75": [20, 26, 27, 50, 430], "750": 20, "750675506": 20, "751": [24, 26, 27, 28], "753": [561, 573], "757": [561, 573], "76": 344, "760": [561, 573], "763": 20, "764": 20, "7654321": 170, "77": [9, 20, 24, 26, 27, 28, 41, 305, 306, 318, 419, 420, 421, 422, 424, 479, 492, 493, 494, 495, 496, 498, 499, 500, 503, 504], "770": 49, "774b7a55db33": [561, 568], "77654033": [10, 589], "777": [24, 26, 27, 41], "7777": [24, 26, 27, 41], "78": [282, 365, 384, 389, 418, 478, 480, 501, 561, 565], "78187": [10, 589], "784578": 20, "785": [561, 573], "788": [561, 573], "789": [561, 573], "79": [407, 561, 565], "791": [561, 573], "79187": 20, "799": [561, 573], "799988": 20, "7fe0": [2, 20, 26, 28, 41, 49, 52, 66, 96, 130, 131, 132, 140, 142, 143, 144, 145, 146, 160, 207, 208, 209, 210, 217, 259, 263, 549, 555, 556, 561, 570, 574, 582, 587], "8": [2, 8, 11, 20, 22, 23, 26, 27, 30, 34, 36, 37, 38, 39, 41, 43, 44, 49, 80, 130, 131, 132, 133, 172, 173, 204, 207, 209, 210, 213, 214, 215, 236, 237, 244, 245, 248, 253, 254, 255, 257, 260, 267, 269, 270, 271, 278, 287, 305, 365, 419, 426, 427, 449, 488, 506, 513, 524, 548, 563, 566, 570, 572, 574, 577, 580, 581, 582, 594], "80": [2, 8, 20, 36, 43, 44, 50, 52, 130, 131, 132, 143, 217, 230, 240, 245, 246, 259, 270, 279, 376, 378, 425, 594], "800": 36, "804": [561, 573], "81": [43, 44, 50, 130, 131, 132, 143, 217, 231, 241, 245, 246, 259, 270, 279, 377, 378, 423, 561, 565], "810": [561, 573], "815": [561, 573], "819": [561, 573], "8192": [20, 178], "82": [308, 561, 565], "820": [561, 573], "822": [561, 574], "826": [426, 427, 513, 561, 574], "826203": [26, 27], "83": [2, 8, 20], "833": 587, "835": [561, 573], "838": [561, 573], "84": [561, 565], "840": [8, 9, 12, 24, 26, 43, 44, 49, 130, 131, 132, 143, 207, 210, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 241, 242, 245, 246, 259, 270, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 561, 571, 572, 574, 576, 577, 582, 585, 587], "848": [561, 574], "84af4b240add": [561, 568], "85": 50, "850": [561, 573], "8508": 37, "852": [20, 561, 573], "856": [561, 573], "8601": [515, 519, 523], "862": 49, "862399669": 20, "862399761": 20, "864": [561, 573], "86e6b75b": 589, "87": [20, 37], "87000000000": [24, 26, 27, 28], "871": [218, 256], "87507166259346337659265156363895084463": 513, "878": [561, 579], "88": [26, 27, 41, 277, 284, 297, 298, 302, 303, 340, 344, 347, 363, 385, 408, 429, 430, 432, 435, 461, 474, 511, 561, 565], "887": [561, 574, 587], "888": [26, 27, 41], "89": 11, "891": [561, 574], "892": [561, 574], "894": [561, 574], "896": [561, 574], "899": [561, 574], "8d": 11, "9": [20, 23, 26, 27, 36, 37, 38, 41, 49, 50, 80, 172, 173, 204, 280, 281, 285, 287, 296, 306, 327, 328, 348, 349, 350, 360, 415, 438, 439, 448, 464, 467, 475, 487, 502, 513, 571, 574, 577, 582, 594], "90": [2, 8, 20, 43, 44, 50, 130, 131, 132, 143, 217, 227, 239, 245, 246, 259, 270, 279, 307, 370, 373, 561, 574], "904": 41, "905": [41, 49], "906": 41, "9063": [2, 8, 20], "907": 49, "909": 41, "91": [2, 8, 20, 43, 44, 130, 131, 132, 143, 217, 226, 238, 245, 246, 259, 270, 279, 369, 373, 410, 561, 566, 574], "910": 41, "911": 41, "912": [20, 561, 574], "914": 41, "915": [561, 574], "916": [41, 561, 564], "917": [561, 574], "92": [143, 279, 372, 373, 561, 571, 572], "921600": [36, 37, 38], "921f9f01b866ep": [518, 521], "922": 41, "9223372036854775807": 129, "923": 41, "924339": [2, 8, 20], "925": 41, "927": 41, "929": 41, "93": [50, 143, 279, 371, 373, 561, 566, 572], "932": [561, 574], "938": 41, "940": [561, 574], "942": [41, 561, 574], "947": [561, 574], "95": [20, 561, 567, 570], "951": [561, 574], "954": 41, "955": [20, 41], "959": 41, "96": [561, 566], "968": [561, 574], "97": [561, 566], "971": [561, 574], "973283917": 20, "98": [561, 567], "981": [561, 574], "9834": 513, "984": 20, "984375": [518, 521], "98890234": [10, 589], "98892001": 589, "98892003": 589, "99": [26, 27, 41, 44, 207, 219, 245, 279, 316, 491], "994": [561, 574], "999": [26, 27, 41, 561, 574], "9990268": [26, 27], "9999": [26, 27, 41, 586], "999999999999ap": [518, 521], "9b92b336e7d4": [561, 568], "A": [10, 20, 28, 30, 34, 36, 37, 38, 39, 41, 43, 51, 52, 53, 75, 76, 88, 103, 104, 106, 130, 131, 132, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 156, 157, 158, 160, 161, 168, 170, 171, 172, 173, 179, 180, 181, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 263, 264, 266, 268, 269, 270, 488, 513, 514, 517, 522, 524, 535, 542, 545, 546, 561, 571, 579, 582, 585, 587, 589, 592], "AS": [20, 32, 543], "AT": [32, 528, 561, 574, 579, 581], "And": [25, 26, 27, 28, 30, 561, 577, 585, 586, 587, 594], "As": [42, 44, 46, 517, 587, 593], "At": [30, 34, 585, 593], "Be": 44, "Being": 592, "But": 587, "By": [24, 26, 49, 168, 170, 521, 561, 565, 587], "For": [0, 17, 24, 26, 27, 30, 34, 36, 37, 38, 39, 41, 42, 46, 48, 49, 51, 52, 119, 127, 130, 131, 132, 137, 143, 144, 147, 168, 170, 204, 216, 217, 235, 236, 237, 243, 244, 247, 248, 249, 258, 259, 260, 266, 267, 268, 270, 517, 522, 561, 567, 577, 582, 585, 586, 587, 589, 591, 592], "IN": [203, 272], "If": [24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 41, 42, 43, 49, 50, 51, 52, 53, 55, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 93, 96, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 130, 131, 132, 133, 134, 137, 140, 141, 142, 143, 144, 146, 147, 150, 151, 154, 156, 157, 158, 160, 161, 162, 165, 169, 170, 171, 172, 178, 179, 180, 181, 193, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 235, 236, 237, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 265, 266, 267, 268, 269, 271, 272, 273, 274, 488, 513, 514, 517, 518, 519, 520, 522, 524, 525, 529, 530, 531, 532, 537, 541, 544, 548, 561, 567, 579, 582, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594], "In": [24, 25, 26, 27, 30, 34, 37, 39, 41, 43, 46, 49, 51, 52, 75, 170, 488, 517, 524, 561, 569, 575, 577, 581, 582, 585, 586, 587, 589, 592], "Into": 585, "It": [17, 26, 27, 30, 34, 41, 42, 46, 47, 49, 51, 53, 130, 131, 132, 144, 170, 181, 236, 561, 567, 568, 585, 586, 587, 588, 589, 591, 592, 594], "Its": 127, "NEAR": 37, "NOT": [204, 235, 243, 262], "Near": [43, 130, 131, 132, 143, 217, 231, 241, 245, 246, 259, 561, 582, 592], "No": [20, 36, 173, 534, 584], "Not": [517, 527, 528, 529, 530, 531, 532, 537, 538, 540, 543], "OF": [32, 181, 561, 576], "ON": 20, "OR": 522, "Of": 10, "On": [20, 39, 178, 522, 588], "One": [16, 29, 46, 48, 51, 52, 107, 108, 109, 127, 130, 131, 132, 211, 218, 235, 236, 243, 249, 250, 256, 268, 585, 586], "Or": [41, 591], "That": [42, 46], "The": [0, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 68, 75, 76, 77, 78, 96, 98, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 160, 162, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 193, 194, 196, 197, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 235, 236, 237, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 276, 488, 513, 514, 515, 517, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 561, 564, 571, 572, 577, 582, 585, 586, 587, 588, 591, 592, 593, 594], "Then": [590, 591], "There": [36, 42, 47, 49, 130, 131, 132, 217, 259, 561, 572, 585, 586, 587, 588, 594], "These": [1, 6, 7, 15, 40, 41, 42, 561, 577, 582, 587], "To": [10, 24, 26, 28, 36, 37, 38, 41, 42, 44, 48, 50, 51, 130, 131, 132, 153, 158, 236, 247, 249, 266, 268, 273, 520, 561, 567, 572, 577, 585, 586, 587, 589, 591, 594], "Will": [43, 108], "With": [37, 130, 131, 132, 244, 488, 524], "_": [173, 586], "_1sigmalowervalueofpopul": 593, "__class__": [515, 519], "__contains__": [84, 561, 577], "__dir__": [561, 567], "__doc__": [0, 2, 8, 11, 14, 16, 20, 22], "__eq__": [561, 571, 579], "__getitem__": [130, 131, 132, 488, 524, 587], "__init__": [14, 127, 129, 130, 131, 132, 133, 154, 156, 157, 169, 170, 171, 203, 235, 236, 243, 244, 272, 273, 488, 515, 517, 518, 519, 520, 521, 522, 523, 524], "__iter__": [561, 562, 577, 587], "__main__": [0, 14, 25, 26], "__name__": [0, 14, 25, 26], "__ne__": [561, 571], "__new__": 516, "__next__": [561, 577], "__setattr__": 83, "__str__": [561, 571, 579, 587], "__traceback__": 153, "__write_like_origin": 181, "_blob": 14, "_build": 586, "_check_dataset": 589, "_dataset__write_like_origin": [130, 131, 132], "_define_assess": 168, "_define_empti": 168, "_define_encap_doc": 168, "_define_generic_cont": 168, "_define_generic_content_id": 168, "_define_hanging_protocol": 168, "_define_imag": 168, "_define_impl": 168, "_define_implant_assi": 168, "_define_implant_group": 168, "_define_key_object_doc": 168, "_define_palett": 168, "_define_pati": 168, "_define_present": 168, "_define_radiotherapi": 168, "_define_rt_dos": [168, 589], "_define_rt_plan": 168, "_define_rt_structure_set": 168, "_define_rt_treatment_record": 168, "_define_seri": 168, "_define_spectroscopi": 168, "_define_sr_docu": 168, "_define_studi": 168, "_define_surface_scan": 168, "_dicom_dict": 41, "_from_codifi": [24, 26], "_list": 587, "_new": 14, "_pretty_str": [8, 587], "_recordifi": 589, "_storage_sopclass_uid": [561, 577, 582], "_t": 547, "_validate_arrai": 592, "a1": 4, "a2": 4, "a3": 4, "ab": [488, 524, 548], "abc": 522, "abcd1234": [20, 587], "abil": [26, 27, 49, 561, 569, 570, 577, 582], "abl": [44, 46, 561, 576, 582, 588, 589, 592, 594], "about": [41, 42, 47, 49, 52, 93, 257, 271, 587, 589, 592, 594], "abov": [18, 24, 25, 26, 27, 28, 41, 46, 48, 51, 127, 130, 131, 132, 204, 236, 247, 249, 266, 268, 561, 571, 586, 589], "absenc": 144, "absent": [36, 37, 522, 594], "absolut": [33, 37, 103, 104, 105, 106, 130, 131, 132, 151, 154, 156, 157, 169, 170, 217, 259, 273, 517, 520, 561, 582, 592], "absorb_delimiter_item": 69, "abstract": [517, 589], "accept": [24, 26, 32, 42, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 130, 131, 132, 147, 561, 576, 577, 579, 581, 585], "access": [2, 8, 20, 23, 26, 27, 30, 34, 36, 37, 41, 44, 46, 48, 53, 55, 68, 81, 98, 130, 131, 132, 160, 561, 563, 570, 576, 577, 581, 582, 586, 588, 589, 590, 593], "accessionnumb": 586, "accident": [585, 589], "accomplish": 46, "accord": [32, 51, 160, 192, 587, 589], "accordingli": [37, 38, 130, 131, 132], "account": 39, "achiev": [52, 139], "acknowledg": [561, 568], "acm": [16, 46, 109], "acq": 20, "acquisit": [2, 8, 20], "acquisitiondata": 586, "across": [561, 567, 582], "act": 587, "activ": 591, "actual": [10, 20, 25, 26, 29, 30, 34, 37, 39, 41, 48, 127, 130, 131, 132, 170, 181, 204, 207, 210, 236, 237, 244, 260, 585, 589, 592], "ad": [20, 25, 26, 27, 36, 37, 38, 41, 45, 52, 55, 79, 81, 83, 84, 88, 90, 95, 98, 99, 101, 102, 105, 127, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 146, 148, 149, 150, 151, 168, 170, 171, 179, 180, 181, 194, 203, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 264, 266, 267, 268, 271, 273, 434, 488, 530, 532, 548, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582, 584, 585, 588, 593], "adam": 522, "adapt": [561, 572], "adapt_dataset_from_byt": 14, "add": [0, 2, 6, 10, 12, 15, 18, 19, 20, 25, 26, 27, 30, 34, 41, 42, 46, 48, 52, 107, 109, 110, 127, 130, 131, 132, 133, 137, 138, 168, 170, 171, 181, 217, 236, 244, 248, 259, 267, 517, 561, 570, 573, 579, 581, 582, 583, 585, 586, 587, 589, 592, 594], "add_argu": [25, 26], "add_custom": [168, 170, 589], "add_dict_entri": [41, 46, 110, 561, 570, 573], "add_new": [16, 46, 130, 131, 132, 133, 587], "add_new_priv": [46, 130, 131, 132, 561, 582], "add_pars": [25, 26], "add_plugin": [30, 34, 236, 244], "add_private_dict_entri": [16, 41, 46, 561, 573], "add_subpars": [25, 26], "addit": [20, 26, 27, 28, 30, 34, 39, 75, 130, 131, 132, 169, 170, 217, 236, 237, 244, 247, 249, 259, 260, 266, 268, 519, 522, 523, 569, 577, 579, 582, 588, 589, 591, 592], "addition": 522, "adher": 42, "adit": [561, 564], "adjust": 517, "admin": 591, "advanc": [30, 34, 52, 236], "advantag": [20, 561, 568], "ae": [2, 20, 26, 28, 32, 46, 194, 527, 543, 561, 570, 582, 587], "affect": [30, 34, 205, 206, 207, 208, 209, 210, 263, 517, 585, 586], "after": [2, 8, 20, 26, 27, 28, 29, 30, 34, 37, 46, 47, 52, 130, 131, 132, 139, 141, 144, 150, 151, 165, 171, 176, 177, 178, 181, 194, 235, 236, 247, 249, 266, 268, 488, 517, 524, 561, 576, 579, 582, 585, 586, 587, 589, 591, 592], "afterward": [151, 585], "ag": [20, 32], "again": [42, 51, 585, 589], "against": [42, 127, 170, 561, 566, 577], "agent": [2, 8, 20], "aid": [561, 569], "aim": [52, 561, 577], "al": 23, "algorithm": [38, 513], "alia": [129, 561, 577], "alias": [561, 563, 576], "align": 48, "all": [4, 6, 8, 10, 12, 17, 20, 24, 26, 27, 28, 37, 39, 41, 42, 43, 45, 51, 53, 68, 96, 109, 127, 130, 131, 132, 135, 136, 137, 139, 144, 147, 154, 156, 157, 160, 170, 172, 179, 180, 181, 203, 217, 236, 237, 244, 247, 249, 259, 260, 266, 268, 272, 279, 488, 517, 524, 555, 556, 561, 562, 563, 564, 567, 569, 572, 574, 577, 579, 580, 581, 582, 583, 585, 586, 587, 591, 592], "alloc": [2, 8, 20, 29, 36, 37, 38, 39, 44, 52, 130, 131, 132, 207, 210, 217, 235, 236, 237, 243, 247, 248, 249, 257, 259, 260, 261, 266, 267, 268, 269, 271, 561, 581, 582, 594], "allow": [16, 17, 24, 26, 27, 36, 37, 39, 42, 46, 48, 55, 87, 130, 131, 132, 168, 170, 217, 248, 259, 267, 521, 561, 563, 564, 573, 576, 577, 579, 580, 581, 582, 591], "allow_ds_float": [551, 561, 567], "allow_excess_fram": 29, "alltransfersyntax": [561, 577], "almar": [561, 565], "almost": 49, "alon": 75, "along": [23, 170, 237, 260], "alpha": [20, 211, 250, 488, 524, 561, 573, 574, 593], "alphabet": [130, 131, 132, 488, 522, 524, 561, 581], "alphanumer": [170, 172, 561, 582], "alreadi": [26, 28, 36, 37, 38, 40, 43, 49, 52, 75, 108, 130, 131, 132, 134, 144, 171, 175, 194, 203, 217, 248, 259, 267, 516, 561, 569, 587, 589, 592, 594], "already_convert": 127, "also": [3, 17, 26, 27, 28, 29, 30, 32, 34, 37, 39, 41, 46, 47, 49, 51, 52, 77, 117, 130, 131, 132, 165, 194, 217, 236, 237, 244, 247, 249, 259, 260, 266, 268, 273, 488, 517, 520, 522, 524, 561, 562, 563, 564, 565, 568, 569, 572, 573, 577, 582, 585, 586, 587, 588, 589, 591, 592, 593, 594], "alter": 51, "altern": [10, 23, 41, 130, 213, 214, 215, 253, 254, 255, 585, 587, 589], "although": [49, 170, 589], "alwai": [26, 28, 44, 46, 49, 119, 127, 130, 131, 132, 133, 160, 207, 216, 236, 247, 249, 258, 266, 268, 270, 517, 561, 573, 577, 579, 582], "am": 586, "ambigu": [179, 180, 561, 570, 572, 573, 577], "american": 52, "amongst": 171, "amount": [43, 130, 131, 132, 205, 217, 235, 259, 517, 592, 594], "an": [2, 10, 11, 16, 23, 24, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 51, 52, 53, 55, 75, 76, 77, 83, 84, 85, 88, 96, 105, 106, 108, 114, 117, 118, 124, 127, 128, 130, 131, 132, 133, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 160, 161, 170, 171, 180, 181, 191, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 235, 236, 237, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 267, 268, 269, 271, 272, 273, 276, 488, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 541, 548, 561, 564, 565, 571, 573, 574, 576, 577, 579, 580, 582, 585, 586, 587, 589, 591, 592, 593, 594], "analog": [46, 130, 131, 132], "analys": [6, 21, 583], "anatom": 20, "ancestor": [170, 171, 179, 180], "angl": [2, 8, 20], "ani": [0, 10, 24, 26, 27, 29, 30, 32, 34, 36, 37, 39, 41, 42, 47, 48, 50, 78, 91, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 130, 131, 132, 134, 137, 138, 139, 153, 154, 155, 156, 157, 162, 170, 171, 181, 194, 203, 204, 214, 215, 216, 217, 235, 236, 237, 243, 244, 247, 248, 249, 254, 255, 258, 259, 260, 266, 267, 268, 273, 274, 488, 515, 517, 518, 519, 520, 521, 522, 523, 524, 536, 540, 546, 547, 561, 563, 564, 573, 579, 582, 585, 586, 589, 591, 592], "annex": [10, 36, 37, 38, 39, 49, 50, 127, 130, 131, 132, 137, 139, 142, 143, 144, 145, 146, 147, 149, 150, 168, 207, 212, 213, 214, 215, 218, 248, 251, 252, 253, 254, 255, 256, 257, 267, 270, 271, 513, 589], "announc": 96, "anonym": [6, 15, 19, 41, 46, 561, 562, 563, 573, 583], "anoth": [42, 218, 256, 561, 577, 587, 592], "answer": [38, 584, 587, 592], "anterior": 20, "anymor": 92, "anyon": [561, 569], "anyth": [32, 46, 48, 49, 248, 267], "anywher": [41, 587], "apertur": 18, "api": [52, 130, 131, 132, 236, 237, 244, 247, 249, 260, 266, 268, 561, 571, 585, 588, 592, 593], "app": 22, "app14": [561, 579], "appear": [153, 589], "append": [4, 11, 18, 20, 41, 139, 203, 272, 513, 587, 594], "appli": [1, 6, 10, 16, 29, 36, 39, 49, 50, 66, 77, 79, 130, 131, 132, 170, 211, 212, 213, 214, 215, 235, 236, 247, 249, 250, 251, 252, 253, 254, 255, 266, 268, 557, 561, 574, 577, 586, 591, 594], "applic": [2, 20, 26, 27, 28, 32, 42, 43, 46, 194, 587, 592], "apply_color_lut": [49, 551, 561, 574, 582], "apply_j2k_correct": [551, 561, 582], "apply_j2k_sign_correct": 29, "apply_jls_sign_correct": 29, "apply_modality_lut": [49, 213, 214, 215, 253, 254, 255, 551, 561, 574, 576, 582], "apply_rescal": [561, 577, 582], "apply_voi": [214, 215, 254, 255, 551, 561, 577, 582], "apply_voi_lut": [49, 551, 561, 574, 576, 577, 582], "apply_window": [213, 214, 253, 254, 551, 561, 577, 582], "approach": 201, "appropri": [43, 48, 49, 165, 203, 209, 235, 517, 546, 592], "approv": [585, 586], "approx": [561, 564, 568], "approxim": 51, "appveyor": [561, 570], "apr": 586, "ar": [4, 10, 18, 24, 26, 27, 28, 29, 36, 37, 38, 39, 41, 42, 44, 46, 47, 48, 49, 55, 68, 75, 76, 80, 81, 84, 93, 96, 100, 101, 107, 109, 110, 127, 130, 131, 132, 133, 134, 137, 138, 140, 142, 143, 144, 145, 146, 147, 154, 156, 157, 160, 165, 168, 170, 173, 179, 180, 181, 194, 203, 205, 206, 210, 211, 212, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 244, 247, 249, 250, 251, 252, 254, 255, 258, 261, 264, 266, 268, 269, 273, 488, 517, 519, 520, 522, 523, 524, 525, 540, 543, 545, 547, 561, 567, 572, 573, 574, 576, 577, 579, 580, 582, 584, 585, 586, 587, 589, 591, 592, 593, 594], "arang": [3, 594], "archibald": [10, 589], "archiv": 20, "area": 585, "aren": [170, 235, 236, 244, 561, 582, 587, 589], "arg": [25, 26, 130, 131, 132, 153, 154, 155, 156, 157, 274, 488, 515, 519, 522, 523, 524, 561, 565], "arg2": [274, 561, 564], "argpars": [25, 26], "argument": [24, 25, 26, 27, 28, 41, 43, 52, 91, 130, 131, 132, 179, 180, 181, 202, 203, 272, 273, 488, 517, 519, 520, 523, 524, 561, 563, 564, 572, 573, 574, 575, 576, 577, 582, 588, 589, 592], "argv": [0, 4, 14], "arithmet": 517, "around": [41, 561, 582, 585], "arr": [2, 3, 37, 41, 48, 49, 50, 52, 130, 131, 132, 204, 211, 212, 213, 214, 215, 217, 218, 235, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 265, 266, 267, 268, 270, 592, 594], "arr_downsampl": 2, "arrai": [2, 4, 14, 20, 26, 28, 29, 37, 41, 48, 49, 50, 51, 52, 81, 96, 101, 127, 130, 131, 132, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 235, 236, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 266, 267, 268, 270, 273, 516, 520, 561, 562, 572, 573, 576, 577, 582, 587], "artifact": 586, "as_arrai": [29, 209, 236, 257, 271], "as_buff": [29, 236], "as_float": 269, "as_fram": 235, "as_integer_ratio": [273, 517, 518, 520, 521], "as_pixel_opt": 551, "as_raw": [3, 50, 548, 561, 581, 594], "as_rgb": [29, 130, 131, 132, 237, 260], "as_tupl": 517, "ascii": [32, 173, 199, 488, 524, 561, 573], "ask": [38, 584, 585, 586], "aspect": 4, "assert": [36, 37, 585, 588], "assess": 168, "assi": 168, "assign": [17, 41, 68, 127, 561, 567, 574, 580], "associ": [130, 131, 132, 235, 243], "assum": [4, 25, 26, 37, 43, 49, 88, 144, 488, 524, 561, 570, 589, 592, 594], "assume_implicit_vr_switch": [551, 561, 579], "astimezon": 519, "astyp": 594, "at_top_level": 161, "attach": 170, "attempt": [29, 30, 34, 143, 180, 181, 548, 561, 570, 579, 582, 587], "attr": 52, "attribut": [32, 39, 46, 68, 83, 127, 129, 130, 131, 132, 154, 156, 157, 169, 170, 171, 181, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 260, 273, 488, 515, 517, 518, 519, 520, 521, 522, 523, 524, 561, 562, 572, 577, 580, 581, 582, 587, 589], "attributeerror": [179, 204, 205, 207, 209, 210, 236, 244, 561, 564, 580, 582, 587], "audio": [50, 594], "august": 23, "author": [2, 8, 9, 11, 12, 16, 17, 20, 22], "auto": [20, 130, 131, 132, 519, 523, 561, 562], "auto_exampl": [5, 13, 19, 21], "auto_examples_jupyt": 6, "auto_examples_python": 6, "auto_format": [516, 517, 518, 561, 579], "autocomplet": [130, 131, 132], "automat": [26, 27, 41, 43, 46, 48, 49, 51, 52, 96, 127, 130, 131, 132, 170, 179, 180, 181, 517, 518, 561, 570, 574, 576, 579, 585, 586, 587], "avail": [1, 6, 10, 15, 24, 26, 27, 28, 30, 33, 34, 41, 46, 47, 49, 50, 51, 105, 130, 131, 132, 137, 138, 140, 142, 146, 154, 156, 157, 170, 205, 206, 208, 217, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 244, 247, 249, 257, 259, 260, 264, 266, 268, 271, 522, 530, 532, 561, 563, 564, 568, 570, 571, 572, 574, 577, 589, 591, 592, 593, 594], "averag": [2, 8, 20], "averagin": 2, "avf": 594, "avg": 20, "avl": 594, "avoid": [42, 102, 161, 178, 516, 561, 573, 574, 577, 589], "avr": 594, "awai": 589, "awar": [30, 34, 51, 589], "ax": 3, "ax1": 594, "ax2": 594, "ax_aspect": 4, "axesimag": 47, "axi": 594, "axial": [1, 5, 6, 20, 26, 28, 46, 561, 573, 583, 587], "azimuth": 20, "b": [2, 8, 12, 16, 20, 22, 26, 27, 28, 37, 39, 41, 46, 48, 49, 127, 130, 131, 132, 154, 156, 157, 181, 513, 517, 522, 585, 586, 587], "b1": 39, "b2": 39, "b6b3658f3b14": [561, 567], "b764": 589, "back": [2, 14, 16, 20, 38, 48, 49, 51, 52, 585, 586, 587, 589], "backend": [29, 130, 131, 132, 561, 582], "backslash": [127, 130, 131, 132, 522, 542, 561, 562, 563, 579], "backup": 170, "backward": [130, 131, 132, 561, 564, 570], "bad": [561, 570, 580], "balanc": 42, "bar": [561, 581], "bari": 593, "base": [6, 21, 23, 36, 37, 38, 39, 69, 80, 130, 131, 132, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 241, 242, 515, 517, 519, 523, 551, 555, 556, 561, 564, 570, 574, 577, 583, 585, 586, 589, 592, 594], "base64": [127, 130, 131, 132, 588], "baselin": [20, 39, 43, 44, 49, 143, 228, 245, 270, 488, 561, 581, 594], "basetag": [32, 41, 59, 84, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 129, 130, 131, 132, 133, 158, 160, 161, 164, 170, 174, 176, 177, 178, 247, 249, 266, 268, 274, 275, 276, 528, 544, 561, 564, 579], "basic": [11, 26, 27, 28, 43, 47, 50, 51, 53, 70, 130, 131, 132, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 217, 259, 561, 574, 582, 589, 590, 592, 594], "bb": 22, "bbh": 20, "beam": [11, 18, 24, 26, 27, 28, 561, 567], "beam0": 18, "beam1": 41, "beamdosespecificationpoint": [24, 26], "beamnam": [11, 18, 41], "beamnumb": [11, 24, 26, 27, 28], "beamsequ": [11, 18, 24, 26, 27, 28, 41, 130, 561, 567], "bec3": 589, "becaus": [10, 24, 26, 37, 38, 39, 41, 48, 49, 51, 52, 68, 153, 170, 585, 586, 587], "becom": [95, 561, 567, 577, 585, 586, 589], "been": [10, 25, 26, 39, 44, 46, 49, 81, 88, 90, 130, 131, 132, 137, 138, 140, 141, 142, 143, 144, 146, 162, 169, 170, 172, 181, 193, 194, 235, 236, 243, 248, 267, 488, 516, 517, 524, 561, 564, 571, 576, 579, 580, 582, 585, 586, 587, 588], "befor": [38, 44, 46, 90, 127, 130, 131, 132, 160, 171, 178, 214, 215, 235, 236, 254, 255, 488, 524, 561, 564, 567, 568, 570, 573, 585, 586, 587, 589, 592, 594], "beforehand": 591, "began": 593, "begin": [41, 99, 137, 150, 165, 273, 488, 520, 524], "behav": [42, 110, 203, 561, 571, 573, 589], "behavior": [41, 42, 55, 83, 84, 95, 130, 131, 132, 561, 568, 572, 576, 577], "being": [37, 39, 102, 111, 112, 113, 115, 116, 119, 121, 122, 123, 126, 130, 131, 132, 144, 154, 156, 157, 210, 244, 561, 562, 572, 579, 580, 582, 589, 591, 592], "belong": [128, 130, 131, 132, 169, 170], "below": [26, 28, 32, 36, 37, 38, 43, 46, 171, 181, 204, 207, 209, 210, 270, 548, 561, 564, 589, 592, 593], "best": [29, 45, 68], "beta": 588, "better": [37, 52, 561, 565, 567, 571], "between": [6, 21, 37, 38, 48, 49, 52, 108, 204, 488, 524, 561, 582, 583, 585, 586, 587, 592], "big": [29, 33, 34, 39, 44, 130, 131, 132, 140, 141, 142, 146, 150, 151, 154, 156, 157, 181, 207, 210, 220, 236, 245, 273, 279, 488, 514, 520, 561, 581, 582, 594], "bigger": [51, 561, 576], "bin": [273, 520, 585, 586], "binari": [24, 26, 127, 130, 131, 132, 248, 267, 273, 517, 520, 561, 565, 573, 574], "binaryio": [130, 131, 132, 158, 160, 161, 162, 164, 165, 166, 167, 174, 175, 176, 177, 178, 181, 235, 236, 243, 247, 249, 266, 268, 561, 582], "biopsi": 20, "birth": [2, 8, 17, 20], "bit": [2, 8, 20, 29, 30, 32, 34, 37, 38, 39, 44, 47, 48, 49, 52, 130, 131, 132, 133, 147, 207, 210, 212, 217, 235, 236, 237, 243, 244, 245, 247, 248, 249, 251, 252, 257, 259, 260, 261, 266, 267, 268, 269, 271, 273, 520, 561, 571, 572, 574, 579, 580, 581, 582, 585, 586, 592, 594], "bit_count": [273, 520], "bit_length": [273, 520], "bits_alloc": [29, 30, 34, 216, 235, 243, 244, 258, 261], "bits_stor": [29, 30, 34, 216, 235, 243, 244, 258], "bitsalloc": [36, 37, 38, 43, 44, 127, 207, 209, 210, 262, 263, 269, 561, 572], "bitsstor": [26, 28, 36, 37, 207, 209, 263], "black": [36, 37, 38, 561, 582], "blank": [16, 17, 108, 203, 516, 561, 563, 587], "blend": 20, "blob": 14, "block": [16, 18, 20, 26, 27, 28, 36, 46, 130, 131, 132, 133, 561, 576, 586], "block1": 18, "block2": 18, "block_ds1": 18, "block_ds2": 18, "block_ds3": 18, "block_start": 133, "blocknam": 18, "blocksequ": 18, "blocktyp": 18, "blue": [36, 37, 38, 39, 561, 576], "bn": 39, "boli": [26, 28], "bolu": [2, 8, 20], "bond": 14, "bone": [20, 47], "bool": [29, 30, 33, 34, 55, 80, 81, 93, 95, 100, 105, 114, 115, 124, 125, 127, 129, 130, 131, 132, 134, 137, 147, 154, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 194, 201, 204, 205, 206, 207, 208, 209, 210, 214, 217, 218, 235, 236, 237, 243, 244, 247, 248, 249, 254, 256, 257, 259, 260, 264, 265, 266, 267, 268, 269, 271, 273, 488, 514, 516, 517, 518, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 543, 544, 548], "bot": 147, "both": [29, 37, 38, 42, 75, 80, 81, 96, 147, 170, 214, 254, 517, 561, 563, 570, 573, 576, 582, 588], "bottom": [20, 52, 585, 586], "boundari": [143, 488, 524, 561, 582], "bowti": 20, "box": [23, 52], "brace": [488, 524], "brachi": [26, 27, 28], "bracket": [41, 46, 587], "brain": [10, 589], "branch": [587, 591], "break": [42, 488, 524, 561, 577, 589], "brett": [561, 569], "briefli": 589, "broken": 49, "browser": 586, "bubbl": [130, 131, 132], "buffer": [14, 29, 130, 131, 132, 140, 141, 142, 145, 146, 150, 151, 154, 156, 157, 160, 181, 193, 207, 235, 236, 243, 273, 520, 561, 582], "bug": [565, 569, 573, 576, 579, 584, 585, 591], "build": [0, 4, 179, 180, 561, 570, 581, 585], "build_tre": 0, "built": [52, 273, 520, 591], "bulk": [49, 127, 130, 131, 132, 551, 561, 574, 575, 578, 588], "bulk_data_element_handl": [127, 130, 131, 132, 588], "bulk_data_handl": 588, "bulk_data_read": 588, "bulk_data_threshold": [127, 130, 131, 132, 561, 575, 588], "bulk_data_uri": 588, "bulk_data_uri_handl": [127, 130, 131, 132, 561, 577, 588], "bulkdatauri": [127, 130, 131, 132, 588], "bullet": [561, 564], "button": 20, "bypass": 55, "byte": [14, 24, 26, 29, 30, 32, 33, 34, 37, 39, 41, 43, 48, 49, 50, 51, 76, 77, 78, 88, 89, 110, 127, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 161, 162, 163, 165, 175, 176, 177, 178, 179, 180, 181, 186, 187, 191, 193, 194, 202, 204, 235, 236, 243, 244, 248, 257, 261, 262, 264, 267, 271, 273, 488, 520, 522, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 561, 572, 573, 574, 579, 582, 587, 589, 592, 594], "byte_str": [527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545], "bytearrai": [29, 30, 34, 130, 131, 132, 140, 141, 142, 146, 150, 151, 154, 156, 157, 235, 236, 243, 261, 273, 520], "bytelength": [161, 166], "byteord": [29, 33, 34, 273, 520, 594], "bytes_to_find": 175, "bytesio": [14, 16, 131, 154, 561, 582, 587], "byteslengthexcept": [561, 581], "bytestr": [181, 261], "bytestream": [143, 145], "c": [2, 10, 18, 20, 22, 24, 26, 27, 28, 32, 39, 41, 46, 49, 50, 92, 130, 131, 132, 204, 207, 212, 213, 214, 215, 218, 251, 252, 253, 254, 255, 256, 270, 517, 543, 561, 568, 587, 588, 589, 591, 592, 594], "c313d2befb08": [561, 567], "cach": [585, 591], "cal": 20, "calcul": [561, 579, 581], "calibr": 20, "call": [10, 25, 26, 39, 41, 42, 43, 48, 51, 80, 84, 90, 130, 131, 132, 144, 154, 156, 157, 158, 170, 177, 181, 203, 235, 488, 516, 524, 561, 564, 567, 571, 577, 582, 587, 589, 592], "call_back": 161, "callabl": [90, 127, 130, 131, 132, 158, 161, 164, 168, 203, 235, 243, 547], "callback": [17, 25, 26, 130, 131, 132, 561, 570], "caller": [160, 561, 564], "camel": [83, 561, 577], "can": [1, 6, 10, 14, 17, 24, 25, 26, 27, 28, 30, 32, 34, 37, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 95, 130, 131, 132, 137, 138, 156, 157, 160, 161, 168, 170, 181, 196, 203, 236, 244, 488, 514, 516, 517, 521, 524, 547, 561, 562, 563, 564, 567, 576, 577, 580, 582, 585, 586, 587, 588, 589, 591, 592, 593, 594], "cancel": 170, "cannot": [41, 44, 84, 130, 131, 132, 170, 181, 203, 217, 259, 517, 521, 525, 561, 579, 582, 585, 589], "canon": 517, "capabl": 593, "capac": 44, "capit": [52, 488, 517, 524, 561, 567], "captur": 585, "carotid": [10, 589], "carri": [516, 517, 561, 569], "case": [25, 26, 37, 41, 42, 46, 51, 55, 75, 77, 83, 130, 131, 132, 161, 217, 236, 259, 488, 517, 522, 524, 561, 573, 577, 582, 587, 588, 592, 594], "casefold": [488, 524], "caseless": [488, 524], "catch": [561, 564, 566], "caus": [30, 34, 525, 561, 563, 589], "caution": 587, "cb": 261, "cd": [585, 586, 589], "cell": 20, "center": [2, 8, 20, 214, 215, 254, 255, 488, 524, 587], "central": 2, "certain": [51, 130, 131, 132, 270, 586, 587], "certainli": 51, "ch": [37, 594], "ch1": 594, "ch2": 594, "ch_idx": 3, "ch_item": 3, "ch_sourc": 3, "chain": 20, "chan": 20, "chanc": 587, "chang": [10, 12, 25, 26, 27, 30, 34, 38, 42, 43, 48, 49, 52, 55, 81, 95, 105, 127, 130, 131, 132, 147, 154, 156, 157, 170, 172, 179, 180, 181, 205, 206, 207, 208, 209, 210, 214, 218, 235, 248, 254, 256, 257, 267, 270, 271, 513, 517, 530, 532, 576, 584, 587, 588, 590, 591, 592, 593], "channel": [3, 20, 37, 39, 49, 50, 130, 131, 132, 207, 548, 594], "channeldefinitionsequ": [3, 594], "channelsampleskew": 594, "channelsensit": 594, "channelsensitivityunitssequ": [3, 594], "channelsourcesequ": [3, 594], "chapter": [39, 513], "chapter_7": 586, "char": [488, 524], "charact": [10, 20, 26, 28, 32, 42, 46, 52, 55, 75, 76, 77, 78, 88, 127, 128, 130, 131, 132, 133, 160, 161, 170, 171, 172, 173, 193, 196, 197, 198, 488, 513, 522, 524, 525, 526, 530, 532, 535, 536, 542, 545, 546, 551, 561, 562, 563, 570, 572, 573, 576, 577, 579, 580, 581, 582, 585, 587, 588, 589], "character_encod": [130, 131, 132], "character_set": 587, "charl": 591, "charpyl": [561, 581, 591], "charset": [103, 551, 561, 581], "chdef": 594, "chdef_seq": 594, "check": [3, 12, 41, 42, 114, 115, 117, 118, 120, 124, 125, 130, 131, 132, 134, 173, 181, 194, 516, 526, 561, 567, 570, 572, 573, 576, 577, 579, 582, 585, 586, 591, 594], "checkout": [585, 586], "checksum": 20, "chief": 522, "child": 171, "children": 171, "chines": [561, 562, 570], "choos": [585, 586], "chosen": [517, 594], "chtml": 52, "ci": [561, 582], "cid": 593, "cid270": 593, "cid_for_nam": 593, "circleci": 586, "circumst": [137, 138], "citat": 23, "citizen": [83, 127, 130, 587], "clam": 0, "clarif": [585, 586], "clariti": [561, 570], "class": [2, 8, 9, 12, 14, 20, 26, 27, 28, 29, 30, 34, 41, 46, 49, 50, 52, 53, 55, 68, 69, 80, 127, 129, 130, 131, 132, 133, 134, 154, 156, 157, 160, 169, 170, 171, 181, 194, 203, 235, 236, 243, 244, 272, 273, 426, 488, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 551, 555, 556, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 574, 576, 577, 580, 581, 582, 586, 587, 589, 592, 593], "classmethod": [127, 130, 131, 132, 522], "clean": [516, 561, 570, 585, 586], "clear": [46, 127, 130, 131, 132, 170, 203, 272, 561, 582], "cli": [561, 581], "click": [585, 586], "clip": [20, 37], "clone": [26, 27, 585, 586, 591], "close": [154, 156, 157, 160, 164, 561, 563, 564], "closest": [179, 180, 517], "clunie1": [2, 20, 26, 28, 46, 587], "cm": [9, 11, 47], "cmap": [9, 47], "co": [130, 594], "code": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 32, 36, 41, 45, 46, 51, 76, 77, 95, 130, 131, 132, 158, 160, 163, 488, 524, 561, 562, 564, 568, 569, 570, 572, 574, 577, 579, 582, 584, 586, 590, 591, 593, 594], "code_fil": 51, "codec": [488, 524], "codedict": 593, "codemean": [3, 594], "codestream": [29, 130, 131, 132, 217, 259, 264], "codevalu": 594, "codifi": [25, 27, 45, 561, 569, 571, 579, 581, 582], "codingschemedesign": 594, "codingschemevers": 594, "coeffici": [20, 26, 27, 517], "coll": [26, 28], "collaps": 41, "collect": [20, 46, 55, 132, 161, 589], "collis": [561, 563], "color": [29, 30, 33, 34, 36, 37, 38, 39, 45, 130, 131, 132, 211, 218, 235, 244, 250, 256, 561, 574, 576, 592], "colour": [211, 250], "colourspac": [96, 561, 579], "column": [0, 2, 8, 9, 20, 26, 28, 29, 30, 34, 37, 39, 48, 49, 130, 131, 132, 204, 207, 209, 210, 216, 217, 218, 235, 236, 243, 244, 247, 248, 249, 256, 258, 259, 262, 263, 266, 267, 268, 270, 592], "columnconfigur": 0, "com": [2, 8, 9, 11, 12, 17, 20, 22, 23, 585, 586, 591], "combin": [130, 131, 132, 274, 519, 587, 594], "come": 47, "comma": 52, "command": [25, 27, 40, 51, 130, 131, 132, 181, 561, 569, 579, 581, 582, 585, 586, 591], "command1": [25, 26], "command1modul": [25, 26], "command2": [25, 26], "command2modul": [25, 26], "comment": [2, 8, 20, 585], "commit": [561, 582], "common": [37, 46, 50, 51, 75, 561, 572, 589, 594], "commonli": [44, 130, 131, 132, 236, 247, 249, 266, 268, 589, 592], "commun": [561, 577], "comp": [10, 20, 26, 28, 589], "compani": 46, "compar": [20, 55, 488, 517, 524, 561, 568, 571, 579, 582, 585, 586], "compare_sign": 517, "compare_tot": 517, "compare_total_mag": 517, "comparison": [488, 517, 524, 561, 566, 571], "compat": [42, 43, 130, 131, 132, 515, 517, 519, 561, 564, 565, 567, 568, 569, 570, 582, 591], "compil": [438, 439], "complement": [34, 39, 53, 244, 273, 520], "complet": [20, 24, 26, 34, 51, 130, 131, 132, 142, 145, 178, 561, 562, 585, 589, 591], "complex": [49, 273, 518, 520, 521], "compliant": [12, 51, 561, 570], "complic": [37, 589], "compon": [36, 39, 79, 143, 171, 173, 209, 264, 522, 561, 562, 564, 579], "compress": [20, 23, 29, 30, 33, 34, 36, 37, 38, 39, 45, 49, 53, 130, 131, 132, 137, 138, 143, 144, 222, 223, 224, 226, 227, 230, 231, 235, 236, 237, 238, 239, 240, 241, 243, 247, 249, 260, 266, 268, 270, 488, 551, 555, 556, 561, 570, 572, 574, 579, 580, 582, 590, 591], "compressedsampl": [2, 8, 9, 20, 26, 28, 68, 586, 587], "compression_ratio": 33, "comput": 20, "concaten": [37, 136, 147, 488, 524], "concern": 47, "conda": [592, 594], "condit": [160, 164, 517, 561, 570], "condition": [30, 594], "config": [32, 42, 521, 543, 551, 561, 567, 572, 573, 574, 576, 577, 579, 582], "configur": [0, 29, 36, 39, 42, 98, 127, 130, 131, 132, 217, 235, 243, 259, 270, 551, 561, 572, 579, 580], "conform": [55, 127, 130, 131, 132, 170, 173, 181, 194, 201, 210, 561, 570, 572, 573, 587, 589, 592], "confus": [561, 582], "congratul": 587, "conjug": [273, 517, 518, 520, 521], "conjunct": [248, 267], "connect": [561, 577], "conserv": 201, "consid": [10, 25, 26, 51, 130, 131, 132, 488, 524, 585, 586, 588], "consist": [50, 131, 181, 561, 567, 586, 592, 594], "consolid": [561, 568], "constant": [561, 577, 582, 594], "constrain": 39, "constraint": [37, 39, 517, 518, 525], "construct": [515, 517, 518, 519, 522, 561, 567, 568, 579], "constructor": 203, "consumpt": [561, 572], "contain": [0, 10, 24, 26, 29, 30, 32, 34, 39, 40, 41, 42, 46, 48, 49, 50, 51, 52, 53, 55, 68, 75, 77, 127, 129, 130, 131, 132, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 160, 161, 168, 175, 179, 180, 181, 194, 197, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 235, 236, 237, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 488, 515, 519, 522, 524, 526, 530, 532, 548, 561, 569, 572, 579, 582, 585, 587, 589, 594], "content": [10, 12, 14, 20, 41, 55, 130, 131, 132, 140, 143, 204, 207, 208, 209, 210, 216, 217, 236, 258, 259, 270, 586, 587, 589, 592], "contentd": 12, "contenttim": 12, "context": [160, 276, 517, 561, 570, 587], "contigu": 39, "continu": [136, 561, 562, 579], "contrast": [2, 8, 10, 20, 589], "contrib": [47, 564, 584], "contribut": [25, 26, 561, 564, 567, 568, 590], "contributing_cod": 586, "contributing_doc": 586, "contributor": 16, "control": [26, 27, 29, 36, 37, 83, 84, 100, 101, 130, 131, 132, 236, 247, 249, 266, 268, 561, 567, 582, 589, 592], "controlpointsequ": 11, "conveni": [41, 46, 49, 127, 561, 577, 582, 588], "convent": [25, 26, 41, 522], "convers": [29, 30, 34, 36, 37, 38, 39, 92, 127, 204, 207, 209, 210, 548, 561, 563, 573, 574, 576, 588, 594], "convert": [14, 29, 30, 34, 36, 37, 38, 39, 49, 75, 76, 78, 84, 87, 89, 92, 96, 128, 130, 131, 132, 170, 181, 203, 204, 205, 206, 207, 208, 209, 210, 218, 235, 236, 237, 244, 247, 249, 256, 260, 266, 268, 273, 488, 517, 519, 520, 524, 548, 561, 564, 567, 570, 573, 574, 577, 578, 579, 582, 586, 587, 594], "convert_ae_str": 59, "convert_atvalu": 59, "convert_color_spac": [38, 49, 551, 561, 579, 582], "convert_da_str": 59, "convert_ds_str": 59, "convert_dt_str": 59, "convert_encod": 551, "convert_is_str": 59, "convert_numb": [59, 179, 180], "convert_obvalu": 59, "convert_owvalu": 59, "convert_pixel_data": [96, 130, 131, 132, 561, 582], "convert_pn": 59, "convert_single_str": 59, "convert_sq": 59, "convert_str": 59, "convert_tag": 59, "convert_text": 59, "convert_tm_str": 59, "convert_ui": 59, "convert_un": 59, "convert_ur_str": 59, "convert_valu": 59, "convert_wrong_length_to_un": [551, 561, 579], "convolut": 20, "coord": 20, "coordin": [20, 26, 27, 41], "copi": [2, 10, 51, 130, 131, 132, 170, 488, 517, 524, 561, 567, 577, 580, 585, 586, 589, 591], "copy_ab": 517, "copy_neg": 517, "copy_sign": 517, "copyfil": 589, "copyright": 586, "copytre": 589, "cor_aspect": 4, "core": [45, 53], "corner": 20, "coron": [1, 5, 6, 561, 573, 583], "correct": [4, 16, 20, 24, 26, 36, 37, 38, 39, 42, 44, 48, 50, 75, 79, 96, 130, 131, 132, 160, 175, 179, 180, 203, 209, 217, 248, 259, 267, 561, 571, 572, 574, 579, 580, 582, 585, 587, 592, 594], "correct_ambiguous_vr": 69, "correct_ambiguous_vr_el": 69, "correctli": [32, 46, 51, 96, 170, 205, 206, 517, 561, 564, 567, 570, 571, 573, 574, 577, 579, 580, 581, 582, 585], "correspond": [10, 17, 29, 30, 34, 36, 37, 38, 41, 43, 48, 49, 50, 52, 75, 105, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133, 137, 138, 162, 169, 170, 171, 181, 204, 211, 217, 235, 236, 237, 243, 244, 245, 246, 250, 259, 260, 265, 270, 274, 488, 514, 515, 519, 548, 561, 579, 582, 585, 586, 589, 592, 594], "cosin": 594, "cost": 589, "couch": [26, 28], "couchdb": [561, 565], "could": [3, 24, 25, 26, 49, 51, 75, 76, 78, 203, 205, 561, 564, 565, 579, 585, 586], "count": [4, 129, 203, 272, 273, 488, 520, 524], "counter": 20, "coupl": 589, "courier": 0, "cours": [10, 592], "cover": [30, 34, 587, 589, 592, 594], "coverag": [561, 570, 585], "cp0": 11, "cp805": [561, 564], "cr": [10, 261, 589], "cr1": 589, "cr2": 589, "cr3": 589, "crash": [561, 571, 580, 581], "creat": [0, 4, 12, 14, 16, 18, 24, 25, 26, 27, 41, 42, 46, 47, 51, 87, 127, 128, 130, 131, 132, 154, 156, 157, 158, 168, 169, 170, 171, 181, 203, 235, 236, 243, 244, 274, 488, 513, 515, 516, 518, 519, 521, 522, 551, 561, 564, 566, 579, 581, 582, 587, 591, 592, 593, 594], "create_data_el": 205, "create_imag": 205, "creation": [2, 8, 12, 20, 26, 27, 28, 41, 168, 561, 573, 587, 589], "creator": [2, 8, 16, 20, 26, 28, 46, 109, 110, 118, 121, 122, 123, 130, 131, 132, 133, 194, 273, 561, 571, 576, 581, 587, 589], "credit": 586, "ct": [1, 5, 6, 9, 10, 12, 20, 26, 28, 36, 37, 38, 41, 43, 46, 47, 49, 68, 130, 131, 132, 170, 217, 259, 561, 573, 583, 587, 588, 589, 592], "ct01": [20, 46], "ct01_oc0": 20, "ct1": [9, 20, 26, 28, 68, 586, 587], "ct2": 589, "ct_compressed_bas": [43, 592], "ct_compressed_ext": [43, 592], "ct_rle_lossless": [43, 130, 131, 132, 217, 259, 592], "ct_small": [9, 26, 28, 68, 160, 586, 587], "ctime": [515, 519], "cumul": [26, 27], "current": [0, 20, 24, 26, 28, 39, 42, 43, 52, 95, 127, 130, 131, 132, 154, 156, 157, 170, 171, 179, 180, 187, 211, 218, 250, 256, 515, 517, 519, 522, 561, 579, 586, 589, 591, 592], "curv": [17, 594], "curve_typ": 594, "curves_callback": 17, "custom": [8, 26, 28, 130, 131, 132, 168, 170, 561, 562, 563, 570, 573, 577], "cython": 591, "d": [0, 2, 3, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 59, 64, 68, 80, 81, 83, 84, 96, 100, 101, 107, 108, 109, 127, 130, 131, 132, 137, 138, 160, 168, 170, 179, 180, 195, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 237, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 517, 518, 522, 525, 530, 548, 561, 567, 568, 576, 579, 581, 585, 586, 587, 588, 589, 592, 594], "da": [2, 12, 17, 20, 26, 27, 28, 32, 41, 46, 59, 64, 92, 130, 529, 543, 561, 570, 579, 587], "dai": [515, 519], "daniel": [561, 564], "darci": [11, 12, 16, 17], "data": [1, 2, 5, 6, 7, 10, 11, 13, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 32, 33, 36, 37, 38, 39, 40, 41, 42, 45, 47, 51, 52, 53, 55, 61, 62, 63, 64, 76, 77, 78, 79, 81, 83, 96, 99, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 162, 164, 168, 170, 177, 193, 196, 197, 198, 204, 205, 206, 207, 208, 209, 210, 211, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 488, 513, 524, 541, 548, 551, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 589, 590, 591], "data_el": [17, 130, 131, 132, 183, 186, 187, 190, 192, 197, 198, 205, 587, 588], "data_elem": [561, 562, 587], "data_element_callback": [91, 97, 551], "data_element_callback_kwarg": 551, "data_element_gener": [69, 161], "data_element_offset_to_valu": 69, "data_retrieved_for_tag_and_vr_via_uri": 588, "data_retrieved_via_uri": 588, "databas": 14, "datadict": [16, 551, 561, 570, 573, 587], "datael": [0, 45, 46, 48, 52, 59, 77, 128, 130, 131, 132, 158, 161, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 200, 205, 237, 260, 561, 562, 570, 571, 572, 573, 576, 580, 582, 587], "dataelem": [59, 77, 130, 131, 132, 162, 180, 196, 197, 546, 551, 561, 573, 576, 587], "dataelement_from_raw": [59, 587], "dataset": [0, 2, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 32, 37, 38, 39, 42, 44, 45, 46, 47, 51, 52, 53, 72, 79, 83, 84, 90, 96, 99, 105, 106, 107, 108, 127, 128, 135, 137, 138, 143, 145, 154, 156, 157, 160, 161, 164, 166, 167, 168, 169, 170, 171, 179, 180, 181, 193, 194, 198, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 236, 237, 243, 244, 247, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 272, 488, 514, 548, 551, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 586, 589, 590, 591, 592, 594], "dataset_class": 127, "datastor": 105, "date": [2, 8, 9, 12, 17, 20, 23, 26, 27, 28, 32, 41, 42, 46, 92, 170, 515, 519, 551, 561, 570, 571, 573, 579, 587, 591], "datetim": [12, 92, 515, 519, 523], "datetime_convers": [32, 529, 531, 537, 551], "daughter": 130, "daunt": 585, "dave": [561, 564], "db": [14, 36, 130, 131, 132, 217, 259], "dcm": [9, 11, 12, 24, 26, 27, 28, 41, 43, 48, 49, 52, 68, 130, 131, 132, 160, 168, 217, 247, 249, 259, 266, 268, 561, 577, 586, 587, 592, 593, 594], "dcm_qt_tree": [41, 561, 568, 569], "dcmread": [0, 4, 9, 10, 11, 12, 14, 16, 41, 44, 49, 69, 90, 105, 131, 153, 156, 157, 158, 161, 164, 178, 202, 247, 249, 266, 268, 514, 561, 570, 576, 577, 579, 582, 586, 587, 589, 594], "dcmwrite": [14, 69, 130, 131, 132, 156, 157, 561, 570, 576, 577, 579, 582, 587], "dctool100": [2, 20, 26, 28, 46, 587], "dd": [23, 515], "ddt": 519, "de": 51, "deal": [23, 42, 48, 210, 561, 563, 572, 587], "debug": [551, 561, 567, 569], "debug_on": 93, "decemb": [561, 581], "decid": [561, 582], "decim": [32, 80, 100, 488, 516, 517, 518, 520, 521, 524, 525, 526, 561, 567, 568, 579], "decis": 38, "decod": [1, 5, 6, 37, 39, 40, 44, 49, 53, 59, 76, 77, 127, 130, 131, 132, 140, 142, 146, 147, 154, 156, 157, 160, 193, 205, 206, 208, 209, 210, 237, 244, 245, 247, 249, 260, 266, 268, 522, 527, 528, 529, 530, 531, 532, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 551, 554, 561, 565, 572, 573, 574, 577, 579, 580, 582, 583, 589, 591], "decode_byt": 551, "decode_data_sequ": [561, 582], "decode_el": 551, "decode_pixel_data": [236, 244], "decodefunct": 235, "decodeopt": [235, 236, 243], "decoder_depend": 30, "decoderunn": [30, 236], "decoding_plugin": [130, 131, 132, 236, 237, 247, 249, 260, 266, 268], "decomposit": 36, "decompress": [29, 43, 44, 130, 131, 132, 208, 236, 551, 561, 570, 574, 582, 591, 592], "decon": 20, "decor": [561, 568], "decreas": [36, 130, 131, 132, 217, 259], "deep": [561, 580], "deepcopi": [561, 579, 582], "def": [0, 8, 11, 14, 17, 25, 26, 30, 34, 96, 130, 131, 132, 168, 488, 524, 585, 588], "default": [0, 9, 24, 26, 29, 32, 33, 34, 42, 44, 47, 48, 49, 55, 75, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 127, 130, 131, 132, 134, 137, 139, 140, 141, 142, 146, 149, 150, 151, 154, 156, 157, 158, 160, 161, 170, 172, 179, 180, 181, 193, 194, 203, 204, 207, 209, 210, 213, 214, 215, 217, 218, 235, 236, 237, 243, 244, 247, 248, 249, 253, 254, 255, 256, 257, 259, 260, 262, 265, 266, 267, 268, 269, 271, 272, 488, 513, 517, 519, 522, 524, 530, 532, 536, 547, 548, 561, 565, 567, 568, 570, 572, 573, 574, 575, 576, 577, 579, 582, 586, 587, 588, 589, 592], "default_element_format": 130, "default_encod": [22, 522], "default_handl": 93, "default_sequence_element_format": 130, "defer": [130, 131, 132, 162, 561, 563, 567, 574, 580, 587], "defer_s": [158, 160, 161, 164, 178, 202, 561, 563], "deferreddatael": [561, 572, 573], "defin": [16, 17, 20, 25, 26, 36, 37, 38, 39, 46, 48, 55, 127, 130, 131, 132, 133, 169, 170, 211, 250, 488, 517, 561, 567, 585, 587, 589, 594], "definit": [170, 181, 551, 561, 570, 594], "deflat": [44, 207, 219, 245, 488, 561, 576], "defragment_data": [561, 582], "degre": 20, "del": [17, 18, 41, 46, 130, 587], "del_opt": [235, 243], "delai": [20, 26, 28], "delattr": 17, "delet": [12, 17, 51, 130, 131, 132, 235, 243, 488, 524, 561, 576, 585, 586], "delimit": [76, 143, 144, 145, 174, 176, 177, 178, 182, 488, 524, 547, 561, 577, 579], "delimiter_tag": 178, "deliveri": [26, 27], "delta": 20, "demand": 522, "demonstr": [16, 47, 561, 562], "denomin": [273, 517, 518, 520, 521], "depend": [20, 30, 34, 39, 43, 44, 49, 51, 96, 127, 130, 131, 132, 140, 141, 142, 170, 181, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 235, 236, 244, 250, 251, 252, 253, 254, 258, 259, 270, 543, 548, 561, 572, 573, 580, 586, 588, 589, 591, 594], "dependabot": [561, 582], "deprec": [94, 95, 130, 131, 132, 135, 136, 143, 144, 145, 147, 152, 181, 549, 550, 566, 567, 571, 572, 573, 576, 577, 579, 580, 581], "deprecationwarn": [561, 562], "depth": [32, 37, 47, 49, 53, 171, 561, 574, 591], "deriv": [2, 8, 20, 41, 80, 96, 127, 132, 561, 567, 587], "describ": [29, 39, 41, 51, 107, 109, 127, 130, 131, 132, 236, 517, 522, 588, 589], "descript": [3, 16, 20, 25, 26, 27, 29, 33, 39, 41, 46, 53, 107, 108, 109, 110, 113, 123, 127, 133, 561, 562, 563, 576, 580, 582], "descriptor": [10, 46, 170, 211, 212, 213, 214, 250, 251, 252, 253, 254, 561, 574, 576, 589], "descriptor_character_set": [10, 170, 589], "descriptor_file_id": [10, 170, 589], "descripwidth": 127, "deseri": 588, "design": [51, 593], "desir": [47, 203, 218, 256], "despit": 589, "destin": [156, 157], "detail": [24, 26, 39, 41, 42, 49, 51, 93, 127, 130, 131, 132, 161, 276, 517, 521, 551, 561, 579, 582, 585, 586], "detector": 20, "determin": [39, 41, 48, 127, 130, 170, 212, 251, 252, 273, 517, 520, 561, 582, 589, 594], "determinist": 513, "dev0": 551, "develop": [25, 26, 27, 42, 561, 570], "devic": [2, 8, 20, 26, 27, 593], "di": 589, "diamet": 20, "dicm": [153, 165, 181, 194, 201, 587], "dicom": [1, 2, 4, 6, 7, 9, 13, 14, 15, 19, 21, 22, 23, 27, 28, 30, 32, 34, 36, 37, 38, 39, 41, 43, 44, 45, 47, 48, 49, 50, 52, 53, 55, 58, 60, 68, 69, 71, 73, 75, 76, 77, 83, 88, 93, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 132, 133, 137, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 160, 161, 163, 164, 165, 170, 181, 192, 194, 196, 198, 201, 203, 204, 207, 211, 212, 213, 214, 215, 218, 236, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 266, 267, 268, 270, 271, 273, 274, 488, 513, 517, 518, 521, 522, 524, 525, 541, 551, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 577, 579, 580, 581, 582, 583, 586, 587, 588, 590, 592, 593], "dicom_character_set": 77, "dicom_dao": [561, 565], "dicom_filenam": 14, "dicombytesio": [69, 156, 561, 582], "dicomdir": [10, 53, 68, 168, 170, 171, 561, 569, 573, 574, 577, 580, 581, 582, 590], "dicomdirtest": [10, 589], "dicomfil": [24, 26, 69], "dicomfilelik": [14, 69, 154, 155, 561, 563], "dicominfo": [561, 562], "dicomio": [69, 144, 147, 152, 154, 156, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 561, 582], "dicomit": [561, 565], "dicomtre": [0, 21, 561, 562, 583], "dicomweb": [127, 130, 131, 132, 588], "dicond": [179, 180], "dicosquadrupoleresonanceqrstorag": [561, 577], "dicosquadrupoleresonancestorag": [561, 577], "dict": [14, 30, 34, 41, 91, 107, 109, 127, 130, 131, 132, 168, 170, 204, 216, 235, 236, 237, 243, 258, 260, 263, 264, 561, 564, 579, 581], "dict_item": [130, 131, 132], "dict_kei": [130, 131, 132], "dictionari": [6, 15, 19, 41, 45, 83, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 161, 216, 235, 243, 258, 488, 524, 551, 561, 563, 564, 566, 569, 570, 571, 572, 573, 574, 577, 579, 580, 582, 583, 588, 593], "dictionary_is_retir": [561, 570], "dictionary_vr": 587, "did": [18, 561, 562, 582], "diff": [20, 585], "differ": [4, 6, 17, 21, 25, 26, 28, 32, 37, 38, 46, 49, 53, 130, 131, 132, 517, 561, 564, 576, 583, 585, 586, 587, 588, 589], "difficult": [51, 585], "difflib": 20, "dig": 589, "digit": [87, 133, 195, 488, 517, 524, 594], "dimens": [96, 130, 131, 132, 209, 236, 247, 249, 266, 268], "dimitri": [561, 569], "dir": [41, 130, 131, 132, 561, 567, 580, 586, 593], "direct": [24, 26, 261, 517, 586, 588, 589], "directli": [10, 30, 34, 37, 41, 127, 235, 236, 243, 244, 516, 561, 582, 588, 589, 593], "directori": [10, 168, 169, 170, 171, 173, 561, 562, 580, 582, 585, 586, 589, 591], "directory_record": [170, 551, 589], "directoryrecordsequ": 589, "directoryrecordtyp": [168, 170], "disadvantag": 51, "disagre": [561, 582], "discard": [488, 524], "discuss": [585, 589], "disk": [561, 577], "displai": [6, 20, 21, 26, 27, 28, 36, 37, 38, 41, 45, 47, 99, 127, 130, 561, 562, 568, 573, 579, 583, 585, 594], "distanc": 20, "distinct": [561, 565], "distribut": [561, 565, 577, 591], "distutil": [561, 562], "div": 522, "dive": 585, "divid": 517, "divisionbyzero": 517, "django": [585, 586, 588], "do": [10, 14, 25, 26, 30, 34, 42, 43, 44, 46, 48, 49, 51, 53, 92, 130, 131, 132, 170, 181, 187, 561, 567, 573, 579, 582, 585, 586, 587, 589, 592, 593, 594], "do_command": [25, 26], "doc": [168, 586], "docstr": [52, 585], "document": [40, 42, 130, 131, 132, 168, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 244, 247, 249, 260, 266, 268, 565, 570, 571, 582, 584, 590], "doe": [10, 12, 37, 46, 48, 49, 51, 88, 96, 108, 130, 131, 132, 153, 162, 181, 187, 205, 517, 525, 561, 577, 589], "doesn": [29, 39, 48, 83, 130, 131, 132, 204, 207, 210, 236, 247, 249, 266, 268, 561, 576, 585], "doi": 23, "don": [8, 10, 18, 26, 27, 28, 36, 41, 44, 46, 51, 235, 585, 586, 588, 589, 592], "done": [30, 34, 43, 488, 517, 524, 585, 586, 587, 592], "dont_print": 8, "dose": [26, 27, 28, 68, 168, 170, 561, 567, 589], "dosesummationtyp": 589, "dot": [585, 587], "doubl": [32, 49, 52, 130, 131, 132, 207, 269, 555, 561, 574], "doublefloatpixeldata": [29, 30, 49, 235, 243, 263, 561, 579], "down": [201, 585, 589], "download": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 105, 561, 577, 579, 580, 581], "downsampl": [2, 38], "downscal": [37, 38], "downsiz": [1, 5, 6, 49, 583], "downstream": 37, "dr": 522, "drop": [130, 131, 132, 561, 576, 577], "ds1": 588, "ds2": 130, "ds_byte": 14, "ds_decim": [100, 551, 561, 576], "ds_json": 588, "ds_numpi": [101, 551], "ds_or_path": 170, "ds_out": [247, 249, 266, 268], "dsdecim": [32, 59, 87, 516, 530, 561, 579], "dsfloat": [32, 59, 516, 530, 561, 579], "dst": [519, 523, 589], "dt": [12, 32, 59, 64, 92, 531, 543, 561, 570, 579], "dtype": [41, 48, 49, 50, 52, 130, 131, 132, 209, 217, 235, 236, 244, 248, 259, 267, 269, 592], "dtype_corrected_for_endian": [561, 582], "due": [170, 561, 568, 579, 581, 585, 589], "dummi": [24, 26], "dummydatabas": 14, "dump": [127, 130, 131, 132], "dump_handl": [127, 130, 131, 132], "duplic": [561, 568], "durat": [20, 26, 28, 587], "dure": [36, 37, 41, 46, 108, 561, 580, 582, 585, 586], "dvd": 589, "dwt": 36, "dynam": [16, 20], "e": [20, 24, 26, 27, 28, 30, 34, 41, 42, 48, 49, 52, 55, 84, 127, 130, 131, 132, 133, 160, 166, 167, 170, 171, 172, 203, 204, 236, 244, 248, 261, 267, 272, 515, 517, 522, 547, 561, 564, 571, 573, 577, 582, 585, 586, 587, 591], "e0": 147, "e000": [144, 147, 148, 149], "e0dd": 144, "e3ee934bbc": [561, 565], "e830f30b6781": [561, 568], "each": [0, 3, 10, 20, 29, 30, 33, 34, 36, 37, 38, 39, 41, 43, 48, 49, 50, 53, 68, 76, 130, 131, 132, 137, 138, 143, 144, 147, 148, 149, 150, 151, 171, 172, 203, 210, 217, 218, 235, 236, 237, 243, 244, 247, 249, 256, 259, 260, 261, 266, 268, 488, 517, 522, 524, 548, 561, 576, 579, 585, 587, 589, 592, 594], "earlier": 587, "easi": 49, "easier": [46, 131, 561, 582, 586], "easiest": [23, 592], "easili": [17, 561, 562, 564], "ecg": [50, 68, 594], "echo": [2, 8, 20], "echofindingobservationtyp": 593, "edit": [10, 51, 561, 571, 572, 574, 585, 586, 591], "editor": [585, 586], "eeee": [181, 561, 582], "effect": [41, 144, 513], "effici": [10, 158, 170, 248, 267, 525, 594], "effort": 29, "eg": 4, "einthoven": 594, "either": [26, 27, 30, 34, 36, 37, 39, 41, 42, 46, 51, 96, 127, 130, 131, 132, 140, 142, 146, 165, 170, 204, 235, 243, 248, 262, 267, 269, 270, 273, 274, 517, 520, 522, 529, 537, 561, 577, 582, 586, 587, 589, 591, 592], "elem": [0, 8, 17, 41, 48, 52, 77, 127, 130, 131, 132, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 200, 204, 273, 275, 561, 564, 587], "element": [2, 10, 12, 16, 17, 18, 20, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 40, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 66, 76, 77, 79, 81, 83, 84, 92, 93, 96, 99, 100, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 138, 143, 144, 145, 158, 159, 160, 161, 162, 170, 177, 178, 179, 180, 181, 194, 196, 197, 204, 205, 207, 209, 210, 216, 217, 235, 236, 237, 243, 247, 249, 258, 259, 260, 262, 263, 266, 268, 269, 270, 273, 274, 515, 517, 518, 519, 520, 521, 522, 523, 524, 527, 528, 529, 530, 531, 532, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 548, 549, 551, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582, 586, 589, 592, 594], "element_format": [130, 131, 132], "element_offset": [130, 131, 132, 133], "element_v": [25, 26], "element_valu": [25, 26], "elementcallback": 90, "els": [3, 4, 8, 36, 37, 38, 43, 130, 161, 175, 178, 516, 517, 587], "embed": [561, 577], "emin": 517, "empti": [32, 127, 130, 131, 132, 134, 140, 142, 143, 145, 146, 147, 154, 203, 248, 264, 267, 272, 488, 517, 518, 522, 524, 541, 561, 562, 570, 573, 574, 575, 576, 577, 579, 582, 587, 589, 594], "empty_valu": 127, "empty_value_for_vr": 127, "emul": [41, 95, 130, 131, 132], "enabl": [33, 42, 92, 130, 131, 132], "enable_futur": 95, "encap": [43, 168, 551, 561, 570, 572, 582, 592], "encapsul": [29, 39, 43, 49, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 217, 236, 244, 259, 551, 561, 562, 572, 577, 582], "encapsulate_ext": [130, 131, 132, 217, 259], "encapsulate_extend": [43, 137, 561, 577, 582, 592], "encasul": 488, "enclos": 46, "encod": [29, 30, 32, 39, 40, 43, 44, 49, 50, 53, 55, 75, 76, 77, 78, 127, 128, 130, 131, 132, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 154, 156, 157, 158, 161, 166, 167, 170, 181, 188, 192, 193, 194, 196, 197, 198, 200, 210, 217, 235, 236, 246, 247, 249, 259, 266, 268, 488, 514, 517, 522, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 551, 554, 561, 567, 570, 571, 572, 573, 574, 579, 580, 581, 582, 587, 588, 592], "encode_pixel_data": [236, 244], "encode_str": 551, "encodefunct": 243, "encodeopt": [235, 243], "encoder_depend": 34, "encoderunn": 34, "encoding_plugin": [43, 130, 131, 132, 217, 244, 259, 592], "encount": [46, 88], "encourag": [561, 567], "end": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 139, 141, 150, 151, 161, 176, 178, 235, 236, 248, 267, 273, 488, 520, 524, 561, 567, 574], "endian": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 39, 41, 43, 44, 46, 130, 131, 132, 140, 141, 142, 144, 146, 148, 149, 150, 151, 154, 156, 157, 158, 161, 170, 175, 176, 177, 178, 181, 187, 194, 207, 210, 219, 220, 221, 225, 236, 237, 244, 245, 260, 279, 488, 514, 527, 528, 529, 530, 531, 532, 536, 537, 538, 540, 541, 543, 544, 561, 564, 572, 576, 581, 582, 587, 592, 594], "endswith": [488, 524], "energi": [26, 28], "enforc": [41, 45, 203, 561, 567], "enforce_file_format": [12, 130, 131, 132, 181, 561, 582, 587], "enforce_standard": [134, 194, 587], "enforce_valid_valu": [551, 561, 567, 573, 574, 577, 579, 580], "engin": 517, "english": 52, "enhanc": [20, 211, 250, 564], "ensur": [4, 32, 36, 37, 38, 42, 46, 95, 130, 131, 132, 134, 160, 170, 181, 203, 248, 267, 517, 518, 561, 567, 570, 579, 581, 582, 585], "ensure_file_meta": [130, 131, 132], "enter": 23, "entir": [41, 130, 160, 163, 205, 209, 236, 247, 249, 266, 268, 585, 587, 592], "entireti": [130, 131, 132, 237, 260], "entiti": [2, 20, 26, 28, 32, 46, 170, 194, 587], "entri": [16, 25, 26, 27, 41, 45, 49, 107, 108, 109, 110, 117, 118, 561, 563, 580, 585, 586], "entropy_src": [513, 561, 582], "entry_point": [25, 26], "enum": [561, 580, 582], "enumer": [0, 4, 594], "env": 589, "environ": [26, 27, 42, 561, 562, 577, 591], "eoc": [143, 561, 574], "eof": [154, 156, 157, 178], "eoferror": [154, 156, 157, 178], "eoi": [143, 561, 574], "eol": [561, 581], "equal": [37, 38, 39, 139, 144, 273, 488, 517, 518, 520, 521, 524, 561, 571, 572, 573], "equival": [41, 130, 131, 132, 140, 142, 146, 235, 243, 248, 267, 517, 561, 571], "error": [24, 26, 33, 37, 51, 55, 75, 85, 86, 95, 127, 130, 131, 132, 217, 259, 488, 517, 524, 525, 551, 561, 564, 565, 568, 570, 571, 572, 573, 574, 576, 577, 581, 582, 585, 587, 592], "escap": [561, 582], "especi": [39, 51, 585], "estim": 20, "et": 23, "etc": [17, 18, 41, 47, 49, 52, 127, 130, 131, 132, 204, 561, 562, 568, 579, 585, 589, 592], "euc_kr": [22, 522], "even": [32, 37, 46, 48, 130, 131, 132, 137, 139, 144, 160, 165, 236, 237, 247, 248, 260, 266, 267, 517, 561, 577, 587, 589, 592], "everi": [90, 236, 244, 261, 589, 594], "everyth": [170, 585, 589], "evolut": 42, "exact": [41, 517, 518, 520, 521], "exactli": [26, 27, 48, 50, 273, 517, 518, 520, 521, 587], "exam": 20, "exampl": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 30, 34, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 83, 84, 107, 108, 109, 127, 130, 131, 132, 138, 160, 168, 170, 216, 217, 235, 244, 247, 249, 258, 259, 266, 268, 273, 488, 513, 517, 520, 522, 524, 551, 561, 562, 563, 564, 566, 567, 569, 573, 577, 579, 582, 583, 584, 585, 586, 588, 589, 592, 594], "exc": 84, "exce": [137, 138], "except": [42, 46, 48, 49, 55, 75, 83, 84, 85, 96, 130, 131, 132, 153, 168, 170, 181, 194, 203, 236, 244, 276, 517, 551, 561, 564, 566, 569, 570, 573, 574, 577, 579, 580, 582, 585, 587, 589, 592], "excess": [140, 142, 146, 561, 573, 582], "exclud": [24, 26, 27, 28, 51, 130, 204, 235, 243, 262], "exclude_s": [24, 26], "exclus": 517, "execut": [5, 13, 19, 21, 522, 583], "exist": [9, 16, 30, 34, 38, 41, 42, 51, 52, 108, 130, 131, 132, 162, 170, 181, 194, 217, 259, 561, 581, 582, 584, 585, 586, 592], "exit": [0, 14, 24, 26, 27, 28], "exp": 517, "expand": [10, 26, 28, 261, 488, 524, 561, 580, 586, 589], "expand_ybr422": [561, 580, 582], "expandtab": [488, 524], "expans": [561, 579], "expect": [37, 41, 130, 131, 132, 140, 142, 146, 204, 205, 207, 210, 235, 236, 243, 247, 249, 262, 266, 268, 561, 571, 573, 577, 581, 585, 592], "experiment": [561, 568], "explain": 52, "explan": [36, 37, 38], "explanatori": 594, "explicit": [2, 12, 20, 26, 28, 39, 43, 44, 46, 55, 88, 130, 131, 132, 144, 154, 156, 157, 161, 181, 194, 207, 219, 220, 221, 236, 237, 245, 260, 279, 488, 514, 522, 561, 564, 565, 573, 574, 576, 579, 582, 587], "explicitli": [48, 49, 87, 561, 572, 579, 589, 592], "explicitvrlittleendian": 12, "explor": [26, 27, 46], "expon": 517, "exponenti": 517, "export": [24, 26, 42, 561, 579], "exposur": 20, "expr": 202, "express": [26, 27, 488, 524], "extend": [43, 44, 130, 131, 132, 137, 138, 140, 142, 146, 203, 217, 229, 235, 243, 245, 259, 272, 561, 577, 582, 592], "extended_offset": [140, 142, 146, 235, 243], "extendedoffsett": [43, 138, 592], "extendedoffsettablelength": [43, 138, 592], "extens": [41, 77, 131, 561, 572, 579], "extern": [105, 561, 577, 579], "extra": [26, 28, 29, 41, 236, 561, 582], "extract": 96, "extrem": [561, 581], "ez_setup": [561, 569], "f": [0, 2, 3, 4, 8, 9, 10, 11, 12, 18, 20, 127, 130, 131, 132, 168, 170, 247, 249, 266, 268, 488, 524, 585, 589, 592, 594], "f1ae573d9de5": [561, 568], "facilit": 236, "fact": [96, 587], "factor": [20, 50, 561, 568, 592, 594], "factori": [203, 236, 244, 275, 516, 561, 564, 579, 582], "fail": [30, 34, 96, 561, 564, 565, 570, 585, 586, 589], "failur": [55, 488, 524, 561, 576, 582, 585], "fairli": 52, "fall": [211, 250], "fallback": [561, 572], "fals": [3, 4, 10, 14, 29, 30, 32, 34, 42, 46, 52, 55, 68, 79, 80, 81, 84, 87, 89, 92, 93, 94, 95, 96, 100, 101, 102, 105, 114, 115, 124, 125, 127, 130, 131, 132, 134, 137, 138, 154, 156, 157, 158, 160, 164, 165, 170, 172, 173, 176, 177, 178, 181, 194, 201, 207, 209, 217, 218, 235, 236, 237, 244, 247, 249, 256, 257, 259, 260, 266, 268, 269, 271, 273, 488, 514, 516, 517, 518, 520, 524, 526, 527, 528, 529, 530, 531, 532, 536, 537, 538, 540, 541, 543, 544, 548, 561, 567, 571, 576, 579, 581, 587, 589, 594], "famili": 522, "familiar": [40, 52, 587, 589, 592, 594], "family_comma_given": [9, 522], "family_nam": [522, 561, 579], "family_name_ideograph": 522, "family_name_phonet": 522, "far": [44, 127], "farm": 522, "fast": [201, 275], "faster": [44, 561, 564, 576, 579], "fatq": 20, "favor": [561, 566, 580], "fc790f01f5": [561, 565], "fd": [20, 32], "fe": 147, "featur": [42, 52, 561, 569, 584, 585], "feedback": [561, 568], "fetch": [43, 49, 592], "fetch_data_fil": 591, "fewer": [154, 156, 157, 235, 526], "ff": [20, 147], "ffee": 147, "fffc": [2, 20, 26, 28, 587], "fffe": [144, 147, 148, 149], "ffffp10": [518, 521], "fidel": [20, 46], "fiduci": 168, "field": [11, 20, 26, 28, 41, 89, 127, 129, 144, 488, 515, 519, 523, 524, 561, 579], "fifth": 522, "fig": [3, 594], "fil": 20, "file": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 21, 25, 27, 28, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 68, 71, 73, 84, 88, 93, 99, 103, 104, 105, 106, 108, 130, 131, 132, 134, 152, 153, 155, 156, 158, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 181, 183, 192, 193, 194, 196, 197, 198, 201, 217, 235, 236, 247, 249, 259, 266, 268, 551, 562, 563, 564, 566, 567, 570, 573, 574, 576, 577, 579, 580, 581, 582, 583, 585, 586, 587, 590, 592], "file_meta": [2, 12, 20, 26, 27, 28, 41, 43, 44, 46, 130, 131, 132, 134, 181, 194, 237, 260, 561, 564, 576, 582, 589, 592], "file_metadata": [561, 566], "file_path": [14, 201], "file_set": [169, 171], "file_value_tel": 127, "filebas": [14, 69, 144, 147, 152, 193, 551], "filedataset": [68, 105, 160, 164, 181, 551, 561, 564, 566, 579, 580, 582, 587, 589], "fileid": 169, "fileinst": [10, 170, 171, 551, 561, 582, 589], "filemetadataset": [12, 24, 26, 131, 134, 163, 181, 194, 551, 561, 576, 587], "filenam": [24, 26, 27, 28, 103, 104, 105, 106, 130, 131, 132, 154, 156, 157, 162, 163, 170, 172, 181, 561, 576, 585, 589], "filename_or_obj": [131, 162], "fileobj": [164, 587], "fileobj_typ": [131, 162], "fileread": [69, 201, 551, 586, 587], "fileset": [10, 551, 561, 577, 579, 580, 582], "filespec": [24, 25, 26, 27, 28], "filespec_help": [25, 26], "filespec_pars": [25, 26], "filetyp": [25, 26], "fileutil": [69, 551], "filewrit": [69, 130, 131, 132, 551, 587], "fill": [4, 488, 524, 585, 586], "fillchar": [488, 524], "filter": [20, 26, 27, 130, 131, 132], "final": [2, 17, 105, 137, 140, 141, 142, 181, 587, 594], "find": [10, 17, 20, 23, 25, 26, 43, 92, 130, 131, 132, 163, 170, 175, 176, 177, 179, 180, 488, 524, 585, 586, 587, 589, 593, 594], "find_byt": [69, 176, 177, 561, 568], "find_delimit": [69, 177], "find_valu": [10, 170, 589], "finit": [517, 525], "first": [3, 20, 26, 28, 36, 37, 38, 39, 41, 42, 46, 49, 51, 52, 75, 76, 78, 96, 105, 129, 130, 131, 132, 140, 141, 142, 143, 144, 146, 147, 150, 151, 165, 170, 178, 203, 233, 236, 237, 247, 249, 260, 264, 266, 268, 272, 488, 517, 522, 524, 561, 572, 573, 574, 584, 585, 586, 589, 594], "firstnam": 12, "fit": [561, 571], "five": [52, 522], "fix": [161, 569, 584, 585, 587], "fix_meta_info": [561, 572, 582], "fixer": [561, 570], "fixm": 2, "fl": [20, 26, 28, 32, 587], "flag": [16, 20, 42, 95, 130, 131, 132, 165, 170, 175, 176, 177, 517, 561, 576, 579, 589], "flat": 589, "flatten": [130, 131, 132], "flexibl": [561, 582], "flip": [2, 8, 20], "float": [11, 32, 33, 36, 41, 49, 52, 80, 87, 127, 130, 131, 132, 158, 160, 161, 162, 164, 178, 202, 207, 217, 259, 269, 516, 517, 518, 519, 520, 521, 525, 541, 555, 561, 567, 568, 574, 577, 579, 581, 587], "float64": [212, 214, 215, 251, 252, 254, 255, 530], "floatpixeldata": [29, 30, 49, 235, 243, 263, 561, 579], "fly": [561, 577], "fma": [517, 593], "fname": 4, "focal": 20, "folder": [561, 564, 582], "follow": [10, 25, 26, 27, 28, 29, 30, 34, 36, 39, 41, 42, 43, 44, 49, 52, 68, 127, 130, 131, 132, 134, 143, 144, 147, 170, 178, 181, 194, 216, 217, 236, 244, 247, 249, 258, 259, 266, 268, 488, 517, 522, 524, 561, 574, 577, 579, 582, 585, 586, 587, 589, 593, 594], "font": 0, "foo": 34, "for_addit": [169, 589], "for_mov": 169, "for_remov": 169, "forc": [16, 29, 130, 131, 132, 153, 160, 164, 165, 170, 181, 217, 259, 561, 565, 567, 569, 587], "force_encod": [181, 561, 582], "force_implicit": 170, "force_rgb": 29, "force_ybr": 29, "foreign": [20, 561, 562], "forg": [591, 592, 594], "forget": [18, 51], "fork": [561, 581, 585, 586, 591], "form": [20, 39, 48, 49, 50, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 130, 131, 132, 236, 247, 249, 266, 268, 274, 513, 522], "format": [6, 7, 12, 13, 20, 24, 26, 27, 28, 32, 34, 41, 42, 44, 127, 130, 131, 132, 137, 138, 139, 144, 160, 181, 196, 207, 210, 488, 515, 517, 518, 519, 522, 523, 524, 541, 561, 562, 563, 564, 570, 573, 579, 580, 582, 583, 587, 589, 591], "format_map": [488, 524], "format_number_as_d": [59, 561, 579], "format_str": 522, "formatted_lin": [130, 131, 132, 561, 563], "found": [10, 46, 48, 49, 50, 105, 130, 131, 132, 160, 165, 170, 175, 178, 236, 244, 488, 524, 587, 589, 592], "found_at": 175, "foundat": 593, "four": [52, 96, 170, 178], "fourth": 522, "fp": [16, 144, 147, 152, 158, 160, 161, 165, 166, 167, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "fpa": 20, "fraction": [26, 27, 28], "fractiongroupnumb": [24, 26], "fractiongroupsequ": [24, 26, 27, 28], "fragment": [49, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 561, 574, 582], "fragments_per_fram": [52, 137], "frame": [2, 8, 20, 29, 30, 34, 37, 39, 43, 49, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 204, 209, 217, 218, 235, 236, 243, 244, 247, 248, 249, 256, 259, 266, 267, 268, 270, 561, 570, 572, 574, 579, 582, 592], "frame1": 137, "frame2": 137, "frame_iter": 592, "frame_length": [235, 243], "framework": 591, "free": [36, 37, 130, 131, 132], "frequenc": [2, 8, 20, 50, 594], "frequent": 589, "friendli": [488, 587, 589], "from": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 68, 71, 75, 76, 78, 80, 83, 84, 90, 96, 107, 108, 117, 118, 127, 128, 129, 130, 131, 132, 134, 135, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 159, 162, 165, 168, 169, 170, 171, 172, 179, 180, 181, 193, 194, 196, 203, 205, 206, 207, 208, 209, 210, 212, 216, 217, 218, 235, 236, 237, 243, 247, 249, 251, 252, 256, 258, 259, 260, 266, 268, 272, 488, 513, 515, 517, 518, 519, 521, 522, 523, 524, 526, 544, 561, 564, 565, 566, 567, 568, 569, 572, 573, 576, 577, 578, 579, 582, 583, 585, 586, 587, 589, 591, 592, 593, 594], "from_byt": [273, 520], "from_float": 517, "from_json": [127, 130, 131, 132, 561, 574, 577, 588], "from_named_compon": [522, 561, 579], "from_named_components_veterinari": [522, 561, 579], "fromhex": [518, 521], "fromisocalendar": [515, 519], "fromisoformat": [515, 519, 523], "fromordin": [515, 519], "fromtimestamp": [515, 519], "front": [488, 524, 585], "full": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 37, 46, 105, 131, 160, 235, 517, 561, 570, 571, 572, 577, 589, 592], "func": [25, 26, 586], "function": [17, 20, 25, 26, 27, 29, 30, 34, 36, 37, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 54, 57, 58, 66, 69, 71, 73, 80, 90, 97, 101, 108, 109, 127, 130, 131, 132, 135, 136, 144, 145, 147, 152, 158, 161, 163, 164, 168, 170, 179, 180, 181, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 235, 236, 237, 243, 244, 247, 249, 250, 260, 261, 266, 268, 274, 434, 515, 516, 517, 519, 525, 548, 549, 551, 552, 554, 557, 558, 561, 562, 563, 564, 569, 570, 572, 573, 574, 577, 579, 582, 586, 587, 588, 589, 592, 594], "further": [39, 589, 593], "furthermor": 525, "furthest": [171, 179, 180], "fuse": 517, "futur": [45, 95, 130, 131, 132, 561, 567, 577, 593], "future_behavior": [42, 551, 561, 577], "f\u00e9lix": [561, 568], "g": [2, 8, 9, 11, 12, 17, 20, 22, 24, 26, 27, 30, 34, 38, 39, 41, 42, 48, 49, 52, 55, 84, 127, 130, 131, 132, 133, 160, 203, 204, 236, 244, 272, 515, 517, 522, 547, 561, 564, 571, 573, 577, 582, 587], "g1": 39, "g2": 39, "gain": 20, "galleri": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 583], "gantri": [11, 20, 26, 28], "gantryangl": 11, "gb18030": 22, "gcc": 586, "gdcm": [30, 34, 38, 43, 44, 130, 131, 132, 205, 217, 226, 227, 228, 229, 230, 231, 232, 233, 242, 259, 561, 564, 570, 573, 577, 579, 580, 582, 592], "gdcm_handler": 96, "ge": 20, "ge_genesis_ff": [20, 46], "gems_acqu_01": 20, "gems_iden_01": [20, 46], "gems_imag_01": 20, "gems_imps_01": 20, "gems_parm_01": 20, "gems_pati_01": 20, "gems_rela_01": 20, "gems_sers_01": 20, "gems_stdy_01": 20, "gender": 52, "gener": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 25, 26, 27, 34, 38, 41, 42, 44, 51, 130, 131, 132, 135, 136, 143, 149, 158, 164, 172, 217, 237, 259, 260, 272, 274, 488, 513, 521, 548, 561, 563, 564, 568, 570, 582, 586, 592], "generate_filenam": [551, 561, 582], "generate_frag": [135, 136, 144, 152, 561, 582], "generate_fragmented_fram": [143, 561, 582], "generate_fram": [135, 136, 145, 209, 561, 582], "generate_multiplex": [3, 130, 131, 132, 548, 561, 577, 594], "generate_pixel_data": [561, 574, 582], "generate_pixel_data_frag": [561, 582], "generate_pixel_data_fram": [561, 582], "generate_uid": [10, 38, 130, 131, 132, 170, 217, 237, 259, 260, 561, 573, 582], "genesi": 20, "geometri": 0, "get": [2, 9, 10, 14, 26, 27, 32, 41, 42, 44, 46, 47, 48, 49, 50, 52, 92, 96, 130, 131, 132, 154, 156, 157, 168, 269, 551, 561, 564, 565, 573, 577, 579, 585, 586, 590, 591, 592], "get_charset_fil": 551, "get_data": 235, "get_decod": 551, "get_encod": 551, "get_entri": 118, "get_expected_length": [204, 561, 582], "get_fram": [243, 561, 582], "get_frame_offset": [561, 574, 582], "get_image_pixel_id": [561, 582], "get_item": [130, 131, 132, 561, 582], "get_j2k_paramet": [561, 582], "get_nr_fram": [561, 582], "get_opt": [30, 34, 235, 243], "get_overlay_arrai": 204, "get_palette_fil": [551, 561, 574], "get_pixeldata": [96, 205, 206, 207, 208, 209, 210], "get_private_entri": 117, "get_private_item": [130, 131, 132], "get_tag": 133, "get_testdata_fil": [9, 10, 11, 41, 49, 551, 561, 577, 579, 580, 582, 586, 587, 589], "gggg": 587, "ggggeeee": 273, "gigabyt": 592, "gildong": [22, 522], "git": [24, 26, 27, 585, 586, 591], "github": [23, 561, 570, 584, 585, 586, 591], "give": [517, 525, 561, 563, 564, 587, 592], "given": [2, 11, 24, 26, 27, 28, 29, 32, 36, 37, 44, 49, 50, 76, 78, 127, 128, 130, 131, 132, 133, 134, 140, 142, 154, 156, 157, 160, 162, 168, 170, 204, 207, 209, 210, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 261, 273, 488, 517, 518, 520, 522, 524, 541, 548, 561, 576, 579, 587, 589, 591, 592, 594], "given_nam": [522, 561, 579], "given_name_ideograph": 522, "given_name_phonet": 522, "glob": [4, 10, 103, 104, 106, 589], "global": [98, 561, 580], "glossari": [36, 37, 38, 40], "glow": 20, "gmail": [2, 8, 9, 11, 12, 17, 20, 22], "gn": 39, "go": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 163, 585, 586, 587, 589, 591], "gone": 586, "good": [51, 52, 585, 586], "googl": 584, "got": 586, "goyett": [561, 569], "gracefulli": [561, 577, 582], "grai": 9, "graphic": [0, 47, 49], "grayscal": [30, 34, 36, 37, 38, 39, 49], "greater": [32, 39, 130, 131, 132, 139, 144, 217, 259, 270, 513, 517, 561, 570, 588], "greek": [561, 562], "green": [36, 37, 38, 39, 561, 576], "gregorian": [515, 519], "grep": [26, 27], "greyscal": [36, 37], "grid": 0, "group": [2, 12, 17, 20, 26, 27, 28, 39, 41, 46, 48, 50, 117, 119, 127, 130, 131, 132, 133, 134, 160, 168, 170, 181, 194, 204, 235, 243, 247, 249, 266, 268, 273, 274, 275, 522, 548, 561, 564, 567, 571, 576, 577, 584, 585, 587, 594], "group_dataset": [130, 131, 132], "group_elem": 275, "grouplength": 119, "guarante": [42, 44, 46, 517], "gui": [561, 562], "guid": [30, 34, 43, 52, 130, 131, 132, 217, 259, 551, 561, 573, 579, 582, 586, 587, 592], "guillaum": [2, 8, 9, 11, 12, 17, 20, 22], "gunnar": [561, 568], "gzip": [561, 567, 573], "h": [2, 8, 12, 20, 22, 24, 26, 27, 28], "ha": [2, 10, 14, 20, 23, 24, 25, 26, 27, 30, 34, 36, 37, 38, 39, 42, 43, 46, 49, 51, 52, 81, 88, 90, 127, 130, 131, 132, 139, 140, 142, 144, 146, 147, 161, 162, 169, 170, 171, 181, 182, 193, 203, 204, 205, 206, 207, 208, 209, 210, 235, 243, 248, 265, 267, 273, 488, 513, 514, 516, 517, 524, 548, 561, 563, 564, 566, 571, 572, 574, 575, 576, 581, 582, 585, 586, 587, 588, 589, 592, 594], "habit": 587, "had": [514, 561, 572, 579, 585], "halchenko": [561, 569], "halv": 261, "hand": [39, 51, 517, 561, 577], "handi": 41, "handl": [45, 46, 49, 51, 75, 96, 127, 130, 131, 132, 177, 195, 488, 524, 549, 551, 561, 562, 565, 567, 569, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582, 587, 588, 591], "handler": [43, 52, 79, 93, 96, 130, 131, 132, 204, 205, 206, 207, 208, 209, 210, 548, 551, 561, 570, 572, 574, 575, 576, 577, 579, 580, 582, 585, 588, 592], "handler_nam": [130, 131, 132], "hang": 168, "happi": [585, 586], "harder": 41, "has_bot": [137, 138], "has_inst": 171, "hasattr": 4, "hash": [513, 561, 573, 579], "hasn": [143, 585, 586], "have": [12, 14, 25, 26, 27, 28, 32, 36, 37, 38, 39, 41, 42, 43, 44, 46, 48, 49, 51, 52, 96, 127, 130, 131, 132, 134, 137, 138, 140, 141, 144, 147, 160, 163, 170, 172, 181, 194, 204, 207, 209, 210, 216, 217, 235, 236, 243, 244, 247, 248, 249, 258, 259, 266, 267, 268, 488, 514, 517, 524, 527, 538, 548, 561, 567, 570, 572, 573, 576, 580, 582, 584, 585, 586, 587, 588, 589, 591, 592, 594], "haven": [52, 585, 587], "hdr": 20, "head": [10, 52, 589], "header": [20, 36, 153, 160, 165, 561, 563, 587], "health": [24, 26, 51], "height": 20, "helic": 20, "hello": [16, 587], "help": [14, 24, 25, 26, 27, 28, 42, 43, 46, 161, 561, 564, 572, 579, 581, 584, 585, 586, 592], "helper": 133, "henc": [39, 181], "here": [10, 24, 26, 28, 30, 34, 46, 53, 98, 177, 236, 244, 586, 587, 588, 589, 593], "heurist": [161, 561, 570], "hex": [48, 52, 127, 130, 131, 132, 133, 518, 521, 561, 564], "hexadecim": [518, 521, 587], "hf": [2, 8, 20], "hh": [519, 523], "hierarch": [6, 21, 143, 232, 233, 270, 561, 574, 583], "hierarchi": [170, 589], "high": [2, 8, 20, 37, 38, 39, 44, 52, 110, 222, 223, 224, 561, 574], "higher": [36, 38, 40, 130, 131, 132, 146, 517, 561, 564, 588], "highest": [488, 524, 561, 579], "highli": [561, 581], "hint": 32, "hispe": 20, "histogram": 20, "histori": 20, "hold": [203, 272, 273, 520], "holmberg": [561, 569], "holog": [561, 580], "home": 589, "hong": [22, 522], "hood": 41, "horiz": 20, "horizont": 261, "hors": 522, "host": [20, 273, 520], "hot_iron": [211, 250], "hot_metal_blu": [211, 250], "hotfix": [561, 582], "hounsfield": 49, "hour": [519, 523], "how": [2, 3, 8, 9, 10, 12, 14, 16, 17, 18, 20, 24, 26, 30, 34, 39, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 108, 127, 140, 141, 170, 561, 562, 566, 585, 586, 587, 588, 589, 590, 594], "howev": [10, 25, 26, 32, 36, 37, 38, 39, 41, 43, 44, 130, 131, 132, 143, 144, 147, 203, 521, 585, 586, 587, 589, 592], "htj2k": [245, 561, 582], "htj2klossless": [561, 582], "htj2klosslessrpcl": [561, 582], "html": [52, 586], "http": [23, 52, 585, 586, 588, 591], "hu": 49, "human": [488, 522, 587], "hundr": 592, "hypothet": 52, "hz": [3, 50, 594], "i": [0, 2, 3, 4, 10, 17, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 59, 64, 68, 70, 72, 75, 76, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 95, 96, 102, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 193, 194, 195, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 235, 236, 237, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 488, 513, 515, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 536, 537, 538, 540, 541, 543, 544, 549, 550, 561, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594], "i2": 592, "ibh": 20, "icon": [585, 586], "id": [0, 2, 8, 9, 10, 12, 17, 20, 46, 130, 131, 132, 133, 169, 170, 171, 172, 173, 263, 561, 563, 580, 587, 589], "id00001": [26, 28], "idea": [585, 586], "ideal": 44, "iden": 20, "ident": [517, 561, 567], "identif": 10, "identifi": [32, 39, 42, 46, 51, 190, 488, 524], "ideograph": 522, "idx": 0, "ie": 127, "iec": [36, 37, 39, 43, 218, 256, 264, 373, 378, 381, 513], "ignor": [42, 55, 75, 83, 84, 110, 127, 130, 131, 132, 174, 488, 517, 524, 542, 551, 561, 575, 579, 582, 586], "ii": [587, 594], "iii": 594, "illustr": [1, 3, 4, 6, 7, 8, 9, 15, 16, 18, 20, 36, 37, 41, 53, 592], "im": 2, "im000000": [10, 589], "im000001": [10, 589], "im000002": [10, 589], "im000003": [10, 589], "im000004": 10, "im000005": 10, "im000006": 10, "imag": [5, 8, 9, 10, 12, 17, 20, 26, 28, 30, 33, 34, 43, 44, 45, 46, 48, 49, 68, 130, 131, 132, 138, 139, 143, 144, 147, 168, 170, 205, 207, 208, 209, 210, 211, 216, 217, 218, 222, 223, 224, 226, 227, 230, 231, 235, 236, 237, 238, 239, 240, 241, 243, 247, 249, 250, 256, 258, 259, 260, 262, 265, 266, 268, 269, 270, 273, 518, 520, 521, 554, 557, 561, 564, 571, 573, 577, 579, 582, 583, 587, 589, 591, 592], "image_handl": [561, 572, 573], "image_process": [5, 583], "imagecodec": [30, 34], "imagetyp": 587, "imaginari": [273, 518, 520, 521], "img2d": 4, "img3d": 4, "img_shap": 4, "imit": 95, "immedi": 49, "immut": [29, 236, 515, 519, 523, 561, 573], "implant": [168, 170], "implement": [2, 12, 20, 26, 27, 28, 30, 34, 41, 46, 51, 134, 156, 157, 194, 426, 488, 524, 561, 577, 587], "implementationclassuid": 12, "implicit": [16, 26, 27, 39, 41, 44, 88, 130, 131, 132, 154, 156, 157, 158, 161, 170, 181, 207, 225, 245, 488, 514, 536, 561, 564, 571, 573, 579, 582, 592], "implicit_vr": [130, 131, 132, 181, 488, 514, 561, 582], "implicitli": [43, 592], "import": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 30, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 68, 83, 84, 107, 108, 127, 130, 131, 132, 138, 168, 170, 217, 236, 244, 247, 249, 259, 266, 268, 488, 513, 561, 567, 570, 582, 585, 586, 587, 588, 589, 591, 592, 593, 594], "import_path": [236, 244], "importantli": 589, "importerror": [205, 206, 208, 530, 532, 561, 578, 585], "imposs": 170, "improp": [561, 574, 576], "improv": [42, 561, 568, 571, 572, 579, 581, 584], "imshow": [4, 9, 47], "imview": 47, "imxxxxxx": 170, "includ": [24, 25, 26, 29, 42, 48, 51, 127, 130, 131, 132, 137, 168, 170, 181, 204, 235, 243, 262, 276, 488, 517, 519, 523, 524, 551, 561, 563, 565, 567, 569, 570, 582, 585, 586, 587, 589, 592, 594], "include_orphan": 170, "inclus": [37, 38, 39], "incompat": [561, 564, 570], "incorrect": [143, 236, 244, 561, 565, 571, 573, 574, 582], "incorrectli": [561, 562], "incorrectmodalityworklistentri": 593, "increas": [36, 130, 131, 132, 217, 259, 561, 564, 581], "increment": [20, 172], "incur": 525, "indent": [8, 130, 131, 132, 171, 587], "indent_char": [130, 171], "indent_format": [130, 131, 132], "indent_str": 8, "independ": 181, "index": [36, 37, 38, 41, 49, 50, 129, 130, 131, 132, 146, 170, 171, 172, 203, 213, 214, 215, 235, 236, 243, 244, 249, 253, 254, 255, 268, 272, 488, 524, 548, 561, 577, 582, 586, 594], "indexerror": [203, 272], "indic": [2, 8, 20, 39, 46, 48, 96, 127, 130, 131, 132, 154, 156, 157, 236, 247, 266, 273, 517, 520, 561, 568, 585, 586, 587], "indirectli": [30, 34], "individu": [51, 218, 256, 522, 561, 567, 577, 579], "inequ": [561, 571, 572], "inexact": 517, "inf": [517, 525], "infer_sq_for_un_vr": [55, 561, 580], "infil": 587, "infin": [517, 518, 521], "infinit": 517, "info": [11, 20, 158, 161, 164, 176, 177, 178, 488, 561, 564, 565, 567, 569], "inform": [2, 6, 7, 8, 9, 12, 13, 20, 24, 26, 27, 28, 31, 35, 40, 41, 43, 46, 47, 49, 51, 52, 79, 99, 127, 130, 131, 132, 134, 160, 163, 165, 181, 194, 217, 236, 237, 244, 247, 249, 259, 260, 266, 268, 522, 561, 562, 564, 567, 570, 574, 576, 577, 582, 583, 585, 586, 587, 592, 594], "inherit": [561, 579, 582], "init": [561, 579], "init_valu": 132, "initi": [52, 131, 132, 133, 176, 177, 203, 272, 522, 585], "initial_byt": 154, "initialis": [561, 582], "inlin": [130, 131, 132, 588], "inlinebinari": [127, 130, 131, 132], "input": [20, 24, 26, 49, 203, 218, 235, 248, 256, 267, 522, 561, 577], "input_output": [13, 583], "insensit": [41, 130, 131, 132], "insert": [0, 203, 272, 488, 524, 586, 587], "insid": [17, 561, 563], "instal": [42, 44, 47, 53, 96, 130, 131, 132, 209, 236, 237, 244, 260, 561, 562, 569, 579, 586, 587, 590, 592, 594], "instanc": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 38, 41, 44, 46, 47, 49, 51, 68, 77, 87, 130, 131, 132, 134, 154, 156, 157, 160, 161, 168, 169, 170, 171, 181, 194, 203, 211, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 249, 250, 259, 260, 266, 268, 272, 488, 516, 517, 518, 524, 555, 556, 561, 573, 579, 582, 587, 592, 593], "instancecreationd": [24, 26], "instancecreationtim": [24, 26], "instancenumb": 589, "instead": [2, 34, 37, 41, 49, 50, 51, 94, 130, 131, 132, 143, 144, 145, 147, 152, 158, 168, 170, 181, 217, 236, 259, 488, 521, 522, 524, 549, 550, 561, 564, 567, 571, 572, 573, 576, 577, 579, 580, 582, 585, 586, 587, 588, 589, 591, 592, 594], "institut": [2, 8, 20], "instruct": [585, 586, 587], "int": [29, 30, 32, 33, 34, 41, 55, 76, 84, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 137, 139, 140, 142, 143, 145, 146, 147, 149, 150, 151, 154, 156, 157, 158, 159, 160, 161, 164, 166, 167, 170, 171, 172, 175, 176, 177, 178, 193, 202, 203, 204, 213, 214, 215, 217, 235, 236, 243, 244, 247, 248, 249, 253, 254, 255, 259, 261, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 275, 488, 515, 516, 517, 518, 519, 520, 521, 522, 524, 536, 541, 544, 548, 587], "int16": [41, 49, 50, 594], "int64": 532, "integ": [29, 30, 32, 34, 37, 39, 49, 147, 203, 248, 265, 267, 269, 272, 273, 488, 513, 517, 518, 520, 521, 524, 561, 565, 567, 577, 594], "integr": 20, "intend": [30, 34, 38, 39, 130, 131, 132, 235, 243, 244, 585], "intens": [33, 36, 37, 38, 39, 592], "intention": [488, 524], "interact": [10, 41, 46, 130, 131, 132, 589], "intercept": [20, 41, 212, 251, 252], "interchang": [49, 589], "interest": [14, 48, 584, 587], "interfac": [27, 40, 561, 579, 591], "interleav": [33, 37, 594], "interleave_mod": 33, "intermedi": [41, 53, 517], "intern": [127, 130, 131, 132, 158, 568], "interpret": [2, 8, 20, 29, 38, 39, 48, 49, 130, 131, 132, 205, 206, 207, 208, 209, 210, 217, 218, 235, 236, 237, 243, 247, 249, 256, 259, 260, 261, 266, 268, 488, 515, 524, 561, 574, 592, 594], "interscan": 20, "interv": 594, "intricaci": 236, "introduc": [561, 580, 585], "introduct": [28, 34, 45, 585, 586, 589, 590, 594], "invalid": [42, 55, 75, 76, 84, 88, 89, 134, 265, 513, 561, 573, 577, 579, 581, 582], "invalid_key_behavior": [95, 551, 561, 577], "invalid_keyword_behavior": [95, 551, 561, 577], "invaliddicomerror": [160, 165, 551, 561, 565, 587], "invalidoper": 517, "invers": [39, 515, 517, 519], "io": [14, 16, 131, 154, 156, 157, 551, 561, 582, 587], "iobas": [156, 157], "iod": [39, 181, 269, 589, 594], "ipsum": 513, "ipynb": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "ipython": [130, 131, 132, 561, 562], "ir": [561, 574], "irrevers": 36, "is_arrai": [235, 243], "is_avail": [30, 34, 96, 204, 205, 206, 207, 208, 209, 210, 236, 244, 548, 561, 572], "is_binari": [235, 243], "is_buff": [235, 243], "is_canon": 517, "is_compress": 488, "is_conformant_file_id": 551, "is_dataset": [235, 243], "is_defl": 488, "is_dicom": [551, 561, 570], "is_empti": 127, "is_encapsul": [236, 244, 488], "is_fil": [10, 589], "is_finit": 517, "is_implicit_vr": [16, 43, 129, 130, 131, 132, 154, 156, 157, 158, 159, 161, 166, 167, 181, 193, 488, 536, 561, 573, 582], "is_infinit": 517, "is_integ": [518, 521], "is_little_endian": [14, 16, 43, 129, 130, 131, 132, 144, 147, 154, 156, 157, 158, 161, 166, 167, 174, 176, 177, 178, 179, 180, 181, 193, 488, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 543, 544, 561, 582], "is_n": [236, 244], "is_nan": 517, "is_norm": 517, "is_original_encod": [130, 131, 132], "is_priv": [41, 127, 169, 273, 488, 561, 570], "is_private_cr": 273, "is_qnan": 517, "is_raw": 129, "is_retir": [16, 107, 108, 109, 117, 118, 127, 488, 561, 570], "is_root": 171, "is_sign": [264, 517], "is_snan": 517, "is_stag": [169, 170, 589], "is_subnorm": 517, "is_transfer_syntax": 488, "is_undefined_length": [43, 127, 130, 131, 132, 237, 260, 561, 574], "is_valid": 488, "is_valid_d": [59, 561, 579], "is_zero": 517, "isalnum": [488, 524], "isalpha": [488, 524], "isascii": [488, 524], "isdecim": [488, 524], "isdigit": [488, 524], "isfloat": [59, 561, 581], "isidentifi": [488, 524], "iskeyword": [488, 524], "islow": [488, 524], "ismultivalu": [561, 573, 576], "isn": [37, 130, 131, 132, 140, 142, 146, 161, 181, 269, 488, 513, 561, 573, 577, 582, 586, 587], "isnumer": [488, 524], "iso": [26, 27, 36, 37, 39, 43, 218, 256, 264, 373, 378, 381, 513, 515, 519, 523, 561, 574], "iso2022_jp": 22, "iso8859": [22, 130, 131, 132, 158, 161, 193, 536], "iso_ir": [10, 20, 26, 28, 46, 77, 587, 588, 589], "iso_ir_100": 587, "isocalendar": [515, 519], "isoformat": [515, 519, 523], "isol": 591, "isovue300": 20, "isoweekdai": [515, 519], "isprint": [488, 524], "isspac": [488, 524], "isstr": [561, 573], "isstringorstringlist": [561, 573], "issu": [24, 26, 28, 30, 34, 37, 51, 55, 75, 76, 78, 86, 265, 561, 564, 565, 566, 567, 568, 573, 582, 584, 585], "issue18": [561, 562], "issue22": [561, 562], "issue27": [561, 562], "issue33": [561, 562], "issue36": [561, 563], "issue38": [561, 563], "issue40": [561, 563], "issue41": [561, 563], "istitl": [488, 524], "isupp": [488, 524], "ital": 52, "italic": 52, "item": [0, 6, 8, 9, 15, 19, 20, 24, 26, 27, 28, 32, 41, 50, 51, 52, 127, 130, 131, 132, 137, 138, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 167, 174, 198, 203, 272, 561, 562, 563, 564, 567, 570, 573, 574, 579, 580, 583, 587, 589, 594], "itemdelimitertag": 161, "itemis": 149, "items": 236, "iter": [10, 17, 41, 130, 131, 132, 139, 140, 141, 142, 143, 144, 145, 149, 158, 171, 172, 179, 182, 203, 209, 235, 236, 244, 247, 266, 272, 273, 276, 488, 520, 524, 561, 563, 571, 582, 589], "iter_arrai": [29, 236], "iter_buff": [29, 236], "iter_decod": 235, "iter_encod": [244, 592], "iter_pixel": [29, 44, 130, 131, 132, 551, 561, 582], "iteral": [130, 131, 132, 561, 563], "itis_tsn": 593, "its": [10, 24, 25, 26, 27, 30, 32, 34, 36, 37, 38, 39, 41, 42, 81, 127, 130, 131, 132, 147, 170, 171, 178, 203, 204, 205, 206, 207, 208, 209, 210, 237, 260, 488, 517, 524, 548, 561, 572, 577, 582, 587, 589], "itself": [10, 38, 41, 46, 52, 105, 156, 157, 179, 180, 488, 524, 561, 577, 585, 586, 589], "itu": [36, 37, 218, 256, 513], "iv": 20, "j": 22, "j2k": [561, 582], "j2k_cr": [36, 130, 131, 132, 217, 259], "j2k_psnr": [36, 130, 131, 132, 217, 259], "jame": 14, "jan": [83, 587], "januari": [23, 515, 519], "japanes": [561, 562, 567, 570], "jfk": 20, "ji": [561, 573], "jls_error": [37, 130, 131, 132, 217, 259, 592], "joan": [127, 130], "john": [130, 522], "join": [11, 488, 524], "jonathan": [561, 568, 569], "jp2": 36, "jpe2000lossless": 36, "jpeg": [29, 35, 39, 43, 44, 49, 79, 130, 131, 132, 137, 138, 143, 205, 206, 207, 208, 209, 210, 217, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 238, 239, 240, 241, 245, 246, 247, 249, 259, 264, 266, 268, 270, 373, 378, 381, 488, 561, 572, 574, 576, 577, 579, 582, 591, 592], "jpeg2000": [30, 34, 36, 44, 143, 245, 561, 572, 574], "jpeg2000compressedpixeltransfersyntax": [561, 577, 582], "jpeg2000encod": [33, 36, 561, 582], "jpeg2000lossi": [561, 572], "jpeg2000lossless": 592, "jpeg2000losslessencod": [33, 36, 561, 582], "jpeg2000mc": [561, 577, 582], "jpeg2000mclossless": [561, 577, 582], "jpeg2000multicompon": [561, 572, 577, 582, 585], "jpeg2000multicomponentlossless": [561, 572, 577, 582, 585], "jpeg2000transfersyntax": [561, 577, 582], "jpeg2k": [43, 68, 561, 572, 592], "jpeg2kimageplugin": 44, "jpeg_l": [44, 130, 131, 132, 206, 561, 570, 582], "jpeg_ls_handl": 96, "jpegbaselin": [561, 572, 577, 582], "jpegbaseline8bit": [43, 488, 561, 577, 582], "jpegbaselinelossy12bit": [561, 572], "jpegbaselinelossy8bit": [561, 572], "jpegextend": [561, 572, 577, 582], "jpegextended12bit": [561, 577, 582], "jpegimageplugin": 44, "jpeglossless": [561, 577, 582], "jpeglosslessp14": [561, 572], "jpeglosslesssv1": [561, 577, 582], "jpeglossycompressedpixeltransfersyntax": [561, 577, 582], "jpeglslossi": [561, 577, 582], "jpeglslossless": 37, "jpeglslosslessencod": [33, 37, 561, 582], "jpeglsnearlossless": [37, 561, 577, 582, 592], "jpeglsnearlosslessencod": [33, 37, 561, 582], "jpeglssupportedcompressedpixeltransfersyntax": [561, 577, 582], "jpeglstransfersyntax": [561, 577, 582], "jpegtransfersyntax": [561, 577, 582], "jpg": [561, 579], "jpiphtj2kreferenc": [561, 582], "jpiphtj2kreferenceddefl": [561, 582], "json": [127, 130, 131, 132, 273, 561, 573, 574, 578, 579, 590], "json_data": 588, "json_dataset": [130, 131, 132], "json_kei": [273, 561, 581], "jsonmodel": 130, "juli": 23, "julien": [561, 569], "jun": 551, "june": 23, "jupyt": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "just": [10, 12, 14, 25, 26, 27, 28, 41, 46, 51, 88, 127, 130, 131, 132, 158, 217, 259, 561, 573, 577, 585, 586, 587, 589], "justifi": [488, 524], "k": [172, 561, 582], "kb": 160, "keep": [36, 37, 38, 130, 131, 132, 170, 217, 237, 259, 260, 589, 591], "keep_def": [130, 131, 132, 561, 582], "keepend": [488, 524], "kei": [4, 33, 41, 84, 127, 130, 131, 132, 133, 168, 171, 204, 216, 258, 273, 488, 524, 561, 577, 585], "kept": [517, 561, 563, 591], "kernel": 20, "keyerror": [111, 112, 113, 115, 116, 117, 118, 121, 122, 123, 128, 130, 131, 132, 561, 582, 587], "keyword": [17, 26, 27, 28, 29, 41, 46, 49, 50, 52, 83, 84, 91, 105, 107, 108, 116, 117, 119, 124, 126, 127, 130, 131, 132, 160, 170, 179, 180, 181, 204, 207, 209, 210, 214, 217, 218, 235, 236, 237, 243, 244, 247, 248, 249, 254, 256, 257, 259, 260, 262, 263, 266, 267, 268, 269, 270, 271, 274, 488, 524, 548, 561, 565, 567, 570, 572, 573, 577, 581, 582, 586, 587, 589, 592, 593], "khz": 594, "kind": 46, "klein": [561, 565], "know": [10, 39, 41, 46, 587, 588, 589], "known": [38, 39, 41, 42, 46, 49, 55, 83, 95, 127, 128, 130, 131, 132, 211, 250, 273, 275, 520, 561, 571, 574, 576, 577, 579, 587, 593], "korean": [522, 561, 567], "kvp": 20, "kwarg": [130, 131, 132, 154, 155, 156, 157, 170, 181, 216, 217, 235, 236, 237, 243, 244, 247, 249, 258, 259, 260, 266, 268, 488, 515, 519, 522, 523, 524], "l": [20, 23, 29, 35, 43, 44, 130, 131, 132, 143, 217, 230, 231, 236, 240, 241, 245, 246, 247, 249, 259, 266, 268, 270, 378, 561, 572, 582, 591, 592], "label": [22, 26, 28, 30, 34, 47, 236, 244], "lack": 587, "lambda": 4, "lami": [561, 569], "landmark": 20, "languag": [561, 562, 567], "larg": [20, 43, 46, 51, 130, 131, 132, 133, 137, 138, 161, 178, 217, 259, 516, 561, 563, 564, 571, 573, 574, 577, 579, 592, 594], "larger": [24, 26, 160, 517, 591, 592], "largest": [2, 8, 20, 517], "last": [20, 26, 28, 41, 46, 52, 84, 96, 139, 144, 203, 272, 561, 567, 580, 587, 589, 592], "lastli": [585, 586], "later": [2, 8, 20, 30, 98, 517, 518, 561, 568, 585, 587], "latest": [46, 591], "latin5": [561, 570], "latter": [140, 141, 142, 146, 150, 151], "layer": [33, 36, 130, 131, 132, 217, 259], "layout": [10, 170], "lazi": 48, "lead": [50, 55, 68, 488, 517, 518, 524, 527, 561, 565, 570, 581, 594], "leaf": [169, 170, 171], "leaf_nod": 170, "learn": [52, 585, 589], "least": [30, 34, 36, 39, 130, 131, 132, 217, 236, 249, 259, 268, 488, 524, 544, 589], "leav": [10, 16, 26, 27, 108, 587], "left": [20, 36, 48, 130, 131, 132, 217, 259, 488, 517, 524, 586], "legaci": 42, "lemaitr": [2, 8, 9, 11, 12, 17, 20, 22], "lemaitre58": [2, 8, 9, 11, 12, 17, 20, 22], "len": [0, 3, 4, 8, 10, 14, 36, 37, 38, 488, 524, 587, 589, 594], "length": [2, 8, 12, 20, 26, 27, 28, 41, 42, 43, 46, 50, 55, 89, 119, 127, 129, 130, 131, 132, 137, 138, 139, 140, 142, 144, 146, 147, 148, 149, 154, 156, 157, 158, 174, 177, 194, 204, 207, 210, 217, 235, 237, 243, 248, 259, 260, 262, 267, 273, 488, 513, 517, 520, 524, 561, 566, 567, 571, 573, 577, 579, 580, 581, 582, 587], "length_of_undefined_length": 69, "less": [10, 37, 38, 39, 154, 156, 157, 517, 561, 582, 594], "let": [43, 561, 574, 585, 586, 587, 589, 592], "letter": [20, 41, 130, 131, 132], "level": [20, 26, 27, 28, 36, 40, 52, 130, 131, 132, 161, 170, 171, 561, 567, 579, 582, 586, 587, 588, 589], "lib": 589, "libjpeg": [44, 561, 582, 591], "librari": [2, 23, 25, 26, 41, 42, 45, 49, 257, 271, 561, 564, 567, 586, 592], "licens": [2, 8, 9, 11, 12, 16, 17, 20, 22, 561, 563, 564, 586], "like": [18, 25, 26, 29, 37, 41, 42, 46, 48, 51, 71, 73, 84, 110, 130, 131, 132, 152, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 175, 177, 178, 181, 193, 194, 196, 197, 198, 235, 236, 243, 247, 249, 266, 268, 519, 561, 564, 574, 577, 580, 582, 586, 587, 588, 589], "limit": [10, 26, 27, 37, 38, 45, 49, 170, 488, 524, 525, 526, 561, 567, 573, 577, 593], "linac": 130, "line": [11, 20, 23, 24, 25, 27, 28, 40, 42, 46, 48, 51, 84, 130, 131, 132, 170, 488, 524, 561, 568, 579, 585, 586, 587, 589, 592], "linear": [561, 579], "link": [36, 37, 52, 586], "linux": [42, 561, 570, 586, 591], "list": [4, 6, 7, 8, 10, 13, 20, 26, 28, 30, 32, 33, 34, 36, 37, 38, 39, 41, 43, 75, 76, 77, 78, 96, 103, 104, 106, 127, 128, 130, 131, 132, 135, 137, 138, 140, 142, 146, 147, 150, 151, 158, 160, 161, 164, 166, 170, 171, 179, 180, 188, 192, 193, 197, 198, 200, 203, 204, 217, 235, 236, 243, 244, 247, 249, 259, 266, 268, 272, 488, 513, 522, 524, 529, 530, 531, 532, 535, 536, 537, 538, 541, 542, 545, 546, 551, 561, 564, 567, 568, 574, 577, 579, 580, 582, 583, 586, 587, 589, 591, 592], "list_beam": 11, "liter": [25, 26], "littl": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 39, 41, 43, 44, 46, 130, 131, 132, 140, 141, 142, 144, 146, 148, 149, 150, 151, 154, 156, 157, 158, 161, 170, 176, 177, 178, 181, 194, 207, 210, 219, 221, 225, 237, 244, 245, 260, 273, 488, 514, 520, 527, 528, 529, 530, 531, 532, 536, 537, 538, 540, 541, 543, 544, 561, 564, 576, 582, 587, 592, 594], "little_endian": [130, 131, 132, 181, 488, 514, 561, 582], "live": [585, 586], "ljust": [488, 524], "ll": [41, 43, 585, 586, 587, 592, 594], "ln": [517, 593], "lo": [2, 12, 16, 17, 18, 20, 26, 27, 32, 46, 130, 545, 587, 589], "load": [1, 5, 6, 10, 12, 14, 16, 161, 169, 170, 178, 561, 573, 577, 578, 579, 583], "loc": 20, "local": [42, 68, 105, 515, 519, 561, 580, 585, 586, 587, 591], "localhost": 586, "localtim": [515, 519], "locat": [2, 4, 8, 9, 20, 93, 130, 131, 132, 133, 143, 169, 176, 586, 589], "log": [93, 130, 131, 132, 561, 567, 580, 585], "log10": 517, "logarithm": 517, "logb": 517, "logger": [93, 561, 568, 582], "logic": [517, 561, 564], "logical_and": 517, "logical_invert": 517, "logical_or": 517, "logical_xor": 517, "long": [12, 32, 37, 177, 181, 544, 561, 581, 587], "longer": [55, 81, 127, 207, 561, 571, 572, 574, 577, 579, 582, 589], "look": [51, 179, 180, 585, 586, 587], "lookup": [36, 37, 38, 49, 111, 112, 113, 115, 116, 126, 211, 212, 213, 214, 250, 251, 252, 253, 254, 488, 524, 561, 577, 587], "lookuperror": [75, 76, 488, 524], "loonei": [561, 568, 569], "loop": [24, 26, 51], "lorem": 513, "loss": [76, 78, 517, 518, 525, 561, 577], "lossi": [36, 37, 38, 43, 44, 143, 231, 241, 270, 592], "lossless": [35, 39, 43, 44, 49, 130, 131, 132, 137, 138, 143, 209, 210, 217, 223, 224, 227, 230, 231, 232, 233, 234, 239, 240, 241, 242, 244, 245, 246, 259, 270, 561, 576, 579, 580, 582, 592], "losslessli": [36, 37], "lossy_error": 33, "lot": [561, 570, 587], "low": [133, 588], "lower": [20, 130, 131, 132, 133, 170, 488, 517, 524, 561, 582, 589, 593], "lowercas": [52, 488, 524], "lowest": [273, 488, 517, 520, 524], "lrcp": 36, "lsb": 210, "lstrip": [488, 524], "lt": [2, 20, 32], "ltd": 109, "lut": [45, 47, 211, 212, 213, 214, 215, 250, 251, 252, 253, 254, 255, 561, 574, 576, 577, 579], "lutdata": [561, 581], "m": [12, 22, 522, 585, 586, 589, 591, 592, 594], "maco": [561, 580, 591], "made": [38, 130, 131, 132, 139, 143, 170, 181, 561, 563, 564, 576, 585, 586, 589], "mai": [23, 24, 26, 27, 29, 30, 33, 34, 36, 37, 39, 42, 46, 47, 48, 49, 51, 77, 95, 98, 130, 131, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 154, 156, 157, 170, 181, 194, 210, 216, 217, 235, 236, 237, 244, 247, 249, 258, 259, 260, 266, 268, 488, 514, 517, 522, 524, 538, 540, 561, 574, 582, 585, 586, 587, 589, 591, 592, 594], "main": [24, 25, 26, 41, 51, 53, 117, 561, 564, 585, 586, 587, 591], "mainli": [47, 130, 131, 132, 488, 524, 561, 568], "mainloop": [0, 22], "major": [45, 95, 577], "make": [29, 30, 34, 36, 37, 39, 41, 42, 46, 51, 130, 131, 132, 488, 513, 524, 525, 561, 564, 573, 579, 582, 587, 589, 591, 592], "maketran": [488, 524], "mamp": 20, "manag": [10, 30, 34, 46, 157, 160, 170, 235, 243, 561, 570, 577, 587, 589], "mani": [39, 42, 47, 49, 137, 138, 140, 141, 561, 563, 567, 568, 582, 584], "manipul": [2, 23, 127, 591], "manner": [587, 592], "manual": [92, 181], "manufactur": [2, 8, 20, 130], "map": [49, 127, 130, 168, 488, 524, 561, 582, 586], "march": 23, "mark": [561, 569], "marker": [139, 143, 165, 178, 561, 574, 579], "markup": [52, 586], "mask": 120, "mason": [11, 12, 16, 17, 23], "massag": 20, "match": [10, 29, 39, 43, 49, 83, 92, 103, 104, 105, 106, 130, 131, 132, 162, 168, 170, 204, 205, 207, 210, 217, 235, 236, 237, 247, 249, 259, 260, 266, 268, 522, 561, 567, 570, 577, 582, 589, 592, 594], "materi": 584, "matplotlib": [3, 4, 9, 45, 594], "matter": [561, 572, 587], "matthew": [561, 569], "max": [20, 37, 212, 251, 252, 517], "max_mag": 517, "maxbytestodisplai": [127, 561, 573], "maxdepth": 586, "maximum": [26, 27, 36, 37, 39, 51, 127, 137, 138, 172, 244, 488, 513, 517, 524, 561, 581, 582], "maxsplit": [488, 524], "mayb": 153, "mb": [5, 13, 19, 21, 160, 548, 583], "mct": [33, 36], "mdc": 593, "mean": [39, 44, 210, 488, 513, 524, 585, 587, 589, 592, 593], "meaningless": 273, "meant": [163, 201], "measur": [147, 150, 168], "mechan": [30, 34, 236, 244], "media": [2, 12, 20, 26, 27, 28, 41, 46, 68, 134, 192, 194, 587, 589], "mediastoragesopclassuid": [12, 589], "mediastoragesopinstanceuid": 12, "medic": [20, 52, 589], "meet": [10, 34, 139, 244, 561, 567], "megabyt": 592, "mem": [5, 13, 19, 21, 583], "member": [41, 517], "memori": [6, 16, 21, 30, 44, 130, 131, 132, 160, 161, 162, 178, 207, 218, 247, 249, 256, 266, 268, 561, 564, 572, 573, 574, 582, 583, 589], "memory_dataset": [14, 21, 583], "memoryview": [29, 154, 156, 157, 235, 236, 243], "mention": [44, 587], "merg": [585, 586], "messag": [24, 26, 27, 28, 93, 276, 561, 564, 573, 581, 582, 585, 587, 589], "met": [30, 34, 49, 164, 204, 205, 206, 207, 208, 209, 210, 548, 561, 572], "meta": [2, 8, 12, 20, 26, 27, 28, 41, 46, 51, 99, 130, 131, 132, 134, 160, 163, 181, 194, 217, 247, 249, 259, 266, 268, 561, 564, 567, 570, 576, 587], "metadata": [561, 579], "metadata_process": [19, 583], "meterset": [26, 27, 28], "method": [17, 23, 29, 30, 34, 36, 37, 39, 41, 43, 46, 47, 48, 50, 96, 99, 127, 129, 130, 131, 132, 133, 137, 138, 140, 141, 142, 146, 150, 151, 154, 156, 157, 160, 168, 169, 170, 171, 181, 203, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 259, 272, 273, 488, 515, 517, 518, 519, 520, 521, 522, 523, 524, 561, 564, 567, 570, 572, 579, 581, 582, 587, 588, 589, 592, 593], "micro": 12, "microscopi": 592, "microsecond": [519, 523], "microvolt": 594, "mid": [20, 26, 28, 41], "middl": 522, "middle_nam": 522, "middle_name_ideograph": 522, "middle_name_phonet": 522, "might": [38, 46, 244, 594], "mike": [561, 565], "millisecond": [519, 523], "min": [10, 37, 212, 251, 252, 517, 589], "min_mag": 517, "mind": [37, 38], "minim": [26, 28, 30, 44, 130, 131, 132, 181, 194, 236, 247, 249, 266, 268, 517, 561, 582], "minimum": [30, 34, 36, 37, 38, 130, 131, 132, 194, 217, 259, 517], "minor": 589, "minut": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 519, 523], "misc": [551, 561, 570], "miscellan": 551, "mismatch": 592, "miss": [9, 34, 105, 130, 131, 132, 134, 160, 165, 179, 181, 194, 204, 207, 209, 210, 211, 236, 244, 250, 561, 569, 570, 573, 574, 580, 582, 585, 587, 589, 591], "missing_depend": [236, 244], "mistak": 75, "mit": [2, 8, 9, 11, 12, 16, 17, 20, 22, 23, 561, 563, 564], "mitig": [561, 582], "mitra": [561, 580], "mix": [561, 573], "mixedmodality3dcammodel": 593, "mm": [20, 23, 515, 519, 523], "mmap": [561, 582], "mmm": [519, 523], "mobil": 20, "mod": 20, "modal": [2, 8, 9, 10, 20, 26, 28, 41, 45, 212, 214, 215, 251, 252, 254, 255, 561, 574, 589, 593], "modalitytoread": 593, "mode": [9, 20, 26, 28, 33, 37, 82, 85, 86, 131, 154, 156, 157, 247, 249, 266, 268, 517, 561, 574, 585, 591], "model": [2, 8, 20, 24, 26, 41, 51, 127, 130, 131, 132, 588, 594], "modern": [561, 568], "modif": [131, 585, 587, 589], "modifi": [6, 15, 30, 34, 44, 48, 49, 51, 53, 105, 130, 131, 132, 170, 217, 237, 259, 260, 561, 574, 577, 582, 590], "modul": [10, 25, 26, 30, 34, 36, 37, 38, 42, 47, 49, 50, 68, 84, 93, 96, 130, 131, 132, 196, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 236, 237, 244, 247, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 262, 265, 266, 268, 269, 270, 488, 514, 524, 548, 549, 550, 551, 561, 562, 568, 569, 572, 577, 579, 580, 582, 587, 589, 592, 594], "modulenotfounderror": [236, 244], "mondai": [515, 519], "monochrome1": [10, 36, 37, 38, 39, 207, 209, 589], "monochrome2": [2, 8, 20, 36, 37, 38, 39, 207, 209, 589], "monospac": 0, "month": 519, "more": [0, 24, 26, 27, 29, 32, 34, 36, 37, 39, 41, 42, 43, 44, 46, 48, 49, 50, 52, 98, 127, 130, 131, 132, 137, 139, 140, 142, 143, 144, 147, 161, 164, 170, 173, 178, 181, 182, 196, 217, 235, 236, 237, 244, 247, 249, 259, 260, 266, 268, 270, 488, 517, 522, 524, 525, 561, 562, 563, 564, 566, 567, 574, 582, 585, 586, 587, 588, 589, 591, 592, 594], "morenc": [561, 568], "most": [39, 42, 44, 47, 51, 84, 130, 131, 132, 236, 247, 249, 266, 268, 273, 520, 561, 564, 567, 568, 587, 589, 592, 593], "mostli": 129, "move": [0, 92, 98, 169, 170, 561, 567, 568, 582, 586, 589], "mpeg": [404, 561, 577], "mpeg2mphlf": [561, 582], "mpeg2mpmlf": [561, 582], "mpeg4hp41bdf": [561, 582], "mpeg4hp41f": [561, 582], "mpeg4hp422df": [561, 582], "mpeg4hp423df": [561, 582], "mpeg4hp42stereof": [561, 582], "mplx": 3, "mplx_label": 3, "mr": [2, 8, 10, 17, 20, 68, 522, 589], "mr1": [2, 8, 20], "mr_small": [49, 68], "mra": [10, 589], "mrg": [585, 586], "mri": [1, 5, 6, 49, 583], "mrt50h1": [2, 8, 20], "msb": 210, "msec": 20, "msg": [84, 587], "msh": 593, "much": [37, 41, 525, 561, 564, 567, 568, 576], "multi": [34, 39, 49, 59, 81, 127, 130, 131, 132, 137, 140, 142, 143, 144, 145, 146, 147, 170, 203, 204, 235, 236, 244, 247, 249, 266, 268, 270, 540, 551, 561, 570, 572, 574, 576, 582, 587, 594], "multi_str": [59, 69], "multifram": [561, 577], "multipl": [4, 30, 32, 34, 36, 39, 41, 46, 48, 49, 77, 108, 110, 111, 121, 127, 130, 131, 132, 140, 142, 143, 145, 146, 147, 213, 214, 215, 217, 218, 235, 236, 243, 244, 248, 253, 254, 255, 256, 259, 267, 272, 517, 522, 541, 561, 574, 580, 582, 587], "multiplex": [3, 50, 130, 131, 132, 548, 561, 577, 594], "multiplex_1": 50, "multiplex_2": 50, "multiplex_arrai": [50, 130, 131, 132, 548, 561, 577, 594], "multiplexgrouplabel": [3, 594], "multipli": 517, "multiv": [59, 551, 587], "multivalu": [32, 59, 81, 199, 200, 528, 529, 530, 531, 532, 535, 543, 546, 547, 561, 567], "must": [25, 26, 30, 34, 36, 37, 38, 39, 41, 42, 43, 48, 49, 84, 87, 130, 131, 132, 133, 137, 138, 147, 160, 168, 170, 173, 175, 177, 181, 203, 204, 211, 214, 215, 217, 248, 250, 254, 255, 259, 267, 273, 488, 517, 520, 524, 526, 544, 561, 579, 587, 588, 589, 592, 594], "mutabl": 130, "mutablemap": [130, 131, 132], "mutablesequ": [32, 75, 128, 130, 131, 132, 158, 161, 166, 167, 527, 528, 529, 530, 531, 532, 535, 537, 538, 541, 543, 545, 546, 547], "my": [10, 46, 130, 131, 132, 170, 588], "my_decod": 30, "my_decoder_func": 30, "my_encod": 34, "my_encoder_func": 34, "my_inst": 168, "my_json_dump": [130, 131, 132], "my_packag": [30, 34], "my_record": 168, "my_waveform": 594, "myprint": [8, 561, 562], "myself": [561, 569], "n": [2, 8, 11, 14, 20, 26, 28, 194, 204, 207, 209, 210, 212, 213, 214, 215, 251, 252, 253, 254, 255, 270, 488, 517, 524, 548, 589], "naiv": 519, "name": [0, 2, 6, 8, 9, 10, 11, 12, 14, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 41, 42, 43, 44, 46, 51, 52, 105, 108, 110, 117, 118, 121, 122, 123, 127, 130, 131, 132, 134, 154, 156, 157, 160, 194, 211, 217, 235, 236, 237, 243, 244, 245, 246, 247, 249, 250, 259, 260, 266, 268, 270, 488, 515, 517, 519, 522, 524, 561, 562, 563, 564, 567, 570, 571, 572, 577, 579, 580, 581, 582, 583, 585, 586, 587, 589, 592, 593, 594], "name_prefix": 522, "name_prefix_ideograph": 522, "name_prefix_phonet": 522, "name_suffix": 522, "name_suffix_ideograph": 522, "name_suffix_phonet": 522, "namedtemporaryfil": [12, 17], "nan": [517, 518, 521, 525], "nanz": [561, 564], "nativ": [29, 39, 43, 130, 131, 132, 236, 244, 247, 249, 266, 268, 273, 491, 520, 555, 561, 582, 592], "natur": [488, 517, 524], "navig": 586, "ncit": 593, "ndarrai": [29, 37, 41, 44, 47, 48, 49, 50, 52, 79, 81, 96, 102, 130, 131, 132, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 235, 236, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 266, 267, 268, 270, 271, 530, 532, 548, 561, 570, 574, 577, 582, 592, 594], "ndc": 593, "nearest": [171, 517], "necessari": [37, 41, 42, 47, 139, 144, 273, 517, 520, 522, 589, 594], "necessarili": [46, 48, 561, 582], "need": [25, 26, 27, 30, 34, 37, 38, 39, 41, 42, 43, 44, 46, 48, 50, 51, 52, 76, 78, 92, 96, 130, 131, 132, 158, 164, 217, 235, 236, 259, 542, 545, 561, 564, 579, 582, 585, 586, 587, 588, 589, 591, 592, 594], "needs_to_convert_to_rgb": [96, 205, 206, 207, 208, 209, 210], "neg": [273, 517, 520], "negat": 517, "neither": [83, 84, 170, 212, 214, 251, 252, 254, 517], "nema": 52, "ness": [561, 564], "nest": [26, 28, 41, 130, 561, 568, 581], "network": [561, 577], "neu": 593, "neutral": 52, "never": [32, 80, 130, 131, 132, 488, 517, 524, 585], "new": [10, 16, 17, 18, 26, 27, 38, 45, 51, 52, 53, 68, 107, 108, 109, 110, 127, 130, 131, 132, 154, 156, 157, 169, 170, 171, 203, 217, 235, 236, 237, 243, 244, 259, 260, 488, 515, 519, 522, 523, 524, 562, 563, 564, 567, 568, 569, 572, 573, 574, 576, 577, 579, 582, 584, 587, 590, 594], "new_dict_item": [16, 107, 109], "new_entries_dict": [16, 107, 109], "new_fileset": 10, "new_instance_uid": [130, 131, 132, 217, 237, 259, 260], "newdefineduid": 585, "newer": 46, "newli": [42, 130, 131, 132, 561, 576], "newlin": 20, "next": [42, 46, 95, 130, 131, 132, 161, 170, 171, 561, 564, 577, 589, 594], "next_indent_str": 8, "next_minu": 517, "next_plu": 517, "next_toward": 517, "nfound": 10, "nice": [203, 236, 244, 585], "nikitathespid": [561, 564], "nil": [561, 569], "no_meta": 587, "no_meta_path": 587, "node": [169, 170, 171, 587], "nois": [33, 36, 130, 131, 132, 217, 259], "non": [24, 26, 32, 41, 42, 107, 108, 109, 110, 125, 127, 128, 130, 131, 132, 134, 143, 168, 170, 181, 194, 210, 232, 233, 247, 249, 266, 268, 270, 279, 488, 517, 521, 524, 525, 527, 530, 532, 538, 540, 561, 565, 566, 570, 571, 572, 573, 574, 577, 581, 587], "none": [0, 2, 8, 10, 14, 20, 32, 33, 52, 75, 77, 80, 81, 90, 93, 95, 96, 97, 105, 107, 108, 109, 110, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 140, 142, 143, 145, 146, 152, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 211, 217, 235, 236, 243, 244, 247, 249, 250, 259, 265, 266, 268, 272, 274, 276, 488, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 545, 546, 547, 548, 561, 570, 573, 574, 577, 585, 587, 591, 593], "nor": [83, 84], "norigin": 10, "normal": [9, 16, 20, 25, 26, 27, 41, 68, 517, 561, 582], "not_dicom": 587, "notat": [26, 27, 28, 488, 517, 524, 525, 587], "note": [10, 18, 24, 26, 27, 28, 29, 42, 46, 47, 52, 81, 92, 108, 110, 130, 131, 132, 133, 139, 143, 148, 149, 160, 164, 165, 177, 187, 203, 212, 214, 215, 251, 252, 254, 255, 488, 515, 517, 518, 519, 521, 522, 523, 524, 525, 564, 586, 587, 588, 592, 593, 594], "notebook": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "noth": [36, 37, 38, 589], "notic": [587, 589], "notimplementederror": [96, 130, 131, 132, 206, 207, 208, 210, 269], "notimplementerror": [561, 563], "noun": 52, "noutput": 16, "novemb": 23, "now": [12, 20, 127, 130, 131, 132, 513, 519, 561, 563, 564, 567, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 585, 586, 587, 589, 594], "np": [3, 4, 37, 204, 207, 209, 210, 211, 212, 213, 214, 215, 217, 235, 236, 243, 244, 247, 249, 250, 251, 252, 253, 254, 255, 259, 266, 268, 269, 270, 548, 592, 594], "nr_channel": 3, "nr_fragment": [139, 149], "nr_frame": [143, 145], "nr_retri": [154, 156, 157], "nr_sampl": 3, "nsew": 0, "nucleu": [2, 8, 20], "null": [139, 204, 235, 243, 248, 262, 267, 538], "number": [2, 8, 11, 18, 20, 24, 26, 27, 28, 29, 30, 34, 39, 41, 44, 46, 48, 52, 108, 110, 127, 129, 130, 131, 132, 133, 137, 139, 140, 142, 143, 144, 145, 146, 149, 151, 154, 156, 157, 159, 160, 161, 170, 171, 172, 175, 178, 193, 195, 196, 202, 203, 204, 217, 235, 236, 243, 244, 259, 261, 262, 270, 272, 273, 274, 488, 513, 515, 517, 518, 519, 520, 521, 523, 524, 525, 561, 562, 566, 569, 573, 579, 580, 582, 586, 587, 589, 591, 593, 594], "number_class": 517, "number_of_fram": [29, 30, 34, 140, 142, 146, 216, 235, 243, 244, 258], "numberofbeam": [24, 26], "numberofblock": 18, "numberofbrachyapplicationsetup": [24, 26], "numberoffractionsplan": [24, 26], "numberoffram": [207, 209, 210, 262, 263, 265, 270], "numberofframesinoverlai": 204, "numberofwaveformchannel": [3, 50, 548, 594], "numberofwaveformsampl": [3, 548, 594], "numer": [41, 170, 172, 273, 488, 517, 520, 524, 541, 561, 565, 574, 579, 581], "numpi": [2, 3, 4, 23, 29, 30, 34, 36, 37, 38, 41, 43, 44, 47, 48, 49, 50, 52, 81, 96, 101, 102, 130, 131, 132, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 235, 236, 237, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 266, 267, 268, 269, 270, 271, 530, 532, 548, 561, 562, 570, 572, 573, 574, 576, 580, 582, 585, 591, 592, 594], "numpy_handl": [96, 551, 561, 579], "numpypi": [561, 572], "o": [20, 22, 70, 72, 247, 249, 266, 268], "ob": [2, 12, 20, 26, 27, 28, 32, 41, 43, 46, 130, 131, 132, 139, 186, 194, 237, 260, 533, 561, 565, 580, 587, 588], "obj": [130, 131, 132], "object": [0, 10, 14, 29, 30, 34, 41, 46, 47, 52, 84, 98, 102, 127, 130, 131, 132, 133, 140, 141, 142, 146, 150, 151, 154, 156, 157, 160, 161, 162, 164, 165, 168, 170, 181, 203, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 241, 242, 247, 249, 264, 266, 268, 272, 273, 275, 519, 520, 522, 551, 561, 563, 564, 573, 574, 576, 579, 580, 582, 587, 589, 594], "observ": 593, "observationsubjectclass": 593, "observertyp": 593, "obvious": 594, "obxxxx1a": 68, "occasion": [586, 587, 589], "occur": [85, 86, 517, 561, 574, 585, 589], "occurr": [129, 203, 272, 488, 524], "octob": 23, "od": [32, 181, 561, 570, 571, 579], "odd": [41, 130, 131, 132, 133, 204, 235, 236, 243, 262, 273, 561, 571, 580, 582, 587], "off": [20, 26, 27, 42, 93, 161, 561, 568, 576, 586], "offer": [26, 27, 49, 130, 131, 132], "offic": 522, "offici": [41, 111, 112, 113, 114, 115, 116, 117, 124, 125, 126, 127, 488, 561, 567, 568, 587, 594], "offlin": 591, "offset": [2, 8, 20, 43, 46, 48, 127, 130, 131, 132, 133, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 154, 156, 157, 165, 166, 167, 170, 176, 177, 217, 235, 236, 243, 259, 536, 544, 561, 574, 577, 580, 582, 589, 592], "offsetofreferencedlowerleveldirectoryent": 168, "offsetofthenextdirectoryrecord": 168, "often": [47, 49, 108, 588], "ok": [37, 83, 84, 170, 585], "ol": [32, 181, 561, 570, 571, 579], "old": [130, 131, 132, 488, 524, 561, 562, 563, 567, 570, 576], "older": [517, 591], "onc": [43, 46, 81, 108, 110, 585, 586, 592, 593], "one": [10, 24, 26, 30, 34, 36, 39, 41, 44, 49, 50, 51, 82, 85, 86, 107, 109, 127, 130, 131, 132, 136, 137, 138, 139, 142, 143, 144, 147, 162, 163, 168, 170, 171, 172, 178, 182, 196, 211, 217, 218, 236, 237, 243, 244, 247, 249, 250, 256, 259, 260, 266, 268, 488, 517, 518, 524, 561, 567, 570, 580, 582, 585, 587, 589, 591, 592, 593, 594], "ones": [273, 488, 520, 524, 584, 587, 589], "onli": [10, 24, 26, 27, 28, 29, 30, 34, 36, 37, 39, 41, 42, 44, 48, 49, 51, 52, 55, 79, 96, 108, 110, 111, 112, 113, 115, 116, 117, 118, 126, 130, 131, 132, 134, 143, 147, 160, 163, 170, 172, 179, 180, 181, 194, 207, 217, 223, 224, 227, 235, 236, 239, 243, 244, 247, 248, 249, 257, 259, 266, 267, 268, 269, 271, 274, 488, 521, 524, 526, 561, 567, 569, 570, 571, 572, 573, 574, 576, 577, 579, 582, 585, 587, 588, 589, 592], "onlin": 23, "open": [9, 23, 25, 26, 155, 161, 247, 249, 266, 268, 561, 564, 585, 586, 587], "openjpeg": [36, 43, 44, 591], "oper": [2, 8, 20, 36, 37, 38, 41, 42, 44, 45, 46, 84, 130, 131, 132, 154, 156, 157, 212, 214, 215, 235, 236, 247, 249, 251, 252, 254, 255, 266, 268, 488, 517, 524, 561, 564, 572, 574, 577, 587, 591], "operand": [517, 561, 579], "opt": 594, "optim": [130, 131, 132], "optimis": [561, 579], "optimist": [561, 577], "option": [2, 8, 17, 20, 25, 27, 28, 30, 31, 32, 34, 35, 42, 44, 47, 80, 81, 93, 103, 104, 105, 106, 108, 110, 127, 128, 130, 131, 132, 134, 137, 139, 140, 141, 142, 143, 145, 146, 149, 150, 151, 154, 156, 157, 158, 160, 161, 164, 170, 171, 172, 178, 181, 193, 203, 204, 207, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 247, 248, 249, 250, 253, 254, 255, 256, 257, 259, 260, 262, 266, 267, 268, 269, 270, 271, 272, 274, 488, 513, 514, 519, 522, 523, 524, 527, 528, 529, 530, 531, 532, 535, 536, 537, 538, 540, 542, 543, 544, 545, 546, 547, 548, 551, 561, 563, 564, 570, 574, 577, 579, 582, 589, 594], "order": [4, 29, 30, 33, 34, 36, 37, 39, 49, 96, 130, 131, 132, 133, 143, 171, 175, 179, 180, 181, 193, 210, 217, 233, 244, 248, 259, 267, 273, 488, 517, 520, 561, 562, 569, 572, 574, 585, 594], "ordereddict": [561, 569], "ordin": [488, 515, 519, 524], "org": [52, 588], "organ": [26, 27, 522], "organ_at_risk": [26, 27], "orient": [2, 8, 20], "origin": [2, 10, 20, 24, 26, 28, 29, 39, 43, 46, 48, 51, 88, 130, 131, 132, 162, 170, 207, 217, 235, 236, 237, 259, 260, 273, 488, 513, 517, 518, 520, 521, 522, 524, 561, 582, 585, 586, 587, 592, 594], "original_character_set": [130, 131, 132, 561, 582], "original_encod": [130, 131, 132, 181, 193, 561, 582], "original_str": [522, 561, 572], "orphan": 170, "orthogon": 4, "oserror": 162, "other": [2, 8, 17, 20, 24, 30, 32, 34, 39, 42, 43, 44, 46, 47, 48, 49, 51, 164, 181, 186, 187, 194, 248, 267, 488, 517, 522, 524, 582, 585, 587, 589, 592], "othermod": 593, "otherpatientid": [17, 561, 563], "otherpatientidssequ": [17, 587], "otherwis": [24, 26, 29, 30, 34, 39, 41, 87, 96, 114, 115, 119, 120, 124, 125, 126, 127, 130, 131, 132, 137, 140, 141, 142, 146, 150, 151, 158, 170, 172, 173, 176, 177, 181, 201, 213, 214, 215, 217, 235, 236, 237, 243, 244, 247, 248, 249, 253, 254, 255, 257, 259, 260, 266, 267, 268, 269, 271, 488, 514, 517, 522, 524, 526, 527, 528, 529, 530, 531, 532, 536, 537, 538, 540, 541, 543, 544], "our": [37, 585, 586, 587, 589, 594], "out": [0, 49, 51, 138, 170, 203, 248, 267, 272, 517, 518, 561, 577, 584, 585, 586, 587, 589, 594], "outfil": [24, 26, 587], "outlin": 46, "output": [13, 16, 20, 24, 26, 27, 44, 49, 51, 52, 130, 131, 132, 212, 236, 247, 249, 251, 252, 261, 266, 268, 515, 519, 523, 561, 574, 576, 583, 585, 586, 587, 589], "ov": [32, 181, 561, 574, 579], "over": [10, 20, 26, 27, 48, 561, 582, 587, 589], "overflow": 20, "overflowerror": [273, 517, 518, 520, 521], "overlai": [45, 49, 68, 130, 131, 132, 257, 271, 551, 561, 574, 577, 582, 587], "overlap": [488, 524], "overlay_arrai": [45, 130, 131, 132, 561, 574], "overlay_data_handl": [561, 577, 582], "overlaybitposit": 204, "overlaybitsalloc": 204, "overlaycolumn": 204, "overlayrow": 204, "overrang": 20, "overrid": [29, 132, 168, 216, 258, 516, 561, 572, 589], "overview": 589, "overwrit": [10, 547], "ow": [2, 20, 26, 28, 32, 43, 48, 50, 130, 131, 132, 181, 187, 236, 237, 260, 534, 561, 565, 576, 581, 587], "own": [8, 24, 25, 26, 27, 41, 46, 51, 130, 131, 132, 170, 181, 561, 571, 581, 587, 589, 592, 594], "p": [4, 10, 22, 24, 26, 55, 522, 561, 567, 589], "p0xxxxxx": 170, "p14": 245, "p1xxxxxx": 170, "p25": [2, 8, 20], "p2xxxxxx": 170, "p98": 22, "pack": [22, 39, 48, 130, 131, 132, 236, 247, 248, 249, 257, 266, 267, 268, 271, 561, 571, 572, 577, 580], "pack_bit": [48, 551, 561, 572, 577, 582], "packag": [25, 26, 27, 44, 45, 47, 130, 131, 132, 204, 205, 206, 207, 208, 209, 210, 236, 237, 244, 260, 548, 561, 562, 565, 570, 577, 579, 589, 591], "packbit": 38, "packed_byt": 48, "pad": [2, 3, 8, 20, 26, 28, 130, 131, 132, 137, 139, 144, 199, 204, 235, 237, 243, 248, 260, 262, 267, 488, 517, 524, 561, 571, 573, 574, 577, 579, 580, 587], "padraig": [561, 568, 569], "page": [37, 561, 570, 573, 584, 585, 586, 591], "pair": [25, 26, 132, 170, 216, 258, 273, 517, 518, 520, 521], "palett": [36, 37, 38, 39, 45, 104, 168, 170, 211, 250, 561, 574, 576], "palette_color": [49, 68], "panchal": [561, 564], "papadopoulo": [561, 569], "paramet": [0, 10, 20, 24, 26, 49, 50, 51, 52, 75, 76, 77, 78, 80, 81, 93, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 160, 161, 162, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 193, 194, 196, 197, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 235, 236, 237, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 488, 513, 514, 517, 518, 521, 522, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 561, 567, 569, 571, 577, 579, 580, 587, 589, 592], "parametr": [49, 585], "pare": 201, "parent": [0, 26, 27, 133, 154, 156, 157, 170, 171, 561, 571, 582, 589], "parent_dataset": [561, 582], "parent_encod": [161, 193], "parent_seq": [561, 582], "pars": [160, 164, 264, 519, 551, 561, 562, 574, 576, 577, 582], "parse_basic_offset": [147, 561, 582], "parse_frag": [561, 582], "parser": [25, 26], "part": [10, 27, 28, 32, 36, 37, 38, 39, 42, 46, 49, 50, 52, 110, 127, 130, 131, 132, 133, 137, 139, 142, 143, 144, 145, 146, 147, 149, 150, 160, 173, 179, 180, 181, 194, 198, 204, 207, 212, 213, 214, 215, 218, 248, 251, 252, 253, 254, 255, 256, 257, 267, 270, 271, 273, 488, 513, 518, 520, 521, 522, 524, 561, 564, 567, 579, 585, 586, 587, 588, 589, 592, 594], "part05": [52, 586], "parti": [45, 522, 591], "partial": [561, 564], "particular": [26, 27, 41, 48, 49, 88, 130, 131, 132, 163, 561, 564, 574, 587, 593], "particularli": [49, 51], "partit": [488, 524], "pass": [36, 37, 41, 43, 48, 49, 52, 91, 103, 104, 106, 130, 131, 132, 137, 138, 203, 561, 564, 585, 586, 589, 592], "past": [39, 144, 165, 194], "pat": 41, "pat_nam": 9, "patch": [561, 564, 584, 585], "path": [0, 9, 10, 11, 12, 17, 24, 26, 27, 28, 30, 34, 41, 44, 49, 52, 103, 104, 105, 106, 130, 131, 132, 160, 169, 170, 173, 181, 201, 236, 244, 247, 249, 266, 268, 561, 577, 582, 586, 589], "pathlib": [0, 10, 12, 173, 589], "pathlik": [130, 131, 132, 160, 162, 163, 170, 181, 247, 249, 266, 268, 561, 576], "patient": [2, 8, 9, 10, 12, 17, 20, 26, 27, 28, 130, 131, 132, 168, 170, 522, 561, 563, 570, 580, 586, 587, 589], "patient_id": 10, "patient_nam": 522, "patient_name_ideograph": 522, "patient_name_phonet": 522, "patientbirthd": [17, 41], "patientid": [9, 10, 12, 14, 17, 26, 28, 41, 130, 168, 170, 587, 589], "patientnam": [9, 10, 12, 14, 26, 28, 41, 68, 83, 84, 127, 130, 160, 168, 170, 274, 561, 573, 586, 587, 589], "patientsbirthd": [561, 563], "patientsetupsequ": 41, "patientsex": [41, 130, 131, 132], "patientsnam": [83, 84], "pattern": [20, 26, 28, 103, 104, 106, 561, 582], "paxxxxxx": 170, "pc": 589, "peak": [33, 36, 130, 131, 132, 217, 259], "penalti": 516, "peopl": 589, "pep": [561, 563, 566, 570], "per": [2, 8, 20, 29, 30, 34, 36, 37, 38, 39, 41, 49, 55, 130, 131, 132, 137, 138, 143, 173, 207, 217, 235, 243, 244, 259, 270, 561, 567, 574, 577, 587, 592], "per_fram": [218, 235, 256, 561, 579], "perform": [2, 30, 34, 36, 37, 39, 42, 43, 44, 82, 111, 112, 113, 115, 116, 126, 130, 131, 132, 134, 170, 209, 236, 237, 244, 247, 249, 260, 266, 268, 517, 534, 561, 568, 571, 572, 591, 592, 594], "perman": 108, "persist": 162, "person": [6, 17, 21, 32, 52, 522, 561, 572, 579, 583, 593], "person_nam": 22, "person_names_callback": 17, "personnam": [22, 32, 59, 127, 535, 561, 562, 573, 576, 577, 579, 582], "personname3": [561, 568, 573, 576], "personnameunicod": [561, 576, 582], "pet": [49, 211, 250], "pet_20_step": [211, 250], "peter": [10, 589], "phase": 20, "phonet": 522, "photoimag": 47, "photometr": [2, 8, 20, 29, 38, 39, 49, 130, 131, 132, 205, 206, 207, 208, 209, 210, 217, 218, 235, 236, 237, 243, 247, 249, 256, 259, 260, 261, 266, 268, 561, 574, 592], "photometric_interpret": [29, 30, 34, 216, 235, 243, 244, 258], "photometricinterpret": [10, 36, 37, 38, 207, 209, 262, 263, 589, 592], "photon": [26, 28], "physic": [49, 589], "physician": [2, 8, 20], "pi": 594, "pickl": [561, 570, 574, 579], "pierr": [561, 564], "pil": [45, 561, 564, 572], "pillow": [30, 34, 44, 47, 130, 131, 132, 208, 226, 227, 228, 229, 561, 570, 572, 574, 576, 579, 582, 585], "pillow_handl": [96, 585], "pilsupportedcompressedpixeltransfersyntax": [561, 577, 582], "pip": [26, 27, 585, 586, 592, 594], "pipe": [26, 27], "pitch": 20, "pixel": [2, 4, 6, 7, 8, 13, 20, 23, 24, 26, 28, 33, 40, 41, 45, 47, 48, 51, 52, 53, 66, 79, 96, 130, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 160, 164, 204, 205, 206, 207, 208, 209, 210, 549, 551, 561, 562, 564, 565, 570, 571, 572, 573, 574, 576, 577, 579, 580, 582, 583, 585, 587, 590, 591], "pixel_arrai": [2, 4, 9, 29, 37, 38, 41, 44, 45, 47, 52, 130, 131, 132, 551, 561, 563, 574, 582], "pixel_array_opt": [29, 130, 131, 132, 561, 582], "pixel_byt": 41, "pixel_data_handl": [130, 131, 132, 549, 551, 561, 572, 579, 582], "pixel_dtyp": [235, 561, 582], "pixel_keyword": [29, 30, 235, 243], "pixel_properti": [235, 236], "pixel_represent": [29, 30, 34, 216, 235, 243, 244, 258], "pixelarrai": [561, 562, 563], "pixeldata": [2, 29, 30, 36, 37, 38, 41, 43, 49, 51, 135, 137, 138, 235, 243, 263, 561, 573, 574, 592], "pixeldataarrai": [561, 562], "pixelrepresent": [36, 37, 38, 207, 209, 210, 263, 269, 561, 573], "pixels1": 20, "pixelspac": [4, 9], "place": [36, 37, 38, 39, 43, 44, 130, 131, 132, 203, 217, 237, 259, 260, 272, 517, 561, 570, 587, 589], "placehold": [130, 131, 132], "plain": [561, 564], "plan": [26, 27, 28, 41, 68, 168], "plan1": [26, 28], "plan_d": 18, "planar": [29, 36, 39, 49, 130, 131, 132, 217, 235, 243, 259, 270, 561, 572], "planar_configur": [29, 30, 216, 235, 243, 258], "planarconfigur": [207, 209, 210, 263, 270, 561, 570], "plane": [4, 20, 30, 33, 37, 39, 49, 204, 244], "pleas": [0, 14, 25, 26, 28, 41, 130, 131, 132, 135, 136, 143, 144, 145, 147, 152, 181, 236, 247, 249, 266, 268, 561, 568, 579, 585, 586], "plot": [1, 5, 6, 7, 13, 561, 573, 583, 594], "plot_add_dict_entri": [16, 19, 583], "plot_anonym": [17, 19, 583], "plot_dicom_differ": [20, 21, 583], "plot_downsize_imag": [2, 5, 583], "plot_printing_dataset": [8, 13, 583], "plot_read_dicom": [9, 13, 583], "plot_read_fileset": [10, 13, 583], "plot_read_rtplan": [11, 13, 583], "plot_sequ": [18, 19, 583], "plot_waveform": [3, 5, 583], "plot_write_dicom": [12, 13, 583], "plt": [3, 4, 9, 47, 594], "plugin": [31, 35, 43, 44, 130, 131, 132, 209, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 249, 259, 260, 266, 268, 561, 579, 580, 584, 591, 592], "plugin_label": [30, 34], "plural": 10, "pn": [2, 12, 17, 20, 32, 41, 64, 127, 130, 131, 132, 522, 535, 561, 574, 579, 586, 587, 589], "point": [17, 24, 25, 26, 27, 28, 32, 51, 178, 207, 269, 488, 517, 518, 521, 524, 525, 561, 563, 568, 579, 585, 587, 593], "pop": [130, 131, 132, 203, 272, 561, 573], "popitem": [130, 131, 132], "popul": [0, 12, 51, 273, 520, 593], "popular": 591, "portion": 41, "posit": [2, 8, 20, 24, 26, 27, 28, 140, 141, 142, 144, 146, 147, 150, 151, 153, 154, 156, 157, 165, 175, 176, 177, 194, 203, 235, 236, 272, 273, 488, 517, 518, 520, 521, 524], "posix": [515, 519], "possibl": [17, 30, 37, 39, 41, 42, 49, 92, 127, 130, 131, 132, 146, 154, 156, 157, 168, 179, 180, 181, 210, 236, 257, 271, 488, 524, 525, 561, 570, 572, 573, 574, 579, 582, 588, 589, 593], "possibli": [49, 130, 131, 132, 236], "post": [20, 561, 576], "posterior": 20, "potenti": 51, "ppscan": 20, "pq": [488, 524], "pr": [561, 580, 585, 586], "practic": [37, 45, 68, 170], "pre": [26, 28, 41, 561, 582, 585], "preambl": [130, 131, 132, 160, 165, 181, 194, 201, 561, 570, 587], "preced": [46, 561, 582], "precis": [79, 87, 264, 517, 518, 522, 525, 561, 579], "predefin": 42, "predict": [143, 233], "prefer": 587, "prefer_lut": [214, 254, 561, 577], "prefix": [24, 26, 27, 28, 52, 153, 160, 165, 172, 181, 194, 439, 488, 513, 522, 524, 561, 573, 582, 585, 586, 587, 593], "preliminari": [561, 562, 565], "prepar": [561, 568], "prepend": 131, "prerequisit": [45, 592, 594], "prescrib": 20, "prescript": [26, 27], "presenc": [144, 211, 250, 587], "present": [16, 26, 28, 39, 48, 78, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 129, 130, 131, 132, 134, 143, 144, 145, 147, 153, 160, 165, 168, 170, 171, 181, 194, 203, 211, 212, 213, 214, 215, 216, 217, 237, 244, 250, 251, 252, 253, 254, 255, 258, 259, 260, 272, 488, 524, 561, 563, 571, 573, 574, 587, 594], "preserv": [130, 131, 132, 181, 561, 569, 576], "pretti": [171, 585], "prettier": 41, "prettifi": 171, "prevent": [561, 574], "previou": [51, 171, 172, 561, 567, 570, 576, 577, 582], "previous": [39, 130, 131, 132, 162, 561, 572, 576, 579], "primari": [20, 26, 28, 46, 587], "primarili": [561, 565], "primer": 586, "print": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 36, 37, 41, 48, 108, 110, 130, 131, 132, 247, 266, 561, 563, 574, 583, 586, 587, 589, 594], "printabl": [488, 524], "prior": [39, 43, 144, 181, 236, 244, 561, 582, 592], "prioriti": [181, 193, 561, 582], "privat": [6, 15, 17, 19, 20, 24, 26, 27, 28, 39, 41, 45, 51, 107, 108, 109, 110, 117, 118, 121, 122, 123, 125, 127, 128, 130, 131, 132, 133, 168, 169, 170, 194, 273, 434, 488, 514, 551, 561, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 576, 577, 579, 580, 581, 582, 583, 587, 589], "private_block": [16, 46, 130, 131, 132], "private_cr": [16, 46, 109, 110, 118, 121, 122, 123, 130, 131, 132, 133, 273], "private_creator_el": 133, "private_elem": 587, "privateblock": [46, 130, 131, 132, 551], "privaterecorduid": 170, "privileg": 591, "probabl": [23, 51, 589], "problem": [561, 579, 587], "proc": 20, "procedur": 589, "process": [20, 25, 26, 30, 34, 36, 37, 39, 44, 130, 131, 132, 143, 218, 228, 229, 232, 233, 235, 236, 243, 247, 249, 266, 268, 488, 516, 554, 561, 564, 576, 579, 581, 582, 585, 586, 594], "produc": [12, 24, 26, 49, 51, 52, 273, 517, 520, 561, 569, 574, 579, 582], "product": [20, 517], "program": [26, 27, 41, 47, 561, 562, 567], "progress": [36, 561, 581, 586], "project": [9, 10, 20, 96, 584, 585, 586, 591], "projector": 20, "prolept": [515, 519], "promot": [561, 567], "prompt": 41, "pronoun": 52, "proof": [45, 95], "propag": [561, 574], "proper": [52, 561, 564], "properli": 585, "properti": [10, 14, 29, 30, 34, 41, 44, 55, 127, 130, 131, 132, 154, 156, 157, 169, 170, 171, 235, 236, 243, 244, 273, 488, 522, 561, 562, 564, 567, 570, 571, 577, 582, 589], "protect": 42, "protocol": [168, 273, 520], "provid": [30, 34, 39, 41, 46, 49, 53, 96, 127, 130, 131, 132, 140, 142, 146, 204, 207, 209, 210, 236, 244, 548, 561, 568, 588, 591, 592, 593], "ps3": [22, 522], "psnr": [130, 131, 132, 217, 259], "pt000000": [10, 589], "pt000001": [10, 589], "pt000002": [10, 589], "pt000003": 10, "ptv": [26, 27], "ptxxxxxx": 170, "pubchem_cid": 593, "public": [39, 130, 131, 132, 181], "pull": [25, 26, 28, 584, 591], "puls": 20, "punctuat": [488, 524], "purpos": [36, 37, 592], "push": [585, 586], "put": 182, "px": 37, "py": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 41, 47, 51, 83, 84, 96, 561, 562, 565, 566, 567, 568, 569, 570, 578, 583, 585, 587, 589, 592], "py3": 591, "pydicom": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 25, 29, 30, 32, 34, 36, 37, 38, 40, 44, 48, 49, 50, 51, 52, 59, 69, 549, 551, 562, 564, 565, 566, 567, 568, 569, 570, 571, 574, 576, 577, 579, 583, 585, 586, 587, 588, 589, 590, 593, 594], "pydicom_futur": [42, 561, 577], "pydicom_pil": 47, "pydicom_seri": [561, 565, 568, 569], "pydicom_subcommand": [25, 26], "pydicom_test": [10, 589], "pydicom_tkint": 47, "pyjpegl": [37, 43, 130, 131, 132, 206, 217, 230, 231, 240, 241, 259, 561, 582, 592], "pylibjpeg": [29, 38, 43, 44, 130, 131, 132, 209, 217, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 242, 244, 259, 561, 577, 579, 582, 592], "pylibjpeg_handl": 96, "pypi": [561, 570, 572, 591], "pyplot": [3, 4, 9, 47, 594], "pyproject": [42, 561, 581], "pysid": [561, 568], "pytest": [561, 581], "python": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 40, 41, 42, 45, 46, 51, 52, 53, 75, 76, 78, 93, 130, 131, 132, 205, 206, 208, 488, 524, 561, 562, 564, 565, 567, 568, 569, 570, 571, 572, 573, 576, 577, 578, 579, 581, 582, 585, 586, 587, 588, 591, 592, 594], "python3": 589, "pythoncod": [24, 26], "q": [26, 27, 28, 585], "qt": [561, 568], "qualiti": [33, 36, 37, 130, 131, 132, 217, 259, 592], "quantiti": [49, 548, 594], "quantiz": 517, "queri": [10, 92, 170, 589], "question": 584, "quickli": [163, 589], "quiet": [26, 27, 28, 517], "quinci": 522, "quit": [51, 561, 564, 585], "r": [20, 39, 127, 130, 131, 132, 488, 524, 588], "r1": 39, "r100": [561, 563], "r102": [561, 563], "r103": [561, 563], "r104": [561, 563], "r105": [561, 563], "r109": [561, 563], "r110": [561, 563], "r111": [561, 563], "r113": [561, 563], "r2": 39, "r45": [561, 562], "r46": [561, 562], "r50": [561, 562], "r51": [561, 562], "r55": [561, 562], "r64": [561, 562], "r65": [561, 562], "r67": [561, 562], "r68": [561, 562], "r69": [561, 562], "r70": [561, 562], "r72": [561, 562], "r73": [561, 562], "r78ba350a3eb8": [561, 568], "r91": [561, 563], "r95": [561, 563], "r96": [561, 563], "r97": [561, 563], "r98": [561, 563], "ra": 20, "radiotherapi": 168, "radix": 517, "radlex": 593, "rai": [20, 26, 28, 587], "rais": [42, 55, 75, 76, 78, 80, 81, 83, 84, 96, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 121, 122, 123, 128, 129, 130, 131, 132, 133, 134, 144, 147, 153, 154, 156, 157, 160, 162, 165, 170, 178, 179, 181, 194, 203, 204, 205, 206, 207, 208, 209, 210, 236, 244, 248, 257, 267, 269, 271, 272, 273, 276, 488, 513, 517, 518, 520, 521, 524, 525, 530, 532, 544, 551, 561, 565, 566, 571, 573, 574, 577, 579, 580, 582, 587, 589, 592], "raise_orphan": 170, "randbelow": [513, 561, 582], "random": [513, 561, 582], "rang": [20, 30, 34, 37, 39, 48, 92, 203, 212, 244, 247, 251, 252, 266, 272, 488, 517, 524, 561, 572, 574, 587], "rare": [561, 582], "rate": [26, 27], "rather": [24, 26, 27, 28, 48, 51, 127, 130, 131, 132, 170, 203, 216, 258, 517, 561, 562, 563, 570, 574, 576, 579, 582, 587], "ratio": [20, 33, 36, 37, 38, 130, 131, 132, 217, 259, 273, 517, 518, 520, 521], "ration": [273, 520], "raw": [29, 30, 34, 37, 41, 48, 49, 50, 128, 129, 130, 131, 132, 140, 142, 146, 152, 158, 162, 168, 236, 244, 247, 249, 266, 268, 548, 561, 567, 573, 576, 594], "raw_data_el": [128, 546], "raw_data_elem": 162, "rawdatael": [59, 90, 128, 130, 131, 132, 158, 162, 192, 546], "rawiobas": [156, 157], "raybaut": [561, 564], "rb": [131, 247, 249, 266, 268, 587], "rbg": [561, 579], "rd000000": 589, "re": [10, 16, 48, 53, 134, 438, 439, 584, 585, 586, 587, 589, 591, 592, 594], "reach": [164, 176, 178, 235], "reachabl": 586, "read": [0, 2, 6, 7, 8, 13, 14, 16, 17, 18, 20, 24, 26, 27, 28, 29, 41, 42, 46, 48, 49, 51, 53, 55, 69, 75, 81, 88, 93, 105, 130, 131, 132, 135, 136, 140, 141, 142, 144, 146, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 174, 175, 177, 178, 201, 205, 207, 235, 236, 247, 249, 266, 268, 514, 520, 521, 551, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582, 583, 586, 588, 589, 590, 593], "read_byt": 14, "read_data_el": 158, "read_dataset": [14, 69, 164], "read_deferred_data_el": 69, "read_dicomdir": [561, 569], "read_encod": [130, 131, 132, 561, 582], "read_exact": [154, 156, 157], "read_fil": [561, 563, 564, 565, 570, 579, 582], "read_file_meta_info": [69, 131], "read_implicit_vr": [130, 131, 132, 561, 582], "read_item": [561, 582], "read_little_endian": [130, 131, 132, 561, 582], "read_onli": 207, "read_ow": [561, 562], "read_parti": [69, 160, 201, 587], "read_preambl": [69, 201, 587], "read_sequ": 69, "read_sequence_item": 69, "read_siz": [175, 176, 177, 178], "read_tag": [154, 156, 157], "read_u": [154, 156, 157], "read_ul": [154, 156, 157], "read_undefined_length_valu": 69, "readabl": [130, 131, 132, 140, 141, 142, 146, 150, 151, 160, 561, 582], "readablebuff": [131, 140, 141, 142, 146, 150, 151, 154, 156, 157, 160], "reader": 52, "readfil": [561, 563], "readi": [585, 586], "reading_validation_mod": [42, 55, 75, 76, 78, 94, 128, 130, 131, 132, 561, 580], "readm": 10, "real": [273, 518, 520, 521, 585, 586, 594], "realli": [41, 561, 564, 573], "reason": [52, 586], "rebuild": 586, "recalcul": 589, "receiv": [20, 194], "recent": [84, 585, 586, 587, 589, 592], "recommend": [23, 25, 26, 30, 36, 37, 41, 42, 43, 44, 92, 130, 131, 132, 137, 138, 170, 203, 248, 267, 272, 587, 589, 591, 592], "recompress": 592, "recon": 20, "reconstruct": [20, 36], "record": [10, 20, 168, 169, 170, 171, 561, 574, 580, 589], "record_gen": 589, "record_typ": [171, 589], "recordinuseflag": 168, "recordnod": [169, 170, 551], "recreat": [24, 26, 561, 569], "recurs": [0, 4, 46, 130, 131, 132, 561, 563, 565], "red": [36, 37, 38, 39, 211, 250, 561, 576, 585, 586], "reduc": [48, 49, 172, 218, 256, 561, 572, 577, 582, 589, 592], "ref": 20, "refactor": [561, 582], "refd_beam1": [24, 26], "refd_beam_sequ": [24, 26], "refer": [2, 8, 20, 26, 27, 39, 41, 49, 52, 92, 137, 139, 142, 143, 144, 145, 146, 147, 149, 150, 169, 204, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 248, 250, 251, 252, 253, 254, 255, 256, 257, 267, 270, 271, 513, 561, 564, 585, 589, 592, 594], "referenc": [24, 26, 27, 28, 41, 52, 163, 169, 170, 589], "referencedbeamsequ": [24, 26], "reflect": 235, "refus": 96, "reg": 20, "regard": 2, "regex": [438, 439], "regist": [16, 25, 26, 46, 127, 488, 514, 524, 561, 577, 582, 587], "register_error": [488, 524], "register_transfer_syntax": [434, 561, 582], "registr": 168, "regress": [561, 575, 576, 585], "regular": [26, 27, 41, 488, 524, 561, 581], "reinstal": [26, 27], "rel": [154, 156, 157, 173, 561, 582], "relat": [25, 26, 27, 37, 39, 42, 48, 50, 58, 130, 131, 132, 133, 181, 204, 207, 209, 210, 235, 548, 558, 561, 562, 585, 589, 594], "relationship": [36, 37, 38, 170, 586], "relative_to": 10, "releas": [23, 46, 551, 570, 574, 577], "relev": [43, 179, 180, 181, 585], "reli": [44, 79], "reload": 41, "remain": [39, 144, 170, 488, 524, 561, 567, 586], "remaind": 517, "remainder_near": 517, "rememb": [41, 46, 48], "remind": 52, "remot": [585, 586], "remov": [10, 12, 17, 41, 42, 45, 130, 131, 132, 135, 136, 144, 145, 147, 152, 169, 170, 171, 181, 203, 236, 244, 247, 249, 261, 266, 268, 272, 488, 524, 549, 550, 570, 571, 572, 573, 576, 577, 578, 579, 580, 581, 585, 587], "remove_plugin": [236, 244], "remove_private_tag": [17, 46, 130, 131, 132], "removeprefix": [488, 524], "removesuffix": [488, 524], "renam": [561, 562, 570, 576, 581, 582], "reopen": 12, "reorgan": [561, 562, 564], "rep": 20, "repeat": [26, 27, 48, 117, 120, 124, 125, 170, 561, 572, 581, 587], "repetit": [2, 8, 20, 51], "replac": [17, 75, 76, 78, 108, 488, 515, 519, 523, 524, 561, 573, 580], "replace_un_with_known_vr": [561, 576], "replic": [26, 27], "report": [561, 574, 584, 590], "repositori": [26, 27, 47, 105, 561, 582, 591], "repr": [8, 99, 488, 524, 561, 576], "repr_valu": 8, "repres": [10, 34, 41, 49, 100, 127, 130, 131, 132, 144, 160, 181, 273, 515, 519, 520, 521, 522, 525, 585, 594], "represent": [2, 8, 20, 26, 28, 29, 32, 36, 38, 39, 41, 60, 63, 74, 108, 110, 112, 122, 127, 130, 131, 132, 133, 139, 169, 170, 171, 212, 217, 235, 236, 243, 247, 249, 251, 252, 259, 266, 268, 273, 517, 518, 520, 521, 522, 524, 525, 542, 545, 551, 561, 577, 579, 582, 587, 588, 594], "reproduc": 585, "repval": [127, 130, 131, 132], "request": [25, 26, 28, 41, 273, 520, 561, 577, 579, 584], "requir": [2, 10, 12, 20, 26, 27, 29, 36, 37, 38, 39, 41, 42, 43, 44, 46, 48, 49, 50, 51, 127, 130, 131, 132, 137, 139, 140, 142, 143, 144, 145, 146, 160, 170, 179, 181, 194, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 217, 236, 237, 244, 247, 249, 250, 254, 255, 257, 259, 260, 262, 266, 268, 270, 271, 274, 514, 525, 561, 564, 568, 572, 576, 577, 582, 586, 587, 589, 591, 592, 594], "resampl": 207, "rescal": [20, 37, 45, 212, 214, 215, 251, 252, 254, 255], "reserv": [46, 488, 524], "reset": [76, 95, 97, 130, 131, 132, 146, 151], "reset_data_element_callback": 551, "reshap": [96, 130, 131, 132, 204, 209, 235, 236, 247, 249, 266, 268, 270], "reshape_overlay_arrai": 204, "reshape_pixel_arrai": [561, 582], "resiz": 48, "reslic": [4, 5, 583], "resolut": 36, "resolv": [0, 128, 179, 561, 567, 573], "resort": [561, 580], "resourc": 585, "respect": [75, 92, 561, 571], "respiratori": 594, "respons": [160, 522, 588], "responsible_party_nam": 522, "responsible_party_name_ideograph": 522, "responsible_party_name_phonet": 522, "rest": [488, 524, 561, 580, 586], "restor": [561, 576], "restrict": [37, 39], "restructuredtext": 586, "result": [10, 17, 24, 25, 26, 27, 36, 37, 38, 42, 43, 51, 76, 78, 130, 131, 132, 181, 217, 236, 237, 247, 249, 259, 260, 266, 268, 273, 488, 513, 517, 524, 561, 579, 582, 585, 586, 592], "result_load": 10, "ret": 127, "retain": [525, 561, 579], "retir": [39, 108, 115, 127, 130, 131, 132, 179, 180, 247, 249, 266, 268, 279, 488, 561, 577], "retriev": [41, 111, 112, 113, 116, 117, 118, 119, 121, 122, 123, 126, 127, 130, 131, 132, 561, 574, 582, 587, 588], "return": [10, 11, 14, 29, 30, 34, 39, 41, 46, 48, 49, 50, 52, 68, 75, 76, 78, 79, 89, 90, 96, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 193, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 235, 236, 237, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 488, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 561, 562, 563, 564, 565, 571, 572, 573, 574, 576, 577, 579, 580, 582, 587, 588, 589, 594], "rev": 522, "revers": [36, 44, 171, 203, 272, 561, 574], "revert": [130, 131, 132, 561, 568], "review": [24, 26, 584, 585, 586], "revis": [20, 561, 565, 567, 568], "rewind": [14, 165, 175, 176, 177, 561, 568], "rewrit": [520, 521], "rfind": [488, 524], "rg1_unci": [561, 577], "rgb": [29, 30, 33, 34, 36, 37, 38, 39, 49, 96, 130, 131, 132, 205, 206, 207, 208, 209, 210, 211, 218, 235, 236, 237, 247, 249, 250, 256, 260, 266, 268, 561, 571, 574, 579, 582, 592], "rgb_color": [36, 37, 38, 68], "rgba": [211, 250], "rhapsod": 20, "rhythm": 594, "rickard": [561, 569], "right": [20, 36, 130, 131, 132, 217, 259, 488, 517, 524], "rightmost": 517, "rindex": [488, 524], "risk": [26, 27], "rjust": [488, 524], "rle": [35, 39, 43, 44, 49, 130, 131, 132, 137, 138, 143, 209, 210, 217, 234, 242, 244, 245, 246, 259, 270, 441, 561, 572, 573, 579, 580, 582, 591, 592], "rle_encode_fram": [561, 579, 582], "rle_handl": [96, 561, 580, 582], "rle_segment_ord": [29, 210], "rlecompressedlosslesssyntax": [561, 577, 582], "rlelossless": [30, 34, 38, 43, 130, 131, 132, 217, 259, 585, 592], "rlelosslessdecod": 30, "rlelosslessencod": [33, 34, 38, 561, 579, 582], "rletransfersyntax": [561, 577, 582], "rn": 39, "robert": 522, "root": [0, 9, 10, 22, 26, 27, 96, 170, 171, 173, 427, 513, 517, 587, 589], "rotat": [20, 517], "round": [87, 248, 267, 517], "round_half_even": 517, "rout": 20, "routin": 177, "row": [0, 2, 8, 9, 20, 26, 28, 29, 30, 34, 37, 39, 48, 49, 130, 131, 132, 204, 207, 209, 210, 216, 217, 218, 235, 236, 243, 244, 247, 248, 249, 256, 258, 259, 262, 263, 266, 267, 268, 270, 592], "rowconfigur": 0, "rpartit": [488, 524], "rpcl": [44, 224, 245], "rsplit": [488, 524], "rst": [585, 586], "rstrip": [488, 524], "rt": [26, 27, 28, 41, 68, 168, 170, 589], "rt_dose": [68, 589], "rt_plan": 68, "rt_ss": 68, "rtdose": 68, "rtplan": [6, 7, 13, 24, 26, 27, 28, 41, 68, 160, 583], "rtstruct": 68, "ruff": [561, 582], "rule": 192, "run": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 41, 42, 51, 108, 130, 131, 132, 522, 561, 564, 567, 577, 582, 586, 587, 590, 591], "runner": [30, 34, 235, 243, 592], "runtimeerror": [130, 131, 132, 209], "safe": [236, 244, 275], "sag_aspect": 4, "sagitt": [1, 5, 6, 561, 573, 583], "sai": [51, 585, 587], "sake": [248, 267], "same": [4, 30, 34, 41, 42, 48, 108, 130, 131, 132, 156, 157, 170, 203, 236, 488, 515, 517, 518, 519, 524, 561, 565, 567, 586, 587, 589], "same_quantum": 517, "sampl": [2, 8, 20, 29, 30, 34, 36, 37, 38, 39, 49, 50, 130, 131, 132, 217, 235, 236, 243, 244, 247, 249, 259, 264, 266, 268, 270, 548, 561, 582, 592, 594], "samples_per_pixel": [29, 30, 34, 216, 235, 243, 244, 258], "samplesperpixel": [36, 37, 38, 207, 209, 210, 262, 263, 270, 561, 567, 572, 592], "sampling_fq": 3, "samplingfrequ": [3, 50, 594], "satisfi": [517, 518, 525], "save": [14, 16, 24, 26, 43, 48, 49, 561, 564, 567, 582, 586, 587, 588, 592, 594], "save_a": [12, 16, 17, 24, 26, 43, 48, 49, 130, 131, 132, 181, 217, 259, 561, 563, 576, 582, 587, 592, 594], "save_filenam": [24, 26], "savea": [561, 563], "savenam": [24, 26], "saw": 587, "sb": 548, "scale": 20, "scaleb": 517, "scan": [2, 8, 20, 26, 28, 168, 592], "schaefer": [561, 568], "scheme": [36, 37, 38, 158, 488, 524, 535, 536, 542, 545, 546, 593, 594], "scheme_design": [561, 582, 593], "scheme_vers": 593, "scientif": 525, "scout": [4, 20], "scratch": [12, 18, 45, 130, 131, 132, 181, 561, 565, 566, 579, 585, 592], "screen": [20, 24, 26], "script": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 51, 561, 571, 582, 584], "scroll": 585, "sct": [561, 582, 593], "se": [2, 8, 20], "se000000": [10, 589], "se000001": [10, 589], "se000002": [10, 589], "search": [10, 105, 143, 170, 175, 176, 177, 488, 524, 561, 579, 582, 587, 589], "sec": 20, "second": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 36, 37, 39, 42, 517, 519, 522, 523, 594], "secondari": [2, 8, 20], "secret": 513, "sect": 522, "sect_6": 52, "section": [2, 24, 25, 26, 27, 36, 37, 38, 39, 41, 43, 46, 49, 51, 52, 55, 99, 127, 130, 131, 132, 133, 137, 139, 149, 194, 198, 204, 218, 236, 247, 248, 249, 256, 257, 266, 267, 268, 270, 271, 522, 585, 586], "secur": [561, 582], "see": [23, 24, 26, 27, 28, 34, 36, 37, 38, 41, 42, 43, 49, 51, 55, 127, 130, 131, 132, 133, 158, 161, 164, 168, 176, 177, 178, 181, 194, 198, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 247, 249, 259, 260, 266, 268, 517, 521, 522, 561, 564, 574, 575, 576, 579, 582, 585, 586, 587, 589, 591, 592, 593], "seek": [14, 130, 131, 132, 140, 141, 142, 146, 150, 151, 154, 156, 157, 160, 181, 561, 563, 573, 582], "seem": 585, "seen": [10, 25, 26, 88, 586, 594], "segment": [20, 29, 210, 211, 250, 561, 572, 579], "select": [41, 130, 131, 132, 143, 233], "self": [14, 153, 273, 488, 515, 517, 518, 519, 520, 521, 523, 587, 592], "semant": [10, 52, 170, 522, 589], "send": [194, 585, 586], "sens": [561, 564], "sensit": [24, 26, 50, 51, 130, 131, 132, 548, 594], "sent": [561, 582], "sep": [488, 519, 524], "separ": [37, 43, 99, 127, 130, 131, 132, 137, 138, 488, 519, 522, 524, 561, 564, 565, 592], "septemb": 23, "seq": [52, 587], "seq_idx": 0, "seq_item": 0, "sequenc": [0, 2, 3, 6, 8, 15, 19, 20, 24, 26, 27, 28, 32, 45, 50, 51, 52, 59, 76, 78, 88, 130, 131, 132, 139, 143, 144, 145, 161, 166, 167, 171, 174, 175, 197, 198, 212, 213, 214, 251, 252, 253, 254, 522, 536, 548, 551, 561, 562, 563, 567, 568, 571, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 589, 594], "sequence_element_format": [130, 131, 132], "sequence_item": 8, "seri": [2, 8, 10, 20, 52, 163, 168, 170, 561, 565, 586, 589, 592], "serial": [2, 8, 20, 127, 130, 131, 132, 588], "series_uid": 10, "seriesinstanceuid": 10, "seriesnumb": [10, 41, 589], "server": 586, "servic": [20, 589], "session": [41, 42, 46, 130, 131, 132, 586], "set": [2, 6, 7, 12, 13, 18, 20, 25, 26, 27, 28, 32, 36, 39, 41, 42, 43, 45, 48, 49, 51, 53, 55, 68, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 90, 91, 92, 94, 95, 100, 101, 102, 108, 127, 128, 130, 131, 132, 144, 147, 153, 154, 156, 157, 160, 161, 162, 168, 169, 170, 172, 173, 178, 181, 193, 217, 235, 237, 243, 259, 260, 488, 514, 517, 521, 522, 524, 525, 526, 551, 561, 562, 567, 570, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 587, 588, 590, 591, 592, 594], "set_aspect": 4, "set_decod": 235, "set_default": [25, 26], "set_encod": 243, "set_opt": [30, 34, 235, 243], "set_original_encod": [130, 131, 132], "set_private_encod": [488, 514, 561, 582], "set_sourc": [235, 243], "set_titl": 3, "set_xlabel": 3, "set_ylabel": [3, 594], "setdefault": [130, 131, 132, 561, 573, 577], "setup": [25, 26, 27, 28, 561, 568, 569, 581], "setuptool": [25, 26, 561, 562, 569, 579], "sever": [47, 55, 561, 568, 570], "sex": [2, 8, 20], "sexxxxxx": 170, "sfov": 20, "sh": [2, 12, 16, 20, 26, 28, 32, 41, 46, 194, 545, 587], "sha512": 513, "shall": [96, 139, 143, 144, 147, 148, 149, 158, 181, 194], "shallow": [130, 131, 132], "shape": [2, 4, 37, 48, 49, 50, 130, 131, 132, 204, 205, 206, 209, 217, 218, 236, 244, 247, 248, 249, 256, 259, 266, 267, 268, 270, 548, 592, 594], "share": 589, "shift": 517, "short": [32, 544, 585, 587], "should": [18, 25, 26, 27, 30, 32, 34, 36, 37, 38, 39, 41, 42, 46, 48, 49, 51, 52, 127, 130, 131, 132, 140, 142, 143, 144, 145, 146, 147, 160, 165, 168, 170, 172, 179, 180, 194, 203, 205, 206, 207, 208, 209, 210, 217, 218, 236, 244, 247, 248, 249, 256, 259, 266, 267, 268, 513, 541, 561, 563, 564, 571, 572, 577, 585, 586, 587, 589, 590, 592, 594], "should_change_photometricinterpretation_to_rgb": [205, 206, 207, 208, 209, 210], "show": [2, 3, 4, 6, 9, 10, 12, 17, 21, 24, 25, 27, 46, 47, 51, 52, 108, 127, 561, 562, 566, 568, 579, 581, 583, 586, 587, 594], "show_charset_nam": [21, 22, 583], "show_dicomdir": [561, 569, 570], "show_file_meta": [551, 561, 576], "shown": [25, 26, 28, 41, 46, 51, 55, 270, 561, 562, 563, 576, 587, 589], "showvr": 127, "shrunk": 49, "shutil": 589, "sibl": 171, "side": 20, "siemen": 68, "sigma": 593, "sign": [29, 30, 32, 34, 36, 37, 39, 49, 79, 244, 273, 517, 520, 561, 577, 585, 586, 594], "signal": [30, 33, 34, 36, 130, 131, 132, 217, 259, 517], "signal_to_noise_ratio": 33, "signatur": [30, 34, 156, 157, 561, 577], "signed": [29, 37, 130, 131, 132, 236, 247, 249, 266, 268], "signific": [39, 42, 273, 520, 527, 538, 540, 561, 564], "significantli": 592, "silent": [561, 579], "similar": [26, 27, 52, 130, 131, 132, 198, 517, 561, 563, 567, 588, 593], "similarli": [41, 516, 587, 592], "simpl": [22, 41, 47, 561, 562], "simpler": 587, "simplest": [42, 589, 591], "simpli": [26, 27], "simplifi": [154, 156, 561, 563, 567], "simul": [16, 130, 131, 132], "sin": 594, "sinc": [18, 39, 46, 130, 131, 132, 135, 136, 143, 144, 145, 147, 152, 181, 517, 549, 550, 561, 581, 585, 589, 594], "sine": 594, "singl": [25, 26, 30, 32, 34, 36, 37, 38, 39, 52, 77, 107, 109, 127, 130, 131, 132, 137, 139, 144, 146, 147, 152, 167, 168, 170, 199, 200, 203, 204, 209, 235, 236, 243, 244, 247, 249, 266, 268, 270, 532, 541, 561, 562, 572, 580, 585, 588, 589], "singleton": 55, "site": 589, "size": [2, 8, 9, 20, 24, 26, 34, 36, 49, 51, 96, 127, 154, 156, 157, 161, 178, 205, 206, 488, 524, 561, 571, 577, 581, 591, 592], "size_in_byt": 551, "skip": [4, 18, 561, 580, 585], "skipcount": 4, "sl": [20, 26, 28, 32, 548], "slice": [1, 2, 5, 6, 8, 9, 20, 26, 28, 130, 131, 132, 488, 524, 561, 570, 571, 573, 583], "sliceloc": [4, 9, 26, 28], "slicethick": 4, "slide": 592, "slope": [20, 212, 251, 252], "slow": [561, 568], "slower": [38, 43, 257, 271], "slowest": [561, 580], "small": [561, 564, 570, 572, 584, 591], "smaller": [517, 588], "smallest": [2, 8, 20, 517], "smart": 20, "smptest211020uncompressedinterlacedactivevideo": [561, 582], "smptest211020uncompressedprogressiveactivevideo": [561, 582], "smptest211030pcmdigitalaudio": [561, 582], "sn": 20, "snan": 517, "snapshot": 591, "snip": 587, "snippet": [25, 26, 46], "so": [3, 16, 26, 27, 30, 32, 34, 37, 39, 41, 42, 43, 48, 49, 51, 52, 92, 130, 131, 132, 170, 172, 181, 201, 514, 516, 517, 561, 562, 565, 582, 585, 587, 588, 589, 592, 594], "softwar": [2, 8, 20, 42, 591], "softwarevers": 41, "some": [9, 14, 16, 17, 26, 28, 41, 42, 46, 47, 48, 49, 50, 51, 52, 55, 75, 88, 98, 130, 131, 164, 181, 517, 518, 525, 561, 562, 563, 565, 567, 570, 571, 581, 586, 587, 588, 589, 591, 593], "somenewtag": 46, "someth": [10, 14, 23, 25, 26, 30, 34, 48, 52, 130, 561, 582, 585], "sometim": [42, 46, 561, 572, 582], "somewher": 6, "son": 130, "sop": [2, 8, 9, 10, 12, 20, 26, 27, 28, 38, 41, 46, 49, 50, 68, 130, 131, 132, 134, 163, 168, 169, 170, 171, 181, 194, 211, 217, 237, 250, 259, 260, 551, 561, 570, 571, 577, 580, 581, 587, 592], "sopclassuid": [9, 24, 26, 28, 169, 587, 594], "sopinstanceuid": [24, 26, 38, 169], "sorri": [561, 569], "sort": [4, 10, 130, 131, 132, 589], "sort_kei": [130, 131, 132], "sourc": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 23, 26, 28, 29, 30, 34, 46, 51, 55, 75, 76, 77, 78, 80, 81, 93, 95, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 561, 569, 577, 579, 582, 584, 587, 590, 591, 594], "sourcetosurfacedist": 11, "space": [2, 8, 9, 20, 29, 30, 34, 36, 37, 38, 39, 45, 52, 108, 130, 131, 132, 218, 235, 244, 256, 488, 522, 524, 527, 538, 540, 542, 561, 570, 582, 587, 589], "span": 143, "sparingli": 52, "special": [42, 59, 551, 561, 568], "specif": [10, 20, 24, 26, 27, 28, 29, 34, 35, 41, 43, 46, 48, 49, 51, 52, 75, 76, 77, 78, 130, 131, 132, 160, 161, 170, 175, 198, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 488, 517, 524, 547, 561, 562, 564, 570, 572, 573, 576, 577, 582, 585, 586, 587, 588, 589, 592], "specifi": [24, 25, 26, 27, 28, 36, 37, 39, 41, 108, 110, 127, 130, 131, 132, 146, 160, 161, 181, 193, 217, 236, 237, 244, 247, 249, 259, 260, 266, 268, 488, 515, 517, 519, 522, 523, 524, 548, 561, 574, 579, 587, 589, 591, 592], "specific_tag": [158, 160, 161, 164, 247, 249, 266, 268, 587], "specificcharacterset": 168, "spectroscopi": 168, "speed": [20, 561, 564, 568, 572, 579, 581], "spell": [52, 75, 561, 572], "sphinx": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 52, 561, 565, 586], "spine": [10, 589], "split": [20, 488, 524, 547, 561, 562, 563], "splitlin": [488, 524], "spot": 20, "spread": [561, 582], "spring": [211, 250], "sq": [0, 8, 32, 55, 127, 130, 131, 132, 158, 536, 561, 567, 577, 580, 582, 587], "sqrt": 517, "squar": [41, 46, 517, 587], "sr": [168, 522, 561, 579, 593], "src": [9, 10, 29, 30, 33, 34, 37, 96, 235, 236, 243, 244, 247, 249, 257, 261, 266, 268, 271, 589, 592], "srt": [561, 582], "ss": [2, 4, 20, 26, 28, 32, 179, 180, 519, 523, 548, 561, 563, 594], "ssd": 11, "st": 32, "st000000": [10, 589], "st000001": [10, 589], "st000002": 10, "st000003": 10, "st_mtime": 162, "stabl": 591, "stack": 594, "stackoverflow": 584, "stage": [10, 169, 170, 585, 586], "stamp": 20, "stand": 75, "standard": [12, 20, 22, 32, 36, 37, 38, 39, 42, 43, 46, 49, 50, 52, 55, 127, 130, 131, 132, 133, 137, 139, 142, 143, 144, 145, 146, 147, 149, 150, 170, 181, 194, 198, 204, 207, 211, 212, 213, 214, 215, 218, 248, 250, 251, 252, 253, 254, 255, 256, 257, 267, 270, 271, 274, 513, 517, 518, 521, 522, 561, 563, 566, 567, 569, 570, 577, 579, 588, 589, 592, 594], "start": [0, 6, 17, 18, 20, 24, 26, 27, 28, 37, 48, 51, 127, 129, 130, 131, 132, 133, 141, 142, 144, 146, 147, 150, 151, 159, 165, 171, 172, 177, 179, 180, 203, 235, 236, 249, 268, 272, 488, 513, 524, 536, 544, 561, 571, 581, 582, 585, 586, 587, 588, 593], "startswith": [488, 524], "stat": [20, 162], "state": [187, 561, 582, 588], "statement": [561, 565], "static": [26, 28, 132, 488, 524], "station": [2, 8, 20], "statu": [20, 115, 127], "stdin": [84, 587, 589, 592], "stdlib": 47, "stdout": [24, 26], "step": [52, 561, 568, 579, 589, 593, 594], "stereometr": 168, "stick": 587, "sticki": 0, "still": [10, 43, 46, 561, 567, 568, 570, 571, 572, 574, 585, 587, 588, 589, 592], "stop": [129, 160, 164, 203, 272, 488, 524, 561, 564], "stop_before_pixel": [160, 561, 564], "stop_when": [158, 161, 164], "storag": [2, 9, 12, 14, 20, 26, 27, 28, 41, 46, 49, 68, 134, 192, 194, 551, 561, 564, 565, 570, 580, 587, 589, 594], "store": [2, 8, 10, 17, 20, 29, 32, 34, 37, 38, 39, 41, 46, 49, 105, 127, 130, 131, 132, 160, 195, 212, 217, 235, 243, 244, 251, 252, 259, 261, 515, 517, 518, 519, 520, 521, 523, 561, 564, 579, 582, 587, 588, 589, 594], "store_data_and_return_uri": 588, "str": [0, 11, 14, 20, 29, 30, 32, 34, 41, 75, 76, 77, 78, 87, 91, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 140, 141, 142, 146, 150, 151, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 181, 182, 188, 192, 193, 196, 197, 198, 199, 200, 201, 202, 204, 210, 211, 216, 217, 218, 235, 236, 237, 243, 244, 245, 246, 247, 249, 250, 256, 258, 259, 260, 262, 263, 264, 266, 268, 273, 274, 488, 513, 514, 515, 516, 517, 518, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 561, 571, 576, 579, 587], "straightforward": 49, "stream": [144, 152, 154, 156, 157, 561, 582, 585], "streamhandl": 93, "streamlin": [561, 568], "strftime": [12, 515, 519, 523], "strict": [0, 42, 488, 521, 524, 561, 574, 581], "strictli": [42, 47], "string": [16, 17, 20, 25, 26, 32, 41, 55, 76, 77, 78, 108, 127, 130, 131, 132, 133, 160, 171, 182, 191, 193, 195, 199, 200, 203, 236, 244, 273, 488, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 530, 532, 541, 542, 543, 547, 561, 564, 566, 567, 571, 572, 577, 579, 588], "strip": [488, 517, 524], "strongli": [137, 170, 589], "strptime": 519, "struct": [20, 196, 541], "struct_format": [196, 527, 528, 529, 530, 531, 532, 533, 534, 537, 538, 539, 540, 541, 543], "structur": [10, 26, 27, 41, 68, 168, 170, 171, 561, 574, 581, 582, 587, 589, 590], "studi": [2, 8, 9, 10, 20, 26, 27, 28, 41, 168, 170, 589], "study1": [26, 28], "study_uid": 10, "studyd": [9, 10, 24, 26, 27, 28, 589], "studydescript": [10, 26, 28, 170, 589], "studyid": [26, 28], "studyinstanceuid": 10, "studytim": [10, 24, 26, 28, 589], "stuff": 14, "stxxxxxx": 170, "style": [0, 23, 515, 519, 523, 561, 563, 566], "sub": [25, 26, 36, 130, 131, 132, 236, 247, 249, 266, 268, 488, 524, 551], "subclass": [488, 561, 571], "subcommand": [25, 26, 27, 561, 579], "subcommandnam": [25, 26], "subdirectori": [561, 569], "subject": [52, 588, 593], "submit": [26, 28, 561, 567, 584, 585, 586], "subnorm": 517, "subpars": [25, 26], "subplot": [3, 4, 594], "subsampl": 261, "subsequ": 160, "subset": [10, 24, 26], "substanti": [561, 564], "substitut": [488, 524], "substr": [488, 524], "success": [130, 131, 132, 236, 237, 247, 249, 260, 266, 268, 586], "successfulli": [30, 34, 146], "suever": [561, 568], "suffici": [140, 142, 146, 236, 244], "suffix": [12, 172, 488, 513, 522, 524, 561, 582], "suggest": [42, 584, 585, 586], "suit": [20, 46, 561, 581], "suitabl": [170, 211, 235, 237, 250, 257, 260, 269, 271, 488, 524, 591], "summar": [11, 589], "summari": [10, 25, 26, 585], "summer": [211, 250], "sundai": [515, 519], "super": 132, "supp": [561, 564], "supplement": [211, 250], "suppli": [0, 14, 47, 51, 78, 140, 142, 146, 160, 170, 211, 236, 244, 250, 513, 522, 587, 589], "support": [30, 34, 36, 42, 45, 69, 70, 79, 96, 130, 131, 132, 156, 157, 170, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 236, 244, 245, 250, 257, 259, 269, 270, 271, 272, 273, 520, 548, 561, 562, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582, 589, 590, 591, 592, 593], "supports_transfer_syntax": [96, 205, 206, 207, 208, 209, 210], "suppos": 210, "suppress": [561, 579], "suppress_invalid_tag": [130, 131, 132, 561, 581], "sure": [9, 37, 44, 51, 585, 587, 591], "surfac": 168, "surround": 587, "sv": [32, 548, 561, 574], "sv1": [44, 245, 270, 561, 576], "swap": [187, 236, 534], "swapcas": [488, 524], "switch": [51, 88, 561, 565, 567, 569, 574, 576, 579, 581, 585, 586], "sy": [0, 4, 14, 273, 520, 594], "symmetr": 588, "synchronis": [50, 594], "synonym": [561, 562], "syntax": [2, 12, 16, 20, 24, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 41, 45, 46, 51, 96, 130, 131, 132, 134, 137, 138, 143, 144, 161, 169, 170, 178, 181, 194, 205, 206, 207, 208, 209, 210, 217, 235, 236, 237, 243, 244, 245, 246, 247, 249, 259, 260, 266, 268, 270, 279, 373, 378, 381, 404, 434, 441, 488, 491, 514, 551, 561, 564, 565, 570, 572, 573, 574, 576, 577, 581, 582, 587, 591, 592, 594], "system": [20, 24, 26, 27, 28, 42, 47, 154, 156, 157, 170, 273, 520, 561, 582, 587, 589, 591, 594], "t": [4, 8, 10, 18, 20, 26, 27, 28, 29, 32, 36, 37, 39, 41, 44, 46, 48, 51, 52, 83, 130, 131, 132, 140, 142, 143, 146, 161, 170, 181, 203, 204, 207, 210, 218, 235, 236, 244, 247, 249, 256, 266, 268, 269, 272, 488, 513, 519, 524, 561, 573, 576, 577, 582, 585, 586, 587, 588, 589, 592], "t1": 41, "t2": 41, "t3": 41, "t4": 41, "tab": [488, 524, 586], "tabl": [20, 23, 32, 36, 37, 38, 43, 49, 127, 130, 131, 132, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 181, 194, 204, 207, 209, 210, 211, 212, 213, 214, 217, 235, 243, 250, 251, 252, 253, 254, 259, 270, 488, 524, 548, 561, 574, 577, 582, 586, 587, 589, 591, 592], "tabsiz": [488, 524], "tag": [16, 17, 26, 28, 29, 32, 45, 46, 48, 49, 55, 59, 84, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 141, 144, 147, 148, 149, 150, 151, 154, 156, 157, 158, 160, 162, 170, 178, 179, 183, 198, 204, 207, 209, 210, 247, 249, 262, 263, 266, 268, 269, 270, 544, 548, 551, 561, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 576, 577, 579, 580, 582, 587, 588], "tag_in_except": 59, "tagtyp": [130, 131, 132], "take": [2, 24, 25, 26, 30, 34, 39, 51, 52, 130, 131, 132, 158, 168, 203, 561, 568, 585, 586, 587, 589], "taken": [39, 130, 131, 132, 140, 142, 146, 216, 258, 270], "target": [26, 27, 52], "tarou": 22, "task": 586, "tb": 153, "tdir": 10, "teardown": [561, 581], "technic": [52, 53], "techniqu": 39, "tell": [130, 131, 132, 140, 141, 142, 146, 150, 151, 154, 156, 157, 160, 181, 561, 563, 582, 586, 589], "temp": [48, 49], "tempfil": [10, 12, 17, 589], "temporari": [169, 561, 582, 589], "temporarili": 42, "temporarydirectori": [10, 589], "ten": 517, "tend": [48, 591], "term": [20, 49, 204, 235, 243, 262, 273, 517, 519, 520, 523], "termin": [20, 26, 27, 28, 42, 144, 161, 174], "territori": 592, "test": [2, 12, 16, 24, 26, 27, 28, 41, 88, 107, 108, 109, 130, 131, 132, 488, 517, 524, 526, 561, 562, 568, 570, 574, 577, 579, 581], "test_fil": [9, 10, 24, 26, 41, 586, 587, 589], "test_new_uid": 585, "test_uid": 585, "teston": [107, 108], "testtwo": [107, 108], "text": [0, 20, 22, 32, 41, 46, 127, 160, 197, 198, 200, 488, 524, 536, 542, 543, 545, 546, 561, 563, 572, 585, 586, 587], "tggc": [20, 26, 28], "thai": [561, 570], "than": [24, 25, 26, 27, 28, 29, 32, 37, 38, 39, 43, 44, 48, 51, 52, 55, 127, 130, 131, 132, 139, 140, 141, 142, 143, 144, 146, 147, 154, 156, 157, 160, 164, 170, 173, 182, 196, 203, 216, 217, 248, 258, 259, 267, 270, 513, 517, 561, 562, 563, 564, 569, 570, 571, 574, 576, 579, 582, 587, 588, 592], "thank": [561, 564, 567], "thei": [4, 29, 36, 41, 46, 48, 49, 52, 75, 87, 96, 130, 131, 132, 134, 181, 194, 217, 259, 488, 524, 561, 579, 582, 585, 586, 587, 589, 591, 592], "them": [4, 8, 24, 26, 27, 28, 30, 34, 41, 44, 46, 48, 51, 52, 53, 130, 131, 132, 154, 156, 157, 530, 532, 561, 569, 573, 577, 586, 587, 589], "theme_us": 0, "theoret": [561, 582], "therefor": [37, 203, 261], "theta": 20, "thi": [2, 3, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 30, 34, 37, 39, 41, 42, 46, 48, 49, 51, 52, 53, 55, 68, 75, 80, 81, 82, 85, 86, 88, 95, 96, 108, 127, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 152, 158, 160, 163, 169, 170, 181, 187, 198, 201, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 235, 236, 237, 243, 244, 247, 249, 250, 253, 254, 255, 259, 260, 261, 266, 268, 273, 488, 515, 516, 517, 518, 519, 521, 522, 524, 525, 526, 551, 568, 570, 573, 574, 579, 582, 585, 586, 587, 588, 589, 591, 592, 593, 594], "thick": [2, 8, 20], "thing": [41, 48, 586, 587], "think": [25, 26], "third": [37, 45, 488, 517, 522, 524, 591], "third_party_compression_func": [43, 592], "those": [26, 28, 29, 30, 34, 40, 42, 46, 561, 564, 567, 577, 587, 589, 592], "though": [37, 589], "thread": [236, 244, 517], "three": [16, 30, 34, 37, 52, 109, 488, 522, 524, 587, 589], "threshold": [130, 131, 132], "through": [8, 17, 30, 34, 41, 46, 49, 52, 130, 131, 132, 163, 177, 179, 180, 236, 247, 266, 517, 561, 562, 563, 582, 585, 586, 587, 591, 593], "throughput": [44, 222, 223, 224], "thrown": [561, 570], "thu": [46, 561, 562], "tick": 52, "tight_layout": 3, "tile": 36, "tilt": 20, "time": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 26, 27, 28, 32, 41, 42, 46, 51, 68, 90, 92, 108, 131, 142, 162, 175, 178, 257, 271, 515, 516, 519, 523, 561, 564, 570, 579, 584, 585, 586, 587, 589, 594], "timelin": [561, 573], "timespec": [519, 523], "timestamp": [131, 162, 515, 519], "timetupl": [515, 519], "timetz": 519, "timezon": [2, 8, 20, 519], "titl": [0, 2, 20, 26, 28, 46, 52, 194, 488, 522, 524, 585, 586, 587], "titlecas": [488, 524], "tix": [561, 562], "tk": [0, 22], "tkinter": [0, 22, 45, 561, 562, 564], "tm": [2, 12, 20, 26, 27, 28, 32, 41, 59, 64, 92, 537, 543, 561, 570, 579, 587], "tmp": [10, 12, 589], "tmp0aalrzir": 589, "tmp6lxy0v72": 10, "tmpsqz8rhgb": 589, "tmpu068kdwp": 589, "tmpxx7m9p8q": 12, "to_byt": [273, 520], "to_eng_str": 517, "to_integr": 517, "to_integral_exact": 517, "to_integral_valu": 517, "to_json": [127, 130, 131, 132, 561, 575, 588], "to_json_dict": [127, 130, 131, 132, 561, 575, 581, 588], "tobyt": [2, 49, 594], "toctre": 586, "todai": [515, 519], "togeth": [136, 137, 182], "toi": 18, "toler": [561, 563, 574], "toml": [42, 561, 581], "too": [43, 130, 131, 132, 133, 217, 259, 488, 524, 544, 561, 571, 573, 574, 584], "tool": [51, 561, 582], "toordin": [515, 519], "top": [20, 26, 27, 28, 48, 52, 130, 131, 132, 161, 170, 561, 582, 586, 587], "top_nod": 170, "toshiba": [2, 8, 20], "toshiba_mec": [2, 8, 20], "total": [2, 3, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 37, 137, 138, 204, 235, 243, 262, 517, 583, 592], "toward": [24, 26], "traceback": [84, 276, 587, 589, 592], "track": 37, "tracker": [584, 585], "tract": 168, "trail": [2, 8, 20, 26, 28, 139, 204, 235, 243, 262, 488, 517, 524, 527, 538, 540, 542, 561, 570, 587], "train": [2, 8, 20], "trait_nam": [130, 131, 132], "transfer": [2, 12, 16, 20, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 41, 45, 46, 96, 130, 131, 132, 134, 137, 138, 143, 144, 161, 169, 170, 178, 181, 194, 205, 206, 207, 208, 209, 210, 217, 235, 236, 237, 243, 244, 245, 246, 247, 249, 259, 260, 266, 268, 270, 279, 373, 378, 381, 404, 434, 441, 488, 491, 514, 551, 561, 565, 570, 572, 573, 574, 576, 577, 581, 582, 587, 591, 592, 594], "transfer_syntax": [96, 205, 206, 207, 208, 210, 235, 243], "transfer_syntax_uid": [30, 34, 130, 131, 132, 217, 259], "transfersyntaxuid": [12, 43, 44, 169, 561, 563, 570, 587, 592], "transform": [36, 39, 49], "translat": [24, 26, 41, 488, 524, 561, 570], "travisci": [561, 570], "treat": [168, 235, 589], "treatment": [26, 28], "tree": [6, 21, 41, 171, 561, 568, 583, 587], "tree_item": 0, "tree_seq_item": 0, "treeview": 0, "tri": [130, 131, 132, 154, 156, 157, 217, 236, 237, 244, 247, 249, 259, 260, 266, 268, 561, 582], "tricki": 51, "trigger": [20, 26, 28], "troubl": 585, "true": [0, 10, 12, 16, 29, 30, 32, 33, 34, 41, 42, 43, 46, 50, 52, 55, 68, 79, 80, 81, 87, 88, 92, 93, 95, 96, 99, 105, 114, 115, 124, 125, 127, 129, 130, 131, 132, 134, 137, 144, 147, 153, 154, 156, 157, 158, 160, 161, 165, 169, 170, 171, 172, 173, 175, 176, 177, 178, 181, 194, 201, 204, 205, 206, 207, 208, 209, 210, 214, 217, 218, 235, 236, 237, 243, 244, 247, 248, 249, 254, 256, 257, 259, 260, 265, 266, 267, 268, 269, 271, 273, 488, 514, 517, 518, 521, 524, 526, 527, 528, 529, 530, 531, 532, 536, 537, 538, 540, 541, 543, 544, 548, 561, 565, 567, 577, 579, 581, 582, 587, 589, 594], "truli": 51, "truncat": [488, 524, 525, 561, 563], "truthi": [561, 574], "try": [52, 96, 179, 180, 235, 488, 524, 561, 565, 573, 587, 589], "tsyntax": [209, 235, 243], "ttk": 0, "tube": 20, "tupl": [30, 34, 41, 43, 46, 84, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 130, 131, 132, 133, 138, 140, 142, 143, 146, 147, 151, 154, 156, 157, 160, 203, 235, 236, 243, 244, 272, 274, 275, 488, 515, 517, 519, 522, 524, 561, 564, 573, 592], "tupletag": [59, 561, 564], "turkish": [561, 570], "turn": [42, 93, 161, 561, 577], "tut": 586, "tutori": [34, 51, 52, 561, 574, 584, 585, 586, 587, 589, 592, 594], "two": [16, 20, 25, 26, 28, 39, 41, 42, 46, 52, 88, 107, 108, 109, 130, 131, 132, 139, 170, 261, 273, 488, 517, 520, 522, 524, 561, 568, 582, 587, 588, 594], "txt": [42, 587], "type": [2, 3, 8, 17, 18, 20, 25, 26, 27, 28, 29, 30, 34, 39, 40, 41, 43, 46, 49, 53, 68, 75, 76, 78, 81, 98, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 150, 151, 152, 154, 156, 157, 160, 161, 162, 164, 165, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 193, 194, 196, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 235, 236, 237, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 274, 488, 513, 514, 517, 522, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 537, 538, 540, 542, 543, 544, 545, 546, 547, 548, 561, 564, 565, 567, 578, 579, 581, 582, 586, 587, 589, 592, 594], "type_constructor": [203, 587], "typeerror": [132, 160, 203, 205, 206, 561, 571, 577, 587], "typeofpatientid": 587, "typic": [39, 95, 135, 592], "typo": 584, "tz": 519, "tzinfo": [519, 523], "tzname": [519, 523], "u": [2, 20, 26, 28, 32, 68, 109, 154, 156, 157, 179, 180, 488, 524, 548, 561, 563, 588, 589, 591, 592, 594], "ub": 548, "uc": [32, 545, 561, 570], "ucum": 593, "ui": [2, 12, 16, 20, 26, 27, 28, 32, 41, 46, 190, 194, 538, 561, 564, 574, 587], "uid": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 35, 36, 37, 38, 39, 41, 43, 44, 46, 49, 51, 96, 130, 131, 132, 134, 137, 138, 169, 170, 181, 194, 205, 206, 207, 208, 209, 210, 211, 217, 235, 236, 237, 243, 244, 245, 246, 250, 259, 260, 270, 538, 547, 551, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582, 585, 587, 589, 591, 592], "uid_dictionari": [561, 562], "uint": [248, 267], "uint16": [211, 212, 213, 214, 244, 250, 251, 252, 253, 254], "uint8": [48, 211, 212, 213, 214, 250, 251, 252, 253, 254], "ul": [2, 12, 16, 20, 26, 27, 28, 32, 41, 46, 107, 108, 109, 154, 156, 157, 194, 548, 587, 589], "ultrasound": 589, "uml": 593, "un": [16, 32, 55, 89, 158, 181, 191, 539, 561, 562, 574, 576, 579, 580, 587], "unabl": [130, 131, 132, 154, 156, 157, 181, 264, 587, 589], "unaffect": 517, "unavail": [236, 244], "uncas": [488, 524], "unchang": [10, 75, 179, 180, 212, 213, 214, 215, 251, 252, 253, 254, 255, 517, 592], "uncom": [561, 568], "uncommon": 521, "uncompress": [2, 8, 20, 29, 34, 36, 37, 38, 43, 44, 49, 130, 131, 132, 217, 237, 243, 244, 259, 260, 261, 491, 561, 572, 574, 579, 580, 592], "uncompressedpixeltransfersyntax": [561, 577, 582], "uncompressedtransfersyntax": [561, 577, 582], "unconvert": [130, 131, 132], "undecod": 129, "undefin": [43, 55, 127, 144, 158, 174, 561, 566, 577, 580], "undefinedlength": [561, 562], "under": [25, 26, 41, 137, 138, 561, 562, 564, 570, 585, 586, 591], "underflow": [20, 517], "underli": 38, "underscor": 593, "understand": [41, 52, 236, 585, 592, 594], "undesir": 44, "undocu": 591, "unencapsul": 39, "unencod": [30, 34, 244], "unequ": 517, "unexpect": [561, 574], "unfamiliar": 52, "unicod": [6, 21, 32, 76, 78, 488, 522, 524, 561, 562, 564, 565, 581, 583], "unicodedecodeerror": 76, "unicodeencodeerror": [78, 488, 524], "union": 32, "uniqu": [20, 30, 32, 34, 39, 46, 170, 171, 172, 190, 236, 244, 561, 570, 581, 587, 589], "unit": [33, 37, 49, 130, 131, 132, 160, 204, 235, 243, 262, 548, 585, 592, 594], "unitless": [3, 49, 548, 594], "unittest": 585, "unknown": [16, 20, 32, 46, 84, 127, 128, 130, 131, 132, 144, 191, 561, 566, 571, 573, 577, 579, 587, 593], "unless": [52, 164, 171, 488, 517, 524, 561, 565, 576, 589], "unlik": [130, 131, 132, 517], "unlimit": 32, "unlink": 12, "unneed": [561, 571], "unoffici": [561, 568], "unpack": [48, 130, 131, 132, 236, 247, 249, 257, 266, 268, 271, 541, 561, 572, 580], "unpack_bit": [551, 561, 580, 582], "unpickl": [561, 574], "unrealist": [130, 131, 132], "unrecover": 513, "unsign": [29, 30, 32, 34, 36, 37, 39, 49, 147, 244, 561, 577, 594], "unspecifi": [154, 156, 157], "unsupport": [160, 205, 206, 207, 210], "until": [10, 154, 156, 157, 160, 161, 164, 175, 178, 561, 562, 567, 579, 582, 589], "untouch": [488, 524], "unus": [561, 572], "up": [37, 48, 49, 130, 131, 132, 154, 156, 157, 170, 171, 178, 181, 209, 513, 517, 522, 547, 561, 564, 568, 570, 585, 586, 587, 590, 591, 592], "upcom": [42, 95], "updat": [2, 10, 18, 20, 26, 27, 37, 38, 48, 107, 108, 109, 110, 130, 131, 132, 168, 170, 179, 180, 194, 217, 235, 237, 247, 249, 259, 260, 266, 268, 561, 563, 564, 566, 567, 569, 570, 571, 572, 574, 576, 577, 579, 580, 581, 582, 585, 586, 589, 591, 592], "upper": [488, 517, 524, 561, 582], "uppercas": [52, 127, 488, 524], "ur": [32, 540], "uri": [32, 130, 131, 132, 561, 577, 588], "url": [32, 52], "urllib": [561, 579], "us": [1, 3, 5, 6, 7, 9, 10, 12, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 44, 45, 46, 48, 49, 50, 52, 53, 76, 77, 78, 79, 83, 84, 87, 93, 94, 95, 96, 100, 101, 105, 108, 110, 127, 128, 130, 131, 132, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 160, 161, 163, 164, 168, 170, 171, 172, 178, 179, 180, 181, 193, 196, 197, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 235, 236, 237, 243, 244, 247, 248, 249, 250, 251, 252, 257, 258, 259, 260, 261, 266, 267, 268, 269, 271, 272, 273, 276, 434, 488, 513, 514, 517, 519, 520, 521, 522, 524, 525, 527, 528, 529, 530, 531, 532, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 548, 549, 550, 555, 556, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 593, 594], "us1_j2kr": 68, "us1_rl": 43, "us1_uncr": 68, "usabl": [236, 488, 524], "usag": [14, 24, 26, 27, 28, 30, 38, 41, 45, 218, 247, 249, 256, 266, 268, 488, 522, 551, 561, 574, 582, 589], "usb": 589, "use_decimal_boolean": 80, "use_ds_decim": [32, 81, 530, 551, 561, 576], "use_ds_numpi": [80, 530, 551, 561, 576], "use_exist": [170, 589], "use_is_numpi": [532, 551, 561, 576], "use_mct": 33, "use_numpi": 81, "use_v2_backend": [130, 131, 132], "user": [20, 30, 34, 40, 41, 47, 78, 87, 130, 131, 132, 158, 163, 181, 217, 236, 259, 561, 564, 567, 573, 574, 577, 582, 585, 587, 589], "userwarn": [10, 83], "usual": [25, 26, 27, 28, 38, 41, 46, 49, 108, 131, 141, 153, 158, 561, 564, 585, 587, 591, 592], "ut": 32, "utc": [2, 8, 20, 519], "utcfromtimestamp": 519, "utcnow": 519, "utcoffset": [519, 523], "utctimetupl": 519, "utf": [22, 488, 524], "util": [24, 26, 51, 62, 63, 64, 69, 551, 554, 561, 562, 569, 570, 582], "uuid": 513, "uuid4": 513, "uuu": [519, 523], "uv": [32, 548, 561, 574], "v": [561, 573], "v1": [561, 571, 572, 573, 594], "v2": [26, 27, 38, 561, 577, 591, 594], "v3": [2, 8, 20, 36, 37, 46, 561, 577, 579, 580, 582, 594], "v4": [130, 131, 132, 135, 136, 144, 145, 147, 152, 181, 549, 550, 561, 582, 594], "v5": 594, "v6": 594, "val": [154, 156, 157, 182, 203, 272, 488, 516, 517, 518, 520, 521, 522, 525, 547, 587], "valid": [12, 45, 51, 55, 82, 85, 86, 88, 123, 127, 130, 131, 132, 134, 160, 173, 181, 194, 218, 235, 236, 243, 244, 256, 438, 439, 488, 519, 523, 524, 525, 526, 530, 532, 541, 542, 545, 561, 579, 580, 581, 592], "validate_dataset": 587, "validate_file_meta": [551, 561, 582, 587], "validate_valu": 127, "validation_mod": [127, 488, 516, 517, 518, 520, 521, 522], "valtyp": 547, "valu": [0, 2, 8, 9, 10, 12, 17, 20, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 46, 48, 49, 51, 52, 55, 59, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 92, 95, 102, 108, 110, 111, 112, 121, 122, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 154, 156, 157, 159, 160, 162, 168, 170, 178, 179, 180, 181, 182, 191, 196, 197, 198, 203, 204, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 233, 235, 236, 237, 243, 244, 248, 250, 251, 252, 253, 254, 256, 258, 259, 260, 263, 265, 267, 269, 270, 272, 273, 488, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 548, 551, 561, 562, 563, 566, 567, 568, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582, 585, 586, 587, 588, 589, 591, 592, 593, 594], "value_kei": 127, "value_tel": 129, "valueerror": [80, 81, 83, 84, 105, 106, 107, 108, 109, 110, 129, 130, 131, 132, 133, 134, 144, 147, 162, 170, 181, 194, 203, 204, 207, 210, 248, 257, 267, 271, 272, 488, 513, 517, 518, 521, 524, 525, 530, 532, 544, 561, 582, 589, 592], "valuerep": [16, 22, 59, 529, 531, 535, 537, 551], "valuesview": [130, 131, 132], "vari": 587, "variabl": [26, 27, 41, 42, 52, 53, 68, 561, 573, 577, 581], "variant": [2, 8, 20], "varieti": 49, "variou": [25, 26, 46, 561, 562], "ve": [43, 561, 569, 585, 586, 589, 592, 594], "veri": [22, 32, 37, 561, 564, 585, 589, 592], "verif": [561, 571], "verifi": [44, 561, 567], "versa": [38, 181, 211, 250], "version": [2, 8, 12, 20, 24, 26, 27, 28, 39, 41, 45, 46, 52, 55, 79, 81, 83, 84, 88, 95, 98, 99, 101, 102, 105, 127, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 172, 179, 180, 181, 194, 201, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 264, 266, 267, 268, 270, 271, 273, 488, 513, 517, 524, 530, 532, 548, 549, 550, 585, 586, 587, 588, 593], "versionad": 52, "versionchang": 52, "veterinari": 522, "via": [29, 43, 55, 127, 130, 131, 132, 209, 488, 515, 524, 561, 570, 572, 577, 579, 580, 582, 588, 589, 592], "vice": [38, 181, 211, 250], "videan42": [561, 569], "view": [4, 10, 20, 29, 38, 41, 45, 49, 130, 131, 132, 213, 214, 215, 235, 253, 254, 255, 561, 562, 564, 582, 586, 589, 594], "view_onli": [29, 130, 131, 132, 236, 247, 249, 266, 268], "viewer": [0, 47], "virtual": [42, 591], "virtualenv": 586, "visibl": 586, "visit": [130, 131, 132, 585, 586], "vm": [16, 32, 41, 61, 107, 108, 109, 110, 111, 117, 118, 121, 127, 561, 565, 573, 576, 582, 587], "vma": 20, "voi": [45, 213, 214, 215, 253, 254, 255, 561, 574, 577], "voic": 50, "volum": 205, "voxel": 2, "vr": [0, 2, 8, 12, 16, 17, 20, 26, 27, 28, 39, 40, 41, 43, 44, 46, 53, 55, 59, 64, 81, 88, 89, 92, 100, 101, 107, 108, 109, 110, 112, 117, 118, 122, 127, 128, 129, 130, 131, 132, 133, 139, 154, 156, 157, 158, 159, 161, 162, 170, 179, 180, 181, 186, 187, 190, 194, 195, 207, 219, 220, 221, 225, 236, 237, 245, 260, 279, 488, 514, 515, 517, 518, 519, 520, 521, 522, 523, 527, 536, 538, 540, 541, 542, 543, 545, 546, 561, 562, 563, 564, 565, 567, 568, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582, 587, 588, 592], "w": 587, "wa": [24, 25, 26, 39, 52, 127, 130, 131, 132, 146, 170, 175, 179, 180, 530, 532, 561, 564, 571, 574, 579, 582, 585, 586, 589, 592], "wado": [127, 130, 131, 132, 588], "wai": [37, 41, 42, 48, 49, 130, 131, 132, 561, 567, 582, 584, 587, 588, 589, 591, 593], "walk": [17, 130, 131, 132], "wallac": [561, 565], "wang": 22, "want": [9, 10, 14, 24, 25, 26, 37, 42, 51, 172, 585, 586, 587, 588, 589, 591], "warn": [42, 51, 52, 55, 75, 76, 78, 83, 84, 265, 551, 561, 563, 567, 571, 572, 573, 574, 576, 579, 580, 582, 585, 586], "warn_and_log": 10, "water": [20, 522], "waveform": [1, 5, 6, 45, 53, 68, 130, 131, 132, 168, 551, 561, 577, 581, 583, 590], "waveform_arrai": [3, 45, 130, 131, 132, 561, 577, 594], "waveform_ecg": 68, "waveformbitsalloc": [548, 594], "waveformbitsstor": 594, "waveformdata": [50, 594], "waveformorigin": 594, "waveformsampleinterpret": [548, 594], "waveformsequ": [3, 50, 594], "wavelet": 36, "wb": 587, "we": [3, 10, 16, 17, 18, 24, 26, 28, 37, 38, 44, 92, 130, 131, 132, 584, 585, 586, 587, 589, 591, 592, 594], "web": 586, "wedg": [26, 28], "week": [515, 519], "weekdai": [515, 519], "weight": [0, 2, 8, 20], "well": [46, 49, 51, 170, 211, 250, 488, 524, 561, 564, 565, 567, 574, 585, 587, 591], "were": [20, 26, 28, 130, 131, 132, 561, 567, 569, 585, 586, 594], "what": [10, 32, 39, 46, 48, 53, 170, 587, 589, 592], "whatev": [216, 258], "whatsoev": 236, "wheel": 591, "when": [10, 16, 23, 24, 25, 26, 27, 29, 30, 32, 34, 36, 37, 38, 39, 41, 43, 46, 48, 49, 51, 52, 79, 83, 84, 88, 92, 93, 96, 130, 131, 132, 137, 138, 140, 142, 143, 145, 146, 147, 153, 154, 156, 157, 164, 170, 172, 179, 180, 181, 210, 212, 213, 214, 215, 217, 236, 237, 244, 247, 249, 251, 252, 253, 254, 255, 257, 259, 260, 266, 268, 269, 270, 271, 274, 276, 488, 513, 514, 522, 524, 561, 563, 564, 565, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 589, 591, 592, 594], "whenc": [154, 156, 157], "whenev": [561, 577], "where": [10, 30, 34, 36, 37, 39, 41, 42, 48, 49, 50, 55, 107, 109, 130, 131, 132, 133, 137, 162, 168, 170, 175, 176, 212, 235, 236, 243, 244, 251, 252, 488, 517, 524, 561, 563, 572, 573, 574, 582, 585, 586, 587, 589], "whether": [29, 39, 41, 81, 101, 127, 130, 131, 132, 147, 235, 273, 488, 517, 520, 524, 526, 561, 564, 567, 572, 574, 579, 584, 585, 591], "which": [1, 6, 20, 23, 24, 25, 26, 30, 34, 36, 37, 39, 41, 44, 46, 47, 49, 50, 51, 52, 76, 77, 83, 108, 127, 130, 131, 132, 158, 161, 163, 168, 170, 181, 194, 210, 216, 217, 236, 244, 249, 257, 258, 259, 268, 271, 488, 513, 514, 516, 517, 524, 561, 562, 565, 567, 569, 577, 582, 585, 586, 587, 588, 589, 591, 592, 594], "whichev": 244, "while": [10, 26, 27, 37, 38, 39, 44, 49, 55, 127, 130, 131, 132, 181, 210, 236, 244, 247, 249, 266, 268, 525, 561, 573, 574, 579, 582, 585, 589, 591], "white": [36, 37, 38, 561, 569], "whitespac": [488, 524], "whl": 591, "who": [30, 34, 236, 561, 567, 568], "whole": [24, 26, 158, 204, 235, 243, 262, 561, 582, 592], "whose": [41, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 126, 130, 131, 132, 236, 247, 249, 266, 268, 273, 488, 517, 518, 520, 521, 522, 524, 525, 585], "why": [38, 592], "widget": [0, 47], "width": [2, 8, 20, 127, 214, 215, 254, 255, 488, 524, 587], "window": [0, 2, 8, 20, 26, 27, 42, 45, 214, 215, 254, 255, 561, 562, 570, 574, 580, 585, 586, 587, 591], "windowcent": 587, "windowwidth": 587, "winter": [211, 250], "wip": [585, 586], "wise": 517, "wish": [25, 26, 36, 42, 269], "with_traceback": 153, "within": [24, 26, 27, 28, 30, 34, 37, 79, 88, 130, 131, 132, 160, 161, 169, 170, 181, 276, 488, 524, 536, 561, 577, 589, 591, 594], "without": [10, 36, 41, 44, 46, 50, 105, 130, 131, 132, 153, 163, 176, 257, 271, 517, 527, 538, 540, 541, 561, 563, 571, 573, 577, 580, 581, 582, 587, 589, 591, 592], "withoverlai": 68, "witten": [561, 564], "wo": [10, 589], "won": [585, 586, 587, 589], "word": [32, 51, 52, 108, 187, 488, 522, 524, 587], "work": [6, 15, 19, 21, 25, 26, 27, 30, 34, 37, 41, 42, 45, 46, 51, 52, 170, 488, 524, 561, 562, 564, 565, 567, 568, 569, 571, 573, 577, 582, 583, 585, 586, 587, 591, 592, 593, 594], "workflow": [561, 579, 585, 586], "world": [16, 587], "worth": [30, 235, 243], "would": [10, 24, 25, 26, 27, 38, 42, 51, 55, 517, 585, 586, 589, 594], "wrap": [41, 52, 154, 156, 157, 181], "wrapper": [154, 156, 157, 561, 576], "write": [6, 7, 10, 13, 14, 16, 17, 24, 26, 40, 42, 45, 46, 53, 55, 69, 93, 130, 131, 132, 154, 156, 157, 170, 181, 183, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 517, 518, 551, 561, 563, 565, 570, 571, 573, 575, 576, 577, 579, 580, 582, 583, 586, 588, 589, 590], "write_atvalu": 69, "write_da": 69, "write_data_el": 69, "write_dataset": [69, 561, 582], "write_dataset_to_byt": 14, "write_dt": 69, "write_fil": [561, 570, 579, 582], "write_file_meta_info": [69, 181], "write_like_origin": [130, 131, 132, 181, 561, 582], "write_new": [561, 566], "write_numb": 69, "write_number_str": 69, "write_obvalu": 69, "write_owvalu": 69, "write_pn": [69, 561, 571], "write_sequ": 69, "write_sequence_item": 69, "write_str": 69, "write_tag": [154, 156, 157], "write_text": 69, "write_tm": 69, "write_u": [154, 156, 157], "write_ui": 69, "write_ul": [154, 156, 157], "write_un": 69, "writeabl": [130, 131, 132, 181, 207, 236, 247, 249, 266, 268, 561, 582], "writeablebuff": [130, 131, 132, 154, 156, 157, 181], "writer": 88, "writing_validation_mod": [42, 55, 78, 561, 580], "written": [12, 24, 26, 32, 42, 48, 49, 130, 131, 132, 154, 156, 157, 170, 181, 193, 194, 561, 573, 574, 582, 585, 587, 589], "wrong": [561, 572, 573, 577, 581], "wrote": 51, "wxpython": [45, 561, 564], "x": [2, 3, 8, 9, 20, 26, 27, 28, 36, 52, 488, 513, 517, 524, 561, 573, 585, 587, 592, 594], "x00": [2, 8, 12, 16, 20, 26, 27, 28, 37, 41, 46, 48, 587], "x00t": 587, "x01": [2, 8, 12, 20, 26, 27, 28, 41, 46, 49, 587], "x02": 49, "x03": 49, "x04": [8, 49], "x08": 587, "x18": 587, "x5e": 22, "x7f": 49, "x89": 49, "x8b": 22, "x8e": 22, "x8f": 22, "x94": 49, "x9d": 22, "x_unit": 3, "xa1": 22, "xab": 22, "xb0": 22, "xb1": 22, "xb6": 22, "xcb": 49, "xcd": 22, "xd0": 22, "xe5": 22, "xe6": 22, "xe7": 22, "xeb": 49, "xf5": 22, "xf9": 49, "xfb": 49, "xfe": 8, "xff": 37, "xiaodong": 22, "xm": [20, 26, 28], "xmlcharrefreplac": [488, 524], "xr": [10, 589], "xraytubecurr": 586, "xxx": 51, "xxxxxx": 170, "y": [12, 52, 261, 488, 517, 524], "y_unit": 3, "yamada": 22, "yaroslav": [561, 569], "ybr": [38, 49, 561, 579], "ybr_full": [30, 34, 36, 37, 38, 39, 49, 130, 131, 132, 207, 209, 218, 236, 244, 247, 249, 256, 261, 266, 268, 561, 574, 580], "ybr_full_422": [29, 39, 49, 130, 131, 132, 207, 209, 218, 236, 237, 247, 249, 256, 260, 261, 266, 268, 561, 574, 580], "ybr_ict": [36, 39, 209], "ybr_partial_420": 39, "ybr_rct": [36, 39, 209, 592], "ycbcr": [29, 36, 37, 38, 39, 130, 131, 132, 205, 206, 207, 208, 209, 210, 235, 236, 237, 247, 249, 260, 266, 268], "year": [515, 519], "yet": [587, 593], "yield": [10, 41, 130, 131, 132, 139, 140, 141, 142, 143, 144, 145, 149, 158, 171, 172, 209, 235, 236, 237, 244, 247, 260, 266, 548, 561, 582, 587, 589, 594], "you": [10, 12, 14, 16, 18, 23, 24, 25, 26, 27, 28, 30, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 92, 137, 138, 160, 164, 168, 170, 172, 269, 488, 561, 574, 577, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594], "your": [8, 10, 14, 23, 25, 26, 27, 30, 34, 36, 37, 38, 39, 41, 44, 45, 46, 51, 95, 137, 138, 170, 584, 587, 588, 589, 591, 594], "your_fil": [24, 26, 27, 28], "yourarg": [25, 26], "yourpackag": [25, 26], "yourplan": [24, 26, 27, 28], "yourself": [25, 26, 48, 49], "yourusernam": [585, 586], "yyyi": [23, 515, 519], "z": [20, 88, 172, 173, 561, 582], "zenodo": 23, "zero": [4, 20, 32, 49, 130, 131, 132, 178, 235, 488, 517, 524, 561, 581, 587, 592], "zfill": [488, 524], "zip": [3, 6, 561, 573, 594], "\u03bcv": 594, "\u5409\u6d1e": 522, "\u6d2a": 522, "\uae38\ub3d9": 522, "\ud64d": 522}, "titles": ["Show a dicom file using hierarchical tree", "Image processing", "Downsize MRI image using pydicom", "Decode and plot Waveform Data", "Load CT slices and plot axial, sagittal and coronal images", "Computation times", "General examples", "Input-output", "Format the output of the data set printing", "Read a Dataset and plot Pixel Data", "Read a DICOM File-set", "Read RTPLAN DICOM and list information", "Write DICOM data", "Computation times", "Show working with memory-based dataset", "Metadata processing", "Add items to the private DICOM dictionary", "Anonymize DICOM data", "Working with sequences", "Computation times", "Analyse differences between DICOM files", "Computation times", "Display unicode person names", "Frequently asked questions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">codify</span></code> command", "Extending the CLI", "Command-line Interface Guide", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">show</span></code> command", "Pixel Data Decoder Options", "Pixel Data Decoder Plugins", "Pixel Data Decoding", "Element VRs and Python types", "Encoder Plugins Options", "Pixel Data Encoder Plugins", "Pixel Data Encoding", "JPEG 2000 Encoding", "JPEG-LS Encoding", "RLE Lossless Encoding", "Glossary", "Guides", "Core elements in pydicom", "Best Practices", "Compressing <em>Pixel Data</em>", "Handling of compressed pixel data", "pydicom User Guide", "Private Data Elements", "Viewing Images", "Working with Overlay Data", "Working with Pixel Data", "Working with Waveform Data", "Writing DICOM Files", "Writing documentation", "pydicom documentation", "Character Encoding and Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.charset</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.config</span></code>)", "Getting Included Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.data</span></code>)", "Data Dictionary Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.datadict</span></code>)", "Representation of Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataset</span></code>)", "Representation of Data Elements", "Data Elements (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataelem</span></code>)", "Element Multi-value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.multival</span></code>)", "Sequence Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sequence</span></code>)", "Element Tags (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.tag</span></code>)", "Specialized Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.valuerep</span></code>)", "Element Value Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.values</span></code>)", "Bulk Data Encapsulation Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encaps</span></code>)", "Exceptions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.errors</span></code>)", "Example Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.examples</span></code>)", "Dataset IO", "IO Base Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filebase</span></code>)", "Dataset Reading (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filereader</span></code>)", "IO Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileutil</span></code>)", "Dataset Writing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filewriter</span></code>)", "DICOM File-sets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileset</span></code>)", "pydicom.charset.convert_encodings", "pydicom.charset.decode_bytes", "pydicom.charset.decode_element", "pydicom.charset.encode_string", "pydicom.config.APPLY_J2K_CORRECTIONS", "pydicom.config.DS_decimal", "pydicom.config.DS_numpy", "pydicom.config.IGNORE", "pydicom.config.INVALID_KEYWORD_BEHAVIOR", "pydicom.config.INVALID_KEY_BEHAVIOR", "pydicom.config.RAISE", "pydicom.config.WARN", "pydicom.config.allow_DS_float", "pydicom.config.assume_implicit_vr_switch", "pydicom.config.convert_wrong_length_to_UN", "pydicom.config.data_element_callback", "pydicom.config.data_element_callback_kwargs", "pydicom.config.datetime_conversion", "pydicom.config.debug", "pydicom.config.enforce_valid_values", "pydicom.config.future_behavior", "pydicom.config.pixel_data_handlers", "pydicom.config.reset_data_element_callback", "pydicom.config.settings", "pydicom.config.show_file_meta", "pydicom.config.use_DS_decimal", "pydicom.config.use_DS_numpy", "pydicom.config.use_IS_numpy", "pydicom.data.get_charset_files", "pydicom.data.get_palette_files", "pydicom.data.get_testdata_file", "pydicom.data.get_testdata_files", "pydicom.datadict.add_dict_entries", "pydicom.datadict.add_dict_entry", "pydicom.datadict.add_private_dict_entries", "pydicom.datadict.add_private_dict_entry", "pydicom.datadict.dictionary_VM", "pydicom.datadict.dictionary_VR", "pydicom.datadict.dictionary_description", "pydicom.datadict.dictionary_has_tag", "pydicom.datadict.dictionary_is_retired", "pydicom.datadict.dictionary_keyword", "pydicom.datadict.get_entry", "pydicom.datadict.get_private_entry", "pydicom.datadict.keyword_for_tag", "pydicom.datadict.mask_match", "pydicom.datadict.private_dictionary_VM", "pydicom.datadict.private_dictionary_VR", "pydicom.datadict.private_dictionary_description", "pydicom.datadict.repeater_has_keyword", "pydicom.datadict.repeater_has_tag", "pydicom.datadict.tag_for_keyword", "pydicom.dataelem.DataElement", "pydicom.dataelem.DataElement_from_raw", "pydicom.dataelem.RawDataElement", "pydicom.dataset.Dataset", "pydicom.dataset.FileDataset", "pydicom.dataset.FileMetaDataset", "pydicom.dataset.PrivateBlock", "pydicom.dataset.validate_file_meta", "pydicom.encaps.decode_data_sequence", "pydicom.encaps.defragment_data", "pydicom.encaps.encapsulate", "pydicom.encaps.encapsulate_extended", "pydicom.encaps.fragment_frame", "pydicom.encaps.generate_fragmented_frames", "pydicom.encaps.generate_fragments", "pydicom.encaps.generate_frames", "pydicom.encaps.generate_pixel_data", "pydicom.encaps.generate_pixel_data_fragment", "pydicom.encaps.generate_pixel_data_frame", "pydicom.encaps.get_frame", "pydicom.encaps.get_frame_offsets", "pydicom.encaps.itemize_fragment", "pydicom.encaps.itemize_frame", "pydicom.encaps.parse_basic_offsets", "pydicom.encaps.parse_fragments", "pydicom.encaps.read_item", "pydicom.errors.InvalidDicomError", "pydicom.filebase.DicomBytesIO", "pydicom.filebase.DicomFile", "pydicom.filebase.DicomFileLike", "pydicom.filebase.DicomIO", "pydicom.filereader.data_element_generator", "pydicom.filereader.data_element_offset_to_value", "pydicom.filereader.dcmread", "pydicom.filereader.read_dataset", "pydicom.filereader.read_deferred_data_element", "pydicom.filereader.read_file_meta_info", "pydicom.filereader.read_partial", "pydicom.filereader.read_preamble", "pydicom.filereader.read_sequence", "pydicom.filereader.read_sequence_item", "pydicom.fileset.DIRECTORY_RECORDERS", "pydicom.fileset.FileInstance", "pydicom.fileset.FileSet", "pydicom.fileset.RecordNode", "pydicom.fileset.generate_filename", "pydicom.fileset.is_conformant_file_id", "pydicom.fileutil.absorb_delimiter_item", "pydicom.fileutil.find_bytes", "pydicom.fileutil.find_delimiter", "pydicom.fileutil.length_of_undefined_length", "pydicom.fileutil.read_undefined_length_value", "pydicom.filewriter.correct_ambiguous_vr", "pydicom.filewriter.correct_ambiguous_vr_element", "pydicom.filewriter.dcmwrite", "pydicom.filewriter.multi_string", "pydicom.filewriter.write_ATvalue", "pydicom.filewriter.write_DA", "pydicom.filewriter.write_DT", "pydicom.filewriter.write_OBvalue", "pydicom.filewriter.write_OWvalue", "pydicom.filewriter.write_PN", "pydicom.filewriter.write_TM", "pydicom.filewriter.write_UI", "pydicom.filewriter.write_UN", "pydicom.filewriter.write_data_element", "pydicom.filewriter.write_dataset", "pydicom.filewriter.write_file_meta_info", "pydicom.filewriter.write_number_string", "pydicom.filewriter.write_numbers", "pydicom.filewriter.write_sequence", "pydicom.filewriter.write_sequence_item", "pydicom.filewriter.write_string", "pydicom.filewriter.write_text", "pydicom.misc.is_dicom", "pydicom.misc.size_in_bytes", "pydicom.multival.MultiValue", "pydicom.overlays.numpy_handler", "pydicom.pixel_data_handlers.gdcm_handler", "pydicom.pixel_data_handlers.jpeg_ls_handler", "pydicom.pixel_data_handlers.numpy_handler", "pydicom.pixel_data_handlers.pillow_handler", "pydicom.pixel_data_handlers.pylibjpeg_handler", "pydicom.pixel_data_handlers.rle_handler", "pydicom.pixels.apply_color_lut", "pydicom.pixels.apply_modality_lut", "pydicom.pixels.apply_voi", "pydicom.pixels.apply_voi_lut", "pydicom.pixels.apply_windowing", "pydicom.pixels.as_pixel_options", "pydicom.pixels.compress", "pydicom.pixels.convert_color_space", "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.HTJ2KDecoder", "pydicom.pixels.decoders.HTJ2KLosslessDecoder", "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.JPEG2000Decoder", "pydicom.pixels.decoders.JPEG2000LosslessDecoder", "pydicom.pixels.decoders.JPEGBaseline8BitDecoder", "pydicom.pixels.decoders.JPEGExtended12BitDecoder", "pydicom.pixels.decoders.JPEGLSLosslessDecoder", "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", "pydicom.pixels.decoders.JPEGLosslessDecoder", "pydicom.pixels.decoders.JPEGLosslessSV1Decoder", "pydicom.pixels.decoders.RLELosslessDecoder", "pydicom.pixels.decoders.base.DecodeRunner", "pydicom.pixels.decoders.base.Decoder", "pydicom.pixels.decompress", "pydicom.pixels.encoders.JPEG2000Encoder", "pydicom.pixels.encoders.JPEG2000LosslessEncoder", "pydicom.pixels.encoders.JPEGLSLosslessEncoder", "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", "pydicom.pixels.encoders.RLELosslessEncoder", "pydicom.pixels.encoders.base.EncodeRunner", "pydicom.pixels.encoders.base.Encoder", "pydicom.pixels.get_decoder", "pydicom.pixels.get_encoder", "pydicom.pixels.iter_pixels", "pydicom.pixels.pack_bits", "pydicom.pixels.pixel_array", "pydicom.pixels.processing.apply_color_lut", "pydicom.pixels.processing.apply_modality_lut", "pydicom.pixels.processing.apply_rescale", "pydicom.pixels.processing.apply_voi", "pydicom.pixels.processing.apply_voi_lut", "pydicom.pixels.processing.apply_windowing", "pydicom.pixels.processing.convert_color_space", "pydicom.pixels.unpack_bits", "pydicom.pixels.utils.as_pixel_options", "pydicom.pixels.utils.compress", "pydicom.pixels.utils.decompress", "pydicom.pixels.utils.expand_ybr422", "pydicom.pixels.utils.get_expected_length", "pydicom.pixels.utils.get_image_pixel_ids", "pydicom.pixels.utils.get_j2k_parameters", "pydicom.pixels.utils.get_nr_frames", "pydicom.pixels.utils.iter_pixels", "pydicom.pixels.utils.pack_bits", "pydicom.pixels.utils.pixel_array", "pydicom.pixels.utils.pixel_dtype", "pydicom.pixels.utils.reshape_pixel_array", "pydicom.pixels.utils.unpack_bits", "pydicom.sequence.Sequence", "pydicom.tag.BaseTag", "pydicom.tag.Tag", "pydicom.tag.TupleTag", "pydicom.tag.tag_in_exception", "pydicom.uid.AcquisitionContextSRStorage", "pydicom.uid.AdvancedBlendingPresentationStateStorage", "pydicom.uid.AllTransferSyntaxes", "pydicom.uid.AmbulatoryECGWaveformStorage", "pydicom.uid.ArterialPulseWaveformStorage", "pydicom.uid.AutorefractionMeasurementsStorage", "pydicom.uid.BasicStructuredDisplayStorage", "pydicom.uid.BasicTextSRStorage", "pydicom.uid.BasicVoiceAudioWaveformStorage", "pydicom.uid.BlendingSoftcopyPresentationStateStorage", "pydicom.uid.BodyPositionWaveformStorage", "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "pydicom.uid.BreastTomosynthesisImageStorage", "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "pydicom.uid.CArmPhotonElectronRadiationStorage", "pydicom.uid.CTDefinedProcedureProtocolStorage", "pydicom.uid.CTImageStorage", "pydicom.uid.CTPerformedProcedureProtocolStorage", "pydicom.uid.CardiacElectrophysiologyWaveformStorage", "pydicom.uid.ChestCADSRStorage", "pydicom.uid.ColonCADSRStorage", "pydicom.uid.ColorPaletteStorage", "pydicom.uid.ColorSoftcopyPresentationStateStorage", "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.Comprehensive3DSRStorage", "pydicom.uid.ComprehensiveSRStorage", "pydicom.uid.ComputedRadiographyImageStorage", "pydicom.uid.ConfocalMicroscopyImageStorage", "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "pydicom.uid.ContentAssessmentResultsStorage", "pydicom.uid.CornealTopographyMapStorage", "pydicom.uid.DICOS2DAITStorage", "pydicom.uid.DICOS3DAITStorage", "pydicom.uid.DICOSCTImageStorage", "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "pydicom.uid.DICOSQuadrupoleResonanceStorage", "pydicom.uid.DICOSThreatDetectionReportStorage", "pydicom.uid.DeflatedExplicitVRLittleEndian", "pydicom.uid.DeformableSpatialRegistrationStorage", "pydicom.uid.DermoscopicPhotographyImageStorage", "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "pydicom.uid.DigitalXRayImageStorageForPresentation", "pydicom.uid.DigitalXRayImageStorageForProcessing", "pydicom.uid.EddyCurrentImageStorage", "pydicom.uid.EddyCurrentMultiFrameImageStorage", "pydicom.uid.ElectromyogramWaveformStorage", "pydicom.uid.ElectrooculogramWaveformStorage", "pydicom.uid.EncapsulatedCDAStorage", "pydicom.uid.EncapsulatedMTLStorage", "pydicom.uid.EncapsulatedOBJStorage", "pydicom.uid.EncapsulatedPDFStorage", "pydicom.uid.EncapsulatedSTLStorage", "pydicom.uid.EnhancedCTImageStorage", "pydicom.uid.EnhancedContinuousRTImageStorage", "pydicom.uid.EnhancedMRColorImageStorage", "pydicom.uid.EnhancedMRImageStorage", "pydicom.uid.EnhancedPETImageStorage", "pydicom.uid.EnhancedRTImageStorage", "pydicom.uid.EnhancedSRStorage", "pydicom.uid.EnhancedUSVolumeStorage", "pydicom.uid.EnhancedXAImageStorage", "pydicom.uid.EnhancedXRFImageStorage", "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "pydicom.uid.ExplicitVRBigEndian", "pydicom.uid.ExplicitVRLittleEndian", "pydicom.uid.ExtensibleSRStorage", "pydicom.uid.General32bitECGWaveformStorage", "pydicom.uid.GeneralAudioWaveformStorage", "pydicom.uid.GeneralECGWaveformStorage", "pydicom.uid.GenericImplantTemplateStorage", "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.HEVCM10P51", "pydicom.uid.HEVCMP51", "pydicom.uid.HTJ2K", "pydicom.uid.HTJ2KLossless", "pydicom.uid.HTJ2KLosslessRPCL", "pydicom.uid.HangingProtocolStorage", "pydicom.uid.HemodynamicWaveformStorage", "pydicom.uid.ImplantAssemblyTemplateStorage", "pydicom.uid.ImplantTemplateGroupStorage", "pydicom.uid.ImplantationPlanSRStorage", "pydicom.uid.ImplicitVRLittleEndian", "pydicom.uid.IntraocularLensCalculationsStorage", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pydicom.uid.InventoryStorage", "pydicom.uid.JPEG2000", "pydicom.uid.JPEG2000Lossless", "pydicom.uid.JPEG2000MC", "pydicom.uid.JPEG2000MCLossless", "pydicom.uid.JPEG2000TransferSyntaxes", "pydicom.uid.JPEGBaseline8Bit", "pydicom.uid.JPEGExtended12Bit", "pydicom.uid.JPEGLSLossless", "pydicom.uid.JPEGLSNearLossless", "pydicom.uid.JPEGLSTransferSyntaxes", "pydicom.uid.JPEGLossless", "pydicom.uid.JPEGLosslessSV1", "pydicom.uid.JPEGTransferSyntaxes", "pydicom.uid.JPIPHTJ2KReferenced", "pydicom.uid.JPIPHTJ2KReferencedDeflate", "pydicom.uid.KeratometryMeasurementsStorage", "pydicom.uid.KeyObjectSelectionDocumentStorage", "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "pydicom.uid.LensometryMeasurementsStorage", "pydicom.uid.MPEG2MPHL", "pydicom.uid.MPEG2MPHLF", "pydicom.uid.MPEG2MPML", "pydicom.uid.MPEG2MPMLF", "pydicom.uid.MPEG4HP41", "pydicom.uid.MPEG4HP41BD", "pydicom.uid.MPEG4HP41BDF", "pydicom.uid.MPEG4HP41F", "pydicom.uid.MPEG4HP422D", "pydicom.uid.MPEG4HP422DF", "pydicom.uid.MPEG4HP423D", "pydicom.uid.MPEG4HP423DF", "pydicom.uid.MPEG4HP42STEREO", "pydicom.uid.MPEG4HP42STEREOF", "pydicom.uid.MPEGTransferSyntaxes", "pydicom.uid.MRImageStorage", "pydicom.uid.MRSpectroscopyStorage", "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "pydicom.uid.MammographyCADSRStorage", "pydicom.uid.MediaStorageDirectoryStorage", "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "pydicom.uid.MultichannelRespiratoryWaveformStorage", "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.NuclearMedicineImageStorage", "pydicom.uid.OphthalmicAxialMeasurementsStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pydicom.uid.OphthalmicPhotography16BitImageStorage", "pydicom.uid.OphthalmicPhotography8BitImageStorage", "pydicom.uid.OphthalmicThicknessMapStorage", "pydicom.uid.OphthalmicTomographyImageStorage", "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "pydicom.uid.PYDICOM_ROOT_UID", "pydicom.uid.ParametricMapStorage", "pydicom.uid.PatientRadiationDoseSRStorage", "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "pydicom.uid.PhotoacousticImageStorage", "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "pydicom.uid.PositronEmissionTomographyImageStorage", "pydicom.uid.PrivateTransferSyntaxes", "pydicom.uid.ProcedureLogStorage", "pydicom.uid.ProtocolApprovalStorage", "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "pydicom.uid.RE_VALID_UID", "pydicom.uid.RE_VALID_UID_PREFIX", "pydicom.uid.RLELossless", "pydicom.uid.RLETransferSyntaxes", "pydicom.uid.RTBeamsDeliveryInstructionStorage", "pydicom.uid.RTBeamsTreatmentRecordStorage", "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "pydicom.uid.RTBrachyTreatmentRecordStorage", "pydicom.uid.RTDoseStorage", "pydicom.uid.RTImageStorage", "pydicom.uid.RTIonBeamsTreatmentRecordStorage", "pydicom.uid.RTIonPlanStorage", "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "pydicom.uid.RTPhysicianIntentStorage", "pydicom.uid.RTPlanStorage", "pydicom.uid.RTRadiationRecordSetStorage", "pydicom.uid.RTRadiationSalvageRecordStorage", "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "pydicom.uid.RTRadiationSetStorage", "pydicom.uid.RTSegmentAnnotationStorage", "pydicom.uid.RTStructureSetStorage", "pydicom.uid.RTTreatmentPreparationStorage", "pydicom.uid.RTTreatmentSummaryRecordStorage", "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "pydicom.uid.RawDataStorage", "pydicom.uid.RealWorldValueMappingStorage", "pydicom.uid.RespiratoryWaveformStorage", "pydicom.uid.RoboticArmRadiationStorage", "pydicom.uid.RoboticRadiationRecordStorage", "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "pydicom.uid.SMPTEST211030PCMDigitalAudio", "pydicom.uid.SecondaryCaptureImageStorage", "pydicom.uid.SegmentationStorage", "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.SimplifiedAdultEchoSRStorage", "pydicom.uid.SleepElectroencephalogramWaveformStorage", "pydicom.uid.SpatialFiducialsStorage", "pydicom.uid.SpatialRegistrationStorage", "pydicom.uid.SpectaclePrescriptionReportStorage", "pydicom.uid.StereometricRelationshipStorage", "pydicom.uid.SubjectiveRefractionMeasurementsStorage", "pydicom.uid.SurfaceScanMeshStorage", "pydicom.uid.SurfaceScanPointCloudStorage", "pydicom.uid.SurfaceSegmentationStorage", "pydicom.uid.TomotherapeuticRadiationRecordStorage", "pydicom.uid.TomotherapeuticRadiationStorage", "pydicom.uid.TractographyResultsStorage", "pydicom.uid.TwelveLeadECGWaveformStorage", "pydicom.uid.UID", "pydicom.uid.UltrasoundImageStorage", "pydicom.uid.UltrasoundMultiFrameImageStorage", "pydicom.uid.UncompressedTransferSyntaxes", "pydicom.uid.VLEndoscopicImageStorage", "pydicom.uid.VLMicroscopicImageStorage", "pydicom.uid.VLPhotographicImageStorage", "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "pydicom.uid.VLWholeSlideMicroscopyImageStorage", "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "pydicom.uid.VideoEndoscopicImageStorage", "pydicom.uid.VideoMicroscopicImageStorage", "pydicom.uid.VideoPhotographicImageStorage", "pydicom.uid.VisualAcuityMeasurementsStorage", "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pydicom.uid.XADefinedProcedureProtocolStorage", "pydicom.uid.XAPerformedProcedureProtocolStorage", "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.XRay3DAngiographicImageStorage", "pydicom.uid.XRay3DCraniofacialImageStorage", "pydicom.uid.XRayAngiographicImageStorage", "pydicom.uid.XRayRadiationDoseSRStorage", "pydicom.uid.XRayRadiofluoroscopicImageStorage", "pydicom.uid.generate_uid", "pydicom.uid.register_transfer_syntax", "pydicom.valuerep.DA", "pydicom.valuerep.DS", "pydicom.valuerep.DSdecimal", "pydicom.valuerep.DSfloat", "pydicom.valuerep.DT", "pydicom.valuerep.IS", "pydicom.valuerep.ISfloat", "pydicom.valuerep.PersonName", "pydicom.valuerep.TM", "pydicom.valuerep.VR", "pydicom.valuerep.format_number_as_ds", "pydicom.valuerep.is_valid_ds", "pydicom.values.convert_AE_string", "pydicom.values.convert_ATvalue", "pydicom.values.convert_DA_string", "pydicom.values.convert_DS_string", "pydicom.values.convert_DT_string", "pydicom.values.convert_IS_string", "pydicom.values.convert_OBvalue", "pydicom.values.convert_OWvalue", "pydicom.values.convert_PN", "pydicom.values.convert_SQ", "pydicom.values.convert_TM_string", "pydicom.values.convert_UI", "pydicom.values.convert_UN", "pydicom.values.convert_UR_string", "pydicom.values.convert_numbers", "pydicom.values.convert_single_string", "pydicom.values.convert_string", "pydicom.values.convert_tag", "pydicom.values.convert_text", "pydicom.values.convert_value", "pydicom.values.multi_string", "pydicom.waveforms.numpy_handler", "Bulk Data Handlers", "Pixel Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixel_data_handlers</span></code>)", "API Reference", "Miscellaneous (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.misc</span></code>)", "Overlay Data Handling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.overlays</span></code>)", "Pixel Data (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels</span></code>)", "Pixel Data Decoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.decoders</span></code>)", "Pixel Data Encoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.encoders</span></code>)", "Pixel Data Processing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.processing</span></code>)", "Pixel Data Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.utils</span></code>)", "UID Definitions and Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.uid</span></code>)", "Waveform Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.waveforms</span></code>)", "Release notes", "Version 0.9.2", "Version 0.9.3", "Version 0.9.4", "Version 0.9.5", "Version 0.9.6", "Version 0.9.7", "Version 0.9.8", "Version 0.9.9", "Version 1.0.0", "Version 1.1.0", "Version 1.2.0", "Version 1.3.0", "Version 1.4.0", "Version 1.4.1", "Version 2.0.0", "Version 2.1.0", "Version 2.1.1", "Version 2.2.0", "Version 2.3.0", "Version 2.4.0", "Version 3.0.0", "Computation times", "Contributing to pydicom", "Contributing a source code change", "Contributing a documentation change", "Dataset basics: read, access, modify, write", "Introduction to JSON support", "DICOM File-sets and DICOMDIR", "Tutorials", "How to install pydicom", "Compressing <em>Pixel Data</em>", "Structured Reporting", "Waveforms"], "titleterms": {"": 23, "0": [561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582], "1": [561, 570, 571, 572, 573, 574, 575, 577, 578], "2": [561, 562, 572, 576, 577, 578, 579, 580, 581], "2000": 36, "3": [561, 563, 573, 580, 582], "4": [561, 564, 574, 575, 581], "5": [561, 565], "6": [561, 566], "7": [561, 567], "8": [561, 568], "9": [561, 562, 563, 564, 565, 566, 567, 568, 569], "A": [24, 26], "Near": 37, "The": 589, "absorb_delimiter_item": 174, "access": 587, "acquisitioncontextsrstorag": 277, "ad": [30, 34, 46, 587, 589], "add": 16, "add_dict_entri": [107, 108], "add_private_dict_entri": [109, 110], "addit": [561, 564], "advancedblendingpresentationstatestorag": 278, "all": 46, "allow_ds_float": 87, "alltransfersyntax": 279, "ambulatoryecgwaveformstorag": 280, "an": 34, "analys": 20, "ani": 587, "anonym": 17, "api": [53, 551], "appli": 589, "apply_color_lut": [211, 250], "apply_j2k_correct": 79, "apply_modality_lut": [212, 251], "apply_rescal": 252, "apply_voi": [213, 253], "apply_voi_lut": [214, 254], "apply_window": [215, 255], "ar": 23, "arterialpulsewaveformstorag": 281, "as_pixel_opt": [216, 258], "ask": 23, "assume_implicit_vr_switch": 88, "autorefractionmeasurementsstorag": 282, "avail": [36, 37, 38], "axial": 4, "base": [14, 70, 235, 236, 243, 244], "basetag": 273, "basic": 587, "basicstructureddisplaystorag": 283, "basictextsrstorag": 284, "basicvoiceaudiowaveformstorag": 285, "best": 42, "between": 20, "binari": 588, "bit": 36, "blendingsoftcopypresentationstatestorag": 286, "bodypositionwaveformstorag": 287, "branch": [585, 586], "breastprojectionxrayimagestorageforpresent": 288, "breastprojectionxrayimagestorageforprocess": 289, "breasttomosynthesisimagestorag": 290, "bug": [561, 562, 563, 564, 566, 567, 568], "build": 586, "bulk": [66, 549], "can": 23, "cardiacelectrophysiologywaveformstorag": 296, "carmphotonelectronradiationrecordstorag": 291, "carmphotonelectronradiationstorag": 292, "categori": 587, "chang": [561, 562, 563, 564, 566, 567, 568, 569, 570, 572, 573, 574, 575, 577, 579, 580, 581, 582, 585, 586, 589], "changelog": [561, 576], "charact": 54, "charset": [54, 75, 76, 77, 78], "chestcadsrstorag": 297, "cite": 23, "class": [70, 559], "cli": [25, 26, 27], "code": [42, 585], "codifi": [24, 26, 51], "coloncadsrstorag": 298, "color": 49, "colorpalettestorag": 299, "colorsoftcopypresentationstatestorag": 300, "combin": [26, 27], "command": [24, 26, 28], "commit": [585, 586], "compositingplanarmprvolumetricpresentationstatestorag": 301, "comprehensive3dsrstorag": 302, "comprehensivesrstorag": 303, "compress": [43, 44, 217, 259, 592], "comput": [5, 13, 19, 21, 583], "computedradiographyimagestorag": 304, "conclus": 589, "conda": 591, "config": [55, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "configur": [37, 55], "confocalmicroscopyimagestorag": 305, "confocalmicroscopytiledpyramidalimagestorag": 306, "contentassessmentresultsstorag": 307, "contrib": [561, 565, 568, 569], "contribut": [584, 585, 586], "contributor": [561, 569], "convert": 588, "convert_ae_str": 527, "convert_atvalu": 528, "convert_color_spac": [218, 256], "convert_da_str": 529, "convert_ds_str": 530, "convert_dt_str": 531, "convert_encod": 75, "convert_is_str": 532, "convert_numb": 541, "convert_obvalu": 533, "convert_owvalu": 534, "convert_pn": 535, "convert_single_str": 542, "convert_sq": 536, "convert_str": 543, "convert_tag": 544, "convert_text": 545, "convert_tm_str": 537, "convert_ui": 538, "convert_un": 539, "convert_ur_str": 540, "convert_valu": 546, "convert_wrong_length_to_un": 89, "core": 41, "cornealtopographymapstorag": 308, "coron": 4, "correct_ambiguous_vr": 179, "correct_ambiguous_vr_el": 180, "creat": [66, 585, 586, 588, 589], "ct": 4, "ctdefinedprocedureprotocolstorag": 293, "ctimagestorag": 294, "ctperformedprocedureprotocolstorag": 295, "current": 585, "d": 516, "da": 515, "data": [3, 8, 9, 12, 17, 29, 30, 31, 34, 35, 43, 44, 46, 48, 49, 50, 56, 57, 59, 60, 66, 103, 104, 105, 106, 549, 550, 553, 554, 555, 556, 557, 558, 560, 588, 592, 594], "data_element_callback": 90, "data_element_callback_kwarg": 91, "data_element_gener": 158, "data_element_offset_to_valu": 159, "datadict": [57, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "datael": [41, 127], "dataelem": [60, 127, 128, 129], "dataelement_from_raw": 128, "dataset": [9, 14, 41, 43, 48, 49, 50, 56, 58, 68, 69, 71, 73, 130, 131, 132, 133, 134, 587, 588], "datetime_convers": 92, "dcmread": 160, "dcmwrite": 181, "debug": 93, "decod": [3, 29, 30, 31, 54, 65, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 555, 594], "decode_byt": 76, "decode_data_sequ": 135, "decode_el": 77, "decoderunn": 235, "decompress": [237, 260], "definit": 559, "deflatedexplicitvrlittleendian": 316, "deflatedexplicitvrlittleendiandecod": 219, "deformablespatialregistrationstorag": 317, "defragment_data": 136, "delet": 587, "deprec": [561, 582], "dermoscopicphotographyimagestorag": 318, "develop": 591, "dicom": [0, 10, 11, 12, 16, 17, 20, 24, 26, 42, 46, 51, 57, 74, 589, 591, 594], "dicombytesio": 154, "dicomdir": 589, "dicomfil": 155, "dicomfilelik": 156, "dicomio": 157, "dicos2daitstorag": 309, "dicos3daitstorag": 310, "dicosctimagestorag": 311, "dicosdigitalxrayimagestorageforpresent": 312, "dicosdigitalxrayimagestorageforprocess": 313, "dicosquadrupoleresonancestorag": 314, "dicosthreatdetectionreportstorag": 315, "dictionari": [16, 46, 57], "dictionary_descript": 113, "dictionary_has_tag": 114, "dictionary_is_retir": 115, "dictionary_keyword": 116, "dictionary_vm": 111, "dictionary_vr": 112, "differ": 20, "digitalintraoralxrayimagestorageforpresent": 319, "digitalintraoralxrayimagestorageforprocess": 320, "digitalmammographyxrayimagestorageforpresent": 321, "digitalmammographyxrayimagestorageforprocess": 322, "digitalxrayimagestorageforpresent": 323, "digitalxrayimagestorageforprocess": 324, "directory_record": 168, "displai": [22, 46], "do": 23, "document": [52, 53, 561, 573, 585, 586], "doe": 23, "download": [585, 586, 591], "downsiz": 2, "ds_decim": 80, "ds_numpi": 81, "dsdecim": 517, "dsfloat": 518, "dt": 519, "eddycurrentimagestorag": 325, "eddycurrentmultiframeimagestorag": 326, "electromyogramwaveformstorag": 327, "electrooculogramwaveformstorag": 328, "element": [32, 41, 46, 59, 60, 61, 62, 63, 64, 65, 587], "encap": [66, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "encapsul": [66, 137, 592], "encapsulate_extend": 138, "encapsulatedcdastorag": 329, "encapsulatedmtlstorag": 330, "encapsulatedobjstorag": 331, "encapsulatedpdfstorag": 332, "encapsulatedstlstorag": 333, "encod": [33, 34, 35, 36, 37, 38, 54, 238, 239, 240, 241, 242, 243, 244, 556, 594], "encode_str": 78, "encoderunn": 243, "enforc": 42, "enforce_valid_valu": 94, "enhanc": [561, 562, 563, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582], "enhancedcontinuousrtimagestorag": 335, "enhancedctimagestorag": 334, "enhancedmrcolorimagestorag": 336, "enhancedmrimagestorag": 337, "enhancedpetimagestorag": 338, "enhancedrtimagestorag": 339, "enhancedsrstorag": 340, "enhancedusvolumestorag": 341, "enhancedxaimagestorag": 342, "enhancedxrayradiationdosesrstorag": 344, "enhancedxrfimagestorag": 343, "entri": 46, "error": [67, 153], "exampl": [6, 24, 26, 36, 37, 38, 53, 68, 587, 591], "except": 67, "exist": 589, "expand_ybr422": 261, "explicitvrbigendian": 345, "explicitvrbigendiandecod": 220, "explicitvrlittleendian": 346, "explicitvrlittleendiandecod": 221, "extend": [25, 26], "extensiblesrstorag": 347, "file": [0, 10, 17, 20, 24, 26, 39, 51, 74, 561, 565, 568, 569, 589, 591], "file_meta": 587, "filebas": [70, 154, 155, 156, 157], "filedataset": 131, "fileinst": 169, "filemetadataset": 132, "fileread": [71, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "fileset": [74, 168, 169, 170, 171, 172, 173, 589], "fileutil": [72, 174, 175, 176, 177, 178], "filewrit": [73, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "find_byt": 175, "find_delimit": 176, "fix": [561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582], "format": [8, 588], "format_number_as_d": 525, "fragment_fram": 139, "frequent": 23, "from": [51, 588], "futur": 42, "future_behavior": 95, "gdcm": [33, 591], "gdcm_handler": 205, "gener": [6, 23, 52], "general32bitecgwaveformstorag": 348, "generalaudiowaveformstorag": 349, "generalecgwaveformstorag": 350, "generate_filenam": 172, "generate_frag": 141, "generate_fragmented_fram": 140, "generate_fram": 142, "generate_pixel_data": 143, "generate_pixel_data_frag": 144, "generate_pixel_data_fram": 145, "generate_uid": 513, "genericimplanttemplatestorag": 351, "get": [53, 56, 587], "get_charset_fil": 103, "get_decod": 245, "get_encod": 246, "get_entri": 117, "get_expected_length": 262, "get_fram": 146, "get_frame_offset": 147, "get_image_pixel_id": 263, "get_j2k_paramet": 264, "get_nr_fram": 265, "get_palette_fil": 104, "get_private_entri": 118, "get_testdata_fil": [105, 106], "glossari": 39, "grayscaleplanarmprvolumetricpresentationstatestorag": 352, "grayscalesoftcopypresentationstatestorag": 353, "guid": [26, 40, 45, 53], "guidelin": 52, "handl": [44, 553], "handler": [549, 550, 560], "hangingprotocolstorag": 359, "happen": [585, 586], "hemodynamicwaveformstorag": 360, "hevcm10p51": 354, "hevcmp51": 355, "hierarch": 0, "how": [23, 591], "htj2k": 356, "htj2kdecod": 222, "htj2klossless": 357, "htj2klosslessdecod": 223, "htj2klosslessrpcl": 358, "htj2klosslessrpcldecod": 224, "i": [23, 520], "ignor": 82, "imag": [1, 2, 4, 6, 29, 36, 37, 38, 39, 47], "implantassemblytemplatestorag": 361, "implantationplansrstorag": 363, "implanttemplategroupstorag": 362, "implicitvrlittleendian": 364, "implicitvrlittleendiandecod": 225, "includ": 56, "inform": [11, 39], "infrastructur": [561, 570], "input": [6, 7], "instal": [23, 26, 27, 585, 591], "instanc": 589, "interfac": 26, "intern": [561, 581, 582], "interpret": [36, 37], "intraocularlenscalculationsstorag": 365, "intravascularopticalcoherencetomographyimagestorageforpresent": 366, "intravascularopticalcoherencetomographyimagestorageforprocess": 367, "introduct": [26, 27, 42, 46, 47, 48, 49, 50, 51, 588, 592], "invalid_key_behavior": 84, "invalid_keyword_behavior": 83, "invaliddicomerror": 153, "inventorystorag": 368, "io": [69, 70, 72], "is_conformant_file_id": 173, "is_dicom": 201, "is_valid_d": 526, "isfloat": 521, "item": 16, "itemize_frag": 148, "itemize_fram": 149, "iter_pixel": [247, 266], "jpeg": [36, 37], "jpeg2000": 369, "jpeg2000decod": 226, "jpeg2000encod": 238, "jpeg2000lossless": 370, "jpeg2000losslessdecod": 227, "jpeg2000losslessencod": 239, "jpeg2000mc": 371, "jpeg2000mclossless": 372, "jpeg2000transfersyntax": 373, "jpeg_ls_handl": 206, "jpegbaseline8bit": 374, "jpegbaseline8bitdecod": 228, "jpegextended12bit": 375, "jpegextended12bitdecod": 229, "jpeglossless": 379, "jpeglosslessdecod": 232, "jpeglosslesssv1": 380, "jpeglosslesssv1decod": 233, "jpeglslossless": 376, "jpeglslosslessdecod": 230, "jpeglslosslessencod": 240, "jpeglsnearlossless": 377, "jpeglsnearlosslessdecod": 231, "jpeglsnearlosslessencod": 241, "jpeglstransfersyntax": 378, "jpegtransfersyntax": 381, "jpiphtj2kreferenc": 382, "jpiphtj2kreferenceddefl": 383, "json": 588, "keratometrymeasurementsstorag": 384, "keyobjectselectiondocumentstorag": 385, "keyword_for_tag": 119, "l": 37, "larg": 588, "legacyconvertedenhancedctimagestorag": 386, "legacyconvertedenhancedmrimagestorag": 387, "legacyconvertedenhancedpetimagestorag": 388, "length_of_undefined_length": 177, "lensometrymeasurementsstorag": 389, "librari": [47, 585, 591], "licens": 23, "limit": 42, "line": 26, "list": [11, 559], "load": [4, 589], "lossless": [29, 36, 37, 38], "lut": 49, "maculargridthicknessandvolumereportstorag": 407, "major": [42, 561, 562, 563, 564, 565, 566, 567, 568, 570], "make": [585, 586], "mammographycadsrstorag": 408, "mask_match": 120, "matplotlib": 47, "mediastoragedirectorystorag": 409, "memori": 14, "meta": 39, "metadata": [6, 15], "microscopybulksimpleannotationsstorag": 410, "misc": [201, 202, 552], "miscellan": [29, 552], "modal": 49, "modifi": [587, 589], "modul": [39, 554], "mpeg2mphl": 390, "mpeg2mphlf": 391, "mpeg2mpml": 392, "mpeg2mpmlf": 393, "mpeg4hp41": 394, "mpeg4hp41bd": 395, "mpeg4hp41bdf": 396, "mpeg4hp41f": 397, "mpeg4hp422d": 398, "mpeg4hp422df": 399, "mpeg4hp423d": 400, "mpeg4hp423df": 401, "mpeg4hp42stereo": 402, "mpeg4hp42stereof": 403, "mpegtransfersyntax": 404, "mri": 2, "mrimagestorag": 405, "mrspectroscopystorag": 406, "multi": 61, "multi_str": [182, 547], "multichannelrespiratorywaveformstorag": 415, "multiframegrayscalebytesecondarycaptureimagestorag": 411, "multiframegrayscalewordsecondarycaptureimagestorag": 412, "multiframesinglebitsecondarycaptureimagestorag": 413, "multiframetruecolorsecondarycaptureimagestorag": 414, "multiplevolumerenderingvolumetricpresentationstatestorag": 416, "multiv": [61, 203], "multivalu": 203, "name": 22, "new": [46, 561, 565, 585, 586, 589], "next": [585, 586, 587], "note": 561, "nuclearmedicineimagestorag": 417, "numpy_handl": [204, 207, 548], "offici": 591, "oper": 49, "ophthalmicaxialmeasurementsstorag": 418, "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorag": 419, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 420, "ophthalmicphotography16bitimagestorag": 421, "ophthalmicphotography8bitimagestorag": 422, "ophthalmicthicknessmapstorag": 423, "ophthalmictomographyimagestorag": 424, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 425, "option": [23, 24, 26, 29, 33, 55, 585, 591], "other": [26, 27, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571], "output": [6, 7, 8], "overlai": [48, 204, 553], "overlay_arrai": 48, "pack_bit": [248, 267], "packag": [42, 43, 592], "palett": 49, "paramet": [36, 37, 38], "parametricmapstorag": 428, "pars": 66, "parse_basic_offset": 150, "parse_frag": 151, "part": [24, 26], "parti": [43, 592], "path": 587, "patientradiationdosesrstorag": 429, "performedimagingagentadministrationsrstorag": 430, "person": 22, "personnam": 522, "photoacousticimagestorag": 431, "photometr": [36, 37], "pil": 47, "pillow": 591, "pillow_handl": 208, "pip": 591, "pixel": [9, 29, 30, 31, 34, 35, 36, 37, 38, 39, 43, 44, 49, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 550, 554, 555, 556, 557, 558, 592], "pixel_arrai": [49, 249, 268], "pixel_data_handl": [96, 205, 206, 207, 208, 209, 210, 550], "pixel_dtyp": 269, "planar": 37, "plannedimagingagentadministrationsrstorag": 432, "plot": [3, 4, 9], "plugin": [29, 30, 33, 34, 36, 37, 38], "positronemissiontomographyimagestorag": 433, "practic": 42, "prerequisit": [23, 44], "preview": [585, 586], "print": 8, "privat": [16, 46, 57], "private_dictionary_descript": 123, "private_dictionary_vm": 121, "private_dictionary_vr": 122, "privateblock": 133, "privatetransfersyntax": 434, "procedurelogstorag": 435, "process": [1, 6, 15, 29, 250, 251, 252, 253, 254, 255, 256, 557], "proof": 42, "protocolapprovalstorag": 436, "pseudocolorsoftcopypresentationstatestorag": 437, "pull": [585, 586], "pydicom": [2, 23, 24, 26, 27, 28, 33, 41, 42, 43, 45, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 581, 582, 584, 591, 592], "pydicom_implementation_uid": 426, "pydicom_root_uid": 427, "pyjpegl": [33, 591], "pylibjpeg": [33, 36, 591], "pylibjpeg_handl": 209, "pytest": 585, "python": [23, 32, 47], "question": 23, "radiopharmaceuticalradiationdosesrstorag": 461, "rais": 85, "rawdatael": 129, "rawdatastorag": 462, "re_valid_uid": 438, "re_valid_uid_prefix": 439, "read": [9, 10, 11, 71, 587], "read_dataset": 161, "read_deferred_data_el": 162, "read_file_meta_info": 163, "read_item": 152, "read_parti": 164, "read_preambl": 165, "read_sequ": 166, "read_sequence_item": 167, "read_undefined_length_valu": 178, "realworldvaluemappingstorag": 463, "recordnod": 171, "refer": [53, 551], "register_transfer_syntax": 514, "releas": [561, 565, 591], "remov": [46, 561, 582, 589], "repeater_has_keyword": 124, "repeater_has_tag": 125, "report": 593, "represent": [37, 58, 59, 61, 62, 64], "request": [585, 586], "requir": [23, 30, 34, 585], "rescal": 49, "reset_data_element_callback": 97, "reshape_pixel_arrai": 270, "respiratorywaveformstorag": 464, "restructuredtext": 52, "rle": [29, 38], "rle_handl": 210, "rlelossless": 440, "rlelosslessdecod": 234, "rlelosslessencod": 242, "rletransfersyntax": 441, "roboticarmradiationstorag": 465, "roboticradiationrecordstorag": 466, "routinescalpelectroencephalogramwaveformstorag": 467, "rtbeamsdeliveryinstructionstorag": 442, "rtbeamstreatmentrecordstorag": 443, "rtbrachyapplicationsetupdeliveryinstructionstorag": 444, "rtbrachytreatmentrecordstorag": 445, "rtdosestorag": 446, "rtimagestorag": 447, "rtionbeamstreatmentrecordstorag": 448, "rtionplanstorag": 449, "rtpatientpositionacquisitioninstructionstorag": 450, "rtphysicianintentstorag": 451, "rtplan": 11, "rtplanstorag": 452, "rtradiationrecordsetstorag": 453, "rtradiationsalvagerecordstorag": 454, "rtradiationsetdeliveryinstructionstorag": 455, "rtradiationsetstorag": 456, "rtsegmentannotationstorag": 457, "rtstructuresetstorag": 458, "rttreatmentpreparationstorag": 459, "rttreatmentsummaryrecordstorag": 460, "run": 585, "sagitt": 4, "scratch": 51, "secondarycaptureimagestorag": 471, "segmentationstorag": 472, "segmentedvolumerenderingvolumetricpresentationstatestorag": 473, "sequenc": [18, 41, 62, 272, 587], "set": [8, 10, 46, 74, 98, 589], "show": [0, 14, 26, 28], "show_file_meta": 99, "simpl": [24, 26], "simplifiedadultechosrstorag": 474, "singl": 17, "size_in_byt": 202, "sleepelectroencephalogramwaveformstorag": 475, "slice": 4, "smptest211020uncompressedinterlacedactivevideo": 468, "smptest211020uncompressedprogressiveactivevideo": 469, "smptest211030pcmdigitalaudio": 470, "sop": [559, 589], "sourc": 585, "space": 49, "spatialfiducialsstorag": 476, "spatialregistrationstorag": 477, "special": 64, "spectacleprescriptionreportstorag": 478, "stage": 589, "standard": 587, "start": 53, "step": 587, "stereometricrelationshipstorag": 479, "storag": 559, "store": 36, "structur": 593, "style": 52, "sub": 554, "subjectiverefractionmeasurementsstorag": 480, "suit": 585, "support": [43, 44, 588], "surfacescanmeshstorag": 481, "surfacescanpointcloudstorag": 482, "surfacesegmentationstorag": 483, "syntax": [43, 44, 559], "tag": [41, 63, 273, 274, 275, 276], "tag_for_keyword": 126, "tag_in_except": 276, "test": [585, 591], "thi": [561, 564, 565], "third": [43, 592], "time": [5, 13, 19, 21, 583], "tkinter": 47, "tm": 523, "tomotherapeuticradiationrecordstorag": 484, "tomotherapeuticradiationstorag": 485, "tractographyresultsstorag": 486, "transfer": [43, 44, 559], "tree": 0, "tupletag": 275, "tutori": 590, "twelveleadecgwaveformstorag": 487, "type": [32, 52], "uid": [277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 559], "ultrasoundimagestorag": 489, "ultrasoundmultiframeimagestorag": 490, "uncompressedtransfersyntax": 491, "unicod": 22, "unpack_bit": [257, 271], "us": [0, 2, 23, 43, 47, 51, 591, 592], "usag": [44, 68], "use_ds_decim": 100, "use_ds_numpi": 101, "use_is_numpi": 102, "user": [45, 53], "util": [57, 66, 72, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 558, 559], "valid": [36, 37, 38, 42], "validate_file_meta": 134, "valu": [61, 62, 64, 65, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547], "valuerep": [64, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "variablemodalitylutsoftcopypresentationstatestorag": 497, "version": [23, 42, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 591], "videoendoscopicimagestorag": 498, "videomicroscopicimagestorag": 499, "videophotographicimagestorag": 500, "view": [47, 587], "visualacuitymeasurementsstorag": 501, "vlendoscopicimagestorag": 492, "vlmicroscopicimagestorag": 493, "vlphotographicimagestorag": 494, "vlslidecoordinatesmicroscopicimagestorag": 495, "vlwholeslidemicroscopyimagestorag": 496, "voi": 49, "volumerenderingvolumetricpresentationstatestorag": 502, "vr": [32, 524], "warn": 86, "waveform": [3, 50, 548, 560, 594], "waveform_arrai": 50, "what": [23, 585, 586], "widefieldophthalmicphotography3dcoordinatesimagestorag": 503, "widefieldophthalmicphotographystereographicprojectionimagestorag": 504, "window": 49, "work": [14, 18, 48, 49, 50, 588], "write": [12, 51, 52, 73, 585, 587], "write_atvalu": 183, "write_da": 184, "write_data_el": 192, "write_dataset": 193, "write_dt": 185, "write_file_meta_info": 194, "write_numb": 196, "write_number_str": 195, "write_obvalu": 186, "write_owvalu": 187, "write_pn": 188, "write_sequ": 197, "write_sequence_item": 198, "write_str": 199, "write_text": 200, "write_tm": 189, "write_ui": 190, "write_un": 191, "wxpython": 47, "xadefinedprocedureprotocolstorag": 505, "xaperformedprocedureprotocolstorag": 506, "xaxrfgrayscalesoftcopypresentationstatestorag": 507, "xray3dangiographicimagestorag": 508, "xray3dcraniofacialimagestorag": 509, "xrayangiographicimagestorag": 510, "xrayradiationdosesrstorag": 511, "xrayradiofluoroscopicimagestorag": 512, "your": [42, 585, 586]}})