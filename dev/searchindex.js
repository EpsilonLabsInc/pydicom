Search.setIndex({"docnames": ["auto_examples/dicomtree", "auto_examples/image_processing/index", "auto_examples/image_processing/plot_downsize_image", "auto_examples/image_processing/plot_waveforms", "auto_examples/image_processing/reslice", "auto_examples/image_processing/sg_execution_times", "auto_examples/index", "auto_examples/input_output/index", "auto_examples/input_output/plot_printing_dataset", "auto_examples/input_output/plot_read_dicom", "auto_examples/input_output/plot_read_fileset", "auto_examples/input_output/plot_read_rtplan", "auto_examples/input_output/plot_write_dicom", "auto_examples/input_output/sg_execution_times", "auto_examples/memory_dataset", "auto_examples/metadata_processing/index", "auto_examples/metadata_processing/plot_add_dict_entries", "auto_examples/metadata_processing/plot_anonymize", "auto_examples/metadata_processing/plot_sequences", "auto_examples/metadata_processing/sg_execution_times", "auto_examples/plot_dicom_difference", "auto_examples/sg_execution_times", "auto_examples/show_charset_name", "faq/index", "guides/cli/cli_codify", "guides/cli/cli_dev", "guides/cli/cli_guide", "guides/cli/cli_intro", "guides/cli/cli_show", "guides/decoding/decoder_plugin_options", "guides/decoding/decoder_plugins", "guides/decoding/index", "guides/element_value_types", "guides/encoding/encoder_plugin_options", "guides/encoding/encoder_plugins", "guides/encoding/index", "guides/encoding/rle_lossless", "guides/glossary", "guides/index", "guides/writing_documentation", "index", "old/base_element", "old/best_practices", "old/getting_started", "old/image_data_compression", "old/image_data_handlers", "old/private_data_elements", "old/pydicom_user_guide", "old/ref_guide", "old/viewing_images", "old/working_with_overlays", "old/working_with_pixel_data", "old/working_with_waveforms", "old/writing_files", "reference/charset", "reference/config", "reference/data", "reference/datadict", "reference/dataset", "reference/elem", "reference/elem.dataelem", "reference/elem.multival", "reference/elem.sequence", "reference/elem.tag", "reference/elem.valuerep", "reference/elem.values", "reference/encaps", "reference/encoders", "reference/errors", "reference/examples", "reference/fileio", "reference/fileio.base", "reference/fileio.read", "reference/fileio.util", "reference/fileio.write", "reference/fileset", "reference/generated/pydicom.charset.convert_encodings", "reference/generated/pydicom.charset.decode_bytes", "reference/generated/pydicom.charset.decode_element", "reference/generated/pydicom.charset.encode_string", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS", "reference/generated/pydicom.config.DS_decimal", "reference/generated/pydicom.config.DS_numpy", "reference/generated/pydicom.config.IGNORE", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR", "reference/generated/pydicom.config.RAISE", "reference/generated/pydicom.config.WARN", "reference/generated/pydicom.config.allow_DS_float", "reference/generated/pydicom.config.assume_implicit_vr_switch", "reference/generated/pydicom.config.convert_wrong_length_to_UN", "reference/generated/pydicom.config.data_element_callback", "reference/generated/pydicom.config.data_element_callback_kwargs", "reference/generated/pydicom.config.datetime_conversion", "reference/generated/pydicom.config.debug", "reference/generated/pydicom.config.enforce_valid_values", "reference/generated/pydicom.config.future_behavior", "reference/generated/pydicom.config.pixel_data_handlers", "reference/generated/pydicom.config.reset_data_element_callback", "reference/generated/pydicom.config.settings", "reference/generated/pydicom.config.show_file_meta", "reference/generated/pydicom.config.use_DS_decimal", "reference/generated/pydicom.config.use_DS_numpy", "reference/generated/pydicom.config.use_IS_numpy", "reference/generated/pydicom.data.get_charset_files", "reference/generated/pydicom.data.get_palette_files", "reference/generated/pydicom.data.get_testdata_file", "reference/generated/pydicom.data.get_testdata_files", "reference/generated/pydicom.datadict.add_dict_entries", "reference/generated/pydicom.datadict.add_dict_entry", "reference/generated/pydicom.datadict.add_private_dict_entries", "reference/generated/pydicom.datadict.add_private_dict_entry", "reference/generated/pydicom.datadict.dictionary_VM", "reference/generated/pydicom.datadict.dictionary_VR", "reference/generated/pydicom.datadict.dictionary_description", "reference/generated/pydicom.datadict.dictionary_has_tag", "reference/generated/pydicom.datadict.dictionary_is_retired", "reference/generated/pydicom.datadict.dictionary_keyword", "reference/generated/pydicom.datadict.get_entry", "reference/generated/pydicom.datadict.get_private_entry", "reference/generated/pydicom.datadict.keyword_for_tag", "reference/generated/pydicom.datadict.mask_match", "reference/generated/pydicom.datadict.private_dictionary_VM", "reference/generated/pydicom.datadict.private_dictionary_VR", "reference/generated/pydicom.datadict.private_dictionary_description", "reference/generated/pydicom.datadict.repeater_has_keyword", "reference/generated/pydicom.datadict.repeater_has_tag", "reference/generated/pydicom.datadict.tag_for_keyword", "reference/generated/pydicom.dataelem.DataElement", "reference/generated/pydicom.dataelem.DataElement_from_raw", "reference/generated/pydicom.dataelem.RawDataElement", "reference/generated/pydicom.dataset.Dataset", "reference/generated/pydicom.dataset.FileDataset", "reference/generated/pydicom.dataset.FileMetaDataset", "reference/generated/pydicom.dataset.PrivateBlock", "reference/generated/pydicom.dataset.validate_file_meta", "reference/generated/pydicom.encaps.decode_data_sequence", "reference/generated/pydicom.encaps.defragment_data", "reference/generated/pydicom.encaps.encapsulate", "reference/generated/pydicom.encaps.encapsulate_extended", "reference/generated/pydicom.encaps.fragment_frame", "reference/generated/pydicom.encaps.generate_fragmented_frames", "reference/generated/pydicom.encaps.generate_fragments", "reference/generated/pydicom.encaps.generate_frames", "reference/generated/pydicom.encaps.generate_pixel_data", "reference/generated/pydicom.encaps.generate_pixel_data_fragment", "reference/generated/pydicom.encaps.generate_pixel_data_frame", "reference/generated/pydicom.encaps.get_frame", "reference/generated/pydicom.encaps.get_frame_offsets", "reference/generated/pydicom.encaps.itemize_fragment", "reference/generated/pydicom.encaps.itemize_frame", "reference/generated/pydicom.encaps.parse_basic_offsets", "reference/generated/pydicom.encaps.parse_fragments", "reference/generated/pydicom.encaps.read_item", "reference/generated/pydicom.encoders.RLELosslessEncoder", "reference/generated/pydicom.encoders.base.Encoder", "reference/generated/pydicom.encoders.get_encoder", "reference/generated/pydicom.errors.InvalidDicomError", "reference/generated/pydicom.filebase.DicomBytesIO", "reference/generated/pydicom.filebase.DicomFile", "reference/generated/pydicom.filebase.DicomFileLike", "reference/generated/pydicom.filebase.DicomIO", "reference/generated/pydicom.filereader.data_element_generator", "reference/generated/pydicom.filereader.data_element_offset_to_value", "reference/generated/pydicom.filereader.dcmread", "reference/generated/pydicom.filereader.read_dataset", "reference/generated/pydicom.filereader.read_deferred_data_element", "reference/generated/pydicom.filereader.read_file_meta_info", "reference/generated/pydicom.filereader.read_partial", "reference/generated/pydicom.filereader.read_preamble", "reference/generated/pydicom.filereader.read_sequence", "reference/generated/pydicom.filereader.read_sequence_item", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS", "reference/generated/pydicom.fileset.FileInstance", "reference/generated/pydicom.fileset.FileSet", "reference/generated/pydicom.fileset.RecordNode", "reference/generated/pydicom.fileset.generate_filename", "reference/generated/pydicom.fileset.is_conformant_file_id", "reference/generated/pydicom.fileutil.absorb_delimiter_item", "reference/generated/pydicom.fileutil.find_bytes", "reference/generated/pydicom.fileutil.find_delimiter", "reference/generated/pydicom.fileutil.length_of_undefined_length", "reference/generated/pydicom.fileutil.read_undefined_length_value", "reference/generated/pydicom.filewriter.correct_ambiguous_vr", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element", "reference/generated/pydicom.filewriter.dcmwrite", "reference/generated/pydicom.filewriter.multi_string", "reference/generated/pydicom.filewriter.write_ATvalue", "reference/generated/pydicom.filewriter.write_DA", "reference/generated/pydicom.filewriter.write_DT", "reference/generated/pydicom.filewriter.write_OBvalue", "reference/generated/pydicom.filewriter.write_OWvalue", "reference/generated/pydicom.filewriter.write_PN", "reference/generated/pydicom.filewriter.write_TM", "reference/generated/pydicom.filewriter.write_UI", "reference/generated/pydicom.filewriter.write_UN", "reference/generated/pydicom.filewriter.write_data_element", "reference/generated/pydicom.filewriter.write_dataset", "reference/generated/pydicom.filewriter.write_file_meta_info", "reference/generated/pydicom.filewriter.write_number_string", "reference/generated/pydicom.filewriter.write_numbers", "reference/generated/pydicom.filewriter.write_sequence", "reference/generated/pydicom.filewriter.write_sequence_item", "reference/generated/pydicom.filewriter.write_string", "reference/generated/pydicom.filewriter.write_text", "reference/generated/pydicom.misc.is_dicom", "reference/generated/pydicom.misc.size_in_bytes", "reference/generated/pydicom.multival.MultiValue", "reference/generated/pydicom.overlays.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut", "reference/generated/pydicom.pixel_data_handlers.apply_rescale", "reference/generated/pydicom.pixel_data_handlers.apply_voi", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut", "reference/generated/pydicom.pixel_data_handlers.apply_windowing", "reference/generated/pydicom.pixel_data_handlers.convert_color_space", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler", "reference/generated/pydicom.pixel_data_handlers.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.pillow_handler", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler", "reference/generated/pydicom.pixel_data_handlers.rle_handler", "reference/generated/pydicom.pixel_data_handlers.util", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner", "reference/generated/pydicom.pixels.decoders.base.Decoder", "reference/generated/pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder", "reference/generated/pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.base.RLELosslessDecoder", "reference/generated/pydicom.sequence.Sequence", "reference/generated/pydicom.tag.BaseTag", "reference/generated/pydicom.tag.Tag", "reference/generated/pydicom.tag.TupleTag", "reference/generated/pydicom.tag.tag_in_exception", "reference/generated/pydicom.uid.AcquisitionContextSRStorage", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage", "reference/generated/pydicom.uid.AllTransferSyntaxes", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage", "reference/generated/pydicom.uid.BasicTextSRStorage", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.BodyPositionWaveformStorage", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.CTImageStorage", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage", "reference/generated/pydicom.uid.ChestCADSRStorage", "reference/generated/pydicom.uid.ColonCADSRStorage", "reference/generated/pydicom.uid.ColorPaletteStorage", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.Comprehensive3DSRStorage", "reference/generated/pydicom.uid.ComprehensiveSRStorage", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage", "reference/generated/pydicom.uid.CornealTopographyMapStorage", "reference/generated/pydicom.uid.DICOS2DAITStorage", "reference/generated/pydicom.uid.DICOS3DAITStorage", "reference/generated/pydicom.uid.DICOSCTImageStorage", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.EddyCurrentImageStorage", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage", "reference/generated/pydicom.uid.EncapsulatedCDAStorage", "reference/generated/pydicom.uid.EncapsulatedMTLStorage", "reference/generated/pydicom.uid.EncapsulatedOBJStorage", "reference/generated/pydicom.uid.EncapsulatedPDFStorage", "reference/generated/pydicom.uid.EncapsulatedSTLStorage", "reference/generated/pydicom.uid.EnhancedCTImageStorage", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage", "reference/generated/pydicom.uid.EnhancedMRImageStorage", "reference/generated/pydicom.uid.EnhancedPETImageStorage", "reference/generated/pydicom.uid.EnhancedRTImageStorage", "reference/generated/pydicom.uid.EnhancedSRStorage", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage", "reference/generated/pydicom.uid.EnhancedXAImageStorage", "reference/generated/pydicom.uid.EnhancedXRFImageStorage", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.ExplicitVRBigEndian", "reference/generated/pydicom.uid.ExplicitVRLittleEndian", "reference/generated/pydicom.uid.ExtensibleSRStorage", "reference/generated/pydicom.uid.General32bitECGWaveformStorage", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage", "reference/generated/pydicom.uid.GeneralECGWaveformStorage", "reference/generated/pydicom.uid.GenericImplantTemplateStorage", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.HEVCM10P51", "reference/generated/pydicom.uid.HEVCMP51", "reference/generated/pydicom.uid.HTJ2K", "reference/generated/pydicom.uid.HTJ2KLossless", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL", "reference/generated/pydicom.uid.HangingProtocolStorage", "reference/generated/pydicom.uid.HemodynamicWaveformStorage", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage", "reference/generated/pydicom.uid.ImplantationPlanSRStorage", "reference/generated/pydicom.uid.ImplicitVRLittleEndian", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pydicom.uid.InventoryStorage", "reference/generated/pydicom.uid.JPEG2000", "reference/generated/pydicom.uid.JPEG2000Lossless", "reference/generated/pydicom.uid.JPEG2000MC", "reference/generated/pydicom.uid.JPEG2000MCLossless", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes", "reference/generated/pydicom.uid.JPEGBaseline8Bit", "reference/generated/pydicom.uid.JPEGExtended12Bit", "reference/generated/pydicom.uid.JPEGLSLossless", "reference/generated/pydicom.uid.JPEGLSNearLossless", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes", "reference/generated/pydicom.uid.JPEGLossless", "reference/generated/pydicom.uid.JPEGLosslessSV1", "reference/generated/pydicom.uid.JPEGTransferSyntaxes", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pydicom.uid.LensometryMeasurementsStorage", "reference/generated/pydicom.uid.MPEG2MPHL", "reference/generated/pydicom.uid.MPEG2MPHLF", "reference/generated/pydicom.uid.MPEG2MPML", "reference/generated/pydicom.uid.MPEG2MPMLF", "reference/generated/pydicom.uid.MPEG4HP41", "reference/generated/pydicom.uid.MPEG4HP41BD", "reference/generated/pydicom.uid.MPEG4HP41BDF", "reference/generated/pydicom.uid.MPEG4HP41F", "reference/generated/pydicom.uid.MPEG4HP422D", "reference/generated/pydicom.uid.MPEG4HP422DF", "reference/generated/pydicom.uid.MPEG4HP423D", "reference/generated/pydicom.uid.MPEG4HP423DF", "reference/generated/pydicom.uid.MPEG4HP42STEREO", "reference/generated/pydicom.uid.MPEG4HP42STEREOF", "reference/generated/pydicom.uid.MPEGTransferSyntaxes", "reference/generated/pydicom.uid.MRImageStorage", "reference/generated/pydicom.uid.MRSpectroscopyStorage", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pydicom.uid.MammographyCADSRStorage", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.NuclearMedicineImageStorage", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID", "reference/generated/pydicom.uid.ParametricMapStorage", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PhotoacousticImageStorage", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage", "reference/generated/pydicom.uid.PrivateTransferSyntaxes", "reference/generated/pydicom.uid.ProcedureLogStorage", "reference/generated/pydicom.uid.ProtocolApprovalStorage", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.RE_VALID_UID", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX", "reference/generated/pydicom.uid.RLELossless", "reference/generated/pydicom.uid.RLETransferSyntaxes", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage", "reference/generated/pydicom.uid.RTDoseStorage", "reference/generated/pydicom.uid.RTImageStorage", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTIonPlanStorage", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "reference/generated/pydicom.uid.RTPhysicianIntentStorage", "reference/generated/pydicom.uid.RTPlanStorage", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTRadiationSetStorage", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage", "reference/generated/pydicom.uid.RTStructureSetStorage", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pydicom.uid.RawDataStorage", "reference/generated/pydicom.uid.RealWorldValueMappingStorage", "reference/generated/pydicom.uid.RespiratoryWaveformStorage", "reference/generated/pydicom.uid.RoboticArmRadiationStorage", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage", "reference/generated/pydicom.uid.SegmentationStorage", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SpatialFiducialsStorage", "reference/generated/pydicom.uid.SpatialRegistrationStorage", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage", "reference/generated/pydicom.uid.StereometricRelationshipStorage", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage", "reference/generated/pydicom.uid.SurfaceScanMeshStorage", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage", "reference/generated/pydicom.uid.SurfaceSegmentationStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage", "reference/generated/pydicom.uid.TractographyResultsStorage", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage", "reference/generated/pydicom.uid.UID", "reference/generated/pydicom.uid.UltrasoundImageStorage", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes", "reference/generated/pydicom.uid.VLEndoscopicImageStorage", "reference/generated/pydicom.uid.VLMicroscopicImageStorage", "reference/generated/pydicom.uid.VLPhotographicImageStorage", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage", "reference/generated/pydicom.uid.VideoPhotographicImageStorage", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage", "reference/generated/pydicom.uid.XRayAngiographicImageStorage", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage", "reference/generated/pydicom.uid.generate_uid", "reference/generated/pydicom.uid.register_transfer_syntax", "reference/generated/pydicom.valuerep.DA", "reference/generated/pydicom.valuerep.DS", "reference/generated/pydicom.valuerep.DSdecimal", "reference/generated/pydicom.valuerep.DSfloat", "reference/generated/pydicom.valuerep.DT", "reference/generated/pydicom.valuerep.IS", "reference/generated/pydicom.valuerep.ISfloat", "reference/generated/pydicom.valuerep.PersonName", "reference/generated/pydicom.valuerep.TM", "reference/generated/pydicom.valuerep.VR", "reference/generated/pydicom.valuerep.format_number_as_ds", "reference/generated/pydicom.valuerep.is_valid_ds", "reference/generated/pydicom.values.convert_AE_string", "reference/generated/pydicom.values.convert_ATvalue", "reference/generated/pydicom.values.convert_DA_string", "reference/generated/pydicom.values.convert_DS_string", "reference/generated/pydicom.values.convert_DT_string", "reference/generated/pydicom.values.convert_IS_string", "reference/generated/pydicom.values.convert_OBvalue", "reference/generated/pydicom.values.convert_OWvalue", "reference/generated/pydicom.values.convert_PN", "reference/generated/pydicom.values.convert_SQ", "reference/generated/pydicom.values.convert_TM_string", "reference/generated/pydicom.values.convert_UI", "reference/generated/pydicom.values.convert_UN", "reference/generated/pydicom.values.convert_UR_string", "reference/generated/pydicom.values.convert_numbers", "reference/generated/pydicom.values.convert_single_string", "reference/generated/pydicom.values.convert_string", "reference/generated/pydicom.values.convert_tag", "reference/generated/pydicom.values.convert_text", "reference/generated/pydicom.values.convert_value", "reference/generated/pydicom.values.multi_string", "reference/generated/pydicom.waveforms.numpy_handler", "reference/handlers", "reference/handlers.pixel_data", "reference/index", "reference/misc", "reference/overlays", "reference/pixels", "reference/pixels.decoders", "reference/uid", "reference/waveforms", "release_notes/index", "release_notes/v0.9.2", "release_notes/v0.9.3", "release_notes/v0.9.4", "release_notes/v0.9.5", "release_notes/v0.9.6", "release_notes/v0.9.7", "release_notes/v0.9.8", "release_notes/v0.9.9", "release_notes/v1.0.0", "release_notes/v1.1.0", "release_notes/v1.2.0", "release_notes/v1.3.0", "release_notes/v1.4.0", "release_notes/v1.4.1", "release_notes/v2.0.0", "release_notes/v2.1.0", "release_notes/v2.1.1", "release_notes/v2.2.0", "release_notes/v2.3.0", "release_notes/v2.4.0", "release_notes/v3.0.0", "sg_execution_times", "tutorials/contributing", "tutorials/contributing_code", "tutorials/contributing_docs", "tutorials/dataset_basics", "tutorials/dicom_json", "tutorials/filesets", "tutorials/index", "tutorials/installation", "tutorials/pixel_data/compressing", "tutorials/sr_basics", "tutorials/waveforms"], "filenames": ["auto_examples/dicomtree.rst", "auto_examples/image_processing/index.rst", "auto_examples/image_processing/plot_downsize_image.rst", "auto_examples/image_processing/plot_waveforms.rst", "auto_examples/image_processing/reslice.rst", "auto_examples/image_processing/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/input_output/index.rst", "auto_examples/input_output/plot_printing_dataset.rst", "auto_examples/input_output/plot_read_dicom.rst", "auto_examples/input_output/plot_read_fileset.rst", "auto_examples/input_output/plot_read_rtplan.rst", "auto_examples/input_output/plot_write_dicom.rst", "auto_examples/input_output/sg_execution_times.rst", "auto_examples/memory_dataset.rst", "auto_examples/metadata_processing/index.rst", "auto_examples/metadata_processing/plot_add_dict_entries.rst", "auto_examples/metadata_processing/plot_anonymize.rst", "auto_examples/metadata_processing/plot_sequences.rst", "auto_examples/metadata_processing/sg_execution_times.rst", "auto_examples/plot_dicom_difference.rst", "auto_examples/sg_execution_times.rst", "auto_examples/show_charset_name.rst", "faq/index.rst", "guides/cli/cli_codify.rst", "guides/cli/cli_dev.rst", "guides/cli/cli_guide.rst", "guides/cli/cli_intro.rst", "guides/cli/cli_show.rst", "guides/decoding/decoder_plugin_options.rst", "guides/decoding/decoder_plugins.rst", "guides/decoding/index.rst", "guides/element_value_types.rst", "guides/encoding/encoder_plugin_options.rst", "guides/encoding/encoder_plugins.rst", "guides/encoding/index.rst", "guides/encoding/rle_lossless.rst", "guides/glossary.rst", "guides/index.rst", "guides/writing_documentation.rst", "index.rst", "old/base_element.rst", "old/best_practices.rst", "old/getting_started.rst", "old/image_data_compression.rst", "old/image_data_handlers.rst", "old/private_data_elements.rst", "old/pydicom_user_guide.rst", "old/ref_guide.rst", "old/viewing_images.rst", "old/working_with_overlays.rst", "old/working_with_pixel_data.rst", "old/working_with_waveforms.rst", "old/writing_files.rst", "reference/charset.rst", "reference/config.rst", "reference/data.rst", "reference/datadict.rst", "reference/dataset.rst", "reference/elem.rst", "reference/elem.dataelem.rst", "reference/elem.multival.rst", "reference/elem.sequence.rst", "reference/elem.tag.rst", "reference/elem.valuerep.rst", "reference/elem.values.rst", "reference/encaps.rst", "reference/encoders.rst", "reference/errors.rst", "reference/examples.rst", "reference/fileio.rst", "reference/fileio.base.rst", "reference/fileio.read.rst", "reference/fileio.util.rst", "reference/fileio.write.rst", "reference/fileset.rst", "reference/generated/pydicom.charset.convert_encodings.rst", "reference/generated/pydicom.charset.decode_bytes.rst", "reference/generated/pydicom.charset.decode_element.rst", "reference/generated/pydicom.charset.encode_string.rst", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS.rst", "reference/generated/pydicom.config.DS_decimal.rst", "reference/generated/pydicom.config.DS_numpy.rst", "reference/generated/pydicom.config.IGNORE.rst", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR.rst", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR.rst", "reference/generated/pydicom.config.RAISE.rst", "reference/generated/pydicom.config.WARN.rst", "reference/generated/pydicom.config.allow_DS_float.rst", "reference/generated/pydicom.config.assume_implicit_vr_switch.rst", "reference/generated/pydicom.config.convert_wrong_length_to_UN.rst", "reference/generated/pydicom.config.data_element_callback.rst", "reference/generated/pydicom.config.data_element_callback_kwargs.rst", "reference/generated/pydicom.config.datetime_conversion.rst", "reference/generated/pydicom.config.debug.rst", "reference/generated/pydicom.config.enforce_valid_values.rst", "reference/generated/pydicom.config.future_behavior.rst", "reference/generated/pydicom.config.pixel_data_handlers.rst", "reference/generated/pydicom.config.reset_data_element_callback.rst", "reference/generated/pydicom.config.settings.rst", "reference/generated/pydicom.config.show_file_meta.rst", "reference/generated/pydicom.config.use_DS_decimal.rst", "reference/generated/pydicom.config.use_DS_numpy.rst", "reference/generated/pydicom.config.use_IS_numpy.rst", "reference/generated/pydicom.data.get_charset_files.rst", "reference/generated/pydicom.data.get_palette_files.rst", "reference/generated/pydicom.data.get_testdata_file.rst", "reference/generated/pydicom.data.get_testdata_files.rst", "reference/generated/pydicom.datadict.add_dict_entries.rst", "reference/generated/pydicom.datadict.add_dict_entry.rst", "reference/generated/pydicom.datadict.add_private_dict_entries.rst", "reference/generated/pydicom.datadict.add_private_dict_entry.rst", "reference/generated/pydicom.datadict.dictionary_VM.rst", "reference/generated/pydicom.datadict.dictionary_VR.rst", "reference/generated/pydicom.datadict.dictionary_description.rst", "reference/generated/pydicom.datadict.dictionary_has_tag.rst", "reference/generated/pydicom.datadict.dictionary_is_retired.rst", "reference/generated/pydicom.datadict.dictionary_keyword.rst", "reference/generated/pydicom.datadict.get_entry.rst", "reference/generated/pydicom.datadict.get_private_entry.rst", "reference/generated/pydicom.datadict.keyword_for_tag.rst", "reference/generated/pydicom.datadict.mask_match.rst", "reference/generated/pydicom.datadict.private_dictionary_VM.rst", "reference/generated/pydicom.datadict.private_dictionary_VR.rst", "reference/generated/pydicom.datadict.private_dictionary_description.rst", "reference/generated/pydicom.datadict.repeater_has_keyword.rst", "reference/generated/pydicom.datadict.repeater_has_tag.rst", "reference/generated/pydicom.datadict.tag_for_keyword.rst", "reference/generated/pydicom.dataelem.DataElement.rst", "reference/generated/pydicom.dataelem.DataElement_from_raw.rst", "reference/generated/pydicom.dataelem.RawDataElement.rst", "reference/generated/pydicom.dataset.Dataset.rst", "reference/generated/pydicom.dataset.FileDataset.rst", "reference/generated/pydicom.dataset.FileMetaDataset.rst", "reference/generated/pydicom.dataset.PrivateBlock.rst", "reference/generated/pydicom.dataset.validate_file_meta.rst", "reference/generated/pydicom.encaps.decode_data_sequence.rst", "reference/generated/pydicom.encaps.defragment_data.rst", "reference/generated/pydicom.encaps.encapsulate.rst", "reference/generated/pydicom.encaps.encapsulate_extended.rst", "reference/generated/pydicom.encaps.fragment_frame.rst", "reference/generated/pydicom.encaps.generate_fragmented_frames.rst", "reference/generated/pydicom.encaps.generate_fragments.rst", "reference/generated/pydicom.encaps.generate_frames.rst", "reference/generated/pydicom.encaps.generate_pixel_data.rst", "reference/generated/pydicom.encaps.generate_pixel_data_fragment.rst", "reference/generated/pydicom.encaps.generate_pixel_data_frame.rst", "reference/generated/pydicom.encaps.get_frame.rst", "reference/generated/pydicom.encaps.get_frame_offsets.rst", "reference/generated/pydicom.encaps.itemize_fragment.rst", "reference/generated/pydicom.encaps.itemize_frame.rst", "reference/generated/pydicom.encaps.parse_basic_offsets.rst", "reference/generated/pydicom.encaps.parse_fragments.rst", "reference/generated/pydicom.encaps.read_item.rst", "reference/generated/pydicom.encoders.RLELosslessEncoder.rst", "reference/generated/pydicom.encoders.base.Encoder.rst", "reference/generated/pydicom.encoders.get_encoder.rst", "reference/generated/pydicom.errors.InvalidDicomError.rst", "reference/generated/pydicom.filebase.DicomBytesIO.rst", "reference/generated/pydicom.filebase.DicomFile.rst", "reference/generated/pydicom.filebase.DicomFileLike.rst", "reference/generated/pydicom.filebase.DicomIO.rst", "reference/generated/pydicom.filereader.data_element_generator.rst", "reference/generated/pydicom.filereader.data_element_offset_to_value.rst", "reference/generated/pydicom.filereader.dcmread.rst", "reference/generated/pydicom.filereader.read_dataset.rst", "reference/generated/pydicom.filereader.read_deferred_data_element.rst", "reference/generated/pydicom.filereader.read_file_meta_info.rst", "reference/generated/pydicom.filereader.read_partial.rst", "reference/generated/pydicom.filereader.read_preamble.rst", "reference/generated/pydicom.filereader.read_sequence.rst", "reference/generated/pydicom.filereader.read_sequence_item.rst", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS.rst", "reference/generated/pydicom.fileset.FileInstance.rst", "reference/generated/pydicom.fileset.FileSet.rst", "reference/generated/pydicom.fileset.RecordNode.rst", "reference/generated/pydicom.fileset.generate_filename.rst", "reference/generated/pydicom.fileset.is_conformant_file_id.rst", "reference/generated/pydicom.fileutil.absorb_delimiter_item.rst", "reference/generated/pydicom.fileutil.find_bytes.rst", "reference/generated/pydicom.fileutil.find_delimiter.rst", "reference/generated/pydicom.fileutil.length_of_undefined_length.rst", "reference/generated/pydicom.fileutil.read_undefined_length_value.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element.rst", "reference/generated/pydicom.filewriter.dcmwrite.rst", "reference/generated/pydicom.filewriter.multi_string.rst", "reference/generated/pydicom.filewriter.write_ATvalue.rst", "reference/generated/pydicom.filewriter.write_DA.rst", "reference/generated/pydicom.filewriter.write_DT.rst", "reference/generated/pydicom.filewriter.write_OBvalue.rst", "reference/generated/pydicom.filewriter.write_OWvalue.rst", "reference/generated/pydicom.filewriter.write_PN.rst", "reference/generated/pydicom.filewriter.write_TM.rst", "reference/generated/pydicom.filewriter.write_UI.rst", "reference/generated/pydicom.filewriter.write_UN.rst", "reference/generated/pydicom.filewriter.write_data_element.rst", "reference/generated/pydicom.filewriter.write_dataset.rst", "reference/generated/pydicom.filewriter.write_file_meta_info.rst", "reference/generated/pydicom.filewriter.write_number_string.rst", "reference/generated/pydicom.filewriter.write_numbers.rst", "reference/generated/pydicom.filewriter.write_sequence.rst", "reference/generated/pydicom.filewriter.write_sequence_item.rst", "reference/generated/pydicom.filewriter.write_string.rst", "reference/generated/pydicom.filewriter.write_text.rst", "reference/generated/pydicom.misc.is_dicom.rst", "reference/generated/pydicom.misc.size_in_bytes.rst", "reference/generated/pydicom.multival.MultiValue.rst", "reference/generated/pydicom.overlays.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_rescale.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_windowing.rst", "reference/generated/pydicom.pixel_data_handlers.convert_color_space.rst", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler.rst", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler.rst", "reference/generated/pydicom.pixel_data_handlers.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pillow_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler.rst", "reference/generated/pydicom.pixel_data_handlers.rle_handler.rst", "reference/generated/pydicom.pixel_data_handlers.util.rst", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner.rst", "reference/generated/pydicom.pixels.decoders.base.Decoder.rst", "reference/generated/pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.RLELosslessDecoder.rst", "reference/generated/pydicom.sequence.Sequence.rst", "reference/generated/pydicom.tag.BaseTag.rst", "reference/generated/pydicom.tag.Tag.rst", "reference/generated/pydicom.tag.TupleTag.rst", "reference/generated/pydicom.tag.tag_in_exception.rst", "reference/generated/pydicom.uid.AcquisitionContextSRStorage.rst", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pydicom.uid.AllTransferSyntaxes.rst", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage.rst", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage.rst", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage.rst", "reference/generated/pydicom.uid.BasicTextSRStorage.rst", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.BodyPositionWaveformStorage.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CTImageStorage.rst", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pydicom.uid.ChestCADSRStorage.rst", "reference/generated/pydicom.uid.ColonCADSRStorage.rst", "reference/generated/pydicom.uid.ColorPaletteStorage.rst", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.Comprehensive3DSRStorage.rst", "reference/generated/pydicom.uid.ComprehensiveSRStorage.rst", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage.rst", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage.rst", "reference/generated/pydicom.uid.CornealTopographyMapStorage.rst", "reference/generated/pydicom.uid.DICOS2DAITStorage.rst", "reference/generated/pydicom.uid.DICOS3DAITStorage.rst", "reference/generated/pydicom.uid.DICOSCTImageStorage.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage.rst", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage.rst", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.EddyCurrentImageStorage.rst", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage.rst", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage.rst", "reference/generated/pydicom.uid.EncapsulatedCDAStorage.rst", "reference/generated/pydicom.uid.EncapsulatedMTLStorage.rst", "reference/generated/pydicom.uid.EncapsulatedOBJStorage.rst", "reference/generated/pydicom.uid.EncapsulatedPDFStorage.rst", "reference/generated/pydicom.uid.EncapsulatedSTLStorage.rst", "reference/generated/pydicom.uid.EnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.EnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.EnhancedRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedSRStorage.rst", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage.rst", "reference/generated/pydicom.uid.EnhancedXAImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRFImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.ExplicitVRBigEndian.rst", "reference/generated/pydicom.uid.ExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.ExtensibleSRStorage.rst", "reference/generated/pydicom.uid.General32bitECGWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralECGWaveformStorage.rst", "reference/generated/pydicom.uid.GenericImplantTemplateStorage.rst", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.HEVCM10P51.rst", "reference/generated/pydicom.uid.HEVCMP51.rst", "reference/generated/pydicom.uid.HTJ2K.rst", "reference/generated/pydicom.uid.HTJ2KLossless.rst", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL.rst", "reference/generated/pydicom.uid.HangingProtocolStorage.rst", "reference/generated/pydicom.uid.HemodynamicWaveformStorage.rst", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage.rst", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage.rst", "reference/generated/pydicom.uid.ImplantationPlanSRStorage.rst", "reference/generated/pydicom.uid.ImplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pydicom.uid.InventoryStorage.rst", "reference/generated/pydicom.uid.JPEG2000.rst", "reference/generated/pydicom.uid.JPEG2000Lossless.rst", "reference/generated/pydicom.uid.JPEG2000MC.rst", "reference/generated/pydicom.uid.JPEG2000MCLossless.rst", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGBaseline8Bit.rst", "reference/generated/pydicom.uid.JPEGExtended12Bit.rst", "reference/generated/pydicom.uid.JPEGLSLossless.rst", "reference/generated/pydicom.uid.JPEGLSNearLossless.rst", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGLossless.rst", "reference/generated/pydicom.uid.JPEGLosslessSV1.rst", "reference/generated/pydicom.uid.JPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate.rst", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.LensometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.MPEG2MPHL.rst", "reference/generated/pydicom.uid.MPEG2MPHLF.rst", "reference/generated/pydicom.uid.MPEG2MPML.rst", "reference/generated/pydicom.uid.MPEG2MPMLF.rst", "reference/generated/pydicom.uid.MPEG4HP41.rst", "reference/generated/pydicom.uid.MPEG4HP41BD.rst", "reference/generated/pydicom.uid.MPEG4HP41BDF.rst", "reference/generated/pydicom.uid.MPEG4HP41F.rst", "reference/generated/pydicom.uid.MPEG4HP422D.rst", "reference/generated/pydicom.uid.MPEG4HP422DF.rst", "reference/generated/pydicom.uid.MPEG4HP423D.rst", "reference/generated/pydicom.uid.MPEG4HP423DF.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREO.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREOF.rst", "reference/generated/pydicom.uid.MPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.MRImageStorage.rst", "reference/generated/pydicom.uid.MRSpectroscopyStorage.rst", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pydicom.uid.MammographyCADSRStorage.rst", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage.rst", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.NuclearMedicineImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage.rst", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID.rst", "reference/generated/pydicom.uid.ParametricMapStorage.rst", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PhotoacousticImageStorage.rst", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage.rst", "reference/generated/pydicom.uid.PrivateTransferSyntaxes.rst", "reference/generated/pydicom.uid.ProcedureLogStorage.rst", "reference/generated/pydicom.uid.ProtocolApprovalStorage.rst", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.RE_VALID_UID.rst", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX.rst", "reference/generated/pydicom.uid.RLELossless.rst", "reference/generated/pydicom.uid.RLETransferSyntaxes.rst", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTDoseStorage.rst", "reference/generated/pydicom.uid.RTImageStorage.rst", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTIonPlanStorage.rst", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage.rst", "reference/generated/pydicom.uid.RTPhysicianIntentStorage.rst", "reference/generated/pydicom.uid.RTPlanStorage.rst", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage.rst", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetStorage.rst", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage.rst", "reference/generated/pydicom.uid.RTStructureSetStorage.rst", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage.rst", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.RawDataStorage.rst", "reference/generated/pydicom.uid.RealWorldValueMappingStorage.rst", "reference/generated/pydicom.uid.RespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.RoboticArmRadiationStorage.rst", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio.rst", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.SegmentationStorage.rst", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SpatialFiducialsStorage.rst", "reference/generated/pydicom.uid.SpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage.rst", "reference/generated/pydicom.uid.StereometricRelationshipStorage.rst", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.SurfaceScanMeshStorage.rst", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage.rst", "reference/generated/pydicom.uid.SurfaceSegmentationStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage.rst", "reference/generated/pydicom.uid.TractographyResultsStorage.rst", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage.rst", "reference/generated/pydicom.uid.UID.rst", "reference/generated/pydicom.uid.UltrasoundImageStorage.rst", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes.rst", "reference/generated/pydicom.uid.VLEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VLMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage.rst", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage.rst", "reference/generated/pydicom.uid.XRayAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pydicom.uid.generate_uid.rst", "reference/generated/pydicom.uid.register_transfer_syntax.rst", "reference/generated/pydicom.valuerep.DA.rst", "reference/generated/pydicom.valuerep.DS.rst", "reference/generated/pydicom.valuerep.DSdecimal.rst", "reference/generated/pydicom.valuerep.DSfloat.rst", "reference/generated/pydicom.valuerep.DT.rst", "reference/generated/pydicom.valuerep.IS.rst", "reference/generated/pydicom.valuerep.ISfloat.rst", "reference/generated/pydicom.valuerep.PersonName.rst", "reference/generated/pydicom.valuerep.TM.rst", "reference/generated/pydicom.valuerep.VR.rst", "reference/generated/pydicom.valuerep.format_number_as_ds.rst", "reference/generated/pydicom.valuerep.is_valid_ds.rst", "reference/generated/pydicom.values.convert_AE_string.rst", "reference/generated/pydicom.values.convert_ATvalue.rst", "reference/generated/pydicom.values.convert_DA_string.rst", "reference/generated/pydicom.values.convert_DS_string.rst", "reference/generated/pydicom.values.convert_DT_string.rst", "reference/generated/pydicom.values.convert_IS_string.rst", "reference/generated/pydicom.values.convert_OBvalue.rst", "reference/generated/pydicom.values.convert_OWvalue.rst", "reference/generated/pydicom.values.convert_PN.rst", "reference/generated/pydicom.values.convert_SQ.rst", "reference/generated/pydicom.values.convert_TM_string.rst", "reference/generated/pydicom.values.convert_UI.rst", "reference/generated/pydicom.values.convert_UN.rst", "reference/generated/pydicom.values.convert_UR_string.rst", "reference/generated/pydicom.values.convert_numbers.rst", "reference/generated/pydicom.values.convert_single_string.rst", "reference/generated/pydicom.values.convert_string.rst", "reference/generated/pydicom.values.convert_tag.rst", "reference/generated/pydicom.values.convert_text.rst", "reference/generated/pydicom.values.convert_value.rst", "reference/generated/pydicom.values.multi_string.rst", "reference/generated/pydicom.waveforms.numpy_handler.rst", "reference/handlers.rst", "reference/handlers.pixel_data.rst", "reference/index.rst", "reference/misc.rst", "reference/overlays.rst", "reference/pixels.rst", "reference/pixels.decoders.rst", "reference/uid.rst", "reference/waveforms.rst", "release_notes/index.rst", "release_notes/v0.9.2.rst", "release_notes/v0.9.3.rst", "release_notes/v0.9.4.rst", "release_notes/v0.9.5.rst", "release_notes/v0.9.6.rst", "release_notes/v0.9.7.rst", "release_notes/v0.9.8.rst", "release_notes/v0.9.9.rst", "release_notes/v1.0.0.rst", "release_notes/v1.1.0.rst", "release_notes/v1.2.0.rst", "release_notes/v1.3.0.rst", "release_notes/v1.4.0.rst", "release_notes/v1.4.1.rst", "release_notes/v2.0.0.rst", "release_notes/v2.1.0.rst", "release_notes/v2.1.1.rst", "release_notes/v2.2.0.rst", "release_notes/v2.3.0.rst", "release_notes/v2.4.0.rst", "release_notes/v3.0.0.rst", "sg_execution_times.rst", "tutorials/contributing.rst", "tutorials/contributing_code.rst", "tutorials/contributing_docs.rst", "tutorials/dataset_basics.rst", "tutorials/dicom_json.rst", "tutorials/filesets.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/pixel_data/compressing.rst", "tutorials/sr_basics.rst", "tutorials/waveforms.rst"], "titles": ["Show a dicom file using hierarchical tree", "Image processing", "Downsize MRI image using pydicom", "Decode and plot Waveform Data", "Load CT slices and plot axial, sagittal and coronal images", "Computation times", "General examples", "Input-output", "Format the output of the data set printing", "Read a Dataset and plot Pixel Data", "Read a DICOM File-set", "Read RTPLAN DICOM and list information", "Write DICOM data", "Computation times", "Show working with memory-based dataset", "Metadata processing", "Add items to the private DICOM dictionary", "Anonymize DICOM data", "Working with sequences", "Computation times", "Analyse differences between DICOM files", "Computation times", "Display unicode person names", "Frequently asked questions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">codify</span></code> command", "Extending the CLI", "Command-line Interface Guide", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">show</span></code> command", "Decoder Plugins Options", "Pixel Data Decoder Plugins", "Pixel Data Decoding", "Element VRs and Python types", "Encoder Plugins Options", "Pixel Data Encoder Plugins", "Pixel Data Encoding", "RLE Lossless Encoding", "Glossary", "Guides", "Writing documentation", "pydicom documentation", "Core elements in pydicom", "Best Practices", "Introduction to pydicom", "Compressing <em>Pixel Data</em>", "Handling of compressed pixel data", "Private Data Elements", "pydicom User Guide", "Reading and writing DICOM files", "Viewing Images", "Working with Overlay Data", "Working with Pixel Data", "Working with Waveform Data", "Writing DICOM Files", "Character Encoding and Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.charset</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.config</span></code>)", "Getting Included Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.data</span></code>)", "Data Dictionary Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.datadict</span></code>)", "Representation of Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataset</span></code>)", "Representation of Data Elements", "Data Elements (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataelem</span></code>)", "Element Multi-value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.multival</span></code>)", "Sequence Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sequence</span></code>)", "Element Tags (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.tag</span></code>)", "Specialized Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.valuerep</span></code>)", "Element Value Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.values</span></code>)", "Bulk Data Encapsulation Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encaps</span></code>)", "Pixel Data Encoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encoders</span></code>)", "Exceptions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.errors</span></code>)", "Example Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.examples</span></code>)", "Dataset IO", "IO Base Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filebase</span></code>)", "Dataset Reading (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filereader</span></code>)", "IO Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileutil</span></code>)", "Dataset Writing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filewriter</span></code>)", "DICOM File-sets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileset</span></code>)", "pydicom.charset.convert_encodings", "pydicom.charset.decode_bytes", "pydicom.charset.decode_element", "pydicom.charset.encode_string", "pydicom.config.APPLY_J2K_CORRECTIONS", "pydicom.config.DS_decimal", "pydicom.config.DS_numpy", "pydicom.config.IGNORE", "pydicom.config.INVALID_KEYWORD_BEHAVIOR", "pydicom.config.INVALID_KEY_BEHAVIOR", "pydicom.config.RAISE", "pydicom.config.WARN", "pydicom.config.allow_DS_float", "pydicom.config.assume_implicit_vr_switch", "pydicom.config.convert_wrong_length_to_UN", "pydicom.config.data_element_callback", "pydicom.config.data_element_callback_kwargs", "pydicom.config.datetime_conversion", "pydicom.config.debug", "pydicom.config.enforce_valid_values", "pydicom.config.future_behavior", "pydicom.config.pixel_data_handlers", "pydicom.config.reset_data_element_callback", "pydicom.config.settings", "pydicom.config.show_file_meta", "pydicom.config.use_DS_decimal", "pydicom.config.use_DS_numpy", "pydicom.config.use_IS_numpy", "pydicom.data.get_charset_files", "pydicom.data.get_palette_files", "pydicom.data.get_testdata_file", "pydicom.data.get_testdata_files", "pydicom.datadict.add_dict_entries", "pydicom.datadict.add_dict_entry", "pydicom.datadict.add_private_dict_entries", "pydicom.datadict.add_private_dict_entry", "pydicom.datadict.dictionary_VM", "pydicom.datadict.dictionary_VR", "pydicom.datadict.dictionary_description", "pydicom.datadict.dictionary_has_tag", "pydicom.datadict.dictionary_is_retired", "pydicom.datadict.dictionary_keyword", "pydicom.datadict.get_entry", "pydicom.datadict.get_private_entry", "pydicom.datadict.keyword_for_tag", "pydicom.datadict.mask_match", "pydicom.datadict.private_dictionary_VM", "pydicom.datadict.private_dictionary_VR", "pydicom.datadict.private_dictionary_description", "pydicom.datadict.repeater_has_keyword", "pydicom.datadict.repeater_has_tag", "pydicom.datadict.tag_for_keyword", "pydicom.dataelem.DataElement", "pydicom.dataelem.DataElement_from_raw", "pydicom.dataelem.RawDataElement", "pydicom.dataset.Dataset", "pydicom.dataset.FileDataset", "pydicom.dataset.FileMetaDataset", "pydicom.dataset.PrivateBlock", "pydicom.dataset.validate_file_meta", "pydicom.encaps.decode_data_sequence", "pydicom.encaps.defragment_data", "pydicom.encaps.encapsulate", "pydicom.encaps.encapsulate_extended", "pydicom.encaps.fragment_frame", "pydicom.encaps.generate_fragmented_frames", "pydicom.encaps.generate_fragments", "pydicom.encaps.generate_frames", "pydicom.encaps.generate_pixel_data", "pydicom.encaps.generate_pixel_data_fragment", "pydicom.encaps.generate_pixel_data_frame", "pydicom.encaps.get_frame", "pydicom.encaps.get_frame_offsets", "pydicom.encaps.itemize_fragment", "pydicom.encaps.itemize_frame", "pydicom.encaps.parse_basic_offsets", "pydicom.encaps.parse_fragments", "pydicom.encaps.read_item", "pydicom.encoders.RLELosslessEncoder", "pydicom.encoders.base.Encoder", "pydicom.encoders.get_encoder", "pydicom.errors.InvalidDicomError", "pydicom.filebase.DicomBytesIO", "pydicom.filebase.DicomFile", "pydicom.filebase.DicomFileLike", "pydicom.filebase.DicomIO", "pydicom.filereader.data_element_generator", "pydicom.filereader.data_element_offset_to_value", "pydicom.filereader.dcmread", "pydicom.filereader.read_dataset", "pydicom.filereader.read_deferred_data_element", "pydicom.filereader.read_file_meta_info", "pydicom.filereader.read_partial", "pydicom.filereader.read_preamble", "pydicom.filereader.read_sequence", "pydicom.filereader.read_sequence_item", "pydicom.fileset.DIRECTORY_RECORDERS", "pydicom.fileset.FileInstance", "pydicom.fileset.FileSet", "pydicom.fileset.RecordNode", "pydicom.fileset.generate_filename", "pydicom.fileset.is_conformant_file_id", "pydicom.fileutil.absorb_delimiter_item", "pydicom.fileutil.find_bytes", "pydicom.fileutil.find_delimiter", "pydicom.fileutil.length_of_undefined_length", "pydicom.fileutil.read_undefined_length_value", "pydicom.filewriter.correct_ambiguous_vr", "pydicom.filewriter.correct_ambiguous_vr_element", "pydicom.filewriter.dcmwrite", "pydicom.filewriter.multi_string", "pydicom.filewriter.write_ATvalue", "pydicom.filewriter.write_DA", "pydicom.filewriter.write_DT", "pydicom.filewriter.write_OBvalue", "pydicom.filewriter.write_OWvalue", "pydicom.filewriter.write_PN", "pydicom.filewriter.write_TM", "pydicom.filewriter.write_UI", "pydicom.filewriter.write_UN", "pydicom.filewriter.write_data_element", "pydicom.filewriter.write_dataset", "pydicom.filewriter.write_file_meta_info", "pydicom.filewriter.write_number_string", "pydicom.filewriter.write_numbers", "pydicom.filewriter.write_sequence", "pydicom.filewriter.write_sequence_item", "pydicom.filewriter.write_string", "pydicom.filewriter.write_text", "pydicom.misc.is_dicom", "pydicom.misc.size_in_bytes", "pydicom.multival.MultiValue", "pydicom.overlays.numpy_handler", "pydicom.pixel_data_handlers.apply_color_lut", "pydicom.pixel_data_handlers.apply_modality_lut", "pydicom.pixel_data_handlers.apply_rescale", "pydicom.pixel_data_handlers.apply_voi", "pydicom.pixel_data_handlers.apply_voi_lut", "pydicom.pixel_data_handlers.apply_windowing", "pydicom.pixel_data_handlers.convert_color_space", "pydicom.pixel_data_handlers.gdcm_handler", "pydicom.pixel_data_handlers.jpeg_ls_handler", "pydicom.pixel_data_handlers.numpy_handler", "pydicom.pixel_data_handlers.pillow_handler", "pydicom.pixel_data_handlers.pylibjpeg_handler", "pydicom.pixel_data_handlers.rle_handler", "pydicom.pixel_data_handlers.util", "pydicom.pixels.decoders.base.DecodeRunner", "pydicom.pixels.decoders.base.Decoder", "pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder", "pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.base.RLELosslessDecoder", "pydicom.sequence.Sequence", "pydicom.tag.BaseTag", "pydicom.tag.Tag", "pydicom.tag.TupleTag", "pydicom.tag.tag_in_exception", "pydicom.uid.AcquisitionContextSRStorage", "pydicom.uid.AdvancedBlendingPresentationStateStorage", "pydicom.uid.AllTransferSyntaxes", "pydicom.uid.AmbulatoryECGWaveformStorage", "pydicom.uid.ArterialPulseWaveformStorage", "pydicom.uid.AutorefractionMeasurementsStorage", "pydicom.uid.BasicStructuredDisplayStorage", "pydicom.uid.BasicTextSRStorage", "pydicom.uid.BasicVoiceAudioWaveformStorage", "pydicom.uid.BlendingSoftcopyPresentationStateStorage", "pydicom.uid.BodyPositionWaveformStorage", "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "pydicom.uid.BreastTomosynthesisImageStorage", "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "pydicom.uid.CArmPhotonElectronRadiationStorage", "pydicom.uid.CTDefinedProcedureProtocolStorage", "pydicom.uid.CTImageStorage", "pydicom.uid.CTPerformedProcedureProtocolStorage", "pydicom.uid.CardiacElectrophysiologyWaveformStorage", "pydicom.uid.ChestCADSRStorage", "pydicom.uid.ColonCADSRStorage", "pydicom.uid.ColorPaletteStorage", "pydicom.uid.ColorSoftcopyPresentationStateStorage", "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.Comprehensive3DSRStorage", "pydicom.uid.ComprehensiveSRStorage", "pydicom.uid.ComputedRadiographyImageStorage", "pydicom.uid.ConfocalMicroscopyImageStorage", "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "pydicom.uid.ContentAssessmentResultsStorage", "pydicom.uid.CornealTopographyMapStorage", "pydicom.uid.DICOS2DAITStorage", "pydicom.uid.DICOS3DAITStorage", "pydicom.uid.DICOSCTImageStorage", "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "pydicom.uid.DICOSQuadrupoleResonanceStorage", "pydicom.uid.DICOSThreatDetectionReportStorage", "pydicom.uid.DeflatedExplicitVRLittleEndian", "pydicom.uid.DeformableSpatialRegistrationStorage", "pydicom.uid.DermoscopicPhotographyImageStorage", "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "pydicom.uid.DigitalXRayImageStorageForPresentation", "pydicom.uid.DigitalXRayImageStorageForProcessing", "pydicom.uid.EddyCurrentImageStorage", "pydicom.uid.EddyCurrentMultiFrameImageStorage", "pydicom.uid.ElectromyogramWaveformStorage", "pydicom.uid.ElectrooculogramWaveformStorage", "pydicom.uid.EncapsulatedCDAStorage", "pydicom.uid.EncapsulatedMTLStorage", "pydicom.uid.EncapsulatedOBJStorage", "pydicom.uid.EncapsulatedPDFStorage", "pydicom.uid.EncapsulatedSTLStorage", "pydicom.uid.EnhancedCTImageStorage", "pydicom.uid.EnhancedContinuousRTImageStorage", "pydicom.uid.EnhancedMRColorImageStorage", "pydicom.uid.EnhancedMRImageStorage", "pydicom.uid.EnhancedPETImageStorage", "pydicom.uid.EnhancedRTImageStorage", "pydicom.uid.EnhancedSRStorage", "pydicom.uid.EnhancedUSVolumeStorage", "pydicom.uid.EnhancedXAImageStorage", "pydicom.uid.EnhancedXRFImageStorage", "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "pydicom.uid.ExplicitVRBigEndian", "pydicom.uid.ExplicitVRLittleEndian", "pydicom.uid.ExtensibleSRStorage", "pydicom.uid.General32bitECGWaveformStorage", "pydicom.uid.GeneralAudioWaveformStorage", "pydicom.uid.GeneralECGWaveformStorage", "pydicom.uid.GenericImplantTemplateStorage", "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.HEVCM10P51", "pydicom.uid.HEVCMP51", "pydicom.uid.HTJ2K", "pydicom.uid.HTJ2KLossless", "pydicom.uid.HTJ2KLosslessRPCL", "pydicom.uid.HangingProtocolStorage", "pydicom.uid.HemodynamicWaveformStorage", "pydicom.uid.ImplantAssemblyTemplateStorage", "pydicom.uid.ImplantTemplateGroupStorage", "pydicom.uid.ImplantationPlanSRStorage", "pydicom.uid.ImplicitVRLittleEndian", "pydicom.uid.IntraocularLensCalculationsStorage", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pydicom.uid.InventoryStorage", "pydicom.uid.JPEG2000", "pydicom.uid.JPEG2000Lossless", "pydicom.uid.JPEG2000MC", "pydicom.uid.JPEG2000MCLossless", "pydicom.uid.JPEG2000TransferSyntaxes", "pydicom.uid.JPEGBaseline8Bit", "pydicom.uid.JPEGExtended12Bit", "pydicom.uid.JPEGLSLossless", "pydicom.uid.JPEGLSNearLossless", "pydicom.uid.JPEGLSTransferSyntaxes", "pydicom.uid.JPEGLossless", "pydicom.uid.JPEGLosslessSV1", "pydicom.uid.JPEGTransferSyntaxes", "pydicom.uid.JPIPHTJ2KReferenced", "pydicom.uid.JPIPHTJ2KReferencedDeflate", "pydicom.uid.KeratometryMeasurementsStorage", "pydicom.uid.KeyObjectSelectionDocumentStorage", "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "pydicom.uid.LensometryMeasurementsStorage", "pydicom.uid.MPEG2MPHL", "pydicom.uid.MPEG2MPHLF", "pydicom.uid.MPEG2MPML", "pydicom.uid.MPEG2MPMLF", "pydicom.uid.MPEG4HP41", "pydicom.uid.MPEG4HP41BD", "pydicom.uid.MPEG4HP41BDF", "pydicom.uid.MPEG4HP41F", "pydicom.uid.MPEG4HP422D", "pydicom.uid.MPEG4HP422DF", "pydicom.uid.MPEG4HP423D", "pydicom.uid.MPEG4HP423DF", "pydicom.uid.MPEG4HP42STEREO", "pydicom.uid.MPEG4HP42STEREOF", "pydicom.uid.MPEGTransferSyntaxes", "pydicom.uid.MRImageStorage", "pydicom.uid.MRSpectroscopyStorage", "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "pydicom.uid.MammographyCADSRStorage", "pydicom.uid.MediaStorageDirectoryStorage", "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "pydicom.uid.MultichannelRespiratoryWaveformStorage", "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.NuclearMedicineImageStorage", "pydicom.uid.OphthalmicAxialMeasurementsStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pydicom.uid.OphthalmicPhotography16BitImageStorage", "pydicom.uid.OphthalmicPhotography8BitImageStorage", "pydicom.uid.OphthalmicThicknessMapStorage", "pydicom.uid.OphthalmicTomographyImageStorage", "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "pydicom.uid.PYDICOM_ROOT_UID", "pydicom.uid.ParametricMapStorage", "pydicom.uid.PatientRadiationDoseSRStorage", "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "pydicom.uid.PhotoacousticImageStorage", "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "pydicom.uid.PositronEmissionTomographyImageStorage", "pydicom.uid.PrivateTransferSyntaxes", "pydicom.uid.ProcedureLogStorage", "pydicom.uid.ProtocolApprovalStorage", "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "pydicom.uid.RE_VALID_UID", "pydicom.uid.RE_VALID_UID_PREFIX", "pydicom.uid.RLELossless", "pydicom.uid.RLETransferSyntaxes", "pydicom.uid.RTBeamsDeliveryInstructionStorage", "pydicom.uid.RTBeamsTreatmentRecordStorage", "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "pydicom.uid.RTBrachyTreatmentRecordStorage", "pydicom.uid.RTDoseStorage", "pydicom.uid.RTImageStorage", "pydicom.uid.RTIonBeamsTreatmentRecordStorage", "pydicom.uid.RTIonPlanStorage", "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "pydicom.uid.RTPhysicianIntentStorage", "pydicom.uid.RTPlanStorage", "pydicom.uid.RTRadiationRecordSetStorage", "pydicom.uid.RTRadiationSalvageRecordStorage", "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "pydicom.uid.RTRadiationSetStorage", "pydicom.uid.RTSegmentAnnotationStorage", "pydicom.uid.RTStructureSetStorage", "pydicom.uid.RTTreatmentPreparationStorage", "pydicom.uid.RTTreatmentSummaryRecordStorage", "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "pydicom.uid.RawDataStorage", "pydicom.uid.RealWorldValueMappingStorage", "pydicom.uid.RespiratoryWaveformStorage", "pydicom.uid.RoboticArmRadiationStorage", "pydicom.uid.RoboticRadiationRecordStorage", "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "pydicom.uid.SMPTEST211030PCMDigitalAudio", "pydicom.uid.SecondaryCaptureImageStorage", "pydicom.uid.SegmentationStorage", "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.SimplifiedAdultEchoSRStorage", "pydicom.uid.SleepElectroencephalogramWaveformStorage", "pydicom.uid.SpatialFiducialsStorage", "pydicom.uid.SpatialRegistrationStorage", "pydicom.uid.SpectaclePrescriptionReportStorage", "pydicom.uid.StereometricRelationshipStorage", "pydicom.uid.SubjectiveRefractionMeasurementsStorage", "pydicom.uid.SurfaceScanMeshStorage", "pydicom.uid.SurfaceScanPointCloudStorage", "pydicom.uid.SurfaceSegmentationStorage", "pydicom.uid.TomotherapeuticRadiationRecordStorage", "pydicom.uid.TomotherapeuticRadiationStorage", "pydicom.uid.TractographyResultsStorage", "pydicom.uid.TwelveLeadECGWaveformStorage", "pydicom.uid.UID", "pydicom.uid.UltrasoundImageStorage", "pydicom.uid.UltrasoundMultiFrameImageStorage", "pydicom.uid.UncompressedTransferSyntaxes", "pydicom.uid.VLEndoscopicImageStorage", "pydicom.uid.VLMicroscopicImageStorage", "pydicom.uid.VLPhotographicImageStorage", "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "pydicom.uid.VLWholeSlideMicroscopyImageStorage", "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "pydicom.uid.VideoEndoscopicImageStorage", "pydicom.uid.VideoMicroscopicImageStorage", "pydicom.uid.VideoPhotographicImageStorage", "pydicom.uid.VisualAcuityMeasurementsStorage", "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pydicom.uid.XADefinedProcedureProtocolStorage", "pydicom.uid.XAPerformedProcedureProtocolStorage", "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.XRay3DAngiographicImageStorage", "pydicom.uid.XRay3DCraniofacialImageStorage", "pydicom.uid.XRayAngiographicImageStorage", "pydicom.uid.XRayRadiationDoseSRStorage", "pydicom.uid.XRayRadiofluoroscopicImageStorage", "pydicom.uid.generate_uid", "pydicom.uid.register_transfer_syntax", "pydicom.valuerep.DA", "pydicom.valuerep.DS", "pydicom.valuerep.DSdecimal", "pydicom.valuerep.DSfloat", "pydicom.valuerep.DT", "pydicom.valuerep.IS", "pydicom.valuerep.ISfloat", "pydicom.valuerep.PersonName", "pydicom.valuerep.TM", "pydicom.valuerep.VR", "pydicom.valuerep.format_number_as_ds", "pydicom.valuerep.is_valid_ds", "pydicom.values.convert_AE_string", "pydicom.values.convert_ATvalue", "pydicom.values.convert_DA_string", "pydicom.values.convert_DS_string", "pydicom.values.convert_DT_string", "pydicom.values.convert_IS_string", "pydicom.values.convert_OBvalue", "pydicom.values.convert_OWvalue", "pydicom.values.convert_PN", "pydicom.values.convert_SQ", "pydicom.values.convert_TM_string", "pydicom.values.convert_UI", "pydicom.values.convert_UN", "pydicom.values.convert_UR_string", "pydicom.values.convert_numbers", "pydicom.values.convert_single_string", "pydicom.values.convert_string", "pydicom.values.convert_tag", "pydicom.values.convert_text", "pydicom.values.convert_value", "pydicom.values.multi_string", "pydicom.waveforms.numpy_handler", "Bulk Data Handlers", "Pixel Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixel_data_handlers</span></code>)", "API Reference", "Miscellaneous (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.misc</span></code>)", "Overlay Data Handling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.overlays</span></code>)", "Pixel Data (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels</span></code>)", "Pixel Data Decoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.decoders</span></code>)", "UID Definitions and Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.uid</span></code>)", "Waveform Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.waveforms</span></code>)", "Release notes", "Version 0.9.2", "Version 0.9.3", "Version 0.9.4", "Version 0.9.5", "Version 0.9.6", "Version 0.9.7", "Version 0.9.8", "Version 0.9.9", "Version 1.0.0", "Version 1.1.0", "Version 1.2.0", "Version 1.3.0", "Version 1.4.0", "Version 1.4.1", "Version 2.0.0", "Version 2.1.0", "Version 2.1.1", "Version 2.2.0", "Version 2.3.0", "Version 2.4.0", "Version 3.0.0", "Computation times", "Contributing to pydicom", "Contributing a source code change", "Contributing a documentation change", "Dataset basics: read, access, modify, write", "Introduction to JSON support", "DICOM File-sets and DICOMDIR", "Tutorials", "How to install pydicom", "Compressing <em>Pixel Data</em>", "Structured Reporting", "Waveforms"], "terms": {"go": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 53, 167, 540, 541, 542, 544, 546], "end": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 140, 142, 151, 152, 165, 180, 182, 222, 224, 516, 522, 529], "download": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 106, 516, 532, 534, 535, 536], "full": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 46, 106, 132, 164, 223, 516, 525, 526, 527, 532, 544, 547], "exampl": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 30, 34, 37, 39, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 84, 85, 108, 109, 110, 128, 131, 139, 155, 164, 172, 174, 224, 446, 471, 480, 509, 516, 517, 518, 519, 521, 522, 524, 528, 532, 534, 537, 538, 539, 540, 541, 543, 544, 547, 549], "code": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 32, 41, 43, 46, 47, 48, 53, 77, 78, 96, 131, 162, 164, 167, 516, 517, 519, 523, 524, 525, 527, 529, 532, 534, 537, 539, 541, 545, 546, 548, 549], "graphic": [0, 49, 51], "window": [0, 2, 8, 20, 26, 27, 42, 47, 213, 214, 222, 516, 517, 525, 529, 535, 540, 541, 542, 546], "from": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 32, 34, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 69, 72, 76, 77, 79, 81, 84, 85, 91, 97, 108, 109, 118, 119, 128, 129, 130, 131, 132, 133, 135, 136, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 153, 155, 158, 159, 160, 161, 162, 163, 166, 169, 172, 173, 174, 175, 176, 183, 184, 185, 197, 198, 200, 207, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 446, 471, 475, 476, 480, 484, 502, 516, 519, 520, 521, 522, 523, 524, 527, 528, 531, 532, 533, 534, 537, 538, 540, 541, 542, 544, 546, 547, 548, 549], "pathlib": [0, 10, 12, 177, 544], "import": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 30, 34, 36, 37, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 69, 84, 85, 108, 109, 128, 131, 139, 155, 172, 174, 224, 446, 471, 516, 522, 525, 537, 540, 541, 542, 543, 544, 546, 547, 548, 549], "path": [0, 9, 10, 11, 12, 17, 24, 26, 27, 28, 30, 34, 39, 41, 43, 45, 48, 51, 104, 105, 106, 107, 131, 132, 155, 164, 173, 174, 177, 185, 205, 224, 516, 532, 537, 541, 544], "sy": [0, 4, 14, 549], "tkinter": [0, 22, 47, 516, 517, 519], "tk": [0, 22], "ttk": 0, "pydicom": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 25, 30, 32, 34, 36, 38, 39, 45, 48, 50, 51, 52, 53, 59, 70, 507, 509, 517, 519, 520, 521, 522, 523, 524, 525, 526, 529, 531, 532, 534, 538, 540, 541, 542, 543, 544, 545, 548, 549], "print": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 41, 43, 50, 109, 111, 131, 516, 518, 529, 538, 541, 542, 544, 549], "__doc__": [0, 2, 8, 11, 14, 16, 20, 22], "def": [0, 8, 11, 14, 17, 25, 26, 30, 34, 97, 131, 172, 540, 543], "build_tre": 0, "treeview": 0, "d": [0, 2, 3, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 39, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 55, 59, 64, 69, 81, 82, 84, 85, 97, 101, 102, 108, 109, 110, 128, 131, 138, 139, 155, 164, 172, 174, 183, 184, 199, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 475, 476, 480, 483, 488, 506, 516, 522, 523, 531, 534, 536, 540, 541, 542, 543, 544, 547, 549], "dataset": [0, 2, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 32, 36, 37, 39, 42, 43, 45, 46, 47, 48, 49, 53, 73, 80, 84, 85, 91, 97, 100, 106, 107, 108, 109, 128, 129, 136, 138, 139, 144, 146, 155, 158, 160, 161, 164, 165, 168, 170, 171, 172, 173, 174, 175, 183, 184, 185, 197, 198, 202, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 230, 446, 472, 506, 509, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 541, 544, 545, 546, 547, 549], "parent": [0, 26, 27, 134, 161, 174, 175, 516, 526, 537, 544], "str": [0, 11, 14, 20, 30, 32, 34, 41, 76, 77, 78, 79, 88, 92, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 141, 142, 143, 147, 151, 152, 155, 156, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 185, 186, 192, 196, 197, 200, 201, 202, 203, 204, 205, 206, 208, 209, 215, 221, 222, 223, 224, 231, 232, 446, 471, 472, 474, 475, 476, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 516, 526, 531, 534, 542], "none": [0, 2, 8, 10, 14, 20, 32, 33, 39, 76, 78, 81, 82, 91, 94, 96, 97, 98, 106, 108, 109, 110, 111, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 141, 143, 144, 146, 147, 153, 155, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 222, 223, 224, 230, 232, 234, 446, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 503, 504, 505, 506, 516, 525, 528, 529, 532, 540, 542, 546, 548], "build": [0, 4, 183, 184, 516, 525, 536, 540], "out": [0, 49, 51, 53, 139, 174, 222, 475, 476, 516, 532, 539, 540, 541, 542, 544, 549], "paramet": [0, 10, 20, 24, 26, 30, 34, 39, 51, 52, 53, 76, 77, 78, 79, 81, 82, 94, 96, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 160, 161, 162, 164, 165, 166, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 197, 198, 200, 201, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 230, 232, 234, 446, 471, 472, 475, 476, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 516, 522, 524, 526, 532, 534, 535, 542, 544], "The": [0, 2, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 69, 76, 77, 78, 79, 97, 99, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 161, 162, 164, 166, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 197, 198, 200, 201, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 231, 232, 234, 471, 472, 480, 483, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 516, 519, 526, 527, 532, 537, 540, 541, 542, 543, 546, 547, 548, 549], "object": [0, 10, 14, 30, 34, 39, 41, 43, 46, 49, 85, 99, 103, 128, 131, 132, 134, 141, 142, 143, 147, 151, 152, 154, 160, 161, 164, 165, 166, 168, 169, 172, 174, 185, 207, 222, 225, 226, 227, 228, 229, 230, 233, 480, 509, 516, 518, 519, 528, 529, 531, 534, 535, 537, 542, 544, 549], "add": [0, 2, 6, 10, 12, 15, 18, 19, 20, 25, 26, 27, 30, 34, 39, 41, 42, 44, 46, 50, 108, 110, 111, 128, 131, 134, 138, 139, 155, 172, 174, 175, 185, 222, 224, 516, 525, 528, 534, 536, 537, 538, 540, 541, 542, 544, 547, 549], "item": [0, 6, 8, 9, 15, 19, 20, 24, 26, 27, 28, 32, 39, 41, 52, 53, 128, 131, 138, 139, 140, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 171, 178, 202, 207, 516, 517, 518, 519, 522, 525, 528, 529, 534, 535, 538, 542, 544, 549], "id": [0, 2, 8, 9, 10, 12, 17, 20, 46, 131, 134, 173, 174, 175, 176, 177, 222, 516, 518, 535, 542, 544], "ani": [0, 10, 24, 26, 27, 32, 34, 37, 41, 42, 49, 50, 52, 79, 92, 106, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 131, 133, 135, 138, 139, 140, 155, 157, 159, 161, 166, 174, 175, 185, 198, 207, 208, 213, 214, 222, 223, 224, 232, 473, 477, 480, 481, 494, 498, 504, 505, 516, 518, 519, 528, 534, 537, 540, 541, 544, 546, 547], "default": [0, 9, 24, 26, 29, 32, 34, 42, 45, 49, 50, 51, 55, 76, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 128, 131, 132, 135, 138, 140, 141, 142, 143, 147, 150, 151, 152, 155, 158, 161, 162, 164, 165, 174, 176, 183, 184, 185, 197, 198, 208, 212, 213, 214, 215, 218, 220, 221, 222, 223, 224, 471, 480, 488, 490, 494, 505, 506, 516, 520, 522, 523, 525, 527, 528, 529, 530, 531, 532, 534, 541, 542, 543, 544, 547], "For": [0, 17, 24, 26, 27, 30, 34, 36, 37, 39, 41, 42, 44, 46, 50, 51, 53, 120, 128, 131, 138, 144, 145, 148, 155, 172, 174, 208, 222, 223, 224, 480, 516, 522, 532, 537, 540, 541, 542, 544, 546, 547], "each": [0, 3, 10, 20, 30, 34, 36, 37, 40, 41, 44, 50, 51, 52, 69, 77, 131, 138, 139, 144, 145, 148, 149, 150, 151, 152, 155, 175, 176, 207, 215, 221, 222, 223, 224, 480, 506, 516, 531, 534, 540, 542, 544, 547, 549], "datael": [0, 39, 46, 47, 50, 59, 78, 129, 131, 132, 133, 162, 165, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 216, 516, 517, 525, 526, 527, 528, 531, 535, 537, 542], "current": [0, 20, 24, 26, 28, 37, 39, 42, 44, 96, 128, 131, 161, 174, 175, 183, 184, 191, 209, 215, 222, 480, 516, 534, 541, 544, 546, 547], "idx": [0, 155, 547], "elem": [0, 8, 17, 39, 41, 50, 78, 128, 131, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 208, 231, 233, 516, 519, 542], "enumer": [0, 4, 549], "tree_item": 0, "insert": [0, 541, 542], "text": [0, 20, 22, 32, 41, 46, 128, 164, 201, 202, 204, 494, 500, 501, 503, 504, 516, 518, 527, 540, 541, 542], "move": [0, 93, 99, 173, 174, 516, 522, 523, 541, 544], "vr": [0, 2, 8, 12, 16, 17, 20, 26, 27, 28, 38, 40, 41, 44, 45, 46, 55, 59, 64, 82, 89, 90, 93, 101, 102, 108, 109, 110, 111, 113, 118, 119, 123, 128, 129, 130, 131, 132, 134, 140, 161, 162, 163, 165, 166, 174, 183, 184, 185, 190, 191, 194, 198, 199, 218, 224, 225, 226, 227, 228, 237, 446, 472, 473, 475, 476, 477, 478, 479, 480, 481, 485, 494, 496, 498, 499, 500, 501, 503, 504, 516, 517, 518, 519, 520, 522, 523, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 537, 542, 543, 547], "sq": [0, 8, 32, 55, 128, 131, 162, 494, 516, 522, 532, 535, 537, 542], "i": [0, 2, 3, 4, 10, 17, 20, 22, 24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 59, 64, 69, 71, 73, 76, 77, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 96, 97, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 155, 157, 158, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 197, 198, 199, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 230, 231, 234, 446, 471, 473, 477, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 494, 495, 496, 498, 499, 501, 502, 516, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549], "sequenc": [0, 2, 3, 6, 8, 15, 19, 20, 24, 26, 27, 28, 32, 39, 47, 52, 53, 59, 77, 79, 89, 131, 140, 144, 145, 146, 165, 170, 171, 175, 178, 179, 201, 202, 210, 211, 212, 213, 222, 480, 494, 506, 509, 516, 517, 518, 522, 523, 526, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 544, 549], "contain": [0, 10, 24, 26, 30, 32, 34, 37, 38, 39, 40, 41, 42, 46, 50, 51, 52, 53, 55, 69, 76, 78, 128, 130, 131, 133, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 155, 164, 165, 172, 179, 183, 184, 185, 198, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 230, 232, 480, 484, 488, 490, 506, 516, 524, 527, 534, 537, 540, 542, 544, 549], "0": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 34, 36, 37, 41, 42, 43, 44, 46, 50, 51, 52, 81, 82, 83, 100, 102, 103, 128, 130, 131, 133, 134, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 155, 161, 170, 171, 172, 176, 177, 183, 184, 185, 208, 212, 213, 214, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 384, 385, 396, 397, 446, 471, 488, 490, 494, 502, 506, 509, 533, 538, 541, 542, 544, 546, 547, 549], "more": [0, 24, 26, 27, 32, 34, 37, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 99, 128, 131, 138, 140, 141, 143, 144, 145, 148, 155, 165, 168, 174, 177, 182, 185, 186, 200, 222, 223, 224, 480, 483, 516, 517, 518, 519, 521, 522, 529, 537, 540, 541, 542, 543, 544, 546, 547, 549], "seq_idx": 0, "seq_item": 0, "valu": [0, 2, 8, 9, 10, 12, 17, 20, 26, 28, 29, 30, 32, 33, 34, 36, 37, 39, 41, 42, 44, 46, 50, 51, 53, 55, 59, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 93, 96, 103, 109, 111, 112, 113, 122, 123, 128, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 155, 161, 163, 164, 166, 172, 174, 182, 183, 184, 185, 186, 195, 200, 201, 202, 207, 208, 209, 210, 211, 212, 213, 215, 218, 220, 221, 222, 223, 224, 231, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 506, 509, 516, 517, 518, 521, 522, 523, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 537, 540, 541, 542, 543, 544, 546, 547, 548, 549], "tree_seq_item": 0, "f": [0, 2, 3, 4, 8, 9, 10, 11, 12, 18, 20, 128, 131, 172, 174, 540, 544, 547, 549], "name": [0, 2, 6, 8, 9, 10, 11, 12, 14, 17, 18, 20, 21, 24, 25, 26, 27, 28, 30, 32, 34, 36, 39, 41, 42, 43, 44, 45, 46, 53, 106, 109, 111, 118, 119, 122, 123, 124, 128, 131, 135, 155, 156, 161, 164, 198, 209, 222, 223, 224, 446, 480, 516, 517, 518, 519, 522, 525, 526, 527, 532, 534, 535, 536, 537, 538, 540, 541, 542, 544, 547, 548, 549], "1": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 23, 24, 26, 27, 28, 30, 32, 34, 36, 37, 39, 41, 43, 44, 45, 46, 50, 51, 52, 61, 80, 84, 85, 87, 96, 106, 108, 109, 110, 111, 128, 130, 131, 134, 135, 138, 139, 140, 144, 148, 149, 150, 154, 155, 156, 161, 164, 176, 185, 198, 208, 210, 211, 212, 213, 214, 215, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 480, 506, 517, 520, 523, 531, 534, 537, 540, 541, 542, 543, 544, 546, 547, 548, 549], "recurs": [0, 4, 46, 131, 516, 518, 520], "": [0, 2, 3, 4, 8, 9, 10, 12, 16, 17, 20, 24, 25, 26, 27, 28, 30, 34, 37, 39, 40, 41, 44, 46, 48, 49, 50, 51, 53, 84, 93, 94, 97, 110, 116, 120, 127, 128, 131, 132, 138, 141, 144, 147, 148, 151, 153, 155, 161, 164, 174, 175, 183, 184, 185, 215, 222, 223, 224, 231, 232, 384, 385, 482, 483, 484, 486, 493, 494, 501, 503, 504, 516, 518, 519, 521, 526, 527, 529, 532, 534, 539, 540, 541, 542, 544, 546, 547, 549], "__name__": [0, 14, 25, 26], "__main__": [0, 14, 25, 26], "len": [0, 3, 4, 8, 10, 14, 36, 542, 544, 549], "argv": [0, 4, 14], "2": [0, 2, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 32, 34, 36, 37, 39, 41, 42, 44, 45, 46, 51, 52, 55, 80, 82, 84, 85, 86, 89, 96, 99, 100, 102, 103, 106, 108, 109, 110, 111, 128, 130, 131, 133, 134, 135, 138, 139, 140, 144, 145, 148, 149, 150, 154, 155, 156, 164, 172, 198, 208, 210, 211, 212, 213, 214, 215, 218, 220, 221, 222, 225, 226, 227, 228, 229, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 480, 488, 490, 506, 519, 520, 522, 523, 525, 526, 528, 529, 537, 540, 542, 544, 546, 547, 549], "pleas": [0, 14, 25, 26, 28, 41, 43, 131, 136, 137, 144, 145, 146, 148, 153, 185, 516, 523, 534, 540, 541], "suppli": [0, 14, 49, 53, 79, 141, 143, 147, 164, 174, 209, 222, 223, 224, 471, 480, 542, 544], "python": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 38, 39, 40, 41, 42, 43, 46, 47, 53, 76, 77, 79, 94, 131, 216, 217, 219, 446, 516, 517, 519, 520, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 534, 536, 537, 540, 541, 542, 543, 546, 547, 549], "dicomtre": [0, 21, 516, 517, 538], "py": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 41, 49, 53, 84, 85, 97, 516, 517, 520, 521, 522, 523, 524, 525, 533, 538, 540, 542, 544, 547], "exit": [0, 14, 24, 26, 27, 28], "read": [0, 2, 6, 7, 8, 13, 14, 16, 17, 18, 20, 24, 26, 27, 28, 40, 41, 42, 43, 46, 50, 51, 53, 55, 70, 76, 82, 89, 94, 106, 131, 132, 136, 137, 141, 142, 143, 145, 147, 151, 152, 153, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 178, 179, 181, 182, 205, 216, 218, 224, 472, 478, 479, 509, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 537, 538, 541, 543, 544, 545, 548], "resolv": [0, 129, 183, 516, 522, 528], "strict": [0, 42, 479, 516, 529, 536], "true": [0, 10, 12, 16, 30, 32, 34, 39, 41, 42, 44, 46, 52, 55, 69, 80, 81, 82, 88, 89, 93, 94, 96, 97, 100, 106, 115, 116, 125, 126, 128, 130, 131, 132, 135, 138, 145, 148, 155, 157, 161, 162, 164, 165, 169, 173, 174, 175, 176, 177, 179, 180, 181, 182, 185, 198, 205, 208, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 231, 446, 472, 475, 476, 484, 485, 486, 487, 488, 489, 490, 494, 495, 496, 498, 499, 501, 502, 506, 516, 520, 522, 532, 534, 536, 537, 542, 544, 549], "dcmread": [0, 4, 9, 10, 11, 12, 14, 16, 41, 43, 45, 48, 51, 70, 91, 106, 132, 157, 160, 161, 162, 165, 168, 182, 206, 472, 516, 525, 531, 532, 534, 537, 541, 542, 544, 549], "creat": [0, 4, 12, 14, 16, 18, 24, 25, 26, 27, 41, 42, 46, 49, 53, 88, 128, 129, 131, 155, 158, 160, 161, 162, 172, 173, 174, 175, 185, 207, 223, 224, 232, 446, 471, 473, 474, 477, 479, 480, 509, 516, 519, 521, 534, 536, 537, 542, 546, 547, 548, 549], "root": [0, 9, 10, 22, 26, 27, 97, 174, 175, 177, 385, 471, 542, 544], "widget": [0, 49], "geometri": 0, "1200x900": 0, "titl": [0, 2, 20, 26, 28, 39, 46, 198, 480, 540, 541, 542], "viewer": [0, 49], "rowconfigur": 0, "weight": [0, 2, 8, 20], "columnconfigur": 0, "monospac": 0, "font": 0, "style": [0, 23, 516, 518, 521], "theme_us": 0, "clam": 0, "configur": [0, 37, 42, 99, 128, 131, 222, 223, 509, 516, 527, 534, 535], "courier": 0, "12": [0, 30, 34, 37, 52, 69, 155, 218, 224, 300, 301, 414, 455, 468, 470, 544, 549], "popul": [0, 12, 53, 548], "grid": 0, "row": [0, 2, 8, 9, 20, 26, 28, 30, 34, 37, 50, 51, 131, 155, 208, 215, 218, 220, 221, 222, 223, 224, 547], "column": [0, 2, 8, 9, 20, 26, 28, 30, 34, 37, 50, 51, 131, 155, 208, 215, 218, 220, 221, 222, 223, 224, 547], "sticki": 0, "nsew": 0, "start": [0, 6, 17, 18, 20, 24, 26, 27, 28, 43, 50, 53, 128, 134, 142, 143, 145, 147, 148, 151, 152, 163, 169, 175, 176, 181, 183, 184, 224, 471, 494, 502, 516, 526, 536, 540, 541, 542, 543, 548], "mainloop": [0, 22], "jupyt": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "notebook": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "ipynb": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "sourc": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 23, 26, 28, 30, 34, 46, 53, 55, 76, 77, 78, 79, 81, 82, 94, 96, 98, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 516, 524, 532, 534, 537, 539, 542, 545, 546, 549], "galleri": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 538], "gener": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 25, 26, 27, 34, 36, 41, 42, 45, 53, 136, 137, 144, 150, 162, 168, 176, 230, 232, 446, 471, 479, 506, 516, 518, 519, 523, 525, 537, 541, 547], "sphinx": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 39, 516, 520, 541], "These": [1, 6, 7, 15, 38, 41, 42, 516, 532, 537, 542], "illustr": [1, 3, 4, 6, 7, 8, 9, 15, 16, 18, 20, 40, 41], "avail": [1, 6, 10, 15, 24, 26, 27, 28, 30, 33, 34, 41, 46, 49, 51, 52, 53, 106, 131, 132, 138, 139, 141, 143, 147, 155, 161, 174, 216, 217, 219, 222, 224, 480, 488, 490, 516, 518, 519, 523, 525, 526, 527, 529, 532, 544, 546, 547, 548, 549], "which": [1, 6, 20, 23, 24, 25, 26, 30, 34, 37, 39, 41, 43, 44, 46, 49, 51, 52, 53, 77, 78, 84, 109, 128, 131, 162, 165, 167, 172, 174, 185, 198, 221, 222, 224, 471, 472, 474, 516, 517, 520, 522, 524, 532, 537, 540, 541, 542, 543, 544, 546, 547, 549], "can": [1, 6, 10, 14, 17, 24, 25, 26, 27, 28, 30, 32, 34, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 96, 131, 138, 139, 155, 160, 161, 164, 165, 172, 174, 185, 200, 207, 224, 472, 474, 479, 505, 516, 517, 518, 519, 522, 531, 532, 535, 537, 540, 541, 542, 543, 544, 546, 547, 548, 549], "appli": [1, 6, 10, 16, 37, 51, 52, 66, 78, 80, 131, 174, 209, 210, 211, 212, 213, 214, 222, 223, 224, 516, 529, 532, 541, 546, 549], "dicom": [1, 2, 4, 6, 7, 9, 13, 14, 15, 19, 21, 22, 23, 27, 28, 30, 32, 34, 36, 37, 39, 40, 41, 43, 44, 45, 47, 49, 50, 51, 52, 55, 58, 60, 69, 70, 72, 74, 76, 77, 78, 84, 89, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 131, 132, 133, 134, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 157, 158, 160, 161, 162, 164, 165, 167, 168, 169, 174, 185, 196, 198, 200, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 222, 224, 231, 232, 446, 471, 475, 476, 479, 480, 482, 483, 499, 509, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 534, 535, 536, 537, 538, 541, 542, 543, 545, 547, 548], "downsiz": [1, 5, 6, 51, 538], "mri": [1, 5, 6, 51, 538], "us": [1, 3, 5, 6, 7, 9, 10, 12, 16, 17, 20, 21, 24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 50, 51, 52, 67, 77, 78, 79, 80, 84, 85, 88, 94, 95, 96, 97, 101, 102, 106, 109, 111, 128, 129, 131, 132, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 155, 157, 160, 161, 162, 164, 165, 167, 168, 172, 174, 175, 176, 182, 183, 184, 185, 197, 200, 201, 202, 208, 209, 210, 211, 216, 217, 218, 219, 220, 221, 222, 223, 224, 230, 234, 392, 446, 471, 472, 475, 479, 480, 483, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 506, 513, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 549], "decod": [1, 5, 6, 37, 38, 40, 59, 77, 78, 128, 131, 141, 143, 147, 148, 155, 158, 160, 161, 164, 197, 216, 217, 219, 220, 221, 480, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 509, 516, 520, 527, 528, 529, 532, 534, 535, 537, 538, 544, 546], "plot": [1, 5, 6, 7, 13, 516, 528, 538, 549], "waveform": [1, 5, 6, 40, 47, 69, 131, 172, 509, 516, 532, 536, 538, 545], "data": [1, 2, 5, 6, 7, 10, 11, 13, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 32, 36, 37, 38, 39, 40, 41, 42, 43, 47, 49, 53, 55, 61, 62, 63, 64, 77, 78, 79, 80, 82, 84, 97, 100, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 166, 168, 172, 174, 181, 197, 200, 201, 202, 208, 209, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 471, 482, 499, 506, 509, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 544, 545, 546], "load": [1, 5, 6, 10, 12, 14, 16, 165, 173, 174, 182, 516, 528, 532, 533, 534, 538], "ct": [1, 5, 6, 9, 10, 12, 20, 26, 28, 36, 41, 44, 46, 49, 51, 69, 131, 174, 516, 528, 538, 542, 543, 544, 547], "slice": [1, 2, 5, 6, 8, 9, 20, 26, 28, 131, 516, 525, 526, 528, 538], "axial": [1, 5, 6, 20, 26, 28, 46, 516, 528, 538, 542], "sagitt": [1, 5, 6, 516, 528, 538], "coron": [1, 5, 6, 516, 528, 538], "thi": [2, 3, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 30, 34, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 69, 76, 81, 82, 83, 86, 87, 89, 96, 97, 109, 128, 131, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 153, 155, 162, 164, 167, 173, 174, 185, 191, 202, 205, 207, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 231, 474, 475, 476, 479, 480, 483, 484, 509, 516, 523, 525, 528, 529, 534, 537, 540, 541, 542, 543, 544, 546, 547, 548, 549], "show": [2, 3, 4, 6, 9, 10, 12, 17, 21, 24, 25, 27, 39, 46, 49, 53, 109, 128, 516, 517, 521, 523, 534, 536, 538, 541, 542, 549], "how": [2, 3, 8, 9, 10, 12, 14, 16, 17, 18, 20, 24, 26, 30, 34, 39, 40, 43, 44, 45, 46, 49, 50, 51, 52, 53, 109, 128, 141, 142, 174, 516, 517, 521, 540, 541, 542, 543, 544, 545, 549], "an": [2, 10, 11, 16, 23, 24, 26, 27, 28, 30, 32, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 53, 55, 76, 77, 78, 84, 85, 86, 89, 97, 106, 107, 109, 115, 118, 119, 125, 128, 129, 131, 132, 134, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 158, 159, 164, 165, 174, 175, 184, 185, 195, 207, 208, 209, 210, 211, 212, 213, 214, 218, 219, 220, 221, 222, 223, 224, 230, 231, 234, 446, 473, 475, 476, 477, 478, 479, 480, 481, 483, 499, 506, 516, 519, 520, 526, 528, 529, 531, 532, 534, 535, 537, 540, 541, 542, 544, 546, 547, 548, 549], "mr": [2, 8, 10, 17, 20, 69, 480, 544], "512": [2, 20, 164, 208, 516, 526], "im": 2, "64": [2, 8, 20, 32, 37, 51, 218, 222, 471, 506, 516, 519, 549], "perform": [2, 30, 34, 37, 42, 44, 83, 112, 113, 114, 116, 117, 127, 131, 135, 174, 220, 224, 492, 516, 523, 526, 527, 546, 549], "take": [2, 24, 25, 26, 30, 34, 37, 39, 44, 49, 53, 131, 162, 172, 207, 516, 523, 540, 541, 542, 544], "central": 2, "section": [2, 24, 25, 26, 27, 36, 39, 41, 44, 46, 51, 53, 55, 100, 128, 131, 134, 138, 140, 150, 198, 202, 208, 215, 222, 224, 480, 540, 541], "instead": [2, 34, 41, 43, 51, 52, 53, 95, 131, 144, 145, 146, 148, 153, 162, 172, 174, 185, 224, 479, 480, 516, 519, 522, 526, 527, 528, 531, 532, 534, 535, 537, 540, 541, 542, 543, 544, 546, 547, 549], "averagin": 2, "pixel": [2, 4, 6, 7, 8, 13, 20, 23, 24, 26, 28, 38, 39, 40, 41, 43, 47, 49, 50, 53, 66, 80, 97, 131, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 154, 155, 156, 164, 168, 208, 209, 210, 211, 216, 217, 218, 219, 220, 221, 222, 509, 516, 517, 519, 520, 525, 526, 527, 528, 529, 531, 532, 534, 535, 537, 538, 540, 542, 545, 546], "final": [2, 17, 43, 106, 138, 141, 142, 143, 185, 542, 549], "store": [2, 8, 10, 17, 20, 32, 36, 37, 41, 46, 51, 106, 128, 131, 164, 199, 210, 211, 222, 223, 473, 475, 476, 477, 478, 479, 481, 516, 519, 534, 542, 543, 544, 549], "requir": [2, 10, 12, 20, 26, 27, 36, 37, 41, 42, 44, 46, 50, 51, 52, 53, 128, 131, 138, 140, 141, 143, 144, 145, 146, 147, 155, 164, 174, 183, 185, 198, 207, 208, 209, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 232, 472, 483, 516, 519, 523, 527, 531, 532, 537, 541, 542, 544, 546, 547, 549], "numpi": [2, 3, 4, 23, 30, 34, 36, 39, 41, 44, 45, 50, 51, 52, 82, 97, 102, 103, 131, 155, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 488, 490, 506, 516, 517, 525, 527, 528, 529, 531, 535, 540, 546, 547, 549], "librari": [2, 23, 25, 26, 41, 42, 47, 51, 222, 516, 519, 522, 541, 547], "manipul": [2, 23, 43, 128, 507, 546], "ha": [2, 10, 14, 20, 24, 25, 26, 27, 30, 34, 36, 37, 39, 42, 43, 44, 46, 51, 53, 82, 89, 91, 128, 131, 140, 141, 143, 145, 147, 148, 155, 165, 166, 173, 174, 175, 185, 186, 197, 207, 208, 216, 217, 218, 219, 220, 221, 222, 224, 231, 471, 472, 474, 506, 516, 518, 519, 521, 526, 527, 529, 530, 531, 536, 537, 540, 541, 542, 543, 544, 547, 549], "x": [2, 3, 8, 9, 20, 26, 27, 28, 39, 471, 516, 528, 540, 542, 547, 549], "voxel": 2, "downsampl": [2, 36], "8": [2, 8, 11, 20, 22, 23, 26, 27, 30, 34, 36, 37, 41, 45, 51, 81, 134, 155, 176, 177, 208, 212, 213, 214, 218, 220, 221, 222, 224, 236, 245, 263, 323, 377, 384, 385, 407, 464, 471, 506, 518, 521, 525, 527, 529, 532, 535, 536, 549], "inform": [2, 6, 7, 8, 9, 12, 13, 20, 24, 26, 27, 28, 31, 35, 37, 38, 39, 41, 44, 46, 49, 51, 53, 80, 100, 128, 131, 132, 133, 135, 155, 164, 167, 169, 185, 198, 224, 480, 516, 517, 519, 522, 525, 529, 531, 532, 537, 538, 540, 541, 542, 547, 549], "set": [2, 6, 7, 12, 13, 18, 20, 25, 26, 27, 28, 32, 37, 40, 41, 42, 44, 45, 47, 50, 51, 53, 55, 69, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 91, 92, 93, 95, 96, 101, 102, 103, 109, 128, 129, 131, 145, 148, 161, 164, 165, 166, 172, 173, 174, 176, 177, 182, 185, 197, 223, 446, 472, 475, 479, 480, 483, 484, 509, 516, 517, 522, 525, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 542, 543, 545, 546, 547, 549], "after": [2, 8, 20, 26, 27, 28, 30, 39, 46, 49, 140, 142, 145, 151, 152, 169, 175, 180, 181, 182, 185, 198, 223, 224, 516, 531, 534, 537, 540, 541, 542, 544, 546, 547], "file_meta": [2, 12, 20, 26, 27, 28, 41, 44, 45, 46, 131, 132, 133, 135, 185, 198, 516, 519, 531, 537, 544, 547], "0002": [2, 12, 20, 26, 27, 28, 37, 41, 46, 51, 131, 135, 141, 143, 147, 185, 198, 218, 220, 221, 222, 384, 542, 546], "0000": [2, 8, 12, 20, 26, 27, 28, 41, 46, 198, 516, 537, 542], "file": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 21, 25, 27, 28, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 69, 72, 74, 85, 89, 94, 100, 104, 105, 106, 107, 109, 131, 132, 133, 135, 153, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 185, 187, 196, 197, 198, 200, 201, 202, 205, 509, 516, 517, 518, 519, 521, 522, 525, 528, 529, 531, 532, 534, 535, 536, 537, 538, 540, 541, 542, 545, 547], "meta": [2, 8, 12, 20, 26, 27, 28, 41, 46, 53, 100, 131, 132, 133, 135, 164, 167, 185, 198, 516, 519, 522, 525, 531, 542], "group": [2, 12, 17, 20, 26, 27, 28, 41, 43, 46, 50, 52, 118, 120, 128, 131, 132, 133, 134, 135, 164, 172, 174, 185, 198, 208, 223, 231, 232, 233, 480, 506, 516, 519, 522, 526, 531, 532, 539, 540, 542, 549], "length": [2, 8, 12, 20, 26, 27, 28, 41, 42, 46, 52, 55, 90, 120, 128, 130, 131, 138, 139, 140, 141, 143, 145, 147, 148, 149, 150, 161, 162, 178, 181, 198, 208, 218, 221, 222, 223, 471, 516, 521, 522, 526, 528, 532, 534, 535, 536, 537, 542], "ul": [2, 12, 16, 20, 26, 27, 28, 32, 41, 46, 108, 109, 110, 161, 198, 506, 542, 544], "190": [2, 20, 41], "0001": [2, 12, 20, 26, 27, 28, 41, 46, 131, 135, 141, 143, 147, 198, 542], "version": [2, 8, 12, 20, 24, 26, 27, 28, 37, 39, 41, 43, 46, 47, 55, 80, 82, 84, 85, 89, 96, 99, 100, 102, 103, 106, 128, 131, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 176, 183, 184, 185, 198, 205, 212, 213, 214, 215, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 446, 471, 488, 490, 506, 540, 541, 542, 543, 548], "ob": [2, 12, 20, 26, 27, 28, 32, 41, 46, 140, 190, 198, 491, 516, 520, 535, 542, 543], "b": [2, 8, 12, 16, 20, 22, 26, 27, 28, 37, 41, 46, 50, 51, 128, 131, 158, 161, 185, 471, 480, 540, 541, 542], "x00": [2, 8, 12, 16, 20, 26, 27, 28, 41, 46, 50, 542], "x01": [2, 8, 12, 20, 26, 27, 28, 41, 46, 51, 542], "media": [2, 12, 20, 26, 27, 28, 41, 46, 69, 135, 196, 198, 542, 544], "storag": [2, 9, 12, 14, 20, 26, 27, 28, 41, 46, 51, 69, 135, 196, 198, 509, 516, 519, 520, 525, 535, 542, 544, 549], "sop": [2, 8, 9, 10, 12, 20, 26, 27, 28, 36, 41, 46, 51, 52, 69, 135, 167, 172, 173, 174, 175, 185, 198, 209, 222, 509, 516, 525, 526, 532, 535, 536, 542, 547], "class": [2, 8, 9, 12, 14, 20, 26, 27, 28, 39, 40, 41, 46, 51, 52, 55, 67, 69, 70, 81, 128, 130, 131, 132, 133, 134, 135, 155, 158, 160, 161, 164, 173, 174, 175, 185, 198, 207, 223, 224, 230, 231, 384, 446, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 509, 513, 516, 517, 518, 519, 522, 523, 524, 525, 526, 527, 529, 531, 532, 535, 536, 537, 541, 542, 544, 547, 548], "uid": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 35, 36, 37, 41, 44, 45, 46, 51, 53, 97, 131, 135, 138, 139, 155, 156, 173, 174, 185, 198, 209, 216, 217, 218, 219, 220, 221, 222, 223, 224, 496, 505, 509, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 537, 540, 542, 544, 546, 547], "ui": [2, 12, 16, 20, 26, 27, 28, 32, 41, 46, 194, 198, 496, 516, 519, 529, 542], "0003": [2, 12, 20, 26, 27, 28, 41, 46, 135, 198, 542], "instanc": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 36, 41, 43, 46, 48, 49, 51, 67, 69, 78, 88, 131, 135, 154, 155, 158, 160, 161, 164, 165, 172, 173, 174, 175, 185, 198, 207, 209, 222, 223, 224, 225, 226, 227, 228, 229, 230, 474, 475, 476, 513, 516, 528, 534, 537, 542, 547, 548], "3": [2, 4, 5, 8, 10, 12, 16, 17, 19, 20, 22, 23, 26, 28, 30, 32, 34, 36, 37, 41, 42, 45, 46, 51, 52, 55, 99, 106, 108, 109, 110, 128, 130, 131, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 155, 161, 172, 176, 183, 184, 185, 198, 208, 210, 211, 212, 213, 214, 215, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 237, 238, 248, 254, 273, 275, 277, 278, 286, 291, 294, 342, 367, 370, 389, 394, 395, 416, 428, 437, 446, 448, 453, 471, 509, 519, 520, 522, 523, 524, 525, 526, 527, 531, 532, 533, 536, 540, 541, 542, 543, 544, 547, 549], "6": [2, 8, 10, 20, 23, 26, 28, 32, 37, 45, 46, 51, 55, 78, 128, 130, 131, 140, 215, 218, 222, 272, 299, 310, 373, 389, 403, 422, 436, 444, 447, 454, 461, 480, 517, 522, 523, 525, 532, 533, 536, 541, 542, 549], "4": [2, 8, 9, 10, 12, 16, 20, 21, 23, 24, 26, 28, 36, 37, 39, 41, 45, 46, 51, 130, 131, 138, 140, 144, 145, 148, 149, 150, 151, 180, 181, 185, 198, 210, 211, 212, 213, 214, 222, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 502, 522, 527, 528, 531, 532, 534, 537, 540, 542, 544, 548, 549], "5962": [2, 8, 10, 20, 26, 28, 46, 542], "20040826185059": [2, 8, 20], "5457": [2, 8, 20], "0010": [2, 12, 16, 17, 20, 26, 27, 28, 37, 39, 41, 46, 50, 51, 66, 67, 97, 131, 135, 144, 145, 146, 164, 198, 208, 218, 219, 220, 221, 222, 506, 507, 512, 513, 516, 525, 537, 541, 542, 544, 546], "transfer": [2, 12, 16, 20, 26, 27, 28, 30, 34, 35, 37, 41, 46, 47, 97, 131, 132, 135, 138, 139, 144, 145, 155, 156, 165, 173, 174, 182, 185, 198, 216, 217, 218, 219, 220, 221, 222, 223, 224, 237, 331, 336, 339, 362, 392, 399, 446, 449, 472, 509, 516, 520, 525, 527, 528, 529, 531, 532, 536, 537, 542, 546, 547, 549], "syntax": [2, 12, 16, 20, 24, 26, 27, 28, 30, 34, 35, 37, 41, 46, 47, 53, 97, 131, 132, 135, 138, 139, 144, 145, 155, 156, 165, 173, 174, 182, 185, 198, 216, 217, 218, 219, 220, 221, 222, 223, 224, 237, 331, 336, 339, 362, 392, 399, 446, 449, 472, 509, 516, 519, 520, 525, 527, 528, 529, 531, 532, 536, 537, 542, 546, 547, 549], "explicit": [2, 12, 20, 26, 28, 44, 45, 46, 55, 89, 131, 132, 145, 161, 165, 185, 198, 218, 224, 225, 226, 227, 237, 446, 472, 480, 516, 519, 520, 528, 529, 531, 534, 537, 542], "littl": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 41, 44, 45, 46, 131, 132, 141, 142, 143, 145, 147, 149, 150, 151, 152, 155, 161, 162, 165, 174, 180, 181, 182, 185, 198, 218, 221, 225, 227, 228, 446, 472, 485, 486, 487, 488, 489, 490, 494, 495, 496, 498, 499, 501, 502, 516, 519, 531, 537, 542, 547, 549], "endian": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 41, 44, 45, 46, 131, 132, 141, 142, 143, 145, 147, 149, 150, 151, 152, 155, 161, 162, 165, 174, 179, 180, 181, 182, 185, 191, 198, 218, 221, 222, 224, 225, 226, 227, 228, 237, 446, 472, 485, 486, 487, 488, 489, 490, 494, 495, 496, 498, 499, 501, 502, 516, 519, 527, 531, 536, 537, 542, 547, 549], "0012": [2, 12, 20, 26, 27, 28, 41, 46, 135, 198, 384, 542], "implement": [2, 12, 20, 26, 27, 28, 30, 34, 41, 46, 53, 135, 160, 161, 198, 384, 516, 532, 542], "0013": [2, 12, 20, 26, 27, 28, 41, 46, 135, 198, 542, 544], "sh": [2, 12, 16, 20, 26, 28, 32, 41, 46, 198, 503, 542], "dctool100": [2, 20, 26, 28, 46, 542], "0016": [2, 20, 26, 27, 28, 41, 46, 198, 542], "applic": [2, 20, 26, 27, 28, 32, 42, 46, 198, 542, 547], "entiti": [2, 20, 26, 28, 32, 46, 174, 198, 542], "ae": [2, 20, 26, 28, 32, 46, 198, 485, 501, 516, 525, 537, 542], "clunie1": [2, 20, 26, 28, 46, 542], "0008": [2, 12, 20, 26, 27, 28, 37, 41, 46, 51, 76, 77, 78, 79, 131, 141, 143, 144, 146, 147, 164, 165, 209, 218, 220, 221, 222, 512, 513, 516, 517, 529, 542, 543, 544], "type": [2, 3, 8, 17, 18, 20, 25, 26, 27, 28, 30, 34, 37, 38, 40, 41, 44, 46, 51, 69, 76, 77, 79, 82, 99, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 147, 148, 149, 151, 152, 153, 155, 161, 164, 165, 166, 168, 169, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 197, 198, 200, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 232, 446, 471, 472, 480, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 498, 500, 501, 502, 503, 504, 505, 506, 516, 519, 520, 522, 533, 534, 536, 537, 541, 542, 544, 547, 549], "c": [2, 10, 18, 20, 22, 24, 26, 27, 28, 32, 37, 41, 43, 46, 51, 52, 93, 131, 208, 210, 211, 212, 213, 214, 215, 218, 222, 501, 516, 523, 542, 543, 544, 546, 547, 549], "deriv": [2, 8, 20, 41, 48, 81, 97, 128, 133, 516, 522, 542], "secondari": [2, 8, 20], "other": [2, 8, 17, 20, 24, 30, 32, 37, 42, 44, 45, 46, 49, 50, 51, 53, 168, 185, 190, 191, 198, 222, 480, 537, 540, 542, 544, 547], "creation": [2, 8, 12, 20, 26, 27, 28, 41, 172, 516, 528, 542, 544], "date": [2, 8, 9, 12, 17, 20, 23, 26, 27, 28, 32, 41, 42, 46, 93, 174, 473, 509, 516, 525, 526, 528, 534, 542, 546], "da": [2, 12, 17, 20, 26, 27, 28, 32, 41, 46, 59, 64, 93, 131, 487, 501, 516, 525, 534, 542], "20040826": [2, 8, 20], "time": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 26, 27, 28, 32, 41, 42, 46, 53, 69, 91, 93, 109, 132, 143, 166, 179, 182, 222, 474, 481, 516, 519, 525, 534, 539, 540, 541, 542, 544, 549], "tm": [2, 12, 20, 26, 27, 28, 32, 41, 59, 64, 93, 495, 501, 516, 525, 534, 542], "185434": [2, 8, 20], "0014": [2, 20, 26, 27, 28, 542], "creator": [2, 8, 16, 20, 26, 28, 46, 110, 111, 119, 122, 123, 124, 131, 134, 198, 231, 516, 526, 531, 536, 542, 544], "0018": [2, 20, 26, 27, 28, 41, 43, 198, 209, 222], "0020": [2, 12, 17, 20, 26, 27, 28, 41, 542, 544], "studi": [2, 8, 9, 10, 20, 26, 27, 28, 41, 172, 174, 544], "0021": [2, 20], "seri": [2, 8, 10, 20, 39, 167, 172, 174, 516, 520, 541, 544, 547], "0022": [2, 20, 542], "acquisit": [2, 8, 20], "0030": [2, 17, 20, 41], "185059": [2, 8, 20], "0031": [2, 20], "0032": [2, 20], "0050": [2, 20, 26, 27, 41, 50], "access": [2, 8, 20, 23, 26, 27, 40, 41, 46, 50, 55, 69, 82, 99, 131, 164, 516, 518, 525, 531, 532, 536, 537, 541, 543, 544, 545, 548], "number": [2, 8, 11, 18, 20, 24, 26, 27, 28, 30, 34, 37, 39, 41, 43, 46, 50, 109, 111, 128, 130, 131, 134, 138, 140, 141, 143, 144, 145, 146, 147, 150, 152, 155, 161, 163, 164, 165, 174, 175, 176, 179, 182, 197, 199, 200, 206, 208, 222, 223, 224, 231, 232, 471, 475, 476, 483, 516, 517, 521, 524, 528, 534, 535, 537, 541, 542, 544, 546, 548, 549], "0060": [2, 20, 26, 27, 41], "modal": [2, 8, 9, 10, 20, 26, 28, 41, 47, 210, 211, 213, 214, 222, 516, 529, 544, 548], "0070": [2, 20, 26, 27], "manufactur": [2, 8, 20, 131], "lo": [2, 12, 16, 17, 18, 20, 26, 27, 32, 46, 131, 503, 542, 544], "toshiba_mec": [2, 8, 20], "0080": [2, 20, 26, 27, 28], "institut": [2, 8, 20], "toshiba": [2, 8, 20], "0090": [2, 20], "refer": [2, 8, 20, 26, 27, 30, 37, 39, 41, 51, 93, 138, 140, 143, 144, 145, 146, 147, 148, 150, 151, 154, 173, 208, 209, 210, 211, 212, 213, 214, 215, 222, 223, 225, 226, 227, 228, 229, 471, 516, 519, 540, 544, 547, 549], "physician": [2, 8, 20], "pn": [2, 12, 17, 20, 32, 41, 64, 128, 131, 480, 493, 516, 529, 534, 541, 542, 544], "0201": [2, 20, 516, 528], "timezon": [2, 8, 20], "offset": [2, 8, 20, 44, 46, 50, 128, 131, 134, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 161, 169, 170, 171, 174, 180, 181, 223, 494, 502, 516, 529, 532, 535, 537, 544, 547], "utc": [2, 8, 20], "0400": [2, 8, 20], "1010": [2, 20, 52, 549], "station": [2, 8, 20], "000000000": [2, 8, 20], "1060": [2, 20], "1070": [2, 20], "oper": [2, 8, 20, 36, 41, 42, 46, 47, 85, 131, 161, 210, 211, 213, 214, 222, 223, 224, 516, 519, 527, 529, 532, 542, 546], "1090": [2, 20], "model": [2, 8, 20, 24, 26, 41, 53, 128, 131, 543, 549], "mrt50h1": [2, 8, 20], "patient": [2, 8, 9, 10, 12, 17, 20, 26, 27, 28, 43, 131, 172, 174, 480, 516, 518, 525, 535, 541, 542, 544], "compressedsampl": [2, 8, 9, 20, 26, 28, 69, 541, 542], "mr1": [2, 8, 20], "4mr1": [2, 8, 17, 20], "birth": [2, 8, 17, 20], "0040": [2, 20], "sex": [2, 8, 20], "1020": [2, 20], "size": [2, 8, 9, 20, 24, 26, 51, 53, 97, 128, 161, 165, 182, 216, 217, 516, 526, 532, 536, 546, 547], "1030": [2, 20, 516, 530], "80": [2, 8, 20, 39, 45, 52, 144, 222, 237, 334, 336, 383, 549], "contrast": [2, 8, 10, 20, 544], "bolu": [2, 8, 20], "agent": [2, 8, 20], "scan": [2, 8, 20, 26, 28, 172, 547], "se": [2, 8, 20], "variant": [2, 8, 20], "option": [2, 8, 17, 20, 25, 27, 28, 30, 31, 32, 34, 35, 42, 45, 49, 81, 82, 94, 104, 105, 106, 107, 109, 111, 128, 129, 131, 132, 135, 138, 140, 141, 142, 143, 144, 146, 147, 150, 151, 152, 155, 158, 161, 162, 164, 165, 168, 174, 175, 176, 182, 185, 197, 208, 209, 212, 213, 214, 215, 218, 220, 221, 222, 223, 224, 232, 471, 472, 480, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 498, 500, 501, 502, 503, 504, 505, 506, 509, 516, 518, 519, 525, 529, 532, 534, 537, 544, 549], "0023": [2, 12, 20, 26, 27], "3d": [2, 4, 8, 20, 222, 516, 532], "thick": [2, 8, 20], "repetit": [2, 8, 20, 53], "4000": [2, 8, 20], "0081": [2, 20], "echo": [2, 8, 20], "240": [2, 8, 20], "0083": [2, 20], "averag": [2, 8, 20], "0084": [2, 20, 26, 27, 28], "frequenc": [2, 8, 20, 52, 549], "63": [2, 8, 20, 542], "924339": [2, 8, 20], "0085": [2, 20], "nucleu": [2, 8, 20], "h": [2, 8, 12, 20, 22, 24, 26, 27, 28], "0086": [2, 20, 26, 27, 28], "0091": [2, 20], "train": [2, 8, 20], "1000": [2, 20, 52, 549], "devic": [2, 8, 20, 26, 27, 548], "serial": [2, 8, 20, 128, 131, 543], "0000200": [2, 8, 20], "softwar": [2, 8, 20, 42, 546], "v3": [2, 8, 20, 516, 532, 534, 535, 549], "51": [2, 8, 20, 45, 144, 237, 333, 339], "p25": [2, 8, 20], "1314": [2, 20], "flip": [2, 8, 20], "angl": [2, 8, 20], "90": [2, 8, 20, 45, 52, 144, 222, 237, 265, 328, 331, 516, 529], "5100": [2, 20, 43], "posit": [2, 8, 20, 24, 26, 27, 28, 43, 141, 142, 143, 145, 147, 148, 151, 152, 157, 161, 169, 179, 180, 181, 198], "hf": [2, 8, 20, 43], "000d": [2, 20], "000e": [2, 20], "0011": [2, 20, 37, 50, 131, 208, 218, 220, 221, 222], "83": [2, 8, 20], "9063": [2, 8, 20], "91": [2, 8, 20, 45, 144, 222, 237, 327, 331, 368, 516, 521, 529], "2000": [2, 8, 20, 37, 44, 80, 144, 222, 331, 516, 529, 532, 546, 547], "6406": [2, 8, 20], "0037": [2, 20], "orient": [2, 8, 20], "0052": [2, 20], "frame": [2, 8, 20, 30, 34, 37, 44, 51, 131, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 155, 208, 215, 220, 222, 223, 224, 516, 525, 527, 529, 534, 537, 547], "later": [2, 8, 20, 30, 99, 475, 476, 516, 523, 540, 542], "1040": [2, 20], "indic": [2, 8, 20, 37, 46, 50, 97, 128, 131, 161, 224, 516, 523, 540, 541, 542], "1041": [2, 20], "locat": [2, 4, 8, 9, 20, 94, 131, 134, 144, 173, 180, 541, 544], "comment": [2, 8, 20, 540], "lt": [2, 20, 32], "uncompress": [2, 8, 20, 34, 36, 43, 44, 45, 51, 131, 155, 222, 224, 449, 516, 527, 529, 534, 535, 547], "0028": [2, 20, 37, 45, 51, 131, 141, 143, 144, 146, 147, 209, 210, 211, 212, 213, 214, 215, 218, 220, 221, 222, 516, 529, 531, 542], "sampl": [2, 8, 20, 30, 34, 36, 37, 44, 51, 52, 131, 155, 222, 223, 224, 506, 547, 549], "per": [2, 8, 20, 30, 34, 36, 37, 41, 44, 51, 55, 131, 133, 138, 139, 144, 155, 177, 218, 222, 223, 224, 516, 522, 529, 532, 542, 547], "u": [2, 20, 26, 28, 32, 69, 110, 161, 183, 184, 506, 516, 518, 543, 544, 546, 547, 549], "0004": [2, 10, 20, 26, 27, 28, 37, 51, 131, 172, 174, 215, 218, 220, 222, 516, 529, 544], "photometr": [2, 8, 20, 30, 36, 37, 44, 45, 51, 131, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 516, 529, 547], "interpret": [2, 8, 20, 30, 36, 37, 44, 45, 50, 51, 131, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 516, 529, 547, 549], "monochrome2": [2, 8, 20, 36, 37, 218, 220, 544], "space": [2, 8, 9, 20, 30, 34, 36, 37, 39, 44, 47, 109, 155, 215, 222, 224, 480, 485, 496, 498, 500, 516, 525, 537, 542, 544], "3125": [2, 8, 20], "0100": [2, 20, 37, 45, 52, 131, 198, 208, 218, 220, 221, 222, 506, 549], "bit": [2, 8, 20, 30, 32, 34, 36, 37, 39, 45, 49, 50, 51, 131, 134, 148, 155, 210, 211, 218, 221, 222, 223, 224, 516, 526, 527, 529, 534, 535, 536, 537, 540, 541, 547, 549], "alloc": [2, 8, 20, 36, 37, 39, 45, 131, 218, 221, 222, 223, 224, 516, 536, 549], "16": [2, 8, 20, 26, 28, 30, 34, 36, 37, 45, 55, 128, 131, 134, 218, 220, 221, 222, 224, 411, 483, 484, 506, 516, 529, 547, 549], "0101": [2, 20, 37, 131, 210, 211, 218, 220, 222], "0102": [2, 20, 37, 198, 208], "high": [2, 8, 20, 36, 37, 39, 111, 516, 529], "15": [2, 8, 20, 423, 509, 538, 542, 549], "0103": [2, 20, 37, 131, 210, 211, 218, 220, 221, 222], "represent": [2, 8, 20, 26, 28, 32, 36, 37, 41, 60, 63, 75, 109, 111, 113, 123, 128, 131, 134, 140, 173, 174, 175, 210, 211, 222, 223, 475, 476, 480, 482, 483, 500, 503, 509, 516, 532, 534, 537, 542, 543, 549], "0106": [2, 20], "smallest": [2, 8, 20], "ss": [2, 4, 20, 26, 28, 32, 183, 184, 506, 516, 518, 549], "0107": [2, 20], "largest": [2, 8, 20], "1050": [2, 20, 213, 214, 222, 542], "center": [2, 8, 20, 213, 214, 222, 542], "600": [2, 8, 20], "1051": [2, 20, 213, 214, 222, 516, 534, 542], "width": [2, 8, 20, 128, 213, 214, 222, 542], "1600": [2, 8, 20], "7fe0": [2, 20, 26, 28, 39, 41, 51, 66, 67, 97, 131, 141, 143, 144, 145, 146, 147, 164, 218, 219, 220, 221, 222, 507, 512, 513, 516, 525, 529, 537, 542], "ow": [2, 20, 26, 28, 32, 50, 52, 185, 191, 224, 492, 516, 520, 531, 536, 542], "arrai": [2, 4, 14, 20, 26, 28, 39, 41, 50, 51, 52, 53, 82, 97, 102, 128, 131, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 474, 516, 517, 527, 528, 531, 532, 537, 542], "128": [2, 9, 12, 20, 26, 28, 132, 157, 169, 179, 180, 181, 185, 198, 346, 391, 542, 547], "element": [2, 10, 12, 16, 17, 18, 20, 24, 25, 26, 27, 28, 36, 38, 39, 40, 43, 47, 49, 50, 51, 52, 53, 55, 66, 77, 78, 80, 82, 84, 85, 93, 94, 97, 100, 101, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 138, 139, 144, 145, 146, 155, 162, 163, 164, 165, 166, 174, 181, 182, 183, 184, 185, 198, 200, 201, 208, 216, 218, 220, 221, 222, 223, 224, 231, 232, 473, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 506, 507, 509, 512, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 537, 541, 544, 547, 549], "fffc": [2, 20, 26, 28, 542], "trail": [2, 8, 20, 26, 28, 140, 208, 222, 223, 485, 496, 498, 500, 516, 525, 542], "pad": [2, 3, 8, 20, 26, 28, 138, 140, 145, 203, 208, 222, 223, 516, 526, 528, 529, 532, 534, 535, 542], "126": [2, 20, 26, 28, 542, 549], "author": [2, 8, 9, 11, 12, 16, 17, 20, 22], "guillaum": [2, 8, 9, 11, 12, 17, 20, 22], "lemaitr": [2, 8, 9, 11, 12, 17, 20, 22], "g": [2, 8, 9, 11, 12, 17, 20, 22, 24, 26, 27, 30, 34, 36, 37, 39, 41, 42, 43, 50, 51, 55, 85, 128, 131, 134, 155, 164, 207, 208, 222, 224, 230, 475, 480, 505, 516, 519, 526, 528, 532, 537, 542], "lemaitre58": [2, 8, 9, 11, 12, 17, 20, 22], "gmail": [2, 8, 9, 11, 12, 17, 20, 22], "com": [2, 8, 9, 11, 12, 17, 20, 22, 23, 540, 541, 546], "licens": [2, 8, 9, 11, 12, 16, 17, 20, 22, 516, 518, 519, 541], "mit": [2, 8, 9, 11, 12, 16, 17, 20, 22, 43, 516, 518, 519], "fixm": 2, "test": [2, 12, 16, 24, 26, 27, 28, 41, 43, 89, 108, 109, 110, 131, 223, 484, 516, 517, 523, 525, 529, 532, 534, 536], "get": [2, 9, 10, 14, 26, 27, 32, 39, 41, 42, 43, 45, 46, 49, 50, 51, 52, 93, 97, 131, 161, 172, 222, 509, 516, 519, 520, 528, 532, 534, 540, 541, 545, 546, 547], "arr": [2, 3, 39, 41, 44, 50, 51, 52, 131, 208, 209, 210, 211, 212, 213, 214, 215, 222, 223, 547, 549], "pixel_arrai": [2, 4, 9, 36, 39, 41, 44, 45, 47, 49, 131, 516, 518, 529, 537], "shape": [2, 4, 50, 51, 52, 131, 155, 208, 215, 216, 217, 220, 222, 224, 506, 547, 549], "arr_downsampl": 2, "copi": [2, 10, 45, 53, 131, 174, 516, 522, 532, 535, 540, 541, 544, 546], "back": [2, 14, 16, 20, 36, 39, 43, 50, 51, 53, 540, 541, 542, 544], "origin": [2, 10, 20, 24, 26, 28, 37, 44, 45, 46, 50, 53, 89, 131, 166, 174, 218, 224, 471, 475, 476, 478, 479, 480, 540, 541, 542, 547, 549], "pixeldata": [2, 30, 36, 41, 44, 51, 53, 136, 138, 139, 222, 223, 224, 516, 528, 529, 547], "tobyt": [2, 51, 549], "updat": [2, 10, 18, 20, 26, 27, 36, 50, 108, 109, 110, 111, 131, 172, 174, 183, 184, 198, 516, 518, 519, 521, 522, 524, 525, 526, 527, 529, 531, 532, 534, 535, 536, 537, 540, 541, 544, 546, 547], "regard": 2, "given": [2, 11, 24, 26, 27, 28, 32, 45, 51, 52, 77, 79, 128, 129, 131, 134, 135, 141, 143, 161, 164, 166, 172, 174, 208, 218, 220, 221, 222, 231, 475, 476, 480, 499, 506, 516, 531, 534, 542, 544, 546, 547, 549], "n": [2, 8, 11, 14, 20, 26, 28, 198, 208, 210, 211, 212, 213, 214, 218, 220, 221, 222, 506, 544], "total": [2, 3, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 138, 139, 208, 222, 223, 538, 547], "run": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 41, 42, 43, 53, 109, 131, 480, 516, 519, 522, 532, 537, 541, 542, 545, 546], "script": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 53, 516, 526, 537, 539], "minut": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20], "005": [2, 5, 8, 13, 538], "second": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 37, 42, 48, 480, 549], "plot_downsize_imag": [2, 5, 538], "matplotlib": [3, 4, 9, 47, 549], "np": [3, 4, 208, 209, 210, 211, 212, 213, 214, 218, 220, 221, 222, 223, 224, 506, 547, 549], "pyplot": [3, 4, 9, 49, 549], "plt": [3, 4, 9, 49, 549], "generate_multiplex": [3, 131, 506, 516, 532, 549], "first": [3, 20, 26, 28, 36, 37, 39, 41, 42, 43, 46, 48, 51, 53, 76, 77, 79, 97, 106, 131, 141, 142, 143, 144, 145, 147, 148, 151, 152, 169, 174, 182, 222, 224, 480, 516, 527, 528, 529, 539, 540, 541, 544, 549], "channel": [3, 20, 37, 51, 52, 131, 218, 506, 549], "multiplex": [3, 52, 131, 506, 516, 532, 549], "ch_idx": 3, "we": [3, 10, 16, 17, 18, 24, 26, 28, 36, 43, 45, 93, 131, 539, 540, 541, 542, 544, 546, 547, 549], "could": [3, 24, 25, 26, 41, 51, 53, 76, 77, 79, 207, 216, 516, 519, 520, 534, 540, 541], "also": [3, 17, 26, 27, 28, 30, 32, 34, 39, 41, 43, 46, 48, 49, 51, 53, 78, 118, 131, 155, 169, 198, 224, 446, 480, 516, 517, 518, 519, 520, 523, 524, 527, 528, 532, 537, 540, 541, 542, 543, 544, 546, 547, 548, 549], "waveform_arrai": [3, 47, 131, 516, 532, 549], "fig": [3, 549], "ax": 3, "subplot": [3, 4, 549], "waveformsequ": [3, 52, 549], "as_raw": [3, 52, 506, 516, 536, 549], "fals": [3, 4, 10, 14, 30, 32, 34, 39, 42, 44, 46, 55, 69, 80, 81, 82, 85, 88, 90, 93, 94, 95, 96, 97, 101, 102, 103, 106, 115, 116, 125, 126, 128, 131, 132, 135, 138, 139, 155, 161, 162, 164, 168, 169, 174, 176, 177, 180, 181, 182, 185, 198, 205, 215, 218, 220, 222, 223, 224, 446, 472, 474, 475, 476, 484, 485, 486, 487, 488, 489, 490, 494, 495, 496, 498, 499, 501, 502, 506, 516, 522, 526, 531, 534, 536, 542, 544, 549], "mplx": 3, "zip": [3, 6, 516, 528, 549], "nr_channel": 3, "numberofwaveformchannel": [3, 52, 506, 549], "nr_sampl": 3, "numberofwaveformsampl": [3, 506, 549], "sampling_fq": 3, "samplingfrequ": [3, 52, 549], "hz": [3, 52, 549], "mplx_label": 3, "multiplexgrouplabel": [3, 549], "ch_item": 3, "channeldefinitionsequ": [3, 549], "arang": [3, 549], "x_unit": 3, "channelsensitivityunitssequ": [3, 549], "1c": [3, 185, 198, 218, 220, 221, 222, 549], "so": [3, 16, 26, 27, 30, 32, 34, 39, 41, 42, 50, 51, 53, 93, 131, 174, 176, 185, 205, 472, 474, 516, 517, 520, 537, 540, 542, 543, 544, 547, 549], "check": [3, 12, 41, 42, 115, 116, 118, 119, 121, 125, 126, 131, 133, 135, 155, 177, 185, 198, 474, 484, 516, 522, 525, 527, 528, 531, 532, 534, 537, 540, 541, 546, 549], "y_unit": 3, "codemean": [3, 549], "els": [3, 4, 8, 36, 131, 165, 179, 182, 474, 542], "unitless": [3, 51, 506, 549], "descript": [3, 16, 20, 25, 26, 27, 33, 40, 41, 43, 46, 108, 109, 110, 111, 114, 124, 128, 134, 516, 517, 518, 531, 535, 537], "ch_sourc": 3, "channelsourcesequ": [3, 549], "set_titl": 3, "set_xlabel": 3, "set_ylabel": [3, 549], "tight_layout": 3, "227": [3, 5, 538], "plot_waveform": [3, 5, 538], "multipl": [4, 30, 32, 34, 37, 41, 46, 50, 51, 78, 109, 111, 112, 122, 128, 131, 141, 143, 144, 146, 147, 148, 155, 212, 213, 214, 215, 222, 224, 230, 480, 499, 516, 529, 535, 537, 542], "sort": [4, 10, 131, 544], "them": [4, 8, 24, 26, 27, 28, 30, 34, 39, 40, 41, 45, 46, 50, 53, 131, 161, 488, 490, 516, 524, 528, 532, 541, 542, 544], "reslic": [4, 5, 538], "differ": [4, 6, 17, 21, 25, 26, 28, 32, 36, 40, 46, 51, 131, 516, 519, 531, 538, 540, 541, 542, 543, 544], "plane": [4, 20, 30, 37, 51, 208, 222, 223, 224], "glob": [4, 10, 104, 105, 107, 544], "fname": 4, "append": [4, 11, 18, 20, 41, 140, 471, 542, 549], "count": 4, "skip": [4, 18, 516, 535, 540], "sliceloc": [4, 9, 26, 28], "eg": 4, "scout": [4, 20], "view": [4, 10, 20, 36, 41, 43, 47, 51, 212, 213, 214, 222, 223, 224, 516, 517, 519, 541, 544, 549], "skipcount": 4, "hasattr": 4, "ensur": [4, 32, 36, 42, 44, 46, 96, 131, 135, 164, 174, 185, 207, 222, 223, 475, 476, 516, 522, 525, 534, 536, 537, 540], "thei": [4, 39, 41, 46, 50, 51, 76, 88, 97, 131, 135, 185, 198, 223, 516, 534, 537, 540, 541, 542, 544, 546, 547], "ar": [4, 10, 18, 24, 26, 27, 28, 36, 37, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 69, 76, 77, 81, 82, 85, 94, 97, 101, 102, 108, 110, 111, 128, 131, 133, 134, 135, 138, 139, 141, 143, 144, 145, 146, 147, 148, 155, 161, 164, 169, 172, 174, 177, 183, 184, 185, 198, 207, 209, 210, 211, 213, 214, 216, 217, 221, 222, 224, 231, 480, 483, 498, 501, 503, 505, 516, 522, 527, 528, 529, 531, 532, 534, 535, 537, 539, 540, 541, 542, 544, 546, 547, 548, 549], "correct": [4, 16, 20, 24, 26, 36, 37, 42, 44, 45, 50, 52, 76, 80, 97, 131, 164, 179, 183, 184, 207, 220, 222, 516, 526, 527, 529, 534, 535, 537, 540, 542, 547, 549], "order": [4, 29, 30, 33, 34, 37, 51, 97, 131, 132, 134, 144, 155, 175, 179, 183, 184, 185, 197, 221, 222, 446, 516, 517, 524, 527, 529, 540, 549], "kei": [4, 29, 30, 33, 34, 41, 85, 128, 131, 134, 155, 172, 175, 208, 231, 516, 532, 540], "lambda": 4, "aspect": 4, "assum": [4, 25, 26, 44, 51, 89, 145, 516, 525, 544, 547, 549], "all": [4, 6, 8, 10, 12, 17, 20, 24, 26, 27, 28, 37, 40, 41, 42, 44, 47, 53, 67, 69, 97, 110, 128, 131, 133, 136, 137, 138, 140, 145, 148, 155, 161, 164, 174, 176, 183, 184, 185, 207, 224, 237, 513, 516, 517, 518, 519, 522, 524, 527, 529, 532, 534, 535, 536, 537, 538, 540, 541, 542, 546, 547], "same": [4, 30, 34, 41, 42, 43, 50, 109, 131, 160, 161, 174, 207, 224, 475, 476, 516, 520, 522, 541, 542, 544], "p": [4, 10, 22, 24, 26, 55, 480, 516, 522, 544], "pixelspac": [4, 9], "slicethick": 4, "ax_aspect": 4, "sag_aspect": 4, "cor_aspect": 4, "img_shap": 4, "list": [4, 6, 7, 8, 10, 13, 20, 26, 28, 30, 32, 34, 36, 41, 43, 44, 76, 77, 78, 79, 97, 104, 105, 107, 128, 129, 131, 136, 138, 139, 141, 143, 147, 148, 151, 152, 155, 162, 164, 165, 168, 170, 174, 175, 183, 184, 192, 196, 197, 201, 202, 204, 207, 208, 223, 224, 230, 471, 480, 487, 488, 489, 490, 493, 494, 495, 496, 499, 500, 503, 504, 509, 516, 519, 522, 523, 529, 532, 534, 535, 537, 538, 541, 542, 544, 546, 547], "img3d": 4, "zero": [4, 20, 32, 51, 131, 182, 223, 516, 536, 542, 547], "fill": [4, 540, 541], "img2d": 4, "orthogon": 4, "a1": 4, "imshow": [4, 9, 49], "set_aspect": 4, "a2": 4, "a3": 4, "t": [4, 8, 10, 18, 20, 26, 27, 28, 32, 37, 39, 41, 46, 50, 53, 84, 131, 141, 143, 144, 147, 155, 165, 174, 185, 207, 208, 215, 218, 221, 222, 224, 446, 471, 516, 528, 531, 532, 537, 540, 541, 542, 543, 544, 547], "00": [5, 13, 19, 21, 148, 538], "233": 5, "execut": [5, 13, 19, 21, 480, 538], "auto_exampl": [5, 13, 19, 21], "image_process": [5, 538], "mem": [5, 13, 19, 21, 538], "mb": [5, 13, 19, 21, 164, 506, 538], "imag": [5, 8, 9, 10, 12, 17, 20, 26, 28, 30, 34, 43, 44, 46, 47, 50, 51, 69, 131, 139, 140, 144, 145, 148, 172, 174, 209, 215, 216, 218, 219, 220, 221, 222, 224, 516, 519, 526, 528, 532, 534, 538, 542, 544, 546, 547], "000": [5, 21, 538, 549], "somewher": [6, 43], "analys": [6, 21, 538], "between": [6, 21, 36, 39, 50, 51, 109, 208, 516, 537, 538, 540, 541, 542], "displai": [6, 20, 21, 26, 27, 28, 36, 41, 47, 49, 100, 128, 131, 516, 517, 523, 528, 534, 538, 540, 549], "unicod": [6, 21, 32, 77, 79, 480, 516, 517, 519, 520, 536, 538], "person": [6, 17, 21, 32, 39, 480, 516, 527, 534, 538, 548], "hierarch": [6, 21, 144, 222, 516, 529, 538], "tree": [6, 21, 41, 175, 516, 523, 538, 542], "work": [6, 15, 19, 21, 25, 26, 27, 30, 34, 39, 41, 42, 43, 45, 46, 47, 53, 174, 516, 517, 519, 520, 522, 523, 524, 526, 528, 532, 537, 538, 540, 541, 542, 546, 548, 549], "memori": [6, 16, 21, 30, 164, 165, 166, 182, 215, 218, 222, 516, 519, 527, 528, 529, 537, 538, 544], "base": [6, 21, 36, 37, 43, 67, 70, 81, 131, 154, 473, 477, 481, 509, 513, 516, 519, 525, 529, 532, 538, 540, 541, 544, 547, 549], "rtplan": [6, 7, 13, 24, 26, 27, 28, 41, 43, 69, 164, 538], "format": [6, 7, 12, 13, 20, 24, 26, 27, 28, 32, 34, 41, 42, 43, 45, 128, 131, 138, 139, 140, 145, 164, 185, 200, 218, 221, 475, 476, 480, 499, 516, 517, 518, 519, 525, 528, 534, 535, 537, 538, 542, 544, 546], "write": [6, 7, 10, 13, 14, 16, 17, 24, 26, 38, 40, 42, 46, 47, 55, 70, 94, 131, 132, 158, 160, 161, 174, 185, 187, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 475, 476, 509, 516, 518, 520, 525, 526, 528, 530, 531, 532, 534, 535, 537, 538, 541, 543, 544, 545], "modifi": [6, 15, 30, 40, 43, 50, 51, 53, 106, 131, 174, 516, 529, 532, 537, 545], "anonym": [6, 15, 19, 41, 46, 516, 517, 518, 528, 538], "privat": [6, 15, 17, 19, 20, 24, 26, 27, 28, 41, 47, 53, 108, 109, 110, 111, 118, 119, 122, 123, 124, 126, 128, 129, 131, 134, 172, 173, 174, 198, 231, 392, 446, 472, 509, 516, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 531, 532, 534, 535, 536, 537, 538, 542, 544], "dictionari": [6, 15, 19, 41, 47, 84, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 165, 223, 446, 509, 516, 518, 519, 521, 524, 525, 526, 527, 528, 529, 532, 534, 535, 537, 538, 543, 548], "auto_examples_python": 6, "auto_examples_jupyt": 6, "your": [8, 10, 14, 23, 25, 26, 27, 30, 34, 36, 37, 41, 43, 46, 47, 53, 96, 138, 139, 174, 539, 542, 543, 544, 546, 549], "own": [8, 24, 25, 26, 27, 41, 43, 46, 53, 131, 174, 185, 516, 526, 536, 542, 544, 547, 549], "840": [8, 9, 12, 24, 26, 44, 45, 51, 131, 144, 154, 156, 218, 221, 222, 225, 226, 227, 228, 229, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 516, 526, 527, 529, 531, 532, 537, 540, 542], "10008": [8, 9, 12, 24, 26, 44, 45, 51, 131, 144, 154, 156, 218, 221, 222, 225, 226, 227, 228, 229, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 516, 526, 527, 529, 531, 532, 537, 540, 542], "5": [8, 9, 10, 12, 13, 16, 20, 22, 23, 24, 26, 32, 36, 37, 41, 44, 45, 51, 52, 55, 128, 130, 131, 134, 138, 140, 143, 144, 145, 146, 147, 148, 150, 151, 154, 156, 202, 208, 212, 213, 214, 215, 221, 222, 229, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 317, 318, 319, 320, 321, 323, 324, 325, 326, 342, 343, 344, 345, 346, 347, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 480, 531, 532, 540, 541, 542, 544, 547, 549], "don": [8, 10, 18, 26, 27, 28, 41, 46, 53, 540, 541, 543, 544, 547], "xfe": 8, "x04": [8, 51], "myprint": [8, 516, 517], "indent": [8, 131, 175, 542], "through": [8, 17, 39, 41, 43, 46, 51, 131, 167, 181, 183, 184, 224, 516, 517, 518, 540, 541, 542, 546, 548], "custom": [8, 26, 28, 30, 34, 172, 174, 516, 517, 518, 525, 528, 532], "_pretty_str": [8, 542], "dont_print": 8, "indent_str": 8, "next_indent_str": 8, "sequence_item": 8, "repr_valu": 8, "repr": [8, 41, 100, 516, 531], "50": [8, 45, 51, 52, 144, 222, 237, 332, 339, 366, 446], "plot_printing_dataset": [8, 13, 538], "open": [9, 23, 25, 26, 159, 165, 516, 519, 540, 541, 542], "some": [9, 14, 16, 17, 26, 28, 39, 41, 42, 46, 49, 50, 51, 52, 53, 55, 76, 89, 99, 131, 132, 155, 168, 185, 475, 476, 483, 516, 517, 518, 520, 522, 525, 526, 536, 541, 542, 543, 544, 546, 548], "project": [9, 10, 20, 97, 539, 540, 541, 546], "src": [9, 10, 30, 33, 34, 97, 155, 222, 223, 224, 544, 547], "test_fil": [9, 10, 24, 26, 41, 43, 541, 542, 544], "ct_small": [9, 26, 28, 69, 164, 541, 542], "dcm": [9, 11, 12, 24, 26, 27, 28, 39, 41, 43, 44, 50, 51, 69, 131, 164, 172, 516, 532, 541, 542, 547, 548, 549], "ct1": [9, 20, 26, 28, 69, 541, 542], "1ct1": [9, 20, 26, 28, 544], "20040119": [9, 20, 26, 28, 542], "661468": [9, 20], "77": [9, 20, 24, 26, 27, 28, 41, 263, 264, 276, 377, 378, 379, 380, 382, 437, 450, 451, 452, 453, 454, 456, 457, 458, 461, 462], "2040634155": [9, 20, 26, 28], "get_testdata_fil": [9, 10, 11, 41, 43, 51, 509, 516, 532, 534, 535, 537, 541, 542, 544], "normal": [9, 16, 20, 25, 26, 27, 41, 69, 516, 537], "mode": [9, 20, 26, 28, 83, 86, 87, 132, 161, 516, 529, 540, 546], "sopclassuid": [9, 24, 26, 28, 173, 542, 549], "pat_nam": 9, "patientnam": [9, 10, 12, 14, 26, 28, 41, 43, 69, 84, 85, 128, 131, 164, 172, 174, 232, 516, 528, 541, 542, 544], "family_comma_given": [9, 480], "patientid": [9, 10, 12, 14, 17, 26, 28, 41, 131, 172, 174, 542, 544], "studyd": [9, 10, 24, 26, 27, 28, 544], "sure": [9, 45, 53, 540, 542, 546], "exist": [9, 16, 30, 34, 36, 39, 41, 42, 53, 109, 131, 166, 174, 185, 198, 516, 536, 537, 539, 540, 541, 547], "want": [9, 10, 14, 24, 25, 26, 42, 53, 176, 540, 541, 542, 543, 544, 546], "miss": [9, 34, 106, 131, 135, 155, 164, 169, 183, 185, 198, 208, 209, 218, 220, 221, 222, 224, 516, 524, 525, 528, 529, 535, 537, 540, 542, 544, 546], "cmap": [9, 49], "cm": [9, 11, 49], "grai": 9, "085": [9, 13, 538], "plot_read_dicom": [9, 13, 538], "interact": [10, 41, 43, 46, 131, 544], "directori": [10, 43, 172, 173, 174, 175, 177, 516, 517, 535, 537, 540, 541, 544, 546], "dicomdirtest": [10, 544], "pydicom_test": [10, 544], "276": [10, 544], "7230010": [10, 544], "31906": [10, 544], "1359940846": [10, 544], "78187": [10, 544], "descriptor": [10, 46, 174, 209, 210, 211, 212, 213, 222, 516, 529, 531, 544], "charact": [10, 20, 26, 28, 32, 39, 42, 46, 55, 76, 77, 78, 79, 89, 128, 129, 131, 134, 164, 165, 174, 175, 176, 177, 197, 200, 201, 202, 471, 480, 483, 484, 488, 490, 493, 494, 500, 503, 504, 509, 516, 517, 518, 525, 527, 528, 531, 532, 534, 535, 536, 537, 540, 542, 543, 544], "chang": [10, 12, 25, 26, 27, 30, 36, 39, 42, 43, 44, 45, 50, 51, 55, 82, 96, 106, 128, 131, 148, 161, 174, 176, 183, 184, 185, 213, 215, 216, 217, 218, 219, 220, 221, 222, 471, 488, 490, 531, 539, 542, 543, 545, 546, 547, 548], "stage": [10, 173, 174, 540, 541], "dicomdir": [10, 40, 69, 172, 174, 175, 516, 524, 528, 529, 532, 535, 536, 537, 545], "structur": [10, 26, 27, 41, 43, 69, 172, 174, 175, 516, 529, 536, 537, 542, 544, 545], "manag": [10, 30, 34, 46, 161, 164, 174, 223, 516, 525, 532, 542, 544], "77654033": [10, 544], "doe": [10, 12, 46, 50, 51, 53, 89, 97, 109, 131, 157, 166, 185, 191, 216, 483, 516, 532, 544], "archibald": [10, 544], "20010101": [10, 131, 544], "studytim": [10, 24, 26, 28, 544], "000000": [10, 20, 544], "studydescript": [10, 26, 28, 174, 544], "xr": [10, 544], "spine": [10, 544], "comp": [10, 20, 26, 28, 544], "min": [10, 210, 211, 222, 544], "cr": [10, 222, 544], "seriesnumb": [10, 41, 544], "19950903": [10, 544], "173032": [10, 544], "head": [10, 39, 43, 544], "brain": [10, 544], "wo": [10, 544], "98890234": [10, 544], "peter": [10, 544], "20030505": [10, 544], "050743": [10, 544], "carotid": [10, 544], "025109": [10, 544], "045357": [10, 544], "mra": [10, 544], "700": [10, 516, 527, 544], "7": [10, 20, 23, 24, 26, 27, 37, 41, 51, 130, 134, 138, 150, 174, 198, 202, 215, 218, 222, 237, 259, 276, 285, 286, 369, 370, 371, 372, 376, 378, 400, 418, 425, 426, 427, 428, 429, 433, 463, 523, 527, 536, 541, 544, 549], "found": [10, 43, 46, 50, 51, 52, 106, 131, 155, 164, 169, 174, 179, 182, 224, 542, 544, 547], "seriesinstanceuid": 10, "1196533885": 10, "18148": 10, "118": 10, "fileset": [10, 509, 516, 532, 534, 535, 537], "1479": 10, "userwarn": [10, 84], "record": [10, 20, 172, 173, 174, 175, 516, 529, 535, 544], "queri": [10, 93, 174, 544], "consid": [10, 25, 26, 53, 131, 222, 540, 541, 543], "expand": [10, 26, 28, 222, 516, 535, 541, 544], "search": [10, 106, 144, 174, 179, 180, 181, 516, 534, 537, 542, 544], "correspond": [10, 17, 30, 34, 36, 39, 41, 50, 51, 52, 76, 106, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 134, 138, 139, 155, 156, 166, 173, 174, 175, 185, 208, 209, 222, 223, 224, 232, 446, 472, 506, 516, 534, 537, 540, 541, 544, 547, 549], "warn_and_log": 10, "photometricinterpret": [10, 36, 44, 218, 220, 222, 544, 547], "monochrome1": [10, 36, 37, 218, 220, 544], "without": [10, 41, 45, 46, 52, 106, 131, 157, 167, 180, 222, 485, 496, 498, 499, 516, 518, 526, 528, 532, 535, 536, 537, 542, 544, 546], "still": [10, 44, 46, 516, 522, 523, 525, 526, 527, 529, 540, 542, 543, 544, 547], "tmp": [10, 12, 544], "tmpou59ut8_": 10, "follow": [10, 25, 26, 27, 28, 30, 34, 37, 39, 41, 42, 44, 45, 51, 69, 128, 131, 135, 144, 145, 148, 155, 174, 182, 185, 198, 224, 480, 516, 529, 532, 534, 537, 540, 541, 542, 544, 548, 549], "pt000000": [10, 544], "st000000": [10, 544], "se000000": [10, 544], "im000000": [10, 544], "se000001": [10, 544], "se000002": [10, 544], "st000001": [10, 544], "im000001": [10, 544], "im000002": [10, 544], "im000003": [10, 544], "pt000001": [10, 544], "im000004": 10, "st000002": 10, "st000003": 10, "im000005": 10, "im000006": 10, "pt000002": [10, 544], "pt000003": 10, "tempfil": [10, 12, 17, 544], "temporarydirectori": [10, 544], "generate_uid": [10, 36, 174, 516, 528, 537], "A": [10, 20, 28, 30, 34, 36, 37, 39, 40, 41, 43, 44, 53, 76, 77, 89, 104, 105, 107, 131, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 160, 161, 162, 164, 165, 172, 174, 175, 176, 177, 183, 184, 185, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 471, 472, 480, 493, 500, 503, 504, 516, 526, 534, 537, 540, 542, 544, 547], "its": [10, 24, 25, 26, 27, 30, 32, 34, 36, 37, 41, 42, 82, 128, 131, 148, 174, 175, 182, 207, 208, 216, 217, 218, 219, 220, 221, 506, 516, 527, 532, 537, 542, 544], "itself": [10, 36, 39, 41, 46, 106, 160, 161, 183, 184, 516, 532, 540, 541, 544], "summari": [10, 25, 26, 540], "content": [10, 12, 14, 20, 41, 55, 131, 141, 144, 208, 218, 219, 220, 221, 222, 541, 542, 544, 547], "seen": [10, 25, 26, 89, 541, 549], "when": [10, 16, 23, 24, 25, 26, 27, 30, 32, 34, 36, 37, 39, 41, 44, 46, 48, 50, 51, 53, 80, 84, 85, 89, 93, 94, 97, 131, 138, 139, 141, 143, 144, 146, 147, 148, 155, 157, 161, 168, 174, 176, 183, 184, 185, 210, 211, 212, 213, 214, 221, 222, 224, 232, 234, 471, 472, 480, 516, 518, 519, 520, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 540, 541, 542, 544, 546, 547, 549], "iter": [10, 17, 41, 131, 140, 141, 142, 143, 144, 145, 146, 150, 155, 162, 175, 176, 183, 186, 207, 220, 223, 224, 230, 234, 516, 518, 526, 544], "over": [10, 20, 26, 27, 48, 50, 542, 544], "yield": [10, 41, 131, 140, 141, 142, 143, 144, 145, 146, 150, 155, 162, 175, 176, 220, 223, 224, 506, 516, 537, 542, 544, 547, 549], "fileinst": [10, 174, 175, 509, 516, 537, 544], "do": [10, 14, 25, 26, 30, 34, 40, 42, 45, 46, 48, 49, 50, 51, 53, 93, 131, 174, 185, 191, 516, 522, 528, 534, 540, 541, 542, 544, 547, 548, 549], "someth": [10, 14, 23, 25, 26, 30, 39, 50, 131, 516, 537, 540], "patient_id": 10, "find_valu": [10, 174, 544], "return": [10, 11, 14, 30, 34, 37, 39, 41, 43, 46, 50, 51, 52, 69, 76, 77, 79, 80, 90, 91, 97, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 136, 137, 138, 139, 145, 147, 148, 149, 151, 152, 153, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 197, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 231, 232, 446, 471, 472, 474, 475, 476, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 516, 517, 518, 519, 520, 526, 527, 528, 529, 531, 532, 534, 535, 537, 542, 543, 544, 549], "where": [10, 30, 34, 37, 41, 42, 50, 51, 52, 55, 108, 110, 131, 134, 138, 166, 172, 174, 179, 180, 210, 211, 222, 223, 516, 518, 527, 528, 529, 537, 540, 541, 542, 544], "one": [10, 24, 26, 30, 34, 37, 41, 43, 45, 51, 52, 53, 83, 86, 87, 108, 110, 128, 131, 132, 137, 138, 139, 140, 143, 144, 145, 148, 155, 166, 167, 172, 174, 175, 176, 182, 186, 200, 209, 215, 222, 224, 475, 476, 516, 522, 525, 535, 537, 540, 542, 544, 546, 548, 549], "repres": [10, 34, 41, 51, 101, 128, 131, 145, 164, 185, 231, 479, 480, 483, 540, 549], "match": [10, 44, 45, 51, 84, 93, 104, 105, 106, 107, 131, 166, 172, 174, 208, 216, 218, 221, 480, 516, 522, 525, 532, 537, 544, 547, 549], "result": [10, 17, 24, 25, 26, 27, 36, 42, 44, 53, 77, 79, 131, 185, 223, 224, 231, 471, 516, 534, 537, 540, 541, 547], "find": [10, 17, 20, 23, 25, 26, 93, 131, 167, 174, 179, 180, 181, 183, 184, 540, 541, 542, 544, 548, 549], "study_uid": 10, "studyinstanceuid": 10, "series_uid": 10, "plural": 10, "Of": 10, "cours": [10, 547], "you": [10, 12, 14, 16, 18, 23, 24, 25, 26, 27, 28, 30, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 93, 138, 139, 164, 168, 172, 174, 176, 222, 446, 516, 529, 532, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549], "just": [10, 12, 14, 25, 26, 27, 28, 41, 46, 53, 89, 128, 131, 162, 516, 528, 532, 540, 541, 542, 544], "directli": [10, 30, 34, 41, 53, 128, 155, 223, 224, 474, 516, 537, 543, 544, 548], "know": [10, 37, 41, 46, 542, 543, 544], "what": [10, 32, 37, 40, 46, 50, 174, 542, 544, 547], "nfound": 10, "actual": [10, 20, 25, 26, 30, 34, 37, 41, 44, 50, 128, 131, 155, 174, 185, 208, 218, 221, 224, 540, 544], "onli": [10, 24, 26, 27, 28, 30, 37, 39, 41, 42, 43, 45, 50, 51, 53, 55, 80, 97, 109, 111, 112, 113, 114, 116, 117, 118, 119, 127, 131, 133, 135, 144, 148, 155, 164, 167, 174, 176, 183, 184, 185, 198, 218, 222, 223, 224, 232, 479, 484, 516, 522, 524, 525, 526, 527, 528, 529, 531, 532, 534, 537, 540, 542, 543, 544, 547], "limit": [10, 26, 27, 36, 43, 44, 47, 51, 174, 483, 484, 516, 522, 528, 532, 548], "subset": [10, 24, 26], "howev": [10, 25, 26, 30, 32, 34, 36, 37, 41, 44, 131, 144, 145, 148, 207, 224, 479, 540, 541, 542, 544, 547], "less": [10, 36, 37, 161, 516, 537, 549], "effici": [10, 162, 174, 222, 483, 549], "result_load": 10, "remov": [10, 12, 17, 41, 42, 47, 131, 136, 137, 145, 146, 148, 153, 155, 173, 174, 175, 185, 222, 224, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 540, 542], "To": [10, 24, 26, 28, 36, 41, 42, 43, 45, 50, 52, 53, 157, 162, 224, 516, 522, 527, 532, 540, 541, 542, 544, 546, 549], "edit": [10, 53, 516, 526, 527, 529, 540, 541, 546], "identif": 10, "modul": [10, 25, 26, 30, 34, 36, 42, 48, 49, 51, 52, 69, 85, 94, 97, 131, 155, 200, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 224, 472, 506, 509, 516, 517, 523, 524, 527, 532, 534, 535, 537, 542, 544, 547, 549], "part": [10, 27, 28, 32, 36, 37, 39, 42, 46, 48, 51, 52, 111, 128, 131, 134, 138, 140, 143, 144, 145, 146, 147, 148, 150, 151, 164, 177, 183, 184, 185, 198, 202, 208, 210, 211, 212, 213, 214, 215, 218, 222, 471, 480, 516, 519, 522, 534, 540, 541, 542, 543, 544, 547, 549], "annex": [10, 36, 37, 51, 52, 128, 131, 138, 140, 143, 144, 145, 146, 147, 148, 150, 151, 172, 210, 211, 212, 213, 214, 215, 218, 222, 471, 544], "properti": [10, 14, 41, 55, 128, 131, 155, 161, 173, 174, 175, 223, 224, 231, 446, 480, 516, 517, 519, 522, 525, 526, 532, 537, 544], "1130": [10, 20], "my": [10, 46, 131, 174, 543], "1141": 10, "descriptor_file_id": [10, 174, 544], "readm": 10, "1142": 10, "specif": [10, 20, 24, 26, 27, 28, 30, 34, 35, 39, 41, 44, 46, 50, 51, 53, 76, 77, 78, 79, 131, 164, 165, 174, 179, 202, 505, 516, 517, 519, 525, 527, 528, 531, 532, 537, 540, 541, 542, 543, 544, 547], "descriptor_character_set": [10, 174, 544], "iso_ir": [10, 20, 26, 28, 46, 78, 542, 543, 544], "100": [10, 20, 24, 26, 28, 46, 52, 237, 350, 351, 362, 542, 543, 544, 549], "until": [10, 161, 164, 165, 168, 179, 182, 516, 517, 522, 534, 544], "call": [10, 25, 26, 41, 42, 44, 48, 50, 53, 81, 85, 91, 131, 145, 161, 162, 174, 181, 185, 207, 474, 516, 519, 522, 526, 532, 537, 542, 544, 547], "meet": [10, 34, 140, 155, 223, 516, 522], "semant": [10, 39, 174, 480, 544], "re": [10, 16, 40, 50, 135, 396, 397, 539, 540, 541, 542, 544, 546, 547, 549], "here": [10, 24, 26, 28, 30, 34, 40, 46, 49, 99, 155, 181, 224, 541, 542, 543, 544, 548], "becaus": [10, 24, 26, 36, 39, 41, 43, 44, 50, 51, 53, 69, 157, 174, 540, 541, 542], "would": [10, 24, 25, 26, 27, 36, 42, 53, 55, 475, 540, 541, 544, 549], "overwrit": [10, 505], "altern": [10, 23, 41, 131, 212, 213, 214, 222, 540, 542, 544], "new": [10, 16, 17, 18, 26, 27, 36, 39, 40, 43, 47, 55, 69, 80, 82, 84, 85, 89, 96, 99, 100, 102, 103, 108, 109, 110, 111, 128, 131, 133, 138, 140, 141, 142, 143, 147, 149, 150, 151, 152, 154, 155, 156, 158, 160, 161, 173, 174, 175, 207, 212, 214, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 446, 473, 477, 480, 506, 516, 517, 518, 519, 522, 523, 524, 527, 528, 529, 531, 532, 534, 537, 539, 542, 545, 549], "while": [10, 26, 27, 36, 37, 51, 55, 128, 131, 185, 221, 483, 516, 528, 529, 534, 540, 544, 546], "leav": [10, 16, 26, 27, 109, 542], "unchang": [10, 44, 76, 183, 184, 210, 211, 212, 213, 214, 222, 547], "tdir": 10, "new_fileset": 10, "norigin": 10, "note": [10, 18, 24, 26, 27, 28, 30, 39, 42, 44, 45, 46, 49, 82, 93, 109, 111, 131, 134, 140, 144, 149, 150, 164, 168, 169, 181, 191, 207, 210, 211, 213, 214, 222, 473, 475, 476, 477, 479, 480, 481, 483, 519, 541, 542, 543, 547, 548, 549], "layout": [10, 174], "been": [10, 25, 26, 30, 37, 44, 45, 46, 51, 82, 89, 91, 131, 138, 139, 141, 142, 143, 144, 145, 147, 166, 173, 174, 176, 185, 197, 198, 222, 223, 474, 516, 519, 526, 531, 534, 535, 537, 540, 541, 542, 543], "is_fil": [10, 544], "relative_to": 10, "197": [10, 13, 516, 525, 538], "plot_read_fileset": [10, 13, 538], "basic": [11, 26, 27, 28, 40, 43, 44, 49, 52, 53, 71, 131, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 516, 529, 537, 544, 545, 547, 549], "info": [11, 20, 162, 165, 168, 180, 181, 182, 446, 516, 519, 520, 522, 524], "beam": [11, 18, 24, 26, 27, 28, 516, 522], "gantri": [11, 20, 26, 28], "ssd": 11, "field": [11, 20, 26, 28, 41, 90, 128, 130, 145, 516, 534], "89": 11, "darci": [11, 12, 16, 17], "mason": [11, 12, 16, 17, 23], "list_beam": 11, "summar": [11, 544], "line": [11, 20, 23, 24, 25, 27, 28, 38, 42, 43, 46, 50, 53, 85, 131, 174, 516, 523, 534, 540, 541, 542, 544, 547], "13": [11, 246, 247, 248, 250, 466, 467], "11": [11, 20, 23, 210, 211, 212, 213, 214, 222, 236, 242, 244, 258, 259, 310, 311, 374, 395, 415, 431, 455, 460, 465, 516, 536, 537, 549], "beamsequ": [11, 18, 24, 26, 27, 28, 41, 131, 516, 522], "cp0": 11, "controlpointsequ": 11, "float": [11, 32, 39, 41, 51, 81, 88, 128, 131, 132, 162, 164, 165, 166, 168, 182, 206, 218, 222, 474, 475, 476, 478, 479, 483, 499, 512, 513, 516, 522, 523, 529, 532, 534, 536, 542], "sourcetosurfacedist": 11, "10": [11, 20, 23, 26, 28, 50, 52, 148, 176, 198, 367, 402, 409, 431, 516, 523, 527, 537, 542, 544, 549], "beamnam": [11, 18, 41], "beamnumb": [11, 24, 26, 27, 28], "8d": 11, "gantryangl": 11, "1f": 11, "join": [11, 43], "002": [11, 13, 538], "plot_read_rtplan": [11, 13, 538], "scratch": [12, 18, 47, 131, 185, 516, 520, 521, 534, 540, 547], "produc": [12, 24, 26, 39, 51, 53, 516, 524, 529, 534], "standard": [12, 20, 22, 32, 36, 37, 39, 42, 44, 46, 51, 52, 55, 128, 131, 134, 138, 140, 143, 144, 145, 146, 147, 148, 150, 151, 174, 185, 198, 202, 208, 209, 210, 211, 212, 213, 214, 215, 218, 222, 232, 471, 475, 476, 479, 480, 516, 518, 521, 522, 524, 525, 532, 534, 543, 544, 547, 549], "compliant": [12, 53, 516, 525], "written": [12, 24, 26, 32, 42, 43, 48, 50, 51, 131, 161, 174, 185, 197, 198, 516, 528, 529, 537, 540, 542, 544], "have": [12, 14, 25, 26, 27, 28, 32, 36, 37, 39, 41, 42, 44, 45, 46, 50, 53, 97, 128, 131, 135, 138, 139, 141, 142, 145, 148, 155, 164, 167, 174, 176, 185, 198, 208, 218, 220, 221, 222, 223, 224, 472, 485, 496, 506, 516, 522, 525, 527, 528, 531, 535, 537, 539, 540, 541, 542, 543, 544, 546, 547, 549], "valid": [12, 47, 53, 55, 83, 86, 87, 89, 124, 128, 131, 133, 135, 155, 164, 177, 185, 198, 215, 222, 223, 224, 396, 397, 446, 483, 484, 488, 490, 499, 500, 503, 516, 534, 535, 536], "tmpa89652z5": 12, "20240115": 12, "0033": [12, 20], "232211": 12, "121096": 12, "firstnam": 12, "123456": 12, "delet": [12, 17, 53, 131, 223, 516, 531, 540, 541], "datetim": [12, 93, 473, 477, 481], "filemetadataset": [12, 24, 26, 132, 135, 167, 185, 198, 509, 516, 531, 542], "explicitvrlittleendian": 12, "dt": [12, 32, 59, 64, 93, 489, 501, 516, 525, 534], "now": [12, 20, 128, 131, 471, 516, 518, 519, 522, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 540, 541, 542, 544, 549], "contentd": 12, "strftime": 12, "y": [12, 39, 222], "m": [12, 22, 480, 540, 541, 544, 546, 547, 549], "contenttim": 12, "long": [12, 32, 181, 185, 502, 516, 536, 542], "micro": 12, "mediastoragesopclassuid": [12, 544], "mediastoragesopinstanceuid": 12, "implementationclassuid": 12, "transfersyntaxuid": [12, 44, 45, 131, 173, 516, 518, 525, 542, 547], "namedtemporaryfil": [12, 17], "suffix": [12, 176, 471, 480, 516, 537], "save_a": [12, 16, 17, 24, 26, 43, 44, 48, 50, 51, 131, 185, 516, 518, 531, 537, 542, 547, 549], "enforce_file_format": [12, 131, 185, 516, 537, 542], "reopen": 12, "unlink": 12, "004": [12, 13, 538], "plot_write_dicom": [12, 13, 538], "294": 13, "input_output": [13, 538], "output": [13, 16, 20, 24, 26, 27, 39, 45, 51, 53, 210, 211, 222, 224, 516, 529, 531, 538, 540, 541, 542, 544], "byte": [14, 24, 26, 30, 32, 33, 34, 41, 44, 50, 51, 52, 53, 77, 78, 79, 89, 90, 111, 128, 130, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 161, 163, 164, 165, 166, 167, 169, 179, 180, 181, 182, 183, 184, 185, 190, 191, 195, 197, 198, 206, 208, 222, 223, 224, 446, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 516, 527, 528, 529, 534, 537, 542, 544, 547, 549], "help": [14, 24, 25, 26, 27, 28, 42, 46, 165, 516, 519, 527, 534, 536, 539, 540, 541], "save": [14, 16, 24, 26, 43, 44, 50, 51, 516, 519, 522, 541, 542, 543, 547, 549], "blob": 14, "databas": 14, "io": [14, 16, 132, 158, 160, 161, 509, 516, 537, 542], "bytesio": [14, 16, 132, 158, 516, 537, 542], "dcmwrite": [14, 48, 70, 131, 160, 161, 516, 525, 531, 532, 534, 537, 542], "filebas": [14, 70, 145, 148, 153, 197, 509], "dicomfilelik": [14, 70, 158, 159, 516, 518], "usag": [14, 24, 26, 27, 28, 30, 36, 41, 47, 215, 222, 446, 480, 509, 516, 529, 544], "memory_dataset": [14, 21, 538], "dicom_filenam": 14, "write_dataset_to_byt": 14, "buffer": [14, 131, 132, 141, 142, 143, 146, 147, 151, 152, 158, 160, 161, 164, 185, 197, 218, 223, 224, 516, 537], "rewind": [14, 169, 179, 180, 181, 516, 523], "seek": [14, 131, 132, 141, 142, 143, 147, 151, 152, 160, 161, 164, 185, 516, 518, 528, 537], "adapt_dataset_from_byt": 14, "interest": [14, 50, 539, 542], "stuff": 14, "is_little_endian": [14, 16, 44, 130, 131, 132, 145, 148, 161, 162, 165, 170, 171, 178, 180, 181, 182, 183, 184, 185, 197, 222, 446, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 501, 502, 516, 537], "bond": 14, "jame": 14, "007": [14, 17, 19, 538], "dummydatabas": 14, "__init__": [14, 128, 130, 131, 132, 133, 134, 155, 158, 160, 161, 173, 174, 175, 207, 223, 224, 230, 231, 446, 473, 475, 476, 477, 478, 479, 480, 481, 482], "self": [14, 446, 542, 547], "_blob": 14, "dict": [14, 30, 34, 41, 92, 108, 110, 128, 131, 132, 133, 155, 172, 174, 208, 222, 223, 516, 519, 534, 536], "file_path": [14, 205], "db": 14, "convert": [14, 30, 34, 36, 37, 45, 51, 76, 77, 79, 85, 88, 90, 93, 97, 129, 131, 155, 174, 185, 207, 208, 215, 216, 217, 218, 219, 220, 221, 222, 224, 506, 516, 519, 522, 525, 528, 529, 532, 533, 534, 537, 541, 542, 549], "ds_byte": 14, "read_byt": 14, "read_dataset": [14, 70, 168], "_new": 14, "dynam": [16, 20], "allow": [16, 17, 24, 26, 27, 30, 34, 37, 41, 42, 46, 50, 55, 88, 131, 133, 172, 174, 222, 479, 516, 518, 519, 528, 531, 532, 534, 535, 536, 537, 546], "tag": [16, 17, 26, 28, 32, 43, 46, 47, 50, 51, 55, 59, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 142, 145, 148, 149, 150, 151, 152, 161, 162, 164, 166, 174, 182, 183, 187, 202, 208, 218, 220, 221, 222, 502, 506, 509, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 531, 532, 534, 535, 537, 542, 543], "present": [16, 26, 28, 30, 37, 50, 79, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 131, 132, 135, 144, 145, 146, 148, 155, 157, 164, 169, 172, 174, 175, 185, 198, 209, 210, 211, 212, 213, 214, 222, 516, 518, 526, 528, 529, 542, 549], "unknown": [16, 20, 32, 46, 85, 128, 129, 131, 145, 195, 516, 521, 526, 528, 532, 534, 542, 548], "1001": [16, 20, 46, 131], "acm": [16, 46, 110], "un": [16, 32, 55, 90, 162, 185, 195, 497, 516, 517, 529, 531, 534, 535, 542], "1002": [16, 20, 46, 542], "hello": [16, 542], "world": [16, 542], "1003": [16, 20], "regist": [16, 25, 26, 46, 128, 446, 472, 516, 532, 537, 542], "One": [16, 39, 43, 46, 50, 53, 108, 109, 110, 128, 131, 209, 215, 222, 223, 540, 541], "42": [16, 516, 519], "two": [16, 20, 25, 26, 28, 39, 41, 42, 45, 46, 48, 89, 108, 109, 110, 131, 140, 174, 222, 480, 516, 523, 542, 543, 549], "three": [16, 30, 34, 39, 110, 480, 542, 544], "contributor": [16, 516], "datadict": [16, 46, 509, 516, 525, 528, 542], "add_private_dict_entri": [16, 41, 46, 516, 528], "valuerep": [16, 22, 59, 487, 489, 493, 495, 509], "demonstr": [16, 49, 516, 517], "implicit": [16, 26, 27, 41, 45, 89, 131, 132, 161, 162, 165, 174, 185, 218, 228, 446, 472, 494, 516, 519, 526, 528, 534, 537, 547], "is_implicit_vr": [16, 44, 130, 131, 132, 161, 162, 163, 165, 170, 171, 185, 197, 446, 494, 516, 528, 537], "block": [16, 18, 20, 26, 27, 28, 46, 131, 134, 516, 531, 541], "private_block": [16, 46, 131], "0x1001": 16, "add_new": [16, 46, 131, 134, 542], "0x01": [16, 46, 131], "0x02": [16, 46], "0x03": 16, "simul": [16, 131], "fp": [16, 145, 148, 153, 162, 164, 165, 169, 170, 171, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "forc": [16, 131, 157, 164, 168, 169, 174, 185, 224, 516, 520, 522, 524, 542], "defin": [16, 17, 20, 25, 26, 36, 37, 46, 50, 55, 128, 131, 134, 173, 174, 209, 222, 446, 516, 522, 540, 542, 544, 549], "vm": [16, 32, 41, 61, 108, 109, 110, 111, 112, 118, 119, 122, 128, 516, 520, 528, 531, 537, 542], "is_retir": [16, 108, 109, 110, 118, 119, 128, 446, 516, 525], "flag": [16, 20, 30, 42, 96, 131, 169, 174, 179, 180, 181, 516, 531, 534, 544], "blank": [16, 17, 109, 207, 474, 516, 518, 542], "new_dict_item": [16, 108, 110], "0x10011001": 16, "0x10011002": 16, "0x10011003": 16, "entri": [16, 25, 26, 27, 41, 47, 51, 108, 109, 110, 111, 118, 119, 516, 518, 535, 540, 541], "string": [16, 17, 20, 25, 26, 32, 41, 55, 77, 78, 79, 109, 128, 131, 134, 155, 164, 175, 186, 195, 197, 199, 203, 204, 207, 224, 231, 474, 475, 476, 478, 479, 480, 483, 484, 488, 490, 499, 500, 501, 505, 516, 519, 521, 522, 526, 527, 532, 534, 543], "private_cr": [16, 46, 110, 111, 119, 122, 123, 124, 131, 134, 231], "new_entries_dict": [16, 108, 110], "noutput": 16, "003": [16, 19, 538], "plot_add_dict_entri": [16, 19, 538], "point": [17, 24, 25, 26, 27, 28, 32, 49, 53, 182, 218, 222, 483, 516, 518, 523, 534, 540, 542, 548], "It": [17, 26, 27, 40, 41, 42, 43, 44, 46, 48, 49, 51, 53, 131, 145, 174, 185, 516, 522, 523, 540, 541, 542, 543, 544, 546, 547, 549], "replac": [17, 76, 77, 79, 109, 516, 528, 535], "curv": [17, 549], "keyword": [17, 26, 27, 28, 39, 41, 46, 51, 52, 84, 85, 92, 106, 108, 109, 117, 118, 120, 125, 127, 128, 131, 155, 164, 174, 183, 184, 185, 208, 213, 215, 218, 220, 221, 222, 223, 224, 232, 446, 506, 516, 520, 522, 525, 527, 528, 532, 536, 537, 541, 542, 544, 548], "patientbirthd": [17, 41], "data_el": [17, 131, 187, 190, 191, 194, 196, 201, 202, 216, 542, 543], "callback": [17, 25, 26, 131, 516, 525], "function": [17, 20, 25, 26, 27, 30, 34, 39, 40, 41, 42, 43, 46, 48, 51, 52, 53, 54, 57, 58, 66, 70, 72, 74, 81, 91, 98, 102, 109, 110, 128, 131, 136, 137, 145, 146, 148, 153, 155, 162, 165, 167, 168, 172, 174, 183, 184, 185, 205, 207, 208, 209, 216, 217, 218, 219, 220, 221, 222, 223, 224, 232, 392, 474, 483, 506, 507, 509, 510, 512, 516, 517, 518, 519, 524, 525, 527, 528, 529, 532, 534, 537, 541, 542, 543, 544, 547, 549], "insid": [17, 516, 518], "person_names_callback": 17, "curves_callback": 17, "0xff00": 17, "0x5000": 17, "del": [17, 18, 41, 46, 131, 542], "etc": [17, 18, 39, 41, 43, 49, 51, 128, 131, 208, 516, 517, 523, 534, 540, 544, 547], "walk": [17, 131], "remove_private_tag": [17, 46, 131], "method": [17, 23, 30, 34, 37, 41, 44, 45, 46, 48, 49, 50, 52, 97, 100, 128, 130, 131, 132, 133, 134, 138, 139, 141, 142, 143, 147, 151, 152, 154, 155, 158, 160, 161, 164, 172, 173, 174, 175, 185, 207, 223, 224, 225, 226, 227, 228, 229, 230, 231, 446, 473, 475, 476, 477, 478, 479, 480, 481, 516, 519, 522, 525, 527, 534, 536, 537, 542, 543, 544, 547, 548], "easili": [17, 516, 517, 519], "delattr": 17, "otherpatientid": [17, 516, 518], "otherpatientidssequ": [17, 542], "possibl": [17, 30, 37, 41, 42, 51, 93, 128, 131, 147, 161, 172, 183, 184, 185, 221, 222, 483, 516, 525, 527, 528, 529, 534, 537, 543, 544, 548], "assign": [17, 41, 69, 128, 516, 522, 529, 535], "19000101": 17, "plot_anonym": [17, 19, 538], "300a": [18, 26, 27, 28, 43], "00f8": 18, "apertur": 18, "00fe": 18, "block1": 18, "block2": 18, "toi": 18, "block_ds1": 18, "blocktyp": 18, "blocknam": 18, "block_ds2": 18, "should": [18, 25, 26, 27, 30, 32, 34, 36, 37, 39, 41, 42, 43, 46, 50, 51, 53, 128, 131, 141, 143, 144, 145, 146, 147, 148, 155, 164, 169, 172, 174, 176, 183, 184, 198, 207, 215, 216, 217, 218, 219, 220, 221, 222, 224, 471, 499, 516, 518, 519, 526, 527, 532, 540, 541, 542, 544, 545, 547, 549], "like": [18, 25, 26, 41, 42, 46, 50, 53, 72, 74, 85, 111, 131, 132, 153, 159, 160, 161, 162, 164, 165, 166, 168, 169, 179, 181, 182, 185, 197, 198, 200, 201, 202, 223, 224, 516, 519, 529, 532, 535, 541, 542, 543, 544], "plan_d": 18, "sinc": [18, 37, 46, 131, 136, 137, 144, 145, 146, 148, 153, 185, 516, 536, 540, 544, 549], "did": [18, 516, 517, 537], "blocksequ": 18, "numberofblock": 18, "beam0": 18, "block_ds3": 18, "abov": [18, 24, 25, 26, 27, 28, 41, 46, 50, 53, 128, 131, 208, 224, 516, 526, 541, 544], "forget": [18, 53], "001": [18, 19, 46, 538], "plot_sequ": [18, 19, 538], "011": 19, "metadata_process": [19, 538], "192": [20, 26, 28, 46, 542], "20040119072730": [20, 26, 28, 46, 542], "12322": [20, 26, 28, 46, 542], "0005": [20, 26, 28, 46, 76, 77, 78, 79, 131, 164, 165, 506, 516, 517, 542, 543, 544], "primari": [20, 26, 28, 46, 542], "072731": [20, 26, 28, 542], "19970430": 20, "072730": [20, 26, 28], "112749": 20, "112936": 20, "113008": 20, "ge": 20, "medic": [20, 39, 43, 45, 544], "system": [20, 24, 26, 27, 28, 42, 49, 161, 174, 222, 516, 537, 542, 544, 546, 549], "jfk": 20, "0500": 20, "ct01_oc0": 20, "e": [20, 24, 26, 27, 28, 30, 34, 39, 41, 42, 43, 50, 51, 55, 85, 128, 131, 134, 155, 164, 170, 171, 174, 175, 176, 207, 208, 222, 224, 230, 475, 480, 505, 516, 519, 526, 528, 532, 537, 540, 541, 542, 546], "rhapsod": 20, "0009": [20, 46, 51, 131, 218, 222, 512, 513, 516, 529], "gems_iden_01": [20, 46], "fidel": [20, 46], "ge_genesis_ff": [20, 46], "suit": [20, 46, 516, 536], "ct01": [20, 46], "1004": [20, 506, 516, 529], "product": 20, "hispe": 20, "1027": 20, "sl": [20, 26, 28, 32, 506], "862399669": 20, "servic": [20, 544], "1031": 20, "mobil": 20, "10e6": 20, "genesi": 20, "05": [20, 541], "10e7": 20, "exam": 20, "checksum": 20, "973283917": 20, "10e9": 20, "stamp": 20, "o": [20, 22, 71, 73], "abcd1234": [20, 542], "1234abcd": [20, 542], "ag": [20, 32], "AS": [20, 32, 501], "000y": 20, "21b0": 20, "addit": [20, 26, 27, 28, 30, 34, 76, 131, 173, 174, 224, 480, 516, 524, 532, 534, 537, 543, 544, 546, 547], "histori": 20, "gems_pati_01": 20, "statu": [20, 116, 128], "isovue300": 20, "helic": 20, "kvp": 20, "120": [20, 52], "0088": 20, "collect": [20, 46, 55, 133, 165, 544], "diamet": 20, "480": 20, "rout": 20, "iv": 20, "1100": 20, "reconstruct": 20, "338": 20, "6716": 20, "1110": 20, "distanc": 20, "detector": 20, "1099": 20, "3100585938": 20, "1111": 20, "630": 20, "1120": 20, "tilt": 20, "tabl": [20, 23, 32, 36, 44, 51, 128, 131, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 185, 198, 208, 209, 210, 211, 212, 213, 218, 220, 221, 222, 223, 506, 516, 529, 532, 537, 541, 542, 544, 546, 547], "height": 20, "133": [20, 169], "699997": 20, "1150": 20, "exposur": 20, "1601": 20, "1151": 20, "rai": [20, 26, 28, 542], "tube": 20, "170": 20, "1152": 20, "1160": 20, "filter": [20, 26, 27, 131], "larg": [20, 44, 46, 53, 131, 134, 138, 139, 165, 182, 474, 516, 518, 519, 526, 528, 529, 532, 534, 547, 549], "bowti": 20, "fil": 20, "1190": [20, 516, 532], "focal": 20, "spot": 20, "1210": 20, "convolut": 20, "kernel": 20, "ff": [20, 148], "0019": 20, "gems_acqu_01": 20, "912": [20, 516, 529], "cell": 20, "theta": 20, "373": [20, 22], "75": [20, 26, 27, 52, 388], "0166": 20, "100f": 20, "horiz": 20, "ref": 20, "955": [20, 41], "799988": 20, "1011": 20, "1013": [20, 516, 529], "baselin": [20, 45, 51, 144, 222, 446, 516, 536, 549], "1014": [20, 516, 532], "1015": 20, "enhanc": [20, 209, 222, 519], "1016": [20, 516, 529], "1017": 20, "1018": 20, "ra": 20, "1019": [20, 51], "79187": 20, "101a": 20, "last": [20, 26, 28, 39, 41, 43, 46, 85, 97, 140, 145, 516, 522, 535, 542, 544, 547], "101b": 20, "loc": 20, "320": [20, 51], "197968": 20, "101e": 20, "1023": 20, "speed": [20, 516, 519, 523, 527, 534, 536], "mm": [20, 23], "rotat": 20, "1024": [20, 128, 131, 516, 530, 543, 547], "mid": [20, 26, 28, 41, 43], "sec": 20, "17": [20, 52, 412], "784578": 20, "1025": 20, "1026": 20, "azimuth": 20, "degre": 20, "msec": 20, "102a": 20, "On": [20, 37, 182, 480, 543], "178": 20, "079926": 20, "102b": 20, "off": [20, 26, 27, 42, 94, 165, 516, 523, 531, 541], "3994": 20, "299316": 20, "102c": 20, "trigger": [20, 26, 28], "10431": 20, "102e": 20, "718": 20, "079956": 20, "102f": 20, "984": 20, "1039": [20, 544], "sfov": 20, "stat": [20, 166], "recon": 20, "comput": 20, "1042": [20, 516, 531], "segment": [20, 29, 209, 221, 222, 516, 527, 534], "1043": 20, "1044": 20, "interscan": 20, "delai": [20, 26, 28], "1047": [20, 516, 531], "compress": [20, 23, 30, 34, 36, 37, 40, 43, 47, 51, 67, 131, 138, 139, 144, 145, 155, 222, 223, 224, 446, 513, 516, 525, 527, 529, 534, 535, 537, 545, 546], "factor": [20, 52, 516, 523, 547, 549], "104a": 20, "104b": [20, 26, 28], "1052": [20, 210, 211, 222], "post": [20, 516, 531], "proc": 20, "1057": 20, "water": [20, 480], "95": [20, 516, 522, 525], "1058": 20, "bone": [20, 49], "105e": 20, "763": 20, "105f": 20, "increment": [20, 176], "1969": 20, "1061": 20, "1576": 20, "1062": 20, "106a": 20, "depend": [20, 30, 34, 37, 44, 45, 51, 53, 97, 128, 131, 141, 142, 143, 155, 174, 185, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 224, 501, 506, 516, 527, 528, 535, 541, 543, 544, 546, 549], "process": [20, 25, 26, 30, 34, 45, 131, 144, 215, 222, 223, 224, 446, 474, 516, 519, 531, 534, 536, 540, 541, 549], "106b": 20, "852": [20, 516, 528], "button": 20, "1071": 20, "fatq": 20, "estim": 20, "were": [20, 26, 28, 131, 516, 522, 524, 540, 541, 549], "1072": 20, "z": [20, 89, 176, 177, 516, 537], "chan": 20, "avg": 20, "1073": [20, 516, 531], "left": [20, 50, 541], "1074": 20, "max": [20, 210, 211, 222], "1075": [20, 516, 531], "right": 20, "1076": 20, "10da": 20, "10db": 20, "projector": 20, "coeffici": [20, 26, 27], "10dc": 20, "10dd": 20, "overrang": 20, "10de": 20, "alpha": [20, 209, 222, 516, 528, 529, 548], "158": 20, "135803": 20, "179": 20, "035797": 20, "sn": 20, "gems_rela_01": 20, "prescrib": 20, "1005": 20, "1007": 20, "1605775145": 20, "24078": 20, "acq": 20, "750675506": 20, "1037": 20, "screen": [20, 24, 26], "anatom": 20, "7400": 20, "1091": 20, "biopsi": 20, "1092": 20, "fl": [20, 26, 28, 32, 542], "1093": [20, 516, 532], "gems_stdy_01": 20, "fd": [20, 32], "862399761": 20, "111079": 20, "No": [20, 177, 492, 539], "header": [20, 157, 164, 169, 516, 518, 542], "107d": 20, "complet": [20, 24, 26, 34, 53, 131, 143, 146, 182, 516, 517, 540, 544, 546], "0025": 20, "gems_sers_01": 20, "1006": [20, 506, 516, 529], "puls": 20, "44": [20, 319], "landmark": 20, "counter": 20, "archiv": 20, "receiv": [20, 198], "host": 20, "0027": 20, "gems_imag_01": 20, "101c": 20, "vma": 20, "mamp": 20, "150": [20, 52], "101d": 20, "phase": 20, "mod": 20, "24": [20, 293], "101f": 20, "clip": 20, "129": [20, 547], "smart": 20, "ON": 20, "foreign": [20, 516, 517], "revis": [20, 516, 520, 522, 523], "1035": 20, "letter": [20, 41, 131], "20406341552734": 20, "r": [20, 37, 128, 131, 543], "coord": 20, "199999809265137": 20, "9": [20, 23, 26, 27, 36, 41, 51, 52, 81, 176, 177, 208, 238, 239, 243, 245, 254, 264, 285, 286, 306, 307, 308, 318, 373, 396, 397, 406, 422, 425, 433, 445, 460, 471, 526, 529, 532, 537, 549], "699999809265137": 20, "69999694824219": 20, "1045": 20, "1046": 20, "1048": 20, "top": [20, 26, 27, 28, 39, 50, 131, 165, 174, 516, 537, 541, 542], "corner": 20, "180": [20, 41], "53579711914062": 20, "1049": [20, 516, 531], "03579711914062": 20, "bottom": [20, 39, 540, 541], "104c": [20, 26, 28], "159": [20, 516, 529], "63580322265625": 20, "104d": [20, 26, 28], "19999694824219": 20, "116": [20, 26, 27, 28, 52], "20304870605469": 20, "side": 20, "l": [20, 23, 45, 144, 222, 336, 516, 527, 546], "1053": [20, 210, 211, 222, 516, 531], "anterior": 20, "posterior": 20, "1054": 20, "1055": 20, "0120": 20, "rescal": [20, 47, 210, 211, 213, 214, 222], "intercept": [20, 41, 210, 211, 222], "slope": [20, 210, 211, 222], "0029": 20, "gems_imps_01": 20, "lower": [20, 131, 134, 174, 544, 548], "rang": [20, 30, 34, 37, 50, 93, 155, 210, 211, 222, 224, 516, 527, 529, 542], "pixels1": 20, "87": 20, "1008": 20, "1009": 20, "100a": 20, "764": 20, "hdr": 20, "struct": [20, 200, 499], "1034": 20, "advantag": [20, 516, 523], "overflow": 20, "underflow": 20, "0043": [20, 26, 28, 542], "gems_parm_01": 20, "400": [20, 51], "input": [20, 24, 26, 51, 207, 215, 222, 223, 480, 516, 532], "1012": 20, "chain": 20, "14": [20, 45, 144, 324, 325, 443, 516, 531], "decon": 20, "107": [20, 237, 313, 362, 516, 523], "21": [20, 52, 413], "20": [20, 52, 222, 375, 424, 516, 534], "calibr": 20, "ibh": 20, "scale": 20, "095": 20, "bbh": 20, "085000": 20, "102000": 20, "095000": 20, "blend": 20, "350": 20, "ppscan": 20, "integr": 20, "level": [20, 26, 27, 28, 38, 39, 131, 165, 174, 175, 516, 522, 534, 537, 541, 542, 543, 544], "40": [20, 52, 393, 516, 534], "delta": 20, "1021": 20, "glow": 20, "term": [20, 51, 208, 222, 223], "748": 20, "749": 20, "750": 20, "pitch": 20, "ratio": [20, 36], "1028": 20, "uniqu": [20, 30, 32, 34, 46, 155, 174, 175, 176, 194, 224, 516, 525, 536, 542, 544], "iden": 20, "1029": [20, 516, 530], "histogram": 20, "2068": 20, "user": [20, 30, 34, 41, 43, 48, 49, 79, 88, 131, 155, 162, 167, 185, 516, 519, 522, 528, 529, 532, 537, 540, 542, 544], "coordin": [20, 26, 27, 41], "200000": 20, "700000": 20, "07992553710938": 20, "3816": 20, "219482421875": 20, "fpa": 20, "gain": 20, "ad": [20, 25, 26, 27, 36, 39, 41, 47, 91, 106, 131, 134, 135, 156, 172, 174, 175, 183, 184, 185, 198, 207, 213, 215, 220, 222, 392, 488, 490, 516, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 537, 539, 540, 543, 548], "cal": 20, "reg": 20, "xm": [20, 26, 28], "auto": [20, 131, 516, 517], "pattern": [20, 26, 28, 104, 105, 107, 516, 537], "tggc": [20, 26, 28], "104e": [20, 26, 28, 542], "durat": [20, 26, 28, 542], "60060977935791": [20, 26, 28, 542], "8192": [20, 182], "32768": [20, 26, 28, 542], "difflib": 20, "compar": [20, 55, 516, 523, 526, 534, 537, 540, 541], "termin": [20, 26, 27, 28, 42, 145, 165, 178], "newlin": 20, "massag": 20, "form": [20, 37, 50, 51, 52, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 131, 132, 224, 232, 471, 480], "rep": 20, "split": [20, 505, 516, 517, 518], "diff": [20, 540], "106": [20, 21, 52, 237, 360, 361, 362, 538], "plot_dicom_differ": [20, 21, 538], "show_charset_nam": [21, 22, 538], "veri": [22, 32, 516, 519, 540, 544, 547], "simpl": [22, 41, 43, 49, 516, 517], "app": 22, "personnam": [22, 32, 59, 128, 493, 516, 517, 528, 531, 532, 534, 537], "default_encod": [22, 480], "iso8859": [22, 131, 162, 165, 197, 494], "person_nam": 22, "2008": [22, 480], "ps3": [22, 480], "p98": 22, "yamada": 22, "tarou": 22, "033": 22, "3ed": 22, "bb": 22, "iso2022_jp": 22, "j": 22, "105": [22, 52, 237, 358, 359, 362], "wang": 22, "xiaodong": 22, "xcd": 22, "xf5": 22, "x5e": 22, "xd0": 22, "xa1": 22, "xb6": 22, "xab": 22, "gb18030": 22, "104": [22, 237, 287, 288, 289, 290, 291, 356, 357, 362], "xe7": 22, "x8e": 22, "x8b": 22, "xe5": 22, "xb0": 22, "x8f": 22, "xe6": 22, "x9d": 22, "xb1": 22, "utf": 22, "101": [22, 237, 348, 349, 362], "hong": [22, 480], "gildong": [22, 480], "363": 22, "321": 22, "316": 22, "324": 22, "327": 22, "310": 22, "253": 22, "261": 22, "346": [22, 516, 525], "265": 22, "277": [22, 516, 529], "euc_kr": [22, 480], "label": [22, 26, 28, 30, 34, 49, 155, 224], "pack": [22, 37, 50, 222, 224, 516, 526, 527, 532, 535], "easiest": [23, 547], "probabl": [23, 53, 544], "zenodo": 23, "doi": 23, "enter": 23, "citat": 23, "box": [23, 39], "along": [23, 174], "et": 23, "al": 23, "http": [23, 39, 49, 540, 541, 543, 546], "github": [23, 516, 525, 539, 540, 541, 546], "onlin": 23, "yyyi": 23, "dd": 23, "recommend": [23, 25, 26, 30, 41, 42, 44, 93, 131, 138, 139, 155, 174, 222, 542, 544, 546, 547], "deal": [23, 42, 50, 221, 516, 518, 527, 542], "jpeg": [23, 37, 43, 44, 45, 51, 80, 138, 139, 144, 216, 217, 218, 219, 220, 221, 222, 331, 336, 339, 446, 516, 527, 529, 531, 532, 534, 546, 547], "see": [23, 24, 26, 27, 28, 34, 36, 41, 42, 43, 44, 51, 53, 55, 128, 131, 134, 154, 155, 162, 165, 168, 172, 180, 181, 182, 185, 198, 202, 224, 225, 226, 227, 228, 229, 479, 480, 516, 519, 529, 530, 531, 534, 540, 541, 542, 544, 546, 547, 548], "releas": [23, 46, 509, 525, 529, 532], "march": 23, "2018": [23, 541], "june": 23, "octob": 23, "juli": 23, "2019": 23, "januari": 23, "2020": 23, "mai": [23, 24, 26, 27, 30, 33, 34, 37, 42, 45, 46, 49, 50, 51, 53, 78, 96, 99, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 155, 161, 174, 185, 198, 221, 224, 472, 480, 496, 498, 516, 529, 537, 540, 541, 542, 544, 546, 547, 549], "novemb": 23, "august": 23, "2021": [23, 516, 536], "2022": 23, "2023": 23, "jan": [23, 84, 509, 542], "2024": [23, 509], "recreat": [24, 26, 516, 524], "within": [24, 26, 27, 28, 30, 34, 80, 89, 131, 164, 165, 173, 174, 185, 234, 494, 516, 532, 544, 546, 549], "detail": [24, 26, 37, 41, 42, 43, 51, 53, 94, 128, 131, 165, 234, 479, 509, 516, 534, 537, 540, 541], "review": [24, 26, 539, 540, 541], "than": [24, 25, 26, 27, 28, 32, 36, 37, 39, 44, 45, 50, 53, 55, 128, 131, 140, 141, 142, 143, 144, 145, 147, 148, 161, 164, 168, 174, 177, 186, 200, 207, 222, 471, 516, 517, 518, 519, 524, 525, 526, 529, 531, 534, 537, 542, 543], "export": [24, 26, 42, 516, 534], "includ": [24, 25, 26, 42, 50, 53, 128, 131, 138, 172, 174, 185, 208, 222, 223, 234, 509, 516, 518, 520, 522, 524, 525, 537, 540, 541, 542, 544, 547, 549], "health": [24, 26, 53], "sensit": [24, 26, 52, 53, 131, 506, 549], "git": [24, 26, 27, 540, 541, 546], "util": [24, 26, 51, 53, 62, 63, 64, 67, 70, 509, 516, 517, 524, 525, 537], "main": [24, 25, 26, 40, 41, 48, 53, 118, 516, 519, 540, 541, 542, 546], "instancecreationd": [24, 26], "20030903": [24, 26, 27, 41], "instancecreationtim": [24, 26], "150031": [24, 26, 27, 41], "481": [24, 26, 249, 250, 293, 297, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 442, 443], "sopinstanceuid": [24, 26, 36, 173], "777": [24, 26, 27, 41], "7777": [24, 26, 27, 41], "20030903150023": [24, 26, 27, 41], "20030716": [24, 26, 27, 28, 41], "153557": [24, 26, 28, 41], "prefix": [24, 26, 27, 28, 39, 157, 164, 169, 176, 185, 198, 397, 471, 480, 516, 528, 537, 540, 541, 542, 548], "rather": [24, 26, 27, 28, 50, 53, 128, 131, 174, 207, 516, 517, 518, 525, 529, 531, 534, 537, 542], "In": [24, 25, 26, 27, 30, 34, 39, 41, 43, 44, 46, 51, 53, 76, 174, 516, 524, 530, 532, 536, 537, 540, 541, 542, 544, 547], "wa": [24, 25, 26, 37, 39, 128, 131, 132, 147, 174, 179, 183, 184, 488, 490, 516, 519, 526, 529, 534, 537, 540, 541, 544, 547], "direct": [24, 26, 41, 222, 541, 543, 544], "specifi": [24, 25, 26, 27, 28, 41, 109, 111, 128, 131, 147, 155, 164, 165, 185, 197, 224, 480, 506, 516, 529, 534, 542, 544, 546], "exclude_s": [24, 26], "filespec": [24, 25, 26, 27, 28], "outfil": [24, 26, 542], "argument": [24, 25, 26, 27, 28, 39, 41, 44, 92, 131, 133, 183, 184, 185, 206, 516, 518, 519, 527, 528, 529, 530, 531, 532, 537, 543, 544, 547], "filenam": [24, 26, 27, 28, 104, 105, 106, 107, 131, 132, 161, 166, 167, 174, 176, 185, 516, 531, 540, 544], "If": [24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 39, 40, 41, 42, 48, 51, 52, 53, 55, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 94, 97, 100, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 131, 133, 134, 135, 138, 141, 142, 143, 144, 145, 147, 148, 151, 152, 155, 160, 161, 162, 164, 165, 166, 169, 173, 174, 175, 176, 182, 183, 184, 185, 197, 198, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 230, 232, 446, 471, 472, 475, 476, 480, 483, 487, 488, 489, 490, 495, 499, 502, 506, 516, 522, 534, 537, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549], "your_fil": [24, 26, 27, 28], "yourplan": [24, 26, 27, 28], "stdout": [24, 26], "messag": [24, 26, 27, 28, 94, 234, 516, 519, 528, 536, 537, 540, 542, 544], "exclud": [24, 26, 27, 28, 53, 131, 208, 222, 223], "binari": [24, 26, 128, 131, 222, 516, 520, 528, 529], "larger": [24, 26, 164, 546, 547], "save_filenam": [24, 26], "otherwis": [24, 26, 30, 34, 37, 41, 88, 97, 115, 116, 120, 121, 125, 126, 127, 128, 131, 132, 138, 141, 142, 143, 147, 151, 152, 155, 162, 174, 176, 177, 180, 181, 185, 205, 212, 213, 214, 222, 223, 224, 446, 472, 480, 484, 485, 486, 487, 488, 489, 490, 494, 495, 496, 498, 499, 501, 502], "_from_codifi": [24, 26], "dummi": [24, 26], "error": [24, 26, 53, 55, 76, 86, 87, 96, 128, 131, 133, 483, 509, 516, 519, 520, 523, 525, 526, 527, 528, 529, 531, 532, 536, 537, 540, 542], "savenam": [24, 26], "dicomfil": [24, 26, 70], "pythoncod": [24, 26], "By": [24, 26, 51, 172, 174, 479, 516, 520, 542], "translat": [24, 26, 41, 516, 525], "whole": [24, 26, 162, 208, 222, 223, 516, 537, 547], "fractiongroupsequ": [24, 26, 27, 28], "non": [24, 26, 32, 41, 42, 108, 109, 110, 111, 126, 128, 129, 131, 135, 144, 172, 174, 185, 198, 221, 222, 237, 479, 483, 485, 488, 490, 496, 498, 516, 520, 521, 525, 526, 527, 528, 529, 532, 536, 542], "fractiongroupnumb": [24, 26], "numberoffractionsplan": [24, 26], "30": [24, 26, 27, 28, 52, 53, 386, 541], "numberofbeam": [24, 26], "numberofbrachyapplicationsetup": [24, 26], "referenc": [24, 26, 27, 28, 39, 41, 167, 173, 174, 544], "refd_beam_sequ": [24, 26], "referencedbeamsequ": [24, 26], "refd_beam1": [24, 26], "beamdosespecificationpoint": [24, 26], "239": [24, 26, 27, 28, 41], "531250000000": [24, 26, 27, 28], "751": [24, 26, 27, 28], "87000000000": [24, 26, 27, 28], "accept": [24, 26, 32, 42, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 131, 133, 148, 516, 531, 532, 534, 536, 540], "issu": [24, 26, 28, 30, 43, 53, 55, 76, 77, 79, 87, 222, 516, 519, 520, 521, 522, 523, 528, 537, 539, 540], "toward": [24, 26], "loop": [24, 26, 53], "develop": [25, 26, 27, 42, 516, 525], "subcommand": [25, 26, 27, 516, 534], "command": [25, 27, 38, 43, 53, 131, 185, 516, 524, 534, 536, 537, 540, 541, 546], "packag": [25, 26, 27, 43, 45, 47, 48, 49, 208, 216, 217, 218, 219, 220, 221, 506, 516, 517, 520, 525, 532, 534, 544, 546], "setup": [25, 26, 27, 28, 43, 516, 523, 524, 536], "command1": [25, 26], "command2": [25, 26], "setuptool": [25, 26, 516, 517, 524, 534], "yourpackag": [25, 26], "variou": [25, 26, 46, 516, 517], "entry_point": [25, 26], "pydicom_subcommand": [25, 26], "command1modul": [25, 26], "add_subpars": [25, 26], "command2modul": [25, 26], "liter": [25, 26], "must": [25, 26, 30, 34, 36, 37, 41, 42, 44, 50, 51, 85, 88, 131, 134, 138, 139, 148, 164, 172, 174, 177, 179, 181, 185, 207, 208, 209, 213, 214, 222, 446, 484, 502, 516, 534, 542, 543, 544, 547, 549], "wish": [25, 26, 42, 222], "usual": [25, 26, 27, 28, 36, 41, 46, 51, 109, 132, 142, 157, 162, 516, 519, 540, 542, 546, 547], "convent": [25, 26, 41, 480], "singl": [25, 26, 30, 32, 34, 36, 37, 39, 78, 108, 110, 128, 131, 138, 140, 145, 147, 148, 153, 155, 171, 172, 174, 203, 204, 207, 208, 220, 222, 223, 224, 490, 499, 516, 517, 527, 535, 540, 543, 544], "subpars": [25, 26], "do_command": [25, 26], "filespec_help": [25, 26], "filespec_pars": [25, 26], "sub": [25, 26, 224], "parser": [25, 26], "add_pars": [25, 26], "subcommandnam": [25, 26], "add_argu": [25, 26], "set_default": [25, 26], "func": [25, 26, 541], "And": [25, 26, 27, 28, 30, 516, 532, 540, 541, 542, 549], "arg": [25, 26, 131, 133, 157, 159, 161, 232, 473, 477, 480, 481, 516, 520], "element_v": [25, 26], "yourarg": [25, 26], "need": [25, 26, 27, 30, 36, 37, 39, 41, 42, 45, 46, 48, 52, 53, 77, 79, 93, 97, 131, 162, 168, 224, 500, 503, 516, 519, 534, 537, 540, 541, 542, 543, 544, 546, 547, 549], "argpars": [25, 26], "snippet": [25, 26, 46], "element_valu": [25, 26], "pair": [25, 26, 133, 174], "codifi": [25, 27, 47, 516, 524, 526, 534, 536, 537], "filetyp": [25, 26], "yourself": [25, 26, 50, 51], "shown": [25, 26, 28, 41, 46, 53, 55, 222, 516, 517, 518, 531, 542, 544], "relat": [25, 26, 27, 37, 42, 50, 52, 58, 131, 134, 185, 208, 218, 220, 221, 506, 516, 517, 540, 544, 549], "think": [25, 26], "contribut": [25, 26, 516, 519, 522, 523, 545], "case": [25, 26, 41, 42, 43, 44, 46, 53, 55, 76, 78, 84, 131, 165, 480, 516, 528, 532, 537, 542, 543, 547, 549], "under": [25, 26, 41, 138, 139, 516, 517, 519, 525, 540, 541, 546], "pull": [25, 26, 28, 539, 546], "request": [25, 26, 28, 41, 516, 532, 534, 539], "v2": [26, 27, 36, 516, 532, 546, 549], "offer": [26, 27, 44, 51, 131, 547], "explor": [26, 27, 46], "156": [26, 27, 41], "rt": [26, 27, 28, 41, 69, 172, 174, 544], "plan": [26, 27, 28, 41, 43, 69, 172], "999": [26, 27, 41, 516, 529], "99": [26, 27, 41, 45, 218, 225, 237, 274, 449], "9999": [26, 27, 41, 541], "888": [26, 27, 41], "88": [26, 27, 41, 235, 242, 255, 256, 260, 261, 298, 302, 305, 321, 343, 366, 387, 388, 390, 393, 419, 432, 469, 516, 520], "replic": [26, 27], "exactli": [26, 27, 50, 52, 542], "notat": [26, 27, 28, 483, 542], "0071": [26, 27, 28], "fraction": [26, 27, 28], "0078": [26, 27, 28], "00a0": [26, 27, 28], "brachi": [26, 27, 28], "300c": [26, 27, 28], "0082": [26, 27, 28], "dose": [26, 27, 28, 69, 172, 174, 516, 522, 544], "0275401": [26, 27, 28], "meterset": [26, 27, 28], "0036697": [26, 27, 28], "0006": [26, 27, 28, 37, 131, 218, 220, 221, 222], "simpli": [26, 27, 41, 50], "particular": [26, 27, 41, 44, 50, 51, 89, 167, 516, 519, 529, 542, 548], "q": [26, 27, 28, 540], "quiet": [26, 27, 28], "automat": [26, 27, 39, 41, 44, 46, 50, 51, 53, 97, 128, 131, 174, 183, 184, 185, 475, 476, 516, 525, 529, 531, 534, 540, 541, 542], "pip": [26, 27, 540, 541, 547, 549], "environ": [26, 27, 42, 516, 517, 532, 546], "variabl": [26, 27, 39, 40, 41, 42, 69, 516, 528, 532, 536], "clone": [26, 27, 540, 541, 546], "repositori": [26, 27, 49, 106, 516, 537, 546], "repeat": [26, 27, 50, 118, 121, 125, 126, 174, 516, 527, 536, 542], "reinstal": [26, 27], "similar": [26, 27, 39, 132, 202, 516, 518, 522, 543, 548], "program": [26, 27, 41, 43, 49, 516, 517, 522], "pipe": [26, 27], "grep": [26, 27], "either": [26, 27, 37, 41, 42, 46, 48, 97, 128, 131, 141, 143, 147, 169, 174, 208, 222, 223, 232, 480, 487, 495, 516, 532, 541, 542, 544, 546, 547], "iso": [26, 27, 215, 222, 331, 336, 339, 471, 516, 529], "741": [26, 27], "organ_at_risk": [26, 27], "deliveri": [26, 27], "maximum": [26, 27, 37, 53, 128, 138, 139, 155, 176, 224, 471, 516, 536, 537], "002c": [26, 27], "organ": [26, 27, 480], "risk": [26, 27], "ptv": [26, 27], "target": [26, 27, 39], "0026": [26, 27], "prescript": [26, 27], "826203": [26, 27], "00b0": [26, 27], "00b6": [26, 27], "0111": [26, 27], "control": [26, 27, 48, 84, 85, 101, 102, 516, 522, 544], "0115": [26, 27], "rate": [26, 27], "650": [26, 27], "011a": [26, 27], "010c": [26, 27], "cumul": [26, 27], "0051": [26, 27], "9990268": [26, 27], "0180": [26, 27], "regular": [26, 27, 41, 516, 536], "express": [26, 27], "abil": [26, 27, 51, 516, 524, 525, 532, 537], "alreadi": [26, 28, 30, 36, 38, 39, 44, 51, 76, 109, 131, 135, 145, 175, 179, 198, 207, 222, 474, 516, 524, 542, 544, 547, 549], "nest": [26, 28, 41, 131, 516, 523, 536], "minim": [26, 28, 30, 185, 198, 224], "below": [26, 28, 32, 36, 41, 43, 44, 46, 175, 185, 208, 218, 220, 221, 222, 506, 516, 519, 544, 547, 548], "studyid": [26, 28], "bitsstor": [26, 28, 218, 220, 222], "pre": [26, 28, 41, 43, 516, 537, 540], "id00001": [26, 28], "study1": [26, 28], "plan1": [26, 28], "02754010000000": [26, 28], "003669700000": [26, 28], "treatment": [26, 28], "static": [26, 28, 133, 155], "photon": [26, 28], "energi": [26, 28], "00000000000000": [26, 28], "coll": [26, 28], "couch": [26, 28], "wedg": [26, 28], "boli": [26, 28], "alwai": [26, 28, 45, 46, 51, 120, 128, 134, 164, 218, 222, 224, 516, 528, 532, 534, 537], "those": [26, 28, 30, 34, 38, 42, 46, 516, 519, 522, 532, 542, 544], "extra": [26, 28, 41, 224, 516, 537], "submit": [26, 28, 43, 516, 522, 539, 540, 541], "interfac": [27, 38, 516, 534, 546], "introduct": [28, 34, 40, 47, 540, 541, 544, 545, 549], "rlelosslessdecod": [29, 30, 516, 537], "rle_segment_ord": [29, 221], "big": [29, 33, 34, 45, 131, 132, 141, 142, 143, 147, 151, 152, 161, 185, 218, 221, 224, 226, 237, 446, 472, 516, 536, 537, 549], "guid": [30, 34, 39, 43, 131, 509, 516, 528, 534, 541, 542, 547], "intend": [30, 34, 36, 37, 131, 155, 223, 540], "advanc": [30, 39, 155], "who": [30, 516, 522, 523], "support": [30, 34, 42, 47, 70, 71, 80, 97, 131, 155, 160, 161, 174, 208, 209, 216, 217, 218, 219, 220, 221, 222, 224, 506, 516, 517, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 537, 544, 545, 546, 547, 548], "provid": [30, 34, 40, 41, 46, 51, 97, 128, 131, 141, 143, 147, 155, 208, 218, 220, 221, 224, 506, 516, 523, 543, 546, 547, 548], "cover": [30, 34, 542, 544, 547, 549], "mechan": [30, 34, 155, 224], "raw": [30, 34, 41, 50, 51, 52, 129, 130, 131, 141, 143, 147, 153, 155, 162, 166, 172, 224, 506, 516, 522, 528, 531, 549], "encod": [30, 32, 37, 38, 40, 44, 45, 51, 52, 55, 76, 77, 78, 79, 128, 129, 131, 132, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 158, 160, 161, 162, 165, 170, 171, 174, 185, 192, 196, 197, 198, 200, 201, 202, 204, 221, 223, 224, 446, 472, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 509, 516, 522, 525, 526, 527, 528, 529, 534, 535, 536, 537, 542, 543, 547], "unencod": [30, 34, 155], "least": [30, 34, 37, 502, 544], "convers": [30, 34, 36, 37, 93, 128, 208, 218, 220, 221, 224, 506, 516, 518, 528, 529, 531, 543, 549], "signatur": [30, 34, 160, 161, 516, 532], "opt": [30, 549], "decodeopt": [30, 223, 224], "bytearrai": [30, 131, 158, 161, 222, 223, 224], "worth": [30, 223], "minimum": [30, 34, 36, 198, 223, 224], "transfer_syntax_uid": [30, 34, 131], "int": [30, 32, 34, 41, 55, 77, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 138, 140, 141, 143, 144, 146, 147, 148, 150, 151, 152, 155, 161, 162, 163, 164, 165, 168, 170, 171, 174, 175, 176, 179, 180, 181, 182, 197, 206, 208, 212, 213, 214, 222, 223, 224, 231, 232, 233, 446, 474, 475, 476, 478, 479, 480, 494, 499, 502, 506, 542], "samples_per_pixel": [30, 34, 155, 223, 224], "grayscal": [30, 34, 36, 37, 51], "rgb": [30, 34, 36, 37, 44, 51, 97, 209, 215, 216, 217, 218, 219, 220, 221, 222, 224, 516, 526, 529, 534, 547], "number_of_fram": [30, 34, 141, 143, 147, 155, 223, 224], "bits_alloc": [30, 34, 155, 222, 223, 224], "bits_stor": [30, 34, 155, 223, 224], "4095": [30, 34, 37, 155, 224], "65535": [30, 34, 37, 155, 224, 544], "photometric_interpret": [30, 34, 155, 223, 224], "color": [30, 34, 36, 37, 44, 47, 155, 209, 215, 222, 224, 516, 529, 531, 547], "ybr_full": [30, 34, 36, 37, 51, 155, 215, 218, 220, 222, 224, 516, 529, 535], "pixel_represent": [30, 34, 155, 223, 224], "pixel_keyword": [30, 223, 224], "unsign": [30, 32, 34, 37, 51, 148, 155, 224, 516, 532, 549], "integ": [30, 32, 34, 37, 51, 148, 222, 224, 471, 478, 479, 516, 520, 522, 532, 549], "sign": [30, 32, 34, 37, 51, 80, 155, 224, 516, 532, 540, 541, 549], "condition": [30, 224, 549], "planar_configur": [30, 223, 224], "decoderunn": 30, "signal": 30, "sai": [30, 53, 540, 542], "done": [30, 44, 540, 541, 542, 547], "successfulli": [30, 147], "fail": [30, 97, 516, 519, 520, 525, 540, 541, 544], "caus": [30, 483, 516, 518, 544], "is_avail": [30, 34, 97, 155, 208, 216, 217, 218, 219, 220, 221, 224, 506, 516, 527], "bool": [30, 34, 55, 81, 82, 94, 96, 101, 106, 115, 116, 125, 126, 128, 130, 131, 132, 135, 138, 148, 155, 161, 162, 163, 164, 165, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 198, 205, 208, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 231, 446, 472, 474, 475, 476, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 501, 502, 506], "met": [30, 34, 168, 208, 216, 217, 218, 219, 220, 221, 506, 516, 527], "decoder_depend": [30, 224], "tupl": [30, 34, 41, 44, 46, 85, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 131, 134, 139, 141, 143, 144, 147, 148, 152, 155, 161, 164, 207, 223, 224, 230, 232, 233, 480, 516, 519, 528, 547], "rlelossless": [30, 34, 36, 44, 131, 540, 547], "jpeg2000": [30, 34, 45, 144, 516, 527, 529], "pillow": [30, 34, 45, 49, 131, 219, 516, 525, 527, 529, 531, 534, 537, 540], "imagecodec": [30, 34], "gdcm": [30, 34, 36, 44, 45, 131, 154, 216, 516, 519, 525, 528, 532, 534, 535, 537, 547], "add_plugin": [30, 34, 155, 224], "plugin_label": [30, 34], "my_decoder_func": 30, "my_packag": [30, 34], "my_decod": 30, "plugin": [31, 35, 44, 45, 131, 154, 155, 220, 224, 225, 226, 227, 228, 229, 516, 534, 535, 539, 546, 547], "anyth": [32, 46, 50, 51, 222], "ascii": [32, 177, 203, 516, 528], "decim": [32, 81, 101, 474, 475, 476, 478, 479, 483, 484, 516, 522, 523, 534], "depth": [32, 40, 49, 51, 175, 516, 529, 546], "even": [32, 46, 50, 138, 140, 145, 164, 169, 222, 224, 516, 532, 542, 544, 547], "correctli": [32, 46, 53, 97, 174, 216, 217, 516, 519, 522, 525, 526, 528, 529, 532, 534, 535, 536, 537, 540], "empti": [32, 128, 131, 132, 135, 141, 143, 144, 146, 147, 148, 158, 222, 230, 475, 476, 480, 499, 516, 517, 525, 528, 529, 530, 531, 532, 534, 537, 542, 544, 549], "multivalu": [32, 59, 82, 203, 204, 486, 487, 488, 489, 490, 493, 501, 504, 505, 516, 522], "accord": [32, 53, 164, 196, 542, 544], "od": [32, 185, 516, 525, 526, 534], "OF": [32, 185, 516, 531], "ol": [32, 185, 516, 525, 526, 534], "st": [32, 43], "ur": [32, 498], "ut": 32, "never": [32, 81, 131, 540], "greater": [32, 37, 131, 140, 145, 222, 471, 516, 525, 543], "hint": 32, "union": 32, "mutablesequ": [32, 76, 129, 131, 162, 165, 170, 171, 485, 486, 487, 488, 489, 490, 493, 495, 496, 499, 501, 503, 504, 505], "AT": [32, 486, 516, 529, 534, 536], "attribut": [32, 46, 69, 84, 128, 130, 131, 132, 133, 154, 155, 158, 160, 161, 173, 174, 175, 185, 223, 224, 225, 226, 227, 228, 229, 231, 446, 473, 475, 476, 477, 478, 479, 480, 481, 482, 516, 517, 527, 532, 535, 536, 537, 542, 544], "basetag": [32, 41, 59, 85, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 130, 131, 132, 133, 134, 162, 164, 165, 168, 174, 178, 180, 181, 182, 232, 233, 234, 486, 502, 516, 519, 534], "dsfloat": [32, 59, 474, 488, 516, 534], "dsdecim": [32, 59, 88, 474, 488, 516, 534], "doubl": [32, 39, 51, 131, 218, 222, 512, 513, 516, 529], "ov": [32, 185, 516, 529, 534], "word": [32, 39, 53, 109, 191, 480, 542], "short": [32, 502, 540, 542], "sv": [32, 506, 516, 529], "uc": [32, 503, 516, 525], "unlimit": 32, "identifi": [32, 42, 46, 53, 194], "uri": [32, 131, 516, 532, 543], "url": [32, 39], "uv": [32, 506, 516, 529], "config": [32, 42, 479, 501, 509, 516, 522, 527, 528, 529, 531, 532, 534, 537], "datetime_convers": [32, 487, 489, 495, 509], "use_ds_decim": [32, 82, 488, 509, 516, 531], "rlelosslessencod": [33, 34, 36, 509, 516, 534, 537], "byteord": [33, 34, 549], "tutori": [34, 39, 43, 516, 529, 539, 540, 541, 542, 544, 547, 549], "foo": 34, "kwarg": [34, 131, 133, 155, 159, 161, 174, 185, 223, 224, 473, 477, 480, 481, 547], "multi": [34, 37, 45, 51, 59, 82, 128, 131, 138, 141, 143, 144, 145, 146, 147, 148, 155, 174, 207, 208, 222, 223, 224, 498, 509, 516, 525, 527, 529, 531, 542, 549], "complement": [34, 37, 40, 155], "At": [34, 540, 548], "encoder_depend": [34, 155], "my_encoder_func": 34, "my_encod": 34, "rle": [35, 37, 44, 45, 51, 131, 138, 139, 144, 154, 156, 220, 221, 222, 229, 399, 516, 527, 528, 534, 535, 537, 546, 547], "lossless": [35, 37, 44, 45, 51, 131, 138, 139, 144, 154, 156, 220, 221, 222, 229, 516, 531, 534, 535, 547], "underli": 36, "algorithm": [36, 471], "packbit": 36, "scheme": [36, 162, 493, 494, 500, 503, 504, 548, 549], "explan": 36, "relationship": [36, 174, 541], "glossari": [36, 38], "palett": [36, 37, 47, 105, 172, 174, 209, 222, 516, 529, 531], "intens": [36, 37], "white": [36, 516, 524], "black": [36, 516, 537], "index": [36, 41, 51, 52, 131, 147, 155, 174, 175, 176, 212, 213, 214, 222, 223, 224, 506, 516, 532, 537, 541, 549], "red": [36, 37, 209, 222, 516, 531, 540, 541], "green": [36, 37, 516, 531], "blue": [36, 37, 516, 531], "lookup": [36, 51, 112, 113, 114, 116, 117, 127, 209, 210, 211, 212, 213, 222, 516, 532, 542], "noth": [36, 544], "equal": [36, 37, 140, 145, 516, 526, 527, 528], "ycbcr": [36, 37, 216, 217, 218, 219, 220, 221, 224], "keep": [36, 174, 544, 546], "mind": 36, "lossi": [36, 45, 144, 222], "inclus": [36, 37], "downscal": 36, "accordingli": [36, 131], "both": [36, 42, 43, 76, 81, 82, 97, 148, 174, 213, 222, 516, 518, 525, 528, 531, 537, 543], "made": [36, 131, 140, 144, 174, 185, 516, 518, 519, 531, 540, 541, 544], "might": [36, 46, 155, 224, 549], "ask": [36, 43, 539, 540, 541], "why": [36, 547], "vice": [36, 185, 209, 222], "versa": [36, 185, 209, 222], "answer": [36, 539, 542, 547], "higher": [36, 38, 131, 147, 516, 519, 543], "befor": [36, 45, 46, 91, 128, 131, 164, 175, 182, 213, 214, 222, 224, 516, 519, 522, 523, 525, 528, 540, 541, 542, 544, 547, 549], "decis": 36, "known": [36, 37, 41, 42, 46, 51, 55, 84, 96, 128, 129, 131, 209, 222, 233, 516, 526, 529, 531, 532, 534, 542, 548], "20x": [36, 44, 516, 534], "slower": [36, 44, 222], "pylibjpeg": [36, 44, 45, 131, 154, 155, 220, 224, 516, 532, 534, 537, 547], "place": [36, 37, 44, 45, 131, 516, 525, 542, 544], "samplesperpixel": [36, 218, 220, 221, 222, 516, 522, 527, 547], "bitsalloc": [36, 45, 128, 218, 220, 221, 222, 516, 527], "pixelrepresent": [36, 218, 220, 221, 222, 516, 528], "rgb_color": [36, 69], "921600": 36, "424152": 36, "pixel_data_handl": [36, 50, 51, 131, 507, 509, 516, 527, 534, 537], "convert_color_spac": [36, 51, 222, 509, 516, 534], "ybr": [36, 51, 516, 534], "187460": 36, "compon": [37, 45, 80, 144, 175, 177, 220, 222, 480, 516, 517, 519, 534], "previous": [37, 166, 516, 527, 531, 534], "constrain": 37, "iod": [37, 185, 222, 544, 549], "remain": [37, 145, 174, 516, 522, 541], "hand": [37, 53, 516, 532], "ybr_rct": [37, 44, 220, 547], "whether": [37, 41, 82, 102, 128, 131, 148, 224, 484, 516, 519, 522, 527, 529, 534, 539, 540, 546], "transform": [37, 51], "prior": [37, 44, 145, 185, 224, 516, 537, 547], "taken": [37, 131, 141, 143, 147, 222], "account": 37, "doesn": [37, 50, 84, 131, 208, 218, 221, 224, 516, 531, 540, 547], "make": [37, 41, 42, 43, 46, 53, 131, 132, 224, 471, 483, 516, 519, 528, 534, 537, 542, 544, 546], "determin": [37, 41, 50, 128, 131, 174, 210, 211, 222, 516, 537, 544, 549], "invers": 37, "ybr_full_422": [37, 51, 215, 218, 220, 222, 224, 516, 529, 535], "ybr_partial_420": 37, "ybr_ict": [37, 220], "restrict": 37, "further": [37, 544, 548], "constraint": [37, 475, 476, 483], "planar": [37, 51, 131, 222, 223, 516, 527], "r1": 37, "g1": 37, "b1": 37, "r2": 37, "g2": 37, "b2": 37, "rn": 37, "gn": 37, "bn": 37, "contigu": 37, "typic": [37, 96, 136, 547], "32": [37, 131, 134, 139, 148, 218, 221, 222, 506, 516, 526, 534, 537, 549], "being": [37, 103, 112, 113, 114, 116, 117, 120, 122, 123, 124, 127, 131, 145, 155, 161, 221, 516, 517, 527, 534, 535, 537, 544, 546, 547], "mean": [37, 45, 221, 471, 540, 542, 544, 547, 548], "chapter": [37, 471], "mani": [37, 42, 49, 51, 138, 139, 141, 142, 516, 518, 522, 523, 539], "most": [37, 41, 42, 45, 49, 53, 85, 224, 516, 519, 522, 523, 542, 544, 547, 548], "signific": [37, 42, 485, 496, 498, 516, 519], "past": [37, 145, 169, 198], "describ": [37, 41, 45, 53, 108, 110, 128, 131, 480, 543, 544], "familiar": [38, 39, 542, 544, 547, 549], "document": [38, 42, 131, 155, 172, 224, 520, 525, 526, 537, 539, 545], "reader": 39, "unfamiliar": 39, "step": [39, 516, 523, 534, 544, 548, 549], "achiev": [39, 140], "understand": [39, 41, 540, 549], "aim": [39, 516, 532], "explain": 39, "subject": [39, 543, 548], "fairli": 39, "technic": [39, 40], "api": [39, 155, 224, 516, 526, 540, 543, 547, 548], "learn": [39, 43, 540, 544], "remind": 39, "about": [39, 41, 42, 43, 49, 51, 53, 94, 222, 542, 544, 547, 549], "italic": 39, "lowercas": 39, "uppercas": [39, 128], "capit": [39, 516, 522], "american": 39, "english": 39, "spell": [39, 76, 516, 527], "hex": [39, 50, 128, 131, 134, 516, 519], "comma": 39, "ital": 39, "seq": [39, 542], "try": [39, 97, 183, 184, 516, 520, 528, 542, 544], "gender": 39, "neutral": 39, "pronoun": 39, "hypothet": 39, "tick": 39, "markup": [39, 541], "0xb4": 39, "built": [39, 546], "pass": [39, 41, 44, 50, 51, 92, 104, 105, 107, 133, 138, 139, 207, 516, 519, 540, 541, 544, 547], "fragments_per_fram": [39, 138], "haven": [39, 540, 542], "docstr": [39, 540], "initi": [39, 43, 132, 133, 134, 180, 181, 207, 222, 230, 480, 540], "proper": [39, 516, 519], "noun": 39, "wrap": [39, 41, 161, 185], "unless": [39, 168, 175, 516, 520, 531, 544], "good": [39, 53, 540, 541], "reason": [39, 541], "link": [39, 541], "better": [39, 516, 520, 522, 526], "attr": 39, "ndarrai": [39, 41, 45, 50, 51, 52, 80, 82, 97, 103, 131, 155, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 488, 490, 506, 516, 525, 529, 532, 547, 549], "dtype": [39, 41, 50, 51, 52, 131, 155, 220, 222, 223, 547], "chtml": 39, "part05": [39, 541], "sect_6": 39, "html": [39, 541], "nema": 39, "org": [39, 49, 543], "four": [39, 97, 174, 182], "five": [39, 480], "warn": [39, 42, 53, 55, 76, 77, 79, 84, 85, 222, 509, 516, 518, 522, 526, 527, 528, 529, 531, 534, 535, 537, 540, 541], "sparingli": 39, "featur": [39, 42, 516, 524, 539, 540], "versionad": 39, "versionchang": 39, "handler": [39, 44, 45, 51, 80, 94, 97, 131, 155, 208, 216, 217, 218, 219, 220, 221, 222, 506, 509, 516, 525, 527, 529, 530, 531, 532, 534, 535, 537, 540, 543, 547], "instal": [40, 42, 45, 49, 97, 220, 516, 517, 524, 534, 541, 542, 545, 547, 549], "intermedi": [40, 41], "core": [40, 47], "mostli": [41, 130], "behav": [41, 42, 111, 207, 516, 526, 528, 544], "via": [41, 44, 55, 128, 131, 220, 516, 525, 527, 532, 534, 535, 537, 543, 544, 547], "entir": [41, 131, 164, 167, 216, 220, 224, 540, 542, 547], "collaps": [41, 50], "dcm_qt_tree": [41, 516, 523, 524], "0x10": [41, 128, 131, 232], "squar": [41, 46, 542], "bracket": [41, 46, 542], "around": [41, 516, 537, 540], "conveni": [41, 46, 51, 128, 516, 532, 537, 543], "cannot": [41, 45, 85, 131, 174, 185, 207, 479, 483, 516, 534, 540, 544], "retriev": [41, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 127, 128, 131, 516, 529, 542, 543], "12345": [41, 131], "member": 41, "numer": [41, 174, 176, 499, 516, 520, 529, 534, 536], "begin": [41, 100, 138, 151, 169], "Or": [41, 546], "beam1": 41, "wai": [41, 42, 43, 48, 50, 51, 53, 131, 516, 522, 537, 539, 542, 543, 544, 546, 548], "thing": [41, 50, 541, 542], "much": [41, 483, 516, 519, 522, 523, 531], "harder": 41, "realli": [41, 516, 519, 528], "0x300a": 41, "0xb0": 41, "0xc2": 41, "rememb": [41, 46, 50], "exact": [41, 475, 476, 478, 479], "handi": 41, "dir": [41, 43, 131, 516, 522, 535, 541, 548], "dure": [41, 46, 109, 516, 535, 537, 540, 541], "session": [41, 42, 43, 46, 131, 541], "prompt": 41, "pat": 41, "patientsetupsequ": [41, 43], "patientsex": [41, 131], "anywher": [41, 542], "insensit": [41, 131], "_dicom_dict": 41, "necessari": [41, 42, 49, 140, 145, 480, 544, 549], "add_dict_entri": [41, 46, 111, 516, 525, 528], "similarli": [41, 474, 542], "hood": 41, "offici": [41, 112, 113, 114, 115, 116, 117, 118, 125, 126, 127, 128, 446, 516, 522, 523, 542, 549], "reload": 41, "0x0010": [41, 131, 232, 542], "softwarevers": 41, "0x0018": 41, "0x1020": 41, "pixel_byt": 41, "175": 41, "166": 41, "203": [41, 237, 314], "207": 41, "216": 41, "186": 41, "183": 41, "157": 41, "181": 41, "184": 41, "171": 41, "152": 41, "164": 41, "235": 41, "906": 41, "910": 41, "923": 41, "922": 41, "929": 41, "927": 41, "914": 41, "954": 41, "938": 41, "942": [41, 516, 529], "925": 41, "905": [41, 51], "959": 41, "916": [41, 516, 519], "911": 41, "904": 41, "909": 41, "int16": [41, 51, 52, 549], "extens": [41, 78, 132, 516, 527, 534], "effect": [41, 145, 471], "behavior": [41, 42, 55, 84, 85, 96, 131, 516, 523, 527, 531, 532], "enforc": [41, 47, 207, 516, 522], "expect": [41, 141, 143, 147, 208, 216, 218, 221, 222, 223, 224, 516, 526, 528, 532, 536, 540], "t1": 41, "0x00100010": [41, 128, 131], "equival": [41, 131, 141, 143, 147, 222, 223, 516, 526], "t2": 41, "t3": 41, "t4": 41, "portion": 41, "is_priv": [41, 128, 173, 231, 446, 516, 525], "odd": [41, 131, 134, 208, 222, 223, 224, 231, 516, 526, 535, 537, 542], "prettier": 41, "select": [41, 131, 144], "There": [42, 48, 49, 51, 516, 527, 540, 541, 542, 543, 549], "against": [42, 128, 174, 516, 521, 532], "turn": [42, 94, 165, 516, 532], "enabl": [42, 93, 131], "reading_validation_mod": [42, 55, 76, 77, 79, 95, 129, 131, 516, 535], "writing_validation_mod": [42, 55, 79, 516, 535], "newli": [42, 131, 516, 531], "ignor": [42, 55, 76, 84, 85, 111, 128, 131, 178, 500, 509, 516, 530, 534, 537, 541], "rais": [42, 55, 76, 77, 79, 81, 82, 84, 85, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 129, 131, 133, 134, 135, 145, 148, 155, 157, 161, 164, 166, 169, 174, 182, 183, 185, 198, 207, 208, 216, 217, 218, 219, 220, 221, 222, 224, 234, 471, 483, 488, 490, 502, 509, 516, 520, 521, 526, 528, 529, 532, 534, 535, 537, 542, 544, 547], "As": [42, 45, 46, 542, 548], "suggest": [42, 539, 540, 541], "except": [42, 46, 50, 51, 55, 76, 84, 85, 86, 97, 131, 157, 172, 174, 185, 198, 207, 234, 509, 516, 519, 521, 524, 525, 528, 529, 532, 534, 535, 537, 540, 542, 544, 547], "special": [42, 59, 509, 516, 523], "avoid": [42, 103, 165, 182, 474, 516, 528, 529, 532, 544], "invalid": [42, 55, 76, 77, 85, 89, 90, 135, 222, 471, 516, 528, 532, 534, 536, 537], "legaci": 42, "strictli": [42, 49], "adher": 42, "guarante": [42, 45, 46], "predefin": 42, "That": [42, 46], "local": [42, 69, 106, 516, 535, 540, 541, 542, 546], "balanc": 42, "evolut": 42, "break": [42, 516, 532, 544], "sometim": [42, 46, 516, 527, 537], "improv": [42, 516, 523, 526, 527, 534, 536, 539], "protect": 42, "upcom": [42, 96], "compat": [42, 44, 516, 519, 520, 522, 523, 524, 525, 537, 546], "next": [42, 46, 96, 131, 165, 174, 175, 516, 519, 532, 544, 549], "simplest": [42, 544, 546], "pydicom_futur": [42, 516, 532], "temporarili": 42, "linux": [42, 516, 525, 541, 546], "future_behavior": [42, 509, 516, 532], "again": [42, 43, 53, 540, 544], "anoth": [42, 215, 222, 516, 532, 542, 547], "txt": [42, 542], "virtual": [42, 546], "brief": 43, "overview": [43, 544], "pure": 43, "report": [43, 516, 529, 539, 545], "radiotherapi": [43, 172], "easi": [43, 51], "complex": [43, 51], "natur": 43, "helper": [43, 134], "filedataset": [43, 48, 69, 106, 164, 168, 185, 509, 516, 519, 521, 534, 535, 537, 542, 544], "supin": 43, "prone": 43, "hfp": 43, "rtplan2": 43, "fetch": [43, 44, 51, 547], "0182": 43, "01b2": 43, "techniqu": 43, "patientposit": 43, "thorough": 43, "server": [43, 541], "pynetdicom": 43, "primarili": [43, 516, 520], "design": [43, 53, 548], "let": [43, 44, 516, 529, 540, 541, 542, 544, 547], "wherev": 43, "alter": [43, 53], "intellig": 43, "decompress": [43, 44, 45, 131, 219, 516, 525, 529, 546, 547], "onc": [43, 44, 46, 82, 109, 111, 540, 541, 547, 548], "kind": [43, 46], "discuss": [43, 540, 544], "question": [43, 539], "give": [43, 483, 516, 518, 519, 542, 547], "feedback": [43, 516, 523], "bug": [43, 516, 520, 524, 528, 531, 534, 539, 540, 546], "tracker": [43, 539, 540], "major": [43, 47, 96, 516, 532], "fix": [43, 165, 524, 539, 540, 542], "announc": [43, 97], "ll": [44, 540, 541, 542, 547, 549], "reli": [44, 45, 80], "separ": [44, 100, 128, 131, 138, 139, 480, 516, 519, 520, 547], "encapsul": [44, 51, 131, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 224, 509, 516, 517, 527, 532, 537], "amount": [44, 131, 216, 223, 547, 549], "too": [44, 131, 134, 502, 516, 526, 528, 529, 539], "extend": [44, 45, 131, 138, 139, 141, 143, 147, 223, 230, 516, 532, 537, 547], "relev": [44, 183, 184, 185, 540], "encap": [44, 172, 509, 516, 525, 527, 537, 547], "encapsulate_extend": [44, 138, 516, 532, 537, 547], "jpeg2000lossless": [44, 547], "third_party_compression_func": [44, 547], "appropri": [44, 50, 51, 131, 169, 207, 220, 504, 547], "ct_compressed_bas": [44, 547], "extendedoffsett": [44, 139, 547], "extendedoffsettablelength": [44, 139, 547], "ct_compressed_ext": [44, 547], "nativ": [44, 224, 449, 513, 547], "ct_rle_lossless": [44, 131, 547], "encoding_plugin": [44, 131, 155, 547], "Will": [44, 109], "implicitli": [44, 547], "explicitli": [44, 50, 51, 88, 516, 527, 534, 544, 547], "jpeg2k": [44, 69, 516, 527, 547], "us1_rl": 44, "j2k": [44, 516, 537], "up": [44, 50, 51, 131, 161, 174, 175, 182, 185, 220, 471, 480, 505, 516, 519, 523, 525, 540, 541, 542, 545, 546, 547], "abl": [45, 46, 516, 531, 537, 543, 544, 547, 549], "ideal": 45, "jpeg_l": [45, 131, 217, 516, 525, 537], "libjpeg": [45, 546], "openjpeg": [45, 546], "capac": 45, "mention": [45, 542], "Be": 45, "verifi": [45, 516, 522], "purpos": 45, "far": [45, 128], "deflat": [45, 218, 225, 446, 516, 531], "57": [45, 144, 222, 237, 337, 339, 516, 527, 532, 537], "sv1": [45, 222, 516, 531], "70": [45, 144, 222, 237, 321, 338, 339, 516, 531, 532, 537], "81": [45, 52, 144, 222, 237, 335, 336, 381, 516, 520], "92": [45, 144, 237, 330, 331, 516, 526, 527], "93": [45, 52, 144, 237, 329, 331, 516, 521, 527], "jpegimageplugin": 45, "jpeg2kimageplugin": 45, "5x": [45, 516, 534], "faster": [45, 516, 519, 531, 534], "adapt": [45, 516, 527], "well": [46, 51, 53, 174, 209, 222, 516, 519, 520, 522, 529, 540, 542, 546], "v1": [46, 516, 526, 527, 528, 549], "easier": [46, 132, 516, 537, 541], "outlin": 46, "preced": [46, 516, 537], "reserv": 46, "thu": [46, 516, 517], "necessarili": [46, 50, 516, 537], "enclos": 46, "clear": [46, 128, 131, 174, 516, 537], "0x00091001": 46, "privateblock": [46, 131, 509], "0x0009": [46, 131], "compani": 46, "accomplish": 46, "0x000b": 46, "000b": 46, "add_new_priv": [46, 131, 516, 537], "latest": [46, 546], "encount": [46, 89], "newer": 46, "common": [46, 48, 52, 53, 76, 516, 527, 544, 549], "handl": [46, 47, 51, 53, 76, 97, 128, 131, 181, 199, 507, 509, 512, 516, 517, 520, 522, 524, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 537, 542, 543, 546], "0x888800001": 46, "somenewtag": 46, "analog": [46, 131], "0x004100001": 46, "lut": [47, 49, 209, 210, 211, 212, 213, 214, 222, 516, 529, 531, 532, 534], "voi": [47, 212, 213, 214, 222, 516, 529, 532], "overlai": [47, 51, 69, 131, 222, 509, 516, 529, 532, 537, 542], "overlay_arrai": [47, 131, 516, 529], "precondit": 47, "third": [47, 480, 546], "parti": [47, 480, 546], "pil": [47, 516, 519, 527], "wxpython": [47, 516, 519], "best": [47, 69, 224], "practic": [47, 69, 174], "futur": [47, 96, 131, 155, 516, 522, 532, 548], "proof": [47, 96], "fileread": [48, 70, 205, 509, 541, 542], "fine": 48, "read_parti": [48, 70, 164, 205, 542], "preexist": 48, "mainli": [49, 131, 516, 523], "concern": 49, "often": [49, 51, 109, 543], "desir": [49, 207, 215, 222], "sever": [49, 55, 516, 523, 525], "stdlib": 49, "2d": [49, 516, 532], "axesimag": 49, "thank": [49, 516, 519, 522], "roi": 49, "key": 49, "pydicom_tkint": 49, "contrib": [49, 516, 519, 539], "come": 49, "photoimag": 49, "pydicom_pil": 49, "imview": 49, "60xx": [50, 208, 222, 516, 529, 542], "3000": [50, 131, 208, 210, 211, 222, 516, 529, 542], "6000": 50, "6002": 50, "601e": 50, "0x6000": [50, 208, 542], "0x3000": 50, "29282": 50, "tend": [50, 546], "lazi": 50, "unpack": [50, 222, 224, 499, 516, 527, 535], "uint8": [50, 209, 210, 211, 212, 213, 222], "484": 50, "align": 50, "pack_bit": [50, 222, 516, 527, 532], "numpy_handl": [50, 97, 509, 516, 534], "packed_byt": 50, "temp": [50, 51], "reduc": [50, 51, 176, 215, 222, 516, 527, 532, 537, 544, 547], "512x512": [50, 51], "256x256": [50, 51], "bulk": [51, 128, 131, 509, 512, 516, 529, 530, 533, 543], "although": [51, 174, 544], "almost": 51, "parametr": [51, 540], "map": [51, 128, 131, 172, 516, 537, 541], "floatpixeldata": [51, 222, 223, 224, 516, 534], "doublefloatpixeldata": [51, 222, 223, 224, 516, 534], "interchang": [51, 544], "mr_small": [51, 69], "x89": 51, "x03": 51, "xfb": 51, "xcb": 51, "xeb": 51, "xf9": 51, "x02": 51, "x94": 51, "x7f": 51, "immedi": 51, "varieti": 51, "broken": 51, "fragment": [51, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 516, 529, 537], "1227": 51, "302": 51, "304": 51, "328": 51, "628": 51, "770": 51, "907": 51, "298": 51, "331": 51, "355": 51, "498": [51, 384, 385, 471, 516, 526], "566": 51, "706": 51, "280": 51, "285": 51, "334": 51, "431": 51, "1094": 51, "1068": 51, "1083": 51, "339": 51, "377": 51, "413": 51, "1318": 51, "1346": 51, "1336": 51, "378": 51, "374": 51, "422": 51, "1369": 51, "1129": 51, "862": 51, "straightforward": 51, "particularli": [51, 53], "300": 51, "shrunk": 51, "apply_color_lut": [51, 222, 509, 516, 529], "palette_color": [51, 69], "pet": [51, 209, 222], "possibli": [51, 131, 224], "physic": [51, 544], "quantiti": [51, 506, 549], "hounsfield": 51, "unit": [51, 131, 164, 208, 222, 223, 506, 540, 549], "apply_modality_lut": [51, 212, 213, 214, 222, 509, 516, 529, 531], "hu": 51, "apply_voi_lut": [51, 222, 509, 516, 529, 531, 532], "voic": 52, "audio": [52, 549], "lead": [52, 55, 69, 475, 476, 485, 516, 520, 525, 536, 549], "ecg": [52, 69, 549], "5400": [52, 131, 506, 549], "consist": [52, 132, 185, 516, 522, 541, 547, 549], "synchronis": [52, 549], "003a": [52, 131, 506, 549], "001a": 52, "waveformdata": [52, 549], "240000": [52, 549], "multiplex_1": 52, "112": 52, "25": [52, 408, 471], "68": [52, 419, 439, 440], "62": 52, "37": 52, "131": [52, 241], "137": 52, "10000": [52, 549], "multiplex_2": 52, "1200": [52, 516, 532, 549], "multiplex_arrai": [52, 131, 506, 516, 532, 549], "55": [52, 516, 519], "65": [52, 255], "85": 52, "60": [52, 516, 523, 534], "110": [52, 516, 522], "coupl": [53, 544], "truli": 53, "certain": [53, 131, 222, 541, 542], "tool": [53, 516, 537], "look": [53, 183, 184, 540, 541, 542], "approxim": 53, "especi": [53, 540], "tricki": 53, "de": 53, "awar": [53, 544], "xxx": 53, "524288": 53, "bigger": [53, 516, 531], "potenti": 53, "disadvantag": 53, "wrote": 53, "quit": [53, 516, 519, 540], "switch": [53, 89, 516, 520, 522, 524, 529, 531, 534, 536, 540, 541], "individu": [53, 215, 222, 480, 516, 522, 532, 534], "code_fil": 53, "previou": [53, 175, 176, 516, 522, 525, 531, 532, 537], "certainli": 53, "difficult": [53, 540], "singleton": 55, "infer_sq_for_un_vr": [55, 516, 535], "undefin": [55, 128, 145, 162, 178, 516, 521, 532, 535], "conform": [55, 128, 131, 174, 177, 185, 198, 205, 221, 516, 525, 527, 528, 542, 544, 547], "failur": [55, 516, 531, 540], "longer": [55, 82, 128, 218, 516, 526, 527, 529, 532, 534, 537, 544], "bypass": [55, 155], "dataelem": [59, 78, 131, 166, 184, 200, 201, 504, 509, 516, 528, 531, 542], "dataelement_from_raw": [59, 542], "rawdatael": [59, 91, 129, 131, 132, 133, 162, 166, 196, 504], "tag_in_except": 59, "tupletag": [59, 516, 519], "convert_ae_str": 59, "convert_atvalu": 59, "convert_da_str": 59, "convert_ds_str": 59, "convert_dt_str": 59, "convert_is_str": 59, "convert_numb": [59, 183, 184], "convert_obvalu": 59, "convert_owvalu": 59, "convert_pn": 59, "convert_single_str": 59, "convert_sq": 59, "convert_str": 59, "convert_tag": 59, "convert_text": 59, "convert_tm_str": 59, "convert_ui": 59, "convert_un": 59, "convert_ur_str": 59, "convert_valu": 59, "multi_str": [59, 70], "multiv": [59, 509, 542], "is_valid_d": [59, 516, 534], "format_number_as_d": [59, 516, 534], "isfloat": [59, 516, 536], "rt_plan": 69, "rt_dose": [69, 544], "rtdose": 69, "rt_ss": 69, "rtstruct": 69, "siemen": 69, "withoverlai": 69, "waveform_ecg": 69, "us1_uncr": 69, "obxxxx1a": 69, "us1_j2kr": 69, "data_element_gener": [70, 165], "data_element_offset_to_valu": 70, "read_deferred_data_el": 70, "read_file_meta_info": [70, 132], "read_preambl": [70, 205, 542], "read_sequ": 70, "read_sequence_item": 70, "filewrit": [70, 131, 509, 542], "correct_ambiguous_vr": 70, "correct_ambiguous_vr_el": 70, "write_atvalu": 70, "write_da": 70, "write_dataset": [70, 516, 537], "write_data_el": 70, "write_dt": 70, "write_file_meta_info": [70, 185], "write_numb": 70, "write_number_str": 70, "write_obvalu": 70, "write_owvalu": 70, "write_pn": [70, 516, 526], "write_sequ": 70, "write_sequence_item": 70, "write_str": 70, "write_text": 70, "write_tm": 70, "write_ui": 70, "write_un": 70, "dicombytesio": [70, 160, 516, 537], "dicomio": [70, 145, 148, 153, 158, 160, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 516, 537], "fileutil": [70, 509], "absorb_delimiter_item": 70, "find_byt": [70, 180, 181, 516, 523], "find_delimit": [70, 181], "length_of_undefined_length": 70, "read_undefined_length_valu": 70, "mistak": 76, "stand": 76, "alon": 76, "respect": [76, 93, 516, 526], "lookuperror": [76, 77], "delimit": [77, 144, 145, 146, 178, 180, 181, 182, 186, 505, 516, 532, 534], "reset": [77, 96, 98, 131, 147, 152], "loss": [77, 79, 475, 476, 483, 516, 532], "unicodedecodeerror": 77, "dicom_character_set": 78, "unicodeencodeerror": 79, "precis": [80, 88, 222, 475, 476, 480, 483, 516, 534], "use_decimal_boolean": 81, "valueerror": [81, 82, 84, 85, 106, 107, 108, 109, 110, 111, 131, 133, 134, 135, 145, 148, 166, 174, 185, 198, 208, 218, 221, 222, 224, 471, 483, 488, 490, 502, 516, 537, 544, 547], "use_ds_numpi": [81, 488, 509, 516, 531], "use_numpi": 82, "__setattr__": 84, "camel": [84, 516, 532], "neither": [84, 85, 174, 210, 211, 213, 222], "nor": [84, 85], "citizen": [84, 128, 131, 542], "ok": [84, 85, 174, 540], "patientsnam": [84, 85], "1895": 84, "__contains__": [85, 516, 532], "0x100100010": 85, "traceback": [85, 234, 542, 544, 547], "recent": [85, 540, 541, 542, 544, 547], "stdin": [85, 542, 544, 547], "494": 85, "msg": [85, 542], "exc": 85, "occur": [86, 87, 516, 529, 540, 544], "digit": [88, 134, 199, 549], "round": [88, 222], "writer": 89, "elementcallback": 91, "callabl": [91, 128, 131, 162, 165, 168, 172, 207, 223, 505], "everi": [91, 155, 222, 224, 544, 549], "data_element_callback": [92, 98, 509], "anymor": 93, "manual": [93, 185], "debug_on": 94, "default_handl": 94, "log": [94, 131, 516, 522, 535, 540], "logger": [94, 516, 523, 537], "streamhandl": 94, "deprec": [95, 96, 131, 136, 137, 144, 145, 146, 148, 153, 185, 521, 522, 526, 527, 528, 531, 532, 534, 535, 536], "enable_futur": 96, "imit": 96, "becom": [96, 516, 522, 532, 540, 541, 544], "emul": [96, 131], "invalid_keyword_behavior": [96, 509, 516, 532], "invalid_key_behavior": [96, 509, 516, 532], "gdcm_handler": 97, "pillow_handl": [97, 540], "jpeg_ls_handl": 97, "pylibjpeg_handl": 97, "rle_handl": [97, 516, 535, 537], "convert_pixel_data": [97, 131], "extract": 97, "shall": [97, 131, 140, 144, 145, 148, 149, 150, 162, 185, 198], "supports_transfer_syntax": [97, 216, 217, 218, 219, 220, 221], "transfer_syntax": [97, 216, 217, 218, 219, 221, 223], "get_pixeldata": [97, 216, 217, 218, 219, 220, 221], "1d": [97, 208, 218, 219, 220, 221, 222, 223], "reshap": [97, 208, 220, 222, 223, 224], "dimens": [97, 220, 224], "needs_to_convert_to_rgb": [97, 216, 217, 218, 219, 220, 221], "colourspac": [97, 516, 534], "refus": 97, "fact": [97, 542], "notimplementederror": [97, 131, 217, 218, 219, 221, 222], "global": [99, 516, 535], "ds_decim": [101, 509, 516, 531], "ds_numpi": [102, 509], "absolut": [104, 105, 106, 107, 152, 161, 173, 174, 516, 537], "charset": [104, 509, 516, 536], "extern": [106, 516, 532, 534], "datastor": 106, "0x10021001": [108, 109], "teston": [108, 109], "0x10021002": [108, 109], "testtwo": [108, 109], "retir": [109, 116, 128, 131, 183, 184, 237, 446, 516, 532], "perman": 109, "0x00410001": 110, "0x00410002": 110, "ltd": 110, "whose": [112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 480, 483, 540], "keyerror": [112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 129, 131, 516, 537, 542], "get_private_entri": 118, "get_entri": 119, "grouplength": 120, "mask": 121, "file_value_tel": 128, "is_undefined_length": [128, 131, 516, 529], "already_convert": 128, "validation_mod": [128, 446, 474, 475, 476, 478, 479, 480], "joan": [128, 131], "Its": 128, "descripwidth": 128, "35": [128, 131, 176, 305], "0xffffffffl": 128, "ie": 128, "maxbytestodisplai": [128, 516, 528], "showvr": 128, "backslash": [128, 131, 480, 500, 516, 517, 518, 534], "intern": [128, 131, 162, 523], "0xffffffff": 128, "empty_value_for_vr": 128, "empty_valu": 128, "classmethod": [128, 131, 480], "from_json": [128, 131, 516, 529, 532, 543], "dataset_class": 128, "value_kei": 128, "bulk_data_uri_handl": [128, 131, 516, 532, 543], "json": [128, 131, 231, 516, 528, 529, 533, 534, 545], "inlinebinari": [128, 131], "bulkdatauri": [128, 131, 543], "dicomweb": [128, 131, 543], "wado": [128, 131, 543], "is_empti": 128, "ret": 128, "repval": [128, 131], "to_json": [128, 131, 516, 530, 543], "bulk_data_threshold": [128, 131, 516, 530, 543], "bulk_data_element_handl": [128, 131, 543], "dump_handl": [128, 131], "base64": [128, 131, 543], "dump": [128, 131], "to_json_dict": [128, 131, 516, 530, 536, 543], "18": [128, 131, 442, 516, 525, 543], "validate_valu": 128, "raw_data_el": [129, 504], "belong": [129, 131, 173, 174], "value_tel": 130, "is_raw": 130, "undecod": 130, "alia": [130, 516, 532], "mutablemap": [131, 132, 133], "mutabl": 131, "0x00100020": 131, "0x0030": 131, "0x00100030": 131, "linac": 131, "co": [131, 549], "son": 131, "daughter": 131, "0x0041": 131, "john": [131, 480], "0041": 131, "get_private_item": 131, "iteral": [131, 516, 518], "jsonmodel": 131, "ds2": 131, "default_element_format": 131, "default_sequence_element_format": 131, "indent_char": [131, 175], "element_offset": [131, 134], "0xffff": [131, 172, 516, 526], "0x00": [131, 138, 140, 185, 496], "0xff": 131, "decoding_plugin": [131, 155, 224], "encapsulate_ext": 131, "tri": [131, 155, 161, 224, 516, 537], "placehold": [131, 155], "handler_nam": 131, "unabl": [131, 161, 185, 222, 542, 544, 547], "runtimeerror": [131, 220], "shallow": 131, "state": [131, 191, 516, 537, 543], "alphabet": [131, 480, 516, 536], "__getitem__": [131, 542], "unconvert": 131, "increas": [131, 516, 519, 536], "ensure_file_meta": 131, "formatted_lin": [131, 516, 518], "element_format": 131, "sequence_element_format": 131, "indent_format": 131, "json_dataset": 131, "obj": 131, "get_item": [131, 516, 537], "keep_def": [131, 516, 537], "defer": [131, 166, 516, 518, 522, 529, 535, 542], "group_dataset": 131, "v4": [131, 136, 137, 145, 146, 148, 153, 185, 516, 537, 549], "implicit_vr": [131, 185, 446, 472, 516, 537], "little_endian": [131, 185, 446, 472, 516, 537], "is_original_encod": 131, "dict_item": 131, "unlik": 131, "flatten": 131, "dict_kei": 131, "original_character_set": [131, 516, 537], "original_encod": [131, 185, 197, 516, 537], "pop": [131, 516, 528], "tagtyp": 131, "combin": [131, 232, 542, 549], "popitem": 131, "unrealist": 131, "free": 131, "associ": [131, 223], "read_encod": [131, 516, 537], "read_implicit_vr": [131, 516, 537], "read_little_endian": [131, 516, 537], "pathlik": [131, 132, 164, 166, 167, 174, 185, 516, 531], "binaryio": [131, 132, 162, 164, 165, 166, 168, 169, 170, 171, 178, 179, 180, 181, 182, 185, 516, 537], "writeablebuff": [131, 160, 161, 185], "_dataset__write_like_origin": 131, "2006": 131, "write_like_origin": [131, 185, 516, 537], "writeabl": [131, 185, 218, 224, 516, 537], "tell": [131, 132, 141, 142, 143, 147, 151, 152, 160, 161, 164, 185, 516, 518, 537, 541, 544], "isn": [131, 141, 143, 147, 165, 185, 222, 446, 471, 516, 528, 532, 537, 541, 542], "public": [131, 185], "preserv": [131, 185, 516, 524, 531], "preambl": [131, 132, 164, 169, 185, 198, 205, 516, 525, 542], "set_original_encod": 131, "character_encod": 131, "optim": 131, "setdefault": [131, 516, 528, 532], "0x00100040": 131, "suppress_invalid_tag": [131, 516, 536], "threshold": 131, "inlin": [131, 543], "drop": [131, 516, 531, 532], "bubbl": 131, "my_json_dump": 131, "sort_kei": 131, "trait_nam": 131, "ipython": [131, 516, 517], "autocomplet": 131, "valuesview": 131, "visit": [131, 540, 541], "0210": [131, 506, 549], "0211": 131, "filename_or_obj": [132, 166], "readablebuff": [132, 141, 142, 143, 147, 151, 152, 160, 161, 164], "prepend": 132, "0x0002": [132, 185, 542], "fileobj_typ": [132, 166], "timestamp": [132, 166], "modif": [132, 540, 542, 544], "readabl": [132, 141, 142, 143, 147, 151, 152, 164, 516, 537], "rb": [132, 542], "overrid": [133, 172, 224, 474, 516, 527, 544], "super": 133, "typeerror": [133, 164, 207, 216, 217, 516, 526, 532, 542], "init_valu": 133, "private_creator_el": 134, "block_start": 134, "low": [134, 543], "get_tag": 134, "enforce_standard": [135, 198, 542], "generate_fram": [136, 137, 146, 220, 516, 537], "generate_frag": [136, 137, 145, 153, 516, 537], "continu": [137, 516, 517, 534], "concaten": [137, 148], "togeth": [137, 138, 186], "has_bot": [138, 139], "frame1": 138, "frame2": 138, "exce": [138, 139], "31": 138, "circumst": [138, 139], "strongli": [138, 174, 544], "nr_fragment": [140, 150], "marker": [140, 144, 169, 182, 516, 529, 534], "null": [140, 208, 222, 223, 496], "extended_offset": [141, 143, 147, 223], "suffici": [141, 143, 147], "excess": [141, 143, 147, 516, 528], "latter": [141, 142, 143, 147, 151, 152], "bytestream": [144, 146], "nr_frame": [144, 146], "generate_fragmented_fram": [144, 516, 537], "span": 144, "predict": 144, "Near": 144, "attempt": [144, 184, 185, 224, 506, 516, 525, 534, 542], "boundari": [144, 516, 537], "eoi": [144, 516, 529], "eoc": [144, 516, 529], "0xffd9": 144, "hasn": [144, 540, 541], "incorrect": [144, 155, 224, 516, 520, 526, 528, 529, 537], "stream": [145, 153, 161, 516, 537, 540], "fffe": [145, 148, 149, 150], "e000": [145, 148, 149, 150], "e0dd": 145, "0x00000000": [145, 148], "presenc": [145, 209, 222, 542], "absenc": 145, "parse_basic_offset": [148, 516, 537], "fe": 148, "e0": 148, "08": 148, "measur": [148, 151, 172], "bot": 148, "ffee": 148, "itemis": 150, "afterward": [152, 540], "factori": [155, 207, 224, 233, 474, 516, 519, 534], "import_path": [155, 224], "encode_pixel_data": 155, "modulenotfounderror": [155, 224], "unavail": [155, 224], "attributeerror": [155, 183, 208, 216, 218, 220, 221, 224, 516, 519, 535, 537, 542], "aren": [155, 174, 224, 516, 537, 542, 544], "uint16": [155, 209, 210, 211, 212, 213, 222], "iter_encod": [155, 547], "kwargs_from_d": 155, "missing_depend": [155, 224], "nice": [155, 207, 224, 540], "remove_plugin": [155, 224], "appear": [157, 544], "dicm": [157, 169, 185, 198, 205, 542], "mayb": 157, "initial_byt": 158, "memoryview": [158, 161, 223, 224], "wrapper": [158, 160, 161, 516, 531], "simplifi": [158, 160, 516, 518, 522], "iobas": [160, 161], "rawiobas": [160, 161], "destin": [160, 161], "close": [161, 164, 168, 516, 518, 519], "unspecifi": 161, "eof": [161, 182], "fewer": [161, 484], "read_ul": 161, "read_u": 161, "read_exact": 161, "nr_retri": 161, "eoferror": [161, 182], "read_tag": 161, "whenc": 161, "rel": [161, 177, 516, 537], "write_ul": 161, "val": [161, 186, 230, 446, 474, 475, 476, 478, 479, 480, 483, 505, 542], "write_u": 161, "write_tag": 161, "stop_when": [162, 165, 168], "defer_s": [162, 164, 165, 168, 182, 206, 516, 518], "specific_tag": [162, 164, 165, 168, 542], "read_data_el": 162, "stop_before_pixel": [164, 516, 519], "pars": [164, 168, 222, 509, 516, 517, 529, 531, 532, 537], "context": [164, 234, 516, 525, 542], "caller": [164, 516, 519], "respons": [164, 480, 543], "kb": 164, "stop": [164, 168, 516, 519], "subsequ": 164, "invaliddicomerror": [164, 169, 509, 516, 520, 542], "unsupport": [164, 216, 217, 218, 221], "condit": [164, 168, 516, 525], "bytelength": [165, 170], "parent_encod": [165, 197], "at_top_level": 165, "itemdelimitertag": 165, "call_back": 165, "heurist": [165, 516, 525], "raw_data_elem": 166, "persist": 166, "st_mtime": 166, "oserror": 166, "meant": [167, 205], "quickli": [167, 544], "fileobj": [168, 542], "reach": [168, 180, 182], "assess": 172, "_define_assess": 172, "doc": [172, 541], "_define_encap_doc": 172, "fiduci": 172, "_define_generic_content_id": 172, "hang": 172, "protocol": 172, "_define_hanging_protocol": 172, "_define_imag": 172, "implant": [172, 174], "_define_impl": 172, "assi": 172, "_define_implant_assi": 172, "_define_implant_group": 172, "_define_key_object_doc": 172, "_define_palett": 172, "_define_pati": 172, "_define_empti": 172, "_define_present": 172, "_define_radiotherapi": 172, "_define_generic_cont": 172, "registr": 172, "_define_rt_dos": [172, 544], "_define_rt_plan": 172, "_define_rt_structure_set": 172, "treat": [172, 223, 544], "_define_rt_treatment_record": 172, "_define_seri": 172, "spectroscopi": 172, "_define_spectroscopi": 172, "sr": [172, 480, 516, 534, 548], "_define_sr_docu": 172, "stereometr": 172, "_define_studi": 172, "surfac": 172, "_define_surface_scan": 172, "tract": 172, "1430": [172, 544], "my_record": 172, "offsetofthenextdirectoryrecord": 172, "recordinuseflag": 172, "offsetofreferencedlowerleveldirectoryent": 172, "directoryrecordtyp": [172, 174], "specificcharacterset": 172, "my_inst": 172, "add_custom": [172, 174, 544], "node": [173, 174, 175, 542], "recordnod": [173, 174, 509], "leaf": [173, 174, 175], "fileid": 173, "file_set": [173, 175], "for_addit": [173, 544], "for_mov": 173, "for_remov": 173, "is_stag": [173, 174, 544], "temporari": [173, 516, 537, 544], "ds_or_path": 174, "cancel": 174, "directory_record": [174, 509, 544], "definit": [174, 185, 509, 516, 525, 549], "suitabl": [174, 209, 222, 223, 546], "1400": [174, 544], "1410": [174, 544], "1420": [174, 544], "1500": [174, 516, 535], "1510": 174, "1511": [174, 516, 535], "1512": 174, "hierarchi": [174, 544], "privaterecorduid": 174, "leaf_nod": 174, "top_nod": 174, "ancestor": [174, 175, 183, 184], "due": [174, 516, 523, 534, 536, 540, 544], "force_implicit": 174, "1234567": 174, "7654321": 174, "include_orphan": 174, "raise_orphan": 174, "attach": 174, "imposs": 174, "orphan": 174, "use_exist": [174, 544], "backup": 174, "ptxxxxxx": 174, "stxxxxxx": 174, "sexxxxxx": 174, "imxxxxxx": 174, "xxxxxx": 174, "alphanumer": [174, 176, 516, 537], "paxxxxxx": 174, "p0xxxxxx": 174, "p1xxxxxx": 174, "p2xxxxxx": 174, "everyth": [174, 540, 544], "children": 175, "child": 175, "nearest": 175, "furthest": [175, 183, 184], "has_inst": 175, "amongst": 175, "sibl": 175, "is_root": 175, "prettifi": 175, "pretti": [175, 540], "record_typ": [175, 544], "revers": [175, 516, 529], "k": [176, 516, 537], "00010": 176, "00000000": 176, "00000001": 176, "00000002": 176, "_": [177, 541], "bytes_to_find": 179, "read_siz": [179, 180, 181, 182], "found_at": 179, "routin": 181, "delimiter_tag": 182, "ambigu": [183, 184, 516, 525, 527, 528, 532], "dicond": [183, 184], "closest": [183, 184], "__write_like_origin": 185, "force_encod": [185, 516, 537], "henc": 185, "bytestr": [185, 222], "eeee": [185, 516, 537], "independ": 185, "prioriti": [185, 197, 516, 537], "0x0000": 185, "put": 186, "swap": [191, 224, 492], "rule": 196, "0017": 198, "send": [198, 540, 541], "struct_format": [200, 485, 486, 487, 488, 489, 490, 491, 492, 495, 496, 497, 498, 499, 501], "pare": 205, "down": [205, 540, 544], "fast": [205, 233], "conserv": 205, "approach": 205, "expr": 206, "type_constructor": [207, 542], "hold": [207, 230], "constructor": 207, "therefor": [207, 222], "overlayrow": 208, "overlaycolumn": 208, "0015": 208, "numberofframesinoverlai": 208, "overlaybitsalloc": 208, "overlaybitposit": 208, "get_expected_length": [208, 222], "NOT": [208, 222, 223], "get_overlay_arrai": 208, "0x6010": 208, "0x60ff": 208, "reshape_overlay_arrai": 208, "1201": [209, 222], "1203": [209, 222], "1221": [209, 222], "1223": [209, 222], "1204": [209, 222], "1224": [209, 222], "supplement": [209, 222], "hot_iron": [209, 222], "hot_metal_blu": [209, 222], "pet_20_step": [209, 222], "spring": [209, 222], "summer": [209, 222], "fall": [209, 222], "winter": [209, 222], "rgba": [209, 222], "3rd": [209, 210, 211, 212, 213, 222], "colour": [209, 222], "3002": [210, 211, 212, 213, 222, 516, 529], "float64": [210, 211, 213, 214, 222, 488], "3010": [212, 213, 222], "apply_window": [212, 213, 222, 509, 516, 532], "prefer_lut": [213, 222, 516, 532], "apply_voi": [213, 214, 222, 509, 516, 532], "per_fram": [215, 222, 516, 534], "iec": [215, 222, 331, 336, 339, 471], "10918": [215, 222, 339, 516, 534], "2012": [215, 222], "itu": [215, 222, 471], "871": [215, 222], "create_data_el": 216, "create_imag": 216, "volum": 216, "importerror": [216, 217, 219, 488, 490, 516, 533, 540], "affect": [216, 217, 218, 219, 220, 221, 222, 540, 541], "should_change_photometricinterpretation_to_rgb": [216, 217, 218, 219, 220, 221], "pyjpegl": 217, "planarconfigur": [218, 220, 221, 222, 516, 525], "numberoffram": [218, 220, 221, 222, 516, 537], "read_onli": 218, "resampl": 218, "as_arrai": [220, 222, 224], "tsyntax": [220, 223], "suppos": 221, "msb": 221, "lsb": 221, "dtype_corrected_for_endian": 222, "numpy_dtyp": 222, "expand_ybr422": [222, 516, 535], "subsampl": 222, "horizont": 222, "halv": 222, "cb": 222, "get_image_pixel_id": 222, "get_j2k_paramet": 222, "codestream": 222, "15444": [222, 331], "is_sign": 222, "get_nr_fram": 222, "conjunct": 222, "uint": 222, "sake": 222, "pixel_dtyp": [222, 223], "as_float": 222, "reshape_pixel_arrai": 222, "unpack_bit": [222, 516, 535], "runner": 223, "del_opt": 223, "frame_length": 223, "get_opt": 223, "iter_decod": 223, "as_fram": 223, "set_decod": 223, "decodefunct": 223, "set_opt": 223, "set_sourc": 223, "0x0028": [223, 542], "test_for": 223, "validate_buff": 223, "validate_opt": 223, "thread": 224, "safe": [224, 233], "decode_pixel_data": 224, "commonli": [224, 544, 547], "whatsoev": 224, "as_buff": 224, "success": [224, 541], "as_rgb": 224, "force_rgb": 224, "force_ybr": 224, "view_onli": 224, "effort": 224, "immut": [224, 473, 477, 481, 516, 528], "facilit": 224, "is_encapsul": [224, 446], "is_n": 224, "iter_arrai": 224, "iter_buff": 224, "is_private_cr": 231, "json_kei": [231, 516, 536], "ggggeeee": 231, "meaningless": 231, "arg2": [232, 516, 519], "0x00100015": 232, "0x50": 232, "0x0015": 232, "group_elem": 233, "71": 235, "102": [237, 352, 355, 362, 516, 522], "103": [237, 353, 354, 362, 516, 522], "108": [237, 312, 362, 480], "201": [237, 315, 326], "202": [237, 316], "204": [237, 340], "205": [237, 341, 516, 529], "78": [240, 323, 342, 347, 376, 436, 438, 459, 516, 520], "19": 249, "200": [251, 253, 394, 463, 464], "69": 256, "39": 257, "34": [260, 400, 402], "33": 261, "82": [266, 516, 520], "501": [267, 268, 269, 270, 271, 272, 273], "66": [275, 420, 430, 434, 435, 441, 444], "601": [283, 284], "130": 296, "23": 297, "22": [298, 417], "76": 302, "43": [309, 516, 519], "38": 317, "45": 320, "14495": 336, "59": 343, "mpeg": [362, 516, 532], "79": [365, 516, 520], "826": [384, 385, 471, 516, 529], "3680043": [384, 385, 471], "73": [387, 516, 519], "74": 390, "register_transfer_syntax": [392, 516, 537], "compil": [396, 397], "regex": [396, 397], "67": [421, 469], "72": [432, 516, 519], "human": [446, 480, 542], "friendli": [446, 542, 544], "subclass": [446, 516, 526], "set_private_encod": [446, 472, 516, 537], "is_transfer_syntax": 446, "jpegbaseline8bit": [446, 516, 532, 537], "is_compress": 446, "is_defl": 446, "encasul": 446, "is_valid": 446, "entropy_src": [471, 516, 537], "randbelow": [471, 516, 537], "54": [471, 516, 537], "uuid": 471, "uuid4": 471, "sha512": 471, "hash": [471, 516, 528, 534], "determinist": 471, "unrecover": 471, "random": [471, 516, 537], "secret": 471, "22463838056059845879389038257786771680": 471, "167161297070865690102504091919570542144": 471, "lorem": 471, "ipsum": 471, "87507166259346337659265156363895084463": 471, "9834": 471, "667": 471, "had": [472, 516, 527, 534, 540], "auto_format": [474, 475, 476, 516, 534], "__new__": 474, "carri": [474, 516, 524], "penalti": 474, "clean": [474, 516, 525, 540, 541], "satisfi": [475, 476, 483], "construct": [475, 476, 480, 516, 522, 523, 534], "23e2": 475, "123": [475, 543], "rewrit": [478, 479], "uncommon": 479, "original_str": [480, 516, 527], "from_named_compon": [480, 516, 534], "from_named_components_veterinari": [480, 516, 534], "ideograph": 480, "phonet": 480, "absent": [480, 549], "demand": 480, "famili": 480, "family_nam": [480, 516, 534], "format_str": 480, "given_nam": [480, 516, 534], "middle_nam": 480, "name_prefix": 480, "name_suffix": 480, "family_name_ideograph": 480, "given_name_ideograph": 480, "middle_name_ideograph": 480, "name_prefix_ideograph": 480, "name_suffix_ideograph": 480, "family_name_phonet": 480, "given_name_phonet": 480, "middle_name_phonet": 480, "name_prefix_phonet": 480, "name_suffix_phonet": 480, "middl": 480, "addition": 480, "sect": 480, "adam": 480, "robert": 480, "quinci": 480, "rev": 480, "div": 480, "korean": [480, 516, 522], "\u6d2a": 480, "\u5409\u6d1e": 480, "\ud64d": 480, "\uae38\ub3d9": 480, "dr": 480, "chief": 480, "offic": 480, "responsible_party_nam": 480, "patient_nam": 480, "responsible_party_name_ideograph": 480, "patient_name_ideograph": 480, "responsible_party_name_phonet": 480, "patient_name_phonet": 480, "veterinari": 480, "OR": 480, "hors": 480, "abc": 480, "farm": 480, "fourth": 480, "fifth": 480, "truncat": [483, 516, 518], "retain": [483, 516, 534], "scientif": 483, "incur": 483, "furthermor": 483, "finit": 483, "inf": 483, "nan": 483, "byte_str": [485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503], "Not": [485, 486, 487, 488, 489, 490, 495, 496, 498, 501], "int64": 490, "use_is_numpi": [490, 509, 516, 531], "valtyp": 505, "_t": 505, "waveformbitsalloc": [506, 549], "waveformsampleinterpret": [506, 549], "sb": 506, "ub": 506, "ab": 506, "dev0": 509, "convert_encod": 509, "decode_el": 509, "decode_byt": 509, "encode_str": 509, "allow_ds_float": [509, 516, 522], "assume_implicit_vr_switch": [509, 516, 534], "convert_wrong_length_to_un": [509, 516, 534], "data_element_callback_kwarg": 509, "debug": [509, 516, 522, 524], "enforce_valid_valu": [509, 516, 522, 528, 529, 532, 534, 535], "reset_data_element_callback": 509, "show_file_meta": [509, 516, 531], "apply_j2k_correct": [509, 516, 537], "get_charset_fil": 509, "get_palette_fil": [509, 516, 529], "validate_file_meta": [509, 516, 537, 542], "get_encod": 509, "generate_filenam": [509, 516, 537], "is_conformant_file_id": 509, "apply_rescal": [509, 516, 532], "miscellan": 509, "misc": [509, 516, 525], "is_dicom": [509, 516, 525], "size_in_byt": 509, "upper": [516, 537], "gracefulli": [516, 532, 537], "1844": [516, 537], "jpeglossless": [516, 532, 537], "jpeglosslesssv1": [516, 532, 537], "theoret": [516, 537], "1838265625": [516, 537], "1743": [516, 537], "1773": [516, 537], "1481": [516, 537], "2023d": [516, 537], "decid": [516, 537], "initialis": [516, 537], "inherit": [516, 534, 537], "read_fil": [516, 518, 519, 520, 525, 534, 537], "write_fil": [516, 525, 534, 537], "constant": [516, 532, 537, 549], "jpegbaselin": [516, 527, 532, 537], "jpegextend": [516, 527, 532, 537], "jpegextended12bit": [516, 532, 537], "jpeglslossi": [516, 532, 537], "jpeglsnearlossless": [516, 532, 537], "jpeg2000multicomponentlossless": [516, 527, 532, 537, 540], "jpeg2000mclossless": [516, 532, 537], "jpeg2000multicompon": [516, 527, 532, 537, 540], "jpeg2000mc": [516, 532, 537], "jpeglossycompressedpixeltransfersyntax": [516, 532, 537], "jpegtransfersyntax": [516, 532, 537], "jpeglssupportedcompressedpixeltransfersyntax": [516, 532, 537], "jpeglstransfersyntax": [516, 532, 537], "jpeg2000compressedpixeltransfersyntax": [516, 532, 537], "jpeg2000transfersyntax": [516, 532, 537], "rlecompressedlosslesssyntax": [516, 532, 537], "rletransfersyntax": [516, 532, 537], "uncompressedpixeltransfersyntax": [516, 532, 537], "uncompressedtransfersyntax": [516, 532, 537], "pilsupportedcompressedpixeltransfersyntax": [516, 532, 537], "personnameunicod": [516, 531, 537], "rle_encode_fram": [516, 534, 537], "_storage_sopclass_uid": [516, 532, 537], "parent_seq": [516, 537], "parent_dataset": [516, 537], "overlay_data_handl": [516, 532, 537], "fix_meta_info": [516, 527, 537], "1752": [516, 537], "mpeg2mpmlf": [516, 537], "mpeg2mphlf": [516, 537], "mpeg4hp41f": [516, 537], "mpeg4hp41bdf": [516, 537], "mpeg4hp422df": [516, 537], "mpeg4hp423df": [516, 537], "mpeg4hp42stereof": [516, 537], "htj2klossless": [516, 537], "htj2klosslessrpcl": [516, 537], "htj2k": [516, 537], "jpiphtj2kreferenc": [516, 537], "jpiphtj2kreferenceddefl": [516, 537], "smptest211020uncompressedprogressiveactivevideo": [516, 537], "smptest211020uncompressedinterlacedactivevideo": [516, 537], "smptest211030pcmdigitalaudio": [516, 537], "confus": [516, 537], "sent": [516, 537], "1529": [516, 537], "parse_frag": [516, 537], "get_fram": [516, 537], "mmap": [516, 537], "1873": [516, 537], "flexibl": [516, 537], "explicitvrlittleendiandecod": [516, 537], "implicitvrlittleendiandecod": [516, 537], "explicitvrbigendiandecod": [516, 537], "deflatedexplicitvrlittleendiandecod": [516, 537], "disagre": [516, 537], "1689": [516, 537], "enum": [516, 535, 537], "1874": [516, 537], "1907": [516, 537], "secur": [516, 537], "escap": [516, 537], "1922": [516, 537], "deepcopi": [516, 534, 537], "1816": [516, 537], "1968": [516, 537], "1943": [516, 537], "spread": [516, 537], "across": [516, 522, 537], "1774": [516, 537], "mitig": [516, 537], "rare": [516, 537], "1983": [516, 537], "scheme_design": [516, 537, 548], "srt": [516, 537], "sct": [516, 537, 548], "1994": [516, 537], "get_frame_offset": [516, 529, 537], "generate_pixel_data_frag": [516, 537], "generate_pixel_data_fram": [516, 537], "generate_pixel_data": [516, 529, 537], "decode_data_sequ": [516, 537], "defragment_data": [516, 537], "read_item": [516, 537], "folder": [516, 519, 537], "refactor": [516, 537], "renam": [516, 517, 525, 531, 536, 537], "ci": [516, 537], "dependabot": [516, 537], "commit": [516, 537], "ruff": [516, 537], "hotfix": [516, 537], "1965": [516, 537], "eol": [516, 536], "decemb": [516, 536], "1634": [516, 536], "1648": [516, 536], "1414": [516, 536], "cli": [516, 536], "1674": [516, 536], "1658": [516, 536], "1661": [516, 536], "highli": [516, 536], "1728": [516, 536], "1734": [516, 536], "pyproject": [516, 536], "toml": [516, 536], "1792": [516, 536], "2023b": [516, 536], "1803": [516, 536], "1632": [516, 536], "progress": [516, 536, 541], "bar": [516, 536], "1611": [516, 536], "crash": [516, 526, 535, 536], "1638": [516, 536], "extrem": [516, 536], "byteslengthexcept": [516, 536], "1683": [516, 536], "1670": [516, 536], "1693": [516, 536], "1680": [516, 536], "1702": [516, 536], "wrong": [516, 527, 528, 532, 536], "calcul": [516, 534, 536], "1667": [516, 536], "lutdata": [516, 536], "1747": [516, 536], "1738": [516, 536], "teardown": [516, 536], "pytest": [516, 536], "fork": [516, 536, 540, 541, 546], "charpyl": [516, 536, 546], "1788": [516, 536], "favor": [516, 521, 535], "1617": [516, 535], "1498": [516, 535], "resort": [516, 535], "slowest": [516, 535], "1487": [516, 535], "mitra": [516, 535], "1588": [516, 535], "pr": [516, 535, 540, 541], "1594": [516, 535], "1593": [516, 535], "introduc": [516, 535, 540], "2022a": [516, 535], "holog": [516, 535], "0019xx43": [516, 535], "rest": [516, 535, 541], "1565": [516, 535], "deep": [516, 535], "1571": [516, 535], "1581": [516, 535], "maco": [516, 535, 546], "1599": [516, 535], "bad": [516, 525, 535], "1596": [516, 535], "1606": [516, 535], "1609": [516, 535], "__eq__": [516, 526, 534], "operand": [516, 534], "1327": [516, 534], "__str__": [516, 526, 534, 542], "1262": [516, 534], "metadata": [516, 534], "2021b": [516, 534], "silent": [516, 534], "highest": [516, 534], "init": [516, 534], "urllib": [516, 534], "1340": [516, 534], "1348": [516, 534], "optimis": [516, 534], "1361": [516, 534], "1372": [516, 534], "1438": [516, 534], "suppress": [516, 534], "1332": [516, 534], "1428": [516, 534], "1434": [516, 534], "pickl": [516, 525, 529, 534], "1278": [516, 534], "1312": [516, 534], "problem": [516, 534, 542], "workflow": [516, 534, 540, 541], "1341": [516, 534], "1338": [516, 534], "878": [516, 534], "1147": [516, 534], "1412": [516, 534], "expans": [516, 534], "linear": [516, 534], "1415": [516, 534], "1449": [516, 534], "rbg": [516, 534], "jpg": [516, 534], "app14": [516, 534], "1444": [516, 534], "1457": [516, 534], "1251": [516, 533], "1253": [516, 533], "1254": [516, 533], "distribut": [516, 520, 532, 546], "fly": [516, 532], "whenev": [516, 532], "disk": [516, 532], "rg1_unci": [516, 532], "1127": [516, 532], "1234": [516, 532], "1237": [516, 532], "1156": [516, 532], "__next__": [516, 532], "__iter__": [516, 517, 532, 542], "1103": [516, 529, 532], "1155": [516, 532], "1149": [516, 532], "2020d": [516, 532], "243": [516, 532], "alltransfersyntax": [516, 532], "commun": [516, 532], "1240": [516, 532], "1178": [516, 532], "1161": [516, 532], "multifram": [516, 532], "dicosquadrupoleresonanceqrstorag": [516, 532], "dicosquadrupoleresonancestorag": [516, 532], "1211": [516, 532], "1181": [516, 532], "1146": [516, 532], "optimist": [516, 532], "embed": [516, 532], "1140": [516, 532], "network": [516, 532], "connect": [516, 532], "1153": [516, 532], "1193": [516, 532], "1215": [516, 532], "restor": [516, 531], "old": [516, 517, 518, 522, 525, 531], "personname3": [516, 523, 528, 531], "alias": [516, 518, 531], "ismultivalu": [516, 528, 531], "1086": [516, 531], "replace_un_with_known_vr": [516, 531], "1067": [516, 531], "623": [516, 531], "regress": [516, 530, 531, 540], "1038": [516, 531], "improp": [516, 529, 531], "3006": [516, 531], "1078": [516, 531], "1082": [516, 531], "1097": [516, 531], "915": [516, 529], "887": [516, 529, 542], "prevent": [516, 529], "894": [516, 529], "892": [516, 529], "truthi": [516, 529], "891": [516, 529], "899": [516, 529], "968": [516, 529], "896": [516, 529], "unpickl": [516, 529], "947": [516, 529], "951": [516, 529], "1101": [516, 529], "ir": [516, 529], "917": [516, 529], "propag": [516, 529], "971": [516, 529], "822": [516, 529], "263": [516, 529], "273": [516, 529], "994": [516, 529], "685": [516, 529], "693": [516, 529], "932": [516, 529], "toler": [516, 518, 529], "940": [516, 529], "unexpect": [516, 529], "848": [516, 529], "981": [516, 529], "537": [516, 529], "452": [516, 529], "2019e": [516, 529], "page": [516, 525, 528, 539, 540, 541, 546], "timelin": [516, 528], "789": [516, 528], "image_handl": [516, 527, 528], "deferreddatael": [516, 527, 528], "760": [516, 528], "isstringorstringlist": [516, 528], "isstr": [516, 528], "666": [516, 528], "799": [516, 528], "gzip": [516, 522, 528], "753": [516, 528], "730": [516, 528], "v": [516, 528], "820": [516, 528], "864": [516, 528], "819": [516, 528], "850": [516, 528], "838": [516, 528], "757": [516, 528], "785": [516, 528], "788": [516, 528], "810": [516, 528], "815": [516, 528], "804": [516, 528], "mix": [516, 528], "835": [516, 528], "791": [516, 528], "ji": [516, 528], "856": [516, 528], "fallback": [516, 527], "722": [516, 527], "jpegbaselinelossy8bit": [516, 527], "726": [516, 527], "jpegbaselinelossy12bit": [516, 527], "jpeg2000lossi": [516, 527], "inequ": [516, 526, 527], "matter": [516, 527, 542], "291": [516, 527], "numpypi": [516, 527], "pypi": [516, 525, 527, 546], "2018c": [516, 527], "677": [516, 527], "624": [516, 527], "696": [516, 527], "584": [516, 527], "715": [516, 527], "716": [516, 527], "695": [516, 527], "737": [516, 527], "jpeglosslessp14": [516, 527], "713": [516, 527], "small": [516, 519, 525, 527, 539, 546], "729": [516, 527], "unus": [516, 527], "660": [516, 527], "682": [516, 527], "689": [516, 527], "663": [516, 527], "728": [516, 527], "704": [516, 527], "707": [516, 527], "consumpt": [516, 527], "717": [516, 527], "740": [516, 527], "464": [516, 526], "605": [516, 526], "292": [516, 526], "2018b": [516, 526], "649": [516, 526], "256": [516, 526], "0x0006": [516, 526], "489": [516, 526], "599": [516, 526], "unneed": [516, 526], "597": [516, 526], "620": [516, 526], "625": [516, 526], "fit": [516, 526], "640": [516, 526], "__ne__": [516, 526], "comparison": [516, 521, 526], "verif": [516, 526], "backward": [516, 519, 525], "incompat": [516, 519, 525], "2017c": [516, 525], "fixer": [516, 525], "thrown": [516, 525], "143": [516, 525], "212": [516, 525], "dictionary_is_retir": [516, 525], "thai": [516, 525], "japanes": [516, 517, 522, 525], "chines": [516, 517, 525], "353": [516, 525], "172": [516, 525], "clariti": [516, 525], "travisci": [516, 525], "appveyor": [516, 525], "coverag": [516, 525, 540], "pep": [516, 518, 521, 525], "151": [516, 525], "125": [516, 525], "show_dicomdir": [516, 524, 525], "258": [516, 525], "latin5": [516, 525], "turkish": [516, 525], "lot": [516, 525, 542], "read_dicomdir": [516, 524], "subdirectori": [516, 524], "ez_setup": [516, 524], "aid": [516, 524], "pydicom_seri": [516, 520, 523, 524], "nil": [516, 524], "goyett": [516, 524], "ordereddict": [516, 524], "padraig": [516, 523, 524], "loonei": [516, 523, 524], "jonathan": [516, 523, 524], "myself": [516, 524], "rickard": [516, 524], "holmberg": [516, 524], "julien": [516, 524], "lami": [516, 524], "yaroslav": [516, 524], "halchenko": [516, 524], "mark": [516, 524], "matthew": [516, 524], "brett": [516, 524], "dimitri": [516, 524], "papadopoulo": [516, 524], "videan42": [516, 524], "sorri": [516, 524], "ve": [516, 524, 540, 541, 544, 547, 549], "anyon": [516, 524], "consolid": [516, 523], "revert": [516, 523], "prepar": [516, 523], "experiment": [516, 523], "unoffici": [516, 523], "uncom": [516, 523], "114": [516, 523], "slow": [516, 523], "approx": [516, 519, 523], "r78ba350a3eb8": [516, 523], "streamlin": [516, 523], "modern": [516, 523], "decor": [516, 523], "duplic": [516, 523], "gunnar": [516, 523], "schaefer": [516, 523], "774b7a55db33": [516, 523], "6b949a5b925b": [516, 523], "113": [516, 523], "84af4b240add": [516, 523], "f\u00e9lix": [516, 523], "morenc": [516, 523], "0197b5846bb5": [516, 523], "3678b1be6aca": [516, 523], "f1ae573d9de5": [516, 523], "0411bab7c985": [516, 523], "9b92b336e7d4": [516, 523], "e830f30b6781": [516, 523], "pysid": [516, 523], "qt": [516, 523], "acknowledg": [516, 523], "suever": [516, 523], "2011": [516, 521, 522], "ident": [516, 522], "4ed698a7bfb": [516, 522], "c313d2befb08": [516, 522], "encourag": [516, 522], "promot": [516, 522], "languag": [516, 517, 522], "b6b3658f3b14": [516, 522], "98": [516, 522], "52": [516, 522], "111": [516, 522], "__dir__": [516, 522], "file_metadata": [516, 521], "96": [516, 521], "catch": [516, 519, 521], "97": [516, 521], "write_new": [516, 521], "fc790f01f5": [516, 520], "84": [516, 520], "dicomit": [516, 520], "statement": [516, 520], "1c32791bf0": [516, 520], "e3ee934bbc": [516, 520], "dicom_dao": [516, 520], "mike": [516, 520], "wallac": [516, 520], "couchdb": [516, 520], "almar": [516, 520], "klein": [516, 520], "distinct": [516, 520], "preliminari": [516, 517, 520], "reorgan": [516, 517, 519], "substanti": [516, 519], "partial": [516, 519], "plain": [516, 519], "bullet": [516, 519], "ness": [516, 519], "logic": [516, 519], "sens": [516, 519], "daniel": [516, 519], "nanz": [516, 519], "dave": [516, 519], "witten": [516, 519], "adit": [516, 519], "panchal": [516, 519], "cp805": [516, 519], "supp": [516, 519], "117": [516, 519], "119": [516, 519], "122": [516, 519], "patch": [516, 519, 539, 540], "nikitathespid": [516, 519], "58": [516, 519], "pierr": [516, 519], "raybaut": [516, 519], "47": [516, 519], "r102": [516, 518], "r103": [516, 518], "issue36": [516, 518], "r97": [516, 518], "r110": [516, 518], "readfil": [516, 518], "savea": [516, 518], "pixelarrai": [516, 517, 518], "kept": [516, 518, 546], "r105": [516, 518], "r91": [516, 518], "r113": [516, 518], "r95": [516, 518], "issue38": [516, 518], "collis": [516, 518], "r96": [516, 518], "issue40": [516, 518], "notimplementerror": [516, 518], "r100": [516, 518], "issue41": [516, 518], "r104": [516, 518], "r109": [516, 518], "r111": [516, 518], "patientsbirthd": [516, 518], "r98": [516, 518], "deprecationwarn": [516, 517], "issue22": [516, 517], "r72": [516, 517], "r73": [516, 517], "greek": [516, 517], "gui": [516, 517], "r64": [516, 517], "r65": [516, 517], "r69": [516, 517], "r70": [516, 517], "data_elem": [516, 517, 542], "r68": [516, 517], "tix": [516, 517], "r55": [516, 517], "uid_dictionari": [516, 517], "r51": [516, 517], "synonym": [516, 517], "issue27": [516, 517], "incorrectli": [516, 517], "read_ow": [516, 517], "undefinedlength": [516, 517], "r50": [516, 517], "dicominfo": [516, 517], "issue33": [516, 517], "issue18": [516, 517], "r45": [516, 517], "r67": [516, 517], "r46": [516, 517], "pixeldataarrai": [516, 517], "distutil": [516, 517], "643": 538, "ones": [539, 542, 544], "typo": 539, "materi": 539, "stackoverflow": 539, "googl": 539, "django": [540, 541, 543], "cd": [540, 541, 544], "live": [540, 541], "yourusernam": [540, 541], "accident": [540, 544], "area": 540, "our": [540, 541, 542, 544, 549], "dot": [540, 542], "choos": [540, 541], "won": [540, 541, 542, 544], "checkout": [540, 541], "reproduc": 540, "seem": 540, "daunt": 540, "resourc": 540, "captur": 540, "dive": 540, "Into": 540, "unittest": 540, "troubl": 540, "500": [540, 542], "test_uid": 540, "test_new_uid": 540, "newdefineduid": 540, "assert": [540, 543], "380": 540, "editor": [540, 541], "236": 540, "rst": [540, 541], "properli": 540, "happi": [540, 541], "idea": [540, 541], "cach": [540, 546], "scroll": 540, "front": 540, "push": [540, 541], "click": [540, 541], "wip": [540, 541], "instruct": [540, 541, 542], "real": [540, 541, 549], "mrg": [540, 541], "readi": [540, 541], "merg": [540, 541], "clarif": [540, 541], "approv": [540, 541], "lastli": [540, 541], "remot": [540, 541], "bin": [540, 541], "icon": [540, 541], "restructuredtext": 541, "navig": 541, "occasion": [541, 542, 544], "_build": 541, "web": 541, "browser": 541, "localhost": 541, "tut": 541, "toctre": 541, "visibl": 541, "got": 541, "maxdepth": 541, "virtualenv": 541, "contributing_cod": 541, "contributing_doc": 541, "rebuild": 541, "gone": 541, "reachabl": 541, "task": 541, "chapter_7": 541, "apr": 541, "46": 541, "gcc": 541, "copyright": 541, "credit": 541, "accessionnumb": 541, "acquisitiondata": 541, "xraytubecurr": 541, "primer": 541, "am": 541, "circleci": 541, "artifact": 541, "tab": 541, "yet": [542, 548], "vari": 542, "infil": 542, "no_meta_path": 542, "no_meta": 542, "678": 542, "631": 542, "caution": 542, "not_dicom": 542, "w": 542, "1703": 542, "1436": 542, "1079": 542, "833": 542, "character_set": 542, "581": 542, "6854": 542, "7369": 542, "hexadecim": 542, "iso_ir_100": 542, "0x6002": 542, "0x6004": 542, "0x601e": 542, "gggg": 542, "surround": 542, "0x0008": 542, "0x0016": 542, "private_elem": 542, "0x0043": 542, "0x104e": 542, "lack": 542, "stick": 542, "simpler": 542, "imagetyp": 542, "act": 542, "branch": [542, 546], "manner": [542, 547], "0x1002": 542, "earlier": 542, "saw": 542, "ii": [542, 549], "x00t": 542, "x18": 542, "x08": 542, "chanc": 542, "But": 542, "snip": 542, "_list": 542, "validate_dataset": 542, "dictionary_vr": 542, "0x1050": 542, "windowwidth": 542, "notic": [542, 544], "typeofpatientid": 542, "windowcent": 542, "prefer": 542, "wb": 542, "2452": 542, "1311": 542, "3204": 542, "habit": 542, "congratul": 542, "beta": 543, "deseri": 543, "00080005": 543, "00080008": 543, "symmetr": 543, "ds_json": 543, "ds1": 543, "smaller": 543, "bulk_data_handl": 543, "store_data_and_return_uri": 543, "bulk_data_read": 543, "bulk_data_uri": 543, "data_retrieved_via_uri": 543, "json_data": 543, "00091002": 543, "data_retrieved_for_tag_and_vr_via_uri": 543, "share": 544, "peopl": 544, "frequent": 544, "dvd": 544, "procedur": 544, "ultrasound": 544, "despit": 544, "usb": 544, "pc": 544, "minor": 544, "recalcul": 544, "1220": 544, "briefli": 544, "directoryrecordsequ": 544, "3126": 544, "di": 544, "510": 544, "complic": 544, "home": 544, "env": 544, "lib": 544, "python3": 544, "site": 544, "flat": 544, "abstract": 544, "awai": 544, "dig": 544, "cost": 544, "importantli": 544, "though": 544, "tmp0aalrzir": 544, "86e6b75b": 544, "b764": 544, "46af": 544, "bec3": 544, "51698a8366f2": 544, "1858": 544, "_recordifi": 544, "2338": 544, "_check_dataset": 544, "instancenumb": 544, "dosesummationtyp": 544, "2281": 544, "record_gen": 544, "1860": 544, "tmpsqz8rhgb": 544, "rd000000": 544, "shutil": 544, "copytre": 544, "copyfil": 544, "dst": 544, "98892001": 544, "98892003": 544, "tmpu068kdwp": 544, "cr1": 544, "6154": 544, "cr2": 544, "6247": 544, "cr3": 544, "6278": 544, "ct2": 544, "17106": 544, "17136": 544, "17166": 544, "17196": 544, "Then": [545, 546], "isol": 546, "admin": 546, "privileg": 546, "offlin": 546, "whl": 546, "py3": 546, "forg": [546, 547, 549], "fetch_data_fil": 546, "popular": 546, "beforehand": 546, "charl": 546, "cython": 546, "wheel": 546, "older": 546, "framework": 546, "snapshot": 546, "activ": 546, "stabl": 546, "undocu": 546, "prerequisit": [547, 549], "conda": [547, 549], "hundr": 547, "megabyt": 547, "slide": 547, "microscopi": 547, "gigabyt": 547, "territori": 547, "Being": 547, "significantli": 547, "i2": 547, "1697": 547, "frame_iter": 547, "listcomp": 547, "382": 547, "_encode_arrai": 547, "209": 547, "_preprocess": 547, "533": 547, "recompress": 547, "began": 548, "foundat": 548, "codedict": 548, "cid": 548, "incorrectmodalityworklistentri": 548, "mixedmodality3dcammodel": 548, "modalitytoread": 548, "othermod": 548, "128002": 548, "scheme_vers": 548, "underscor": 548, "_1sigmalowervalueofpopul": 548, "371919006": 548, "sigma": 548, "cid270": 548, "121006": 548, "cid_for_nam": 548, "observ": 548, "observationsubjectclass": 548, "observertyp": 548, "echofindingobservationtyp": 548, "270": 548, "ln": 548, "fma": 548, "mdc": 548, "uml": 548, "bari": 548, "ncit": 548, "neu": 548, "ucum": 548, "radlex": 548, "ndc": 548, "itis_tsn": 548, "pubchem_cid": 548, "msh": 548, "capabl": 548, "explanatori": 549, "respiratori": 549, "interv": 549, "rhythm": 549, "khz": 549, "0200": 549, "channelsensit": 549, "einthoven": 549, "microvolt": 549, "iii": 549, "avr": 549, "avl": 549, "avf": 549, "v5": 549, "v6": 549, "interleav": 549, "ch": 549, "ax1": 549, "ax2": 549, "\u03bcv": 549, "cosin": 549, "sine": 549, "chosen": 549, "pi": 549, "ch1": 549, "astyp": 549, "ch2": 549, "sin": 549, "waveformorigin": 549, "obvious": 549, "chdef_seq": 549, "chdef": 549, "curve_typ": 549, "channelsampleskew": 549, "waveformbitsstor": 549, "codevalu": 549, "codingschemedesign": 549, "codingschemevers": 549, "stack": 549, "axi": 549, "my_waveform": 549}, "objects": {"": [[509, 0, 0, "-", "pydicom"]], "pydicom.charset": [[76, 1, 1, "", "convert_encodings"], [77, 1, 1, "", "decode_bytes"], [78, 1, 1, "", "decode_element"], [79, 1, 1, "", "encode_string"]], "pydicom.config": [[80, 2, 1, "", "APPLY_J2K_CORRECTIONS"], [81, 1, 1, "", "DS_decimal"], [82, 1, 1, "", "DS_numpy"], [83, 2, 1, "", "IGNORE"], [84, 2, 1, "", "INVALID_KEYWORD_BEHAVIOR"], [85, 2, 1, "", "INVALID_KEY_BEHAVIOR"], [86, 2, 1, "", "RAISE"], [55, 3, 1, "", "Settings"], [87, 2, 1, "", "WARN"], [88, 2, 1, "", "allow_DS_float"], [89, 2, 1, "", "assume_implicit_vr_switch"], [90, 2, 1, "", "convert_wrong_length_to_UN"], [91, 2, 1, "", "data_element_callback"], [92, 2, 1, "", "data_element_callback_kwargs"], [93, 2, 1, "", "datetime_conversion"], [94, 1, 1, "", "debug"], [95, 2, 1, "", "enforce_valid_values"], [96, 1, 1, "", "future_behavior"], [97, 2, 1, "", "pixel_data_handlers"], [98, 1, 1, "", "reset_data_element_callback"], [99, 2, 1, "", "settings"], [100, 2, 1, "", "show_file_meta"], [101, 2, 1, "", "use_DS_decimal"], [102, 2, 1, "", "use_DS_numpy"], [103, 2, 1, "", "use_IS_numpy"]], "pydicom.config.Settings": [[55, 4, 1, "", "infer_sq_for_un_vr"], [55, 4, 1, "", "reading_validation_mode"], [55, 4, 1, "", "writing_validation_mode"]], "pydicom.data": [[104, 1, 1, "", "get_charset_files"], [105, 1, 1, "", "get_palette_files"], [106, 1, 1, "", "get_testdata_file"], [107, 1, 1, "", "get_testdata_files"]], "pydicom.datadict": [[108, 1, 1, "", "add_dict_entries"], [109, 1, 1, "", "add_dict_entry"], [110, 1, 1, "", "add_private_dict_entries"], [111, 1, 1, "", "add_private_dict_entry"], [112, 1, 1, "", "dictionary_VM"], [113, 1, 1, "", "dictionary_VR"], [114, 1, 1, "", "dictionary_description"], [115, 1, 1, "", "dictionary_has_tag"], [116, 1, 1, "", "dictionary_is_retired"], [117, 1, 1, "", "dictionary_keyword"], [118, 1, 1, "", "get_entry"], [119, 1, 1, "", "get_private_entry"], [120, 1, 1, "", "keyword_for_tag"], [121, 1, 1, "", "mask_match"], [122, 1, 1, "", "private_dictionary_VM"], [123, 1, 1, "", "private_dictionary_VR"], [124, 1, 1, "", "private_dictionary_description"], [125, 1, 1, "", "repeater_has_keyword"], [126, 1, 1, "", "repeater_has_tag"], [127, 1, 1, "", "tag_for_keyword"]], "pydicom.dataelem": [[128, 3, 1, "", "DataElement"], [129, 1, 1, "", "DataElement_from_raw"], [130, 3, 1, "", "RawDataElement"]], "pydicom.dataelem.DataElement": [[128, 4, 1, "", "VM"], [128, 5, 1, "", "VR"], [128, 6, 1, "", "__init__"], [128, 6, 1, "", "clear"], [128, 5, 1, "", "descripWidth"], [128, 4, 1, "", "empty_value"], [128, 6, 1, "", "from_json"], [128, 4, 1, "", "is_empty"], [128, 4, 1, "", "is_private"], [128, 4, 1, "", "is_retired"], [128, 5, 1, "", "is_undefined_length"], [128, 4, 1, "", "keyword"], [128, 5, 1, "", "maxBytesToDisplay"], [128, 4, 1, "", "name"], [128, 4, 1, "", "repval"], [128, 5, 1, "", "showVR"], [128, 5, 1, "", "tag"], [128, 6, 1, "", "to_json"], [128, 6, 1, "", "to_json_dict"], [128, 6, 1, "", "validate"], [128, 4, 1, "", "value"]], "pydicom.dataelem.RawDataElement": [[130, 5, 1, "", "VR"], [130, 6, 1, "", "__init__"], [130, 5, 1, "", "is_implicit_VR"], [130, 5, 1, "", "is_little_endian"], [130, 5, 1, "", "is_raw"], [130, 5, 1, "", "length"], [130, 5, 1, "", "tag"], [130, 5, 1, "", "value"], [130, 5, 1, "", "value_tell"]], "pydicom.dataset": [[131, 3, 1, "", "Dataset"], [132, 3, 1, "", "FileDataset"], [133, 3, 1, "", "FileMetaDataset"], [134, 3, 1, "", "PrivateBlock"], [135, 1, 1, "", "validate_file_meta"]], "pydicom.dataset.Dataset": [[131, 6, 1, "", "__init__"], [131, 6, 1, "", "add"], [131, 6, 1, "", "add_new"], [131, 6, 1, "", "add_new_private"], [131, 6, 1, "", "clear"], [131, 6, 1, "", "compress"], [131, 6, 1, "", "convert_pixel_data"], [131, 6, 1, "", "copy"], [131, 6, 1, "", "data_element"], [131, 6, 1, "", "decode"], [131, 6, 1, "", "decompress"], [131, 5, 1, "", "default_element_format"], [131, 5, 1, "", "default_sequence_element_format"], [131, 6, 1, "", "dir"], [131, 6, 1, "", "elements"], [131, 6, 1, "", "ensure_file_meta"], [131, 6, 1, "", "formatted_lines"], [131, 6, 1, "", "from_json"], [131, 6, 1, "", "get"], [131, 6, 1, "", "get_item"], [131, 6, 1, "", "get_private_item"], [131, 6, 1, "", "group_dataset"], [131, 5, 1, "", "indent_chars"], [131, 4, 1, "", "is_implicit_VR"], [131, 4, 1, "", "is_little_endian"], [131, 4, 1, "", "is_original_encoding"], [131, 6, 1, "", "items"], [131, 6, 1, "", "iterall"], [131, 6, 1, "", "keys"], [131, 4, 1, "", "original_character_set"], [131, 4, 1, "", "original_encoding"], [131, 6, 1, "", "overlay_array"], [131, 4, 1, "", "pixel_array"], [131, 6, 1, "", "pop"], [131, 6, 1, "", "popitem"], [131, 6, 1, "", "private_block"], [131, 6, 1, "", "private_creators"], [131, 4, 1, "", "read_encoding"], [131, 4, 1, "", "read_implicit_vr"], [131, 4, 1, "", "read_little_endian"], [131, 6, 1, "", "remove_private_tags"], [131, 6, 1, "", "save_as"], [131, 6, 1, "", "set_original_encoding"], [131, 6, 1, "", "setdefault"], [131, 6, 1, "", "to_json"], [131, 6, 1, "", "to_json_dict"], [131, 6, 1, "", "top"], [131, 6, 1, "", "trait_names"], [131, 6, 1, "", "update"], [131, 6, 1, "", "values"], [131, 6, 1, "", "walk"], [131, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileDataset": [[132, 6, 1, "", "__init__"], [132, 5, 1, "", "file_meta"], [132, 5, 1, "", "filename"], [132, 5, 1, "", "fileobj_type"], [132, 5, 1, "", "is_implicit_VR"], [132, 5, 1, "", "is_little_endian"], [132, 5, 1, "", "preamble"], [132, 5, 1, "", "timestamp"]], "pydicom.dataset.FileMetaDataset": [[133, 6, 1, "", "__init__"], [133, 6, 1, "", "validate"]], "pydicom.dataset.PrivateBlock": [[134, 6, 1, "", "__init__"], [134, 6, 1, "", "add_new"], [134, 5, 1, "", "block_start"], [134, 5, 1, "", "dataset"], [134, 6, 1, "", "get_tag"], [134, 5, 1, "", "group"], [134, 5, 1, "", "private_creator"]], "pydicom.encaps": [[136, 1, 1, "", "decode_data_sequence"], [137, 1, 1, "", "defragment_data"], [138, 1, 1, "", "encapsulate"], [139, 1, 1, "", "encapsulate_extended"], [140, 1, 1, "", "fragment_frame"], [141, 1, 1, "", "generate_fragmented_frames"], [142, 1, 1, "", "generate_fragments"], [143, 1, 1, "", "generate_frames"], [144, 1, 1, "", "generate_pixel_data"], [145, 1, 1, "", "generate_pixel_data_fragment"], [146, 1, 1, "", "generate_pixel_data_frame"], [147, 1, 1, "", "get_frame"], [148, 1, 1, "", "get_frame_offsets"], [149, 1, 1, "", "itemize_fragment"], [150, 1, 1, "", "itemize_frame"], [151, 1, 1, "", "parse_basic_offsets"], [152, 1, 1, "", "parse_fragments"], [153, 1, 1, "", "read_item"]], "pydicom": [[67, 0, 0, "-", "encoders"], [511, 0, 0, "-", "overlays"], [508, 0, 0, "-", "pixel_data_handlers"], [515, 0, 0, "-", "waveforms"]], "pydicom.encoders": [[154, 2, 1, "", "RLELosslessEncoder"], [156, 1, 1, "", "get_encoder"]], "pydicom.encoders.base": [[155, 3, 1, "", "Encoder"]], "pydicom.encoders.base.Encoder": [[155, 4, 1, "", "UID"], [155, 6, 1, "", "__init__"], [155, 6, 1, "", "add_plugin"], [155, 6, 1, "", "encode"], [155, 4, 1, "", "is_available"], [155, 6, 1, "", "iter_encode"], [155, 6, 1, "", "kwargs_from_ds"], [155, 4, 1, "", "missing_dependencies"], [155, 4, 1, "", "name"], [155, 6, 1, "", "remove_plugin"]], "pydicom.errors": [[157, 7, 1, "", "InvalidDicomError"]], "pydicom.filebase": [[158, 3, 1, "", "DicomBytesIO"], [159, 1, 1, "", "DicomFile"], [160, 3, 1, "", "DicomFileLike"], [161, 3, 1, "", "DicomIO"]], "pydicom.filebase.DicomBytesIO": [[158, 6, 1, "", "__init__"]], "pydicom.filebase.DicomFileLike": [[160, 6, 1, "", "__init__"]], "pydicom.filebase.DicomIO": [[161, 6, 1, "", "__init__"], [161, 6, 1, "", "close"], [161, 4, 1, "", "is_implicit_VR"], [161, 4, 1, "", "is_little_endian"], [161, 4, 1, "", "name"], [161, 4, 1, "", "parent"], [161, 6, 1, "", "read"], [161, 6, 1, "", "read_UL"], [161, 6, 1, "", "read_US"], [161, 6, 1, "", "read_exact"], [161, 6, 1, "", "read_tag"], [161, 6, 1, "", "seek"], [161, 6, 1, "", "tell"], [161, 6, 1, "", "write"], [161, 6, 1, "", "write_UL"], [161, 6, 1, "", "write_US"], [161, 6, 1, "", "write_tag"]], "pydicom.filereader": [[162, 1, 1, "", "data_element_generator"], [163, 1, 1, "", "data_element_offset_to_value"], [164, 1, 1, "", "dcmread"], [165, 1, 1, "", "read_dataset"], [166, 1, 1, "", "read_deferred_data_element"], [167, 1, 1, "", "read_file_meta_info"], [168, 1, 1, "", "read_partial"], [169, 1, 1, "", "read_preamble"], [170, 1, 1, "", "read_sequence"], [171, 1, 1, "", "read_sequence_item"]], "pydicom.fileset": [[172, 2, 1, "", "DIRECTORY_RECORDERS"], [173, 3, 1, "", "FileInstance"], [174, 3, 1, "", "FileSet"], [175, 3, 1, "", "RecordNode"], [176, 1, 1, "", "generate_filename"], [177, 1, 1, "", "is_conformant_file_id"]], "pydicom.fileset.FileInstance": [[173, 4, 1, "", "FileID"], [173, 4, 1, "", "SOPClassUID"], [173, 4, 1, "", "SOPInstanceUID"], [173, 4, 1, "", "TransferSyntaxUID"], [173, 6, 1, "", "__init__"], [173, 4, 1, "", "file_set"], [173, 4, 1, "", "for_addition"], [173, 4, 1, "", "for_moving"], [173, 4, 1, "", "for_removal"], [173, 4, 1, "", "is_private"], [173, 4, 1, "", "is_staged"], [173, 6, 1, "", "load"], [173, 5, 1, "", "node"], [173, 4, 1, "", "path"]], "pydicom.fileset.FileSet": [[174, 4, 1, "", "ID"], [174, 4, 1, "", "UID"], [174, 6, 1, "", "__init__"], [174, 6, 1, "", "add"], [174, 6, 1, "", "add_custom"], [174, 6, 1, "", "clear"], [174, 6, 1, "", "copy"], [174, 4, 1, "", "descriptor_character_set"], [174, 4, 1, "", "descriptor_file_id"], [174, 6, 1, "", "find"], [174, 6, 1, "", "find_values"], [174, 4, 1, "", "is_staged"], [174, 6, 1, "", "load"], [174, 4, 1, "", "path"], [174, 6, 1, "", "remove"], [174, 6, 1, "", "write"]], "pydicom.fileset.RecordNode": [[175, 6, 1, "", "__init__"], [175, 6, 1, "", "add"], [175, 4, 1, "", "ancestors"], [175, 5, 1, "", "children"], [175, 4, 1, "", "component"], [175, 4, 1, "", "depth"], [175, 4, 1, "", "file_set"], [175, 4, 1, "", "has_instance"], [175, 4, 1, "", "index"], [175, 5, 1, "", "instance"], [175, 4, 1, "", "is_root"], [175, 4, 1, "", "key"], [175, 4, 1, "", "next"], [175, 4, 1, "", "parent"], [175, 6, 1, "", "prettify"], [175, 4, 1, "", "previous"], [175, 4, 1, "", "record_type"], [175, 6, 1, "", "remove"], [175, 6, 1, "", "reverse"], [175, 4, 1, "", "root"]], "pydicom.fileutil": [[178, 1, 1, "", "absorb_delimiter_item"], [179, 1, 1, "", "find_bytes"], [180, 1, 1, "", "find_delimiter"], [181, 1, 1, "", "length_of_undefined_length"], [182, 1, 1, "", "read_undefined_length_value"]], "pydicom.filewriter": [[183, 1, 1, "", "correct_ambiguous_vr"], [184, 1, 1, "", "correct_ambiguous_vr_element"], [185, 1, 1, "", "dcmwrite"], [186, 1, 1, "", "multi_string"], [187, 1, 1, "", "write_ATvalue"], [188, 1, 1, "", "write_DA"], [189, 1, 1, "", "write_DT"], [190, 1, 1, "", "write_OBvalue"], [191, 1, 1, "", "write_OWvalue"], [192, 1, 1, "", "write_PN"], [193, 1, 1, "", "write_TM"], [194, 1, 1, "", "write_UI"], [195, 1, 1, "", "write_UN"], [196, 1, 1, "", "write_data_element"], [197, 1, 1, "", "write_dataset"], [198, 1, 1, "", "write_file_meta_info"], [199, 1, 1, "", "write_number_string"], [200, 1, 1, "", "write_numbers"], [201, 1, 1, "", "write_sequence"], [202, 1, 1, "", "write_sequence_item"], [203, 1, 1, "", "write_string"], [204, 1, 1, "", "write_text"]], "pydicom.misc": [[205, 1, 1, "", "is_dicom"], [206, 1, 1, "", "size_in_bytes"]], "pydicom.multival": [[207, 3, 1, "", "MultiValue"]], "pydicom.multival.MultiValue": [[207, 6, 1, "", "__init__"]], "pydicom.overlays": [[208, 0, 0, "-", "numpy_handler"]], "pydicom.overlays.numpy_handler": [[208, 1, 1, "", "get_expected_length"], [208, 1, 1, "", "get_overlay_array"], [208, 1, 1, "", "is_available"], [208, 1, 1, "", "reshape_overlay_array"]], "pydicom.pixel_data_handlers": [[209, 1, 1, "", "apply_color_lut"], [210, 1, 1, "", "apply_modality_lut"], [211, 1, 1, "", "apply_rescale"], [212, 1, 1, "", "apply_voi"], [213, 1, 1, "", "apply_voi_lut"], [214, 1, 1, "", "apply_windowing"], [215, 1, 1, "", "convert_color_space"], [216, 0, 0, "-", "gdcm_handler"], [217, 0, 0, "-", "jpeg_ls_handler"], [218, 0, 0, "-", "numpy_handler"], [219, 0, 0, "-", "pillow_handler"], [220, 0, 0, "-", "pylibjpeg_handler"], [221, 0, 0, "-", "rle_handler"], [222, 0, 0, "-", "util"]], "pydicom.pixel_data_handlers.gdcm_handler": [[216, 1, 1, "", "create_data_element"], [216, 1, 1, "", "create_image"], [216, 1, 1, "", "get_pixeldata"], [216, 1, 1, "", "is_available"], [216, 1, 1, "", "needs_to_convert_to_RGB"], [216, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [216, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[217, 1, 1, "", "get_pixeldata"], [217, 1, 1, "", "is_available"], [217, 1, 1, "", "needs_to_convert_to_RGB"], [217, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [217, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.numpy_handler": [[218, 1, 1, "", "get_pixeldata"], [218, 1, 1, "", "is_available"], [218, 1, 1, "", "needs_to_convert_to_RGB"], [218, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [218, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pillow_handler": [[219, 1, 1, "", "get_pixeldata"], [219, 1, 1, "", "is_available"], [219, 1, 1, "", "needs_to_convert_to_RGB"], [219, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [219, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[220, 1, 1, "", "as_array"], [220, 1, 1, "", "generate_frames"], [220, 1, 1, "", "get_pixeldata"], [220, 1, 1, "", "is_available"], [220, 1, 1, "", "needs_to_convert_to_RGB"], [220, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [220, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.rle_handler": [[221, 1, 1, "", "get_pixeldata"], [221, 1, 1, "", "is_available"], [221, 1, 1, "", "needs_to_convert_to_RGB"], [221, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [221, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.util": [[222, 1, 1, "", "apply_color_lut"], [222, 1, 1, "", "apply_modality_lut"], [222, 1, 1, "", "apply_voi"], [222, 1, 1, "", "apply_voi_lut"], [222, 1, 1, "", "apply_windowing"], [222, 1, 1, "", "convert_color_space"], [222, 1, 1, "", "dtype_corrected_for_endianness"], [222, 1, 1, "", "expand_ybr422"], [222, 1, 1, "", "get_expected_length"], [222, 1, 1, "", "get_image_pixel_ids"], [222, 1, 1, "", "get_j2k_parameters"], [222, 1, 1, "", "get_nr_frames"], [222, 1, 1, "", "pack_bits"], [222, 1, 1, "", "pixel_dtype"], [222, 1, 1, "", "reshape_pixel_array"], [222, 1, 1, "", "unpack_bits"]], "pydicom.pixels.decoders.base": [[223, 3, 1, "", "DecodeRunner"], [224, 3, 1, "", "Decoder"], [225, 2, 1, "", "DeflatedExplicitVRLittleEndianDecoder"], [226, 2, 1, "", "ExplicitVRBigEndianDecoder"], [227, 2, 1, "", "ExplicitVRLittleEndianDecoder"], [228, 2, 1, "", "ImplicitVRLittleEndianDecoder"], [229, 2, 1, "", "RLELosslessDecoder"]], "pydicom.pixels.decoders.base.DecodeRunner": [[223, 6, 1, "", "__init__"], [223, 4, 1, "", "bits_allocated"], [223, 4, 1, "", "bits_stored"], [223, 4, 1, "", "columns"], [223, 6, 1, "", "decode"], [223, 6, 1, "", "del_option"], [223, 4, 1, "", "extended_offsets"], [223, 6, 1, "", "frame_length"], [223, 6, 1, "", "get_option"], [223, 6, 1, "", "iter_decode"], [223, 4, 1, "", "number_of_frames"], [223, 4, 1, "", "options"], [223, 4, 1, "", "photometric_interpretation"], [223, 4, 1, "", "pixel_dtype"], [223, 4, 1, "", "pixel_keyword"], [223, 4, 1, "", "pixel_representation"], [223, 4, 1, "", "planar_configuration"], [223, 6, 1, "", "process"], [223, 6, 1, "", "reshape"], [223, 4, 1, "", "rows"], [223, 4, 1, "", "samples_per_pixel"], [223, 6, 1, "", "set_decoders"], [223, 6, 1, "", "set_option"], [223, 6, 1, "", "set_options"], [223, 6, 1, "", "set_source"], [223, 4, 1, "", "src"], [223, 6, 1, "", "test_for"], [223, 4, 1, "", "transfer_syntax"], [223, 6, 1, "", "validate_buffer"], [223, 6, 1, "", "validate_options"]], "pydicom.pixels.decoders.base.Decoder": [[224, 4, 1, "", "UID"], [224, 6, 1, "", "__init__"], [224, 6, 1, "", "add_plugin"], [224, 6, 1, "", "as_array"], [224, 6, 1, "", "as_buffer"], [224, 4, 1, "", "is_available"], [224, 4, 1, "", "is_encapsulated"], [224, 4, 1, "", "is_native"], [224, 6, 1, "", "iter_array"], [224, 6, 1, "", "iter_buffer"], [224, 4, 1, "", "missing_dependencies"], [224, 4, 1, "", "name"], [224, 6, 1, "", "remove_plugin"]], "pydicom.sequence": [[230, 3, 1, "", "Sequence"]], "pydicom.sequence.Sequence": [[230, 6, 1, "", "__init__"], [230, 6, 1, "", "extend"]], "pydicom.tag": [[231, 3, 1, "", "BaseTag"], [232, 1, 1, "", "Tag"], [233, 1, 1, "", "TupleTag"], [234, 1, 1, "", "tag_in_exception"]], "pydicom.tag.BaseTag": [[231, 6, 1, "", "__init__"], [231, 4, 1, "", "elem"], [231, 4, 1, "", "element"], [231, 4, 1, "", "group"], [231, 4, 1, "", "is_private"], [231, 4, 1, "", "is_private_creator"], [231, 4, 1, "", "json_key"], [231, 4, 1, "", "private_creator"]], "pydicom.uid": [[235, 2, 1, "", "AcquisitionContextSRStorage"], [236, 2, 1, "", "AdvancedBlendingPresentationStateStorage"], [237, 2, 1, "", "AllTransferSyntaxes"], [238, 2, 1, "", "AmbulatoryECGWaveformStorage"], [239, 2, 1, "", "ArterialPulseWaveformStorage"], [240, 2, 1, "", "AutorefractionMeasurementsStorage"], [241, 2, 1, "", "BasicStructuredDisplayStorage"], [242, 2, 1, "", "BasicTextSRStorage"], [243, 2, 1, "", "BasicVoiceAudioWaveformStorage"], [244, 2, 1, "", "BlendingSoftcopyPresentationStateStorage"], [245, 2, 1, "", "BodyPositionWaveformStorage"], [246, 2, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [247, 2, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [248, 2, 1, "", "BreastTomosynthesisImageStorage"], [249, 2, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [250, 2, 1, "", "CArmPhotonElectronRadiationStorage"], [251, 2, 1, "", "CTDefinedProcedureProtocolStorage"], [252, 2, 1, "", "CTImageStorage"], [253, 2, 1, "", "CTPerformedProcedureProtocolStorage"], [254, 2, 1, "", "CardiacElectrophysiologyWaveformStorage"], [255, 2, 1, "", "ChestCADSRStorage"], [256, 2, 1, "", "ColonCADSRStorage"], [257, 2, 1, "", "ColorPaletteStorage"], [258, 2, 1, "", "ColorSoftcopyPresentationStateStorage"], [259, 2, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [260, 2, 1, "", "Comprehensive3DSRStorage"], [261, 2, 1, "", "ComprehensiveSRStorage"], [262, 2, 1, "", "ComputedRadiographyImageStorage"], [263, 2, 1, "", "ConfocalMicroscopyImageStorage"], [264, 2, 1, "", "ConfocalMicroscopyTiledPyramidalImageStorage"], [265, 2, 1, "", "ContentAssessmentResultsStorage"], [266, 2, 1, "", "CornealTopographyMapStorage"], [267, 2, 1, "", "DICOS2DAITStorage"], [268, 2, 1, "", "DICOS3DAITStorage"], [269, 2, 1, "", "DICOSCTImageStorage"], [270, 2, 1, "", "DICOSDigitalXRayImageStorageForPresentation"], [271, 2, 1, "", "DICOSDigitalXRayImageStorageForProcessing"], [272, 2, 1, "", "DICOSQuadrupoleResonanceStorage"], [273, 2, 1, "", "DICOSThreatDetectionReportStorage"], [274, 2, 1, "", "DeflatedExplicitVRLittleEndian"], [275, 2, 1, "", "DeformableSpatialRegistrationStorage"], [276, 2, 1, "", "DermoscopicPhotographyImageStorage"], [277, 2, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [278, 2, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [279, 2, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [280, 2, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [281, 2, 1, "", "DigitalXRayImageStorageForPresentation"], [282, 2, 1, "", "DigitalXRayImageStorageForProcessing"], [283, 2, 1, "", "EddyCurrentImageStorage"], [284, 2, 1, "", "EddyCurrentMultiFrameImageStorage"], [285, 2, 1, "", "ElectromyogramWaveformStorage"], [286, 2, 1, "", "ElectrooculogramWaveformStorage"], [287, 2, 1, "", "EncapsulatedCDAStorage"], [288, 2, 1, "", "EncapsulatedMTLStorage"], [289, 2, 1, "", "EncapsulatedOBJStorage"], [290, 2, 1, "", "EncapsulatedPDFStorage"], [291, 2, 1, "", "EncapsulatedSTLStorage"], [292, 2, 1, "", "EnhancedCTImageStorage"], [293, 2, 1, "", "EnhancedContinuousRTImageStorage"], [294, 2, 1, "", "EnhancedMRColorImageStorage"], [295, 2, 1, "", "EnhancedMRImageStorage"], [296, 2, 1, "", "EnhancedPETImageStorage"], [297, 2, 1, "", "EnhancedRTImageStorage"], [298, 2, 1, "", "EnhancedSRStorage"], [299, 2, 1, "", "EnhancedUSVolumeStorage"], [300, 2, 1, "", "EnhancedXAImageStorage"], [301, 2, 1, "", "EnhancedXRFImageStorage"], [302, 2, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [303, 2, 1, "", "ExplicitVRBigEndian"], [304, 2, 1, "", "ExplicitVRLittleEndian"], [305, 2, 1, "", "ExtensibleSRStorage"], [306, 2, 1, "", "General32bitECGWaveformStorage"], [307, 2, 1, "", "GeneralAudioWaveformStorage"], [308, 2, 1, "", "GeneralECGWaveformStorage"], [309, 2, 1, "", "GenericImplantTemplateStorage"], [310, 2, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [311, 2, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [312, 2, 1, "", "HEVCM10P51"], [313, 2, 1, "", "HEVCMP51"], [314, 2, 1, "", "HTJ2K"], [315, 2, 1, "", "HTJ2KLossless"], [316, 2, 1, "", "HTJ2KLosslessRPCL"], [317, 2, 1, "", "HangingProtocolStorage"], [318, 2, 1, "", "HemodynamicWaveformStorage"], [319, 2, 1, "", "ImplantAssemblyTemplateStorage"], [320, 2, 1, "", "ImplantTemplateGroupStorage"], [321, 2, 1, "", "ImplantationPlanSRStorage"], [322, 2, 1, "", "ImplicitVRLittleEndian"], [323, 2, 1, "", "IntraocularLensCalculationsStorage"], [324, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [325, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [326, 2, 1, "", "InventoryStorage"], [327, 2, 1, "", "JPEG2000"], [328, 2, 1, "", "JPEG2000Lossless"], [329, 2, 1, "", "JPEG2000MC"], [330, 2, 1, "", "JPEG2000MCLossless"], [331, 2, 1, "", "JPEG2000TransferSyntaxes"], [332, 2, 1, "", "JPEGBaseline8Bit"], [333, 2, 1, "", "JPEGExtended12Bit"], [334, 2, 1, "", "JPEGLSLossless"], [335, 2, 1, "", "JPEGLSNearLossless"], [336, 2, 1, "", "JPEGLSTransferSyntaxes"], [337, 2, 1, "", "JPEGLossless"], [338, 2, 1, "", "JPEGLosslessSV1"], [339, 2, 1, "", "JPEGTransferSyntaxes"], [340, 2, 1, "", "JPIPHTJ2KReferenced"], [341, 2, 1, "", "JPIPHTJ2KReferencedDeflate"], [342, 2, 1, "", "KeratometryMeasurementsStorage"], [343, 2, 1, "", "KeyObjectSelectionDocumentStorage"], [344, 2, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [345, 2, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [346, 2, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [347, 2, 1, "", "LensometryMeasurementsStorage"], [348, 2, 1, "", "MPEG2MPHL"], [349, 2, 1, "", "MPEG2MPHLF"], [350, 2, 1, "", "MPEG2MPML"], [351, 2, 1, "", "MPEG2MPMLF"], [352, 2, 1, "", "MPEG4HP41"], [353, 2, 1, "", "MPEG4HP41BD"], [354, 2, 1, "", "MPEG4HP41BDF"], [355, 2, 1, "", "MPEG4HP41F"], [356, 2, 1, "", "MPEG4HP422D"], [357, 2, 1, "", "MPEG4HP422DF"], [358, 2, 1, "", "MPEG4HP423D"], [359, 2, 1, "", "MPEG4HP423DF"], [360, 2, 1, "", "MPEG4HP42STEREO"], [361, 2, 1, "", "MPEG4HP42STEREOF"], [362, 2, 1, "", "MPEGTransferSyntaxes"], [363, 2, 1, "", "MRImageStorage"], [364, 2, 1, "", "MRSpectroscopyStorage"], [365, 2, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [366, 2, 1, "", "MammographyCADSRStorage"], [367, 2, 1, "", "MediaStorageDirectoryStorage"], [368, 2, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [369, 2, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [370, 2, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [371, 2, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [372, 2, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [373, 2, 1, "", "MultichannelRespiratoryWaveformStorage"], [374, 2, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [375, 2, 1, "", "NuclearMedicineImageStorage"], [376, 2, 1, "", "OphthalmicAxialMeasurementsStorage"], [377, 2, 1, "", "OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [378, 2, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [379, 2, 1, "", "OphthalmicPhotography16BitImageStorage"], [380, 2, 1, "", "OphthalmicPhotography8BitImageStorage"], [381, 2, 1, "", "OphthalmicThicknessMapStorage"], [382, 2, 1, "", "OphthalmicTomographyImageStorage"], [383, 2, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [384, 2, 1, "", "PYDICOM_IMPLEMENTATION_UID"], [385, 2, 1, "", "PYDICOM_ROOT_UID"], [386, 2, 1, "", "ParametricMapStorage"], [387, 2, 1, "", "PatientRadiationDoseSRStorage"], [388, 2, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [389, 2, 1, "", "PhotoacousticImageStorage"], [390, 2, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [391, 2, 1, "", "PositronEmissionTomographyImageStorage"], [392, 2, 1, "", "PrivateTransferSyntaxes"], [393, 2, 1, "", "ProcedureLogStorage"], [394, 2, 1, "", "ProtocolApprovalStorage"], [395, 2, 1, "", "PseudoColorSoftcopyPresentationStateStorage"], [396, 2, 1, "", "RE_VALID_UID"], [397, 2, 1, "", "RE_VALID_UID_PREFIX"], [398, 2, 1, "", "RLELossless"], [399, 2, 1, "", "RLETransferSyntaxes"], [400, 2, 1, "", "RTBeamsDeliveryInstructionStorage"], [401, 2, 1, "", "RTBeamsTreatmentRecordStorage"], [402, 2, 1, "", "RTBrachyApplicationSetupDeliveryInstructionStorage"], [403, 2, 1, "", "RTBrachyTreatmentRecordStorage"], [404, 2, 1, "", "RTDoseStorage"], [405, 2, 1, "", "RTImageStorage"], [406, 2, 1, "", "RTIonBeamsTreatmentRecordStorage"], [407, 2, 1, "", "RTIonPlanStorage"], [408, 2, 1, "", "RTPatientPositionAcquisitionInstructionStorage"], [409, 2, 1, "", "RTPhysicianIntentStorage"], [410, 2, 1, "", "RTPlanStorage"], [411, 2, 1, "", "RTRadiationRecordSetStorage"], [412, 2, 1, "", "RTRadiationSalvageRecordStorage"], [413, 2, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [414, 2, 1, "", "RTRadiationSetStorage"], [415, 2, 1, "", "RTSegmentAnnotationStorage"], [416, 2, 1, "", "RTStructureSetStorage"], [417, 2, 1, "", "RTTreatmentPreparationStorage"], [418, 2, 1, "", "RTTreatmentSummaryRecordStorage"], [419, 2, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [420, 2, 1, "", "RawDataStorage"], [421, 2, 1, "", "RealWorldValueMappingStorage"], [422, 2, 1, "", "RespiratoryWaveformStorage"], [423, 2, 1, "", "RoboticArmRadiationStorage"], [424, 2, 1, "", "RoboticRadiationRecordStorage"], [425, 2, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [426, 2, 1, "", "SMPTEST211020UncompressedInterlacedActiveVideo"], [427, 2, 1, "", "SMPTEST211020UncompressedProgressiveActiveVideo"], [428, 2, 1, "", "SMPTEST211030PCMDigitalAudio"], [429, 2, 1, "", "SecondaryCaptureImageStorage"], [430, 2, 1, "", "SegmentationStorage"], [431, 2, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [432, 2, 1, "", "SimplifiedAdultEchoSRStorage"], [433, 2, 1, "", "SleepElectroencephalogramWaveformStorage"], [434, 2, 1, "", "SpatialFiducialsStorage"], [435, 2, 1, "", "SpatialRegistrationStorage"], [436, 2, 1, "", "SpectaclePrescriptionReportStorage"], [437, 2, 1, "", "StereometricRelationshipStorage"], [438, 2, 1, "", "SubjectiveRefractionMeasurementsStorage"], [439, 2, 1, "", "SurfaceScanMeshStorage"], [440, 2, 1, "", "SurfaceScanPointCloudStorage"], [441, 2, 1, "", "SurfaceSegmentationStorage"], [442, 2, 1, "", "TomotherapeuticRadiationRecordStorage"], [443, 2, 1, "", "TomotherapeuticRadiationStorage"], [444, 2, 1, "", "TractographyResultsStorage"], [445, 2, 1, "", "TwelveLeadECGWaveformStorage"], [446, 3, 1, "", "UID"], [447, 2, 1, "", "UltrasoundImageStorage"], [448, 2, 1, "", "UltrasoundMultiFrameImageStorage"], [449, 2, 1, "", "UncompressedTransferSyntaxes"], [450, 2, 1, "", "VLEndoscopicImageStorage"], [451, 2, 1, "", "VLMicroscopicImageStorage"], [452, 2, 1, "", "VLPhotographicImageStorage"], [453, 2, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [454, 2, 1, "", "VLWholeSlideMicroscopyImageStorage"], [455, 2, 1, "", "VariableModalityLUTSoftcopyPresentationStateStorage"], [456, 2, 1, "", "VideoEndoscopicImageStorage"], [457, 2, 1, "", "VideoMicroscopicImageStorage"], [458, 2, 1, "", "VideoPhotographicImageStorage"], [459, 2, 1, "", "VisualAcuityMeasurementsStorage"], [460, 2, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [461, 2, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [462, 2, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [463, 2, 1, "", "XADefinedProcedureProtocolStorage"], [464, 2, 1, "", "XAPerformedProcedureProtocolStorage"], [465, 2, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [466, 2, 1, "", "XRay3DAngiographicImageStorage"], [467, 2, 1, "", "XRay3DCraniofacialImageStorage"], [468, 2, 1, "", "XRayAngiographicImageStorage"], [469, 2, 1, "", "XRayRadiationDoseSRStorage"], [470, 2, 1, "", "XRayRadiofluoroscopicImageStorage"], [471, 1, 1, "", "generate_uid"], [472, 1, 1, "", "register_transfer_syntax"]], "pydicom.uid.UID": [[446, 6, 1, "", "__init__"], [446, 4, 1, "", "info"], [446, 4, 1, "", "is_compressed"], [446, 4, 1, "", "is_deflated"], [446, 4, 1, "", "is_encapsulated"], [446, 4, 1, "", "is_implicit_VR"], [446, 4, 1, "", "is_little_endian"], [446, 4, 1, "", "is_private"], [446, 4, 1, "", "is_retired"], [446, 4, 1, "", "is_transfer_syntax"], [446, 4, 1, "", "is_valid"], [446, 4, 1, "", "keyword"], [446, 4, 1, "", "name"], [446, 6, 1, "", "set_private_encoding"], [446, 4, 1, "", "type"]], "pydicom.valuerep": [[473, 3, 1, "", "DA"], [474, 1, 1, "", "DS"], [475, 3, 1, "", "DSdecimal"], [476, 3, 1, "", "DSfloat"], [477, 3, 1, "", "DT"], [478, 3, 1, "", "IS"], [479, 3, 1, "", "ISfloat"], [480, 3, 1, "", "PersonName"], [481, 3, 1, "", "TM"], [482, 3, 1, "", "VR"], [483, 1, 1, "", "format_number_as_ds"], [484, 1, 1, "", "is_valid_ds"]], "pydicom.valuerep.DA": [[473, 6, 1, "", "__init__"]], "pydicom.valuerep.DSdecimal": [[475, 6, 1, "", "__init__"]], "pydicom.valuerep.DSfloat": [[476, 6, 1, "", "__init__"]], "pydicom.valuerep.DT": [[477, 6, 1, "", "__init__"]], "pydicom.valuerep.IS": [[478, 6, 1, "", "__init__"]], "pydicom.valuerep.ISfloat": [[479, 6, 1, "", "__init__"]], "pydicom.valuerep.PersonName": [[480, 6, 1, "", "__init__"], [480, 4, 1, "", "alphabetic"], [480, 4, 1, "", "components"], [480, 6, 1, "", "decode"], [480, 6, 1, "", "encode"], [480, 6, 1, "", "family_comma_given"], [480, 4, 1, "", "family_name"], [480, 6, 1, "", "formatted"], [480, 6, 1, "", "from_named_components"], [480, 6, 1, "", "from_named_components_veterinary"], [480, 4, 1, "", "given_name"], [480, 4, 1, "", "ideographic"], [480, 4, 1, "", "middle_name"], [480, 4, 1, "", "name_prefix"], [480, 4, 1, "", "name_suffix"], [480, 4, 1, "", "phonetic"]], "pydicom.valuerep.TM": [[481, 6, 1, "", "__init__"]], "pydicom.valuerep.VR": [[482, 6, 1, "", "__init__"]], "pydicom.values": [[485, 1, 1, "", "convert_AE_string"], [486, 1, 1, "", "convert_ATvalue"], [487, 1, 1, "", "convert_DA_string"], [488, 1, 1, "", "convert_DS_string"], [489, 1, 1, "", "convert_DT_string"], [490, 1, 1, "", "convert_IS_string"], [491, 1, 1, "", "convert_OBvalue"], [492, 1, 1, "", "convert_OWvalue"], [493, 1, 1, "", "convert_PN"], [494, 1, 1, "", "convert_SQ"], [495, 1, 1, "", "convert_TM_string"], [496, 1, 1, "", "convert_UI"], [497, 1, 1, "", "convert_UN"], [498, 1, 1, "", "convert_UR_string"], [499, 1, 1, "", "convert_numbers"], [500, 1, 1, "", "convert_single_string"], [501, 1, 1, "", "convert_string"], [502, 1, 1, "", "convert_tag"], [503, 1, 1, "", "convert_text"], [504, 1, 1, "", "convert_value"], [505, 1, 1, "", "multi_string"]], "pydicom.waveforms": [[506, 0, 0, "-", "numpy_handler"]], "pydicom.waveforms.numpy_handler": [[506, 1, 1, "", "generate_multiplex"], [506, 1, 1, "", "is_available"], [506, 1, 1, "", "multiplex_array"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:method", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"show": [0, 14, 26, 28], "dicom": [0, 10, 11, 12, 16, 17, 20, 24, 26, 42, 46, 48, 53, 57, 75, 544, 546, 549], "file": [0, 10, 17, 20, 24, 26, 48, 53, 75, 520, 523, 524, 544, 546], "us": [0, 2, 23, 43, 44, 49, 53, 546, 547], "hierarch": 0, "tree": 0, "imag": [1, 2, 4, 6, 36, 37, 49], "process": [1, 6, 15], "downsiz": 2, "mri": 2, "pydicom": [2, 23, 24, 26, 27, 28, 29, 33, 40, 41, 42, 43, 44, 46, 47, 49, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 510, 511, 512, 513, 514, 515, 516, 536, 537, 539, 546, 547], "decod": [3, 29, 30, 31, 54, 65, 223, 224, 225, 226, 227, 228, 229, 512, 513, 549], "plot": [3, 4, 9], "waveform": [3, 52, 506, 515, 549], "data": [3, 8, 9, 12, 17, 30, 31, 34, 35, 44, 45, 46, 50, 51, 52, 56, 57, 59, 60, 66, 67, 104, 105, 106, 107, 507, 508, 511, 512, 513, 515, 543, 547, 549], "load": [4, 544], "ct": 4, "slice": 4, "axial": 4, "sagitt": 4, "coron": 4, "comput": [5, 13, 19, 21, 538], "time": [5, 13, 19, 21, 538], "gener": [6, 23, 39], "exampl": [6, 24, 26, 36, 40, 69, 542, 546], "input": [6, 7], "output": [6, 7, 8], "metadata": [6, 15], "format": [8, 543], "set": [8, 10, 46, 75, 99, 544], "print": 8, "read": [9, 10, 11, 48, 72, 542], "dataset": [9, 14, 41, 44, 50, 51, 52, 56, 58, 69, 70, 72, 74, 131, 132, 133, 134, 135, 542, 543], "pixel": [9, 30, 31, 34, 35, 36, 37, 44, 45, 51, 67, 223, 224, 225, 226, 227, 228, 229, 507, 508, 512, 513, 547], "rtplan": 11, "list": [11, 514], "inform": 11, "write": [12, 39, 48, 53, 74, 540, 542], "work": [14, 18, 50, 51, 52, 543], "memori": 14, "base": [14, 71, 155, 223, 224, 225, 226, 227, 228, 229], "add": 16, "item": 16, "privat": [16, 46, 57], "dictionari": [16, 46, 57], "anonym": 17, "singl": 17, "sequenc": [18, 41, 62, 230, 542], "analys": 20, "differ": 20, "between": 20, "displai": [22, 46], "unicod": 22, "person": 22, "name": 22, "frequent": 23, "ask": 23, "question": 23, "how": [23, 546], "do": 23, "i": [23, 478], "cite": 23, "instal": [23, 26, 27, 43, 540, 546], "what": [23, 540, 541], "ar": 23, "": 23, "prerequisit": 23, "requir": [23, 30, 34, 540], "option": [23, 24, 26, 29, 33, 55, 540, 546], "version": [23, 42, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 546], "python": [23, 32, 49], "can": 23, "codifi": [24, 26, 53], "command": [24, 26, 28], "A": [24, 26], "simpl": [24, 26], "part": [24, 26], "extend": [25, 26], "cli": [25, 26, 27], "line": 26, "interfac": 26, "guid": [26, 38, 40, 47], "introduct": [26, 27, 42, 43, 46, 49, 50, 51, 52, 53, 543, 547], "combin": [26, 27], "other": [26, 27, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526], "plugin": [29, 30, 33, 34, 36], "ad": [30, 34, 46, 542, 544], "element": [32, 41, 46, 59, 60, 61, 62, 63, 64, 65, 542], "vr": [32, 482], "type": [32, 39], "encod": [33, 34, 35, 36, 54, 67, 154, 155, 156, 549], "gdcm": [33, 546], "pylibjpeg": [33, 546], "an": 34, "rle": 36, "lossless": 36, "valid": [36, 42], "paramet": 36, "avail": 36, "glossari": 37, "modul": 37, "document": [39, 40, 516, 528, 540, 541], "style": 39, "guidelin": 39, "restructuredtext": 39, "get": [40, 56, 542], "start": 40, "user": [40, 47], "api": [40, 509], "refer": [40, 509], "core": 41, "datael": [41, 128], "tag": [41, 63, 231, 232, 233, 234], "best": 42, "practic": 42, "enforc": 42, "futur": 42, "proof": 42, "your": [42, 540, 541], "code": [42, 540], "limit": 42, "major": [42, 517, 518, 519, 520, 521, 522, 523, 525], "packag": [42, 44, 547], "licens": 43, "support": [43, 44, 45, 543], "next": [43, 540, 541, 542], "step": [43, 542], "compress": [44, 45, 547], "third": [44, 547], "parti": [44, 547], "transfer": [44, 45, 514], "syntax": [44, 45, 514], "handl": [45, 511], "precondit": 45, "usag": [45, 69], "remov": [46, 516, 537, 544], "all": 46, "new": [46, 520, 540, 541, 544], "entri": 46, "pars": [48, 66], "view": [49, 542], "matplotlib": 49, "tkinter": 49, "librari": [49, 540, 546], "pil": 49, "wxpython": 49, "overlai": [50, 208, 511], "overlay_arrai": 50, "pixel_arrai": 51, "color": 51, "space": 51, "palett": 51, "modal": 51, "lut": 51, "rescal": 51, "oper": 51, "voi": 51, "window": 51, "waveform_arrai": 52, "from": [53, 543], "scratch": 53, "charact": 54, "charset": [54, 76, 77, 78, 79], "configur": 55, "config": [55, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "includ": 56, "util": [57, 66, 73, 222, 507, 512, 514], "datadict": [57, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "represent": [58, 59, 61, 62, 64], "dataelem": [60, 128, 129, 130], "multi": 61, "valu": [61, 62, 64, 65, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505], "multiv": [61, 207], "special": 64, "valuerep": [64, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484], "bulk": [66, 507], "encapsul": [66, 138, 547], "encap": [66, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "creat": [66, 540, 541, 543, 544], "except": 68, "error": [68, 157], "io": [70, 71, 73], "class": [71, 514], "filebas": [71, 158, 159, 160, 161], "fileread": [72, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "fileutil": [73, 178, 179, 180, 181, 182], "filewrit": [74, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "fileset": [75, 172, 173, 174, 175, 176, 177, 544], "convert_encod": 76, "decode_byt": 77, "decode_el": 78, "encode_str": 79, "apply_j2k_correct": 80, "ds_decim": 81, "ds_numpi": 82, "ignor": 83, "invalid_keyword_behavior": 84, "invalid_key_behavior": 85, "rais": 86, "warn": 87, "allow_ds_float": 88, "assume_implicit_vr_switch": 89, "convert_wrong_length_to_un": 90, "data_element_callback": 91, "data_element_callback_kwarg": 92, "datetime_convers": 93, "debug": 94, "enforce_valid_valu": 95, "future_behavior": 96, "pixel_data_handl": [97, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 508], "reset_data_element_callback": 98, "show_file_meta": 100, "use_ds_decim": 101, "use_ds_numpi": 102, "use_is_numpi": 103, "get_charset_fil": 104, "get_palette_fil": 105, "get_testdata_fil": [106, 107], "add_dict_entri": [108, 109], "add_private_dict_entri": [110, 111], "dictionary_vm": 112, "dictionary_vr": 113, "dictionary_descript": 114, "dictionary_has_tag": 115, "dictionary_is_retir": 116, "dictionary_keyword": 117, "get_entri": 118, "get_private_entri": 119, "keyword_for_tag": 120, "mask_match": 121, "private_dictionary_vm": 122, "private_dictionary_vr": 123, "private_dictionary_descript": 124, "repeater_has_keyword": 125, "repeater_has_tag": 126, "tag_for_keyword": 127, "dataelement_from_raw": 129, "rawdatael": 130, "filedataset": 132, "filemetadataset": 133, "privateblock": 134, "validate_file_meta": 135, "decode_data_sequ": 136, "defragment_data": 137, "encapsulate_extend": 139, "fragment_fram": 140, "generate_fragmented_fram": 141, "generate_frag": 142, "generate_fram": 143, "generate_pixel_data": 144, "generate_pixel_data_frag": 145, "generate_pixel_data_fram": 146, "get_fram": 147, "get_frame_offset": 148, "itemize_frag": 149, "itemize_fram": 150, "parse_basic_offset": 151, "parse_frag": 152, "read_item": 153, "rlelosslessencod": 154, "get_encod": 156, "invaliddicomerror": 157, "dicombytesio": 158, "dicomfil": 159, "dicomfilelik": 160, "dicomio": 161, "data_element_gener": 162, "data_element_offset_to_valu": 163, "dcmread": 164, "read_dataset": 165, "read_deferred_data_el": 166, "read_file_meta_info": 167, "read_parti": 168, "read_preambl": 169, "read_sequ": 170, "read_sequence_item": 171, "directory_record": 172, "fileinst": 173, "recordnod": 175, "generate_filenam": 176, "is_conformant_file_id": 177, "absorb_delimiter_item": 178, "find_byt": 179, "find_delimit": 180, "length_of_undefined_length": 181, "read_undefined_length_valu": 182, "correct_ambiguous_vr": 183, "correct_ambiguous_vr_el": 184, "dcmwrite": 185, "multi_str": [186, 505], "write_atvalu": 187, "write_da": 188, "write_dt": 189, "write_obvalu": 190, "write_owvalu": 191, "write_pn": 192, "write_tm": 193, "write_ui": 194, "write_un": 195, "write_data_el": 196, "write_dataset": 197, "write_file_meta_info": 198, "write_number_str": 199, "write_numb": 200, "write_sequ": 201, "write_sequence_item": 202, "write_str": 203, "write_text": 204, "misc": [205, 206, 510], "is_dicom": 205, "size_in_byt": 206, "multivalu": 207, "numpy_handl": [208, 218, 506], "apply_color_lut": 209, "apply_modality_lut": 210, "apply_rescal": 211, "apply_voi": 212, "apply_voi_lut": 213, "apply_window": 214, "convert_color_spac": 215, "gdcm_handler": 216, "jpeg_ls_handl": 217, "pillow_handl": 219, "pylibjpeg_handl": 220, "rle_handl": 221, "decoderunn": 223, "deflatedexplicitvrlittleendiandecod": 225, "explicitvrbigendiandecod": 226, "explicitvrlittleendiandecod": 227, "implicitvrlittleendiandecod": 228, "rlelosslessdecod": 229, "basetag": 231, "tupletag": 233, "tag_in_except": 234, "uid": [235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 514], "acquisitioncontextsrstorag": 235, "advancedblendingpresentationstatestorag": 236, "alltransfersyntax": 237, "ambulatoryecgwaveformstorag": 238, "arterialpulsewaveformstorag": 239, "autorefractionmeasurementsstorag": 240, "basicstructureddisplaystorag": 241, "basictextsrstorag": 242, "basicvoiceaudiowaveformstorag": 243, "blendingsoftcopypresentationstatestorag": 244, "bodypositionwaveformstorag": 245, "breastprojectionxrayimagestorageforpresent": 246, "breastprojectionxrayimagestorageforprocess": 247, "breasttomosynthesisimagestorag": 248, "carmphotonelectronradiationrecordstorag": 249, "carmphotonelectronradiationstorag": 250, "ctdefinedprocedureprotocolstorag": 251, "ctimagestorag": 252, "ctperformedprocedureprotocolstorag": 253, "cardiacelectrophysiologywaveformstorag": 254, "chestcadsrstorag": 255, "coloncadsrstorag": 256, "colorpalettestorag": 257, "colorsoftcopypresentationstatestorag": 258, "compositingplanarmprvolumetricpresentationstatestorag": 259, "comprehensive3dsrstorag": 260, "comprehensivesrstorag": 261, "computedradiographyimagestorag": 262, "confocalmicroscopyimagestorag": 263, "confocalmicroscopytiledpyramidalimagestorag": 264, "contentassessmentresultsstorag": 265, "cornealtopographymapstorag": 266, "dicos2daitstorag": 267, "dicos3daitstorag": 268, "dicosctimagestorag": 269, "dicosdigitalxrayimagestorageforpresent": 270, "dicosdigitalxrayimagestorageforprocess": 271, "dicosquadrupoleresonancestorag": 272, "dicosthreatdetectionreportstorag": 273, "deflatedexplicitvrlittleendian": 274, "deformablespatialregistrationstorag": 275, "dermoscopicphotographyimagestorag": 276, "digitalintraoralxrayimagestorageforpresent": 277, "digitalintraoralxrayimagestorageforprocess": 278, "digitalmammographyxrayimagestorageforpresent": 279, "digitalmammographyxrayimagestorageforprocess": 280, "digitalxrayimagestorageforpresent": 281, "digitalxrayimagestorageforprocess": 282, "eddycurrentimagestorag": 283, "eddycurrentmultiframeimagestorag": 284, "electromyogramwaveformstorag": 285, "electrooculogramwaveformstorag": 286, "encapsulatedcdastorag": 287, "encapsulatedmtlstorag": 288, "encapsulatedobjstorag": 289, "encapsulatedpdfstorag": 290, "encapsulatedstlstorag": 291, "enhancedctimagestorag": 292, "enhancedcontinuousrtimagestorag": 293, "enhancedmrcolorimagestorag": 294, "enhancedmrimagestorag": 295, "enhancedpetimagestorag": 296, "enhancedrtimagestorag": 297, "enhancedsrstorag": 298, "enhancedusvolumestorag": 299, "enhancedxaimagestorag": 300, "enhancedxrfimagestorag": 301, "enhancedxrayradiationdosesrstorag": 302, "explicitvrbigendian": 303, "explicitvrlittleendian": 304, "extensiblesrstorag": 305, "general32bitecgwaveformstorag": 306, "generalaudiowaveformstorag": 307, "generalecgwaveformstorag": 308, "genericimplanttemplatestorag": 309, "grayscaleplanarmprvolumetricpresentationstatestorag": 310, "grayscalesoftcopypresentationstatestorag": 311, "hevcm10p51": 312, "hevcmp51": 313, "htj2k": 314, "htj2klossless": 315, "htj2klosslessrpcl": 316, "hangingprotocolstorag": 317, "hemodynamicwaveformstorag": 318, "implantassemblytemplatestorag": 319, "implanttemplategroupstorag": 320, "implantationplansrstorag": 321, "implicitvrlittleendian": 322, "intraocularlenscalculationsstorag": 323, "intravascularopticalcoherencetomographyimagestorageforpresent": 324, "intravascularopticalcoherencetomographyimagestorageforprocess": 325, "inventorystorag": 326, "jpeg2000": 327, "jpeg2000lossless": 328, "jpeg2000mc": 329, "jpeg2000mclossless": 330, "jpeg2000transfersyntax": 331, "jpegbaseline8bit": 332, "jpegextended12bit": 333, "jpeglslossless": 334, "jpeglsnearlossless": 335, "jpeglstransfersyntax": 336, "jpeglossless": 337, "jpeglosslesssv1": 338, "jpegtransfersyntax": 339, "jpiphtj2kreferenc": 340, "jpiphtj2kreferenceddefl": 341, "keratometrymeasurementsstorag": 342, "keyobjectselectiondocumentstorag": 343, "legacyconvertedenhancedctimagestorag": 344, "legacyconvertedenhancedmrimagestorag": 345, "legacyconvertedenhancedpetimagestorag": 346, "lensometrymeasurementsstorag": 347, "mpeg2mphl": 348, "mpeg2mphlf": 349, "mpeg2mpml": 350, "mpeg2mpmlf": 351, "mpeg4hp41": 352, "mpeg4hp41bd": 353, "mpeg4hp41bdf": 354, "mpeg4hp41f": 355, "mpeg4hp422d": 356, "mpeg4hp422df": 357, "mpeg4hp423d": 358, "mpeg4hp423df": 359, "mpeg4hp42stereo": 360, "mpeg4hp42stereof": 361, "mpegtransfersyntax": 362, "mrimagestorag": 363, "mrspectroscopystorag": 364, "maculargridthicknessandvolumereportstorag": 365, "mammographycadsrstorag": 366, "mediastoragedirectorystorag": 367, "microscopybulksimpleannotationsstorag": 368, "multiframegrayscalebytesecondarycaptureimagestorag": 369, "multiframegrayscalewordsecondarycaptureimagestorag": 370, "multiframesinglebitsecondarycaptureimagestorag": 371, "multiframetruecolorsecondarycaptureimagestorag": 372, "multichannelrespiratorywaveformstorag": 373, "multiplevolumerenderingvolumetricpresentationstatestorag": 374, "nuclearmedicineimagestorag": 375, "ophthalmicaxialmeasurementsstorag": 376, "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorag": 377, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 378, "ophthalmicphotography16bitimagestorag": 379, "ophthalmicphotography8bitimagestorag": 380, "ophthalmicthicknessmapstorag": 381, "ophthalmictomographyimagestorag": 382, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 383, "pydicom_implementation_uid": 384, "pydicom_root_uid": 385, "parametricmapstorag": 386, "patientradiationdosesrstorag": 387, "performedimagingagentadministrationsrstorag": 388, "photoacousticimagestorag": 389, "plannedimagingagentadministrationsrstorag": 390, "positronemissiontomographyimagestorag": 391, "privatetransfersyntax": 392, "procedurelogstorag": 393, "protocolapprovalstorag": 394, "pseudocolorsoftcopypresentationstatestorag": 395, "re_valid_uid": 396, "re_valid_uid_prefix": 397, "rlelossless": 398, "rletransfersyntax": 399, "rtbeamsdeliveryinstructionstorag": 400, "rtbeamstreatmentrecordstorag": 401, "rtbrachyapplicationsetupdeliveryinstructionstorag": 402, "rtbrachytreatmentrecordstorag": 403, "rtdosestorag": 404, "rtimagestorag": 405, "rtionbeamstreatmentrecordstorag": 406, "rtionplanstorag": 407, "rtpatientpositionacquisitioninstructionstorag": 408, "rtphysicianintentstorag": 409, "rtplanstorag": 410, "rtradiationrecordsetstorag": 411, "rtradiationsalvagerecordstorag": 412, "rtradiationsetdeliveryinstructionstorag": 413, "rtradiationsetstorag": 414, "rtsegmentannotationstorag": 415, "rtstructuresetstorag": 416, "rttreatmentpreparationstorag": 417, "rttreatmentsummaryrecordstorag": 418, "radiopharmaceuticalradiationdosesrstorag": 419, "rawdatastorag": 420, "realworldvaluemappingstorag": 421, "respiratorywaveformstorag": 422, "roboticarmradiationstorag": 423, "roboticradiationrecordstorag": 424, "routinescalpelectroencephalogramwaveformstorag": 425, "smptest211020uncompressedinterlacedactivevideo": 426, "smptest211020uncompressedprogressiveactivevideo": 427, "smptest211030pcmdigitalaudio": 428, "secondarycaptureimagestorag": 429, "segmentationstorag": 430, "segmentedvolumerenderingvolumetricpresentationstatestorag": 431, "simplifiedadultechosrstorag": 432, "sleepelectroencephalogramwaveformstorag": 433, "spatialfiducialsstorag": 434, "spatialregistrationstorag": 435, "spectacleprescriptionreportstorag": 436, "stereometricrelationshipstorag": 437, "subjectiverefractionmeasurementsstorag": 438, "surfacescanmeshstorag": 439, "surfacescanpointcloudstorag": 440, "surfacesegmentationstorag": 441, "tomotherapeuticradiationrecordstorag": 442, "tomotherapeuticradiationstorag": 443, "tractographyresultsstorag": 444, "twelveleadecgwaveformstorag": 445, "ultrasoundimagestorag": 447, "ultrasoundmultiframeimagestorag": 448, "uncompressedtransfersyntax": 449, "vlendoscopicimagestorag": 450, "vlmicroscopicimagestorag": 451, "vlphotographicimagestorag": 452, "vlslidecoordinatesmicroscopicimagestorag": 453, "vlwholeslidemicroscopyimagestorag": 454, "variablemodalitylutsoftcopypresentationstatestorag": 455, "videoendoscopicimagestorag": 456, "videomicroscopicimagestorag": 457, "videophotographicimagestorag": 458, "visualacuitymeasurementsstorag": 459, "volumerenderingvolumetricpresentationstatestorag": 460, "widefieldophthalmicphotography3dcoordinatesimagestorag": 461, "widefieldophthalmicphotographystereographicprojectionimagestorag": 462, "xadefinedprocedureprotocolstorag": 463, "xaperformedprocedureprotocolstorag": 464, "xaxrfgrayscalesoftcopypresentationstatestorag": 465, "xray3dangiographicimagestorag": 466, "xray3dcraniofacialimagestorag": 467, "xrayangiographicimagestorag": 468, "xrayradiationdosesrstorag": 469, "xrayradiofluoroscopicimagestorag": 470, "generate_uid": 471, "register_transfer_syntax": 472, "da": 473, "d": 474, "dsdecim": 475, "dsfloat": 476, "dt": 477, "isfloat": 479, "personnam": 480, "tm": 481, "format_number_as_d": 483, "is_valid_d": 484, "convert_ae_str": 485, "convert_atvalu": 486, "convert_da_str": 487, "convert_ds_str": 488, "convert_dt_str": 489, "convert_is_str": 490, "convert_obvalu": 491, "convert_owvalu": 492, "convert_pn": 493, "convert_sq": 494, "convert_tm_str": 495, "convert_ui": 496, "convert_un": 497, "convert_ur_str": 498, "convert_numb": 499, "convert_single_str": 500, "convert_str": 501, "convert_tag": 502, "convert_text": 503, "convert_valu": 504, "handler": [507, 508, 515], "miscellan": 510, "definit": 514, "storag": 514, "sop": [514, 544], "releas": [516, 520, 546], "note": 516, "3": [516, 518, 528, 535, 537], "0": [516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 537], "chang": [516, 517, 518, 519, 521, 522, 523, 524, 525, 527, 528, 529, 530, 532, 534, 535, 536, 537, 540, 541, 544], "enhanc": [516, 517, 518, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 537], "fix": [516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537], "deprec": [516, 537], "intern": [516, 536, 537], "2": [516, 517, 527, 531, 532, 533, 534, 535, 536], "4": [516, 519, 529, 530, 536], "1": [516, 525, 526, 527, 528, 529, 530, 532, 533], "changelog": [516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532], "9": [516, 517, 518, 519, 520, 521, 522, 523, 524], "8": [516, 523], "7": [516, 522], "6": [516, 521], "5": [516, 520], "bug": [517, 518, 519, 521, 522, 523], "addit": 519, "thi": [519, 520], "contrib": [520, 523, 524], "contributor": 524, "infrastructur": 525, "contribut": [539, 540, 541], "sourc": 540, "download": [540, 541, 546], "current": 540, "pytest": 540, "run": 540, "test": [540, 546], "suit": 540, "branch": [540, 541], "make": [540, 541], "preview": [540, 541], "commit": [540, 541], "pull": [540, 541], "request": [540, 541], "happen": [540, 541], "build": 541, "basic": 542, "access": 542, "modifi": [542, 544], "path": 542, "file_meta": 542, "ani": 542, "categori": 542, "standard": 542, "delet": 542, "json": 543, "convert": 543, "larg": 543, "binari": 543, "dicomdir": 544, "The": 544, "exist": 544, "stage": 544, "instanc": 544, "appli": 544, "conclus": 544, "tutori": 545, "offici": 546, "pip": 546, "conda": 546, "pillow": 546, "pyjpegl": 546, "develop": 546, "structur": 548, "report": 548}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Show a dicom file using hierarchical tree": [[0, "show-a-dicom-file-using-hierarchical-tree"]], "Image processing": [[1, "image-processing"], [6, "image-processing"]], "Downsize MRI image using pydicom": [[2, "downsize-mri-image-using-pydicom"]], "Decode and plot Waveform Data": [[3, "decode-and-plot-waveform-data"]], "Load CT slices and plot axial, sagittal and coronal images": [[4, "load-ct-slices-and-plot-axial-sagittal-and-coronal-images"]], "Computation times": [[5, "computation-times"], [13, "computation-times"], [19, "computation-times"], [21, "computation-times"], [538, "computation-times"]], "General examples": [[6, "general-examples"]], "Input-output": [[6, "input-output"], [7, "input-output"]], "Metadata processing": [[6, "metadata-processing"], [15, "metadata-processing"]], "Format the output of the data set printing": [[8, "format-the-output-of-the-data-set-printing"]], "Read a Dataset and plot Pixel Data": [[9, "read-a-dataset-and-plot-pixel-data"]], "Read a DICOM File-set": [[10, "read-a-dicom-file-set"]], "Read RTPLAN DICOM and list information": [[11, "read-rtplan-dicom-and-list-information"]], "Write DICOM data": [[12, "write-dicom-data"]], "Show working with memory-based dataset": [[14, "show-working-with-memory-based-dataset"]], "Add items to the private DICOM dictionary": [[16, "add-items-to-the-private-dicom-dictionary"]], "Anonymize DICOM data": [[17, "anonymize-dicom-data"]], "Anonymize a single file": [[17, "anonymize-a-single-file"]], "Working with sequences": [[18, "working-with-sequences"]], "Analyse differences between DICOM files": [[20, "analyse-differences-between-dicom-files"]], "Display unicode person names": [[22, "display-unicode-person-names"]], "Frequently asked questions": [[23, "frequently-asked-questions"]], "General": [[23, "general"]], "How do I cite pydicom?": [[23, "how-do-i-cite-pydicom"]], "Installation": [[23, "installation"]], "What are pydicom\u2019s prerequisites?": [[23, "what-are-pydicom-s-prerequisites"]], "Required": [[23, "required"]], "Optional": [[23, "optional"]], "What version of Python can I use?": [[23, "what-version-of-python-can-i-use"]], "pydicom codify command": [[24, "pydicom-codify-command"], [26, "pydicom-codify-command"]], "A simple example": [[24, "a-simple-example"], [26, "a-simple-example"]], "Command options": [[24, "command-options"], [26, "command-options"]], "Codifying a part of a DICOM file": [[24, "codifying-a-part-of-a-dicom-file"], [26, "codifying-a-part-of-a-dicom-file"]], "Extending the CLI": [[25, "extending-the-cli"], [26, "extending-the-cli"]], "Command-line Interface Guide": [[26, "command-line-interface-guide"]], "Introduction": [[26, "introduction"], [27, "introduction"], [42, "introduction"], [43, "introduction"], [46, "introduction"], [49, "introduction"], [50, "introduction"], [51, "introduction"], [52, "introduction"], [53, "introduction"], [547, "introduction"]], "Installing the pydicom CLI": [[26, "installing-the-pydicom-cli"], [27, "installing-the-pydicom-cli"]], "Combining with other CLIs": [[26, "combining-with-other-clis"], [27, "combining-with-other-clis"]], "pydicom show command": [[26, "pydicom-show-command"], [28, "pydicom-show-command"]], "Decoder Plugins Options": [[29, "decoder-plugins-options"]], "pydicom": [[29, "pydicom"], [33, "pydicom"]], "Pixel Data Decoder Plugins": [[30, "pixel-data-decoder-plugins"]], "Plugin Requirements": [[30, "plugin-requirements"], [34, "plugin-requirements"]], "Adding Plugins to a Decoder": [[30, "adding-plugins-to-a-decoder"]], "Pixel Data Decoding": [[31, "pixel-data-decoding"], [512, "pixel-data-decoding"]], "Element VRs and Python types": [[32, "element-vrs-and-python-types"]], "Encoder Plugins Options": [[33, "encoder-plugins-options"]], "gdcm": [[33, "gdcm"]], "pylibjpeg": [[33, "pylibjpeg"]], "Pixel Data Encoder Plugins": [[34, "pixel-data-encoder-plugins"]], "Adding Plugins to an Encoder": [[34, "adding-plugins-to-an-encoder"]], "Pixel Data Encoding": [[35, "pixel-data-encoding"]], "RLE Lossless Encoding": [[36, "rle-lossless-encoding"]], "Valid Image Pixel Parameters": [[36, "valid-image-pixel-parameters"]], "Available Plugins": [[36, "available-plugins"]], "Examples": [[36, "examples"], [40, "examples"]], "Glossary": [[37, "glossary"]], "Image Pixel Module": [[37, "image-pixel-module"]], "Guides": [[38, "guides"]], "Writing documentation": [[39, "writing-documentation"]], "Types of documentation": [[39, "types-of-documentation"]], "General style guidelines": [[39, "general-style-guidelines"]], "Guidelines for reStructuredText": [[39, "guidelines-for-restructuredtext"]], "pydicom documentation": [[40, "pydicom-documentation"]], "Getting Started": [[40, "getting-started"]], "User Guide": [[40, "user-guide"]], "API Reference": [[40, "api-reference"], [509, "api-reference"]], "Core elements in pydicom": [[41, "core-elements-in-pydicom"]], "Dataset": [[41, "dataset"]], "DataElement": [[41, "dataelement"]], "Tag": [[41, "tag"]], "Sequence": [[41, "sequence"]], "Best Practices": [[42, "best-practices"]], "Enforcing Valid DICOM": [[42, "enforcing-valid-dicom"]], "Future-proofing your code": [[42, "future-proofing-your-code"]], "Limiting the pydicom major version in your package": [[42, "limiting-the-pydicom-major-version-in-your-package"]], "Introduction to pydicom": [[43, "introduction-to-pydicom"]], "License": [[43, "license"]], "Installing": [[43, "installing"]], "Using pydicom": [[43, "using-pydicom"]], "Support": [[43, "support"]], "Next Steps": [[43, "next-steps"]], "Compressing Pixel Data": [[44, "compressing-pixel-data"], [547, "compressing-pixel-data"]], "Compressing using third-party packages": [[44, "compressing-using-third-party-packages"]], "Compressing using pydicom": [[44, "compressing-using-pydicom"], [547, "compressing-using-pydicom"]], "Supported Transfer Syntaxes": [[44, "supported-transfer-syntaxes"], [45, "supported-transfer-syntaxes"]], "Compressing with Dataset.compress()": [[44, "compressing-with-dataset-compress"]], "Handling of compressed pixel data": [[45, "handling-of-compressed-pixel-data"]], "Preconditions": [[45, "preconditions"]], "Usage": [[45, "usage"], [69, "usage"]], "Private Data Elements": [[46, "private-data-elements"]], "Displaying Private Data Elements in pydicom": [[46, "displaying-private-data-elements-in-pydicom"]], "Setting Private Data Elements with pydicom": [[46, "setting-private-data-elements-with-pydicom"]], "Removing All Private Data Elements": [[46, "removing-all-private-data-elements"]], "Adding new entries to the DICOM dictionary": [[46, "adding-new-entries-to-the-dicom-dictionary"]], "pydicom User Guide": [[47, "pydicom-user-guide"]], "Reading and writing DICOM files": [[48, "reading-and-writing-dicom-files"]], "File Reading/Parsing": [[48, "file-reading-parsing"]], "File Writing": [[48, "file-writing"]], "Viewing Images": [[49, "viewing-images"]], "Using pydicom with matplotlib": [[49, "using-pydicom-with-matplotlib"]], "Using pydicom with Tkinter": [[49, "using-pydicom-with-tkinter"]], "Using pydicom with Python Imaging Library (PIL)": [[49, "using-pydicom-with-python-imaging-library-pil"]], "Using pydicom with wxPython": [[49, "using-pydicom-with-wxpython"]], "Working with Overlay Data": [[50, "working-with-overlay-data"]], "Dataset.overlay_array()": [[50, "dataset-overlay-array"]], "Working with Pixel Data": [[51, "working-with-pixel-data"]], "Dataset.pixel_array": [[51, "dataset-pixel-array"]], "Color space": [[51, "color-space"]], "Palette Color": [[51, "palette-color"]], "Modality LUT or Rescale Operation": [[51, "modality-lut-or-rescale-operation"]], "VOI LUT or Windowing Operation": [[51, "voi-lut-or-windowing-operation"]], "Working with Waveform Data": [[52, "working-with-waveform-data"]], "Dataset.waveform_array()": [[52, "dataset-waveform-array"]], "Writing DICOM Files": [[53, "writing-dicom-files"]], "Using Codify": [[53, "using-codify"]], "Writing a file from Scratch": [[53, "writing-a-file-from-scratch"]], "Character Encoding and Decoding (pydicom.charset)": [[54, "character-encoding-and-decoding-pydicom-charset"]], "Configuration Options (pydicom.config)": [[55, "configuration-options-pydicom-config"]], "Getting Included Datasets (pydicom.data)": [[56, "getting-included-datasets-pydicom-data"]], "Data Dictionary Utilities (pydicom.datadict)": [[57, "data-dictionary-utilities-pydicom-datadict"]], "DICOM Data Dictionary": [[57, "dicom-data-dictionary"]], "Private Data Dictionary": [[57, "private-data-dictionary"]], "Representation of Datasets (pydicom.dataset)": [[58, "representation-of-datasets-pydicom-dataset"]], "Representation of Data Elements": [[59, "representation-of-data-elements"]], "Data Elements (pydicom.dataelem)": [[60, "data-elements-pydicom-dataelem"]], "Element Multi-value Representation (pydicom.multival)": [[61, "element-multi-value-representation-pydicom-multival"]], "Sequence Element Value Representation (pydicom.sequence)": [[62, "sequence-element-value-representation-pydicom-sequence"]], "Element Tags (pydicom.tag)": [[63, "element-tags-pydicom-tag"]], "Specialized Element Value Representation (pydicom.valuerep)": [[64, "specialized-element-value-representation-pydicom-valuerep"]], "Element Value Decoding (pydicom.values)": [[65, "element-value-decoding-pydicom-values"]], "Bulk Data Encapsulation Utilities (pydicom.encaps)": [[66, "bulk-data-encapsulation-utilities-pydicom-encaps"]], "Parsing Encapsulated Data": [[66, "parsing-encapsulated-data"]], "Creating Encapsulated Data": [[66, "creating-encapsulated-data"]], "Pixel Data Encoders (pydicom.encoders)": [[67, "pixel-data-encoders-pydicom-encoders"]], "Exceptions (pydicom.errors)": [[68, "exceptions-pydicom-errors"]], "Example Datasets (pydicom.examples)": [[69, "example-datasets-pydicom-examples"]], "Dataset IO": [[70, "dataset-io"]], "IO Base Classes (pydicom.filebase)": [[71, "io-base-classes-pydicom-filebase"]], "Dataset Reading (pydicom.filereader)": [[72, "dataset-reading-pydicom-filereader"]], "IO Utilities (pydicom.fileutil)": [[73, "io-utilities-pydicom-fileutil"]], "Dataset Writing (pydicom.filewriter)": [[74, "dataset-writing-pydicom-filewriter"]], "DICOM File-sets (pydicom.fileset)": [[75, "dicom-file-sets-pydicom-fileset"]], "pydicom.charset.convert_encodings": [[76, "pydicom-charset-convert-encodings"]], "pydicom.charset.decode_bytes": [[77, "pydicom-charset-decode-bytes"]], "pydicom.charset.decode_element": [[78, "pydicom-charset-decode-element"]], "pydicom.charset.encode_string": [[79, "pydicom-charset-encode-string"]], "pydicom.config.APPLY_J2K_CORRECTIONS": [[80, "pydicom-config-apply-j2k-corrections"]], "pydicom.config.DS_decimal": [[81, "pydicom-config-ds-decimal"]], "pydicom.config.DS_numpy": [[82, "pydicom-config-ds-numpy"]], "pydicom.config.IGNORE": [[83, "pydicom-config-ignore"]], "pydicom.config.INVALID_KEYWORD_BEHAVIOR": [[84, "pydicom-config-invalid-keyword-behavior"]], "pydicom.config.INVALID_KEY_BEHAVIOR": [[85, "pydicom-config-invalid-key-behavior"]], "pydicom.config.RAISE": [[86, "pydicom-config-raise"]], "pydicom.config.WARN": [[87, "pydicom-config-warn"]], "pydicom.config.allow_DS_float": [[88, "pydicom-config-allow-ds-float"]], "pydicom.config.assume_implicit_vr_switch": [[89, "pydicom-config-assume-implicit-vr-switch"]], "pydicom.config.convert_wrong_length_to_UN": [[90, "pydicom-config-convert-wrong-length-to-un"]], "pydicom.config.data_element_callback": [[91, "pydicom-config-data-element-callback"]], "pydicom.config.data_element_callback_kwargs": [[92, "pydicom-config-data-element-callback-kwargs"]], "pydicom.config.datetime_conversion": [[93, "pydicom-config-datetime-conversion"]], "pydicom.config.debug": [[94, "pydicom-config-debug"]], "pydicom.config.enforce_valid_values": [[95, "pydicom-config-enforce-valid-values"]], "pydicom.config.future_behavior": [[96, "pydicom-config-future-behavior"]], "pydicom.config.pixel_data_handlers": [[97, "pydicom-config-pixel-data-handlers"]], "pydicom.config.reset_data_element_callback": [[98, "pydicom-config-reset-data-element-callback"]], "pydicom.config.settings": [[99, "pydicom-config-settings"]], "pydicom.config.show_file_meta": [[100, "pydicom-config-show-file-meta"]], "pydicom.config.use_DS_decimal": [[101, "pydicom-config-use-ds-decimal"]], "pydicom.config.use_DS_numpy": [[102, "pydicom-config-use-ds-numpy"]], "pydicom.config.use_IS_numpy": [[103, "pydicom-config-use-is-numpy"]], "pydicom.data.get_charset_files": [[104, "pydicom-data-get-charset-files"]], "pydicom.data.get_palette_files": [[105, "pydicom-data-get-palette-files"]], "pydicom.data.get_testdata_file": [[106, "pydicom-data-get-testdata-file"]], "pydicom.data.get_testdata_files": [[107, "pydicom-data-get-testdata-files"]], "pydicom.datadict.add_dict_entries": [[108, "pydicom-datadict-add-dict-entries"]], "pydicom.datadict.add_dict_entry": [[109, "pydicom-datadict-add-dict-entry"]], "pydicom.datadict.add_private_dict_entries": [[110, "pydicom-datadict-add-private-dict-entries"]], "pydicom.datadict.add_private_dict_entry": [[111, "pydicom-datadict-add-private-dict-entry"]], "pydicom.datadict.dictionary_VM": [[112, "pydicom-datadict-dictionary-vm"]], "pydicom.datadict.dictionary_VR": [[113, "pydicom-datadict-dictionary-vr"]], "pydicom.datadict.dictionary_description": [[114, "pydicom-datadict-dictionary-description"]], "pydicom.datadict.dictionary_has_tag": [[115, "pydicom-datadict-dictionary-has-tag"]], "pydicom.datadict.dictionary_is_retired": [[116, "pydicom-datadict-dictionary-is-retired"]], "pydicom.datadict.dictionary_keyword": [[117, "pydicom-datadict-dictionary-keyword"]], "pydicom.datadict.get_entry": [[118, "pydicom-datadict-get-entry"]], "pydicom.datadict.get_private_entry": [[119, "pydicom-datadict-get-private-entry"]], "pydicom.datadict.keyword_for_tag": [[120, "pydicom-datadict-keyword-for-tag"]], "pydicom.datadict.mask_match": [[121, "pydicom-datadict-mask-match"]], "pydicom.datadict.private_dictionary_VM": [[122, "pydicom-datadict-private-dictionary-vm"]], "pydicom.datadict.private_dictionary_VR": [[123, "pydicom-datadict-private-dictionary-vr"]], "pydicom.datadict.private_dictionary_description": [[124, "pydicom-datadict-private-dictionary-description"]], "pydicom.datadict.repeater_has_keyword": [[125, "pydicom-datadict-repeater-has-keyword"]], "pydicom.datadict.repeater_has_tag": [[126, "pydicom-datadict-repeater-has-tag"]], "pydicom.datadict.tag_for_keyword": [[127, "pydicom-datadict-tag-for-keyword"]], "pydicom.dataelem.DataElement": [[128, "pydicom-dataelem-dataelement"]], "pydicom.dataelem.DataElement_from_raw": [[129, "pydicom-dataelem-dataelement-from-raw"]], "pydicom.dataelem.RawDataElement": [[130, "pydicom-dataelem-rawdataelement"]], "pydicom.dataset.Dataset": [[131, "pydicom-dataset-dataset"]], "pydicom.dataset.FileDataset": [[132, "pydicom-dataset-filedataset"]], "pydicom.dataset.FileMetaDataset": [[133, "pydicom-dataset-filemetadataset"]], "pydicom.dataset.PrivateBlock": [[134, "pydicom-dataset-privateblock"]], "pydicom.dataset.validate_file_meta": [[135, "pydicom-dataset-validate-file-meta"]], "pydicom.encaps.decode_data_sequence": [[136, "pydicom-encaps-decode-data-sequence"]], "pydicom.encaps.defragment_data": [[137, "pydicom-encaps-defragment-data"]], "pydicom.encaps.encapsulate": [[138, "pydicom-encaps-encapsulate"]], "pydicom.encaps.encapsulate_extended": [[139, "pydicom-encaps-encapsulate-extended"]], "pydicom.encaps.fragment_frame": [[140, "pydicom-encaps-fragment-frame"]], "pydicom.encaps.generate_fragmented_frames": [[141, "pydicom-encaps-generate-fragmented-frames"]], "pydicom.encaps.generate_fragments": [[142, "pydicom-encaps-generate-fragments"]], "pydicom.encaps.generate_frames": [[143, "pydicom-encaps-generate-frames"]], "pydicom.encaps.generate_pixel_data": [[144, "pydicom-encaps-generate-pixel-data"]], "pydicom.encaps.generate_pixel_data_fragment": [[145, "pydicom-encaps-generate-pixel-data-fragment"]], "pydicom.encaps.generate_pixel_data_frame": [[146, "pydicom-encaps-generate-pixel-data-frame"]], "pydicom.encaps.get_frame": [[147, "pydicom-encaps-get-frame"]], "pydicom.encaps.get_frame_offsets": [[148, "pydicom-encaps-get-frame-offsets"]], "pydicom.encaps.itemize_fragment": [[149, "pydicom-encaps-itemize-fragment"]], "pydicom.encaps.itemize_frame": [[150, "pydicom-encaps-itemize-frame"]], "pydicom.encaps.parse_basic_offsets": [[151, "pydicom-encaps-parse-basic-offsets"]], "pydicom.encaps.parse_fragments": [[152, "pydicom-encaps-parse-fragments"]], "pydicom.encaps.read_item": [[153, "pydicom-encaps-read-item"]], "pydicom.encoders.RLELosslessEncoder": [[154, "pydicom-encoders-rlelosslessencoder"]], "pydicom.encoders.base.Encoder": [[155, "pydicom-encoders-base-encoder"]], "pydicom.encoders.get_encoder": [[156, "pydicom-encoders-get-encoder"]], "pydicom.errors.InvalidDicomError": [[157, "pydicom-errors-invaliddicomerror"]], "pydicom.filebase.DicomBytesIO": [[158, "pydicom-filebase-dicombytesio"]], "pydicom.filebase.DicomFile": [[159, "pydicom-filebase-dicomfile"]], "pydicom.filebase.DicomFileLike": [[160, "pydicom-filebase-dicomfilelike"]], "pydicom.filebase.DicomIO": [[161, "pydicom-filebase-dicomio"]], "pydicom.filereader.data_element_generator": [[162, "pydicom-filereader-data-element-generator"]], "pydicom.filereader.data_element_offset_to_value": [[163, "pydicom-filereader-data-element-offset-to-value"]], "pydicom.filereader.dcmread": [[164, "pydicom-filereader-dcmread"]], "pydicom.filereader.read_dataset": [[165, "pydicom-filereader-read-dataset"]], "pydicom.filereader.read_deferred_data_element": [[166, "pydicom-filereader-read-deferred-data-element"]], "pydicom.filereader.read_file_meta_info": [[167, "pydicom-filereader-read-file-meta-info"]], "pydicom.filereader.read_partial": [[168, "pydicom-filereader-read-partial"]], "pydicom.filereader.read_preamble": [[169, "pydicom-filereader-read-preamble"]], "pydicom.filereader.read_sequence": [[170, "pydicom-filereader-read-sequence"]], "pydicom.filereader.read_sequence_item": [[171, "pydicom-filereader-read-sequence-item"]], "pydicom.fileset.DIRECTORY_RECORDERS": [[172, "pydicom-fileset-directory-recorders"]], "pydicom.fileset.FileInstance": [[173, "pydicom-fileset-fileinstance"]], "pydicom.fileset.FileSet": [[174, "pydicom-fileset-fileset"]], "pydicom.fileset.RecordNode": [[175, "pydicom-fileset-recordnode"]], "pydicom.fileset.generate_filename": [[176, "pydicom-fileset-generate-filename"]], "pydicom.fileset.is_conformant_file_id": [[177, "pydicom-fileset-is-conformant-file-id"]], "pydicom.fileutil.absorb_delimiter_item": [[178, "pydicom-fileutil-absorb-delimiter-item"]], "pydicom.fileutil.find_bytes": [[179, "pydicom-fileutil-find-bytes"]], "pydicom.fileutil.find_delimiter": [[180, "pydicom-fileutil-find-delimiter"]], "pydicom.fileutil.length_of_undefined_length": [[181, "pydicom-fileutil-length-of-undefined-length"]], "pydicom.fileutil.read_undefined_length_value": [[182, "pydicom-fileutil-read-undefined-length-value"]], "pydicom.filewriter.correct_ambiguous_vr": [[183, "pydicom-filewriter-correct-ambiguous-vr"]], "pydicom.filewriter.correct_ambiguous_vr_element": [[184, "pydicom-filewriter-correct-ambiguous-vr-element"]], "pydicom.filewriter.dcmwrite": [[185, "pydicom-filewriter-dcmwrite"]], "pydicom.filewriter.multi_string": [[186, "pydicom-filewriter-multi-string"]], "pydicom.filewriter.write_ATvalue": [[187, "pydicom-filewriter-write-atvalue"]], "pydicom.filewriter.write_DA": [[188, "pydicom-filewriter-write-da"]], "pydicom.filewriter.write_DT": [[189, "pydicom-filewriter-write-dt"]], "pydicom.filewriter.write_OBvalue": [[190, "pydicom-filewriter-write-obvalue"]], "pydicom.filewriter.write_OWvalue": [[191, "pydicom-filewriter-write-owvalue"]], "pydicom.filewriter.write_PN": [[192, "pydicom-filewriter-write-pn"]], "pydicom.filewriter.write_TM": [[193, "pydicom-filewriter-write-tm"]], "pydicom.filewriter.write_UI": [[194, "pydicom-filewriter-write-ui"]], "pydicom.filewriter.write_UN": [[195, "pydicom-filewriter-write-un"]], "pydicom.filewriter.write_data_element": [[196, "pydicom-filewriter-write-data-element"]], "pydicom.filewriter.write_dataset": [[197, "pydicom-filewriter-write-dataset"]], "pydicom.filewriter.write_file_meta_info": [[198, "pydicom-filewriter-write-file-meta-info"]], "pydicom.filewriter.write_number_string": [[199, "pydicom-filewriter-write-number-string"]], "pydicom.filewriter.write_numbers": [[200, "pydicom-filewriter-write-numbers"]], "pydicom.filewriter.write_sequence": [[201, "pydicom-filewriter-write-sequence"]], "pydicom.filewriter.write_sequence_item": [[202, "pydicom-filewriter-write-sequence-item"]], "pydicom.filewriter.write_string": [[203, "pydicom-filewriter-write-string"]], "pydicom.filewriter.write_text": [[204, "pydicom-filewriter-write-text"]], "pydicom.misc.is_dicom": [[205, "pydicom-misc-is-dicom"]], "pydicom.misc.size_in_bytes": [[206, "pydicom-misc-size-in-bytes"]], "pydicom.multival.MultiValue": [[207, "pydicom-multival-multivalue"]], "pydicom.overlays.numpy_handler": [[208, "module-pydicom.overlays.numpy_handler"]], "pydicom.pixel_data_handlers.apply_color_lut": [[209, "pydicom-pixel-data-handlers-apply-color-lut"]], "pydicom.pixel_data_handlers.apply_modality_lut": [[210, "pydicom-pixel-data-handlers-apply-modality-lut"]], "pydicom.pixel_data_handlers.apply_rescale": [[211, "pydicom-pixel-data-handlers-apply-rescale"]], "pydicom.pixel_data_handlers.apply_voi": [[212, "pydicom-pixel-data-handlers-apply-voi"]], "pydicom.pixel_data_handlers.apply_voi_lut": [[213, "pydicom-pixel-data-handlers-apply-voi-lut"]], "pydicom.pixel_data_handlers.apply_windowing": [[214, "pydicom-pixel-data-handlers-apply-windowing"]], "pydicom.pixel_data_handlers.convert_color_space": [[215, "pydicom-pixel-data-handlers-convert-color-space"]], "pydicom.pixel_data_handlers.gdcm_handler": [[216, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[217, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "pydicom.pixel_data_handlers.numpy_handler": [[218, "module-pydicom.pixel_data_handlers.numpy_handler"]], "pydicom.pixel_data_handlers.pillow_handler": [[219, "module-pydicom.pixel_data_handlers.pillow_handler"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[220, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "pydicom.pixel_data_handlers.rle_handler": [[221, "module-pydicom.pixel_data_handlers.rle_handler"]], "pydicom.pixel_data_handlers.util": [[222, "module-pydicom.pixel_data_handlers.util"]], "pydicom.pixels.decoders.base.DecodeRunner": [[223, "pydicom-pixels-decoders-base-decoderunner"]], "pydicom.pixels.decoders.base.Decoder": [[224, "pydicom-pixels-decoders-base-decoder"]], "pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder": [[225, "pydicom-pixels-decoders-base-deflatedexplicitvrlittleendiandecoder"]], "pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder": [[226, "pydicom-pixels-decoders-base-explicitvrbigendiandecoder"]], "pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder": [[227, "pydicom-pixels-decoders-base-explicitvrlittleendiandecoder"]], "pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder": [[228, "pydicom-pixels-decoders-base-implicitvrlittleendiandecoder"]], "pydicom.pixels.decoders.base.RLELosslessDecoder": [[229, "pydicom-pixels-decoders-base-rlelosslessdecoder"]], "pydicom.sequence.Sequence": [[230, "pydicom-sequence-sequence"]], "pydicom.tag.BaseTag": [[231, "pydicom-tag-basetag"]], "pydicom.tag.Tag": [[232, "pydicom-tag-tag"]], "pydicom.tag.TupleTag": [[233, "pydicom-tag-tupletag"]], "pydicom.tag.tag_in_exception": [[234, "pydicom-tag-tag-in-exception"]], "pydicom.uid.AcquisitionContextSRStorage": [[235, "pydicom-uid-acquisitioncontextsrstorage"]], "pydicom.uid.AdvancedBlendingPresentationStateStorage": [[236, "pydicom-uid-advancedblendingpresentationstatestorage"]], "pydicom.uid.AllTransferSyntaxes": [[237, "pydicom-uid-alltransfersyntaxes"]], "pydicom.uid.AmbulatoryECGWaveformStorage": [[238, "pydicom-uid-ambulatoryecgwaveformstorage"]], "pydicom.uid.ArterialPulseWaveformStorage": [[239, "pydicom-uid-arterialpulsewaveformstorage"]], "pydicom.uid.AutorefractionMeasurementsStorage": [[240, "pydicom-uid-autorefractionmeasurementsstorage"]], "pydicom.uid.BasicStructuredDisplayStorage": [[241, "pydicom-uid-basicstructureddisplaystorage"]], "pydicom.uid.BasicTextSRStorage": [[242, "pydicom-uid-basictextsrstorage"]], "pydicom.uid.BasicVoiceAudioWaveformStorage": [[243, "pydicom-uid-basicvoiceaudiowaveformstorage"]], "pydicom.uid.BlendingSoftcopyPresentationStateStorage": [[244, "pydicom-uid-blendingsoftcopypresentationstatestorage"]], "pydicom.uid.BodyPositionWaveformStorage": [[245, "pydicom-uid-bodypositionwaveformstorage"]], "pydicom.uid.BreastProjectionXRayImageStorageForPresentation": [[246, "pydicom-uid-breastprojectionxrayimagestorageforpresentation"]], "pydicom.uid.BreastProjectionXRayImageStorageForProcessing": [[247, "pydicom-uid-breastprojectionxrayimagestorageforprocessing"]], "pydicom.uid.BreastTomosynthesisImageStorage": [[248, "pydicom-uid-breasttomosynthesisimagestorage"]], "pydicom.uid.CArmPhotonElectronRadiationRecordStorage": [[249, "pydicom-uid-carmphotonelectronradiationrecordstorage"]], "pydicom.uid.CArmPhotonElectronRadiationStorage": [[250, "pydicom-uid-carmphotonelectronradiationstorage"]], "pydicom.uid.CTDefinedProcedureProtocolStorage": [[251, "pydicom-uid-ctdefinedprocedureprotocolstorage"]], "pydicom.uid.CTImageStorage": [[252, "pydicom-uid-ctimagestorage"]], "pydicom.uid.CTPerformedProcedureProtocolStorage": [[253, "pydicom-uid-ctperformedprocedureprotocolstorage"]], "pydicom.uid.CardiacElectrophysiologyWaveformStorage": [[254, "pydicom-uid-cardiacelectrophysiologywaveformstorage"]], "pydicom.uid.ChestCADSRStorage": [[255, "pydicom-uid-chestcadsrstorage"]], "pydicom.uid.ColonCADSRStorage": [[256, "pydicom-uid-coloncadsrstorage"]], "pydicom.uid.ColorPaletteStorage": [[257, "pydicom-uid-colorpalettestorage"]], "pydicom.uid.ColorSoftcopyPresentationStateStorage": [[258, "pydicom-uid-colorsoftcopypresentationstatestorage"]], "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage": [[259, "pydicom-uid-compositingplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.Comprehensive3DSRStorage": [[260, "pydicom-uid-comprehensive3dsrstorage"]], "pydicom.uid.ComprehensiveSRStorage": [[261, "pydicom-uid-comprehensivesrstorage"]], "pydicom.uid.ComputedRadiographyImageStorage": [[262, "pydicom-uid-computedradiographyimagestorage"]], "pydicom.uid.ConfocalMicroscopyImageStorage": [[263, "pydicom-uid-confocalmicroscopyimagestorage"]], "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage": [[264, "pydicom-uid-confocalmicroscopytiledpyramidalimagestorage"]], "pydicom.uid.ContentAssessmentResultsStorage": [[265, "pydicom-uid-contentassessmentresultsstorage"]], "pydicom.uid.CornealTopographyMapStorage": [[266, "pydicom-uid-cornealtopographymapstorage"]], "pydicom.uid.DICOS2DAITStorage": [[267, "pydicom-uid-dicos2daitstorage"]], "pydicom.uid.DICOS3DAITStorage": [[268, "pydicom-uid-dicos3daitstorage"]], "pydicom.uid.DICOSCTImageStorage": [[269, "pydicom-uid-dicosctimagestorage"]], "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation": [[270, "pydicom-uid-dicosdigitalxrayimagestorageforpresentation"]], "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing": [[271, "pydicom-uid-dicosdigitalxrayimagestorageforprocessing"]], "pydicom.uid.DICOSQuadrupoleResonanceStorage": [[272, "pydicom-uid-dicosquadrupoleresonancestorage"]], "pydicom.uid.DICOSThreatDetectionReportStorage": [[273, "pydicom-uid-dicosthreatdetectionreportstorage"]], "pydicom.uid.DeflatedExplicitVRLittleEndian": [[274, "pydicom-uid-deflatedexplicitvrlittleendian"]], "pydicom.uid.DeformableSpatialRegistrationStorage": [[275, "pydicom-uid-deformablespatialregistrationstorage"]], "pydicom.uid.DermoscopicPhotographyImageStorage": [[276, "pydicom-uid-dermoscopicphotographyimagestorage"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation": [[277, "pydicom-uid-digitalintraoralxrayimagestorageforpresentation"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing": [[278, "pydicom-uid-digitalintraoralxrayimagestorageforprocessing"]], "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation": [[279, "pydicom-uid-digitalmammographyxrayimagestorageforpresentation"]], "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing": [[280, "pydicom-uid-digitalmammographyxrayimagestorageforprocessing"]], "pydicom.uid.DigitalXRayImageStorageForPresentation": [[281, "pydicom-uid-digitalxrayimagestorageforpresentation"]], "pydicom.uid.DigitalXRayImageStorageForProcessing": [[282, "pydicom-uid-digitalxrayimagestorageforprocessing"]], "pydicom.uid.EddyCurrentImageStorage": [[283, "pydicom-uid-eddycurrentimagestorage"]], "pydicom.uid.EddyCurrentMultiFrameImageStorage": [[284, "pydicom-uid-eddycurrentmultiframeimagestorage"]], "pydicom.uid.ElectromyogramWaveformStorage": [[285, "pydicom-uid-electromyogramwaveformstorage"]], "pydicom.uid.ElectrooculogramWaveformStorage": [[286, "pydicom-uid-electrooculogramwaveformstorage"]], "pydicom.uid.EncapsulatedCDAStorage": [[287, "pydicom-uid-encapsulatedcdastorage"]], "pydicom.uid.EncapsulatedMTLStorage": [[288, "pydicom-uid-encapsulatedmtlstorage"]], "pydicom.uid.EncapsulatedOBJStorage": [[289, "pydicom-uid-encapsulatedobjstorage"]], "pydicom.uid.EncapsulatedPDFStorage": [[290, "pydicom-uid-encapsulatedpdfstorage"]], "pydicom.uid.EncapsulatedSTLStorage": [[291, "pydicom-uid-encapsulatedstlstorage"]], "pydicom.uid.EnhancedCTImageStorage": [[292, "pydicom-uid-enhancedctimagestorage"]], "pydicom.uid.EnhancedContinuousRTImageStorage": [[293, "pydicom-uid-enhancedcontinuousrtimagestorage"]], "pydicom.uid.EnhancedMRColorImageStorage": [[294, "pydicom-uid-enhancedmrcolorimagestorage"]], "pydicom.uid.EnhancedMRImageStorage": [[295, "pydicom-uid-enhancedmrimagestorage"]], "pydicom.uid.EnhancedPETImageStorage": [[296, "pydicom-uid-enhancedpetimagestorage"]], "pydicom.uid.EnhancedRTImageStorage": [[297, "pydicom-uid-enhancedrtimagestorage"]], "pydicom.uid.EnhancedSRStorage": [[298, "pydicom-uid-enhancedsrstorage"]], "pydicom.uid.EnhancedUSVolumeStorage": [[299, "pydicom-uid-enhancedusvolumestorage"]], "pydicom.uid.EnhancedXAImageStorage": [[300, "pydicom-uid-enhancedxaimagestorage"]], "pydicom.uid.EnhancedXRFImageStorage": [[301, "pydicom-uid-enhancedxrfimagestorage"]], "pydicom.uid.EnhancedXRayRadiationDoseSRStorage": [[302, "pydicom-uid-enhancedxrayradiationdosesrstorage"]], "pydicom.uid.ExplicitVRBigEndian": [[303, "pydicom-uid-explicitvrbigendian"]], "pydicom.uid.ExplicitVRLittleEndian": [[304, "pydicom-uid-explicitvrlittleendian"]], "pydicom.uid.ExtensibleSRStorage": [[305, "pydicom-uid-extensiblesrstorage"]], "pydicom.uid.General32bitECGWaveformStorage": [[306, "pydicom-uid-general32bitecgwaveformstorage"]], "pydicom.uid.GeneralAudioWaveformStorage": [[307, "pydicom-uid-generalaudiowaveformstorage"]], "pydicom.uid.GeneralECGWaveformStorage": [[308, "pydicom-uid-generalecgwaveformstorage"]], "pydicom.uid.GenericImplantTemplateStorage": [[309, "pydicom-uid-genericimplanttemplatestorage"]], "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage": [[310, "pydicom-uid-grayscaleplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage": [[311, "pydicom-uid-grayscalesoftcopypresentationstatestorage"]], "pydicom.uid.HEVCM10P51": [[312, "pydicom-uid-hevcm10p51"]], "pydicom.uid.HEVCMP51": [[313, "pydicom-uid-hevcmp51"]], "pydicom.uid.HTJ2K": [[314, "pydicom-uid-htj2k"]], "pydicom.uid.HTJ2KLossless": [[315, "pydicom-uid-htj2klossless"]], "pydicom.uid.HTJ2KLosslessRPCL": [[316, "pydicom-uid-htj2klosslessrpcl"]], "pydicom.uid.HangingProtocolStorage": [[317, "pydicom-uid-hangingprotocolstorage"]], "pydicom.uid.HemodynamicWaveformStorage": [[318, "pydicom-uid-hemodynamicwaveformstorage"]], "pydicom.uid.ImplantAssemblyTemplateStorage": [[319, "pydicom-uid-implantassemblytemplatestorage"]], "pydicom.uid.ImplantTemplateGroupStorage": [[320, "pydicom-uid-implanttemplategroupstorage"]], "pydicom.uid.ImplantationPlanSRStorage": [[321, "pydicom-uid-implantationplansrstorage"]], "pydicom.uid.ImplicitVRLittleEndian": [[322, "pydicom-uid-implicitvrlittleendian"]], "pydicom.uid.IntraocularLensCalculationsStorage": [[323, "pydicom-uid-intraocularlenscalculationsstorage"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation": [[324, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforpresentation"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing": [[325, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforprocessing"]], "pydicom.uid.InventoryStorage": [[326, "pydicom-uid-inventorystorage"]], "pydicom.uid.JPEG2000": [[327, "pydicom-uid-jpeg2000"]], "pydicom.uid.JPEG2000Lossless": [[328, "pydicom-uid-jpeg2000lossless"]], "pydicom.uid.JPEG2000MC": [[329, "pydicom-uid-jpeg2000mc"]], "pydicom.uid.JPEG2000MCLossless": [[330, "pydicom-uid-jpeg2000mclossless"]], "pydicom.uid.JPEG2000TransferSyntaxes": [[331, "pydicom-uid-jpeg2000transfersyntaxes"]], "pydicom.uid.JPEGBaseline8Bit": [[332, "pydicom-uid-jpegbaseline8bit"]], "pydicom.uid.JPEGExtended12Bit": [[333, "pydicom-uid-jpegextended12bit"]], "pydicom.uid.JPEGLSLossless": [[334, "pydicom-uid-jpeglslossless"]], "pydicom.uid.JPEGLSNearLossless": [[335, "pydicom-uid-jpeglsnearlossless"]], "pydicom.uid.JPEGLSTransferSyntaxes": [[336, "pydicom-uid-jpeglstransfersyntaxes"]], "pydicom.uid.JPEGLossless": [[337, "pydicom-uid-jpeglossless"]], "pydicom.uid.JPEGLosslessSV1": [[338, "pydicom-uid-jpeglosslesssv1"]], "pydicom.uid.JPEGTransferSyntaxes": [[339, "pydicom-uid-jpegtransfersyntaxes"]], "pydicom.uid.JPIPHTJ2KReferenced": [[340, "pydicom-uid-jpiphtj2kreferenced"]], "pydicom.uid.JPIPHTJ2KReferencedDeflate": [[341, "pydicom-uid-jpiphtj2kreferenceddeflate"]], "pydicom.uid.KeratometryMeasurementsStorage": [[342, "pydicom-uid-keratometrymeasurementsstorage"]], "pydicom.uid.KeyObjectSelectionDocumentStorage": [[343, "pydicom-uid-keyobjectselectiondocumentstorage"]], "pydicom.uid.LegacyConvertedEnhancedCTImageStorage": [[344, "pydicom-uid-legacyconvertedenhancedctimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedMRImageStorage": [[345, "pydicom-uid-legacyconvertedenhancedmrimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedPETImageStorage": [[346, "pydicom-uid-legacyconvertedenhancedpetimagestorage"]], "pydicom.uid.LensometryMeasurementsStorage": [[347, "pydicom-uid-lensometrymeasurementsstorage"]], "pydicom.uid.MPEG2MPHL": [[348, "pydicom-uid-mpeg2mphl"]], "pydicom.uid.MPEG2MPHLF": [[349, "pydicom-uid-mpeg2mphlf"]], "pydicom.uid.MPEG2MPML": [[350, "pydicom-uid-mpeg2mpml"]], "pydicom.uid.MPEG2MPMLF": [[351, "pydicom-uid-mpeg2mpmlf"]], "pydicom.uid.MPEG4HP41": [[352, "pydicom-uid-mpeg4hp41"]], "pydicom.uid.MPEG4HP41BD": [[353, "pydicom-uid-mpeg4hp41bd"]], "pydicom.uid.MPEG4HP41BDF": [[354, "pydicom-uid-mpeg4hp41bdf"]], "pydicom.uid.MPEG4HP41F": [[355, "pydicom-uid-mpeg4hp41f"]], "pydicom.uid.MPEG4HP422D": [[356, "pydicom-uid-mpeg4hp422d"]], "pydicom.uid.MPEG4HP422DF": [[357, "pydicom-uid-mpeg4hp422df"]], "pydicom.uid.MPEG4HP423D": [[358, "pydicom-uid-mpeg4hp423d"]], "pydicom.uid.MPEG4HP423DF": [[359, "pydicom-uid-mpeg4hp423df"]], "pydicom.uid.MPEG4HP42STEREO": [[360, "pydicom-uid-mpeg4hp42stereo"]], "pydicom.uid.MPEG4HP42STEREOF": [[361, "pydicom-uid-mpeg4hp42stereof"]], "pydicom.uid.MPEGTransferSyntaxes": [[362, "pydicom-uid-mpegtransfersyntaxes"]], "pydicom.uid.MRImageStorage": [[363, "pydicom-uid-mrimagestorage"]], "pydicom.uid.MRSpectroscopyStorage": [[364, "pydicom-uid-mrspectroscopystorage"]], "pydicom.uid.MacularGridThicknessAndVolumeReportStorage": [[365, "pydicom-uid-maculargridthicknessandvolumereportstorage"]], "pydicom.uid.MammographyCADSRStorage": [[366, "pydicom-uid-mammographycadsrstorage"]], "pydicom.uid.MediaStorageDirectoryStorage": [[367, "pydicom-uid-mediastoragedirectorystorage"]], "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage": [[368, "pydicom-uid-microscopybulksimpleannotationsstorage"]], "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage": [[369, "pydicom-uid-multiframegrayscalebytesecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage": [[370, "pydicom-uid-multiframegrayscalewordsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage": [[371, "pydicom-uid-multiframesinglebitsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage": [[372, "pydicom-uid-multiframetruecolorsecondarycaptureimagestorage"]], "pydicom.uid.MultichannelRespiratoryWaveformStorage": [[373, "pydicom-uid-multichannelrespiratorywaveformstorage"]], "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage": [[374, "pydicom-uid-multiplevolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.NuclearMedicineImageStorage": [[375, "pydicom-uid-nuclearmedicineimagestorage"]], "pydicom.uid.OphthalmicAxialMeasurementsStorage": [[376, "pydicom-uid-ophthalmicaxialmeasurementsstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage": [[377, "pydicom-uid-ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage": [[378, "pydicom-uid-ophthalmicopticalcoherencetomographyenfaceimagestorage"]], "pydicom.uid.OphthalmicPhotography16BitImageStorage": [[379, "pydicom-uid-ophthalmicphotography16bitimagestorage"]], "pydicom.uid.OphthalmicPhotography8BitImageStorage": [[380, "pydicom-uid-ophthalmicphotography8bitimagestorage"]], "pydicom.uid.OphthalmicThicknessMapStorage": [[381, "pydicom-uid-ophthalmicthicknessmapstorage"]], "pydicom.uid.OphthalmicTomographyImageStorage": [[382, "pydicom-uid-ophthalmictomographyimagestorage"]], "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage": [[383, "pydicom-uid-ophthalmicvisualfieldstaticperimetrymeasurementsstorage"]], "pydicom.uid.PYDICOM_IMPLEMENTATION_UID": [[384, "pydicom-uid-pydicom-implementation-uid"]], "pydicom.uid.PYDICOM_ROOT_UID": [[385, "pydicom-uid-pydicom-root-uid"]], "pydicom.uid.ParametricMapStorage": [[386, "pydicom-uid-parametricmapstorage"]], "pydicom.uid.PatientRadiationDoseSRStorage": [[387, "pydicom-uid-patientradiationdosesrstorage"]], "pydicom.uid.PerformedImagingAgentAdministrationSRStorage": [[388, "pydicom-uid-performedimagingagentadministrationsrstorage"]], "pydicom.uid.PhotoacousticImageStorage": [[389, "pydicom-uid-photoacousticimagestorage"]], "pydicom.uid.PlannedImagingAgentAdministrationSRStorage": [[390, "pydicom-uid-plannedimagingagentadministrationsrstorage"]], "pydicom.uid.PositronEmissionTomographyImageStorage": [[391, "pydicom-uid-positronemissiontomographyimagestorage"]], "pydicom.uid.PrivateTransferSyntaxes": [[392, "pydicom-uid-privatetransfersyntaxes"]], "pydicom.uid.ProcedureLogStorage": [[393, "pydicom-uid-procedurelogstorage"]], "pydicom.uid.ProtocolApprovalStorage": [[394, "pydicom-uid-protocolapprovalstorage"]], "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage": [[395, "pydicom-uid-pseudocolorsoftcopypresentationstatestorage"]], "pydicom.uid.RE_VALID_UID": [[396, "pydicom-uid-re-valid-uid"]], "pydicom.uid.RE_VALID_UID_PREFIX": [[397, "pydicom-uid-re-valid-uid-prefix"]], "pydicom.uid.RLELossless": [[398, "pydicom-uid-rlelossless"]], "pydicom.uid.RLETransferSyntaxes": [[399, "pydicom-uid-rletransfersyntaxes"]], "pydicom.uid.RTBeamsDeliveryInstructionStorage": [[400, "pydicom-uid-rtbeamsdeliveryinstructionstorage"]], "pydicom.uid.RTBeamsTreatmentRecordStorage": [[401, "pydicom-uid-rtbeamstreatmentrecordstorage"]], "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage": [[402, "pydicom-uid-rtbrachyapplicationsetupdeliveryinstructionstorage"]], "pydicom.uid.RTBrachyTreatmentRecordStorage": [[403, "pydicom-uid-rtbrachytreatmentrecordstorage"]], "pydicom.uid.RTDoseStorage": [[404, "pydicom-uid-rtdosestorage"]], "pydicom.uid.RTImageStorage": [[405, "pydicom-uid-rtimagestorage"]], "pydicom.uid.RTIonBeamsTreatmentRecordStorage": [[406, "pydicom-uid-rtionbeamstreatmentrecordstorage"]], "pydicom.uid.RTIonPlanStorage": [[407, "pydicom-uid-rtionplanstorage"]], "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage": [[408, "pydicom-uid-rtpatientpositionacquisitioninstructionstorage"]], "pydicom.uid.RTPhysicianIntentStorage": [[409, "pydicom-uid-rtphysicianintentstorage"]], "pydicom.uid.RTPlanStorage": [[410, "pydicom-uid-rtplanstorage"]], "pydicom.uid.RTRadiationRecordSetStorage": [[411, "pydicom-uid-rtradiationrecordsetstorage"]], "pydicom.uid.RTRadiationSalvageRecordStorage": [[412, "pydicom-uid-rtradiationsalvagerecordstorage"]], "pydicom.uid.RTRadiationSetDeliveryInstructionStorage": [[413, "pydicom-uid-rtradiationsetdeliveryinstructionstorage"]], "pydicom.uid.RTRadiationSetStorage": [[414, "pydicom-uid-rtradiationsetstorage"]], "pydicom.uid.RTSegmentAnnotationStorage": [[415, "pydicom-uid-rtsegmentannotationstorage"]], "pydicom.uid.RTStructureSetStorage": [[416, "pydicom-uid-rtstructuresetstorage"]], "pydicom.uid.RTTreatmentPreparationStorage": [[417, "pydicom-uid-rttreatmentpreparationstorage"]], "pydicom.uid.RTTreatmentSummaryRecordStorage": [[418, "pydicom-uid-rttreatmentsummaryrecordstorage"]], "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage": [[419, "pydicom-uid-radiopharmaceuticalradiationdosesrstorage"]], "pydicom.uid.RawDataStorage": [[420, "pydicom-uid-rawdatastorage"]], "pydicom.uid.RealWorldValueMappingStorage": [[421, "pydicom-uid-realworldvaluemappingstorage"]], "pydicom.uid.RespiratoryWaveformStorage": [[422, "pydicom-uid-respiratorywaveformstorage"]], "pydicom.uid.RoboticArmRadiationStorage": [[423, "pydicom-uid-roboticarmradiationstorage"]], "pydicom.uid.RoboticRadiationRecordStorage": [[424, "pydicom-uid-roboticradiationrecordstorage"]], "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage": [[425, "pydicom-uid-routinescalpelectroencephalogramwaveformstorage"]], "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo": [[426, "pydicom-uid-smptest211020uncompressedinterlacedactivevideo"]], "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo": [[427, "pydicom-uid-smptest211020uncompressedprogressiveactivevideo"]], "pydicom.uid.SMPTEST211030PCMDigitalAudio": [[428, "pydicom-uid-smptest211030pcmdigitalaudio"]], "pydicom.uid.SecondaryCaptureImageStorage": [[429, "pydicom-uid-secondarycaptureimagestorage"]], "pydicom.uid.SegmentationStorage": [[430, "pydicom-uid-segmentationstorage"]], "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage": [[431, "pydicom-uid-segmentedvolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.SimplifiedAdultEchoSRStorage": [[432, "pydicom-uid-simplifiedadultechosrstorage"]], "pydicom.uid.SleepElectroencephalogramWaveformStorage": [[433, "pydicom-uid-sleepelectroencephalogramwaveformstorage"]], "pydicom.uid.SpatialFiducialsStorage": [[434, "pydicom-uid-spatialfiducialsstorage"]], "pydicom.uid.SpatialRegistrationStorage": [[435, "pydicom-uid-spatialregistrationstorage"]], "pydicom.uid.SpectaclePrescriptionReportStorage": [[436, "pydicom-uid-spectacleprescriptionreportstorage"]], "pydicom.uid.StereometricRelationshipStorage": [[437, "pydicom-uid-stereometricrelationshipstorage"]], "pydicom.uid.SubjectiveRefractionMeasurementsStorage": [[438, "pydicom-uid-subjectiverefractionmeasurementsstorage"]], "pydicom.uid.SurfaceScanMeshStorage": [[439, "pydicom-uid-surfacescanmeshstorage"]], "pydicom.uid.SurfaceScanPointCloudStorage": [[440, "pydicom-uid-surfacescanpointcloudstorage"]], "pydicom.uid.SurfaceSegmentationStorage": [[441, "pydicom-uid-surfacesegmentationstorage"]], "pydicom.uid.TomotherapeuticRadiationRecordStorage": [[442, "pydicom-uid-tomotherapeuticradiationrecordstorage"]], "pydicom.uid.TomotherapeuticRadiationStorage": [[443, "pydicom-uid-tomotherapeuticradiationstorage"]], "pydicom.uid.TractographyResultsStorage": [[444, "pydicom-uid-tractographyresultsstorage"]], "pydicom.uid.TwelveLeadECGWaveformStorage": [[445, "pydicom-uid-twelveleadecgwaveformstorage"]], "pydicom.uid.UID": [[446, "pydicom-uid-uid"]], "pydicom.uid.UltrasoundImageStorage": [[447, "pydicom-uid-ultrasoundimagestorage"]], "pydicom.uid.UltrasoundMultiFrameImageStorage": [[448, "pydicom-uid-ultrasoundmultiframeimagestorage"]], "pydicom.uid.UncompressedTransferSyntaxes": [[449, "pydicom-uid-uncompressedtransfersyntaxes"]], "pydicom.uid.VLEndoscopicImageStorage": [[450, "pydicom-uid-vlendoscopicimagestorage"]], "pydicom.uid.VLMicroscopicImageStorage": [[451, "pydicom-uid-vlmicroscopicimagestorage"]], "pydicom.uid.VLPhotographicImageStorage": [[452, "pydicom-uid-vlphotographicimagestorage"]], "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage": [[453, "pydicom-uid-vlslidecoordinatesmicroscopicimagestorage"]], "pydicom.uid.VLWholeSlideMicroscopyImageStorage": [[454, "pydicom-uid-vlwholeslidemicroscopyimagestorage"]], "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage": [[455, "pydicom-uid-variablemodalitylutsoftcopypresentationstatestorage"]], "pydicom.uid.VideoEndoscopicImageStorage": [[456, "pydicom-uid-videoendoscopicimagestorage"]], "pydicom.uid.VideoMicroscopicImageStorage": [[457, "pydicom-uid-videomicroscopicimagestorage"]], "pydicom.uid.VideoPhotographicImageStorage": [[458, "pydicom-uid-videophotographicimagestorage"]], "pydicom.uid.VisualAcuityMeasurementsStorage": [[459, "pydicom-uid-visualacuitymeasurementsstorage"]], "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage": [[460, "pydicom-uid-volumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage": [[461, "pydicom-uid-widefieldophthalmicphotography3dcoordinatesimagestorage"]], "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage": [[462, "pydicom-uid-widefieldophthalmicphotographystereographicprojectionimagestorage"]], "pydicom.uid.XADefinedProcedureProtocolStorage": [[463, "pydicom-uid-xadefinedprocedureprotocolstorage"]], "pydicom.uid.XAPerformedProcedureProtocolStorage": [[464, "pydicom-uid-xaperformedprocedureprotocolstorage"]], "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage": [[465, "pydicom-uid-xaxrfgrayscalesoftcopypresentationstatestorage"]], "pydicom.uid.XRay3DAngiographicImageStorage": [[466, "pydicom-uid-xray3dangiographicimagestorage"]], "pydicom.uid.XRay3DCraniofacialImageStorage": [[467, "pydicom-uid-xray3dcraniofacialimagestorage"]], "pydicom.uid.XRayAngiographicImageStorage": [[468, "pydicom-uid-xrayangiographicimagestorage"]], "pydicom.uid.XRayRadiationDoseSRStorage": [[469, "pydicom-uid-xrayradiationdosesrstorage"]], "pydicom.uid.XRayRadiofluoroscopicImageStorage": [[470, "pydicom-uid-xrayradiofluoroscopicimagestorage"]], "pydicom.uid.generate_uid": [[471, "pydicom-uid-generate-uid"]], "pydicom.uid.register_transfer_syntax": [[472, "pydicom-uid-register-transfer-syntax"]], "pydicom.valuerep.DA": [[473, "pydicom-valuerep-da"]], "pydicom.valuerep.DS": [[474, "pydicom-valuerep-ds"]], "pydicom.valuerep.DSdecimal": [[475, "pydicom-valuerep-dsdecimal"]], "pydicom.valuerep.DSfloat": [[476, "pydicom-valuerep-dsfloat"]], "pydicom.valuerep.DT": [[477, "pydicom-valuerep-dt"]], "pydicom.valuerep.IS": [[478, "pydicom-valuerep-is"]], "pydicom.valuerep.ISfloat": [[479, "pydicom-valuerep-isfloat"]], "pydicom.valuerep.PersonName": [[480, "pydicom-valuerep-personname"]], "pydicom.valuerep.TM": [[481, "pydicom-valuerep-tm"]], "pydicom.valuerep.VR": [[482, "pydicom-valuerep-vr"]], "pydicom.valuerep.format_number_as_ds": [[483, "pydicom-valuerep-format-number-as-ds"]], "pydicom.valuerep.is_valid_ds": [[484, "pydicom-valuerep-is-valid-ds"]], "pydicom.values.convert_AE_string": [[485, "pydicom-values-convert-ae-string"]], "pydicom.values.convert_ATvalue": [[486, "pydicom-values-convert-atvalue"]], "pydicom.values.convert_DA_string": [[487, "pydicom-values-convert-da-string"]], "pydicom.values.convert_DS_string": [[488, "pydicom-values-convert-ds-string"]], "pydicom.values.convert_DT_string": [[489, "pydicom-values-convert-dt-string"]], "pydicom.values.convert_IS_string": [[490, "pydicom-values-convert-is-string"]], "pydicom.values.convert_OBvalue": [[491, "pydicom-values-convert-obvalue"]], "pydicom.values.convert_OWvalue": [[492, "pydicom-values-convert-owvalue"]], "pydicom.values.convert_PN": [[493, "pydicom-values-convert-pn"]], "pydicom.values.convert_SQ": [[494, "pydicom-values-convert-sq"]], "pydicom.values.convert_TM_string": [[495, "pydicom-values-convert-tm-string"]], "pydicom.values.convert_UI": [[496, "pydicom-values-convert-ui"]], "pydicom.values.convert_UN": [[497, "pydicom-values-convert-un"]], "pydicom.values.convert_UR_string": [[498, "pydicom-values-convert-ur-string"]], "pydicom.values.convert_numbers": [[499, "pydicom-values-convert-numbers"]], "pydicom.values.convert_single_string": [[500, "pydicom-values-convert-single-string"]], "pydicom.values.convert_string": [[501, "pydicom-values-convert-string"]], "pydicom.values.convert_tag": [[502, "pydicom-values-convert-tag"]], "pydicom.values.convert_text": [[503, "pydicom-values-convert-text"]], "pydicom.values.convert_value": [[504, "pydicom-values-convert-value"]], "pydicom.values.multi_string": [[505, "pydicom-values-multi-string"]], "pydicom.waveforms.numpy_handler": [[506, "module-pydicom.waveforms.numpy_handler"]], "Bulk Data Handlers": [[507, "bulk-data-handlers"]], "Pixel Data Utilities": [[507, "pixel-data-utilities"], [512, "pixel-data-utilities"]], "Pixel Data Handlers (pydicom.pixel_data_handlers)": [[508, "pixel-data-handlers-pydicom-pixel-data-handlers"]], "Miscellaneous (pydicom.misc)": [[510, "miscellaneous-pydicom-misc"]], "Overlay Data Handling (pydicom.overlays)": [[511, "overlay-data-handling-pydicom-overlays"]], "Pixel Data (pydicom.pixels)": [[512, "pixel-data-pydicom-pixels"]], "Pixel Data Decoders (pydicom.pixels.decoders)": [[513, "pixel-data-decoders-pydicom-pixels-decoders"]], "UID Definitions and Utilities (pydicom.uid)": [[514, "uid-definitions-and-utilities-pydicom-uid"]], "Transfer Syntax UIDs": [[514, "transfer-syntax-uids"]], "Transfer Syntax Lists": [[514, "transfer-syntax-lists"]], "UID Utilities": [[514, "uid-utilities"]], "Storage SOP Class UIDs": [[514, "storage-sop-class-uids"]], "Waveform Data Handlers (pydicom.waveforms)": [[515, "waveform-data-handlers-pydicom-waveforms"]], "Release notes": [[516, "release-notes"]], "Version 3.0.0": [[516, "version-3-0-0"], [537, "version-3-0-0"]], "Changes": [[516, "changes"], [516, "id1"], [516, "id5"], [516, "id8"], [527, "changes"], [528, "changes"], [529, "changes"], [530, "changes"], [532, "changes"], [534, "changes"], [535, "changes"], [536, "changes"], [537, "changes"]], "Removals": [[516, "removals"], [537, "removals"]], "Enhancements": [[516, "enhancements"], [516, "id2"], [516, "id6"], [516, "id9"], [523, "enhancements"], [524, "enhancements"], [526, "enhancements"], [527, "enhancements"], [528, "enhancements"], [529, "enhancements"], [531, "enhancements"], [532, "enhancements"], [534, "enhancements"], [535, "enhancements"], [536, "enhancements"], [537, "enhancements"]], "Fixes": [[516, "fixes"], [516, "id3"], [516, "id7"], [516, "id10"], [516, "id11"], [525, "fixes"], [526, "fixes"], [527, "fixes"], [528, "fixes"], [529, "fixes"], [530, "fixes"], [531, "fixes"], [532, "fixes"], [533, "fixes"], [534, "fixes"], [535, "fixes"], [536, "fixes"], [537, "fixes"]], "Deprecations": [[516, "deprecations"], [537, "deprecations"]], "Pydicom Internals": [[516, "pydicom-internals"], [516, "id4"], [536, "pydicom-internals"], [537, "pydicom-internals"]], "Version 2.4.0": [[516, "version-2-4-0"], [536, "version-2-4-0"]], "Version 2.3.0": [[516, "version-2-3-0"], [535, "version-2-3-0"]], "Version 2.2.0": [[516, "version-2-2-0"], [534, "version-2-2-0"]], "Version 2.1.1": [[516, "version-2-1-1"], [533, "version-2-1-1"]], "Version 2.1.0": [[516, "version-2-1-0"], [532, "version-2-1-0"]], "Changelog": [[516, "changelog"], [516, "id12"], [516, "id13"], [516, "id14"], [516, "id15"], [516, "id16"], [516, "id17"], [516, "id18"], [516, "id19"], [516, "id20"], [516, "id21"], [516, "id22"], [516, "id23"], [516, "id24"], [516, "id25"], [516, "id26"], [517, "changelog"], [518, "changelog"], [519, "changelog"], [520, "changelog"], [521, "changelog"], [522, "changelog"], [523, "changelog"], [524, "changelog"], [525, "changelog"], [526, "changelog"], [527, "changelog"], [528, "changelog"], [529, "changelog"], [530, "changelog"], [531, "changelog"], [532, "changelog"]], "Version 2.0.0": [[516, "version-2-0-0"], [531, "version-2-0-0"]], "Version 1.4.1": [[516, "version-1-4-1"], [530, "version-1-4-1"]], "Version 1.4.0": [[516, "version-1-4-0"], [529, "version-1-4-0"]], "Version 1.3.0": [[516, "version-1-3-0"], [528, "version-1-3-0"]], "Documentation": [[516, "documentation"], [528, "documentation"]], "Version 1.2.0": [[516, "version-1-2-0"], [527, "version-1-2-0"]], "Version 1.1.0": [[516, "version-1-1-0"], [526, "version-1-1-0"]], "Other": [[516, "other"], [517, "other"], [518, "other"], [520, "other"], [521, "other"], [526, "other"]], "Version 1.0.0": [[516, "version-1-0-0"], [525, "version-1-0-0"]], "Version 0.9.9": [[516, "version-0-9-9"], [524, "version-0-9-9"]], "Version 0.9.8": [[516, "version-0-9-8"], [523, "version-0-9-8"]], "Version 0.9.7": [[516, "version-0-9-7"], [522, "version-0-9-7"]], "Version 0.9.6": [[516, "version-0-9-6"], [521, "version-0-9-6"]], "Version 0.9.5": [[516, "version-0-9-5"], [520, "version-0-9-5"]], "Version 0.9.4": [[516, "version-0-9-4"], [519, "version-0-9-4"]], "Version 0.9.3": [[516, "version-0-9-3"], [518, "version-0-9-3"]], "Version 0.9.2": [[516, "version-0-9-2"], [517, "version-0-9-2"]], "Major changes": [[517, "major-changes"], [518, "major-changes"], [521, "major-changes"], [522, "major-changes"], [523, "major-changes"], [525, "major-changes"]], "Other Enhancements": [[517, "other-enhancements"], [518, "other-enhancements"], [522, "other-enhancements"]], "Bug Fixes": [[517, "bug-fixes"], [518, "bug-fixes"]], "Major changes/additions in this version": [[519, "major-changes-additions-in-this-version"]], "Other changes and bug fixes": [[519, "other-changes-and-bug-fixes"]], "Major fixes in this release": [[520, "major-fixes-in-this-release"]], "Other fixes in this release": [[520, "other-fixes-in-this-release"]], "New \u2018Contrib\u2019 files": [[520, "new-contrib-files"]], "Bug fixes": [[521, "bug-fixes"], [522, "bug-fixes"], [523, "bug-fixes"]], "Contrib file changes": [[523, "contrib-file-changes"], [524, "contrib-file-changes"]], "Other Contributors": [[524, "other-contributors"]], "Other enhancements": [[525, "other-enhancements"]], "Infrastructure": [[525, "infrastructure"]], "Contributing to pydicom": [[539, "contributing-to-pydicom"]], "Contributing a source code change": [[540, "contributing-a-source-code-change"]], "Download the current source code": [[540, "download-the-current-source-code"]], "(Optional) Install required libraries": [[540, "optional-install-required-libraries"]], "Install pytest and run the test suite": [[540, "install-pytest-and-run-the-test-suite"]], "Create a new branch": [[540, "create-a-new-branch"], [541, "create-a-new-branch"]], "Write tests for your changes": [[540, "write-tests-for-your-changes"]], "Make a code change and document it": [[540, "make-a-code-change-and-document-it"]], "Preview your changes": [[540, "preview-your-changes"]], "Commit your changes and make a pull request": [[540, "commit-your-changes-and-make-a-pull-request"], [541, "commit-your-changes-and-make-a-pull-request"]], "What happens next?": [[540, "what-happens-next"], [541, "what-happens-next"]], "Contributing a documentation change": [[541, "contributing-a-documentation-change"]], "Download the documentation": [[541, "download-the-documentation"]], "Build and preview the documentation": [[541, "build-and-preview-the-documentation"]], "Make a change to the documentation": [[541, "make-a-change-to-the-documentation"]], "Dataset basics: read, access, modify, write": [[542, "dataset-basics-read-access-modify-write"]], "Getting the path to the example dataset": [[542, "getting-the-path-to-the-example-dataset"]], "Reading": [[542, "reading"]], "Viewing and accessing": [[542, "viewing-and-accessing"]], "Elements": [[542, "elements"]], "Sequences": [[542, "sequences"], [542, "id1"]], "file_meta": [[542, "file-meta"]], "Modifying": [[542, "modifying"]], "Modifying elements": [[542, "modifying-elements"]], "Adding elements": [[542, "adding-elements"]], "Any category": [[542, "any-category"]], "Standard elements": [[542, "standard-elements"]], "Deleting elements": [[542, "deleting-elements"]], "Writing": [[542, "writing"]], "Next steps": [[542, "next-steps"]], "Introduction to JSON support": [[543, "introduction-to-json-support"]], "Converting a dataset into JSON format": [[543, "converting-a-dataset-into-json-format"]], "Creating a dataset from JSON": [[543, "creating-a-dataset-from-json"]], "Working with large binary data": [[543, "working-with-large-binary-data"]], "DICOM File-sets and DICOMDIR": [[544, "dicom-file-sets-and-dicomdir"]], "The DICOM File-set": [[544, "the-dicom-file-set"]], "The DICOMDIR file": [[544, "the-dicomdir-file"]], "FileSet": [[544, "fileset"]], "Loading existing File-sets": [[544, "loading-existing-file-sets"]], "Creating a new File-set": [[544, "creating-a-new-file-set"]], "Modifying a File-set": [[544, "modifying-a-file-set"]], "FileSet and staging": [[544, "fileset-and-staging"]], "Adding SOP instances": [[544, "adding-sop-instances"]], "Removing instances": [[544, "removing-instances"]], "Applying the changes": [[544, "applying-the-changes"]], "Conclusion": [[544, "conclusion"]], "Tutorials": [[545, "tutorials"]], "How to install pydicom": [[546, "how-to-install-pydicom"]], "Install the official release": [[546, "install-the-official-release"]], "Install using pip": [[546, "install-using-pip"]], "Install using conda": [[546, "install-using-conda"]], "Downloading example/test DICOM files": [[546, "downloading-example-test-dicom-files"]], "Install the optional libraries": [[546, "install-the-optional-libraries"]], "Installing Pillow": [[546, "installing-pillow"]], "Installing pyjpegls": [[546, "installing-pyjpegls"]], "Installing GDCM": [[546, "installing-gdcm"]], "Installing pylibjpeg": [[546, "installing-pylibjpeg"]], "Install the development version": [[546, "install-the-development-version"]], "Encapsulating data compressed by third-party packages": [[547, "encapsulating-data-compressed-by-third-party-packages"]], "Structured Reporting": [[548, "structured-reporting"]], "Waveforms": [[549, "waveforms"]], "Waveforms in DICOM": [[549, "waveforms-in-dicom"]], "Decoding Waveform Data": [[549, "decoding-waveform-data"]], "Encoding Waveform Data": [[549, "encoding-waveform-data"]]}, "indexentries": {"settings (class in pydicom.config)": [[55, "pydicom.config.Settings"]], "infer_sq_for_un_vr (pydicom.config.settings property)": [[55, "pydicom.config.Settings.infer_sq_for_un_vr"]], "reading_validation_mode (pydicom.config.settings property)": [[55, "pydicom.config.Settings.reading_validation_mode"]], "writing_validation_mode (pydicom.config.settings property)": [[55, "pydicom.config.Settings.writing_validation_mode"]], "module": [[67, "module-pydicom.encoders"], [208, "module-pydicom.overlays.numpy_handler"], [216, "module-pydicom.pixel_data_handlers.gdcm_handler"], [217, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"], [218, "module-pydicom.pixel_data_handlers.numpy_handler"], [219, "module-pydicom.pixel_data_handlers.pillow_handler"], [220, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"], [221, "module-pydicom.pixel_data_handlers.rle_handler"], [222, "module-pydicom.pixel_data_handlers.util"], [506, "module-pydicom.waveforms.numpy_handler"], [508, "module-pydicom.pixel_data_handlers"], [509, "module-pydicom"], [511, "module-pydicom.overlays"], [515, "module-pydicom.waveforms"]], "pydicom.encoders": [[67, "module-pydicom.encoders"]], "convert_encodings() (in module pydicom.charset)": [[76, "pydicom.charset.convert_encodings"]], "decode_bytes() (in module pydicom.charset)": [[77, "pydicom.charset.decode_bytes"]], "decode_element() (in module pydicom.charset)": [[78, "pydicom.charset.decode_element"]], "encode_string() (in module pydicom.charset)": [[79, "pydicom.charset.encode_string"]], "apply_j2k_corrections (in module pydicom.config)": [[80, "pydicom.config.APPLY_J2K_CORRECTIONS"]], "ds_decimal() (in module pydicom.config)": [[81, "pydicom.config.DS_decimal"]], "ds_numpy() (in module pydicom.config)": [[82, "pydicom.config.DS_numpy"]], "ignore (in module pydicom.config)": [[83, "pydicom.config.IGNORE"]], "invalid_keyword_behavior (in module pydicom.config)": [[84, "pydicom.config.INVALID_KEYWORD_BEHAVIOR"]], "invalid_key_behavior (in module pydicom.config)": [[85, "pydicom.config.INVALID_KEY_BEHAVIOR"]], "raise (in module pydicom.config)": [[86, "pydicom.config.RAISE"]], "warn (in module pydicom.config)": [[87, "pydicom.config.WARN"]], "allow_ds_float (in module pydicom.config)": [[88, "pydicom.config.allow_DS_float"]], "assume_implicit_vr_switch (in module pydicom.config)": [[89, "pydicom.config.assume_implicit_vr_switch"]], "convert_wrong_length_to_un (in module pydicom.config)": [[90, "pydicom.config.convert_wrong_length_to_UN"]], "data_element_callback (in module pydicom.config)": [[91, "pydicom.config.data_element_callback"]], "data_element_callback_kwargs (in module pydicom.config)": [[92, "pydicom.config.data_element_callback_kwargs"]], "datetime_conversion (in module pydicom.config)": [[93, "pydicom.config.datetime_conversion"]], "debug() (in module pydicom.config)": [[94, "pydicom.config.debug"]], "enforce_valid_values (in module pydicom.config)": [[95, "pydicom.config.enforce_valid_values"]], "future_behavior() (in module pydicom.config)": [[96, "pydicom.config.future_behavior"]], "pixel_data_handlers (in module pydicom.config)": [[97, "pydicom.config.pixel_data_handlers"]], "reset_data_element_callback() (in module pydicom.config)": [[98, "pydicom.config.reset_data_element_callback"]], "settings (in module pydicom.config)": [[99, "pydicom.config.settings"]], "show_file_meta (in module pydicom.config)": [[100, "pydicom.config.show_file_meta"]], "use_ds_decimal (in module pydicom.config)": [[101, "pydicom.config.use_DS_decimal"]], "use_ds_numpy (in module pydicom.config)": [[102, "pydicom.config.use_DS_numpy"]], "use_is_numpy (in module pydicom.config)": [[103, "pydicom.config.use_IS_numpy"]], "get_charset_files() (in module pydicom.data)": [[104, "pydicom.data.get_charset_files"]], "get_palette_files() (in module pydicom.data)": [[105, "pydicom.data.get_palette_files"]], "get_testdata_file() (in module pydicom.data)": [[106, "pydicom.data.get_testdata_file"]], "get_testdata_files() (in module pydicom.data)": [[107, "pydicom.data.get_testdata_files"]], "add_dict_entries() (in module pydicom.datadict)": [[108, "pydicom.datadict.add_dict_entries"]], "add_dict_entry() (in module pydicom.datadict)": [[109, "pydicom.datadict.add_dict_entry"]], "add_private_dict_entries() (in module pydicom.datadict)": [[110, "pydicom.datadict.add_private_dict_entries"]], "add_private_dict_entry() (in module pydicom.datadict)": [[111, "pydicom.datadict.add_private_dict_entry"]], "dictionary_vm() (in module pydicom.datadict)": [[112, "pydicom.datadict.dictionary_VM"]], "dictionary_vr() (in module pydicom.datadict)": [[113, "pydicom.datadict.dictionary_VR"]], "dictionary_description() (in module pydicom.datadict)": [[114, "pydicom.datadict.dictionary_description"]], "dictionary_has_tag() (in module pydicom.datadict)": [[115, "pydicom.datadict.dictionary_has_tag"]], "dictionary_is_retired() (in module pydicom.datadict)": [[116, "pydicom.datadict.dictionary_is_retired"]], "dictionary_keyword() (in module pydicom.datadict)": [[117, "pydicom.datadict.dictionary_keyword"]], "get_entry() (in module pydicom.datadict)": [[118, "pydicom.datadict.get_entry"]], "get_private_entry() (in module pydicom.datadict)": [[119, "pydicom.datadict.get_private_entry"]], "keyword_for_tag() (in module pydicom.datadict)": [[120, "pydicom.datadict.keyword_for_tag"]], "mask_match() (in module pydicom.datadict)": [[121, "pydicom.datadict.mask_match"]], "private_dictionary_vm() (in module pydicom.datadict)": [[122, "pydicom.datadict.private_dictionary_VM"]], "private_dictionary_vr() (in module pydicom.datadict)": [[123, "pydicom.datadict.private_dictionary_VR"]], "private_dictionary_description() (in module pydicom.datadict)": [[124, "pydicom.datadict.private_dictionary_description"]], "repeater_has_keyword() (in module pydicom.datadict)": [[125, "pydicom.datadict.repeater_has_keyword"]], "repeater_has_tag() (in module pydicom.datadict)": [[126, "pydicom.datadict.repeater_has_tag"]], "tag_for_keyword() (in module pydicom.datadict)": [[127, "pydicom.datadict.tag_for_keyword"]], "dataelement (class in pydicom.dataelem)": [[128, "pydicom.dataelem.DataElement"]], "vm (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.VM"]], "vr (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.VR"]], "__init__() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.__init__"]], "clear() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.clear"]], "descripwidth (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.descripWidth"]], "empty_value (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.empty_value"]], "from_json() (pydicom.dataelem.dataelement class method)": [[128, "pydicom.dataelem.DataElement.from_json"]], "is_empty (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.is_empty"]], "is_private (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.is_private"]], "is_retired (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.is_retired"]], "is_undefined_length (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.is_undefined_length"]], "keyword (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.keyword"]], "maxbytestodisplay (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.maxBytesToDisplay"]], "name (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.name"]], "repval (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.repval"]], "showvr (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.showVR"]], "tag (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.tag"]], "to_json() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.to_json"]], "to_json_dict() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.to_json_dict"]], "validate() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.validate"]], "value (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.value"]], "dataelement_from_raw() (in module pydicom.dataelem)": [[129, "pydicom.dataelem.DataElement_from_raw"]], "rawdataelement (class in pydicom.dataelem)": [[130, "pydicom.dataelem.RawDataElement"]], "vr (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.VR"]], "__init__() (pydicom.dataelem.rawdataelement method)": [[130, "pydicom.dataelem.RawDataElement.__init__"]], "is_implicit_vr (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.is_implicit_VR"]], "is_little_endian (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.is_little_endian"]], "is_raw (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.is_raw"]], "length (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.length"]], "tag (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.tag"]], "value (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.value"]], "value_tell (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.value_tell"]], "dataset (class in pydicom.dataset)": [[131, "pydicom.dataset.Dataset"]], "__init__() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.__init__"]], "add() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.add"]], "add_new() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.add_new"]], "add_new_private() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.add_new_private"]], "clear() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.clear"]], "compress() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.compress"]], "convert_pixel_data() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.convert_pixel_data"]], "copy() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.copy"]], "data_element() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.data_element"]], "decode() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.decode"]], "decompress() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.decompress"]], "default_element_format (pydicom.dataset.dataset attribute)": [[131, "pydicom.dataset.Dataset.default_element_format"]], "default_sequence_element_format (pydicom.dataset.dataset attribute)": [[131, "pydicom.dataset.Dataset.default_sequence_element_format"]], "dir() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.dir"]], "elements() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.elements"]], "ensure_file_meta() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.ensure_file_meta"]], "formatted_lines() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.formatted_lines"]], "from_json() (pydicom.dataset.dataset class method)": [[131, "pydicom.dataset.Dataset.from_json"]], "get() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.get"]], "get_item() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.get_item"]], "get_private_item() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.get_private_item"]], "group_dataset() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.group_dataset"]], "indent_chars (pydicom.dataset.dataset attribute)": [[131, "pydicom.dataset.Dataset.indent_chars"]], "is_implicit_vr (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.is_little_endian"]], "is_original_encoding (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.is_original_encoding"]], "items() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.items"]], "iterall() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.iterall"]], "keys() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.keys"]], "original_character_set (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.original_character_set"]], "original_encoding (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.original_encoding"]], "overlay_array() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.overlay_array"]], "pixel_array (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.pixel_array"]], "pop() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.pop"]], "popitem() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.popitem"]], "private_block() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.private_block"]], "private_creators() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.private_creators"]], "read_encoding (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.read_encoding"]], "read_implicit_vr (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.read_implicit_vr"]], "read_little_endian (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.read_little_endian"]], "remove_private_tags() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.remove_private_tags"]], "save_as() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.save_as"]], "set_original_encoding() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.set_original_encoding"]], "setdefault() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.setdefault"]], "to_json() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.to_json"]], "to_json_dict() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.to_json_dict"]], "top() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.top"]], "trait_names() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.trait_names"]], "update() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.update"]], "values() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.values"]], "walk() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.walk"]], "waveform_array() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.waveform_array"]], "filedataset (class in pydicom.dataset)": [[132, "pydicom.dataset.FileDataset"]], "__init__() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.__init__"]], "file_meta (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.file_meta"]], "filename (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.filename"]], "fileobj_type (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.fileobj_type"]], "is_implicit_vr (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.is_little_endian"]], "preamble (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.preamble"]], "timestamp (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.timestamp"]], "filemetadataset (class in pydicom.dataset)": [[133, "pydicom.dataset.FileMetaDataset"]], "__init__() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.__init__"]], "validate() (pydicom.dataset.filemetadataset static method)": [[133, "pydicom.dataset.FileMetaDataset.validate"]], "privateblock (class in pydicom.dataset)": [[134, "pydicom.dataset.PrivateBlock"]], "__init__() (pydicom.dataset.privateblock method)": [[134, "pydicom.dataset.PrivateBlock.__init__"]], "add_new() (pydicom.dataset.privateblock method)": [[134, "pydicom.dataset.PrivateBlock.add_new"]], "block_start (pydicom.dataset.privateblock attribute)": [[134, "pydicom.dataset.PrivateBlock.block_start"]], "dataset (pydicom.dataset.privateblock attribute)": [[134, "pydicom.dataset.PrivateBlock.dataset"]], "get_tag() (pydicom.dataset.privateblock method)": [[134, "pydicom.dataset.PrivateBlock.get_tag"]], "group (pydicom.dataset.privateblock attribute)": [[134, "pydicom.dataset.PrivateBlock.group"]], "private_creator (pydicom.dataset.privateblock attribute)": [[134, "pydicom.dataset.PrivateBlock.private_creator"]], "validate_file_meta() (in module pydicom.dataset)": [[135, "pydicom.dataset.validate_file_meta"]], "decode_data_sequence() (in module pydicom.encaps)": [[136, "pydicom.encaps.decode_data_sequence"]], "defragment_data() (in module pydicom.encaps)": [[137, "pydicom.encaps.defragment_data"]], "encapsulate() (in module pydicom.encaps)": [[138, "pydicom.encaps.encapsulate"]], "encapsulate_extended() (in module pydicom.encaps)": [[139, "pydicom.encaps.encapsulate_extended"]], "fragment_frame() (in module pydicom.encaps)": [[140, "pydicom.encaps.fragment_frame"]], "generate_fragmented_frames() (in module pydicom.encaps)": [[141, "pydicom.encaps.generate_fragmented_frames"]], "generate_fragments() (in module pydicom.encaps)": [[142, "pydicom.encaps.generate_fragments"]], "generate_frames() (in module pydicom.encaps)": [[143, "pydicom.encaps.generate_frames"]], "generate_pixel_data() (in module pydicom.encaps)": [[144, "pydicom.encaps.generate_pixel_data"]], "generate_pixel_data_fragment() (in module pydicom.encaps)": [[145, "pydicom.encaps.generate_pixel_data_fragment"]], "generate_pixel_data_frame() (in module pydicom.encaps)": [[146, "pydicom.encaps.generate_pixel_data_frame"]], "get_frame() (in module pydicom.encaps)": [[147, "pydicom.encaps.get_frame"]], "get_frame_offsets() (in module pydicom.encaps)": [[148, "pydicom.encaps.get_frame_offsets"]], "itemize_fragment() (in module pydicom.encaps)": [[149, "pydicom.encaps.itemize_fragment"]], "itemize_frame() (in module pydicom.encaps)": [[150, "pydicom.encaps.itemize_frame"]], "parse_basic_offsets() (in module pydicom.encaps)": [[151, "pydicom.encaps.parse_basic_offsets"]], "parse_fragments() (in module pydicom.encaps)": [[152, "pydicom.encaps.parse_fragments"]], "read_item() (in module pydicom.encaps)": [[153, "pydicom.encaps.read_item"]], "rlelosslessencoder (in module pydicom.encoders)": [[154, "pydicom.encoders.RLELosslessEncoder"]], "encoder (class in pydicom.encoders.base)": [[155, "pydicom.encoders.base.Encoder"]], "uid (pydicom.encoders.base.encoder property)": [[155, "pydicom.encoders.base.Encoder.UID"]], "__init__() (pydicom.encoders.base.encoder method)": [[155, "pydicom.encoders.base.Encoder.__init__"]], "add_plugin() (pydicom.encoders.base.encoder method)": [[155, "pydicom.encoders.base.Encoder.add_plugin"]], "encode() (pydicom.encoders.base.encoder method)": [[155, "pydicom.encoders.base.Encoder.encode"]], "is_available (pydicom.encoders.base.encoder property)": [[155, "pydicom.encoders.base.Encoder.is_available"]], "iter_encode() (pydicom.encoders.base.encoder method)": [[155, "pydicom.encoders.base.Encoder.iter_encode"]], "kwargs_from_ds() (pydicom.encoders.base.encoder static method)": [[155, "pydicom.encoders.base.Encoder.kwargs_from_ds"]], "missing_dependencies (pydicom.encoders.base.encoder property)": [[155, "pydicom.encoders.base.Encoder.missing_dependencies"]], "name (pydicom.encoders.base.encoder property)": [[155, "pydicom.encoders.base.Encoder.name"]], "remove_plugin() (pydicom.encoders.base.encoder method)": [[155, "pydicom.encoders.base.Encoder.remove_plugin"]], "get_encoder() (in module pydicom.encoders)": [[156, "pydicom.encoders.get_encoder"]], "invaliddicomerror": [[157, "pydicom.errors.InvalidDicomError"]], "dicombytesio (class in pydicom.filebase)": [[158, "pydicom.filebase.DicomBytesIO"]], "__init__() (pydicom.filebase.dicombytesio method)": [[158, "pydicom.filebase.DicomBytesIO.__init__"]], "dicomfile() (in module pydicom.filebase)": [[159, "pydicom.filebase.DicomFile"]], "dicomfilelike (class in pydicom.filebase)": [[160, "pydicom.filebase.DicomFileLike"]], "__init__() (pydicom.filebase.dicomfilelike method)": [[160, "pydicom.filebase.DicomFileLike.__init__"]], "dicomio (class in pydicom.filebase)": [[161, "pydicom.filebase.DicomIO"]], "__init__() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.__init__"]], "close() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.close"]], "is_implicit_vr (pydicom.filebase.dicomio property)": [[161, "pydicom.filebase.DicomIO.is_implicit_VR"]], "is_little_endian (pydicom.filebase.dicomio property)": [[161, "pydicom.filebase.DicomIO.is_little_endian"]], "name (pydicom.filebase.dicomio property)": [[161, "pydicom.filebase.DicomIO.name"]], "parent (pydicom.filebase.dicomio property)": [[161, "pydicom.filebase.DicomIO.parent"]], "read() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.read"]], "read_ul() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.read_UL"]], "read_us() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.read_US"]], "read_exact() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.read_exact"]], "read_tag() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.read_tag"]], "seek() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.seek"]], "tell() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.tell"]], "write() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.write"]], "write_ul() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.write_UL"]], "write_us() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.write_US"]], "write_tag() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.write_tag"]], "data_element_generator() (in module pydicom.filereader)": [[162, "pydicom.filereader.data_element_generator"]], "data_element_offset_to_value() (in module pydicom.filereader)": [[163, "pydicom.filereader.data_element_offset_to_value"]], "dcmread() (in module pydicom.filereader)": [[164, "pydicom.filereader.dcmread"]], "read_dataset() (in module pydicom.filereader)": [[165, "pydicom.filereader.read_dataset"]], "read_deferred_data_element() (in module pydicom.filereader)": [[166, "pydicom.filereader.read_deferred_data_element"]], "read_file_meta_info() (in module pydicom.filereader)": [[167, "pydicom.filereader.read_file_meta_info"]], "read_partial() (in module pydicom.filereader)": [[168, "pydicom.filereader.read_partial"]], "read_preamble() (in module pydicom.filereader)": [[169, "pydicom.filereader.read_preamble"]], "read_sequence() (in module pydicom.filereader)": [[170, "pydicom.filereader.read_sequence"]], "read_sequence_item() (in module pydicom.filereader)": [[171, "pydicom.filereader.read_sequence_item"]], "directory_recorders (in module pydicom.fileset)": [[172, "pydicom.fileset.DIRECTORY_RECORDERS"]], "fileid (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.FileID"]], "fileinstance (class in pydicom.fileset)": [[173, "pydicom.fileset.FileInstance"]], "sopclassuid (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.SOPClassUID"]], "sopinstanceuid (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.SOPInstanceUID"]], "transfersyntaxuid (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.TransferSyntaxUID"]], "__init__() (pydicom.fileset.fileinstance method)": [[173, "pydicom.fileset.FileInstance.__init__"]], "file_set (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.file_set"]], "for_addition (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.for_addition"]], "for_moving (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.for_moving"]], "for_removal (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.for_removal"]], "is_private (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.is_private"]], "is_staged (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.is_staged"]], "load() (pydicom.fileset.fileinstance method)": [[173, "pydicom.fileset.FileInstance.load"]], "node (pydicom.fileset.fileinstance attribute)": [[173, "pydicom.fileset.FileInstance.node"]], "path (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.path"]], "fileset (class in pydicom.fileset)": [[174, "pydicom.fileset.FileSet"]], "id (pydicom.fileset.fileset property)": [[174, "pydicom.fileset.FileSet.ID"]], "uid (pydicom.fileset.fileset property)": [[174, "pydicom.fileset.FileSet.UID"]], "__init__() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.__init__"]], "add() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.add"]], "add_custom() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.add_custom"]], "clear() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.clear"]], "copy() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.copy"]], "descriptor_character_set (pydicom.fileset.fileset property)": [[174, "pydicom.fileset.FileSet.descriptor_character_set"]], "descriptor_file_id (pydicom.fileset.fileset property)": [[174, "pydicom.fileset.FileSet.descriptor_file_id"]], "find() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.find"]], "find_values() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.find_values"]], "is_staged (pydicom.fileset.fileset property)": [[174, "pydicom.fileset.FileSet.is_staged"]], "load() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.load"]], "path (pydicom.fileset.fileset property)": [[174, "pydicom.fileset.FileSet.path"]], "remove() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.remove"]], "write() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.write"]], "recordnode (class in pydicom.fileset)": [[175, "pydicom.fileset.RecordNode"]], "__init__() (pydicom.fileset.recordnode method)": [[175, "pydicom.fileset.RecordNode.__init__"]], "add() (pydicom.fileset.recordnode method)": [[175, "pydicom.fileset.RecordNode.add"]], "ancestors (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.ancestors"]], "children (pydicom.fileset.recordnode attribute)": [[175, "pydicom.fileset.RecordNode.children"]], "component (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.component"]], "depth (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.depth"]], "file_set (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.file_set"]], "has_instance (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.has_instance"]], "index (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.index"]], "instance (pydicom.fileset.recordnode attribute)": [[175, "pydicom.fileset.RecordNode.instance"]], "is_root (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.is_root"]], "key (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.key"]], "next (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.next"]], "parent (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.parent"]], "prettify() (pydicom.fileset.recordnode method)": [[175, "pydicom.fileset.RecordNode.prettify"]], "previous (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.previous"]], "record_type (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.record_type"]], "remove() (pydicom.fileset.recordnode method)": [[175, "pydicom.fileset.RecordNode.remove"]], "reverse() (pydicom.fileset.recordnode method)": [[175, "pydicom.fileset.RecordNode.reverse"]], "root (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.root"]], "generate_filename() (in module pydicom.fileset)": [[176, "pydicom.fileset.generate_filename"]], "is_conformant_file_id() (in module pydicom.fileset)": [[177, "pydicom.fileset.is_conformant_file_id"]], "absorb_delimiter_item() (in module pydicom.fileutil)": [[178, "pydicom.fileutil.absorb_delimiter_item"]], "find_bytes() (in module pydicom.fileutil)": [[179, "pydicom.fileutil.find_bytes"]], "find_delimiter() (in module pydicom.fileutil)": [[180, "pydicom.fileutil.find_delimiter"]], "length_of_undefined_length() (in module pydicom.fileutil)": [[181, "pydicom.fileutil.length_of_undefined_length"]], "read_undefined_length_value() (in module pydicom.fileutil)": [[182, "pydicom.fileutil.read_undefined_length_value"]], "correct_ambiguous_vr() (in module pydicom.filewriter)": [[183, "pydicom.filewriter.correct_ambiguous_vr"]], "correct_ambiguous_vr_element() (in module pydicom.filewriter)": [[184, "pydicom.filewriter.correct_ambiguous_vr_element"]], "dcmwrite() (in module pydicom.filewriter)": [[185, "pydicom.filewriter.dcmwrite"]], "multi_string() (in module pydicom.filewriter)": [[186, "pydicom.filewriter.multi_string"]], "write_atvalue() (in module pydicom.filewriter)": [[187, "pydicom.filewriter.write_ATvalue"]], "write_da() (in module pydicom.filewriter)": [[188, "pydicom.filewriter.write_DA"]], "write_dt() (in module pydicom.filewriter)": [[189, "pydicom.filewriter.write_DT"]], "write_obvalue() (in module pydicom.filewriter)": [[190, "pydicom.filewriter.write_OBvalue"]], "write_owvalue() (in module pydicom.filewriter)": [[191, "pydicom.filewriter.write_OWvalue"]], "write_pn() (in module pydicom.filewriter)": [[192, "pydicom.filewriter.write_PN"]], "write_tm() (in module pydicom.filewriter)": [[193, "pydicom.filewriter.write_TM"]], "write_ui() (in module pydicom.filewriter)": [[194, "pydicom.filewriter.write_UI"]], "write_un() (in module pydicom.filewriter)": [[195, "pydicom.filewriter.write_UN"]], "write_data_element() (in module pydicom.filewriter)": [[196, "pydicom.filewriter.write_data_element"]], "write_dataset() (in module pydicom.filewriter)": [[197, "pydicom.filewriter.write_dataset"]], "write_file_meta_info() (in module pydicom.filewriter)": [[198, "pydicom.filewriter.write_file_meta_info"]], "write_number_string() (in module pydicom.filewriter)": [[199, "pydicom.filewriter.write_number_string"]], "write_numbers() (in module pydicom.filewriter)": [[200, "pydicom.filewriter.write_numbers"]], "write_sequence() (in module pydicom.filewriter)": [[201, "pydicom.filewriter.write_sequence"]], "write_sequence_item() (in module pydicom.filewriter)": [[202, "pydicom.filewriter.write_sequence_item"]], "write_string() (in module pydicom.filewriter)": [[203, "pydicom.filewriter.write_string"]], "write_text() (in module pydicom.filewriter)": [[204, "pydicom.filewriter.write_text"]], "is_dicom() (in module pydicom.misc)": [[205, "pydicom.misc.is_dicom"]], "size_in_bytes() (in module pydicom.misc)": [[206, "pydicom.misc.size_in_bytes"]], "multivalue (class in pydicom.multival)": [[207, "pydicom.multival.MultiValue"]], "__init__() (pydicom.multival.multivalue method)": [[207, "pydicom.multival.MultiValue.__init__"]], "get_expected_length() (in module pydicom.overlays.numpy_handler)": [[208, "pydicom.overlays.numpy_handler.get_expected_length"]], "get_overlay_array() (in module pydicom.overlays.numpy_handler)": [[208, "pydicom.overlays.numpy_handler.get_overlay_array"]], "is_available() (in module pydicom.overlays.numpy_handler)": [[208, "pydicom.overlays.numpy_handler.is_available"]], "pydicom.overlays.numpy_handler": [[208, "module-pydicom.overlays.numpy_handler"]], "reshape_overlay_array() (in module pydicom.overlays.numpy_handler)": [[208, "pydicom.overlays.numpy_handler.reshape_overlay_array"]], "apply_color_lut() (in module pydicom.pixel_data_handlers)": [[209, "pydicom.pixel_data_handlers.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers)": [[210, "pydicom.pixel_data_handlers.apply_modality_lut"]], "apply_rescale() (in module pydicom.pixel_data_handlers)": [[211, "pydicom.pixel_data_handlers.apply_rescale"]], "apply_voi() (in module pydicom.pixel_data_handlers)": [[212, "pydicom.pixel_data_handlers.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers)": [[213, "pydicom.pixel_data_handlers.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers)": [[214, "pydicom.pixel_data_handlers.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers)": [[215, "pydicom.pixel_data_handlers.convert_color_space"]], "create_data_element() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[216, "pydicom.pixel_data_handlers.gdcm_handler.create_data_element"]], "create_image() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[216, "pydicom.pixel_data_handlers.gdcm_handler.create_image"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[216, "pydicom.pixel_data_handlers.gdcm_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[216, "pydicom.pixel_data_handlers.gdcm_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[216, "pydicom.pixel_data_handlers.gdcm_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.gdcm_handler": [[216, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[216, "pydicom.pixel_data_handlers.gdcm_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[216, "pydicom.pixel_data_handlers.gdcm_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[217, "pydicom.pixel_data_handlers.jpeg_ls_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[217, "pydicom.pixel_data_handlers.jpeg_ls_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[217, "pydicom.pixel_data_handlers.jpeg_ls_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[217, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[217, "pydicom.pixel_data_handlers.jpeg_ls_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[217, "pydicom.pixel_data_handlers.jpeg_ls_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.numpy_handler)": [[218, "pydicom.pixel_data_handlers.numpy_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.numpy_handler)": [[218, "pydicom.pixel_data_handlers.numpy_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[218, "pydicom.pixel_data_handlers.numpy_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.numpy_handler": [[218, "module-pydicom.pixel_data_handlers.numpy_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[218, "pydicom.pixel_data_handlers.numpy_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.numpy_handler)": [[218, "pydicom.pixel_data_handlers.numpy_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pillow_handler)": [[219, "pydicom.pixel_data_handlers.pillow_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pillow_handler)": [[219, "pydicom.pixel_data_handlers.pillow_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[219, "pydicom.pixel_data_handlers.pillow_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pillow_handler": [[219, "module-pydicom.pixel_data_handlers.pillow_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[219, "pydicom.pixel_data_handlers.pillow_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pillow_handler)": [[219, "pydicom.pixel_data_handlers.pillow_handler.supports_transfer_syntax"]], "as_array() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[220, "pydicom.pixel_data_handlers.pylibjpeg_handler.as_array"]], "generate_frames() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[220, "pydicom.pixel_data_handlers.pylibjpeg_handler.generate_frames"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[220, "pydicom.pixel_data_handlers.pylibjpeg_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[220, "pydicom.pixel_data_handlers.pylibjpeg_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[220, "pydicom.pixel_data_handlers.pylibjpeg_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[220, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[220, "pydicom.pixel_data_handlers.pylibjpeg_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[220, "pydicom.pixel_data_handlers.pylibjpeg_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.rle_handler)": [[221, "pydicom.pixel_data_handlers.rle_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.rle_handler)": [[221, "pydicom.pixel_data_handlers.rle_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[221, "pydicom.pixel_data_handlers.rle_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.rle_handler": [[221, "module-pydicom.pixel_data_handlers.rle_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[221, "pydicom.pixel_data_handlers.rle_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.rle_handler)": [[221, "pydicom.pixel_data_handlers.rle_handler.supports_transfer_syntax"]], "apply_color_lut() (in module pydicom.pixel_data_handlers.util)": [[222, "pydicom.pixel_data_handlers.util.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers.util)": [[222, "pydicom.pixel_data_handlers.util.apply_modality_lut"]], "apply_voi() (in module pydicom.pixel_data_handlers.util)": [[222, "pydicom.pixel_data_handlers.util.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers.util)": [[222, "pydicom.pixel_data_handlers.util.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers.util)": [[222, "pydicom.pixel_data_handlers.util.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers.util)": [[222, "pydicom.pixel_data_handlers.util.convert_color_space"]], "dtype_corrected_for_endianness() (in module pydicom.pixel_data_handlers.util)": [[222, "pydicom.pixel_data_handlers.util.dtype_corrected_for_endianness"]], "expand_ybr422() (in module pydicom.pixel_data_handlers.util)": [[222, "pydicom.pixel_data_handlers.util.expand_ybr422"]], "get_expected_length() (in module pydicom.pixel_data_handlers.util)": [[222, "pydicom.pixel_data_handlers.util.get_expected_length"]], "get_image_pixel_ids() (in module pydicom.pixel_data_handlers.util)": [[222, "pydicom.pixel_data_handlers.util.get_image_pixel_ids"]], "get_j2k_parameters() (in module pydicom.pixel_data_handlers.util)": [[222, "pydicom.pixel_data_handlers.util.get_j2k_parameters"]], "get_nr_frames() (in module pydicom.pixel_data_handlers.util)": [[222, "pydicom.pixel_data_handlers.util.get_nr_frames"]], "pack_bits() (in module pydicom.pixel_data_handlers.util)": [[222, "pydicom.pixel_data_handlers.util.pack_bits"]], "pixel_dtype() (in module pydicom.pixel_data_handlers.util)": [[222, "pydicom.pixel_data_handlers.util.pixel_dtype"]], "pydicom.pixel_data_handlers.util": [[222, "module-pydicom.pixel_data_handlers.util"]], "reshape_pixel_array() (in module pydicom.pixel_data_handlers.util)": [[222, "pydicom.pixel_data_handlers.util.reshape_pixel_array"]], "unpack_bits() (in module pydicom.pixel_data_handlers.util)": [[222, "pydicom.pixel_data_handlers.util.unpack_bits"]], "decoderunner (class in pydicom.pixels.decoders.base)": [[223, "pydicom.pixels.decoders.base.DecodeRunner"]], "__init__() (pydicom.pixels.decoders.base.decoderunner method)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.__init__"]], "bits_allocated (pydicom.pixels.decoders.base.decoderunner property)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.bits_allocated"]], "bits_stored (pydicom.pixels.decoders.base.decoderunner property)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.bits_stored"]], "columns (pydicom.pixels.decoders.base.decoderunner property)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.columns"]], "decode() (pydicom.pixels.decoders.base.decoderunner method)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.decode"]], "del_option() (pydicom.pixels.decoders.base.decoderunner method)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.del_option"]], "extended_offsets (pydicom.pixels.decoders.base.decoderunner property)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.extended_offsets"]], "frame_length() (pydicom.pixels.decoders.base.decoderunner method)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.frame_length"]], "get_option() (pydicom.pixels.decoders.base.decoderunner method)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.get_option"]], "iter_decode() (pydicom.pixels.decoders.base.decoderunner method)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.iter_decode"]], "number_of_frames (pydicom.pixels.decoders.base.decoderunner property)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.number_of_frames"]], "options (pydicom.pixels.decoders.base.decoderunner property)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.options"]], "photometric_interpretation (pydicom.pixels.decoders.base.decoderunner property)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.photometric_interpretation"]], "pixel_dtype (pydicom.pixels.decoders.base.decoderunner property)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.pixel_dtype"]], "pixel_keyword (pydicom.pixels.decoders.base.decoderunner property)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.pixel_keyword"]], "pixel_representation (pydicom.pixels.decoders.base.decoderunner property)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.pixel_representation"]], "planar_configuration (pydicom.pixels.decoders.base.decoderunner property)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.planar_configuration"]], "process() (pydicom.pixels.decoders.base.decoderunner method)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.process"]], "reshape() (pydicom.pixels.decoders.base.decoderunner method)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.reshape"]], "rows (pydicom.pixels.decoders.base.decoderunner property)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.rows"]], "samples_per_pixel (pydicom.pixels.decoders.base.decoderunner property)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.samples_per_pixel"]], "set_decoders() (pydicom.pixels.decoders.base.decoderunner method)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.set_decoders"]], "set_option() (pydicom.pixels.decoders.base.decoderunner method)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.set_option"]], "set_options() (pydicom.pixels.decoders.base.decoderunner method)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.set_options"]], "set_source() (pydicom.pixels.decoders.base.decoderunner method)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.set_source"]], "src (pydicom.pixels.decoders.base.decoderunner property)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.src"]], "test_for() (pydicom.pixels.decoders.base.decoderunner method)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.test_for"]], "transfer_syntax (pydicom.pixels.decoders.base.decoderunner property)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.transfer_syntax"]], "validate_buffer() (pydicom.pixels.decoders.base.decoderunner method)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.validate_buffer"]], "validate_options() (pydicom.pixels.decoders.base.decoderunner method)": [[223, "pydicom.pixels.decoders.base.DecodeRunner.validate_options"]], "decoder (class in pydicom.pixels.decoders.base)": [[224, "pydicom.pixels.decoders.base.Decoder"]], "uid (pydicom.pixels.decoders.base.decoder property)": [[224, "pydicom.pixels.decoders.base.Decoder.UID"]], "__init__() (pydicom.pixels.decoders.base.decoder method)": [[224, "pydicom.pixels.decoders.base.Decoder.__init__"]], "add_plugin() (pydicom.pixels.decoders.base.decoder method)": [[224, "pydicom.pixels.decoders.base.Decoder.add_plugin"]], "as_array() (pydicom.pixels.decoders.base.decoder method)": [[224, "pydicom.pixels.decoders.base.Decoder.as_array"]], "as_buffer() (pydicom.pixels.decoders.base.decoder method)": [[224, "pydicom.pixels.decoders.base.Decoder.as_buffer"]], "is_available (pydicom.pixels.decoders.base.decoder property)": [[224, "pydicom.pixels.decoders.base.Decoder.is_available"]], "is_encapsulated (pydicom.pixels.decoders.base.decoder property)": [[224, "pydicom.pixels.decoders.base.Decoder.is_encapsulated"]], "is_native (pydicom.pixels.decoders.base.decoder property)": [[224, "pydicom.pixels.decoders.base.Decoder.is_native"]], "iter_array() (pydicom.pixels.decoders.base.decoder method)": [[224, "pydicom.pixels.decoders.base.Decoder.iter_array"]], "iter_buffer() (pydicom.pixels.decoders.base.decoder method)": [[224, "pydicom.pixels.decoders.base.Decoder.iter_buffer"]], "missing_dependencies (pydicom.pixels.decoders.base.decoder property)": [[224, "pydicom.pixels.decoders.base.Decoder.missing_dependencies"]], "name (pydicom.pixels.decoders.base.decoder property)": [[224, "pydicom.pixels.decoders.base.Decoder.name"]], "remove_plugin() (pydicom.pixels.decoders.base.decoder method)": [[224, "pydicom.pixels.decoders.base.Decoder.remove_plugin"]], "deflatedexplicitvrlittleendiandecoder (in module pydicom.pixels.decoders.base)": [[225, "pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder"]], "explicitvrbigendiandecoder (in module pydicom.pixels.decoders.base)": [[226, "pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder"]], "explicitvrlittleendiandecoder (in module pydicom.pixels.decoders.base)": [[227, "pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder"]], "implicitvrlittleendiandecoder (in module pydicom.pixels.decoders.base)": [[228, "pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder"]], "rlelosslessdecoder (in module pydicom.pixels.decoders.base)": [[229, "pydicom.pixels.decoders.base.RLELosslessDecoder"]], "sequence (class in pydicom.sequence)": [[230, "pydicom.sequence.Sequence"]], "__init__() (pydicom.sequence.sequence method)": [[230, "pydicom.sequence.Sequence.__init__"]], "extend() (pydicom.sequence.sequence method)": [[230, "pydicom.sequence.Sequence.extend"]], "basetag (class in pydicom.tag)": [[231, "pydicom.tag.BaseTag"]], "__init__() (pydicom.tag.basetag method)": [[231, "pydicom.tag.BaseTag.__init__"]], "elem (pydicom.tag.basetag property)": [[231, "pydicom.tag.BaseTag.elem"]], "element (pydicom.tag.basetag property)": [[231, "pydicom.tag.BaseTag.element"]], "group (pydicom.tag.basetag property)": [[231, "pydicom.tag.BaseTag.group"]], "is_private (pydicom.tag.basetag property)": [[231, "pydicom.tag.BaseTag.is_private"]], "is_private_creator (pydicom.tag.basetag property)": [[231, "pydicom.tag.BaseTag.is_private_creator"]], "json_key (pydicom.tag.basetag property)": [[231, "pydicom.tag.BaseTag.json_key"]], "private_creator (pydicom.tag.basetag property)": [[231, "pydicom.tag.BaseTag.private_creator"]], "tag() (in module pydicom.tag)": [[232, "pydicom.tag.Tag"]], "tupletag() (in module pydicom.tag)": [[233, "pydicom.tag.TupleTag"]], "tag_in_exception() (in module pydicom.tag)": [[234, "pydicom.tag.tag_in_exception"]], "acquisitioncontextsrstorage (in module pydicom.uid)": [[235, "pydicom.uid.AcquisitionContextSRStorage"]], "advancedblendingpresentationstatestorage (in module pydicom.uid)": [[236, "pydicom.uid.AdvancedBlendingPresentationStateStorage"]], "alltransfersyntaxes (in module pydicom.uid)": [[237, "pydicom.uid.AllTransferSyntaxes"]], "ambulatoryecgwaveformstorage (in module pydicom.uid)": [[238, "pydicom.uid.AmbulatoryECGWaveformStorage"]], "arterialpulsewaveformstorage (in module pydicom.uid)": [[239, "pydicom.uid.ArterialPulseWaveformStorage"]], "autorefractionmeasurementsstorage (in module pydicom.uid)": [[240, "pydicom.uid.AutorefractionMeasurementsStorage"]], "basicstructureddisplaystorage (in module pydicom.uid)": [[241, "pydicom.uid.BasicStructuredDisplayStorage"]], "basictextsrstorage (in module pydicom.uid)": [[242, "pydicom.uid.BasicTextSRStorage"]], "basicvoiceaudiowaveformstorage (in module pydicom.uid)": [[243, "pydicom.uid.BasicVoiceAudioWaveformStorage"]], "blendingsoftcopypresentationstatestorage (in module pydicom.uid)": [[244, "pydicom.uid.BlendingSoftcopyPresentationStateStorage"]], "bodypositionwaveformstorage (in module pydicom.uid)": [[245, "pydicom.uid.BodyPositionWaveformStorage"]], "breastprojectionxrayimagestorageforpresentation (in module pydicom.uid)": [[246, "pydicom.uid.BreastProjectionXRayImageStorageForPresentation"]], "breastprojectionxrayimagestorageforprocessing (in module pydicom.uid)": [[247, "pydicom.uid.BreastProjectionXRayImageStorageForProcessing"]], "breasttomosynthesisimagestorage (in module pydicom.uid)": [[248, "pydicom.uid.BreastTomosynthesisImageStorage"]], "carmphotonelectronradiationrecordstorage (in module pydicom.uid)": [[249, "pydicom.uid.CArmPhotonElectronRadiationRecordStorage"]], "carmphotonelectronradiationstorage (in module pydicom.uid)": [[250, "pydicom.uid.CArmPhotonElectronRadiationStorage"]], "ctdefinedprocedureprotocolstorage (in module pydicom.uid)": [[251, "pydicom.uid.CTDefinedProcedureProtocolStorage"]], "ctimagestorage (in module pydicom.uid)": [[252, "pydicom.uid.CTImageStorage"]], "ctperformedprocedureprotocolstorage (in module pydicom.uid)": [[253, "pydicom.uid.CTPerformedProcedureProtocolStorage"]], "cardiacelectrophysiologywaveformstorage (in module pydicom.uid)": [[254, "pydicom.uid.CardiacElectrophysiologyWaveformStorage"]], "chestcadsrstorage (in module pydicom.uid)": [[255, "pydicom.uid.ChestCADSRStorage"]], "coloncadsrstorage (in module pydicom.uid)": [[256, "pydicom.uid.ColonCADSRStorage"]], "colorpalettestorage (in module pydicom.uid)": [[257, "pydicom.uid.ColorPaletteStorage"]], "colorsoftcopypresentationstatestorage (in module pydicom.uid)": [[258, "pydicom.uid.ColorSoftcopyPresentationStateStorage"]], "compositingplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[259, "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage"]], "comprehensive3dsrstorage (in module pydicom.uid)": [[260, "pydicom.uid.Comprehensive3DSRStorage"]], "comprehensivesrstorage (in module pydicom.uid)": [[261, "pydicom.uid.ComprehensiveSRStorage"]], "computedradiographyimagestorage (in module pydicom.uid)": [[262, "pydicom.uid.ComputedRadiographyImageStorage"]], "confocalmicroscopyimagestorage (in module pydicom.uid)": [[263, "pydicom.uid.ConfocalMicroscopyImageStorage"]], "confocalmicroscopytiledpyramidalimagestorage (in module pydicom.uid)": [[264, "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage"]], "contentassessmentresultsstorage (in module pydicom.uid)": [[265, "pydicom.uid.ContentAssessmentResultsStorage"]], "cornealtopographymapstorage (in module pydicom.uid)": [[266, "pydicom.uid.CornealTopographyMapStorage"]], "dicos2daitstorage (in module pydicom.uid)": [[267, "pydicom.uid.DICOS2DAITStorage"]], "dicos3daitstorage (in module pydicom.uid)": [[268, "pydicom.uid.DICOS3DAITStorage"]], "dicosctimagestorage (in module pydicom.uid)": [[269, "pydicom.uid.DICOSCTImageStorage"]], "dicosdigitalxrayimagestorageforpresentation (in module pydicom.uid)": [[270, "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation"]], "dicosdigitalxrayimagestorageforprocessing (in module pydicom.uid)": [[271, "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing"]], "dicosquadrupoleresonancestorage (in module pydicom.uid)": [[272, "pydicom.uid.DICOSQuadrupoleResonanceStorage"]], "dicosthreatdetectionreportstorage (in module pydicom.uid)": [[273, "pydicom.uid.DICOSThreatDetectionReportStorage"]], "deflatedexplicitvrlittleendian (in module pydicom.uid)": [[274, "pydicom.uid.DeflatedExplicitVRLittleEndian"]], "deformablespatialregistrationstorage (in module pydicom.uid)": [[275, "pydicom.uid.DeformableSpatialRegistrationStorage"]], "dermoscopicphotographyimagestorage (in module pydicom.uid)": [[276, "pydicom.uid.DermoscopicPhotographyImageStorage"]], "digitalintraoralxrayimagestorageforpresentation (in module pydicom.uid)": [[277, "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation"]], "digitalintraoralxrayimagestorageforprocessing (in module pydicom.uid)": [[278, "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing"]], "digitalmammographyxrayimagestorageforpresentation (in module pydicom.uid)": [[279, "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation"]], "digitalmammographyxrayimagestorageforprocessing (in module pydicom.uid)": [[280, "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing"]], "digitalxrayimagestorageforpresentation (in module pydicom.uid)": [[281, "pydicom.uid.DigitalXRayImageStorageForPresentation"]], "digitalxrayimagestorageforprocessing (in module pydicom.uid)": [[282, "pydicom.uid.DigitalXRayImageStorageForProcessing"]], "eddycurrentimagestorage (in module pydicom.uid)": [[283, "pydicom.uid.EddyCurrentImageStorage"]], "eddycurrentmultiframeimagestorage (in module pydicom.uid)": [[284, "pydicom.uid.EddyCurrentMultiFrameImageStorage"]], "electromyogramwaveformstorage (in module pydicom.uid)": [[285, "pydicom.uid.ElectromyogramWaveformStorage"]], "electrooculogramwaveformstorage (in module pydicom.uid)": [[286, "pydicom.uid.ElectrooculogramWaveformStorage"]], "encapsulatedcdastorage (in module pydicom.uid)": [[287, "pydicom.uid.EncapsulatedCDAStorage"]], "encapsulatedmtlstorage (in module pydicom.uid)": [[288, "pydicom.uid.EncapsulatedMTLStorage"]], "encapsulatedobjstorage (in module pydicom.uid)": [[289, "pydicom.uid.EncapsulatedOBJStorage"]], "encapsulatedpdfstorage (in module pydicom.uid)": [[290, "pydicom.uid.EncapsulatedPDFStorage"]], "encapsulatedstlstorage (in module pydicom.uid)": [[291, "pydicom.uid.EncapsulatedSTLStorage"]], "enhancedctimagestorage (in module pydicom.uid)": [[292, "pydicom.uid.EnhancedCTImageStorage"]], "enhancedcontinuousrtimagestorage (in module pydicom.uid)": [[293, "pydicom.uid.EnhancedContinuousRTImageStorage"]], "enhancedmrcolorimagestorage (in module pydicom.uid)": [[294, "pydicom.uid.EnhancedMRColorImageStorage"]], "enhancedmrimagestorage (in module pydicom.uid)": [[295, "pydicom.uid.EnhancedMRImageStorage"]], "enhancedpetimagestorage (in module pydicom.uid)": [[296, "pydicom.uid.EnhancedPETImageStorage"]], "enhancedrtimagestorage (in module pydicom.uid)": [[297, "pydicom.uid.EnhancedRTImageStorage"]], "enhancedsrstorage (in module pydicom.uid)": [[298, "pydicom.uid.EnhancedSRStorage"]], "enhancedusvolumestorage (in module pydicom.uid)": [[299, "pydicom.uid.EnhancedUSVolumeStorage"]], "enhancedxaimagestorage (in module pydicom.uid)": [[300, "pydicom.uid.EnhancedXAImageStorage"]], "enhancedxrfimagestorage (in module pydicom.uid)": [[301, "pydicom.uid.EnhancedXRFImageStorage"]], "enhancedxrayradiationdosesrstorage (in module pydicom.uid)": [[302, "pydicom.uid.EnhancedXRayRadiationDoseSRStorage"]], "explicitvrbigendian (in module pydicom.uid)": [[303, "pydicom.uid.ExplicitVRBigEndian"]], "explicitvrlittleendian (in module pydicom.uid)": [[304, "pydicom.uid.ExplicitVRLittleEndian"]], "extensiblesrstorage (in module pydicom.uid)": [[305, "pydicom.uid.ExtensibleSRStorage"]], "general32bitecgwaveformstorage (in module pydicom.uid)": [[306, "pydicom.uid.General32bitECGWaveformStorage"]], "generalaudiowaveformstorage (in module pydicom.uid)": [[307, "pydicom.uid.GeneralAudioWaveformStorage"]], "generalecgwaveformstorage (in module pydicom.uid)": [[308, "pydicom.uid.GeneralECGWaveformStorage"]], "genericimplanttemplatestorage (in module pydicom.uid)": [[309, "pydicom.uid.GenericImplantTemplateStorage"]], "grayscaleplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[310, "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage"]], "grayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[311, "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage"]], "hevcm10p51 (in module pydicom.uid)": [[312, "pydicom.uid.HEVCM10P51"]], "hevcmp51 (in module pydicom.uid)": [[313, "pydicom.uid.HEVCMP51"]], "htj2k (in module pydicom.uid)": [[314, "pydicom.uid.HTJ2K"]], "htj2klossless (in module pydicom.uid)": [[315, "pydicom.uid.HTJ2KLossless"]], "htj2klosslessrpcl (in module pydicom.uid)": [[316, "pydicom.uid.HTJ2KLosslessRPCL"]], "hangingprotocolstorage (in module pydicom.uid)": [[317, "pydicom.uid.HangingProtocolStorage"]], "hemodynamicwaveformstorage (in module pydicom.uid)": [[318, "pydicom.uid.HemodynamicWaveformStorage"]], "implantassemblytemplatestorage (in module pydicom.uid)": [[319, "pydicom.uid.ImplantAssemblyTemplateStorage"]], "implanttemplategroupstorage (in module pydicom.uid)": [[320, "pydicom.uid.ImplantTemplateGroupStorage"]], "implantationplansrstorage (in module pydicom.uid)": [[321, "pydicom.uid.ImplantationPlanSRStorage"]], "implicitvrlittleendian (in module pydicom.uid)": [[322, "pydicom.uid.ImplicitVRLittleEndian"]], "intraocularlenscalculationsstorage (in module pydicom.uid)": [[323, "pydicom.uid.IntraocularLensCalculationsStorage"]], "intravascularopticalcoherencetomographyimagestorageforpresentation (in module pydicom.uid)": [[324, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation"]], "intravascularopticalcoherencetomographyimagestorageforprocessing (in module pydicom.uid)": [[325, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing"]], "inventorystorage (in module pydicom.uid)": [[326, "pydicom.uid.InventoryStorage"]], "jpeg2000 (in module pydicom.uid)": [[327, "pydicom.uid.JPEG2000"]], "jpeg2000lossless (in module pydicom.uid)": [[328, "pydicom.uid.JPEG2000Lossless"]], "jpeg2000mc (in module pydicom.uid)": [[329, "pydicom.uid.JPEG2000MC"]], "jpeg2000mclossless (in module pydicom.uid)": [[330, "pydicom.uid.JPEG2000MCLossless"]], "jpeg2000transfersyntaxes (in module pydicom.uid)": [[331, "pydicom.uid.JPEG2000TransferSyntaxes"]], "jpegbaseline8bit (in module pydicom.uid)": [[332, "pydicom.uid.JPEGBaseline8Bit"]], "jpegextended12bit (in module pydicom.uid)": [[333, "pydicom.uid.JPEGExtended12Bit"]], "jpeglslossless (in module pydicom.uid)": [[334, "pydicom.uid.JPEGLSLossless"]], "jpeglsnearlossless (in module pydicom.uid)": [[335, "pydicom.uid.JPEGLSNearLossless"]], "jpeglstransfersyntaxes (in module pydicom.uid)": [[336, "pydicom.uid.JPEGLSTransferSyntaxes"]], "jpeglossless (in module pydicom.uid)": [[337, "pydicom.uid.JPEGLossless"]], "jpeglosslesssv1 (in module pydicom.uid)": [[338, "pydicom.uid.JPEGLosslessSV1"]], "jpegtransfersyntaxes (in module pydicom.uid)": [[339, "pydicom.uid.JPEGTransferSyntaxes"]], "jpiphtj2kreferenced (in module pydicom.uid)": [[340, "pydicom.uid.JPIPHTJ2KReferenced"]], "jpiphtj2kreferenceddeflate (in module pydicom.uid)": [[341, "pydicom.uid.JPIPHTJ2KReferencedDeflate"]], "keratometrymeasurementsstorage (in module pydicom.uid)": [[342, "pydicom.uid.KeratometryMeasurementsStorage"]], "keyobjectselectiondocumentstorage (in module pydicom.uid)": [[343, "pydicom.uid.KeyObjectSelectionDocumentStorage"]], "legacyconvertedenhancedctimagestorage (in module pydicom.uid)": [[344, "pydicom.uid.LegacyConvertedEnhancedCTImageStorage"]], "legacyconvertedenhancedmrimagestorage (in module pydicom.uid)": [[345, "pydicom.uid.LegacyConvertedEnhancedMRImageStorage"]], "legacyconvertedenhancedpetimagestorage (in module pydicom.uid)": [[346, "pydicom.uid.LegacyConvertedEnhancedPETImageStorage"]], "lensometrymeasurementsstorage (in module pydicom.uid)": [[347, "pydicom.uid.LensometryMeasurementsStorage"]], "mpeg2mphl (in module pydicom.uid)": [[348, "pydicom.uid.MPEG2MPHL"]], "mpeg2mphlf (in module pydicom.uid)": [[349, "pydicom.uid.MPEG2MPHLF"]], "mpeg2mpml (in module pydicom.uid)": [[350, "pydicom.uid.MPEG2MPML"]], "mpeg2mpmlf (in module pydicom.uid)": [[351, "pydicom.uid.MPEG2MPMLF"]], "mpeg4hp41 (in module pydicom.uid)": [[352, "pydicom.uid.MPEG4HP41"]], "mpeg4hp41bd (in module pydicom.uid)": [[353, "pydicom.uid.MPEG4HP41BD"]], "mpeg4hp41bdf (in module pydicom.uid)": [[354, "pydicom.uid.MPEG4HP41BDF"]], "mpeg4hp41f (in module pydicom.uid)": [[355, "pydicom.uid.MPEG4HP41F"]], "mpeg4hp422d (in module pydicom.uid)": [[356, "pydicom.uid.MPEG4HP422D"]], "mpeg4hp422df (in module pydicom.uid)": [[357, "pydicom.uid.MPEG4HP422DF"]], "mpeg4hp423d (in module pydicom.uid)": [[358, "pydicom.uid.MPEG4HP423D"]], "mpeg4hp423df (in module pydicom.uid)": [[359, "pydicom.uid.MPEG4HP423DF"]], "mpeg4hp42stereo (in module pydicom.uid)": [[360, "pydicom.uid.MPEG4HP42STEREO"]], "mpeg4hp42stereof (in module pydicom.uid)": [[361, "pydicom.uid.MPEG4HP42STEREOF"]], "mpegtransfersyntaxes (in module pydicom.uid)": [[362, "pydicom.uid.MPEGTransferSyntaxes"]], "mrimagestorage (in module pydicom.uid)": [[363, "pydicom.uid.MRImageStorage"]], "mrspectroscopystorage (in module pydicom.uid)": [[364, "pydicom.uid.MRSpectroscopyStorage"]], "maculargridthicknessandvolumereportstorage (in module pydicom.uid)": [[365, "pydicom.uid.MacularGridThicknessAndVolumeReportStorage"]], "mammographycadsrstorage (in module pydicom.uid)": [[366, "pydicom.uid.MammographyCADSRStorage"]], "mediastoragedirectorystorage (in module pydicom.uid)": [[367, "pydicom.uid.MediaStorageDirectoryStorage"]], "microscopybulksimpleannotationsstorage (in module pydicom.uid)": [[368, "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage"]], "multiframegrayscalebytesecondarycaptureimagestorage (in module pydicom.uid)": [[369, "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage"]], "multiframegrayscalewordsecondarycaptureimagestorage (in module pydicom.uid)": [[370, "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage"]], "multiframesinglebitsecondarycaptureimagestorage (in module pydicom.uid)": [[371, "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage"]], "multiframetruecolorsecondarycaptureimagestorage (in module pydicom.uid)": [[372, "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage"]], "multichannelrespiratorywaveformstorage (in module pydicom.uid)": [[373, "pydicom.uid.MultichannelRespiratoryWaveformStorage"]], "multiplevolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[374, "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage"]], "nuclearmedicineimagestorage (in module pydicom.uid)": [[375, "pydicom.uid.NuclearMedicineImageStorage"]], "ophthalmicaxialmeasurementsstorage (in module pydicom.uid)": [[376, "pydicom.uid.OphthalmicAxialMeasurementsStorage"]], "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage (in module pydicom.uid)": [[377, "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"]], "ophthalmicopticalcoherencetomographyenfaceimagestorage (in module pydicom.uid)": [[378, "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"]], "ophthalmicphotography16bitimagestorage (in module pydicom.uid)": [[379, "pydicom.uid.OphthalmicPhotography16BitImageStorage"]], "ophthalmicphotography8bitimagestorage (in module pydicom.uid)": [[380, "pydicom.uid.OphthalmicPhotography8BitImageStorage"]], "ophthalmicthicknessmapstorage (in module pydicom.uid)": [[381, "pydicom.uid.OphthalmicThicknessMapStorage"]], "ophthalmictomographyimagestorage (in module pydicom.uid)": [[382, "pydicom.uid.OphthalmicTomographyImageStorage"]], "ophthalmicvisualfieldstaticperimetrymeasurementsstorage (in module pydicom.uid)": [[383, "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"]], "pydicom_implementation_uid (in module pydicom.uid)": [[384, "pydicom.uid.PYDICOM_IMPLEMENTATION_UID"]], "pydicom_root_uid (in module pydicom.uid)": [[385, "pydicom.uid.PYDICOM_ROOT_UID"]], "parametricmapstorage (in module pydicom.uid)": [[386, "pydicom.uid.ParametricMapStorage"]], "patientradiationdosesrstorage (in module pydicom.uid)": [[387, "pydicom.uid.PatientRadiationDoseSRStorage"]], "performedimagingagentadministrationsrstorage (in module pydicom.uid)": [[388, "pydicom.uid.PerformedImagingAgentAdministrationSRStorage"]], "photoacousticimagestorage (in module pydicom.uid)": [[389, "pydicom.uid.PhotoacousticImageStorage"]], "plannedimagingagentadministrationsrstorage (in module pydicom.uid)": [[390, "pydicom.uid.PlannedImagingAgentAdministrationSRStorage"]], "positronemissiontomographyimagestorage (in module pydicom.uid)": [[391, "pydicom.uid.PositronEmissionTomographyImageStorage"]], "privatetransfersyntaxes (in module pydicom.uid)": [[392, "pydicom.uid.PrivateTransferSyntaxes"]], "procedurelogstorage (in module pydicom.uid)": [[393, "pydicom.uid.ProcedureLogStorage"]], "protocolapprovalstorage (in module pydicom.uid)": [[394, "pydicom.uid.ProtocolApprovalStorage"]], "pseudocolorsoftcopypresentationstatestorage (in module pydicom.uid)": [[395, "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage"]], "re_valid_uid (in module pydicom.uid)": [[396, "pydicom.uid.RE_VALID_UID"]], "re_valid_uid_prefix (in module pydicom.uid)": [[397, "pydicom.uid.RE_VALID_UID_PREFIX"]], "rlelossless (in module pydicom.uid)": [[398, "pydicom.uid.RLELossless"]], "rletransfersyntaxes (in module pydicom.uid)": [[399, "pydicom.uid.RLETransferSyntaxes"]], "rtbeamsdeliveryinstructionstorage (in module pydicom.uid)": [[400, "pydicom.uid.RTBeamsDeliveryInstructionStorage"]], "rtbeamstreatmentrecordstorage (in module pydicom.uid)": [[401, "pydicom.uid.RTBeamsTreatmentRecordStorage"]], "rtbrachyapplicationsetupdeliveryinstructionstorage (in module pydicom.uid)": [[402, "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage"]], "rtbrachytreatmentrecordstorage (in module pydicom.uid)": [[403, "pydicom.uid.RTBrachyTreatmentRecordStorage"]], "rtdosestorage (in module pydicom.uid)": [[404, "pydicom.uid.RTDoseStorage"]], "rtimagestorage (in module pydicom.uid)": [[405, "pydicom.uid.RTImageStorage"]], "rtionbeamstreatmentrecordstorage (in module pydicom.uid)": [[406, "pydicom.uid.RTIonBeamsTreatmentRecordStorage"]], "rtionplanstorage (in module pydicom.uid)": [[407, "pydicom.uid.RTIonPlanStorage"]], "rtpatientpositionacquisitioninstructionstorage (in module pydicom.uid)": [[408, "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage"]], "rtphysicianintentstorage (in module pydicom.uid)": [[409, "pydicom.uid.RTPhysicianIntentStorage"]], "rtplanstorage (in module pydicom.uid)": [[410, "pydicom.uid.RTPlanStorage"]], "rtradiationrecordsetstorage (in module pydicom.uid)": [[411, "pydicom.uid.RTRadiationRecordSetStorage"]], "rtradiationsalvagerecordstorage (in module pydicom.uid)": [[412, "pydicom.uid.RTRadiationSalvageRecordStorage"]], "rtradiationsetdeliveryinstructionstorage (in module pydicom.uid)": [[413, "pydicom.uid.RTRadiationSetDeliveryInstructionStorage"]], "rtradiationsetstorage (in module pydicom.uid)": [[414, "pydicom.uid.RTRadiationSetStorage"]], "rtsegmentannotationstorage (in module pydicom.uid)": [[415, "pydicom.uid.RTSegmentAnnotationStorage"]], "rtstructuresetstorage (in module pydicom.uid)": [[416, "pydicom.uid.RTStructureSetStorage"]], "rttreatmentpreparationstorage (in module pydicom.uid)": [[417, "pydicom.uid.RTTreatmentPreparationStorage"]], "rttreatmentsummaryrecordstorage (in module pydicom.uid)": [[418, "pydicom.uid.RTTreatmentSummaryRecordStorage"]], "radiopharmaceuticalradiationdosesrstorage (in module pydicom.uid)": [[419, "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage"]], "rawdatastorage (in module pydicom.uid)": [[420, "pydicom.uid.RawDataStorage"]], "realworldvaluemappingstorage (in module pydicom.uid)": [[421, "pydicom.uid.RealWorldValueMappingStorage"]], "respiratorywaveformstorage (in module pydicom.uid)": [[422, "pydicom.uid.RespiratoryWaveformStorage"]], "roboticarmradiationstorage (in module pydicom.uid)": [[423, "pydicom.uid.RoboticArmRadiationStorage"]], "roboticradiationrecordstorage (in module pydicom.uid)": [[424, "pydicom.uid.RoboticRadiationRecordStorage"]], "routinescalpelectroencephalogramwaveformstorage (in module pydicom.uid)": [[425, "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage"]], "smptest211020uncompressedinterlacedactivevideo (in module pydicom.uid)": [[426, "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo"]], "smptest211020uncompressedprogressiveactivevideo (in module pydicom.uid)": [[427, "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo"]], "smptest211030pcmdigitalaudio (in module pydicom.uid)": [[428, "pydicom.uid.SMPTEST211030PCMDigitalAudio"]], "secondarycaptureimagestorage (in module pydicom.uid)": [[429, "pydicom.uid.SecondaryCaptureImageStorage"]], "segmentationstorage (in module pydicom.uid)": [[430, "pydicom.uid.SegmentationStorage"]], "segmentedvolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[431, "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage"]], "simplifiedadultechosrstorage (in module pydicom.uid)": [[432, "pydicom.uid.SimplifiedAdultEchoSRStorage"]], "sleepelectroencephalogramwaveformstorage (in module pydicom.uid)": [[433, "pydicom.uid.SleepElectroencephalogramWaveformStorage"]], "spatialfiducialsstorage (in module pydicom.uid)": [[434, "pydicom.uid.SpatialFiducialsStorage"]], "spatialregistrationstorage (in module pydicom.uid)": [[435, "pydicom.uid.SpatialRegistrationStorage"]], "spectacleprescriptionreportstorage (in module pydicom.uid)": [[436, "pydicom.uid.SpectaclePrescriptionReportStorage"]], "stereometricrelationshipstorage (in module pydicom.uid)": [[437, "pydicom.uid.StereometricRelationshipStorage"]], "subjectiverefractionmeasurementsstorage (in module pydicom.uid)": [[438, "pydicom.uid.SubjectiveRefractionMeasurementsStorage"]], "surfacescanmeshstorage (in module pydicom.uid)": [[439, "pydicom.uid.SurfaceScanMeshStorage"]], "surfacescanpointcloudstorage (in module pydicom.uid)": [[440, "pydicom.uid.SurfaceScanPointCloudStorage"]], "surfacesegmentationstorage (in module pydicom.uid)": [[441, "pydicom.uid.SurfaceSegmentationStorage"]], "tomotherapeuticradiationrecordstorage (in module pydicom.uid)": [[442, "pydicom.uid.TomotherapeuticRadiationRecordStorage"]], "tomotherapeuticradiationstorage (in module pydicom.uid)": [[443, "pydicom.uid.TomotherapeuticRadiationStorage"]], "tractographyresultsstorage (in module pydicom.uid)": [[444, "pydicom.uid.TractographyResultsStorage"]], "twelveleadecgwaveformstorage (in module pydicom.uid)": [[445, "pydicom.uid.TwelveLeadECGWaveformStorage"]], "uid (class in pydicom.uid)": [[446, "pydicom.uid.UID"]], "__init__() (pydicom.uid.uid method)": [[446, "pydicom.uid.UID.__init__"]], "info (pydicom.uid.uid property)": [[446, "pydicom.uid.UID.info"]], "is_compressed (pydicom.uid.uid property)": [[446, "pydicom.uid.UID.is_compressed"]], "is_deflated (pydicom.uid.uid property)": [[446, "pydicom.uid.UID.is_deflated"]], "is_encapsulated (pydicom.uid.uid property)": [[446, "pydicom.uid.UID.is_encapsulated"]], "is_implicit_vr (pydicom.uid.uid property)": [[446, "pydicom.uid.UID.is_implicit_VR"]], "is_little_endian (pydicom.uid.uid property)": [[446, "pydicom.uid.UID.is_little_endian"]], "is_private (pydicom.uid.uid property)": [[446, "pydicom.uid.UID.is_private"]], "is_retired (pydicom.uid.uid property)": [[446, "pydicom.uid.UID.is_retired"]], "is_transfer_syntax (pydicom.uid.uid property)": [[446, "pydicom.uid.UID.is_transfer_syntax"]], "is_valid (pydicom.uid.uid property)": [[446, "pydicom.uid.UID.is_valid"]], "keyword (pydicom.uid.uid property)": [[446, "pydicom.uid.UID.keyword"]], "name (pydicom.uid.uid property)": [[446, "pydicom.uid.UID.name"]], "set_private_encoding() (pydicom.uid.uid method)": [[446, "pydicom.uid.UID.set_private_encoding"]], "type (pydicom.uid.uid property)": [[446, "pydicom.uid.UID.type"]], "ultrasoundimagestorage (in module pydicom.uid)": [[447, "pydicom.uid.UltrasoundImageStorage"]], "ultrasoundmultiframeimagestorage (in module pydicom.uid)": [[448, "pydicom.uid.UltrasoundMultiFrameImageStorage"]], "uncompressedtransfersyntaxes (in module pydicom.uid)": [[449, "pydicom.uid.UncompressedTransferSyntaxes"]], "vlendoscopicimagestorage (in module pydicom.uid)": [[450, "pydicom.uid.VLEndoscopicImageStorage"]], "vlmicroscopicimagestorage (in module pydicom.uid)": [[451, "pydicom.uid.VLMicroscopicImageStorage"]], "vlphotographicimagestorage (in module pydicom.uid)": [[452, "pydicom.uid.VLPhotographicImageStorage"]], "vlslidecoordinatesmicroscopicimagestorage (in module pydicom.uid)": [[453, "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage"]], "vlwholeslidemicroscopyimagestorage (in module pydicom.uid)": [[454, "pydicom.uid.VLWholeSlideMicroscopyImageStorage"]], "variablemodalitylutsoftcopypresentationstatestorage (in module pydicom.uid)": [[455, "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage"]], "videoendoscopicimagestorage (in module pydicom.uid)": [[456, "pydicom.uid.VideoEndoscopicImageStorage"]], "videomicroscopicimagestorage (in module pydicom.uid)": [[457, "pydicom.uid.VideoMicroscopicImageStorage"]], "videophotographicimagestorage (in module pydicom.uid)": [[458, "pydicom.uid.VideoPhotographicImageStorage"]], "visualacuitymeasurementsstorage (in module pydicom.uid)": [[459, "pydicom.uid.VisualAcuityMeasurementsStorage"]], "volumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[460, "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage"]], "widefieldophthalmicphotography3dcoordinatesimagestorage (in module pydicom.uid)": [[461, "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage"]], "widefieldophthalmicphotographystereographicprojectionimagestorage (in module pydicom.uid)": [[462, "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"]], "xadefinedprocedureprotocolstorage (in module pydicom.uid)": [[463, "pydicom.uid.XADefinedProcedureProtocolStorage"]], "xaperformedprocedureprotocolstorage (in module pydicom.uid)": [[464, "pydicom.uid.XAPerformedProcedureProtocolStorage"]], "xaxrfgrayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[465, "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage"]], "xray3dangiographicimagestorage (in module pydicom.uid)": [[466, "pydicom.uid.XRay3DAngiographicImageStorage"]], "xray3dcraniofacialimagestorage (in module pydicom.uid)": [[467, "pydicom.uid.XRay3DCraniofacialImageStorage"]], "xrayangiographicimagestorage (in module pydicom.uid)": [[468, "pydicom.uid.XRayAngiographicImageStorage"]], "xrayradiationdosesrstorage (in module pydicom.uid)": [[469, "pydicom.uid.XRayRadiationDoseSRStorage"]], "xrayradiofluoroscopicimagestorage (in module pydicom.uid)": [[470, "pydicom.uid.XRayRadiofluoroscopicImageStorage"]], "generate_uid() (in module pydicom.uid)": [[471, "pydicom.uid.generate_uid"]], "register_transfer_syntax() (in module pydicom.uid)": [[472, "pydicom.uid.register_transfer_syntax"]], "da (class in pydicom.valuerep)": [[473, "pydicom.valuerep.DA"]], "__init__() (pydicom.valuerep.da method)": [[473, "pydicom.valuerep.DA.__init__"]], "ds() (in module pydicom.valuerep)": [[474, "pydicom.valuerep.DS"]], "dsdecimal (class in pydicom.valuerep)": [[475, "pydicom.valuerep.DSdecimal"]], "__init__() (pydicom.valuerep.dsdecimal method)": [[475, "pydicom.valuerep.DSdecimal.__init__"]], "dsfloat (class in pydicom.valuerep)": [[476, "pydicom.valuerep.DSfloat"]], "__init__() (pydicom.valuerep.dsfloat method)": [[476, "pydicom.valuerep.DSfloat.__init__"]], "dt (class in pydicom.valuerep)": [[477, "pydicom.valuerep.DT"]], "__init__() (pydicom.valuerep.dt method)": [[477, "pydicom.valuerep.DT.__init__"]], "is (class in pydicom.valuerep)": [[478, "pydicom.valuerep.IS"]], "__init__() (pydicom.valuerep.is method)": [[478, "pydicom.valuerep.IS.__init__"]], "isfloat (class in pydicom.valuerep)": [[479, "pydicom.valuerep.ISfloat"]], "__init__() (pydicom.valuerep.isfloat method)": [[479, "pydicom.valuerep.ISfloat.__init__"]], "personname (class in pydicom.valuerep)": [[480, "pydicom.valuerep.PersonName"]], "__init__() (pydicom.valuerep.personname method)": [[480, "pydicom.valuerep.PersonName.__init__"]], "alphabetic (pydicom.valuerep.personname property)": [[480, "pydicom.valuerep.PersonName.alphabetic"]], "components (pydicom.valuerep.personname property)": [[480, "pydicom.valuerep.PersonName.components"]], "decode() (pydicom.valuerep.personname method)": [[480, "pydicom.valuerep.PersonName.decode"]], "encode() (pydicom.valuerep.personname method)": [[480, "pydicom.valuerep.PersonName.encode"]], "family_comma_given() (pydicom.valuerep.personname method)": [[480, "pydicom.valuerep.PersonName.family_comma_given"]], "family_name (pydicom.valuerep.personname property)": [[480, "pydicom.valuerep.PersonName.family_name"]], "formatted() (pydicom.valuerep.personname method)": [[480, "pydicom.valuerep.PersonName.formatted"]], "from_named_components() (pydicom.valuerep.personname class method)": [[480, "pydicom.valuerep.PersonName.from_named_components"]], "from_named_components_veterinary() (pydicom.valuerep.personname class method)": [[480, "pydicom.valuerep.PersonName.from_named_components_veterinary"]], "given_name (pydicom.valuerep.personname property)": [[480, "pydicom.valuerep.PersonName.given_name"]], "ideographic (pydicom.valuerep.personname property)": [[480, "pydicom.valuerep.PersonName.ideographic"]], "middle_name (pydicom.valuerep.personname property)": [[480, "pydicom.valuerep.PersonName.middle_name"]], "name_prefix (pydicom.valuerep.personname property)": [[480, "pydicom.valuerep.PersonName.name_prefix"]], "name_suffix (pydicom.valuerep.personname property)": [[480, "pydicom.valuerep.PersonName.name_suffix"]], "phonetic (pydicom.valuerep.personname property)": [[480, "pydicom.valuerep.PersonName.phonetic"]], "tm (class in pydicom.valuerep)": [[481, "pydicom.valuerep.TM"]], "__init__() (pydicom.valuerep.tm method)": [[481, "pydicom.valuerep.TM.__init__"]], "vr (class in pydicom.valuerep)": [[482, "pydicom.valuerep.VR"]], "__init__() (pydicom.valuerep.vr method)": [[482, "pydicom.valuerep.VR.__init__"]], "format_number_as_ds() (in module pydicom.valuerep)": [[483, "pydicom.valuerep.format_number_as_ds"]], "is_valid_ds() (in module pydicom.valuerep)": [[484, "pydicom.valuerep.is_valid_ds"]], "convert_ae_string() (in module pydicom.values)": [[485, "pydicom.values.convert_AE_string"]], "convert_atvalue() (in module pydicom.values)": [[486, "pydicom.values.convert_ATvalue"]], "convert_da_string() (in module pydicom.values)": [[487, "pydicom.values.convert_DA_string"]], "convert_ds_string() (in module pydicom.values)": [[488, "pydicom.values.convert_DS_string"]], "convert_dt_string() (in module pydicom.values)": [[489, "pydicom.values.convert_DT_string"]], "convert_is_string() (in module pydicom.values)": [[490, "pydicom.values.convert_IS_string"]], "convert_obvalue() (in module pydicom.values)": [[491, "pydicom.values.convert_OBvalue"]], "convert_owvalue() (in module pydicom.values)": [[492, "pydicom.values.convert_OWvalue"]], "convert_pn() (in module pydicom.values)": [[493, "pydicom.values.convert_PN"]], "convert_sq() (in module pydicom.values)": [[494, "pydicom.values.convert_SQ"]], "convert_tm_string() (in module pydicom.values)": [[495, "pydicom.values.convert_TM_string"]], "convert_ui() (in module pydicom.values)": [[496, "pydicom.values.convert_UI"]], "convert_un() (in module pydicom.values)": [[497, "pydicom.values.convert_UN"]], "convert_ur_string() (in module pydicom.values)": [[498, "pydicom.values.convert_UR_string"]], "convert_numbers() (in module pydicom.values)": [[499, "pydicom.values.convert_numbers"]], "convert_single_string() (in module pydicom.values)": [[500, "pydicom.values.convert_single_string"]], "convert_string() (in module pydicom.values)": [[501, "pydicom.values.convert_string"]], "convert_tag() (in module pydicom.values)": [[502, "pydicom.values.convert_tag"]], "convert_text() (in module pydicom.values)": [[503, "pydicom.values.convert_text"]], "convert_value() (in module pydicom.values)": [[504, "pydicom.values.convert_value"]], "multi_string() (in module pydicom.values)": [[505, "pydicom.values.multi_string"]], "generate_multiplex() (in module pydicom.waveforms.numpy_handler)": [[506, "pydicom.waveforms.numpy_handler.generate_multiplex"]], "is_available() (in module pydicom.waveforms.numpy_handler)": [[506, "pydicom.waveforms.numpy_handler.is_available"]], "multiplex_array() (in module pydicom.waveforms.numpy_handler)": [[506, "pydicom.waveforms.numpy_handler.multiplex_array"]], "pydicom.waveforms.numpy_handler": [[506, "module-pydicom.waveforms.numpy_handler"]], "pydicom.pixel_data_handlers": [[508, "module-pydicom.pixel_data_handlers"]], "pydicom": [[509, "module-pydicom"]], "pydicom.overlays": [[511, "module-pydicom.overlays"]], "pydicom.waveforms": [[515, "module-pydicom.waveforms"]]}})