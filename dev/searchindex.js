Search.setIndex({"docnames": ["auto_examples/dicomtree", "auto_examples/image_processing/index", "auto_examples/image_processing/plot_downsize_image", "auto_examples/image_processing/plot_waveforms", "auto_examples/image_processing/reslice", "auto_examples/image_processing/sg_execution_times", "auto_examples/index", "auto_examples/input_output/index", "auto_examples/input_output/plot_printing_dataset", "auto_examples/input_output/plot_read_dicom", "auto_examples/input_output/plot_read_fileset", "auto_examples/input_output/plot_read_rtplan", "auto_examples/input_output/plot_write_dicom", "auto_examples/input_output/sg_execution_times", "auto_examples/memory_dataset", "auto_examples/metadata_processing/index", "auto_examples/metadata_processing/plot_add_dict_entries", "auto_examples/metadata_processing/plot_anonymize", "auto_examples/metadata_processing/plot_sequences", "auto_examples/metadata_processing/sg_execution_times", "auto_examples/plot_dicom_difference", "auto_examples/sg_execution_times", "auto_examples/show_charset_name", "faq/index", "guides/cli/cli_codify", "guides/cli/cli_dev", "guides/cli/cli_guide", "guides/cli/cli_intro", "guides/cli/cli_show", "guides/element_value_types", "guides/encoding/encoder_plugin_options", "guides/encoding/encoder_plugins", "guides/encoding/index", "guides/encoding/rle_lossless", "guides/glossary", "guides/index", "guides/writing_documentation", "index", "old/base_element", "old/best_practices", "old/getting_started", "old/image_data_compression", "old/image_data_handlers", "old/private_data_elements", "old/pydicom_user_guide", "old/ref_guide", "old/viewing_images", "old/working_with_overlays", "old/working_with_pixel_data", "old/working_with_waveforms", "old/writing_files", "reference/charset", "reference/config", "reference/data", "reference/datadict", "reference/dataset", "reference/elem", "reference/elem.dataelem", "reference/elem.multival", "reference/elem.sequence", "reference/elem.tag", "reference/elem.valuerep", "reference/elem.values", "reference/encaps", "reference/encoders", "reference/errors", "reference/examples", "reference/fileio", "reference/fileio.base", "reference/fileio.read", "reference/fileio.util", "reference/fileio.write", "reference/fileset", "reference/generated/pydicom.charset.convert_encodings", "reference/generated/pydicom.charset.decode_bytes", "reference/generated/pydicom.charset.decode_element", "reference/generated/pydicom.charset.encode_string", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS", "reference/generated/pydicom.config.DS_decimal", "reference/generated/pydicom.config.DS_numpy", "reference/generated/pydicom.config.IGNORE", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR", "reference/generated/pydicom.config.RAISE", "reference/generated/pydicom.config.WARN", "reference/generated/pydicom.config.allow_DS_float", "reference/generated/pydicom.config.assume_implicit_vr_switch", "reference/generated/pydicom.config.convert_wrong_length_to_UN", "reference/generated/pydicom.config.data_element_callback", "reference/generated/pydicom.config.data_element_callback_kwargs", "reference/generated/pydicom.config.datetime_conversion", "reference/generated/pydicom.config.debug", "reference/generated/pydicom.config.enforce_valid_values", "reference/generated/pydicom.config.future_behavior", "reference/generated/pydicom.config.pixel_data_handlers", "reference/generated/pydicom.config.reset_data_element_callback", "reference/generated/pydicom.config.settings", "reference/generated/pydicom.config.show_file_meta", "reference/generated/pydicom.config.use_DS_decimal", "reference/generated/pydicom.config.use_DS_numpy", "reference/generated/pydicom.config.use_IS_numpy", "reference/generated/pydicom.data.get_charset_files", "reference/generated/pydicom.data.get_palette_files", "reference/generated/pydicom.data.get_testdata_file", "reference/generated/pydicom.data.get_testdata_files", "reference/generated/pydicom.datadict.add_dict_entries", "reference/generated/pydicom.datadict.add_dict_entry", "reference/generated/pydicom.datadict.add_private_dict_entries", "reference/generated/pydicom.datadict.add_private_dict_entry", "reference/generated/pydicom.datadict.dictionary_VM", "reference/generated/pydicom.datadict.dictionary_VR", "reference/generated/pydicom.datadict.dictionary_description", "reference/generated/pydicom.datadict.dictionary_has_tag", "reference/generated/pydicom.datadict.dictionary_is_retired", "reference/generated/pydicom.datadict.dictionary_keyword", "reference/generated/pydicom.datadict.get_entry", "reference/generated/pydicom.datadict.get_private_entry", "reference/generated/pydicom.datadict.keyword_for_tag", "reference/generated/pydicom.datadict.mask_match", "reference/generated/pydicom.datadict.private_dictionary_VM", "reference/generated/pydicom.datadict.private_dictionary_VR", "reference/generated/pydicom.datadict.private_dictionary_description", "reference/generated/pydicom.datadict.repeater_has_keyword", "reference/generated/pydicom.datadict.repeater_has_tag", "reference/generated/pydicom.datadict.tag_for_keyword", "reference/generated/pydicom.dataelem.DataElement", "reference/generated/pydicom.dataelem.DataElement_from_raw", "reference/generated/pydicom.dataelem.RawDataElement", "reference/generated/pydicom.dataset.Dataset", "reference/generated/pydicom.dataset.FileDataset", "reference/generated/pydicom.dataset.FileMetaDataset", "reference/generated/pydicom.dataset.PrivateBlock", "reference/generated/pydicom.dataset.validate_file_meta", "reference/generated/pydicom.encaps.decode_data_sequence", "reference/generated/pydicom.encaps.defragment_data", "reference/generated/pydicom.encaps.encapsulate", "reference/generated/pydicom.encaps.encapsulate_extended", "reference/generated/pydicom.encaps.fragment_frame", "reference/generated/pydicom.encaps.generate_pixel_data", "reference/generated/pydicom.encaps.generate_pixel_data_fragment", "reference/generated/pydicom.encaps.generate_pixel_data_frame", "reference/generated/pydicom.encaps.get_frame_offsets", "reference/generated/pydicom.encaps.itemize_fragment", "reference/generated/pydicom.encaps.itemize_frame", "reference/generated/pydicom.encaps.read_item", "reference/generated/pydicom.encoders.RLELosslessEncoder", "reference/generated/pydicom.encoders.base.Encoder", "reference/generated/pydicom.encoders.get_encoder", "reference/generated/pydicom.errors.InvalidDicomError", "reference/generated/pydicom.filebase.DicomBytesIO", "reference/generated/pydicom.filebase.DicomFile", "reference/generated/pydicom.filebase.DicomFileLike", "reference/generated/pydicom.filebase.DicomIO", "reference/generated/pydicom.filereader.data_element_generator", "reference/generated/pydicom.filereader.data_element_offset_to_value", "reference/generated/pydicom.filereader.dcmread", "reference/generated/pydicom.filereader.read_dataset", "reference/generated/pydicom.filereader.read_deferred_data_element", "reference/generated/pydicom.filereader.read_file_meta_info", "reference/generated/pydicom.filereader.read_partial", "reference/generated/pydicom.filereader.read_preamble", "reference/generated/pydicom.filereader.read_sequence", "reference/generated/pydicom.filereader.read_sequence_item", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS", "reference/generated/pydicom.fileset.FileInstance", "reference/generated/pydicom.fileset.FileSet", "reference/generated/pydicom.fileset.RecordNode", "reference/generated/pydicom.fileset.generate_filename", "reference/generated/pydicom.fileset.is_conformant_file_id", "reference/generated/pydicom.fileutil.absorb_delimiter_item", "reference/generated/pydicom.fileutil.find_bytes", "reference/generated/pydicom.fileutil.find_delimiter", "reference/generated/pydicom.fileutil.length_of_undefined_length", "reference/generated/pydicom.fileutil.read_undefined_length_value", "reference/generated/pydicom.filewriter.correct_ambiguous_vr", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element", "reference/generated/pydicom.filewriter.dcmwrite", "reference/generated/pydicom.filewriter.multi_string", "reference/generated/pydicom.filewriter.write_ATvalue", "reference/generated/pydicom.filewriter.write_DA", "reference/generated/pydicom.filewriter.write_DT", "reference/generated/pydicom.filewriter.write_OBvalue", "reference/generated/pydicom.filewriter.write_OWvalue", "reference/generated/pydicom.filewriter.write_PN", "reference/generated/pydicom.filewriter.write_TM", "reference/generated/pydicom.filewriter.write_UI", "reference/generated/pydicom.filewriter.write_UN", "reference/generated/pydicom.filewriter.write_data_element", "reference/generated/pydicom.filewriter.write_dataset", "reference/generated/pydicom.filewriter.write_file_meta_info", "reference/generated/pydicom.filewriter.write_number_string", "reference/generated/pydicom.filewriter.write_numbers", "reference/generated/pydicom.filewriter.write_sequence", "reference/generated/pydicom.filewriter.write_sequence_item", "reference/generated/pydicom.filewriter.write_string", "reference/generated/pydicom.filewriter.write_text", "reference/generated/pydicom.misc.is_dicom", "reference/generated/pydicom.misc.size_in_bytes", "reference/generated/pydicom.multival.MultiValue", "reference/generated/pydicom.overlays.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut", "reference/generated/pydicom.pixel_data_handlers.apply_rescale", "reference/generated/pydicom.pixel_data_handlers.apply_voi", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut", "reference/generated/pydicom.pixel_data_handlers.apply_windowing", "reference/generated/pydicom.pixel_data_handlers.convert_color_space", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler", "reference/generated/pydicom.pixel_data_handlers.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.pillow_handler", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler", "reference/generated/pydicom.pixel_data_handlers.rle_handler", "reference/generated/pydicom.pixel_data_handlers.util", "reference/generated/pydicom.sequence.Sequence", "reference/generated/pydicom.tag.BaseTag", "reference/generated/pydicom.tag.Tag", "reference/generated/pydicom.tag.TupleTag", "reference/generated/pydicom.tag.tag_in_exception", "reference/generated/pydicom.uid.AcquisitionContextSRStorage", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage", "reference/generated/pydicom.uid.AllTransferSyntaxes", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage", "reference/generated/pydicom.uid.BasicTextSRStorage", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.BodyPositionWaveformStorage", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.CTImageStorage", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage", "reference/generated/pydicom.uid.ChestCADSRStorage", "reference/generated/pydicom.uid.ColonCADSRStorage", "reference/generated/pydicom.uid.ColorPaletteStorage", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.Comprehensive3DSRStorage", "reference/generated/pydicom.uid.ComprehensiveSRStorage", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage", "reference/generated/pydicom.uid.CornealTopographyMapStorage", "reference/generated/pydicom.uid.DICOS2DAITStorage", "reference/generated/pydicom.uid.DICOS3DAITStorage", "reference/generated/pydicom.uid.DICOSCTImageStorage", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.EddyCurrentImageStorage", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage", "reference/generated/pydicom.uid.EncapsulatedCDAStorage", "reference/generated/pydicom.uid.EncapsulatedMTLStorage", "reference/generated/pydicom.uid.EncapsulatedOBJStorage", "reference/generated/pydicom.uid.EncapsulatedPDFStorage", "reference/generated/pydicom.uid.EncapsulatedSTLStorage", "reference/generated/pydicom.uid.EnhancedCTImageStorage", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage", "reference/generated/pydicom.uid.EnhancedMRImageStorage", "reference/generated/pydicom.uid.EnhancedPETImageStorage", "reference/generated/pydicom.uid.EnhancedRTImageStorage", "reference/generated/pydicom.uid.EnhancedSRStorage", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage", "reference/generated/pydicom.uid.EnhancedXAImageStorage", "reference/generated/pydicom.uid.EnhancedXRFImageStorage", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.ExplicitVRBigEndian", "reference/generated/pydicom.uid.ExplicitVRLittleEndian", "reference/generated/pydicom.uid.ExtensibleSRStorage", "reference/generated/pydicom.uid.General32bitECGWaveformStorage", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage", "reference/generated/pydicom.uid.GeneralECGWaveformStorage", "reference/generated/pydicom.uid.GenericImplantTemplateStorage", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.HEVCM10P51", "reference/generated/pydicom.uid.HEVCMP51", "reference/generated/pydicom.uid.HTJ2K", "reference/generated/pydicom.uid.HTJ2KLossless", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL", "reference/generated/pydicom.uid.HangingProtocolStorage", "reference/generated/pydicom.uid.HemodynamicWaveformStorage", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage", "reference/generated/pydicom.uid.ImplantationPlanSRStorage", "reference/generated/pydicom.uid.ImplicitVRLittleEndian", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pydicom.uid.InventoryStorage", "reference/generated/pydicom.uid.JPEG2000", "reference/generated/pydicom.uid.JPEG2000Lossless", "reference/generated/pydicom.uid.JPEG2000MC", "reference/generated/pydicom.uid.JPEG2000MCLossless", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes", "reference/generated/pydicom.uid.JPEGBaseline8Bit", "reference/generated/pydicom.uid.JPEGExtended12Bit", "reference/generated/pydicom.uid.JPEGLSLossless", "reference/generated/pydicom.uid.JPEGLSNearLossless", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes", "reference/generated/pydicom.uid.JPEGLossless", "reference/generated/pydicom.uid.JPEGLosslessSV1", "reference/generated/pydicom.uid.JPEGTransferSyntaxes", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pydicom.uid.LensometryMeasurementsStorage", "reference/generated/pydicom.uid.MPEG2MPHL", "reference/generated/pydicom.uid.MPEG2MPHLF", "reference/generated/pydicom.uid.MPEG2MPML", "reference/generated/pydicom.uid.MPEG2MPMLF", "reference/generated/pydicom.uid.MPEG4HP41", "reference/generated/pydicom.uid.MPEG4HP41BD", "reference/generated/pydicom.uid.MPEG4HP41BDF", "reference/generated/pydicom.uid.MPEG4HP41F", "reference/generated/pydicom.uid.MPEG4HP422D", "reference/generated/pydicom.uid.MPEG4HP422DF", "reference/generated/pydicom.uid.MPEG4HP423D", "reference/generated/pydicom.uid.MPEG4HP423DF", "reference/generated/pydicom.uid.MPEG4HP42STEREO", "reference/generated/pydicom.uid.MPEG4HP42STEREOF", "reference/generated/pydicom.uid.MPEGTransferSyntaxes", "reference/generated/pydicom.uid.MRImageStorage", "reference/generated/pydicom.uid.MRSpectroscopyStorage", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pydicom.uid.MammographyCADSRStorage", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.NuclearMedicineImageStorage", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID", "reference/generated/pydicom.uid.ParametricMapStorage", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PhotoacousticImageStorage", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage", "reference/generated/pydicom.uid.ProcedureLogStorage", "reference/generated/pydicom.uid.ProtocolApprovalStorage", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.RE_VALID_UID", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX", "reference/generated/pydicom.uid.RLELossless", "reference/generated/pydicom.uid.RLETransferSyntaxes", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage", "reference/generated/pydicom.uid.RTDoseStorage", "reference/generated/pydicom.uid.RTImageStorage", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTIonPlanStorage", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "reference/generated/pydicom.uid.RTPhysicianIntentStorage", "reference/generated/pydicom.uid.RTPlanStorage", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTRadiationSetStorage", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage", "reference/generated/pydicom.uid.RTStructureSetStorage", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pydicom.uid.RawDataStorage", "reference/generated/pydicom.uid.RealWorldValueMappingStorage", "reference/generated/pydicom.uid.RespiratoryWaveformStorage", "reference/generated/pydicom.uid.RoboticArmRadiationStorage", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage", "reference/generated/pydicom.uid.SegmentationStorage", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SpatialFiducialsStorage", "reference/generated/pydicom.uid.SpatialRegistrationStorage", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage", "reference/generated/pydicom.uid.StereometricRelationshipStorage", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage", "reference/generated/pydicom.uid.SurfaceScanMeshStorage", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage", "reference/generated/pydicom.uid.SurfaceSegmentationStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage", "reference/generated/pydicom.uid.TractographyResultsStorage", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage", "reference/generated/pydicom.uid.UID", "reference/generated/pydicom.uid.UltrasoundImageStorage", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes", "reference/generated/pydicom.uid.VLEndoscopicImageStorage", "reference/generated/pydicom.uid.VLMicroscopicImageStorage", "reference/generated/pydicom.uid.VLPhotographicImageStorage", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage", "reference/generated/pydicom.uid.VideoPhotographicImageStorage", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage", "reference/generated/pydicom.uid.XRayAngiographicImageStorage", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage", "reference/generated/pydicom.uid.generate_uid", "reference/generated/pydicom.valuerep.DA", "reference/generated/pydicom.valuerep.DS", "reference/generated/pydicom.valuerep.DSdecimal", "reference/generated/pydicom.valuerep.DSfloat", "reference/generated/pydicom.valuerep.DT", "reference/generated/pydicom.valuerep.IS", "reference/generated/pydicom.valuerep.ISfloat", "reference/generated/pydicom.valuerep.PersonName", "reference/generated/pydicom.valuerep.TM", "reference/generated/pydicom.valuerep.VR", "reference/generated/pydicom.valuerep.format_number_as_ds", "reference/generated/pydicom.valuerep.is_valid_ds", "reference/generated/pydicom.values.convert_AE_string", "reference/generated/pydicom.values.convert_ATvalue", "reference/generated/pydicom.values.convert_DA_string", "reference/generated/pydicom.values.convert_DS_string", "reference/generated/pydicom.values.convert_DT_string", "reference/generated/pydicom.values.convert_IS_string", "reference/generated/pydicom.values.convert_OBvalue", "reference/generated/pydicom.values.convert_OWvalue", "reference/generated/pydicom.values.convert_PN", "reference/generated/pydicom.values.convert_SQ", "reference/generated/pydicom.values.convert_TM_string", "reference/generated/pydicom.values.convert_UI", "reference/generated/pydicom.values.convert_UN", "reference/generated/pydicom.values.convert_UR_string", "reference/generated/pydicom.values.convert_numbers", "reference/generated/pydicom.values.convert_single_string", "reference/generated/pydicom.values.convert_string", "reference/generated/pydicom.values.convert_tag", "reference/generated/pydicom.values.convert_text", "reference/generated/pydicom.values.convert_value", "reference/generated/pydicom.values.multi_string", "reference/generated/pydicom.waveforms.numpy_handler", "reference/handlers", "reference/handlers.overlay_data", "reference/handlers.pixel_data", "reference/handlers.waveform_data", "reference/index", "reference/misc", "reference/uid", "release_notes/index", "release_notes/v0.9.2", "release_notes/v0.9.3", "release_notes/v0.9.4", "release_notes/v0.9.5", "release_notes/v0.9.6", "release_notes/v0.9.7", "release_notes/v0.9.8", "release_notes/v0.9.9", "release_notes/v1.0.0", "release_notes/v1.1.0", "release_notes/v1.2.0", "release_notes/v1.3.0", "release_notes/v1.4.0", "release_notes/v1.4.1", "release_notes/v2.0.0", "release_notes/v2.1.0", "release_notes/v2.1.1", "release_notes/v2.2.0", "release_notes/v2.3.0", "release_notes/v2.4.0", "release_notes/v3.0.0", "sg_execution_times", "tutorials/contributing", "tutorials/contributing_code", "tutorials/contributing_docs", "tutorials/dataset_basics", "tutorials/dicom_json", "tutorials/filesets", "tutorials/index", "tutorials/installation", "tutorials/pixel_data/compressing", "tutorials/sr_basics", "tutorials/waveforms"], "filenames": ["auto_examples/dicomtree.rst", "auto_examples/image_processing/index.rst", "auto_examples/image_processing/plot_downsize_image.rst", "auto_examples/image_processing/plot_waveforms.rst", "auto_examples/image_processing/reslice.rst", "auto_examples/image_processing/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/input_output/index.rst", "auto_examples/input_output/plot_printing_dataset.rst", "auto_examples/input_output/plot_read_dicom.rst", "auto_examples/input_output/plot_read_fileset.rst", "auto_examples/input_output/plot_read_rtplan.rst", "auto_examples/input_output/plot_write_dicom.rst", "auto_examples/input_output/sg_execution_times.rst", "auto_examples/memory_dataset.rst", "auto_examples/metadata_processing/index.rst", "auto_examples/metadata_processing/plot_add_dict_entries.rst", "auto_examples/metadata_processing/plot_anonymize.rst", "auto_examples/metadata_processing/plot_sequences.rst", "auto_examples/metadata_processing/sg_execution_times.rst", "auto_examples/plot_dicom_difference.rst", "auto_examples/sg_execution_times.rst", "auto_examples/show_charset_name.rst", "faq/index.rst", "guides/cli/cli_codify.rst", "guides/cli/cli_dev.rst", "guides/cli/cli_guide.rst", "guides/cli/cli_intro.rst", "guides/cli/cli_show.rst", "guides/element_value_types.rst", "guides/encoding/encoder_plugin_options.rst", "guides/encoding/encoder_plugins.rst", "guides/encoding/index.rst", "guides/encoding/rle_lossless.rst", "guides/glossary.rst", "guides/index.rst", "guides/writing_documentation.rst", "index.rst", "old/base_element.rst", "old/best_practices.rst", "old/getting_started.rst", "old/image_data_compression.rst", "old/image_data_handlers.rst", "old/private_data_elements.rst", "old/pydicom_user_guide.rst", "old/ref_guide.rst", "old/viewing_images.rst", "old/working_with_overlays.rst", "old/working_with_pixel_data.rst", "old/working_with_waveforms.rst", "old/writing_files.rst", "reference/charset.rst", "reference/config.rst", "reference/data.rst", "reference/datadict.rst", "reference/dataset.rst", "reference/elem.rst", "reference/elem.dataelem.rst", "reference/elem.multival.rst", "reference/elem.sequence.rst", "reference/elem.tag.rst", "reference/elem.valuerep.rst", "reference/elem.values.rst", "reference/encaps.rst", "reference/encoders.rst", "reference/errors.rst", "reference/examples.rst", "reference/fileio.rst", "reference/fileio.base.rst", "reference/fileio.read.rst", "reference/fileio.util.rst", "reference/fileio.write.rst", "reference/fileset.rst", "reference/generated/pydicom.charset.convert_encodings.rst", "reference/generated/pydicom.charset.decode_bytes.rst", "reference/generated/pydicom.charset.decode_element.rst", "reference/generated/pydicom.charset.encode_string.rst", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS.rst", "reference/generated/pydicom.config.DS_decimal.rst", "reference/generated/pydicom.config.DS_numpy.rst", "reference/generated/pydicom.config.IGNORE.rst", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR.rst", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR.rst", "reference/generated/pydicom.config.RAISE.rst", "reference/generated/pydicom.config.WARN.rst", "reference/generated/pydicom.config.allow_DS_float.rst", "reference/generated/pydicom.config.assume_implicit_vr_switch.rst", "reference/generated/pydicom.config.convert_wrong_length_to_UN.rst", "reference/generated/pydicom.config.data_element_callback.rst", "reference/generated/pydicom.config.data_element_callback_kwargs.rst", "reference/generated/pydicom.config.datetime_conversion.rst", "reference/generated/pydicom.config.debug.rst", "reference/generated/pydicom.config.enforce_valid_values.rst", "reference/generated/pydicom.config.future_behavior.rst", "reference/generated/pydicom.config.pixel_data_handlers.rst", "reference/generated/pydicom.config.reset_data_element_callback.rst", "reference/generated/pydicom.config.settings.rst", "reference/generated/pydicom.config.show_file_meta.rst", "reference/generated/pydicom.config.use_DS_decimal.rst", "reference/generated/pydicom.config.use_DS_numpy.rst", "reference/generated/pydicom.config.use_IS_numpy.rst", "reference/generated/pydicom.data.get_charset_files.rst", "reference/generated/pydicom.data.get_palette_files.rst", "reference/generated/pydicom.data.get_testdata_file.rst", "reference/generated/pydicom.data.get_testdata_files.rst", "reference/generated/pydicom.datadict.add_dict_entries.rst", "reference/generated/pydicom.datadict.add_dict_entry.rst", "reference/generated/pydicom.datadict.add_private_dict_entries.rst", "reference/generated/pydicom.datadict.add_private_dict_entry.rst", "reference/generated/pydicom.datadict.dictionary_VM.rst", "reference/generated/pydicom.datadict.dictionary_VR.rst", "reference/generated/pydicom.datadict.dictionary_description.rst", "reference/generated/pydicom.datadict.dictionary_has_tag.rst", "reference/generated/pydicom.datadict.dictionary_is_retired.rst", "reference/generated/pydicom.datadict.dictionary_keyword.rst", "reference/generated/pydicom.datadict.get_entry.rst", "reference/generated/pydicom.datadict.get_private_entry.rst", "reference/generated/pydicom.datadict.keyword_for_tag.rst", "reference/generated/pydicom.datadict.mask_match.rst", "reference/generated/pydicom.datadict.private_dictionary_VM.rst", "reference/generated/pydicom.datadict.private_dictionary_VR.rst", "reference/generated/pydicom.datadict.private_dictionary_description.rst", "reference/generated/pydicom.datadict.repeater_has_keyword.rst", "reference/generated/pydicom.datadict.repeater_has_tag.rst", "reference/generated/pydicom.datadict.tag_for_keyword.rst", "reference/generated/pydicom.dataelem.DataElement.rst", "reference/generated/pydicom.dataelem.DataElement_from_raw.rst", "reference/generated/pydicom.dataelem.RawDataElement.rst", "reference/generated/pydicom.dataset.Dataset.rst", "reference/generated/pydicom.dataset.FileDataset.rst", "reference/generated/pydicom.dataset.FileMetaDataset.rst", "reference/generated/pydicom.dataset.PrivateBlock.rst", "reference/generated/pydicom.dataset.validate_file_meta.rst", "reference/generated/pydicom.encaps.decode_data_sequence.rst", "reference/generated/pydicom.encaps.defragment_data.rst", "reference/generated/pydicom.encaps.encapsulate.rst", "reference/generated/pydicom.encaps.encapsulate_extended.rst", "reference/generated/pydicom.encaps.fragment_frame.rst", "reference/generated/pydicom.encaps.generate_pixel_data.rst", "reference/generated/pydicom.encaps.generate_pixel_data_fragment.rst", "reference/generated/pydicom.encaps.generate_pixel_data_frame.rst", "reference/generated/pydicom.encaps.get_frame_offsets.rst", "reference/generated/pydicom.encaps.itemize_fragment.rst", "reference/generated/pydicom.encaps.itemize_frame.rst", "reference/generated/pydicom.encaps.read_item.rst", "reference/generated/pydicom.encoders.RLELosslessEncoder.rst", "reference/generated/pydicom.encoders.base.Encoder.rst", "reference/generated/pydicom.encoders.get_encoder.rst", "reference/generated/pydicom.errors.InvalidDicomError.rst", "reference/generated/pydicom.filebase.DicomBytesIO.rst", "reference/generated/pydicom.filebase.DicomFile.rst", "reference/generated/pydicom.filebase.DicomFileLike.rst", "reference/generated/pydicom.filebase.DicomIO.rst", "reference/generated/pydicom.filereader.data_element_generator.rst", "reference/generated/pydicom.filereader.data_element_offset_to_value.rst", "reference/generated/pydicom.filereader.dcmread.rst", "reference/generated/pydicom.filereader.read_dataset.rst", "reference/generated/pydicom.filereader.read_deferred_data_element.rst", "reference/generated/pydicom.filereader.read_file_meta_info.rst", "reference/generated/pydicom.filereader.read_partial.rst", "reference/generated/pydicom.filereader.read_preamble.rst", "reference/generated/pydicom.filereader.read_sequence.rst", "reference/generated/pydicom.filereader.read_sequence_item.rst", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS.rst", "reference/generated/pydicom.fileset.FileInstance.rst", "reference/generated/pydicom.fileset.FileSet.rst", "reference/generated/pydicom.fileset.RecordNode.rst", "reference/generated/pydicom.fileset.generate_filename.rst", "reference/generated/pydicom.fileset.is_conformant_file_id.rst", "reference/generated/pydicom.fileutil.absorb_delimiter_item.rst", "reference/generated/pydicom.fileutil.find_bytes.rst", "reference/generated/pydicom.fileutil.find_delimiter.rst", "reference/generated/pydicom.fileutil.length_of_undefined_length.rst", "reference/generated/pydicom.fileutil.read_undefined_length_value.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element.rst", "reference/generated/pydicom.filewriter.dcmwrite.rst", "reference/generated/pydicom.filewriter.multi_string.rst", "reference/generated/pydicom.filewriter.write_ATvalue.rst", "reference/generated/pydicom.filewriter.write_DA.rst", "reference/generated/pydicom.filewriter.write_DT.rst", "reference/generated/pydicom.filewriter.write_OBvalue.rst", "reference/generated/pydicom.filewriter.write_OWvalue.rst", "reference/generated/pydicom.filewriter.write_PN.rst", "reference/generated/pydicom.filewriter.write_TM.rst", "reference/generated/pydicom.filewriter.write_UI.rst", "reference/generated/pydicom.filewriter.write_UN.rst", "reference/generated/pydicom.filewriter.write_data_element.rst", "reference/generated/pydicom.filewriter.write_dataset.rst", "reference/generated/pydicom.filewriter.write_file_meta_info.rst", "reference/generated/pydicom.filewriter.write_number_string.rst", "reference/generated/pydicom.filewriter.write_numbers.rst", "reference/generated/pydicom.filewriter.write_sequence.rst", "reference/generated/pydicom.filewriter.write_sequence_item.rst", "reference/generated/pydicom.filewriter.write_string.rst", "reference/generated/pydicom.filewriter.write_text.rst", "reference/generated/pydicom.misc.is_dicom.rst", "reference/generated/pydicom.misc.size_in_bytes.rst", "reference/generated/pydicom.multival.MultiValue.rst", "reference/generated/pydicom.overlays.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_rescale.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_windowing.rst", "reference/generated/pydicom.pixel_data_handlers.convert_color_space.rst", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler.rst", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler.rst", "reference/generated/pydicom.pixel_data_handlers.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pillow_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler.rst", "reference/generated/pydicom.pixel_data_handlers.rle_handler.rst", "reference/generated/pydicom.pixel_data_handlers.util.rst", "reference/generated/pydicom.sequence.Sequence.rst", "reference/generated/pydicom.tag.BaseTag.rst", "reference/generated/pydicom.tag.Tag.rst", "reference/generated/pydicom.tag.TupleTag.rst", "reference/generated/pydicom.tag.tag_in_exception.rst", "reference/generated/pydicom.uid.AcquisitionContextSRStorage.rst", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pydicom.uid.AllTransferSyntaxes.rst", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage.rst", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage.rst", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage.rst", "reference/generated/pydicom.uid.BasicTextSRStorage.rst", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.BodyPositionWaveformStorage.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CTImageStorage.rst", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pydicom.uid.ChestCADSRStorage.rst", "reference/generated/pydicom.uid.ColonCADSRStorage.rst", "reference/generated/pydicom.uid.ColorPaletteStorage.rst", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.Comprehensive3DSRStorage.rst", "reference/generated/pydicom.uid.ComprehensiveSRStorage.rst", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage.rst", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage.rst", "reference/generated/pydicom.uid.CornealTopographyMapStorage.rst", "reference/generated/pydicom.uid.DICOS2DAITStorage.rst", "reference/generated/pydicom.uid.DICOS3DAITStorage.rst", "reference/generated/pydicom.uid.DICOSCTImageStorage.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage.rst", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage.rst", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.EddyCurrentImageStorage.rst", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage.rst", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage.rst", "reference/generated/pydicom.uid.EncapsulatedCDAStorage.rst", "reference/generated/pydicom.uid.EncapsulatedMTLStorage.rst", "reference/generated/pydicom.uid.EncapsulatedOBJStorage.rst", "reference/generated/pydicom.uid.EncapsulatedPDFStorage.rst", "reference/generated/pydicom.uid.EncapsulatedSTLStorage.rst", "reference/generated/pydicom.uid.EnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.EnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.EnhancedRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedSRStorage.rst", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage.rst", "reference/generated/pydicom.uid.EnhancedXAImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRFImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.ExplicitVRBigEndian.rst", "reference/generated/pydicom.uid.ExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.ExtensibleSRStorage.rst", "reference/generated/pydicom.uid.General32bitECGWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralECGWaveformStorage.rst", "reference/generated/pydicom.uid.GenericImplantTemplateStorage.rst", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.HEVCM10P51.rst", "reference/generated/pydicom.uid.HEVCMP51.rst", "reference/generated/pydicom.uid.HTJ2K.rst", "reference/generated/pydicom.uid.HTJ2KLossless.rst", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL.rst", "reference/generated/pydicom.uid.HangingProtocolStorage.rst", "reference/generated/pydicom.uid.HemodynamicWaveformStorage.rst", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage.rst", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage.rst", "reference/generated/pydicom.uid.ImplantationPlanSRStorage.rst", "reference/generated/pydicom.uid.ImplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pydicom.uid.InventoryStorage.rst", "reference/generated/pydicom.uid.JPEG2000.rst", "reference/generated/pydicom.uid.JPEG2000Lossless.rst", "reference/generated/pydicom.uid.JPEG2000MC.rst", "reference/generated/pydicom.uid.JPEG2000MCLossless.rst", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGBaseline8Bit.rst", "reference/generated/pydicom.uid.JPEGExtended12Bit.rst", "reference/generated/pydicom.uid.JPEGLSLossless.rst", "reference/generated/pydicom.uid.JPEGLSNearLossless.rst", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGLossless.rst", "reference/generated/pydicom.uid.JPEGLosslessSV1.rst", "reference/generated/pydicom.uid.JPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate.rst", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.LensometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.MPEG2MPHL.rst", "reference/generated/pydicom.uid.MPEG2MPHLF.rst", "reference/generated/pydicom.uid.MPEG2MPML.rst", "reference/generated/pydicom.uid.MPEG2MPMLF.rst", "reference/generated/pydicom.uid.MPEG4HP41.rst", "reference/generated/pydicom.uid.MPEG4HP41BD.rst", "reference/generated/pydicom.uid.MPEG4HP41BDF.rst", "reference/generated/pydicom.uid.MPEG4HP41F.rst", "reference/generated/pydicom.uid.MPEG4HP422D.rst", "reference/generated/pydicom.uid.MPEG4HP422DF.rst", "reference/generated/pydicom.uid.MPEG4HP423D.rst", "reference/generated/pydicom.uid.MPEG4HP423DF.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREO.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREOF.rst", "reference/generated/pydicom.uid.MPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.MRImageStorage.rst", "reference/generated/pydicom.uid.MRSpectroscopyStorage.rst", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pydicom.uid.MammographyCADSRStorage.rst", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage.rst", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.NuclearMedicineImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage.rst", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID.rst", "reference/generated/pydicom.uid.ParametricMapStorage.rst", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PhotoacousticImageStorage.rst", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage.rst", "reference/generated/pydicom.uid.ProcedureLogStorage.rst", "reference/generated/pydicom.uid.ProtocolApprovalStorage.rst", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.RE_VALID_UID.rst", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX.rst", "reference/generated/pydicom.uid.RLELossless.rst", "reference/generated/pydicom.uid.RLETransferSyntaxes.rst", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTDoseStorage.rst", "reference/generated/pydicom.uid.RTImageStorage.rst", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTIonPlanStorage.rst", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage.rst", "reference/generated/pydicom.uid.RTPhysicianIntentStorage.rst", "reference/generated/pydicom.uid.RTPlanStorage.rst", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage.rst", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetStorage.rst", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage.rst", "reference/generated/pydicom.uid.RTStructureSetStorage.rst", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage.rst", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.RawDataStorage.rst", "reference/generated/pydicom.uid.RealWorldValueMappingStorage.rst", "reference/generated/pydicom.uid.RespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.RoboticArmRadiationStorage.rst", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio.rst", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.SegmentationStorage.rst", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SpatialFiducialsStorage.rst", "reference/generated/pydicom.uid.SpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage.rst", "reference/generated/pydicom.uid.StereometricRelationshipStorage.rst", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.SurfaceScanMeshStorage.rst", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage.rst", "reference/generated/pydicom.uid.SurfaceSegmentationStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage.rst", "reference/generated/pydicom.uid.TractographyResultsStorage.rst", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage.rst", "reference/generated/pydicom.uid.UID.rst", "reference/generated/pydicom.uid.UltrasoundImageStorage.rst", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes.rst", "reference/generated/pydicom.uid.VLEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VLMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage.rst", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage.rst", "reference/generated/pydicom.uid.XRayAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pydicom.uid.generate_uid.rst", "reference/generated/pydicom.valuerep.DA.rst", "reference/generated/pydicom.valuerep.DS.rst", "reference/generated/pydicom.valuerep.DSdecimal.rst", "reference/generated/pydicom.valuerep.DSfloat.rst", "reference/generated/pydicom.valuerep.DT.rst", "reference/generated/pydicom.valuerep.IS.rst", "reference/generated/pydicom.valuerep.ISfloat.rst", "reference/generated/pydicom.valuerep.PersonName.rst", "reference/generated/pydicom.valuerep.TM.rst", "reference/generated/pydicom.valuerep.VR.rst", "reference/generated/pydicom.valuerep.format_number_as_ds.rst", "reference/generated/pydicom.valuerep.is_valid_ds.rst", "reference/generated/pydicom.values.convert_AE_string.rst", "reference/generated/pydicom.values.convert_ATvalue.rst", "reference/generated/pydicom.values.convert_DA_string.rst", "reference/generated/pydicom.values.convert_DS_string.rst", "reference/generated/pydicom.values.convert_DT_string.rst", "reference/generated/pydicom.values.convert_IS_string.rst", "reference/generated/pydicom.values.convert_OBvalue.rst", "reference/generated/pydicom.values.convert_OWvalue.rst", "reference/generated/pydicom.values.convert_PN.rst", "reference/generated/pydicom.values.convert_SQ.rst", "reference/generated/pydicom.values.convert_TM_string.rst", "reference/generated/pydicom.values.convert_UI.rst", "reference/generated/pydicom.values.convert_UN.rst", "reference/generated/pydicom.values.convert_UR_string.rst", "reference/generated/pydicom.values.convert_numbers.rst", "reference/generated/pydicom.values.convert_single_string.rst", "reference/generated/pydicom.values.convert_string.rst", "reference/generated/pydicom.values.convert_tag.rst", "reference/generated/pydicom.values.convert_text.rst", "reference/generated/pydicom.values.convert_value.rst", "reference/generated/pydicom.values.multi_string.rst", "reference/generated/pydicom.waveforms.numpy_handler.rst", "reference/handlers.rst", "reference/handlers.overlay_data.rst", "reference/handlers.pixel_data.rst", "reference/handlers.waveform_data.rst", "reference/index.rst", "reference/misc.rst", "reference/uid.rst", "release_notes/index.rst", "release_notes/v0.9.2.rst", "release_notes/v0.9.3.rst", "release_notes/v0.9.4.rst", "release_notes/v0.9.5.rst", "release_notes/v0.9.6.rst", "release_notes/v0.9.7.rst", "release_notes/v0.9.8.rst", "release_notes/v0.9.9.rst", "release_notes/v1.0.0.rst", "release_notes/v1.1.0.rst", "release_notes/v1.2.0.rst", "release_notes/v1.3.0.rst", "release_notes/v1.4.0.rst", "release_notes/v1.4.1.rst", "release_notes/v2.0.0.rst", "release_notes/v2.1.0.rst", "release_notes/v2.1.1.rst", "release_notes/v2.2.0.rst", "release_notes/v2.3.0.rst", "release_notes/v2.4.0.rst", "release_notes/v3.0.0.rst", "sg_execution_times.rst", "tutorials/contributing.rst", "tutorials/contributing_code.rst", "tutorials/contributing_docs.rst", "tutorials/dataset_basics.rst", "tutorials/dicom_json.rst", "tutorials/filesets.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/pixel_data/compressing.rst", "tutorials/sr_basics.rst", "tutorials/waveforms.rst"], "titles": ["Show a dicom file using hierarchical tree", "Image processing", "Downsize MRI image using pydicom", "Decode and plot Waveform Data", "Load CT slices and plot axial, sagittal and coronal images", "Computation times", "General examples", "Input-output", "Format the output of the data set printing", "Read a Dataset and plot Pixel Data", "Read a DICOM File-set", "Read RTPLAN DICOM and list information", "Write DICOM data", "Computation times", "Show working with memory-based dataset", "Metadata processing", "Add items to the private DICOM dictionary", "Anonymize DICOM data", "Working with sequences", "Computation times", "Analyse differences between DICOM files", "Computation times", "Display unicode person names", "Frequently asked questions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">codify</span></code> command", "Extending the CLI", "Command-line Interface Guide", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">show</span></code> command", "Element VRs and Python types", "Encoder Plugins Options", "Pixel Data Encoder Plugins", "Pixel Data Encoding", "RLE Lossless Encoding", "Glossary", "Guides", "Writing documentation", "pydicom documentation", "Core elements in pydicom", "Best Practices", "Introduction to pydicom", "Compressing <em>Pixel Data</em>", "Handling of compressed pixel data", "Private Data Elements", "pydicom User Guide", "Reading and writing DICOM files", "Viewing Images", "Working with Overlay Data", "Working with Pixel Data", "Working with Waveform Data", "Writing DICOM Files", "Character Encoding and Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.charset</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.config</span></code>)", "Getting Included Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.data</span></code>)", "Data Dictionary Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.datadict</span></code>)", "Representation of Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataset</span></code>)", "Representation of Data Elements", "Data Elements (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataelem</span></code>)", "Element Multi-value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.multival</span></code>)", "Sequence Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sequence</span></code>)", "Element Tags (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.tag</span></code>)", "Specialized Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.valuerep</span></code>)", "Element Value Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.values</span></code>)", "Bulk Data Encapsulation Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encaps</span></code>)", "Pixel Data Encoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encoders</span></code>)", "Exceptions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.errors</span></code>)", "Example Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.examples</span></code>)", "Dataset IO", "IO Base Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filebase</span></code>)", "Dataset Reading (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filereader</span></code>)", "IO Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileutil</span></code>)", "Dataset Writing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filewriter</span></code>)", "DICOM File-sets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileset</span></code>)", "pydicom.charset.convert_encodings", "pydicom.charset.decode_bytes", "pydicom.charset.decode_element", "pydicom.charset.encode_string", "pydicom.config.APPLY_J2K_CORRECTIONS", "pydicom.config.DS_decimal", "pydicom.config.DS_numpy", "pydicom.config.IGNORE", "pydicom.config.INVALID_KEYWORD_BEHAVIOR", "pydicom.config.INVALID_KEY_BEHAVIOR", "pydicom.config.RAISE", "pydicom.config.WARN", "pydicom.config.allow_DS_float", "pydicom.config.assume_implicit_vr_switch", "pydicom.config.convert_wrong_length_to_UN", "pydicom.config.data_element_callback", "pydicom.config.data_element_callback_kwargs", "pydicom.config.datetime_conversion", "pydicom.config.debug", "pydicom.config.enforce_valid_values", "pydicom.config.future_behavior", "pydicom.config.pixel_data_handlers", "pydicom.config.reset_data_element_callback", "pydicom.config.settings", "pydicom.config.show_file_meta", "pydicom.config.use_DS_decimal", "pydicom.config.use_DS_numpy", "pydicom.config.use_IS_numpy", "pydicom.data.get_charset_files", "pydicom.data.get_palette_files", "pydicom.data.get_testdata_file", "pydicom.data.get_testdata_files", "pydicom.datadict.add_dict_entries", "pydicom.datadict.add_dict_entry", "pydicom.datadict.add_private_dict_entries", "pydicom.datadict.add_private_dict_entry", "pydicom.datadict.dictionary_VM", "pydicom.datadict.dictionary_VR", "pydicom.datadict.dictionary_description", "pydicom.datadict.dictionary_has_tag", "pydicom.datadict.dictionary_is_retired", "pydicom.datadict.dictionary_keyword", "pydicom.datadict.get_entry", "pydicom.datadict.get_private_entry", "pydicom.datadict.keyword_for_tag", "pydicom.datadict.mask_match", "pydicom.datadict.private_dictionary_VM", "pydicom.datadict.private_dictionary_VR", "pydicom.datadict.private_dictionary_description", "pydicom.datadict.repeater_has_keyword", "pydicom.datadict.repeater_has_tag", "pydicom.datadict.tag_for_keyword", "pydicom.dataelem.DataElement", "pydicom.dataelem.DataElement_from_raw", "pydicom.dataelem.RawDataElement", "pydicom.dataset.Dataset", "pydicom.dataset.FileDataset", "pydicom.dataset.FileMetaDataset", "pydicom.dataset.PrivateBlock", "pydicom.dataset.validate_file_meta", "pydicom.encaps.decode_data_sequence", "pydicom.encaps.defragment_data", "pydicom.encaps.encapsulate", "pydicom.encaps.encapsulate_extended", "pydicom.encaps.fragment_frame", "pydicom.encaps.generate_pixel_data", "pydicom.encaps.generate_pixel_data_fragment", "pydicom.encaps.generate_pixel_data_frame", "pydicom.encaps.get_frame_offsets", "pydicom.encaps.itemize_fragment", "pydicom.encaps.itemize_frame", "pydicom.encaps.read_item", "pydicom.encoders.RLELosslessEncoder", "pydicom.encoders.base.Encoder", "pydicom.encoders.get_encoder", "pydicom.errors.InvalidDicomError", "pydicom.filebase.DicomBytesIO", "pydicom.filebase.DicomFile", "pydicom.filebase.DicomFileLike", "pydicom.filebase.DicomIO", "pydicom.filereader.data_element_generator", "pydicom.filereader.data_element_offset_to_value", "pydicom.filereader.dcmread", "pydicom.filereader.read_dataset", "pydicom.filereader.read_deferred_data_element", "pydicom.filereader.read_file_meta_info", "pydicom.filereader.read_partial", "pydicom.filereader.read_preamble", "pydicom.filereader.read_sequence", "pydicom.filereader.read_sequence_item", "pydicom.fileset.DIRECTORY_RECORDERS", "pydicom.fileset.FileInstance", "pydicom.fileset.FileSet", "pydicom.fileset.RecordNode", "pydicom.fileset.generate_filename", "pydicom.fileset.is_conformant_file_id", "pydicom.fileutil.absorb_delimiter_item", "pydicom.fileutil.find_bytes", "pydicom.fileutil.find_delimiter", "pydicom.fileutil.length_of_undefined_length", "pydicom.fileutil.read_undefined_length_value", "pydicom.filewriter.correct_ambiguous_vr", "pydicom.filewriter.correct_ambiguous_vr_element", "pydicom.filewriter.dcmwrite", "pydicom.filewriter.multi_string", "pydicom.filewriter.write_ATvalue", "pydicom.filewriter.write_DA", "pydicom.filewriter.write_DT", "pydicom.filewriter.write_OBvalue", "pydicom.filewriter.write_OWvalue", "pydicom.filewriter.write_PN", "pydicom.filewriter.write_TM", "pydicom.filewriter.write_UI", "pydicom.filewriter.write_UN", "pydicom.filewriter.write_data_element", "pydicom.filewriter.write_dataset", "pydicom.filewriter.write_file_meta_info", "pydicom.filewriter.write_number_string", "pydicom.filewriter.write_numbers", "pydicom.filewriter.write_sequence", "pydicom.filewriter.write_sequence_item", "pydicom.filewriter.write_string", "pydicom.filewriter.write_text", "pydicom.misc.is_dicom", "pydicom.misc.size_in_bytes", "pydicom.multival.MultiValue", "pydicom.overlays.numpy_handler", "pydicom.pixel_data_handlers.apply_color_lut", "pydicom.pixel_data_handlers.apply_modality_lut", "pydicom.pixel_data_handlers.apply_rescale", "pydicom.pixel_data_handlers.apply_voi", "pydicom.pixel_data_handlers.apply_voi_lut", "pydicom.pixel_data_handlers.apply_windowing", "pydicom.pixel_data_handlers.convert_color_space", "pydicom.pixel_data_handlers.gdcm_handler", "pydicom.pixel_data_handlers.jpeg_ls_handler", "pydicom.pixel_data_handlers.numpy_handler", "pydicom.pixel_data_handlers.pillow_handler", "pydicom.pixel_data_handlers.pylibjpeg_handler", "pydicom.pixel_data_handlers.rle_handler", "pydicom.pixel_data_handlers.util", "pydicom.sequence.Sequence", "pydicom.tag.BaseTag", "pydicom.tag.Tag", "pydicom.tag.TupleTag", "pydicom.tag.tag_in_exception", "pydicom.uid.AcquisitionContextSRStorage", "pydicom.uid.AdvancedBlendingPresentationStateStorage", "pydicom.uid.AllTransferSyntaxes", "pydicom.uid.AmbulatoryECGWaveformStorage", "pydicom.uid.ArterialPulseWaveformStorage", "pydicom.uid.AutorefractionMeasurementsStorage", "pydicom.uid.BasicStructuredDisplayStorage", "pydicom.uid.BasicTextSRStorage", "pydicom.uid.BasicVoiceAudioWaveformStorage", "pydicom.uid.BlendingSoftcopyPresentationStateStorage", "pydicom.uid.BodyPositionWaveformStorage", "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "pydicom.uid.BreastTomosynthesisImageStorage", "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "pydicom.uid.CArmPhotonElectronRadiationStorage", "pydicom.uid.CTDefinedProcedureProtocolStorage", "pydicom.uid.CTImageStorage", "pydicom.uid.CTPerformedProcedureProtocolStorage", "pydicom.uid.CardiacElectrophysiologyWaveformStorage", "pydicom.uid.ChestCADSRStorage", "pydicom.uid.ColonCADSRStorage", "pydicom.uid.ColorPaletteStorage", "pydicom.uid.ColorSoftcopyPresentationStateStorage", "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.Comprehensive3DSRStorage", "pydicom.uid.ComprehensiveSRStorage", "pydicom.uid.ComputedRadiographyImageStorage", "pydicom.uid.ConfocalMicroscopyImageStorage", "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "pydicom.uid.ContentAssessmentResultsStorage", "pydicom.uid.CornealTopographyMapStorage", "pydicom.uid.DICOS2DAITStorage", "pydicom.uid.DICOS3DAITStorage", "pydicom.uid.DICOSCTImageStorage", "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "pydicom.uid.DICOSQuadrupoleResonanceStorage", "pydicom.uid.DICOSThreatDetectionReportStorage", "pydicom.uid.DeflatedExplicitVRLittleEndian", "pydicom.uid.DeformableSpatialRegistrationStorage", "pydicom.uid.DermoscopicPhotographyImageStorage", "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "pydicom.uid.DigitalXRayImageStorageForPresentation", "pydicom.uid.DigitalXRayImageStorageForProcessing", "pydicom.uid.EddyCurrentImageStorage", "pydicom.uid.EddyCurrentMultiFrameImageStorage", "pydicom.uid.ElectromyogramWaveformStorage", "pydicom.uid.ElectrooculogramWaveformStorage", "pydicom.uid.EncapsulatedCDAStorage", "pydicom.uid.EncapsulatedMTLStorage", "pydicom.uid.EncapsulatedOBJStorage", "pydicom.uid.EncapsulatedPDFStorage", "pydicom.uid.EncapsulatedSTLStorage", "pydicom.uid.EnhancedCTImageStorage", "pydicom.uid.EnhancedContinuousRTImageStorage", "pydicom.uid.EnhancedMRColorImageStorage", "pydicom.uid.EnhancedMRImageStorage", "pydicom.uid.EnhancedPETImageStorage", "pydicom.uid.EnhancedRTImageStorage", "pydicom.uid.EnhancedSRStorage", "pydicom.uid.EnhancedUSVolumeStorage", "pydicom.uid.EnhancedXAImageStorage", "pydicom.uid.EnhancedXRFImageStorage", "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "pydicom.uid.ExplicitVRBigEndian", "pydicom.uid.ExplicitVRLittleEndian", "pydicom.uid.ExtensibleSRStorage", "pydicom.uid.General32bitECGWaveformStorage", "pydicom.uid.GeneralAudioWaveformStorage", "pydicom.uid.GeneralECGWaveformStorage", "pydicom.uid.GenericImplantTemplateStorage", "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.HEVCM10P51", "pydicom.uid.HEVCMP51", "pydicom.uid.HTJ2K", "pydicom.uid.HTJ2KLossless", "pydicom.uid.HTJ2KLosslessRPCL", "pydicom.uid.HangingProtocolStorage", "pydicom.uid.HemodynamicWaveformStorage", "pydicom.uid.ImplantAssemblyTemplateStorage", "pydicom.uid.ImplantTemplateGroupStorage", "pydicom.uid.ImplantationPlanSRStorage", "pydicom.uid.ImplicitVRLittleEndian", "pydicom.uid.IntraocularLensCalculationsStorage", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pydicom.uid.InventoryStorage", "pydicom.uid.JPEG2000", "pydicom.uid.JPEG2000Lossless", "pydicom.uid.JPEG2000MC", "pydicom.uid.JPEG2000MCLossless", "pydicom.uid.JPEG2000TransferSyntaxes", "pydicom.uid.JPEGBaseline8Bit", "pydicom.uid.JPEGExtended12Bit", "pydicom.uid.JPEGLSLossless", "pydicom.uid.JPEGLSNearLossless", "pydicom.uid.JPEGLSTransferSyntaxes", "pydicom.uid.JPEGLossless", "pydicom.uid.JPEGLosslessSV1", "pydicom.uid.JPEGTransferSyntaxes", "pydicom.uid.JPIPHTJ2KReferenced", "pydicom.uid.JPIPHTJ2KReferencedDeflate", "pydicom.uid.KeratometryMeasurementsStorage", "pydicom.uid.KeyObjectSelectionDocumentStorage", "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "pydicom.uid.LensometryMeasurementsStorage", "pydicom.uid.MPEG2MPHL", "pydicom.uid.MPEG2MPHLF", "pydicom.uid.MPEG2MPML", "pydicom.uid.MPEG2MPMLF", "pydicom.uid.MPEG4HP41", "pydicom.uid.MPEG4HP41BD", "pydicom.uid.MPEG4HP41BDF", "pydicom.uid.MPEG4HP41F", "pydicom.uid.MPEG4HP422D", "pydicom.uid.MPEG4HP422DF", "pydicom.uid.MPEG4HP423D", "pydicom.uid.MPEG4HP423DF", "pydicom.uid.MPEG4HP42STEREO", "pydicom.uid.MPEG4HP42STEREOF", "pydicom.uid.MPEGTransferSyntaxes", "pydicom.uid.MRImageStorage", "pydicom.uid.MRSpectroscopyStorage", "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "pydicom.uid.MammographyCADSRStorage", "pydicom.uid.MediaStorageDirectoryStorage", "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "pydicom.uid.MultichannelRespiratoryWaveformStorage", "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.NuclearMedicineImageStorage", "pydicom.uid.OphthalmicAxialMeasurementsStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pydicom.uid.OphthalmicPhotography16BitImageStorage", "pydicom.uid.OphthalmicPhotography8BitImageStorage", "pydicom.uid.OphthalmicThicknessMapStorage", "pydicom.uid.OphthalmicTomographyImageStorage", "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "pydicom.uid.PYDICOM_ROOT_UID", "pydicom.uid.ParametricMapStorage", "pydicom.uid.PatientRadiationDoseSRStorage", "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "pydicom.uid.PhotoacousticImageStorage", "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "pydicom.uid.PositronEmissionTomographyImageStorage", "pydicom.uid.ProcedureLogStorage", "pydicom.uid.ProtocolApprovalStorage", "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "pydicom.uid.RE_VALID_UID", "pydicom.uid.RE_VALID_UID_PREFIX", "pydicom.uid.RLELossless", "pydicom.uid.RLETransferSyntaxes", "pydicom.uid.RTBeamsDeliveryInstructionStorage", "pydicom.uid.RTBeamsTreatmentRecordStorage", "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "pydicom.uid.RTBrachyTreatmentRecordStorage", "pydicom.uid.RTDoseStorage", "pydicom.uid.RTImageStorage", "pydicom.uid.RTIonBeamsTreatmentRecordStorage", "pydicom.uid.RTIonPlanStorage", "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "pydicom.uid.RTPhysicianIntentStorage", "pydicom.uid.RTPlanStorage", "pydicom.uid.RTRadiationRecordSetStorage", "pydicom.uid.RTRadiationSalvageRecordStorage", "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "pydicom.uid.RTRadiationSetStorage", "pydicom.uid.RTSegmentAnnotationStorage", "pydicom.uid.RTStructureSetStorage", "pydicom.uid.RTTreatmentPreparationStorage", "pydicom.uid.RTTreatmentSummaryRecordStorage", "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "pydicom.uid.RawDataStorage", "pydicom.uid.RealWorldValueMappingStorage", "pydicom.uid.RespiratoryWaveformStorage", "pydicom.uid.RoboticArmRadiationStorage", "pydicom.uid.RoboticRadiationRecordStorage", "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "pydicom.uid.SMPTEST211030PCMDigitalAudio", "pydicom.uid.SecondaryCaptureImageStorage", "pydicom.uid.SegmentationStorage", "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.SimplifiedAdultEchoSRStorage", "pydicom.uid.SleepElectroencephalogramWaveformStorage", "pydicom.uid.SpatialFiducialsStorage", "pydicom.uid.SpatialRegistrationStorage", "pydicom.uid.SpectaclePrescriptionReportStorage", "pydicom.uid.StereometricRelationshipStorage", "pydicom.uid.SubjectiveRefractionMeasurementsStorage", "pydicom.uid.SurfaceScanMeshStorage", "pydicom.uid.SurfaceScanPointCloudStorage", "pydicom.uid.SurfaceSegmentationStorage", "pydicom.uid.TomotherapeuticRadiationRecordStorage", "pydicom.uid.TomotherapeuticRadiationStorage", "pydicom.uid.TractographyResultsStorage", "pydicom.uid.TwelveLeadECGWaveformStorage", "pydicom.uid.UID", "pydicom.uid.UltrasoundImageStorage", "pydicom.uid.UltrasoundMultiFrameImageStorage", "pydicom.uid.UncompressedTransferSyntaxes", "pydicom.uid.VLEndoscopicImageStorage", "pydicom.uid.VLMicroscopicImageStorage", "pydicom.uid.VLPhotographicImageStorage", "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "pydicom.uid.VLWholeSlideMicroscopyImageStorage", "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "pydicom.uid.VideoEndoscopicImageStorage", "pydicom.uid.VideoMicroscopicImageStorage", "pydicom.uid.VideoPhotographicImageStorage", "pydicom.uid.VisualAcuityMeasurementsStorage", "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pydicom.uid.XADefinedProcedureProtocolStorage", "pydicom.uid.XAPerformedProcedureProtocolStorage", "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.XRay3DAngiographicImageStorage", "pydicom.uid.XRay3DCraniofacialImageStorage", "pydicom.uid.XRayAngiographicImageStorage", "pydicom.uid.XRayRadiationDoseSRStorage", "pydicom.uid.XRayRadiofluoroscopicImageStorage", "pydicom.uid.generate_uid", "pydicom.valuerep.DA", "pydicom.valuerep.DS", "pydicom.valuerep.DSdecimal", "pydicom.valuerep.DSfloat", "pydicom.valuerep.DT", "pydicom.valuerep.IS", "pydicom.valuerep.ISfloat", "pydicom.valuerep.PersonName", "pydicom.valuerep.TM", "pydicom.valuerep.VR", "pydicom.valuerep.format_number_as_ds", "pydicom.valuerep.is_valid_ds", "pydicom.values.convert_AE_string", "pydicom.values.convert_ATvalue", "pydicom.values.convert_DA_string", "pydicom.values.convert_DS_string", "pydicom.values.convert_DT_string", "pydicom.values.convert_IS_string", "pydicom.values.convert_OBvalue", "pydicom.values.convert_OWvalue", "pydicom.values.convert_PN", "pydicom.values.convert_SQ", "pydicom.values.convert_TM_string", "pydicom.values.convert_UI", "pydicom.values.convert_UN", "pydicom.values.convert_UR_string", "pydicom.values.convert_numbers", "pydicom.values.convert_single_string", "pydicom.values.convert_string", "pydicom.values.convert_tag", "pydicom.values.convert_text", "pydicom.values.convert_value", "pydicom.values.multi_string", "pydicom.waveforms.numpy_handler", "Bulk Data Handlers", "Overlay Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.overlays</span></code>)", "Pixel Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixel_data_handlers</span></code>)", "Waveform Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.waveforms</span></code>)", "API Reference", "Miscellaneous (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.misc</span></code>)", "UID Definitions and Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.uid</span></code>)", "Release notes", "Version 0.9.2", "Version 0.9.3", "Version 0.9.4", "Version 0.9.5", "Version 0.9.6", "Version 0.9.7", "Version 0.9.8", "Version 0.9.9", "Version 1.0.0", "Version 1.1.0", "Version 1.2.0", "Version 1.3.0", "Version 1.4.0", "Version 1.4.1", "Version 2.0.0", "Version 2.1.0", "Version 2.1.1", "Version 2.2.0", "Version 2.3.0", "Version 2.4.0", "Version 3.0.0", "Computation times", "Contributing to pydicom", "Contributing a source code change", "Contributing a documentation change", "Dataset basics: read, access, modify, write", "Introduction to JSON support", "DICOM File-sets and DICOMDIR", "Tutorials", "How to install pydicom", "Compressing <em>Pixel Data</em>", "Structured Reporting", "Waveforms"], "terms": {"go": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 50, 158, 520, 521, 522, 524, 526], "end": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 137, 156, 171, 173, 213, 496, 502, 509], "download": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 103, 496, 512, 514, 515, 516], "full": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 43, 103, 129, 155, 496, 505, 506, 507, 512, 524, 527], "exampl": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 31, 34, 36, 38, 39, 40, 41, 43, 46, 47, 48, 49, 50, 81, 82, 105, 106, 107, 125, 128, 136, 146, 155, 163, 165, 429, 454, 462, 493, 496, 497, 498, 499, 501, 502, 504, 508, 512, 514, 517, 518, 519, 520, 521, 523, 524, 527, 529], "code": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 29, 38, 40, 43, 44, 45, 50, 74, 75, 93, 128, 153, 155, 158, 496, 497, 499, 503, 504, 505, 507, 509, 512, 514, 519, 521, 525, 526, 528, 529], "graphic": [0, 46, 48], "window": [0, 2, 8, 20, 26, 27, 39, 44, 204, 205, 213, 496, 497, 505, 509, 515, 520, 521, 522, 526], "from": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 66, 69, 73, 74, 76, 78, 81, 82, 88, 94, 105, 106, 115, 116, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 138, 140, 141, 143, 144, 146, 149, 150, 151, 152, 153, 154, 157, 160, 163, 164, 165, 166, 167, 174, 175, 176, 188, 189, 191, 198, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 429, 454, 457, 458, 462, 466, 484, 496, 499, 500, 501, 502, 503, 504, 507, 508, 511, 512, 513, 514, 517, 518, 520, 521, 522, 524, 526, 527, 528, 529], "pathlib": [0, 10, 12, 168, 524], "import": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 31, 33, 34, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 66, 81, 82, 105, 106, 125, 128, 136, 146, 163, 165, 429, 454, 496, 502, 505, 517, 520, 521, 522, 523, 524, 526, 527, 528, 529], "path": [0, 9, 10, 11, 12, 17, 24, 26, 27, 28, 31, 36, 38, 40, 42, 45, 48, 101, 102, 103, 104, 128, 129, 146, 155, 164, 165, 168, 176, 196, 496, 512, 517, 521, 524], "sy": [0, 4, 14, 529], "tkinter": [0, 22, 44, 496, 497, 499], "tk": [0, 22], "ttk": 0, "pydicom": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 25, 29, 31, 33, 35, 36, 42, 45, 47, 48, 49, 50, 56, 67, 489, 493, 497, 499, 500, 501, 502, 503, 504, 505, 506, 509, 511, 512, 514, 518, 520, 521, 522, 523, 524, 525, 528, 529], "print": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 38, 40, 47, 106, 108, 128, 496, 498, 509, 518, 521, 522, 524, 529], "__doc__": [0, 2, 8, 11, 14, 16, 20, 22], "def": [0, 8, 11, 14, 17, 25, 26, 31, 94, 128, 163, 520, 523], "build_tre": 0, "treeview": 0, "d": [0, 2, 3, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 38, 40, 41, 42, 43, 46, 47, 48, 49, 50, 52, 56, 61, 66, 78, 79, 81, 82, 94, 98, 99, 105, 106, 107, 125, 128, 135, 136, 146, 155, 163, 165, 174, 175, 190, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 457, 458, 462, 465, 470, 488, 496, 502, 503, 511, 514, 516, 520, 521, 522, 523, 524, 527, 529], "dataset": [0, 2, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 33, 34, 36, 39, 40, 42, 43, 44, 45, 46, 50, 70, 77, 81, 82, 88, 94, 97, 103, 104, 105, 106, 125, 126, 133, 135, 136, 138, 140, 146, 149, 151, 152, 155, 156, 159, 161, 162, 163, 164, 165, 166, 174, 175, 176, 188, 189, 193, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 429, 488, 493, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 521, 524, 525, 526, 527, 529], "parent": [0, 26, 27, 131, 152, 165, 166, 496, 506, 517, 524], "str": [0, 11, 14, 20, 29, 31, 38, 73, 74, 75, 76, 85, 89, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 176, 177, 183, 187, 188, 191, 192, 193, 194, 195, 196, 197, 199, 200, 206, 212, 213, 215, 216, 429, 454, 456, 457, 458, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 496, 506, 511, 514, 522], "none": [0, 2, 8, 10, 14, 20, 29, 30, 36, 73, 75, 78, 79, 88, 91, 93, 94, 95, 103, 105, 106, 107, 108, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 138, 140, 144, 146, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 213, 214, 216, 218, 429, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 485, 486, 487, 488, 496, 505, 508, 509, 512, 520, 522, 526, 528], "build": [0, 4, 174, 175, 496, 505, 516, 520], "out": [0, 46, 48, 50, 136, 165, 213, 457, 458, 496, 512, 519, 520, 521, 522, 524, 529], "paramet": [0, 10, 20, 24, 26, 31, 36, 48, 49, 50, 73, 74, 75, 76, 78, 79, 91, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 149, 151, 152, 153, 155, 156, 157, 159, 160, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 188, 189, 191, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 429, 454, 457, 458, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 496, 502, 504, 506, 512, 514, 515, 522, 524], "The": [0, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 66, 73, 74, 75, 76, 94, 96, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 149, 152, 153, 155, 157, 159, 160, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 188, 189, 191, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 454, 462, 465, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 496, 499, 506, 507, 512, 517, 520, 521, 522, 523, 526, 527, 528, 529], "object": [0, 10, 14, 31, 36, 38, 40, 43, 46, 82, 96, 100, 125, 128, 129, 131, 145, 151, 152, 155, 156, 157, 159, 160, 163, 165, 176, 198, 213, 214, 217, 462, 493, 496, 498, 499, 508, 509, 511, 514, 515, 522, 524, 529], "add": [0, 2, 6, 10, 12, 15, 18, 19, 20, 25, 26, 27, 31, 36, 38, 39, 41, 43, 47, 105, 107, 108, 125, 128, 131, 135, 136, 146, 163, 165, 166, 176, 213, 496, 505, 508, 514, 516, 517, 518, 520, 521, 522, 524, 527, 529], "item": [0, 6, 8, 9, 15, 19, 20, 24, 26, 27, 28, 29, 36, 38, 49, 50, 125, 128, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 162, 169, 193, 198, 496, 497, 498, 499, 502, 505, 508, 509, 514, 515, 518, 522, 524, 529], "id": [0, 2, 8, 9, 10, 12, 17, 20, 43, 128, 131, 164, 165, 166, 167, 168, 213, 496, 498, 515, 522, 524], "ani": [0, 10, 24, 26, 27, 29, 31, 34, 38, 39, 46, 47, 49, 76, 89, 103, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 125, 128, 130, 132, 135, 136, 137, 146, 148, 150, 152, 157, 165, 166, 176, 189, 198, 199, 204, 205, 213, 216, 455, 459, 462, 463, 476, 480, 486, 487, 496, 498, 499, 508, 514, 520, 521, 524, 526, 527], "default": [0, 9, 24, 26, 29, 31, 39, 42, 46, 47, 48, 52, 73, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 125, 128, 129, 132, 135, 137, 143, 146, 149, 152, 153, 155, 156, 165, 167, 174, 175, 176, 188, 189, 199, 203, 204, 205, 206, 209, 211, 212, 213, 454, 462, 470, 472, 476, 487, 488, 496, 500, 502, 503, 505, 507, 508, 509, 510, 511, 512, 514, 521, 522, 523, 524, 527], "For": [0, 17, 24, 26, 27, 31, 33, 34, 36, 38, 39, 41, 43, 47, 48, 50, 117, 125, 128, 135, 138, 139, 141, 146, 163, 165, 199, 213, 462, 496, 502, 512, 517, 520, 521, 522, 524, 526, 527], "each": [0, 3, 10, 20, 31, 33, 34, 37, 38, 41, 47, 48, 49, 66, 74, 128, 135, 136, 138, 139, 141, 142, 143, 146, 166, 167, 198, 206, 212, 213, 462, 488, 496, 511, 514, 520, 522, 524, 527, 529], "datael": [0, 36, 43, 44, 47, 56, 75, 126, 128, 129, 130, 153, 156, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 207, 496, 497, 505, 506, 507, 508, 511, 515, 517, 522], "current": [0, 20, 24, 26, 28, 34, 36, 39, 41, 93, 125, 128, 152, 165, 166, 174, 175, 182, 200, 206, 213, 462, 496, 514, 521, 524, 526, 527], "idx": [0, 146, 527], "elem": [0, 8, 17, 36, 38, 47, 75, 125, 128, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 199, 215, 217, 496, 499, 522], "enumer": [0, 4, 529], "tree_item": 0, "insert": [0, 521, 522], "text": [0, 20, 22, 29, 38, 43, 125, 155, 192, 193, 195, 476, 482, 483, 485, 486, 496, 498, 507, 520, 521, 522], "move": [0, 90, 96, 164, 165, 496, 502, 503, 521, 524], "vr": [0, 2, 8, 12, 16, 17, 20, 26, 27, 28, 35, 37, 38, 41, 42, 43, 52, 56, 61, 79, 86, 87, 90, 98, 99, 105, 106, 107, 108, 110, 115, 116, 120, 125, 126, 127, 128, 129, 131, 137, 152, 153, 154, 156, 157, 165, 174, 175, 176, 181, 182, 185, 189, 190, 209, 221, 429, 455, 457, 458, 459, 460, 461, 462, 463, 467, 476, 478, 480, 481, 482, 483, 485, 486, 496, 497, 498, 499, 500, 502, 503, 505, 506, 507, 508, 509, 511, 512, 514, 515, 516, 517, 522, 523, 527], "sq": [0, 8, 29, 52, 125, 128, 153, 476, 496, 502, 512, 515, 517, 522], "i": [0, 2, 3, 4, 10, 17, 20, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 56, 61, 66, 68, 70, 73, 74, 76, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 93, 94, 100, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 146, 148, 149, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 188, 189, 190, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 429, 454, 455, 459, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 480, 481, 483, 484, 496, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529], "sequenc": [0, 2, 3, 6, 8, 15, 19, 20, 24, 26, 27, 28, 29, 36, 44, 49, 50, 56, 74, 76, 86, 128, 137, 138, 139, 140, 156, 161, 162, 166, 169, 170, 192, 193, 201, 202, 203, 204, 213, 462, 476, 488, 493, 496, 497, 498, 502, 503, 506, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 524, 529], "contain": [0, 10, 24, 26, 29, 31, 34, 35, 36, 37, 38, 39, 43, 47, 48, 49, 50, 52, 66, 73, 75, 125, 127, 128, 130, 137, 138, 139, 140, 141, 146, 155, 156, 163, 170, 174, 175, 176, 189, 192, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 462, 466, 470, 472, 488, 496, 504, 507, 514, 517, 520, 522, 524, 529], "0": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 31, 33, 34, 38, 39, 40, 41, 43, 47, 48, 49, 78, 79, 80, 97, 99, 100, 125, 127, 128, 130, 131, 136, 146, 152, 161, 162, 163, 167, 168, 174, 175, 176, 199, 203, 204, 205, 209, 211, 212, 213, 368, 369, 379, 380, 429, 454, 470, 472, 476, 484, 488, 493, 513, 518, 521, 522, 524, 526, 527, 529], "more": [0, 24, 26, 27, 29, 31, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49, 96, 125, 128, 135, 137, 138, 139, 141, 146, 156, 159, 165, 168, 173, 176, 177, 191, 213, 462, 465, 496, 497, 498, 499, 501, 502, 509, 520, 521, 522, 523, 524, 526, 527, 529], "seq_idx": 0, "seq_item": 0, "valu": [0, 2, 8, 9, 10, 12, 17, 20, 26, 28, 29, 30, 31, 33, 34, 36, 38, 39, 41, 43, 47, 48, 50, 52, 56, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 90, 93, 100, 106, 108, 109, 110, 119, 120, 125, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 146, 152, 154, 155, 157, 163, 165, 173, 174, 175, 176, 177, 186, 191, 192, 193, 198, 199, 200, 201, 202, 203, 204, 206, 209, 211, 212, 213, 215, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 488, 493, 496, 497, 498, 501, 502, 503, 505, 506, 507, 508, 509, 511, 512, 514, 515, 516, 517, 520, 521, 522, 523, 524, 526, 527, 528, 529], "tree_seq_item": 0, "f": [0, 2, 3, 4, 8, 9, 10, 11, 12, 18, 20, 125, 128, 163, 165, 520, 524, 527, 529], "name": [0, 2, 6, 8, 9, 10, 11, 12, 14, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 31, 33, 36, 38, 39, 40, 41, 42, 43, 50, 103, 106, 108, 115, 116, 119, 120, 121, 125, 128, 132, 146, 147, 152, 155, 189, 200, 213, 429, 462, 496, 497, 498, 499, 502, 505, 506, 507, 512, 514, 515, 516, 517, 518, 520, 521, 522, 524, 527, 528, 529], "1": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 38, 40, 41, 42, 43, 47, 48, 49, 58, 77, 81, 82, 84, 93, 103, 105, 106, 107, 108, 125, 127, 128, 131, 132, 135, 136, 137, 138, 141, 142, 143, 145, 146, 147, 152, 155, 167, 176, 189, 199, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 462, 488, 497, 500, 503, 511, 514, 517, 520, 521, 522, 523, 524, 526, 527, 528, 529], "recurs": [0, 4, 43, 128, 496, 498, 500], "": [0, 2, 3, 4, 8, 9, 10, 12, 16, 17, 20, 24, 25, 26, 27, 28, 31, 34, 36, 37, 38, 41, 43, 45, 46, 47, 48, 50, 81, 90, 91, 94, 107, 113, 117, 124, 125, 128, 129, 135, 138, 141, 144, 146, 152, 155, 165, 166, 174, 175, 176, 206, 213, 215, 216, 368, 369, 464, 465, 466, 468, 475, 476, 483, 485, 486, 496, 498, 499, 501, 506, 507, 509, 512, 514, 519, 520, 521, 522, 524, 526, 527, 529], "__name__": [0, 14, 25, 26], "__main__": [0, 14, 25, 26], "len": [0, 3, 4, 8, 10, 14, 33, 522, 524, 529], "argv": [0, 4, 14], "2": [0, 2, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 38, 39, 41, 42, 43, 48, 49, 52, 77, 79, 81, 82, 83, 86, 93, 96, 97, 99, 100, 103, 105, 106, 107, 108, 125, 127, 128, 130, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 155, 163, 189, 199, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 462, 470, 472, 488, 499, 500, 502, 503, 505, 506, 508, 509, 517, 520, 522, 524, 526, 527, 529], "pleas": [0, 14, 25, 26, 28, 38, 40, 128, 176, 496, 503, 514, 520, 521], "suppli": [0, 14, 46, 50, 76, 155, 165, 200, 213, 454, 462, 522, 524], "python": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 43, 44, 50, 73, 74, 76, 91, 128, 207, 208, 210, 429, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 516, 517, 520, 521, 522, 523, 526, 527, 529], "dicomtre": [0, 21, 496, 497, 518], "py": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 38, 46, 50, 81, 82, 94, 496, 497, 500, 501, 502, 503, 504, 505, 513, 518, 520, 522, 524, 527], "exit": [0, 14, 24, 26, 27, 28], "read": [0, 2, 6, 7, 8, 13, 14, 16, 17, 18, 20, 24, 26, 27, 28, 37, 38, 39, 40, 43, 47, 48, 50, 52, 67, 73, 79, 86, 91, 103, 128, 129, 133, 134, 139, 144, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 169, 170, 172, 173, 196, 207, 209, 460, 461, 493, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 511, 512, 514, 515, 516, 517, 518, 521, 523, 524, 525, 528], "resolv": [0, 126, 174, 496, 502, 508], "strict": [0, 39, 461, 496, 509, 516], "true": [0, 10, 12, 16, 29, 31, 36, 38, 39, 41, 43, 49, 52, 66, 77, 78, 79, 85, 86, 90, 91, 93, 94, 97, 103, 112, 113, 122, 123, 125, 127, 128, 129, 132, 135, 139, 141, 146, 148, 152, 153, 155, 156, 160, 164, 165, 166, 167, 168, 170, 171, 172, 173, 176, 189, 196, 199, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 429, 457, 458, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 480, 481, 483, 484, 488, 496, 500, 502, 512, 514, 516, 517, 522, 524, 529], "dcmread": [0, 4, 9, 10, 11, 12, 14, 16, 38, 40, 42, 45, 48, 67, 88, 103, 129, 148, 151, 152, 153, 156, 159, 173, 197, 496, 505, 511, 512, 514, 517, 521, 522, 524, 529], "creat": [0, 4, 12, 14, 16, 18, 24, 25, 26, 27, 38, 39, 43, 46, 50, 85, 125, 126, 128, 146, 149, 151, 152, 153, 163, 164, 165, 166, 176, 198, 216, 429, 454, 455, 456, 459, 461, 462, 493, 496, 499, 501, 514, 516, 522, 526, 527, 528, 529], "root": [0, 9, 10, 22, 26, 27, 94, 165, 166, 168, 369, 454, 522, 524], "widget": [0, 46], "geometri": 0, "1200x900": 0, "titl": [0, 2, 20, 26, 28, 36, 43, 189, 462, 520, 521, 522], "viewer": [0, 46], "rowconfigur": 0, "weight": [0, 2, 8, 20], "columnconfigur": 0, "monospac": 0, "font": 0, "style": [0, 23, 496, 498, 501], "theme_us": 0, "clam": 0, "configur": [0, 34, 39, 96, 125, 128, 213, 493, 496, 507, 514, 515], "courier": 0, "12": [0, 31, 34, 49, 66, 146, 209, 284, 285, 397, 438, 451, 453, 524, 529], "popul": [0, 12, 50, 528], "grid": 0, "row": [0, 2, 8, 9, 20, 26, 28, 31, 47, 48, 128, 146, 199, 206, 209, 211, 212, 213, 527], "column": [0, 2, 8, 9, 20, 26, 28, 31, 47, 48, 128, 146, 199, 206, 209, 211, 212, 213, 527], "sticki": 0, "nsew": 0, "start": [0, 6, 17, 18, 20, 24, 26, 27, 28, 40, 47, 50, 125, 131, 139, 141, 154, 160, 166, 167, 172, 174, 175, 454, 476, 484, 496, 506, 516, 520, 521, 522, 523, 528], "mainloop": [0, 22], "jupyt": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "notebook": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "ipynb": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "sourc": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 23, 26, 28, 31, 43, 50, 52, 73, 74, 75, 76, 78, 79, 91, 93, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 496, 504, 512, 514, 517, 519, 522, 525, 526, 529], "galleri": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 518], "gener": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 25, 26, 27, 31, 33, 38, 39, 42, 50, 138, 143, 153, 159, 167, 214, 216, 429, 454, 461, 488, 496, 498, 499, 503, 505, 517, 521, 527], "sphinx": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 36, 496, 500, 521], "These": [1, 6, 7, 15, 35, 38, 39, 496, 512, 522], "illustr": [1, 3, 4, 6, 7, 8, 9, 15, 16, 18, 20, 37, 38], "avail": [1, 6, 10, 15, 24, 26, 27, 28, 30, 31, 38, 43, 46, 48, 49, 50, 103, 128, 129, 135, 136, 146, 152, 165, 207, 208, 210, 213, 462, 470, 472, 496, 498, 499, 503, 505, 506, 507, 509, 512, 524, 526, 527, 528, 529], "which": [1, 6, 20, 23, 24, 25, 26, 31, 34, 36, 38, 40, 41, 43, 46, 48, 49, 50, 74, 75, 81, 106, 125, 128, 153, 156, 158, 163, 165, 176, 189, 212, 213, 454, 456, 496, 497, 500, 502, 504, 512, 517, 520, 521, 522, 523, 524, 526, 527, 529], "can": [1, 6, 10, 14, 17, 24, 25, 26, 27, 28, 29, 31, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 93, 128, 135, 136, 146, 151, 152, 155, 156, 163, 165, 176, 191, 198, 456, 461, 487, 496, 497, 498, 499, 502, 511, 512, 515, 517, 520, 521, 522, 523, 524, 526, 527, 528, 529], "appli": [1, 6, 10, 16, 34, 48, 49, 63, 75, 77, 128, 165, 200, 201, 202, 203, 204, 205, 213, 496, 509, 512, 521, 526, 529], "dicom": [1, 2, 4, 6, 7, 9, 13, 14, 15, 19, 21, 22, 23, 27, 28, 29, 31, 33, 34, 36, 37, 38, 40, 41, 42, 44, 46, 47, 48, 49, 52, 55, 57, 66, 67, 69, 71, 73, 74, 75, 81, 86, 91, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 123, 124, 125, 128, 129, 130, 131, 135, 137, 138, 139, 140, 141, 142, 143, 146, 148, 149, 151, 152, 153, 155, 156, 158, 159, 160, 165, 176, 187, 189, 191, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 213, 215, 216, 429, 454, 457, 458, 461, 462, 464, 465, 481, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 514, 515, 516, 517, 518, 521, 522, 523, 525, 527, 528], "downsiz": [1, 5, 6, 48, 518], "mri": [1, 5, 6, 48, 518], "us": [1, 3, 5, 6, 7, 9, 10, 12, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 47, 48, 49, 64, 74, 75, 76, 77, 81, 82, 85, 91, 92, 93, 94, 98, 99, 103, 106, 108, 125, 126, 128, 129, 135, 136, 138, 146, 148, 151, 152, 153, 155, 156, 158, 159, 163, 165, 166, 167, 173, 174, 175, 176, 188, 191, 192, 193, 199, 200, 201, 202, 207, 208, 209, 210, 211, 212, 213, 214, 218, 429, 454, 457, 461, 462, 465, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 488, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 528, 529], "decod": [1, 5, 6, 34, 37, 56, 74, 75, 125, 128, 141, 146, 149, 151, 152, 155, 188, 207, 208, 210, 211, 212, 462, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 493, 496, 500, 507, 508, 509, 512, 514, 515, 518, 524, 526], "plot": [1, 5, 6, 7, 13, 496, 508, 518, 529], "waveform": [1, 5, 6, 37, 44, 66, 128, 163, 489, 493, 496, 512, 516, 518, 525], "data": [1, 2, 5, 6, 7, 10, 11, 13, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 44, 46, 50, 52, 58, 59, 60, 61, 74, 75, 76, 77, 79, 81, 94, 97, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 157, 159, 163, 165, 172, 188, 191, 192, 193, 199, 200, 207, 208, 209, 210, 211, 212, 213, 454, 464, 481, 488, 493, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 524, 525, 526], "load": [1, 5, 6, 10, 12, 14, 16, 156, 164, 165, 173, 496, 508, 512, 513, 514, 518], "ct": [1, 5, 6, 9, 10, 12, 20, 26, 28, 33, 38, 41, 43, 46, 48, 66, 128, 165, 496, 508, 518, 522, 523, 524, 527], "slice": [1, 2, 5, 6, 8, 9, 20, 26, 28, 128, 496, 505, 506, 508, 518], "axial": [1, 5, 6, 20, 26, 28, 43, 496, 508, 518, 522], "sagitt": [1, 5, 6, 496, 508, 518], "coron": [1, 5, 6, 496, 508, 518], "thi": [2, 3, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 52, 66, 73, 78, 79, 80, 83, 84, 86, 93, 94, 106, 125, 128, 130, 135, 138, 139, 140, 146, 153, 155, 158, 164, 165, 176, 182, 193, 196, 198, 200, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 456, 457, 458, 461, 462, 465, 466, 493, 496, 503, 505, 508, 509, 514, 517, 520, 521, 522, 523, 524, 526, 527, 528, 529], "show": [2, 3, 4, 6, 9, 10, 12, 17, 21, 24, 25, 27, 36, 43, 46, 50, 106, 125, 496, 497, 501, 503, 514, 516, 518, 521, 522, 529], "how": [2, 3, 8, 9, 10, 12, 14, 16, 17, 18, 20, 24, 26, 31, 36, 37, 40, 41, 42, 43, 46, 47, 48, 49, 50, 106, 125, 165, 496, 497, 501, 520, 521, 522, 523, 524, 525, 529], "an": [2, 10, 11, 16, 23, 24, 26, 27, 28, 29, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 50, 52, 73, 74, 75, 81, 82, 83, 86, 94, 103, 104, 106, 112, 115, 116, 122, 125, 126, 128, 129, 131, 137, 138, 139, 140, 141, 142, 143, 146, 149, 150, 155, 156, 165, 166, 175, 176, 186, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 218, 429, 455, 457, 458, 459, 460, 461, 462, 463, 465, 481, 488, 496, 499, 500, 506, 508, 509, 511, 512, 514, 515, 517, 520, 521, 522, 524, 526, 527, 528, 529], "mr": [2, 8, 10, 17, 20, 66, 462, 524], "512": [2, 20, 155, 199, 496, 506], "im": 2, "64": [2, 8, 20, 29, 34, 48, 209, 213, 454, 488, 496, 499, 529], "perform": [2, 31, 34, 39, 41, 80, 109, 110, 111, 113, 114, 124, 128, 132, 165, 211, 474, 496, 503, 506, 507, 526, 529], "take": [2, 24, 25, 26, 31, 34, 36, 41, 46, 50, 128, 153, 163, 198, 496, 503, 520, 521, 522, 524], "central": 2, "section": [2, 24, 25, 26, 27, 33, 36, 38, 41, 43, 48, 50, 52, 97, 125, 128, 131, 135, 137, 143, 189, 193, 199, 206, 213, 462, 520, 521], "instead": [2, 31, 38, 40, 48, 49, 50, 92, 128, 153, 163, 165, 176, 461, 462, 496, 499, 502, 506, 507, 508, 511, 512, 514, 515, 517, 520, 521, 522, 523, 524, 526, 527, 529], "averagin": 2, "pixel": [2, 4, 6, 7, 8, 13, 20, 23, 24, 26, 28, 35, 36, 37, 38, 40, 44, 46, 47, 50, 63, 77, 94, 128, 134, 135, 136, 137, 138, 139, 140, 141, 145, 146, 147, 155, 159, 199, 200, 201, 202, 207, 208, 209, 210, 211, 212, 213, 493, 496, 497, 499, 500, 505, 506, 507, 508, 509, 511, 512, 514, 515, 517, 518, 520, 522, 525, 526], "final": [2, 17, 40, 103, 135, 176, 522, 529], "store": [2, 8, 10, 17, 20, 29, 33, 34, 38, 43, 48, 103, 125, 128, 155, 190, 201, 202, 213, 455, 457, 458, 459, 460, 461, 463, 496, 499, 514, 522, 523, 524, 529], "requir": [2, 10, 12, 20, 26, 27, 33, 34, 38, 39, 41, 43, 47, 48, 49, 50, 125, 128, 135, 137, 138, 139, 140, 146, 155, 165, 174, 176, 189, 198, 199, 200, 204, 205, 207, 208, 209, 211, 212, 213, 216, 465, 496, 499, 503, 507, 511, 512, 517, 521, 522, 524, 526, 527, 529], "numpi": [2, 3, 4, 23, 31, 33, 36, 38, 41, 42, 47, 48, 49, 79, 94, 99, 100, 128, 146, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 470, 472, 488, 496, 497, 505, 507, 508, 509, 511, 515, 520, 526, 527, 529], "librari": [2, 23, 25, 26, 38, 39, 44, 48, 213, 496, 499, 502, 521, 527], "manipul": [2, 23, 40, 125, 489, 526], "ha": [2, 10, 14, 20, 24, 25, 26, 27, 31, 33, 34, 36, 39, 40, 41, 43, 48, 50, 79, 86, 88, 125, 128, 137, 139, 141, 146, 156, 157, 164, 165, 166, 176, 177, 188, 198, 199, 207, 208, 209, 210, 211, 212, 213, 215, 454, 456, 488, 496, 498, 499, 501, 506, 507, 509, 510, 511, 516, 517, 520, 521, 522, 523, 524, 527, 529], "x": [2, 3, 8, 9, 20, 26, 27, 28, 36, 454, 496, 508, 520, 522, 527, 529], "voxel": 2, "downsampl": [2, 33], "8": [2, 8, 11, 20, 22, 23, 26, 27, 31, 33, 34, 38, 42, 48, 78, 131, 146, 167, 168, 199, 203, 204, 205, 209, 211, 212, 213, 220, 229, 247, 307, 361, 368, 369, 390, 447, 454, 488, 498, 501, 505, 507, 509, 512, 515, 516, 529], "inform": [2, 6, 7, 8, 9, 12, 13, 20, 24, 26, 27, 28, 32, 34, 35, 36, 38, 41, 43, 46, 48, 50, 77, 97, 125, 128, 129, 130, 132, 146, 155, 158, 160, 176, 189, 462, 496, 497, 499, 502, 505, 509, 511, 512, 517, 518, 520, 521, 522, 527, 529], "set": [2, 6, 7, 12, 13, 18, 20, 25, 26, 27, 28, 29, 34, 37, 38, 39, 41, 42, 44, 47, 48, 50, 52, 66, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 92, 93, 98, 99, 100, 106, 125, 126, 128, 139, 141, 152, 155, 156, 157, 163, 164, 165, 167, 168, 173, 176, 188, 429, 457, 461, 462, 465, 466, 493, 496, 497, 502, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 522, 523, 525, 526, 527, 529], "after": [2, 8, 20, 26, 27, 28, 36, 43, 46, 137, 139, 160, 166, 171, 172, 173, 176, 189, 496, 511, 514, 517, 520, 521, 522, 524, 526, 527], "file_meta": [2, 12, 20, 26, 27, 28, 38, 41, 42, 43, 128, 129, 130, 132, 176, 189, 496, 499, 511, 517, 524, 527], "0002": [2, 12, 20, 26, 27, 28, 34, 38, 43, 48, 128, 132, 176, 189, 209, 211, 212, 213, 368, 522, 526], "0000": [2, 8, 12, 20, 26, 27, 28, 38, 43, 189, 496, 517, 522], "file": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 21, 25, 27, 28, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 66, 69, 71, 82, 86, 91, 97, 101, 102, 103, 104, 106, 128, 129, 130, 132, 144, 148, 150, 151, 153, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 176, 178, 187, 188, 189, 191, 192, 193, 196, 493, 496, 497, 498, 499, 501, 502, 505, 508, 509, 511, 512, 514, 515, 516, 517, 518, 520, 521, 522, 525, 527], "meta": [2, 8, 12, 20, 26, 27, 28, 38, 43, 50, 97, 128, 129, 130, 132, 155, 158, 176, 189, 496, 499, 502, 505, 511, 522], "group": [2, 12, 17, 20, 26, 27, 28, 38, 40, 43, 47, 49, 115, 117, 125, 128, 129, 130, 131, 132, 155, 163, 165, 176, 189, 199, 215, 216, 217, 462, 488, 496, 499, 502, 506, 511, 512, 519, 520, 522, 529], "length": [2, 8, 12, 20, 26, 27, 28, 38, 39, 43, 49, 52, 87, 117, 125, 127, 128, 135, 136, 137, 139, 141, 142, 143, 152, 153, 169, 172, 189, 199, 209, 212, 213, 454, 496, 501, 502, 506, 508, 512, 514, 515, 516, 517, 522], "ul": [2, 12, 16, 20, 26, 27, 28, 29, 38, 43, 105, 106, 107, 152, 189, 488, 522, 524], "190": [2, 10, 13, 20, 38, 518], "0001": [2, 12, 20, 26, 27, 28, 38, 43, 128, 132, 189, 522], "version": [2, 8, 12, 20, 24, 26, 27, 28, 34, 36, 38, 40, 43, 44, 52, 77, 79, 81, 82, 86, 93, 96, 97, 99, 100, 103, 125, 128, 130, 132, 135, 137, 141, 142, 143, 145, 146, 147, 167, 174, 175, 176, 189, 196, 203, 204, 205, 206, 211, 213, 215, 429, 454, 470, 472, 488, 520, 521, 522, 523, 528], "ob": [2, 12, 20, 26, 27, 28, 29, 38, 43, 137, 181, 189, 473, 496, 500, 515, 522, 523], "b": [2, 8, 12, 16, 20, 22, 26, 27, 28, 34, 38, 43, 47, 48, 125, 128, 149, 152, 176, 454, 462, 520, 521, 522], "x00": [2, 8, 12, 16, 20, 26, 27, 28, 38, 43, 47, 522], "x01": [2, 8, 12, 20, 26, 27, 28, 38, 43, 48, 522], "media": [2, 12, 20, 26, 27, 28, 38, 43, 66, 132, 187, 189, 522, 524], "storag": [2, 9, 12, 14, 20, 26, 27, 28, 38, 43, 48, 66, 132, 187, 189, 493, 496, 499, 500, 505, 515, 522, 524, 529], "sop": [2, 8, 9, 10, 12, 20, 26, 27, 28, 33, 38, 43, 48, 49, 66, 132, 158, 163, 164, 165, 166, 176, 189, 200, 213, 493, 496, 505, 506, 512, 515, 516, 522, 527], "class": [2, 8, 9, 12, 14, 20, 26, 27, 28, 36, 37, 38, 43, 48, 49, 52, 64, 66, 67, 78, 125, 127, 128, 129, 130, 131, 132, 146, 149, 151, 152, 155, 164, 165, 166, 176, 189, 198, 214, 215, 368, 429, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 493, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 509, 511, 512, 515, 516, 517, 521, 522, 524, 527, 528], "uid": [2, 8, 10, 12, 20, 26, 27, 28, 29, 31, 32, 33, 34, 38, 41, 42, 43, 48, 50, 94, 128, 132, 135, 136, 146, 147, 164, 165, 176, 189, 200, 207, 208, 209, 210, 211, 212, 213, 478, 487, 493, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 512, 514, 515, 516, 517, 520, 522, 524, 526, 527], "ui": [2, 12, 16, 20, 26, 27, 28, 29, 38, 43, 185, 189, 478, 496, 499, 509, 522], "0003": [2, 12, 20, 26, 27, 28, 38, 43, 132, 189, 522], "instanc": [2, 8, 10, 12, 20, 26, 27, 28, 29, 31, 33, 38, 40, 43, 45, 46, 48, 64, 66, 75, 85, 128, 132, 145, 146, 149, 151, 152, 155, 156, 163, 164, 165, 166, 176, 189, 198, 200, 213, 214, 456, 457, 458, 496, 508, 514, 517, 522, 527, 528], "3": [2, 4, 5, 8, 10, 12, 16, 17, 19, 20, 22, 23, 26, 28, 29, 31, 33, 34, 38, 39, 42, 43, 48, 49, 52, 96, 103, 105, 106, 107, 125, 127, 128, 132, 146, 152, 163, 167, 174, 175, 176, 189, 199, 201, 202, 203, 204, 205, 206, 209, 211, 213, 221, 222, 232, 238, 257, 259, 261, 262, 270, 275, 278, 326, 351, 354, 373, 377, 378, 399, 411, 420, 429, 431, 436, 454, 493, 499, 500, 502, 503, 504, 505, 506, 507, 511, 512, 513, 516, 520, 521, 522, 523, 524, 527, 529], "6": [2, 8, 10, 20, 23, 26, 28, 29, 34, 42, 43, 48, 52, 75, 125, 127, 128, 137, 206, 209, 213, 256, 283, 294, 357, 373, 386, 405, 419, 427, 430, 437, 444, 462, 497, 502, 503, 505, 512, 513, 516, 521, 522, 529], "4": [2, 8, 9, 10, 12, 16, 20, 21, 23, 24, 26, 28, 33, 34, 36, 38, 42, 43, 48, 127, 128, 135, 137, 138, 139, 141, 142, 143, 171, 172, 176, 189, 201, 202, 203, 204, 205, 213, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 484, 502, 507, 508, 511, 512, 514, 517, 520, 522, 524, 528, 529], "5962": [2, 8, 10, 20, 26, 28, 43, 522], "20040826185059": [2, 8, 20], "5457": [2, 8, 20], "0010": [2, 12, 16, 17, 20, 26, 27, 28, 36, 38, 43, 47, 48, 63, 64, 94, 128, 132, 138, 139, 140, 155, 189, 199, 209, 210, 211, 212, 213, 488, 489, 496, 505, 517, 521, 522, 524, 526], "transfer": [2, 12, 16, 20, 26, 27, 28, 31, 32, 34, 38, 43, 44, 94, 128, 129, 132, 135, 136, 138, 139, 146, 147, 156, 164, 165, 173, 176, 189, 207, 208, 209, 210, 211, 212, 213, 221, 315, 320, 323, 346, 382, 429, 432, 493, 496, 500, 505, 507, 508, 509, 511, 512, 516, 517, 522, 526, 527, 529], "syntax": [2, 12, 16, 20, 24, 26, 27, 28, 31, 32, 34, 38, 43, 44, 50, 94, 128, 129, 132, 135, 136, 138, 139, 146, 147, 156, 164, 165, 173, 176, 189, 207, 208, 209, 210, 211, 212, 213, 221, 315, 320, 323, 346, 382, 429, 432, 493, 496, 499, 500, 505, 507, 508, 509, 511, 512, 516, 517, 522, 526, 527, 529], "explicit": [2, 12, 20, 26, 28, 41, 42, 43, 52, 86, 128, 129, 139, 152, 156, 176, 189, 209, 221, 429, 462, 496, 499, 500, 508, 509, 511, 514, 517, 522], "littl": [2, 12, 16, 20, 26, 27, 28, 30, 31, 38, 41, 42, 43, 128, 129, 139, 142, 143, 146, 152, 153, 156, 165, 171, 172, 173, 176, 189, 209, 212, 429, 467, 468, 469, 470, 471, 472, 476, 477, 478, 480, 481, 483, 484, 496, 499, 511, 517, 522, 527, 529], "endian": [2, 12, 16, 20, 26, 27, 28, 30, 31, 38, 41, 42, 43, 128, 129, 139, 142, 143, 146, 152, 153, 156, 165, 170, 171, 172, 173, 176, 182, 189, 209, 212, 213, 221, 429, 467, 468, 469, 470, 471, 472, 476, 477, 478, 480, 481, 483, 484, 496, 499, 507, 511, 516, 517, 522, 527, 529], "0012": [2, 12, 20, 26, 27, 28, 38, 43, 132, 189, 368, 522], "implement": [2, 12, 20, 26, 27, 28, 31, 38, 43, 50, 132, 151, 152, 189, 368, 496, 512, 522], "0013": [2, 12, 20, 26, 27, 28, 38, 43, 132, 189, 522, 524], "sh": [2, 12, 16, 20, 26, 28, 29, 38, 43, 189, 485, 522], "dctool100": [2, 20, 26, 28, 43, 522], "0016": [2, 20, 26, 27, 28, 38, 43, 189, 522], "applic": [2, 20, 26, 27, 28, 29, 39, 43, 189, 522, 527], "entiti": [2, 20, 26, 28, 29, 43, 165, 189, 522], "ae": [2, 20, 26, 28, 29, 43, 189, 467, 483, 496, 505, 517, 522], "clunie1": [2, 20, 26, 28, 43, 522], "0008": [2, 12, 20, 26, 27, 28, 38, 43, 48, 73, 74, 75, 76, 128, 138, 140, 155, 156, 200, 209, 211, 212, 213, 496, 497, 509, 522, 523, 524], "type": [2, 3, 8, 17, 18, 20, 25, 26, 27, 28, 31, 34, 35, 37, 38, 41, 43, 48, 66, 73, 74, 76, 79, 96, 101, 102, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 141, 142, 144, 146, 152, 155, 156, 157, 159, 160, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 188, 189, 191, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 429, 454, 462, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 496, 499, 500, 502, 513, 514, 516, 517, 521, 522, 524, 527, 529], "c": [2, 10, 18, 20, 22, 24, 26, 27, 28, 29, 34, 38, 40, 43, 48, 49, 90, 128, 199, 201, 202, 203, 204, 205, 206, 209, 213, 483, 496, 503, 522, 523, 524, 526, 527, 529], "deriv": [2, 8, 20, 38, 45, 78, 94, 125, 130, 496, 502, 522], "secondari": [2, 8, 20], "other": [2, 8, 17, 20, 24, 29, 34, 39, 41, 42, 43, 46, 47, 48, 50, 159, 176, 181, 182, 189, 213, 462, 517, 520, 522, 524, 527], "creation": [2, 8, 12, 20, 26, 27, 28, 38, 163, 496, 508, 522, 524], "date": [2, 8, 9, 12, 17, 20, 23, 26, 27, 28, 29, 38, 39, 43, 90, 165, 455, 493, 496, 505, 506, 508, 514, 522, 526], "da": [2, 12, 17, 20, 26, 27, 28, 29, 38, 43, 56, 61, 90, 128, 469, 483, 496, 505, 514, 522], "20040826": [2, 8, 20], "time": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 26, 27, 28, 29, 38, 39, 43, 50, 66, 88, 90, 106, 129, 157, 170, 173, 213, 456, 463, 496, 499, 505, 514, 519, 520, 521, 522, 524, 529], "tm": [2, 12, 20, 26, 27, 28, 29, 38, 56, 61, 90, 477, 483, 496, 505, 514, 522], "185434": [2, 8, 20], "0014": [2, 20, 26, 27, 28, 522], "creator": [2, 8, 16, 20, 26, 28, 43, 107, 108, 116, 119, 120, 121, 128, 131, 189, 215, 496, 506, 511, 516, 522, 524], "0018": [2, 20, 26, 27, 28, 38, 40, 189, 200, 213], "0020": [2, 12, 17, 20, 26, 27, 28, 38, 522, 524], "studi": [2, 8, 9, 10, 20, 26, 27, 28, 38, 163, 165, 524], "0021": [2, 20], "seri": [2, 8, 10, 20, 36, 158, 163, 165, 496, 500, 521, 524, 527], "0022": [2, 20, 522], "acquisit": [2, 8, 20], "0030": [2, 17, 20, 38], "185059": [2, 8, 20], "0031": [2, 20], "0032": [2, 20], "0050": [2, 20, 26, 27, 38, 47], "access": [2, 8, 20, 23, 26, 27, 37, 38, 43, 47, 52, 66, 79, 96, 128, 155, 496, 498, 505, 511, 512, 516, 517, 521, 523, 524, 525, 528], "number": [2, 8, 11, 18, 20, 24, 26, 27, 28, 31, 34, 36, 38, 40, 43, 47, 106, 108, 125, 127, 128, 131, 135, 137, 138, 139, 140, 143, 146, 152, 154, 155, 156, 165, 166, 167, 170, 173, 188, 190, 191, 197, 199, 213, 215, 216, 454, 457, 458, 465, 496, 497, 501, 504, 508, 514, 515, 517, 521, 522, 524, 526, 528, 529], "0060": [2, 20, 26, 27, 38], "modal": [2, 8, 9, 10, 20, 26, 28, 38, 44, 201, 202, 204, 205, 213, 496, 509, 524, 528], "0070": [2, 20, 26, 27], "manufactur": [2, 8, 20, 128], "lo": [2, 12, 16, 17, 18, 20, 26, 27, 29, 43, 128, 485, 522, 524], "toshiba_mec": [2, 8, 20], "0080": [2, 20, 26, 27, 28], "institut": [2, 8, 20], "toshiba": [2, 8, 20], "0090": [2, 20], "refer": [2, 8, 20, 26, 27, 34, 36, 38, 48, 90, 135, 137, 138, 139, 140, 141, 143, 145, 164, 199, 200, 201, 202, 203, 204, 205, 206, 213, 454, 496, 499, 520, 524, 527, 529], "physician": [2, 8, 20], "pn": [2, 12, 17, 20, 29, 38, 61, 125, 128, 462, 475, 496, 509, 514, 521, 522, 524], "0201": [2, 20, 496, 508], "timezon": [2, 8, 20], "offset": [2, 8, 20, 41, 43, 47, 125, 128, 131, 135, 136, 138, 139, 140, 141, 152, 160, 161, 162, 165, 171, 172, 476, 484, 496, 509, 512, 515, 517, 524, 527], "utc": [2, 8, 20], "0400": [2, 8, 20], "1010": [2, 20, 49, 529], "station": [2, 8, 20], "000000000": [2, 8, 20], "1060": [2, 20], "1070": [2, 20], "oper": [2, 8, 20, 33, 38, 39, 43, 44, 82, 128, 152, 201, 202, 204, 205, 213, 496, 499, 507, 509, 512, 522, 526], "1090": [2, 20], "model": [2, 8, 20, 24, 26, 38, 50, 125, 128, 523, 529], "mrt50h1": [2, 8, 20], "patient": [2, 8, 9, 10, 12, 17, 20, 26, 27, 28, 40, 128, 163, 165, 462, 496, 498, 505, 515, 521, 522, 524], "compressedsampl": [2, 8, 9, 20, 26, 28, 66, 521, 522], "mr1": [2, 8, 20], "4mr1": [2, 8, 17, 20], "birth": [2, 8, 17, 20], "0040": [2, 20], "sex": [2, 8, 20], "1020": [2, 20], "size": [2, 8, 9, 20, 24, 26, 48, 50, 94, 125, 152, 156, 173, 207, 208, 496, 506, 512, 516, 526, 527], "1030": [2, 20, 496, 510], "80": [2, 8, 20, 36, 42, 49, 138, 213, 221, 318, 320, 367, 529], "contrast": [2, 8, 10, 20, 524], "bolu": [2, 8, 20], "agent": [2, 8, 20], "scan": [2, 8, 20, 26, 28, 163, 527], "se": [2, 8, 20], "variant": [2, 8, 20], "option": [2, 8, 17, 20, 25, 27, 28, 29, 31, 32, 39, 42, 46, 78, 79, 91, 101, 102, 103, 104, 106, 108, 125, 126, 128, 129, 132, 135, 137, 138, 140, 143, 146, 149, 152, 153, 155, 156, 159, 165, 166, 167, 173, 176, 188, 199, 200, 203, 204, 205, 206, 209, 211, 212, 213, 216, 454, 462, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 493, 496, 498, 499, 505, 509, 512, 514, 517, 524, 529], "0023": [2, 12, 20, 26, 27], "3d": [2, 4, 8, 20, 213, 496, 512], "thick": [2, 8, 20], "repetit": [2, 8, 20, 50], "4000": [2, 8, 20], "0081": [2, 20], "echo": [2, 8, 20], "240": [2, 8, 20], "0083": [2, 20], "averag": [2, 8, 20], "0084": [2, 20, 26, 27, 28], "frequenc": [2, 8, 20, 49, 529], "63": [2, 8, 20, 522], "924339": [2, 8, 20], "0085": [2, 20], "nucleu": [2, 8, 20], "h": [2, 8, 12, 20, 22, 24, 26, 27, 28], "0086": [2, 20, 26, 27, 28], "0091": [2, 20], "train": [2, 8, 20], "1000": [2, 20, 49, 529], "devic": [2, 8, 20, 26, 27, 528], "serial": [2, 8, 20, 125, 128, 523], "0000200": [2, 8, 20], "softwar": [2, 8, 20, 39, 526], "v3": [2, 8, 20, 496, 512, 514, 515, 529], "51": [2, 8, 20, 42, 138, 221, 317, 323], "p25": [2, 8, 20], "1314": [2, 20], "flip": [2, 8, 20], "angl": [2, 8, 20], "90": [2, 8, 20, 42, 49, 138, 213, 221, 249, 312, 315, 496, 509], "5100": [2, 20, 40], "posit": [2, 8, 20, 24, 26, 27, 28, 40, 139, 141, 148, 152, 160, 170, 171, 172, 189], "hf": [2, 8, 20, 40], "000d": [2, 20], "000e": [2, 20], "0011": [2, 20, 47, 128, 199, 209, 211, 212, 213], "83": [2, 8, 20], "9063": [2, 8, 20], "91": [2, 8, 20, 42, 138, 213, 221, 311, 315, 352, 496, 501, 509], "2000": [2, 8, 20, 34, 41, 77, 138, 213, 315, 496, 509, 512, 526, 527], "6406": [2, 8, 20], "0037": [2, 20], "orient": [2, 8, 20], "0052": [2, 20], "frame": [2, 8, 20, 31, 41, 48, 128, 135, 136, 137, 138, 139, 140, 141, 143, 146, 199, 206, 211, 213, 496, 505, 507, 509, 514, 517, 527], "later": [2, 8, 20, 96, 457, 458, 496, 503, 520, 522], "1040": [2, 20], "indic": [2, 8, 20, 34, 43, 47, 94, 125, 128, 152, 496, 503, 520, 521, 522], "1041": [2, 20], "locat": [2, 4, 8, 9, 20, 91, 128, 131, 138, 164, 171, 521, 524], "comment": [2, 8, 20, 520], "lt": [2, 20, 29], "uncompress": [2, 8, 20, 31, 33, 40, 41, 42, 48, 128, 146, 213, 432, 496, 507, 509, 514, 515, 527], "0028": [2, 20, 34, 42, 48, 128, 138, 140, 200, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 496, 509, 511, 522], "sampl": [2, 8, 20, 31, 33, 34, 41, 48, 49, 128, 146, 213, 488, 527, 529], "per": [2, 8, 20, 31, 33, 34, 38, 41, 48, 52, 128, 130, 135, 136, 138, 146, 168, 209, 213, 496, 502, 509, 512, 522, 527], "u": [2, 20, 26, 28, 29, 66, 107, 152, 174, 175, 488, 496, 498, 523, 524, 526, 527, 529], "0004": [2, 10, 20, 26, 27, 28, 34, 48, 128, 163, 165, 206, 209, 211, 213, 496, 509, 524], "photometr": [2, 8, 20, 33, 34, 41, 42, 48, 128, 206, 207, 208, 209, 210, 211, 212, 213, 496, 509, 527], "interpret": [2, 8, 20, 33, 34, 41, 42, 47, 48, 128, 206, 207, 208, 209, 210, 211, 212, 213, 496, 509, 527, 529], "monochrome2": [2, 8, 20, 33, 34, 209, 211, 524], "space": [2, 8, 9, 20, 31, 33, 34, 36, 41, 44, 106, 146, 206, 213, 462, 467, 478, 480, 482, 496, 505, 517, 522, 524], "3125": [2, 8, 20], "0100": [2, 20, 34, 42, 49, 128, 189, 199, 209, 211, 212, 213, 488, 529], "bit": [2, 8, 20, 29, 31, 33, 34, 36, 42, 46, 47, 48, 128, 131, 141, 146, 201, 202, 209, 212, 213, 496, 506, 507, 509, 514, 515, 516, 517, 520, 521, 527, 529], "alloc": [2, 8, 20, 33, 34, 36, 42, 128, 209, 212, 213, 496, 516, 529], "16": [2, 8, 20, 26, 28, 31, 33, 34, 42, 52, 125, 128, 131, 209, 211, 212, 213, 394, 465, 466, 488, 496, 509, 527, 529], "0101": [2, 20, 34, 128, 201, 202, 209, 211, 213], "0102": [2, 20, 34, 189, 199], "high": [2, 8, 20, 33, 34, 36, 108, 496, 509], "15": [2, 8, 20, 406, 518, 522, 529], "0103": [2, 20, 34, 128, 201, 202, 209, 211, 212, 213], "represent": [2, 8, 20, 26, 28, 29, 33, 34, 38, 57, 60, 72, 106, 108, 110, 120, 125, 128, 131, 137, 164, 165, 166, 201, 202, 213, 457, 458, 462, 464, 465, 482, 485, 493, 496, 512, 514, 517, 522, 523, 529], "0106": [2, 20], "smallest": [2, 8, 20], "ss": [2, 4, 20, 26, 28, 29, 174, 175, 488, 496, 498, 529], "0107": [2, 20], "largest": [2, 8, 20], "1050": [2, 20, 204, 205, 213, 522], "center": [2, 8, 20, 204, 205, 213, 522], "600": [2, 8, 20], "1051": [2, 20, 204, 205, 213, 496, 514, 522], "width": [2, 8, 20, 125, 204, 205, 213, 522], "1600": [2, 8, 20], "7fe0": [2, 20, 26, 28, 36, 38, 48, 63, 64, 94, 128, 138, 139, 140, 155, 209, 210, 211, 212, 213, 489, 496, 505, 509, 517, 522], "ow": [2, 20, 26, 28, 29, 47, 49, 176, 182, 474, 496, 500, 511, 516, 522], "arrai": [2, 4, 14, 20, 26, 28, 36, 38, 47, 48, 49, 50, 79, 94, 99, 125, 128, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 456, 496, 497, 507, 508, 511, 512, 522], "128": [2, 9, 12, 20, 26, 28, 129, 148, 160, 170, 171, 172, 176, 189, 330, 375, 522, 527], "element": [2, 10, 12, 16, 17, 18, 20, 24, 25, 26, 27, 28, 33, 35, 36, 37, 40, 44, 46, 47, 48, 49, 50, 52, 63, 74, 75, 77, 79, 81, 82, 90, 91, 94, 97, 98, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 146, 153, 154, 155, 156, 157, 165, 172, 173, 174, 175, 176, 189, 191, 192, 199, 207, 209, 211, 212, 213, 215, 216, 455, 457, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 488, 489, 493, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 511, 512, 514, 515, 516, 517, 521, 524, 527, 529], "fffc": [2, 20, 26, 28, 522], "trail": [2, 8, 20, 26, 28, 137, 199, 213, 467, 478, 480, 482, 496, 505, 522], "pad": [2, 3, 8, 20, 26, 28, 135, 137, 139, 194, 199, 213, 496, 506, 508, 509, 512, 514, 515, 522], "126": [2, 20, 26, 28, 522, 529], "author": [2, 8, 9, 11, 12, 16, 17, 20, 22], "guillaum": [2, 8, 9, 11, 12, 17, 20, 22], "lemaitr": [2, 8, 9, 11, 12, 17, 20, 22], "g": [2, 8, 9, 11, 12, 17, 20, 22, 24, 26, 27, 31, 33, 34, 36, 38, 39, 40, 47, 48, 52, 82, 125, 128, 131, 146, 155, 198, 199, 213, 214, 457, 462, 487, 496, 499, 506, 508, 512, 517, 522], "lemaitre58": [2, 8, 9, 11, 12, 17, 20, 22], "gmail": [2, 8, 9, 11, 12, 17, 20, 22], "com": [2, 8, 9, 11, 12, 17, 20, 22, 23, 520, 521, 526], "licens": [2, 8, 9, 11, 12, 16, 17, 20, 22, 496, 498, 499, 521], "mit": [2, 8, 9, 11, 12, 16, 17, 20, 22, 40, 496, 498, 499], "fixm": 2, "test": [2, 12, 16, 24, 26, 27, 28, 38, 40, 86, 105, 106, 107, 128, 466, 496, 497, 503, 505, 509, 512, 514, 516], "get": [2, 9, 10, 14, 26, 27, 29, 36, 38, 39, 40, 42, 43, 46, 47, 48, 49, 90, 94, 128, 152, 163, 213, 493, 496, 499, 500, 508, 512, 514, 520, 521, 525, 526, 527], "arr": [2, 3, 36, 38, 41, 47, 48, 49, 128, 199, 200, 201, 202, 203, 204, 205, 206, 213, 527, 529], "pixel_arrai": [2, 4, 9, 33, 36, 38, 41, 42, 44, 46, 128, 496, 498, 509], "shape": [2, 4, 47, 48, 49, 128, 146, 199, 206, 207, 208, 211, 213, 488, 527, 529], "arr_downsampl": 2, "copi": [2, 10, 42, 50, 128, 165, 496, 502, 512, 515, 520, 521, 524, 526], "back": [2, 14, 16, 20, 33, 36, 40, 47, 48, 50, 520, 521, 522, 524], "origin": [2, 10, 20, 24, 26, 28, 34, 41, 42, 43, 47, 50, 86, 128, 157, 165, 209, 454, 457, 458, 460, 461, 462, 520, 521, 522, 527, 529], "pixeldata": [2, 33, 38, 41, 48, 50, 133, 135, 136, 213, 496, 508, 509, 527], "tobyt": [2, 48, 529], "updat": [2, 10, 18, 20, 26, 27, 33, 47, 105, 106, 107, 108, 128, 163, 165, 174, 175, 189, 496, 498, 499, 501, 502, 504, 505, 506, 507, 509, 511, 512, 514, 515, 516, 517, 520, 521, 524, 526, 527], "regard": 2, "given": [2, 11, 24, 26, 27, 28, 29, 42, 48, 49, 74, 76, 125, 126, 128, 131, 132, 152, 155, 157, 163, 165, 199, 209, 211, 212, 213, 215, 457, 458, 462, 481, 488, 496, 511, 514, 522, 524, 526, 527, 529], "n": [2, 8, 11, 14, 20, 26, 28, 189, 199, 201, 202, 203, 204, 205, 209, 211, 212, 213, 488, 524], "total": [2, 3, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 135, 136, 199, 213, 518, 527], "run": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 38, 39, 40, 50, 106, 128, 462, 496, 499, 502, 512, 517, 521, 522, 525, 526], "script": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 50, 496, 506, 517, 519], "minut": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20], "005": [2, 5, 8, 13, 518], "second": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 34, 39, 45, 462, 529], "plot_downsize_imag": [2, 5, 518], "matplotlib": [3, 4, 9, 44, 529], "np": [3, 4, 199, 200, 201, 202, 203, 204, 205, 209, 211, 212, 213, 488, 527, 529], "pyplot": [3, 4, 9, 46, 529], "plt": [3, 4, 9, 46, 529], "generate_multiplex": [3, 128, 488, 496, 512, 529], "first": [3, 20, 26, 28, 33, 34, 36, 38, 39, 40, 43, 45, 48, 50, 73, 74, 76, 94, 103, 128, 138, 139, 141, 160, 165, 173, 213, 462, 496, 507, 508, 509, 519, 520, 521, 524, 529], "channel": [3, 20, 34, 48, 49, 128, 209, 488, 529], "multiplex": [3, 49, 128, 488, 496, 512, 529], "ch_idx": 3, "we": [3, 10, 16, 17, 18, 24, 26, 28, 33, 40, 42, 90, 128, 519, 520, 521, 522, 524, 526, 527, 529], "could": [3, 24, 25, 26, 38, 48, 50, 73, 74, 76, 198, 207, 496, 499, 500, 514, 520, 521], "also": [3, 17, 26, 27, 28, 29, 31, 36, 38, 40, 43, 45, 46, 48, 50, 75, 115, 128, 146, 160, 189, 429, 462, 496, 497, 498, 499, 500, 503, 504, 507, 508, 512, 517, 520, 521, 522, 523, 524, 526, 527, 528, 529], "waveform_arrai": [3, 44, 128, 496, 512, 529], "fig": [3, 529], "ax": 3, "subplot": [3, 4, 529], "waveformsequ": [3, 49, 529], "as_raw": [3, 49, 488, 496, 516, 529], "fals": [3, 4, 10, 14, 29, 31, 36, 39, 41, 43, 52, 66, 77, 78, 79, 82, 85, 87, 90, 91, 92, 93, 94, 98, 99, 100, 103, 112, 113, 122, 123, 125, 128, 129, 132, 135, 136, 146, 152, 153, 155, 159, 160, 165, 167, 168, 171, 172, 173, 176, 189, 196, 206, 209, 211, 213, 429, 456, 457, 458, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 480, 481, 483, 484, 488, 496, 502, 506, 511, 514, 516, 522, 524, 529], "mplx": 3, "zip": [3, 6, 496, 508, 529], "nr_channel": 3, "numberofwaveformchannel": [3, 49, 488, 529], "nr_sampl": 3, "numberofwaveformsampl": [3, 488, 529], "sampling_fq": 3, "samplingfrequ": [3, 49, 529], "hz": [3, 49, 529], "mplx_label": 3, "multiplexgrouplabel": [3, 529], "ch_item": 3, "channeldefinitionsequ": [3, 529], "arang": [3, 529], "x_unit": 3, "channelsensitivityunitssequ": [3, 529], "1c": [3, 176, 189, 209, 211, 212, 213, 529], "so": [3, 16, 26, 27, 29, 31, 36, 38, 39, 47, 48, 50, 90, 128, 165, 167, 176, 196, 456, 496, 497, 500, 520, 522, 523, 524, 527, 529], "check": [3, 12, 38, 39, 112, 113, 115, 116, 118, 122, 123, 128, 130, 132, 146, 168, 176, 189, 456, 466, 496, 502, 505, 507, 508, 511, 512, 514, 517, 520, 521, 526, 529], "y_unit": 3, "codemean": [3, 529], "els": [3, 4, 8, 33, 128, 156, 170, 173, 456, 522], "unitless": [3, 48, 488, 529], "descript": [3, 16, 20, 25, 26, 27, 30, 37, 38, 40, 43, 105, 106, 107, 108, 111, 121, 125, 131, 496, 497, 498, 511, 515, 517], "ch_sourc": 3, "channelsourcesequ": [3, 529], "set_titl": 3, "set_xlabel": 3, "set_ylabel": [3, 529], "tight_layout": 3, "219": [3, 5, 518], "plot_waveform": [3, 5, 518], "multipl": [4, 29, 31, 34, 38, 43, 47, 48, 75, 106, 108, 109, 119, 125, 128, 138, 140, 141, 146, 203, 204, 205, 206, 213, 214, 462, 481, 496, 509, 515, 517, 522], "sort": [4, 10, 128, 524], "them": [4, 8, 24, 26, 27, 28, 31, 36, 37, 38, 42, 43, 47, 50, 128, 152, 470, 472, 496, 504, 508, 512, 521, 522, 524], "reslic": [4, 5, 518], "differ": [4, 6, 17, 21, 25, 26, 28, 29, 33, 37, 43, 48, 128, 496, 499, 511, 518, 520, 521, 522, 523, 524], "plane": [4, 20, 34, 48, 199, 213], "glob": [4, 10, 101, 102, 104, 524], "fname": 4, "append": [4, 11, 18, 20, 38, 137, 454, 522, 529], "count": 4, "skip": [4, 18, 496, 515, 520], "sliceloc": [4, 9, 26, 28], "eg": 4, "scout": [4, 20], "view": [4, 10, 20, 33, 38, 40, 44, 48, 203, 204, 205, 213, 496, 497, 499, 521, 524, 529], "skipcount": 4, "hasattr": 4, "ensur": [4, 29, 33, 39, 41, 43, 93, 128, 132, 155, 165, 176, 198, 213, 457, 458, 496, 502, 505, 514, 516, 517, 520], "thei": [4, 36, 38, 43, 47, 48, 73, 85, 94, 128, 132, 176, 189, 496, 514, 520, 521, 522, 524, 526, 527], "ar": [4, 10, 18, 24, 26, 27, 28, 33, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 52, 66, 73, 74, 78, 79, 82, 91, 94, 98, 99, 105, 107, 108, 125, 128, 130, 131, 132, 135, 136, 138, 139, 140, 141, 146, 152, 155, 160, 163, 165, 168, 174, 175, 176, 189, 198, 200, 201, 202, 204, 205, 207, 208, 212, 213, 215, 462, 465, 480, 483, 485, 487, 496, 502, 507, 508, 509, 511, 512, 514, 515, 517, 519, 520, 521, 522, 524, 526, 527, 528, 529], "correct": [4, 16, 20, 24, 26, 33, 34, 39, 41, 42, 47, 49, 73, 77, 94, 128, 155, 170, 174, 175, 198, 211, 213, 496, 506, 507, 509, 514, 515, 517, 520, 522, 527, 529], "order": [4, 30, 31, 34, 48, 94, 128, 129, 131, 138, 146, 166, 170, 174, 175, 176, 188, 212, 213, 429, 496, 497, 504, 507, 509, 520, 529], "kei": [4, 30, 31, 38, 82, 125, 128, 131, 146, 163, 166, 199, 215, 496, 512, 520], "lambda": 4, "aspect": 4, "assum": [4, 25, 26, 41, 48, 86, 139, 496, 505, 524, 527, 529], "all": [4, 6, 8, 10, 12, 17, 20, 24, 26, 27, 28, 34, 37, 38, 39, 41, 44, 50, 64, 66, 94, 107, 125, 128, 130, 133, 134, 135, 137, 139, 141, 146, 152, 155, 165, 167, 174, 175, 176, 198, 221, 496, 497, 498, 499, 502, 504, 507, 509, 512, 514, 515, 516, 517, 518, 520, 521, 522, 526, 527], "same": [4, 31, 38, 39, 40, 47, 106, 128, 151, 152, 165, 198, 457, 458, 496, 500, 502, 521, 522, 524], "p": [4, 10, 22, 24, 26, 52, 462, 496, 502, 524], "pixelspac": [4, 9], "slicethick": 4, "ax_aspect": 4, "sag_aspect": 4, "cor_aspect": 4, "img_shap": 4, "list": [4, 6, 7, 8, 10, 13, 20, 26, 28, 29, 31, 33, 38, 40, 41, 73, 74, 75, 76, 94, 101, 102, 104, 125, 126, 128, 133, 135, 136, 141, 146, 153, 155, 156, 159, 161, 165, 166, 174, 175, 183, 187, 188, 192, 193, 195, 198, 199, 214, 454, 462, 469, 470, 471, 472, 475, 476, 477, 478, 481, 482, 485, 486, 493, 496, 499, 502, 503, 509, 512, 514, 515, 517, 518, 521, 522, 524, 526, 527], "img3d": 4, "zero": [4, 20, 29, 48, 128, 173, 496, 516, 522, 527], "fill": [4, 520, 521], "img2d": 4, "orthogon": 4, "a1": 4, "imshow": [4, 9, 46], "set_aspect": 4, "a2": 4, "a3": 4, "t": [4, 8, 10, 18, 20, 26, 27, 28, 29, 34, 36, 38, 43, 47, 50, 81, 128, 138, 146, 156, 165, 176, 198, 199, 206, 209, 212, 213, 429, 454, 496, 508, 511, 512, 517, 520, 521, 522, 523, 524, 527], "00": [5, 13, 19, 21, 141, 518], "224": 5, "execut": [5, 13, 19, 21, 462, 518], "auto_exampl": [5, 13, 19, 21], "image_process": [5, 518], "mem": [5, 13, 19, 21, 518], "mb": [5, 13, 19, 21, 155, 488, 518], "imag": [5, 8, 9, 10, 12, 17, 20, 26, 28, 31, 40, 41, 43, 44, 47, 48, 66, 128, 136, 137, 138, 139, 141, 163, 165, 200, 206, 207, 209, 210, 211, 212, 213, 496, 499, 506, 508, 512, 514, 518, 522, 524, 526, 527], "000": [5, 21, 518, 529], "somewher": [6, 40], "analys": [6, 21, 518], "between": [6, 21, 33, 36, 47, 48, 106, 199, 496, 517, 518, 520, 521, 522], "displai": [6, 20, 21, 26, 27, 28, 33, 38, 44, 46, 97, 125, 128, 496, 497, 503, 508, 514, 518, 520, 529], "unicod": [6, 21, 29, 74, 76, 462, 496, 497, 499, 500, 516, 518], "person": [6, 17, 21, 29, 36, 462, 496, 507, 514, 518, 528], "hierarch": [6, 21, 138, 213, 496, 509, 518], "tree": [6, 21, 38, 166, 496, 503, 518, 522], "work": [6, 15, 19, 21, 25, 26, 27, 31, 36, 38, 39, 40, 42, 43, 44, 50, 165, 496, 497, 499, 500, 502, 503, 504, 506, 508, 512, 517, 518, 520, 521, 522, 526, 528, 529], "memori": [6, 16, 21, 155, 156, 157, 173, 206, 209, 213, 496, 499, 507, 508, 509, 518, 524], "base": [6, 21, 33, 34, 40, 64, 67, 78, 128, 145, 455, 459, 463, 493, 496, 499, 505, 509, 512, 518, 520, 521, 524, 527, 529], "rtplan": [6, 7, 13, 24, 26, 27, 28, 38, 40, 66, 155, 518], "format": [6, 7, 12, 13, 20, 24, 26, 27, 28, 29, 31, 38, 39, 40, 42, 125, 128, 135, 136, 137, 139, 155, 176, 191, 209, 212, 457, 458, 462, 481, 496, 497, 498, 499, 505, 508, 514, 515, 517, 518, 522, 524, 526], "write": [6, 7, 10, 13, 14, 16, 17, 24, 26, 35, 37, 39, 43, 44, 52, 67, 91, 128, 129, 149, 151, 152, 165, 176, 178, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 457, 458, 493, 496, 498, 500, 505, 506, 508, 510, 511, 512, 514, 515, 517, 518, 521, 523, 524, 525], "modifi": [6, 15, 37, 40, 47, 48, 50, 103, 128, 165, 496, 509, 512, 517, 525], "anonym": [6, 15, 19, 38, 43, 496, 497, 498, 508, 518], "privat": [6, 15, 17, 19, 20, 24, 26, 27, 28, 38, 44, 50, 105, 106, 107, 108, 115, 116, 119, 120, 121, 123, 125, 126, 128, 131, 163, 164, 165, 189, 215, 429, 493, 496, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 511, 512, 514, 515, 516, 517, 518, 522, 524], "dictionari": [6, 15, 19, 38, 44, 81, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 156, 429, 493, 496, 498, 499, 501, 504, 505, 506, 507, 508, 509, 512, 514, 515, 517, 518, 523, 528], "auto_examples_python": 6, "auto_examples_jupyt": 6, "your": [8, 10, 14, 23, 25, 26, 27, 31, 33, 34, 38, 40, 43, 44, 50, 93, 135, 136, 165, 519, 522, 523, 524, 526, 529], "own": [8, 24, 25, 26, 27, 38, 40, 43, 50, 128, 165, 176, 496, 506, 516, 522, 524, 527, 529], "840": [8, 9, 12, 24, 26, 41, 42, 48, 128, 138, 145, 147, 209, 212, 213, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 496, 506, 507, 509, 511, 512, 517, 520, 522], "10008": [8, 9, 12, 24, 26, 41, 42, 48, 128, 138, 145, 147, 209, 212, 213, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 496, 506, 507, 509, 511, 512, 517, 520, 522], "5": [8, 9, 10, 12, 13, 16, 20, 22, 23, 24, 26, 29, 33, 34, 38, 41, 42, 48, 49, 52, 125, 127, 128, 131, 135, 137, 138, 139, 140, 141, 143, 145, 147, 193, 199, 203, 204, 205, 206, 212, 213, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 307, 308, 309, 310, 326, 327, 328, 329, 330, 331, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 462, 511, 512, 520, 521, 522, 524, 527, 529], "don": [8, 10, 18, 26, 27, 28, 38, 43, 50, 520, 521, 523, 524, 527], "xfe": 8, "x04": [8, 48], "myprint": [8, 496, 497], "indent": [8, 128, 166, 522], "through": [8, 17, 36, 38, 40, 43, 48, 128, 158, 172, 174, 175, 496, 497, 498, 520, 521, 522, 526, 528], "custom": [8, 26, 28, 31, 163, 165, 496, 497, 498, 505, 508, 512], "_pretty_str": [8, 522], "dont_print": 8, "indent_str": 8, "next_indent_str": 8, "sequence_item": 8, "repr_valu": 8, "repr": [8, 38, 97, 496, 511], "50": [8, 42, 48, 49, 138, 213, 221, 316, 323, 350, 429], "plot_printing_dataset": [8, 13, 518], "open": [9, 23, 25, 26, 150, 156, 496, 499, 520, 521, 522], "some": [9, 14, 16, 17, 26, 28, 36, 38, 39, 43, 46, 47, 48, 49, 50, 52, 73, 86, 96, 128, 129, 146, 159, 176, 457, 458, 465, 496, 497, 498, 500, 502, 505, 506, 516, 521, 522, 523, 524, 526, 528], "project": [9, 10, 20, 94, 519, 520, 521, 526], "src": [9, 10, 30, 31, 94, 146, 213, 524, 527], "test_fil": [9, 10, 24, 26, 38, 40, 521, 522, 524], "ct_small": [9, 26, 28, 66, 155, 521, 522], "dcm": [9, 11, 12, 24, 26, 27, 28, 36, 38, 40, 41, 47, 48, 66, 128, 155, 163, 496, 512, 521, 522, 527, 528, 529], "ct1": [9, 20, 26, 28, 66, 521, 522], "1ct1": [9, 20, 26, 28, 524], "20040119": [9, 20, 26, 28, 522], "661468": [9, 20], "77": [9, 20, 24, 26, 27, 28, 38, 247, 248, 260, 361, 362, 363, 364, 366, 420, 433, 434, 435, 436, 437, 439, 440, 441, 444, 445], "2040634155": [9, 20, 26, 28], "get_testdata_fil": [9, 10, 11, 38, 40, 48, 493, 496, 512, 514, 515, 517, 521, 522, 524], "normal": [9, 16, 20, 25, 26, 27, 38, 66, 496, 517], "mode": [9, 20, 26, 28, 80, 83, 84, 129, 152, 496, 509, 520, 526], "sopclassuid": [9, 24, 26, 28, 164, 522, 529], "pat_nam": 9, "patientnam": [9, 10, 12, 14, 26, 28, 38, 40, 66, 81, 82, 125, 128, 155, 163, 165, 216, 496, 508, 521, 522, 524], "family_comma_given": [9, 462], "patientid": [9, 10, 12, 14, 17, 26, 28, 38, 128, 163, 165, 522, 524], "studyd": [9, 10, 24, 26, 27, 28, 524], "sure": [9, 42, 50, 520, 522, 526], "exist": [9, 16, 31, 33, 36, 38, 39, 50, 106, 128, 157, 165, 176, 189, 496, 516, 517, 519, 520, 521, 527], "want": [9, 10, 14, 24, 25, 26, 39, 50, 167, 520, 521, 522, 523, 524, 526], "miss": [9, 31, 103, 128, 132, 146, 155, 160, 174, 176, 189, 199, 200, 209, 211, 212, 213, 496, 504, 505, 508, 509, 515, 517, 520, 522, 524, 526], "cmap": [9, 46], "cm": [9, 11, 46], "grai": 9, "087": [9, 13, 518], "plot_read_dicom": [9, 13, 518], "interact": [10, 38, 40, 43, 128, 524], "directori": [10, 40, 163, 164, 165, 166, 168, 496, 497, 515, 517, 520, 521, 524, 526], "dicomdirtest": [10, 524], "pydicom_test": [10, 524], "276": [10, 524], "7230010": [10, 524], "31906": [10, 524], "1359940846": [10, 524], "78187": [10, 524], "descriptor": [10, 43, 165, 200, 201, 202, 203, 204, 213, 496, 509, 511, 524], "charact": [10, 20, 26, 28, 29, 36, 39, 43, 52, 73, 74, 75, 76, 86, 125, 126, 128, 131, 155, 156, 165, 166, 167, 168, 188, 191, 192, 193, 454, 462, 465, 466, 470, 472, 475, 476, 482, 485, 486, 493, 496, 497, 498, 505, 507, 508, 511, 512, 514, 515, 516, 517, 520, 522, 523, 524], "chang": [10, 12, 25, 26, 27, 33, 36, 39, 40, 41, 42, 47, 48, 52, 79, 93, 103, 125, 128, 141, 152, 165, 167, 174, 175, 176, 204, 206, 207, 208, 209, 210, 211, 212, 213, 454, 470, 472, 511, 519, 522, 523, 525, 526, 527, 528], "stage": [10, 164, 165, 520, 521], "dicomdir": [10, 37, 66, 163, 165, 166, 496, 504, 508, 509, 512, 515, 516, 517, 525], "structur": [10, 26, 27, 38, 40, 66, 163, 165, 166, 496, 509, 516, 517, 522, 524, 525], "manag": [10, 31, 43, 152, 155, 165, 496, 505, 512, 522, 524], "77654033": [10, 524], "doe": [10, 12, 43, 47, 48, 50, 86, 94, 106, 128, 148, 157, 176, 182, 207, 465, 496, 512, 524], "archibald": [10, 524], "20010101": [10, 128, 524], "studytim": [10, 24, 26, 28, 524], "000000": [10, 20, 524], "studydescript": [10, 26, 28, 165, 524], "xr": [10, 524], "spine": [10, 524], "comp": [10, 20, 26, 28, 524], "min": [10, 201, 202, 213, 524], "cr": [10, 213, 524], "seriesnumb": [10, 38, 524], "19950903": [10, 524], "173032": [10, 524], "head": [10, 36, 40, 524], "brain": [10, 524], "wo": [10, 524], "98890234": [10, 524], "peter": [10, 524], "20030505": [10, 524], "050743": [10, 524], "carotid": [10, 524], "025109": [10, 524], "045357": [10, 524], "mra": [10, 524], "700": [10, 496, 507, 524], "7": [10, 20, 23, 24, 26, 27, 34, 38, 48, 127, 131, 135, 143, 165, 189, 193, 206, 209, 213, 221, 243, 260, 269, 270, 353, 354, 355, 356, 360, 362, 383, 401, 408, 409, 410, 411, 412, 416, 446, 503, 507, 516, 521, 524, 529], "found": [10, 40, 43, 47, 48, 49, 103, 128, 146, 155, 160, 165, 170, 173, 522, 524, 527], "seriesinstanceuid": 10, "1196533885": 10, "18148": 10, "118": 10, "fileset": [10, 493, 496, 512, 514, 515, 517], "1479": 10, "userwarn": [10, 81], "record": [10, 20, 163, 164, 165, 166, 496, 509, 515, 524], "queri": [10, 90, 165, 524], "consid": [10, 25, 26, 50, 128, 213, 520, 521, 523], "expand": [10, 26, 28, 213, 496, 515, 521, 524], "search": [10, 103, 138, 165, 170, 171, 172, 496, 514, 517, 522, 524], "correspond": [10, 17, 31, 33, 36, 38, 47, 48, 49, 73, 103, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 131, 135, 136, 146, 147, 157, 164, 165, 166, 176, 199, 200, 213, 216, 429, 488, 496, 514, 517, 520, 521, 524, 527, 529], "warn_and_log": 10, "photometricinterpret": [10, 33, 41, 209, 211, 213, 524, 527], "monochrome1": [10, 33, 34, 209, 211, 524], "without": [10, 38, 42, 43, 49, 103, 128, 148, 158, 171, 213, 467, 478, 480, 481, 496, 498, 506, 508, 512, 515, 516, 517, 522, 524, 526], "still": [10, 41, 43, 496, 502, 503, 505, 506, 507, 509, 520, 522, 523, 524, 527], "tmp": [10, 12, 524], "tmpn970zwe_": 10, "follow": [10, 25, 26, 27, 28, 31, 34, 36, 38, 39, 41, 42, 48, 66, 125, 128, 132, 138, 139, 141, 146, 165, 173, 176, 189, 462, 496, 509, 512, 514, 517, 520, 521, 522, 524, 528, 529], "pt000000": [10, 524], "st000000": [10, 524], "se000000": [10, 524], "im000000": [10, 524], "se000001": [10, 524], "se000002": [10, 524], "st000001": [10, 524], "im000001": [10, 524], "im000002": [10, 524], "im000003": [10, 524], "pt000001": [10, 524], "im000004": 10, "st000002": 10, "st000003": 10, "im000005": 10, "im000006": 10, "pt000002": [10, 524], "pt000003": 10, "tempfil": [10, 12, 17, 524], "temporarydirectori": [10, 524], "generate_uid": [10, 33, 165, 496, 508, 517], "A": [10, 20, 28, 31, 33, 34, 36, 37, 38, 40, 41, 50, 73, 74, 86, 101, 102, 104, 128, 135, 137, 138, 139, 140, 141, 143, 145, 146, 151, 152, 153, 155, 156, 163, 165, 166, 167, 168, 174, 175, 176, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 454, 462, 475, 482, 485, 486, 496, 506, 514, 517, 520, 522, 524, 527], "its": [10, 24, 25, 26, 27, 29, 31, 33, 34, 38, 39, 79, 125, 128, 141, 165, 166, 173, 198, 199, 207, 208, 209, 210, 211, 212, 488, 496, 507, 512, 517, 522, 524], "itself": [10, 33, 36, 38, 43, 103, 151, 152, 174, 175, 496, 512, 520, 521, 524], "summari": [10, 25, 26, 520], "content": [10, 12, 14, 20, 38, 52, 128, 138, 199, 209, 210, 211, 212, 213, 521, 522, 524, 527], "seen": [10, 25, 26, 86, 521, 529], "when": [10, 16, 23, 24, 25, 26, 27, 29, 31, 33, 34, 36, 38, 41, 43, 45, 47, 48, 50, 77, 81, 82, 86, 90, 91, 94, 128, 135, 136, 138, 140, 141, 146, 148, 152, 159, 165, 167, 174, 175, 176, 201, 202, 203, 204, 205, 212, 213, 216, 218, 454, 462, 496, 498, 499, 500, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 520, 521, 522, 524, 526, 527, 529], "iter": [10, 17, 38, 128, 137, 138, 139, 140, 143, 146, 153, 166, 167, 174, 177, 198, 211, 214, 218, 496, 498, 506, 524], "over": [10, 20, 26, 27, 45, 47, 522, 524], "yield": [10, 38, 128, 137, 138, 139, 140, 143, 146, 153, 166, 167, 211, 488, 522, 524, 527, 529], "fileinst": [10, 165, 166, 493, 496, 517, 524], "do": [10, 14, 25, 26, 31, 37, 39, 42, 43, 45, 46, 47, 48, 50, 90, 128, 165, 176, 182, 496, 502, 508, 514, 520, 521, 522, 524, 527, 528, 529], "someth": [10, 14, 23, 25, 26, 36, 47, 128, 496, 517, 520], "patient_id": 10, "find_valu": [10, 165, 524], "return": [10, 11, 14, 31, 34, 36, 38, 40, 43, 47, 48, 49, 66, 73, 74, 76, 77, 87, 88, 94, 99, 100, 101, 102, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 136, 139, 141, 142, 144, 146, 147, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 188, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 429, 454, 456, 457, 458, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 496, 497, 498, 499, 500, 506, 507, 508, 509, 511, 512, 514, 515, 517, 522, 523, 524, 529], "where": [10, 31, 34, 38, 39, 47, 48, 49, 52, 105, 107, 128, 131, 135, 157, 163, 165, 170, 171, 201, 202, 213, 496, 498, 507, 508, 509, 520, 521, 522, 524], "one": [10, 24, 26, 31, 34, 38, 40, 42, 48, 49, 50, 80, 83, 84, 105, 107, 125, 128, 129, 134, 135, 136, 137, 138, 139, 141, 146, 157, 158, 163, 165, 166, 167, 173, 177, 191, 200, 206, 213, 457, 458, 496, 502, 505, 515, 520, 522, 524, 526, 528, 529], "repres": [10, 31, 38, 48, 98, 125, 128, 139, 155, 176, 215, 461, 462, 465, 520, 529], "match": [10, 41, 42, 48, 81, 90, 101, 102, 103, 104, 128, 157, 163, 165, 199, 207, 209, 212, 462, 496, 502, 505, 512, 517, 524, 527, 529], "result": [10, 17, 24, 25, 26, 27, 33, 39, 41, 50, 74, 76, 128, 176, 215, 454, 496, 514, 520, 521, 527], "find": [10, 17, 20, 23, 25, 26, 90, 128, 158, 165, 170, 171, 172, 174, 175, 520, 521, 522, 524, 528, 529], "study_uid": 10, "studyinstanceuid": 10, "series_uid": 10, "plural": 10, "Of": 10, "cours": [10, 527], "you": [10, 12, 14, 16, 18, 23, 24, 25, 26, 27, 28, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 90, 135, 136, 155, 159, 163, 165, 167, 213, 429, 496, 509, 512, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529], "just": [10, 12, 14, 25, 26, 27, 28, 38, 43, 50, 86, 125, 128, 153, 496, 508, 512, 520, 521, 522, 524], "directli": [10, 31, 38, 50, 125, 146, 456, 496, 517, 523, 524, 528], "know": [10, 34, 38, 43, 522, 523, 524], "what": [10, 29, 34, 37, 43, 47, 165, 522, 524, 527], "nfound": 10, "actual": [10, 20, 25, 26, 31, 34, 38, 41, 47, 125, 128, 146, 165, 176, 199, 209, 212, 520, 524], "onli": [10, 24, 26, 27, 28, 36, 38, 39, 40, 42, 47, 48, 50, 52, 77, 94, 106, 108, 109, 110, 111, 113, 114, 115, 116, 124, 128, 130, 132, 138, 141, 146, 155, 158, 165, 167, 174, 175, 176, 189, 209, 213, 216, 461, 466, 496, 502, 504, 505, 506, 507, 508, 509, 511, 512, 514, 517, 520, 522, 523, 524, 527], "limit": [10, 26, 27, 33, 40, 41, 44, 48, 165, 465, 466, 496, 502, 508, 512, 528], "subset": [10, 24, 26], "howev": [10, 25, 26, 29, 31, 33, 34, 38, 41, 128, 138, 139, 141, 198, 461, 520, 521, 522, 524, 527], "less": [10, 33, 34, 152, 496, 517, 529], "effici": [10, 153, 165, 213, 465, 529], "result_load": 10, "remov": [10, 12, 17, 38, 39, 44, 128, 146, 164, 165, 166, 176, 213, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 520, 522], "To": [10, 24, 26, 28, 33, 38, 39, 40, 42, 47, 49, 50, 148, 153, 496, 502, 507, 512, 520, 521, 522, 524, 526, 529], "edit": [10, 50, 496, 506, 507, 509, 520, 521, 526], "identif": 10, "modul": [10, 25, 26, 31, 33, 39, 45, 46, 48, 49, 66, 82, 91, 94, 128, 146, 191, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 488, 493, 496, 497, 503, 504, 507, 512, 514, 515, 517, 522, 524, 527, 529], "part": [10, 27, 28, 29, 33, 34, 36, 39, 43, 45, 48, 49, 108, 125, 128, 131, 135, 137, 138, 139, 140, 141, 143, 155, 168, 174, 175, 176, 189, 193, 199, 201, 202, 203, 204, 205, 206, 209, 213, 454, 462, 496, 499, 502, 514, 520, 521, 522, 523, 524, 527, 529], "annex": [10, 33, 34, 48, 49, 125, 128, 135, 137, 138, 139, 140, 141, 143, 163, 201, 202, 203, 204, 205, 206, 209, 213, 454, 524], "properti": [10, 14, 38, 52, 125, 128, 146, 152, 164, 165, 166, 215, 429, 462, 496, 497, 499, 502, 505, 506, 512, 517, 524], "1130": [10, 20], "my": [10, 43, 128, 165, 523], "1141": 10, "descriptor_file_id": [10, 165, 524], "readm": 10, "1142": 10, "specif": [10, 20, 24, 26, 27, 28, 31, 32, 36, 38, 41, 43, 47, 48, 50, 73, 74, 75, 76, 128, 155, 156, 165, 170, 193, 487, 496, 497, 499, 505, 507, 508, 511, 512, 520, 521, 522, 523, 524, 527], "descriptor_character_set": [10, 165, 524], "iso_ir": [10, 20, 26, 28, 43, 75, 522, 523, 524], "100": [10, 20, 24, 26, 28, 43, 49, 221, 334, 335, 346, 522, 523, 524, 529], "until": [10, 152, 155, 156, 159, 170, 173, 496, 497, 502, 514, 524], "call": [10, 25, 26, 38, 39, 41, 45, 47, 50, 78, 82, 88, 128, 139, 152, 153, 165, 172, 176, 198, 456, 496, 499, 502, 506, 512, 517, 522, 524, 527], "meet": [10, 31, 137, 146, 496, 502], "semant": [10, 36, 165, 462, 524], "re": [10, 16, 37, 47, 132, 379, 380, 519, 520, 521, 522, 524, 526, 527, 529], "here": [10, 24, 26, 28, 31, 37, 43, 46, 96, 146, 172, 521, 522, 523, 524, 528], "becaus": [10, 24, 26, 33, 36, 38, 40, 41, 47, 48, 50, 66, 148, 165, 520, 521, 522], "would": [10, 24, 25, 26, 27, 33, 39, 50, 52, 457, 520, 521, 524, 529], "overwrit": [10, 487], "altern": [10, 23, 38, 128, 203, 204, 205, 213, 520, 522, 524], "new": [10, 16, 17, 18, 26, 27, 33, 36, 37, 40, 44, 52, 66, 77, 79, 81, 82, 86, 93, 96, 97, 99, 100, 105, 106, 107, 108, 125, 128, 130, 135, 137, 142, 143, 145, 146, 147, 149, 151, 152, 164, 165, 166, 198, 203, 205, 211, 213, 215, 429, 455, 459, 462, 488, 496, 497, 498, 499, 502, 503, 504, 507, 508, 509, 511, 512, 514, 517, 519, 522, 525, 529], "while": [10, 26, 27, 33, 34, 48, 52, 125, 128, 176, 212, 465, 496, 508, 509, 514, 520, 524, 526], "leav": [10, 16, 26, 27, 106, 522], "unchang": [10, 41, 73, 174, 175, 201, 202, 203, 204, 205, 213, 527], "tdir": 10, "new_fileset": 10, "norigin": 10, "note": [10, 18, 24, 26, 27, 28, 36, 39, 41, 42, 43, 46, 79, 90, 106, 108, 128, 131, 137, 138, 142, 143, 155, 159, 160, 172, 182, 198, 201, 202, 204, 205, 213, 455, 457, 458, 459, 461, 462, 463, 465, 499, 521, 522, 523, 527, 528, 529], "layout": [10, 165], "been": [10, 25, 26, 34, 41, 42, 43, 48, 79, 86, 88, 128, 135, 136, 138, 139, 157, 164, 165, 167, 176, 188, 189, 213, 456, 496, 499, 506, 511, 514, 515, 517, 520, 521, 522, 523], "is_fil": [10, 524], "relative_to": 10, "plot_read_fileset": [10, 13, 518], "basic": [11, 26, 27, 28, 37, 40, 41, 46, 49, 50, 68, 128, 135, 136, 138, 139, 140, 141, 496, 509, 524, 525, 527, 529], "info": [11, 20, 153, 156, 159, 171, 172, 173, 429, 496, 499, 500, 502, 504], "beam": [11, 18, 24, 26, 27, 28, 496, 502], "gantri": [11, 20, 26, 28], "ssd": 11, "field": [11, 20, 26, 28, 38, 87, 125, 127, 139, 496, 514], "89": 11, "darci": [11, 12, 16, 17], "mason": [11, 12, 16, 17, 23], "list_beam": 11, "summar": [11, 524], "line": [11, 20, 23, 24, 25, 27, 28, 35, 39, 40, 43, 47, 50, 82, 128, 165, 496, 503, 514, 520, 521, 522, 524, 527], "13": [11, 230, 231, 232, 234, 449, 450], "11": [11, 20, 23, 201, 202, 203, 204, 205, 213, 220, 226, 228, 242, 243, 294, 295, 358, 378, 398, 414, 438, 443, 448, 496, 516, 517, 529], "beamsequ": [11, 18, 24, 26, 27, 28, 38, 128, 496, 502], "cp0": 11, "controlpointsequ": 11, "float": [11, 29, 36, 38, 48, 78, 85, 125, 128, 129, 153, 155, 156, 157, 159, 173, 197, 209, 213, 456, 457, 458, 460, 461, 465, 481, 496, 502, 503, 509, 512, 514, 516, 522], "sourcetosurfacedist": 11, "10": [11, 20, 23, 26, 28, 47, 49, 141, 167, 189, 351, 385, 392, 414, 496, 503, 507, 517, 522, 524, 529], "beamnam": [11, 18, 38], "beamnumb": [11, 24, 26, 27, 28], "8d": 11, "gantryangl": 11, "1f": 11, "join": [11, 40], "002": [11, 13, 518], "plot_read_rtplan": [11, 13, 518], "scratch": [12, 18, 44, 128, 176, 496, 500, 501, 514, 520, 527], "produc": [12, 24, 26, 36, 48, 50, 496, 504, 509, 514], "standard": [12, 20, 22, 29, 33, 34, 36, 39, 41, 43, 48, 49, 52, 125, 128, 131, 135, 137, 138, 139, 140, 141, 143, 165, 176, 189, 193, 199, 200, 201, 202, 203, 204, 205, 206, 209, 213, 216, 454, 457, 458, 461, 462, 496, 498, 501, 502, 504, 505, 512, 514, 523, 524, 527, 529], "compliant": [12, 50, 496, 505], "written": [12, 24, 26, 29, 39, 40, 45, 47, 48, 128, 152, 165, 176, 188, 189, 496, 508, 509, 517, 520, 522, 524], "have": [12, 14, 25, 26, 27, 28, 29, 33, 34, 36, 38, 39, 41, 42, 43, 47, 50, 94, 125, 128, 132, 135, 136, 139, 141, 146, 155, 158, 165, 167, 176, 189, 199, 209, 211, 212, 213, 467, 478, 488, 496, 502, 505, 507, 508, 511, 515, 517, 519, 520, 521, 522, 523, 524, 526, 527, 529], "valid": [12, 44, 50, 52, 80, 83, 84, 86, 121, 125, 128, 130, 132, 146, 155, 168, 176, 189, 206, 213, 379, 380, 429, 465, 466, 470, 472, 481, 482, 485, 496, 514, 515, 516], "tmpoza7nb": 12, "20231230": 12, "0033": [12, 20], "094440": 12, "874653": 12, "firstnam": 12, "123456": 12, "delet": [12, 17, 50, 128, 496, 511, 520, 521], "datetim": [12, 90, 455, 459, 463], "filemetadataset": [12, 24, 26, 129, 132, 158, 176, 189, 493, 496, 511, 522], "explicitvrlittleendian": 12, "dt": [12, 29, 56, 61, 90, 471, 483, 496, 505, 514], "now": [12, 20, 125, 128, 454, 496, 498, 499, 502, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 520, 521, 522, 524, 529], "contentd": 12, "strftime": 12, "y": [12, 36, 213], "m": [12, 22, 462, 520, 521, 524, 526, 527, 529], "contenttim": 12, "long": [12, 29, 172, 176, 484, 496, 516, 522], "micro": 12, "mediastoragesopclassuid": [12, 524], "mediastoragesopinstanceuid": 12, "implementationclassuid": 12, "transfersyntaxuid": [12, 41, 42, 128, 164, 496, 498, 505, 522, 527], "namedtemporaryfil": [12, 17], "suffix": [12, 167, 454, 462, 496, 517], "save_a": [12, 16, 17, 24, 26, 40, 41, 45, 47, 48, 128, 176, 496, 498, 511, 517, 522, 527, 529], "enforce_file_format": [12, 128, 176, 496, 517, 522], "reopen": 12, "unlink": 12, "004": [12, 13, 518], "plot_write_dicom": [12, 13, 518], "288": 13, "input_output": [13, 518], "output": [13, 16, 20, 24, 26, 27, 36, 42, 48, 50, 201, 202, 213, 496, 509, 511, 518, 520, 521, 522, 524], "byte": [14, 24, 26, 29, 30, 31, 38, 41, 47, 48, 49, 50, 74, 75, 76, 86, 87, 108, 125, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 149, 152, 154, 155, 156, 157, 158, 160, 170, 171, 172, 173, 174, 175, 176, 181, 182, 186, 188, 189, 197, 199, 213, 429, 462, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 496, 507, 508, 509, 514, 517, 522, 524, 527, 529], "help": [14, 24, 25, 26, 27, 28, 39, 43, 156, 496, 499, 507, 514, 516, 519, 520, 521], "save": [14, 16, 24, 26, 40, 41, 47, 48, 496, 499, 502, 521, 522, 523, 527, 529], "blob": 14, "databas": 14, "io": [14, 16, 129, 149, 151, 152, 493, 522], "bytesio": [14, 16, 129, 149, 522], "dcmwrite": [14, 45, 67, 128, 151, 152, 496, 505, 511, 512, 514, 517, 522], "filebas": [14, 67, 139, 141, 144, 188, 493], "dicomfilelik": [14, 67, 149, 150, 496, 498], "usag": [14, 24, 26, 27, 28, 33, 38, 44, 206, 213, 429, 462, 493, 496, 509, 524], "memory_dataset": [14, 21, 518], "dicom_filenam": 14, "write_dataset_to_byt": 14, "buffer": [14, 128, 129, 149, 151, 152, 155, 176, 188, 209, 496, 517], "rewind": [14, 160, 170, 171, 172, 496, 503], "seek": [14, 128, 129, 151, 152, 155, 176, 496, 498, 508], "adapt_dataset_from_byt": 14, "interest": [14, 47, 519, 522], "stuff": 14, "is_little_endian": [14, 16, 41, 127, 128, 129, 139, 141, 152, 153, 156, 161, 162, 169, 171, 172, 173, 174, 175, 176, 188, 213, 429, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 496, 517], "bond": 14, "jame": 14, "007": [14, 17, 19, 518], "dummydatabas": 14, "__init__": [14, 125, 127, 128, 129, 130, 131, 146, 149, 151, 152, 164, 165, 166, 198, 214, 215, 429, 455, 457, 458, 459, 460, 461, 462, 463, 464], "self": [14, 429, 522, 527], "_blob": 14, "dict": [14, 31, 38, 89, 105, 107, 125, 128, 129, 130, 146, 163, 165, 199, 213, 496, 499, 514, 516], "file_path": [14, 196], "db": 14, "convert": [14, 31, 33, 34, 42, 48, 73, 74, 76, 82, 85, 87, 90, 94, 126, 128, 146, 165, 176, 198, 199, 206, 207, 208, 209, 210, 211, 212, 213, 488, 496, 499, 502, 505, 508, 509, 512, 513, 514, 517, 521, 522, 529], "ds_byte": 14, "read_byt": 14, "read_dataset": [14, 67, 159], "_new": 14, "dynam": [16, 20], "allow": [16, 17, 24, 26, 27, 31, 34, 38, 39, 43, 47, 52, 85, 128, 130, 163, 165, 213, 461, 496, 498, 499, 508, 511, 512, 514, 515, 516, 517, 526], "tag": [16, 17, 26, 28, 29, 40, 43, 44, 47, 48, 52, 56, 82, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 139, 141, 142, 143, 152, 153, 155, 157, 165, 173, 174, 178, 193, 199, 209, 211, 212, 213, 484, 488, 493, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 511, 512, 514, 515, 517, 522, 523], "present": [16, 26, 28, 47, 76, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 128, 129, 132, 138, 139, 140, 141, 146, 148, 155, 160, 163, 165, 166, 176, 189, 200, 201, 202, 203, 204, 205, 213, 496, 498, 506, 508, 509, 522, 529], "unknown": [16, 20, 29, 43, 82, 125, 126, 128, 139, 186, 496, 501, 506, 508, 512, 514, 522, 528], "1001": [16, 20, 43, 128], "acm": [16, 43, 107], "un": [16, 29, 52, 87, 153, 176, 186, 479, 496, 497, 509, 511, 514, 515, 522], "1002": [16, 20, 43, 522], "hello": [16, 522], "world": [16, 522], "1003": [16, 20], "regist": [16, 25, 26, 43, 125, 429, 496, 512, 522], "One": [16, 36, 40, 43, 47, 50, 105, 106, 107, 125, 128, 200, 206, 213, 520, 521], "42": [16, 496, 499], "two": [16, 20, 25, 26, 28, 36, 38, 39, 42, 43, 45, 86, 105, 106, 107, 128, 137, 165, 213, 462, 496, 503, 522, 523, 529], "three": [16, 31, 36, 107, 462, 522, 524], "contributor": [16, 496], "datadict": [16, 43, 493, 496, 505, 508, 522], "add_private_dict_entri": [16, 38, 43, 496, 508], "valuerep": [16, 22, 56, 469, 471, 475, 477, 493], "demonstr": [16, 46, 496, 497], "implicit": [16, 26, 27, 38, 42, 86, 128, 129, 152, 153, 156, 165, 176, 209, 429, 476, 496, 499, 506, 508, 514, 517, 527], "is_implicit_vr": [16, 41, 127, 128, 129, 152, 153, 154, 156, 161, 162, 176, 188, 429, 476, 496, 508, 517], "block": [16, 18, 20, 26, 27, 28, 43, 128, 131, 496, 511, 521], "private_block": [16, 43, 128], "0x1001": 16, "add_new": [16, 43, 128, 131, 522], "0x01": [16, 43, 128], "0x02": [16, 43], "0x03": 16, "simul": [16, 128], "fp": [16, 139, 141, 144, 153, 155, 156, 160, 161, 162, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "forc": [16, 128, 148, 155, 159, 160, 165, 176, 496, 500, 502, 504, 522], "defin": [16, 17, 20, 25, 26, 33, 34, 43, 47, 52, 125, 128, 131, 164, 165, 200, 213, 429, 496, 502, 520, 522, 524, 529], "vm": [16, 29, 38, 58, 105, 106, 107, 108, 109, 115, 116, 119, 125, 496, 500, 508, 511, 517, 522], "is_retir": [16, 105, 106, 107, 115, 116, 125, 429, 496, 505], "flag": [16, 20, 39, 93, 128, 160, 165, 170, 171, 172, 496, 511, 514, 524], "blank": [16, 17, 106, 198, 456, 496, 498, 522], "new_dict_item": [16, 105, 107], "0x10011001": 16, "0x10011002": 16, "0x10011003": 16, "entri": [16, 25, 26, 27, 38, 44, 48, 105, 106, 107, 108, 115, 116, 496, 498, 515, 520, 521], "string": [16, 17, 20, 25, 26, 29, 38, 52, 74, 75, 76, 106, 125, 128, 131, 146, 155, 166, 177, 186, 188, 190, 194, 195, 198, 215, 456, 457, 458, 460, 461, 462, 465, 466, 470, 472, 481, 482, 483, 487, 496, 499, 501, 502, 506, 507, 512, 514, 523], "private_cr": [16, 43, 107, 108, 116, 119, 120, 121, 128, 131, 215], "new_entries_dict": [16, 105, 107], "noutput": 16, "003": [16, 19, 518], "plot_add_dict_entri": [16, 19, 518], "point": [17, 24, 25, 26, 27, 28, 29, 46, 50, 173, 209, 213, 465, 496, 498, 503, 514, 520, 522, 528], "It": [17, 26, 27, 37, 38, 39, 40, 41, 43, 45, 46, 48, 50, 128, 139, 165, 176, 496, 502, 503, 520, 521, 522, 523, 524, 526, 527, 529], "replac": [17, 73, 74, 76, 106, 496, 508, 515], "curv": [17, 529], "keyword": [17, 26, 27, 28, 36, 38, 43, 48, 49, 81, 82, 89, 103, 105, 106, 114, 115, 117, 122, 124, 125, 128, 146, 155, 165, 174, 175, 176, 199, 204, 206, 209, 211, 212, 213, 216, 429, 488, 496, 500, 502, 505, 507, 508, 512, 516, 517, 521, 522, 524, 528], "patientbirthd": [17, 38], "data_el": [17, 128, 178, 181, 182, 185, 187, 192, 193, 207, 522, 523], "callback": [17, 25, 26, 128, 496, 505], "function": [17, 20, 25, 26, 27, 31, 36, 37, 38, 39, 40, 43, 45, 48, 49, 50, 51, 54, 55, 63, 67, 69, 71, 78, 88, 95, 99, 106, 107, 125, 128, 139, 146, 153, 156, 158, 159, 163, 165, 174, 175, 176, 196, 198, 199, 200, 207, 208, 209, 210, 211, 212, 213, 216, 456, 465, 488, 489, 493, 494, 496, 497, 498, 499, 504, 505, 507, 508, 509, 512, 514, 517, 521, 522, 523, 524, 527, 529], "insid": [17, 496, 498], "person_names_callback": 17, "curves_callback": 17, "0xff00": 17, "0x5000": 17, "del": [17, 18, 38, 43, 128, 522], "etc": [17, 18, 36, 38, 40, 46, 48, 125, 128, 199, 496, 497, 503, 514, 520, 524, 527], "walk": [17, 128], "remove_private_tag": [17, 43, 128], "method": [17, 23, 31, 34, 38, 41, 42, 43, 45, 46, 47, 49, 94, 97, 125, 127, 128, 129, 130, 131, 135, 136, 145, 146, 149, 151, 152, 155, 163, 164, 165, 166, 176, 198, 214, 215, 429, 455, 457, 458, 459, 460, 461, 462, 463, 496, 499, 502, 505, 507, 514, 516, 517, 522, 523, 524, 527, 528], "easili": [17, 496, 497, 499], "delattr": 17, "otherpatientid": [17, 496, 498], "otherpatientidssequ": [17, 522], "possibl": [17, 34, 38, 39, 48, 90, 125, 128, 152, 163, 174, 175, 176, 212, 213, 465, 496, 505, 507, 508, 509, 514, 517, 523, 524, 528], "assign": [17, 38, 66, 125, 496, 502, 509, 515], "19000101": 17, "plot_anonym": [17, 19, 518], "300a": [18, 26, 27, 28, 40], "00f8": 18, "apertur": 18, "00fe": 18, "block1": 18, "block2": 18, "toi": 18, "block_ds1": 18, "blocktyp": 18, "blocknam": 18, "block_ds2": 18, "should": [18, 25, 26, 27, 29, 31, 33, 34, 36, 38, 39, 40, 43, 47, 48, 50, 125, 128, 138, 139, 140, 141, 146, 155, 160, 163, 165, 167, 174, 175, 189, 198, 206, 207, 208, 209, 210, 211, 212, 213, 454, 481, 496, 498, 499, 506, 507, 512, 520, 521, 522, 524, 525, 527, 529], "like": [18, 25, 26, 38, 39, 43, 47, 50, 69, 71, 82, 108, 128, 129, 144, 150, 151, 152, 153, 155, 156, 157, 159, 160, 170, 172, 173, 176, 188, 189, 191, 192, 193, 496, 499, 509, 512, 515, 521, 522, 523, 524], "plan_d": 18, "sinc": [18, 34, 43, 128, 176, 496, 516, 520, 524, 529], "did": [18, 496, 497, 517], "blocksequ": 18, "numberofblock": 18, "beam0": 18, "block_ds3": 18, "abov": [18, 24, 25, 26, 27, 28, 38, 43, 47, 50, 125, 128, 199, 496, 506, 521, 524], "forget": [18, 50], "001": [18, 19, 43, 518], "plot_sequ": [18, 19, 518], "011": 19, "metadata_process": [19, 518], "192": [20, 26, 28, 43, 522], "20040119072730": [20, 26, 28, 43, 522], "12322": [20, 26, 28, 43, 522], "0005": [20, 26, 28, 43, 73, 74, 75, 76, 128, 155, 156, 488, 496, 497, 522, 523, 524], "primari": [20, 26, 28, 43, 522], "072731": [20, 26, 28, 522], "19970430": 20, "072730": [20, 26, 28], "112749": 20, "112936": 20, "113008": 20, "ge": 20, "medic": [20, 36, 40, 42, 524], "system": [20, 24, 26, 27, 28, 39, 46, 152, 165, 213, 496, 517, 522, 524, 526, 529], "jfk": 20, "0500": 20, "ct01_oc0": 20, "e": [20, 24, 26, 27, 28, 31, 36, 38, 39, 40, 47, 48, 52, 82, 125, 128, 131, 146, 155, 161, 162, 165, 166, 167, 198, 199, 213, 214, 457, 462, 487, 496, 499, 506, 508, 512, 517, 520, 521, 522, 526], "rhapsod": 20, "0009": [20, 43, 48, 128, 209, 213, 496, 509], "gems_iden_01": [20, 43], "fidel": [20, 43], "ge_genesis_ff": [20, 43], "suit": [20, 43, 496, 516], "ct01": [20, 43], "1004": [20, 488, 496, 509], "product": 20, "hispe": 20, "1027": 20, "sl": [20, 26, 28, 29, 488], "862399669": 20, "servic": [20, 524], "1031": 20, "mobil": 20, "10e6": 20, "genesi": 20, "05": [20, 521], "10e7": 20, "exam": 20, "checksum": 20, "973283917": 20, "10e9": 20, "stamp": 20, "o": [20, 22, 68, 70], "abcd1234": [20, 522], "1234abcd": [20, 522], "ag": [20, 29], "AS": [20, 29, 483], "000y": 20, "21b0": 20, "addit": [20, 26, 27, 28, 31, 73, 128, 164, 165, 462, 496, 504, 512, 514, 517, 523, 524, 526, 527], "histori": 20, "gems_pati_01": 20, "statu": [20, 113, 125], "isovue300": 20, "helic": 20, "kvp": 20, "120": [20, 49], "0088": 20, "collect": [20, 43, 52, 130, 156, 524], "diamet": 20, "480": 20, "rout": 20, "iv": 20, "1100": 20, "reconstruct": 20, "338": 20, "6716": 20, "1110": 20, "distanc": 20, "detector": 20, "1099": 20, "3100585938": 20, "1111": 20, "630": 20, "1120": 20, "tilt": 20, "tabl": [20, 23, 29, 33, 41, 48, 125, 128, 135, 136, 138, 139, 140, 141, 176, 189, 199, 200, 201, 202, 203, 204, 209, 211, 212, 213, 488, 496, 509, 512, 521, 522, 524, 526, 527], "height": 20, "133": [20, 160], "699997": 20, "1150": 20, "exposur": 20, "1601": 20, "1151": 20, "rai": [20, 26, 28, 522], "tube": 20, "170": 20, "1152": 20, "1160": 20, "filter": [20, 26, 27, 128], "larg": [20, 41, 43, 50, 128, 131, 135, 136, 156, 173, 456, 496, 498, 499, 506, 508, 509, 512, 514, 527, 529], "bowti": 20, "fil": 20, "1190": [20, 496, 512], "focal": 20, "spot": 20, "1210": 20, "convolut": 20, "kernel": 20, "ff": [20, 141], "0019": 20, "gems_acqu_01": 20, "912": [20, 496, 509], "cell": 20, "theta": 20, "373": [20, 22], "75": [20, 26, 27, 49, 372], "0166": 20, "100f": 20, "horiz": 20, "ref": 20, "955": [20, 38], "799988": 20, "1011": 20, "1013": [20, 496, 509], "baselin": [20, 42, 48, 138, 213, 429, 496, 516, 529], "1014": [20, 496, 512], "1015": 20, "enhanc": [20, 200, 213, 499], "1016": [20, 496, 509], "1017": 20, "1018": 20, "ra": 20, "1019": [20, 48], "79187": 20, "101a": 20, "last": [20, 26, 28, 36, 38, 40, 43, 82, 94, 137, 139, 496, 502, 515, 522, 524, 527], "101b": 20, "loc": 20, "320": [20, 48], "197968": 20, "101e": 20, "1023": 20, "speed": [20, 496, 499, 503, 507, 514, 516], "mm": [20, 23], "rotat": 20, "1024": [20, 125, 128, 496, 510, 523, 527], "mid": [20, 26, 28, 38, 40], "sec": 20, "17": [20, 49, 395], "784578": 20, "1025": 20, "1026": 20, "azimuth": 20, "degre": 20, "msec": 20, "102a": 20, "On": [20, 34, 173, 462, 523], "178": 20, "079926": 20, "102b": 20, "off": [20, 26, 27, 39, 91, 156, 496, 503, 511, 521], "3994": 20, "299316": 20, "102c": 20, "trigger": [20, 26, 28], "10431": 20, "102e": 20, "718": 20, "079956": 20, "102f": 20, "984": 20, "1039": [20, 524], "sfov": 20, "stat": [20, 157], "recon": 20, "comput": 20, "1042": [20, 496, 511], "segment": [20, 200, 212, 213, 496, 507, 514], "1043": 20, "1044": 20, "interscan": 20, "delai": [20, 26, 28], "1047": [20, 496, 511], "compress": [20, 23, 31, 33, 34, 37, 40, 44, 48, 64, 128, 135, 136, 138, 139, 146, 213, 429, 496, 505, 507, 509, 514, 515, 517, 525, 526], "factor": [20, 49, 496, 503, 527, 529], "104a": 20, "104b": [20, 26, 28], "1052": [20, 201, 202, 213], "post": [20, 496, 511], "proc": 20, "1057": 20, "water": [20, 462], "95": [20, 496, 502, 505], "1058": 20, "bone": [20, 46], "105e": 20, "763": 20, "105f": 20, "increment": [20, 167], "1969": 20, "1061": 20, "1576": 20, "1062": 20, "106a": 20, "depend": [20, 31, 34, 41, 42, 48, 50, 94, 125, 128, 146, 165, 176, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 483, 488, 496, 507, 508, 515, 521, 523, 524, 526, 529], "process": [20, 25, 26, 31, 42, 128, 138, 206, 213, 429, 456, 496, 499, 511, 514, 516, 520, 521, 529], "106b": 20, "852": [20, 496, 508], "button": 20, "1071": 20, "fatq": 20, "estim": 20, "were": [20, 26, 28, 128, 496, 502, 504, 520, 521, 529], "1072": 20, "z": [20, 86, 167, 168, 496, 517], "chan": 20, "avg": 20, "1073": [20, 496, 511], "left": [20, 47, 521], "1074": 20, "max": [20, 201, 202, 213], "1075": [20, 496, 511], "right": 20, "1076": 20, "10da": 20, "10db": 20, "projector": 20, "coeffici": [20, 26, 27], "10dc": 20, "10dd": 20, "overrang": 20, "10de": 20, "alpha": [20, 200, 213, 496, 508, 509, 528], "158": 20, "135803": 20, "179": 20, "035797": 20, "sn": 20, "gems_rela_01": 20, "prescrib": 20, "1005": 20, "1007": 20, "1605775145": 20, "24078": 20, "acq": 20, "750675506": 20, "1037": 20, "screen": [20, 24, 26], "anatom": 20, "7400": 20, "1091": 20, "biopsi": 20, "1092": 20, "fl": [20, 26, 28, 29, 522], "1093": [20, 496, 512], "gems_stdy_01": 20, "fd": [20, 29], "862399761": 20, "111079": 20, "No": [20, 168, 474, 519], "header": [20, 148, 155, 160, 496, 498, 522], "107d": 20, "complet": [20, 24, 26, 31, 50, 128, 173, 496, 497, 520, 524, 526], "0025": 20, "gems_sers_01": 20, "1006": [20, 488, 496, 509], "puls": 20, "44": [20, 303], "landmark": 20, "counter": 20, "archiv": 20, "receiv": [20, 189], "host": 20, "0027": 20, "gems_imag_01": 20, "101c": 20, "vma": 20, "mamp": 20, "150": [20, 49], "101d": 20, "phase": 20, "mod": 20, "24": [20, 277], "101f": 20, "clip": 20, "129": [20, 527], "smart": 20, "ON": 20, "foreign": [20, 496, 497], "revis": [20, 496, 500, 502, 503], "1035": 20, "letter": [20, 38, 128], "20406341552734": 20, "r": [20, 34, 125, 128, 523], "coord": 20, "199999809265137": 20, "9": [20, 23, 26, 27, 33, 38, 48, 49, 78, 167, 168, 199, 222, 223, 227, 229, 238, 248, 269, 270, 290, 291, 292, 302, 357, 379, 380, 389, 405, 408, 416, 428, 443, 454, 506, 509, 512, 517, 529], "699999809265137": 20, "69999694824219": 20, "1045": 20, "1046": 20, "1048": 20, "top": [20, 26, 27, 28, 36, 47, 128, 156, 165, 496, 517, 521, 522], "corner": 20, "180": [20, 38], "53579711914062": 20, "1049": [20, 496, 511], "03579711914062": 20, "bottom": [20, 36, 520, 521], "104c": [20, 26, 28], "159": [20, 496, 509], "63580322265625": 20, "104d": [20, 26, 28], "19999694824219": 20, "116": [20, 26, 27, 28, 49], "20304870605469": 20, "side": 20, "l": [20, 23, 42, 138, 213, 320, 496, 507, 526], "1053": [20, 201, 202, 213, 496, 511], "anterior": 20, "posterior": 20, "1054": 20, "1055": 20, "0120": 20, "rescal": [20, 44, 201, 202, 204, 205, 213], "intercept": [20, 38, 201, 202, 213], "slope": [20, 201, 202, 213], "0029": 20, "gems_imps_01": 20, "lower": [20, 128, 131, 165, 524, 528], "rang": [20, 31, 34, 47, 90, 146, 201, 202, 213, 496, 507, 509, 522], "pixels1": 20, "87": 20, "1008": 20, "1009": 20, "100a": 20, "764": 20, "hdr": 20, "struct": [20, 191, 481], "1034": 20, "advantag": [20, 496, 503], "overflow": 20, "underflow": 20, "0043": [20, 26, 28, 522], "gems_parm_01": 20, "400": [20, 48], "input": [20, 24, 26, 48, 198, 206, 213, 462, 496, 512], "1012": 20, "chain": 20, "14": [20, 42, 138, 308, 309, 426, 496, 511], "decon": 20, "107": [20, 221, 297, 346, 496, 503], "21": [20, 49, 396], "20": [20, 49, 213, 359, 407, 496, 514], "calibr": 20, "ibh": 20, "scale": 20, "095": 20, "bbh": 20, "085000": 20, "102000": 20, "095000": 20, "blend": 20, "350": 20, "ppscan": 20, "integr": 20, "level": [20, 26, 27, 28, 35, 36, 128, 156, 165, 166, 496, 502, 514, 517, 521, 522, 523, 524], "40": [20, 49, 376, 496, 514], "delta": 20, "1021": 20, "glow": 20, "term": [20, 48, 199, 213], "748": 20, "749": 20, "750": 20, "pitch": 20, "ratio": [20, 33], "1028": 20, "uniqu": [20, 29, 31, 43, 146, 165, 166, 167, 185, 496, 505, 516, 522, 524], "iden": 20, "1029": [20, 496, 510], "histogram": 20, "2068": 20, "user": [20, 31, 38, 40, 45, 46, 76, 85, 128, 146, 153, 158, 176, 496, 499, 502, 508, 509, 512, 517, 520, 522, 524], "coordin": [20, 26, 27, 38], "200000": 20, "700000": 20, "07992553710938": 20, "3816": 20, "219482421875": 20, "fpa": 20, "gain": 20, "ad": [20, 25, 26, 27, 33, 36, 38, 44, 88, 103, 128, 131, 132, 147, 163, 165, 166, 174, 175, 176, 189, 198, 204, 206, 211, 213, 470, 472, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 514, 515, 516, 517, 519, 520, 523, 528], "cal": 20, "reg": 20, "xm": [20, 26, 28], "auto": [20, 128, 496, 497], "pattern": [20, 26, 28, 101, 102, 104, 496, 517], "tggc": [20, 26, 28], "104e": [20, 26, 28, 522], "durat": [20, 26, 28, 522], "60060977935791": [20, 26, 28, 522], "8192": [20, 173], "32768": [20, 26, 28, 522], "difflib": 20, "compar": [20, 52, 496, 503, 506, 514, 520, 521], "termin": [20, 26, 27, 28, 39, 139, 156, 169], "newlin": 20, "massag": 20, "form": [20, 34, 47, 48, 49, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 125, 128, 129, 216, 454, 462], "rep": 20, "split": [20, 487, 496, 497, 498], "diff": [20, 520], "103": [20, 21, 221, 337, 338, 346, 496, 502, 518], "plot_dicom_differ": [20, 21, 518], "show_charset_nam": [21, 22, 518], "veri": [22, 29, 496, 499, 520, 524, 527], "simpl": [22, 38, 40, 46, 496, 497], "app": 22, "personnam": [22, 29, 56, 125, 475, 496, 497, 508, 511, 512, 514, 517], "default_encod": [22, 462], "iso8859": [22, 128, 153, 156, 188, 476], "person_nam": 22, "2008": [22, 462], "ps3": [22, 462], "p98": 22, "yamada": 22, "tarou": 22, "033": 22, "3ed": 22, "bb": 22, "iso2022_jp": 22, "j": 22, "105": [22, 49, 221, 342, 343, 346], "wang": 22, "xiaodong": 22, "xcd": 22, "xf5": 22, "x5e": 22, "xd0": 22, "xa1": 22, "xb6": 22, "xab": 22, "gb18030": 22, "104": [22, 221, 271, 272, 273, 274, 275, 340, 341, 346], "xe7": 22, "x8e": 22, "x8b": 22, "xe5": 22, "xb0": 22, "x8f": 22, "xe6": 22, "x9d": 22, "xb1": 22, "utf": 22, "101": [22, 221, 332, 333, 346], "hong": [22, 462], "gildong": [22, 462], "363": 22, "321": 22, "316": 22, "324": 22, "327": 22, "310": 22, "253": 22, "261": 22, "346": [22, 496, 505], "265": 22, "277": [22, 496, 509], "euc_kr": [22, 462], "label": [22, 26, 28, 31, 46, 146], "pack": [22, 34, 47, 213, 496, 506, 507, 512, 515], "easiest": [23, 527], "probabl": [23, 50, 524], "zenodo": 23, "doi": 23, "enter": 23, "citat": 23, "box": [23, 36], "along": [23, 165], "et": 23, "al": 23, "http": [23, 36, 46, 520, 521, 523, 526], "github": [23, 496, 505, 519, 520, 521, 526], "onlin": 23, "yyyi": 23, "dd": 23, "recommend": [23, 25, 26, 38, 39, 41, 90, 128, 135, 136, 146, 165, 213, 522, 524, 526, 527], "deal": [23, 39, 47, 212, 496, 498, 507, 522], "jpeg": [23, 34, 40, 41, 42, 48, 77, 135, 136, 138, 207, 208, 209, 210, 211, 212, 213, 315, 320, 323, 429, 496, 507, 509, 511, 512, 514, 526, 527], "see": [23, 24, 26, 27, 28, 31, 33, 38, 39, 40, 41, 48, 50, 52, 125, 128, 131, 145, 146, 153, 156, 159, 163, 171, 172, 173, 176, 189, 193, 461, 462, 496, 499, 509, 510, 511, 514, 520, 521, 522, 524, 526, 527, 528], "releas": [23, 43, 493, 505, 509, 512], "march": 23, "2018": [23, 521], "june": 23, "octob": 23, "juli": 23, "2019": 23, "januari": 23, "2020": 23, "mai": [23, 24, 26, 27, 30, 31, 34, 39, 42, 43, 46, 47, 48, 50, 75, 93, 96, 128, 135, 136, 137, 138, 139, 140, 141, 146, 152, 165, 176, 189, 212, 462, 478, 480, 496, 509, 520, 521, 522, 524, 526, 527, 529], "novemb": 23, "august": 23, "2021": [23, 496, 516], "2022": 23, "2023": [23, 493], "jan": [23, 81, 522], "2024": 23, "recreat": [24, 26, 496, 504], "within": [24, 26, 27, 28, 31, 77, 86, 128, 155, 156, 164, 165, 176, 218, 476, 496, 512, 524, 526, 529], "detail": [24, 26, 34, 38, 39, 40, 48, 50, 91, 125, 128, 156, 218, 461, 493, 496, 514, 517, 520, 521], "review": [24, 26, 519, 520, 521], "than": [24, 25, 26, 27, 28, 29, 33, 34, 36, 41, 42, 47, 50, 52, 125, 128, 137, 138, 139, 141, 152, 155, 159, 165, 168, 177, 191, 198, 213, 454, 496, 497, 498, 499, 504, 505, 506, 509, 511, 514, 517, 522, 523], "export": [24, 26, 39, 496, 514], "includ": [24, 25, 26, 39, 47, 50, 125, 128, 135, 163, 165, 176, 199, 213, 218, 493, 496, 498, 500, 502, 504, 505, 520, 521, 522, 524, 527, 529], "health": [24, 26, 50], "sensit": [24, 26, 49, 50, 128, 488, 529], "git": [24, 26, 27, 520, 521, 526], "util": [24, 26, 48, 50, 59, 60, 61, 64, 67, 493, 496, 497, 504, 505, 517], "main": [24, 25, 26, 37, 38, 45, 50, 115, 496, 499, 520, 521, 522, 526], "instancecreationd": [24, 26], "20030903": [24, 26, 27, 38], "instancecreationtim": [24, 26], "150031": [24, 26, 27, 38], "481": [24, 26, 233, 234, 277, 281, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 406, 407, 425, 426], "sopinstanceuid": [24, 26, 33, 164], "777": [24, 26, 27, 38], "7777": [24, 26, 27, 38], "20030903150023": [24, 26, 27, 38], "20030716": [24, 26, 27, 28, 38], "153557": [24, 26, 28, 38], "prefix": [24, 26, 27, 28, 36, 148, 155, 160, 167, 176, 189, 380, 454, 462, 496, 508, 517, 520, 521, 522, 528], "rather": [24, 26, 27, 28, 47, 50, 125, 128, 165, 198, 496, 497, 498, 505, 509, 511, 514, 517, 522], "In": [24, 25, 26, 27, 31, 36, 38, 40, 41, 43, 48, 50, 73, 165, 496, 504, 510, 512, 516, 517, 520, 521, 522, 524, 527], "wa": [24, 25, 26, 34, 36, 125, 128, 129, 165, 170, 174, 175, 470, 472, 496, 499, 506, 509, 514, 517, 520, 521, 524, 527], "direct": [24, 26, 38, 213, 521, 523, 524], "specifi": [24, 25, 26, 27, 28, 38, 106, 108, 125, 128, 146, 155, 156, 176, 188, 462, 488, 496, 509, 514, 522, 524, 526], "exclude_s": [24, 26], "filespec": [24, 25, 26, 27, 28], "outfil": [24, 26, 522], "argument": [24, 25, 26, 27, 28, 36, 38, 41, 89, 128, 130, 174, 175, 176, 197, 496, 498, 499, 507, 508, 509, 510, 511, 512, 517, 523, 524, 527], "filenam": [24, 26, 27, 28, 101, 102, 103, 104, 128, 129, 152, 157, 158, 165, 167, 176, 496, 511, 520, 524], "If": [24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 45, 48, 49, 50, 52, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 91, 94, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 128, 130, 131, 132, 135, 138, 139, 141, 146, 151, 152, 153, 155, 156, 157, 160, 164, 165, 166, 167, 173, 174, 175, 176, 188, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 429, 454, 457, 458, 462, 465, 469, 470, 471, 472, 477, 481, 484, 488, 496, 502, 514, 517, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529], "your_fil": [24, 26, 27, 28], "yourplan": [24, 26, 27, 28], "stdout": [24, 26], "messag": [24, 26, 27, 28, 91, 218, 496, 499, 508, 516, 517, 520, 522, 524], "exclud": [24, 26, 27, 28, 50, 128, 199, 213], "binari": [24, 26, 125, 128, 213, 496, 500, 508, 509], "larger": [24, 26, 155, 526, 527], "save_filenam": [24, 26], "otherwis": [24, 26, 31, 34, 38, 85, 94, 112, 113, 117, 118, 122, 123, 124, 125, 128, 129, 135, 146, 153, 165, 167, 168, 171, 172, 176, 196, 203, 204, 205, 213, 429, 462, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 480, 481, 483, 484], "_from_codifi": [24, 26], "dummi": [24, 26], "error": [24, 26, 50, 52, 73, 83, 84, 93, 125, 128, 130, 465, 493, 496, 499, 500, 503, 505, 506, 507, 508, 509, 511, 512, 516, 517, 520, 522], "savenam": [24, 26], "dicomfil": [24, 26, 67], "pythoncod": [24, 26], "By": [24, 26, 48, 163, 165, 461, 496, 500, 522], "translat": [24, 26, 38, 496, 505], "whole": [24, 26, 153, 199, 213, 527], "fractiongroupsequ": [24, 26, 27, 28], "non": [24, 26, 29, 38, 39, 105, 106, 107, 108, 123, 125, 126, 128, 132, 138, 163, 165, 176, 189, 212, 213, 221, 461, 465, 467, 470, 472, 478, 480, 496, 500, 501, 505, 506, 507, 508, 509, 512, 516, 522], "fractiongroupnumb": [24, 26], "numberoffractionsplan": [24, 26], "30": [24, 26, 27, 28, 49, 50, 370, 493, 521], "numberofbeam": [24, 26], "numberofbrachyapplicationsetup": [24, 26], "referenc": [24, 26, 27, 28, 36, 38, 158, 164, 165, 524], "refd_beam_sequ": [24, 26], "referencedbeamsequ": [24, 26], "refd_beam1": [24, 26], "beamdosespecificationpoint": [24, 26], "239": [24, 26, 27, 28, 38], "531250000000": [24, 26, 27, 28], "751": [24, 26, 27, 28], "87000000000": [24, 26, 27, 28], "accept": [24, 26, 29, 39, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 125, 128, 130, 141, 496, 511, 512, 514, 516, 520], "issu": [24, 26, 28, 40, 50, 52, 73, 74, 76, 84, 213, 496, 499, 500, 501, 502, 503, 508, 517, 519, 520], "toward": [24, 26], "loop": [24, 26, 50], "develop": [25, 26, 27, 39, 496, 505], "subcommand": [25, 26, 27, 496, 514], "command": [25, 27, 35, 40, 50, 128, 176, 496, 504, 514, 516, 517, 520, 521, 526], "packag": [25, 26, 27, 40, 42, 44, 45, 46, 199, 207, 208, 209, 210, 211, 212, 488, 496, 497, 500, 505, 512, 514, 524, 526], "setup": [25, 26, 27, 28, 40, 496, 503, 504, 516], "command1": [25, 26], "command2": [25, 26], "setuptool": [25, 26, 496, 497, 504, 514], "yourpackag": [25, 26], "variou": [25, 26, 43, 496, 497], "entry_point": [25, 26], "pydicom_subcommand": [25, 26], "command1modul": [25, 26], "add_subpars": [25, 26], "command2modul": [25, 26], "liter": [25, 26], "must": [25, 26, 31, 33, 34, 38, 39, 41, 47, 48, 82, 85, 128, 131, 135, 136, 141, 155, 163, 165, 168, 170, 172, 176, 198, 199, 200, 204, 205, 213, 429, 466, 484, 496, 514, 522, 523, 524, 527, 529], "wish": [25, 26, 39, 213], "usual": [25, 26, 27, 28, 33, 38, 43, 48, 106, 129, 148, 153, 496, 499, 520, 522, 526, 527], "convent": [25, 26, 38, 462], "singl": [25, 26, 29, 31, 33, 36, 75, 105, 107, 125, 128, 135, 137, 139, 141, 144, 146, 162, 163, 165, 194, 195, 198, 199, 211, 213, 472, 481, 496, 497, 507, 515, 520, 523, 524], "subpars": [25, 26], "do_command": [25, 26], "filespec_help": [25, 26], "filespec_pars": [25, 26], "sub": [25, 26], "parser": [25, 26], "add_pars": [25, 26], "subcommandnam": [25, 26], "add_argu": [25, 26], "set_default": [25, 26], "func": [25, 26, 521], "And": [25, 26, 27, 28, 496, 512, 520, 521, 522, 529], "arg": [25, 26, 128, 130, 148, 150, 152, 216, 455, 459, 462, 463, 496, 500], "element_v": [25, 26], "yourarg": [25, 26], "need": [25, 26, 27, 33, 34, 36, 38, 39, 42, 43, 45, 49, 50, 74, 76, 90, 94, 128, 153, 159, 482, 485, 496, 499, 514, 517, 520, 521, 522, 523, 524, 526, 527, 529], "argpars": [25, 26], "snippet": [25, 26, 43], "element_valu": [25, 26], "pair": [25, 26, 130, 165], "codifi": [25, 27, 44, 496, 504, 506, 514, 516, 517], "filetyp": [25, 26], "yourself": [25, 26, 47, 48], "shown": [25, 26, 28, 38, 43, 50, 52, 213, 496, 497, 498, 511, 522, 524], "relat": [25, 26, 27, 34, 39, 47, 49, 55, 128, 131, 176, 199, 209, 211, 212, 488, 496, 497, 520, 524, 529], "think": [25, 26], "contribut": [25, 26, 496, 499, 502, 503, 525], "case": [25, 26, 38, 39, 40, 41, 43, 50, 52, 73, 75, 81, 128, 156, 462, 496, 508, 512, 517, 522, 523, 527, 529], "under": [25, 26, 38, 135, 136, 496, 497, 499, 505, 520, 521, 526], "pull": [25, 26, 28, 519, 526], "request": [25, 26, 28, 38, 496, 512, 514, 519], "v2": [26, 27, 33, 496, 512, 526, 529], "offer": [26, 27, 41, 48, 128, 527], "explor": [26, 27, 43], "156": [26, 27, 38], "rt": [26, 27, 28, 38, 66, 163, 165, 524], "plan": [26, 27, 28, 38, 40, 66, 163], "999": [26, 27, 38, 496, 509], "99": [26, 27, 38, 42, 209, 221, 258, 432], "9999": [26, 27, 38, 521], "888": [26, 27, 38], "88": [26, 27, 38, 219, 226, 239, 240, 244, 245, 282, 286, 289, 305, 327, 350, 371, 372, 374, 376, 402, 415, 452, 496, 500], "replic": [26, 27], "exactli": [26, 27, 47, 49, 522], "notat": [26, 27, 28, 465, 522], "0071": [26, 27, 28], "fraction": [26, 27, 28], "0078": [26, 27, 28], "00a0": [26, 27, 28], "brachi": [26, 27, 28], "300c": [26, 27, 28], "0082": [26, 27, 28], "dose": [26, 27, 28, 66, 163, 165, 496, 502, 524], "0275401": [26, 27, 28], "meterset": [26, 27, 28], "0036697": [26, 27, 28], "0006": [26, 27, 28, 34, 128, 209, 211, 212, 213], "simpli": [26, 27, 38, 47], "particular": [26, 27, 38, 41, 47, 48, 86, 158, 496, 499, 509, 522, 528], "q": [26, 27, 28, 520], "quiet": [26, 27, 28], "automat": [26, 27, 36, 38, 41, 43, 47, 48, 50, 94, 125, 128, 165, 174, 175, 176, 457, 458, 496, 505, 509, 511, 514, 520, 521, 522], "pip": [26, 27, 520, 521, 527, 529], "environ": [26, 27, 39, 496, 497, 512, 526], "variabl": [26, 27, 36, 37, 38, 39, 66, 496, 508, 512, 516], "clone": [26, 27, 520, 521, 526], "repositori": [26, 27, 46, 103, 496, 517, 526], "repeat": [26, 27, 47, 115, 118, 122, 123, 165, 496, 507, 516, 522], "reinstal": [26, 27], "similar": [26, 27, 36, 129, 193, 496, 498, 502, 523, 528], "program": [26, 27, 38, 40, 46, 496, 497, 502], "pipe": [26, 27], "grep": [26, 27], "either": [26, 27, 34, 38, 39, 43, 45, 94, 125, 128, 160, 165, 199, 213, 216, 462, 469, 477, 496, 512, 521, 522, 524, 526, 527], "iso": [26, 27, 206, 213, 315, 320, 323, 454, 496, 509], "741": [26, 27], "organ_at_risk": [26, 27], "deliveri": [26, 27], "maximum": [26, 27, 34, 50, 125, 135, 136, 146, 167, 454, 496, 516, 517], "002c": [26, 27], "organ": [26, 27, 462], "risk": [26, 27], "ptv": [26, 27], "target": [26, 27, 36], "0026": [26, 27], "prescript": [26, 27], "826203": [26, 27], "00b0": [26, 27], "00b6": [26, 27], "0111": [26, 27], "control": [26, 27, 45, 81, 82, 98, 99, 496, 502, 524], "0115": [26, 27], "rate": [26, 27], "650": [26, 27], "011a": [26, 27], "010c": [26, 27], "cumul": [26, 27], "0051": [26, 27], "9990268": [26, 27], "0180": [26, 27], "regular": [26, 27, 38, 496, 516], "express": [26, 27], "abil": [26, 27, 48, 496, 504, 505, 512, 517], "alreadi": [26, 28, 33, 35, 36, 41, 48, 73, 106, 128, 132, 139, 166, 170, 189, 198, 213, 456, 496, 504, 522, 524, 527, 529], "nest": [26, 28, 38, 128, 496, 503, 516], "minim": [26, 28, 176, 189], "below": [26, 28, 29, 33, 38, 40, 41, 43, 166, 176, 199, 209, 211, 212, 213, 488, 496, 499, 524, 527, 528], "studyid": [26, 28], "bitsstor": [26, 28, 209, 211, 213], "pre": [26, 28, 38, 40, 496, 517, 520], "id00001": [26, 28], "study1": [26, 28], "plan1": [26, 28], "02754010000000": [26, 28], "003669700000": [26, 28], "treatment": [26, 28], "static": [26, 28, 130, 146], "photon": [26, 28], "energi": [26, 28], "00000000000000": [26, 28], "coll": [26, 28], "couch": [26, 28], "wedg": [26, 28], "boli": [26, 28], "alwai": [26, 28, 42, 43, 48, 117, 125, 131, 155, 209, 213, 496, 508, 512, 514, 517], "those": [26, 28, 31, 35, 39, 43, 496, 499, 502, 512, 522, 524], "extra": [26, 28, 38, 496, 517], "submit": [26, 28, 40, 496, 502, 519, 520, 521], "interfac": [27, 35, 496, 514, 526], "introduct": [28, 31, 37, 44, 520, 521, 524, 525, 529], "anyth": [29, 43, 47, 48, 213], "ascii": [29, 168, 194, 496, 508], "decim": [29, 78, 98, 456, 457, 458, 460, 461, 465, 466, 496, 502, 503, 514], "sign": [29, 31, 34, 48, 77, 146, 496, 512, 520, 521, 529], "unsign": [29, 31, 34, 48, 141, 146, 496, 512, 529], "integ": [29, 31, 34, 48, 141, 213, 454, 460, 461, 496, 500, 502, 512, 529], "depth": [29, 37, 46, 48, 166, 496, 509, 526], "even": [29, 43, 47, 135, 137, 139, 155, 160, 213, 496, 512, 522, 524, 527], "encod": [29, 34, 35, 37, 41, 42, 48, 49, 52, 73, 74, 75, 76, 125, 126, 128, 129, 135, 136, 137, 138, 139, 142, 143, 149, 151, 152, 153, 156, 161, 162, 165, 176, 183, 187, 188, 189, 191, 192, 193, 195, 212, 429, 462, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 493, 496, 502, 505, 506, 507, 508, 509, 514, 515, 516, 517, 522, 523, 527], "correctli": [29, 43, 50, 94, 165, 207, 208, 496, 499, 502, 505, 506, 508, 509, 512, 514, 515, 516, 517, 520], "empti": [29, 125, 128, 129, 132, 138, 140, 141, 149, 213, 214, 457, 458, 462, 481, 496, 497, 505, 508, 509, 510, 511, 512, 514, 517, 522, 524, 529], "multivalu": [29, 56, 79, 194, 195, 468, 469, 470, 471, 472, 475, 483, 486, 487, 496, 502], "accord": [29, 50, 155, 187, 522, 524], "od": [29, 176, 496, 505, 506, 514], "OF": [29, 176, 496, 511], "ol": [29, 176, 496, 505, 506, 514], "st": [29, 40], "ur": [29, 480], "ut": 29, "never": [29, 78, 128, 520], "greater": [29, 34, 128, 137, 139, 213, 454, 496, 505, 523], "hint": 29, "union": 29, "mutablesequ": [29, 73, 126, 128, 153, 156, 161, 162, 467, 468, 469, 470, 471, 472, 475, 477, 478, 481, 483, 485, 486, 487], "AT": [29, 468, 496, 509, 514, 516], "attribut": [29, 43, 66, 81, 125, 127, 128, 129, 130, 145, 146, 149, 151, 152, 164, 165, 166, 176, 215, 429, 455, 457, 458, 459, 460, 461, 462, 463, 464, 496, 497, 507, 512, 515, 516, 517, 522, 524], "basetag": [29, 38, 56, 82, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 125, 127, 128, 129, 130, 131, 153, 155, 156, 159, 165, 169, 171, 172, 173, 216, 217, 218, 468, 484, 496, 499, 514], "int": [29, 31, 38, 52, 74, 82, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 131, 135, 137, 138, 140, 141, 143, 146, 152, 153, 154, 155, 156, 159, 161, 162, 165, 166, 167, 170, 171, 172, 173, 188, 197, 199, 203, 204, 205, 213, 215, 216, 217, 429, 456, 457, 458, 460, 461, 462, 476, 481, 484, 488, 522], "dsfloat": [29, 56, 456, 470, 496, 514], "dsdecim": [29, 56, 85, 456, 470, 496, 514], "doubl": [29, 36, 48, 128, 209, 213, 496, 509], "ov": [29, 176, 496, 509, 514], "word": [29, 36, 50, 106, 182, 462, 522], "short": [29, 484, 520, 522], "sv": [29, 488, 496, 509], "uc": [29, 485, 496, 505], "unlimit": 29, "identifi": [29, 39, 43, 50, 185], "uri": [29, 128, 496, 512, 523], "url": [29, 36], "uv": [29, 488, 496, 509], "config": [29, 39, 461, 483, 493, 496, 502, 507, 508, 509, 511, 512, 514, 517], "datetime_convers": [29, 469, 471, 477, 493], "use_ds_decim": [29, 79, 470, 493, 496, 511], "rlelosslessencod": [30, 31, 33, 493, 496, 514, 517], "byteord": [30, 31, 529], "big": [30, 31, 42, 128, 129, 152, 176, 209, 212, 221, 496, 516, 517, 529], "guid": [31, 36, 40, 128, 493, 496, 508, 514, 521, 522, 527], "cover": [31, 522, 524, 527, 529], "tutori": [31, 36, 40, 496, 509, 519, 520, 521, 522, 524, 527, 529], "intend": [31, 33, 34, 128, 146, 520], "provid": [31, 37, 38, 43, 48, 94, 125, 128, 146, 199, 209, 211, 212, 488, 496, 503, 523, 526, 527, 528], "mechan": [31, 146], "raw": [31, 38, 47, 48, 49, 126, 127, 128, 144, 146, 153, 157, 163, 488, 496, 502, 508, 511, 529], "unencod": [31, 146], "least": [31, 34, 484, 524], "convers": [31, 33, 34, 90, 125, 199, 209, 211, 212, 488, 496, 498, 508, 509, 511, 523, 529], "signatur": [31, 151, 152, 496, 512], "foo": 31, "kwarg": [31, 128, 130, 146, 150, 152, 165, 176, 455, 459, 462, 463, 527], "multi": [31, 42, 48, 56, 79, 125, 128, 135, 138, 139, 140, 141, 146, 165, 198, 199, 213, 480, 493, 496, 505, 507, 509, 511, 522, 529], "support": [31, 39, 44, 67, 68, 77, 94, 128, 146, 151, 152, 165, 199, 200, 207, 208, 209, 210, 211, 212, 213, 488, 496, 497, 505, 506, 507, 508, 509, 511, 512, 514, 515, 516, 517, 524, 525, 526, 527, 528], "minimum": [31, 33, 189], "transfer_syntax_uid": [31, 128], "samples_per_pixel": [31, 146], "grayscal": [31, 33, 34, 48], "rgb": [31, 33, 34, 41, 48, 94, 200, 206, 207, 208, 209, 210, 211, 212, 213, 496, 506, 509, 514, 527], "number_of_fram": [31, 146], "bits_alloc": [31, 146, 213], "bits_stor": [31, 146], "4095": [31, 34, 146], "65535": [31, 146, 524], "pixel_represent": [31, 146], "complement": [31, 34, 37, 146], "photometric_interpret": [31, 146], "color": [31, 33, 34, 41, 44, 146, 200, 206, 213, 496, 509, 511, 527], "ybr_full": [31, 33, 34, 48, 146, 206, 209, 211, 213, 496, 509, 515], "At": [31, 520, 528], "is_avail": [31, 94, 146, 199, 207, 208, 209, 210, 211, 212, 488, 496, 507], "bool": [31, 52, 78, 79, 91, 93, 98, 103, 112, 113, 122, 123, 125, 127, 128, 129, 132, 135, 141, 146, 152, 153, 154, 155, 156, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 189, 196, 199, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 429, 456, 457, 458, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 488], "met": [31, 159, 199, 207, 208, 209, 210, 211, 212, 488, 496, 507], "encoder_depend": [31, 146], "tupl": [31, 38, 41, 43, 82, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 125, 128, 131, 136, 138, 141, 146, 152, 155, 198, 214, 216, 217, 462, 496, 499, 508, 527], "rlelossless": [31, 33, 41, 128, 520, 527], "jpeg2000": [31, 42, 138, 496, 507, 509], "pillow": [31, 42, 46, 128, 210, 496, 505, 507, 509, 511, 514, 517, 520], "imagecodec": 31, "gdcm": [31, 33, 41, 42, 128, 145, 207, 496, 499, 505, 508, 512, 514, 515, 517, 527], "add_plugin": [31, 146], "plugin_label": 31, "my_encoder_func": 31, "my_packag": 31, "my_encod": 31, "rle": [32, 34, 41, 42, 48, 128, 135, 136, 138, 145, 147, 211, 212, 213, 382, 496, 507, 508, 514, 515, 517, 526, 527], "lossless": [32, 34, 41, 42, 48, 128, 135, 136, 138, 145, 147, 211, 212, 213, 496, 511, 514, 515, 527], "plugin": [32, 41, 42, 128, 145, 146, 211, 496, 514, 515, 519, 526, 527], "underli": 33, "algorithm": [33, 454], "packbit": 33, "scheme": [33, 153, 475, 476, 482, 485, 486, 528, 529], "explan": 33, "relationship": [33, 165, 521], "glossari": [33, 35], "palett": [33, 34, 44, 102, 163, 165, 200, 213, 496, 509, 511], "intens": [33, 34], "white": [33, 496, 504], "black": [33, 496, 517], "index": [33, 38, 48, 49, 128, 146, 165, 166, 167, 203, 204, 205, 213, 488, 496, 512, 521, 529], "red": [33, 34, 200, 213, 496, 511, 520, 521], "green": [33, 34, 496, 511], "blue": [33, 34, 496, 511], "lookup": [33, 48, 109, 110, 111, 113, 114, 124, 200, 201, 202, 203, 204, 213, 496, 512, 522], "noth": [33, 524], "equal": [33, 34, 137, 139, 496, 506, 507, 508], "ycbcr": [33, 34, 207, 208, 209, 210, 211, 212], "keep": [33, 165, 524, 526], "mind": 33, "lossi": [33, 42, 138, 213], "inclus": [33, 34], "downscal": 33, "accordingli": [33, 128], "both": [33, 39, 40, 73, 78, 79, 94, 141, 165, 204, 213, 496, 498, 505, 508, 511, 523], "made": [33, 128, 137, 138, 165, 176, 496, 498, 499, 511, 520, 521, 524], "might": [33, 43, 146, 529], "ask": [33, 40, 519, 520, 521], "why": [33, 527], "vice": [33, 176, 200, 213], "versa": [33, 176, 200, 213], "answer": [33, 519, 522, 527], "higher": [33, 35, 128, 496, 499, 523], "befor": [33, 42, 43, 88, 125, 128, 155, 166, 173, 204, 205, 213, 496, 499, 502, 503, 505, 508, 520, 521, 522, 524, 527, 529], "decis": 33, "known": [33, 34, 38, 39, 43, 48, 52, 81, 93, 125, 126, 128, 200, 213, 217, 496, 506, 509, 511, 512, 514, 522, 528], "20x": [33, 41, 496, 514], "slower": [33, 41, 213], "pylibjpeg": [33, 41, 42, 128, 145, 146, 211, 496, 512, 514, 517, 527], "place": [33, 34, 41, 42, 128, 496, 505, 522, 524], "samplesperpixel": [33, 209, 211, 212, 213, 496, 502, 507, 527], "bitsalloc": [33, 42, 125, 209, 211, 212, 213, 496, 507], "pixelrepresent": [33, 209, 211, 212, 213, 496, 508], "rgb_color": [33, 66], "921600": 33, "424152": 33, "pixel_data_handl": [33, 47, 48, 128, 489, 493, 496, 507, 514, 517], "convert_color_spac": [33, 48, 213, 493, 496, 514], "ybr": [33, 48, 496, 514], "187460": 33, "compon": [34, 42, 77, 138, 166, 168, 211, 213, 462, 496, 497, 499, 514], "previous": [34, 157, 496, 507, 511, 514], "constrain": 34, "iod": [34, 176, 213, 524, 529], "remain": [34, 139, 165, 496, 502, 521], "hand": [34, 50, 496, 512], "ybr_rct": [34, 41, 211, 527], "whether": [34, 38, 79, 99, 125, 128, 141, 466, 496, 499, 502, 507, 509, 514, 519, 520, 526], "transform": [34, 48], "prior": [34, 41, 139, 176, 527], "taken": [34, 128, 213], "account": 34, "doesn": [34, 47, 81, 128, 199, 209, 212, 496, 511, 520, 527], "make": [34, 38, 39, 40, 43, 50, 128, 129, 454, 465, 496, 499, 508, 514, 517, 522, 524, 526], "determin": [34, 38, 47, 125, 128, 165, 201, 202, 213, 524, 529], "invers": 34, "ybr_full_422": [34, 48, 206, 209, 211, 213, 496, 509, 515], "ybr_partial_420": 34, "ybr_ict": [34, 211], "restrict": 34, "further": [34, 524, 528], "constraint": [34, 457, 458, 465], "planar": [34, 48, 128, 213, 496, 507], "r1": 34, "g1": 34, "b1": 34, "r2": 34, "g2": 34, "b2": 34, "rn": 34, "gn": 34, "bn": 34, "contigu": 34, "typic": [34, 93, 133, 527], "32": [34, 128, 131, 136, 141, 209, 212, 213, 488, 496, 506, 514, 517, 529], "being": [34, 100, 109, 110, 111, 113, 114, 117, 119, 120, 121, 124, 128, 139, 146, 152, 212, 496, 497, 507, 514, 515, 517, 524, 526, 527], "mean": [34, 42, 212, 454, 520, 522, 524, 527, 528], "chapter": [34, 454], "mani": [34, 39, 46, 48, 135, 136, 496, 498, 502, 503, 519], "most": [34, 38, 39, 42, 46, 50, 82, 496, 499, 502, 503, 522, 524, 527, 528], "signific": [34, 39, 467, 478, 480, 496, 499], "past": [34, 139, 160, 189], "describ": [34, 38, 42, 50, 105, 107, 125, 128, 462, 523, 524], "familiar": [35, 36, 522, 524, 527, 529], "document": [35, 39, 128, 146, 163, 500, 505, 506, 517, 519, 525], "reader": 36, "unfamiliar": 36, "step": [36, 496, 503, 514, 524, 528, 529], "achiev": [36, 137], "advanc": [36, 146], "understand": [36, 38, 520, 529], "aim": [36, 496, 512], "explain": 36, "subject": [36, 523, 528], "fairli": 36, "technic": [36, 37], "api": [36, 146, 496, 506, 520, 523, 527, 528], "learn": [36, 40, 520, 524], "remind": 36, "about": [36, 38, 39, 40, 46, 48, 50, 91, 213, 522, 524, 527, 529], "italic": 36, "lowercas": 36, "uppercas": [36, 125], "capit": [36, 496, 502], "american": 36, "english": 36, "spell": [36, 73, 496, 507], "hex": [36, 47, 125, 128, 131, 496, 499], "comma": 36, "ital": 36, "seq": [36, 522], "try": [36, 94, 174, 175, 496, 500, 508, 522, 524], "gender": 36, "neutral": 36, "pronoun": 36, "hypothet": 36, "tick": 36, "markup": [36, 521], "0xb4": 36, "built": [36, 526], "pass": [36, 38, 41, 47, 48, 89, 101, 102, 104, 130, 135, 136, 198, 496, 499, 520, 521, 524, 527], "fragments_per_fram": [36, 135], "haven": [36, 520, 522], "docstr": [36, 520], "initi": [36, 40, 129, 130, 131, 171, 172, 198, 213, 214, 462, 520], "proper": [36, 496, 499], "noun": 36, "wrap": [36, 38, 152, 176], "unless": [36, 159, 166, 496, 500, 511, 524], "good": [36, 50, 520, 521], "reason": [36, 521], "link": [36, 521], "better": [36, 496, 500, 502, 506], "attr": 36, "ndarrai": [36, 38, 42, 47, 48, 49, 77, 79, 94, 100, 128, 146, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 470, 472, 488, 496, 505, 509, 512, 527, 529], "dtype": [36, 38, 47, 48, 49, 128, 146, 211, 213, 527], "chtml": 36, "part05": [36, 521], "sect_6": 36, "html": [36, 521], "nema": 36, "org": [36, 46, 523], "four": [36, 94, 165, 173], "five": [36, 462], "warn": [36, 39, 50, 52, 73, 74, 76, 81, 82, 213, 493, 496, 498, 502, 506, 507, 508, 509, 511, 514, 515, 517, 520, 521], "sparingli": 36, "featur": [36, 39, 496, 504, 519, 520], "versionad": 36, "versionchang": 36, "handler": [36, 41, 42, 48, 77, 91, 94, 128, 146, 199, 207, 208, 209, 210, 211, 212, 213, 488, 493, 496, 505, 507, 509, 510, 511, 512, 514, 515, 517, 520, 523, 527], "instal": [37, 39, 42, 46, 94, 211, 496, 497, 504, 514, 521, 522, 525, 527, 529], "intermedi": [37, 38], "core": [37, 44], "mostli": [38, 127], "behav": [38, 39, 108, 198, 496, 506, 508, 524], "via": [38, 41, 52, 125, 128, 211, 496, 505, 507, 512, 514, 515, 517, 523, 524, 527], "entir": [38, 128, 155, 158, 207, 211, 520, 522, 527], "collaps": [38, 47], "dcm_qt_tree": [38, 496, 503, 504], "0x10": [38, 125, 128, 216], "squar": [38, 43, 522], "bracket": [38, 43, 522], "around": [38, 496, 517, 520], "conveni": [38, 43, 48, 125, 496, 512, 517, 523], "cannot": [38, 42, 82, 128, 165, 176, 198, 461, 465, 496, 514, 520, 524], "retriev": [38, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 124, 125, 128, 496, 509, 522, 523], "12345": [38, 128], "member": 38, "numer": [38, 165, 167, 481, 496, 500, 509, 514, 516], "begin": [38, 97, 135, 160], "Or": [38, 526], "beam1": 38, "wai": [38, 39, 40, 45, 47, 48, 50, 128, 496, 502, 517, 519, 522, 523, 524, 526, 528], "thing": [38, 47, 521, 522], "much": [38, 465, 496, 499, 502, 503, 511], "harder": 38, "realli": [38, 496, 499, 508], "0x300a": 38, "0xb0": 38, "0xc2": 38, "rememb": [38, 43, 47], "exact": [38, 457, 458, 460, 461], "handi": 38, "dir": [38, 40, 128, 496, 502, 515, 521, 528], "dure": [38, 43, 106, 496, 515, 517, 520, 521], "session": [38, 39, 40, 43, 128, 521], "prompt": 38, "pat": 38, "patientsetupsequ": [38, 40], "patientsex": [38, 128], "anywher": [38, 522], "insensit": [38, 128], "_dicom_dict": 38, "necessari": [38, 39, 46, 137, 139, 462, 524, 529], "add_dict_entri": [38, 43, 108, 496, 505, 508], "similarli": [38, 456, 522], "hood": 38, "offici": [38, 109, 110, 111, 112, 113, 114, 115, 122, 123, 124, 125, 429, 496, 502, 503, 522, 529], "reload": 38, "0x0010": [38, 128, 216, 522], "softwarevers": 38, "0x0018": 38, "0x1020": 38, "pixel_byt": 38, "175": 38, "166": 38, "203": [38, 221, 298], "207": 38, "216": 38, "186": 38, "183": 38, "157": 38, "181": 38, "184": 38, "171": 38, "152": 38, "164": 38, "235": 38, "906": 38, "910": 38, "923": 38, "922": 38, "929": 38, "927": 38, "914": 38, "954": 38, "938": 38, "942": [38, 496, 509], "925": 38, "905": [38, 48], "959": 38, "916": [38, 496, 499], "911": 38, "904": 38, "909": 38, "int16": [38, 48, 49, 529], "extens": [38, 75, 129, 496, 507, 514], "effect": [38, 139, 454], "behavior": [38, 39, 52, 81, 82, 93, 128, 496, 503, 507, 511, 512], "enforc": [38, 44, 198, 496, 502], "expect": [38, 199, 207, 209, 212, 213, 496, 506, 508, 512, 516, 520], "t1": 38, "0x00100010": [38, 125, 128], "equival": [38, 128, 213, 496, 506], "t2": 38, "t3": 38, "t4": 38, "portion": 38, "is_priv": [38, 125, 164, 215, 429, 496, 505], "odd": [38, 128, 131, 199, 213, 215, 496, 506, 515, 517, 522], "prettier": 38, "select": [38, 128, 138], "There": [39, 45, 46, 48, 496, 507, 520, 521, 522, 523, 529], "against": [39, 125, 165, 496, 501, 512], "turn": [39, 91, 156, 496, 512], "enabl": [39, 90, 128], "reading_validation_mod": [39, 52, 73, 74, 76, 92, 126, 128, 496, 515], "writing_validation_mod": [39, 52, 76, 496, 515], "newli": [39, 128, 496, 511], "ignor": [39, 52, 73, 81, 82, 108, 125, 128, 169, 482, 493, 496, 510, 514, 517, 521], "rais": [39, 52, 73, 74, 76, 78, 79, 81, 82, 94, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 119, 120, 121, 126, 128, 130, 131, 132, 139, 141, 146, 148, 152, 155, 157, 160, 165, 173, 174, 176, 189, 198, 199, 207, 208, 209, 210, 211, 212, 213, 218, 454, 465, 470, 472, 484, 493, 496, 500, 501, 506, 508, 509, 512, 514, 515, 517, 522, 524, 527], "As": [39, 42, 43, 522, 528], "suggest": [39, 519, 520, 521], "except": [39, 43, 47, 48, 52, 73, 81, 82, 83, 94, 128, 148, 163, 165, 176, 189, 198, 218, 493, 496, 499, 501, 504, 505, 508, 509, 512, 514, 515, 517, 520, 522, 524, 527], "special": [39, 56, 493, 496, 503], "avoid": [39, 100, 156, 173, 456, 496, 508, 509, 512, 524], "invalid": [39, 52, 73, 74, 82, 86, 87, 132, 213, 454, 496, 508, 512, 514, 516, 517], "legaci": 39, "strictli": [39, 46], "adher": 39, "guarante": [39, 42, 43], "predefin": 39, "That": [39, 43], "local": [39, 66, 103, 496, 515, 520, 521, 522, 526], "balanc": 39, "evolut": 39, "break": [39, 496, 512, 524], "sometim": [39, 43, 496, 507, 517], "improv": [39, 496, 503, 506, 507, 514, 516, 519], "protect": 39, "upcom": [39, 93], "compat": [39, 41, 496, 499, 500, 502, 503, 504, 505, 517, 526], "next": [39, 43, 93, 128, 156, 165, 166, 496, 499, 512, 524, 529], "simplest": [39, 524, 526], "pydicom_futur": [39, 496, 512], "temporarili": 39, "linux": [39, 496, 505, 521, 526], "future_behavior": [39, 493, 496, 512], "again": [39, 40, 50, 520, 524], "anoth": [39, 206, 213, 496, 512, 522, 527], "txt": [39, 522], "virtual": [39, 526], "brief": 40, "overview": [40, 524], "pure": 40, "report": [40, 496, 509, 519, 525], "radiotherapi": [40, 163], "easi": [40, 48], "complex": [40, 48], "natur": 40, "helper": [40, 131], "filedataset": [40, 45, 66, 103, 155, 159, 176, 493, 496, 499, 501, 514, 515, 517, 522, 524], "supin": 40, "prone": 40, "hfp": 40, "rtplan2": 40, "fetch": [40, 41, 48, 527], "0182": 40, "01b2": 40, "techniqu": 40, "patientposit": 40, "thorough": 40, "server": [40, 521], "pynetdicom": 40, "primarili": [40, 496, 500], "design": [40, 50, 528], "let": [40, 41, 496, 509, 520, 521, 522, 524, 527], "wherev": 40, "alter": [40, 50], "intellig": 40, "decompress": [40, 41, 42, 128, 210, 496, 505, 509, 526, 527], "onc": [40, 41, 43, 79, 106, 108, 520, 521, 527, 528], "kind": [40, 43], "discuss": [40, 520, 524], "question": [40, 519], "give": [40, 465, 496, 498, 499, 522, 527], "feedback": [40, 496, 503], "bug": [40, 496, 500, 504, 508, 511, 514, 519, 520, 526], "tracker": [40, 519, 520], "major": [40, 44, 93, 496, 512], "fix": [40, 156, 504, 519, 520, 522], "announc": [40, 94], "ll": [41, 520, 521, 522, 527, 529], "reli": [41, 42, 77], "separ": [41, 97, 125, 128, 135, 136, 462, 496, 499, 500, 527], "encapsul": [41, 48, 128, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 493, 496, 497, 507, 512], "amount": [41, 128, 207, 527, 529], "too": [41, 128, 131, 484, 496, 506, 508, 509, 519], "extend": [41, 42, 128, 135, 136, 214, 496, 512, 527], "relev": [41, 174, 175, 176, 520], "encap": [41, 163, 493, 496, 505, 507, 527], "encapsulate_extend": [41, 135, 496, 512, 517, 527], "jpeg2000lossless": [41, 527], "third_party_compression_func": [41, 527], "appropri": [41, 47, 48, 128, 160, 198, 211, 486, 527], "ct_compressed_bas": [41, 527], "extendedoffsett": [41, 136, 527], "extendedoffsettablelength": [41, 136, 527], "ct_compressed_ext": [41, 527], "nativ": [41, 432, 527], "ct_rle_lossless": [41, 128, 527], "encoding_plugin": [41, 128, 146, 527], "Will": [41, 106], "implicitli": [41, 527], "done": [41, 520, 521, 522, 527], "explicitli": [41, 47, 48, 85, 496, 507, 514, 524, 527], "jpeg2k": [41, 66, 496, 507, 527], "us1_rl": 41, "j2k": [41, 496, 517], "up": [41, 47, 48, 128, 152, 165, 166, 173, 176, 211, 454, 462, 487, 496, 499, 503, 505, 520, 521, 522, 525, 526, 527], "abl": [42, 43, 496, 511, 517, 523, 524, 527, 529], "ideal": 42, "jpeg_l": [42, 128, 208, 496, 505, 517], "libjpeg": [42, 526], "openjpeg": [42, 526], "capac": 42, "mention": [42, 522], "Be": 42, "verifi": [42, 496, 502], "purpos": 42, "far": [42, 125], "deflat": [42, 209, 429, 496, 511], "57": [42, 138, 213, 221, 321, 323, 496, 507, 512, 517], "sv1": [42, 213, 496, 511], "70": [42, 138, 213, 221, 305, 322, 323, 496, 511, 512, 517], "81": [42, 49, 138, 213, 221, 319, 320, 365, 496, 500], "92": [42, 138, 221, 314, 315, 496, 506, 507], "93": [42, 49, 138, 221, 313, 315, 496, 501, 507], "jpegimageplugin": 42, "jpeg2kimageplugin": 42, "5x": [42, 496, 514], "faster": [42, 496, 499, 511, 514], "adapt": [42, 496, 507], "well": [43, 48, 50, 165, 200, 213, 496, 499, 500, 502, 509, 520, 522, 526], "v1": [43, 496, 506, 507, 508, 529], "easier": [43, 129, 496, 517, 521], "outlin": 43, "preced": 43, "reserv": 43, "thu": [43, 496, 497], "necessarili": [43, 47], "enclos": 43, "clear": [43, 125, 128, 165], "0x00091001": 43, "privateblock": [43, 128, 493], "0x0009": [43, 128], "compani": 43, "accomplish": 43, "0x000b": 43, "000b": 43, "add_new_priv": [43, 128, 496, 517], "latest": [43, 526], "encount": [43, 86], "newer": 43, "common": [43, 45, 49, 50, 73, 496, 507, 524, 529], "handl": [43, 44, 48, 50, 73, 94, 125, 128, 172, 190, 489, 496, 497, 500, 502, 504, 505, 506, 507, 508, 509, 511, 512, 514, 515, 516, 517, 522, 523, 526], "0x888800001": 43, "somenewtag": 43, "analog": [43, 128], "0x004100001": 43, "lut": [44, 46, 200, 201, 202, 203, 204, 205, 213, 496, 509, 511, 512, 514], "voi": [44, 203, 204, 205, 213, 496, 509, 512], "overlai": [44, 48, 66, 128, 213, 489, 493, 496, 509, 512, 517, 522], "overlay_arrai": [44, 128, 496, 509], "precondit": 44, "third": [44, 462, 526], "parti": [44, 462, 526], "pil": [44, 496, 499, 507], "wxpython": [44, 496, 499], "best": [44, 66], "practic": [44, 66, 165], "futur": [44, 93, 128, 146, 496, 502, 512, 528], "proof": [44, 93], "fileread": [45, 67, 196, 493, 521, 522], "fine": 45, "read_parti": [45, 67, 155, 196, 522], "preexist": 45, "mainli": [46, 128, 496, 503], "concern": 46, "often": [46, 48, 106, 523], "desir": [46, 198, 206, 213], "sever": [46, 52, 496, 503, 505], "stdlib": 46, "2d": [46, 496, 512], "axesimag": 46, "thank": [46, 496, 499, 502], "roi": 46, "key": 46, "pydicom_tkint": 46, "contrib": [46, 496, 499, 519], "come": 46, "photoimag": 46, "pydicom_pil": 46, "imview": 46, "60xx": [47, 199, 213, 489, 496, 509, 522], "3000": [47, 128, 199, 201, 202, 213, 489, 496, 509, 522], "6000": 47, "6002": 47, "601e": 47, "0x6000": [47, 199, 522], "0x3000": 47, "29282": 47, "tend": [47, 526], "lazi": 47, "unpack": [47, 213, 481, 496, 507, 515], "uint8": [47, 200, 201, 202, 203, 204, 213], "484": 47, "align": 47, "pack_bit": [47, 213, 496, 507, 512], "numpy_handl": [47, 94, 496, 514], "packed_byt": 47, "temp": [47, 48], "reduc": [47, 48, 167, 206, 213, 496, 507, 512, 517, 524, 527], "512x512": [47, 48], "256x256": [47, 48], "bulk": [48, 125, 128, 493, 496, 509, 510, 513, 523], "although": [48, 165, 524], "almost": 48, "parametr": [48, 520], "map": [48, 125, 128, 163, 521], "floatpixeldata": [48, 213, 496, 514], "doublefloatpixeldata": [48, 213, 496, 514], "interchang": [48, 524], "mr_small": [48, 66], "x89": 48, "x03": 48, "xfb": 48, "xcb": 48, "xeb": 48, "xf9": 48, "x02": 48, "x94": 48, "x7f": 48, "immedi": 48, "varieti": 48, "broken": 48, "fragment": [48, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 496, 509, 517], "1227": 48, "302": 48, "304": 48, "328": 48, "628": 48, "770": 48, "907": 48, "298": 48, "331": 48, "355": 48, "498": [48, 368, 369, 454, 496, 506], "566": 48, "706": 48, "280": 48, "285": 48, "334": 48, "431": 48, "1094": 48, "1068": 48, "1083": 48, "339": 48, "377": 48, "413": 48, "1318": 48, "1346": 48, "1336": 48, "378": 48, "374": 48, "422": 48, "1369": 48, "1129": 48, "862": 48, "straightforward": 48, "particularli": [48, 50], "300": 48, "shrunk": 48, "apply_color_lut": [48, 213, 493, 496, 509], "palette_color": [48, 66], "pet": [48, 200, 213], "possibli": [48, 128], "physic": [48, 524], "quantiti": [48, 488, 529], "hounsfield": 48, "unit": [48, 128, 155, 199, 213, 488, 520, 529], "apply_modality_lut": [48, 203, 204, 205, 213, 493, 496, 509, 511], "hu": 48, "apply_voi_lut": [48, 213, 493, 496, 509, 511, 512], "voic": 49, "audio": [49, 529], "lead": [49, 52, 66, 457, 458, 467, 496, 500, 505, 516, 529], "ecg": [49, 66, 529], "5400": [49, 128, 488, 529], "consist": [49, 129, 176, 496, 502, 521, 527, 529], "synchronis": [49, 529], "003a": [49, 128, 488, 529], "001a": 49, "waveformdata": [49, 529], "240000": [49, 529], "multiplex_1": 49, "112": 49, "25": [49, 391, 454], "68": [49, 402, 422, 423], "106": [49, 221, 344, 345, 346], "62": 49, "37": 49, "131": [49, 225], "137": 49, "10000": [49, 529], "multiplex_2": 49, "1200": [49, 496, 512, 529], "multiplex_arrai": [49, 128, 488, 496, 512, 529], "55": [49, 496, 499], "65": [49, 239], "85": 49, "60": [49, 496, 503, 514], "110": [49, 496, 502], "coupl": [50, 524], "truli": 50, "certain": [50, 128, 213, 521, 522], "tool": [50, 496, 517], "look": [50, 174, 175, 520, 521, 522], "approxim": 50, "especi": [50, 520], "tricki": 50, "de": 50, "awar": [50, 524], "xxx": 50, "524288": 50, "bigger": [50, 496, 511], "potenti": 50, "disadvantag": 50, "sai": [50, 520, 522], "wrote": 50, "quit": [50, 496, 499, 520], "switch": [50, 86, 496, 500, 502, 504, 509, 511, 514, 516, 520, 521], "individu": [50, 206, 213, 462, 496, 502, 512, 514], "code_fil": 50, "previou": [50, 166, 167, 496, 502, 505, 511, 512], "certainli": 50, "difficult": [50, 520], "singleton": 52, "infer_sq_for_un_vr": [52, 496, 515], "undefin": [52, 125, 139, 153, 169, 496, 501, 512, 515], "conform": [52, 125, 128, 165, 168, 176, 189, 196, 212, 496, 505, 507, 508, 522, 524, 527], "failur": [52, 496, 511, 520], "longer": [52, 79, 125, 209, 496, 506, 507, 509, 512, 514, 517, 524], "bypass": [52, 146], "dataelem": [56, 75, 128, 157, 175, 191, 192, 486, 493, 496, 508, 511, 522], "dataelement_from_raw": [56, 522], "rawdatael": [56, 88, 126, 128, 129, 130, 153, 157, 187, 486], "tag_in_except": 56, "tupletag": [56, 496, 499], "convert_ae_str": 56, "convert_atvalu": 56, "convert_da_str": 56, "convert_ds_str": 56, "convert_dt_str": 56, "convert_is_str": 56, "convert_numb": [56, 174, 175], "convert_obvalu": 56, "convert_owvalu": 56, "convert_pn": 56, "convert_single_str": 56, "convert_sq": 56, "convert_str": 56, "convert_tag": 56, "convert_text": 56, "convert_tm_str": 56, "convert_ui": 56, "convert_un": 56, "convert_ur_str": 56, "convert_valu": 56, "multi_str": [56, 67], "multiv": [56, 493, 522], "is_valid_d": [56, 496, 514], "format_number_as_d": [56, 496, 514], "isfloat": [56, 496, 516], "rt_plan": 66, "rt_dose": [66, 524], "rtdose": 66, "rt_ss": 66, "rtstruct": 66, "siemen": 66, "withoverlai": 66, "waveform_ecg": 66, "us1_uncr": 66, "obxxxx1a": 66, "us1_j2kr": 66, "data_element_gener": [67, 156], "data_element_offset_to_valu": 67, "read_deferred_data_el": 67, "read_file_meta_info": [67, 129], "read_preambl": [67, 196, 522], "read_sequ": 67, "read_sequence_item": 67, "filewrit": [67, 128, 493, 522], "correct_ambiguous_vr": 67, "correct_ambiguous_vr_el": 67, "write_atvalu": 67, "write_da": 67, "write_dataset": [67, 496, 517], "write_data_el": 67, "write_dt": 67, "write_file_meta_info": [67, 176], "write_numb": 67, "write_number_str": 67, "write_obvalu": 67, "write_owvalu": 67, "write_pn": [67, 496, 506], "write_sequ": 67, "write_sequence_item": 67, "write_str": 67, "write_text": 67, "write_tm": 67, "write_ui": 67, "write_un": 67, "dicombytesio": [67, 151, 496, 517], "dicomio": [67, 139, 141, 144, 149, 151, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 496, 517], "fileutil": [67, 493], "absorb_delimiter_item": 67, "find_byt": [67, 171, 172, 496, 503], "find_delimit": [67, 172], "length_of_undefined_length": 67, "read_undefined_length_valu": 67, "mistak": 73, "stand": 73, "alon": 73, "respect": [73, 90, 496, 506], "lookuperror": [73, 74], "delimit": [74, 138, 139, 140, 169, 171, 172, 173, 177, 487, 496, 512, 514], "reset": [74, 93, 95, 128], "loss": [74, 76, 457, 458, 465, 496, 512], "unicodedecodeerror": 74, "dicom_character_set": 75, "unicodeencodeerror": 76, "precis": [77, 85, 213, 457, 458, 462, 465, 496, 514], "use_decimal_boolean": 78, "valueerror": [78, 79, 81, 82, 103, 104, 105, 106, 107, 108, 128, 130, 131, 132, 139, 141, 157, 165, 176, 189, 199, 209, 212, 213, 454, 465, 470, 472, 484, 496, 517, 524, 527], "use_ds_numpi": [78, 470, 493, 496, 511], "use_numpi": 79, "__setattr__": 81, "camel": [81, 496, 512], "neither": [81, 82, 165, 201, 202, 204, 213], "nor": [81, 82], "citizen": [81, 125, 128, 522], "ok": [81, 82, 165, 520], "patientsnam": [81, 82], "1895": 81, "__contains__": [82, 496, 512], "0x100100010": 82, "traceback": [82, 218, 522, 524, 527], "recent": [82, 520, 521, 522, 524, 527], "stdin": [82, 522, 524, 527], "494": 82, "msg": [82, 522], "exc": 82, "occur": [83, 84, 496, 509, 520, 524], "digit": [85, 131, 190, 529], "round": [85, 213], "writer": 86, "elementcallback": 88, "callabl": [88, 125, 128, 153, 156, 159, 163, 198, 487], "everi": [88, 146, 213, 524, 529], "data_element_callback": [89, 95, 493], "anymor": 90, "manual": [90, 176], "debug_on": 91, "default_handl": 91, "log": [91, 128, 496, 502, 515, 520], "logger": [91, 496, 503, 517], "streamhandl": 91, "deprec": [92, 93, 128, 176, 501, 502, 506, 507, 508, 511, 512, 514, 515, 516], "enable_futur": 93, "imit": 93, "becom": [93, 496, 502, 512, 520, 521, 524], "emul": [93, 128], "invalid_keyword_behavior": [93, 493, 496, 512], "invalid_key_behavior": [93, 493, 496, 512], "gdcm_handler": 94, "pillow_handl": [94, 520], "jpeg_ls_handl": 94, "pylibjpeg_handl": 94, "rle_handl": [94, 496, 515, 517], "convert_pixel_data": [94, 128], "extract": 94, "shall": [94, 128, 137, 138, 139, 141, 142, 143, 153, 176, 189], "supports_transfer_syntax": [94, 207, 208, 209, 210, 211, 212], "transfer_syntax": [94, 207, 208, 209, 210, 212], "get_pixeldata": [94, 207, 208, 209, 210, 211, 212], "1d": [94, 199, 209, 210, 211, 212, 213], "reshap": [94, 199, 211, 213], "dimens": [94, 211], "needs_to_convert_to_rgb": [94, 207, 208, 209, 210, 211, 212], "colourspac": [94, 496, 514], "fail": [94, 496, 499, 500, 505, 520, 521, 524], "refus": 94, "fact": [94, 522], "notimplementederror": [94, 128, 208, 209, 210, 212, 213], "global": [96, 496, 515], "ds_decim": [98, 493, 496, 511], "ds_numpi": [99, 493], "absolut": [101, 102, 103, 104, 152, 164, 165, 496, 517], "charset": [101, 493, 496, 516], "extern": [103, 496, 512, 514], "datastor": 103, "0x10021001": [105, 106], "teston": [105, 106], "0x10021002": [105, 106], "testtwo": [105, 106], "retir": [106, 113, 125, 128, 174, 175, 221, 429, 496, 512], "perman": 106, "0x00410001": 107, "0x00410002": 107, "ltd": 107, "whose": [109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 124, 462, 465, 520], "keyerror": [109, 110, 111, 113, 114, 115, 116, 119, 120, 121, 126, 128, 522], "get_private_entri": 115, "get_entri": 116, "grouplength": 117, "mask": 118, "file_value_tel": 125, "is_undefined_length": [125, 128, 496, 509], "already_convert": 125, "validation_mod": [125, 429, 456, 457, 458, 460, 461, 462], "joan": [125, 128], "Its": 125, "descripwidth": 125, "35": [125, 128, 167, 289], "0xffffffffl": 125, "ie": 125, "maxbytestodisplai": [125, 496, 508], "showvr": 125, "backslash": [125, 128, 462, 482, 496, 497, 498, 514], "intern": [125, 128, 153, 503], "0xffffffff": 125, "empty_value_for_vr": 125, "empty_valu": 125, "classmethod": [125, 128, 462], "from_json": [125, 128, 496, 509, 512, 523], "dataset_class": 125, "value_kei": 125, "bulk_data_uri_handl": [125, 128, 496, 512, 523], "json": [125, 128, 215, 496, 508, 509, 513, 514, 525], "inlinebinari": [125, 128], "bulkdatauri": [125, 128, 523], "dicomweb": [125, 128, 523], "wado": [125, 128, 523], "is_empti": 125, "ret": 125, "repval": [125, 128], "to_json": [125, 128, 496, 510, 523], "bulk_data_threshold": [125, 128, 496, 510, 523], "bulk_data_element_handl": [125, 128, 523], "dump_handl": [125, 128], "base64": [125, 128, 523], "dump": [125, 128], "to_json_dict": [125, 128, 496, 510, 516, 523], "18": [125, 128, 425, 496, 505, 523], "validate_valu": 125, "raw_data_el": [126, 486], "belong": [126, 128, 164, 165], "value_tel": 127, "is_raw": 127, "undecod": 127, "alia": [127, 496, 512], "mutablemap": [128, 129, 130], "mutabl": 128, "0x00100020": 128, "0x0030": 128, "0x00100030": 128, "linac": 128, "co": [128, 529], "son": 128, "daughter": 128, "0x0041": 128, "john": [128, 462], "0041": 128, "get_private_item": 128, "iteral": [128, 496, 498], "jsonmodel": 128, "ds2": 128, "default_element_format": 128, "default_sequence_element_format": 128, "indent_char": [128, 166], "element_offset": [128, 131], "0xffff": [128, 163, 496, 506], "0x00": [128, 135, 137, 176, 478], "0xff": 128, "decoding_plugin": [128, 146], "encapsulate_ext": 128, "tri": [128, 146, 152, 496, 517], "placehold": [128, 146], "handler_nam": 128, "unabl": [128, 152, 176, 213, 522, 524, 527], "runtimeerror": [128, 211], "shallow": 128, "state": [128, 182, 496, 517, 523], "alphabet": [128, 462, 496, 516], "__getitem__": [128, 522], "unconvert": 128, "increas": [128, 496, 499, 516], "ensure_file_meta": 128, "formatted_lin": [128, 496, 498], "element_format": 128, "sequence_element_format": 128, "indent_format": 128, "json_dataset": 128, "bytearrai": [128, 149, 152, 213], "obj": 128, "get_item": [128, 496, 517], "keep_def": [128, 496, 517], "defer": [128, 157, 496, 498, 502, 509, 515, 522], "group_dataset": 128, "v4": [128, 176, 496, 517, 529], "implicit_vr": [128, 176, 429, 496, 517], "little_endian": [128, 176, 429, 496, 517], "is_original_encod": 128, "dict_item": 128, "unlik": 128, "flatten": 128, "dict_kei": 128, "original_character_set": [128, 496, 517], "original_encod": [128, 176, 188, 496, 517], "pop": [128, 496, 508], "tagtyp": 128, "combin": [128, 216, 522, 529], "popitem": 128, "unrealist": 128, "free": 128, "associ": 128, "read_encod": [128, 496, 517], "read_implicit_vr": [128, 496, 517], "read_little_endian": [128, 496, 517], "pathlik": [128, 129, 155, 157, 158, 165, 176, 496, 511], "binaryio": [128, 129, 153, 155, 156, 157, 159, 160, 161, 162, 169, 170, 171, 172, 173, 176], "writeablebuff": [128, 151, 152, 176], "_dataset__write_like_origin": 128, "2006": 128, "write_like_origin": [128, 176, 496, 517], "writeabl": [128, 176, 209, 496, 517], "tell": [128, 129, 151, 152, 155, 176, 496, 498, 521, 524], "isn": [128, 156, 176, 213, 429, 454, 496, 508, 512, 517, 521, 522], "public": [128, 176], "preserv": [128, 176, 496, 504, 511], "preambl": [128, 129, 155, 160, 176, 189, 196, 496, 505, 522], "set_original_encod": 128, "character_encod": 128, "optim": 128, "setdefault": [128, 496, 508, 512], "0x00100040": 128, "suppress_invalid_tag": [128, 496, 516], "threshold": 128, "inlin": [128, 523], "drop": [128, 496, 511, 512], "bubbl": 128, "my_json_dump": 128, "sort_kei": 128, "trait_nam": 128, "ipython": [128, 496, 497], "autocomplet": 128, "valuesview": 128, "visit": [128, 520, 521], "0210": [128, 488, 529], "0211": 128, "filename_or_obj": [129, 157], "readablebuff": [129, 151, 152, 155], "prepend": 129, "0x0002": [129, 176, 522], "fileobj_typ": [129, 157], "timestamp": [129, 157], "modif": [129, 520, 522, 524], "readabl": [129, 155, 496, 517], "rb": [129, 522], "overrid": [130, 163, 456, 496, 507, 524], "super": 130, "typeerror": [130, 155, 198, 207, 208, 496, 506, 512, 522], "init_valu": 130, "private_creator_el": 131, "block_start": 131, "low": [131, 523], "get_tag": 131, "enforce_standard": [132, 189, 522], "continu": [134, 496, 497, 514], "concaten": [134, 141], "togeth": [134, 135, 177], "has_bot": [135, 136], "frame1": 135, "frame2": 135, "exce": [135, 136], "31": 135, "circumst": [135, 136], "strongli": [135, 165, 524], "nr_fragment": [137, 143], "marker": [137, 138, 160, 173, 496, 509, 514], "null": [137, 199, 213, 478], "bytestream": [138, 140], "nr_frame": [138, 140], "span": 138, "predict": 138, "Near": 138, "attempt": [138, 175, 176, 488, 496, 505, 514, 522], "boundari": 138, "eoi": [138, 496, 509], "eoc": [138, 496, 509], "0xffd9": 138, "hasn": [138, 520, 521], "incorrect": [138, 146, 496, 500, 506, 508, 509, 517], "stream": [139, 144, 152, 496, 517, 520], "fffe": [139, 141, 142, 143], "e000": [139, 141, 142, 143], "e0dd": 139, "0x00000000": [139, 141], "presenc": [139, 200, 213, 522], "absenc": 139, "fe": 141, "e0": 141, "08": 141, "measur": [141, 163], "bot": 141, "ffee": 141, "itemis": 143, "factori": [146, 198, 217, 456, 496, 499, 514], "import_path": 146, "encode_pixel_data": 146, "modulenotfounderror": 146, "unavail": 146, "attributeerror": [146, 174, 199, 207, 209, 211, 212, 496, 499, 515, 517, 522], "aren": [146, 165, 496, 517, 522, 524], "uint16": [146, 200, 201, 202, 203, 204, 213], "iter_encod": [146, 527], "kwargs_from_d": 146, "missing_depend": 146, "nice": [146, 198, 520], "remove_plugin": 146, "appear": [148, 524], "dicm": [148, 160, 176, 189, 196, 522], "mayb": 148, "initial_byt": 149, "memoryview": [149, 152], "wrapper": [149, 151, 152, 496, 511], "simplifi": [149, 151, 496, 498, 502], "iobas": [151, 152], "rawiobas": [151, 152], "destin": [151, 152], "close": [152, 155, 159, 496, 498, 499], "unspecifi": 152, "eof": [152, 173], "fewer": [152, 466], "read_ul": 152, "read_u": 152, "read_exact": 152, "nr_retri": 152, "eoferror": [152, 173], "read_tag": 152, "whenc": 152, "rel": [152, 168, 496, 517], "write_ul": 152, "val": [152, 177, 214, 429, 456, 457, 458, 460, 461, 462, 465, 487, 522], "write_u": 152, "write_tag": 152, "stop_when": [153, 156, 159], "defer_s": [153, 155, 156, 159, 173, 197, 496, 498], "specific_tag": [153, 155, 156, 159, 522], "read_data_el": 153, "stop_before_pixel": [155, 496, 499], "pars": [155, 159, 213, 493, 496, 497, 509, 511, 512], "context": [155, 218, 496, 505, 522], "caller": [155, 496, 499], "respons": [155, 462, 523], "kb": 155, "stop": [155, 159, 496, 499], "subsequ": 155, "invaliddicomerror": [155, 160, 493, 496, 500, 522], "unsupport": [155, 207, 208, 209, 212], "condit": [155, 159, 496, 505], "bytelength": [156, 161], "parent_encod": [156, 188], "at_top_level": 156, "itemdelimitertag": 156, "call_back": 156, "heurist": [156, 496, 505], "raw_data_elem": 157, "persist": 157, "st_mtime": 157, "oserror": 157, "meant": [158, 196], "quickli": [158, 524], "fileobj": [159, 522], "reach": [159, 171, 173], "assess": 163, "_define_assess": 163, "doc": [163, 521], "_define_encap_doc": 163, "fiduci": 163, "_define_generic_content_id": 163, "hang": 163, "protocol": 163, "_define_hanging_protocol": 163, "_define_imag": 163, "implant": [163, 165], "_define_impl": 163, "assi": 163, "_define_implant_assi": 163, "_define_implant_group": 163, "_define_key_object_doc": 163, "_define_palett": 163, "_define_pati": 163, "_define_empti": 163, "_define_present": 163, "_define_radiotherapi": 163, "_define_generic_cont": 163, "registr": 163, "_define_rt_dos": [163, 524], "_define_rt_plan": 163, "_define_rt_structure_set": 163, "treat": [163, 524], "_define_rt_treatment_record": 163, "_define_seri": 163, "spectroscopi": 163, "_define_spectroscopi": 163, "sr": [163, 462, 496, 514, 528], "_define_sr_docu": 163, "stereometr": 163, "_define_studi": 163, "surfac": 163, "_define_surface_scan": 163, "tract": 163, "1430": [163, 524], "my_record": 163, "offsetofthenextdirectoryrecord": 163, "recordinuseflag": 163, "offsetofreferencedlowerleveldirectoryent": 163, "directoryrecordtyp": [163, 165], "specificcharacterset": 163, "my_inst": 163, "add_custom": [163, 165, 524], "node": [164, 165, 166, 522], "recordnod": [164, 165, 493], "leaf": [164, 165, 166], "fileid": 164, "file_set": [164, 166], "for_addit": [164, 524], "for_mov": 164, "for_remov": 164, "is_stag": [164, 165, 524], "temporari": [164, 496, 517, 524], "ds_or_path": 165, "cancel": 165, "directory_record": [165, 493, 524], "definit": [165, 176, 493, 496, 505, 529], "suitabl": [165, 200, 213, 526], "1400": [165, 524], "1410": [165, 524], "1420": [165, 524], "1500": [165, 496, 515], "1510": 165, "1511": [165, 496, 515], "1512": 165, "hierarchi": [165, 524], "privaterecorduid": 165, "leaf_nod": 165, "top_nod": 165, "ancestor": [165, 166, 174, 175], "due": [165, 496, 503, 514, 516, 520, 524], "force_implicit": 165, "1234567": 165, "7654321": 165, "include_orphan": 165, "raise_orphan": 165, "attach": 165, "imposs": 165, "orphan": 165, "use_exist": [165, 524], "backup": 165, "ptxxxxxx": 165, "stxxxxxx": 165, "sexxxxxx": 165, "imxxxxxx": 165, "xxxxxx": 165, "alphanumer": [165, 167, 496, 517], "paxxxxxx": 165, "p0xxxxxx": 165, "p1xxxxxx": 165, "p2xxxxxx": 165, "everyth": [165, 520, 524], "children": 166, "child": 166, "nearest": 166, "furthest": [166, 174, 175], "has_inst": 166, "amongst": 166, "sibl": 166, "is_root": 166, "prettifi": 166, "pretti": [166, 520], "record_typ": [166, 524], "revers": [166, 496, 509], "k": [167, 496, 517], "00010": 167, "00000000": 167, "00000001": 167, "00000002": 167, "_": [168, 521], "bytes_to_find": 170, "read_siz": [170, 171, 172, 173], "found_at": 170, "routin": 172, "delimiter_tag": 173, "ambigu": [174, 175, 496, 505, 507, 508, 512], "dicond": [174, 175], "closest": [174, 175], "__write_like_origin": 176, "force_encod": [176, 496, 517], "henc": 176, "bytestr": [176, 213], "eeee": [176, 496, 517], "independ": 176, "prioriti": [176, 188, 496, 517], "0x0000": 176, "put": 177, "swap": [182, 474], "rule": 187, "0017": 189, "send": [189, 520, 521], "struct_format": [191, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483], "pare": 196, "down": [196, 520, 524], "fast": [196, 217], "conserv": 196, "approach": 196, "expr": 197, "type_constructor": [198, 522], "hold": [198, 214], "constructor": 198, "therefor": [198, 213], "overlayrow": 199, "overlaycolumn": 199, "0015": 199, "numberofframesinoverlai": 199, "overlaybitsalloc": 199, "overlaybitposit": 199, "get_expected_length": [199, 213], "NOT": [199, 213], "get_overlay_arrai": 199, "0x6010": 199, "0x60ff": 199, "reshape_overlay_arrai": 199, "1201": [200, 213], "1203": [200, 213], "1221": [200, 213], "1223": [200, 213], "1204": [200, 213], "1224": [200, 213], "supplement": [200, 213], "hot_iron": [200, 213], "hot_metal_blu": [200, 213], "pet_20_step": [200, 213], "spring": [200, 213], "summer": [200, 213], "fall": [200, 213], "winter": [200, 213], "rgba": [200, 213], "3rd": [200, 201, 202, 203, 204, 213], "colour": [200, 213], "3002": [201, 202, 203, 204, 213, 496, 509], "float64": [201, 202, 204, 205, 213, 470], "3010": [203, 204, 213], "apply_window": [203, 204, 213, 493, 496, 512], "prefer_lut": [204, 213, 496, 512], "apply_voi": [204, 205, 213, 493, 496, 512], "per_fram": [206, 213, 496, 514], "iec": [206, 213, 315, 320, 323, 454], "10918": [206, 213, 323, 496, 514], "2012": [206, 213], "itu": [206, 213, 454], "871": [206, 213], "create_data_el": 207, "create_imag": 207, "volum": 207, "importerror": [207, 208, 210, 470, 472, 496, 513, 520], "affect": [207, 208, 209, 210, 211, 212, 213, 520, 521], "should_change_photometricinterpretation_to_rgb": [207, 208, 209, 210, 211, 212], "pyjpegl": 208, "planarconfigur": [209, 211, 212, 213, 496, 505], "numberoffram": [209, 211, 212, 213, 496, 517], "read_onli": 209, "resampl": 209, "as_arrai": [211, 213], "generate_fram": 211, "tsyntax": 211, "rle_segment_ord": 212, "suppos": 212, "msb": 212, "lsb": 212, "dtype_corrected_for_endian": 213, "numpy_dtyp": 213, "expand_ybr422": [213, 496, 515], "subsampl": 213, "horizont": 213, "halv": 213, "cb": 213, "get_image_pixel_id": 213, "get_j2k_paramet": 213, "codestream": 213, "15444": [213, 315], "is_sign": 213, "get_nr_fram": 213, "conjunct": 213, "uint": 213, "sake": 213, "pixel_dtyp": 213, "as_float": 213, "reshape_pixel_arrai": 213, "unpack_bit": [213, 496, 515], "is_private_cr": 215, "json_kei": [215, 496, 516], "ggggeeee": 215, "meaningless": 215, "arg2": [216, 496, 499], "0x00100015": 216, "0x50": 216, "0x0015": 216, "group_elem": 217, "safe": 217, "71": 219, "102": [221, 336, 339, 346, 496, 502], "108": [221, 296, 346, 462], "201": [221, 299, 310], "202": [221, 300], "204": [221, 324], "205": [221, 325, 496, 509], "78": [224, 307, 326, 331, 360, 419, 421, 442, 496, 500], "19": 233, "200": [235, 237, 377, 446, 447], "69": 240, "39": 241, "34": [244, 383, 385], "33": 245, "82": [250, 496, 500], "501": [251, 252, 253, 254, 255, 256, 257], "66": [259, 403, 413, 417, 418, 424, 427], "601": [267, 268], "130": 280, "23": 281, "22": [282, 400], "76": 286, "43": [293, 496, 499], "38": 301, "45": 304, "14495": 320, "59": 327, "mpeg": [346, 496, 512], "79": [349, 496, 500], "826": [368, 369, 454, 496, 509], "3680043": [368, 369, 454], "73": [371, 496, 499], "74": 374, "compil": [379, 380], "regex": [379, 380], "67": [404, 452], "72": [415, 496, 499], "human": [429, 462, 522], "friendli": [429, 522, 524], "subclass": [429, 496, 506], "set_private_encod": [429, 496, 517], "is_transfer_syntax": 429, "jpegbaseline8bit": [429, 496, 512, 517], "is_compress": 429, "is_defl": 429, "is_encapsul": 429, "encasul": 429, "is_valid": 429, "entropy_src": [454, 496, 517], "randbelow": [454, 496, 517], "54": [454, 496, 517], "uuid": 454, "uuid4": 454, "sha512": 454, "hash": [454, 496, 508, 514], "determinist": 454, "unrecover": 454, "random": [454, 496, 517], "secret": 454, "22463838056059845879389038257786771680": 454, "167161297070865690102504091919570542144": 454, "lorem": 454, "ipsum": 454, "87507166259346337659265156363895084463": 454, "9834": 454, "667": 454, "immut": [455, 459, 463, 496, 508], "auto_format": [456, 457, 458, 496, 514], "__new__": 456, "carri": [456, 496, 504], "penalti": 456, "clean": [456, 496, 505, 520, 521], "satisfi": [457, 458, 465], "construct": [457, 458, 462, 496, 502, 503, 514], "23e2": 457, "123": [457, 523], "rewrit": [460, 461], "uncommon": 461, "original_str": [462, 496, 507], "from_named_compon": [462, 496, 514], "from_named_components_veterinari": [462, 496, 514], "ideograph": 462, "phonet": 462, "absent": [462, 529], "demand": 462, "famili": 462, "family_nam": [462, 496, 514], "format_str": 462, "given_nam": [462, 496, 514], "middle_nam": 462, "name_prefix": 462, "name_suffix": 462, "family_name_ideograph": 462, "given_name_ideograph": 462, "middle_name_ideograph": 462, "name_prefix_ideograph": 462, "name_suffix_ideograph": 462, "family_name_phonet": 462, "given_name_phonet": 462, "middle_name_phonet": 462, "name_prefix_phonet": 462, "name_suffix_phonet": 462, "middl": 462, "addition": 462, "sect": 462, "adam": 462, "robert": 462, "quinci": 462, "rev": 462, "div": 462, "korean": [462, 496, 502], "\u6d2a": 462, "\u5409\u6d1e": 462, "\ud64d": 462, "\uae38\ub3d9": 462, "dr": 462, "chief": 462, "offic": 462, "responsible_party_nam": 462, "patient_nam": 462, "responsible_party_name_ideograph": 462, "patient_name_ideograph": 462, "responsible_party_name_phonet": 462, "patient_name_phonet": 462, "veterinari": 462, "OR": 462, "hors": 462, "abc": 462, "farm": 462, "fourth": 462, "fifth": 462, "truncat": [465, 496, 498], "retain": [465, 496, 514], "scientif": 465, "incur": 465, "furthermor": 465, "finit": 465, "inf": 465, "nan": 465, "caus": [465, 496, 498, 524], "byte_str": [467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485], "Not": [467, 468, 469, 470, 471, 472, 477, 478, 480, 483], "int64": 472, "use_is_numpi": [472, 493, 496, 511], "valtyp": 487, "_t": 487, "waveformbitsalloc": [488, 529], "waveformsampleinterpret": [488, 529], "sb": 488, "ub": 488, "ab": 488, "dev0": 493, "dec": 493, "convert_encod": 493, "decode_el": 493, "decode_byt": 493, "encode_str": 493, "allow_ds_float": [493, 496, 502], "assume_implicit_vr_switch": [493, 496, 514], "convert_wrong_length_to_un": [493, 496, 514], "data_element_callback_kwarg": 493, "debug": [493, 496, 502, 504], "enforce_valid_valu": [493, 496, 502, 508, 509, 512, 514, 515], "reset_data_element_callback": 493, "show_file_meta": [493, 496, 511], "apply_j2k_correct": [493, 496, 517], "get_charset_fil": 493, "get_palette_fil": [493, 496, 509], "validate_file_meta": [493, 496, 517, 522], "apply_rescal": [493, 496, 512], "get_encod": 493, "generate_filenam": [493, 496, 517], "is_conformant_file_id": 493, "miscellan": 493, "misc": [493, 496, 505], "is_dicom": [493, 496, 505], "size_in_byt": 493, "upper": [496, 517], "gracefulli": [496, 512, 517], "1844": [496, 517], "jpeglossless": [496, 512, 517], "jpeglosslesssv1": [496, 512, 517], "theoret": [496, 517], "1838265625": [496, 517], "1743": [496, 517], "1773": [496, 517], "1481": [496, 517], "2023d": [496, 517], "decid": [496, 517], "initialis": [496, 517], "inherit": [496, 514, 517], "read_fil": [496, 498, 499, 500, 505, 514, 517], "write_fil": [496, 505, 514, 517], "constant": [496, 512, 517, 529], "jpegbaselin": [496, 507, 512, 517], "jpegextend": [496, 507, 512, 517], "jpegextended12bit": [496, 512, 517], "jpeglslossi": [496, 512, 517], "jpeglsnearlossless": [496, 512, 517], "jpeg2000multicomponentlossless": [496, 507, 512, 517, 520], "jpeg2000mclossless": [496, 512, 517], "jpeg2000multicompon": [496, 507, 512, 517, 520], "jpeg2000mc": [496, 512, 517], "jpeglossycompressedpixeltransfersyntax": [496, 512, 517], "jpegtransfersyntax": [496, 512, 517], "jpeglssupportedcompressedpixeltransfersyntax": [496, 512, 517], "jpeglstransfersyntax": [496, 512, 517], "jpeg2000compressedpixeltransfersyntax": [496, 512, 517], "jpeg2000transfersyntax": [496, 512, 517], "rlecompressedlosslesssyntax": [496, 512, 517], "rletransfersyntax": [496, 512, 517], "uncompressedpixeltransfersyntax": [496, 512, 517], "uncompressedtransfersyntax": [496, 512, 517], "pilsupportedcompressedpixeltransfersyntax": [496, 512, 517], "personnameunicod": [496, 511, 517], "rle_encode_fram": [496, 514, 517], "_storage_sopclass_uid": [496, 512, 517], "parent_seq": [496, 517], "parent_dataset": [496, 517], "overlay_data_handl": [496, 512, 517], "fix_meta_info": [496, 507, 517], "1752": [496, 517], "mpeg2mpmlf": [496, 517], "mpeg2mphlf": [496, 517], "mpeg4hp41f": [496, 517], "mpeg4hp41bdf": [496, 517], "mpeg4hp422df": [496, 517], "mpeg4hp423df": [496, 517], "mpeg4hp42stereof": [496, 517], "htj2klossless": [496, 517], "htj2klosslessrpcl": [496, 517], "htj2k": [496, 517], "jpiphtj2kreferenc": [496, 517], "jpiphtj2kreferenceddefl": [496, 517], "smptest211020uncompressedprogressiveactivevideo": [496, 517], "smptest211020uncompressedinterlacedactivevideo": [496, 517], "smptest211030pcmdigitalaudio": [496, 517], "confus": [496, 517], "sent": [496, 517], "1529": [496, 517], "1873": [496, 517], "disagre": [496, 517], "1689": [496, 517], "enum": [496, 515, 517], "1874": [496, 517], "1907": [496, 517], "secur": [496, 517], "escap": [496, 517], "1922": [496, 517], "deepcopi": [496, 514, 517], "1816": [496, 517], "1968": [496, 517], "1943": [496, 517], "spread": [496, 517], "across": [496, 502, 517], "1774": [496, 517], "folder": [496, 499, 517], "refactor": [496, 517], "renam": [496, 497, 505, 511, 516, 517], "ci": [496, 517], "dependabot": [496, 517], "commit": [496, 517], "ruff": [496, 517], "hotfix": [496, 517], "1965": [496, 517], "eol": [496, 516], "decemb": [496, 516], "1634": [496, 516], "1648": [496, 516], "1414": [496, 516], "cli": [496, 516], "1674": [496, 516], "1658": [496, 516], "1661": [496, 516], "highli": [496, 516], "1728": [496, 516], "1734": [496, 516], "pyproject": [496, 516], "toml": [496, 516], "1792": [496, 516], "2023b": [496, 516], "1803": [496, 516], "1632": [496, 516], "progress": [496, 516, 521], "bar": [496, 516], "1611": [496, 516], "crash": [496, 506, 515, 516], "1638": [496, 516], "extrem": [496, 516], "byteslengthexcept": [496, 516], "1683": [496, 516], "1670": [496, 516], "1693": [496, 516], "1680": [496, 516], "1702": [496, 516], "wrong": [496, 507, 508, 512, 516], "calcul": [496, 514, 516], "1667": [496, 516], "lutdata": [496, 516], "1747": [496, 516], "1738": [496, 516], "teardown": [496, 516], "pytest": [496, 516], "fork": [496, 516, 520, 521, 526], "charpyl": [496, 516, 526], "1788": [496, 516], "favor": [496, 501, 515], "1617": [496, 515], "1498": [496, 515], "resort": [496, 515], "slowest": [496, 515], "1487": [496, 515], "mitra": [496, 515], "1588": [496, 515], "pr": [496, 515, 520, 521], "1594": [496, 515], "1593": [496, 515], "introduc": [496, 515, 520], "2022a": [496, 515], "holog": [496, 515], "0019xx43": [496, 515], "rest": [496, 515, 521], "1565": [496, 515], "deep": [496, 515], "1571": [496, 515], "1581": [496, 515], "maco": [496, 515, 526], "1599": [496, 515], "bad": [496, 505, 515], "1596": [496, 515], "1606": [496, 515], "1609": [496, 515], "__eq__": [496, 506, 514], "operand": [496, 514], "1327": [496, 514], "__str__": [496, 506, 514, 522], "1262": [496, 514], "metadata": [496, 514], "2021b": [496, 514], "silent": [496, 514], "highest": [496, 514], "init": [496, 514], "urllib": [496, 514], "1340": [496, 514], "1348": [496, 514], "optimis": [496, 514], "1361": [496, 514], "1372": [496, 514], "1438": [496, 514], "suppress": [496, 514], "1332": [496, 514], "1428": [496, 514], "1434": [496, 514], "pickl": [496, 505, 509, 514], "had": [496, 507, 514, 520], "1278": [496, 514], "1312": [496, 514], "problem": [496, 514, 522], "workflow": [496, 514, 520, 521], "1341": [496, 514], "1338": [496, 514], "878": [496, 514], "1147": [496, 514], "1412": [496, 514], "expans": [496, 514], "linear": [496, 514], "1415": [496, 514], "1449": [496, 514], "rbg": [496, 514], "jpg": [496, 514], "app14": [496, 514], "1444": [496, 514], "1457": [496, 514], "1251": [496, 513], "1253": [496, 513], "1254": [496, 513], "distribut": [496, 500, 512, 526], "fly": [496, 512], "whenev": [496, 512], "disk": [496, 512], "rg1_unci": [496, 512], "1127": [496, 512], "1234": [496, 512], "1237": [496, 512], "1156": [496, 512], "__next__": [496, 512], "__iter__": [496, 497, 512, 522], "1103": [496, 509, 512], "1155": [496, 512], "1149": [496, 512], "2020d": [496, 512], "243": [496, 512], "alltransfersyntax": [496, 512], "commun": [496, 512], "1240": [496, 512], "1178": [496, 512], "1161": [496, 512], "multifram": [496, 512], "dicosquadrupoleresonanceqrstorag": [496, 512], "dicosquadrupoleresonancestorag": [496, 512], "1211": [496, 512], "1181": [496, 512], "1146": [496, 512], "optimist": [496, 512], "embed": [496, 512], "1140": [496, 512], "network": [496, 512], "connect": [496, 512], "1153": [496, 512], "1193": [496, 512], "1215": [496, 512], "restor": [496, 511], "old": [496, 497, 498, 502, 505, 511], "personname3": [496, 503, 508, 511], "alias": [496, 498, 511], "ismultivalu": [496, 508, 511], "1086": [496, 511], "replace_un_with_known_vr": [496, 511], "1067": [496, 511], "623": [496, 511], "regress": [496, 510, 511, 520], "1038": [496, 511], "improp": [496, 509, 511], "3006": [496, 511], "1078": [496, 511], "1082": [496, 511], "1097": [496, 511], "915": [496, 509], "887": [496, 509, 522], "prevent": [496, 509], "894": [496, 509], "892": [496, 509], "truthi": [496, 509], "891": [496, 509], "899": [496, 509], "968": [496, 509], "896": [496, 509], "unpickl": [496, 509], "947": [496, 509], "951": [496, 509], "1101": [496, 509], "ir": [496, 509], "917": [496, 509], "propag": [496, 509], "971": [496, 509], "822": [496, 509], "263": [496, 509], "273": [496, 509], "994": [496, 509], "generate_pixel_data": [496, 509], "685": [496, 509], "693": [496, 509], "932": [496, 509], "toler": [496, 498, 509], "940": [496, 509], "unexpect": [496, 509], "848": [496, 509], "981": [496, 509], "537": [496, 509], "452": [496, 509], "2019e": [496, 509], "get_frame_offset": [496, 509], "page": [496, 505, 508, 519, 520, 521, 526], "timelin": [496, 508], "789": [496, 508], "image_handl": [496, 507, 508], "deferreddatael": [496, 507, 508], "760": [496, 508], "isstringorstringlist": [496, 508], "isstr": [496, 508], "666": [496, 508], "799": [496, 508], "gzip": [496, 502, 508], "753": [496, 508], "730": [496, 508], "v": [496, 508], "820": [496, 508], "864": [496, 508], "819": [496, 508], "850": [496, 508], "838": [496, 508], "757": [496, 508], "785": [496, 508], "788": [496, 508], "810": [496, 508], "815": [496, 508], "804": [496, 508], "mix": [496, 508], "835": [496, 508], "excess": [496, 508], "791": [496, 508], "ji": [496, 508], "856": [496, 508], "fallback": [496, 507], "722": [496, 507], "jpegbaselinelossy8bit": [496, 507], "726": [496, 507], "jpegbaselinelossy12bit": [496, 507], "jpeg2000lossi": [496, 507], "inequ": [496, 506, 507], "matter": [496, 507, 522], "291": [496, 507], "numpypi": [496, 507], "pypi": [496, 505, 507, 526], "2018c": [496, 507], "677": [496, 507], "624": [496, 507], "696": [496, 507], "584": [496, 507], "715": [496, 507], "716": [496, 507], "695": [496, 507], "737": [496, 507], "jpeglosslessp14": [496, 507], "713": [496, 507], "small": [496, 499, 505, 507, 519, 526], "729": [496, 507], "unus": [496, 507], "660": [496, 507], "682": [496, 507], "689": [496, 507], "663": [496, 507], "728": [496, 507], "704": [496, 507], "707": [496, 507], "consumpt": [496, 507], "717": [496, 507], "740": [496, 507], "464": [496, 506], "605": [496, 506], "292": [496, 506], "2018b": [496, 506], "649": [496, 506], "256": [496, 506], "0x0006": [496, 506], "489": [496, 506], "599": [496, 506], "unneed": [496, 506], "597": [496, 506], "620": [496, 506], "625": [496, 506, 518], "fit": [496, 506], "640": [496, 506], "__ne__": [496, 506], "comparison": [496, 501, 506], "verif": [496, 506], "backward": [496, 499, 505], "incompat": [496, 499, 505], "2017c": [496, 505], "fixer": [496, 505], "thrown": [496, 505], "143": [496, 505], "197": [496, 505], "212": [496, 505], "dictionary_is_retir": [496, 505], "thai": [496, 505], "japanes": [496, 497, 502, 505], "chines": [496, 497, 505], "353": [496, 505], "172": [496, 505], "clariti": [496, 505], "travisci": [496, 505], "appveyor": [496, 505], "coverag": [496, 505, 520], "pep": [496, 498, 501, 505], "151": [496, 505], "125": [496, 505], "show_dicomdir": [496, 504, 505], "258": [496, 505], "latin5": [496, 505], "turkish": [496, 505], "lot": [496, 505, 522], "read_dicomdir": [496, 504], "subdirectori": [496, 504], "ez_setup": [496, 504], "aid": [496, 504], "pydicom_seri": [496, 500, 503, 504], "nil": [496, 504], "goyett": [496, 504], "ordereddict": [496, 504], "padraig": [496, 503, 504], "loonei": [496, 503, 504], "jonathan": [496, 503, 504], "myself": [496, 504], "rickard": [496, 504], "holmberg": [496, 504], "julien": [496, 504], "lami": [496, 504], "yaroslav": [496, 504], "halchenko": [496, 504], "mark": [496, 504], "matthew": [496, 504], "brett": [496, 504], "dimitri": [496, 504], "papadopoulo": [496, 504], "videan42": [496, 504], "sorri": [496, 504], "ve": [496, 504, 520, 521, 524, 527, 529], "anyon": [496, 504], "consolid": [496, 503], "revert": [496, 503], "prepar": [496, 503], "experiment": [496, 503], "unoffici": [496, 503], "uncom": [496, 503], "114": [496, 503], "slow": [496, 503], "approx": [496, 499, 503], "r78ba350a3eb8": [496, 503], "streamlin": [496, 503], "modern": [496, 503], "decor": [496, 503], "duplic": [496, 503], "gunnar": [496, 503], "schaefer": [496, 503], "774b7a55db33": [496, 503], "6b949a5b925b": [496, 503], "113": [496, 503], "84af4b240add": [496, 503], "f\u00e9lix": [496, 503], "morenc": [496, 503], "0197b5846bb5": [496, 503], "3678b1be6aca": [496, 503], "f1ae573d9de5": [496, 503], "0411bab7c985": [496, 503], "9b92b336e7d4": [496, 503], "e830f30b6781": [496, 503], "pysid": [496, 503], "qt": [496, 503], "acknowledg": [496, 503], "suever": [496, 503], "who": [496, 502, 503], "2011": [496, 501, 502], "ident": [496, 502], "4ed698a7bfb": [496, 502], "c313d2befb08": [496, 502], "encourag": [496, 502], "promot": [496, 502], "languag": [496, 497, 502], "b6b3658f3b14": [496, 502], "98": [496, 502], "52": [496, 502], "111": [496, 502], "__dir__": [496, 502], "file_metadata": [496, 501], "96": [496, 501], "catch": [496, 499, 501], "97": [496, 501], "write_new": [496, 501], "fc790f01f5": [496, 500], "84": [496, 500], "dicomit": [496, 500], "statement": [496, 500], "1c32791bf0": [496, 500], "e3ee934bbc": [496, 500], "dicom_dao": [496, 500], "mike": [496, 500], "wallac": [496, 500], "couchdb": [496, 500], "almar": [496, 500], "klein": [496, 500], "distinct": [496, 500], "preliminari": [496, 497, 500], "reorgan": [496, 497, 499], "substanti": [496, 499], "partial": [496, 499], "plain": [496, 499], "bullet": [496, 499], "ness": [496, 499], "logic": [496, 499], "sens": [496, 499], "daniel": [496, 499], "nanz": [496, 499], "dave": [496, 499], "witten": [496, 499], "adit": [496, 499], "panchal": [496, 499], "cp805": [496, 499], "supp": [496, 499], "117": [496, 499], "119": [496, 499], "122": [496, 499], "patch": [496, 499, 519, 520], "nikitathespid": [496, 499], "58": [496, 499], "pierr": [496, 499], "raybaut": [496, 499], "47": [496, 499], "r102": [496, 498], "r103": [496, 498], "issue36": [496, 498], "r97": [496, 498], "r110": [496, 498], "readfil": [496, 498], "savea": [496, 498], "pixelarrai": [496, 497, 498], "kept": [496, 498, 526], "r105": [496, 498], "r91": [496, 498], "r113": [496, 498], "r95": [496, 498], "issue38": [496, 498], "collis": [496, 498], "r96": [496, 498], "issue40": [496, 498], "notimplementerror": [496, 498], "r100": [496, 498], "issue41": [496, 498], "r104": [496, 498], "r109": [496, 498], "r111": [496, 498], "patientsbirthd": [496, 498], "r98": [496, 498], "deprecationwarn": [496, 497], "issue22": [496, 497], "r72": [496, 497], "r73": [496, 497], "greek": [496, 497], "gui": [496, 497], "r64": [496, 497], "r65": [496, 497], "r69": [496, 497], "r70": [496, 497], "data_elem": [496, 497, 522], "r68": [496, 497], "tix": [496, 497], "r55": [496, 497], "uid_dictionari": [496, 497], "r51": [496, 497], "synonym": [496, 497], "issue27": [496, 497], "incorrectli": [496, 497], "read_ow": [496, 497], "undefinedlength": [496, 497], "r50": [496, 497], "dicominfo": [496, 497], "issue33": [496, 497], "issue18": [496, 497], "r45": [496, 497], "r67": [496, 497], "r46": [496, 497], "pixeldataarrai": [496, 497], "distutil": [496, 497], "ones": [519, 522, 524], "typo": 519, "materi": 519, "stackoverflow": 519, "googl": 519, "django": [520, 521, 523], "cd": [520, 521, 524], "live": [520, 521], "yourusernam": [520, 521], "accident": [520, 524], "area": 520, "afterward": 520, "our": [520, 521, 522, 524, 529], "dot": [520, 522], "choos": [520, 521], "won": [520, 521, 522, 524], "checkout": [520, 521], "reproduc": 520, "seem": 520, "daunt": 520, "resourc": 520, "captur": 520, "dive": 520, "Into": 520, "unittest": 520, "troubl": 520, "500": [520, 522], "test_uid": 520, "test_new_uid": 520, "newdefineduid": 520, "assert": [520, 523], "380": 520, "editor": [520, 521], "236": 520, "rst": [520, 521], "properli": 520, "happi": [520, 521], "idea": [520, 521], "cach": [520, 526], "scroll": 520, "front": 520, "push": [520, 521], "click": [520, 521], "wip": [520, 521], "instruct": [520, 521, 522], "real": [520, 521, 529], "mrg": [520, 521], "readi": [520, 521], "merg": [520, 521], "clarif": [520, 521], "approv": [520, 521], "lastli": [520, 521], "remot": [520, 521], "bin": [520, 521], "icon": [520, 521], "restructuredtext": 521, "navig": 521, "occasion": [521, 522, 524], "_build": 521, "web": 521, "browser": 521, "localhost": 521, "tut": 521, "toctre": 521, "visibl": 521, "got": 521, "maxdepth": 521, "virtualenv": 521, "contributing_cod": 521, "contributing_doc": 521, "rebuild": 521, "gone": 521, "reachabl": 521, "task": 521, "chapter_7": 521, "apr": 521, "46": 521, "gcc": 521, "copyright": 521, "credit": 521, "accessionnumb": 521, "acquisitiondata": 521, "xraytubecurr": 521, "primer": 521, "am": 521, "circleci": 521, "success": 521, "artifact": 521, "tab": 521, "yet": [522, 528], "vari": 522, "infil": 522, "no_meta_path": 522, "no_meta": 522, "678": 522, "631": 522, "caution": 522, "not_dicom": 522, "w": 522, "1703": 522, "1436": 522, "1079": 522, "833": 522, "character_set": 522, "581": 522, "6854": 522, "7369": 522, "hexadecim": 522, "iso_ir_100": 522, "0x6002": 522, "0x6004": 522, "0x601e": 522, "gggg": 522, "surround": 522, "0x0008": 522, "0x0016": 522, "private_elem": 522, "0x0043": 522, "0x104e": 522, "lack": 522, "stick": 522, "simpler": 522, "imagetyp": 522, "act": 522, "branch": [522, 526], "manner": [522, 527], "0x1002": 522, "earlier": 522, "saw": 522, "ii": [522, 529], "x00t": 522, "x18": 522, "x08": 522, "chanc": 522, "But": 522, "snip": 522, "_list": 522, "validate_dataset": 522, "dictionary_vr": 522, "0x0028": 522, "0x1050": 522, "windowwidth": 522, "notic": [522, 524], "typeofpatientid": 522, "windowcent": 522, "prefer": 522, "wb": 522, "2452": 522, "1311": 522, "3204": 522, "habit": 522, "congratul": 522, "beta": 523, "deseri": 523, "00080005": 523, "00080008": 523, "symmetr": 523, "ds_json": 523, "ds1": 523, "smaller": 523, "bulk_data_handl": 523, "store_data_and_return_uri": 523, "bulk_data_read": 523, "bulk_data_uri": 523, "data_retrieved_via_uri": 523, "json_data": 523, "00091002": 523, "data_retrieved_for_tag_and_vr_via_uri": 523, "share": 524, "peopl": 524, "frequent": 524, "dvd": 524, "procedur": 524, "ultrasound": 524, "despit": 524, "commonli": [524, 527], "usb": 524, "pc": 524, "minor": 524, "recalcul": 524, "1220": 524, "briefli": 524, "directoryrecordsequ": 524, "3126": 524, "di": 524, "510": 524, "complic": 524, "home": 524, "env": 524, "lib": 524, "python3": 524, "site": 524, "flat": 524, "abstract": 524, "awai": 524, "dig": 524, "cost": 524, "importantli": 524, "though": 524, "tmp0aalrzir": 524, "86e6b75b": 524, "b764": 524, "46af": 524, "bec3": 524, "51698a8366f2": 524, "1858": 524, "_recordifi": 524, "2338": 524, "_check_dataset": 524, "instancenumb": 524, "dosesummationtyp": 524, "2281": 524, "record_gen": 524, "1860": 524, "tmpsqz8rhgb": 524, "rd000000": 524, "shutil": 524, "copytre": 524, "copyfil": 524, "dst": 524, "98892001": 524, "98892003": 524, "tmpu068kdwp": 524, "cr1": 524, "6154": 524, "cr2": 524, "6247": 524, "cr3": 524, "6278": 524, "ct2": 524, "17106": 524, "17136": 524, "17166": 524, "17196": 524, "Then": [525, 526], "isol": 526, "admin": 526, "privileg": 526, "offlin": 526, "whl": 526, "py3": 526, "forg": [526, 527, 529], "fetch_data_fil": 526, "popular": 526, "beforehand": 526, "charl": 526, "cython": 526, "wheel": 526, "older": 526, "framework": 526, "snapshot": 526, "activ": 526, "stabl": 526, "undocu": 526, "prerequisit": [527, 529], "conda": [527, 529], "hundr": 527, "megabyt": 527, "slide": 527, "microscopi": 527, "gigabyt": 527, "territori": 527, "Being": 527, "significantli": 527, "i2": 527, "1697": 527, "frame_iter": 527, "listcomp": 527, "382": 527, "_encode_arrai": 527, "209": 527, "_preprocess": 527, "533": 527, "recompress": 527, "began": 528, "foundat": 528, "codedict": 528, "cid": 528, "incorrectmodalityworklistentri": 528, "mixedmodality3dcammodel": 528, "modalitytoread": 528, "othermod": 528, "128002": 528, "scheme_design": 528, "scheme_vers": 528, "underscor": 528, "sct": 528, "_1sigmalowervalueofpopul": 528, "371919006": 528, "sigma": 528, "cid270": 528, "121006": 528, "cid_for_nam": 528, "observ": 528, "observationsubjectclass": 528, "observertyp": 528, "echofindingobservationtyp": 528, "270": 528, "ln": 528, "fma": 528, "mdc": 528, "uml": 528, "bari": 528, "ncit": 528, "neu": 528, "ucum": 528, "radlex": 528, "ndc": 528, "itis_tsn": 528, "pubchem_cid": 528, "msh": 528, "capabl": 528, "explanatori": 529, "respiratori": 529, "interv": 529, "rhythm": 529, "khz": 529, "0200": 529, "channelsensit": 529, "einthoven": 529, "microvolt": 529, "iii": 529, "avr": 529, "avl": 529, "avf": 529, "v5": 529, "v6": 529, "interleav": 529, "ch": 529, "ax1": 529, "ax2": 529, "\u03bcv": 529, "cosin": 529, "sine": 529, "chosen": 529, "pi": 529, "ch1": 529, "astyp": 529, "ch2": 529, "sin": 529, "waveformorigin": 529, "condition": 529, "opt": 529, "obvious": 529, "chdef_seq": 529, "chdef": 529, "curve_typ": 529, "channelsampleskew": 529, "waveformbitsstor": 529, "codevalu": 529, "codingschemedesign": 529, "codingschemevers": 529, "stack": 529, "axi": 529, "my_waveform": 529}, "objects": {"": [[493, 0, 0, "-", "pydicom"]], "pydicom.charset": [[73, 1, 1, "", "convert_encodings"], [74, 1, 1, "", "decode_bytes"], [75, 1, 1, "", "decode_element"], [76, 1, 1, "", "encode_string"]], "pydicom.config": [[77, 2, 1, "", "APPLY_J2K_CORRECTIONS"], [78, 1, 1, "", "DS_decimal"], [79, 1, 1, "", "DS_numpy"], [80, 2, 1, "", "IGNORE"], [81, 2, 1, "", "INVALID_KEYWORD_BEHAVIOR"], [82, 2, 1, "", "INVALID_KEY_BEHAVIOR"], [83, 2, 1, "", "RAISE"], [52, 3, 1, "", "Settings"], [84, 2, 1, "", "WARN"], [85, 2, 1, "", "allow_DS_float"], [86, 2, 1, "", "assume_implicit_vr_switch"], [87, 2, 1, "", "convert_wrong_length_to_UN"], [88, 2, 1, "", "data_element_callback"], [89, 2, 1, "", "data_element_callback_kwargs"], [90, 2, 1, "", "datetime_conversion"], [91, 1, 1, "", "debug"], [92, 2, 1, "", "enforce_valid_values"], [93, 1, 1, "", "future_behavior"], [94, 2, 1, "", "pixel_data_handlers"], [95, 1, 1, "", "reset_data_element_callback"], [96, 2, 1, "", "settings"], [97, 2, 1, "", "show_file_meta"], [98, 2, 1, "", "use_DS_decimal"], [99, 2, 1, "", "use_DS_numpy"], [100, 2, 1, "", "use_IS_numpy"]], "pydicom.config.Settings": [[52, 4, 1, "", "infer_sq_for_un_vr"], [52, 4, 1, "", "reading_validation_mode"], [52, 4, 1, "", "writing_validation_mode"]], "pydicom.data": [[101, 1, 1, "", "get_charset_files"], [102, 1, 1, "", "get_palette_files"], [103, 1, 1, "", "get_testdata_file"], [104, 1, 1, "", "get_testdata_files"]], "pydicom.datadict": [[105, 1, 1, "", "add_dict_entries"], [106, 1, 1, "", "add_dict_entry"], [107, 1, 1, "", "add_private_dict_entries"], [108, 1, 1, "", "add_private_dict_entry"], [109, 1, 1, "", "dictionary_VM"], [110, 1, 1, "", "dictionary_VR"], [111, 1, 1, "", "dictionary_description"], [112, 1, 1, "", "dictionary_has_tag"], [113, 1, 1, "", "dictionary_is_retired"], [114, 1, 1, "", "dictionary_keyword"], [115, 1, 1, "", "get_entry"], [116, 1, 1, "", "get_private_entry"], [117, 1, 1, "", "keyword_for_tag"], [118, 1, 1, "", "mask_match"], [119, 1, 1, "", "private_dictionary_VM"], [120, 1, 1, "", "private_dictionary_VR"], [121, 1, 1, "", "private_dictionary_description"], [122, 1, 1, "", "repeater_has_keyword"], [123, 1, 1, "", "repeater_has_tag"], [124, 1, 1, "", "tag_for_keyword"]], "pydicom.dataelem": [[125, 3, 1, "", "DataElement"], [126, 1, 1, "", "DataElement_from_raw"], [127, 3, 1, "", "RawDataElement"]], "pydicom.dataelem.DataElement": [[125, 4, 1, "", "VM"], [125, 5, 1, "", "VR"], [125, 6, 1, "", "__init__"], [125, 6, 1, "", "clear"], [125, 5, 1, "", "descripWidth"], [125, 4, 1, "", "empty_value"], [125, 6, 1, "", "from_json"], [125, 4, 1, "", "is_empty"], [125, 4, 1, "", "is_private"], [125, 4, 1, "", "is_retired"], [125, 5, 1, "", "is_undefined_length"], [125, 4, 1, "", "keyword"], [125, 5, 1, "", "maxBytesToDisplay"], [125, 4, 1, "", "name"], [125, 4, 1, "", "repval"], [125, 5, 1, "", "showVR"], [125, 5, 1, "", "tag"], [125, 6, 1, "", "to_json"], [125, 6, 1, "", "to_json_dict"], [125, 6, 1, "", "validate"], [125, 4, 1, "", "value"]], "pydicom.dataelem.RawDataElement": [[127, 5, 1, "", "VR"], [127, 6, 1, "", "__init__"], [127, 5, 1, "", "is_implicit_VR"], [127, 5, 1, "", "is_little_endian"], [127, 5, 1, "", "is_raw"], [127, 5, 1, "", "length"], [127, 5, 1, "", "tag"], [127, 5, 1, "", "value"], [127, 5, 1, "", "value_tell"]], "pydicom.dataset": [[128, 3, 1, "", "Dataset"], [129, 3, 1, "", "FileDataset"], [130, 3, 1, "", "FileMetaDataset"], [131, 3, 1, "", "PrivateBlock"], [132, 1, 1, "", "validate_file_meta"]], "pydicom.dataset.Dataset": [[128, 6, 1, "", "__init__"], [128, 6, 1, "", "add"], [128, 6, 1, "", "add_new"], [128, 6, 1, "", "add_new_private"], [128, 6, 1, "", "clear"], [128, 6, 1, "", "compress"], [128, 6, 1, "", "convert_pixel_data"], [128, 6, 1, "", "copy"], [128, 6, 1, "", "data_element"], [128, 6, 1, "", "decode"], [128, 6, 1, "", "decompress"], [128, 5, 1, "", "default_element_format"], [128, 5, 1, "", "default_sequence_element_format"], [128, 6, 1, "", "dir"], [128, 6, 1, "", "elements"], [128, 6, 1, "", "ensure_file_meta"], [128, 6, 1, "", "formatted_lines"], [128, 6, 1, "", "from_json"], [128, 6, 1, "", "get"], [128, 6, 1, "", "get_item"], [128, 6, 1, "", "get_private_item"], [128, 6, 1, "", "group_dataset"], [128, 5, 1, "", "indent_chars"], [128, 4, 1, "", "is_implicit_VR"], [128, 4, 1, "", "is_little_endian"], [128, 4, 1, "", "is_original_encoding"], [128, 6, 1, "", "items"], [128, 6, 1, "", "iterall"], [128, 6, 1, "", "keys"], [128, 4, 1, "", "original_character_set"], [128, 4, 1, "", "original_encoding"], [128, 6, 1, "", "overlay_array"], [128, 4, 1, "", "pixel_array"], [128, 6, 1, "", "pop"], [128, 6, 1, "", "popitem"], [128, 6, 1, "", "private_block"], [128, 6, 1, "", "private_creators"], [128, 4, 1, "", "read_encoding"], [128, 4, 1, "", "read_implicit_vr"], [128, 4, 1, "", "read_little_endian"], [128, 6, 1, "", "remove_private_tags"], [128, 6, 1, "", "save_as"], [128, 6, 1, "", "set_original_encoding"], [128, 6, 1, "", "setdefault"], [128, 6, 1, "", "to_json"], [128, 6, 1, "", "to_json_dict"], [128, 6, 1, "", "top"], [128, 6, 1, "", "trait_names"], [128, 6, 1, "", "update"], [128, 6, 1, "", "values"], [128, 6, 1, "", "walk"], [128, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileDataset": [[129, 6, 1, "", "__init__"], [129, 5, 1, "", "file_meta"], [129, 5, 1, "", "filename"], [129, 5, 1, "", "fileobj_type"], [129, 5, 1, "", "is_implicit_VR"], [129, 5, 1, "", "is_little_endian"], [129, 5, 1, "", "preamble"], [129, 5, 1, "", "timestamp"]], "pydicom.dataset.FileMetaDataset": [[130, 6, 1, "", "__init__"], [130, 6, 1, "", "validate"]], "pydicom.dataset.PrivateBlock": [[131, 6, 1, "", "__init__"], [131, 6, 1, "", "add_new"], [131, 5, 1, "", "block_start"], [131, 5, 1, "", "dataset"], [131, 6, 1, "", "get_tag"], [131, 5, 1, "", "group"], [131, 5, 1, "", "private_creator"]], "pydicom.encaps": [[133, 1, 1, "", "decode_data_sequence"], [134, 1, 1, "", "defragment_data"], [135, 1, 1, "", "encapsulate"], [136, 1, 1, "", "encapsulate_extended"], [137, 1, 1, "", "fragment_frame"], [138, 1, 1, "", "generate_pixel_data"], [139, 1, 1, "", "generate_pixel_data_fragment"], [140, 1, 1, "", "generate_pixel_data_frame"], [141, 1, 1, "", "get_frame_offsets"], [142, 1, 1, "", "itemize_fragment"], [143, 1, 1, "", "itemize_frame"], [144, 1, 1, "", "read_item"]], "pydicom": [[64, 0, 0, "-", "encoders"], [490, 0, 0, "-", "overlays"], [491, 0, 0, "-", "pixel_data_handlers"], [492, 0, 0, "-", "waveforms"]], "pydicom.encoders": [[145, 2, 1, "", "RLELosslessEncoder"], [147, 1, 1, "", "get_encoder"]], "pydicom.encoders.base": [[146, 3, 1, "", "Encoder"]], "pydicom.encoders.base.Encoder": [[146, 4, 1, "", "UID"], [146, 6, 1, "", "__init__"], [146, 6, 1, "", "add_plugin"], [146, 6, 1, "", "encode"], [146, 4, 1, "", "is_available"], [146, 6, 1, "", "iter_encode"], [146, 6, 1, "", "kwargs_from_ds"], [146, 4, 1, "", "missing_dependencies"], [146, 4, 1, "", "name"], [146, 6, 1, "", "remove_plugin"]], "pydicom.errors": [[148, 7, 1, "", "InvalidDicomError"]], "pydicom.filebase": [[149, 3, 1, "", "DicomBytesIO"], [150, 1, 1, "", "DicomFile"], [151, 3, 1, "", "DicomFileLike"], [152, 3, 1, "", "DicomIO"]], "pydicom.filebase.DicomBytesIO": [[149, 6, 1, "", "__init__"]], "pydicom.filebase.DicomFileLike": [[151, 6, 1, "", "__init__"]], "pydicom.filebase.DicomIO": [[152, 6, 1, "", "__init__"], [152, 6, 1, "", "close"], [152, 4, 1, "", "is_implicit_VR"], [152, 4, 1, "", "is_little_endian"], [152, 4, 1, "", "name"], [152, 4, 1, "", "parent"], [152, 6, 1, "", "read"], [152, 6, 1, "", "read_UL"], [152, 6, 1, "", "read_US"], [152, 6, 1, "", "read_exact"], [152, 6, 1, "", "read_tag"], [152, 6, 1, "", "seek"], [152, 6, 1, "", "tell"], [152, 6, 1, "", "write"], [152, 6, 1, "", "write_UL"], [152, 6, 1, "", "write_US"], [152, 6, 1, "", "write_tag"]], "pydicom.filereader": [[153, 1, 1, "", "data_element_generator"], [154, 1, 1, "", "data_element_offset_to_value"], [155, 1, 1, "", "dcmread"], [156, 1, 1, "", "read_dataset"], [157, 1, 1, "", "read_deferred_data_element"], [158, 1, 1, "", "read_file_meta_info"], [159, 1, 1, "", "read_partial"], [160, 1, 1, "", "read_preamble"], [161, 1, 1, "", "read_sequence"], [162, 1, 1, "", "read_sequence_item"]], "pydicom.fileset": [[163, 2, 1, "", "DIRECTORY_RECORDERS"], [164, 3, 1, "", "FileInstance"], [165, 3, 1, "", "FileSet"], [166, 3, 1, "", "RecordNode"], [167, 1, 1, "", "generate_filename"], [168, 1, 1, "", "is_conformant_file_id"]], "pydicom.fileset.FileInstance": [[164, 4, 1, "", "FileID"], [164, 4, 1, "", "SOPClassUID"], [164, 4, 1, "", "SOPInstanceUID"], [164, 4, 1, "", "TransferSyntaxUID"], [164, 6, 1, "", "__init__"], [164, 4, 1, "", "file_set"], [164, 4, 1, "", "for_addition"], [164, 4, 1, "", "for_moving"], [164, 4, 1, "", "for_removal"], [164, 4, 1, "", "is_private"], [164, 4, 1, "", "is_staged"], [164, 6, 1, "", "load"], [164, 5, 1, "", "node"], [164, 4, 1, "", "path"]], "pydicom.fileset.FileSet": [[165, 4, 1, "", "ID"], [165, 4, 1, "", "UID"], [165, 6, 1, "", "__init__"], [165, 6, 1, "", "add"], [165, 6, 1, "", "add_custom"], [165, 6, 1, "", "clear"], [165, 6, 1, "", "copy"], [165, 4, 1, "", "descriptor_character_set"], [165, 4, 1, "", "descriptor_file_id"], [165, 6, 1, "", "find"], [165, 6, 1, "", "find_values"], [165, 4, 1, "", "is_staged"], [165, 6, 1, "", "load"], [165, 4, 1, "", "path"], [165, 6, 1, "", "remove"], [165, 6, 1, "", "write"]], "pydicom.fileset.RecordNode": [[166, 6, 1, "", "__init__"], [166, 6, 1, "", "add"], [166, 4, 1, "", "ancestors"], [166, 5, 1, "", "children"], [166, 4, 1, "", "component"], [166, 4, 1, "", "depth"], [166, 4, 1, "", "file_set"], [166, 4, 1, "", "has_instance"], [166, 4, 1, "", "index"], [166, 5, 1, "", "instance"], [166, 4, 1, "", "is_root"], [166, 4, 1, "", "key"], [166, 4, 1, "", "next"], [166, 4, 1, "", "parent"], [166, 6, 1, "", "prettify"], [166, 4, 1, "", "previous"], [166, 4, 1, "", "record_type"], [166, 6, 1, "", "remove"], [166, 6, 1, "", "reverse"], [166, 4, 1, "", "root"]], "pydicom.fileutil": [[169, 1, 1, "", "absorb_delimiter_item"], [170, 1, 1, "", "find_bytes"], [171, 1, 1, "", "find_delimiter"], [172, 1, 1, "", "length_of_undefined_length"], [173, 1, 1, "", "read_undefined_length_value"]], "pydicom.filewriter": [[174, 1, 1, "", "correct_ambiguous_vr"], [175, 1, 1, "", "correct_ambiguous_vr_element"], [176, 1, 1, "", "dcmwrite"], [177, 1, 1, "", "multi_string"], [178, 1, 1, "", "write_ATvalue"], [179, 1, 1, "", "write_DA"], [180, 1, 1, "", "write_DT"], [181, 1, 1, "", "write_OBvalue"], [182, 1, 1, "", "write_OWvalue"], [183, 1, 1, "", "write_PN"], [184, 1, 1, "", "write_TM"], [185, 1, 1, "", "write_UI"], [186, 1, 1, "", "write_UN"], [187, 1, 1, "", "write_data_element"], [188, 1, 1, "", "write_dataset"], [189, 1, 1, "", "write_file_meta_info"], [190, 1, 1, "", "write_number_string"], [191, 1, 1, "", "write_numbers"], [192, 1, 1, "", "write_sequence"], [193, 1, 1, "", "write_sequence_item"], [194, 1, 1, "", "write_string"], [195, 1, 1, "", "write_text"]], "pydicom.misc": [[196, 1, 1, "", "is_dicom"], [197, 1, 1, "", "size_in_bytes"]], "pydicom.multival": [[198, 3, 1, "", "MultiValue"]], "pydicom.multival.MultiValue": [[198, 6, 1, "", "__init__"]], "pydicom.overlays": [[199, 0, 0, "-", "numpy_handler"]], "pydicom.overlays.numpy_handler": [[199, 1, 1, "", "get_expected_length"], [199, 1, 1, "", "get_overlay_array"], [199, 1, 1, "", "is_available"], [199, 1, 1, "", "reshape_overlay_array"]], "pydicom.pixel_data_handlers": [[200, 1, 1, "", "apply_color_lut"], [201, 1, 1, "", "apply_modality_lut"], [202, 1, 1, "", "apply_rescale"], [203, 1, 1, "", "apply_voi"], [204, 1, 1, "", "apply_voi_lut"], [205, 1, 1, "", "apply_windowing"], [206, 1, 1, "", "convert_color_space"], [207, 0, 0, "-", "gdcm_handler"], [208, 0, 0, "-", "jpeg_ls_handler"], [209, 0, 0, "-", "numpy_handler"], [210, 0, 0, "-", "pillow_handler"], [211, 0, 0, "-", "pylibjpeg_handler"], [212, 0, 0, "-", "rle_handler"], [213, 0, 0, "-", "util"]], "pydicom.pixel_data_handlers.gdcm_handler": [[207, 1, 1, "", "create_data_element"], [207, 1, 1, "", "create_image"], [207, 1, 1, "", "get_pixeldata"], [207, 1, 1, "", "is_available"], [207, 1, 1, "", "needs_to_convert_to_RGB"], [207, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [207, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[208, 1, 1, "", "get_pixeldata"], [208, 1, 1, "", "is_available"], [208, 1, 1, "", "needs_to_convert_to_RGB"], [208, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [208, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.numpy_handler": [[209, 1, 1, "", "get_pixeldata"], [209, 1, 1, "", "is_available"], [209, 1, 1, "", "needs_to_convert_to_RGB"], [209, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [209, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pillow_handler": [[210, 1, 1, "", "get_pixeldata"], [210, 1, 1, "", "is_available"], [210, 1, 1, "", "needs_to_convert_to_RGB"], [210, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [210, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[211, 1, 1, "", "as_array"], [211, 1, 1, "", "generate_frames"], [211, 1, 1, "", "get_pixeldata"], [211, 1, 1, "", "is_available"], [211, 1, 1, "", "needs_to_convert_to_RGB"], [211, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [211, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.rle_handler": [[212, 1, 1, "", "get_pixeldata"], [212, 1, 1, "", "is_available"], [212, 1, 1, "", "needs_to_convert_to_RGB"], [212, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [212, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.util": [[213, 1, 1, "", "apply_color_lut"], [213, 1, 1, "", "apply_modality_lut"], [213, 1, 1, "", "apply_voi"], [213, 1, 1, "", "apply_voi_lut"], [213, 1, 1, "", "apply_windowing"], [213, 1, 1, "", "convert_color_space"], [213, 1, 1, "", "dtype_corrected_for_endianness"], [213, 1, 1, "", "expand_ybr422"], [213, 1, 1, "", "get_expected_length"], [213, 1, 1, "", "get_image_pixel_ids"], [213, 1, 1, "", "get_j2k_parameters"], [213, 1, 1, "", "get_nr_frames"], [213, 1, 1, "", "pack_bits"], [213, 1, 1, "", "pixel_dtype"], [213, 1, 1, "", "reshape_pixel_array"], [213, 1, 1, "", "unpack_bits"]], "pydicom.sequence": [[214, 3, 1, "", "Sequence"]], "pydicom.sequence.Sequence": [[214, 6, 1, "", "__init__"], [214, 6, 1, "", "extend"]], "pydicom.tag": [[215, 3, 1, "", "BaseTag"], [216, 1, 1, "", "Tag"], [217, 1, 1, "", "TupleTag"], [218, 1, 1, "", "tag_in_exception"]], "pydicom.tag.BaseTag": [[215, 6, 1, "", "__init__"], [215, 4, 1, "", "elem"], [215, 4, 1, "", "element"], [215, 4, 1, "", "group"], [215, 4, 1, "", "is_private"], [215, 4, 1, "", "is_private_creator"], [215, 4, 1, "", "json_key"], [215, 4, 1, "", "private_creator"]], "pydicom.uid": [[219, 2, 1, "", "AcquisitionContextSRStorage"], [220, 2, 1, "", "AdvancedBlendingPresentationStateStorage"], [221, 2, 1, "", "AllTransferSyntaxes"], [222, 2, 1, "", "AmbulatoryECGWaveformStorage"], [223, 2, 1, "", "ArterialPulseWaveformStorage"], [224, 2, 1, "", "AutorefractionMeasurementsStorage"], [225, 2, 1, "", "BasicStructuredDisplayStorage"], [226, 2, 1, "", "BasicTextSRStorage"], [227, 2, 1, "", "BasicVoiceAudioWaveformStorage"], [228, 2, 1, "", "BlendingSoftcopyPresentationStateStorage"], [229, 2, 1, "", "BodyPositionWaveformStorage"], [230, 2, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [231, 2, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [232, 2, 1, "", "BreastTomosynthesisImageStorage"], [233, 2, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [234, 2, 1, "", "CArmPhotonElectronRadiationStorage"], [235, 2, 1, "", "CTDefinedProcedureProtocolStorage"], [236, 2, 1, "", "CTImageStorage"], [237, 2, 1, "", "CTPerformedProcedureProtocolStorage"], [238, 2, 1, "", "CardiacElectrophysiologyWaveformStorage"], [239, 2, 1, "", "ChestCADSRStorage"], [240, 2, 1, "", "ColonCADSRStorage"], [241, 2, 1, "", "ColorPaletteStorage"], [242, 2, 1, "", "ColorSoftcopyPresentationStateStorage"], [243, 2, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [244, 2, 1, "", "Comprehensive3DSRStorage"], [245, 2, 1, "", "ComprehensiveSRStorage"], [246, 2, 1, "", "ComputedRadiographyImageStorage"], [247, 2, 1, "", "ConfocalMicroscopyImageStorage"], [248, 2, 1, "", "ConfocalMicroscopyTiledPyramidalImageStorage"], [249, 2, 1, "", "ContentAssessmentResultsStorage"], [250, 2, 1, "", "CornealTopographyMapStorage"], [251, 2, 1, "", "DICOS2DAITStorage"], [252, 2, 1, "", "DICOS3DAITStorage"], [253, 2, 1, "", "DICOSCTImageStorage"], [254, 2, 1, "", "DICOSDigitalXRayImageStorageForPresentation"], [255, 2, 1, "", "DICOSDigitalXRayImageStorageForProcessing"], [256, 2, 1, "", "DICOSQuadrupoleResonanceStorage"], [257, 2, 1, "", "DICOSThreatDetectionReportStorage"], [258, 2, 1, "", "DeflatedExplicitVRLittleEndian"], [259, 2, 1, "", "DeformableSpatialRegistrationStorage"], [260, 2, 1, "", "DermoscopicPhotographyImageStorage"], [261, 2, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [262, 2, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [263, 2, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [264, 2, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [265, 2, 1, "", "DigitalXRayImageStorageForPresentation"], [266, 2, 1, "", "DigitalXRayImageStorageForProcessing"], [267, 2, 1, "", "EddyCurrentImageStorage"], [268, 2, 1, "", "EddyCurrentMultiFrameImageStorage"], [269, 2, 1, "", "ElectromyogramWaveformStorage"], [270, 2, 1, "", "ElectrooculogramWaveformStorage"], [271, 2, 1, "", "EncapsulatedCDAStorage"], [272, 2, 1, "", "EncapsulatedMTLStorage"], [273, 2, 1, "", "EncapsulatedOBJStorage"], [274, 2, 1, "", "EncapsulatedPDFStorage"], [275, 2, 1, "", "EncapsulatedSTLStorage"], [276, 2, 1, "", "EnhancedCTImageStorage"], [277, 2, 1, "", "EnhancedContinuousRTImageStorage"], [278, 2, 1, "", "EnhancedMRColorImageStorage"], [279, 2, 1, "", "EnhancedMRImageStorage"], [280, 2, 1, "", "EnhancedPETImageStorage"], [281, 2, 1, "", "EnhancedRTImageStorage"], [282, 2, 1, "", "EnhancedSRStorage"], [283, 2, 1, "", "EnhancedUSVolumeStorage"], [284, 2, 1, "", "EnhancedXAImageStorage"], [285, 2, 1, "", "EnhancedXRFImageStorage"], [286, 2, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [287, 2, 1, "", "ExplicitVRBigEndian"], [288, 2, 1, "", "ExplicitVRLittleEndian"], [289, 2, 1, "", "ExtensibleSRStorage"], [290, 2, 1, "", "General32bitECGWaveformStorage"], [291, 2, 1, "", "GeneralAudioWaveformStorage"], [292, 2, 1, "", "GeneralECGWaveformStorage"], [293, 2, 1, "", "GenericImplantTemplateStorage"], [294, 2, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [295, 2, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [296, 2, 1, "", "HEVCM10P51"], [297, 2, 1, "", "HEVCMP51"], [298, 2, 1, "", "HTJ2K"], [299, 2, 1, "", "HTJ2KLossless"], [300, 2, 1, "", "HTJ2KLosslessRPCL"], [301, 2, 1, "", "HangingProtocolStorage"], [302, 2, 1, "", "HemodynamicWaveformStorage"], [303, 2, 1, "", "ImplantAssemblyTemplateStorage"], [304, 2, 1, "", "ImplantTemplateGroupStorage"], [305, 2, 1, "", "ImplantationPlanSRStorage"], [306, 2, 1, "", "ImplicitVRLittleEndian"], [307, 2, 1, "", "IntraocularLensCalculationsStorage"], [308, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [309, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [310, 2, 1, "", "InventoryStorage"], [311, 2, 1, "", "JPEG2000"], [312, 2, 1, "", "JPEG2000Lossless"], [313, 2, 1, "", "JPEG2000MC"], [314, 2, 1, "", "JPEG2000MCLossless"], [315, 2, 1, "", "JPEG2000TransferSyntaxes"], [316, 2, 1, "", "JPEGBaseline8Bit"], [317, 2, 1, "", "JPEGExtended12Bit"], [318, 2, 1, "", "JPEGLSLossless"], [319, 2, 1, "", "JPEGLSNearLossless"], [320, 2, 1, "", "JPEGLSTransferSyntaxes"], [321, 2, 1, "", "JPEGLossless"], [322, 2, 1, "", "JPEGLosslessSV1"], [323, 2, 1, "", "JPEGTransferSyntaxes"], [324, 2, 1, "", "JPIPHTJ2KReferenced"], [325, 2, 1, "", "JPIPHTJ2KReferencedDeflate"], [326, 2, 1, "", "KeratometryMeasurementsStorage"], [327, 2, 1, "", "KeyObjectSelectionDocumentStorage"], [328, 2, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [329, 2, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [330, 2, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [331, 2, 1, "", "LensometryMeasurementsStorage"], [332, 2, 1, "", "MPEG2MPHL"], [333, 2, 1, "", "MPEG2MPHLF"], [334, 2, 1, "", "MPEG2MPML"], [335, 2, 1, "", "MPEG2MPMLF"], [336, 2, 1, "", "MPEG4HP41"], [337, 2, 1, "", "MPEG4HP41BD"], [338, 2, 1, "", "MPEG4HP41BDF"], [339, 2, 1, "", "MPEG4HP41F"], [340, 2, 1, "", "MPEG4HP422D"], [341, 2, 1, "", "MPEG4HP422DF"], [342, 2, 1, "", "MPEG4HP423D"], [343, 2, 1, "", "MPEG4HP423DF"], [344, 2, 1, "", "MPEG4HP42STEREO"], [345, 2, 1, "", "MPEG4HP42STEREOF"], [346, 2, 1, "", "MPEGTransferSyntaxes"], [347, 2, 1, "", "MRImageStorage"], [348, 2, 1, "", "MRSpectroscopyStorage"], [349, 2, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [350, 2, 1, "", "MammographyCADSRStorage"], [351, 2, 1, "", "MediaStorageDirectoryStorage"], [352, 2, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [353, 2, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [354, 2, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [355, 2, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [356, 2, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [357, 2, 1, "", "MultichannelRespiratoryWaveformStorage"], [358, 2, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [359, 2, 1, "", "NuclearMedicineImageStorage"], [360, 2, 1, "", "OphthalmicAxialMeasurementsStorage"], [361, 2, 1, "", "OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [362, 2, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [363, 2, 1, "", "OphthalmicPhotography16BitImageStorage"], [364, 2, 1, "", "OphthalmicPhotography8BitImageStorage"], [365, 2, 1, "", "OphthalmicThicknessMapStorage"], [366, 2, 1, "", "OphthalmicTomographyImageStorage"], [367, 2, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [368, 2, 1, "", "PYDICOM_IMPLEMENTATION_UID"], [369, 2, 1, "", "PYDICOM_ROOT_UID"], [370, 2, 1, "", "ParametricMapStorage"], [371, 2, 1, "", "PatientRadiationDoseSRStorage"], [372, 2, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [373, 2, 1, "", "PhotoacousticImageStorage"], [374, 2, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [375, 2, 1, "", "PositronEmissionTomographyImageStorage"], [376, 2, 1, "", "ProcedureLogStorage"], [377, 2, 1, "", "ProtocolApprovalStorage"], [378, 2, 1, "", "PseudoColorSoftcopyPresentationStateStorage"], [379, 2, 1, "", "RE_VALID_UID"], [380, 2, 1, "", "RE_VALID_UID_PREFIX"], [381, 2, 1, "", "RLELossless"], [382, 2, 1, "", "RLETransferSyntaxes"], [383, 2, 1, "", "RTBeamsDeliveryInstructionStorage"], [384, 2, 1, "", "RTBeamsTreatmentRecordStorage"], [385, 2, 1, "", "RTBrachyApplicationSetupDeliveryInstructionStorage"], [386, 2, 1, "", "RTBrachyTreatmentRecordStorage"], [387, 2, 1, "", "RTDoseStorage"], [388, 2, 1, "", "RTImageStorage"], [389, 2, 1, "", "RTIonBeamsTreatmentRecordStorage"], [390, 2, 1, "", "RTIonPlanStorage"], [391, 2, 1, "", "RTPatientPositionAcquisitionInstructionStorage"], [392, 2, 1, "", "RTPhysicianIntentStorage"], [393, 2, 1, "", "RTPlanStorage"], [394, 2, 1, "", "RTRadiationRecordSetStorage"], [395, 2, 1, "", "RTRadiationSalvageRecordStorage"], [396, 2, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [397, 2, 1, "", "RTRadiationSetStorage"], [398, 2, 1, "", "RTSegmentAnnotationStorage"], [399, 2, 1, "", "RTStructureSetStorage"], [400, 2, 1, "", "RTTreatmentPreparationStorage"], [401, 2, 1, "", "RTTreatmentSummaryRecordStorage"], [402, 2, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [403, 2, 1, "", "RawDataStorage"], [404, 2, 1, "", "RealWorldValueMappingStorage"], [405, 2, 1, "", "RespiratoryWaveformStorage"], [406, 2, 1, "", "RoboticArmRadiationStorage"], [407, 2, 1, "", "RoboticRadiationRecordStorage"], [408, 2, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [409, 2, 1, "", "SMPTEST211020UncompressedInterlacedActiveVideo"], [410, 2, 1, "", "SMPTEST211020UncompressedProgressiveActiveVideo"], [411, 2, 1, "", "SMPTEST211030PCMDigitalAudio"], [412, 2, 1, "", "SecondaryCaptureImageStorage"], [413, 2, 1, "", "SegmentationStorage"], [414, 2, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [415, 2, 1, "", "SimplifiedAdultEchoSRStorage"], [416, 2, 1, "", "SleepElectroencephalogramWaveformStorage"], [417, 2, 1, "", "SpatialFiducialsStorage"], [418, 2, 1, "", "SpatialRegistrationStorage"], [419, 2, 1, "", "SpectaclePrescriptionReportStorage"], [420, 2, 1, "", "StereometricRelationshipStorage"], [421, 2, 1, "", "SubjectiveRefractionMeasurementsStorage"], [422, 2, 1, "", "SurfaceScanMeshStorage"], [423, 2, 1, "", "SurfaceScanPointCloudStorage"], [424, 2, 1, "", "SurfaceSegmentationStorage"], [425, 2, 1, "", "TomotherapeuticRadiationRecordStorage"], [426, 2, 1, "", "TomotherapeuticRadiationStorage"], [427, 2, 1, "", "TractographyResultsStorage"], [428, 2, 1, "", "TwelveLeadECGWaveformStorage"], [429, 3, 1, "", "UID"], [430, 2, 1, "", "UltrasoundImageStorage"], [431, 2, 1, "", "UltrasoundMultiFrameImageStorage"], [432, 2, 1, "", "UncompressedTransferSyntaxes"], [433, 2, 1, "", "VLEndoscopicImageStorage"], [434, 2, 1, "", "VLMicroscopicImageStorage"], [435, 2, 1, "", "VLPhotographicImageStorage"], [436, 2, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [437, 2, 1, "", "VLWholeSlideMicroscopyImageStorage"], [438, 2, 1, "", "VariableModalityLUTSoftcopyPresentationStateStorage"], [439, 2, 1, "", "VideoEndoscopicImageStorage"], [440, 2, 1, "", "VideoMicroscopicImageStorage"], [441, 2, 1, "", "VideoPhotographicImageStorage"], [442, 2, 1, "", "VisualAcuityMeasurementsStorage"], [443, 2, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [444, 2, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [445, 2, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [446, 2, 1, "", "XADefinedProcedureProtocolStorage"], [447, 2, 1, "", "XAPerformedProcedureProtocolStorage"], [448, 2, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [449, 2, 1, "", "XRay3DAngiographicImageStorage"], [450, 2, 1, "", "XRay3DCraniofacialImageStorage"], [451, 2, 1, "", "XRayAngiographicImageStorage"], [452, 2, 1, "", "XRayRadiationDoseSRStorage"], [453, 2, 1, "", "XRayRadiofluoroscopicImageStorage"], [454, 1, 1, "", "generate_uid"]], "pydicom.uid.UID": [[429, 6, 1, "", "__init__"], [429, 4, 1, "", "info"], [429, 4, 1, "", "is_compressed"], [429, 4, 1, "", "is_deflated"], [429, 4, 1, "", "is_encapsulated"], [429, 4, 1, "", "is_implicit_VR"], [429, 4, 1, "", "is_little_endian"], [429, 4, 1, "", "is_private"], [429, 4, 1, "", "is_retired"], [429, 4, 1, "", "is_transfer_syntax"], [429, 4, 1, "", "is_valid"], [429, 4, 1, "", "keyword"], [429, 4, 1, "", "name"], [429, 6, 1, "", "set_private_encoding"], [429, 4, 1, "", "type"]], "pydicom.valuerep": [[455, 3, 1, "", "DA"], [456, 1, 1, "", "DS"], [457, 3, 1, "", "DSdecimal"], [458, 3, 1, "", "DSfloat"], [459, 3, 1, "", "DT"], [460, 3, 1, "", "IS"], [461, 3, 1, "", "ISfloat"], [462, 3, 1, "", "PersonName"], [463, 3, 1, "", "TM"], [464, 3, 1, "", "VR"], [465, 1, 1, "", "format_number_as_ds"], [466, 1, 1, "", "is_valid_ds"]], "pydicom.valuerep.DA": [[455, 6, 1, "", "__init__"]], "pydicom.valuerep.DSdecimal": [[457, 6, 1, "", "__init__"]], "pydicom.valuerep.DSfloat": [[458, 6, 1, "", "__init__"]], "pydicom.valuerep.DT": [[459, 6, 1, "", "__init__"]], "pydicom.valuerep.IS": [[460, 6, 1, "", "__init__"]], "pydicom.valuerep.ISfloat": [[461, 6, 1, "", "__init__"]], "pydicom.valuerep.PersonName": [[462, 6, 1, "", "__init__"], [462, 4, 1, "", "alphabetic"], [462, 4, 1, "", "components"], [462, 6, 1, "", "decode"], [462, 6, 1, "", "encode"], [462, 6, 1, "", "family_comma_given"], [462, 4, 1, "", "family_name"], [462, 6, 1, "", "formatted"], [462, 6, 1, "", "from_named_components"], [462, 6, 1, "", "from_named_components_veterinary"], [462, 4, 1, "", "given_name"], [462, 4, 1, "", "ideographic"], [462, 4, 1, "", "middle_name"], [462, 4, 1, "", "name_prefix"], [462, 4, 1, "", "name_suffix"], [462, 4, 1, "", "phonetic"]], "pydicom.valuerep.TM": [[463, 6, 1, "", "__init__"]], "pydicom.valuerep.VR": [[464, 6, 1, "", "__init__"]], "pydicom.values": [[467, 1, 1, "", "convert_AE_string"], [468, 1, 1, "", "convert_ATvalue"], [469, 1, 1, "", "convert_DA_string"], [470, 1, 1, "", "convert_DS_string"], [471, 1, 1, "", "convert_DT_string"], [472, 1, 1, "", "convert_IS_string"], [473, 1, 1, "", "convert_OBvalue"], [474, 1, 1, "", "convert_OWvalue"], [475, 1, 1, "", "convert_PN"], [476, 1, 1, "", "convert_SQ"], [477, 1, 1, "", "convert_TM_string"], [478, 1, 1, "", "convert_UI"], [479, 1, 1, "", "convert_UN"], [480, 1, 1, "", "convert_UR_string"], [481, 1, 1, "", "convert_numbers"], [482, 1, 1, "", "convert_single_string"], [483, 1, 1, "", "convert_string"], [484, 1, 1, "", "convert_tag"], [485, 1, 1, "", "convert_text"], [486, 1, 1, "", "convert_value"], [487, 1, 1, "", "multi_string"]], "pydicom.waveforms": [[488, 0, 0, "-", "numpy_handler"]], "pydicom.waveforms.numpy_handler": [[488, 1, 1, "", "generate_multiplex"], [488, 1, 1, "", "is_available"], [488, 1, 1, "", "multiplex_array"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:method", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"show": [0, 14, 26, 28], "dicom": [0, 10, 11, 12, 16, 17, 20, 24, 26, 39, 43, 45, 50, 54, 72, 524, 526, 529], "file": [0, 10, 17, 20, 24, 26, 45, 50, 72, 500, 503, 504, 524, 526], "us": [0, 2, 23, 40, 41, 46, 50, 526, 527], "hierarch": 0, "tree": 0, "imag": [1, 2, 4, 6, 33, 34, 46], "process": [1, 6, 15], "downsiz": 2, "mri": 2, "pydicom": [2, 23, 24, 26, 27, 28, 30, 37, 38, 39, 40, 41, 43, 44, 46, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 496, 516, 517, 519, 526, 527], "decod": [3, 51, 62, 529], "plot": [3, 4, 9], "waveform": [3, 49, 488, 492, 529], "data": [3, 8, 9, 12, 17, 31, 32, 41, 42, 43, 47, 48, 49, 53, 54, 56, 57, 63, 64, 101, 102, 103, 104, 489, 490, 491, 492, 523, 527, 529], "load": [4, 524], "ct": 4, "slice": 4, "axial": 4, "sagitt": 4, "coron": 4, "comput": [5, 13, 19, 21, 518], "time": [5, 13, 19, 21, 518], "gener": [6, 23, 36], "exampl": [6, 24, 26, 33, 37, 66, 522, 526], "input": [6, 7], "output": [6, 7, 8], "metadata": [6, 15], "format": [8, 523], "set": [8, 10, 43, 72, 96, 524], "print": 8, "read": [9, 10, 11, 45, 69, 522], "dataset": [9, 14, 38, 41, 47, 48, 49, 53, 55, 66, 67, 69, 71, 128, 129, 130, 131, 132, 522, 523], "pixel": [9, 31, 32, 33, 34, 41, 42, 48, 64, 489, 491, 527], "rtplan": 11, "list": [11, 495], "inform": 11, "write": [12, 36, 45, 50, 71, 520, 522], "work": [14, 18, 47, 48, 49, 523], "memori": 14, "base": [14, 68, 146], "add": 16, "item": 16, "privat": [16, 43, 54], "dictionari": [16, 43, 54], "anonym": 17, "singl": 17, "sequenc": [18, 38, 59, 214, 522], "analys": 20, "differ": 20, "between": 20, "displai": [22, 43], "unicod": 22, "person": 22, "name": 22, "frequent": 23, "ask": 23, "question": 23, "how": [23, 526], "do": 23, "i": [23, 460], "cite": 23, "instal": [23, 26, 27, 40, 520, 526], "what": [23, 520, 521], "ar": 23, "": 23, "prerequisit": 23, "requir": [23, 31, 520], "option": [23, 24, 26, 30, 52, 520, 526], "version": [23, 39, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 526], "python": [23, 29, 46], "can": 23, "codifi": [24, 26, 50], "command": [24, 26, 28], "A": [24, 26], "simpl": [24, 26], "part": [24, 26], "extend": [25, 26], "cli": [25, 26, 27], "line": 26, "interfac": 26, "guid": [26, 35, 37, 44], "introduct": [26, 27, 39, 40, 43, 46, 47, 48, 49, 50, 523, 527], "combin": [26, 27], "other": [26, 27, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506], "element": [29, 38, 43, 56, 57, 58, 59, 60, 61, 62, 522], "vr": [29, 464], "type": [29, 36], "encod": [30, 31, 32, 33, 51, 64, 145, 146, 147, 529], "plugin": [30, 31, 33], "gdcm": [30, 526], "pylibjpeg": [30, 526], "ad": [31, 43, 522, 524], "an": 31, "rle": 33, "lossless": 33, "valid": [33, 39], "paramet": 33, "avail": 33, "glossari": 34, "modul": 34, "document": [36, 37, 496, 508, 520, 521], "style": 36, "guidelin": 36, "restructuredtext": 36, "get": [37, 53, 522], "start": 37, "user": [37, 44], "api": [37, 493], "refer": [37, 493], "core": 38, "datael": [38, 125], "tag": [38, 60, 215, 216, 217, 218], "best": 39, "practic": 39, "enforc": 39, "futur": 39, "proof": 39, "your": [39, 520, 521], "code": [39, 520], "limit": 39, "major": [39, 497, 498, 499, 500, 501, 502, 503, 505], "packag": [39, 41, 527], "licens": 40, "support": [40, 41, 42, 523], "next": [40, 520, 521, 522], "step": [40, 522], "compress": [41, 42, 527], "third": [41, 527], "parti": [41, 527], "transfer": [41, 42, 495], "syntax": [41, 42, 495], "handl": 42, "precondit": 42, "usag": [42, 66], "remov": [43, 496, 517, 524], "all": 43, "new": [43, 500, 520, 521, 524], "entri": 43, "pars": [45, 63], "view": [46, 522], "matplotlib": 46, "tkinter": 46, "librari": [46, 520, 526], "pil": 46, "wxpython": 46, "overlai": [47, 199, 490], "overlay_arrai": 47, "pixel_arrai": 48, "color": 48, "space": 48, "palett": 48, "modal": 48, "lut": 48, "rescal": 48, "oper": 48, "voi": 48, "window": 48, "waveform_arrai": 49, "from": [50, 523], "scratch": 50, "charact": 51, "charset": [51, 73, 74, 75, 76], "configur": 52, "config": [52, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "includ": 53, "util": [54, 63, 70, 213, 489, 495], "datadict": [54, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "represent": [55, 56, 58, 59, 61], "dataelem": [57, 125, 126, 127], "multi": 58, "valu": [58, 59, 61, 62, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "multiv": [58, 198], "special": 61, "valuerep": [61, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "bulk": [63, 489], "encapsul": [63, 135, 527], "encap": [63, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "creat": [63, 520, 521, 523, 524], "except": 65, "error": [65, 148], "io": [67, 68, 70], "class": [68, 495], "filebas": [68, 149, 150, 151, 152], "fileread": [69, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162], "fileutil": [70, 169, 170, 171, 172, 173], "filewrit": [71, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "fileset": [72, 163, 164, 165, 166, 167, 168, 524], "convert_encod": 73, "decode_byt": 74, "decode_el": 75, "encode_str": 76, "apply_j2k_correct": 77, "ds_decim": 78, "ds_numpi": 79, "ignor": 80, "invalid_keyword_behavior": 81, "invalid_key_behavior": 82, "rais": 83, "warn": 84, "allow_ds_float": 85, "assume_implicit_vr_switch": 86, "convert_wrong_length_to_un": 87, "data_element_callback": 88, "data_element_callback_kwarg": 89, "datetime_convers": 90, "debug": 91, "enforce_valid_valu": 92, "future_behavior": 93, "pixel_data_handl": [94, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 491], "reset_data_element_callback": 95, "show_file_meta": 97, "use_ds_decim": 98, "use_ds_numpi": 99, "use_is_numpi": 100, "get_charset_fil": 101, "get_palette_fil": 102, "get_testdata_fil": [103, 104], "add_dict_entri": [105, 106], "add_private_dict_entri": [107, 108], "dictionary_vm": 109, "dictionary_vr": 110, "dictionary_descript": 111, "dictionary_has_tag": 112, "dictionary_is_retir": 113, "dictionary_keyword": 114, "get_entri": 115, "get_private_entri": 116, "keyword_for_tag": 117, "mask_match": 118, "private_dictionary_vm": 119, "private_dictionary_vr": 120, "private_dictionary_descript": 121, "repeater_has_keyword": 122, "repeater_has_tag": 123, "tag_for_keyword": 124, "dataelement_from_raw": 126, "rawdatael": 127, "filedataset": 129, "filemetadataset": 130, "privateblock": 131, "validate_file_meta": 132, "decode_data_sequ": 133, "defragment_data": 134, "encapsulate_extend": 136, "fragment_fram": 137, "generate_pixel_data": 138, "generate_pixel_data_frag": 139, "generate_pixel_data_fram": 140, "get_frame_offset": 141, "itemize_frag": 142, "itemize_fram": 143, "read_item": 144, "rlelosslessencod": 145, "get_encod": 147, "invaliddicomerror": 148, "dicombytesio": 149, "dicomfil": 150, "dicomfilelik": 151, "dicomio": 152, "data_element_gener": 153, "data_element_offset_to_valu": 154, "dcmread": 155, "read_dataset": 156, "read_deferred_data_el": 157, "read_file_meta_info": 158, "read_parti": 159, "read_preambl": 160, "read_sequ": 161, "read_sequence_item": 162, "directory_record": 163, "fileinst": 164, "recordnod": 166, "generate_filenam": 167, "is_conformant_file_id": 168, "absorb_delimiter_item": 169, "find_byt": 170, "find_delimit": 171, "length_of_undefined_length": 172, "read_undefined_length_valu": 173, "correct_ambiguous_vr": 174, "correct_ambiguous_vr_el": 175, "dcmwrite": 176, "multi_str": [177, 487], "write_atvalu": 178, "write_da": 179, "write_dt": 180, "write_obvalu": 181, "write_owvalu": 182, "write_pn": 183, "write_tm": 184, "write_ui": 185, "write_un": 186, "write_data_el": 187, "write_dataset": 188, "write_file_meta_info": 189, "write_number_str": 190, "write_numb": 191, "write_sequ": 192, "write_sequence_item": 193, "write_str": 194, "write_text": 195, "misc": [196, 197, 494], "is_dicom": 196, "size_in_byt": 197, "multivalu": 198, "numpy_handl": [199, 209, 488], "apply_color_lut": 200, "apply_modality_lut": 201, "apply_rescal": 202, "apply_voi": 203, "apply_voi_lut": 204, "apply_window": 205, "convert_color_spac": 206, "gdcm_handler": 207, "jpeg_ls_handl": 208, "pillow_handl": 210, "pylibjpeg_handl": 211, "rle_handl": 212, "basetag": 215, "tupletag": 217, "tag_in_except": 218, "uid": [219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 495], "acquisitioncontextsrstorag": 219, "advancedblendingpresentationstatestorag": 220, "alltransfersyntax": 221, "ambulatoryecgwaveformstorag": 222, "arterialpulsewaveformstorag": 223, "autorefractionmeasurementsstorag": 224, "basicstructureddisplaystorag": 225, "basictextsrstorag": 226, "basicvoiceaudiowaveformstorag": 227, "blendingsoftcopypresentationstatestorag": 228, "bodypositionwaveformstorag": 229, "breastprojectionxrayimagestorageforpresent": 230, "breastprojectionxrayimagestorageforprocess": 231, "breasttomosynthesisimagestorag": 232, "carmphotonelectronradiationrecordstorag": 233, "carmphotonelectronradiationstorag": 234, "ctdefinedprocedureprotocolstorag": 235, "ctimagestorag": 236, "ctperformedprocedureprotocolstorag": 237, "cardiacelectrophysiologywaveformstorag": 238, "chestcadsrstorag": 239, "coloncadsrstorag": 240, "colorpalettestorag": 241, "colorsoftcopypresentationstatestorag": 242, "compositingplanarmprvolumetricpresentationstatestorag": 243, "comprehensive3dsrstorag": 244, "comprehensivesrstorag": 245, "computedradiographyimagestorag": 246, "confocalmicroscopyimagestorag": 247, "confocalmicroscopytiledpyramidalimagestorag": 248, "contentassessmentresultsstorag": 249, "cornealtopographymapstorag": 250, "dicos2daitstorag": 251, "dicos3daitstorag": 252, "dicosctimagestorag": 253, "dicosdigitalxrayimagestorageforpresent": 254, "dicosdigitalxrayimagestorageforprocess": 255, "dicosquadrupoleresonancestorag": 256, "dicosthreatdetectionreportstorag": 257, "deflatedexplicitvrlittleendian": 258, "deformablespatialregistrationstorag": 259, "dermoscopicphotographyimagestorag": 260, "digitalintraoralxrayimagestorageforpresent": 261, "digitalintraoralxrayimagestorageforprocess": 262, "digitalmammographyxrayimagestorageforpresent": 263, "digitalmammographyxrayimagestorageforprocess": 264, "digitalxrayimagestorageforpresent": 265, "digitalxrayimagestorageforprocess": 266, "eddycurrentimagestorag": 267, "eddycurrentmultiframeimagestorag": 268, "electromyogramwaveformstorag": 269, "electrooculogramwaveformstorag": 270, "encapsulatedcdastorag": 271, "encapsulatedmtlstorag": 272, "encapsulatedobjstorag": 273, "encapsulatedpdfstorag": 274, "encapsulatedstlstorag": 275, "enhancedctimagestorag": 276, "enhancedcontinuousrtimagestorag": 277, "enhancedmrcolorimagestorag": 278, "enhancedmrimagestorag": 279, "enhancedpetimagestorag": 280, "enhancedrtimagestorag": 281, "enhancedsrstorag": 282, "enhancedusvolumestorag": 283, "enhancedxaimagestorag": 284, "enhancedxrfimagestorag": 285, "enhancedxrayradiationdosesrstorag": 286, "explicitvrbigendian": 287, "explicitvrlittleendian": 288, "extensiblesrstorag": 289, "general32bitecgwaveformstorag": 290, "generalaudiowaveformstorag": 291, "generalecgwaveformstorag": 292, "genericimplanttemplatestorag": 293, "grayscaleplanarmprvolumetricpresentationstatestorag": 294, "grayscalesoftcopypresentationstatestorag": 295, "hevcm10p51": 296, "hevcmp51": 297, "htj2k": 298, "htj2klossless": 299, "htj2klosslessrpcl": 300, "hangingprotocolstorag": 301, "hemodynamicwaveformstorag": 302, "implantassemblytemplatestorag": 303, "implanttemplategroupstorag": 304, "implantationplansrstorag": 305, "implicitvrlittleendian": 306, "intraocularlenscalculationsstorag": 307, "intravascularopticalcoherencetomographyimagestorageforpresent": 308, "intravascularopticalcoherencetomographyimagestorageforprocess": 309, "inventorystorag": 310, "jpeg2000": 311, "jpeg2000lossless": 312, "jpeg2000mc": 313, "jpeg2000mclossless": 314, "jpeg2000transfersyntax": 315, "jpegbaseline8bit": 316, "jpegextended12bit": 317, "jpeglslossless": 318, "jpeglsnearlossless": 319, "jpeglstransfersyntax": 320, "jpeglossless": 321, "jpeglosslesssv1": 322, "jpegtransfersyntax": 323, "jpiphtj2kreferenc": 324, "jpiphtj2kreferenceddefl": 325, "keratometrymeasurementsstorag": 326, "keyobjectselectiondocumentstorag": 327, "legacyconvertedenhancedctimagestorag": 328, "legacyconvertedenhancedmrimagestorag": 329, "legacyconvertedenhancedpetimagestorag": 330, "lensometrymeasurementsstorag": 331, "mpeg2mphl": 332, "mpeg2mphlf": 333, "mpeg2mpml": 334, "mpeg2mpmlf": 335, "mpeg4hp41": 336, "mpeg4hp41bd": 337, "mpeg4hp41bdf": 338, "mpeg4hp41f": 339, "mpeg4hp422d": 340, "mpeg4hp422df": 341, "mpeg4hp423d": 342, "mpeg4hp423df": 343, "mpeg4hp42stereo": 344, "mpeg4hp42stereof": 345, "mpegtransfersyntax": 346, "mrimagestorag": 347, "mrspectroscopystorag": 348, "maculargridthicknessandvolumereportstorag": 349, "mammographycadsrstorag": 350, "mediastoragedirectorystorag": 351, "microscopybulksimpleannotationsstorag": 352, "multiframegrayscalebytesecondarycaptureimagestorag": 353, "multiframegrayscalewordsecondarycaptureimagestorag": 354, "multiframesinglebitsecondarycaptureimagestorag": 355, "multiframetruecolorsecondarycaptureimagestorag": 356, "multichannelrespiratorywaveformstorag": 357, "multiplevolumerenderingvolumetricpresentationstatestorag": 358, "nuclearmedicineimagestorag": 359, "ophthalmicaxialmeasurementsstorag": 360, "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorag": 361, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 362, "ophthalmicphotography16bitimagestorag": 363, "ophthalmicphotography8bitimagestorag": 364, "ophthalmicthicknessmapstorag": 365, "ophthalmictomographyimagestorag": 366, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 367, "pydicom_implementation_uid": 368, "pydicom_root_uid": 369, "parametricmapstorag": 370, "patientradiationdosesrstorag": 371, "performedimagingagentadministrationsrstorag": 372, "photoacousticimagestorag": 373, "plannedimagingagentadministrationsrstorag": 374, "positronemissiontomographyimagestorag": 375, "procedurelogstorag": 376, "protocolapprovalstorag": 377, "pseudocolorsoftcopypresentationstatestorag": 378, "re_valid_uid": 379, "re_valid_uid_prefix": 380, "rlelossless": 381, "rletransfersyntax": 382, "rtbeamsdeliveryinstructionstorag": 383, "rtbeamstreatmentrecordstorag": 384, "rtbrachyapplicationsetupdeliveryinstructionstorag": 385, "rtbrachytreatmentrecordstorag": 386, "rtdosestorag": 387, "rtimagestorag": 388, "rtionbeamstreatmentrecordstorag": 389, "rtionplanstorag": 390, "rtpatientpositionacquisitioninstructionstorag": 391, "rtphysicianintentstorag": 392, "rtplanstorag": 393, "rtradiationrecordsetstorag": 394, "rtradiationsalvagerecordstorag": 395, "rtradiationsetdeliveryinstructionstorag": 396, "rtradiationsetstorag": 397, "rtsegmentannotationstorag": 398, "rtstructuresetstorag": 399, "rttreatmentpreparationstorag": 400, "rttreatmentsummaryrecordstorag": 401, "radiopharmaceuticalradiationdosesrstorag": 402, "rawdatastorag": 403, "realworldvaluemappingstorag": 404, "respiratorywaveformstorag": 405, "roboticarmradiationstorag": 406, "roboticradiationrecordstorag": 407, "routinescalpelectroencephalogramwaveformstorag": 408, "smptest211020uncompressedinterlacedactivevideo": 409, "smptest211020uncompressedprogressiveactivevideo": 410, "smptest211030pcmdigitalaudio": 411, "secondarycaptureimagestorag": 412, "segmentationstorag": 413, "segmentedvolumerenderingvolumetricpresentationstatestorag": 414, "simplifiedadultechosrstorag": 415, "sleepelectroencephalogramwaveformstorag": 416, "spatialfiducialsstorag": 417, "spatialregistrationstorag": 418, "spectacleprescriptionreportstorag": 419, "stereometricrelationshipstorag": 420, "subjectiverefractionmeasurementsstorag": 421, "surfacescanmeshstorag": 422, "surfacescanpointcloudstorag": 423, "surfacesegmentationstorag": 424, "tomotherapeuticradiationrecordstorag": 425, "tomotherapeuticradiationstorag": 426, "tractographyresultsstorag": 427, "twelveleadecgwaveformstorag": 428, "ultrasoundimagestorag": 430, "ultrasoundmultiframeimagestorag": 431, "uncompressedtransfersyntax": 432, "vlendoscopicimagestorag": 433, "vlmicroscopicimagestorag": 434, "vlphotographicimagestorag": 435, "vlslidecoordinatesmicroscopicimagestorag": 436, "vlwholeslidemicroscopyimagestorag": 437, "variablemodalitylutsoftcopypresentationstatestorag": 438, "videoendoscopicimagestorag": 439, "videomicroscopicimagestorag": 440, "videophotographicimagestorag": 441, "visualacuitymeasurementsstorag": 442, "volumerenderingvolumetricpresentationstatestorag": 443, "widefieldophthalmicphotography3dcoordinatesimagestorag": 444, "widefieldophthalmicphotographystereographicprojectionimagestorag": 445, "xadefinedprocedureprotocolstorag": 446, "xaperformedprocedureprotocolstorag": 447, "xaxrfgrayscalesoftcopypresentationstatestorag": 448, "xray3dangiographicimagestorag": 449, "xray3dcraniofacialimagestorag": 450, "xrayangiographicimagestorag": 451, "xrayradiationdosesrstorag": 452, "xrayradiofluoroscopicimagestorag": 453, "generate_uid": 454, "da": 455, "d": 456, "dsdecim": 457, "dsfloat": 458, "dt": 459, "isfloat": 461, "personnam": 462, "tm": 463, "format_number_as_d": 465, "is_valid_d": 466, "convert_ae_str": 467, "convert_atvalu": 468, "convert_da_str": 469, "convert_ds_str": 470, "convert_dt_str": 471, "convert_is_str": 472, "convert_obvalu": 473, "convert_owvalu": 474, "convert_pn": 475, "convert_sq": 476, "convert_tm_str": 477, "convert_ui": 478, "convert_un": 479, "convert_ur_str": 480, "convert_numb": 481, "convert_single_str": 482, "convert_str": 483, "convert_tag": 484, "convert_text": 485, "convert_valu": 486, "handler": [489, 490, 491, 492], "miscellan": 494, "definit": 495, "storag": 495, "sop": [495, 524], "releas": [496, 500, 526], "note": 496, "3": [496, 498, 508, 515, 517], "0": [496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 514, 515, 516, 517], "chang": [496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 512, 514, 515, 516, 517, 520, 521, 524], "enhanc": [496, 497, 498, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 514, 515, 516, 517], "fix": [496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517], "deprec": [496, 517], "intern": [496, 516, 517], "2": [496, 497, 507, 511, 512, 513, 514, 515, 516], "4": [496, 499, 509, 510, 516], "1": [496, 505, 506, 507, 508, 509, 510, 512, 513], "changelog": [496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512], "9": [496, 497, 498, 499, 500, 501, 502, 503, 504], "8": [496, 503], "7": [496, 502], "6": [496, 501], "5": [496, 500], "bug": [497, 498, 499, 501, 502, 503], "addit": 499, "thi": [499, 500], "contrib": [500, 503, 504], "contributor": 504, "infrastructur": 505, "contribut": [519, 520, 521], "sourc": 520, "download": [520, 521, 526], "current": 520, "pytest": 520, "run": 520, "test": [520, 526], "suit": 520, "branch": [520, 521], "make": [520, 521], "preview": [520, 521], "commit": [520, 521], "pull": [520, 521], "request": [520, 521], "happen": [520, 521], "build": 521, "basic": 522, "access": 522, "modifi": [522, 524], "path": 522, "file_meta": 522, "ani": 522, "categori": 522, "standard": 522, "delet": 522, "json": 523, "convert": 523, "larg": 523, "binari": 523, "dicomdir": 524, "The": 524, "exist": 524, "stage": 524, "instanc": 524, "appli": 524, "conclus": 524, "tutori": 525, "offici": 526, "pip": 526, "conda": 526, "pillow": 526, "pyjpegl": 526, "develop": 526, "structur": 528, "report": 528}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Show a dicom file using hierarchical tree": [[0, "show-a-dicom-file-using-hierarchical-tree"]], "Image processing": [[1, "image-processing"], [6, "image-processing"]], "Downsize MRI image using pydicom": [[2, "downsize-mri-image-using-pydicom"]], "Decode and plot Waveform Data": [[3, "decode-and-plot-waveform-data"]], "Load CT slices and plot axial, sagittal and coronal images": [[4, "load-ct-slices-and-plot-axial-sagittal-and-coronal-images"]], "Computation times": [[5, "computation-times"], [13, "computation-times"], [19, "computation-times"], [21, "computation-times"], [518, "computation-times"]], "General examples": [[6, "general-examples"]], "Input-output": [[6, "input-output"], [7, "input-output"]], "Metadata processing": [[6, "metadata-processing"], [15, "metadata-processing"]], "Format the output of the data set printing": [[8, "format-the-output-of-the-data-set-printing"]], "Read a Dataset and plot Pixel Data": [[9, "read-a-dataset-and-plot-pixel-data"]], "Read a DICOM File-set": [[10, "read-a-dicom-file-set"]], "Read RTPLAN DICOM and list information": [[11, "read-rtplan-dicom-and-list-information"]], "Write DICOM data": [[12, "write-dicom-data"]], "Show working with memory-based dataset": [[14, "show-working-with-memory-based-dataset"]], "Add items to the private DICOM dictionary": [[16, "add-items-to-the-private-dicom-dictionary"]], "Anonymize DICOM data": [[17, "anonymize-dicom-data"]], "Anonymize a single file": [[17, "anonymize-a-single-file"]], "Working with sequences": [[18, "working-with-sequences"]], "Analyse differences between DICOM files": [[20, "analyse-differences-between-dicom-files"]], "Display unicode person names": [[22, "display-unicode-person-names"]], "Frequently asked questions": [[23, "frequently-asked-questions"]], "General": [[23, "general"]], "How do I cite pydicom?": [[23, "how-do-i-cite-pydicom"]], "Installation": [[23, "installation"]], "What are pydicom\u2019s prerequisites?": [[23, "what-are-pydicom-s-prerequisites"]], "Required": [[23, "required"]], "Optional": [[23, "optional"]], "What version of Python can I use?": [[23, "what-version-of-python-can-i-use"]], "pydicom codify command": [[24, "pydicom-codify-command"], [26, "pydicom-codify-command"]], "A simple example": [[24, "a-simple-example"], [26, "a-simple-example"]], "Command options": [[24, "command-options"], [26, "command-options"]], "Codifying a part of a DICOM file": [[24, "codifying-a-part-of-a-dicom-file"], [26, "codifying-a-part-of-a-dicom-file"]], "Extending the CLI": [[25, "extending-the-cli"], [26, "extending-the-cli"]], "Command-line Interface Guide": [[26, "command-line-interface-guide"]], "Introduction": [[26, "introduction"], [27, "introduction"], [39, "introduction"], [40, "introduction"], [43, "introduction"], [46, "introduction"], [47, "introduction"], [48, "introduction"], [49, "introduction"], [50, "introduction"], [527, "introduction"]], "Installing the pydicom CLI": [[26, "installing-the-pydicom-cli"], [27, "installing-the-pydicom-cli"]], "Combining with other CLIs": [[26, "combining-with-other-clis"], [27, "combining-with-other-clis"]], "pydicom show command": [[26, "pydicom-show-command"], [28, "pydicom-show-command"]], "Element VRs and Python types": [[29, "element-vrs-and-python-types"]], "Encoder Plugins Options": [[30, "encoder-plugins-options"]], "pydicom": [[30, "pydicom"]], "gdcm": [[30, "gdcm"]], "pylibjpeg": [[30, "pylibjpeg"]], "Pixel Data Encoder Plugins": [[31, "pixel-data-encoder-plugins"]], "Plugin Requirements": [[31, "plugin-requirements"]], "Adding Plugins to an Encoder": [[31, "adding-plugins-to-an-encoder"]], "Pixel Data Encoding": [[32, "pixel-data-encoding"]], "RLE Lossless Encoding": [[33, "rle-lossless-encoding"]], "Valid Image Pixel Parameters": [[33, "valid-image-pixel-parameters"]], "Available Plugins": [[33, "available-plugins"]], "Examples": [[33, "examples"], [37, "examples"]], "Glossary": [[34, "glossary"]], "Image Pixel Module": [[34, "image-pixel-module"]], "Guides": [[35, "guides"]], "Writing documentation": [[36, "writing-documentation"]], "Types of documentation": [[36, "types-of-documentation"]], "General style guidelines": [[36, "general-style-guidelines"]], "Guidelines for reStructuredText": [[36, "guidelines-for-restructuredtext"]], "pydicom documentation": [[37, "pydicom-documentation"]], "Getting Started": [[37, "getting-started"]], "User Guide": [[37, "user-guide"]], "API Reference": [[37, "api-reference"], [493, "api-reference"]], "Core elements in pydicom": [[38, "core-elements-in-pydicom"]], "Dataset": [[38, "dataset"]], "DataElement": [[38, "dataelement"]], "Tag": [[38, "tag"]], "Sequence": [[38, "sequence"]], "Best Practices": [[39, "best-practices"]], "Enforcing Valid DICOM": [[39, "enforcing-valid-dicom"]], "Future-proofing your code": [[39, "future-proofing-your-code"]], "Limiting the pydicom major version in your package": [[39, "limiting-the-pydicom-major-version-in-your-package"]], "Introduction to pydicom": [[40, "introduction-to-pydicom"]], "License": [[40, "license"]], "Installing": [[40, "installing"]], "Using pydicom": [[40, "using-pydicom"]], "Support": [[40, "support"]], "Next Steps": [[40, "next-steps"]], "Compressing Pixel Data": [[41, "compressing-pixel-data"], [527, "compressing-pixel-data"]], "Compressing using third-party packages": [[41, "compressing-using-third-party-packages"]], "Compressing using pydicom": [[41, "compressing-using-pydicom"], [527, "compressing-using-pydicom"]], "Supported Transfer Syntaxes": [[41, "supported-transfer-syntaxes"], [42, "supported-transfer-syntaxes"]], "Compressing with Dataset.compress()": [[41, "compressing-with-dataset-compress"]], "Handling of compressed pixel data": [[42, "handling-of-compressed-pixel-data"]], "Preconditions": [[42, "preconditions"]], "Usage": [[42, "usage"], [66, "usage"]], "Private Data Elements": [[43, "private-data-elements"]], "Displaying Private Data Elements in pydicom": [[43, "displaying-private-data-elements-in-pydicom"]], "Setting Private Data Elements with pydicom": [[43, "setting-private-data-elements-with-pydicom"]], "Removing All Private Data Elements": [[43, "removing-all-private-data-elements"]], "Adding new entries to the DICOM dictionary": [[43, "adding-new-entries-to-the-dicom-dictionary"]], "pydicom User Guide": [[44, "pydicom-user-guide"]], "Reading and writing DICOM files": [[45, "reading-and-writing-dicom-files"]], "File Reading/Parsing": [[45, "file-reading-parsing"]], "File Writing": [[45, "file-writing"]], "Viewing Images": [[46, "viewing-images"]], "Using pydicom with matplotlib": [[46, "using-pydicom-with-matplotlib"]], "Using pydicom with Tkinter": [[46, "using-pydicom-with-tkinter"]], "Using pydicom with Python Imaging Library (PIL)": [[46, "using-pydicom-with-python-imaging-library-pil"]], "Using pydicom with wxPython": [[46, "using-pydicom-with-wxpython"]], "Working with Overlay Data": [[47, "working-with-overlay-data"]], "Dataset.overlay_array()": [[47, "dataset-overlay-array"]], "Working with Pixel Data": [[48, "working-with-pixel-data"]], "Dataset.pixel_array": [[48, "dataset-pixel-array"]], "Color space": [[48, "color-space"]], "Palette Color": [[48, "palette-color"]], "Modality LUT or Rescale Operation": [[48, "modality-lut-or-rescale-operation"]], "VOI LUT or Windowing Operation": [[48, "voi-lut-or-windowing-operation"]], "Working with Waveform Data": [[49, "working-with-waveform-data"]], "Dataset.waveform_array()": [[49, "dataset-waveform-array"]], "Writing DICOM Files": [[50, "writing-dicom-files"]], "Using Codify": [[50, "using-codify"]], "Writing a file from Scratch": [[50, "writing-a-file-from-scratch"]], "Character Encoding and Decoding (pydicom.charset)": [[51, "character-encoding-and-decoding-pydicom-charset"]], "Configuration Options (pydicom.config)": [[52, "configuration-options-pydicom-config"]], "Getting Included Datasets (pydicom.data)": [[53, "getting-included-datasets-pydicom-data"]], "Data Dictionary Utilities (pydicom.datadict)": [[54, "data-dictionary-utilities-pydicom-datadict"]], "DICOM Data Dictionary": [[54, "dicom-data-dictionary"]], "Private Data Dictionary": [[54, "private-data-dictionary"]], "Representation of Datasets (pydicom.dataset)": [[55, "representation-of-datasets-pydicom-dataset"]], "Representation of Data Elements": [[56, "representation-of-data-elements"]], "Data Elements (pydicom.dataelem)": [[57, "data-elements-pydicom-dataelem"]], "Element Multi-value Representation (pydicom.multival)": [[58, "element-multi-value-representation-pydicom-multival"]], "Sequence Element Value Representation (pydicom.sequence)": [[59, "sequence-element-value-representation-pydicom-sequence"]], "Element Tags (pydicom.tag)": [[60, "element-tags-pydicom-tag"]], "Specialized Element Value Representation (pydicom.valuerep)": [[61, "specialized-element-value-representation-pydicom-valuerep"]], "Element Value Decoding (pydicom.values)": [[62, "element-value-decoding-pydicom-values"]], "Bulk Data Encapsulation Utilities (pydicom.encaps)": [[63, "bulk-data-encapsulation-utilities-pydicom-encaps"]], "Parsing Encapsulated Data": [[63, "parsing-encapsulated-data"]], "Creating Encapsulated Data": [[63, "creating-encapsulated-data"]], "Pixel Data Encoders (pydicom.encoders)": [[64, "pixel-data-encoders-pydicom-encoders"]], "Exceptions (pydicom.errors)": [[65, "exceptions-pydicom-errors"]], "Example Datasets (pydicom.examples)": [[66, "example-datasets-pydicom-examples"]], "Dataset IO": [[67, "dataset-io"]], "IO Base Classes (pydicom.filebase)": [[68, "io-base-classes-pydicom-filebase"]], "Dataset Reading (pydicom.filereader)": [[69, "dataset-reading-pydicom-filereader"]], "IO Utilities (pydicom.fileutil)": [[70, "io-utilities-pydicom-fileutil"]], "Dataset Writing (pydicom.filewriter)": [[71, "dataset-writing-pydicom-filewriter"]], "DICOM File-sets (pydicom.fileset)": [[72, "dicom-file-sets-pydicom-fileset"]], "pydicom.charset.convert_encodings": [[73, "pydicom-charset-convert-encodings"]], "pydicom.charset.decode_bytes": [[74, "pydicom-charset-decode-bytes"]], "pydicom.charset.decode_element": [[75, "pydicom-charset-decode-element"]], "pydicom.charset.encode_string": [[76, "pydicom-charset-encode-string"]], "pydicom.config.APPLY_J2K_CORRECTIONS": [[77, "pydicom-config-apply-j2k-corrections"]], "pydicom.config.DS_decimal": [[78, "pydicom-config-ds-decimal"]], "pydicom.config.DS_numpy": [[79, "pydicom-config-ds-numpy"]], "pydicom.config.IGNORE": [[80, "pydicom-config-ignore"]], "pydicom.config.INVALID_KEYWORD_BEHAVIOR": [[81, "pydicom-config-invalid-keyword-behavior"]], "pydicom.config.INVALID_KEY_BEHAVIOR": [[82, "pydicom-config-invalid-key-behavior"]], "pydicom.config.RAISE": [[83, "pydicom-config-raise"]], "pydicom.config.WARN": [[84, "pydicom-config-warn"]], "pydicom.config.allow_DS_float": [[85, "pydicom-config-allow-ds-float"]], "pydicom.config.assume_implicit_vr_switch": [[86, "pydicom-config-assume-implicit-vr-switch"]], "pydicom.config.convert_wrong_length_to_UN": [[87, "pydicom-config-convert-wrong-length-to-un"]], "pydicom.config.data_element_callback": [[88, "pydicom-config-data-element-callback"]], "pydicom.config.data_element_callback_kwargs": [[89, "pydicom-config-data-element-callback-kwargs"]], "pydicom.config.datetime_conversion": [[90, "pydicom-config-datetime-conversion"]], "pydicom.config.debug": [[91, "pydicom-config-debug"]], "pydicom.config.enforce_valid_values": [[92, "pydicom-config-enforce-valid-values"]], "pydicom.config.future_behavior": [[93, "pydicom-config-future-behavior"]], "pydicom.config.pixel_data_handlers": [[94, "pydicom-config-pixel-data-handlers"]], "pydicom.config.reset_data_element_callback": [[95, "pydicom-config-reset-data-element-callback"]], "pydicom.config.settings": [[96, "pydicom-config-settings"]], "pydicom.config.show_file_meta": [[97, "pydicom-config-show-file-meta"]], "pydicom.config.use_DS_decimal": [[98, "pydicom-config-use-ds-decimal"]], "pydicom.config.use_DS_numpy": [[99, "pydicom-config-use-ds-numpy"]], "pydicom.config.use_IS_numpy": [[100, "pydicom-config-use-is-numpy"]], "pydicom.data.get_charset_files": [[101, "pydicom-data-get-charset-files"]], "pydicom.data.get_palette_files": [[102, "pydicom-data-get-palette-files"]], "pydicom.data.get_testdata_file": [[103, "pydicom-data-get-testdata-file"]], "pydicom.data.get_testdata_files": [[104, "pydicom-data-get-testdata-files"]], "pydicom.datadict.add_dict_entries": [[105, "pydicom-datadict-add-dict-entries"]], "pydicom.datadict.add_dict_entry": [[106, "pydicom-datadict-add-dict-entry"]], "pydicom.datadict.add_private_dict_entries": [[107, "pydicom-datadict-add-private-dict-entries"]], "pydicom.datadict.add_private_dict_entry": [[108, "pydicom-datadict-add-private-dict-entry"]], "pydicom.datadict.dictionary_VM": [[109, "pydicom-datadict-dictionary-vm"]], "pydicom.datadict.dictionary_VR": [[110, "pydicom-datadict-dictionary-vr"]], "pydicom.datadict.dictionary_description": [[111, "pydicom-datadict-dictionary-description"]], "pydicom.datadict.dictionary_has_tag": [[112, "pydicom-datadict-dictionary-has-tag"]], "pydicom.datadict.dictionary_is_retired": [[113, "pydicom-datadict-dictionary-is-retired"]], "pydicom.datadict.dictionary_keyword": [[114, "pydicom-datadict-dictionary-keyword"]], "pydicom.datadict.get_entry": [[115, "pydicom-datadict-get-entry"]], "pydicom.datadict.get_private_entry": [[116, "pydicom-datadict-get-private-entry"]], "pydicom.datadict.keyword_for_tag": [[117, "pydicom-datadict-keyword-for-tag"]], "pydicom.datadict.mask_match": [[118, "pydicom-datadict-mask-match"]], "pydicom.datadict.private_dictionary_VM": [[119, "pydicom-datadict-private-dictionary-vm"]], "pydicom.datadict.private_dictionary_VR": [[120, "pydicom-datadict-private-dictionary-vr"]], "pydicom.datadict.private_dictionary_description": [[121, "pydicom-datadict-private-dictionary-description"]], "pydicom.datadict.repeater_has_keyword": [[122, "pydicom-datadict-repeater-has-keyword"]], "pydicom.datadict.repeater_has_tag": [[123, "pydicom-datadict-repeater-has-tag"]], "pydicom.datadict.tag_for_keyword": [[124, "pydicom-datadict-tag-for-keyword"]], "pydicom.dataelem.DataElement": [[125, "pydicom-dataelem-dataelement"]], "pydicom.dataelem.DataElement_from_raw": [[126, "pydicom-dataelem-dataelement-from-raw"]], "pydicom.dataelem.RawDataElement": [[127, "pydicom-dataelem-rawdataelement"]], "pydicom.dataset.Dataset": [[128, "pydicom-dataset-dataset"]], "pydicom.dataset.FileDataset": [[129, "pydicom-dataset-filedataset"]], "pydicom.dataset.FileMetaDataset": [[130, "pydicom-dataset-filemetadataset"]], "pydicom.dataset.PrivateBlock": [[131, "pydicom-dataset-privateblock"]], "pydicom.dataset.validate_file_meta": [[132, "pydicom-dataset-validate-file-meta"]], "pydicom.encaps.decode_data_sequence": [[133, "pydicom-encaps-decode-data-sequence"]], "pydicom.encaps.defragment_data": [[134, "pydicom-encaps-defragment-data"]], "pydicom.encaps.encapsulate": [[135, "pydicom-encaps-encapsulate"]], "pydicom.encaps.encapsulate_extended": [[136, "pydicom-encaps-encapsulate-extended"]], "pydicom.encaps.fragment_frame": [[137, "pydicom-encaps-fragment-frame"]], "pydicom.encaps.generate_pixel_data": [[138, "pydicom-encaps-generate-pixel-data"]], "pydicom.encaps.generate_pixel_data_fragment": [[139, "pydicom-encaps-generate-pixel-data-fragment"]], "pydicom.encaps.generate_pixel_data_frame": [[140, "pydicom-encaps-generate-pixel-data-frame"]], "pydicom.encaps.get_frame_offsets": [[141, "pydicom-encaps-get-frame-offsets"]], "pydicom.encaps.itemize_fragment": [[142, "pydicom-encaps-itemize-fragment"]], "pydicom.encaps.itemize_frame": [[143, "pydicom-encaps-itemize-frame"]], "pydicom.encaps.read_item": [[144, "pydicom-encaps-read-item"]], "pydicom.encoders.RLELosslessEncoder": [[145, "pydicom-encoders-rlelosslessencoder"]], "pydicom.encoders.base.Encoder": [[146, "pydicom-encoders-base-encoder"]], "pydicom.encoders.get_encoder": [[147, "pydicom-encoders-get-encoder"]], "pydicom.errors.InvalidDicomError": [[148, "pydicom-errors-invaliddicomerror"]], "pydicom.filebase.DicomBytesIO": [[149, "pydicom-filebase-dicombytesio"]], "pydicom.filebase.DicomFile": [[150, "pydicom-filebase-dicomfile"]], "pydicom.filebase.DicomFileLike": [[151, "pydicom-filebase-dicomfilelike"]], "pydicom.filebase.DicomIO": [[152, "pydicom-filebase-dicomio"]], "pydicom.filereader.data_element_generator": [[153, "pydicom-filereader-data-element-generator"]], "pydicom.filereader.data_element_offset_to_value": [[154, "pydicom-filereader-data-element-offset-to-value"]], "pydicom.filereader.dcmread": [[155, "pydicom-filereader-dcmread"]], "pydicom.filereader.read_dataset": [[156, "pydicom-filereader-read-dataset"]], "pydicom.filereader.read_deferred_data_element": [[157, "pydicom-filereader-read-deferred-data-element"]], "pydicom.filereader.read_file_meta_info": [[158, "pydicom-filereader-read-file-meta-info"]], "pydicom.filereader.read_partial": [[159, "pydicom-filereader-read-partial"]], "pydicom.filereader.read_preamble": [[160, "pydicom-filereader-read-preamble"]], "pydicom.filereader.read_sequence": [[161, "pydicom-filereader-read-sequence"]], "pydicom.filereader.read_sequence_item": [[162, "pydicom-filereader-read-sequence-item"]], "pydicom.fileset.DIRECTORY_RECORDERS": [[163, "pydicom-fileset-directory-recorders"]], "pydicom.fileset.FileInstance": [[164, "pydicom-fileset-fileinstance"]], "pydicom.fileset.FileSet": [[165, "pydicom-fileset-fileset"]], "pydicom.fileset.RecordNode": [[166, "pydicom-fileset-recordnode"]], "pydicom.fileset.generate_filename": [[167, "pydicom-fileset-generate-filename"]], "pydicom.fileset.is_conformant_file_id": [[168, "pydicom-fileset-is-conformant-file-id"]], "pydicom.fileutil.absorb_delimiter_item": [[169, "pydicom-fileutil-absorb-delimiter-item"]], "pydicom.fileutil.find_bytes": [[170, "pydicom-fileutil-find-bytes"]], "pydicom.fileutil.find_delimiter": [[171, "pydicom-fileutil-find-delimiter"]], "pydicom.fileutil.length_of_undefined_length": [[172, "pydicom-fileutil-length-of-undefined-length"]], "pydicom.fileutil.read_undefined_length_value": [[173, "pydicom-fileutil-read-undefined-length-value"]], "pydicom.filewriter.correct_ambiguous_vr": [[174, "pydicom-filewriter-correct-ambiguous-vr"]], "pydicom.filewriter.correct_ambiguous_vr_element": [[175, "pydicom-filewriter-correct-ambiguous-vr-element"]], "pydicom.filewriter.dcmwrite": [[176, "pydicom-filewriter-dcmwrite"]], "pydicom.filewriter.multi_string": [[177, "pydicom-filewriter-multi-string"]], "pydicom.filewriter.write_ATvalue": [[178, "pydicom-filewriter-write-atvalue"]], "pydicom.filewriter.write_DA": [[179, "pydicom-filewriter-write-da"]], "pydicom.filewriter.write_DT": [[180, "pydicom-filewriter-write-dt"]], "pydicom.filewriter.write_OBvalue": [[181, "pydicom-filewriter-write-obvalue"]], "pydicom.filewriter.write_OWvalue": [[182, "pydicom-filewriter-write-owvalue"]], "pydicom.filewriter.write_PN": [[183, "pydicom-filewriter-write-pn"]], "pydicom.filewriter.write_TM": [[184, "pydicom-filewriter-write-tm"]], "pydicom.filewriter.write_UI": [[185, "pydicom-filewriter-write-ui"]], "pydicom.filewriter.write_UN": [[186, "pydicom-filewriter-write-un"]], "pydicom.filewriter.write_data_element": [[187, "pydicom-filewriter-write-data-element"]], "pydicom.filewriter.write_dataset": [[188, "pydicom-filewriter-write-dataset"]], "pydicom.filewriter.write_file_meta_info": [[189, "pydicom-filewriter-write-file-meta-info"]], "pydicom.filewriter.write_number_string": [[190, "pydicom-filewriter-write-number-string"]], "pydicom.filewriter.write_numbers": [[191, "pydicom-filewriter-write-numbers"]], "pydicom.filewriter.write_sequence": [[192, "pydicom-filewriter-write-sequence"]], "pydicom.filewriter.write_sequence_item": [[193, "pydicom-filewriter-write-sequence-item"]], "pydicom.filewriter.write_string": [[194, "pydicom-filewriter-write-string"]], "pydicom.filewriter.write_text": [[195, "pydicom-filewriter-write-text"]], "pydicom.misc.is_dicom": [[196, "pydicom-misc-is-dicom"]], "pydicom.misc.size_in_bytes": [[197, "pydicom-misc-size-in-bytes"]], "pydicom.multival.MultiValue": [[198, "pydicom-multival-multivalue"]], "pydicom.overlays.numpy_handler": [[199, "module-pydicom.overlays.numpy_handler"]], "pydicom.pixel_data_handlers.apply_color_lut": [[200, "pydicom-pixel-data-handlers-apply-color-lut"]], "pydicom.pixel_data_handlers.apply_modality_lut": [[201, "pydicom-pixel-data-handlers-apply-modality-lut"]], "pydicom.pixel_data_handlers.apply_rescale": [[202, "pydicom-pixel-data-handlers-apply-rescale"]], "pydicom.pixel_data_handlers.apply_voi": [[203, "pydicom-pixel-data-handlers-apply-voi"]], "pydicom.pixel_data_handlers.apply_voi_lut": [[204, "pydicom-pixel-data-handlers-apply-voi-lut"]], "pydicom.pixel_data_handlers.apply_windowing": [[205, "pydicom-pixel-data-handlers-apply-windowing"]], "pydicom.pixel_data_handlers.convert_color_space": [[206, "pydicom-pixel-data-handlers-convert-color-space"]], "pydicom.pixel_data_handlers.gdcm_handler": [[207, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[208, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "pydicom.pixel_data_handlers.numpy_handler": [[209, "module-pydicom.pixel_data_handlers.numpy_handler"]], "pydicom.pixel_data_handlers.pillow_handler": [[210, "module-pydicom.pixel_data_handlers.pillow_handler"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[211, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "pydicom.pixel_data_handlers.rle_handler": [[212, "module-pydicom.pixel_data_handlers.rle_handler"]], "pydicom.pixel_data_handlers.util": [[213, "module-pydicom.pixel_data_handlers.util"]], "pydicom.sequence.Sequence": [[214, "pydicom-sequence-sequence"]], "pydicom.tag.BaseTag": [[215, "pydicom-tag-basetag"]], "pydicom.tag.Tag": [[216, "pydicom-tag-tag"]], "pydicom.tag.TupleTag": [[217, "pydicom-tag-tupletag"]], "pydicom.tag.tag_in_exception": [[218, "pydicom-tag-tag-in-exception"]], "pydicom.uid.AcquisitionContextSRStorage": [[219, "pydicom-uid-acquisitioncontextsrstorage"]], "pydicom.uid.AdvancedBlendingPresentationStateStorage": [[220, "pydicom-uid-advancedblendingpresentationstatestorage"]], "pydicom.uid.AllTransferSyntaxes": [[221, "pydicom-uid-alltransfersyntaxes"]], "pydicom.uid.AmbulatoryECGWaveformStorage": [[222, "pydicom-uid-ambulatoryecgwaveformstorage"]], "pydicom.uid.ArterialPulseWaveformStorage": [[223, "pydicom-uid-arterialpulsewaveformstorage"]], "pydicom.uid.AutorefractionMeasurementsStorage": [[224, "pydicom-uid-autorefractionmeasurementsstorage"]], "pydicom.uid.BasicStructuredDisplayStorage": [[225, "pydicom-uid-basicstructureddisplaystorage"]], "pydicom.uid.BasicTextSRStorage": [[226, "pydicom-uid-basictextsrstorage"]], "pydicom.uid.BasicVoiceAudioWaveformStorage": [[227, "pydicom-uid-basicvoiceaudiowaveformstorage"]], "pydicom.uid.BlendingSoftcopyPresentationStateStorage": [[228, "pydicom-uid-blendingsoftcopypresentationstatestorage"]], "pydicom.uid.BodyPositionWaveformStorage": [[229, "pydicom-uid-bodypositionwaveformstorage"]], "pydicom.uid.BreastProjectionXRayImageStorageForPresentation": [[230, "pydicom-uid-breastprojectionxrayimagestorageforpresentation"]], "pydicom.uid.BreastProjectionXRayImageStorageForProcessing": [[231, "pydicom-uid-breastprojectionxrayimagestorageforprocessing"]], "pydicom.uid.BreastTomosynthesisImageStorage": [[232, "pydicom-uid-breasttomosynthesisimagestorage"]], "pydicom.uid.CArmPhotonElectronRadiationRecordStorage": [[233, "pydicom-uid-carmphotonelectronradiationrecordstorage"]], "pydicom.uid.CArmPhotonElectronRadiationStorage": [[234, "pydicom-uid-carmphotonelectronradiationstorage"]], "pydicom.uid.CTDefinedProcedureProtocolStorage": [[235, "pydicom-uid-ctdefinedprocedureprotocolstorage"]], "pydicom.uid.CTImageStorage": [[236, "pydicom-uid-ctimagestorage"]], "pydicom.uid.CTPerformedProcedureProtocolStorage": [[237, "pydicom-uid-ctperformedprocedureprotocolstorage"]], "pydicom.uid.CardiacElectrophysiologyWaveformStorage": [[238, "pydicom-uid-cardiacelectrophysiologywaveformstorage"]], "pydicom.uid.ChestCADSRStorage": [[239, "pydicom-uid-chestcadsrstorage"]], "pydicom.uid.ColonCADSRStorage": [[240, "pydicom-uid-coloncadsrstorage"]], "pydicom.uid.ColorPaletteStorage": [[241, "pydicom-uid-colorpalettestorage"]], "pydicom.uid.ColorSoftcopyPresentationStateStorage": [[242, "pydicom-uid-colorsoftcopypresentationstatestorage"]], "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage": [[243, "pydicom-uid-compositingplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.Comprehensive3DSRStorage": [[244, "pydicom-uid-comprehensive3dsrstorage"]], "pydicom.uid.ComprehensiveSRStorage": [[245, "pydicom-uid-comprehensivesrstorage"]], "pydicom.uid.ComputedRadiographyImageStorage": [[246, "pydicom-uid-computedradiographyimagestorage"]], "pydicom.uid.ConfocalMicroscopyImageStorage": [[247, "pydicom-uid-confocalmicroscopyimagestorage"]], "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage": [[248, "pydicom-uid-confocalmicroscopytiledpyramidalimagestorage"]], "pydicom.uid.ContentAssessmentResultsStorage": [[249, "pydicom-uid-contentassessmentresultsstorage"]], "pydicom.uid.CornealTopographyMapStorage": [[250, "pydicom-uid-cornealtopographymapstorage"]], "pydicom.uid.DICOS2DAITStorage": [[251, "pydicom-uid-dicos2daitstorage"]], "pydicom.uid.DICOS3DAITStorage": [[252, "pydicom-uid-dicos3daitstorage"]], "pydicom.uid.DICOSCTImageStorage": [[253, "pydicom-uid-dicosctimagestorage"]], "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation": [[254, "pydicom-uid-dicosdigitalxrayimagestorageforpresentation"]], "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing": [[255, "pydicom-uid-dicosdigitalxrayimagestorageforprocessing"]], "pydicom.uid.DICOSQuadrupoleResonanceStorage": [[256, "pydicom-uid-dicosquadrupoleresonancestorage"]], "pydicom.uid.DICOSThreatDetectionReportStorage": [[257, "pydicom-uid-dicosthreatdetectionreportstorage"]], "pydicom.uid.DeflatedExplicitVRLittleEndian": [[258, "pydicom-uid-deflatedexplicitvrlittleendian"]], "pydicom.uid.DeformableSpatialRegistrationStorage": [[259, "pydicom-uid-deformablespatialregistrationstorage"]], "pydicom.uid.DermoscopicPhotographyImageStorage": [[260, "pydicom-uid-dermoscopicphotographyimagestorage"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation": [[261, "pydicom-uid-digitalintraoralxrayimagestorageforpresentation"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing": [[262, "pydicom-uid-digitalintraoralxrayimagestorageforprocessing"]], "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation": [[263, "pydicom-uid-digitalmammographyxrayimagestorageforpresentation"]], "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing": [[264, "pydicom-uid-digitalmammographyxrayimagestorageforprocessing"]], "pydicom.uid.DigitalXRayImageStorageForPresentation": [[265, "pydicom-uid-digitalxrayimagestorageforpresentation"]], "pydicom.uid.DigitalXRayImageStorageForProcessing": [[266, "pydicom-uid-digitalxrayimagestorageforprocessing"]], "pydicom.uid.EddyCurrentImageStorage": [[267, "pydicom-uid-eddycurrentimagestorage"]], "pydicom.uid.EddyCurrentMultiFrameImageStorage": [[268, "pydicom-uid-eddycurrentmultiframeimagestorage"]], "pydicom.uid.ElectromyogramWaveformStorage": [[269, "pydicom-uid-electromyogramwaveformstorage"]], "pydicom.uid.ElectrooculogramWaveformStorage": [[270, "pydicom-uid-electrooculogramwaveformstorage"]], "pydicom.uid.EncapsulatedCDAStorage": [[271, "pydicom-uid-encapsulatedcdastorage"]], "pydicom.uid.EncapsulatedMTLStorage": [[272, "pydicom-uid-encapsulatedmtlstorage"]], "pydicom.uid.EncapsulatedOBJStorage": [[273, "pydicom-uid-encapsulatedobjstorage"]], "pydicom.uid.EncapsulatedPDFStorage": [[274, "pydicom-uid-encapsulatedpdfstorage"]], "pydicom.uid.EncapsulatedSTLStorage": [[275, "pydicom-uid-encapsulatedstlstorage"]], "pydicom.uid.EnhancedCTImageStorage": [[276, "pydicom-uid-enhancedctimagestorage"]], "pydicom.uid.EnhancedContinuousRTImageStorage": [[277, "pydicom-uid-enhancedcontinuousrtimagestorage"]], "pydicom.uid.EnhancedMRColorImageStorage": [[278, "pydicom-uid-enhancedmrcolorimagestorage"]], "pydicom.uid.EnhancedMRImageStorage": [[279, "pydicom-uid-enhancedmrimagestorage"]], "pydicom.uid.EnhancedPETImageStorage": [[280, "pydicom-uid-enhancedpetimagestorage"]], "pydicom.uid.EnhancedRTImageStorage": [[281, "pydicom-uid-enhancedrtimagestorage"]], "pydicom.uid.EnhancedSRStorage": [[282, "pydicom-uid-enhancedsrstorage"]], "pydicom.uid.EnhancedUSVolumeStorage": [[283, "pydicom-uid-enhancedusvolumestorage"]], "pydicom.uid.EnhancedXAImageStorage": [[284, "pydicom-uid-enhancedxaimagestorage"]], "pydicom.uid.EnhancedXRFImageStorage": [[285, "pydicom-uid-enhancedxrfimagestorage"]], "pydicom.uid.EnhancedXRayRadiationDoseSRStorage": [[286, "pydicom-uid-enhancedxrayradiationdosesrstorage"]], "pydicom.uid.ExplicitVRBigEndian": [[287, "pydicom-uid-explicitvrbigendian"]], "pydicom.uid.ExplicitVRLittleEndian": [[288, "pydicom-uid-explicitvrlittleendian"]], "pydicom.uid.ExtensibleSRStorage": [[289, "pydicom-uid-extensiblesrstorage"]], "pydicom.uid.General32bitECGWaveformStorage": [[290, "pydicom-uid-general32bitecgwaveformstorage"]], "pydicom.uid.GeneralAudioWaveformStorage": [[291, "pydicom-uid-generalaudiowaveformstorage"]], "pydicom.uid.GeneralECGWaveformStorage": [[292, "pydicom-uid-generalecgwaveformstorage"]], "pydicom.uid.GenericImplantTemplateStorage": [[293, "pydicom-uid-genericimplanttemplatestorage"]], "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage": [[294, "pydicom-uid-grayscaleplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage": [[295, "pydicom-uid-grayscalesoftcopypresentationstatestorage"]], "pydicom.uid.HEVCM10P51": [[296, "pydicom-uid-hevcm10p51"]], "pydicom.uid.HEVCMP51": [[297, "pydicom-uid-hevcmp51"]], "pydicom.uid.HTJ2K": [[298, "pydicom-uid-htj2k"]], "pydicom.uid.HTJ2KLossless": [[299, "pydicom-uid-htj2klossless"]], "pydicom.uid.HTJ2KLosslessRPCL": [[300, "pydicom-uid-htj2klosslessrpcl"]], "pydicom.uid.HangingProtocolStorage": [[301, "pydicom-uid-hangingprotocolstorage"]], "pydicom.uid.HemodynamicWaveformStorage": [[302, "pydicom-uid-hemodynamicwaveformstorage"]], "pydicom.uid.ImplantAssemblyTemplateStorage": [[303, "pydicom-uid-implantassemblytemplatestorage"]], "pydicom.uid.ImplantTemplateGroupStorage": [[304, "pydicom-uid-implanttemplategroupstorage"]], "pydicom.uid.ImplantationPlanSRStorage": [[305, "pydicom-uid-implantationplansrstorage"]], "pydicom.uid.ImplicitVRLittleEndian": [[306, "pydicom-uid-implicitvrlittleendian"]], "pydicom.uid.IntraocularLensCalculationsStorage": [[307, "pydicom-uid-intraocularlenscalculationsstorage"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation": [[308, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforpresentation"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing": [[309, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforprocessing"]], "pydicom.uid.InventoryStorage": [[310, "pydicom-uid-inventorystorage"]], "pydicom.uid.JPEG2000": [[311, "pydicom-uid-jpeg2000"]], "pydicom.uid.JPEG2000Lossless": [[312, "pydicom-uid-jpeg2000lossless"]], "pydicom.uid.JPEG2000MC": [[313, "pydicom-uid-jpeg2000mc"]], "pydicom.uid.JPEG2000MCLossless": [[314, "pydicom-uid-jpeg2000mclossless"]], "pydicom.uid.JPEG2000TransferSyntaxes": [[315, "pydicom-uid-jpeg2000transfersyntaxes"]], "pydicom.uid.JPEGBaseline8Bit": [[316, "pydicom-uid-jpegbaseline8bit"]], "pydicom.uid.JPEGExtended12Bit": [[317, "pydicom-uid-jpegextended12bit"]], "pydicom.uid.JPEGLSLossless": [[318, "pydicom-uid-jpeglslossless"]], "pydicom.uid.JPEGLSNearLossless": [[319, "pydicom-uid-jpeglsnearlossless"]], "pydicom.uid.JPEGLSTransferSyntaxes": [[320, "pydicom-uid-jpeglstransfersyntaxes"]], "pydicom.uid.JPEGLossless": [[321, "pydicom-uid-jpeglossless"]], "pydicom.uid.JPEGLosslessSV1": [[322, "pydicom-uid-jpeglosslesssv1"]], "pydicom.uid.JPEGTransferSyntaxes": [[323, "pydicom-uid-jpegtransfersyntaxes"]], "pydicom.uid.JPIPHTJ2KReferenced": [[324, "pydicom-uid-jpiphtj2kreferenced"]], "pydicom.uid.JPIPHTJ2KReferencedDeflate": [[325, "pydicom-uid-jpiphtj2kreferenceddeflate"]], "pydicom.uid.KeratometryMeasurementsStorage": [[326, "pydicom-uid-keratometrymeasurementsstorage"]], "pydicom.uid.KeyObjectSelectionDocumentStorage": [[327, "pydicom-uid-keyobjectselectiondocumentstorage"]], "pydicom.uid.LegacyConvertedEnhancedCTImageStorage": [[328, "pydicom-uid-legacyconvertedenhancedctimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedMRImageStorage": [[329, "pydicom-uid-legacyconvertedenhancedmrimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedPETImageStorage": [[330, "pydicom-uid-legacyconvertedenhancedpetimagestorage"]], "pydicom.uid.LensometryMeasurementsStorage": [[331, "pydicom-uid-lensometrymeasurementsstorage"]], "pydicom.uid.MPEG2MPHL": [[332, "pydicom-uid-mpeg2mphl"]], "pydicom.uid.MPEG2MPHLF": [[333, "pydicom-uid-mpeg2mphlf"]], "pydicom.uid.MPEG2MPML": [[334, "pydicom-uid-mpeg2mpml"]], "pydicom.uid.MPEG2MPMLF": [[335, "pydicom-uid-mpeg2mpmlf"]], "pydicom.uid.MPEG4HP41": [[336, "pydicom-uid-mpeg4hp41"]], "pydicom.uid.MPEG4HP41BD": [[337, "pydicom-uid-mpeg4hp41bd"]], "pydicom.uid.MPEG4HP41BDF": [[338, "pydicom-uid-mpeg4hp41bdf"]], "pydicom.uid.MPEG4HP41F": [[339, "pydicom-uid-mpeg4hp41f"]], "pydicom.uid.MPEG4HP422D": [[340, "pydicom-uid-mpeg4hp422d"]], "pydicom.uid.MPEG4HP422DF": [[341, "pydicom-uid-mpeg4hp422df"]], "pydicom.uid.MPEG4HP423D": [[342, "pydicom-uid-mpeg4hp423d"]], "pydicom.uid.MPEG4HP423DF": [[343, "pydicom-uid-mpeg4hp423df"]], "pydicom.uid.MPEG4HP42STEREO": [[344, "pydicom-uid-mpeg4hp42stereo"]], "pydicom.uid.MPEG4HP42STEREOF": [[345, "pydicom-uid-mpeg4hp42stereof"]], "pydicom.uid.MPEGTransferSyntaxes": [[346, "pydicom-uid-mpegtransfersyntaxes"]], "pydicom.uid.MRImageStorage": [[347, "pydicom-uid-mrimagestorage"]], "pydicom.uid.MRSpectroscopyStorage": [[348, "pydicom-uid-mrspectroscopystorage"]], "pydicom.uid.MacularGridThicknessAndVolumeReportStorage": [[349, "pydicom-uid-maculargridthicknessandvolumereportstorage"]], "pydicom.uid.MammographyCADSRStorage": [[350, "pydicom-uid-mammographycadsrstorage"]], "pydicom.uid.MediaStorageDirectoryStorage": [[351, "pydicom-uid-mediastoragedirectorystorage"]], "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage": [[352, "pydicom-uid-microscopybulksimpleannotationsstorage"]], "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage": [[353, "pydicom-uid-multiframegrayscalebytesecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage": [[354, "pydicom-uid-multiframegrayscalewordsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage": [[355, "pydicom-uid-multiframesinglebitsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage": [[356, "pydicom-uid-multiframetruecolorsecondarycaptureimagestorage"]], "pydicom.uid.MultichannelRespiratoryWaveformStorage": [[357, "pydicom-uid-multichannelrespiratorywaveformstorage"]], "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage": [[358, "pydicom-uid-multiplevolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.NuclearMedicineImageStorage": [[359, "pydicom-uid-nuclearmedicineimagestorage"]], "pydicom.uid.OphthalmicAxialMeasurementsStorage": [[360, "pydicom-uid-ophthalmicaxialmeasurementsstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage": [[361, "pydicom-uid-ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage": [[362, "pydicom-uid-ophthalmicopticalcoherencetomographyenfaceimagestorage"]], "pydicom.uid.OphthalmicPhotography16BitImageStorage": [[363, "pydicom-uid-ophthalmicphotography16bitimagestorage"]], "pydicom.uid.OphthalmicPhotography8BitImageStorage": [[364, "pydicom-uid-ophthalmicphotography8bitimagestorage"]], "pydicom.uid.OphthalmicThicknessMapStorage": [[365, "pydicom-uid-ophthalmicthicknessmapstorage"]], "pydicom.uid.OphthalmicTomographyImageStorage": [[366, "pydicom-uid-ophthalmictomographyimagestorage"]], "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage": [[367, "pydicom-uid-ophthalmicvisualfieldstaticperimetrymeasurementsstorage"]], "pydicom.uid.PYDICOM_IMPLEMENTATION_UID": [[368, "pydicom-uid-pydicom-implementation-uid"]], "pydicom.uid.PYDICOM_ROOT_UID": [[369, "pydicom-uid-pydicom-root-uid"]], "pydicom.uid.ParametricMapStorage": [[370, "pydicom-uid-parametricmapstorage"]], "pydicom.uid.PatientRadiationDoseSRStorage": [[371, "pydicom-uid-patientradiationdosesrstorage"]], "pydicom.uid.PerformedImagingAgentAdministrationSRStorage": [[372, "pydicom-uid-performedimagingagentadministrationsrstorage"]], "pydicom.uid.PhotoacousticImageStorage": [[373, "pydicom-uid-photoacousticimagestorage"]], "pydicom.uid.PlannedImagingAgentAdministrationSRStorage": [[374, "pydicom-uid-plannedimagingagentadministrationsrstorage"]], "pydicom.uid.PositronEmissionTomographyImageStorage": [[375, "pydicom-uid-positronemissiontomographyimagestorage"]], "pydicom.uid.ProcedureLogStorage": [[376, "pydicom-uid-procedurelogstorage"]], "pydicom.uid.ProtocolApprovalStorage": [[377, "pydicom-uid-protocolapprovalstorage"]], "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage": [[378, "pydicom-uid-pseudocolorsoftcopypresentationstatestorage"]], "pydicom.uid.RE_VALID_UID": [[379, "pydicom-uid-re-valid-uid"]], "pydicom.uid.RE_VALID_UID_PREFIX": [[380, "pydicom-uid-re-valid-uid-prefix"]], "pydicom.uid.RLELossless": [[381, "pydicom-uid-rlelossless"]], "pydicom.uid.RLETransferSyntaxes": [[382, "pydicom-uid-rletransfersyntaxes"]], "pydicom.uid.RTBeamsDeliveryInstructionStorage": [[383, "pydicom-uid-rtbeamsdeliveryinstructionstorage"]], "pydicom.uid.RTBeamsTreatmentRecordStorage": [[384, "pydicom-uid-rtbeamstreatmentrecordstorage"]], "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage": [[385, "pydicom-uid-rtbrachyapplicationsetupdeliveryinstructionstorage"]], "pydicom.uid.RTBrachyTreatmentRecordStorage": [[386, "pydicom-uid-rtbrachytreatmentrecordstorage"]], "pydicom.uid.RTDoseStorage": [[387, "pydicom-uid-rtdosestorage"]], "pydicom.uid.RTImageStorage": [[388, "pydicom-uid-rtimagestorage"]], "pydicom.uid.RTIonBeamsTreatmentRecordStorage": [[389, "pydicom-uid-rtionbeamstreatmentrecordstorage"]], "pydicom.uid.RTIonPlanStorage": [[390, "pydicom-uid-rtionplanstorage"]], "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage": [[391, "pydicom-uid-rtpatientpositionacquisitioninstructionstorage"]], "pydicom.uid.RTPhysicianIntentStorage": [[392, "pydicom-uid-rtphysicianintentstorage"]], "pydicom.uid.RTPlanStorage": [[393, "pydicom-uid-rtplanstorage"]], "pydicom.uid.RTRadiationRecordSetStorage": [[394, "pydicom-uid-rtradiationrecordsetstorage"]], "pydicom.uid.RTRadiationSalvageRecordStorage": [[395, "pydicom-uid-rtradiationsalvagerecordstorage"]], "pydicom.uid.RTRadiationSetDeliveryInstructionStorage": [[396, "pydicom-uid-rtradiationsetdeliveryinstructionstorage"]], "pydicom.uid.RTRadiationSetStorage": [[397, "pydicom-uid-rtradiationsetstorage"]], "pydicom.uid.RTSegmentAnnotationStorage": [[398, "pydicom-uid-rtsegmentannotationstorage"]], "pydicom.uid.RTStructureSetStorage": [[399, "pydicom-uid-rtstructuresetstorage"]], "pydicom.uid.RTTreatmentPreparationStorage": [[400, "pydicom-uid-rttreatmentpreparationstorage"]], "pydicom.uid.RTTreatmentSummaryRecordStorage": [[401, "pydicom-uid-rttreatmentsummaryrecordstorage"]], "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage": [[402, "pydicom-uid-radiopharmaceuticalradiationdosesrstorage"]], "pydicom.uid.RawDataStorage": [[403, "pydicom-uid-rawdatastorage"]], "pydicom.uid.RealWorldValueMappingStorage": [[404, "pydicom-uid-realworldvaluemappingstorage"]], "pydicom.uid.RespiratoryWaveformStorage": [[405, "pydicom-uid-respiratorywaveformstorage"]], "pydicom.uid.RoboticArmRadiationStorage": [[406, "pydicom-uid-roboticarmradiationstorage"]], "pydicom.uid.RoboticRadiationRecordStorage": [[407, "pydicom-uid-roboticradiationrecordstorage"]], "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage": [[408, "pydicom-uid-routinescalpelectroencephalogramwaveformstorage"]], "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo": [[409, "pydicom-uid-smptest211020uncompressedinterlacedactivevideo"]], "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo": [[410, "pydicom-uid-smptest211020uncompressedprogressiveactivevideo"]], "pydicom.uid.SMPTEST211030PCMDigitalAudio": [[411, "pydicom-uid-smptest211030pcmdigitalaudio"]], "pydicom.uid.SecondaryCaptureImageStorage": [[412, "pydicom-uid-secondarycaptureimagestorage"]], "pydicom.uid.SegmentationStorage": [[413, "pydicom-uid-segmentationstorage"]], "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage": [[414, "pydicom-uid-segmentedvolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.SimplifiedAdultEchoSRStorage": [[415, "pydicom-uid-simplifiedadultechosrstorage"]], "pydicom.uid.SleepElectroencephalogramWaveformStorage": [[416, "pydicom-uid-sleepelectroencephalogramwaveformstorage"]], "pydicom.uid.SpatialFiducialsStorage": [[417, "pydicom-uid-spatialfiducialsstorage"]], "pydicom.uid.SpatialRegistrationStorage": [[418, "pydicom-uid-spatialregistrationstorage"]], "pydicom.uid.SpectaclePrescriptionReportStorage": [[419, "pydicom-uid-spectacleprescriptionreportstorage"]], "pydicom.uid.StereometricRelationshipStorage": [[420, "pydicom-uid-stereometricrelationshipstorage"]], "pydicom.uid.SubjectiveRefractionMeasurementsStorage": [[421, "pydicom-uid-subjectiverefractionmeasurementsstorage"]], "pydicom.uid.SurfaceScanMeshStorage": [[422, "pydicom-uid-surfacescanmeshstorage"]], "pydicom.uid.SurfaceScanPointCloudStorage": [[423, "pydicom-uid-surfacescanpointcloudstorage"]], "pydicom.uid.SurfaceSegmentationStorage": [[424, "pydicom-uid-surfacesegmentationstorage"]], "pydicom.uid.TomotherapeuticRadiationRecordStorage": [[425, "pydicom-uid-tomotherapeuticradiationrecordstorage"]], "pydicom.uid.TomotherapeuticRadiationStorage": [[426, "pydicom-uid-tomotherapeuticradiationstorage"]], "pydicom.uid.TractographyResultsStorage": [[427, "pydicom-uid-tractographyresultsstorage"]], "pydicom.uid.TwelveLeadECGWaveformStorage": [[428, "pydicom-uid-twelveleadecgwaveformstorage"]], "pydicom.uid.UID": [[429, "pydicom-uid-uid"]], "pydicom.uid.UltrasoundImageStorage": [[430, "pydicom-uid-ultrasoundimagestorage"]], "pydicom.uid.UltrasoundMultiFrameImageStorage": [[431, "pydicom-uid-ultrasoundmultiframeimagestorage"]], "pydicom.uid.UncompressedTransferSyntaxes": [[432, "pydicom-uid-uncompressedtransfersyntaxes"]], "pydicom.uid.VLEndoscopicImageStorage": [[433, "pydicom-uid-vlendoscopicimagestorage"]], "pydicom.uid.VLMicroscopicImageStorage": [[434, "pydicom-uid-vlmicroscopicimagestorage"]], "pydicom.uid.VLPhotographicImageStorage": [[435, "pydicom-uid-vlphotographicimagestorage"]], "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage": [[436, "pydicom-uid-vlslidecoordinatesmicroscopicimagestorage"]], "pydicom.uid.VLWholeSlideMicroscopyImageStorage": [[437, "pydicom-uid-vlwholeslidemicroscopyimagestorage"]], "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage": [[438, "pydicom-uid-variablemodalitylutsoftcopypresentationstatestorage"]], "pydicom.uid.VideoEndoscopicImageStorage": [[439, "pydicom-uid-videoendoscopicimagestorage"]], "pydicom.uid.VideoMicroscopicImageStorage": [[440, "pydicom-uid-videomicroscopicimagestorage"]], "pydicom.uid.VideoPhotographicImageStorage": [[441, "pydicom-uid-videophotographicimagestorage"]], "pydicom.uid.VisualAcuityMeasurementsStorage": [[442, "pydicom-uid-visualacuitymeasurementsstorage"]], "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage": [[443, "pydicom-uid-volumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage": [[444, "pydicom-uid-widefieldophthalmicphotography3dcoordinatesimagestorage"]], "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage": [[445, "pydicom-uid-widefieldophthalmicphotographystereographicprojectionimagestorage"]], "pydicom.uid.XADefinedProcedureProtocolStorage": [[446, "pydicom-uid-xadefinedprocedureprotocolstorage"]], "pydicom.uid.XAPerformedProcedureProtocolStorage": [[447, "pydicom-uid-xaperformedprocedureprotocolstorage"]], "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage": [[448, "pydicom-uid-xaxrfgrayscalesoftcopypresentationstatestorage"]], "pydicom.uid.XRay3DAngiographicImageStorage": [[449, "pydicom-uid-xray3dangiographicimagestorage"]], "pydicom.uid.XRay3DCraniofacialImageStorage": [[450, "pydicom-uid-xray3dcraniofacialimagestorage"]], "pydicom.uid.XRayAngiographicImageStorage": [[451, "pydicom-uid-xrayangiographicimagestorage"]], "pydicom.uid.XRayRadiationDoseSRStorage": [[452, "pydicom-uid-xrayradiationdosesrstorage"]], "pydicom.uid.XRayRadiofluoroscopicImageStorage": [[453, "pydicom-uid-xrayradiofluoroscopicimagestorage"]], "pydicom.uid.generate_uid": [[454, "pydicom-uid-generate-uid"]], "pydicom.valuerep.DA": [[455, "pydicom-valuerep-da"]], "pydicom.valuerep.DS": [[456, "pydicom-valuerep-ds"]], "pydicom.valuerep.DSdecimal": [[457, "pydicom-valuerep-dsdecimal"]], "pydicom.valuerep.DSfloat": [[458, "pydicom-valuerep-dsfloat"]], "pydicom.valuerep.DT": [[459, "pydicom-valuerep-dt"]], "pydicom.valuerep.IS": [[460, "pydicom-valuerep-is"]], "pydicom.valuerep.ISfloat": [[461, "pydicom-valuerep-isfloat"]], "pydicom.valuerep.PersonName": [[462, "pydicom-valuerep-personname"]], "pydicom.valuerep.TM": [[463, "pydicom-valuerep-tm"]], "pydicom.valuerep.VR": [[464, "pydicom-valuerep-vr"]], "pydicom.valuerep.format_number_as_ds": [[465, "pydicom-valuerep-format-number-as-ds"]], "pydicom.valuerep.is_valid_ds": [[466, "pydicom-valuerep-is-valid-ds"]], "pydicom.values.convert_AE_string": [[467, "pydicom-values-convert-ae-string"]], "pydicom.values.convert_ATvalue": [[468, "pydicom-values-convert-atvalue"]], "pydicom.values.convert_DA_string": [[469, "pydicom-values-convert-da-string"]], "pydicom.values.convert_DS_string": [[470, "pydicom-values-convert-ds-string"]], "pydicom.values.convert_DT_string": [[471, "pydicom-values-convert-dt-string"]], "pydicom.values.convert_IS_string": [[472, "pydicom-values-convert-is-string"]], "pydicom.values.convert_OBvalue": [[473, "pydicom-values-convert-obvalue"]], "pydicom.values.convert_OWvalue": [[474, "pydicom-values-convert-owvalue"]], "pydicom.values.convert_PN": [[475, "pydicom-values-convert-pn"]], "pydicom.values.convert_SQ": [[476, "pydicom-values-convert-sq"]], "pydicom.values.convert_TM_string": [[477, "pydicom-values-convert-tm-string"]], "pydicom.values.convert_UI": [[478, "pydicom-values-convert-ui"]], "pydicom.values.convert_UN": [[479, "pydicom-values-convert-un"]], "pydicom.values.convert_UR_string": [[480, "pydicom-values-convert-ur-string"]], "pydicom.values.convert_numbers": [[481, "pydicom-values-convert-numbers"]], "pydicom.values.convert_single_string": [[482, "pydicom-values-convert-single-string"]], "pydicom.values.convert_string": [[483, "pydicom-values-convert-string"]], "pydicom.values.convert_tag": [[484, "pydicom-values-convert-tag"]], "pydicom.values.convert_text": [[485, "pydicom-values-convert-text"]], "pydicom.values.convert_value": [[486, "pydicom-values-convert-value"]], "pydicom.values.multi_string": [[487, "pydicom-values-multi-string"]], "pydicom.waveforms.numpy_handler": [[488, "module-pydicom.waveforms.numpy_handler"]], "Bulk Data Handlers": [[489, "bulk-data-handlers"]], "Pixel Data Utilities": [[489, "pixel-data-utilities"]], "Overlay Data Handlers (pydicom.overlays)": [[490, "overlay-data-handlers-pydicom-overlays"]], "Pixel Data Handlers (pydicom.pixel_data_handlers)": [[491, "pixel-data-handlers-pydicom-pixel-data-handlers"]], "Waveform Data Handlers (pydicom.waveforms)": [[492, "waveform-data-handlers-pydicom-waveforms"]], "Miscellaneous (pydicom.misc)": [[494, "miscellaneous-pydicom-misc"]], "UID Definitions and Utilities (pydicom.uid)": [[495, "uid-definitions-and-utilities-pydicom-uid"]], "Transfer Syntax UIDs": [[495, "transfer-syntax-uids"]], "Transfer Syntax Lists": [[495, "transfer-syntax-lists"]], "UID Utilities": [[495, "uid-utilities"]], "Storage SOP Class UIDs": [[495, "storage-sop-class-uids"]], "Release notes": [[496, "release-notes"]], "Version 3.0.0": [[496, "version-3-0-0"], [517, "version-3-0-0"]], "Changes": [[496, "changes"], [496, "id1"], [496, "id5"], [496, "id8"], [507, "changes"], [508, "changes"], [509, "changes"], [510, "changes"], [512, "changes"], [514, "changes"], [515, "changes"], [516, "changes"], [517, "changes"]], "Removals": [[496, "removals"], [517, "removals"]], "Enhancements": [[496, "enhancements"], [496, "id2"], [496, "id6"], [496, "id9"], [503, "enhancements"], [504, "enhancements"], [506, "enhancements"], [507, "enhancements"], [508, "enhancements"], [509, "enhancements"], [511, "enhancements"], [512, "enhancements"], [514, "enhancements"], [515, "enhancements"], [516, "enhancements"], [517, "enhancements"]], "Fixes": [[496, "fixes"], [496, "id3"], [496, "id7"], [496, "id10"], [496, "id11"], [505, "fixes"], [506, "fixes"], [507, "fixes"], [508, "fixes"], [509, "fixes"], [510, "fixes"], [511, "fixes"], [512, "fixes"], [513, "fixes"], [514, "fixes"], [515, "fixes"], [516, "fixes"], [517, "fixes"]], "Deprecations": [[496, "deprecations"], [517, "deprecations"]], "Pydicom Internals": [[496, "pydicom-internals"], [496, "id4"], [516, "pydicom-internals"], [517, "pydicom-internals"]], "Version 2.4.0": [[496, "version-2-4-0"], [516, "version-2-4-0"]], "Version 2.3.0": [[496, "version-2-3-0"], [515, "version-2-3-0"]], "Version 2.2.0": [[496, "version-2-2-0"], [514, "version-2-2-0"]], "Version 2.1.1": [[496, "version-2-1-1"], [513, "version-2-1-1"]], "Version 2.1.0": [[496, "version-2-1-0"], [512, "version-2-1-0"]], "Changelog": [[496, "changelog"], [496, "id12"], [496, "id13"], [496, "id14"], [496, "id15"], [496, "id16"], [496, "id17"], [496, "id18"], [496, "id19"], [496, "id20"], [496, "id21"], [496, "id22"], [496, "id23"], [496, "id24"], [496, "id25"], [496, "id26"], [497, "changelog"], [498, "changelog"], [499, "changelog"], [500, "changelog"], [501, "changelog"], [502, "changelog"], [503, "changelog"], [504, "changelog"], [505, "changelog"], [506, "changelog"], [507, "changelog"], [508, "changelog"], [509, "changelog"], [510, "changelog"], [511, "changelog"], [512, "changelog"]], "Version 2.0.0": [[496, "version-2-0-0"], [511, "version-2-0-0"]], "Version 1.4.1": [[496, "version-1-4-1"], [510, "version-1-4-1"]], "Version 1.4.0": [[496, "version-1-4-0"], [509, "version-1-4-0"]], "Version 1.3.0": [[496, "version-1-3-0"], [508, "version-1-3-0"]], "Documentation": [[496, "documentation"], [508, "documentation"]], "Version 1.2.0": [[496, "version-1-2-0"], [507, "version-1-2-0"]], "Version 1.1.0": [[496, "version-1-1-0"], [506, "version-1-1-0"]], "Other": [[496, "other"], [497, "other"], [498, "other"], [500, "other"], [501, "other"], [506, "other"]], "Version 1.0.0": [[496, "version-1-0-0"], [505, "version-1-0-0"]], "Version 0.9.9": [[496, "version-0-9-9"], [504, "version-0-9-9"]], "Version 0.9.8": [[496, "version-0-9-8"], [503, "version-0-9-8"]], "Version 0.9.7": [[496, "version-0-9-7"], [502, "version-0-9-7"]], "Version 0.9.6": [[496, "version-0-9-6"], [501, "version-0-9-6"]], "Version 0.9.5": [[496, "version-0-9-5"], [500, "version-0-9-5"]], "Version 0.9.4": [[496, "version-0-9-4"], [499, "version-0-9-4"]], "Version 0.9.3": [[496, "version-0-9-3"], [498, "version-0-9-3"]], "Version 0.9.2": [[496, "version-0-9-2"], [497, "version-0-9-2"]], "Major changes": [[497, "major-changes"], [498, "major-changes"], [501, "major-changes"], [502, "major-changes"], [503, "major-changes"], [505, "major-changes"]], "Other Enhancements": [[497, "other-enhancements"], [498, "other-enhancements"], [502, "other-enhancements"]], "Bug Fixes": [[497, "bug-fixes"], [498, "bug-fixes"]], "Major changes/additions in this version": [[499, "major-changes-additions-in-this-version"]], "Other changes and bug fixes": [[499, "other-changes-and-bug-fixes"]], "Major fixes in this release": [[500, "major-fixes-in-this-release"]], "Other fixes in this release": [[500, "other-fixes-in-this-release"]], "New \u2018Contrib\u2019 files": [[500, "new-contrib-files"]], "Bug fixes": [[501, "bug-fixes"], [502, "bug-fixes"], [503, "bug-fixes"]], "Contrib file changes": [[503, "contrib-file-changes"], [504, "contrib-file-changes"]], "Other Contributors": [[504, "other-contributors"]], "Other enhancements": [[505, "other-enhancements"]], "Infrastructure": [[505, "infrastructure"]], "Contributing to pydicom": [[519, "contributing-to-pydicom"]], "Contributing a source code change": [[520, "contributing-a-source-code-change"]], "Download the current source code": [[520, "download-the-current-source-code"]], "(Optional) Install required libraries": [[520, "optional-install-required-libraries"]], "Install pytest and run the test suite": [[520, "install-pytest-and-run-the-test-suite"]], "Create a new branch": [[520, "create-a-new-branch"], [521, "create-a-new-branch"]], "Write tests for your changes": [[520, "write-tests-for-your-changes"]], "Make a code change and document it": [[520, "make-a-code-change-and-document-it"]], "Preview your changes": [[520, "preview-your-changes"]], "Commit your changes and make a pull request": [[520, "commit-your-changes-and-make-a-pull-request"], [521, "commit-your-changes-and-make-a-pull-request"]], "What happens next?": [[520, "what-happens-next"], [521, "what-happens-next"]], "Contributing a documentation change": [[521, "contributing-a-documentation-change"]], "Download the documentation": [[521, "download-the-documentation"]], "Build and preview the documentation": [[521, "build-and-preview-the-documentation"]], "Make a change to the documentation": [[521, "make-a-change-to-the-documentation"]], "Dataset basics: read, access, modify, write": [[522, "dataset-basics-read-access-modify-write"]], "Getting the path to the example dataset": [[522, "getting-the-path-to-the-example-dataset"]], "Reading": [[522, "reading"]], "Viewing and accessing": [[522, "viewing-and-accessing"]], "Elements": [[522, "elements"]], "Sequences": [[522, "sequences"], [522, "id1"]], "file_meta": [[522, "file-meta"]], "Modifying": [[522, "modifying"]], "Modifying elements": [[522, "modifying-elements"]], "Adding elements": [[522, "adding-elements"]], "Any category": [[522, "any-category"]], "Standard elements": [[522, "standard-elements"]], "Deleting elements": [[522, "deleting-elements"]], "Writing": [[522, "writing"]], "Next steps": [[522, "next-steps"]], "Introduction to JSON support": [[523, "introduction-to-json-support"]], "Converting a dataset into JSON format": [[523, "converting-a-dataset-into-json-format"]], "Creating a dataset from JSON": [[523, "creating-a-dataset-from-json"]], "Working with large binary data": [[523, "working-with-large-binary-data"]], "DICOM File-sets and DICOMDIR": [[524, "dicom-file-sets-and-dicomdir"]], "The DICOM File-set": [[524, "the-dicom-file-set"]], "The DICOMDIR file": [[524, "the-dicomdir-file"]], "FileSet": [[524, "fileset"]], "Loading existing File-sets": [[524, "loading-existing-file-sets"]], "Creating a new File-set": [[524, "creating-a-new-file-set"]], "Modifying a File-set": [[524, "modifying-a-file-set"]], "FileSet and staging": [[524, "fileset-and-staging"]], "Adding SOP instances": [[524, "adding-sop-instances"]], "Removing instances": [[524, "removing-instances"]], "Applying the changes": [[524, "applying-the-changes"]], "Conclusion": [[524, "conclusion"]], "Tutorials": [[525, "tutorials"]], "How to install pydicom": [[526, "how-to-install-pydicom"]], "Install the official release": [[526, "install-the-official-release"]], "Install using pip": [[526, "install-using-pip"]], "Install using conda": [[526, "install-using-conda"]], "Downloading example/test DICOM files": [[526, "downloading-example-test-dicom-files"]], "Install the optional libraries": [[526, "install-the-optional-libraries"]], "Installing Pillow": [[526, "installing-pillow"]], "Installing pyjpegls": [[526, "installing-pyjpegls"]], "Installing GDCM": [[526, "installing-gdcm"]], "Installing pylibjpeg": [[526, "installing-pylibjpeg"]], "Install the development version": [[526, "install-the-development-version"]], "Encapsulating data compressed by third-party packages": [[527, "encapsulating-data-compressed-by-third-party-packages"]], "Structured Reporting": [[528, "structured-reporting"]], "Waveforms": [[529, "waveforms"]], "Waveforms in DICOM": [[529, "waveforms-in-dicom"]], "Decoding Waveform Data": [[529, "decoding-waveform-data"]], "Encoding Waveform Data": [[529, "encoding-waveform-data"]]}, "indexentries": {"settings (class in pydicom.config)": [[52, "pydicom.config.Settings"]], "infer_sq_for_un_vr (pydicom.config.settings property)": [[52, "pydicom.config.Settings.infer_sq_for_un_vr"]], "reading_validation_mode (pydicom.config.settings property)": [[52, "pydicom.config.Settings.reading_validation_mode"]], "writing_validation_mode (pydicom.config.settings property)": [[52, "pydicom.config.Settings.writing_validation_mode"]], "module": [[64, "module-pydicom.encoders"], [199, "module-pydicom.overlays.numpy_handler"], [207, "module-pydicom.pixel_data_handlers.gdcm_handler"], [208, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"], [209, "module-pydicom.pixel_data_handlers.numpy_handler"], [210, "module-pydicom.pixel_data_handlers.pillow_handler"], [211, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"], [212, "module-pydicom.pixel_data_handlers.rle_handler"], [213, "module-pydicom.pixel_data_handlers.util"], [488, "module-pydicom.waveforms.numpy_handler"], [490, "module-pydicom.overlays"], [491, "module-pydicom.pixel_data_handlers"], [492, "module-pydicom.waveforms"], [493, "module-pydicom"]], "pydicom.encoders": [[64, "module-pydicom.encoders"]], "convert_encodings() (in module pydicom.charset)": [[73, "pydicom.charset.convert_encodings"]], "decode_bytes() (in module pydicom.charset)": [[74, "pydicom.charset.decode_bytes"]], "decode_element() (in module pydicom.charset)": [[75, "pydicom.charset.decode_element"]], "encode_string() (in module pydicom.charset)": [[76, "pydicom.charset.encode_string"]], "apply_j2k_corrections (in module pydicom.config)": [[77, "pydicom.config.APPLY_J2K_CORRECTIONS"]], "ds_decimal() (in module pydicom.config)": [[78, "pydicom.config.DS_decimal"]], "ds_numpy() (in module pydicom.config)": [[79, "pydicom.config.DS_numpy"]], "ignore (in module pydicom.config)": [[80, "pydicom.config.IGNORE"]], "invalid_keyword_behavior (in module pydicom.config)": [[81, "pydicom.config.INVALID_KEYWORD_BEHAVIOR"]], "invalid_key_behavior (in module pydicom.config)": [[82, "pydicom.config.INVALID_KEY_BEHAVIOR"]], "raise (in module pydicom.config)": [[83, "pydicom.config.RAISE"]], "warn (in module pydicom.config)": [[84, "pydicom.config.WARN"]], "allow_ds_float (in module pydicom.config)": [[85, "pydicom.config.allow_DS_float"]], "assume_implicit_vr_switch (in module pydicom.config)": [[86, "pydicom.config.assume_implicit_vr_switch"]], "convert_wrong_length_to_un (in module pydicom.config)": [[87, "pydicom.config.convert_wrong_length_to_UN"]], "data_element_callback (in module pydicom.config)": [[88, "pydicom.config.data_element_callback"]], "data_element_callback_kwargs (in module pydicom.config)": [[89, "pydicom.config.data_element_callback_kwargs"]], "datetime_conversion (in module pydicom.config)": [[90, "pydicom.config.datetime_conversion"]], "debug() (in module pydicom.config)": [[91, "pydicom.config.debug"]], "enforce_valid_values (in module pydicom.config)": [[92, "pydicom.config.enforce_valid_values"]], "future_behavior() (in module pydicom.config)": [[93, "pydicom.config.future_behavior"]], "pixel_data_handlers (in module pydicom.config)": [[94, "pydicom.config.pixel_data_handlers"]], "reset_data_element_callback() (in module pydicom.config)": [[95, "pydicom.config.reset_data_element_callback"]], "settings (in module pydicom.config)": [[96, "pydicom.config.settings"]], "show_file_meta (in module pydicom.config)": [[97, "pydicom.config.show_file_meta"]], "use_ds_decimal (in module pydicom.config)": [[98, "pydicom.config.use_DS_decimal"]], "use_ds_numpy (in module pydicom.config)": [[99, "pydicom.config.use_DS_numpy"]], "use_is_numpy (in module pydicom.config)": [[100, "pydicom.config.use_IS_numpy"]], "get_charset_files() (in module pydicom.data)": [[101, "pydicom.data.get_charset_files"]], "get_palette_files() (in module pydicom.data)": [[102, "pydicom.data.get_palette_files"]], "get_testdata_file() (in module pydicom.data)": [[103, "pydicom.data.get_testdata_file"]], "get_testdata_files() (in module pydicom.data)": [[104, "pydicom.data.get_testdata_files"]], "add_dict_entries() (in module pydicom.datadict)": [[105, "pydicom.datadict.add_dict_entries"]], "add_dict_entry() (in module pydicom.datadict)": [[106, "pydicom.datadict.add_dict_entry"]], "add_private_dict_entries() (in module pydicom.datadict)": [[107, "pydicom.datadict.add_private_dict_entries"]], "add_private_dict_entry() (in module pydicom.datadict)": [[108, "pydicom.datadict.add_private_dict_entry"]], "dictionary_vm() (in module pydicom.datadict)": [[109, "pydicom.datadict.dictionary_VM"]], "dictionary_vr() (in module pydicom.datadict)": [[110, "pydicom.datadict.dictionary_VR"]], "dictionary_description() (in module pydicom.datadict)": [[111, "pydicom.datadict.dictionary_description"]], "dictionary_has_tag() (in module pydicom.datadict)": [[112, "pydicom.datadict.dictionary_has_tag"]], "dictionary_is_retired() (in module pydicom.datadict)": [[113, "pydicom.datadict.dictionary_is_retired"]], "dictionary_keyword() (in module pydicom.datadict)": [[114, "pydicom.datadict.dictionary_keyword"]], "get_entry() (in module pydicom.datadict)": [[115, "pydicom.datadict.get_entry"]], "get_private_entry() (in module pydicom.datadict)": [[116, "pydicom.datadict.get_private_entry"]], "keyword_for_tag() (in module pydicom.datadict)": [[117, "pydicom.datadict.keyword_for_tag"]], "mask_match() (in module pydicom.datadict)": [[118, "pydicom.datadict.mask_match"]], "private_dictionary_vm() (in module pydicom.datadict)": [[119, "pydicom.datadict.private_dictionary_VM"]], "private_dictionary_vr() (in module pydicom.datadict)": [[120, "pydicom.datadict.private_dictionary_VR"]], "private_dictionary_description() (in module pydicom.datadict)": [[121, "pydicom.datadict.private_dictionary_description"]], "repeater_has_keyword() (in module pydicom.datadict)": [[122, "pydicom.datadict.repeater_has_keyword"]], "repeater_has_tag() (in module pydicom.datadict)": [[123, "pydicom.datadict.repeater_has_tag"]], "tag_for_keyword() (in module pydicom.datadict)": [[124, "pydicom.datadict.tag_for_keyword"]], "dataelement (class in pydicom.dataelem)": [[125, "pydicom.dataelem.DataElement"]], "vm (pydicom.dataelem.dataelement property)": [[125, "pydicom.dataelem.DataElement.VM"]], "vr (pydicom.dataelem.dataelement attribute)": [[125, "pydicom.dataelem.DataElement.VR"]], "__init__() (pydicom.dataelem.dataelement method)": [[125, "pydicom.dataelem.DataElement.__init__"]], "clear() (pydicom.dataelem.dataelement method)": [[125, "pydicom.dataelem.DataElement.clear"]], "descripwidth (pydicom.dataelem.dataelement attribute)": [[125, "pydicom.dataelem.DataElement.descripWidth"]], "empty_value (pydicom.dataelem.dataelement property)": [[125, "pydicom.dataelem.DataElement.empty_value"]], "from_json() (pydicom.dataelem.dataelement class method)": [[125, "pydicom.dataelem.DataElement.from_json"]], "is_empty (pydicom.dataelem.dataelement property)": [[125, "pydicom.dataelem.DataElement.is_empty"]], "is_private (pydicom.dataelem.dataelement property)": [[125, "pydicom.dataelem.DataElement.is_private"]], "is_retired (pydicom.dataelem.dataelement property)": [[125, "pydicom.dataelem.DataElement.is_retired"]], "is_undefined_length (pydicom.dataelem.dataelement attribute)": [[125, "pydicom.dataelem.DataElement.is_undefined_length"]], "keyword (pydicom.dataelem.dataelement property)": [[125, "pydicom.dataelem.DataElement.keyword"]], "maxbytestodisplay (pydicom.dataelem.dataelement attribute)": [[125, "pydicom.dataelem.DataElement.maxBytesToDisplay"]], "name (pydicom.dataelem.dataelement property)": [[125, "pydicom.dataelem.DataElement.name"]], "repval (pydicom.dataelem.dataelement property)": [[125, "pydicom.dataelem.DataElement.repval"]], "showvr (pydicom.dataelem.dataelement attribute)": [[125, "pydicom.dataelem.DataElement.showVR"]], "tag (pydicom.dataelem.dataelement attribute)": [[125, "pydicom.dataelem.DataElement.tag"]], "to_json() (pydicom.dataelem.dataelement method)": [[125, "pydicom.dataelem.DataElement.to_json"]], "to_json_dict() (pydicom.dataelem.dataelement method)": [[125, "pydicom.dataelem.DataElement.to_json_dict"]], "validate() (pydicom.dataelem.dataelement method)": [[125, "pydicom.dataelem.DataElement.validate"]], "value (pydicom.dataelem.dataelement property)": [[125, "pydicom.dataelem.DataElement.value"]], "dataelement_from_raw() (in module pydicom.dataelem)": [[126, "pydicom.dataelem.DataElement_from_raw"]], "rawdataelement (class in pydicom.dataelem)": [[127, "pydicom.dataelem.RawDataElement"]], "vr (pydicom.dataelem.rawdataelement attribute)": [[127, "pydicom.dataelem.RawDataElement.VR"]], "__init__() (pydicom.dataelem.rawdataelement method)": [[127, "pydicom.dataelem.RawDataElement.__init__"]], "is_implicit_vr (pydicom.dataelem.rawdataelement attribute)": [[127, "pydicom.dataelem.RawDataElement.is_implicit_VR"]], "is_little_endian (pydicom.dataelem.rawdataelement attribute)": [[127, "pydicom.dataelem.RawDataElement.is_little_endian"]], "is_raw (pydicom.dataelem.rawdataelement attribute)": [[127, "pydicom.dataelem.RawDataElement.is_raw"]], "length (pydicom.dataelem.rawdataelement attribute)": [[127, "pydicom.dataelem.RawDataElement.length"]], "tag (pydicom.dataelem.rawdataelement attribute)": [[127, "pydicom.dataelem.RawDataElement.tag"]], "value (pydicom.dataelem.rawdataelement attribute)": [[127, "pydicom.dataelem.RawDataElement.value"]], "value_tell (pydicom.dataelem.rawdataelement attribute)": [[127, "pydicom.dataelem.RawDataElement.value_tell"]], "dataset (class in pydicom.dataset)": [[128, "pydicom.dataset.Dataset"]], "__init__() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.__init__"]], "add() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.add"]], "add_new() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.add_new"]], "add_new_private() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.add_new_private"]], "clear() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.clear"]], "compress() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.compress"]], "convert_pixel_data() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.convert_pixel_data"]], "copy() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.copy"]], "data_element() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.data_element"]], "decode() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.decode"]], "decompress() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.decompress"]], "default_element_format (pydicom.dataset.dataset attribute)": [[128, "pydicom.dataset.Dataset.default_element_format"]], "default_sequence_element_format (pydicom.dataset.dataset attribute)": [[128, "pydicom.dataset.Dataset.default_sequence_element_format"]], "dir() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.dir"]], "elements() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.elements"]], "ensure_file_meta() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.ensure_file_meta"]], "formatted_lines() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.formatted_lines"]], "from_json() (pydicom.dataset.dataset class method)": [[128, "pydicom.dataset.Dataset.from_json"]], "get() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.get"]], "get_item() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.get_item"]], "get_private_item() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.get_private_item"]], "group_dataset() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.group_dataset"]], "indent_chars (pydicom.dataset.dataset attribute)": [[128, "pydicom.dataset.Dataset.indent_chars"]], "is_implicit_vr (pydicom.dataset.dataset property)": [[128, "pydicom.dataset.Dataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.dataset property)": [[128, "pydicom.dataset.Dataset.is_little_endian"]], "is_original_encoding (pydicom.dataset.dataset property)": [[128, "pydicom.dataset.Dataset.is_original_encoding"]], "items() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.items"]], "iterall() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.iterall"]], "keys() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.keys"]], "original_character_set (pydicom.dataset.dataset property)": [[128, "pydicom.dataset.Dataset.original_character_set"]], "original_encoding (pydicom.dataset.dataset property)": [[128, "pydicom.dataset.Dataset.original_encoding"]], "overlay_array() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.overlay_array"]], "pixel_array (pydicom.dataset.dataset property)": [[128, "pydicom.dataset.Dataset.pixel_array"]], "pop() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.pop"]], "popitem() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.popitem"]], "private_block() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.private_block"]], "private_creators() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.private_creators"]], "read_encoding (pydicom.dataset.dataset property)": [[128, "pydicom.dataset.Dataset.read_encoding"]], "read_implicit_vr (pydicom.dataset.dataset property)": [[128, "pydicom.dataset.Dataset.read_implicit_vr"]], "read_little_endian (pydicom.dataset.dataset property)": [[128, "pydicom.dataset.Dataset.read_little_endian"]], "remove_private_tags() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.remove_private_tags"]], "save_as() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.save_as"]], "set_original_encoding() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.set_original_encoding"]], "setdefault() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.setdefault"]], "to_json() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.to_json"]], "to_json_dict() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.to_json_dict"]], "top() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.top"]], "trait_names() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.trait_names"]], "update() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.update"]], "values() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.values"]], "walk() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.walk"]], "waveform_array() (pydicom.dataset.dataset method)": [[128, "pydicom.dataset.Dataset.waveform_array"]], "filedataset (class in pydicom.dataset)": [[129, "pydicom.dataset.FileDataset"]], "__init__() (pydicom.dataset.filedataset method)": [[129, "pydicom.dataset.FileDataset.__init__"]], "file_meta (pydicom.dataset.filedataset attribute)": [[129, "pydicom.dataset.FileDataset.file_meta"]], "filename (pydicom.dataset.filedataset attribute)": [[129, "pydicom.dataset.FileDataset.filename"]], "fileobj_type (pydicom.dataset.filedataset attribute)": [[129, "pydicom.dataset.FileDataset.fileobj_type"]], "is_implicit_vr (pydicom.dataset.filedataset attribute)": [[129, "pydicom.dataset.FileDataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.filedataset attribute)": [[129, "pydicom.dataset.FileDataset.is_little_endian"]], "preamble (pydicom.dataset.filedataset attribute)": [[129, "pydicom.dataset.FileDataset.preamble"]], "timestamp (pydicom.dataset.filedataset attribute)": [[129, "pydicom.dataset.FileDataset.timestamp"]], "filemetadataset (class in pydicom.dataset)": [[130, "pydicom.dataset.FileMetaDataset"]], "__init__() (pydicom.dataset.filemetadataset method)": [[130, "pydicom.dataset.FileMetaDataset.__init__"]], "validate() (pydicom.dataset.filemetadataset static method)": [[130, "pydicom.dataset.FileMetaDataset.validate"]], "privateblock (class in pydicom.dataset)": [[131, "pydicom.dataset.PrivateBlock"]], "__init__() (pydicom.dataset.privateblock method)": [[131, "pydicom.dataset.PrivateBlock.__init__"]], "add_new() (pydicom.dataset.privateblock method)": [[131, "pydicom.dataset.PrivateBlock.add_new"]], "block_start (pydicom.dataset.privateblock attribute)": [[131, "pydicom.dataset.PrivateBlock.block_start"]], "dataset (pydicom.dataset.privateblock attribute)": [[131, "pydicom.dataset.PrivateBlock.dataset"]], "get_tag() (pydicom.dataset.privateblock method)": [[131, "pydicom.dataset.PrivateBlock.get_tag"]], "group (pydicom.dataset.privateblock attribute)": [[131, "pydicom.dataset.PrivateBlock.group"]], "private_creator (pydicom.dataset.privateblock attribute)": [[131, "pydicom.dataset.PrivateBlock.private_creator"]], "validate_file_meta() (in module pydicom.dataset)": [[132, "pydicom.dataset.validate_file_meta"]], "decode_data_sequence() (in module pydicom.encaps)": [[133, "pydicom.encaps.decode_data_sequence"]], "defragment_data() (in module pydicom.encaps)": [[134, "pydicom.encaps.defragment_data"]], "encapsulate() (in module pydicom.encaps)": [[135, "pydicom.encaps.encapsulate"]], "encapsulate_extended() (in module pydicom.encaps)": [[136, "pydicom.encaps.encapsulate_extended"]], "fragment_frame() (in module pydicom.encaps)": [[137, "pydicom.encaps.fragment_frame"]], "generate_pixel_data() (in module pydicom.encaps)": [[138, "pydicom.encaps.generate_pixel_data"]], "generate_pixel_data_fragment() (in module pydicom.encaps)": [[139, "pydicom.encaps.generate_pixel_data_fragment"]], "generate_pixel_data_frame() (in module pydicom.encaps)": [[140, "pydicom.encaps.generate_pixel_data_frame"]], "get_frame_offsets() (in module pydicom.encaps)": [[141, "pydicom.encaps.get_frame_offsets"]], "itemize_fragment() (in module pydicom.encaps)": [[142, "pydicom.encaps.itemize_fragment"]], "itemize_frame() (in module pydicom.encaps)": [[143, "pydicom.encaps.itemize_frame"]], "read_item() (in module pydicom.encaps)": [[144, "pydicom.encaps.read_item"]], "rlelosslessencoder (in module pydicom.encoders)": [[145, "pydicom.encoders.RLELosslessEncoder"]], "encoder (class in pydicom.encoders.base)": [[146, "pydicom.encoders.base.Encoder"]], "uid (pydicom.encoders.base.encoder property)": [[146, "pydicom.encoders.base.Encoder.UID"]], "__init__() (pydicom.encoders.base.encoder method)": [[146, "pydicom.encoders.base.Encoder.__init__"]], "add_plugin() (pydicom.encoders.base.encoder method)": [[146, "pydicom.encoders.base.Encoder.add_plugin"]], "encode() (pydicom.encoders.base.encoder method)": [[146, "pydicom.encoders.base.Encoder.encode"]], "is_available (pydicom.encoders.base.encoder property)": [[146, "pydicom.encoders.base.Encoder.is_available"]], "iter_encode() (pydicom.encoders.base.encoder method)": [[146, "pydicom.encoders.base.Encoder.iter_encode"]], "kwargs_from_ds() (pydicom.encoders.base.encoder static method)": [[146, "pydicom.encoders.base.Encoder.kwargs_from_ds"]], "missing_dependencies (pydicom.encoders.base.encoder property)": [[146, "pydicom.encoders.base.Encoder.missing_dependencies"]], "name (pydicom.encoders.base.encoder property)": [[146, "pydicom.encoders.base.Encoder.name"]], "remove_plugin() (pydicom.encoders.base.encoder method)": [[146, "pydicom.encoders.base.Encoder.remove_plugin"]], "get_encoder() (in module pydicom.encoders)": [[147, "pydicom.encoders.get_encoder"]], "invaliddicomerror": [[148, "pydicom.errors.InvalidDicomError"]], "dicombytesio (class in pydicom.filebase)": [[149, "pydicom.filebase.DicomBytesIO"]], "__init__() (pydicom.filebase.dicombytesio method)": [[149, "pydicom.filebase.DicomBytesIO.__init__"]], "dicomfile() (in module pydicom.filebase)": [[150, "pydicom.filebase.DicomFile"]], "dicomfilelike (class in pydicom.filebase)": [[151, "pydicom.filebase.DicomFileLike"]], "__init__() (pydicom.filebase.dicomfilelike method)": [[151, "pydicom.filebase.DicomFileLike.__init__"]], "dicomio (class in pydicom.filebase)": [[152, "pydicom.filebase.DicomIO"]], "__init__() (pydicom.filebase.dicomio method)": [[152, "pydicom.filebase.DicomIO.__init__"]], "close() (pydicom.filebase.dicomio method)": [[152, "pydicom.filebase.DicomIO.close"]], "is_implicit_vr (pydicom.filebase.dicomio property)": [[152, "pydicom.filebase.DicomIO.is_implicit_VR"]], "is_little_endian (pydicom.filebase.dicomio property)": [[152, "pydicom.filebase.DicomIO.is_little_endian"]], "name (pydicom.filebase.dicomio property)": [[152, "pydicom.filebase.DicomIO.name"]], "parent (pydicom.filebase.dicomio property)": [[152, "pydicom.filebase.DicomIO.parent"]], "read() (pydicom.filebase.dicomio method)": [[152, "pydicom.filebase.DicomIO.read"]], "read_ul() (pydicom.filebase.dicomio method)": [[152, "pydicom.filebase.DicomIO.read_UL"]], "read_us() (pydicom.filebase.dicomio method)": [[152, "pydicom.filebase.DicomIO.read_US"]], "read_exact() (pydicom.filebase.dicomio method)": [[152, "pydicom.filebase.DicomIO.read_exact"]], "read_tag() (pydicom.filebase.dicomio method)": [[152, "pydicom.filebase.DicomIO.read_tag"]], "seek() (pydicom.filebase.dicomio method)": [[152, "pydicom.filebase.DicomIO.seek"]], "tell() (pydicom.filebase.dicomio method)": [[152, "pydicom.filebase.DicomIO.tell"]], "write() (pydicom.filebase.dicomio method)": [[152, "pydicom.filebase.DicomIO.write"]], "write_ul() (pydicom.filebase.dicomio method)": [[152, "pydicom.filebase.DicomIO.write_UL"]], "write_us() (pydicom.filebase.dicomio method)": [[152, "pydicom.filebase.DicomIO.write_US"]], "write_tag() (pydicom.filebase.dicomio method)": [[152, "pydicom.filebase.DicomIO.write_tag"]], "data_element_generator() (in module pydicom.filereader)": [[153, "pydicom.filereader.data_element_generator"]], "data_element_offset_to_value() (in module pydicom.filereader)": [[154, "pydicom.filereader.data_element_offset_to_value"]], "dcmread() (in module pydicom.filereader)": [[155, "pydicom.filereader.dcmread"]], "read_dataset() (in module pydicom.filereader)": [[156, "pydicom.filereader.read_dataset"]], "read_deferred_data_element() (in module pydicom.filereader)": [[157, "pydicom.filereader.read_deferred_data_element"]], "read_file_meta_info() (in module pydicom.filereader)": [[158, "pydicom.filereader.read_file_meta_info"]], "read_partial() (in module pydicom.filereader)": [[159, "pydicom.filereader.read_partial"]], "read_preamble() (in module pydicom.filereader)": [[160, "pydicom.filereader.read_preamble"]], "read_sequence() (in module pydicom.filereader)": [[161, "pydicom.filereader.read_sequence"]], "read_sequence_item() (in module pydicom.filereader)": [[162, "pydicom.filereader.read_sequence_item"]], "directory_recorders (in module pydicom.fileset)": [[163, "pydicom.fileset.DIRECTORY_RECORDERS"]], "fileid (pydicom.fileset.fileinstance property)": [[164, "pydicom.fileset.FileInstance.FileID"]], "fileinstance (class in pydicom.fileset)": [[164, "pydicom.fileset.FileInstance"]], "sopclassuid (pydicom.fileset.fileinstance property)": [[164, "pydicom.fileset.FileInstance.SOPClassUID"]], "sopinstanceuid (pydicom.fileset.fileinstance property)": [[164, "pydicom.fileset.FileInstance.SOPInstanceUID"]], "transfersyntaxuid (pydicom.fileset.fileinstance property)": [[164, "pydicom.fileset.FileInstance.TransferSyntaxUID"]], "__init__() (pydicom.fileset.fileinstance method)": [[164, "pydicom.fileset.FileInstance.__init__"]], "file_set (pydicom.fileset.fileinstance property)": [[164, "pydicom.fileset.FileInstance.file_set"]], "for_addition (pydicom.fileset.fileinstance property)": [[164, "pydicom.fileset.FileInstance.for_addition"]], "for_moving (pydicom.fileset.fileinstance property)": [[164, "pydicom.fileset.FileInstance.for_moving"]], "for_removal (pydicom.fileset.fileinstance property)": [[164, "pydicom.fileset.FileInstance.for_removal"]], "is_private (pydicom.fileset.fileinstance property)": [[164, "pydicom.fileset.FileInstance.is_private"]], "is_staged (pydicom.fileset.fileinstance property)": [[164, "pydicom.fileset.FileInstance.is_staged"]], "load() (pydicom.fileset.fileinstance method)": [[164, "pydicom.fileset.FileInstance.load"]], "node (pydicom.fileset.fileinstance attribute)": [[164, "pydicom.fileset.FileInstance.node"]], "path (pydicom.fileset.fileinstance property)": [[164, "pydicom.fileset.FileInstance.path"]], "fileset (class in pydicom.fileset)": [[165, "pydicom.fileset.FileSet"]], "id (pydicom.fileset.fileset property)": [[165, "pydicom.fileset.FileSet.ID"]], "uid (pydicom.fileset.fileset property)": [[165, "pydicom.fileset.FileSet.UID"]], "__init__() (pydicom.fileset.fileset method)": [[165, "pydicom.fileset.FileSet.__init__"]], "add() (pydicom.fileset.fileset method)": [[165, "pydicom.fileset.FileSet.add"]], "add_custom() (pydicom.fileset.fileset method)": [[165, "pydicom.fileset.FileSet.add_custom"]], "clear() (pydicom.fileset.fileset method)": [[165, "pydicom.fileset.FileSet.clear"]], "copy() (pydicom.fileset.fileset method)": [[165, "pydicom.fileset.FileSet.copy"]], "descriptor_character_set (pydicom.fileset.fileset property)": [[165, "pydicom.fileset.FileSet.descriptor_character_set"]], "descriptor_file_id (pydicom.fileset.fileset property)": [[165, "pydicom.fileset.FileSet.descriptor_file_id"]], "find() (pydicom.fileset.fileset method)": [[165, "pydicom.fileset.FileSet.find"]], "find_values() (pydicom.fileset.fileset method)": [[165, "pydicom.fileset.FileSet.find_values"]], "is_staged (pydicom.fileset.fileset property)": [[165, "pydicom.fileset.FileSet.is_staged"]], "load() (pydicom.fileset.fileset method)": [[165, "pydicom.fileset.FileSet.load"]], "path (pydicom.fileset.fileset property)": [[165, "pydicom.fileset.FileSet.path"]], "remove() (pydicom.fileset.fileset method)": [[165, "pydicom.fileset.FileSet.remove"]], "write() (pydicom.fileset.fileset method)": [[165, "pydicom.fileset.FileSet.write"]], "recordnode (class in pydicom.fileset)": [[166, "pydicom.fileset.RecordNode"]], "__init__() (pydicom.fileset.recordnode method)": [[166, "pydicom.fileset.RecordNode.__init__"]], "add() (pydicom.fileset.recordnode method)": [[166, "pydicom.fileset.RecordNode.add"]], "ancestors (pydicom.fileset.recordnode property)": [[166, "pydicom.fileset.RecordNode.ancestors"]], "children (pydicom.fileset.recordnode attribute)": [[166, "pydicom.fileset.RecordNode.children"]], "component (pydicom.fileset.recordnode property)": [[166, "pydicom.fileset.RecordNode.component"]], "depth (pydicom.fileset.recordnode property)": [[166, "pydicom.fileset.RecordNode.depth"]], "file_set (pydicom.fileset.recordnode property)": [[166, "pydicom.fileset.RecordNode.file_set"]], "has_instance (pydicom.fileset.recordnode property)": [[166, "pydicom.fileset.RecordNode.has_instance"]], "index (pydicom.fileset.recordnode property)": [[166, "pydicom.fileset.RecordNode.index"]], "instance (pydicom.fileset.recordnode attribute)": [[166, "pydicom.fileset.RecordNode.instance"]], "is_root (pydicom.fileset.recordnode property)": [[166, "pydicom.fileset.RecordNode.is_root"]], "key (pydicom.fileset.recordnode property)": [[166, "pydicom.fileset.RecordNode.key"]], "next (pydicom.fileset.recordnode property)": [[166, "pydicom.fileset.RecordNode.next"]], "parent (pydicom.fileset.recordnode property)": [[166, "pydicom.fileset.RecordNode.parent"]], "prettify() (pydicom.fileset.recordnode method)": [[166, "pydicom.fileset.RecordNode.prettify"]], "previous (pydicom.fileset.recordnode property)": [[166, "pydicom.fileset.RecordNode.previous"]], "record_type (pydicom.fileset.recordnode property)": [[166, "pydicom.fileset.RecordNode.record_type"]], "remove() (pydicom.fileset.recordnode method)": [[166, "pydicom.fileset.RecordNode.remove"]], "reverse() (pydicom.fileset.recordnode method)": [[166, "pydicom.fileset.RecordNode.reverse"]], "root (pydicom.fileset.recordnode property)": [[166, "pydicom.fileset.RecordNode.root"]], "generate_filename() (in module pydicom.fileset)": [[167, "pydicom.fileset.generate_filename"]], "is_conformant_file_id() (in module pydicom.fileset)": [[168, "pydicom.fileset.is_conformant_file_id"]], "absorb_delimiter_item() (in module pydicom.fileutil)": [[169, "pydicom.fileutil.absorb_delimiter_item"]], "find_bytes() (in module pydicom.fileutil)": [[170, "pydicom.fileutil.find_bytes"]], "find_delimiter() (in module pydicom.fileutil)": [[171, "pydicom.fileutil.find_delimiter"]], "length_of_undefined_length() (in module pydicom.fileutil)": [[172, "pydicom.fileutil.length_of_undefined_length"]], "read_undefined_length_value() (in module pydicom.fileutil)": [[173, "pydicom.fileutil.read_undefined_length_value"]], "correct_ambiguous_vr() (in module pydicom.filewriter)": [[174, "pydicom.filewriter.correct_ambiguous_vr"]], "correct_ambiguous_vr_element() (in module pydicom.filewriter)": [[175, "pydicom.filewriter.correct_ambiguous_vr_element"]], "dcmwrite() (in module pydicom.filewriter)": [[176, "pydicom.filewriter.dcmwrite"]], "multi_string() (in module pydicom.filewriter)": [[177, "pydicom.filewriter.multi_string"]], "write_atvalue() (in module pydicom.filewriter)": [[178, "pydicom.filewriter.write_ATvalue"]], "write_da() (in module pydicom.filewriter)": [[179, "pydicom.filewriter.write_DA"]], "write_dt() (in module pydicom.filewriter)": [[180, "pydicom.filewriter.write_DT"]], "write_obvalue() (in module pydicom.filewriter)": [[181, "pydicom.filewriter.write_OBvalue"]], "write_owvalue() (in module pydicom.filewriter)": [[182, "pydicom.filewriter.write_OWvalue"]], "write_pn() (in module pydicom.filewriter)": [[183, "pydicom.filewriter.write_PN"]], "write_tm() (in module pydicom.filewriter)": [[184, "pydicom.filewriter.write_TM"]], "write_ui() (in module pydicom.filewriter)": [[185, "pydicom.filewriter.write_UI"]], "write_un() (in module pydicom.filewriter)": [[186, "pydicom.filewriter.write_UN"]], "write_data_element() (in module pydicom.filewriter)": [[187, "pydicom.filewriter.write_data_element"]], "write_dataset() (in module pydicom.filewriter)": [[188, "pydicom.filewriter.write_dataset"]], "write_file_meta_info() (in module pydicom.filewriter)": [[189, "pydicom.filewriter.write_file_meta_info"]], "write_number_string() (in module pydicom.filewriter)": [[190, "pydicom.filewriter.write_number_string"]], "write_numbers() (in module pydicom.filewriter)": [[191, "pydicom.filewriter.write_numbers"]], "write_sequence() (in module pydicom.filewriter)": [[192, "pydicom.filewriter.write_sequence"]], "write_sequence_item() (in module pydicom.filewriter)": [[193, "pydicom.filewriter.write_sequence_item"]], "write_string() (in module pydicom.filewriter)": [[194, "pydicom.filewriter.write_string"]], "write_text() (in module pydicom.filewriter)": [[195, "pydicom.filewriter.write_text"]], "is_dicom() (in module pydicom.misc)": [[196, "pydicom.misc.is_dicom"]], "size_in_bytes() (in module pydicom.misc)": [[197, "pydicom.misc.size_in_bytes"]], "multivalue (class in pydicom.multival)": [[198, "pydicom.multival.MultiValue"]], "__init__() (pydicom.multival.multivalue method)": [[198, "pydicom.multival.MultiValue.__init__"]], "get_expected_length() (in module pydicom.overlays.numpy_handler)": [[199, "pydicom.overlays.numpy_handler.get_expected_length"]], "get_overlay_array() (in module pydicom.overlays.numpy_handler)": [[199, "pydicom.overlays.numpy_handler.get_overlay_array"]], "is_available() (in module pydicom.overlays.numpy_handler)": [[199, "pydicom.overlays.numpy_handler.is_available"]], "pydicom.overlays.numpy_handler": [[199, "module-pydicom.overlays.numpy_handler"]], "reshape_overlay_array() (in module pydicom.overlays.numpy_handler)": [[199, "pydicom.overlays.numpy_handler.reshape_overlay_array"]], "apply_color_lut() (in module pydicom.pixel_data_handlers)": [[200, "pydicom.pixel_data_handlers.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers)": [[201, "pydicom.pixel_data_handlers.apply_modality_lut"]], "apply_rescale() (in module pydicom.pixel_data_handlers)": [[202, "pydicom.pixel_data_handlers.apply_rescale"]], "apply_voi() (in module pydicom.pixel_data_handlers)": [[203, "pydicom.pixel_data_handlers.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers)": [[204, "pydicom.pixel_data_handlers.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers)": [[205, "pydicom.pixel_data_handlers.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers)": [[206, "pydicom.pixel_data_handlers.convert_color_space"]], "create_data_element() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.create_data_element"]], "create_image() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.create_image"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.gdcm_handler": [[207, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[208, "pydicom.pixel_data_handlers.jpeg_ls_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[208, "pydicom.pixel_data_handlers.jpeg_ls_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[208, "pydicom.pixel_data_handlers.jpeg_ls_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[208, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[208, "pydicom.pixel_data_handlers.jpeg_ls_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[208, "pydicom.pixel_data_handlers.jpeg_ls_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.numpy_handler)": [[209, "pydicom.pixel_data_handlers.numpy_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.numpy_handler)": [[209, "pydicom.pixel_data_handlers.numpy_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[209, "pydicom.pixel_data_handlers.numpy_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.numpy_handler": [[209, "module-pydicom.pixel_data_handlers.numpy_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[209, "pydicom.pixel_data_handlers.numpy_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.numpy_handler)": [[209, "pydicom.pixel_data_handlers.numpy_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pillow_handler)": [[210, "pydicom.pixel_data_handlers.pillow_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pillow_handler)": [[210, "pydicom.pixel_data_handlers.pillow_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[210, "pydicom.pixel_data_handlers.pillow_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pillow_handler": [[210, "module-pydicom.pixel_data_handlers.pillow_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[210, "pydicom.pixel_data_handlers.pillow_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pillow_handler)": [[210, "pydicom.pixel_data_handlers.pillow_handler.supports_transfer_syntax"]], "as_array() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.as_array"]], "generate_frames() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.generate_frames"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[211, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.rle_handler)": [[212, "pydicom.pixel_data_handlers.rle_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.rle_handler)": [[212, "pydicom.pixel_data_handlers.rle_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[212, "pydicom.pixel_data_handlers.rle_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.rle_handler": [[212, "module-pydicom.pixel_data_handlers.rle_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[212, "pydicom.pixel_data_handlers.rle_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.rle_handler)": [[212, "pydicom.pixel_data_handlers.rle_handler.supports_transfer_syntax"]], "apply_color_lut() (in module pydicom.pixel_data_handlers.util)": [[213, "pydicom.pixel_data_handlers.util.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers.util)": [[213, "pydicom.pixel_data_handlers.util.apply_modality_lut"]], "apply_voi() (in module pydicom.pixel_data_handlers.util)": [[213, "pydicom.pixel_data_handlers.util.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers.util)": [[213, "pydicom.pixel_data_handlers.util.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers.util)": [[213, "pydicom.pixel_data_handlers.util.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers.util)": [[213, "pydicom.pixel_data_handlers.util.convert_color_space"]], "dtype_corrected_for_endianness() (in module pydicom.pixel_data_handlers.util)": [[213, "pydicom.pixel_data_handlers.util.dtype_corrected_for_endianness"]], "expand_ybr422() (in module pydicom.pixel_data_handlers.util)": [[213, "pydicom.pixel_data_handlers.util.expand_ybr422"]], "get_expected_length() (in module pydicom.pixel_data_handlers.util)": [[213, "pydicom.pixel_data_handlers.util.get_expected_length"]], "get_image_pixel_ids() (in module pydicom.pixel_data_handlers.util)": [[213, "pydicom.pixel_data_handlers.util.get_image_pixel_ids"]], "get_j2k_parameters() (in module pydicom.pixel_data_handlers.util)": [[213, "pydicom.pixel_data_handlers.util.get_j2k_parameters"]], "get_nr_frames() (in module pydicom.pixel_data_handlers.util)": [[213, "pydicom.pixel_data_handlers.util.get_nr_frames"]], "pack_bits() (in module pydicom.pixel_data_handlers.util)": [[213, "pydicom.pixel_data_handlers.util.pack_bits"]], "pixel_dtype() (in module pydicom.pixel_data_handlers.util)": [[213, "pydicom.pixel_data_handlers.util.pixel_dtype"]], "pydicom.pixel_data_handlers.util": [[213, "module-pydicom.pixel_data_handlers.util"]], "reshape_pixel_array() (in module pydicom.pixel_data_handlers.util)": [[213, "pydicom.pixel_data_handlers.util.reshape_pixel_array"]], "unpack_bits() (in module pydicom.pixel_data_handlers.util)": [[213, "pydicom.pixel_data_handlers.util.unpack_bits"]], "sequence (class in pydicom.sequence)": [[214, "pydicom.sequence.Sequence"]], "__init__() (pydicom.sequence.sequence method)": [[214, "pydicom.sequence.Sequence.__init__"]], "extend() (pydicom.sequence.sequence method)": [[214, "pydicom.sequence.Sequence.extend"]], "basetag (class in pydicom.tag)": [[215, "pydicom.tag.BaseTag"]], "__init__() (pydicom.tag.basetag method)": [[215, "pydicom.tag.BaseTag.__init__"]], "elem (pydicom.tag.basetag property)": [[215, "pydicom.tag.BaseTag.elem"]], "element (pydicom.tag.basetag property)": [[215, "pydicom.tag.BaseTag.element"]], "group (pydicom.tag.basetag property)": [[215, "pydicom.tag.BaseTag.group"]], "is_private (pydicom.tag.basetag property)": [[215, "pydicom.tag.BaseTag.is_private"]], "is_private_creator (pydicom.tag.basetag property)": [[215, "pydicom.tag.BaseTag.is_private_creator"]], "json_key (pydicom.tag.basetag property)": [[215, "pydicom.tag.BaseTag.json_key"]], "private_creator (pydicom.tag.basetag property)": [[215, "pydicom.tag.BaseTag.private_creator"]], "tag() (in module pydicom.tag)": [[216, "pydicom.tag.Tag"]], "tupletag() (in module pydicom.tag)": [[217, "pydicom.tag.TupleTag"]], "tag_in_exception() (in module pydicom.tag)": [[218, "pydicom.tag.tag_in_exception"]], "acquisitioncontextsrstorage (in module pydicom.uid)": [[219, "pydicom.uid.AcquisitionContextSRStorage"]], "advancedblendingpresentationstatestorage (in module pydicom.uid)": [[220, "pydicom.uid.AdvancedBlendingPresentationStateStorage"]], "alltransfersyntaxes (in module pydicom.uid)": [[221, "pydicom.uid.AllTransferSyntaxes"]], "ambulatoryecgwaveformstorage (in module pydicom.uid)": [[222, "pydicom.uid.AmbulatoryECGWaveformStorage"]], "arterialpulsewaveformstorage (in module pydicom.uid)": [[223, "pydicom.uid.ArterialPulseWaveformStorage"]], "autorefractionmeasurementsstorage (in module pydicom.uid)": [[224, "pydicom.uid.AutorefractionMeasurementsStorage"]], "basicstructureddisplaystorage (in module pydicom.uid)": [[225, "pydicom.uid.BasicStructuredDisplayStorage"]], "basictextsrstorage (in module pydicom.uid)": [[226, "pydicom.uid.BasicTextSRStorage"]], "basicvoiceaudiowaveformstorage (in module pydicom.uid)": [[227, "pydicom.uid.BasicVoiceAudioWaveformStorage"]], "blendingsoftcopypresentationstatestorage (in module pydicom.uid)": [[228, "pydicom.uid.BlendingSoftcopyPresentationStateStorage"]], "bodypositionwaveformstorage (in module pydicom.uid)": [[229, "pydicom.uid.BodyPositionWaveformStorage"]], "breastprojectionxrayimagestorageforpresentation (in module pydicom.uid)": [[230, "pydicom.uid.BreastProjectionXRayImageStorageForPresentation"]], "breastprojectionxrayimagestorageforprocessing (in module pydicom.uid)": [[231, "pydicom.uid.BreastProjectionXRayImageStorageForProcessing"]], "breasttomosynthesisimagestorage (in module pydicom.uid)": [[232, "pydicom.uid.BreastTomosynthesisImageStorage"]], "carmphotonelectronradiationrecordstorage (in module pydicom.uid)": [[233, "pydicom.uid.CArmPhotonElectronRadiationRecordStorage"]], "carmphotonelectronradiationstorage (in module pydicom.uid)": [[234, "pydicom.uid.CArmPhotonElectronRadiationStorage"]], "ctdefinedprocedureprotocolstorage (in module pydicom.uid)": [[235, "pydicom.uid.CTDefinedProcedureProtocolStorage"]], "ctimagestorage (in module pydicom.uid)": [[236, "pydicom.uid.CTImageStorage"]], "ctperformedprocedureprotocolstorage (in module pydicom.uid)": [[237, "pydicom.uid.CTPerformedProcedureProtocolStorage"]], "cardiacelectrophysiologywaveformstorage (in module pydicom.uid)": [[238, "pydicom.uid.CardiacElectrophysiologyWaveformStorage"]], "chestcadsrstorage (in module pydicom.uid)": [[239, "pydicom.uid.ChestCADSRStorage"]], "coloncadsrstorage (in module pydicom.uid)": [[240, "pydicom.uid.ColonCADSRStorage"]], "colorpalettestorage (in module pydicom.uid)": [[241, "pydicom.uid.ColorPaletteStorage"]], "colorsoftcopypresentationstatestorage (in module pydicom.uid)": [[242, "pydicom.uid.ColorSoftcopyPresentationStateStorage"]], "compositingplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[243, "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage"]], "comprehensive3dsrstorage (in module pydicom.uid)": [[244, "pydicom.uid.Comprehensive3DSRStorage"]], "comprehensivesrstorage (in module pydicom.uid)": [[245, "pydicom.uid.ComprehensiveSRStorage"]], "computedradiographyimagestorage (in module pydicom.uid)": [[246, "pydicom.uid.ComputedRadiographyImageStorage"]], "confocalmicroscopyimagestorage (in module pydicom.uid)": [[247, "pydicom.uid.ConfocalMicroscopyImageStorage"]], "confocalmicroscopytiledpyramidalimagestorage (in module pydicom.uid)": [[248, "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage"]], "contentassessmentresultsstorage (in module pydicom.uid)": [[249, "pydicom.uid.ContentAssessmentResultsStorage"]], "cornealtopographymapstorage (in module pydicom.uid)": [[250, "pydicom.uid.CornealTopographyMapStorage"]], "dicos2daitstorage (in module pydicom.uid)": [[251, "pydicom.uid.DICOS2DAITStorage"]], "dicos3daitstorage (in module pydicom.uid)": [[252, "pydicom.uid.DICOS3DAITStorage"]], "dicosctimagestorage (in module pydicom.uid)": [[253, "pydicom.uid.DICOSCTImageStorage"]], "dicosdigitalxrayimagestorageforpresentation (in module pydicom.uid)": [[254, "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation"]], "dicosdigitalxrayimagestorageforprocessing (in module pydicom.uid)": [[255, "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing"]], "dicosquadrupoleresonancestorage (in module pydicom.uid)": [[256, "pydicom.uid.DICOSQuadrupoleResonanceStorage"]], "dicosthreatdetectionreportstorage (in module pydicom.uid)": [[257, "pydicom.uid.DICOSThreatDetectionReportStorage"]], "deflatedexplicitvrlittleendian (in module pydicom.uid)": [[258, "pydicom.uid.DeflatedExplicitVRLittleEndian"]], "deformablespatialregistrationstorage (in module pydicom.uid)": [[259, "pydicom.uid.DeformableSpatialRegistrationStorage"]], "dermoscopicphotographyimagestorage (in module pydicom.uid)": [[260, "pydicom.uid.DermoscopicPhotographyImageStorage"]], "digitalintraoralxrayimagestorageforpresentation (in module pydicom.uid)": [[261, "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation"]], "digitalintraoralxrayimagestorageforprocessing (in module pydicom.uid)": [[262, "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing"]], "digitalmammographyxrayimagestorageforpresentation (in module pydicom.uid)": [[263, "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation"]], "digitalmammographyxrayimagestorageforprocessing (in module pydicom.uid)": [[264, "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing"]], "digitalxrayimagestorageforpresentation (in module pydicom.uid)": [[265, "pydicom.uid.DigitalXRayImageStorageForPresentation"]], "digitalxrayimagestorageforprocessing (in module pydicom.uid)": [[266, "pydicom.uid.DigitalXRayImageStorageForProcessing"]], "eddycurrentimagestorage (in module pydicom.uid)": [[267, "pydicom.uid.EddyCurrentImageStorage"]], "eddycurrentmultiframeimagestorage (in module pydicom.uid)": [[268, "pydicom.uid.EddyCurrentMultiFrameImageStorage"]], "electromyogramwaveformstorage (in module pydicom.uid)": [[269, "pydicom.uid.ElectromyogramWaveformStorage"]], "electrooculogramwaveformstorage (in module pydicom.uid)": [[270, "pydicom.uid.ElectrooculogramWaveformStorage"]], "encapsulatedcdastorage (in module pydicom.uid)": [[271, "pydicom.uid.EncapsulatedCDAStorage"]], "encapsulatedmtlstorage (in module pydicom.uid)": [[272, "pydicom.uid.EncapsulatedMTLStorage"]], "encapsulatedobjstorage (in module pydicom.uid)": [[273, "pydicom.uid.EncapsulatedOBJStorage"]], "encapsulatedpdfstorage (in module pydicom.uid)": [[274, "pydicom.uid.EncapsulatedPDFStorage"]], "encapsulatedstlstorage (in module pydicom.uid)": [[275, "pydicom.uid.EncapsulatedSTLStorage"]], "enhancedctimagestorage (in module pydicom.uid)": [[276, "pydicom.uid.EnhancedCTImageStorage"]], "enhancedcontinuousrtimagestorage (in module pydicom.uid)": [[277, "pydicom.uid.EnhancedContinuousRTImageStorage"]], "enhancedmrcolorimagestorage (in module pydicom.uid)": [[278, "pydicom.uid.EnhancedMRColorImageStorage"]], "enhancedmrimagestorage (in module pydicom.uid)": [[279, "pydicom.uid.EnhancedMRImageStorage"]], "enhancedpetimagestorage (in module pydicom.uid)": [[280, "pydicom.uid.EnhancedPETImageStorage"]], "enhancedrtimagestorage (in module pydicom.uid)": [[281, "pydicom.uid.EnhancedRTImageStorage"]], "enhancedsrstorage (in module pydicom.uid)": [[282, "pydicom.uid.EnhancedSRStorage"]], "enhancedusvolumestorage (in module pydicom.uid)": [[283, "pydicom.uid.EnhancedUSVolumeStorage"]], "enhancedxaimagestorage (in module pydicom.uid)": [[284, "pydicom.uid.EnhancedXAImageStorage"]], "enhancedxrfimagestorage (in module pydicom.uid)": [[285, "pydicom.uid.EnhancedXRFImageStorage"]], "enhancedxrayradiationdosesrstorage (in module pydicom.uid)": [[286, "pydicom.uid.EnhancedXRayRadiationDoseSRStorage"]], "explicitvrbigendian (in module pydicom.uid)": [[287, "pydicom.uid.ExplicitVRBigEndian"]], "explicitvrlittleendian (in module pydicom.uid)": [[288, "pydicom.uid.ExplicitVRLittleEndian"]], "extensiblesrstorage (in module pydicom.uid)": [[289, "pydicom.uid.ExtensibleSRStorage"]], "general32bitecgwaveformstorage (in module pydicom.uid)": [[290, "pydicom.uid.General32bitECGWaveformStorage"]], "generalaudiowaveformstorage (in module pydicom.uid)": [[291, "pydicom.uid.GeneralAudioWaveformStorage"]], "generalecgwaveformstorage (in module pydicom.uid)": [[292, "pydicom.uid.GeneralECGWaveformStorage"]], "genericimplanttemplatestorage (in module pydicom.uid)": [[293, "pydicom.uid.GenericImplantTemplateStorage"]], "grayscaleplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[294, "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage"]], "grayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[295, "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage"]], "hevcm10p51 (in module pydicom.uid)": [[296, "pydicom.uid.HEVCM10P51"]], "hevcmp51 (in module pydicom.uid)": [[297, "pydicom.uid.HEVCMP51"]], "htj2k (in module pydicom.uid)": [[298, "pydicom.uid.HTJ2K"]], "htj2klossless (in module pydicom.uid)": [[299, "pydicom.uid.HTJ2KLossless"]], "htj2klosslessrpcl (in module pydicom.uid)": [[300, "pydicom.uid.HTJ2KLosslessRPCL"]], "hangingprotocolstorage (in module pydicom.uid)": [[301, "pydicom.uid.HangingProtocolStorage"]], "hemodynamicwaveformstorage (in module pydicom.uid)": [[302, "pydicom.uid.HemodynamicWaveformStorage"]], "implantassemblytemplatestorage (in module pydicom.uid)": [[303, "pydicom.uid.ImplantAssemblyTemplateStorage"]], "implanttemplategroupstorage (in module pydicom.uid)": [[304, "pydicom.uid.ImplantTemplateGroupStorage"]], "implantationplansrstorage (in module pydicom.uid)": [[305, "pydicom.uid.ImplantationPlanSRStorage"]], "implicitvrlittleendian (in module pydicom.uid)": [[306, "pydicom.uid.ImplicitVRLittleEndian"]], "intraocularlenscalculationsstorage (in module pydicom.uid)": [[307, "pydicom.uid.IntraocularLensCalculationsStorage"]], "intravascularopticalcoherencetomographyimagestorageforpresentation (in module pydicom.uid)": [[308, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation"]], "intravascularopticalcoherencetomographyimagestorageforprocessing (in module pydicom.uid)": [[309, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing"]], "inventorystorage (in module pydicom.uid)": [[310, "pydicom.uid.InventoryStorage"]], "jpeg2000 (in module pydicom.uid)": [[311, "pydicom.uid.JPEG2000"]], "jpeg2000lossless (in module pydicom.uid)": [[312, "pydicom.uid.JPEG2000Lossless"]], "jpeg2000mc (in module pydicom.uid)": [[313, "pydicom.uid.JPEG2000MC"]], "jpeg2000mclossless (in module pydicom.uid)": [[314, "pydicom.uid.JPEG2000MCLossless"]], "jpeg2000transfersyntaxes (in module pydicom.uid)": [[315, "pydicom.uid.JPEG2000TransferSyntaxes"]], "jpegbaseline8bit (in module pydicom.uid)": [[316, "pydicom.uid.JPEGBaseline8Bit"]], "jpegextended12bit (in module pydicom.uid)": [[317, "pydicom.uid.JPEGExtended12Bit"]], "jpeglslossless (in module pydicom.uid)": [[318, "pydicom.uid.JPEGLSLossless"]], "jpeglsnearlossless (in module pydicom.uid)": [[319, "pydicom.uid.JPEGLSNearLossless"]], "jpeglstransfersyntaxes (in module pydicom.uid)": [[320, "pydicom.uid.JPEGLSTransferSyntaxes"]], "jpeglossless (in module pydicom.uid)": [[321, "pydicom.uid.JPEGLossless"]], "jpeglosslesssv1 (in module pydicom.uid)": [[322, "pydicom.uid.JPEGLosslessSV1"]], "jpegtransfersyntaxes (in module pydicom.uid)": [[323, "pydicom.uid.JPEGTransferSyntaxes"]], "jpiphtj2kreferenced (in module pydicom.uid)": [[324, "pydicom.uid.JPIPHTJ2KReferenced"]], "jpiphtj2kreferenceddeflate (in module pydicom.uid)": [[325, "pydicom.uid.JPIPHTJ2KReferencedDeflate"]], "keratometrymeasurementsstorage (in module pydicom.uid)": [[326, "pydicom.uid.KeratometryMeasurementsStorage"]], "keyobjectselectiondocumentstorage (in module pydicom.uid)": [[327, "pydicom.uid.KeyObjectSelectionDocumentStorage"]], "legacyconvertedenhancedctimagestorage (in module pydicom.uid)": [[328, "pydicom.uid.LegacyConvertedEnhancedCTImageStorage"]], "legacyconvertedenhancedmrimagestorage (in module pydicom.uid)": [[329, "pydicom.uid.LegacyConvertedEnhancedMRImageStorage"]], "legacyconvertedenhancedpetimagestorage (in module pydicom.uid)": [[330, "pydicom.uid.LegacyConvertedEnhancedPETImageStorage"]], "lensometrymeasurementsstorage (in module pydicom.uid)": [[331, "pydicom.uid.LensometryMeasurementsStorage"]], "mpeg2mphl (in module pydicom.uid)": [[332, "pydicom.uid.MPEG2MPHL"]], "mpeg2mphlf (in module pydicom.uid)": [[333, "pydicom.uid.MPEG2MPHLF"]], "mpeg2mpml (in module pydicom.uid)": [[334, "pydicom.uid.MPEG2MPML"]], "mpeg2mpmlf (in module pydicom.uid)": [[335, "pydicom.uid.MPEG2MPMLF"]], "mpeg4hp41 (in module pydicom.uid)": [[336, "pydicom.uid.MPEG4HP41"]], "mpeg4hp41bd (in module pydicom.uid)": [[337, "pydicom.uid.MPEG4HP41BD"]], "mpeg4hp41bdf (in module pydicom.uid)": [[338, "pydicom.uid.MPEG4HP41BDF"]], "mpeg4hp41f (in module pydicom.uid)": [[339, "pydicom.uid.MPEG4HP41F"]], "mpeg4hp422d (in module pydicom.uid)": [[340, "pydicom.uid.MPEG4HP422D"]], "mpeg4hp422df (in module pydicom.uid)": [[341, "pydicom.uid.MPEG4HP422DF"]], "mpeg4hp423d (in module pydicom.uid)": [[342, "pydicom.uid.MPEG4HP423D"]], "mpeg4hp423df (in module pydicom.uid)": [[343, "pydicom.uid.MPEG4HP423DF"]], "mpeg4hp42stereo (in module pydicom.uid)": [[344, "pydicom.uid.MPEG4HP42STEREO"]], "mpeg4hp42stereof (in module pydicom.uid)": [[345, "pydicom.uid.MPEG4HP42STEREOF"]], "mpegtransfersyntaxes (in module pydicom.uid)": [[346, "pydicom.uid.MPEGTransferSyntaxes"]], "mrimagestorage (in module pydicom.uid)": [[347, "pydicom.uid.MRImageStorage"]], "mrspectroscopystorage (in module pydicom.uid)": [[348, "pydicom.uid.MRSpectroscopyStorage"]], "maculargridthicknessandvolumereportstorage (in module pydicom.uid)": [[349, "pydicom.uid.MacularGridThicknessAndVolumeReportStorage"]], "mammographycadsrstorage (in module pydicom.uid)": [[350, "pydicom.uid.MammographyCADSRStorage"]], "mediastoragedirectorystorage (in module pydicom.uid)": [[351, "pydicom.uid.MediaStorageDirectoryStorage"]], "microscopybulksimpleannotationsstorage (in module pydicom.uid)": [[352, "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage"]], "multiframegrayscalebytesecondarycaptureimagestorage (in module pydicom.uid)": [[353, "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage"]], "multiframegrayscalewordsecondarycaptureimagestorage (in module pydicom.uid)": [[354, "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage"]], "multiframesinglebitsecondarycaptureimagestorage (in module pydicom.uid)": [[355, "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage"]], "multiframetruecolorsecondarycaptureimagestorage (in module pydicom.uid)": [[356, "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage"]], "multichannelrespiratorywaveformstorage (in module pydicom.uid)": [[357, "pydicom.uid.MultichannelRespiratoryWaveformStorage"]], "multiplevolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[358, "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage"]], "nuclearmedicineimagestorage (in module pydicom.uid)": [[359, "pydicom.uid.NuclearMedicineImageStorage"]], "ophthalmicaxialmeasurementsstorage (in module pydicom.uid)": [[360, "pydicom.uid.OphthalmicAxialMeasurementsStorage"]], "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage (in module pydicom.uid)": [[361, "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"]], "ophthalmicopticalcoherencetomographyenfaceimagestorage (in module pydicom.uid)": [[362, "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"]], "ophthalmicphotography16bitimagestorage (in module pydicom.uid)": [[363, "pydicom.uid.OphthalmicPhotography16BitImageStorage"]], "ophthalmicphotography8bitimagestorage (in module pydicom.uid)": [[364, "pydicom.uid.OphthalmicPhotography8BitImageStorage"]], "ophthalmicthicknessmapstorage (in module pydicom.uid)": [[365, "pydicom.uid.OphthalmicThicknessMapStorage"]], "ophthalmictomographyimagestorage (in module pydicom.uid)": [[366, "pydicom.uid.OphthalmicTomographyImageStorage"]], "ophthalmicvisualfieldstaticperimetrymeasurementsstorage (in module pydicom.uid)": [[367, "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"]], "pydicom_implementation_uid (in module pydicom.uid)": [[368, "pydicom.uid.PYDICOM_IMPLEMENTATION_UID"]], "pydicom_root_uid (in module pydicom.uid)": [[369, "pydicom.uid.PYDICOM_ROOT_UID"]], "parametricmapstorage (in module pydicom.uid)": [[370, "pydicom.uid.ParametricMapStorage"]], "patientradiationdosesrstorage (in module pydicom.uid)": [[371, "pydicom.uid.PatientRadiationDoseSRStorage"]], "performedimagingagentadministrationsrstorage (in module pydicom.uid)": [[372, "pydicom.uid.PerformedImagingAgentAdministrationSRStorage"]], "photoacousticimagestorage (in module pydicom.uid)": [[373, "pydicom.uid.PhotoacousticImageStorage"]], "plannedimagingagentadministrationsrstorage (in module pydicom.uid)": [[374, "pydicom.uid.PlannedImagingAgentAdministrationSRStorage"]], "positronemissiontomographyimagestorage (in module pydicom.uid)": [[375, "pydicom.uid.PositronEmissionTomographyImageStorage"]], "procedurelogstorage (in module pydicom.uid)": [[376, "pydicom.uid.ProcedureLogStorage"]], "protocolapprovalstorage (in module pydicom.uid)": [[377, "pydicom.uid.ProtocolApprovalStorage"]], "pseudocolorsoftcopypresentationstatestorage (in module pydicom.uid)": [[378, "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage"]], "re_valid_uid (in module pydicom.uid)": [[379, "pydicom.uid.RE_VALID_UID"]], "re_valid_uid_prefix (in module pydicom.uid)": [[380, "pydicom.uid.RE_VALID_UID_PREFIX"]], "rlelossless (in module pydicom.uid)": [[381, "pydicom.uid.RLELossless"]], "rletransfersyntaxes (in module pydicom.uid)": [[382, "pydicom.uid.RLETransferSyntaxes"]], "rtbeamsdeliveryinstructionstorage (in module pydicom.uid)": [[383, "pydicom.uid.RTBeamsDeliveryInstructionStorage"]], "rtbeamstreatmentrecordstorage (in module pydicom.uid)": [[384, "pydicom.uid.RTBeamsTreatmentRecordStorage"]], "rtbrachyapplicationsetupdeliveryinstructionstorage (in module pydicom.uid)": [[385, "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage"]], "rtbrachytreatmentrecordstorage (in module pydicom.uid)": [[386, "pydicom.uid.RTBrachyTreatmentRecordStorage"]], "rtdosestorage (in module pydicom.uid)": [[387, "pydicom.uid.RTDoseStorage"]], "rtimagestorage (in module pydicom.uid)": [[388, "pydicom.uid.RTImageStorage"]], "rtionbeamstreatmentrecordstorage (in module pydicom.uid)": [[389, "pydicom.uid.RTIonBeamsTreatmentRecordStorage"]], "rtionplanstorage (in module pydicom.uid)": [[390, "pydicom.uid.RTIonPlanStorage"]], "rtpatientpositionacquisitioninstructionstorage (in module pydicom.uid)": [[391, "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage"]], "rtphysicianintentstorage (in module pydicom.uid)": [[392, "pydicom.uid.RTPhysicianIntentStorage"]], "rtplanstorage (in module pydicom.uid)": [[393, "pydicom.uid.RTPlanStorage"]], "rtradiationrecordsetstorage (in module pydicom.uid)": [[394, "pydicom.uid.RTRadiationRecordSetStorage"]], "rtradiationsalvagerecordstorage (in module pydicom.uid)": [[395, "pydicom.uid.RTRadiationSalvageRecordStorage"]], "rtradiationsetdeliveryinstructionstorage (in module pydicom.uid)": [[396, "pydicom.uid.RTRadiationSetDeliveryInstructionStorage"]], "rtradiationsetstorage (in module pydicom.uid)": [[397, "pydicom.uid.RTRadiationSetStorage"]], "rtsegmentannotationstorage (in module pydicom.uid)": [[398, "pydicom.uid.RTSegmentAnnotationStorage"]], "rtstructuresetstorage (in module pydicom.uid)": [[399, "pydicom.uid.RTStructureSetStorage"]], "rttreatmentpreparationstorage (in module pydicom.uid)": [[400, "pydicom.uid.RTTreatmentPreparationStorage"]], "rttreatmentsummaryrecordstorage (in module pydicom.uid)": [[401, "pydicom.uid.RTTreatmentSummaryRecordStorage"]], "radiopharmaceuticalradiationdosesrstorage (in module pydicom.uid)": [[402, "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage"]], "rawdatastorage (in module pydicom.uid)": [[403, "pydicom.uid.RawDataStorage"]], "realworldvaluemappingstorage (in module pydicom.uid)": [[404, "pydicom.uid.RealWorldValueMappingStorage"]], "respiratorywaveformstorage (in module pydicom.uid)": [[405, "pydicom.uid.RespiratoryWaveformStorage"]], "roboticarmradiationstorage (in module pydicom.uid)": [[406, "pydicom.uid.RoboticArmRadiationStorage"]], "roboticradiationrecordstorage (in module pydicom.uid)": [[407, "pydicom.uid.RoboticRadiationRecordStorage"]], "routinescalpelectroencephalogramwaveformstorage (in module pydicom.uid)": [[408, "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage"]], "smptest211020uncompressedinterlacedactivevideo (in module pydicom.uid)": [[409, "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo"]], "smptest211020uncompressedprogressiveactivevideo (in module pydicom.uid)": [[410, "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo"]], "smptest211030pcmdigitalaudio (in module pydicom.uid)": [[411, "pydicom.uid.SMPTEST211030PCMDigitalAudio"]], "secondarycaptureimagestorage (in module pydicom.uid)": [[412, "pydicom.uid.SecondaryCaptureImageStorage"]], "segmentationstorage (in module pydicom.uid)": [[413, "pydicom.uid.SegmentationStorage"]], "segmentedvolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[414, "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage"]], "simplifiedadultechosrstorage (in module pydicom.uid)": [[415, "pydicom.uid.SimplifiedAdultEchoSRStorage"]], "sleepelectroencephalogramwaveformstorage (in module pydicom.uid)": [[416, "pydicom.uid.SleepElectroencephalogramWaveformStorage"]], "spatialfiducialsstorage (in module pydicom.uid)": [[417, "pydicom.uid.SpatialFiducialsStorage"]], "spatialregistrationstorage (in module pydicom.uid)": [[418, "pydicom.uid.SpatialRegistrationStorage"]], "spectacleprescriptionreportstorage (in module pydicom.uid)": [[419, "pydicom.uid.SpectaclePrescriptionReportStorage"]], "stereometricrelationshipstorage (in module pydicom.uid)": [[420, "pydicom.uid.StereometricRelationshipStorage"]], "subjectiverefractionmeasurementsstorage (in module pydicom.uid)": [[421, "pydicom.uid.SubjectiveRefractionMeasurementsStorage"]], "surfacescanmeshstorage (in module pydicom.uid)": [[422, "pydicom.uid.SurfaceScanMeshStorage"]], "surfacescanpointcloudstorage (in module pydicom.uid)": [[423, "pydicom.uid.SurfaceScanPointCloudStorage"]], "surfacesegmentationstorage (in module pydicom.uid)": [[424, "pydicom.uid.SurfaceSegmentationStorage"]], "tomotherapeuticradiationrecordstorage (in module pydicom.uid)": [[425, "pydicom.uid.TomotherapeuticRadiationRecordStorage"]], "tomotherapeuticradiationstorage (in module pydicom.uid)": [[426, "pydicom.uid.TomotherapeuticRadiationStorage"]], "tractographyresultsstorage (in module pydicom.uid)": [[427, "pydicom.uid.TractographyResultsStorage"]], "twelveleadecgwaveformstorage (in module pydicom.uid)": [[428, "pydicom.uid.TwelveLeadECGWaveformStorage"]], "uid (class in pydicom.uid)": [[429, "pydicom.uid.UID"]], "__init__() (pydicom.uid.uid method)": [[429, "pydicom.uid.UID.__init__"]], "info (pydicom.uid.uid property)": [[429, "pydicom.uid.UID.info"]], "is_compressed (pydicom.uid.uid property)": [[429, "pydicom.uid.UID.is_compressed"]], "is_deflated (pydicom.uid.uid property)": [[429, "pydicom.uid.UID.is_deflated"]], "is_encapsulated (pydicom.uid.uid property)": [[429, "pydicom.uid.UID.is_encapsulated"]], "is_implicit_vr (pydicom.uid.uid property)": [[429, "pydicom.uid.UID.is_implicit_VR"]], "is_little_endian (pydicom.uid.uid property)": [[429, "pydicom.uid.UID.is_little_endian"]], "is_private (pydicom.uid.uid property)": [[429, "pydicom.uid.UID.is_private"]], "is_retired (pydicom.uid.uid property)": [[429, "pydicom.uid.UID.is_retired"]], "is_transfer_syntax (pydicom.uid.uid property)": [[429, "pydicom.uid.UID.is_transfer_syntax"]], "is_valid (pydicom.uid.uid property)": [[429, "pydicom.uid.UID.is_valid"]], "keyword (pydicom.uid.uid property)": [[429, "pydicom.uid.UID.keyword"]], "name (pydicom.uid.uid property)": [[429, "pydicom.uid.UID.name"]], "set_private_encoding() (pydicom.uid.uid method)": [[429, "pydicom.uid.UID.set_private_encoding"]], "type (pydicom.uid.uid property)": [[429, "pydicom.uid.UID.type"]], "ultrasoundimagestorage (in module pydicom.uid)": [[430, "pydicom.uid.UltrasoundImageStorage"]], "ultrasoundmultiframeimagestorage (in module pydicom.uid)": [[431, "pydicom.uid.UltrasoundMultiFrameImageStorage"]], "uncompressedtransfersyntaxes (in module pydicom.uid)": [[432, "pydicom.uid.UncompressedTransferSyntaxes"]], "vlendoscopicimagestorage (in module pydicom.uid)": [[433, "pydicom.uid.VLEndoscopicImageStorage"]], "vlmicroscopicimagestorage (in module pydicom.uid)": [[434, "pydicom.uid.VLMicroscopicImageStorage"]], "vlphotographicimagestorage (in module pydicom.uid)": [[435, "pydicom.uid.VLPhotographicImageStorage"]], "vlslidecoordinatesmicroscopicimagestorage (in module pydicom.uid)": [[436, "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage"]], "vlwholeslidemicroscopyimagestorage (in module pydicom.uid)": [[437, "pydicom.uid.VLWholeSlideMicroscopyImageStorage"]], "variablemodalitylutsoftcopypresentationstatestorage (in module pydicom.uid)": [[438, "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage"]], "videoendoscopicimagestorage (in module pydicom.uid)": [[439, "pydicom.uid.VideoEndoscopicImageStorage"]], "videomicroscopicimagestorage (in module pydicom.uid)": [[440, "pydicom.uid.VideoMicroscopicImageStorage"]], "videophotographicimagestorage (in module pydicom.uid)": [[441, "pydicom.uid.VideoPhotographicImageStorage"]], "visualacuitymeasurementsstorage (in module pydicom.uid)": [[442, "pydicom.uid.VisualAcuityMeasurementsStorage"]], "volumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[443, "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage"]], "widefieldophthalmicphotography3dcoordinatesimagestorage (in module pydicom.uid)": [[444, "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage"]], "widefieldophthalmicphotographystereographicprojectionimagestorage (in module pydicom.uid)": [[445, "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"]], "xadefinedprocedureprotocolstorage (in module pydicom.uid)": [[446, "pydicom.uid.XADefinedProcedureProtocolStorage"]], "xaperformedprocedureprotocolstorage (in module pydicom.uid)": [[447, "pydicom.uid.XAPerformedProcedureProtocolStorage"]], "xaxrfgrayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[448, "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage"]], "xray3dangiographicimagestorage (in module pydicom.uid)": [[449, "pydicom.uid.XRay3DAngiographicImageStorage"]], "xray3dcraniofacialimagestorage (in module pydicom.uid)": [[450, "pydicom.uid.XRay3DCraniofacialImageStorage"]], "xrayangiographicimagestorage (in module pydicom.uid)": [[451, "pydicom.uid.XRayAngiographicImageStorage"]], "xrayradiationdosesrstorage (in module pydicom.uid)": [[452, "pydicom.uid.XRayRadiationDoseSRStorage"]], "xrayradiofluoroscopicimagestorage (in module pydicom.uid)": [[453, "pydicom.uid.XRayRadiofluoroscopicImageStorage"]], "generate_uid() (in module pydicom.uid)": [[454, "pydicom.uid.generate_uid"]], "da (class in pydicom.valuerep)": [[455, "pydicom.valuerep.DA"]], "__init__() (pydicom.valuerep.da method)": [[455, "pydicom.valuerep.DA.__init__"]], "ds() (in module pydicom.valuerep)": [[456, "pydicom.valuerep.DS"]], "dsdecimal (class in pydicom.valuerep)": [[457, "pydicom.valuerep.DSdecimal"]], "__init__() (pydicom.valuerep.dsdecimal method)": [[457, "pydicom.valuerep.DSdecimal.__init__"]], "dsfloat (class in pydicom.valuerep)": [[458, "pydicom.valuerep.DSfloat"]], "__init__() (pydicom.valuerep.dsfloat method)": [[458, "pydicom.valuerep.DSfloat.__init__"]], "dt (class in pydicom.valuerep)": [[459, "pydicom.valuerep.DT"]], "__init__() (pydicom.valuerep.dt method)": [[459, "pydicom.valuerep.DT.__init__"]], "is (class in pydicom.valuerep)": [[460, "pydicom.valuerep.IS"]], "__init__() (pydicom.valuerep.is method)": [[460, "pydicom.valuerep.IS.__init__"]], "isfloat (class in pydicom.valuerep)": [[461, "pydicom.valuerep.ISfloat"]], "__init__() (pydicom.valuerep.isfloat method)": [[461, "pydicom.valuerep.ISfloat.__init__"]], "personname (class in pydicom.valuerep)": [[462, "pydicom.valuerep.PersonName"]], "__init__() (pydicom.valuerep.personname method)": [[462, "pydicom.valuerep.PersonName.__init__"]], "alphabetic (pydicom.valuerep.personname property)": [[462, "pydicom.valuerep.PersonName.alphabetic"]], "components (pydicom.valuerep.personname property)": [[462, "pydicom.valuerep.PersonName.components"]], "decode() (pydicom.valuerep.personname method)": [[462, "pydicom.valuerep.PersonName.decode"]], "encode() (pydicom.valuerep.personname method)": [[462, "pydicom.valuerep.PersonName.encode"]], "family_comma_given() (pydicom.valuerep.personname method)": [[462, "pydicom.valuerep.PersonName.family_comma_given"]], "family_name (pydicom.valuerep.personname property)": [[462, "pydicom.valuerep.PersonName.family_name"]], "formatted() (pydicom.valuerep.personname method)": [[462, "pydicom.valuerep.PersonName.formatted"]], "from_named_components() (pydicom.valuerep.personname class method)": [[462, "pydicom.valuerep.PersonName.from_named_components"]], "from_named_components_veterinary() (pydicom.valuerep.personname class method)": [[462, "pydicom.valuerep.PersonName.from_named_components_veterinary"]], "given_name (pydicom.valuerep.personname property)": [[462, "pydicom.valuerep.PersonName.given_name"]], "ideographic (pydicom.valuerep.personname property)": [[462, "pydicom.valuerep.PersonName.ideographic"]], "middle_name (pydicom.valuerep.personname property)": [[462, "pydicom.valuerep.PersonName.middle_name"]], "name_prefix (pydicom.valuerep.personname property)": [[462, "pydicom.valuerep.PersonName.name_prefix"]], "name_suffix (pydicom.valuerep.personname property)": [[462, "pydicom.valuerep.PersonName.name_suffix"]], "phonetic (pydicom.valuerep.personname property)": [[462, "pydicom.valuerep.PersonName.phonetic"]], "tm (class in pydicom.valuerep)": [[463, "pydicom.valuerep.TM"]], "__init__() (pydicom.valuerep.tm method)": [[463, "pydicom.valuerep.TM.__init__"]], "vr (class in pydicom.valuerep)": [[464, "pydicom.valuerep.VR"]], "__init__() (pydicom.valuerep.vr method)": [[464, "pydicom.valuerep.VR.__init__"]], "format_number_as_ds() (in module pydicom.valuerep)": [[465, "pydicom.valuerep.format_number_as_ds"]], "is_valid_ds() (in module pydicom.valuerep)": [[466, "pydicom.valuerep.is_valid_ds"]], "convert_ae_string() (in module pydicom.values)": [[467, "pydicom.values.convert_AE_string"]], "convert_atvalue() (in module pydicom.values)": [[468, "pydicom.values.convert_ATvalue"]], "convert_da_string() (in module pydicom.values)": [[469, "pydicom.values.convert_DA_string"]], "convert_ds_string() (in module pydicom.values)": [[470, "pydicom.values.convert_DS_string"]], "convert_dt_string() (in module pydicom.values)": [[471, "pydicom.values.convert_DT_string"]], "convert_is_string() (in module pydicom.values)": [[472, "pydicom.values.convert_IS_string"]], "convert_obvalue() (in module pydicom.values)": [[473, "pydicom.values.convert_OBvalue"]], "convert_owvalue() (in module pydicom.values)": [[474, "pydicom.values.convert_OWvalue"]], "convert_pn() (in module pydicom.values)": [[475, "pydicom.values.convert_PN"]], "convert_sq() (in module pydicom.values)": [[476, "pydicom.values.convert_SQ"]], "convert_tm_string() (in module pydicom.values)": [[477, "pydicom.values.convert_TM_string"]], "convert_ui() (in module pydicom.values)": [[478, "pydicom.values.convert_UI"]], "convert_un() (in module pydicom.values)": [[479, "pydicom.values.convert_UN"]], "convert_ur_string() (in module pydicom.values)": [[480, "pydicom.values.convert_UR_string"]], "convert_numbers() (in module pydicom.values)": [[481, "pydicom.values.convert_numbers"]], "convert_single_string() (in module pydicom.values)": [[482, "pydicom.values.convert_single_string"]], "convert_string() (in module pydicom.values)": [[483, "pydicom.values.convert_string"]], "convert_tag() (in module pydicom.values)": [[484, "pydicom.values.convert_tag"]], "convert_text() (in module pydicom.values)": [[485, "pydicom.values.convert_text"]], "convert_value() (in module pydicom.values)": [[486, "pydicom.values.convert_value"]], "multi_string() (in module pydicom.values)": [[487, "pydicom.values.multi_string"]], "generate_multiplex() (in module pydicom.waveforms.numpy_handler)": [[488, "pydicom.waveforms.numpy_handler.generate_multiplex"]], "is_available() (in module pydicom.waveforms.numpy_handler)": [[488, "pydicom.waveforms.numpy_handler.is_available"]], "multiplex_array() (in module pydicom.waveforms.numpy_handler)": [[488, "pydicom.waveforms.numpy_handler.multiplex_array"]], "pydicom.waveforms.numpy_handler": [[488, "module-pydicom.waveforms.numpy_handler"]], "pydicom.overlays": [[490, "module-pydicom.overlays"]], "pydicom.pixel_data_handlers": [[491, "module-pydicom.pixel_data_handlers"]], "pydicom.waveforms": [[492, "module-pydicom.waveforms"]], "pydicom": [[493, "module-pydicom"]]}})