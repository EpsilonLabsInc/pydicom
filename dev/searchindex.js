Search.setIndex({"alltitles": {"(Optional) Install required libraries": [[583, "optional-install-required-libraries"]], "A simple example": [[24, "a-simple-example"], [26, "a-simple-example"]], "API Reference": [[42, "api-reference"], [549, "api-reference"]], "Add items to the private DICOM dictionary": [[16, "add-items-to-the-private-dicom-dictionary"]], "Adding Plugins to a Decoder": [[30, "adding-plugins-to-a-decoder"]], "Adding Plugins to an Encoder": [[34, "adding-plugins-to-an-encoder"]], "Adding SOP instances": [[587, "adding-sop-instances"]], "Adding elements": [[585, "adding-elements"]], "Adding new entries to the DICOM dictionary": [[48, "adding-new-entries-to-the-dicom-dictionary"]], "Analyse differences between DICOM files": [[20, "analyse-differences-between-dicom-files"]], "Anonymize DICOM data": [[17, "anonymize-dicom-data"]], "Anonymize a single file": [[17, "anonymize-a-single-file"]], "Any category": [[585, "any-category"]], "Applying the changes": [[587, "applying-the-changes"]], "Available Plugins": [[36, "available-plugins"], [37, "available-plugins"], [38, "available-plugins"]], "Best Practices": [[44, "best-practices"]], "Bits Stored": [[36, "bits-stored"]], "Bug Fixes": [[559, "id44"], [559, "id48"], [560, "bug-fixes"], [561, "bug-fixes"]], "Bug fixes": [[559, "bug-fixes"], [559, "id36"], [559, "id39"], [564, "bug-fixes"], [565, "bug-fixes"], [566, "bug-fixes"]], "Build and preview the documentation": [[584, "build-and-preview-the-documentation"]], "Bulk Data Encapsulation Utilities (pydicom.encaps)": [[68, "module-pydicom.encaps"]], "Bulk Data Handlers": [[547, "bulk-data-handlers"]], "Changelog": [[559, "changelog"], [574, "changelog"]], "Changes": [[559, "changes"], [559, "id1"], [559, "id5"], [559, "id8"], [559, "id13"], [559, "id18"], [559, "id21"], [559, "id22"], [559, "id25"], [570, "changes"], [571, "changes"], [572, "changes"], [573, "changes"], [575, "changes"], [577, "changes"], [578, "changes"], [579, "changes"], [580, "changes"]], "Character Encoding and Decoding (pydicom.charset)": [[56, "character-encoding-and-decoding-pydicom-charset"]], "Codifying a part of a DICOM file": [[24, "codifying-a-part-of-a-dicom-file"], [26, "codifying-a-part-of-a-dicom-file"]], "Color space": [[53, "color-space"]], "Combining with other CLIs": [[26, "combining-with-other-clis"], [27, "combining-with-other-clis"]], "Command options": [[24, "command-options"], [26, "command-options"]], "Command-line Interface Guide": [[26, "command-line-interface-guide"]], "Commit your changes and make a pull request": [[583, "commit-your-changes-and-make-a-pull-request"], [584, "commit-your-changes-and-make-a-pull-request"]], "Compressing Pixel Data": [[46, "compressing-pixel-data"], [590, "compressing-pixel-data"]], "Compressing using pydicom": [[46, "compressing-using-pydicom"], [590, "compressing-using-pydicom"]], "Compressing using third-party packages": [[46, "compressing-using-third-party-packages"]], "Compressing with Dataset.compress()": [[46, "compressing-with-dataset-compress"]], "Computation times": [[5, "computation-times"], [13, "computation-times"], [19, "computation-times"], [21, "computation-times"], [581, "computation-times"]], "Conclusion": [[587, "conclusion"]], "Configuration Options (pydicom.config)": [[57, "configuration-options-pydicom-config"]], "Contrib file changes": [[559, "contrib-file-changes"], [559, "id34"], [566, "contrib-file-changes"], [567, "contrib-file-changes"]], "Contributing a documentation change": [[584, "contributing-a-documentation-change"]], "Contributing a source code change": [[583, "contributing-a-source-code-change"]], "Contributing to pydicom": [[582, "contributing-to-pydicom"]], "Converting a dataset into JSON format": [[586, "converting-a-dataset-into-json-format"]], "Core elements in pydicom": [[43, "core-elements-in-pydicom"]], "Create a new branch": [[583, "create-a-new-branch"], [584, "create-a-new-branch"]], "Creating Encapsulated Data": [[68, "creating-encapsulated-data"]], "Creating a dataset from JSON": [[586, "creating-a-dataset-from-json"]], "Creating a new File-set": [[587, "creating-a-new-file-set"]], "DICOM Data Dictionary": [[59, "dicom-data-dictionary"]], "DICOM File-sets (pydicom.fileset)": [[76, "dicom-file-sets-pydicom-fileset"]], "DICOM File-sets and DICOMDIR": [[587, "dicom-file-sets-and-dicomdir"]], "Data Dictionary Utilities (pydicom.datadict)": [[59, "data-dictionary-utilities-pydicom-datadict"]], "Data Elements (pydicom.dataelem)": [[62, "data-elements-pydicom-dataelem"]], "DataElement": [[43, "dataelement"]], "Dataset": [[43, "dataset"]], "Dataset IO": [[71, "dataset-io"]], "Dataset Reading (pydicom.filereader)": [[73, "dataset-reading-pydicom-filereader"]], "Dataset Writing (pydicom.filewriter)": [[75, "dataset-writing-pydicom-filewriter"]], "Dataset basics: read, access, modify, write": [[585, "dataset-basics-read-access-modify-write"]], "Dataset.overlay_array()": [[52, "dataset-overlay-array"]], "Dataset.pixel_array": [[53, "dataset-pixel-array"]], "Dataset.waveform_array()": [[54, "dataset-waveform-array"]], "Decode and plot Waveform Data": [[3, "decode-and-plot-waveform-data"]], "Decoding Plugin Options": [[29, "decoding-plugin-options"]], "Decoding Waveform Data": [[592, "decoding-waveform-data"]], "Deleting elements": [[585, "deleting-elements"]], "Deprecations": [[559, "deprecations"], [580, "deprecations"]], "Display unicode person names": [[22, "display-unicode-person-names"]], "Displaying Private Data Elements in pydicom": [[48, "displaying-private-data-elements-in-pydicom"]], "Documentation": [[559, "documentation"], [571, "documentation"]], "Download the current source code": [[583, "download-the-current-source-code"]], "Download the documentation": [[584, "download-the-documentation"]], "Downloading example/test DICOM files": [[589, "downloading-example-test-dicom-files"]], "Downsize MRI image using pydicom": [[2, "downsize-mri-image-using-pydicom"]], "Element Multi-value Representation (pydicom.multival)": [[63, "element-multi-value-representation-pydicom-multival"]], "Element Tags (pydicom.tag)": [[65, "element-tags-pydicom-tag"]], "Element VRs and Python types": [[32, "element-vrs-and-python-types"]], "Element Value Decoding (pydicom.values)": [[67, "element-value-decoding-pydicom-values"]], "Elements": [[585, "elements"]], "Encapsulating data compressed by third-party packages": [[590, "encapsulating-data-compressed-by-third-party-packages"]], "Encoder Plugins Options": [[33, "encoder-plugins-options"]], "Encoding Waveform Data": [[592, "encoding-waveform-data"]], "Enforcing Valid DICOM": [[44, "enforcing-valid-dicom"]], "Enhancements": [[559, "enhancements"], [559, "id2"], [559, "id6"], [559, "id9"], [559, "id12"], [559, "id15"], [559, "id20"], [559, "id23"], [559, "id26"], [559, "id28"], [559, "id31"], [559, "id33"], [566, "enhancements"], [567, "enhancements"], [569, "enhancements"], [570, "enhancements"], [571, "enhancements"], [572, "enhancements"], [574, "enhancements"], [575, "enhancements"], [577, "enhancements"], [578, "enhancements"], [579, "enhancements"], [580, "enhancements"]], "Example Datasets (pydicom.examples)": [[70, "example-datasets-pydicom-examples"]], "Examples": [[36, "examples"], [37, "examples"], [38, "examples"], [42, "examples"]], "Exceptions (pydicom.errors)": [[69, "exceptions-pydicom-errors"]], "Extending the CLI": [[25, "extending-the-cli"], [26, "extending-the-cli"]], "File Meta Information": [[39, "file-meta-information"]], "File Reading/Parsing": [[50, "file-reading-parsing"]], "File Writing": [[50, "file-writing"]], "FileSet": [[587, "fileset"]], "FileSet and staging": [[587, "fileset-and-staging"]], "Fixes": [[559, "fixes"], [559, "id3"], [559, "id7"], [559, "id10"], [559, "id11"], [559, "id14"], [559, "id16"], [559, "id17"], [559, "id19"], [559, "id24"], [559, "id27"], [559, "id29"], [559, "id30"], [568, "fixes"], [569, "fixes"], [570, "fixes"], [571, "fixes"], [572, "fixes"], [573, "fixes"], [574, "fixes"], [575, "fixes"], [576, "fixes"], [577, "fixes"], [578, "fixes"], [579, "fixes"], [580, "fixes"]], "Format the output of the data set printing": [[8, "format-the-output-of-the-data-set-printing"]], "Frequently asked questions": [[23, "frequently-asked-questions"]], "Future-proofing your code": [[44, "future-proofing-your-code"]], "General": [[23, "general"]], "General examples": [[6, "general-examples"]], "General style guidelines": [[41, "general-style-guidelines"]], "Getting Included Datasets (pydicom.data)": [[58, "getting-included-datasets-pydicom-data"]], "Getting Started": [[42, "getting-started"]], "Getting the path to the example dataset": [[585, "getting-the-path-to-the-example-dataset"]], "Glossary": [[39, "glossary"]], "Guidelines for reStructuredText": [[41, "guidelines-for-restructuredtext"]], "Guides": [[40, "guides"]], "Handling of compressed pixel data": [[47, "handling-of-compressed-pixel-data"]], "How do I cite pydicom?": [[23, "how-do-i-cite-pydicom"]], "How to install pydicom": [[589, "how-to-install-pydicom"]], "IO Base Classes (pydicom.filebase)": [[72, "io-base-classes-pydicom-filebase"]], "IO Utilities (pydicom.fileutil)": [[74, "io-utilities-pydicom-fileutil"]], "Image Pixel Module": [[39, "image-pixel-module"]], "Image Pixel Options": [[29, "image-pixel-options"]], "Image Processing Options": [[29, "image-processing-options"]], "Image processing": [[1, "image-processing"], [6, "image-processing"]], "Infrastructure": [[559, "infrastructure"], [568, "infrastructure"]], "Input-output": [[6, "input-output"], [7, "input-output"]], "Install pytest and run the test suite": [[583, "install-pytest-and-run-the-test-suite"]], "Install the development version": [[589, "install-the-development-version"]], "Install the official release": [[589, "install-the-official-release"]], "Install the optional libraries": [[589, "install-the-optional-libraries"]], "Install using conda": [[589, "install-using-conda"]], "Install using pip": [[589, "install-using-pip"]], "Installation": [[23, "installation"]], "Installing": [[45, "installing"]], "Installing GDCM": [[589, "installing-gdcm"]], "Installing Pillow": [[589, "installing-pillow"]], "Installing pyjpegls": [[589, "installing-pyjpegls"]], "Installing pylibjpeg": [[589, "installing-pylibjpeg"]], "Installing the pydicom CLI": [[26, "installing-the-pydicom-cli"], [27, "installing-the-pydicom-cli"]], "Introduction": [[26, "introduction"], [27, "introduction"], [44, "introduction"], [45, "introduction"], [48, "introduction"], [51, "introduction"], [52, "introduction"], [53, "introduction"], [54, "introduction"], [55, "introduction"], [590, "introduction"]], "Introduction to JSON support": [[586, "introduction-to-json-support"]], "Introduction to pydicom": [[45, "introduction-to-pydicom"]], "JPEG 2000": [[36, "jpeg-2000"]], "JPEG 2000 Encoding": [[36, "jpeg-2000-encoding"]], "JPEG 2000 Lossless": [[36, "jpeg-2000-lossless"]], "JPEG-LS Encoding": [[37, "jpeg-ls-encoding"]], "JPEG-LS Lossless": [[37, "jpeg-ls-lossless"]], "JPEG-LS Near-lossless": [[37, "jpeg-ls-near-lossless"]], "License": [[45, "license"]], "Limiting the pydicom major version in your package": [[44, "limiting-the-pydicom-major-version-in-your-package"]], "Load CT slices and plot axial, sagittal and coronal images": [[4, "load-ct-slices-and-plot-axial-sagittal-and-coronal-images"]], "Loading existing File-sets": [[587, "loading-existing-file-sets"]], "Major changes": [[559, "major-changes"], [559, "id32"], [559, "id35"], [559, "id38"], [559, "id42"], [559, "id46"], [560, "major-changes"], [561, "major-changes"], [564, "major-changes"], [565, "major-changes"], [566, "major-changes"], [568, "major-changes"]], "Major changes/additions in this version": [[559, "major-changes-additions-in-this-version"], [562, "major-changes-additions-in-this-version"]], "Major fixes in this release": [[559, "major-fixes-in-this-release"], [563, "major-fixes-in-this-release"]], "Make a change to the documentation": [[584, "make-a-change-to-the-documentation"]], "Make a code change and document it": [[583, "make-a-code-change-and-document-it"]], "Metadata processing": [[6, "metadata-processing"], [15, "metadata-processing"]], "Miscellaneous (pydicom.misc)": [[550, "miscellaneous-pydicom-misc"]], "Miscellaneous Options": [[29, "miscellaneous-options"]], "Modality LUT or Rescale Operation": [[53, "modality-lut-or-rescale-operation"]], "Modifying": [[585, "modifying"]], "Modifying a File-set": [[587, "modifying-a-file-set"]], "Modifying elements": [[585, "modifying-elements"]], "New \u2018Contrib\u2019 files": [[559, "new-contrib-files"], [563, "new-contrib-files"]], "Next Steps": [[45, "next-steps"]], "Next steps": [[585, "next-steps"]], "Optional": [[23, "optional"]], "Other": [[559, "other"], [559, "id40"], [559, "id41"], [559, "id45"], [559, "id49"], [560, "other"], [561, "other"], [563, "other"], [564, "other"], [569, "other"]], "Other Contributors": [[559, "other-contributors"], [567, "other-contributors"]], "Other Enhancements": [[559, "id37"], [559, "id43"], [559, "id47"], [560, "other-enhancements"], [561, "other-enhancements"], [565, "other-enhancements"]], "Other changes and bug fixes": [[559, "other-changes-and-bug-fixes"], [562, "other-changes-and-bug-fixes"]], "Other enhancements": [[559, "other-enhancements"], [568, "other-enhancements"]], "Other fixes in this release": [[559, "other-fixes-in-this-release"], [563, "other-fixes-in-this-release"]], "Overlay Data Handling (pydicom.overlays)": [[551, "overlay-data-handling-pydicom-overlays"]], "Palette Color": [[53, "palette-color"]], "Parsing Encapsulated Data": [[68, "parsing-encapsulated-data"]], "Photometric Interpretation": [[36, "photometric-interpretation"], [37, "photometric-interpretation"]], "Pixel Data (pydicom.pixels)": [[552, "module-pydicom.pixels"]], "Pixel Data Decoder Options": [[29, "pixel-data-decoder-options"]], "Pixel Data Decoder Plugins": [[30, "pixel-data-decoder-plugins"]], "Pixel Data Decoders (pydicom.pixels.decoders)": [[553, "module-pydicom.pixels.decoders"]], "Pixel Data Decoding": [[31, "pixel-data-decoding"]], "Pixel Data Encoder Plugins": [[34, "pixel-data-encoder-plugins"]], "Pixel Data Encoders (pydicom.pixels.encoders)": [[554, "module-pydicom.pixels.encoders"]], "Pixel Data Encoding": [[35, "pixel-data-encoding"]], "Pixel Data Handlers (pydicom.pixel_data_handlers)": [[548, "pixel-data-handlers-pydicom-pixel-data-handlers"]], "Pixel Data Processing (pydicom.pixels.processing)": [[555, "pixel-data-processing-pydicom-pixels-processing"]], "Pixel Data Utilities (pydicom.pixels.utils)": [[556, "module-pydicom.pixels.utils"]], "Pixel Representation": [[37, "pixel-representation"]], "Planar Configuration": [[37, "planar-configuration"]], "Plugin Requirements": [[30, "plugin-requirements"], [34, "plugin-requirements"]], "Preconditions": [[47, "preconditions"]], "Preview your changes": [[583, "preview-your-changes"]], "Private Data Dictionary": [[59, "private-data-dictionary"]], "Private Data Elements": [[48, "private-data-elements"]], "Pydicom Internals": [[559, "pydicom-internals"], [559, "id4"], [579, "pydicom-internals"], [580, "pydicom-internals"]], "RLE Lossless": [[29, "rle-lossless"]], "RLE Lossless Encoding": [[38, "rle-lossless-encoding"]], "Read RTPLAN DICOM and list information": [[11, "read-rtplan-dicom-and-list-information"]], "Read a DICOM File-set": [[10, "read-a-dicom-file-set"]], "Read a Dataset and plot Pixel Data": [[9, "read-a-dataset-and-plot-pixel-data"]], "Reading": [[585, "reading"]], "Reading and writing DICOM files": [[50, "reading-and-writing-dicom-files"]], "Release notes": [[559, "release-notes"]], "Removals": [[559, "removals"], [580, "removals"]], "Removing All Private Data Elements": [[48, "removing-all-private-data-elements"]], "Removing instances": [[587, "removing-instances"]], "Representation of Data Elements": [[61, "representation-of-data-elements"]], "Representation of Datasets (pydicom.dataset)": [[60, "representation-of-datasets-pydicom-dataset"]], "Required": [[23, "required"]], "Sequence": [[43, "sequence"]], "Sequence Element Value Representation (pydicom.sequence)": [[64, "sequence-element-value-representation-pydicom-sequence"]], "Sequences": [[585, "sequences"], [585, "id1"]], "Setting Private Data Elements with pydicom": [[48, "setting-private-data-elements-with-pydicom"]], "Show a dicom file using hierarchical tree": [[0, "show-a-dicom-file-using-hierarchical-tree"]], "Show working with memory-based dataset": [[14, "show-working-with-memory-based-dataset"]], "Specialized Element Value Representation (pydicom.valuerep)": [[66, "specialized-element-value-representation-pydicom-valuerep"]], "Standard elements": [[585, "standard-elements"]], "Storage SOP Class UIDs": [[557, "storage-sop-class-uids"]], "Structured Reporting": [[591, "structured-reporting"]], "Sub-modules": [[552, "sub-modules"]], "Support": [[45, "support"]], "Supported Transfer Syntaxes": [[46, "supported-transfer-syntaxes"], [47, "supported-transfer-syntaxes"]], "Tag": [[43, "tag"]], "The DICOM File-set": [[587, "the-dicom-file-set"]], "The DICOMDIR file": [[587, "the-dicomdir-file"]], "Transfer Syntax Lists": [[557, "transfer-syntax-lists"]], "Transfer Syntax UIDs": [[557, "transfer-syntax-uids"]], "Tutorials": [[588, "tutorials"]], "Types of documentation": [[41, "types-of-documentation"]], "UID Definitions and Utilities (pydicom.uid)": [[557, "module-pydicom.uid"]], "UID Utilities": [[557, "uid-utilities"]], "Usage": [[47, "usage"], [70, "usage"]], "User Guide": [[42, "user-guide"]], "Using Codify": [[55, "using-codify"]], "Using pydicom": [[45, "using-pydicom"]], "Using pydicom with Python Imaging Library (PIL)": [[51, "using-pydicom-with-python-imaging-library-pil"]], "Using pydicom with Tkinter": [[51, "using-pydicom-with-tkinter"]], "Using pydicom with matplotlib": [[51, "using-pydicom-with-matplotlib"]], "Using pydicom with wxPython": [[51, "using-pydicom-with-wxpython"]], "VOI LUT or Windowing Operation": [[53, "voi-lut-or-windowing-operation"]], "Valid Image Pixel Parameters": [[36, "valid-image-pixel-parameters"], [37, "valid-image-pixel-parameters"], [38, "valid-image-pixel-parameters"]], "Version 0.9.2": [[559, "version-0-9-2"], [560, "version-0-9-2"]], "Version 0.9.3": [[559, "version-0-9-3"], [561, "version-0-9-3"]], "Version 0.9.4": [[559, "version-0-9-4"], [562, "version-0-9-4"]], "Version 0.9.5": [[559, "version-0-9-5"], [563, "version-0-9-5"]], "Version 0.9.6": [[559, "version-0-9-6"], [564, "version-0-9-6"]], "Version 0.9.7": [[559, "version-0-9-7"], [565, "version-0-9-7"]], "Version 0.9.8": [[559, "version-0-9-8"], [566, "version-0-9-8"]], "Version 0.9.9": [[559, "version-0-9-9"], [567, "version-0-9-9"]], "Version 1.0.0": [[559, "version-1-0-0"], [568, "version-1-0-0"]], "Version 1.1.0": [[559, "version-1-1-0"], [569, "version-1-1-0"]], "Version 1.2.0": [[559, "version-1-2-0"], [570, "version-1-2-0"]], "Version 1.3.0": [[559, "version-1-3-0"], [571, "version-1-3-0"]], "Version 1.4.0": [[559, "version-1-4-0"], [572, "version-1-4-0"]], "Version 1.4.1": [[559, "version-1-4-1"], [573, "version-1-4-1"]], "Version 2.0.0": [[559, "version-2-0-0"], [574, "version-2-0-0"]], "Version 2.1.0": [[559, "version-2-1-0"], [575, "version-2-1-0"]], "Version 2.1.1": [[559, "version-2-1-1"], [576, "version-2-1-1"]], "Version 2.2.0": [[559, "version-2-2-0"], [577, "version-2-2-0"]], "Version 2.3.0": [[559, "version-2-3-0"], [578, "version-2-3-0"]], "Version 2.4.0": [[559, "version-2-4-0"], [579, "version-2-4-0"]], "Version 3.0.0": [[559, "version-3-0-0"], [580, "version-3-0-0"]], "Viewing Images": [[51, "viewing-images"]], "Viewing and accessing": [[585, "viewing-and-accessing"]], "Waveform Data Handlers (pydicom.waveforms)": [[558, "waveform-data-handlers-pydicom-waveforms"]], "Waveforms": [[592, "waveforms"]], "Waveforms in DICOM": [[592, "waveforms-in-dicom"]], "What are pydicom\u2019s prerequisites?": [[23, "what-are-pydicom-s-prerequisites"]], "What happens next?": [[583, "what-happens-next"], [584, "what-happens-next"]], "What version of Python can I use?": [[23, "what-version-of-python-can-i-use"]], "Working with Overlay Data": [[52, "working-with-overlay-data"]], "Working with Pixel Data": [[53, "working-with-pixel-data"]], "Working with Waveform Data": [[54, "working-with-waveform-data"]], "Working with large binary data": [[586, "working-with-large-binary-data"]], "Working with sequences": [[18, "working-with-sequences"]], "Write DICOM data": [[12, "write-dicom-data"]], "Write tests for your changes": [[583, "write-tests-for-your-changes"]], "Writing": [[585, "writing"]], "Writing DICOM Files": [[55, "writing-dicom-files"]], "Writing a file from Scratch": [[55, "writing-a-file-from-scratch"]], "Writing documentation": [[41, "writing-documentation"]], "file_meta": [[585, "file-meta"]], "gdcm": [[33, "gdcm"]], "pydicom": [[33, "pydicom"]], "pydicom User Guide": [[49, "pydicom-user-guide"]], "pydicom codify command": [[24, "pydicom-codify-command"], [26, "pydicom-codify-command"]], "pydicom documentation": [[42, "pydicom-documentation"]], "pydicom show command": [[26, "pydicom-show-command"], [28, "pydicom-show-command"]], "pydicom.charset.convert_encodings": [[77, "pydicom-charset-convert-encodings"]], "pydicom.charset.decode_bytes": [[78, "pydicom-charset-decode-bytes"]], "pydicom.charset.decode_element": [[79, "pydicom-charset-decode-element"]], "pydicom.charset.encode_string": [[80, "pydicom-charset-encode-string"]], "pydicom.config.APPLY_J2K_CORRECTIONS": [[81, "pydicom-config-apply-j2k-corrections"]], "pydicom.config.DS_decimal": [[82, "pydicom-config-ds-decimal"]], "pydicom.config.DS_numpy": [[83, "pydicom-config-ds-numpy"]], "pydicom.config.IGNORE": [[84, "pydicom-config-ignore"]], "pydicom.config.INVALID_KEYWORD_BEHAVIOR": [[85, "pydicom-config-invalid-keyword-behavior"]], "pydicom.config.INVALID_KEY_BEHAVIOR": [[86, "pydicom-config-invalid-key-behavior"]], "pydicom.config.RAISE": [[87, "pydicom-config-raise"]], "pydicom.config.WARN": [[88, "pydicom-config-warn"]], "pydicom.config.allow_DS_float": [[89, "pydicom-config-allow-ds-float"]], "pydicom.config.assume_implicit_vr_switch": [[90, "pydicom-config-assume-implicit-vr-switch"]], "pydicom.config.convert_wrong_length_to_UN": [[91, "pydicom-config-convert-wrong-length-to-un"]], "pydicom.config.data_element_callback": [[92, "pydicom-config-data-element-callback"]], "pydicom.config.data_element_callback_kwargs": [[93, "pydicom-config-data-element-callback-kwargs"]], "pydicom.config.datetime_conversion": [[94, "pydicom-config-datetime-conversion"]], "pydicom.config.debug": [[95, "pydicom-config-debug"]], "pydicom.config.enforce_valid_values": [[96, "pydicom-config-enforce-valid-values"]], "pydicom.config.future_behavior": [[97, "pydicom-config-future-behavior"]], "pydicom.config.pixel_data_handlers": [[98, "pydicom-config-pixel-data-handlers"]], "pydicom.config.reset_data_element_callback": [[99, "pydicom-config-reset-data-element-callback"]], "pydicom.config.settings": [[100, "pydicom-config-settings"]], "pydicom.config.show_file_meta": [[101, "pydicom-config-show-file-meta"]], "pydicom.config.use_DS_decimal": [[102, "pydicom-config-use-ds-decimal"]], "pydicom.config.use_DS_numpy": [[103, "pydicom-config-use-ds-numpy"]], "pydicom.config.use_IS_numpy": [[104, "pydicom-config-use-is-numpy"]], "pydicom.data.get_charset_files": [[105, "pydicom-data-get-charset-files"]], "pydicom.data.get_palette_files": [[106, "pydicom-data-get-palette-files"]], "pydicom.data.get_testdata_file": [[107, "pydicom-data-get-testdata-file"]], "pydicom.data.get_testdata_files": [[108, "pydicom-data-get-testdata-files"]], "pydicom.datadict.add_dict_entries": [[109, "pydicom-datadict-add-dict-entries"]], "pydicom.datadict.add_dict_entry": [[110, "pydicom-datadict-add-dict-entry"]], "pydicom.datadict.add_private_dict_entries": [[111, "pydicom-datadict-add-private-dict-entries"]], "pydicom.datadict.add_private_dict_entry": [[112, "pydicom-datadict-add-private-dict-entry"]], "pydicom.datadict.dictionary_VM": [[113, "pydicom-datadict-dictionary-vm"]], "pydicom.datadict.dictionary_VR": [[114, "pydicom-datadict-dictionary-vr"]], "pydicom.datadict.dictionary_description": [[115, "pydicom-datadict-dictionary-description"]], "pydicom.datadict.dictionary_has_tag": [[116, "pydicom-datadict-dictionary-has-tag"]], "pydicom.datadict.dictionary_is_retired": [[117, "pydicom-datadict-dictionary-is-retired"]], "pydicom.datadict.dictionary_keyword": [[118, "pydicom-datadict-dictionary-keyword"]], "pydicom.datadict.get_entry": [[119, "pydicom-datadict-get-entry"]], "pydicom.datadict.get_private_entry": [[120, "pydicom-datadict-get-private-entry"]], "pydicom.datadict.keyword_for_tag": [[121, "pydicom-datadict-keyword-for-tag"]], "pydicom.datadict.mask_match": [[122, "pydicom-datadict-mask-match"]], "pydicom.datadict.private_dictionary_VM": [[123, "pydicom-datadict-private-dictionary-vm"]], "pydicom.datadict.private_dictionary_VR": [[124, "pydicom-datadict-private-dictionary-vr"]], "pydicom.datadict.private_dictionary_description": [[125, "pydicom-datadict-private-dictionary-description"]], "pydicom.datadict.repeater_has_keyword": [[126, "pydicom-datadict-repeater-has-keyword"]], "pydicom.datadict.repeater_has_tag": [[127, "pydicom-datadict-repeater-has-tag"]], "pydicom.datadict.tag_for_keyword": [[128, "pydicom-datadict-tag-for-keyword"]], "pydicom.dataelem.DataElement": [[129, "pydicom-dataelem-dataelement"]], "pydicom.dataelem.DataElement_from_raw": [[130, "pydicom-dataelem-dataelement-from-raw"]], "pydicom.dataelem.RawDataElement": [[131, "pydicom-dataelem-rawdataelement"]], "pydicom.dataset.Dataset": [[132, "pydicom-dataset-dataset"]], "pydicom.dataset.FileDataset": [[133, "pydicom-dataset-filedataset"]], "pydicom.dataset.FileMetaDataset": [[134, "pydicom-dataset-filemetadataset"]], "pydicom.dataset.PrivateBlock": [[135, "pydicom-dataset-privateblock"]], "pydicom.dataset.validate_file_meta": [[136, "pydicom-dataset-validate-file-meta"]], "pydicom.encaps.decode_data_sequence": [[137, "pydicom-encaps-decode-data-sequence"]], "pydicom.encaps.defragment_data": [[138, "pydicom-encaps-defragment-data"]], "pydicom.encaps.encapsulate": [[139, "pydicom-encaps-encapsulate"]], "pydicom.encaps.encapsulate_extended": [[140, "pydicom-encaps-encapsulate-extended"]], "pydicom.encaps.fragment_frame": [[141, "pydicom-encaps-fragment-frame"]], "pydicom.encaps.generate_fragmented_frames": [[142, "pydicom-encaps-generate-fragmented-frames"]], "pydicom.encaps.generate_fragments": [[143, "pydicom-encaps-generate-fragments"]], "pydicom.encaps.generate_frames": [[144, "pydicom-encaps-generate-frames"]], "pydicom.encaps.generate_pixel_data": [[145, "pydicom-encaps-generate-pixel-data"]], "pydicom.encaps.generate_pixel_data_fragment": [[146, "pydicom-encaps-generate-pixel-data-fragment"]], "pydicom.encaps.generate_pixel_data_frame": [[147, "pydicom-encaps-generate-pixel-data-frame"]], "pydicom.encaps.get_frame": [[148, "pydicom-encaps-get-frame"]], "pydicom.encaps.get_frame_offsets": [[149, "pydicom-encaps-get-frame-offsets"]], "pydicom.encaps.itemize_fragment": [[150, "pydicom-encaps-itemize-fragment"]], "pydicom.encaps.itemize_frame": [[151, "pydicom-encaps-itemize-frame"]], "pydicom.encaps.parse_basic_offsets": [[152, "pydicom-encaps-parse-basic-offsets"]], "pydicom.encaps.parse_fragments": [[153, "pydicom-encaps-parse-fragments"]], "pydicom.encaps.read_item": [[154, "pydicom-encaps-read-item"]], "pydicom.errors.InvalidDicomError": [[155, "pydicom-errors-invaliddicomerror"]], "pydicom.filebase.DicomBytesIO": [[156, "pydicom-filebase-dicombytesio"]], "pydicom.filebase.DicomFile": [[157, "pydicom-filebase-dicomfile"]], "pydicom.filebase.DicomFileLike": [[158, "pydicom-filebase-dicomfilelike"]], "pydicom.filebase.DicomIO": [[159, "pydicom-filebase-dicomio"]], "pydicom.filereader.data_element_generator": [[160, "pydicom-filereader-data-element-generator"]], "pydicom.filereader.data_element_offset_to_value": [[161, "pydicom-filereader-data-element-offset-to-value"]], "pydicom.filereader.dcmread": [[162, "pydicom-filereader-dcmread"]], "pydicom.filereader.read_dataset": [[163, "pydicom-filereader-read-dataset"]], "pydicom.filereader.read_deferred_data_element": [[164, "pydicom-filereader-read-deferred-data-element"]], "pydicom.filereader.read_file_meta_info": [[165, "pydicom-filereader-read-file-meta-info"]], "pydicom.filereader.read_partial": [[166, "pydicom-filereader-read-partial"]], "pydicom.filereader.read_preamble": [[167, "pydicom-filereader-read-preamble"]], "pydicom.filereader.read_sequence": [[168, "pydicom-filereader-read-sequence"]], "pydicom.filereader.read_sequence_item": [[169, "pydicom-filereader-read-sequence-item"]], "pydicom.fileset.DIRECTORY_RECORDERS": [[170, "pydicom-fileset-directory-recorders"]], "pydicom.fileset.FileInstance": [[171, "pydicom-fileset-fileinstance"]], "pydicom.fileset.FileSet": [[172, "pydicom-fileset-fileset"]], "pydicom.fileset.RecordNode": [[173, "pydicom-fileset-recordnode"]], "pydicom.fileset.generate_filename": [[174, "pydicom-fileset-generate-filename"]], "pydicom.fileset.is_conformant_file_id": [[175, "pydicom-fileset-is-conformant-file-id"]], "pydicom.fileutil.absorb_delimiter_item": [[176, "pydicom-fileutil-absorb-delimiter-item"]], "pydicom.fileutil.find_bytes": [[177, "pydicom-fileutil-find-bytes"]], "pydicom.fileutil.find_delimiter": [[178, "pydicom-fileutil-find-delimiter"]], "pydicom.fileutil.length_of_undefined_length": [[179, "pydicom-fileutil-length-of-undefined-length"]], "pydicom.fileutil.read_undefined_length_value": [[180, "pydicom-fileutil-read-undefined-length-value"]], "pydicom.filewriter.correct_ambiguous_vr": [[181, "pydicom-filewriter-correct-ambiguous-vr"]], "pydicom.filewriter.correct_ambiguous_vr_element": [[182, "pydicom-filewriter-correct-ambiguous-vr-element"]], "pydicom.filewriter.dcmwrite": [[183, "pydicom-filewriter-dcmwrite"]], "pydicom.filewriter.multi_string": [[184, "pydicom-filewriter-multi-string"]], "pydicom.filewriter.write_ATvalue": [[185, "pydicom-filewriter-write-atvalue"]], "pydicom.filewriter.write_DA": [[186, "pydicom-filewriter-write-da"]], "pydicom.filewriter.write_DT": [[187, "pydicom-filewriter-write-dt"]], "pydicom.filewriter.write_OBvalue": [[188, "pydicom-filewriter-write-obvalue"]], "pydicom.filewriter.write_OWvalue": [[189, "pydicom-filewriter-write-owvalue"]], "pydicom.filewriter.write_PN": [[190, "pydicom-filewriter-write-pn"]], "pydicom.filewriter.write_TM": [[191, "pydicom-filewriter-write-tm"]], "pydicom.filewriter.write_UI": [[192, "pydicom-filewriter-write-ui"]], "pydicom.filewriter.write_UN": [[193, "pydicom-filewriter-write-un"]], "pydicom.filewriter.write_data_element": [[194, "pydicom-filewriter-write-data-element"]], "pydicom.filewriter.write_dataset": [[195, "pydicom-filewriter-write-dataset"]], "pydicom.filewriter.write_file_meta_info": [[196, "pydicom-filewriter-write-file-meta-info"]], "pydicom.filewriter.write_number_string": [[197, "pydicom-filewriter-write-number-string"]], "pydicom.filewriter.write_numbers": [[198, "pydicom-filewriter-write-numbers"]], "pydicom.filewriter.write_sequence": [[199, "pydicom-filewriter-write-sequence"]], "pydicom.filewriter.write_sequence_item": [[200, "pydicom-filewriter-write-sequence-item"]], "pydicom.filewriter.write_string": [[201, "pydicom-filewriter-write-string"]], "pydicom.filewriter.write_text": [[202, "pydicom-filewriter-write-text"]], "pydicom.misc.is_dicom": [[203, "pydicom-misc-is-dicom"]], "pydicom.misc.size_in_bytes": [[204, "pydicom-misc-size-in-bytes"]], "pydicom.multival.MultiValue": [[205, "pydicom-multival-multivalue"]], "pydicom.overlays.numpy_handler": [[206, "module-pydicom.overlays.numpy_handler"]], "pydicom.pixel_data_handlers.gdcm_handler": [[207, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[208, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "pydicom.pixel_data_handlers.numpy_handler": [[209, "module-pydicom.pixel_data_handlers.numpy_handler"]], "pydicom.pixel_data_handlers.pillow_handler": [[210, "module-pydicom.pixel_data_handlers.pillow_handler"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[211, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "pydicom.pixel_data_handlers.rle_handler": [[212, "module-pydicom.pixel_data_handlers.rle_handler"]], "pydicom.pixels.apply_color_lut": [[213, "pydicom-pixels-apply-color-lut"]], "pydicom.pixels.apply_modality_lut": [[214, "pydicom-pixels-apply-modality-lut"]], "pydicom.pixels.apply_voi": [[215, "pydicom-pixels-apply-voi"]], "pydicom.pixels.apply_voi_lut": [[216, "pydicom-pixels-apply-voi-lut"]], "pydicom.pixels.apply_windowing": [[217, "pydicom-pixels-apply-windowing"]], "pydicom.pixels.as_pixel_options": [[218, "pydicom-pixels-as-pixel-options"]], "pydicom.pixels.convert_color_space": [[219, "pydicom-pixels-convert-color-space"]], "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder": [[220, "pydicom-pixels-decoders-deflatedexplicitvrlittleendiandecoder"]], "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder": [[221, "pydicom-pixels-decoders-explicitvrbigendiandecoder"]], "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder": [[222, "pydicom-pixels-decoders-explicitvrlittleendiandecoder"]], "pydicom.pixels.decoders.HTJ2KDecoder": [[223, "pydicom-pixels-decoders-htj2kdecoder"]], "pydicom.pixels.decoders.HTJ2KLosslessDecoder": [[224, "pydicom-pixels-decoders-htj2klosslessdecoder"]], "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder": [[225, "pydicom-pixels-decoders-htj2klosslessrpcldecoder"]], "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder": [[226, "pydicom-pixels-decoders-implicitvrlittleendiandecoder"]], "pydicom.pixels.decoders.JPEG2000Decoder": [[227, "pydicom-pixels-decoders-jpeg2000decoder"]], "pydicom.pixels.decoders.JPEG2000LosslessDecoder": [[228, "pydicom-pixels-decoders-jpeg2000losslessdecoder"]], "pydicom.pixels.decoders.JPEGBaseline8BitDecoder": [[229, "pydicom-pixels-decoders-jpegbaseline8bitdecoder"]], "pydicom.pixels.decoders.JPEGExtended12BitDecoder": [[230, "pydicom-pixels-decoders-jpegextended12bitdecoder"]], "pydicom.pixels.decoders.JPEGLSLosslessDecoder": [[231, "pydicom-pixels-decoders-jpeglslosslessdecoder"]], "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder": [[232, "pydicom-pixels-decoders-jpeglsnearlosslessdecoder"]], "pydicom.pixels.decoders.JPEGLosslessDecoder": [[233, "pydicom-pixels-decoders-jpeglosslessdecoder"]], "pydicom.pixels.decoders.JPEGLosslessSV1Decoder": [[234, "pydicom-pixels-decoders-jpeglosslesssv1decoder"]], "pydicom.pixels.decoders.RLELosslessDecoder": [[235, "pydicom-pixels-decoders-rlelosslessdecoder"]], "pydicom.pixels.decoders.base.DecodeRunner": [[236, "pydicom-pixels-decoders-base-decoderunner"]], "pydicom.pixels.decoders.base.Decoder": [[237, "pydicom-pixels-decoders-base-decoder"]], "pydicom.pixels.encoders.JPEG2000Encoder": [[238, "pydicom-pixels-encoders-jpeg2000encoder"]], "pydicom.pixels.encoders.JPEG2000LosslessEncoder": [[239, "pydicom-pixels-encoders-jpeg2000losslessencoder"]], "pydicom.pixels.encoders.JPEGLSLosslessEncoder": [[240, "pydicom-pixels-encoders-jpeglslosslessencoder"]], "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder": [[241, "pydicom-pixels-encoders-jpeglsnearlosslessencoder"]], "pydicom.pixels.encoders.RLELosslessEncoder": [[242, "pydicom-pixels-encoders-rlelosslessencoder"]], "pydicom.pixels.encoders.base.EncodeRunner": [[243, "pydicom-pixels-encoders-base-encoderunner"]], "pydicom.pixels.encoders.base.Encoder": [[244, "pydicom-pixels-encoders-base-encoder"]], "pydicom.pixels.get_decoder": [[245, "pydicom-pixels-get-decoder"]], "pydicom.pixels.get_encoder": [[246, "pydicom-pixels-get-encoder"]], "pydicom.pixels.iter_pixels": [[247, "pydicom-pixels-iter-pixels"]], "pydicom.pixels.pack_bits": [[248, "pydicom-pixels-pack-bits"]], "pydicom.pixels.pixel_array": [[249, "pydicom-pixels-pixel-array"]], "pydicom.pixels.processing.apply_color_lut": [[250, "pydicom-pixels-processing-apply-color-lut"]], "pydicom.pixels.processing.apply_modality_lut": [[251, "pydicom-pixels-processing-apply-modality-lut"]], "pydicom.pixels.processing.apply_rescale": [[252, "pydicom-pixels-processing-apply-rescale"]], "pydicom.pixels.processing.apply_voi": [[253, "pydicom-pixels-processing-apply-voi"]], "pydicom.pixels.processing.apply_voi_lut": [[254, "pydicom-pixels-processing-apply-voi-lut"]], "pydicom.pixels.processing.apply_windowing": [[255, "pydicom-pixels-processing-apply-windowing"]], "pydicom.pixels.processing.convert_color_space": [[256, "pydicom-pixels-processing-convert-color-space"]], "pydicom.pixels.unpack_bits": [[257, "pydicom-pixels-unpack-bits"]], "pydicom.pixels.utils.as_pixel_options": [[258, "pydicom-pixels-utils-as-pixel-options"]], "pydicom.pixels.utils.expand_ybr422": [[259, "pydicom-pixels-utils-expand-ybr422"]], "pydicom.pixels.utils.get_expected_length": [[260, "pydicom-pixels-utils-get-expected-length"]], "pydicom.pixels.utils.get_image_pixel_ids": [[261, "pydicom-pixels-utils-get-image-pixel-ids"]], "pydicom.pixels.utils.get_j2k_parameters": [[262, "pydicom-pixels-utils-get-j2k-parameters"]], "pydicom.pixels.utils.get_nr_frames": [[263, "pydicom-pixels-utils-get-nr-frames"]], "pydicom.pixels.utils.iter_pixels": [[264, "pydicom-pixels-utils-iter-pixels"]], "pydicom.pixels.utils.pack_bits": [[265, "pydicom-pixels-utils-pack-bits"]], "pydicom.pixels.utils.pixel_array": [[266, "pydicom-pixels-utils-pixel-array"]], "pydicom.pixels.utils.pixel_dtype": [[267, "pydicom-pixels-utils-pixel-dtype"]], "pydicom.pixels.utils.reshape_pixel_array": [[268, "pydicom-pixels-utils-reshape-pixel-array"]], "pydicom.pixels.utils.unpack_bits": [[269, "pydicom-pixels-utils-unpack-bits"]], "pydicom.sequence.Sequence": [[270, "pydicom-sequence-sequence"]], "pydicom.tag.BaseTag": [[271, "pydicom-tag-basetag"]], "pydicom.tag.Tag": [[272, "pydicom-tag-tag"]], "pydicom.tag.TupleTag": [[273, "pydicom-tag-tupletag"]], "pydicom.tag.tag_in_exception": [[274, "pydicom-tag-tag-in-exception"]], "pydicom.uid.AcquisitionContextSRStorage": [[275, "pydicom-uid-acquisitioncontextsrstorage"]], "pydicom.uid.AdvancedBlendingPresentationStateStorage": [[276, "pydicom-uid-advancedblendingpresentationstatestorage"]], "pydicom.uid.AllTransferSyntaxes": [[277, "pydicom-uid-alltransfersyntaxes"]], "pydicom.uid.AmbulatoryECGWaveformStorage": [[278, "pydicom-uid-ambulatoryecgwaveformstorage"]], "pydicom.uid.ArterialPulseWaveformStorage": [[279, "pydicom-uid-arterialpulsewaveformstorage"]], "pydicom.uid.AutorefractionMeasurementsStorage": [[280, "pydicom-uid-autorefractionmeasurementsstorage"]], "pydicom.uid.BasicStructuredDisplayStorage": [[281, "pydicom-uid-basicstructureddisplaystorage"]], "pydicom.uid.BasicTextSRStorage": [[282, "pydicom-uid-basictextsrstorage"]], "pydicom.uid.BasicVoiceAudioWaveformStorage": [[283, "pydicom-uid-basicvoiceaudiowaveformstorage"]], "pydicom.uid.BlendingSoftcopyPresentationStateStorage": [[284, "pydicom-uid-blendingsoftcopypresentationstatestorage"]], "pydicom.uid.BodyPositionWaveformStorage": [[285, "pydicom-uid-bodypositionwaveformstorage"]], "pydicom.uid.BreastProjectionXRayImageStorageForPresentation": [[286, "pydicom-uid-breastprojectionxrayimagestorageforpresentation"]], "pydicom.uid.BreastProjectionXRayImageStorageForProcessing": [[287, "pydicom-uid-breastprojectionxrayimagestorageforprocessing"]], "pydicom.uid.BreastTomosynthesisImageStorage": [[288, "pydicom-uid-breasttomosynthesisimagestorage"]], "pydicom.uid.CArmPhotonElectronRadiationRecordStorage": [[289, "pydicom-uid-carmphotonelectronradiationrecordstorage"]], "pydicom.uid.CArmPhotonElectronRadiationStorage": [[290, "pydicom-uid-carmphotonelectronradiationstorage"]], "pydicom.uid.CTDefinedProcedureProtocolStorage": [[291, "pydicom-uid-ctdefinedprocedureprotocolstorage"]], "pydicom.uid.CTImageStorage": [[292, "pydicom-uid-ctimagestorage"]], "pydicom.uid.CTPerformedProcedureProtocolStorage": [[293, "pydicom-uid-ctperformedprocedureprotocolstorage"]], "pydicom.uid.CardiacElectrophysiologyWaveformStorage": [[294, "pydicom-uid-cardiacelectrophysiologywaveformstorage"]], "pydicom.uid.ChestCADSRStorage": [[295, "pydicom-uid-chestcadsrstorage"]], "pydicom.uid.ColonCADSRStorage": [[296, "pydicom-uid-coloncadsrstorage"]], "pydicom.uid.ColorPaletteStorage": [[297, "pydicom-uid-colorpalettestorage"]], "pydicom.uid.ColorSoftcopyPresentationStateStorage": [[298, "pydicom-uid-colorsoftcopypresentationstatestorage"]], "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage": [[299, "pydicom-uid-compositingplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.Comprehensive3DSRStorage": [[300, "pydicom-uid-comprehensive3dsrstorage"]], "pydicom.uid.ComprehensiveSRStorage": [[301, "pydicom-uid-comprehensivesrstorage"]], "pydicom.uid.ComputedRadiographyImageStorage": [[302, "pydicom-uid-computedradiographyimagestorage"]], "pydicom.uid.ConfocalMicroscopyImageStorage": [[303, "pydicom-uid-confocalmicroscopyimagestorage"]], "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage": [[304, "pydicom-uid-confocalmicroscopytiledpyramidalimagestorage"]], "pydicom.uid.ContentAssessmentResultsStorage": [[305, "pydicom-uid-contentassessmentresultsstorage"]], "pydicom.uid.CornealTopographyMapStorage": [[306, "pydicom-uid-cornealtopographymapstorage"]], "pydicom.uid.DICOS2DAITStorage": [[307, "pydicom-uid-dicos2daitstorage"]], "pydicom.uid.DICOS3DAITStorage": [[308, "pydicom-uid-dicos3daitstorage"]], "pydicom.uid.DICOSCTImageStorage": [[309, "pydicom-uid-dicosctimagestorage"]], "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation": [[310, "pydicom-uid-dicosdigitalxrayimagestorageforpresentation"]], "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing": [[311, "pydicom-uid-dicosdigitalxrayimagestorageforprocessing"]], "pydicom.uid.DICOSQuadrupoleResonanceStorage": [[312, "pydicom-uid-dicosquadrupoleresonancestorage"]], "pydicom.uid.DICOSThreatDetectionReportStorage": [[313, "pydicom-uid-dicosthreatdetectionreportstorage"]], "pydicom.uid.DeflatedExplicitVRLittleEndian": [[314, "pydicom-uid-deflatedexplicitvrlittleendian"]], "pydicom.uid.DeformableSpatialRegistrationStorage": [[315, "pydicom-uid-deformablespatialregistrationstorage"]], "pydicom.uid.DermoscopicPhotographyImageStorage": [[316, "pydicom-uid-dermoscopicphotographyimagestorage"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation": [[317, "pydicom-uid-digitalintraoralxrayimagestorageforpresentation"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing": [[318, "pydicom-uid-digitalintraoralxrayimagestorageforprocessing"]], "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation": [[319, "pydicom-uid-digitalmammographyxrayimagestorageforpresentation"]], "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing": [[320, "pydicom-uid-digitalmammographyxrayimagestorageforprocessing"]], "pydicom.uid.DigitalXRayImageStorageForPresentation": [[321, "pydicom-uid-digitalxrayimagestorageforpresentation"]], "pydicom.uid.DigitalXRayImageStorageForProcessing": [[322, "pydicom-uid-digitalxrayimagestorageforprocessing"]], "pydicom.uid.EddyCurrentImageStorage": [[323, "pydicom-uid-eddycurrentimagestorage"]], "pydicom.uid.EddyCurrentMultiFrameImageStorage": [[324, "pydicom-uid-eddycurrentmultiframeimagestorage"]], "pydicom.uid.ElectromyogramWaveformStorage": [[325, "pydicom-uid-electromyogramwaveformstorage"]], "pydicom.uid.ElectrooculogramWaveformStorage": [[326, "pydicom-uid-electrooculogramwaveformstorage"]], "pydicom.uid.EncapsulatedCDAStorage": [[327, "pydicom-uid-encapsulatedcdastorage"]], "pydicom.uid.EncapsulatedMTLStorage": [[328, "pydicom-uid-encapsulatedmtlstorage"]], "pydicom.uid.EncapsulatedOBJStorage": [[329, "pydicom-uid-encapsulatedobjstorage"]], "pydicom.uid.EncapsulatedPDFStorage": [[330, "pydicom-uid-encapsulatedpdfstorage"]], "pydicom.uid.EncapsulatedSTLStorage": [[331, "pydicom-uid-encapsulatedstlstorage"]], "pydicom.uid.EnhancedCTImageStorage": [[332, "pydicom-uid-enhancedctimagestorage"]], "pydicom.uid.EnhancedContinuousRTImageStorage": [[333, "pydicom-uid-enhancedcontinuousrtimagestorage"]], "pydicom.uid.EnhancedMRColorImageStorage": [[334, "pydicom-uid-enhancedmrcolorimagestorage"]], "pydicom.uid.EnhancedMRImageStorage": [[335, "pydicom-uid-enhancedmrimagestorage"]], "pydicom.uid.EnhancedPETImageStorage": [[336, "pydicom-uid-enhancedpetimagestorage"]], "pydicom.uid.EnhancedRTImageStorage": [[337, "pydicom-uid-enhancedrtimagestorage"]], "pydicom.uid.EnhancedSRStorage": [[338, "pydicom-uid-enhancedsrstorage"]], "pydicom.uid.EnhancedUSVolumeStorage": [[339, "pydicom-uid-enhancedusvolumestorage"]], "pydicom.uid.EnhancedXAImageStorage": [[340, "pydicom-uid-enhancedxaimagestorage"]], "pydicom.uid.EnhancedXRFImageStorage": [[341, "pydicom-uid-enhancedxrfimagestorage"]], "pydicom.uid.EnhancedXRayRadiationDoseSRStorage": [[342, "pydicom-uid-enhancedxrayradiationdosesrstorage"]], "pydicom.uid.ExplicitVRBigEndian": [[343, "pydicom-uid-explicitvrbigendian"]], "pydicom.uid.ExplicitVRLittleEndian": [[344, "pydicom-uid-explicitvrlittleendian"]], "pydicom.uid.ExtensibleSRStorage": [[345, "pydicom-uid-extensiblesrstorage"]], "pydicom.uid.General32bitECGWaveformStorage": [[346, "pydicom-uid-general32bitecgwaveformstorage"]], "pydicom.uid.GeneralAudioWaveformStorage": [[347, "pydicom-uid-generalaudiowaveformstorage"]], "pydicom.uid.GeneralECGWaveformStorage": [[348, "pydicom-uid-generalecgwaveformstorage"]], "pydicom.uid.GenericImplantTemplateStorage": [[349, "pydicom-uid-genericimplanttemplatestorage"]], "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage": [[350, "pydicom-uid-grayscaleplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage": [[351, "pydicom-uid-grayscalesoftcopypresentationstatestorage"]], "pydicom.uid.HEVCM10P51": [[352, "pydicom-uid-hevcm10p51"]], "pydicom.uid.HEVCMP51": [[353, "pydicom-uid-hevcmp51"]], "pydicom.uid.HTJ2K": [[354, "pydicom-uid-htj2k"]], "pydicom.uid.HTJ2KLossless": [[355, "pydicom-uid-htj2klossless"]], "pydicom.uid.HTJ2KLosslessRPCL": [[356, "pydicom-uid-htj2klosslessrpcl"]], "pydicom.uid.HangingProtocolStorage": [[357, "pydicom-uid-hangingprotocolstorage"]], "pydicom.uid.HemodynamicWaveformStorage": [[358, "pydicom-uid-hemodynamicwaveformstorage"]], "pydicom.uid.ImplantAssemblyTemplateStorage": [[359, "pydicom-uid-implantassemblytemplatestorage"]], "pydicom.uid.ImplantTemplateGroupStorage": [[360, "pydicom-uid-implanttemplategroupstorage"]], "pydicom.uid.ImplantationPlanSRStorage": [[361, "pydicom-uid-implantationplansrstorage"]], "pydicom.uid.ImplicitVRLittleEndian": [[362, "pydicom-uid-implicitvrlittleendian"]], "pydicom.uid.IntraocularLensCalculationsStorage": [[363, "pydicom-uid-intraocularlenscalculationsstorage"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation": [[364, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforpresentation"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing": [[365, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforprocessing"]], "pydicom.uid.InventoryStorage": [[366, "pydicom-uid-inventorystorage"]], "pydicom.uid.JPEG2000": [[367, "pydicom-uid-jpeg2000"]], "pydicom.uid.JPEG2000Lossless": [[368, "pydicom-uid-jpeg2000lossless"]], "pydicom.uid.JPEG2000MC": [[369, "pydicom-uid-jpeg2000mc"]], "pydicom.uid.JPEG2000MCLossless": [[370, "pydicom-uid-jpeg2000mclossless"]], "pydicom.uid.JPEG2000TransferSyntaxes": [[371, "pydicom-uid-jpeg2000transfersyntaxes"]], "pydicom.uid.JPEGBaseline8Bit": [[372, "pydicom-uid-jpegbaseline8bit"]], "pydicom.uid.JPEGExtended12Bit": [[373, "pydicom-uid-jpegextended12bit"]], "pydicom.uid.JPEGLSLossless": [[374, "pydicom-uid-jpeglslossless"]], "pydicom.uid.JPEGLSNearLossless": [[375, "pydicom-uid-jpeglsnearlossless"]], "pydicom.uid.JPEGLSTransferSyntaxes": [[376, "pydicom-uid-jpeglstransfersyntaxes"]], "pydicom.uid.JPEGLossless": [[377, "pydicom-uid-jpeglossless"]], "pydicom.uid.JPEGLosslessSV1": [[378, "pydicom-uid-jpeglosslesssv1"]], "pydicom.uid.JPEGTransferSyntaxes": [[379, "pydicom-uid-jpegtransfersyntaxes"]], "pydicom.uid.JPIPHTJ2KReferenced": [[380, "pydicom-uid-jpiphtj2kreferenced"]], "pydicom.uid.JPIPHTJ2KReferencedDeflate": [[381, "pydicom-uid-jpiphtj2kreferenceddeflate"]], "pydicom.uid.KeratometryMeasurementsStorage": [[382, "pydicom-uid-keratometrymeasurementsstorage"]], "pydicom.uid.KeyObjectSelectionDocumentStorage": [[383, "pydicom-uid-keyobjectselectiondocumentstorage"]], "pydicom.uid.LegacyConvertedEnhancedCTImageStorage": [[384, "pydicom-uid-legacyconvertedenhancedctimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedMRImageStorage": [[385, "pydicom-uid-legacyconvertedenhancedmrimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedPETImageStorage": [[386, "pydicom-uid-legacyconvertedenhancedpetimagestorage"]], "pydicom.uid.LensometryMeasurementsStorage": [[387, "pydicom-uid-lensometrymeasurementsstorage"]], "pydicom.uid.MPEG2MPHL": [[388, "pydicom-uid-mpeg2mphl"]], "pydicom.uid.MPEG2MPHLF": [[389, "pydicom-uid-mpeg2mphlf"]], "pydicom.uid.MPEG2MPML": [[390, "pydicom-uid-mpeg2mpml"]], "pydicom.uid.MPEG2MPMLF": [[391, "pydicom-uid-mpeg2mpmlf"]], "pydicom.uid.MPEG4HP41": [[392, "pydicom-uid-mpeg4hp41"]], "pydicom.uid.MPEG4HP41BD": [[393, "pydicom-uid-mpeg4hp41bd"]], "pydicom.uid.MPEG4HP41BDF": [[394, "pydicom-uid-mpeg4hp41bdf"]], "pydicom.uid.MPEG4HP41F": [[395, "pydicom-uid-mpeg4hp41f"]], "pydicom.uid.MPEG4HP422D": [[396, "pydicom-uid-mpeg4hp422d"]], "pydicom.uid.MPEG4HP422DF": [[397, "pydicom-uid-mpeg4hp422df"]], "pydicom.uid.MPEG4HP423D": [[398, "pydicom-uid-mpeg4hp423d"]], "pydicom.uid.MPEG4HP423DF": [[399, "pydicom-uid-mpeg4hp423df"]], "pydicom.uid.MPEG4HP42STEREO": [[400, "pydicom-uid-mpeg4hp42stereo"]], "pydicom.uid.MPEG4HP42STEREOF": [[401, "pydicom-uid-mpeg4hp42stereof"]], "pydicom.uid.MPEGTransferSyntaxes": [[402, "pydicom-uid-mpegtransfersyntaxes"]], "pydicom.uid.MRImageStorage": [[403, "pydicom-uid-mrimagestorage"]], "pydicom.uid.MRSpectroscopyStorage": [[404, "pydicom-uid-mrspectroscopystorage"]], "pydicom.uid.MacularGridThicknessAndVolumeReportStorage": [[405, "pydicom-uid-maculargridthicknessandvolumereportstorage"]], "pydicom.uid.MammographyCADSRStorage": [[406, "pydicom-uid-mammographycadsrstorage"]], "pydicom.uid.MediaStorageDirectoryStorage": [[407, "pydicom-uid-mediastoragedirectorystorage"]], "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage": [[408, "pydicom-uid-microscopybulksimpleannotationsstorage"]], "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage": [[409, "pydicom-uid-multiframegrayscalebytesecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage": [[410, "pydicom-uid-multiframegrayscalewordsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage": [[411, "pydicom-uid-multiframesinglebitsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage": [[412, "pydicom-uid-multiframetruecolorsecondarycaptureimagestorage"]], "pydicom.uid.MultichannelRespiratoryWaveformStorage": [[413, "pydicom-uid-multichannelrespiratorywaveformstorage"]], "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage": [[414, "pydicom-uid-multiplevolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.NuclearMedicineImageStorage": [[415, "pydicom-uid-nuclearmedicineimagestorage"]], "pydicom.uid.OphthalmicAxialMeasurementsStorage": [[416, "pydicom-uid-ophthalmicaxialmeasurementsstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage": [[417, "pydicom-uid-ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage": [[418, "pydicom-uid-ophthalmicopticalcoherencetomographyenfaceimagestorage"]], "pydicom.uid.OphthalmicPhotography16BitImageStorage": [[419, "pydicom-uid-ophthalmicphotography16bitimagestorage"]], "pydicom.uid.OphthalmicPhotography8BitImageStorage": [[420, "pydicom-uid-ophthalmicphotography8bitimagestorage"]], "pydicom.uid.OphthalmicThicknessMapStorage": [[421, "pydicom-uid-ophthalmicthicknessmapstorage"]], "pydicom.uid.OphthalmicTomographyImageStorage": [[422, "pydicom-uid-ophthalmictomographyimagestorage"]], "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage": [[423, "pydicom-uid-ophthalmicvisualfieldstaticperimetrymeasurementsstorage"]], "pydicom.uid.PYDICOM_IMPLEMENTATION_UID": [[424, "pydicom-uid-pydicom-implementation-uid"]], "pydicom.uid.PYDICOM_ROOT_UID": [[425, "pydicom-uid-pydicom-root-uid"]], "pydicom.uid.ParametricMapStorage": [[426, "pydicom-uid-parametricmapstorage"]], "pydicom.uid.PatientRadiationDoseSRStorage": [[427, "pydicom-uid-patientradiationdosesrstorage"]], "pydicom.uid.PerformedImagingAgentAdministrationSRStorage": [[428, "pydicom-uid-performedimagingagentadministrationsrstorage"]], "pydicom.uid.PhotoacousticImageStorage": [[429, "pydicom-uid-photoacousticimagestorage"]], "pydicom.uid.PlannedImagingAgentAdministrationSRStorage": [[430, "pydicom-uid-plannedimagingagentadministrationsrstorage"]], "pydicom.uid.PositronEmissionTomographyImageStorage": [[431, "pydicom-uid-positronemissiontomographyimagestorage"]], "pydicom.uid.PrivateTransferSyntaxes": [[432, "pydicom-uid-privatetransfersyntaxes"]], "pydicom.uid.ProcedureLogStorage": [[433, "pydicom-uid-procedurelogstorage"]], "pydicom.uid.ProtocolApprovalStorage": [[434, "pydicom-uid-protocolapprovalstorage"]], "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage": [[435, "pydicom-uid-pseudocolorsoftcopypresentationstatestorage"]], "pydicom.uid.RE_VALID_UID": [[436, "pydicom-uid-re-valid-uid"]], "pydicom.uid.RE_VALID_UID_PREFIX": [[437, "pydicom-uid-re-valid-uid-prefix"]], "pydicom.uid.RLELossless": [[438, "pydicom-uid-rlelossless"]], "pydicom.uid.RLETransferSyntaxes": [[439, "pydicom-uid-rletransfersyntaxes"]], "pydicom.uid.RTBeamsDeliveryInstructionStorage": [[440, "pydicom-uid-rtbeamsdeliveryinstructionstorage"]], "pydicom.uid.RTBeamsTreatmentRecordStorage": [[441, "pydicom-uid-rtbeamstreatmentrecordstorage"]], "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage": [[442, "pydicom-uid-rtbrachyapplicationsetupdeliveryinstructionstorage"]], "pydicom.uid.RTBrachyTreatmentRecordStorage": [[443, "pydicom-uid-rtbrachytreatmentrecordstorage"]], "pydicom.uid.RTDoseStorage": [[444, "pydicom-uid-rtdosestorage"]], "pydicom.uid.RTImageStorage": [[445, "pydicom-uid-rtimagestorage"]], "pydicom.uid.RTIonBeamsTreatmentRecordStorage": [[446, "pydicom-uid-rtionbeamstreatmentrecordstorage"]], "pydicom.uid.RTIonPlanStorage": [[447, "pydicom-uid-rtionplanstorage"]], "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage": [[448, "pydicom-uid-rtpatientpositionacquisitioninstructionstorage"]], "pydicom.uid.RTPhysicianIntentStorage": [[449, "pydicom-uid-rtphysicianintentstorage"]], "pydicom.uid.RTPlanStorage": [[450, "pydicom-uid-rtplanstorage"]], "pydicom.uid.RTRadiationRecordSetStorage": [[451, "pydicom-uid-rtradiationrecordsetstorage"]], "pydicom.uid.RTRadiationSalvageRecordStorage": [[452, "pydicom-uid-rtradiationsalvagerecordstorage"]], "pydicom.uid.RTRadiationSetDeliveryInstructionStorage": [[453, "pydicom-uid-rtradiationsetdeliveryinstructionstorage"]], "pydicom.uid.RTRadiationSetStorage": [[454, "pydicom-uid-rtradiationsetstorage"]], "pydicom.uid.RTSegmentAnnotationStorage": [[455, "pydicom-uid-rtsegmentannotationstorage"]], "pydicom.uid.RTStructureSetStorage": [[456, "pydicom-uid-rtstructuresetstorage"]], "pydicom.uid.RTTreatmentPreparationStorage": [[457, "pydicom-uid-rttreatmentpreparationstorage"]], "pydicom.uid.RTTreatmentSummaryRecordStorage": [[458, "pydicom-uid-rttreatmentsummaryrecordstorage"]], "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage": [[459, "pydicom-uid-radiopharmaceuticalradiationdosesrstorage"]], "pydicom.uid.RawDataStorage": [[460, "pydicom-uid-rawdatastorage"]], "pydicom.uid.RealWorldValueMappingStorage": [[461, "pydicom-uid-realworldvaluemappingstorage"]], "pydicom.uid.RespiratoryWaveformStorage": [[462, "pydicom-uid-respiratorywaveformstorage"]], "pydicom.uid.RoboticArmRadiationStorage": [[463, "pydicom-uid-roboticarmradiationstorage"]], "pydicom.uid.RoboticRadiationRecordStorage": [[464, "pydicom-uid-roboticradiationrecordstorage"]], "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage": [[465, "pydicom-uid-routinescalpelectroencephalogramwaveformstorage"]], "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo": [[466, "pydicom-uid-smptest211020uncompressedinterlacedactivevideo"]], "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo": [[467, "pydicom-uid-smptest211020uncompressedprogressiveactivevideo"]], "pydicom.uid.SMPTEST211030PCMDigitalAudio": [[468, "pydicom-uid-smptest211030pcmdigitalaudio"]], "pydicom.uid.SecondaryCaptureImageStorage": [[469, "pydicom-uid-secondarycaptureimagestorage"]], "pydicom.uid.SegmentationStorage": [[470, "pydicom-uid-segmentationstorage"]], "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage": [[471, "pydicom-uid-segmentedvolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.SimplifiedAdultEchoSRStorage": [[472, "pydicom-uid-simplifiedadultechosrstorage"]], "pydicom.uid.SleepElectroencephalogramWaveformStorage": [[473, "pydicom-uid-sleepelectroencephalogramwaveformstorage"]], "pydicom.uid.SpatialFiducialsStorage": [[474, "pydicom-uid-spatialfiducialsstorage"]], "pydicom.uid.SpatialRegistrationStorage": [[475, "pydicom-uid-spatialregistrationstorage"]], "pydicom.uid.SpectaclePrescriptionReportStorage": [[476, "pydicom-uid-spectacleprescriptionreportstorage"]], "pydicom.uid.StereometricRelationshipStorage": [[477, "pydicom-uid-stereometricrelationshipstorage"]], "pydicom.uid.SubjectiveRefractionMeasurementsStorage": [[478, "pydicom-uid-subjectiverefractionmeasurementsstorage"]], "pydicom.uid.SurfaceScanMeshStorage": [[479, "pydicom-uid-surfacescanmeshstorage"]], "pydicom.uid.SurfaceScanPointCloudStorage": [[480, "pydicom-uid-surfacescanpointcloudstorage"]], "pydicom.uid.SurfaceSegmentationStorage": [[481, "pydicom-uid-surfacesegmentationstorage"]], "pydicom.uid.TomotherapeuticRadiationRecordStorage": [[482, "pydicom-uid-tomotherapeuticradiationrecordstorage"]], "pydicom.uid.TomotherapeuticRadiationStorage": [[483, "pydicom-uid-tomotherapeuticradiationstorage"]], "pydicom.uid.TractographyResultsStorage": [[484, "pydicom-uid-tractographyresultsstorage"]], "pydicom.uid.TwelveLeadECGWaveformStorage": [[485, "pydicom-uid-twelveleadecgwaveformstorage"]], "pydicom.uid.UID": [[486, "pydicom-uid-uid"]], "pydicom.uid.UltrasoundImageStorage": [[487, "pydicom-uid-ultrasoundimagestorage"]], "pydicom.uid.UltrasoundMultiFrameImageStorage": [[488, "pydicom-uid-ultrasoundmultiframeimagestorage"]], "pydicom.uid.UncompressedTransferSyntaxes": [[489, "pydicom-uid-uncompressedtransfersyntaxes"]], "pydicom.uid.VLEndoscopicImageStorage": [[490, "pydicom-uid-vlendoscopicimagestorage"]], "pydicom.uid.VLMicroscopicImageStorage": [[491, "pydicom-uid-vlmicroscopicimagestorage"]], "pydicom.uid.VLPhotographicImageStorage": [[492, "pydicom-uid-vlphotographicimagestorage"]], "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage": [[493, "pydicom-uid-vlslidecoordinatesmicroscopicimagestorage"]], "pydicom.uid.VLWholeSlideMicroscopyImageStorage": [[494, "pydicom-uid-vlwholeslidemicroscopyimagestorage"]], "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage": [[495, "pydicom-uid-variablemodalitylutsoftcopypresentationstatestorage"]], "pydicom.uid.VideoEndoscopicImageStorage": [[496, "pydicom-uid-videoendoscopicimagestorage"]], "pydicom.uid.VideoMicroscopicImageStorage": [[497, "pydicom-uid-videomicroscopicimagestorage"]], "pydicom.uid.VideoPhotographicImageStorage": [[498, "pydicom-uid-videophotographicimagestorage"]], "pydicom.uid.VisualAcuityMeasurementsStorage": [[499, "pydicom-uid-visualacuitymeasurementsstorage"]], "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage": [[500, "pydicom-uid-volumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage": [[501, "pydicom-uid-widefieldophthalmicphotography3dcoordinatesimagestorage"]], "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage": [[502, "pydicom-uid-widefieldophthalmicphotographystereographicprojectionimagestorage"]], "pydicom.uid.XADefinedProcedureProtocolStorage": [[503, "pydicom-uid-xadefinedprocedureprotocolstorage"]], "pydicom.uid.XAPerformedProcedureProtocolStorage": [[504, "pydicom-uid-xaperformedprocedureprotocolstorage"]], "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage": [[505, "pydicom-uid-xaxrfgrayscalesoftcopypresentationstatestorage"]], "pydicom.uid.XRay3DAngiographicImageStorage": [[506, "pydicom-uid-xray3dangiographicimagestorage"]], "pydicom.uid.XRay3DCraniofacialImageStorage": [[507, "pydicom-uid-xray3dcraniofacialimagestorage"]], "pydicom.uid.XRayAngiographicImageStorage": [[508, "pydicom-uid-xrayangiographicimagestorage"]], "pydicom.uid.XRayRadiationDoseSRStorage": [[509, "pydicom-uid-xrayradiationdosesrstorage"]], "pydicom.uid.XRayRadiofluoroscopicImageStorage": [[510, "pydicom-uid-xrayradiofluoroscopicimagestorage"]], "pydicom.uid.generate_uid": [[511, "pydicom-uid-generate-uid"]], "pydicom.uid.register_transfer_syntax": [[512, "pydicom-uid-register-transfer-syntax"]], "pydicom.valuerep.DA": [[513, "pydicom-valuerep-da"]], "pydicom.valuerep.DS": [[514, "pydicom-valuerep-ds"]], "pydicom.valuerep.DSdecimal": [[515, "pydicom-valuerep-dsdecimal"]], "pydicom.valuerep.DSfloat": [[516, "pydicom-valuerep-dsfloat"]], "pydicom.valuerep.DT": [[517, "pydicom-valuerep-dt"]], "pydicom.valuerep.IS": [[518, "pydicom-valuerep-is"]], "pydicom.valuerep.ISfloat": [[519, "pydicom-valuerep-isfloat"]], "pydicom.valuerep.PersonName": [[520, "pydicom-valuerep-personname"]], "pydicom.valuerep.TM": [[521, "pydicom-valuerep-tm"]], "pydicom.valuerep.VR": [[522, "pydicom-valuerep-vr"]], "pydicom.valuerep.format_number_as_ds": [[523, "pydicom-valuerep-format-number-as-ds"]], "pydicom.valuerep.is_valid_ds": [[524, "pydicom-valuerep-is-valid-ds"]], "pydicom.values.convert_AE_string": [[525, "pydicom-values-convert-ae-string"]], "pydicom.values.convert_ATvalue": [[526, "pydicom-values-convert-atvalue"]], "pydicom.values.convert_DA_string": [[527, "pydicom-values-convert-da-string"]], "pydicom.values.convert_DS_string": [[528, "pydicom-values-convert-ds-string"]], "pydicom.values.convert_DT_string": [[529, "pydicom-values-convert-dt-string"]], "pydicom.values.convert_IS_string": [[530, "pydicom-values-convert-is-string"]], "pydicom.values.convert_OBvalue": [[531, "pydicom-values-convert-obvalue"]], "pydicom.values.convert_OWvalue": [[532, "pydicom-values-convert-owvalue"]], "pydicom.values.convert_PN": [[533, "pydicom-values-convert-pn"]], "pydicom.values.convert_SQ": [[534, "pydicom-values-convert-sq"]], "pydicom.values.convert_TM_string": [[535, "pydicom-values-convert-tm-string"]], "pydicom.values.convert_UI": [[536, "pydicom-values-convert-ui"]], "pydicom.values.convert_UN": [[537, "pydicom-values-convert-un"]], "pydicom.values.convert_UR_string": [[538, "pydicom-values-convert-ur-string"]], "pydicom.values.convert_numbers": [[539, "pydicom-values-convert-numbers"]], "pydicom.values.convert_single_string": [[540, "pydicom-values-convert-single-string"]], "pydicom.values.convert_string": [[541, "pydicom-values-convert-string"]], "pydicom.values.convert_tag": [[542, "pydicom-values-convert-tag"]], "pydicom.values.convert_text": [[543, "pydicom-values-convert-text"]], "pydicom.values.convert_value": [[544, "pydicom-values-convert-value"]], "pydicom.values.multi_string": [[545, "pydicom-values-multi-string"]], "pydicom.waveforms.numpy_handler": [[546, "module-pydicom.waveforms.numpy_handler"]], "pyjpegls": [[33, "pyjpegls"]], "pylibjpeg": [[33, "pylibjpeg"], [36, "pylibjpeg"]]}, "docnames": ["auto_examples/dicomtree", "auto_examples/image_processing/index", "auto_examples/image_processing/plot_downsize_image", "auto_examples/image_processing/plot_waveforms", "auto_examples/image_processing/reslice", "auto_examples/image_processing/sg_execution_times", "auto_examples/index", "auto_examples/input_output/index", "auto_examples/input_output/plot_printing_dataset", "auto_examples/input_output/plot_read_dicom", "auto_examples/input_output/plot_read_fileset", "auto_examples/input_output/plot_read_rtplan", "auto_examples/input_output/plot_write_dicom", "auto_examples/input_output/sg_execution_times", "auto_examples/memory_dataset", "auto_examples/metadata_processing/index", "auto_examples/metadata_processing/plot_add_dict_entries", "auto_examples/metadata_processing/plot_anonymize", "auto_examples/metadata_processing/plot_sequences", "auto_examples/metadata_processing/sg_execution_times", "auto_examples/plot_dicom_difference", "auto_examples/sg_execution_times", "auto_examples/show_charset_name", "faq/index", "guides/cli/cli_codify", "guides/cli/cli_dev", "guides/cli/cli_guide", "guides/cli/cli_intro", "guides/cli/cli_show", "guides/decoding/decoder_options", "guides/decoding/decoder_plugins", "guides/decoding/index", "guides/element_value_types", "guides/encoding/encoder_plugin_options", "guides/encoding/encoder_plugins", "guides/encoding/index", "guides/encoding/jpeg_2k", "guides/encoding/jpeg_ls", "guides/encoding/rle_lossless", "guides/glossary", "guides/index", "guides/writing_documentation", "index", "old/base_element", "old/best_practices", "old/getting_started", "old/image_data_compression", "old/image_data_handlers", "old/private_data_elements", "old/pydicom_user_guide", "old/ref_guide", "old/viewing_images", "old/working_with_overlays", "old/working_with_pixel_data", "old/working_with_waveforms", "old/writing_files", "reference/charset", "reference/config", "reference/data", "reference/datadict", "reference/dataset", "reference/elem", "reference/elem.dataelem", "reference/elem.multival", "reference/elem.sequence", "reference/elem.tag", "reference/elem.valuerep", "reference/elem.values", "reference/encaps", "reference/errors", "reference/examples", "reference/fileio", "reference/fileio.base", "reference/fileio.read", "reference/fileio.util", "reference/fileio.write", "reference/fileset", "reference/generated/pydicom.charset.convert_encodings", "reference/generated/pydicom.charset.decode_bytes", "reference/generated/pydicom.charset.decode_element", "reference/generated/pydicom.charset.encode_string", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS", "reference/generated/pydicom.config.DS_decimal", "reference/generated/pydicom.config.DS_numpy", "reference/generated/pydicom.config.IGNORE", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR", "reference/generated/pydicom.config.RAISE", "reference/generated/pydicom.config.WARN", "reference/generated/pydicom.config.allow_DS_float", "reference/generated/pydicom.config.assume_implicit_vr_switch", "reference/generated/pydicom.config.convert_wrong_length_to_UN", "reference/generated/pydicom.config.data_element_callback", "reference/generated/pydicom.config.data_element_callback_kwargs", "reference/generated/pydicom.config.datetime_conversion", "reference/generated/pydicom.config.debug", "reference/generated/pydicom.config.enforce_valid_values", "reference/generated/pydicom.config.future_behavior", "reference/generated/pydicom.config.pixel_data_handlers", "reference/generated/pydicom.config.reset_data_element_callback", "reference/generated/pydicom.config.settings", "reference/generated/pydicom.config.show_file_meta", "reference/generated/pydicom.config.use_DS_decimal", "reference/generated/pydicom.config.use_DS_numpy", "reference/generated/pydicom.config.use_IS_numpy", "reference/generated/pydicom.data.get_charset_files", "reference/generated/pydicom.data.get_palette_files", "reference/generated/pydicom.data.get_testdata_file", "reference/generated/pydicom.data.get_testdata_files", "reference/generated/pydicom.datadict.add_dict_entries", "reference/generated/pydicom.datadict.add_dict_entry", "reference/generated/pydicom.datadict.add_private_dict_entries", "reference/generated/pydicom.datadict.add_private_dict_entry", "reference/generated/pydicom.datadict.dictionary_VM", "reference/generated/pydicom.datadict.dictionary_VR", "reference/generated/pydicom.datadict.dictionary_description", "reference/generated/pydicom.datadict.dictionary_has_tag", "reference/generated/pydicom.datadict.dictionary_is_retired", "reference/generated/pydicom.datadict.dictionary_keyword", "reference/generated/pydicom.datadict.get_entry", "reference/generated/pydicom.datadict.get_private_entry", "reference/generated/pydicom.datadict.keyword_for_tag", "reference/generated/pydicom.datadict.mask_match", "reference/generated/pydicom.datadict.private_dictionary_VM", "reference/generated/pydicom.datadict.private_dictionary_VR", "reference/generated/pydicom.datadict.private_dictionary_description", "reference/generated/pydicom.datadict.repeater_has_keyword", "reference/generated/pydicom.datadict.repeater_has_tag", "reference/generated/pydicom.datadict.tag_for_keyword", "reference/generated/pydicom.dataelem.DataElement", "reference/generated/pydicom.dataelem.DataElement_from_raw", "reference/generated/pydicom.dataelem.RawDataElement", "reference/generated/pydicom.dataset.Dataset", "reference/generated/pydicom.dataset.FileDataset", "reference/generated/pydicom.dataset.FileMetaDataset", "reference/generated/pydicom.dataset.PrivateBlock", "reference/generated/pydicom.dataset.validate_file_meta", "reference/generated/pydicom.encaps.decode_data_sequence", "reference/generated/pydicom.encaps.defragment_data", "reference/generated/pydicom.encaps.encapsulate", "reference/generated/pydicom.encaps.encapsulate_extended", "reference/generated/pydicom.encaps.fragment_frame", "reference/generated/pydicom.encaps.generate_fragmented_frames", "reference/generated/pydicom.encaps.generate_fragments", "reference/generated/pydicom.encaps.generate_frames", "reference/generated/pydicom.encaps.generate_pixel_data", "reference/generated/pydicom.encaps.generate_pixel_data_fragment", "reference/generated/pydicom.encaps.generate_pixel_data_frame", "reference/generated/pydicom.encaps.get_frame", "reference/generated/pydicom.encaps.get_frame_offsets", "reference/generated/pydicom.encaps.itemize_fragment", "reference/generated/pydicom.encaps.itemize_frame", "reference/generated/pydicom.encaps.parse_basic_offsets", "reference/generated/pydicom.encaps.parse_fragments", "reference/generated/pydicom.encaps.read_item", "reference/generated/pydicom.errors.InvalidDicomError", "reference/generated/pydicom.filebase.DicomBytesIO", "reference/generated/pydicom.filebase.DicomFile", "reference/generated/pydicom.filebase.DicomFileLike", "reference/generated/pydicom.filebase.DicomIO", "reference/generated/pydicom.filereader.data_element_generator", "reference/generated/pydicom.filereader.data_element_offset_to_value", "reference/generated/pydicom.filereader.dcmread", "reference/generated/pydicom.filereader.read_dataset", "reference/generated/pydicom.filereader.read_deferred_data_element", "reference/generated/pydicom.filereader.read_file_meta_info", "reference/generated/pydicom.filereader.read_partial", "reference/generated/pydicom.filereader.read_preamble", "reference/generated/pydicom.filereader.read_sequence", "reference/generated/pydicom.filereader.read_sequence_item", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS", "reference/generated/pydicom.fileset.FileInstance", "reference/generated/pydicom.fileset.FileSet", "reference/generated/pydicom.fileset.RecordNode", "reference/generated/pydicom.fileset.generate_filename", "reference/generated/pydicom.fileset.is_conformant_file_id", "reference/generated/pydicom.fileutil.absorb_delimiter_item", "reference/generated/pydicom.fileutil.find_bytes", "reference/generated/pydicom.fileutil.find_delimiter", "reference/generated/pydicom.fileutil.length_of_undefined_length", "reference/generated/pydicom.fileutil.read_undefined_length_value", "reference/generated/pydicom.filewriter.correct_ambiguous_vr", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element", "reference/generated/pydicom.filewriter.dcmwrite", "reference/generated/pydicom.filewriter.multi_string", "reference/generated/pydicom.filewriter.write_ATvalue", "reference/generated/pydicom.filewriter.write_DA", "reference/generated/pydicom.filewriter.write_DT", "reference/generated/pydicom.filewriter.write_OBvalue", "reference/generated/pydicom.filewriter.write_OWvalue", "reference/generated/pydicom.filewriter.write_PN", "reference/generated/pydicom.filewriter.write_TM", "reference/generated/pydicom.filewriter.write_UI", "reference/generated/pydicom.filewriter.write_UN", "reference/generated/pydicom.filewriter.write_data_element", "reference/generated/pydicom.filewriter.write_dataset", "reference/generated/pydicom.filewriter.write_file_meta_info", "reference/generated/pydicom.filewriter.write_number_string", "reference/generated/pydicom.filewriter.write_numbers", "reference/generated/pydicom.filewriter.write_sequence", "reference/generated/pydicom.filewriter.write_sequence_item", "reference/generated/pydicom.filewriter.write_string", "reference/generated/pydicom.filewriter.write_text", "reference/generated/pydicom.misc.is_dicom", "reference/generated/pydicom.misc.size_in_bytes", "reference/generated/pydicom.multival.MultiValue", "reference/generated/pydicom.overlays.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler", "reference/generated/pydicom.pixel_data_handlers.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.pillow_handler", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler", "reference/generated/pydicom.pixel_data_handlers.rle_handler", "reference/generated/pydicom.pixels.apply_color_lut", "reference/generated/pydicom.pixels.apply_modality_lut", "reference/generated/pydicom.pixels.apply_voi", "reference/generated/pydicom.pixels.apply_voi_lut", "reference/generated/pydicom.pixels.apply_windowing", "reference/generated/pydicom.pixels.as_pixel_options", "reference/generated/pydicom.pixels.convert_color_space", "reference/generated/pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", "reference/generated/pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", "reference/generated/pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.JPEG2000Decoder", "reference/generated/pydicom.pixels.decoders.JPEG2000LosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGBaseline8BitDecoder", "reference/generated/pydicom.pixels.decoders.JPEGExtended12BitDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLSLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLosslessSV1Decoder", "reference/generated/pydicom.pixels.decoders.RLELosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner", "reference/generated/pydicom.pixels.decoders.base.Decoder", "reference/generated/pydicom.pixels.encoders.JPEG2000Encoder", "reference/generated/pydicom.pixels.encoders.JPEG2000LosslessEncoder", "reference/generated/pydicom.pixels.encoders.JPEGLSLosslessEncoder", "reference/generated/pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", "reference/generated/pydicom.pixels.encoders.RLELosslessEncoder", "reference/generated/pydicom.pixels.encoders.base.EncodeRunner", "reference/generated/pydicom.pixels.encoders.base.Encoder", "reference/generated/pydicom.pixels.get_decoder", "reference/generated/pydicom.pixels.get_encoder", "reference/generated/pydicom.pixels.iter_pixels", "reference/generated/pydicom.pixels.pack_bits", "reference/generated/pydicom.pixels.pixel_array", "reference/generated/pydicom.pixels.processing.apply_color_lut", "reference/generated/pydicom.pixels.processing.apply_modality_lut", "reference/generated/pydicom.pixels.processing.apply_rescale", "reference/generated/pydicom.pixels.processing.apply_voi", "reference/generated/pydicom.pixels.processing.apply_voi_lut", "reference/generated/pydicom.pixels.processing.apply_windowing", "reference/generated/pydicom.pixels.processing.convert_color_space", "reference/generated/pydicom.pixels.unpack_bits", "reference/generated/pydicom.pixels.utils.as_pixel_options", "reference/generated/pydicom.pixels.utils.expand_ybr422", "reference/generated/pydicom.pixels.utils.get_expected_length", "reference/generated/pydicom.pixels.utils.get_image_pixel_ids", "reference/generated/pydicom.pixels.utils.get_j2k_parameters", "reference/generated/pydicom.pixels.utils.get_nr_frames", "reference/generated/pydicom.pixels.utils.iter_pixels", "reference/generated/pydicom.pixels.utils.pack_bits", "reference/generated/pydicom.pixels.utils.pixel_array", "reference/generated/pydicom.pixels.utils.pixel_dtype", "reference/generated/pydicom.pixels.utils.reshape_pixel_array", "reference/generated/pydicom.pixels.utils.unpack_bits", "reference/generated/pydicom.sequence.Sequence", "reference/generated/pydicom.tag.BaseTag", "reference/generated/pydicom.tag.Tag", "reference/generated/pydicom.tag.TupleTag", "reference/generated/pydicom.tag.tag_in_exception", "reference/generated/pydicom.uid.AcquisitionContextSRStorage", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage", "reference/generated/pydicom.uid.AllTransferSyntaxes", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage", "reference/generated/pydicom.uid.BasicTextSRStorage", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.BodyPositionWaveformStorage", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.CTImageStorage", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage", "reference/generated/pydicom.uid.ChestCADSRStorage", "reference/generated/pydicom.uid.ColonCADSRStorage", "reference/generated/pydicom.uid.ColorPaletteStorage", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.Comprehensive3DSRStorage", "reference/generated/pydicom.uid.ComprehensiveSRStorage", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage", "reference/generated/pydicom.uid.CornealTopographyMapStorage", "reference/generated/pydicom.uid.DICOS2DAITStorage", "reference/generated/pydicom.uid.DICOS3DAITStorage", "reference/generated/pydicom.uid.DICOSCTImageStorage", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.EddyCurrentImageStorage", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage", "reference/generated/pydicom.uid.EncapsulatedCDAStorage", "reference/generated/pydicom.uid.EncapsulatedMTLStorage", "reference/generated/pydicom.uid.EncapsulatedOBJStorage", "reference/generated/pydicom.uid.EncapsulatedPDFStorage", "reference/generated/pydicom.uid.EncapsulatedSTLStorage", "reference/generated/pydicom.uid.EnhancedCTImageStorage", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage", "reference/generated/pydicom.uid.EnhancedMRImageStorage", "reference/generated/pydicom.uid.EnhancedPETImageStorage", "reference/generated/pydicom.uid.EnhancedRTImageStorage", "reference/generated/pydicom.uid.EnhancedSRStorage", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage", "reference/generated/pydicom.uid.EnhancedXAImageStorage", "reference/generated/pydicom.uid.EnhancedXRFImageStorage", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.ExplicitVRBigEndian", "reference/generated/pydicom.uid.ExplicitVRLittleEndian", "reference/generated/pydicom.uid.ExtensibleSRStorage", "reference/generated/pydicom.uid.General32bitECGWaveformStorage", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage", "reference/generated/pydicom.uid.GeneralECGWaveformStorage", "reference/generated/pydicom.uid.GenericImplantTemplateStorage", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.HEVCM10P51", "reference/generated/pydicom.uid.HEVCMP51", "reference/generated/pydicom.uid.HTJ2K", "reference/generated/pydicom.uid.HTJ2KLossless", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL", "reference/generated/pydicom.uid.HangingProtocolStorage", "reference/generated/pydicom.uid.HemodynamicWaveformStorage", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage", "reference/generated/pydicom.uid.ImplantationPlanSRStorage", "reference/generated/pydicom.uid.ImplicitVRLittleEndian", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pydicom.uid.InventoryStorage", "reference/generated/pydicom.uid.JPEG2000", "reference/generated/pydicom.uid.JPEG2000Lossless", "reference/generated/pydicom.uid.JPEG2000MC", "reference/generated/pydicom.uid.JPEG2000MCLossless", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes", "reference/generated/pydicom.uid.JPEGBaseline8Bit", "reference/generated/pydicom.uid.JPEGExtended12Bit", "reference/generated/pydicom.uid.JPEGLSLossless", "reference/generated/pydicom.uid.JPEGLSNearLossless", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes", "reference/generated/pydicom.uid.JPEGLossless", "reference/generated/pydicom.uid.JPEGLosslessSV1", "reference/generated/pydicom.uid.JPEGTransferSyntaxes", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pydicom.uid.LensometryMeasurementsStorage", "reference/generated/pydicom.uid.MPEG2MPHL", "reference/generated/pydicom.uid.MPEG2MPHLF", "reference/generated/pydicom.uid.MPEG2MPML", "reference/generated/pydicom.uid.MPEG2MPMLF", "reference/generated/pydicom.uid.MPEG4HP41", "reference/generated/pydicom.uid.MPEG4HP41BD", "reference/generated/pydicom.uid.MPEG4HP41BDF", "reference/generated/pydicom.uid.MPEG4HP41F", "reference/generated/pydicom.uid.MPEG4HP422D", "reference/generated/pydicom.uid.MPEG4HP422DF", "reference/generated/pydicom.uid.MPEG4HP423D", "reference/generated/pydicom.uid.MPEG4HP423DF", "reference/generated/pydicom.uid.MPEG4HP42STEREO", "reference/generated/pydicom.uid.MPEG4HP42STEREOF", "reference/generated/pydicom.uid.MPEGTransferSyntaxes", "reference/generated/pydicom.uid.MRImageStorage", "reference/generated/pydicom.uid.MRSpectroscopyStorage", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pydicom.uid.MammographyCADSRStorage", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.NuclearMedicineImageStorage", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID", "reference/generated/pydicom.uid.ParametricMapStorage", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PhotoacousticImageStorage", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage", "reference/generated/pydicom.uid.PrivateTransferSyntaxes", "reference/generated/pydicom.uid.ProcedureLogStorage", "reference/generated/pydicom.uid.ProtocolApprovalStorage", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.RE_VALID_UID", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX", "reference/generated/pydicom.uid.RLELossless", "reference/generated/pydicom.uid.RLETransferSyntaxes", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage", "reference/generated/pydicom.uid.RTDoseStorage", "reference/generated/pydicom.uid.RTImageStorage", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTIonPlanStorage", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "reference/generated/pydicom.uid.RTPhysicianIntentStorage", "reference/generated/pydicom.uid.RTPlanStorage", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTRadiationSetStorage", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage", "reference/generated/pydicom.uid.RTStructureSetStorage", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pydicom.uid.RawDataStorage", "reference/generated/pydicom.uid.RealWorldValueMappingStorage", "reference/generated/pydicom.uid.RespiratoryWaveformStorage", "reference/generated/pydicom.uid.RoboticArmRadiationStorage", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage", "reference/generated/pydicom.uid.SegmentationStorage", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SpatialFiducialsStorage", "reference/generated/pydicom.uid.SpatialRegistrationStorage", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage", "reference/generated/pydicom.uid.StereometricRelationshipStorage", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage", "reference/generated/pydicom.uid.SurfaceScanMeshStorage", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage", "reference/generated/pydicom.uid.SurfaceSegmentationStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage", "reference/generated/pydicom.uid.TractographyResultsStorage", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage", "reference/generated/pydicom.uid.UID", "reference/generated/pydicom.uid.UltrasoundImageStorage", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes", "reference/generated/pydicom.uid.VLEndoscopicImageStorage", "reference/generated/pydicom.uid.VLMicroscopicImageStorage", "reference/generated/pydicom.uid.VLPhotographicImageStorage", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage", "reference/generated/pydicom.uid.VideoPhotographicImageStorage", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage", "reference/generated/pydicom.uid.XRayAngiographicImageStorage", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage", "reference/generated/pydicom.uid.generate_uid", "reference/generated/pydicom.uid.register_transfer_syntax", "reference/generated/pydicom.valuerep.DA", "reference/generated/pydicom.valuerep.DS", "reference/generated/pydicom.valuerep.DSdecimal", "reference/generated/pydicom.valuerep.DSfloat", "reference/generated/pydicom.valuerep.DT", "reference/generated/pydicom.valuerep.IS", "reference/generated/pydicom.valuerep.ISfloat", "reference/generated/pydicom.valuerep.PersonName", "reference/generated/pydicom.valuerep.TM", "reference/generated/pydicom.valuerep.VR", "reference/generated/pydicom.valuerep.format_number_as_ds", "reference/generated/pydicom.valuerep.is_valid_ds", "reference/generated/pydicom.values.convert_AE_string", "reference/generated/pydicom.values.convert_ATvalue", "reference/generated/pydicom.values.convert_DA_string", "reference/generated/pydicom.values.convert_DS_string", "reference/generated/pydicom.values.convert_DT_string", "reference/generated/pydicom.values.convert_IS_string", "reference/generated/pydicom.values.convert_OBvalue", "reference/generated/pydicom.values.convert_OWvalue", "reference/generated/pydicom.values.convert_PN", "reference/generated/pydicom.values.convert_SQ", "reference/generated/pydicom.values.convert_TM_string", "reference/generated/pydicom.values.convert_UI", "reference/generated/pydicom.values.convert_UN", "reference/generated/pydicom.values.convert_UR_string", "reference/generated/pydicom.values.convert_numbers", "reference/generated/pydicom.values.convert_single_string", "reference/generated/pydicom.values.convert_string", "reference/generated/pydicom.values.convert_tag", "reference/generated/pydicom.values.convert_text", "reference/generated/pydicom.values.convert_value", "reference/generated/pydicom.values.multi_string", "reference/generated/pydicom.waveforms.numpy_handler", "reference/handlers", "reference/handlers.pixel_data", "reference/index", "reference/misc", "reference/overlays", "reference/pixels", "reference/pixels.decoders", "reference/pixels.encoders", "reference/pixels.processing", "reference/pixels.utils", "reference/uid", "reference/waveforms", "release_notes/index", "release_notes/v0.9.2", "release_notes/v0.9.3", "release_notes/v0.9.4", "release_notes/v0.9.5", "release_notes/v0.9.6", "release_notes/v0.9.7", "release_notes/v0.9.8", "release_notes/v0.9.9", "release_notes/v1.0.0", "release_notes/v1.1.0", "release_notes/v1.2.0", "release_notes/v1.3.0", "release_notes/v1.4.0", "release_notes/v1.4.1", "release_notes/v2.0.0", "release_notes/v2.1.0", "release_notes/v2.1.1", "release_notes/v2.2.0", "release_notes/v2.3.0", "release_notes/v2.4.0", "release_notes/v3.0.0", "sg_execution_times", "tutorials/contributing", "tutorials/contributing_code", "tutorials/contributing_docs", "tutorials/dataset_basics", "tutorials/dicom_json", "tutorials/filesets", "tutorials/index", "tutorials/installation", "tutorials/pixel_data/compressing", "tutorials/sr_basics", "tutorials/waveforms"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["auto_examples/dicomtree.rst", "auto_examples/image_processing/index.rst", "auto_examples/image_processing/plot_downsize_image.rst", "auto_examples/image_processing/plot_waveforms.rst", "auto_examples/image_processing/reslice.rst", "auto_examples/image_processing/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/input_output/index.rst", "auto_examples/input_output/plot_printing_dataset.rst", "auto_examples/input_output/plot_read_dicom.rst", "auto_examples/input_output/plot_read_fileset.rst", "auto_examples/input_output/plot_read_rtplan.rst", "auto_examples/input_output/plot_write_dicom.rst", "auto_examples/input_output/sg_execution_times.rst", "auto_examples/memory_dataset.rst", "auto_examples/metadata_processing/index.rst", "auto_examples/metadata_processing/plot_add_dict_entries.rst", "auto_examples/metadata_processing/plot_anonymize.rst", "auto_examples/metadata_processing/plot_sequences.rst", "auto_examples/metadata_processing/sg_execution_times.rst", "auto_examples/plot_dicom_difference.rst", "auto_examples/sg_execution_times.rst", "auto_examples/show_charset_name.rst", "faq/index.rst", "guides/cli/cli_codify.rst", "guides/cli/cli_dev.rst", "guides/cli/cli_guide.rst", "guides/cli/cli_intro.rst", "guides/cli/cli_show.rst", "guides/decoding/decoder_options.rst", "guides/decoding/decoder_plugins.rst", "guides/decoding/index.rst", "guides/element_value_types.rst", "guides/encoding/encoder_plugin_options.rst", "guides/encoding/encoder_plugins.rst", "guides/encoding/index.rst", "guides/encoding/jpeg_2k.rst", "guides/encoding/jpeg_ls.rst", "guides/encoding/rle_lossless.rst", "guides/glossary.rst", "guides/index.rst", "guides/writing_documentation.rst", "index.rst", "old/base_element.rst", "old/best_practices.rst", "old/getting_started.rst", "old/image_data_compression.rst", "old/image_data_handlers.rst", "old/private_data_elements.rst", "old/pydicom_user_guide.rst", "old/ref_guide.rst", "old/viewing_images.rst", "old/working_with_overlays.rst", "old/working_with_pixel_data.rst", "old/working_with_waveforms.rst", "old/writing_files.rst", "reference/charset.rst", "reference/config.rst", "reference/data.rst", "reference/datadict.rst", "reference/dataset.rst", "reference/elem.rst", "reference/elem.dataelem.rst", "reference/elem.multival.rst", "reference/elem.sequence.rst", "reference/elem.tag.rst", "reference/elem.valuerep.rst", "reference/elem.values.rst", "reference/encaps.rst", "reference/errors.rst", "reference/examples.rst", "reference/fileio.rst", "reference/fileio.base.rst", "reference/fileio.read.rst", "reference/fileio.util.rst", "reference/fileio.write.rst", "reference/fileset.rst", "reference/generated/pydicom.charset.convert_encodings.rst", "reference/generated/pydicom.charset.decode_bytes.rst", "reference/generated/pydicom.charset.decode_element.rst", "reference/generated/pydicom.charset.encode_string.rst", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS.rst", "reference/generated/pydicom.config.DS_decimal.rst", "reference/generated/pydicom.config.DS_numpy.rst", "reference/generated/pydicom.config.IGNORE.rst", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR.rst", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR.rst", "reference/generated/pydicom.config.RAISE.rst", "reference/generated/pydicom.config.WARN.rst", "reference/generated/pydicom.config.allow_DS_float.rst", "reference/generated/pydicom.config.assume_implicit_vr_switch.rst", "reference/generated/pydicom.config.convert_wrong_length_to_UN.rst", "reference/generated/pydicom.config.data_element_callback.rst", "reference/generated/pydicom.config.data_element_callback_kwargs.rst", "reference/generated/pydicom.config.datetime_conversion.rst", "reference/generated/pydicom.config.debug.rst", "reference/generated/pydicom.config.enforce_valid_values.rst", "reference/generated/pydicom.config.future_behavior.rst", "reference/generated/pydicom.config.pixel_data_handlers.rst", "reference/generated/pydicom.config.reset_data_element_callback.rst", "reference/generated/pydicom.config.settings.rst", "reference/generated/pydicom.config.show_file_meta.rst", "reference/generated/pydicom.config.use_DS_decimal.rst", "reference/generated/pydicom.config.use_DS_numpy.rst", "reference/generated/pydicom.config.use_IS_numpy.rst", "reference/generated/pydicom.data.get_charset_files.rst", "reference/generated/pydicom.data.get_palette_files.rst", "reference/generated/pydicom.data.get_testdata_file.rst", "reference/generated/pydicom.data.get_testdata_files.rst", "reference/generated/pydicom.datadict.add_dict_entries.rst", "reference/generated/pydicom.datadict.add_dict_entry.rst", "reference/generated/pydicom.datadict.add_private_dict_entries.rst", "reference/generated/pydicom.datadict.add_private_dict_entry.rst", "reference/generated/pydicom.datadict.dictionary_VM.rst", "reference/generated/pydicom.datadict.dictionary_VR.rst", "reference/generated/pydicom.datadict.dictionary_description.rst", "reference/generated/pydicom.datadict.dictionary_has_tag.rst", "reference/generated/pydicom.datadict.dictionary_is_retired.rst", "reference/generated/pydicom.datadict.dictionary_keyword.rst", "reference/generated/pydicom.datadict.get_entry.rst", "reference/generated/pydicom.datadict.get_private_entry.rst", "reference/generated/pydicom.datadict.keyword_for_tag.rst", "reference/generated/pydicom.datadict.mask_match.rst", "reference/generated/pydicom.datadict.private_dictionary_VM.rst", "reference/generated/pydicom.datadict.private_dictionary_VR.rst", "reference/generated/pydicom.datadict.private_dictionary_description.rst", "reference/generated/pydicom.datadict.repeater_has_keyword.rst", "reference/generated/pydicom.datadict.repeater_has_tag.rst", "reference/generated/pydicom.datadict.tag_for_keyword.rst", "reference/generated/pydicom.dataelem.DataElement.rst", "reference/generated/pydicom.dataelem.DataElement_from_raw.rst", "reference/generated/pydicom.dataelem.RawDataElement.rst", "reference/generated/pydicom.dataset.Dataset.rst", "reference/generated/pydicom.dataset.FileDataset.rst", "reference/generated/pydicom.dataset.FileMetaDataset.rst", "reference/generated/pydicom.dataset.PrivateBlock.rst", "reference/generated/pydicom.dataset.validate_file_meta.rst", "reference/generated/pydicom.encaps.decode_data_sequence.rst", "reference/generated/pydicom.encaps.defragment_data.rst", "reference/generated/pydicom.encaps.encapsulate.rst", "reference/generated/pydicom.encaps.encapsulate_extended.rst", "reference/generated/pydicom.encaps.fragment_frame.rst", "reference/generated/pydicom.encaps.generate_fragmented_frames.rst", "reference/generated/pydicom.encaps.generate_fragments.rst", "reference/generated/pydicom.encaps.generate_frames.rst", "reference/generated/pydicom.encaps.generate_pixel_data.rst", "reference/generated/pydicom.encaps.generate_pixel_data_fragment.rst", "reference/generated/pydicom.encaps.generate_pixel_data_frame.rst", "reference/generated/pydicom.encaps.get_frame.rst", "reference/generated/pydicom.encaps.get_frame_offsets.rst", "reference/generated/pydicom.encaps.itemize_fragment.rst", "reference/generated/pydicom.encaps.itemize_frame.rst", "reference/generated/pydicom.encaps.parse_basic_offsets.rst", "reference/generated/pydicom.encaps.parse_fragments.rst", "reference/generated/pydicom.encaps.read_item.rst", "reference/generated/pydicom.errors.InvalidDicomError.rst", "reference/generated/pydicom.filebase.DicomBytesIO.rst", "reference/generated/pydicom.filebase.DicomFile.rst", "reference/generated/pydicom.filebase.DicomFileLike.rst", "reference/generated/pydicom.filebase.DicomIO.rst", "reference/generated/pydicom.filereader.data_element_generator.rst", "reference/generated/pydicom.filereader.data_element_offset_to_value.rst", "reference/generated/pydicom.filereader.dcmread.rst", "reference/generated/pydicom.filereader.read_dataset.rst", "reference/generated/pydicom.filereader.read_deferred_data_element.rst", "reference/generated/pydicom.filereader.read_file_meta_info.rst", "reference/generated/pydicom.filereader.read_partial.rst", "reference/generated/pydicom.filereader.read_preamble.rst", "reference/generated/pydicom.filereader.read_sequence.rst", "reference/generated/pydicom.filereader.read_sequence_item.rst", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS.rst", "reference/generated/pydicom.fileset.FileInstance.rst", "reference/generated/pydicom.fileset.FileSet.rst", "reference/generated/pydicom.fileset.RecordNode.rst", "reference/generated/pydicom.fileset.generate_filename.rst", "reference/generated/pydicom.fileset.is_conformant_file_id.rst", "reference/generated/pydicom.fileutil.absorb_delimiter_item.rst", "reference/generated/pydicom.fileutil.find_bytes.rst", "reference/generated/pydicom.fileutil.find_delimiter.rst", "reference/generated/pydicom.fileutil.length_of_undefined_length.rst", "reference/generated/pydicom.fileutil.read_undefined_length_value.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element.rst", "reference/generated/pydicom.filewriter.dcmwrite.rst", "reference/generated/pydicom.filewriter.multi_string.rst", "reference/generated/pydicom.filewriter.write_ATvalue.rst", "reference/generated/pydicom.filewriter.write_DA.rst", "reference/generated/pydicom.filewriter.write_DT.rst", "reference/generated/pydicom.filewriter.write_OBvalue.rst", "reference/generated/pydicom.filewriter.write_OWvalue.rst", "reference/generated/pydicom.filewriter.write_PN.rst", "reference/generated/pydicom.filewriter.write_TM.rst", "reference/generated/pydicom.filewriter.write_UI.rst", "reference/generated/pydicom.filewriter.write_UN.rst", "reference/generated/pydicom.filewriter.write_data_element.rst", "reference/generated/pydicom.filewriter.write_dataset.rst", "reference/generated/pydicom.filewriter.write_file_meta_info.rst", "reference/generated/pydicom.filewriter.write_number_string.rst", "reference/generated/pydicom.filewriter.write_numbers.rst", "reference/generated/pydicom.filewriter.write_sequence.rst", "reference/generated/pydicom.filewriter.write_sequence_item.rst", "reference/generated/pydicom.filewriter.write_string.rst", "reference/generated/pydicom.filewriter.write_text.rst", "reference/generated/pydicom.misc.is_dicom.rst", "reference/generated/pydicom.misc.size_in_bytes.rst", "reference/generated/pydicom.multival.MultiValue.rst", "reference/generated/pydicom.overlays.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler.rst", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler.rst", "reference/generated/pydicom.pixel_data_handlers.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pillow_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler.rst", "reference/generated/pydicom.pixel_data_handlers.rle_handler.rst", "reference/generated/pydicom.pixels.apply_color_lut.rst", "reference/generated/pydicom.pixels.apply_modality_lut.rst", "reference/generated/pydicom.pixels.apply_voi.rst", "reference/generated/pydicom.pixels.apply_voi_lut.rst", "reference/generated/pydicom.pixels.apply_windowing.rst", "reference/generated/pydicom.pixels.as_pixel_options.rst", "reference/generated/pydicom.pixels.convert_color_space.rst", "reference/generated/pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.ExplicitVRBigEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder.rst", "reference/generated/pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEG2000Decoder.rst", "reference/generated/pydicom.pixels.decoders.JPEG2000LosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGBaseline8BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGExtended12BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLSLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLSNearLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLosslessSV1Decoder.rst", "reference/generated/pydicom.pixels.decoders.RLELosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner.rst", "reference/generated/pydicom.pixels.decoders.base.Decoder.rst", "reference/generated/pydicom.pixels.encoders.JPEG2000Encoder.rst", "reference/generated/pydicom.pixels.encoders.JPEG2000LosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.JPEGLSLosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.JPEGLSNearLosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.RLELosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.base.EncodeRunner.rst", "reference/generated/pydicom.pixels.encoders.base.Encoder.rst", "reference/generated/pydicom.pixels.get_decoder.rst", "reference/generated/pydicom.pixels.get_encoder.rst", "reference/generated/pydicom.pixels.iter_pixels.rst", "reference/generated/pydicom.pixels.pack_bits.rst", "reference/generated/pydicom.pixels.pixel_array.rst", "reference/generated/pydicom.pixels.processing.apply_color_lut.rst", "reference/generated/pydicom.pixels.processing.apply_modality_lut.rst", "reference/generated/pydicom.pixels.processing.apply_rescale.rst", "reference/generated/pydicom.pixels.processing.apply_voi.rst", "reference/generated/pydicom.pixels.processing.apply_voi_lut.rst", "reference/generated/pydicom.pixels.processing.apply_windowing.rst", "reference/generated/pydicom.pixels.processing.convert_color_space.rst", "reference/generated/pydicom.pixels.unpack_bits.rst", "reference/generated/pydicom.pixels.utils.as_pixel_options.rst", "reference/generated/pydicom.pixels.utils.expand_ybr422.rst", "reference/generated/pydicom.pixels.utils.get_expected_length.rst", "reference/generated/pydicom.pixels.utils.get_image_pixel_ids.rst", "reference/generated/pydicom.pixels.utils.get_j2k_parameters.rst", "reference/generated/pydicom.pixels.utils.get_nr_frames.rst", "reference/generated/pydicom.pixels.utils.iter_pixels.rst", "reference/generated/pydicom.pixels.utils.pack_bits.rst", "reference/generated/pydicom.pixels.utils.pixel_array.rst", "reference/generated/pydicom.pixels.utils.pixel_dtype.rst", "reference/generated/pydicom.pixels.utils.reshape_pixel_array.rst", "reference/generated/pydicom.pixels.utils.unpack_bits.rst", "reference/generated/pydicom.sequence.Sequence.rst", "reference/generated/pydicom.tag.BaseTag.rst", "reference/generated/pydicom.tag.Tag.rst", "reference/generated/pydicom.tag.TupleTag.rst", "reference/generated/pydicom.tag.tag_in_exception.rst", "reference/generated/pydicom.uid.AcquisitionContextSRStorage.rst", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pydicom.uid.AllTransferSyntaxes.rst", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage.rst", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage.rst", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage.rst", "reference/generated/pydicom.uid.BasicTextSRStorage.rst", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.BodyPositionWaveformStorage.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CTImageStorage.rst", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pydicom.uid.ChestCADSRStorage.rst", "reference/generated/pydicom.uid.ColonCADSRStorage.rst", "reference/generated/pydicom.uid.ColorPaletteStorage.rst", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.Comprehensive3DSRStorage.rst", "reference/generated/pydicom.uid.ComprehensiveSRStorage.rst", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage.rst", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage.rst", "reference/generated/pydicom.uid.CornealTopographyMapStorage.rst", "reference/generated/pydicom.uid.DICOS2DAITStorage.rst", "reference/generated/pydicom.uid.DICOS3DAITStorage.rst", "reference/generated/pydicom.uid.DICOSCTImageStorage.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage.rst", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage.rst", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.EddyCurrentImageStorage.rst", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage.rst", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage.rst", "reference/generated/pydicom.uid.EncapsulatedCDAStorage.rst", "reference/generated/pydicom.uid.EncapsulatedMTLStorage.rst", "reference/generated/pydicom.uid.EncapsulatedOBJStorage.rst", "reference/generated/pydicom.uid.EncapsulatedPDFStorage.rst", "reference/generated/pydicom.uid.EncapsulatedSTLStorage.rst", "reference/generated/pydicom.uid.EnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.EnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.EnhancedRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedSRStorage.rst", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage.rst", "reference/generated/pydicom.uid.EnhancedXAImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRFImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.ExplicitVRBigEndian.rst", "reference/generated/pydicom.uid.ExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.ExtensibleSRStorage.rst", "reference/generated/pydicom.uid.General32bitECGWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralECGWaveformStorage.rst", "reference/generated/pydicom.uid.GenericImplantTemplateStorage.rst", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.HEVCM10P51.rst", "reference/generated/pydicom.uid.HEVCMP51.rst", "reference/generated/pydicom.uid.HTJ2K.rst", "reference/generated/pydicom.uid.HTJ2KLossless.rst", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL.rst", "reference/generated/pydicom.uid.HangingProtocolStorage.rst", "reference/generated/pydicom.uid.HemodynamicWaveformStorage.rst", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage.rst", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage.rst", "reference/generated/pydicom.uid.ImplantationPlanSRStorage.rst", "reference/generated/pydicom.uid.ImplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pydicom.uid.InventoryStorage.rst", "reference/generated/pydicom.uid.JPEG2000.rst", "reference/generated/pydicom.uid.JPEG2000Lossless.rst", "reference/generated/pydicom.uid.JPEG2000MC.rst", "reference/generated/pydicom.uid.JPEG2000MCLossless.rst", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGBaseline8Bit.rst", "reference/generated/pydicom.uid.JPEGExtended12Bit.rst", "reference/generated/pydicom.uid.JPEGLSLossless.rst", "reference/generated/pydicom.uid.JPEGLSNearLossless.rst", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGLossless.rst", "reference/generated/pydicom.uid.JPEGLosslessSV1.rst", "reference/generated/pydicom.uid.JPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate.rst", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.LensometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.MPEG2MPHL.rst", "reference/generated/pydicom.uid.MPEG2MPHLF.rst", "reference/generated/pydicom.uid.MPEG2MPML.rst", "reference/generated/pydicom.uid.MPEG2MPMLF.rst", "reference/generated/pydicom.uid.MPEG4HP41.rst", "reference/generated/pydicom.uid.MPEG4HP41BD.rst", "reference/generated/pydicom.uid.MPEG4HP41BDF.rst", "reference/generated/pydicom.uid.MPEG4HP41F.rst", "reference/generated/pydicom.uid.MPEG4HP422D.rst", "reference/generated/pydicom.uid.MPEG4HP422DF.rst", "reference/generated/pydicom.uid.MPEG4HP423D.rst", "reference/generated/pydicom.uid.MPEG4HP423DF.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREO.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREOF.rst", "reference/generated/pydicom.uid.MPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.MRImageStorage.rst", "reference/generated/pydicom.uid.MRSpectroscopyStorage.rst", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pydicom.uid.MammographyCADSRStorage.rst", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage.rst", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.NuclearMedicineImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage.rst", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID.rst", "reference/generated/pydicom.uid.ParametricMapStorage.rst", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PhotoacousticImageStorage.rst", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage.rst", "reference/generated/pydicom.uid.PrivateTransferSyntaxes.rst", "reference/generated/pydicom.uid.ProcedureLogStorage.rst", "reference/generated/pydicom.uid.ProtocolApprovalStorage.rst", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.RE_VALID_UID.rst", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX.rst", "reference/generated/pydicom.uid.RLELossless.rst", "reference/generated/pydicom.uid.RLETransferSyntaxes.rst", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTDoseStorage.rst", "reference/generated/pydicom.uid.RTImageStorage.rst", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTIonPlanStorage.rst", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage.rst", "reference/generated/pydicom.uid.RTPhysicianIntentStorage.rst", "reference/generated/pydicom.uid.RTPlanStorage.rst", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage.rst", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetStorage.rst", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage.rst", "reference/generated/pydicom.uid.RTStructureSetStorage.rst", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage.rst", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.RawDataStorage.rst", "reference/generated/pydicom.uid.RealWorldValueMappingStorage.rst", "reference/generated/pydicom.uid.RespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.RoboticArmRadiationStorage.rst", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio.rst", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.SegmentationStorage.rst", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SpatialFiducialsStorage.rst", "reference/generated/pydicom.uid.SpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage.rst", "reference/generated/pydicom.uid.StereometricRelationshipStorage.rst", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.SurfaceScanMeshStorage.rst", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage.rst", "reference/generated/pydicom.uid.SurfaceSegmentationStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage.rst", "reference/generated/pydicom.uid.TractographyResultsStorage.rst", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage.rst", "reference/generated/pydicom.uid.UID.rst", "reference/generated/pydicom.uid.UltrasoundImageStorage.rst", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes.rst", "reference/generated/pydicom.uid.VLEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VLMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage.rst", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage.rst", "reference/generated/pydicom.uid.XRayAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pydicom.uid.generate_uid.rst", "reference/generated/pydicom.uid.register_transfer_syntax.rst", "reference/generated/pydicom.valuerep.DA.rst", "reference/generated/pydicom.valuerep.DS.rst", "reference/generated/pydicom.valuerep.DSdecimal.rst", "reference/generated/pydicom.valuerep.DSfloat.rst", "reference/generated/pydicom.valuerep.DT.rst", "reference/generated/pydicom.valuerep.IS.rst", "reference/generated/pydicom.valuerep.ISfloat.rst", "reference/generated/pydicom.valuerep.PersonName.rst", "reference/generated/pydicom.valuerep.TM.rst", "reference/generated/pydicom.valuerep.VR.rst", "reference/generated/pydicom.valuerep.format_number_as_ds.rst", "reference/generated/pydicom.valuerep.is_valid_ds.rst", "reference/generated/pydicom.values.convert_AE_string.rst", "reference/generated/pydicom.values.convert_ATvalue.rst", "reference/generated/pydicom.values.convert_DA_string.rst", "reference/generated/pydicom.values.convert_DS_string.rst", "reference/generated/pydicom.values.convert_DT_string.rst", "reference/generated/pydicom.values.convert_IS_string.rst", "reference/generated/pydicom.values.convert_OBvalue.rst", "reference/generated/pydicom.values.convert_OWvalue.rst", "reference/generated/pydicom.values.convert_PN.rst", "reference/generated/pydicom.values.convert_SQ.rst", "reference/generated/pydicom.values.convert_TM_string.rst", "reference/generated/pydicom.values.convert_UI.rst", "reference/generated/pydicom.values.convert_UN.rst", "reference/generated/pydicom.values.convert_UR_string.rst", "reference/generated/pydicom.values.convert_numbers.rst", "reference/generated/pydicom.values.convert_single_string.rst", "reference/generated/pydicom.values.convert_string.rst", "reference/generated/pydicom.values.convert_tag.rst", "reference/generated/pydicom.values.convert_text.rst", "reference/generated/pydicom.values.convert_value.rst", "reference/generated/pydicom.values.multi_string.rst", "reference/generated/pydicom.waveforms.numpy_handler.rst", "reference/handlers.rst", "reference/handlers.pixel_data.rst", "reference/index.rst", "reference/misc.rst", "reference/overlays.rst", "reference/pixels.rst", "reference/pixels.decoders.rst", "reference/pixels.encoders.rst", "reference/pixels.processing.rst", "reference/pixels.utils.rst", "reference/uid.rst", "reference/waveforms.rst", "release_notes/index.rst", "release_notes/v0.9.2.rst", "release_notes/v0.9.3.rst", "release_notes/v0.9.4.rst", "release_notes/v0.9.5.rst", "release_notes/v0.9.6.rst", "release_notes/v0.9.7.rst", "release_notes/v0.9.8.rst", "release_notes/v0.9.9.rst", "release_notes/v1.0.0.rst", "release_notes/v1.1.0.rst", "release_notes/v1.2.0.rst", "release_notes/v1.3.0.rst", "release_notes/v1.4.0.rst", "release_notes/v1.4.1.rst", "release_notes/v2.0.0.rst", "release_notes/v2.1.0.rst", "release_notes/v2.1.1.rst", "release_notes/v2.2.0.rst", "release_notes/v2.3.0.rst", "release_notes/v2.4.0.rst", "release_notes/v3.0.0.rst", "sg_execution_times.rst", "tutorials/contributing.rst", "tutorials/contributing_code.rst", "tutorials/contributing_docs.rst", "tutorials/dataset_basics.rst", "tutorials/dicom_json.rst", "tutorials/filesets.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/pixel_data/compressing.rst", "tutorials/sr_basics.rst", "tutorials/waveforms.rst"], "indexentries": {"__init__() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.__init__", false]], "__init__() (pydicom.dataelem.rawdataelement method)": [[131, "pydicom.dataelem.RawDataElement.__init__", false]], "__init__() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.__init__", false]], "__init__() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.__init__", false]], "__init__() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.__init__", false]], "__init__() (pydicom.dataset.privateblock method)": [[135, "pydicom.dataset.PrivateBlock.__init__", false]], "__init__() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.__init__", false]], "__init__() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.__init__", false]], "__init__() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.__init__", false]], "__init__() (pydicom.fileset.fileinstance method)": [[171, "pydicom.fileset.FileInstance.__init__", false]], "__init__() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.__init__", false]], "__init__() (pydicom.fileset.recordnode method)": [[173, "pydicom.fileset.RecordNode.__init__", false]], "__init__() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.__init__", false]], "__init__() (pydicom.pixels.decoders.base.decoder method)": [[237, "pydicom.pixels.decoders.base.Decoder.__init__", false]], "__init__() (pydicom.pixels.decoders.base.decoderunner method)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.__init__", false]], "__init__() (pydicom.pixels.encoders.base.encoder method)": [[244, "pydicom.pixels.encoders.base.Encoder.__init__", false]], "__init__() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.__init__", false]], "__init__() (pydicom.sequence.sequence method)": [[270, "pydicom.sequence.Sequence.__init__", false]], "__init__() (pydicom.tag.basetag method)": [[271, "pydicom.tag.BaseTag.__init__", false]], "__init__() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.__init__", false]], "__init__() (pydicom.valuerep.da method)": [[513, "pydicom.valuerep.DA.__init__", false]], "__init__() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.__init__", false]], "__init__() (pydicom.valuerep.dsfloat method)": [[516, "pydicom.valuerep.DSfloat.__init__", false]], "__init__() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.__init__", false]], "__init__() (pydicom.valuerep.is method)": [[518, "pydicom.valuerep.IS.__init__", false]], "__init__() (pydicom.valuerep.isfloat method)": [[519, "pydicom.valuerep.ISfloat.__init__", false]], "__init__() (pydicom.valuerep.personname method)": [[520, "pydicom.valuerep.PersonName.__init__", false]], "__init__() (pydicom.valuerep.tm method)": [[521, "pydicom.valuerep.TM.__init__", false]], "__init__() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.__init__", false]], "absorb_delimiter_item() (in module pydicom.fileutil)": [[176, "pydicom.fileutil.absorb_delimiter_item", false]], "acquisitioncontextsrstorage (in module pydicom.uid)": [[275, "pydicom.uid.AcquisitionContextSRStorage", false]], "add() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.add", false]], "add() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.add", false]], "add() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.add", false]], "add() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.add", false]], "add() (pydicom.fileset.recordnode method)": [[173, "pydicom.fileset.RecordNode.add", false]], "add_custom() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.add_custom", false]], "add_dict_entries() (in module pydicom.datadict)": [[109, "pydicom.datadict.add_dict_entries", false]], "add_dict_entry() (in module pydicom.datadict)": [[110, "pydicom.datadict.add_dict_entry", false]], "add_new() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.add_new", false]], "add_new() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.add_new", false]], "add_new() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.add_new", false]], "add_new() (pydicom.dataset.privateblock method)": [[135, "pydicom.dataset.PrivateBlock.add_new", false]], "add_new_private() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.add_new_private", false]], "add_new_private() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.add_new_private", false]], "add_new_private() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.add_new_private", false]], "add_plugin() (pydicom.pixels.decoders.base.decoder method)": [[237, "pydicom.pixels.decoders.base.Decoder.add_plugin", false]], "add_plugin() (pydicom.pixels.encoders.base.encoder method)": [[244, "pydicom.pixels.encoders.base.Encoder.add_plugin", false]], "add_plugins() (pydicom.pixels.decoders.base.decoder method)": [[237, "pydicom.pixels.decoders.base.Decoder.add_plugins", false]], "add_plugins() (pydicom.pixels.encoders.base.encoder method)": [[244, "pydicom.pixels.encoders.base.Encoder.add_plugins", false]], "add_private_dict_entries() (in module pydicom.datadict)": [[111, "pydicom.datadict.add_private_dict_entries", false]], "add_private_dict_entry() (in module pydicom.datadict)": [[112, "pydicom.datadict.add_private_dict_entry", false]], "adjusted() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.adjusted", false]], "advancedblendingpresentationstatestorage (in module pydicom.uid)": [[276, "pydicom.uid.AdvancedBlendingPresentationStateStorage", false]], "allow_ds_float (in module pydicom.config)": [[89, "pydicom.config.allow_DS_float", false]], "alltransfersyntaxes (in module pydicom.uid)": [[277, "pydicom.uid.AllTransferSyntaxes", false]], "alphabetic (pydicom.valuerep.personname property)": [[520, "pydicom.valuerep.PersonName.alphabetic", false]], "ambulatoryecgwaveformstorage (in module pydicom.uid)": [[278, "pydicom.uid.AmbulatoryECGWaveformStorage", false]], "ancestors (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.ancestors", false]], "append() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.append", false]], "append() (pydicom.sequence.sequence method)": [[270, "pydicom.sequence.Sequence.append", false]], "apply_color_lut() (in module pydicom.pixels)": [[213, "pydicom.pixels.apply_color_lut", false]], "apply_color_lut() (in module pydicom.pixels.processing)": [[250, "pydicom.pixels.processing.apply_color_lut", false]], "apply_j2k_corrections (in module pydicom.config)": [[81, "pydicom.config.APPLY_J2K_CORRECTIONS", false]], "apply_modality_lut() (in module pydicom.pixels)": [[214, "pydicom.pixels.apply_modality_lut", false]], "apply_modality_lut() (in module pydicom.pixels.processing)": [[251, "pydicom.pixels.processing.apply_modality_lut", false]], "apply_rescale() (in module pydicom.pixels.processing)": [[252, "pydicom.pixels.processing.apply_rescale", false]], "apply_voi() (in module pydicom.pixels)": [[215, "pydicom.pixels.apply_voi", false]], "apply_voi() (in module pydicom.pixels.processing)": [[253, "pydicom.pixels.processing.apply_voi", false]], "apply_voi_lut() (in module pydicom.pixels)": [[216, "pydicom.pixels.apply_voi_lut", false]], "apply_voi_lut() (in module pydicom.pixels.processing)": [[254, "pydicom.pixels.processing.apply_voi_lut", false]], "apply_windowing() (in module pydicom.pixels)": [[217, "pydicom.pixels.apply_windowing", false]], "apply_windowing() (in module pydicom.pixels.processing)": [[255, "pydicom.pixels.processing.apply_windowing", false]], "arterialpulsewaveformstorage (in module pydicom.uid)": [[279, "pydicom.uid.ArterialPulseWaveformStorage", false]], "as_array() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.as_array", false]], "as_array() (pydicom.pixels.decoders.base.decoder method)": [[237, "pydicom.pixels.decoders.base.Decoder.as_array", false]], "as_buffer() (pydicom.pixels.decoders.base.decoder method)": [[237, "pydicom.pixels.decoders.base.Decoder.as_buffer", false]], "as_integer_ratio() (pydicom.tag.basetag method)": [[271, "pydicom.tag.BaseTag.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.dsfloat method)": [[516, "pydicom.valuerep.DSfloat.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.is method)": [[518, "pydicom.valuerep.IS.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.isfloat method)": [[519, "pydicom.valuerep.ISfloat.as_integer_ratio", false]], "as_pixel_options() (in module pydicom.pixels)": [[218, "pydicom.pixels.as_pixel_options", false]], "as_pixel_options() (in module pydicom.pixels.utils)": [[258, "pydicom.pixels.utils.as_pixel_options", false]], "as_tuple() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.as_tuple", false]], "assume_implicit_vr_switch (in module pydicom.config)": [[90, "pydicom.config.assume_implicit_vr_switch", false]], "astimezone() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.astimezone", false]], "autorefractionmeasurementsstorage (in module pydicom.uid)": [[280, "pydicom.uid.AutorefractionMeasurementsStorage", false]], "basetag (class in pydicom.tag)": [[271, "pydicom.tag.BaseTag", false]], "basicstructureddisplaystorage (in module pydicom.uid)": [[281, "pydicom.uid.BasicStructuredDisplayStorage", false]], "basictextsrstorage (in module pydicom.uid)": [[282, "pydicom.uid.BasicTextSRStorage", false]], "basicvoiceaudiowaveformstorage (in module pydicom.uid)": [[283, "pydicom.uid.BasicVoiceAudioWaveformStorage", false]], "bit_count() (pydicom.tag.basetag method)": [[271, "pydicom.tag.BaseTag.bit_count", false]], "bit_count() (pydicom.valuerep.is method)": [[518, "pydicom.valuerep.IS.bit_count", false]], "bit_length() (pydicom.tag.basetag method)": [[271, "pydicom.tag.BaseTag.bit_length", false]], "bit_length() (pydicom.valuerep.is method)": [[518, "pydicom.valuerep.IS.bit_length", false]], "bits_allocated (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.bits_allocated", false]], "bits_allocated (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.bits_allocated", false]], "bits_stored (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.bits_stored", false]], "bits_stored (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.bits_stored", false]], "blendingsoftcopypresentationstatestorage (in module pydicom.uid)": [[284, "pydicom.uid.BlendingSoftcopyPresentationStateStorage", false]], "block_start (pydicom.dataset.privateblock attribute)": [[135, "pydicom.dataset.PrivateBlock.block_start", false]], "bodypositionwaveformstorage (in module pydicom.uid)": [[285, "pydicom.uid.BodyPositionWaveformStorage", false]], "breastprojectionxrayimagestorageforpresentation (in module pydicom.uid)": [[286, "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", false]], "breastprojectionxrayimagestorageforprocessing (in module pydicom.uid)": [[287, "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", false]], "breasttomosynthesisimagestorage (in module pydicom.uid)": [[288, "pydicom.uid.BreastTomosynthesisImageStorage", false]], "canonical() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.canonical", false]], "capitalize() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.capitalize", false]], "capitalize() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.capitalize", false]], "cardiacelectrophysiologywaveformstorage (in module pydicom.uid)": [[294, "pydicom.uid.CardiacElectrophysiologyWaveformStorage", false]], "carmphotonelectronradiationrecordstorage (in module pydicom.uid)": [[289, "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", false]], "carmphotonelectronradiationstorage (in module pydicom.uid)": [[290, "pydicom.uid.CArmPhotonElectronRadiationStorage", false]], "casefold() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.casefold", false]], "casefold() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.casefold", false]], "center() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.center", false]], "center() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.center", false]], "chestcadsrstorage (in module pydicom.uid)": [[295, "pydicom.uid.ChestCADSRStorage", false]], "children (pydicom.fileset.recordnode attribute)": [[173, "pydicom.fileset.RecordNode.children", false]], "clear() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.clear", false]], "clear() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.clear", false]], "clear() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.clear", false]], "clear() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.clear", false]], "clear() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.clear", false]], "clear() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.clear", false]], "clear() (pydicom.sequence.sequence method)": [[270, "pydicom.sequence.Sequence.clear", false]], "close() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.close", false]], "close() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.close", false]], "close() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.close", false]], "coloncadsrstorage (in module pydicom.uid)": [[296, "pydicom.uid.ColonCADSRStorage", false]], "colorpalettestorage (in module pydicom.uid)": [[297, "pydicom.uid.ColorPaletteStorage", false]], "colorsoftcopypresentationstatestorage (in module pydicom.uid)": [[298, "pydicom.uid.ColorSoftcopyPresentationStateStorage", false]], "columns (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.columns", false]], "columns (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.columns", false]], "combine() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.combine", false]], "compare() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.compare", false]], "compare_signal() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.compare_signal", false]], "compare_total() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.compare_total", false]], "compare_total_mag() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.compare_total_mag", false]], "component (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.component", false]], "components (pydicom.valuerep.personname property)": [[520, "pydicom.valuerep.PersonName.components", false]], "compositingplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[299, "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", false]], "comprehensive3dsrstorage (in module pydicom.uid)": [[300, "pydicom.uid.Comprehensive3DSRStorage", false]], "comprehensivesrstorage (in module pydicom.uid)": [[301, "pydicom.uid.ComprehensiveSRStorage", false]], "compress() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.compress", false]], "compress() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.compress", false]], "compress() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.compress", false]], "computedradiographyimagestorage (in module pydicom.uid)": [[302, "pydicom.uid.ComputedRadiographyImageStorage", false]], "confocalmicroscopyimagestorage (in module pydicom.uid)": [[303, "pydicom.uid.ConfocalMicroscopyImageStorage", false]], "confocalmicroscopytiledpyramidalimagestorage (in module pydicom.uid)": [[304, "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", false]], "conjugate() (pydicom.tag.basetag method)": [[271, "pydicom.tag.BaseTag.conjugate", false]], "conjugate() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.conjugate", false]], "conjugate() (pydicom.valuerep.dsfloat method)": [[516, "pydicom.valuerep.DSfloat.conjugate", false]], "conjugate() (pydicom.valuerep.is method)": [[518, "pydicom.valuerep.IS.conjugate", false]], "conjugate() (pydicom.valuerep.isfloat method)": [[519, "pydicom.valuerep.ISfloat.conjugate", false]], "contentassessmentresultsstorage (in module pydicom.uid)": [[305, "pydicom.uid.ContentAssessmentResultsStorage", false]], "convert_ae_string() (in module pydicom.values)": [[525, "pydicom.values.convert_AE_string", false]], "convert_atvalue() (in module pydicom.values)": [[526, "pydicom.values.convert_ATvalue", false]], "convert_color_space() (in module pydicom.pixels)": [[219, "pydicom.pixels.convert_color_space", false]], "convert_color_space() (in module pydicom.pixels.processing)": [[256, "pydicom.pixels.processing.convert_color_space", false]], "convert_da_string() (in module pydicom.values)": [[527, "pydicom.values.convert_DA_string", false]], "convert_ds_string() (in module pydicom.values)": [[528, "pydicom.values.convert_DS_string", false]], "convert_dt_string() (in module pydicom.values)": [[529, "pydicom.values.convert_DT_string", false]], "convert_encodings() (in module pydicom.charset)": [[77, "pydicom.charset.convert_encodings", false]], "convert_is_string() (in module pydicom.values)": [[530, "pydicom.values.convert_IS_string", false]], "convert_numbers() (in module pydicom.values)": [[539, "pydicom.values.convert_numbers", false]], "convert_obvalue() (in module pydicom.values)": [[531, "pydicom.values.convert_OBvalue", false]], "convert_owvalue() (in module pydicom.values)": [[532, "pydicom.values.convert_OWvalue", false]], "convert_pixel_data() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.convert_pixel_data", false]], "convert_pixel_data() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.convert_pixel_data", false]], "convert_pixel_data() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.convert_pixel_data", false]], "convert_pn() (in module pydicom.values)": [[533, "pydicom.values.convert_PN", false]], "convert_single_string() (in module pydicom.values)": [[540, "pydicom.values.convert_single_string", false]], "convert_sq() (in module pydicom.values)": [[534, "pydicom.values.convert_SQ", false]], "convert_string() (in module pydicom.values)": [[541, "pydicom.values.convert_string", false]], "convert_tag() (in module pydicom.values)": [[542, "pydicom.values.convert_tag", false]], "convert_text() (in module pydicom.values)": [[543, "pydicom.values.convert_text", false]], "convert_tm_string() (in module pydicom.values)": [[535, "pydicom.values.convert_TM_string", false]], "convert_ui() (in module pydicom.values)": [[536, "pydicom.values.convert_UI", false]], "convert_un() (in module pydicom.values)": [[537, "pydicom.values.convert_UN", false]], "convert_ur_string() (in module pydicom.values)": [[538, "pydicom.values.convert_UR_string", false]], "convert_value() (in module pydicom.values)": [[544, "pydicom.values.convert_value", false]], "convert_wrong_length_to_un (in module pydicom.config)": [[91, "pydicom.config.convert_wrong_length_to_UN", false]], "copy() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.copy", false]], "copy() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.copy", false]], "copy() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.copy", false]], "copy() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.copy", false]], "copy_abs() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.copy_abs", false]], "copy_negate() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.copy_negate", false]], "copy_sign() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.copy_sign", false]], "cornealtopographymapstorage (in module pydicom.uid)": [[306, "pydicom.uid.CornealTopographyMapStorage", false]], "correct_ambiguous_vr() (in module pydicom.filewriter)": [[181, "pydicom.filewriter.correct_ambiguous_vr", false]], "correct_ambiguous_vr_element() (in module pydicom.filewriter)": [[182, "pydicom.filewriter.correct_ambiguous_vr_element", false]], "count() (pydicom.dataelem.rawdataelement method)": [[131, "pydicom.dataelem.RawDataElement.count", false]], "count() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.count", false]], "count() (pydicom.sequence.sequence method)": [[270, "pydicom.sequence.Sequence.count", false]], "count() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.count", false]], "count() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.count", false]], "create_data_element() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.create_data_element", false]], "create_image() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.create_image", false]], "ctdefinedprocedureprotocolstorage (in module pydicom.uid)": [[291, "pydicom.uid.CTDefinedProcedureProtocolStorage", false]], "ctimagestorage (in module pydicom.uid)": [[292, "pydicom.uid.CTImageStorage", false]], "ctime() (pydicom.valuerep.da method)": [[513, "pydicom.valuerep.DA.ctime", false]], "ctime() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.ctime", false]], "ctperformedprocedureprotocolstorage (in module pydicom.uid)": [[293, "pydicom.uid.CTPerformedProcedureProtocolStorage", false]], "da (class in pydicom.valuerep)": [[513, "pydicom.valuerep.DA", false]], "data_element() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.data_element", false]], "data_element() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.data_element", false]], "data_element() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.data_element", false]], "data_element_callback (in module pydicom.config)": [[92, "pydicom.config.data_element_callback", false]], "data_element_callback_kwargs (in module pydicom.config)": [[93, "pydicom.config.data_element_callback_kwargs", false]], "data_element_generator() (in module pydicom.filereader)": [[160, "pydicom.filereader.data_element_generator", false]], "data_element_offset_to_value() (in module pydicom.filereader)": [[161, "pydicom.filereader.data_element_offset_to_value", false]], "dataelement (class in pydicom.dataelem)": [[129, "pydicom.dataelem.DataElement", false]], "dataelement_from_raw() (in module pydicom.dataelem)": [[130, "pydicom.dataelem.DataElement_from_raw", false]], "dataset (class in pydicom.dataset)": [[132, "pydicom.dataset.Dataset", false]], "dataset (pydicom.dataset.privateblock attribute)": [[135, "pydicom.dataset.PrivateBlock.dataset", false]], "date() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.date", false]], "datetime_conversion (in module pydicom.config)": [[94, "pydicom.config.datetime_conversion", false]], "dcmread() (in module pydicom.filereader)": [[162, "pydicom.filereader.dcmread", false]], "dcmwrite() (in module pydicom.filewriter)": [[183, "pydicom.filewriter.dcmwrite", false]], "debug() (in module pydicom.config)": [[95, "pydicom.config.debug", false]], "decode() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.decode", false]], "decode() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.decode", false]], "decode() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.decode", false]], "decode() (pydicom.pixels.decoders.base.decoderunner method)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.decode", false]], "decode() (pydicom.valuerep.personname method)": [[520, "pydicom.valuerep.PersonName.decode", false]], "decode_bytes() (in module pydicom.charset)": [[78, "pydicom.charset.decode_bytes", false]], "decode_data_sequence() (in module pydicom.encaps)": [[137, "pydicom.encaps.decode_data_sequence", false]], "decode_element() (in module pydicom.charset)": [[79, "pydicom.charset.decode_element", false]], "decoder (class in pydicom.pixels.decoders.base)": [[237, "pydicom.pixels.decoders.base.Decoder", false]], "decoderunner (class in pydicom.pixels.decoders.base)": [[236, "pydicom.pixels.decoders.base.DecodeRunner", false]], "decompress() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.decompress", false]], "decompress() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.decompress", false]], "decompress() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.decompress", false]], "default_element_format (pydicom.dataset.dataset attribute)": [[132, "pydicom.dataset.Dataset.default_element_format", false]], "default_sequence_element_format (pydicom.dataset.dataset attribute)": [[132, "pydicom.dataset.Dataset.default_sequence_element_format", false]], "deflatedexplicitvrlittleendian (in module pydicom.uid)": [[314, "pydicom.uid.DeflatedExplicitVRLittleEndian", false]], "deflatedexplicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[220, "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", false]], "deformablespatialregistrationstorage (in module pydicom.uid)": [[315, "pydicom.uid.DeformableSpatialRegistrationStorage", false]], "defragment_data() (in module pydicom.encaps)": [[138, "pydicom.encaps.defragment_data", false]], "del_option() (pydicom.pixels.decoders.base.decoderunner method)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.del_option", false]], "del_option() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.del_option", false]], "denominator (pydicom.tag.basetag attribute)": [[271, "pydicom.tag.BaseTag.denominator", false]], "denominator (pydicom.valuerep.is attribute)": [[518, "pydicom.valuerep.IS.denominator", false]], "depth (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.depth", false]], "dermoscopicphotographyimagestorage (in module pydicom.uid)": [[316, "pydicom.uid.DermoscopicPhotographyImageStorage", false]], "descriptor_character_set (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.descriptor_character_set", false]], "descriptor_file_id (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.descriptor_file_id", false]], "descripwidth (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.descripWidth", false]], "dicombytesio (class in pydicom.filebase)": [[156, "pydicom.filebase.DicomBytesIO", false]], "dicomfile() (in module pydicom.filebase)": [[157, "pydicom.filebase.DicomFile", false]], "dicomfilelike (class in pydicom.filebase)": [[158, "pydicom.filebase.DicomFileLike", false]], "dicomio (class in pydicom.filebase)": [[159, "pydicom.filebase.DicomIO", false]], "dicos2daitstorage (in module pydicom.uid)": [[307, "pydicom.uid.DICOS2DAITStorage", false]], "dicos3daitstorage (in module pydicom.uid)": [[308, "pydicom.uid.DICOS3DAITStorage", false]], "dicosctimagestorage (in module pydicom.uid)": [[309, "pydicom.uid.DICOSCTImageStorage", false]], "dicosdigitalxrayimagestorageforpresentation (in module pydicom.uid)": [[310, "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", false]], "dicosdigitalxrayimagestorageforprocessing (in module pydicom.uid)": [[311, "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", false]], "dicosquadrupoleresonancestorage (in module pydicom.uid)": [[312, "pydicom.uid.DICOSQuadrupoleResonanceStorage", false]], "dicosthreatdetectionreportstorage (in module pydicom.uid)": [[313, "pydicom.uid.DICOSThreatDetectionReportStorage", false]], "dictionary_description() (in module pydicom.datadict)": [[115, "pydicom.datadict.dictionary_description", false]], "dictionary_has_tag() (in module pydicom.datadict)": [[116, "pydicom.datadict.dictionary_has_tag", false]], "dictionary_is_retired() (in module pydicom.datadict)": [[117, "pydicom.datadict.dictionary_is_retired", false]], "dictionary_keyword() (in module pydicom.datadict)": [[118, "pydicom.datadict.dictionary_keyword", false]], "dictionary_vm() (in module pydicom.datadict)": [[113, "pydicom.datadict.dictionary_VM", false]], "dictionary_vr() (in module pydicom.datadict)": [[114, "pydicom.datadict.dictionary_VR", false]], "digitalintraoralxrayimagestorageforpresentation (in module pydicom.uid)": [[317, "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", false]], "digitalintraoralxrayimagestorageforprocessing (in module pydicom.uid)": [[318, "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", false]], "digitalmammographyxrayimagestorageforpresentation (in module pydicom.uid)": [[319, "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", false]], "digitalmammographyxrayimagestorageforprocessing (in module pydicom.uid)": [[320, "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", false]], "digitalxrayimagestorageforpresentation (in module pydicom.uid)": [[321, "pydicom.uid.DigitalXRayImageStorageForPresentation", false]], "digitalxrayimagestorageforprocessing (in module pydicom.uid)": [[322, "pydicom.uid.DigitalXRayImageStorageForProcessing", false]], "dir() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.dir", false]], "dir() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.dir", false]], "dir() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.dir", false]], "directory_recorders (in module pydicom.fileset)": [[170, "pydicom.fileset.DIRECTORY_RECORDERS", false]], "ds() (in module pydicom.valuerep)": [[514, "pydicom.valuerep.DS", false]], "ds_decimal() (in module pydicom.config)": [[82, "pydicom.config.DS_decimal", false]], "ds_numpy() (in module pydicom.config)": [[83, "pydicom.config.DS_numpy", false]], "dsdecimal (class in pydicom.valuerep)": [[515, "pydicom.valuerep.DSdecimal", false]], "dsfloat (class in pydicom.valuerep)": [[516, "pydicom.valuerep.DSfloat", false]], "dst() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.dst", false]], "dst() (pydicom.valuerep.tm method)": [[521, "pydicom.valuerep.TM.dst", false]], "dt (class in pydicom.valuerep)": [[517, "pydicom.valuerep.DT", false]], "eddycurrentimagestorage (in module pydicom.uid)": [[323, "pydicom.uid.EddyCurrentImageStorage", false]], "eddycurrentmultiframeimagestorage (in module pydicom.uid)": [[324, "pydicom.uid.EddyCurrentMultiFrameImageStorage", false]], "electromyogramwaveformstorage (in module pydicom.uid)": [[325, "pydicom.uid.ElectromyogramWaveformStorage", false]], "electrooculogramwaveformstorage (in module pydicom.uid)": [[326, "pydicom.uid.ElectrooculogramWaveformStorage", false]], "elem (pydicom.tag.basetag property)": [[271, "pydicom.tag.BaseTag.elem", false]], "element (pydicom.tag.basetag property)": [[271, "pydicom.tag.BaseTag.element", false]], "elements() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.elements", false]], "elements() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.elements", false]], "elements() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.elements", false]], "empty_value (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.empty_value", false]], "encapsulate() (in module pydicom.encaps)": [[139, "pydicom.encaps.encapsulate", false]], "encapsulate_extended() (in module pydicom.encaps)": [[140, "pydicom.encaps.encapsulate_extended", false]], "encapsulatedcdastorage (in module pydicom.uid)": [[327, "pydicom.uid.EncapsulatedCDAStorage", false]], "encapsulatedmtlstorage (in module pydicom.uid)": [[328, "pydicom.uid.EncapsulatedMTLStorage", false]], "encapsulatedobjstorage (in module pydicom.uid)": [[329, "pydicom.uid.EncapsulatedOBJStorage", false]], "encapsulatedpdfstorage (in module pydicom.uid)": [[330, "pydicom.uid.EncapsulatedPDFStorage", false]], "encapsulatedstlstorage (in module pydicom.uid)": [[331, "pydicom.uid.EncapsulatedSTLStorage", false]], "encode() (pydicom.pixels.encoders.base.encoder method)": [[244, "pydicom.pixels.encoders.base.Encoder.encode", false]], "encode() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.encode", false]], "encode() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.encode", false]], "encode() (pydicom.valuerep.personname method)": [[520, "pydicom.valuerep.PersonName.encode", false]], "encode() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.encode", false]], "encode_string() (in module pydicom.charset)": [[80, "pydicom.charset.encode_string", false]], "encoder (class in pydicom.pixels.encoders.base)": [[244, "pydicom.pixels.encoders.base.Encoder", false]], "encoderunner (class in pydicom.pixels.encoders.base)": [[243, "pydicom.pixels.encoders.base.EncodeRunner", false]], "endswith() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.endswith", false]], "endswith() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.endswith", false]], "enforce_valid_values (in module pydicom.config)": [[96, "pydicom.config.enforce_valid_values", false]], "enhancedcontinuousrtimagestorage (in module pydicom.uid)": [[333, "pydicom.uid.EnhancedContinuousRTImageStorage", false]], "enhancedctimagestorage (in module pydicom.uid)": [[332, "pydicom.uid.EnhancedCTImageStorage", false]], "enhancedmrcolorimagestorage (in module pydicom.uid)": [[334, "pydicom.uid.EnhancedMRColorImageStorage", false]], "enhancedmrimagestorage (in module pydicom.uid)": [[335, "pydicom.uid.EnhancedMRImageStorage", false]], "enhancedpetimagestorage (in module pydicom.uid)": [[336, "pydicom.uid.EnhancedPETImageStorage", false]], "enhancedrtimagestorage (in module pydicom.uid)": [[337, "pydicom.uid.EnhancedRTImageStorage", false]], "enhancedsrstorage (in module pydicom.uid)": [[338, "pydicom.uid.EnhancedSRStorage", false]], "enhancedusvolumestorage (in module pydicom.uid)": [[339, "pydicom.uid.EnhancedUSVolumeStorage", false]], "enhancedxaimagestorage (in module pydicom.uid)": [[340, "pydicom.uid.EnhancedXAImageStorage", false]], "enhancedxrayradiationdosesrstorage (in module pydicom.uid)": [[342, "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", false]], "enhancedxrfimagestorage (in module pydicom.uid)": [[341, "pydicom.uid.EnhancedXRFImageStorage", false]], "ensure_file_meta() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.ensure_file_meta", false]], "ensure_file_meta() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.ensure_file_meta", false]], "ensure_file_meta() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.ensure_file_meta", false]], "exp() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.exp", false]], "expand_ybr422() (in module pydicom.pixels.utils)": [[259, "pydicom.pixels.utils.expand_ybr422", false]], "expandtabs() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.expandtabs", false]], "expandtabs() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.expandtabs", false]], "explicitvrbigendian (in module pydicom.uid)": [[343, "pydicom.uid.ExplicitVRBigEndian", false]], "explicitvrbigendiandecoder (in module pydicom.pixels.decoders)": [[221, "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", false]], "explicitvrlittleendian (in module pydicom.uid)": [[344, "pydicom.uid.ExplicitVRLittleEndian", false]], "explicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[222, "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", false]], "extend() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.extend", false]], "extend() (pydicom.sequence.sequence method)": [[270, "pydicom.sequence.Sequence.extend", false]], "extended_offsets (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.extended_offsets", false]], "extended_offsets (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.extended_offsets", false]], "extensiblesrstorage (in module pydicom.uid)": [[345, "pydicom.uid.ExtensibleSRStorage", false]], "family_comma_given() (pydicom.valuerep.personname method)": [[520, "pydicom.valuerep.PersonName.family_comma_given", false]], "family_name (pydicom.valuerep.personname property)": [[520, "pydicom.valuerep.PersonName.family_name", false]], "file_meta (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.file_meta", false]], "file_set (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.file_set", false]], "file_set (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.file_set", false]], "filedataset (class in pydicom.dataset)": [[133, "pydicom.dataset.FileDataset", false]], "fileid (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.FileID", false]], "fileinstance (class in pydicom.fileset)": [[171, "pydicom.fileset.FileInstance", false]], "filemetadataset (class in pydicom.dataset)": [[134, "pydicom.dataset.FileMetaDataset", false]], "filename (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.filename", false]], "fileobj_type (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.fileobj_type", false]], "fileset (class in pydicom.fileset)": [[172, "pydicom.fileset.FileSet", false]], "find() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.find", false]], "find() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.find", false]], "find() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.find", false]], "find_bytes() (in module pydicom.fileutil)": [[177, "pydicom.fileutil.find_bytes", false]], "find_delimiter() (in module pydicom.fileutil)": [[178, "pydicom.fileutil.find_delimiter", false]], "find_values() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.find_values", false]], "fma() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.fma", false]], "for_addition (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.for_addition", false]], "for_moving (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.for_moving", false]], "for_removal (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.for_removal", false]], "format() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.format", false]], "format() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.format", false]], "format_map() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.format_map", false]], "format_map() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.format_map", false]], "format_number_as_ds() (in module pydicom.valuerep)": [[523, "pydicom.valuerep.format_number_as_ds", false]], "formatted() (pydicom.valuerep.personname method)": [[520, "pydicom.valuerep.PersonName.formatted", false]], "formatted_lines() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.formatted_lines", false]], "formatted_lines() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.formatted_lines", false]], "formatted_lines() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.formatted_lines", false]], "fragment_frame() (in module pydicom.encaps)": [[141, "pydicom.encaps.fragment_frame", false]], "frame_length() (pydicom.pixels.decoders.base.decoderunner method)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.frame_length", false]], "frame_length() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.frame_length", false]], "from_bytes() (pydicom.tag.basetag method)": [[271, "pydicom.tag.BaseTag.from_bytes", false]], "from_bytes() (pydicom.valuerep.is method)": [[518, "pydicom.valuerep.IS.from_bytes", false]], "from_float() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.from_float", false]], "from_json() (pydicom.dataelem.dataelement class method)": [[129, "pydicom.dataelem.DataElement.from_json", false]], "from_json() (pydicom.dataset.dataset class method)": [[132, "pydicom.dataset.Dataset.from_json", false]], "from_json() (pydicom.dataset.filedataset class method)": [[133, "pydicom.dataset.FileDataset.from_json", false]], "from_json() (pydicom.dataset.filemetadataset class method)": [[134, "pydicom.dataset.FileMetaDataset.from_json", false]], "from_named_components() (pydicom.valuerep.personname class method)": [[520, "pydicom.valuerep.PersonName.from_named_components", false]], "from_named_components_veterinary() (pydicom.valuerep.personname class method)": [[520, "pydicom.valuerep.PersonName.from_named_components_veterinary", false]], "fromhex() (pydicom.valuerep.dsfloat method)": [[516, "pydicom.valuerep.DSfloat.fromhex", false]], "fromhex() (pydicom.valuerep.isfloat method)": [[519, "pydicom.valuerep.ISfloat.fromhex", false]], "fromisocalendar() (pydicom.valuerep.da method)": [[513, "pydicom.valuerep.DA.fromisocalendar", false]], "fromisocalendar() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.fromisocalendar", false]], "fromisoformat() (pydicom.valuerep.da method)": [[513, "pydicom.valuerep.DA.fromisoformat", false]], "fromisoformat() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.fromisoformat", false]], "fromisoformat() (pydicom.valuerep.tm method)": [[521, "pydicom.valuerep.TM.fromisoformat", false]], "fromordinal() (pydicom.valuerep.da method)": [[513, "pydicom.valuerep.DA.fromordinal", false]], "fromordinal() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.fromordinal", false]], "fromtimestamp() (pydicom.valuerep.da method)": [[513, "pydicom.valuerep.DA.fromtimestamp", false]], "fromtimestamp() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.fromtimestamp", false]], "future_behavior() (in module pydicom.config)": [[97, "pydicom.config.future_behavior", false]], "general32bitecgwaveformstorage (in module pydicom.uid)": [[346, "pydicom.uid.General32bitECGWaveformStorage", false]], "generalaudiowaveformstorage (in module pydicom.uid)": [[347, "pydicom.uid.GeneralAudioWaveformStorage", false]], "generalecgwaveformstorage (in module pydicom.uid)": [[348, "pydicom.uid.GeneralECGWaveformStorage", false]], "generate_filename() (in module pydicom.fileset)": [[174, "pydicom.fileset.generate_filename", false]], "generate_fragmented_frames() (in module pydicom.encaps)": [[142, "pydicom.encaps.generate_fragmented_frames", false]], "generate_fragments() (in module pydicom.encaps)": [[143, "pydicom.encaps.generate_fragments", false]], "generate_frames() (in module pydicom.encaps)": [[144, "pydicom.encaps.generate_frames", false]], "generate_frames() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.generate_frames", false]], "generate_multiplex() (in module pydicom.waveforms.numpy_handler)": [[546, "pydicom.waveforms.numpy_handler.generate_multiplex", false]], "generate_pixel_data() (in module pydicom.encaps)": [[145, "pydicom.encaps.generate_pixel_data", false]], "generate_pixel_data_fragment() (in module pydicom.encaps)": [[146, "pydicom.encaps.generate_pixel_data_fragment", false]], "generate_pixel_data_frame() (in module pydicom.encaps)": [[147, "pydicom.encaps.generate_pixel_data_frame", false]], "generate_uid() (in module pydicom.uid)": [[511, "pydicom.uid.generate_uid", false]], "genericimplanttemplatestorage (in module pydicom.uid)": [[349, "pydicom.uid.GenericImplantTemplateStorage", false]], "get() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.get", false]], "get() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.get", false]], "get() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.get", false]], "get_charset_files() (in module pydicom.data)": [[105, "pydicom.data.get_charset_files", false]], "get_data() (pydicom.pixels.decoders.base.decoderunner method)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.get_data", false]], "get_decoder() (in module pydicom.pixels)": [[245, "pydicom.pixels.get_decoder", false]], "get_encoder() (in module pydicom.pixels)": [[246, "pydicom.pixels.get_encoder", false]], "get_entry() (in module pydicom.datadict)": [[119, "pydicom.datadict.get_entry", false]], "get_expected_length() (in module pydicom.overlays.numpy_handler)": [[206, "pydicom.overlays.numpy_handler.get_expected_length", false]], "get_expected_length() (in module pydicom.pixels.utils)": [[260, "pydicom.pixels.utils.get_expected_length", false]], "get_frame() (in module pydicom.encaps)": [[148, "pydicom.encaps.get_frame", false]], "get_frame() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.get_frame", false]], "get_frame_offsets() (in module pydicom.encaps)": [[149, "pydicom.encaps.get_frame_offsets", false]], "get_image_pixel_ids() (in module pydicom.pixels.utils)": [[261, "pydicom.pixels.utils.get_image_pixel_ids", false]], "get_item() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.get_item", false]], "get_item() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.get_item", false]], "get_item() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.get_item", false]], "get_j2k_parameters() (in module pydicom.pixels.utils)": [[262, "pydicom.pixels.utils.get_j2k_parameters", false]], "get_nr_frames() (in module pydicom.pixels.utils)": [[263, "pydicom.pixels.utils.get_nr_frames", false]], "get_option() (pydicom.pixels.decoders.base.decoderunner method)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.get_option", false]], "get_option() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.get_option", false]], "get_overlay_array() (in module pydicom.overlays.numpy_handler)": [[206, "pydicom.overlays.numpy_handler.get_overlay_array", false]], "get_palette_files() (in module pydicom.data)": [[106, "pydicom.data.get_palette_files", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[208, "pydicom.pixel_data_handlers.jpeg_ls_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.numpy_handler)": [[209, "pydicom.pixel_data_handlers.numpy_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pillow_handler)": [[210, "pydicom.pixel_data_handlers.pillow_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.rle_handler)": [[212, "pydicom.pixel_data_handlers.rle_handler.get_pixeldata", false]], "get_private_entry() (in module pydicom.datadict)": [[120, "pydicom.datadict.get_private_entry", false]], "get_private_item() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.get_private_item", false]], "get_private_item() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.get_private_item", false]], "get_private_item() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.get_private_item", false]], "get_tag() (pydicom.dataset.privateblock method)": [[135, "pydicom.dataset.PrivateBlock.get_tag", false]], "get_testdata_file() (in module pydicom.data)": [[107, "pydicom.data.get_testdata_file", false]], "get_testdata_files() (in module pydicom.data)": [[108, "pydicom.data.get_testdata_files", false]], "given_name (pydicom.valuerep.personname property)": [[520, "pydicom.valuerep.PersonName.given_name", false]], "grayscaleplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[350, "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", false]], "grayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[351, "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", false]], "group (pydicom.dataset.privateblock attribute)": [[135, "pydicom.dataset.PrivateBlock.group", false]], "group (pydicom.tag.basetag property)": [[271, "pydicom.tag.BaseTag.group", false]], "group_dataset() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.group_dataset", false]], "group_dataset() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.group_dataset", false]], "group_dataset() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.group_dataset", false]], "hangingprotocolstorage (in module pydicom.uid)": [[357, "pydicom.uid.HangingProtocolStorage", false]], "has_instance (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.has_instance", false]], "hemodynamicwaveformstorage (in module pydicom.uid)": [[358, "pydicom.uid.HemodynamicWaveformStorage", false]], "hevcm10p51 (in module pydicom.uid)": [[352, "pydicom.uid.HEVCM10P51", false]], "hevcmp51 (in module pydicom.uid)": [[353, "pydicom.uid.HEVCMP51", false]], "hex() (pydicom.valuerep.dsfloat method)": [[516, "pydicom.valuerep.DSfloat.hex", false]], "hex() (pydicom.valuerep.isfloat method)": [[519, "pydicom.valuerep.ISfloat.hex", false]], "htj2k (in module pydicom.uid)": [[354, "pydicom.uid.HTJ2K", false]], "htj2kdecoder (in module pydicom.pixels.decoders)": [[223, "pydicom.pixels.decoders.HTJ2KDecoder", false]], "htj2klossless (in module pydicom.uid)": [[355, "pydicom.uid.HTJ2KLossless", false]], "htj2klosslessdecoder (in module pydicom.pixels.decoders)": [[224, "pydicom.pixels.decoders.HTJ2KLosslessDecoder", false]], "htj2klosslessrpcl (in module pydicom.uid)": [[356, "pydicom.uid.HTJ2KLosslessRPCL", false]], "htj2klosslessrpcldecoder (in module pydicom.pixels.decoders)": [[225, "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", false]], "id (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.ID", false]], "ideographic (pydicom.valuerep.personname property)": [[520, "pydicom.valuerep.PersonName.ideographic", false]], "ignore (in module pydicom.config)": [[84, "pydicom.config.IGNORE", false]], "imag (pydicom.tag.basetag attribute)": [[271, "pydicom.tag.BaseTag.imag", false]], "imag (pydicom.valuerep.dsfloat attribute)": [[516, "pydicom.valuerep.DSfloat.imag", false]], "imag (pydicom.valuerep.is attribute)": [[518, "pydicom.valuerep.IS.imag", false]], "imag (pydicom.valuerep.isfloat attribute)": [[519, "pydicom.valuerep.ISfloat.imag", false]], "implantassemblytemplatestorage (in module pydicom.uid)": [[359, "pydicom.uid.ImplantAssemblyTemplateStorage", false]], "implantationplansrstorage (in module pydicom.uid)": [[361, "pydicom.uid.ImplantationPlanSRStorage", false]], "implanttemplategroupstorage (in module pydicom.uid)": [[360, "pydicom.uid.ImplantTemplateGroupStorage", false]], "implicitvrlittleendian (in module pydicom.uid)": [[362, "pydicom.uid.ImplicitVRLittleEndian", false]], "implicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[226, "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", false]], "indent_chars (pydicom.dataset.dataset attribute)": [[132, "pydicom.dataset.Dataset.indent_chars", false]], "index (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.index", false]], "index() (pydicom.dataelem.rawdataelement method)": [[131, "pydicom.dataelem.RawDataElement.index", false]], "index() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.index", false]], "index() (pydicom.sequence.sequence method)": [[270, "pydicom.sequence.Sequence.index", false]], "index() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.index", false]], "index() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.index", false]], "infer_sq_for_un_vr (pydicom.config.settings property)": [[57, "pydicom.config.Settings.infer_sq_for_un_vr", false]], "info (pydicom.uid.uid property)": [[486, "pydicom.uid.UID.info", false]], "insert() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.insert", false]], "insert() (pydicom.sequence.sequence method)": [[270, "pydicom.sequence.Sequence.insert", false]], "instance (pydicom.fileset.recordnode attribute)": [[173, "pydicom.fileset.RecordNode.instance", false]], "intraocularlenscalculationsstorage (in module pydicom.uid)": [[363, "pydicom.uid.IntraocularLensCalculationsStorage", false]], "intravascularopticalcoherencetomographyimagestorageforpresentation (in module pydicom.uid)": [[364, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", false]], "intravascularopticalcoherencetomographyimagestorageforprocessing (in module pydicom.uid)": [[365, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", false]], "invalid_key_behavior (in module pydicom.config)": [[86, "pydicom.config.INVALID_KEY_BEHAVIOR", false]], "invalid_keyword_behavior (in module pydicom.config)": [[85, "pydicom.config.INVALID_KEYWORD_BEHAVIOR", false]], "invaliddicomerror": [[155, "pydicom.errors.InvalidDicomError", false]], "inventorystorage (in module pydicom.uid)": [[366, "pydicom.uid.InventoryStorage", false]], "is (class in pydicom.valuerep)": [[518, "pydicom.valuerep.IS", false]], "is_array (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.is_array", false]], "is_array (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.is_array", false]], "is_available (pydicom.pixels.decoders.base.decoder property)": [[237, "pydicom.pixels.decoders.base.Decoder.is_available", false]], "is_available (pydicom.pixels.encoders.base.encoder property)": [[244, "pydicom.pixels.encoders.base.Encoder.is_available", false]], "is_available() (in module pydicom.overlays.numpy_handler)": [[206, "pydicom.overlays.numpy_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[208, "pydicom.pixel_data_handlers.jpeg_ls_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.numpy_handler)": [[209, "pydicom.pixel_data_handlers.numpy_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.pillow_handler)": [[210, "pydicom.pixel_data_handlers.pillow_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.rle_handler)": [[212, "pydicom.pixel_data_handlers.rle_handler.is_available", false]], "is_available() (in module pydicom.waveforms.numpy_handler)": [[546, "pydicom.waveforms.numpy_handler.is_available", false]], "is_binary (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.is_binary", false]], "is_binary (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.is_binary", false]], "is_buffer (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.is_buffer", false]], "is_buffer (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.is_buffer", false]], "is_canonical() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.is_canonical", false]], "is_compressed (pydicom.uid.uid property)": [[486, "pydicom.uid.UID.is_compressed", false]], "is_conformant_file_id() (in module pydicom.fileset)": [[175, "pydicom.fileset.is_conformant_file_id", false]], "is_dataset (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.is_dataset", false]], "is_dataset (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.is_dataset", false]], "is_deflated (pydicom.uid.uid property)": [[486, "pydicom.uid.UID.is_deflated", false]], "is_dicom() (in module pydicom.misc)": [[203, "pydicom.misc.is_dicom", false]], "is_empty (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.is_empty", false]], "is_encapsulated (pydicom.pixels.decoders.base.decoder property)": [[237, "pydicom.pixels.decoders.base.Decoder.is_encapsulated", false]], "is_encapsulated (pydicom.pixels.encoders.base.encoder property)": [[244, "pydicom.pixels.encoders.base.Encoder.is_encapsulated", false]], "is_encapsulated (pydicom.uid.uid property)": [[486, "pydicom.uid.UID.is_encapsulated", false]], "is_finite() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.is_finite", false]], "is_implicit_vr (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicombytesio property)": [[156, "pydicom.filebase.DicomBytesIO.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicomfilelike property)": [[158, "pydicom.filebase.DicomFileLike.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicomio property)": [[159, "pydicom.filebase.DicomIO.is_implicit_VR", false]], "is_implicit_vr (pydicom.uid.uid property)": [[486, "pydicom.uid.UID.is_implicit_VR", false]], "is_infinite() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.is_infinite", false]], "is_integer() (pydicom.valuerep.dsfloat method)": [[516, "pydicom.valuerep.DSfloat.is_integer", false]], "is_integer() (pydicom.valuerep.isfloat method)": [[519, "pydicom.valuerep.ISfloat.is_integer", false]], "is_little_endian (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.is_little_endian", false]], "is_little_endian (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.is_little_endian", false]], "is_little_endian (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.is_little_endian", false]], "is_little_endian (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicombytesio property)": [[156, "pydicom.filebase.DicomBytesIO.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicomfilelike property)": [[158, "pydicom.filebase.DicomFileLike.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicomio property)": [[159, "pydicom.filebase.DicomIO.is_little_endian", false]], "is_little_endian (pydicom.uid.uid property)": [[486, "pydicom.uid.UID.is_little_endian", false]], "is_nan() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.is_nan", false]], "is_native (pydicom.pixels.decoders.base.decoder property)": [[237, "pydicom.pixels.decoders.base.Decoder.is_native", false]], "is_native (pydicom.pixels.encoders.base.encoder property)": [[244, "pydicom.pixels.encoders.base.Encoder.is_native", false]], "is_normal() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.is_normal", false]], "is_original_encoding (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.is_original_encoding", false]], "is_original_encoding (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.is_original_encoding", false]], "is_original_encoding (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.is_original_encoding", false]], "is_private (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.is_private", false]], "is_private (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.is_private", false]], "is_private (pydicom.tag.basetag property)": [[271, "pydicom.tag.BaseTag.is_private", false]], "is_private (pydicom.uid.uid property)": [[486, "pydicom.uid.UID.is_private", false]], "is_private_creator (pydicom.tag.basetag property)": [[271, "pydicom.tag.BaseTag.is_private_creator", false]], "is_qnan() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.is_qnan", false]], "is_raw (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.is_raw", false]], "is_retired (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.is_retired", false]], "is_retired (pydicom.uid.uid property)": [[486, "pydicom.uid.UID.is_retired", false]], "is_root (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.is_root", false]], "is_signed() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.is_signed", false]], "is_snan() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.is_snan", false]], "is_staged (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.is_staged", false]], "is_staged (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.is_staged", false]], "is_subnormal() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.is_subnormal", false]], "is_transfer_syntax (pydicom.uid.uid property)": [[486, "pydicom.uid.UID.is_transfer_syntax", false]], "is_undefined_length (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.is_undefined_length", false]], "is_valid (pydicom.uid.uid property)": [[486, "pydicom.uid.UID.is_valid", false]], "is_valid_ds() (in module pydicom.valuerep)": [[524, "pydicom.valuerep.is_valid_ds", false]], "is_zero() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.is_zero", false]], "isalnum() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.isalnum", false]], "isalnum() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.isalnum", false]], "isalpha() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.isalpha", false]], "isalpha() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.isalpha", false]], "isascii() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.isascii", false]], "isascii() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.isascii", false]], "isdecimal() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.isdecimal", false]], "isdecimal() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.isdecimal", false]], "isdigit() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.isdigit", false]], "isdigit() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.isdigit", false]], "isfloat (class in pydicom.valuerep)": [[519, "pydicom.valuerep.ISfloat", false]], "isidentifier() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.isidentifier", false]], "isidentifier() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.isidentifier", false]], "islower() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.islower", false]], "islower() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.islower", false]], "isnumeric() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.isnumeric", false]], "isnumeric() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.isnumeric", false]], "isocalendar() (pydicom.valuerep.da method)": [[513, "pydicom.valuerep.DA.isocalendar", false]], "isocalendar() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.isocalendar", false]], "isoformat() (pydicom.valuerep.da method)": [[513, "pydicom.valuerep.DA.isoformat", false]], "isoformat() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.isoformat", false]], "isoformat() (pydicom.valuerep.tm method)": [[521, "pydicom.valuerep.TM.isoformat", false]], "isoweekday() (pydicom.valuerep.da method)": [[513, "pydicom.valuerep.DA.isoweekday", false]], "isoweekday() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.isoweekday", false]], "isprintable() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.isprintable", false]], "isprintable() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.isprintable", false]], "isspace() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.isspace", false]], "isspace() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.isspace", false]], "istitle() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.istitle", false]], "istitle() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.istitle", false]], "isupper() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.isupper", false]], "isupper() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.isupper", false]], "itemize_fragment() (in module pydicom.encaps)": [[150, "pydicom.encaps.itemize_fragment", false]], "itemize_frame() (in module pydicom.encaps)": [[151, "pydicom.encaps.itemize_frame", false]], "items() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.items", false]], "items() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.items", false]], "items() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.items", false]], "iter_array() (pydicom.pixels.decoders.base.decoder method)": [[237, "pydicom.pixels.decoders.base.Decoder.iter_array", false]], "iter_buffer() (pydicom.pixels.decoders.base.decoder method)": [[237, "pydicom.pixels.decoders.base.Decoder.iter_buffer", false]], "iter_decode() (pydicom.pixels.decoders.base.decoderunner method)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.iter_decode", false]], "iter_encode() (pydicom.pixels.encoders.base.encoder method)": [[244, "pydicom.pixels.encoders.base.Encoder.iter_encode", false]], "iter_pixels() (in module pydicom.pixels)": [[247, "pydicom.pixels.iter_pixels", false]], "iter_pixels() (in module pydicom.pixels.utils)": [[264, "pydicom.pixels.utils.iter_pixels", false]], "iterall() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.iterall", false]], "iterall() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.iterall", false]], "iterall() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.iterall", false]], "join() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.join", false]], "join() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.join", false]], "jpeg2000 (in module pydicom.uid)": [[367, "pydicom.uid.JPEG2000", false]], "jpeg2000decoder (in module pydicom.pixels.decoders)": [[227, "pydicom.pixels.decoders.JPEG2000Decoder", false]], "jpeg2000encoder (in module pydicom.pixels.encoders)": [[238, "pydicom.pixels.encoders.JPEG2000Encoder", false]], "jpeg2000lossless (in module pydicom.uid)": [[368, "pydicom.uid.JPEG2000Lossless", false]], "jpeg2000losslessdecoder (in module pydicom.pixels.decoders)": [[228, "pydicom.pixels.decoders.JPEG2000LosslessDecoder", false]], "jpeg2000losslessencoder (in module pydicom.pixels.encoders)": [[239, "pydicom.pixels.encoders.JPEG2000LosslessEncoder", false]], "jpeg2000mc (in module pydicom.uid)": [[369, "pydicom.uid.JPEG2000MC", false]], "jpeg2000mclossless (in module pydicom.uid)": [[370, "pydicom.uid.JPEG2000MCLossless", false]], "jpeg2000transfersyntaxes (in module pydicom.uid)": [[371, "pydicom.uid.JPEG2000TransferSyntaxes", false]], "jpegbaseline8bit (in module pydicom.uid)": [[372, "pydicom.uid.JPEGBaseline8Bit", false]], "jpegbaseline8bitdecoder (in module pydicom.pixels.decoders)": [[229, "pydicom.pixels.decoders.JPEGBaseline8BitDecoder", false]], "jpegextended12bit (in module pydicom.uid)": [[373, "pydicom.uid.JPEGExtended12Bit", false]], "jpegextended12bitdecoder (in module pydicom.pixels.decoders)": [[230, "pydicom.pixels.decoders.JPEGExtended12BitDecoder", false]], "jpeglossless (in module pydicom.uid)": [[377, "pydicom.uid.JPEGLossless", false]], "jpeglosslessdecoder (in module pydicom.pixels.decoders)": [[233, "pydicom.pixels.decoders.JPEGLosslessDecoder", false]], "jpeglosslesssv1 (in module pydicom.uid)": [[378, "pydicom.uid.JPEGLosslessSV1", false]], "jpeglosslesssv1decoder (in module pydicom.pixels.decoders)": [[234, "pydicom.pixels.decoders.JPEGLosslessSV1Decoder", false]], "jpeglslossless (in module pydicom.uid)": [[374, "pydicom.uid.JPEGLSLossless", false]], "jpeglslosslessdecoder (in module pydicom.pixels.decoders)": [[231, "pydicom.pixels.decoders.JPEGLSLosslessDecoder", false]], "jpeglslosslessencoder (in module pydicom.pixels.encoders)": [[240, "pydicom.pixels.encoders.JPEGLSLosslessEncoder", false]], "jpeglsnearlossless (in module pydicom.uid)": [[375, "pydicom.uid.JPEGLSNearLossless", false]], "jpeglsnearlosslessdecoder (in module pydicom.pixels.decoders)": [[232, "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", false]], "jpeglsnearlosslessencoder (in module pydicom.pixels.encoders)": [[241, "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", false]], "jpeglstransfersyntaxes (in module pydicom.uid)": [[376, "pydicom.uid.JPEGLSTransferSyntaxes", false]], "jpegtransfersyntaxes (in module pydicom.uid)": [[379, "pydicom.uid.JPEGTransferSyntaxes", false]], "jpiphtj2kreferenced (in module pydicom.uid)": [[380, "pydicom.uid.JPIPHTJ2KReferenced", false]], "jpiphtj2kreferenceddeflate (in module pydicom.uid)": [[381, "pydicom.uid.JPIPHTJ2KReferencedDeflate", false]], "json_key (pydicom.tag.basetag property)": [[271, "pydicom.tag.BaseTag.json_key", false]], "keratometrymeasurementsstorage (in module pydicom.uid)": [[382, "pydicom.uid.KeratometryMeasurementsStorage", false]], "key (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.key", false]], "keyobjectselectiondocumentstorage (in module pydicom.uid)": [[383, "pydicom.uid.KeyObjectSelectionDocumentStorage", false]], "keys() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.keys", false]], "keys() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.keys", false]], "keys() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.keys", false]], "keyword (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.keyword", false]], "keyword (pydicom.uid.uid property)": [[486, "pydicom.uid.UID.keyword", false]], "keyword_for_tag() (in module pydicom.datadict)": [[121, "pydicom.datadict.keyword_for_tag", false]], "legacyconvertedenhancedctimagestorage (in module pydicom.uid)": [[384, "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", false]], "legacyconvertedenhancedmrimagestorage (in module pydicom.uid)": [[385, "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", false]], "legacyconvertedenhancedpetimagestorage (in module pydicom.uid)": [[386, "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", false]], "length (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.length", false]], "length_of_undefined_length() (in module pydicom.fileutil)": [[179, "pydicom.fileutil.length_of_undefined_length", false]], "lensometrymeasurementsstorage (in module pydicom.uid)": [[387, "pydicom.uid.LensometryMeasurementsStorage", false]], "ljust() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.ljust", false]], "ljust() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.ljust", false]], "ln() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.ln", false]], "load() (pydicom.fileset.fileinstance method)": [[171, "pydicom.fileset.FileInstance.load", false]], "load() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.load", false]], "log10() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.log10", false]], "logb() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.logb", false]], "logical_and() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.logical_and", false]], "logical_invert() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.logical_invert", false]], "logical_or() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.logical_or", false]], "logical_xor() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.logical_xor", false]], "lower() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.lower", false]], "lower() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.lower", false]], "lstrip() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.lstrip", false]], "lstrip() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.lstrip", false]], "maculargridthicknessandvolumereportstorage (in module pydicom.uid)": [[405, "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", false]], "maketrans() (pydicom.uid.uid static method)": [[486, "pydicom.uid.UID.maketrans", false]], "maketrans() (pydicom.valuerep.vr static method)": [[522, "pydicom.valuerep.VR.maketrans", false]], "mammographycadsrstorage (in module pydicom.uid)": [[406, "pydicom.uid.MammographyCADSRStorage", false]], "mask_match() (in module pydicom.datadict)": [[122, "pydicom.datadict.mask_match", false]], "max() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.max", false]], "max_mag() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.max_mag", false]], "maxbytestodisplay (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.maxBytesToDisplay", false]], "mediastoragedirectorystorage (in module pydicom.uid)": [[407, "pydicom.uid.MediaStorageDirectoryStorage", false]], "microscopybulksimpleannotationsstorage (in module pydicom.uid)": [[408, "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", false]], "middle_name (pydicom.valuerep.personname property)": [[520, "pydicom.valuerep.PersonName.middle_name", false]], "min() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.min", false]], "min_mag() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.min_mag", false]], "missing_dependencies (pydicom.pixels.decoders.base.decoder property)": [[237, "pydicom.pixels.decoders.base.Decoder.missing_dependencies", false]], "missing_dependencies (pydicom.pixels.encoders.base.encoder property)": [[244, "pydicom.pixels.encoders.base.Encoder.missing_dependencies", false]], "module": [[68, "module-pydicom.encaps", false], [206, "module-pydicom.overlays.numpy_handler", false], [207, "module-pydicom.pixel_data_handlers.gdcm_handler", false], [208, "module-pydicom.pixel_data_handlers.jpeg_ls_handler", false], [209, "module-pydicom.pixel_data_handlers.numpy_handler", false], [210, "module-pydicom.pixel_data_handlers.pillow_handler", false], [211, "module-pydicom.pixel_data_handlers.pylibjpeg_handler", false], [212, "module-pydicom.pixel_data_handlers.rle_handler", false], [546, "module-pydicom.waveforms.numpy_handler", false], [548, "module-pydicom.pixel_data_handlers", false], [549, "module-pydicom", false], [551, "module-pydicom.overlays", false], [552, "module-pydicom.pixels", false], [553, "module-pydicom.pixels.decoders", false], [554, "module-pydicom.pixels.encoders", false], [555, "module-pydicom.pixels.processing", false], [556, "module-pydicom.pixels.utils", false], [557, "module-pydicom.uid", false], [558, "module-pydicom.waveforms", false]], "mpeg2mphl (in module pydicom.uid)": [[388, "pydicom.uid.MPEG2MPHL", false]], "mpeg2mphlf (in module pydicom.uid)": [[389, "pydicom.uid.MPEG2MPHLF", false]], "mpeg2mpml (in module pydicom.uid)": [[390, "pydicom.uid.MPEG2MPML", false]], "mpeg2mpmlf (in module pydicom.uid)": [[391, "pydicom.uid.MPEG2MPMLF", false]], "mpeg4hp41 (in module pydicom.uid)": [[392, "pydicom.uid.MPEG4HP41", false]], "mpeg4hp41bd (in module pydicom.uid)": [[393, "pydicom.uid.MPEG4HP41BD", false]], "mpeg4hp41bdf (in module pydicom.uid)": [[394, "pydicom.uid.MPEG4HP41BDF", false]], "mpeg4hp41f (in module pydicom.uid)": [[395, "pydicom.uid.MPEG4HP41F", false]], "mpeg4hp422d (in module pydicom.uid)": [[396, "pydicom.uid.MPEG4HP422D", false]], "mpeg4hp422df (in module pydicom.uid)": [[397, "pydicom.uid.MPEG4HP422DF", false]], "mpeg4hp423d (in module pydicom.uid)": [[398, "pydicom.uid.MPEG4HP423D", false]], "mpeg4hp423df (in module pydicom.uid)": [[399, "pydicom.uid.MPEG4HP423DF", false]], "mpeg4hp42stereo (in module pydicom.uid)": [[400, "pydicom.uid.MPEG4HP42STEREO", false]], "mpeg4hp42stereof (in module pydicom.uid)": [[401, "pydicom.uid.MPEG4HP42STEREOF", false]], "mpegtransfersyntaxes (in module pydicom.uid)": [[402, "pydicom.uid.MPEGTransferSyntaxes", false]], "mrimagestorage (in module pydicom.uid)": [[403, "pydicom.uid.MRImageStorage", false]], "mrspectroscopystorage (in module pydicom.uid)": [[404, "pydicom.uid.MRSpectroscopyStorage", false]], "multi_string() (in module pydicom.filewriter)": [[184, "pydicom.filewriter.multi_string", false]], "multi_string() (in module pydicom.values)": [[545, "pydicom.values.multi_string", false]], "multichannelrespiratorywaveformstorage (in module pydicom.uid)": [[413, "pydicom.uid.MultichannelRespiratoryWaveformStorage", false]], "multiframegrayscalebytesecondarycaptureimagestorage (in module pydicom.uid)": [[409, "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", false]], "multiframegrayscalewordsecondarycaptureimagestorage (in module pydicom.uid)": [[410, "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", false]], "multiframesinglebitsecondarycaptureimagestorage (in module pydicom.uid)": [[411, "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", false]], "multiframetruecolorsecondarycaptureimagestorage (in module pydicom.uid)": [[412, "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", false]], "multiplevolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[414, "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", false]], "multiplex_array() (in module pydicom.waveforms.numpy_handler)": [[546, "pydicom.waveforms.numpy_handler.multiplex_array", false]], "multivalue (class in pydicom.multival)": [[205, "pydicom.multival.MultiValue", false]], "name (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.name", false]], "name (pydicom.filebase.dicombytesio property)": [[156, "pydicom.filebase.DicomBytesIO.name", false]], "name (pydicom.filebase.dicomfilelike property)": [[158, "pydicom.filebase.DicomFileLike.name", false]], "name (pydicom.filebase.dicomio property)": [[159, "pydicom.filebase.DicomIO.name", false]], "name (pydicom.uid.uid property)": [[486, "pydicom.uid.UID.name", false]], "name_prefix (pydicom.valuerep.personname property)": [[520, "pydicom.valuerep.PersonName.name_prefix", false]], "name_suffix (pydicom.valuerep.personname property)": [[520, "pydicom.valuerep.PersonName.name_suffix", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[208, "pydicom.pixel_data_handlers.jpeg_ls_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[209, "pydicom.pixel_data_handlers.numpy_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[210, "pydicom.pixel_data_handlers.pillow_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[212, "pydicom.pixel_data_handlers.rle_handler.needs_to_convert_to_RGB", false]], "next (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.next", false]], "next_minus() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.next_minus", false]], "next_plus() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.next_plus", false]], "next_toward() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.next_toward", false]], "node (pydicom.fileset.fileinstance attribute)": [[171, "pydicom.fileset.FileInstance.node", false]], "normalize() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.normalize", false]], "now() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.now", false]], "nuclearmedicineimagestorage (in module pydicom.uid)": [[415, "pydicom.uid.NuclearMedicineImageStorage", false]], "number_class() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.number_class", false]], "number_of_frames (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.number_of_frames", false]], "number_of_frames (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.number_of_frames", false]], "numerator (pydicom.tag.basetag attribute)": [[271, "pydicom.tag.BaseTag.numerator", false]], "numerator (pydicom.valuerep.is attribute)": [[518, "pydicom.valuerep.IS.numerator", false]], "ophthalmicaxialmeasurementsstorage (in module pydicom.uid)": [[416, "pydicom.uid.OphthalmicAxialMeasurementsStorage", false]], "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage (in module pydicom.uid)": [[417, "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", false]], "ophthalmicopticalcoherencetomographyenfaceimagestorage (in module pydicom.uid)": [[418, "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", false]], "ophthalmicphotography16bitimagestorage (in module pydicom.uid)": [[419, "pydicom.uid.OphthalmicPhotography16BitImageStorage", false]], "ophthalmicphotography8bitimagestorage (in module pydicom.uid)": [[420, "pydicom.uid.OphthalmicPhotography8BitImageStorage", false]], "ophthalmicthicknessmapstorage (in module pydicom.uid)": [[421, "pydicom.uid.OphthalmicThicknessMapStorage", false]], "ophthalmictomographyimagestorage (in module pydicom.uid)": [[422, "pydicom.uid.OphthalmicTomographyImageStorage", false]], "ophthalmicvisualfieldstaticperimetrymeasurementsstorage (in module pydicom.uid)": [[423, "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", false]], "options (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.options", false]], "options (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.options", false]], "original_character_set (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.original_character_set", false]], "original_character_set (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.original_character_set", false]], "original_character_set (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.original_character_set", false]], "original_encoding (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.original_encoding", false]], "original_encoding (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.original_encoding", false]], "original_encoding (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.original_encoding", false]], "overlay_array() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.overlay_array", false]], "overlay_array() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.overlay_array", false]], "overlay_array() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.overlay_array", false]], "pack_bits() (in module pydicom.pixels)": [[248, "pydicom.pixels.pack_bits", false]], "pack_bits() (in module pydicom.pixels.utils)": [[265, "pydicom.pixels.utils.pack_bits", false]], "parametricmapstorage (in module pydicom.uid)": [[426, "pydicom.uid.ParametricMapStorage", false]], "parent (pydicom.filebase.dicombytesio property)": [[156, "pydicom.filebase.DicomBytesIO.parent", false]], "parent (pydicom.filebase.dicomfilelike property)": [[158, "pydicom.filebase.DicomFileLike.parent", false]], "parent (pydicom.filebase.dicomio property)": [[159, "pydicom.filebase.DicomIO.parent", false]], "parent (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.parent", false]], "parse_basic_offsets() (in module pydicom.encaps)": [[152, "pydicom.encaps.parse_basic_offsets", false]], "parse_fragments() (in module pydicom.encaps)": [[153, "pydicom.encaps.parse_fragments", false]], "partition() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.partition", false]], "partition() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.partition", false]], "path (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.path", false]], "path (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.path", false]], "patientradiationdosesrstorage (in module pydicom.uid)": [[427, "pydicom.uid.PatientRadiationDoseSRStorage", false]], "performedimagingagentadministrationsrstorage (in module pydicom.uid)": [[428, "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", false]], "personname (class in pydicom.valuerep)": [[520, "pydicom.valuerep.PersonName", false]], "phonetic (pydicom.valuerep.personname property)": [[520, "pydicom.valuerep.PersonName.phonetic", false]], "photoacousticimagestorage (in module pydicom.uid)": [[429, "pydicom.uid.PhotoacousticImageStorage", false]], "photometric_interpretation (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.photometric_interpretation", false]], "photometric_interpretation (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.photometric_interpretation", false]], "pixel_array (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.pixel_array", false]], "pixel_array (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.pixel_array", false]], "pixel_array (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.pixel_array", false]], "pixel_array() (in module pydicom.pixels)": [[249, "pydicom.pixels.pixel_array", false]], "pixel_array() (in module pydicom.pixels.utils)": [[266, "pydicom.pixels.utils.pixel_array", false]], "pixel_data_handlers (in module pydicom.config)": [[98, "pydicom.config.pixel_data_handlers", false]], "pixel_dtype (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.pixel_dtype", false]], "pixel_dtype() (in module pydicom.pixels.utils)": [[267, "pydicom.pixels.utils.pixel_dtype", false]], "pixel_keyword (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.pixel_keyword", false]], "pixel_keyword (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.pixel_keyword", false]], "pixel_representation (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.pixel_representation", false]], "pixel_representation (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.pixel_representation", false]], "planar_configuration (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.planar_configuration", false]], "planar_configuration (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.planar_configuration", false]], "plannedimagingagentadministrationsrstorage (in module pydicom.uid)": [[430, "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", false]], "pop() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.pop", false]], "pop() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.pop", false]], "pop() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.pop", false]], "pop() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.pop", false]], "pop() (pydicom.sequence.sequence method)": [[270, "pydicom.sequence.Sequence.pop", false]], "popitem() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.popitem", false]], "popitem() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.popitem", false]], "popitem() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.popitem", false]], "positronemissiontomographyimagestorage (in module pydicom.uid)": [[431, "pydicom.uid.PositronEmissionTomographyImageStorage", false]], "preamble (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.preamble", false]], "prettify() (pydicom.fileset.recordnode method)": [[173, "pydicom.fileset.RecordNode.prettify", false]], "previous (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.previous", false]], "private_block() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.private_block", false]], "private_block() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.private_block", false]], "private_block() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.private_block", false]], "private_creator (pydicom.dataset.privateblock attribute)": [[135, "pydicom.dataset.PrivateBlock.private_creator", false]], "private_creator (pydicom.tag.basetag property)": [[271, "pydicom.tag.BaseTag.private_creator", false]], "private_creators() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.private_creators", false]], "private_creators() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.private_creators", false]], "private_creators() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.private_creators", false]], "private_dictionary_description() (in module pydicom.datadict)": [[125, "pydicom.datadict.private_dictionary_description", false]], "private_dictionary_vm() (in module pydicom.datadict)": [[123, "pydicom.datadict.private_dictionary_VM", false]], "private_dictionary_vr() (in module pydicom.datadict)": [[124, "pydicom.datadict.private_dictionary_VR", false]], "privateblock (class in pydicom.dataset)": [[135, "pydicom.dataset.PrivateBlock", false]], "privatetransfersyntaxes (in module pydicom.uid)": [[432, "pydicom.uid.PrivateTransferSyntaxes", false]], "procedurelogstorage (in module pydicom.uid)": [[433, "pydicom.uid.ProcedureLogStorage", false]], "process() (pydicom.pixels.decoders.base.decoderunner method)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.process", false]], "protocolapprovalstorage (in module pydicom.uid)": [[434, "pydicom.uid.ProtocolApprovalStorage", false]], "pseudocolorsoftcopypresentationstatestorage (in module pydicom.uid)": [[435, "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", false]], "pydicom": [[549, "module-pydicom", false]], "pydicom.encaps": [[68, "module-pydicom.encaps", false]], "pydicom.overlays": [[551, "module-pydicom.overlays", false]], "pydicom.overlays.numpy_handler": [[206, "module-pydicom.overlays.numpy_handler", false]], "pydicom.pixel_data_handlers": [[548, "module-pydicom.pixel_data_handlers", false]], "pydicom.pixel_data_handlers.gdcm_handler": [[207, "module-pydicom.pixel_data_handlers.gdcm_handler", false]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[208, "module-pydicom.pixel_data_handlers.jpeg_ls_handler", false]], "pydicom.pixel_data_handlers.numpy_handler": [[209, "module-pydicom.pixel_data_handlers.numpy_handler", false]], "pydicom.pixel_data_handlers.pillow_handler": [[210, "module-pydicom.pixel_data_handlers.pillow_handler", false]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[211, "module-pydicom.pixel_data_handlers.pylibjpeg_handler", false]], "pydicom.pixel_data_handlers.rle_handler": [[212, "module-pydicom.pixel_data_handlers.rle_handler", false]], "pydicom.pixels": [[552, "module-pydicom.pixels", false]], "pydicom.pixels.decoders": [[553, "module-pydicom.pixels.decoders", false]], "pydicom.pixels.encoders": [[554, "module-pydicom.pixels.encoders", false]], "pydicom.pixels.processing": [[555, "module-pydicom.pixels.processing", false]], "pydicom.pixels.utils": [[556, "module-pydicom.pixels.utils", false]], "pydicom.uid": [[557, "module-pydicom.uid", false]], "pydicom.waveforms": [[558, "module-pydicom.waveforms", false]], "pydicom.waveforms.numpy_handler": [[546, "module-pydicom.waveforms.numpy_handler", false]], "pydicom_implementation_uid (in module pydicom.uid)": [[424, "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", false]], "pydicom_root_uid (in module pydicom.uid)": [[425, "pydicom.uid.PYDICOM_ROOT_UID", false]], "quantize() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.quantize", false]], "radiopharmaceuticalradiationdosesrstorage (in module pydicom.uid)": [[459, "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", false]], "radix() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.radix", false]], "raise (in module pydicom.config)": [[87, "pydicom.config.RAISE", false]], "rawdataelement (class in pydicom.dataelem)": [[131, "pydicom.dataelem.RawDataElement", false]], "rawdatastorage (in module pydicom.uid)": [[460, "pydicom.uid.RawDataStorage", false]], "re_valid_uid (in module pydicom.uid)": [[436, "pydicom.uid.RE_VALID_UID", false]], "re_valid_uid_prefix (in module pydicom.uid)": [[437, "pydicom.uid.RE_VALID_UID_PREFIX", false]], "read() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.read", false]], "read() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.read", false]], "read() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.read", false]], "read_dataset() (in module pydicom.filereader)": [[163, "pydicom.filereader.read_dataset", false]], "read_deferred_data_element() (in module pydicom.filereader)": [[164, "pydicom.filereader.read_deferred_data_element", false]], "read_encoding (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.read_encoding", false]], "read_encoding (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.read_encoding", false]], "read_encoding (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.read_encoding", false]], "read_exact() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.read_exact", false]], "read_exact() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.read_exact", false]], "read_exact() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.read_exact", false]], "read_file_meta_info() (in module pydicom.filereader)": [[165, "pydicom.filereader.read_file_meta_info", false]], "read_implicit_vr (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.read_implicit_vr", false]], "read_implicit_vr (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.read_implicit_vr", false]], "read_implicit_vr (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.read_implicit_vr", false]], "read_item() (in module pydicom.encaps)": [[154, "pydicom.encaps.read_item", false]], "read_little_endian (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.read_little_endian", false]], "read_little_endian (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.read_little_endian", false]], "read_little_endian (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.read_little_endian", false]], "read_partial() (in module pydicom.filereader)": [[166, "pydicom.filereader.read_partial", false]], "read_preamble() (in module pydicom.filereader)": [[167, "pydicom.filereader.read_preamble", false]], "read_sequence() (in module pydicom.filereader)": [[168, "pydicom.filereader.read_sequence", false]], "read_sequence_item() (in module pydicom.filereader)": [[169, "pydicom.filereader.read_sequence_item", false]], "read_tag() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.read_tag", false]], "read_tag() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.read_tag", false]], "read_tag() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.read_tag", false]], "read_ul() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.read_UL", false]], "read_ul() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.read_UL", false]], "read_ul() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.read_UL", false]], "read_undefined_length_value() (in module pydicom.fileutil)": [[180, "pydicom.fileutil.read_undefined_length_value", false]], "read_us() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.read_US", false]], "read_us() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.read_US", false]], "read_us() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.read_US", false]], "reading_validation_mode (pydicom.config.settings property)": [[57, "pydicom.config.Settings.reading_validation_mode", false]], "real (pydicom.tag.basetag attribute)": [[271, "pydicom.tag.BaseTag.real", false]], "real (pydicom.valuerep.dsfloat attribute)": [[516, "pydicom.valuerep.DSfloat.real", false]], "real (pydicom.valuerep.is attribute)": [[518, "pydicom.valuerep.IS.real", false]], "real (pydicom.valuerep.isfloat attribute)": [[519, "pydicom.valuerep.ISfloat.real", false]], "realworldvaluemappingstorage (in module pydicom.uid)": [[461, "pydicom.uid.RealWorldValueMappingStorage", false]], "record_type (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.record_type", false]], "recordnode (class in pydicom.fileset)": [[173, "pydicom.fileset.RecordNode", false]], "register_transfer_syntax() (in module pydicom.uid)": [[512, "pydicom.uid.register_transfer_syntax", false]], "remainder_near() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.remainder_near", false]], "remove() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.remove", false]], "remove() (pydicom.fileset.recordnode method)": [[173, "pydicom.fileset.RecordNode.remove", false]], "remove() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.remove", false]], "remove() (pydicom.sequence.sequence method)": [[270, "pydicom.sequence.Sequence.remove", false]], "remove_plugin() (pydicom.pixels.decoders.base.decoder method)": [[237, "pydicom.pixels.decoders.base.Decoder.remove_plugin", false]], "remove_plugin() (pydicom.pixels.encoders.base.encoder method)": [[244, "pydicom.pixels.encoders.base.Encoder.remove_plugin", false]], "remove_private_tags() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.remove_private_tags", false]], "remove_private_tags() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.remove_private_tags", false]], "remove_private_tags() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.remove_private_tags", false]], "removeprefix() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.removeprefix", false]], "removeprefix() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.removeprefix", false]], "removesuffix() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.removesuffix", false]], "removesuffix() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.removesuffix", false]], "repeater_has_keyword() (in module pydicom.datadict)": [[126, "pydicom.datadict.repeater_has_keyword", false]], "repeater_has_tag() (in module pydicom.datadict)": [[127, "pydicom.datadict.repeater_has_tag", false]], "replace() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.replace", false]], "replace() (pydicom.valuerep.da method)": [[513, "pydicom.valuerep.DA.replace", false]], "replace() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.replace", false]], "replace() (pydicom.valuerep.tm method)": [[521, "pydicom.valuerep.TM.replace", false]], "replace() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.replace", false]], "repval (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.repval", false]], "reset_data_element_callback() (in module pydicom.config)": [[99, "pydicom.config.reset_data_element_callback", false]], "reshape() (pydicom.pixels.decoders.base.decoderunner method)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.reshape", false]], "reshape_overlay_array() (in module pydicom.overlays.numpy_handler)": [[206, "pydicom.overlays.numpy_handler.reshape_overlay_array", false]], "reshape_pixel_array() (in module pydicom.pixels.utils)": [[268, "pydicom.pixels.utils.reshape_pixel_array", false]], "respiratorywaveformstorage (in module pydicom.uid)": [[462, "pydicom.uid.RespiratoryWaveformStorage", false]], "reverse() (pydicom.fileset.recordnode method)": [[173, "pydicom.fileset.RecordNode.reverse", false]], "reverse() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.reverse", false]], "reverse() (pydicom.sequence.sequence method)": [[270, "pydicom.sequence.Sequence.reverse", false]], "rfind() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.rfind", false]], "rfind() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.rfind", false]], "rindex() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.rindex", false]], "rindex() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.rindex", false]], "rjust() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.rjust", false]], "rjust() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.rjust", false]], "rlelossless (in module pydicom.uid)": [[438, "pydicom.uid.RLELossless", false]], "rlelosslessdecoder (in module pydicom.pixels.decoders)": [[235, "pydicom.pixels.decoders.RLELosslessDecoder", false]], "rlelosslessencoder (in module pydicom.pixels.encoders)": [[242, "pydicom.pixels.encoders.RLELosslessEncoder", false]], "rletransfersyntaxes (in module pydicom.uid)": [[439, "pydicom.uid.RLETransferSyntaxes", false]], "roboticarmradiationstorage (in module pydicom.uid)": [[463, "pydicom.uid.RoboticArmRadiationStorage", false]], "roboticradiationrecordstorage (in module pydicom.uid)": [[464, "pydicom.uid.RoboticRadiationRecordStorage", false]], "root (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.root", false]], "rotate() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.rotate", false]], "routinescalpelectroencephalogramwaveformstorage (in module pydicom.uid)": [[465, "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", false]], "rows (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.rows", false]], "rows (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.rows", false]], "rpartition() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.rpartition", false]], "rpartition() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.rpartition", false]], "rsplit() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.rsplit", false]], "rsplit() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.rsplit", false]], "rstrip() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.rstrip", false]], "rstrip() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.rstrip", false]], "rtbeamsdeliveryinstructionstorage (in module pydicom.uid)": [[440, "pydicom.uid.RTBeamsDeliveryInstructionStorage", false]], "rtbeamstreatmentrecordstorage (in module pydicom.uid)": [[441, "pydicom.uid.RTBeamsTreatmentRecordStorage", false]], "rtbrachyapplicationsetupdeliveryinstructionstorage (in module pydicom.uid)": [[442, "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", false]], "rtbrachytreatmentrecordstorage (in module pydicom.uid)": [[443, "pydicom.uid.RTBrachyTreatmentRecordStorage", false]], "rtdosestorage (in module pydicom.uid)": [[444, "pydicom.uid.RTDoseStorage", false]], "rtimagestorage (in module pydicom.uid)": [[445, "pydicom.uid.RTImageStorage", false]], "rtionbeamstreatmentrecordstorage (in module pydicom.uid)": [[446, "pydicom.uid.RTIonBeamsTreatmentRecordStorage", false]], "rtionplanstorage (in module pydicom.uid)": [[447, "pydicom.uid.RTIonPlanStorage", false]], "rtpatientpositionacquisitioninstructionstorage (in module pydicom.uid)": [[448, "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", false]], "rtphysicianintentstorage (in module pydicom.uid)": [[449, "pydicom.uid.RTPhysicianIntentStorage", false]], "rtplanstorage (in module pydicom.uid)": [[450, "pydicom.uid.RTPlanStorage", false]], "rtradiationrecordsetstorage (in module pydicom.uid)": [[451, "pydicom.uid.RTRadiationRecordSetStorage", false]], "rtradiationsalvagerecordstorage (in module pydicom.uid)": [[452, "pydicom.uid.RTRadiationSalvageRecordStorage", false]], "rtradiationsetdeliveryinstructionstorage (in module pydicom.uid)": [[453, "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", false]], "rtradiationsetstorage (in module pydicom.uid)": [[454, "pydicom.uid.RTRadiationSetStorage", false]], "rtsegmentannotationstorage (in module pydicom.uid)": [[455, "pydicom.uid.RTSegmentAnnotationStorage", false]], "rtstructuresetstorage (in module pydicom.uid)": [[456, "pydicom.uid.RTStructureSetStorage", false]], "rttreatmentpreparationstorage (in module pydicom.uid)": [[457, "pydicom.uid.RTTreatmentPreparationStorage", false]], "rttreatmentsummaryrecordstorage (in module pydicom.uid)": [[458, "pydicom.uid.RTTreatmentSummaryRecordStorage", false]], "same_quantum() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.same_quantum", false]], "samples_per_pixel (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.samples_per_pixel", false]], "samples_per_pixel (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.samples_per_pixel", false]], "save_as() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.save_as", false]], "save_as() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.save_as", false]], "save_as() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.save_as", false]], "scaleb() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.scaleb", false]], "secondarycaptureimagestorage (in module pydicom.uid)": [[469, "pydicom.uid.SecondaryCaptureImageStorage", false]], "seek() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.seek", false]], "seek() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.seek", false]], "seek() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.seek", false]], "segmentationstorage (in module pydicom.uid)": [[470, "pydicom.uid.SegmentationStorage", false]], "segmentedvolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[471, "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", false]], "sequence (class in pydicom.sequence)": [[270, "pydicom.sequence.Sequence", false]], "set_decoders() (pydicom.pixels.decoders.base.decoderunner method)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.set_decoders", false]], "set_encoders() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.set_encoders", false]], "set_option() (pydicom.pixels.decoders.base.decoderunner method)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.set_option", false]], "set_option() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.set_option", false]], "set_options() (pydicom.pixels.decoders.base.decoderunner method)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.set_options", false]], "set_options() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.set_options", false]], "set_original_encoding() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.set_original_encoding", false]], "set_original_encoding() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.set_original_encoding", false]], "set_original_encoding() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.set_original_encoding", false]], "set_private_encoding() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.set_private_encoding", false]], "set_source() (pydicom.pixels.decoders.base.decoderunner method)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.set_source", false]], "set_source() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.set_source", false]], "setdefault() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.setdefault", false]], "setdefault() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.setdefault", false]], "setdefault() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.setdefault", false]], "settings (class in pydicom.config)": [[57, "pydicom.config.Settings", false]], "settings (in module pydicom.config)": [[100, "pydicom.config.settings", false]], "shift() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.shift", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[208, "pydicom.pixel_data_handlers.jpeg_ls_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[209, "pydicom.pixel_data_handlers.numpy_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[210, "pydicom.pixel_data_handlers.pillow_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[212, "pydicom.pixel_data_handlers.rle_handler.should_change_PhotometricInterpretation_to_RGB", false]], "show_file_meta (in module pydicom.config)": [[101, "pydicom.config.show_file_meta", false]], "showvr (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.showVR", false]], "simplifiedadultechosrstorage (in module pydicom.uid)": [[472, "pydicom.uid.SimplifiedAdultEchoSRStorage", false]], "size_in_bytes() (in module pydicom.misc)": [[204, "pydicom.misc.size_in_bytes", false]], "sleepelectroencephalogramwaveformstorage (in module pydicom.uid)": [[473, "pydicom.uid.SleepElectroencephalogramWaveformStorage", false]], "smptest211020uncompressedinterlacedactivevideo (in module pydicom.uid)": [[466, "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", false]], "smptest211020uncompressedprogressiveactivevideo (in module pydicom.uid)": [[467, "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", false]], "smptest211030pcmdigitalaudio (in module pydicom.uid)": [[468, "pydicom.uid.SMPTEST211030PCMDigitalAudio", false]], "sopclassuid (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.SOPClassUID", false]], "sopinstanceuid (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.SOPInstanceUID", false]], "spatialfiducialsstorage (in module pydicom.uid)": [[474, "pydicom.uid.SpatialFiducialsStorage", false]], "spatialregistrationstorage (in module pydicom.uid)": [[475, "pydicom.uid.SpatialRegistrationStorage", false]], "spectacleprescriptionreportstorage (in module pydicom.uid)": [[476, "pydicom.uid.SpectaclePrescriptionReportStorage", false]], "split() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.split", false]], "split() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.split", false]], "splitlines() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.splitlines", false]], "splitlines() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.splitlines", false]], "sqrt() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.sqrt", false]], "src (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.src", false]], "src (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.src", false]], "startswith() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.startswith", false]], "startswith() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.startswith", false]], "stereometricrelationshipstorage (in module pydicom.uid)": [[477, "pydicom.uid.StereometricRelationshipStorage", false]], "strftime() (pydicom.valuerep.da method)": [[513, "pydicom.valuerep.DA.strftime", false]], "strftime() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.strftime", false]], "strftime() (pydicom.valuerep.tm method)": [[521, "pydicom.valuerep.TM.strftime", false]], "strip() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.strip", false]], "strip() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.strip", false]], "strptime() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.strptime", false]], "subjectiverefractionmeasurementsstorage (in module pydicom.uid)": [[478, "pydicom.uid.SubjectiveRefractionMeasurementsStorage", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[208, "pydicom.pixel_data_handlers.jpeg_ls_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.numpy_handler)": [[209, "pydicom.pixel_data_handlers.numpy_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pillow_handler)": [[210, "pydicom.pixel_data_handlers.pillow_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.rle_handler)": [[212, "pydicom.pixel_data_handlers.rle_handler.supports_transfer_syntax", false]], "surfacescanmeshstorage (in module pydicom.uid)": [[479, "pydicom.uid.SurfaceScanMeshStorage", false]], "surfacescanpointcloudstorage (in module pydicom.uid)": [[480, "pydicom.uid.SurfaceScanPointCloudStorage", false]], "surfacesegmentationstorage (in module pydicom.uid)": [[481, "pydicom.uid.SurfaceSegmentationStorage", false]], "swapcase() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.swapcase", false]], "swapcase() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.swapcase", false]], "tag (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.tag", false]], "tag (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.tag", false]], "tag() (in module pydicom.tag)": [[272, "pydicom.tag.Tag", false]], "tag_for_keyword() (in module pydicom.datadict)": [[128, "pydicom.datadict.tag_for_keyword", false]], "tag_in_exception() (in module pydicom.tag)": [[274, "pydicom.tag.tag_in_exception", false]], "tell() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.tell", false]], "tell() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.tell", false]], "tell() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.tell", false]], "time() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.time", false]], "timestamp (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.timestamp", false]], "timestamp() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.timestamp", false]], "timetuple() (pydicom.valuerep.da method)": [[513, "pydicom.valuerep.DA.timetuple", false]], "timetuple() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.timetuple", false]], "timetz() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.timetz", false]], "title() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.title", false]], "title() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.title", false]], "tm (class in pydicom.valuerep)": [[521, "pydicom.valuerep.TM", false]], "to_bytes() (pydicom.tag.basetag method)": [[271, "pydicom.tag.BaseTag.to_bytes", false]], "to_bytes() (pydicom.valuerep.is method)": [[518, "pydicom.valuerep.IS.to_bytes", false]], "to_eng_string() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.to_eng_string", false]], "to_integral() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.to_integral", false]], "to_integral_exact() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.to_integral_exact", false]], "to_integral_value() (pydicom.valuerep.dsdecimal method)": [[515, "pydicom.valuerep.DSdecimal.to_integral_value", false]], "to_json() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.to_json", false]], "to_json() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.to_json", false]], "to_json() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.to_json", false]], "to_json() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.to_json", false]], "to_json_dict() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.to_json_dict", false]], "to_json_dict() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.to_json_dict", false]], "to_json_dict() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.to_json_dict", false]], "to_json_dict() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.to_json_dict", false]], "today() (pydicom.valuerep.da method)": [[513, "pydicom.valuerep.DA.today", false]], "today() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.today", false]], "tomotherapeuticradiationrecordstorage (in module pydicom.uid)": [[482, "pydicom.uid.TomotherapeuticRadiationRecordStorage", false]], "tomotherapeuticradiationstorage (in module pydicom.uid)": [[483, "pydicom.uid.TomotherapeuticRadiationStorage", false]], "toordinal() (pydicom.valuerep.da method)": [[513, "pydicom.valuerep.DA.toordinal", false]], "toordinal() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.toordinal", false]], "top() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.top", false]], "top() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.top", false]], "top() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.top", false]], "tractographyresultsstorage (in module pydicom.uid)": [[484, "pydicom.uid.TractographyResultsStorage", false]], "trait_names() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.trait_names", false]], "trait_names() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.trait_names", false]], "trait_names() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.trait_names", false]], "transfer_syntax (pydicom.pixels.decoders.base.decoderunner property)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.transfer_syntax", false]], "transfer_syntax (pydicom.pixels.encoders.base.encoderunner property)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.transfer_syntax", false]], "transfersyntaxuid (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.TransferSyntaxUID", false]], "translate() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.translate", false]], "translate() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.translate", false]], "tupletag() (in module pydicom.tag)": [[273, "pydicom.tag.TupleTag", false]], "twelveleadecgwaveformstorage (in module pydicom.uid)": [[485, "pydicom.uid.TwelveLeadECGWaveformStorage", false]], "type (pydicom.uid.uid property)": [[486, "pydicom.uid.UID.type", false]], "tzname() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.tzname", false]], "tzname() (pydicom.valuerep.tm method)": [[521, "pydicom.valuerep.TM.tzname", false]], "uid (class in pydicom.uid)": [[486, "pydicom.uid.UID", false]], "uid (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.UID", false]], "uid (pydicom.pixels.decoders.base.decoder property)": [[237, "pydicom.pixels.decoders.base.Decoder.UID", false]], "uid (pydicom.pixels.encoders.base.encoder property)": [[244, "pydicom.pixels.encoders.base.Encoder.UID", false]], "ultrasoundimagestorage (in module pydicom.uid)": [[487, "pydicom.uid.UltrasoundImageStorage", false]], "ultrasoundmultiframeimagestorage (in module pydicom.uid)": [[488, "pydicom.uid.UltrasoundMultiFrameImageStorage", false]], "uncompressedtransfersyntaxes (in module pydicom.uid)": [[489, "pydicom.uid.UncompressedTransferSyntaxes", false]], "unpack_bits() (in module pydicom.pixels)": [[257, "pydicom.pixels.unpack_bits", false]], "unpack_bits() (in module pydicom.pixels.utils)": [[269, "pydicom.pixels.utils.unpack_bits", false]], "update() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.update", false]], "update() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.update", false]], "update() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.update", false]], "upper() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.upper", false]], "upper() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.upper", false]], "use_ds_decimal (in module pydicom.config)": [[102, "pydicom.config.use_DS_decimal", false]], "use_ds_numpy (in module pydicom.config)": [[103, "pydicom.config.use_DS_numpy", false]], "use_is_numpy (in module pydicom.config)": [[104, "pydicom.config.use_IS_numpy", false]], "utcfromtimestamp() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.utcfromtimestamp", false]], "utcnow() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.utcnow", false]], "utcoffset() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.utcoffset", false]], "utcoffset() (pydicom.valuerep.tm method)": [[521, "pydicom.valuerep.TM.utcoffset", false]], "utctimetuple() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.utctimetuple", false]], "validate() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.validate", false]], "validate() (pydicom.dataset.filemetadataset static method)": [[134, "pydicom.dataset.FileMetaDataset.validate", false]], "validate() (pydicom.pixels.decoders.base.decoderunner method)": [[236, "pydicom.pixels.decoders.base.DecodeRunner.validate", false]], "validate() (pydicom.pixels.encoders.base.encoderunner method)": [[243, "pydicom.pixels.encoders.base.EncodeRunner.validate", false]], "validate_file_meta() (in module pydicom.dataset)": [[136, "pydicom.dataset.validate_file_meta", false]], "value (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.value", false]], "value (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.value", false]], "value_tell (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.value_tell", false]], "values() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.values", false]], "values() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.values", false]], "values() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.values", false]], "variablemodalitylutsoftcopypresentationstatestorage (in module pydicom.uid)": [[495, "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", false]], "videoendoscopicimagestorage (in module pydicom.uid)": [[496, "pydicom.uid.VideoEndoscopicImageStorage", false]], "videomicroscopicimagestorage (in module pydicom.uid)": [[497, "pydicom.uid.VideoMicroscopicImageStorage", false]], "videophotographicimagestorage (in module pydicom.uid)": [[498, "pydicom.uid.VideoPhotographicImageStorage", false]], "visualacuitymeasurementsstorage (in module pydicom.uid)": [[499, "pydicom.uid.VisualAcuityMeasurementsStorage", false]], "vlendoscopicimagestorage (in module pydicom.uid)": [[490, "pydicom.uid.VLEndoscopicImageStorage", false]], "vlmicroscopicimagestorage (in module pydicom.uid)": [[491, "pydicom.uid.VLMicroscopicImageStorage", false]], "vlphotographicimagestorage (in module pydicom.uid)": [[492, "pydicom.uid.VLPhotographicImageStorage", false]], "vlslidecoordinatesmicroscopicimagestorage (in module pydicom.uid)": [[493, "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", false]], "vlwholeslidemicroscopyimagestorage (in module pydicom.uid)": [[494, "pydicom.uid.VLWholeSlideMicroscopyImageStorage", false]], "vm (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.VM", false]], "volumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[500, "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", false]], "vr (class in pydicom.valuerep)": [[522, "pydicom.valuerep.VR", false]], "vr (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.VR", false]], "vr (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.VR", false]], "walk() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.walk", false]], "walk() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.walk", false]], "walk() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.walk", false]], "warn (in module pydicom.config)": [[88, "pydicom.config.WARN", false]], "waveform_array() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.waveform_array", false]], "waveform_array() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.waveform_array", false]], "waveform_array() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.waveform_array", false]], "weekday() (pydicom.valuerep.da method)": [[513, "pydicom.valuerep.DA.weekday", false]], "weekday() (pydicom.valuerep.dt method)": [[517, "pydicom.valuerep.DT.weekday", false]], "widefieldophthalmicphotography3dcoordinatesimagestorage (in module pydicom.uid)": [[501, "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", false]], "widefieldophthalmicphotographystereographicprojectionimagestorage (in module pydicom.uid)": [[502, "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", false]], "with_traceback() (pydicom.errors.invaliddicomerror method)": [[155, "pydicom.errors.InvalidDicomError.with_traceback", false]], "write() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.write", false]], "write() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.write", false]], "write() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.write", false]], "write() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.write", false]], "write_atvalue() (in module pydicom.filewriter)": [[185, "pydicom.filewriter.write_ATvalue", false]], "write_da() (in module pydicom.filewriter)": [[186, "pydicom.filewriter.write_DA", false]], "write_data_element() (in module pydicom.filewriter)": [[194, "pydicom.filewriter.write_data_element", false]], "write_dataset() (in module pydicom.filewriter)": [[195, "pydicom.filewriter.write_dataset", false]], "write_dt() (in module pydicom.filewriter)": [[187, "pydicom.filewriter.write_DT", false]], "write_file_meta_info() (in module pydicom.filewriter)": [[196, "pydicom.filewriter.write_file_meta_info", false]], "write_number_string() (in module pydicom.filewriter)": [[197, "pydicom.filewriter.write_number_string", false]], "write_numbers() (in module pydicom.filewriter)": [[198, "pydicom.filewriter.write_numbers", false]], "write_obvalue() (in module pydicom.filewriter)": [[188, "pydicom.filewriter.write_OBvalue", false]], "write_owvalue() (in module pydicom.filewriter)": [[189, "pydicom.filewriter.write_OWvalue", false]], "write_pn() (in module pydicom.filewriter)": [[190, "pydicom.filewriter.write_PN", false]], "write_sequence() (in module pydicom.filewriter)": [[199, "pydicom.filewriter.write_sequence", false]], "write_sequence_item() (in module pydicom.filewriter)": [[200, "pydicom.filewriter.write_sequence_item", false]], "write_string() (in module pydicom.filewriter)": [[201, "pydicom.filewriter.write_string", false]], "write_tag() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.write_tag", false]], "write_tag() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.write_tag", false]], "write_tag() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.write_tag", false]], "write_text() (in module pydicom.filewriter)": [[202, "pydicom.filewriter.write_text", false]], "write_tm() (in module pydicom.filewriter)": [[191, "pydicom.filewriter.write_TM", false]], "write_ui() (in module pydicom.filewriter)": [[192, "pydicom.filewriter.write_UI", false]], "write_ul() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.write_UL", false]], "write_ul() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.write_UL", false]], "write_ul() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.write_UL", false]], "write_un() (in module pydicom.filewriter)": [[193, "pydicom.filewriter.write_UN", false]], "write_us() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.write_US", false]], "write_us() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.write_US", false]], "write_us() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.write_US", false]], "writing_validation_mode (pydicom.config.settings property)": [[57, "pydicom.config.Settings.writing_validation_mode", false]], "xadefinedprocedureprotocolstorage (in module pydicom.uid)": [[503, "pydicom.uid.XADefinedProcedureProtocolStorage", false]], "xaperformedprocedureprotocolstorage (in module pydicom.uid)": [[504, "pydicom.uid.XAPerformedProcedureProtocolStorage", false]], "xaxrfgrayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[505, "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", false]], "xray3dangiographicimagestorage (in module pydicom.uid)": [[506, "pydicom.uid.XRay3DAngiographicImageStorage", false]], "xray3dcraniofacialimagestorage (in module pydicom.uid)": [[507, "pydicom.uid.XRay3DCraniofacialImageStorage", false]], "xrayangiographicimagestorage (in module pydicom.uid)": [[508, "pydicom.uid.XRayAngiographicImageStorage", false]], "xrayradiationdosesrstorage (in module pydicom.uid)": [[509, "pydicom.uid.XRayRadiationDoseSRStorage", false]], "xrayradiofluoroscopicimagestorage (in module pydicom.uid)": [[510, "pydicom.uid.XRayRadiofluoroscopicImageStorage", false]], "zfill() (pydicom.uid.uid method)": [[486, "pydicom.uid.UID.zfill", false]], "zfill() (pydicom.valuerep.vr method)": [[522, "pydicom.valuerep.VR.zfill", false]]}, "objects": {"": [[549, 0, 0, "-", "pydicom"]], "pydicom": [[68, 0, 0, "-", "encaps"], [551, 0, 0, "-", "overlays"], [548, 0, 0, "-", "pixel_data_handlers"], [552, 0, 0, "-", "pixels"], [557, 0, 0, "-", "uid"], [558, 0, 0, "-", "waveforms"]], "pydicom.charset": [[77, 1, 1, "", "convert_encodings"], [78, 1, 1, "", "decode_bytes"], [79, 1, 1, "", "decode_element"], [80, 1, 1, "", "encode_string"]], "pydicom.config": [[81, 2, 1, "", "APPLY_J2K_CORRECTIONS"], [82, 1, 1, "", "DS_decimal"], [83, 1, 1, "", "DS_numpy"], [84, 2, 1, "", "IGNORE"], [85, 2, 1, "", "INVALID_KEYWORD_BEHAVIOR"], [86, 2, 1, "", "INVALID_KEY_BEHAVIOR"], [87, 2, 1, "", "RAISE"], [57, 3, 1, "", "Settings"], [88, 2, 1, "", "WARN"], [89, 2, 1, "", "allow_DS_float"], [90, 2, 1, "", "assume_implicit_vr_switch"], [91, 2, 1, "", "convert_wrong_length_to_UN"], [92, 2, 1, "", "data_element_callback"], [93, 2, 1, "", "data_element_callback_kwargs"], [94, 2, 1, "", "datetime_conversion"], [95, 1, 1, "", "debug"], [96, 2, 1, "", "enforce_valid_values"], [97, 1, 1, "", "future_behavior"], [98, 2, 1, "", "pixel_data_handlers"], [99, 1, 1, "", "reset_data_element_callback"], [100, 2, 1, "", "settings"], [101, 2, 1, "", "show_file_meta"], [102, 2, 1, "", "use_DS_decimal"], [103, 2, 1, "", "use_DS_numpy"], [104, 2, 1, "", "use_IS_numpy"]], "pydicom.config.Settings": [[57, 4, 1, "", "infer_sq_for_un_vr"], [57, 4, 1, "", "reading_validation_mode"], [57, 4, 1, "", "writing_validation_mode"]], "pydicom.data": [[105, 1, 1, "", "get_charset_files"], [106, 1, 1, "", "get_palette_files"], [107, 1, 1, "", "get_testdata_file"], [108, 1, 1, "", "get_testdata_files"]], "pydicom.datadict": [[109, 1, 1, "", "add_dict_entries"], [110, 1, 1, "", "add_dict_entry"], [111, 1, 1, "", "add_private_dict_entries"], [112, 1, 1, "", "add_private_dict_entry"], [113, 1, 1, "", "dictionary_VM"], [114, 1, 1, "", "dictionary_VR"], [115, 1, 1, "", "dictionary_description"], [116, 1, 1, "", "dictionary_has_tag"], [117, 1, 1, "", "dictionary_is_retired"], [118, 1, 1, "", "dictionary_keyword"], [119, 1, 1, "", "get_entry"], [120, 1, 1, "", "get_private_entry"], [121, 1, 1, "", "keyword_for_tag"], [122, 1, 1, "", "mask_match"], [123, 1, 1, "", "private_dictionary_VM"], [124, 1, 1, "", "private_dictionary_VR"], [125, 1, 1, "", "private_dictionary_description"], [126, 1, 1, "", "repeater_has_keyword"], [127, 1, 1, "", "repeater_has_tag"], [128, 1, 1, "", "tag_for_keyword"]], "pydicom.dataelem": [[129, 3, 1, "", "DataElement"], [130, 1, 1, "", "DataElement_from_raw"], [131, 3, 1, "", "RawDataElement"]], "pydicom.dataelem.DataElement": [[129, 4, 1, "", "VM"], [129, 5, 1, "", "VR"], [129, 6, 1, "", "__init__"], [129, 6, 1, "", "clear"], [129, 5, 1, "", "descripWidth"], [129, 4, 1, "", "empty_value"], [129, 6, 1, "", "from_json"], [129, 4, 1, "", "is_empty"], [129, 4, 1, "", "is_private"], [129, 4, 1, "", "is_retired"], [129, 5, 1, "", "is_undefined_length"], [129, 4, 1, "", "keyword"], [129, 5, 1, "", "maxBytesToDisplay"], [129, 4, 1, "", "name"], [129, 4, 1, "", "repval"], [129, 5, 1, "", "showVR"], [129, 5, 1, "", "tag"], [129, 6, 1, "", "to_json"], [129, 6, 1, "", "to_json_dict"], [129, 6, 1, "", "validate"], [129, 4, 1, "", "value"]], "pydicom.dataelem.RawDataElement": [[131, 5, 1, "", "VR"], [131, 6, 1, "", "__init__"], [131, 6, 1, "", "count"], [131, 6, 1, "", "index"], [131, 5, 1, "", "is_implicit_VR"], [131, 5, 1, "", "is_little_endian"], [131, 5, 1, "", "is_raw"], [131, 5, 1, "", "length"], [131, 5, 1, "", "tag"], [131, 5, 1, "", "value"], [131, 5, 1, "", "value_tell"]], "pydicom.dataset": [[132, 3, 1, "", "Dataset"], [133, 3, 1, "", "FileDataset"], [134, 3, 1, "", "FileMetaDataset"], [135, 3, 1, "", "PrivateBlock"], [136, 1, 1, "", "validate_file_meta"]], "pydicom.dataset.Dataset": [[132, 6, 1, "", "__init__"], [132, 6, 1, "", "add"], [132, 6, 1, "", "add_new"], [132, 6, 1, "", "add_new_private"], [132, 6, 1, "", "clear"], [132, 6, 1, "", "compress"], [132, 6, 1, "", "convert_pixel_data"], [132, 6, 1, "", "copy"], [132, 6, 1, "", "data_element"], [132, 6, 1, "", "decode"], [132, 6, 1, "", "decompress"], [132, 5, 1, "", "default_element_format"], [132, 5, 1, "", "default_sequence_element_format"], [132, 6, 1, "", "dir"], [132, 6, 1, "", "elements"], [132, 6, 1, "", "ensure_file_meta"], [132, 6, 1, "", "formatted_lines"], [132, 6, 1, "", "from_json"], [132, 6, 1, "", "get"], [132, 6, 1, "", "get_item"], [132, 6, 1, "", "get_private_item"], [132, 6, 1, "", "group_dataset"], [132, 5, 1, "", "indent_chars"], [132, 4, 1, "", "is_implicit_VR"], [132, 4, 1, "", "is_little_endian"], [132, 4, 1, "", "is_original_encoding"], [132, 6, 1, "", "items"], [132, 6, 1, "", "iterall"], [132, 6, 1, "", "keys"], [132, 4, 1, "", "original_character_set"], [132, 4, 1, "", "original_encoding"], [132, 6, 1, "", "overlay_array"], [132, 4, 1, "", "pixel_array"], [132, 6, 1, "", "pop"], [132, 6, 1, "", "popitem"], [132, 6, 1, "", "private_block"], [132, 6, 1, "", "private_creators"], [132, 4, 1, "", "read_encoding"], [132, 4, 1, "", "read_implicit_vr"], [132, 4, 1, "", "read_little_endian"], [132, 6, 1, "", "remove_private_tags"], [132, 6, 1, "", "save_as"], [132, 6, 1, "", "set_original_encoding"], [132, 6, 1, "", "setdefault"], [132, 6, 1, "", "to_json"], [132, 6, 1, "", "to_json_dict"], [132, 6, 1, "", "top"], [132, 6, 1, "", "trait_names"], [132, 6, 1, "", "update"], [132, 6, 1, "", "values"], [132, 6, 1, "", "walk"], [132, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileDataset": [[133, 6, 1, "", "__init__"], [133, 6, 1, "", "add"], [133, 6, 1, "", "add_new"], [133, 6, 1, "", "add_new_private"], [133, 6, 1, "", "clear"], [133, 6, 1, "", "compress"], [133, 6, 1, "", "convert_pixel_data"], [133, 6, 1, "", "copy"], [133, 6, 1, "", "data_element"], [133, 6, 1, "", "decode"], [133, 6, 1, "", "decompress"], [133, 6, 1, "", "dir"], [133, 6, 1, "", "elements"], [133, 6, 1, "", "ensure_file_meta"], [133, 5, 1, "", "file_meta"], [133, 5, 1, "", "filename"], [133, 5, 1, "", "fileobj_type"], [133, 6, 1, "", "formatted_lines"], [133, 6, 1, "", "from_json"], [133, 6, 1, "", "get"], [133, 6, 1, "", "get_item"], [133, 6, 1, "", "get_private_item"], [133, 6, 1, "", "group_dataset"], [133, 4, 1, "", "is_implicit_VR"], [133, 4, 1, "", "is_little_endian"], [133, 4, 1, "", "is_original_encoding"], [133, 6, 1, "", "items"], [133, 6, 1, "", "iterall"], [133, 6, 1, "", "keys"], [133, 4, 1, "", "original_character_set"], [133, 4, 1, "", "original_encoding"], [133, 6, 1, "", "overlay_array"], [133, 4, 1, "", "pixel_array"], [133, 6, 1, "", "pop"], [133, 6, 1, "", "popitem"], [133, 5, 1, "", "preamble"], [133, 6, 1, "", "private_block"], [133, 6, 1, "", "private_creators"], [133, 4, 1, "", "read_encoding"], [133, 4, 1, "", "read_implicit_vr"], [133, 4, 1, "", "read_little_endian"], [133, 6, 1, "", "remove_private_tags"], [133, 6, 1, "", "save_as"], [133, 6, 1, "", "set_original_encoding"], [133, 6, 1, "", "setdefault"], [133, 5, 1, "", "timestamp"], [133, 6, 1, "", "to_json"], [133, 6, 1, "", "to_json_dict"], [133, 6, 1, "", "top"], [133, 6, 1, "", "trait_names"], [133, 6, 1, "", "update"], [133, 6, 1, "", "values"], [133, 6, 1, "", "walk"], [133, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileMetaDataset": [[134, 6, 1, "", "__init__"], [134, 6, 1, "", "add"], [134, 6, 1, "", "add_new"], [134, 6, 1, "", "add_new_private"], [134, 6, 1, "", "clear"], [134, 6, 1, "", "compress"], [134, 6, 1, "", "convert_pixel_data"], [134, 6, 1, "", "copy"], [134, 6, 1, "", "data_element"], [134, 6, 1, "", "decode"], [134, 6, 1, "", "decompress"], [134, 6, 1, "", "dir"], [134, 6, 1, "", "elements"], [134, 6, 1, "", "ensure_file_meta"], [134, 6, 1, "", "formatted_lines"], [134, 6, 1, "", "from_json"], [134, 6, 1, "", "get"], [134, 6, 1, "", "get_item"], [134, 6, 1, "", "get_private_item"], [134, 6, 1, "", "group_dataset"], [134, 4, 1, "", "is_implicit_VR"], [134, 4, 1, "", "is_little_endian"], [134, 4, 1, "", "is_original_encoding"], [134, 6, 1, "", "items"], [134, 6, 1, "", "iterall"], [134, 6, 1, "", "keys"], [134, 4, 1, "", "original_character_set"], [134, 4, 1, "", "original_encoding"], [134, 6, 1, "", "overlay_array"], [134, 4, 1, "", "pixel_array"], [134, 6, 1, "", "pop"], [134, 6, 1, "", "popitem"], [134, 6, 1, "", "private_block"], [134, 6, 1, "", "private_creators"], [134, 4, 1, "", "read_encoding"], [134, 4, 1, "", "read_implicit_vr"], [134, 4, 1, "", "read_little_endian"], [134, 6, 1, "", "remove_private_tags"], [134, 6, 1, "", "save_as"], [134, 6, 1, "", "set_original_encoding"], [134, 6, 1, "", "setdefault"], [134, 6, 1, "", "to_json"], [134, 6, 1, "", "to_json_dict"], [134, 6, 1, "", "top"], [134, 6, 1, "", "trait_names"], [134, 6, 1, "", "update"], [134, 6, 1, "", "validate"], [134, 6, 1, "", "values"], [134, 6, 1, "", "walk"], [134, 6, 1, "", "waveform_array"]], "pydicom.dataset.PrivateBlock": [[135, 6, 1, "", "__init__"], [135, 6, 1, "", "add_new"], [135, 5, 1, "", "block_start"], [135, 5, 1, "", "dataset"], [135, 6, 1, "", "get_tag"], [135, 5, 1, "", "group"], [135, 5, 1, "", "private_creator"]], "pydicom.encaps": [[137, 1, 1, "", "decode_data_sequence"], [138, 1, 1, "", "defragment_data"], [139, 1, 1, "", "encapsulate"], [140, 1, 1, "", "encapsulate_extended"], [141, 1, 1, "", "fragment_frame"], [142, 1, 1, "", "generate_fragmented_frames"], [143, 1, 1, "", "generate_fragments"], [144, 1, 1, "", "generate_frames"], [145, 1, 1, "", "generate_pixel_data"], [146, 1, 1, "", "generate_pixel_data_fragment"], [147, 1, 1, "", "generate_pixel_data_frame"], [148, 1, 1, "", "get_frame"], [149, 1, 1, "", "get_frame_offsets"], [150, 1, 1, "", "itemize_fragment"], [151, 1, 1, "", "itemize_frame"], [152, 1, 1, "", "parse_basic_offsets"], [153, 1, 1, "", "parse_fragments"], [154, 1, 1, "", "read_item"]], "pydicom.errors": [[155, 7, 1, "", "InvalidDicomError"]], "pydicom.errors.InvalidDicomError": [[155, 6, 1, "", "with_traceback"]], "pydicom.filebase": [[156, 3, 1, "", "DicomBytesIO"], [157, 1, 1, "", "DicomFile"], [158, 3, 1, "", "DicomFileLike"], [159, 3, 1, "", "DicomIO"]], "pydicom.filebase.DicomBytesIO": [[156, 6, 1, "", "__init__"], [156, 6, 1, "", "close"], [156, 4, 1, "", "is_implicit_VR"], [156, 4, 1, "", "is_little_endian"], [156, 4, 1, "", "name"], [156, 4, 1, "", "parent"], [156, 6, 1, "", "read"], [156, 6, 1, "", "read_UL"], [156, 6, 1, "", "read_US"], [156, 6, 1, "", "read_exact"], [156, 6, 1, "", "read_tag"], [156, 6, 1, "", "seek"], [156, 6, 1, "", "tell"], [156, 6, 1, "", "write"], [156, 6, 1, "", "write_UL"], [156, 6, 1, "", "write_US"], [156, 6, 1, "", "write_tag"]], "pydicom.filebase.DicomFileLike": [[158, 6, 1, "", "__init__"], [158, 6, 1, "", "close"], [158, 4, 1, "", "is_implicit_VR"], [158, 4, 1, "", "is_little_endian"], [158, 4, 1, "", "name"], [158, 4, 1, "", "parent"], [158, 6, 1, "", "read"], [158, 6, 1, "", "read_UL"], [158, 6, 1, "", "read_US"], [158, 6, 1, "", "read_exact"], [158, 6, 1, "", "read_tag"], [158, 6, 1, "", "seek"], [158, 6, 1, "", "tell"], [158, 6, 1, "", "write"], [158, 6, 1, "", "write_UL"], [158, 6, 1, "", "write_US"], [158, 6, 1, "", "write_tag"]], "pydicom.filebase.DicomIO": [[159, 6, 1, "", "__init__"], [159, 6, 1, "", "close"], [159, 4, 1, "", "is_implicit_VR"], [159, 4, 1, "", "is_little_endian"], [159, 4, 1, "", "name"], [159, 4, 1, "", "parent"], [159, 6, 1, "", "read"], [159, 6, 1, "", "read_UL"], [159, 6, 1, "", "read_US"], [159, 6, 1, "", "read_exact"], [159, 6, 1, "", "read_tag"], [159, 6, 1, "", "seek"], [159, 6, 1, "", "tell"], [159, 6, 1, "", "write"], [159, 6, 1, "", "write_UL"], [159, 6, 1, "", "write_US"], [159, 6, 1, "", "write_tag"]], "pydicom.filereader": [[160, 1, 1, "", "data_element_generator"], [161, 1, 1, "", "data_element_offset_to_value"], [162, 1, 1, "", "dcmread"], [163, 1, 1, "", "read_dataset"], [164, 1, 1, "", "read_deferred_data_element"], [165, 1, 1, "", "read_file_meta_info"], [166, 1, 1, "", "read_partial"], [167, 1, 1, "", "read_preamble"], [168, 1, 1, "", "read_sequence"], [169, 1, 1, "", "read_sequence_item"]], "pydicom.fileset": [[170, 2, 1, "", "DIRECTORY_RECORDERS"], [171, 3, 1, "", "FileInstance"], [172, 3, 1, "", "FileSet"], [173, 3, 1, "", "RecordNode"], [174, 1, 1, "", "generate_filename"], [175, 1, 1, "", "is_conformant_file_id"]], "pydicom.fileset.FileInstance": [[171, 4, 1, "", "FileID"], [171, 4, 1, "", "SOPClassUID"], [171, 4, 1, "", "SOPInstanceUID"], [171, 4, 1, "", "TransferSyntaxUID"], [171, 6, 1, "", "__init__"], [171, 4, 1, "", "file_set"], [171, 4, 1, "", "for_addition"], [171, 4, 1, "", "for_moving"], [171, 4, 1, "", "for_removal"], [171, 4, 1, "", "is_private"], [171, 4, 1, "", "is_staged"], [171, 6, 1, "", "load"], [171, 5, 1, "", "node"], [171, 4, 1, "", "path"]], "pydicom.fileset.FileSet": [[172, 4, 1, "", "ID"], [172, 4, 1, "", "UID"], [172, 6, 1, "", "__init__"], [172, 6, 1, "", "add"], [172, 6, 1, "", "add_custom"], [172, 6, 1, "", "clear"], [172, 6, 1, "", "copy"], [172, 4, 1, "", "descriptor_character_set"], [172, 4, 1, "", "descriptor_file_id"], [172, 6, 1, "", "find"], [172, 6, 1, "", "find_values"], [172, 4, 1, "", "is_staged"], [172, 6, 1, "", "load"], [172, 4, 1, "", "path"], [172, 6, 1, "", "remove"], [172, 6, 1, "", "write"]], "pydicom.fileset.RecordNode": [[173, 6, 1, "", "__init__"], [173, 6, 1, "", "add"], [173, 4, 1, "", "ancestors"], [173, 5, 1, "", "children"], [173, 4, 1, "", "component"], [173, 4, 1, "", "depth"], [173, 4, 1, "", "file_set"], [173, 4, 1, "", "has_instance"], [173, 4, 1, "", "index"], [173, 5, 1, "", "instance"], [173, 4, 1, "", "is_root"], [173, 4, 1, "", "key"], [173, 4, 1, "", "next"], [173, 4, 1, "", "parent"], [173, 6, 1, "", "prettify"], [173, 4, 1, "", "previous"], [173, 4, 1, "", "record_type"], [173, 6, 1, "", "remove"], [173, 6, 1, "", "reverse"], [173, 4, 1, "", "root"]], "pydicom.fileutil": [[176, 1, 1, "", "absorb_delimiter_item"], [177, 1, 1, "", "find_bytes"], [178, 1, 1, "", "find_delimiter"], [179, 1, 1, "", "length_of_undefined_length"], [180, 1, 1, "", "read_undefined_length_value"]], "pydicom.filewriter": [[181, 1, 1, "", "correct_ambiguous_vr"], [182, 1, 1, "", "correct_ambiguous_vr_element"], [183, 1, 1, "", "dcmwrite"], [184, 1, 1, "", "multi_string"], [185, 1, 1, "", "write_ATvalue"], [186, 1, 1, "", "write_DA"], [187, 1, 1, "", "write_DT"], [188, 1, 1, "", "write_OBvalue"], [189, 1, 1, "", "write_OWvalue"], [190, 1, 1, "", "write_PN"], [191, 1, 1, "", "write_TM"], [192, 1, 1, "", "write_UI"], [193, 1, 1, "", "write_UN"], [194, 1, 1, "", "write_data_element"], [195, 1, 1, "", "write_dataset"], [196, 1, 1, "", "write_file_meta_info"], [197, 1, 1, "", "write_number_string"], [198, 1, 1, "", "write_numbers"], [199, 1, 1, "", "write_sequence"], [200, 1, 1, "", "write_sequence_item"], [201, 1, 1, "", "write_string"], [202, 1, 1, "", "write_text"]], "pydicom.misc": [[203, 1, 1, "", "is_dicom"], [204, 1, 1, "", "size_in_bytes"]], "pydicom.multival": [[205, 3, 1, "", "MultiValue"]], "pydicom.multival.MultiValue": [[205, 6, 1, "", "__init__"], [205, 6, 1, "", "append"], [205, 6, 1, "", "clear"], [205, 6, 1, "", "count"], [205, 6, 1, "", "extend"], [205, 6, 1, "", "index"], [205, 6, 1, "", "insert"], [205, 6, 1, "", "pop"], [205, 6, 1, "", "remove"], [205, 6, 1, "", "reverse"]], "pydicom.overlays": [[206, 0, 0, "-", "numpy_handler"]], "pydicom.overlays.numpy_handler": [[206, 1, 1, "", "get_expected_length"], [206, 1, 1, "", "get_overlay_array"], [206, 1, 1, "", "is_available"], [206, 1, 1, "", "reshape_overlay_array"]], "pydicom.pixel_data_handlers": [[207, 0, 0, "-", "gdcm_handler"], [208, 0, 0, "-", "jpeg_ls_handler"], [209, 0, 0, "-", "numpy_handler"], [210, 0, 0, "-", "pillow_handler"], [211, 0, 0, "-", "pylibjpeg_handler"], [212, 0, 0, "-", "rle_handler"]], "pydicom.pixel_data_handlers.gdcm_handler": [[207, 1, 1, "", "create_data_element"], [207, 1, 1, "", "create_image"], [207, 1, 1, "", "get_pixeldata"], [207, 1, 1, "", "is_available"], [207, 1, 1, "", "needs_to_convert_to_RGB"], [207, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [207, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[208, 1, 1, "", "get_pixeldata"], [208, 1, 1, "", "is_available"], [208, 1, 1, "", "needs_to_convert_to_RGB"], [208, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [208, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.numpy_handler": [[209, 1, 1, "", "get_pixeldata"], [209, 1, 1, "", "is_available"], [209, 1, 1, "", "needs_to_convert_to_RGB"], [209, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [209, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pillow_handler": [[210, 1, 1, "", "get_pixeldata"], [210, 1, 1, "", "is_available"], [210, 1, 1, "", "needs_to_convert_to_RGB"], [210, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [210, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[211, 1, 1, "", "as_array"], [211, 1, 1, "", "generate_frames"], [211, 1, 1, "", "get_pixeldata"], [211, 1, 1, "", "is_available"], [211, 1, 1, "", "needs_to_convert_to_RGB"], [211, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [211, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.rle_handler": [[212, 1, 1, "", "get_pixeldata"], [212, 1, 1, "", "is_available"], [212, 1, 1, "", "needs_to_convert_to_RGB"], [212, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [212, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixels": [[213, 1, 1, "", "apply_color_lut"], [214, 1, 1, "", "apply_modality_lut"], [215, 1, 1, "", "apply_voi"], [216, 1, 1, "", "apply_voi_lut"], [217, 1, 1, "", "apply_windowing"], [218, 1, 1, "", "as_pixel_options"], [219, 1, 1, "", "convert_color_space"], [553, 0, 0, "-", "decoders"], [554, 0, 0, "-", "encoders"], [245, 1, 1, "", "get_decoder"], [246, 1, 1, "", "get_encoder"], [247, 1, 1, "", "iter_pixels"], [248, 1, 1, "", "pack_bits"], [249, 1, 1, "", "pixel_array"], [555, 0, 0, "-", "processing"], [257, 1, 1, "", "unpack_bits"], [556, 0, 0, "-", "utils"]], "pydicom.pixels.decoders": [[220, 2, 1, "", "DeflatedExplicitVRLittleEndianDecoder"], [221, 2, 1, "", "ExplicitVRBigEndianDecoder"], [222, 2, 1, "", "ExplicitVRLittleEndianDecoder"], [223, 2, 1, "", "HTJ2KDecoder"], [224, 2, 1, "", "HTJ2KLosslessDecoder"], [225, 2, 1, "", "HTJ2KLosslessRPCLDecoder"], [226, 2, 1, "", "ImplicitVRLittleEndianDecoder"], [227, 2, 1, "", "JPEG2000Decoder"], [228, 2, 1, "", "JPEG2000LosslessDecoder"], [229, 2, 1, "", "JPEGBaseline8BitDecoder"], [230, 2, 1, "", "JPEGExtended12BitDecoder"], [231, 2, 1, "", "JPEGLSLosslessDecoder"], [232, 2, 1, "", "JPEGLSNearLosslessDecoder"], [233, 2, 1, "", "JPEGLosslessDecoder"], [234, 2, 1, "", "JPEGLosslessSV1Decoder"], [235, 2, 1, "", "RLELosslessDecoder"]], "pydicom.pixels.decoders.base": [[236, 3, 1, "", "DecodeRunner"], [237, 3, 1, "", "Decoder"]], "pydicom.pixels.decoders.base.DecodeRunner": [[236, 6, 1, "", "__init__"], [236, 4, 1, "", "bits_allocated"], [236, 4, 1, "", "bits_stored"], [236, 4, 1, "", "columns"], [236, 6, 1, "", "decode"], [236, 6, 1, "", "del_option"], [236, 4, 1, "", "extended_offsets"], [236, 6, 1, "", "frame_length"], [236, 6, 1, "", "get_data"], [236, 6, 1, "", "get_option"], [236, 4, 1, "", "is_array"], [236, 4, 1, "", "is_binary"], [236, 4, 1, "", "is_buffer"], [236, 4, 1, "", "is_dataset"], [236, 6, 1, "", "iter_decode"], [236, 4, 1, "", "number_of_frames"], [236, 4, 1, "", "options"], [236, 4, 1, "", "photometric_interpretation"], [236, 4, 1, "", "pixel_dtype"], [236, 4, 1, "", "pixel_keyword"], [236, 4, 1, "", "pixel_representation"], [236, 4, 1, "", "planar_configuration"], [236, 6, 1, "", "process"], [236, 6, 1, "", "reshape"], [236, 4, 1, "", "rows"], [236, 4, 1, "", "samples_per_pixel"], [236, 6, 1, "", "set_decoders"], [236, 6, 1, "", "set_option"], [236, 6, 1, "", "set_options"], [236, 6, 1, "", "set_source"], [236, 4, 1, "", "src"], [236, 4, 1, "", "transfer_syntax"], [236, 6, 1, "", "validate"]], "pydicom.pixels.decoders.base.Decoder": [[237, 4, 1, "", "UID"], [237, 6, 1, "", "__init__"], [237, 6, 1, "", "add_plugin"], [237, 6, 1, "", "add_plugins"], [237, 6, 1, "", "as_array"], [237, 6, 1, "", "as_buffer"], [237, 4, 1, "", "is_available"], [237, 4, 1, "", "is_encapsulated"], [237, 4, 1, "", "is_native"], [237, 6, 1, "", "iter_array"], [237, 6, 1, "", "iter_buffer"], [237, 4, 1, "", "missing_dependencies"], [237, 6, 1, "", "remove_plugin"]], "pydicom.pixels.encoders": [[238, 2, 1, "", "JPEG2000Encoder"], [239, 2, 1, "", "JPEG2000LosslessEncoder"], [240, 2, 1, "", "JPEGLSLosslessEncoder"], [241, 2, 1, "", "JPEGLSNearLosslessEncoder"], [242, 2, 1, "", "RLELosslessEncoder"]], "pydicom.pixels.encoders.base": [[243, 3, 1, "", "EncodeRunner"], [244, 3, 1, "", "Encoder"]], "pydicom.pixels.encoders.base.EncodeRunner": [[243, 6, 1, "", "__init__"], [243, 4, 1, "", "bits_allocated"], [243, 4, 1, "", "bits_stored"], [243, 4, 1, "", "columns"], [243, 6, 1, "", "del_option"], [243, 6, 1, "", "encode"], [243, 4, 1, "", "extended_offsets"], [243, 6, 1, "", "frame_length"], [243, 6, 1, "", "get_frame"], [243, 6, 1, "", "get_option"], [243, 4, 1, "", "is_array"], [243, 4, 1, "", "is_binary"], [243, 4, 1, "", "is_buffer"], [243, 4, 1, "", "is_dataset"], [243, 4, 1, "", "number_of_frames"], [243, 4, 1, "", "options"], [243, 4, 1, "", "photometric_interpretation"], [243, 4, 1, "", "pixel_keyword"], [243, 4, 1, "", "pixel_representation"], [243, 4, 1, "", "planar_configuration"], [243, 4, 1, "", "rows"], [243, 4, 1, "", "samples_per_pixel"], [243, 6, 1, "", "set_encoders"], [243, 6, 1, "", "set_option"], [243, 6, 1, "", "set_options"], [243, 6, 1, "", "set_source"], [243, 4, 1, "", "src"], [243, 4, 1, "", "transfer_syntax"], [243, 6, 1, "", "validate"]], "pydicom.pixels.encoders.base.Encoder": [[244, 4, 1, "", "UID"], [244, 6, 1, "", "__init__"], [244, 6, 1, "", "add_plugin"], [244, 6, 1, "", "add_plugins"], [244, 6, 1, "", "encode"], [244, 4, 1, "", "is_available"], [244, 4, 1, "", "is_encapsulated"], [244, 4, 1, "", "is_native"], [244, 6, 1, "", "iter_encode"], [244, 4, 1, "", "missing_dependencies"], [244, 6, 1, "", "remove_plugin"]], "pydicom.pixels.processing": [[250, 1, 1, "", "apply_color_lut"], [251, 1, 1, "", "apply_modality_lut"], [252, 1, 1, "", "apply_rescale"], [253, 1, 1, "", "apply_voi"], [254, 1, 1, "", "apply_voi_lut"], [255, 1, 1, "", "apply_windowing"], [256, 1, 1, "", "convert_color_space"]], "pydicom.pixels.utils": [[258, 1, 1, "", "as_pixel_options"], [259, 1, 1, "", "expand_ybr422"], [260, 1, 1, "", "get_expected_length"], [261, 1, 1, "", "get_image_pixel_ids"], [262, 1, 1, "", "get_j2k_parameters"], [263, 1, 1, "", "get_nr_frames"], [264, 1, 1, "", "iter_pixels"], [265, 1, 1, "", "pack_bits"], [266, 1, 1, "", "pixel_array"], [267, 1, 1, "", "pixel_dtype"], [268, 1, 1, "", "reshape_pixel_array"], [269, 1, 1, "", "unpack_bits"]], "pydicom.sequence": [[270, 3, 1, "", "Sequence"]], "pydicom.sequence.Sequence": [[270, 6, 1, "", "__init__"], [270, 6, 1, "", "append"], [270, 6, 1, "", "clear"], [270, 6, 1, "", "count"], [270, 6, 1, "", "extend"], [270, 6, 1, "", "index"], [270, 6, 1, "", "insert"], [270, 6, 1, "", "pop"], [270, 6, 1, "", "remove"], [270, 6, 1, "", "reverse"]], "pydicom.tag": [[271, 3, 1, "", "BaseTag"], [272, 1, 1, "", "Tag"], [273, 1, 1, "", "TupleTag"], [274, 1, 1, "", "tag_in_exception"]], "pydicom.tag.BaseTag": [[271, 6, 1, "", "__init__"], [271, 6, 1, "", "as_integer_ratio"], [271, 6, 1, "", "bit_count"], [271, 6, 1, "", "bit_length"], [271, 6, 1, "", "conjugate"], [271, 5, 1, "", "denominator"], [271, 4, 1, "", "elem"], [271, 4, 1, "", "element"], [271, 6, 1, "", "from_bytes"], [271, 4, 1, "", "group"], [271, 5, 1, "", "imag"], [271, 4, 1, "", "is_private"], [271, 4, 1, "", "is_private_creator"], [271, 4, 1, "", "json_key"], [271, 5, 1, "", "numerator"], [271, 4, 1, "", "private_creator"], [271, 5, 1, "", "real"], [271, 6, 1, "", "to_bytes"]], "pydicom.uid": [[275, 2, 1, "", "AcquisitionContextSRStorage"], [276, 2, 1, "", "AdvancedBlendingPresentationStateStorage"], [277, 2, 1, "", "AllTransferSyntaxes"], [278, 2, 1, "", "AmbulatoryECGWaveformStorage"], [279, 2, 1, "", "ArterialPulseWaveformStorage"], [280, 2, 1, "", "AutorefractionMeasurementsStorage"], [281, 2, 1, "", "BasicStructuredDisplayStorage"], [282, 2, 1, "", "BasicTextSRStorage"], [283, 2, 1, "", "BasicVoiceAudioWaveformStorage"], [284, 2, 1, "", "BlendingSoftcopyPresentationStateStorage"], [285, 2, 1, "", "BodyPositionWaveformStorage"], [286, 2, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [287, 2, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [288, 2, 1, "", "BreastTomosynthesisImageStorage"], [289, 2, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [290, 2, 1, "", "CArmPhotonElectronRadiationStorage"], [291, 2, 1, "", "CTDefinedProcedureProtocolStorage"], [292, 2, 1, "", "CTImageStorage"], [293, 2, 1, "", "CTPerformedProcedureProtocolStorage"], [294, 2, 1, "", "CardiacElectrophysiologyWaveformStorage"], [295, 2, 1, "", "ChestCADSRStorage"], [296, 2, 1, "", "ColonCADSRStorage"], [297, 2, 1, "", "ColorPaletteStorage"], [298, 2, 1, "", "ColorSoftcopyPresentationStateStorage"], [299, 2, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [300, 2, 1, "", "Comprehensive3DSRStorage"], [301, 2, 1, "", "ComprehensiveSRStorage"], [302, 2, 1, "", "ComputedRadiographyImageStorage"], [303, 2, 1, "", "ConfocalMicroscopyImageStorage"], [304, 2, 1, "", "ConfocalMicroscopyTiledPyramidalImageStorage"], [305, 2, 1, "", "ContentAssessmentResultsStorage"], [306, 2, 1, "", "CornealTopographyMapStorage"], [307, 2, 1, "", "DICOS2DAITStorage"], [308, 2, 1, "", "DICOS3DAITStorage"], [309, 2, 1, "", "DICOSCTImageStorage"], [310, 2, 1, "", "DICOSDigitalXRayImageStorageForPresentation"], [311, 2, 1, "", "DICOSDigitalXRayImageStorageForProcessing"], [312, 2, 1, "", "DICOSQuadrupoleResonanceStorage"], [313, 2, 1, "", "DICOSThreatDetectionReportStorage"], [314, 2, 1, "", "DeflatedExplicitVRLittleEndian"], [315, 2, 1, "", "DeformableSpatialRegistrationStorage"], [316, 2, 1, "", "DermoscopicPhotographyImageStorage"], [317, 2, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [318, 2, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [319, 2, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [320, 2, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [321, 2, 1, "", "DigitalXRayImageStorageForPresentation"], [322, 2, 1, "", "DigitalXRayImageStorageForProcessing"], [323, 2, 1, "", "EddyCurrentImageStorage"], [324, 2, 1, "", "EddyCurrentMultiFrameImageStorage"], [325, 2, 1, "", "ElectromyogramWaveformStorage"], [326, 2, 1, "", "ElectrooculogramWaveformStorage"], [327, 2, 1, "", "EncapsulatedCDAStorage"], [328, 2, 1, "", "EncapsulatedMTLStorage"], [329, 2, 1, "", "EncapsulatedOBJStorage"], [330, 2, 1, "", "EncapsulatedPDFStorage"], [331, 2, 1, "", "EncapsulatedSTLStorage"], [332, 2, 1, "", "EnhancedCTImageStorage"], [333, 2, 1, "", "EnhancedContinuousRTImageStorage"], [334, 2, 1, "", "EnhancedMRColorImageStorage"], [335, 2, 1, "", "EnhancedMRImageStorage"], [336, 2, 1, "", "EnhancedPETImageStorage"], [337, 2, 1, "", "EnhancedRTImageStorage"], [338, 2, 1, "", "EnhancedSRStorage"], [339, 2, 1, "", "EnhancedUSVolumeStorage"], [340, 2, 1, "", "EnhancedXAImageStorage"], [341, 2, 1, "", "EnhancedXRFImageStorage"], [342, 2, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [343, 2, 1, "", "ExplicitVRBigEndian"], [344, 2, 1, "", "ExplicitVRLittleEndian"], [345, 2, 1, "", "ExtensibleSRStorage"], [346, 2, 1, "", "General32bitECGWaveformStorage"], [347, 2, 1, "", "GeneralAudioWaveformStorage"], [348, 2, 1, "", "GeneralECGWaveformStorage"], [349, 2, 1, "", "GenericImplantTemplateStorage"], [350, 2, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [351, 2, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [352, 2, 1, "", "HEVCM10P51"], [353, 2, 1, "", "HEVCMP51"], [354, 2, 1, "", "HTJ2K"], [355, 2, 1, "", "HTJ2KLossless"], [356, 2, 1, "", "HTJ2KLosslessRPCL"], [357, 2, 1, "", "HangingProtocolStorage"], [358, 2, 1, "", "HemodynamicWaveformStorage"], [359, 2, 1, "", "ImplantAssemblyTemplateStorage"], [360, 2, 1, "", "ImplantTemplateGroupStorage"], [361, 2, 1, "", "ImplantationPlanSRStorage"], [362, 2, 1, "", "ImplicitVRLittleEndian"], [363, 2, 1, "", "IntraocularLensCalculationsStorage"], [364, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [365, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [366, 2, 1, "", "InventoryStorage"], [367, 2, 1, "", "JPEG2000"], [368, 2, 1, "", "JPEG2000Lossless"], [369, 2, 1, "", "JPEG2000MC"], [370, 2, 1, "", "JPEG2000MCLossless"], [371, 2, 1, "", "JPEG2000TransferSyntaxes"], [372, 2, 1, "", "JPEGBaseline8Bit"], [373, 2, 1, "", "JPEGExtended12Bit"], [374, 2, 1, "", "JPEGLSLossless"], [375, 2, 1, "", "JPEGLSNearLossless"], [376, 2, 1, "", "JPEGLSTransferSyntaxes"], [377, 2, 1, "", "JPEGLossless"], [378, 2, 1, "", "JPEGLosslessSV1"], [379, 2, 1, "", "JPEGTransferSyntaxes"], [380, 2, 1, "", "JPIPHTJ2KReferenced"], [381, 2, 1, "", "JPIPHTJ2KReferencedDeflate"], [382, 2, 1, "", "KeratometryMeasurementsStorage"], [383, 2, 1, "", "KeyObjectSelectionDocumentStorage"], [384, 2, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [385, 2, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [386, 2, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [387, 2, 1, "", "LensometryMeasurementsStorage"], [388, 2, 1, "", "MPEG2MPHL"], [389, 2, 1, "", "MPEG2MPHLF"], [390, 2, 1, "", "MPEG2MPML"], [391, 2, 1, "", "MPEG2MPMLF"], [392, 2, 1, "", "MPEG4HP41"], [393, 2, 1, "", "MPEG4HP41BD"], [394, 2, 1, "", "MPEG4HP41BDF"], [395, 2, 1, "", "MPEG4HP41F"], [396, 2, 1, "", "MPEG4HP422D"], [397, 2, 1, "", "MPEG4HP422DF"], [398, 2, 1, "", "MPEG4HP423D"], [399, 2, 1, "", "MPEG4HP423DF"], [400, 2, 1, "", "MPEG4HP42STEREO"], [401, 2, 1, "", "MPEG4HP42STEREOF"], [402, 2, 1, "", "MPEGTransferSyntaxes"], [403, 2, 1, "", "MRImageStorage"], [404, 2, 1, "", "MRSpectroscopyStorage"], [405, 2, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [406, 2, 1, "", "MammographyCADSRStorage"], [407, 2, 1, "", "MediaStorageDirectoryStorage"], [408, 2, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [409, 2, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [410, 2, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [411, 2, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [412, 2, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [413, 2, 1, "", "MultichannelRespiratoryWaveformStorage"], [414, 2, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [415, 2, 1, "", "NuclearMedicineImageStorage"], [416, 2, 1, "", "OphthalmicAxialMeasurementsStorage"], [417, 2, 1, "", "OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [418, 2, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [419, 2, 1, "", "OphthalmicPhotography16BitImageStorage"], [420, 2, 1, "", "OphthalmicPhotography8BitImageStorage"], [421, 2, 1, "", "OphthalmicThicknessMapStorage"], [422, 2, 1, "", "OphthalmicTomographyImageStorage"], [423, 2, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [424, 2, 1, "", "PYDICOM_IMPLEMENTATION_UID"], [425, 2, 1, "", "PYDICOM_ROOT_UID"], [426, 2, 1, "", "ParametricMapStorage"], [427, 2, 1, "", "PatientRadiationDoseSRStorage"], [428, 2, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [429, 2, 1, "", "PhotoacousticImageStorage"], [430, 2, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [431, 2, 1, "", "PositronEmissionTomographyImageStorage"], [432, 2, 1, "", "PrivateTransferSyntaxes"], [433, 2, 1, "", "ProcedureLogStorage"], [434, 2, 1, "", "ProtocolApprovalStorage"], [435, 2, 1, "", "PseudoColorSoftcopyPresentationStateStorage"], [436, 2, 1, "", "RE_VALID_UID"], [437, 2, 1, "", "RE_VALID_UID_PREFIX"], [438, 2, 1, "", "RLELossless"], [439, 2, 1, "", "RLETransferSyntaxes"], [440, 2, 1, "", "RTBeamsDeliveryInstructionStorage"], [441, 2, 1, "", "RTBeamsTreatmentRecordStorage"], [442, 2, 1, "", "RTBrachyApplicationSetupDeliveryInstructionStorage"], [443, 2, 1, "", "RTBrachyTreatmentRecordStorage"], [444, 2, 1, "", "RTDoseStorage"], [445, 2, 1, "", "RTImageStorage"], [446, 2, 1, "", "RTIonBeamsTreatmentRecordStorage"], [447, 2, 1, "", "RTIonPlanStorage"], [448, 2, 1, "", "RTPatientPositionAcquisitionInstructionStorage"], [449, 2, 1, "", "RTPhysicianIntentStorage"], [450, 2, 1, "", "RTPlanStorage"], [451, 2, 1, "", "RTRadiationRecordSetStorage"], [452, 2, 1, "", "RTRadiationSalvageRecordStorage"], [453, 2, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [454, 2, 1, "", "RTRadiationSetStorage"], [455, 2, 1, "", "RTSegmentAnnotationStorage"], [456, 2, 1, "", "RTStructureSetStorage"], [457, 2, 1, "", "RTTreatmentPreparationStorage"], [458, 2, 1, "", "RTTreatmentSummaryRecordStorage"], [459, 2, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [460, 2, 1, "", "RawDataStorage"], [461, 2, 1, "", "RealWorldValueMappingStorage"], [462, 2, 1, "", "RespiratoryWaveformStorage"], [463, 2, 1, "", "RoboticArmRadiationStorage"], [464, 2, 1, "", "RoboticRadiationRecordStorage"], [465, 2, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [466, 2, 1, "", "SMPTEST211020UncompressedInterlacedActiveVideo"], [467, 2, 1, "", "SMPTEST211020UncompressedProgressiveActiveVideo"], [468, 2, 1, "", "SMPTEST211030PCMDigitalAudio"], [469, 2, 1, "", "SecondaryCaptureImageStorage"], [470, 2, 1, "", "SegmentationStorage"], [471, 2, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [472, 2, 1, "", "SimplifiedAdultEchoSRStorage"], [473, 2, 1, "", "SleepElectroencephalogramWaveformStorage"], [474, 2, 1, "", "SpatialFiducialsStorage"], [475, 2, 1, "", "SpatialRegistrationStorage"], [476, 2, 1, "", "SpectaclePrescriptionReportStorage"], [477, 2, 1, "", "StereometricRelationshipStorage"], [478, 2, 1, "", "SubjectiveRefractionMeasurementsStorage"], [479, 2, 1, "", "SurfaceScanMeshStorage"], [480, 2, 1, "", "SurfaceScanPointCloudStorage"], [481, 2, 1, "", "SurfaceSegmentationStorage"], [482, 2, 1, "", "TomotherapeuticRadiationRecordStorage"], [483, 2, 1, "", "TomotherapeuticRadiationStorage"], [484, 2, 1, "", "TractographyResultsStorage"], [485, 2, 1, "", "TwelveLeadECGWaveformStorage"], [486, 3, 1, "", "UID"], [487, 2, 1, "", "UltrasoundImageStorage"], [488, 2, 1, "", "UltrasoundMultiFrameImageStorage"], [489, 2, 1, "", "UncompressedTransferSyntaxes"], [490, 2, 1, "", "VLEndoscopicImageStorage"], [491, 2, 1, "", "VLMicroscopicImageStorage"], [492, 2, 1, "", "VLPhotographicImageStorage"], [493, 2, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [494, 2, 1, "", "VLWholeSlideMicroscopyImageStorage"], [495, 2, 1, "", "VariableModalityLUTSoftcopyPresentationStateStorage"], [496, 2, 1, "", "VideoEndoscopicImageStorage"], [497, 2, 1, "", "VideoMicroscopicImageStorage"], [498, 2, 1, "", "VideoPhotographicImageStorage"], [499, 2, 1, "", "VisualAcuityMeasurementsStorage"], [500, 2, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [501, 2, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [502, 2, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [503, 2, 1, "", "XADefinedProcedureProtocolStorage"], [504, 2, 1, "", "XAPerformedProcedureProtocolStorage"], [505, 2, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [506, 2, 1, "", "XRay3DAngiographicImageStorage"], [507, 2, 1, "", "XRay3DCraniofacialImageStorage"], [508, 2, 1, "", "XRayAngiographicImageStorage"], [509, 2, 1, "", "XRayRadiationDoseSRStorage"], [510, 2, 1, "", "XRayRadiofluoroscopicImageStorage"], [511, 1, 1, "", "generate_uid"], [512, 1, 1, "", "register_transfer_syntax"]], "pydicom.uid.UID": [[486, 6, 1, "", "__init__"], [486, 6, 1, "", "capitalize"], [486, 6, 1, "", "casefold"], [486, 6, 1, "", "center"], [486, 6, 1, "", "count"], [486, 6, 1, "", "encode"], [486, 6, 1, "", "endswith"], [486, 6, 1, "", "expandtabs"], [486, 6, 1, "", "find"], [486, 6, 1, "", "format"], [486, 6, 1, "", "format_map"], [486, 6, 1, "", "index"], [486, 4, 1, "", "info"], [486, 4, 1, "", "is_compressed"], [486, 4, 1, "", "is_deflated"], [486, 4, 1, "", "is_encapsulated"], [486, 4, 1, "", "is_implicit_VR"], [486, 4, 1, "", "is_little_endian"], [486, 4, 1, "", "is_private"], [486, 4, 1, "", "is_retired"], [486, 4, 1, "", "is_transfer_syntax"], [486, 4, 1, "", "is_valid"], [486, 6, 1, "", "isalnum"], [486, 6, 1, "", "isalpha"], [486, 6, 1, "", "isascii"], [486, 6, 1, "", "isdecimal"], [486, 6, 1, "", "isdigit"], [486, 6, 1, "", "isidentifier"], [486, 6, 1, "", "islower"], [486, 6, 1, "", "isnumeric"], [486, 6, 1, "", "isprintable"], [486, 6, 1, "", "isspace"], [486, 6, 1, "", "istitle"], [486, 6, 1, "", "isupper"], [486, 6, 1, "", "join"], [486, 4, 1, "", "keyword"], [486, 6, 1, "", "ljust"], [486, 6, 1, "", "lower"], [486, 6, 1, "", "lstrip"], [486, 6, 1, "", "maketrans"], [486, 4, 1, "", "name"], [486, 6, 1, "", "partition"], [486, 6, 1, "", "removeprefix"], [486, 6, 1, "", "removesuffix"], [486, 6, 1, "", "replace"], [486, 6, 1, "", "rfind"], [486, 6, 1, "", "rindex"], [486, 6, 1, "", "rjust"], [486, 6, 1, "", "rpartition"], [486, 6, 1, "", "rsplit"], [486, 6, 1, "", "rstrip"], [486, 6, 1, "", "set_private_encoding"], [486, 6, 1, "", "split"], [486, 6, 1, "", "splitlines"], [486, 6, 1, "", "startswith"], [486, 6, 1, "", "strip"], [486, 6, 1, "", "swapcase"], [486, 6, 1, "", "title"], [486, 6, 1, "", "translate"], [486, 4, 1, "", "type"], [486, 6, 1, "", "upper"], [486, 6, 1, "", "zfill"]], "pydicom.valuerep": [[513, 3, 1, "", "DA"], [514, 1, 1, "", "DS"], [515, 3, 1, "", "DSdecimal"], [516, 3, 1, "", "DSfloat"], [517, 3, 1, "", "DT"], [518, 3, 1, "", "IS"], [519, 3, 1, "", "ISfloat"], [520, 3, 1, "", "PersonName"], [521, 3, 1, "", "TM"], [522, 3, 1, "", "VR"], [523, 1, 1, "", "format_number_as_ds"], [524, 1, 1, "", "is_valid_ds"]], "pydicom.valuerep.DA": [[513, 6, 1, "", "__init__"], [513, 6, 1, "", "ctime"], [513, 6, 1, "", "fromisocalendar"], [513, 6, 1, "", "fromisoformat"], [513, 6, 1, "", "fromordinal"], [513, 6, 1, "", "fromtimestamp"], [513, 6, 1, "", "isocalendar"], [513, 6, 1, "", "isoformat"], [513, 6, 1, "", "isoweekday"], [513, 6, 1, "", "replace"], [513, 6, 1, "", "strftime"], [513, 6, 1, "", "timetuple"], [513, 6, 1, "", "today"], [513, 6, 1, "", "toordinal"], [513, 6, 1, "", "weekday"]], "pydicom.valuerep.DSdecimal": [[515, 6, 1, "", "__init__"], [515, 6, 1, "", "adjusted"], [515, 6, 1, "", "as_integer_ratio"], [515, 6, 1, "", "as_tuple"], [515, 6, 1, "", "canonical"], [515, 6, 1, "", "compare"], [515, 6, 1, "", "compare_signal"], [515, 6, 1, "", "compare_total"], [515, 6, 1, "", "compare_total_mag"], [515, 6, 1, "", "conjugate"], [515, 6, 1, "", "copy_abs"], [515, 6, 1, "", "copy_negate"], [515, 6, 1, "", "copy_sign"], [515, 6, 1, "", "exp"], [515, 6, 1, "", "fma"], [515, 6, 1, "", "from_float"], [515, 6, 1, "", "is_canonical"], [515, 6, 1, "", "is_finite"], [515, 6, 1, "", "is_infinite"], [515, 6, 1, "", "is_nan"], [515, 6, 1, "", "is_normal"], [515, 6, 1, "", "is_qnan"], [515, 6, 1, "", "is_signed"], [515, 6, 1, "", "is_snan"], [515, 6, 1, "", "is_subnormal"], [515, 6, 1, "", "is_zero"], [515, 6, 1, "", "ln"], [515, 6, 1, "", "log10"], [515, 6, 1, "", "logb"], [515, 6, 1, "", "logical_and"], [515, 6, 1, "", "logical_invert"], [515, 6, 1, "", "logical_or"], [515, 6, 1, "", "logical_xor"], [515, 6, 1, "", "max"], [515, 6, 1, "", "max_mag"], [515, 6, 1, "", "min"], [515, 6, 1, "", "min_mag"], [515, 6, 1, "", "next_minus"], [515, 6, 1, "", "next_plus"], [515, 6, 1, "", "next_toward"], [515, 6, 1, "", "normalize"], [515, 6, 1, "", "number_class"], [515, 6, 1, "", "quantize"], [515, 6, 1, "", "radix"], [515, 6, 1, "", "remainder_near"], [515, 6, 1, "", "rotate"], [515, 6, 1, "", "same_quantum"], [515, 6, 1, "", "scaleb"], [515, 6, 1, "", "shift"], [515, 6, 1, "", "sqrt"], [515, 6, 1, "", "to_eng_string"], [515, 6, 1, "", "to_integral"], [515, 6, 1, "", "to_integral_exact"], [515, 6, 1, "", "to_integral_value"]], "pydicom.valuerep.DSfloat": [[516, 6, 1, "", "__init__"], [516, 6, 1, "", "as_integer_ratio"], [516, 6, 1, "", "conjugate"], [516, 6, 1, "", "fromhex"], [516, 6, 1, "", "hex"], [516, 5, 1, "", "imag"], [516, 6, 1, "", "is_integer"], [516, 5, 1, "", "real"]], "pydicom.valuerep.DT": [[517, 6, 1, "", "__init__"], [517, 6, 1, "", "astimezone"], [517, 6, 1, "", "combine"], [517, 6, 1, "", "ctime"], [517, 6, 1, "", "date"], [517, 6, 1, "", "dst"], [517, 6, 1, "", "fromisocalendar"], [517, 6, 1, "", "fromisoformat"], [517, 6, 1, "", "fromordinal"], [517, 6, 1, "", "fromtimestamp"], [517, 6, 1, "", "isocalendar"], [517, 6, 1, "", "isoformat"], [517, 6, 1, "", "isoweekday"], [517, 6, 1, "", "now"], [517, 6, 1, "", "replace"], [517, 6, 1, "", "strftime"], [517, 6, 1, "", "strptime"], [517, 6, 1, "", "time"], [517, 6, 1, "", "timestamp"], [517, 6, 1, "", "timetuple"], [517, 6, 1, "", "timetz"], [517, 6, 1, "", "today"], [517, 6, 1, "", "toordinal"], [517, 6, 1, "", "tzname"], [517, 6, 1, "", "utcfromtimestamp"], [517, 6, 1, "", "utcnow"], [517, 6, 1, "", "utcoffset"], [517, 6, 1, "", "utctimetuple"], [517, 6, 1, "", "weekday"]], "pydicom.valuerep.IS": [[518, 6, 1, "", "__init__"], [518, 6, 1, "", "as_integer_ratio"], [518, 6, 1, "", "bit_count"], [518, 6, 1, "", "bit_length"], [518, 6, 1, "", "conjugate"], [518, 5, 1, "", "denominator"], [518, 6, 1, "", "from_bytes"], [518, 5, 1, "", "imag"], [518, 5, 1, "", "numerator"], [518, 5, 1, "", "real"], [518, 6, 1, "", "to_bytes"]], "pydicom.valuerep.ISfloat": [[519, 6, 1, "", "__init__"], [519, 6, 1, "", "as_integer_ratio"], [519, 6, 1, "", "conjugate"], [519, 6, 1, "", "fromhex"], [519, 6, 1, "", "hex"], [519, 5, 1, "", "imag"], [519, 6, 1, "", "is_integer"], [519, 5, 1, "", "real"]], "pydicom.valuerep.PersonName": [[520, 6, 1, "", "__init__"], [520, 4, 1, "", "alphabetic"], [520, 4, 1, "", "components"], [520, 6, 1, "", "decode"], [520, 6, 1, "", "encode"], [520, 6, 1, "", "family_comma_given"], [520, 4, 1, "", "family_name"], [520, 6, 1, "", "formatted"], [520, 6, 1, "", "from_named_components"], [520, 6, 1, "", "from_named_components_veterinary"], [520, 4, 1, "", "given_name"], [520, 4, 1, "", "ideographic"], [520, 4, 1, "", "middle_name"], [520, 4, 1, "", "name_prefix"], [520, 4, 1, "", "name_suffix"], [520, 4, 1, "", "phonetic"]], "pydicom.valuerep.TM": [[521, 6, 1, "", "__init__"], [521, 6, 1, "", "dst"], [521, 6, 1, "", "fromisoformat"], [521, 6, 1, "", "isoformat"], [521, 6, 1, "", "replace"], [521, 6, 1, "", "strftime"], [521, 6, 1, "", "tzname"], [521, 6, 1, "", "utcoffset"]], "pydicom.valuerep.VR": [[522, 6, 1, "", "__init__"], [522, 6, 1, "", "capitalize"], [522, 6, 1, "", "casefold"], [522, 6, 1, "", "center"], [522, 6, 1, "", "count"], [522, 6, 1, "", "encode"], [522, 6, 1, "", "endswith"], [522, 6, 1, "", "expandtabs"], [522, 6, 1, "", "find"], [522, 6, 1, "", "format"], [522, 6, 1, "", "format_map"], [522, 6, 1, "", "index"], [522, 6, 1, "", "isalnum"], [522, 6, 1, "", "isalpha"], [522, 6, 1, "", "isascii"], [522, 6, 1, "", "isdecimal"], [522, 6, 1, "", "isdigit"], [522, 6, 1, "", "isidentifier"], [522, 6, 1, "", "islower"], [522, 6, 1, "", "isnumeric"], [522, 6, 1, "", "isprintable"], [522, 6, 1, "", "isspace"], [522, 6, 1, "", "istitle"], [522, 6, 1, "", "isupper"], [522, 6, 1, "", "join"], [522, 6, 1, "", "ljust"], [522, 6, 1, "", "lower"], [522, 6, 1, "", "lstrip"], [522, 6, 1, "", "maketrans"], [522, 6, 1, "", "partition"], [522, 6, 1, "", "removeprefix"], [522, 6, 1, "", "removesuffix"], [522, 6, 1, "", "replace"], [522, 6, 1, "", "rfind"], [522, 6, 1, "", "rindex"], [522, 6, 1, "", "rjust"], [522, 6, 1, "", "rpartition"], [522, 6, 1, "", "rsplit"], [522, 6, 1, "", "rstrip"], [522, 6, 1, "", "split"], [522, 6, 1, "", "splitlines"], [522, 6, 1, "", "startswith"], [522, 6, 1, "", "strip"], [522, 6, 1, "", "swapcase"], [522, 6, 1, "", "title"], [522, 6, 1, "", "translate"], [522, 6, 1, "", "upper"], [522, 6, 1, "", "zfill"]], "pydicom.values": [[525, 1, 1, "", "convert_AE_string"], [526, 1, 1, "", "convert_ATvalue"], [527, 1, 1, "", "convert_DA_string"], [528, 1, 1, "", "convert_DS_string"], [529, 1, 1, "", "convert_DT_string"], [530, 1, 1, "", "convert_IS_string"], [531, 1, 1, "", "convert_OBvalue"], [532, 1, 1, "", "convert_OWvalue"], [533, 1, 1, "", "convert_PN"], [534, 1, 1, "", "convert_SQ"], [535, 1, 1, "", "convert_TM_string"], [536, 1, 1, "", "convert_UI"], [537, 1, 1, "", "convert_UN"], [538, 1, 1, "", "convert_UR_string"], [539, 1, 1, "", "convert_numbers"], [540, 1, 1, "", "convert_single_string"], [541, 1, 1, "", "convert_string"], [542, 1, 1, "", "convert_tag"], [543, 1, 1, "", "convert_text"], [544, 1, 1, "", "convert_value"], [545, 1, 1, "", "multi_string"]], "pydicom.waveforms": [[546, 0, 0, "-", "numpy_handler"]], "pydicom.waveforms.numpy_handler": [[546, 1, 1, "", "generate_multiplex"], [546, 1, 1, "", "is_available"], [546, 1, 1, "", "multiplex_array"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:method", "7": "py:exception"}, "terms": {"": [0, 2, 3, 4, 8, 9, 10, 12, 16, 17, 20, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 41, 42, 43, 46, 48, 50, 51, 52, 53, 55, 85, 94, 95, 98, 111, 117, 121, 128, 129, 132, 133, 134, 139, 142, 145, 148, 149, 152, 154, 156, 158, 159, 162, 172, 173, 181, 182, 183, 205, 219, 236, 237, 243, 244, 247, 248, 249, 256, 261, 264, 265, 266, 270, 271, 272, 424, 425, 486, 515, 517, 518, 522, 523, 524, 526, 533, 534, 541, 543, 544, 559, 561, 562, 564, 569, 570, 572, 575, 577, 580, 582, 583, 584, 585, 587, 589, 590, 592], "0": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 33, 34, 36, 37, 38, 39, 43, 44, 45, 46, 48, 52, 53, 54, 82, 83, 84, 101, 103, 104, 129, 131, 132, 133, 134, 135, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 156, 158, 159, 168, 169, 170, 174, 175, 181, 182, 183, 206, 209, 211, 212, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 263, 264, 265, 266, 267, 268, 271, 424, 425, 436, 437, 486, 511, 513, 515, 516, 517, 518, 519, 528, 530, 534, 542, 546, 547, 548, 549, 576, 581, 584, 585, 587, 589, 590, 592], "00": [5, 13, 19, 21, 149, 581], "000": [5, 21, 515, 581, 592], "0000": [2, 8, 12, 20, 26, 27, 28, 43, 48, 196, 486, 522, 559, 580, 585], "000000": [10, 20, 587], "00000000": 174, "000000000": [2, 8, 20], "00000000000000": [26, 28], "00000001": 174, "00000002": 174, "0000200": [2, 8, 20], "0001": [2, 12, 20, 26, 27, 28, 43, 48, 132, 133, 134, 136, 142, 144, 148, 196, 585], "00010": 174, "0002": [2, 12, 20, 26, 27, 28, 29, 39, 43, 48, 53, 132, 133, 134, 136, 142, 144, 148, 183, 196, 209, 211, 212, 260, 261, 268, 424, 585, 589], "0003": [2, 12, 20, 26, 27, 28, 43, 48, 136, 196, 585], "0004": [2, 10, 20, 26, 27, 28, 29, 39, 53, 132, 133, 134, 170, 172, 209, 211, 219, 256, 259, 260, 261, 559, 572, 587], "0005": [20, 26, 28, 48, 77, 78, 79, 80, 132, 133, 134, 162, 163, 546, 559, 560, 585, 586, 587], "0006": [26, 27, 28, 29, 39, 132, 133, 134, 209, 211, 212, 261, 268], "0008": [2, 12, 20, 26, 27, 28, 29, 39, 43, 48, 53, 77, 78, 79, 80, 132, 133, 134, 142, 144, 145, 147, 148, 162, 163, 209, 211, 212, 213, 250, 260, 261, 268, 553, 559, 560, 572, 585, 586, 587], "00080005": 586, "00080008": 586, "0009": [20, 48, 53, 132, 133, 134, 209, 261, 553, 559, 572], "00091002": 586, "000b": 48, "000d": [2, 20], "000e": [2, 20], "000y": 20, "001": [18, 19, 48, 581], "0010": [2, 12, 16, 17, 20, 26, 27, 28, 29, 39, 41, 43, 48, 52, 53, 68, 98, 132, 133, 134, 136, 145, 146, 147, 162, 196, 206, 209, 210, 211, 212, 260, 261, 268, 546, 547, 553, 554, 559, 568, 580, 584, 585, 587, 589], "0011": [2, 20, 29, 39, 52, 132, 133, 134, 206, 209, 211, 212, 257, 260, 261, 268, 269], "0012": [2, 12, 20, 26, 27, 28, 43, 48, 136, 196, 424, 585], "0013": [2, 12, 20, 26, 27, 28, 43, 48, 136, 196, 585, 587], "0014": [2, 20, 26, 27, 28, 585], "0015": 206, "0016": [2, 20, 26, 27, 28, 43, 48, 196, 585], "0017": 196, "0018": [2, 20, 26, 27, 28, 43, 45, 196, 213, 250], "0019": 20, "0019xx43": [559, 578], "001a": 54, "0020": [2, 12, 17, 20, 26, 27, 28, 43, 585, 587], "0021": [2, 20], "0022": [2, 20, 585], "0023": [2, 12, 20, 26, 27], "0025": 20, "0026": [26, 27], "0027": 20, "0028": [2, 20, 29, 39, 47, 53, 132, 133, 134, 142, 144, 145, 147, 148, 209, 211, 212, 213, 214, 215, 216, 217, 219, 244, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 265, 267, 268, 269, 559, 572, 574, 585], "0029": 20, "002c": [26, 27], "003": [11, 13, 16, 19, 581], "0030": [2, 17, 20, 43], "0031": [2, 20], "0032": [2, 20], "0033": [12, 20], "0036697": [26, 27, 28], "003669700000": [26, 28], "0037": [2, 20], "003a": [54, 132, 133, 134, 546, 592], "0040": [2, 20], "0041": 132, "0043": [20, 26, 28, 585], "005": [2, 5, 8, 12, 13, 581], "0050": [2, 20, 26, 27, 43, 52], "0051": [26, 27], "0052": [2, 20], "0060": [2, 20, 26, 27, 43], "007": 14, "0070": [2, 20, 26, 27], "0071": [26, 27, 28], "0078": [26, 27, 28], "007f": [486, 522], "0080": [2, 20, 26, 27, 28], "0081": [2, 20], "0082": [26, 27, 28], "0083": [2, 20], "0084": [2, 20, 26, 27, 28], "0085": [2, 20], "0086": [2, 20, 26, 27, 28], "0088": 20, "0090": [2, 20], "0091": [2, 20], "00a0": [26, 27, 28], "00b0": [26, 27], "00b6": [26, 27], "00f8": 18, "00fe": 18, "01": 549, "010": [17, 19, 581], "0100": [2, 20, 29, 39, 47, 54, 132, 133, 134, 196, 206, 209, 211, 212, 248, 257, 259, 260, 261, 265, 269, 546, 592], "0101": [2, 20, 29, 39, 132, 133, 134, 209, 211, 214, 251, 252, 261, 267], "0102": [2, 20, 39, 196, 206], "0103": [2, 20, 29, 39, 132, 133, 134, 209, 211, 212, 214, 244, 251, 252, 261, 267], "0106": [2, 20], "0107": [2, 20], "010c": [26, 27], "0111": [26, 27], "0115": [26, 27], "011a": [26, 27], "0120": 20, "014": 19, "0166": 20, "0180": [26, 27], "0182": 45, "0197b5846bb5": [559, 566], "01b2": 45, "0200": 592, "0201": [2, 20, 559, 571], "0210": [132, 133, 134, 546, 592], "0211": [132, 133, 134], "025109": [10, 587], "0275401": [26, 27, 28], "02754010000000": [26, 28], "033": 22, "035797": 20, "03579711914062": 20, "0400": [2, 8, 20], "0411bab7c985": [559, 566], "045357": [10, 587], "05": [20, 584], "0500": 20, "050743": [10, 587], "072730": [20, 26, 28], "072731": [20, 26, 28, 585], "07992553710938": 20, "079926": 20, "079956": 20, "08": 149, "085000": 20, "094": [9, 13, 581], "095": 20, "095000": 20, "0b01111111": 37, "0b10000000": 37, "0b100101": [271, 518], "0b1101": [271, 518], "0e0": 515, "0x00": [132, 133, 134, 139, 141, 183, 536], "0x0000": 183, "0x00000000": [146, 149], "0x0002": [133, 183, 247, 249, 264, 266, 585], "0x0006": [559, 569], "0x0008": 585, "0x0009": [48, 132, 133, 134], "0x00091001": 48, "0x000b": 48, "0x0010": [43, 132, 133, 134, 272, 585], "0x00100010": [43, 129, 132, 133, 134], "0x00100015": 272, "0x00100020": 132, "0x00100030": 132, "0x00100040": [132, 133, 134], "0x0015": 272, "0x0016": 585, "0x0018": 43, "0x0028": [236, 243, 247, 249, 264, 266, 585], "0x0030": 132, "0x0041": [132, 133, 134], "0x004100001": 48, "0x00410001": 111, "0x00410002": 111, "0x0043": 585, "0x01": [16, 48, 132], "0x02": [16, 48], "0x03": 16, "0x1": [516, 519], "0x10": [43, 129, 132, 133, 134, 272], "0x1001": 16, "0x100100010": 86, "0x10011001": 16, "0x10011002": 16, "0x10011003": 16, "0x1002": 585, "0x10021001": [109, 110], "0x10021002": [109, 110], "0x1020": 43, "0x104e": 585, "0x1050": 585, "0x1p": [516, 519], "0x3000": 52, "0x300a": 43, "0x50": 272, "0x5000": 17, "0x6000": [52, 206, 585], "0x6002": 585, "0x6004": 585, "0x6010": 206, "0x601e": 585, "0x60ff": 206, "0x888800001": 48, "0xb0": 43, "0xb4": 41, "0xc2": 43, "0xff": [132, 133, 134], "0xff00": 17, "0xffd9": 145, "0xffff": [132, 133, 134, 170, 559, 569], "0xffffffff": 129, "0xffffffffl": 129, "1": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 52, 53, 54, 63, 81, 85, 86, 88, 97, 107, 109, 110, 111, 112, 129, 131, 132, 133, 134, 135, 136, 139, 140, 141, 145, 149, 150, 151, 156, 158, 159, 162, 174, 183, 196, 206, 209, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 515, 516, 517, 518, 519, 520, 522, 546, 560, 563, 566, 574, 577, 580, 583, 584, 585, 586, 587, 589, 590, 591, 592], "10": [11, 20, 23, 26, 28, 39, 52, 54, 149, 174, 196, 247, 264, 271, 407, 442, 449, 471, 515, 516, 518, 519, 559, 566, 570, 580, 585, 587, 592], "100": [10, 20, 24, 26, 28, 36, 48, 54, 277, 390, 391, 402, 515, 585, 586, 587, 592], "1000": [2, 20, 54, 592], "10000": [54, 592], "1000000000000000055511151231257827021181583404541015625": 515, "10008": [8, 9, 12, 24, 26, 46, 47, 53, 132, 133, 134, 145, 209, 212, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 245, 246, 268, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 433, 434, 435, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 559, 569, 570, 572, 574, 575, 580, 583, 585], "1001": [16, 20, 48, 132], "1002": [16, 20, 48, 585], "1003": [16, 20], "1004": [20, 546, 559, 572], "1005": 20, "1006": [20, 546, 559, 572], "1007": 20, "1008": 20, "1009": 20, "100a": 20, "100f": 20, "101": [22, 277, 388, 389, 402], "1010": [2, 20, 54, 592], "1011": 20, "1012": 20, "1013": [20, 559, 572], "1014": [20, 559, 575], "1015": 20, "1016": [20, 559, 572], "1017": 20, "1018": 20, "1019": [20, 53], "101a": 20, "101b": 20, "101c": 20, "101d": 20, "101e": 20, "101f": 20, "102": [277, 392, 395, 402, 559, 565], "1020": [2, 20], "102000": 20, "1021": 20, "1023": 20, "1024": [20, 129, 132, 133, 134, 559, 573, 586, 590], "1025": 20, "1026": 20, "1027": 20, "1028": 20, "1029": [20, 559, 573], "102a": 20, "102b": 20, "102c": 20, "102e": 20, "102f": 20, "103": [277, 393, 394, 402, 559, 565], "1030": [2, 20, 559, 573], "1031": 20, "1034": 20, "1035": 20, "1037": 20, "1038": [559, 574], "1039": [20, 587], "104": [22, 277, 327, 328, 329, 330, 331, 396, 397, 402], "1040": [2, 20], "1041": [2, 20], "1042": [20, 559, 574], "1043": 20, "10431": 20, "1044": 20, "1045": 20, "1046": 20, "1047": [20, 559, 574], "1048": 20, "1049": [20, 559, 574], "104a": 20, "104b": [20, 26, 28], "104c": [20, 26, 28], "104d": [20, 26, 28], "104e": [20, 26, 28, 585], "105": [22, 54, 277, 398, 399, 402], "1050": [2, 20, 216, 217, 254, 255, 585], "1051": [2, 20, 216, 217, 254, 255, 559, 577, 585], "1052": [20, 214, 251, 252], "1053": [20, 214, 251, 252, 559, 574], "1054": 20, "1055": 20, "1057": 20, "1058": 20, "105e": 20, "105f": 20, "106": [54, 277, 400, 401, 402], "1060": [2, 20], "1061": 20, "1062": 20, "1067": [559, 574], "1068": 53, "106a": 20, "106b": 20, "107": [20, 277, 353, 402, 559, 566], "1070": [2, 20], "1071": 20, "1072": 20, "1073": [20, 559, 574], "1074": [20, 516, 519], "1075": [20, 559, 574], "1076": 20, "1078": [559, 574], "1079": 585, "107d": 20, "108": [277, 352, 402, 520], "1082": [559, 574], "1083": 53, "1086": [559, 574], "109": [20, 21, 581], "1090": [2, 20], "1091": 20, "10918": [39, 46, 219, 256, 379, 559, 577], "1092": 20, "1093": [20, 559, 575], "1094": 53, "1097": [559, 574], "1099": 20, "10da": 20, "10db": 20, "10dc": 20, "10dd": 20, "10de": 20, "10e6": 20, "10e7": 20, "10e9": 20, "11": [11, 20, 23, 214, 215, 216, 217, 251, 252, 253, 254, 255, 276, 282, 284, 298, 299, 350, 351, 414, 435, 455, 471, 495, 500, 505, 515, 559, 579, 580, 592], "110": [54, 559, 565], "1100": 20, "1101": [559, 572], "1103": [559, 572, 575], "111": [559, 565], "1110": 20, "111079": 20, "1111": 20, "112": 54, "1120": 20, "1127": [559, 575], "112749": 20, "1129": 53, "112936": 20, "113": [559, 566], "1130": [10, 20], "113008": 20, "1133": [559, 580], "114": [559, 566], "1140": [559, 575], "1141": 10, "1142": 10, "1146": [559, 575], "1147": [559, 577], "1149": [559, 575], "1150": 20, "1151": 20, "1152": 20, "1153": [559, 575], "1155": [559, 575], "1156": [559, 575], "116": [20, 26, 27, 28, 54], "1160": 20, "1161": [559, 575], "117": [559, 562], "1178": [559, 575], "118": 10, "1181": [559, 575], "119": [559, 562], "1190": [20, 559, 575], "1193": [559, 575], "1196533885": 10, "12": [0, 30, 34, 39, 54, 70, 209, 244, 245, 340, 341, 454, 495, 508, 510, 515, 587, 592], "120": [20, 54], "1200": [54, 559, 575, 592], "1200x900": 0, "1201": [213, 250], "1203": [213, 250], "1204": [213, 250], "1210": 20, "121006": 591, "1211": [559, 575], "1215": [559, 575], "122": [559, 562], "1220": 587, "1221": [213, 250], "1223": [213, 250], "1224": [213, 250], "1227": 53, "123": [515, 586], "12322": [20, 26, 28, 48, 585], "1234": [559, 575], "12345": [43, 132], "123456": 12, "1234567": 172, "1234abcd": [20, 585], "1237": [559, 575], "123e": 515, "1240": [559, 575], "1243": [559, 580], "125": [559, 568], "1251": [559, 576], "1253": [559, 576], "1254": [559, 576], "126": [2, 20, 26, 28, 585, 592], "1262": [559, 577], "1263": [559, 580], "127": 37, "1278": [559, 577], "128": [2, 9, 12, 20, 26, 28, 37, 133, 155, 167, 177, 178, 179, 183, 196, 386, 431, 585, 590], "128002": 591, "129": [20, 590], "13": [11, 271, 286, 287, 288, 290, 506, 507, 518], "130": 336, "131": [54, 281], "1311": 585, "1312": [559, 577], "1314": [2, 20], "1318": 53, "1327": [559, 577], "133": [20, 167], "1332": [559, 577], "1336": 53, "1338": [559, 577], "1340": [559, 577], "1341": [559, 577], "1346": 53, "1348": [559, 577], "135803": 20, "1359940846": [10, 587], "1361": [559, 577], "13656": 36, "1369": 53, "137": 54, "1372": [559, 577], "14": [20, 47, 145, 233, 234, 364, 365, 483, 559, 574], "1400": [172, 587], "1410": [172, 587], "1412": [559, 577], "1414": [559, 579], "1415": [559, 577], "14159": [516, 519], "14180": 37, "1420": [172, 587], "1428": [559, 577], "143": [559, 568], "1430": [170, 587], "1434": [559, 577], "1436": 585, "1438": [559, 577], "1444": [559, 577], "1449": [559, 577], "14495": [37, 376], "1457": [559, 577], "1479": 10, "1481": [559, 580], "1487": [559, 578], "149188": 37, "1498": [559, 578], "15": [2, 8, 20, 463, 581, 585, 592], "150": [20, 54], "1500": [172, 559, 578], "150031": [24, 26, 27, 43], "151": [559, 568], "1510": 172, "1511": [172, 559, 578], "1512": 172, "152": 43, "152342": 36, "1529": [559, 580], "153557": [24, 26, 28, 43], "15444": [36, 262, 371], "156": [26, 27, 43], "1565": [559, 578], "157": 43, "1571": [559, 578], "1576": 20, "158": 20, "1581": [559, 578], "1582": 36, "1588": [559, 578], "159": [20, 559, 572], "1593": [559, 578], "1594": [559, 578], "1596": [559, 578], "1599": [559, 578], "16": [2, 8, 20, 26, 28, 30, 34, 36, 37, 38, 39, 47, 57, 129, 132, 133, 134, 135, 209, 211, 212, 267, 451, 523, 524, 546, 559, 572, 580, 590, 592], "1600": [2, 8, 20], "1601": 20, "1605775145": 20, "1606": [559, 578], "1609": [559, 578], "1611": [559, 579], "1617": [559, 578], "1632": [559, 579], "1634": [559, 579], "1638": [559, 579], "164": 43, "1648": [559, 579], "1658": [559, 579], "166": 43, "1661": [559, 579], "1666": [559, 580], "1667": [559, 579], "1670": [559, 579], "167161297070865690102504091919570542144": 511, "1674": [559, 579], "1680": [559, 579], "1683": [559, 579], "1689": [559, 580], "1693": [559, 579], "17": [20, 54, 452], "170": 20, "1702": [559, 579], "1703": 585, "171": 43, "17106": 587, "17136": 587, "17166": 587, "17196": 587, "172": [559, 568], "1728": [559, 579], "173032": [10, 587], "1734": [559, 579], "1738": [559, 579], "1743": [559, 580], "1747": [559, 579], "175": 43, "1752": [559, 580], "1773": [559, 580], "1774": [559, 580], "178": 20, "1781": [559, 580], "1788": [559, 579], "179": 20, "1792": [559, 579], "18": [129, 132, 133, 134, 482, 559, 568, 586], "180": [20, 43], "1803": [559, 579], "181": 43, "18148": 10, "1816": [559, 580], "183": 43, "1838265625": [559, 580], "184": 43, "1844": [559, 580], "1848": [559, 580], "185059": [2, 8, 20], "185434": [2, 8, 20], "185620": 12, "1858": 587, "186": 43, "1860": 587, "1873": [559, 580], "1874": [559, 580], "187460": 38, "1895": 85, "19": 289, "190": [2, 20, 43], "19000101": 17, "1907": [559, 580], "192": [20, 26, 28, 48, 585], "1922": [559, 580], "1943": [559, 580], "1957": 590, "1965": [559, 580], "1968": [559, 580], "1969": 20, "197": [559, 568], "197968": 20, "1983": [559, 580], "1994": [559, 580], "19950903": [10, 587], "1997": [559, 580], "19970430": 20, "19999694824219": 20, "199999809265137": 20, "1c": [3, 183, 196, 209, 211, 212, 260, 261, 268, 592], "1c32791bf0": [559, 563], "1ct1": [9, 20, 26, 28, 587], "1d": [98, 206, 209, 210, 211, 212, 236, 248, 265, 268], "1f": 11, "2": [0, 2, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 32, 33, 34, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 53, 54, 57, 81, 83, 85, 86, 87, 90, 97, 100, 101, 103, 104, 107, 109, 110, 111, 112, 129, 131, 132, 133, 134, 135, 136, 139, 140, 141, 145, 146, 149, 150, 151, 162, 170, 196, 206, 209, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 262, 264, 265, 266, 268, 269, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 515, 520, 528, 530, 546, 562, 563, 565, 566, 568, 569, 571, 572, 580, 583, 585, 587, 589, 590, 592], "20": [20, 36, 54, 132, 133, 134, 257, 269, 415, 464, 559, 577], "200": [36, 291, 293, 434, 503, 504], "2000": [2, 8, 20, 29, 35, 39, 46, 81, 132, 133, 134, 145, 223, 224, 225, 227, 228, 237, 238, 239, 246, 247, 249, 262, 264, 266, 268, 371, 559, 572, 575, 580, 589, 590], "200000": 20, "20010101": [10, 132, 587], "20030505": [10, 587], "20030716": [24, 26, 27, 28, 43], "20030903": [24, 26, 27, 43], "20030903150023": [24, 26, 27, 43], "20040119": [9, 20, 26, 28, 585], "20040119072730": [20, 26, 28, 48, 585], "20040826": [2, 8, 20], "20040826185059": [2, 8, 20], "2006": [132, 133, 134], "2008": [22, 520, 559, 580], "2009": [559, 580], "201": [224, 245, 277, 355, 366, 371], "2010": [559, 580], "2011": [559, 564, 565], "2012": [219, 256], "2013": [559, 580], "2017c": [559, 568], "2018": [23, 584], "2018b": [559, 569], "2018c": [559, 570], "2019": 23, "2019e": [559, 572], "202": [225, 245, 277, 356, 371], "2020": 23, "2020d": [559, 575], "2021": [23, 559, 579], "2021b": [559, 577], "2022": 23, "2022a": [559, 578], "2023": 23, "2023b": [559, 579], "2023d": [559, 580], "2024": [23, 549], "20240501": 12, "203": [43, 223, 245, 277, 354, 371], "20304870605469": 20, "204": [10, 13, 277, 380, 581], "2040634155": [9, 20, 26, 28], "20406341552734": 20, "2047": [516, 519], "205": [277, 381, 559, 572], "2068": 20, "207": 43, "20x": [38, 46, 132, 133, 134, 559, 577], "21": [20, 54, 453], "212": [559, 568], "216": 43, "219482421875": 20, "21b0": 20, "22": [338, 457], "224": [3, 5, 581], "22463838056059845879389038257786771680": 511, "2281": 587, "229": 5, "23": [337, 559, 580], "2338": 587, "235": 43, "236": 583, "239": [24, 26, 27, 28, 43], "23e": 515, "23e2": 515, "24": [20, 36, 333], "240": [2, 8, 20], "240000": [54, 592], "24078": 20, "243": [559, 575], "2452": 585, "25": [54, 448, 511, 516, 519], "253": 22, "255": 37, "256": [559, 569], "256x256": [52, 53], "258": [559, 568], "261": 22, "261792": 37, "263": [559, 572], "265": 22, "270": 591, "273": [559, 572], "276": [10, 587], "277": [22, 559, 572], "280": 53, "285": 53, "291": [559, 570], "292": [559, 569], "29282": 52, "298": 53, "299316": 20, "2d": [51, 559, 575], "3": [2, 4, 5, 8, 10, 12, 16, 17, 19, 20, 22, 23, 26, 28, 30, 32, 34, 36, 37, 38, 39, 43, 44, 47, 48, 53, 54, 57, 100, 107, 109, 110, 111, 129, 131, 132, 133, 134, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 156, 158, 159, 170, 174, 181, 182, 183, 196, 206, 209, 211, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 249, 251, 252, 253, 254, 255, 256, 257, 266, 268, 269, 271, 277, 278, 288, 294, 313, 315, 317, 318, 326, 331, 334, 382, 407, 410, 429, 434, 435, 456, 468, 477, 486, 488, 493, 511, 515, 516, 518, 519, 522, 547, 548, 549, 562, 563, 565, 566, 567, 568, 569, 570, 574, 575, 576, 579, 583, 584, 585, 586, 587, 590, 592], "30": [24, 26, 27, 28, 54, 55, 426, 584], "300": [53, 132, 133, 134], "3000": [52, 132, 133, 134, 206, 214, 251, 252, 559, 572, 585], "3002": [214, 215, 216, 251, 252, 253, 254, 559, 572], "3006": [559, 574], "300a": [18, 26, 27, 28, 45], "300c": [26, 27, 28], "3010": [215, 216, 253, 254], "302": 53, "303459": 12, "304": [53, 590], "31": 139, "310": 22, "3100585938": 20, "311": 13, "3125": [2, 8, 20], "3126": 587, "316": 22, "31906": [10, 587], "32": [34, 36, 39, 132, 133, 134, 135, 140, 149, 209, 212, 267, 515, 546, 559, 569, 577, 580, 592], "320": [20, 53], "3204": 585, "321": 22, "321000e": 515, "324": [22, 516, 519], "327": 22, "32768": [20, 26, 28, 36, 37, 585], "328": 53, "33": 301, "331": 53, "333": 590, "334": 53, "334412": 36, "338": 20, "339": 53, "34": [300, 440, 442], "346": [22, 559, 568], "35": [129, 132, 133, 134, 174, 345], "350": 20, "353": [559, 568], "355": 53, "363": 22, "3678b1be6aca": [559, 566], "3680043": [424, 425, 511], "37": [54, 271, 518], "371919006": 591, "373": [20, 22], "374": 53, "377": 53, "378": 53, "38": [36, 357], "380": 583, "3816": 20, "39": 297, "3994": 20, "3d": [2, 4, 8, 20, 248, 265, 559, 575], "3ed": 22, "3rd": [213, 214, 215, 216, 249, 250, 251, 252, 253, 254, 266], "4": [2, 8, 9, 10, 12, 16, 20, 21, 23, 24, 26, 28, 34, 36, 37, 38, 39, 41, 43, 46, 47, 48, 53, 131, 132, 133, 134, 139, 141, 145, 146, 149, 150, 151, 152, 178, 179, 183, 196, 214, 215, 216, 217, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 241, 244, 245, 246, 251, 252, 253, 254, 255, 268, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 433, 434, 435, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 516, 519, 542, 565, 570, 571, 574, 575, 577, 580, 583, 585, 587, 591, 592], "40": [20, 36, 54, 433, 559, 577], "400": [20, 53], "4000": [2, 8, 20], "4095": [30, 34, 39, 244], "413": 53, "414": 515, "41421356": 515, "42": [16, 559, 562], "422": 53, "424152": 38, "43": [349, 559, 562], "431": 53, "44": [20, 359], "45": 360, "452": [559, 572], "46": 584, "46076": 36, "46100": 36, "464": [559, 569], "46af": 587, "47": [559, 562], "480": 20, "481": [24, 26, 289, 290, 333, 337, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 463, 464, 482, 483], "484": 52, "489": [559, 569], "494": 86, "498": [53, 424, 425, 511, 559, 569], "4ed698a7bfb": [559, 565], "4mr1": [2, 8, 17, 20], "5": [8, 9, 10, 12, 13, 16, 20, 22, 23, 24, 26, 32, 36, 37, 38, 39, 43, 46, 47, 53, 54, 57, 129, 131, 132, 133, 134, 135, 139, 141, 144, 145, 146, 147, 148, 149, 151, 152, 200, 206, 212, 215, 216, 217, 219, 235, 242, 245, 246, 248, 253, 254, 255, 256, 257, 265, 268, 269, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 357, 358, 359, 360, 361, 363, 364, 365, 366, 382, 383, 384, 385, 386, 387, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 433, 434, 435, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 515, 520, 574, 575, 583, 584, 585, 587, 590, 592], "50": [8, 47, 53, 54, 145, 229, 245, 268, 277, 372, 379, 406, 486], "500": [583, 585], "501": [307, 308, 309, 310, 311, 312, 313], "51": [2, 8, 20, 47, 145, 230, 245, 277, 373, 379], "510": 587, "5100": [2, 20, 45], "512": [2, 20, 162, 206, 559, 569], "512x512": [52, 53], "51698a8366f2": 587, "52": [559, 565], "524288": 55, "531250000000": [24, 26, 27, 28], "53579711914062": 20, "537": [559, 572], "54": [511, 559, 580], "5400": [54, 132, 133, 134, 546, 592], "5457": [2, 8, 20], "55": [54, 559, 562], "566": 53, "57": [47, 145, 233, 245, 268, 277, 377, 379, 559, 570, 575, 580], "58": [559, 562], "581": 585, "584": [559, 570], "59": 383, "5962": [2, 8, 10, 20, 26, 28, 48, 585], "597": [559, 569], "599": [559, 569], "5e": [516, 519], "5x": [47, 132, 133, 134, 559, 577], "6": [2, 8, 10, 20, 23, 26, 28, 32, 36, 39, 47, 48, 53, 57, 79, 129, 131, 132, 133, 134, 141, 209, 219, 256, 268, 271, 312, 339, 350, 413, 429, 443, 462, 476, 484, 487, 494, 501, 513, 517, 518, 520, 560, 565, 566, 568, 575, 576, 579, 580, 584, 585, 592], "60": [54, 559, 566, 577], "600": [2, 8, 20], "6000": 52, "6002": 52, "60060977935791": [20, 26, 28, 585], "601": [323, 324], "601e": 52, "605": [559, 569], "60xx": [52, 206, 257, 269, 559, 572, 585], "6154": 587, "62": 54, "620": [559, 569], "623": [559, 574], "624": [559, 570], "6247": 587, "625": [559, 569], "6278": 587, "628": 53, "63": [2, 8, 20, 585], "630": 20, "631": 585, "63580322265625": 20, "64": [2, 8, 20, 32, 34, 36, 39, 53, 209, 218, 258, 267, 511, 546, 559, 562, 592], "640": [559, 569], "6406": [2, 8, 20], "649": [559, 569], "65": [54, 295], "650": [26, 27], "65535": [30, 34, 39, 244, 587], "66": [315, 460, 470, 474, 475, 481, 484], "660": [559, 570], "661468": [9, 20], "663": [559, 570, 581], "666": [559, 571], "667": 511, "67": [461, 509], "6716": 20, "677": [559, 570], "678": [585, 590], "68": [54, 459, 479, 480], "682": [559, 570], "685": [559, 572], "6854": 585, "689": [559, 570], "69": 296, "693": [559, 572], "695": [559, 570], "696": [559, 570], "69999694824219": 20, "699997": 20, "699999809265137": 20, "6b949a5b925b": [559, 566], "7": [10, 20, 23, 24, 26, 27, 36, 39, 43, 53, 131, 135, 139, 151, 172, 196, 200, 209, 219, 256, 268, 277, 299, 316, 325, 326, 409, 410, 411, 412, 416, 418, 440, 458, 465, 466, 467, 468, 469, 473, 503, 513, 517, 566, 570, 579, 580, 584, 587, 592], "70": [47, 145, 234, 245, 268, 277, 361, 378, 379, 559, 574, 575, 580], "700": [10, 559, 570, 587], "700000": 20, "704": [559, 570], "706": 53, "707": [559, 570], "71": 275, "713": [559, 570], "715": [559, 570], "716": [559, 570], "717": [559, 570], "718": 20, "72": [472, 559, 562], "722": [559, 570], "7230010": [10, 587], "726": [559, 570], "728": [559, 570], "729": [559, 570], "73": [427, 559, 562], "730": [559, 571], "7369": 585, "737": [559, 570], "74": 430, "740": [559, 570], "7400": 20, "741": [26, 27], "746": [559, 580], "748": 20, "749": 20, "75": [20, 26, 27, 54, 428], "750": 20, "750675506": 20, "751": [24, 26, 27, 28], "753": [559, 571], "757": [559, 571], "76": 342, "760": [559, 571], "763": 20, "764": 20, "7654321": 172, "77": [9, 20, 24, 26, 27, 28, 43, 303, 304, 316, 417, 418, 419, 420, 422, 477, 490, 491, 492, 493, 494, 496, 497, 498, 501, 502], "770": 53, "774b7a55db33": [559, 566], "77654033": [10, 587], "777": [24, 26, 27, 43], "7777": [24, 26, 27, 43], "78": [280, 363, 382, 387, 416, 476, 478, 499, 559, 563], "78187": [10, 587], "784578": 20, "785": [559, 571], "788": [559, 571], "789": [559, 571], "79": [405, 559, 563], "791": [559, 571], "79187": 20, "799": [559, 571], "799988": 20, "7fe0": [2, 20, 26, 28, 41, 43, 53, 68, 98, 132, 133, 134, 142, 144, 145, 146, 147, 148, 162, 209, 210, 211, 212, 261, 547, 553, 554, 559, 568, 572, 580, 585], "8": [2, 8, 11, 20, 22, 23, 26, 27, 30, 34, 36, 37, 38, 39, 43, 47, 53, 82, 135, 174, 175, 206, 209, 211, 212, 215, 216, 217, 237, 244, 245, 248, 253, 254, 255, 257, 265, 267, 268, 269, 276, 285, 303, 363, 417, 424, 425, 447, 486, 504, 511, 522, 546, 561, 564, 568, 570, 572, 575, 578, 579, 580, 592], "80": [2, 8, 20, 36, 41, 46, 47, 54, 132, 133, 134, 145, 231, 240, 245, 246, 268, 277, 374, 376, 423, 592], "800": 36, "804": [559, 571], "81": [46, 47, 54, 132, 133, 134, 145, 232, 241, 245, 246, 268, 277, 375, 376, 421, 559, 563], "810": [559, 571], "815": [559, 571], "819": [559, 571], "8192": [20, 180], "82": [306, 559, 563], "820": [559, 571], "822": [559, 572], "826": [424, 425, 511, 559, 572], "826203": [26, 27], "83": [2, 8, 20], "833": 585, "835": [559, 571], "838": [559, 571], "84": [559, 563], "840": [8, 9, 12, 24, 26, 46, 47, 53, 132, 133, 134, 145, 209, 212, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 245, 246, 268, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 433, 434, 435, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 559, 569, 570, 572, 574, 575, 580, 583, 585], "848": [559, 572], "84af4b240add": [559, 566], "85": 54, "850": [559, 571], "8508": 37, "852": [20, 559, 571], "856": [559, 571], "8601": [513, 517, 521], "862": 53, "862399669": 20, "862399761": 20, "864": [559, 571], "86e6b75b": 587, "87": [20, 37], "87000000000": [24, 26, 27, 28], "871": [219, 256], "87507166259346337659265156363895084463": 511, "878": [559, 577], "88": [26, 27, 43, 275, 282, 295, 296, 300, 301, 338, 342, 345, 361, 383, 406, 427, 428, 430, 433, 459, 472, 509, 559, 563], "887": [559, 572, 585], "888": [26, 27, 43], "89": 11, "891": [559, 572], "892": [559, 572], "894": [559, 572], "896": [559, 572], "899": [559, 572], "8d": 11, "9": [20, 23, 26, 27, 36, 37, 38, 43, 53, 54, 82, 174, 175, 206, 278, 279, 283, 285, 294, 304, 325, 326, 346, 347, 348, 358, 413, 436, 437, 446, 462, 465, 473, 485, 500, 511, 569, 572, 575, 580, 592], "90": [2, 8, 20, 46, 47, 54, 132, 133, 134, 145, 228, 239, 245, 246, 268, 277, 305, 368, 371, 559, 572], "904": 43, "905": [43, 53], "906": 43, "9063": [2, 8, 20], "907": 53, "909": 43, "91": [2, 8, 20, 46, 47, 132, 133, 134, 145, 227, 238, 245, 246, 268, 277, 367, 371, 408, 559, 564, 572], "910": 43, "911": 43, "912": [20, 559, 572], "914": 43, "915": [559, 572], "916": [43, 559, 562], "917": [559, 572], "92": [47, 145, 277, 370, 371, 559, 569, 570], "921600": [36, 37, 38], "921f9f01b866ep": [516, 519], "922": 43, "9223372036854775807": 131, "923": 43, "924339": [2, 8, 20], "925": 43, "927": 43, "929": 43, "93": [47, 54, 145, 277, 369, 371, 559, 564, 570], "932": [559, 572], "938": 43, "940": [559, 572], "942": [43, 559, 572], "947": [559, 572], "95": [20, 559, 565, 568], "951": [559, 572], "954": 43, "955": [20, 43], "959": 43, "96": [559, 564], "968": [559, 572], "97": [559, 564], "971": [559, 572], "973283917": 20, "98": [559, 565], "981": [559, 572], "9834": 511, "984": 20, "984375": [516, 519], "98890234": [10, 587], "98892001": 587, "98892003": 587, "99": [26, 27, 43, 47, 209, 220, 245, 277, 314, 489], "994": [559, 572], "999": [26, 27, 43, 559, 572], "9990268": [26, 27], "9999": [26, 27, 43, 584], "999999999999ap": [516, 519], "9b92b336e7d4": [559, 566], "A": [10, 20, 28, 30, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 55, 77, 78, 90, 105, 106, 108, 132, 133, 134, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 158, 159, 160, 162, 163, 170, 172, 173, 174, 175, 181, 182, 183, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 249, 250, 251, 252, 253, 254, 255, 258, 261, 262, 264, 266, 267, 268, 486, 511, 512, 515, 520, 522, 533, 540, 543, 544, 559, 569, 577, 580, 583, 585, 587, 590], "AS": [20, 32, 541], "AT": [32, 526, 559, 572, 577, 579], "And": [25, 26, 27, 28, 30, 559, 575, 583, 584, 585, 592], "As": [44, 47, 48, 515, 585, 591], "At": [30, 34, 583, 591], "Be": 47, "Being": 590, "But": 585, "By": [24, 26, 53, 170, 172, 519, 559, 563, 585], "For": [0, 17, 24, 26, 27, 30, 34, 36, 37, 38, 39, 41, 43, 44, 48, 52, 53, 55, 121, 129, 132, 133, 134, 139, 145, 146, 149, 170, 172, 206, 218, 236, 237, 243, 244, 247, 248, 249, 258, 264, 265, 266, 268, 515, 520, 559, 565, 575, 580, 583, 584, 585, 587, 589, 590], "IN": [205, 270], "If": [24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46, 50, 53, 54, 55, 57, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 95, 98, 101, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 139, 142, 143, 144, 145, 146, 148, 149, 152, 153, 156, 158, 159, 160, 162, 163, 164, 167, 171, 172, 173, 174, 180, 181, 182, 183, 195, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 236, 237, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 263, 264, 265, 266, 267, 269, 270, 271, 272, 486, 511, 512, 515, 516, 517, 518, 520, 522, 523, 527, 528, 529, 530, 535, 539, 542, 546, 559, 565, 577, 580, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592], "In": [24, 25, 26, 27, 30, 34, 37, 39, 41, 43, 45, 46, 48, 53, 55, 77, 172, 486, 515, 522, 559, 567, 573, 575, 579, 580, 583, 584, 585, 587, 590], "Into": 583, "It": [17, 26, 27, 30, 34, 42, 43, 44, 45, 46, 48, 50, 51, 53, 55, 132, 133, 134, 146, 172, 183, 559, 565, 566, 583, 584, 585, 586, 587, 589, 590, 592], "Its": 129, "NEAR": 37, "NOT": [206, 236, 243, 260], "Near": [46, 132, 133, 134, 145, 232, 241, 245, 246, 559, 580, 590], "No": [20, 36, 175, 532, 582], "Not": [515, 525, 526, 527, 528, 529, 530, 535, 536, 538, 541], "OF": [32, 183, 559, 574], "ON": 20, "OR": 520, "Of": 10, "On": [20, 39, 180, 520, 586], "One": [16, 29, 41, 45, 48, 52, 55, 109, 110, 111, 129, 132, 133, 134, 213, 219, 236, 243, 250, 256, 583, 584], "Or": [43, 589], "That": [44, 48], "The": [0, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 70, 77, 78, 79, 80, 98, 100, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 162, 164, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 195, 196, 198, 199, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 236, 237, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 274, 486, 511, 512, 513, 515, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 559, 562, 569, 570, 575, 580, 583, 584, 585, 586, 589, 590, 591, 592], "Then": [588, 589], "There": [36, 44, 50, 51, 53, 132, 133, 134, 559, 570, 583, 584, 585, 586, 592], "These": [1, 6, 7, 15, 40, 43, 44, 559, 575, 580, 585], "To": [10, 24, 26, 28, 36, 37, 38, 43, 44, 45, 47, 52, 54, 55, 155, 160, 237, 271, 518, 559, 565, 570, 575, 583, 584, 585, 587, 589, 592], "Will": [46, 110], "With": [37, 244, 486, 522], "_": [175, 584], "_1sigmalowervalueofpopul": 591, "__class__": [513, 517], "__contains__": [86, 559, 575], "__dir__": [559, 565], "__doc__": [0, 2, 8, 11, 14, 16, 20, 22], "__eq__": [559, 569, 577], "__getitem__": [132, 133, 134, 486, 522, 585], "__init__": [14, 129, 131, 132, 133, 134, 135, 156, 158, 159, 171, 172, 173, 205, 236, 237, 243, 244, 270, 271, 486, 513, 515, 516, 517, 518, 519, 520, 521, 522], "__iter__": [559, 560, 575, 585], "__main__": [0, 14, 25, 26], "__name__": [0, 14, 25, 26], "__ne__": [559, 569], "__new__": 514, "__next__": [559, 575], "__setattr__": 85, "__str__": [559, 569, 577, 585], "__traceback__": 155, "__write_like_origin": 183, "_blob": 14, "_build": 584, "_check_dataset": 587, "_dataset__write_like_origin": [132, 133, 134], "_define_assess": 170, "_define_empti": 170, "_define_encap_doc": 170, "_define_generic_cont": 170, "_define_generic_content_id": 170, "_define_hanging_protocol": 170, "_define_imag": 170, "_define_impl": 170, "_define_implant_assi": 170, "_define_implant_group": 170, "_define_key_object_doc": 170, "_define_palett": 170, "_define_pati": 170, "_define_present": 170, "_define_radiotherapi": 170, "_define_rt_dos": [170, 587], "_define_rt_plan": 170, "_define_rt_structure_set": 170, "_define_rt_treatment_record": 170, "_define_seri": 170, "_define_spectroscopi": 170, "_define_sr_docu": 170, "_define_studi": 170, "_define_surface_scan": 170, "_dicom_dict": 43, "_from_codifi": [24, 26], "_list": 585, "_new": 14, "_pretty_str": [8, 585], "_recordifi": 587, "_storage_sopclass_uid": [559, 575, 580], "_t": 545, "_validate_arrai": 590, "a1": 4, "a2": 4, "a3": 4, "ab": [486, 522, 546], "abc": 520, "abcd1234": [20, 585], "abil": [26, 27, 53, 559, 567, 568, 575, 580], "abl": [47, 48, 559, 574, 580, 586, 587, 590, 592], "about": [41, 43, 44, 45, 51, 53, 55, 95, 257, 269, 585, 587, 590, 592], "abov": [18, 24, 25, 26, 27, 28, 43, 48, 52, 55, 129, 132, 133, 134, 206, 237, 247, 249, 264, 266, 559, 569, 584, 587], "absenc": 146, "absent": [36, 37, 520, 592], "absolut": [33, 37, 105, 106, 107, 108, 132, 133, 134, 153, 156, 158, 159, 171, 172, 271, 515, 518, 559, 580, 590], "absorb_delimiter_item": 71, "abstract": [515, 587], "accept": [24, 26, 32, 44, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 132, 133, 134, 149, 559, 574, 575, 577, 579, 583], "access": [2, 8, 20, 23, 26, 27, 30, 34, 36, 37, 42, 43, 48, 52, 57, 70, 83, 100, 132, 133, 134, 162, 559, 561, 568, 574, 575, 579, 580, 584, 586, 587, 588, 591], "accessionnumb": 584, "accident": [583, 587], "accomplish": 48, "accord": [32, 55, 162, 194, 585, 587], "accordingli": [37, 38, 132, 133, 134], "account": 39, "achiev": [41, 141], "acknowledg": [559, 566], "acm": [16, 48, 111], "acq": 20, "acquisit": [2, 8, 20], "acquisitiondata": 584, "across": [559, 565, 580], "act": 585, "activ": 589, "actual": [10, 20, 25, 26, 29, 30, 34, 37, 39, 43, 46, 52, 129, 132, 133, 134, 172, 183, 206, 209, 212, 237, 244, 583, 587, 590], "ad": [20, 25, 26, 27, 36, 37, 38, 41, 43, 49, 57, 81, 83, 85, 86, 90, 92, 97, 100, 101, 103, 104, 107, 129, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 148, 150, 151, 152, 153, 170, 172, 173, 181, 182, 183, 196, 205, 211, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 262, 264, 265, 266, 269, 271, 432, 486, 528, 530, 546, 559, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580, 582, 583, 586, 591], "adam": 520, "adapt": [47, 559, 570], "adapt_dataset_from_byt": 14, "add": [0, 2, 6, 10, 12, 15, 18, 19, 20, 25, 26, 27, 30, 34, 41, 43, 44, 48, 52, 109, 111, 112, 129, 132, 133, 134, 135, 139, 140, 170, 172, 173, 183, 237, 244, 248, 265, 515, 559, 568, 571, 577, 579, 580, 581, 583, 584, 585, 587, 590, 592], "add_argu": [25, 26], "add_custom": [170, 172, 587], "add_dict_entri": [43, 48, 112, 559, 568, 571], "add_new": [16, 48, 132, 133, 134, 135, 585], "add_new_priv": [48, 132, 133, 134, 559, 580], "add_pars": [25, 26], "add_plugin": [30, 34, 237, 244], "add_private_dict_entri": [16, 43, 48, 559, 571], "add_subpars": [25, 26], "addit": [20, 26, 27, 28, 30, 34, 39, 77, 132, 133, 134, 171, 172, 237, 244, 247, 249, 264, 266, 517, 520, 521, 567, 575, 577, 580, 586, 587, 589, 590], "addition": 520, "adher": 44, "adit": [559, 562], "adjust": 515, "admin": 589, "advanc": [30, 34, 41], "advantag": [20, 559, 566], "ae": [2, 20, 26, 28, 32, 48, 196, 525, 541, 559, 568, 580, 585], "affect": [30, 34, 207, 208, 209, 210, 211, 212, 261, 515, 583, 584], "after": [2, 8, 20, 26, 27, 28, 29, 30, 34, 37, 41, 48, 51, 141, 143, 146, 152, 153, 167, 173, 178, 179, 180, 183, 196, 236, 237, 247, 249, 264, 266, 486, 515, 522, 559, 574, 577, 580, 583, 584, 585, 587, 589, 590], "afterward": [153, 583], "ag": [20, 32], "again": [44, 45, 55, 583, 587], "against": [44, 129, 172, 559, 564, 575], "agent": [2, 8, 20], "aid": [559, 567], "aim": [41, 559, 575], "al": 23, "algorithm": [38, 511], "alia": [131, 559, 575], "alias": [559, 561, 574], "align": 52, "all": [4, 6, 8, 10, 12, 17, 20, 24, 26, 27, 28, 37, 39, 42, 43, 44, 46, 49, 55, 70, 98, 111, 129, 132, 133, 134, 137, 138, 139, 141, 146, 149, 156, 158, 159, 162, 172, 174, 181, 182, 183, 205, 237, 244, 247, 249, 264, 266, 270, 277, 486, 515, 522, 553, 554, 559, 560, 561, 562, 565, 567, 570, 572, 575, 577, 578, 579, 580, 581, 583, 584, 585, 589, 590], "alloc": [2, 8, 20, 29, 36, 37, 38, 39, 41, 47, 132, 133, 134, 209, 212, 236, 237, 243, 247, 248, 249, 257, 259, 264, 265, 266, 267, 269, 559, 579, 580, 592], "allow": [16, 17, 24, 26, 27, 36, 37, 39, 43, 44, 48, 52, 57, 89, 132, 133, 134, 170, 172, 248, 265, 519, 559, 561, 562, 571, 574, 575, 577, 578, 579, 580, 589], "allow_ds_float": [549, 559, 565], "alltransfersyntax": [559, 575], "almar": [559, 563], "almost": 53, "alon": 77, "along": [23, 172], "alpha": [20, 213, 250, 486, 522, 559, 571, 572, 591], "alphabet": [132, 133, 134, 486, 520, 522, 559, 579], "alphanumer": [172, 174, 559, 580], "alreadi": [26, 28, 36, 37, 38, 40, 41, 46, 53, 77, 110, 132, 133, 134, 136, 146, 173, 177, 196, 205, 248, 265, 514, 559, 567, 585, 587, 590, 592], "already_convert": 129, "also": [3, 17, 26, 27, 28, 29, 30, 32, 34, 37, 39, 41, 43, 45, 48, 50, 51, 53, 55, 79, 119, 132, 133, 134, 167, 196, 237, 244, 247, 249, 264, 266, 271, 486, 515, 518, 520, 522, 559, 560, 561, 562, 563, 566, 567, 570, 571, 575, 580, 583, 584, 585, 586, 587, 589, 590, 591, 592], "alter": [45, 55], "altern": [10, 23, 43, 132, 215, 216, 217, 253, 254, 255, 583, 585, 587], "although": [53, 172, 587], "alwai": [26, 28, 47, 48, 53, 121, 129, 135, 162, 209, 218, 237, 247, 249, 258, 264, 266, 268, 515, 559, 571, 575, 577, 580], "am": 584, "ambigu": [181, 182, 559, 568, 570, 571, 575], "american": 41, "amongst": 173, "amount": [46, 132, 133, 134, 207, 236, 515, 590, 592], "an": [2, 10, 11, 16, 23, 24, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 55, 57, 77, 78, 79, 85, 86, 87, 90, 98, 107, 108, 110, 116, 119, 120, 126, 129, 130, 132, 133, 134, 135, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 162, 163, 172, 173, 182, 183, 193, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 236, 237, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 257, 260, 262, 263, 265, 266, 267, 269, 270, 271, 274, 486, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 539, 546, 559, 562, 563, 569, 571, 572, 574, 575, 577, 578, 580, 583, 584, 585, 587, 589, 590, 591, 592], "analog": [48, 132, 133, 134], "analys": [6, 21, 581], "anatom": 20, "ancestor": [172, 173, 181, 182], "angl": [2, 8, 20], "ani": [0, 10, 24, 26, 27, 29, 30, 32, 34, 36, 37, 39, 43, 44, 51, 52, 54, 80, 93, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 132, 133, 134, 136, 139, 140, 141, 155, 156, 157, 158, 159, 164, 172, 173, 183, 196, 205, 206, 216, 217, 218, 236, 237, 243, 244, 247, 248, 249, 254, 255, 258, 264, 265, 266, 271, 272, 486, 513, 515, 516, 517, 518, 519, 520, 521, 522, 534, 538, 544, 545, 559, 561, 562, 571, 577, 580, 583, 584, 587, 589, 590], "annex": [10, 36, 37, 38, 39, 53, 54, 129, 132, 133, 134, 139, 141, 144, 145, 146, 147, 148, 149, 151, 152, 170, 209, 214, 215, 216, 217, 219, 248, 251, 252, 253, 254, 255, 256, 257, 265, 268, 269, 511, 587], "announc": [45, 98], "anonym": [6, 15, 19, 43, 48, 559, 560, 561, 571, 581], "anoth": [44, 219, 256, 559, 575, 585, 590], "answer": [38, 582, 585, 590], "anterior": 20, "anymor": 94, "anyon": [559, 567], "anyth": [32, 48, 52, 53, 248, 265], "anywher": [43, 585], "apertur": 18, "api": [41, 237, 244, 247, 249, 264, 266, 559, 569, 583, 586, 590, 591], "app": 22, "app14": [559, 577], "appear": [155, 587], "append": [4, 11, 18, 20, 43, 141, 205, 270, 511, 585, 592], "appli": [1, 6, 10, 16, 29, 36, 39, 53, 54, 68, 79, 81, 132, 133, 134, 172, 213, 214, 215, 216, 217, 236, 237, 247, 249, 250, 251, 252, 253, 254, 255, 264, 266, 555, 559, 572, 575, 584, 589, 592], "applic": [2, 20, 26, 27, 28, 32, 44, 46, 48, 196, 585, 590], "apply_color_lut": [53, 549, 559, 572, 580], "apply_j2k_correct": [549, 559, 580], "apply_j2k_sign_correct": 29, "apply_jls_sign_correct": 29, "apply_modality_lut": [53, 215, 216, 217, 253, 254, 255, 549, 559, 572, 574, 580], "apply_rescal": [559, 575, 580], "apply_voi": [216, 217, 254, 255, 549, 559, 575, 580], "apply_voi_lut": [53, 549, 559, 572, 574, 575, 580], "apply_window": [215, 216, 253, 254, 549, 559, 575, 580], "approach": 203, "appropri": [46, 52, 53, 132, 133, 134, 167, 205, 211, 515, 544, 590], "approv": [583, 584], "approx": [559, 562, 566], "approxim": 55, "appveyor": [559, 568], "apr": 584, "ar": [4, 10, 18, 24, 26, 27, 28, 29, 36, 37, 38, 39, 43, 44, 45, 47, 48, 50, 51, 52, 53, 55, 57, 70, 77, 78, 82, 83, 86, 95, 98, 102, 103, 109, 111, 112, 129, 132, 133, 134, 135, 136, 139, 140, 142, 144, 145, 146, 147, 148, 149, 156, 158, 159, 162, 167, 170, 172, 175, 181, 182, 183, 196, 205, 207, 208, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 247, 249, 250, 251, 252, 254, 255, 258, 259, 262, 264, 266, 267, 271, 486, 515, 517, 518, 520, 521, 522, 523, 538, 541, 543, 545, 559, 565, 570, 571, 572, 574, 575, 577, 578, 580, 582, 583, 584, 585, 587, 589, 590, 591, 592], "arang": [3, 592], "archibald": [10, 587], "archiv": 20, "area": 583, "aren": [172, 237, 244, 559, 580, 585, 587], "arg": [25, 26, 132, 133, 134, 155, 156, 157, 158, 159, 272, 486, 513, 517, 520, 521, 522, 559, 563], "arg2": [272, 559, 562], "argpars": [25, 26], "argument": [24, 25, 26, 27, 28, 41, 43, 46, 93, 132, 133, 134, 181, 182, 183, 204, 205, 270, 271, 486, 515, 517, 518, 521, 522, 559, 561, 562, 570, 571, 572, 573, 574, 575, 580, 586, 587, 590], "argv": [0, 4, 14], "arithmet": 515, "around": [43, 559, 580, 583], "arr": [2, 3, 37, 41, 43, 46, 52, 53, 54, 132, 133, 134, 206, 213, 214, 215, 216, 217, 219, 236, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 268, 590, 592], "arr_downsampl": 2, "arrai": [2, 4, 14, 20, 26, 28, 29, 37, 41, 43, 52, 53, 54, 55, 83, 98, 103, 129, 132, 133, 134, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 236, 237, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 264, 265, 266, 268, 271, 514, 518, 559, 560, 570, 571, 574, 575, 580, 585], "artifact": 584, "as_arrai": [29, 211, 237, 257, 269], "as_buff": [29, 237], "as_float": 267, "as_fram": 236, "as_integer_ratio": [271, 515, 516, 518, 519], "as_pixel_opt": 549, "as_raw": [3, 54, 546, 559, 579, 592], "as_rgb": 29, "as_tupl": 515, "ascii": [32, 175, 201, 486, 522, 559, 571], "ask": [38, 45, 582, 583, 584], "aspect": 4, "assert": [36, 37, 583, 586], "assess": 170, "assi": 170, "assign": [17, 43, 70, 129, 559, 565, 572, 578], "associ": [132, 133, 134, 236, 243], "assum": [4, 25, 26, 37, 46, 53, 90, 146, 486, 522, 559, 568, 587, 590, 592], "assume_implicit_vr_switch": [549, 559, 577], "astimezon": 517, "astyp": 592, "at_top_level": 163, "attach": 172, "attempt": [29, 30, 34, 145, 182, 183, 546, 559, 568, 577, 580, 585], "attr": 41, "attribut": [32, 39, 48, 70, 85, 129, 131, 132, 133, 134, 156, 158, 159, 171, 172, 173, 183, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 271, 486, 513, 515, 516, 517, 518, 519, 520, 521, 522, 559, 560, 570, 575, 578, 579, 580, 585, 587], "attributeerror": [181, 206, 207, 209, 211, 212, 237, 244, 559, 562, 578, 580, 585], "audio": [54, 592], "august": 23, "author": [2, 8, 9, 11, 12, 16, 17, 20, 22], "auto": [20, 132, 133, 134, 517, 521, 559, 560], "auto_exampl": [5, 13, 19, 21], "auto_examples_jupyt": 6, "auto_examples_python": 6, "auto_format": [514, 515, 516, 559, 577], "autocomplet": [132, 133, 134], "automat": [26, 27, 41, 43, 46, 48, 52, 53, 55, 98, 129, 132, 133, 134, 172, 181, 182, 183, 515, 516, 559, 568, 572, 574, 577, 583, 584, 585], "avail": [1, 6, 10, 15, 24, 26, 27, 28, 30, 33, 34, 43, 48, 51, 53, 54, 55, 107, 132, 133, 134, 139, 140, 142, 144, 148, 156, 158, 159, 172, 207, 208, 210, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 247, 249, 257, 262, 264, 266, 269, 520, 528, 530, 559, 561, 562, 566, 568, 569, 570, 572, 575, 587, 589, 590, 591, 592], "averag": [2, 8, 20], "averagin": 2, "avf": 592, "avg": 20, "avl": 592, "avoid": [44, 104, 163, 180, 514, 559, 571, 572, 575, 587], "avr": 592, "awai": 587, "awar": [30, 34, 55, 587], "ax": 3, "ax1": 592, "ax2": 592, "ax_aspect": 4, "axesimag": 51, "axi": 592, "axial": [1, 5, 6, 20, 26, 28, 48, 559, 571, 581, 585], "azimuth": 20, "b": [2, 8, 12, 16, 20, 22, 26, 27, 28, 37, 39, 43, 48, 52, 53, 129, 132, 133, 134, 156, 158, 159, 183, 511, 515, 520, 583, 584, 585], "b1": 39, "b2": 39, "b6b3658f3b14": [559, 565], "b764": 587, "back": [2, 14, 16, 20, 38, 41, 45, 52, 53, 55, 583, 584, 585, 587], "backend": [29, 559, 580], "backslash": [129, 132, 133, 134, 520, 540, 559, 560, 561, 577], "backup": 172, "backward": [559, 562, 568], "bad": [559, 568, 578], "balanc": 44, "bar": [559, 579], "bari": 591, "base": [6, 21, 36, 37, 38, 39, 45, 71, 82, 132, 133, 134, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 513, 515, 517, 521, 549, 553, 554, 559, 562, 568, 572, 575, 581, 583, 584, 587, 590, 592], "base64": [129, 132, 133, 134, 586], "baselin": [20, 39, 46, 47, 53, 145, 229, 245, 268, 486, 559, 579, 592], "basetag": [32, 43, 61, 86, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 131, 132, 133, 134, 135, 160, 162, 163, 166, 172, 176, 178, 179, 180, 247, 249, 264, 266, 272, 273, 274, 526, 542, 559, 562, 577], "basic": [11, 26, 27, 28, 42, 45, 46, 51, 54, 55, 72, 132, 133, 134, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 559, 572, 580, 587, 588, 590, 592], "bb": 22, "bbh": 20, "beam": [11, 18, 24, 26, 27, 28, 559, 565], "beam0": 18, "beam1": 43, "beamdosespecificationpoint": [24, 26], "beamnam": [11, 18, 43], "beamnumb": [11, 24, 26, 27, 28], "beamsequ": [11, 18, 24, 26, 27, 28, 43, 132, 559, 565], "bec3": 587, "becaus": [10, 24, 26, 37, 38, 39, 41, 43, 45, 52, 53, 55, 70, 155, 172, 583, 584, 585], "becom": [97, 559, 565, 575, 583, 584, 587], "been": [10, 25, 26, 39, 46, 47, 48, 53, 83, 90, 92, 132, 133, 134, 139, 140, 142, 143, 144, 145, 146, 148, 164, 171, 172, 174, 183, 195, 196, 236, 237, 243, 248, 265, 486, 514, 515, 522, 559, 562, 569, 574, 577, 578, 580, 583, 584, 585, 586], "befor": [38, 47, 48, 92, 129, 132, 133, 134, 162, 173, 180, 216, 217, 236, 237, 254, 255, 486, 522, 559, 562, 565, 566, 568, 571, 583, 584, 585, 587, 590, 592], "beforehand": 589, "began": 591, "begin": [43, 101, 139, 152, 167, 271, 486, 518, 522], "behav": [43, 44, 112, 205, 559, 569, 571, 587], "behavior": [43, 44, 57, 85, 86, 97, 132, 133, 134, 559, 566, 570, 574, 575], "being": [37, 39, 104, 113, 114, 115, 117, 118, 121, 123, 124, 125, 128, 132, 133, 134, 146, 156, 158, 159, 212, 244, 559, 560, 570, 577, 578, 580, 587, 589, 590], "belong": [130, 132, 133, 134, 171, 172], "below": [26, 28, 32, 36, 37, 38, 43, 45, 46, 48, 173, 183, 206, 209, 211, 212, 268, 546, 559, 562, 587, 590, 591], "best": [29, 49, 70], "beta": 586, "better": [37, 41, 559, 563, 565, 569], "between": [6, 21, 37, 38, 41, 52, 53, 110, 206, 486, 522, 559, 580, 581, 583, 584, 585, 590], "big": [29, 33, 34, 39, 47, 132, 133, 134, 142, 143, 144, 148, 152, 153, 156, 158, 159, 183, 209, 212, 221, 237, 245, 271, 277, 486, 512, 518, 559, 579, 580, 592], "bigger": [55, 559, 574], "bin": [271, 518, 583, 584], "binari": [24, 26, 129, 132, 133, 134, 248, 265, 271, 515, 518, 559, 563, 571, 572], "binaryio": [132, 133, 134, 160, 162, 163, 164, 166, 167, 168, 169, 176, 177, 178, 179, 180, 183, 236, 237, 243, 247, 249, 264, 266, 559, 580], "biopsi": 20, "birth": [2, 8, 17, 20], "bit": [2, 8, 20, 29, 30, 32, 34, 37, 38, 39, 41, 47, 51, 52, 53, 132, 133, 134, 135, 149, 209, 212, 214, 236, 237, 243, 244, 245, 247, 248, 249, 251, 252, 257, 259, 264, 265, 266, 267, 269, 271, 518, 559, 569, 570, 572, 577, 578, 579, 580, 583, 584, 590, 592], "bit_count": [271, 518], "bit_length": [271, 518], "bits_alloc": [29, 30, 34, 218, 236, 243, 244, 258, 259], "bits_stor": [29, 30, 34, 218, 236, 243, 244, 258], "bitsalloc": [36, 37, 38, 47, 129, 209, 211, 212, 260, 261, 267, 559, 570], "bitsstor": [26, 28, 36, 37, 209, 211, 261], "black": [36, 37, 38, 559, 580], "blank": [16, 17, 110, 205, 514, 559, 561, 585], "blend": 20, "blob": 14, "block": [16, 18, 20, 26, 27, 28, 36, 48, 132, 133, 134, 135, 559, 574, 584], "block1": 18, "block2": 18, "block_ds1": 18, "block_ds2": 18, "block_ds3": 18, "block_start": 135, "blocknam": 18, "blocksequ": 18, "blocktyp": 18, "blue": [36, 37, 38, 39, 559, 574], "bn": 39, "boli": [26, 28], "bolu": [2, 8, 20], "bond": 14, "bone": [20, 51], "bool": [29, 30, 33, 34, 57, 82, 83, 95, 97, 102, 107, 116, 117, 126, 127, 129, 131, 132, 133, 134, 136, 139, 149, 156, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 196, 203, 206, 207, 208, 209, 210, 211, 212, 216, 219, 236, 237, 243, 244, 247, 248, 249, 254, 256, 257, 262, 263, 264, 265, 266, 267, 269, 271, 486, 512, 514, 515, 516, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 541, 542, 546], "bot": 149, "both": [37, 38, 44, 45, 77, 82, 83, 98, 149, 172, 216, 254, 515, 559, 561, 568, 571, 574, 580, 586], "bottom": [20, 41, 583, 584], "boundari": [145, 486, 522, 559, 580], "bowti": 20, "box": [23, 41], "brace": [486, 522], "brachi": [26, 27, 28], "bracket": [43, 48, 585], "brain": [10, 587], "branch": [585, 589], "break": [44, 486, 522, 559, 575, 587], "brett": [559, 567], "brief": 45, "briefli": 587, "broken": 53, "browser": 584, "bubbl": [132, 133, 134], "buffer": [14, 29, 132, 133, 134, 142, 143, 144, 147, 148, 152, 153, 156, 158, 159, 162, 183, 195, 209, 236, 237, 243, 271, 518, 559, 580], "bug": [45, 563, 567, 571, 574, 577, 582, 583, 589], "build": [0, 4, 181, 182, 559, 568, 579, 583], "build_tre": 0, "built": [41, 271, 518, 589], "bulk": [53, 129, 132, 133, 134, 549, 559, 572, 573, 576, 586], "bulk_data_element_handl": [129, 132, 133, 134, 586], "bulk_data_handl": 586, "bulk_data_read": 586, "bulk_data_threshold": [129, 132, 133, 134, 559, 573, 586], "bulk_data_uri": 586, "bulk_data_uri_handl": [129, 132, 133, 134, 559, 575, 586], "bulkdatauri": [129, 132, 133, 134, 586], "bullet": [559, 562], "button": 20, "bypass": 57, "byte": [14, 24, 26, 30, 32, 33, 34, 37, 39, 43, 46, 52, 53, 54, 55, 78, 79, 80, 90, 91, 112, 129, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 161, 162, 163, 164, 165, 167, 177, 178, 179, 180, 181, 182, 183, 188, 189, 193, 195, 196, 204, 206, 236, 237, 243, 244, 248, 257, 259, 260, 262, 265, 269, 271, 486, 518, 520, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 559, 570, 571, 572, 577, 580, 585, 587, 590, 592], "byte_str": [525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "bytearrai": [30, 34, 132, 133, 134, 142, 143, 144, 148, 152, 153, 156, 158, 159, 236, 237, 243, 259, 271, 518], "bytelength": [163, 168], "byteord": [29, 33, 34, 271, 518, 592], "bytes_to_find": 177, "bytesio": [14, 16, 133, 156, 559, 580, 585], "byteslengthexcept": [559, 579], "bytestr": [183, 259], "bytestream": [145, 147], "c": [2, 10, 18, 20, 22, 24, 26, 27, 28, 32, 39, 43, 45, 48, 53, 54, 94, 132, 133, 134, 206, 209, 214, 215, 216, 217, 219, 251, 252, 253, 254, 255, 256, 268, 515, 541, 559, 566, 585, 586, 587, 589, 590, 592], "c313d2befb08": [559, 565], "cach": [583, 589], "cal": 20, "calcul": [559, 577, 579], "calibr": 20, "call": [10, 25, 26, 39, 43, 44, 46, 50, 52, 55, 82, 86, 92, 132, 133, 134, 146, 156, 158, 159, 160, 172, 179, 183, 205, 486, 514, 522, 559, 562, 565, 569, 575, 580, 585, 587, 590], "call_back": 163, "callabl": [92, 129, 132, 133, 134, 160, 163, 166, 170, 205, 236, 243, 545], "callback": [17, 25, 26, 132, 133, 134, 559, 568], "caller": [162, 559, 562], "camel": [85, 559, 575], "can": [1, 6, 10, 14, 17, 24, 25, 26, 27, 28, 30, 32, 34, 37, 39, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 97, 132, 133, 134, 139, 140, 158, 159, 162, 163, 170, 172, 183, 198, 205, 237, 244, 486, 512, 514, 515, 519, 522, 545, 559, 560, 561, 562, 565, 574, 575, 578, 580, 583, 584, 585, 586, 587, 589, 590, 591, 592], "cancel": 172, "cannot": [43, 47, 86, 132, 133, 134, 172, 183, 205, 515, 519, 523, 559, 577, 583, 587], "canon": 515, "capabl": 591, "capac": 47, "capit": [41, 486, 515, 522, 559, 565], "captur": 583, "carotid": [10, 587], "carri": [514, 515, 559, 567], "case": [25, 26, 37, 43, 44, 45, 46, 48, 55, 57, 77, 79, 85, 132, 133, 134, 163, 237, 486, 515, 520, 522, 559, 571, 575, 580, 585, 586, 590, 592], "casefold": [486, 522], "caseless": [486, 522], "catch": [559, 562, 564], "caus": [30, 34, 523, 559, 561, 587], "caution": 585, "cb": 259, "cd": [583, 584, 587], "cell": 20, "center": [2, 8, 20, 216, 217, 254, 255, 486, 522, 585], "central": 2, "certain": [55, 132, 133, 134, 268, 584, 585], "certainli": 55, "ch": [37, 592], "ch1": 592, "ch2": 592, "ch_idx": 3, "ch_item": 3, "ch_sourc": 3, "chain": 20, "chan": 20, "chanc": 585, "chang": [10, 12, 25, 26, 27, 30, 34, 38, 41, 44, 45, 46, 47, 52, 53, 57, 83, 97, 107, 129, 132, 133, 134, 149, 156, 158, 159, 172, 174, 181, 182, 183, 207, 208, 209, 210, 211, 212, 216, 219, 248, 254, 256, 257, 265, 268, 269, 511, 515, 528, 530, 574, 582, 585, 586, 588, 589, 590, 591], "channel": [3, 20, 37, 39, 53, 54, 132, 133, 134, 209, 546, 592], "channeldefinitionsequ": [3, 592], "channelsampleskew": 592, "channelsensit": 592, "channelsensitivityunitssequ": [3, 592], "channelsourcesequ": [3, 592], "chapter": [39, 511], "chapter_7": 584, "char": [486, 522], "charact": [10, 20, 26, 28, 32, 41, 44, 48, 57, 77, 78, 79, 80, 90, 129, 130, 132, 133, 134, 135, 162, 163, 172, 173, 174, 175, 195, 198, 199, 200, 486, 511, 520, 522, 523, 524, 528, 530, 533, 534, 540, 543, 544, 549, 559, 560, 561, 568, 570, 571, 574, 575, 577, 578, 579, 580, 583, 585, 586, 587], "character_encod": [132, 133, 134], "character_set": 585, "charl": 589, "charpyl": [559, 579, 589], "charset": [105, 549, 559, 579], "chdef": 592, "chdef_seq": 592, "check": [3, 12, 43, 44, 116, 117, 119, 120, 122, 126, 127, 132, 133, 134, 136, 175, 183, 196, 514, 524, 559, 565, 568, 570, 571, 574, 575, 577, 580, 583, 584, 589, 592], "checkout": [583, 584], "checksum": 20, "chief": 520, "child": 173, "children": 173, "chines": [559, 560, 568], "choos": [583, 584], "chosen": [515, 592], "chtml": 41, "ci": [559, 580], "cid": 591, "cid270": 591, "cid_for_nam": 591, "circleci": 584, "circumst": [139, 140], "citat": 23, "citizen": [85, 129, 132, 585], "clam": 0, "clarif": [583, 584], "clariti": [559, 568], "class": [2, 8, 9, 12, 14, 20, 26, 27, 28, 29, 30, 34, 41, 42, 43, 48, 53, 54, 57, 70, 71, 82, 129, 131, 132, 133, 134, 135, 136, 156, 158, 159, 162, 171, 172, 173, 183, 196, 205, 236, 237, 243, 244, 270, 271, 424, 486, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 549, 553, 554, 559, 560, 561, 562, 565, 566, 567, 568, 569, 570, 572, 574, 575, 578, 579, 580, 584, 585, 587, 590, 591], "classmethod": [129, 132, 133, 134, 520], "clean": [514, 559, 568, 583, 584], "clear": [48, 129, 132, 133, 134, 172, 205, 270, 559, 580], "cli": [559, 579], "click": [583, 584], "clip": [20, 37], "clone": [26, 27, 583, 584, 589], "close": [156, 158, 159, 162, 166, 559, 561, 562], "closest": [181, 182, 515], "clunie1": [2, 20, 26, 28, 48, 585], "cm": [9, 11, 51], "cmap": [9, 51], "co": [132, 592], "code": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 32, 36, 43, 45, 48, 49, 50, 55, 78, 79, 97, 132, 133, 134, 160, 162, 165, 486, 522, 559, 560, 562, 566, 567, 568, 570, 572, 575, 577, 580, 582, 584, 588, 589, 591, 592], "code_fil": 55, "codec": [486, 522], "codedict": 591, "codemean": [3, 592], "codestream": [29, 262], "codevalu": 592, "codifi": [25, 27, 49, 559, 567, 569, 577, 579, 580], "codingschemedesign": 592, "codingschemevers": 592, "coeffici": [20, 26, 27, 515], "coll": [26, 28], "collaps": [43, 52], "collect": [20, 48, 57, 134, 163, 587], "collis": [559, 561], "color": [29, 30, 33, 34, 36, 37, 38, 39, 46, 49, 213, 219, 244, 250, 256, 559, 572, 574, 590], "colour": [213, 250], "colourspac": [98, 559, 577], "column": [0, 2, 8, 9, 20, 26, 28, 29, 30, 34, 37, 39, 52, 53, 132, 133, 134, 206, 209, 211, 212, 218, 219, 236, 237, 243, 244, 247, 248, 249, 256, 258, 260, 261, 264, 265, 266, 268, 590], "columnconfigur": 0, "com": [2, 8, 9, 11, 12, 17, 20, 22, 23, 583, 584, 589], "combin": [132, 133, 134, 272, 517, 585, 592], "come": 51, "comma": 41, "command": [25, 27, 40, 45, 55, 132, 133, 134, 183, 559, 567, 577, 579, 580, 583, 584, 589], "command1": [25, 26], "command1modul": [25, 26], "command2": [25, 26], "command2modul": [25, 26], "comment": [2, 8, 20, 583], "commit": [559, 580], "common": [37, 48, 50, 54, 55, 77, 559, 570, 587, 592], "commonli": [237, 247, 249, 264, 266, 587, 590], "commun": [559, 575], "comp": [10, 20, 26, 28, 587], "compani": 48, "compar": [20, 57, 486, 515, 522, 559, 566, 569, 577, 580, 583, 584], "compare_sign": 515, "compare_tot": 515, "compare_total_mag": 515, "comparison": [486, 515, 522, 559, 564, 569], "compat": [44, 46, 513, 515, 517, 559, 562, 563, 565, 566, 567, 568, 580, 589], "compil": [436, 437], "complement": [34, 39, 42, 244, 271, 518], "complet": [20, 24, 26, 34, 55, 132, 133, 134, 144, 147, 180, 559, 560, 583, 587, 589], "complex": [45, 53, 271, 516, 518, 519], "compliant": [12, 55, 559, 568], "complic": [37, 587], "compon": [36, 39, 47, 81, 145, 173, 175, 211, 262, 520, 559, 560, 562, 577], "compress": [20, 23, 29, 30, 33, 34, 36, 37, 38, 39, 42, 45, 49, 53, 132, 133, 134, 139, 140, 145, 146, 223, 224, 225, 227, 228, 231, 232, 236, 237, 238, 239, 240, 241, 243, 247, 249, 264, 266, 268, 486, 553, 554, 559, 568, 570, 572, 577, 578, 580, 588, 589], "compressedsampl": [2, 8, 9, 20, 26, 28, 70, 584, 585], "compression_ratio": 33, "comput": 20, "concaten": [37, 138, 149, 486, 522], "concern": 51, "conda": [590, 592], "condit": [162, 166, 515, 559, 568], "condition": [30, 592], "config": [32, 44, 519, 541, 549, 559, 565, 570, 571, 572, 574, 575, 577, 580], "configur": [0, 29, 36, 39, 44, 100, 129, 132, 133, 134, 236, 243, 268, 549, 559, 570, 577, 578], "conform": [57, 129, 132, 133, 134, 172, 175, 183, 196, 203, 212, 559, 568, 570, 571, 585, 587, 590], "confus": [559, 580], "congratul": 585, "conjug": [271, 515, 516, 518, 519], "conjunct": [248, 265], "connect": [559, 575], "conserv": 203, "consid": [10, 25, 26, 55, 132, 133, 134, 486, 522, 583, 584, 586], "consist": [54, 133, 183, 559, 565, 584, 590, 592], "consolid": [559, 566], "constant": [559, 575, 580, 592], "constrain": 39, "constraint": [37, 39, 515, 516, 523], "construct": [513, 515, 516, 517, 520, 559, 565, 566, 577], "constructor": 205, "consumpt": [559, 570], "contain": [0, 10, 24, 26, 29, 30, 32, 34, 39, 40, 41, 42, 43, 44, 48, 52, 53, 54, 55, 57, 70, 77, 79, 129, 131, 132, 133, 134, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 162, 163, 170, 177, 181, 182, 183, 196, 199, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 236, 237, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 486, 513, 517, 520, 522, 524, 528, 530, 546, 559, 567, 570, 577, 580, 583, 585, 587, 592], "content": [10, 12, 14, 20, 43, 57, 132, 133, 134, 142, 145, 206, 209, 210, 211, 212, 218, 258, 268, 584, 585, 587, 590], "contentd": 12, "contenttim": 12, "context": [162, 274, 515, 559, 568, 585], "contigu": 39, "continu": [138, 559, 560, 577], "contrast": [2, 8, 10, 20, 587], "contrib": [51, 562, 582], "contribut": [25, 26, 559, 562, 565, 566, 588], "contributing_cod": 584, "contributing_doc": 584, "contributor": 16, "control": [26, 27, 29, 36, 37, 50, 85, 86, 102, 103, 237, 247, 249, 264, 266, 559, 565, 587, 590], "controlpointsequ": 11, "conveni": [43, 48, 53, 129, 559, 575, 580, 586], "convent": [25, 26, 43, 520], "convers": [29, 30, 34, 36, 37, 38, 39, 94, 129, 206, 209, 211, 212, 546, 559, 561, 571, 572, 574, 586, 592], "convert": [14, 29, 30, 34, 36, 37, 38, 39, 47, 53, 77, 78, 80, 86, 89, 91, 94, 98, 130, 132, 133, 134, 172, 183, 205, 206, 207, 208, 209, 210, 211, 212, 219, 237, 244, 247, 249, 256, 264, 266, 271, 486, 515, 517, 518, 522, 546, 559, 562, 565, 568, 571, 572, 575, 576, 577, 580, 584, 585, 592], "convert_ae_str": 61, "convert_atvalu": 61, "convert_color_spac": [38, 53, 549, 559, 577, 580], "convert_da_str": 61, "convert_ds_str": 61, "convert_dt_str": 61, "convert_encod": 549, "convert_is_str": 61, "convert_numb": [61, 181, 182], "convert_obvalu": 61, "convert_owvalu": 61, "convert_pixel_data": [98, 132, 133, 134], "convert_pn": 61, "convert_single_str": 61, "convert_sq": 61, "convert_str": 61, "convert_tag": 61, "convert_text": 61, "convert_tm_str": 61, "convert_ui": 61, "convert_un": 61, "convert_ur_str": 61, "convert_valu": 61, "convert_wrong_length_to_un": [549, 559, 577], "convolut": 20, "coord": 20, "coordin": [20, 26, 27, 43], "copi": [2, 10, 47, 55, 132, 133, 134, 172, 486, 515, 522, 559, 565, 575, 578, 583, 584, 587, 589], "copy_ab": 515, "copy_neg": 515, "copy_sign": 515, "copyfil": 587, "copyright": 584, "copytre": 587, "cor_aspect": 4, "core": [42, 49], "corner": 20, "coron": [1, 5, 6, 559, 571, 581], "correct": [4, 16, 20, 24, 26, 36, 37, 38, 39, 44, 46, 47, 52, 54, 77, 81, 98, 132, 133, 134, 162, 177, 181, 182, 205, 211, 248, 265, 559, 569, 570, 572, 577, 578, 580, 583, 585, 590, 592], "correct_ambiguous_vr": 71, "correct_ambiguous_vr_el": 71, "correctli": [32, 48, 55, 98, 172, 207, 208, 515, 559, 562, 565, 568, 569, 571, 572, 575, 577, 578, 579, 580, 583], "correspond": [10, 17, 29, 30, 34, 36, 37, 38, 41, 43, 46, 52, 53, 54, 77, 107, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 132, 133, 134, 135, 139, 140, 164, 171, 172, 173, 183, 206, 213, 236, 237, 243, 244, 245, 246, 250, 263, 268, 272, 486, 512, 513, 517, 546, 559, 577, 580, 583, 584, 587, 590, 592], "cosin": 592, "cost": 587, "couch": [26, 28], "couchdb": [559, 563], "could": [3, 24, 25, 26, 43, 53, 55, 77, 78, 80, 205, 207, 559, 562, 563, 577, 583, 584], "count": [4, 131, 205, 270, 271, 486, 518, 522], "counter": 20, "coupl": [55, 587], "courier": 0, "cours": [10, 590], "cover": [30, 34, 585, 587, 590, 592], "coverag": [559, 568, 583], "cp0": 11, "cp805": [559, 562], "cr": [10, 259, 587], "cr1": 587, "cr2": 587, "cr3": 587, "crash": [559, 569, 578, 579], "creat": [0, 4, 12, 14, 16, 18, 24, 25, 26, 27, 43, 44, 48, 51, 55, 89, 129, 130, 132, 133, 134, 156, 158, 159, 160, 170, 171, 172, 173, 183, 205, 236, 237, 243, 244, 272, 486, 511, 513, 514, 516, 517, 519, 520, 549, 559, 562, 564, 577, 579, 580, 585, 589, 590, 591, 592], "create_data_el": 207, "create_imag": 207, "creation": [2, 8, 12, 20, 26, 27, 28, 43, 170, 559, 571, 585, 587], "creator": [2, 8, 16, 20, 26, 28, 48, 111, 112, 120, 123, 124, 125, 132, 133, 134, 135, 196, 271, 559, 569, 574, 579, 585, 587], "credit": 584, "ct": [1, 5, 6, 9, 10, 12, 20, 26, 28, 36, 37, 38, 43, 46, 48, 51, 53, 70, 132, 133, 134, 172, 559, 571, 581, 585, 586, 587, 590], "ct01": [20, 48], "ct01_oc0": 20, "ct1": [9, 20, 26, 28, 70, 584, 585], "ct2": 587, "ct_compressed_bas": [46, 590], "ct_compressed_ext": [46, 590], "ct_rle_lossless": [46, 132, 133, 134, 590], "ct_small": [9, 26, 28, 70, 162, 584, 585], "ctime": [513, 517], "cumul": [26, 27], "current": [0, 20, 24, 26, 28, 39, 41, 44, 46, 97, 129, 132, 133, 134, 156, 158, 159, 172, 173, 181, 182, 189, 213, 219, 250, 256, 513, 515, 517, 520, 559, 577, 584, 587, 589, 590], "curv": [17, 592], "curve_typ": 592, "curves_callback": 17, "custom": [8, 26, 28, 170, 172, 559, 560, 561, 568, 571, 575], "cython": 589, "d": [0, 2, 3, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 61, 66, 70, 82, 83, 85, 86, 98, 102, 103, 109, 110, 111, 129, 132, 133, 134, 139, 140, 162, 170, 172, 181, 182, 197, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 248, 250, 251, 252, 253, 254, 255, 257, 258, 260, 261, 263, 265, 267, 268, 269, 515, 516, 520, 523, 528, 546, 559, 565, 566, 574, 577, 579, 583, 584, 585, 586, 587, 590, 592], "da": [2, 12, 17, 20, 26, 27, 28, 32, 43, 48, 61, 66, 94, 132, 527, 541, 559, 568, 577, 585], "dai": [513, 517], "daniel": [559, 562], "darci": [11, 12, 16, 17], "data": [1, 2, 5, 6, 7, 10, 11, 13, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 51, 55, 57, 63, 64, 65, 66, 78, 79, 80, 81, 83, 85, 98, 101, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 164, 166, 170, 172, 179, 195, 198, 199, 200, 206, 207, 208, 209, 210, 211, 212, 213, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 486, 511, 522, 539, 546, 549, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 587, 588, 589], "data_el": [17, 132, 133, 134, 185, 188, 189, 192, 194, 199, 200, 207, 585, 586], "data_elem": [559, 560, 585], "data_element_callback": [93, 99, 549], "data_element_callback_kwarg": 549, "data_element_gener": [71, 163], "data_element_offset_to_valu": 71, "data_retrieved_for_tag_and_vr_via_uri": 586, "data_retrieved_via_uri": 586, "databas": 14, "datadict": [16, 48, 549, 559, 568, 571, 585], "datael": [0, 41, 48, 49, 52, 61, 79, 130, 132, 133, 134, 160, 163, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 201, 202, 207, 559, 560, 568, 569, 570, 571, 574, 578, 580, 585], "dataelem": [61, 79, 132, 133, 134, 164, 182, 198, 199, 544, 549, 559, 571, 574, 585], "dataelement_from_raw": [61, 585], "dataset": [0, 2, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 32, 37, 38, 39, 41, 44, 45, 47, 48, 49, 50, 51, 55, 74, 81, 85, 86, 92, 98, 101, 107, 108, 109, 110, 129, 130, 137, 139, 140, 145, 147, 156, 158, 159, 162, 163, 166, 168, 169, 170, 171, 172, 173, 181, 182, 183, 195, 196, 200, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 236, 237, 243, 244, 247, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 486, 512, 546, 549, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 584, 587, 588, 589, 590, 592], "dataset_class": 129, "datastor": 107, "date": [2, 8, 9, 12, 17, 20, 23, 26, 27, 28, 32, 43, 44, 48, 94, 172, 513, 517, 549, 559, 568, 569, 571, 577, 585, 589], "datetim": [12, 94, 513, 517, 521], "datetime_convers": [32, 527, 529, 535, 549], "daughter": 132, "daunt": 583, "dave": [559, 562], "db": [14, 36, 132, 133, 134], "dcm": [9, 11, 12, 24, 26, 27, 28, 41, 43, 45, 46, 52, 53, 70, 132, 133, 134, 162, 170, 247, 249, 264, 266, 559, 575, 584, 585, 590, 591, 592], "dcm_qt_tree": [43, 559, 566, 567], "dcmread": [0, 4, 9, 10, 11, 12, 14, 16, 43, 45, 47, 50, 53, 71, 92, 107, 133, 155, 158, 159, 160, 163, 166, 180, 204, 512, 559, 568, 574, 575, 577, 580, 584, 585, 587, 592], "dcmwrite": [14, 50, 71, 132, 133, 134, 158, 159, 559, 568, 574, 575, 577, 580, 585], "dctool100": [2, 20, 26, 28, 48, 585], "dd": [23, 513], "ddt": 517, "de": 55, "deal": [23, 44, 52, 212, 559, 561, 570, 585], "debug": [549, 559, 565, 567], "debug_on": 95, "decemb": [559, 579], "decid": [559, 580], "decim": [32, 82, 102, 486, 514, 515, 516, 518, 519, 522, 523, 524, 559, 565, 566, 577], "decis": 38, "decod": [1, 5, 6, 37, 39, 40, 42, 61, 78, 79, 129, 132, 133, 134, 142, 144, 148, 149, 156, 158, 159, 162, 195, 207, 208, 210, 211, 212, 244, 245, 247, 249, 264, 266, 520, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 549, 552, 559, 563, 570, 571, 572, 575, 577, 578, 580, 581, 587, 589], "decode_byt": 549, "decode_data_sequ": [559, 580], "decode_el": 549, "decode_pixel_data": [237, 244], "decodefunct": 236, "decodeopt": [236, 237, 243], "decoder_depend": 30, "decoderunn": 30, "decoding_plugin": [132, 133, 134, 237, 247, 249, 264, 266], "decomposit": 36, "decompress": [45, 46, 47, 132, 133, 134, 210, 237, 559, 568, 572, 589, 590], "decon": 20, "decor": [559, 566], "decreas": [36, 132, 133, 134], "deep": [559, 578], "deepcopi": [559, 577, 580], "def": [0, 8, 11, 14, 17, 25, 26, 30, 34, 98, 132, 133, 134, 170, 486, 522, 583, 586], "default": [0, 9, 24, 26, 29, 32, 33, 34, 44, 47, 51, 52, 53, 57, 77, 81, 82, 83, 85, 86, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 129, 132, 133, 134, 136, 139, 141, 142, 143, 144, 148, 151, 152, 153, 156, 158, 159, 160, 162, 163, 172, 174, 181, 182, 183, 195, 196, 205, 206, 209, 211, 212, 215, 216, 217, 219, 236, 237, 243, 244, 247, 248, 249, 253, 254, 255, 256, 257, 260, 263, 264, 265, 266, 267, 269, 270, 486, 511, 515, 517, 520, 522, 528, 530, 534, 545, 546, 559, 563, 565, 566, 568, 570, 571, 572, 573, 574, 575, 577, 580, 584, 585, 586, 587, 590], "default_element_format": 132, "default_encod": [22, 520], "default_handl": 95, "default_sequence_element_format": 132, "defer": [132, 133, 134, 164, 559, 561, 565, 572, 578, 585], "defer_s": [160, 162, 163, 166, 180, 204, 559, 561], "deferreddatael": [559, 570, 571], "defin": [16, 17, 20, 25, 26, 36, 37, 38, 39, 48, 52, 57, 129, 132, 133, 134, 135, 171, 172, 213, 250, 486, 515, 559, 565, 583, 585, 587, 592], "definit": [172, 183, 549, 559, 568, 592], "deflat": [47, 209, 220, 245, 486, 559, 574], "defragment_data": [559, 580], "degre": 20, "del": [17, 18, 43, 48, 132, 585], "del_opt": [236, 243], "delai": [20, 26, 28], "delattr": 17, "delet": [12, 17, 55, 132, 133, 134, 236, 243, 486, 522, 559, 574, 583, 584], "delimit": [78, 145, 146, 147, 176, 178, 179, 180, 184, 486, 522, 545, 559, 575, 577], "delimiter_tag": 180, "deliveri": [26, 27], "delta": 20, "demand": 520, "demonstr": [16, 51, 559, 560], "denomin": [271, 515, 516, 518, 519], "depend": [20, 30, 34, 39, 46, 47, 53, 55, 98, 129, 132, 133, 134, 142, 143, 144, 172, 183, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 237, 244, 250, 251, 252, 253, 254, 258, 268, 541, 546, 559, 570, 571, 578, 584, 586, 587, 589, 592], "dependabot": [559, 580], "deprec": [96, 97, 132, 133, 134, 137, 138, 145, 146, 147, 149, 154, 183, 547, 548, 564, 565, 569, 570, 571, 574, 575, 577, 578, 579], "deprecationwarn": [559, 560], "depth": [32, 37, 42, 51, 53, 173, 559, 572, 589], "deriv": [2, 8, 20, 43, 50, 82, 98, 129, 134, 559, 565, 585], "describ": [29, 39, 43, 47, 55, 109, 111, 129, 132, 133, 134, 515, 520, 586, 587], "descript": [3, 16, 20, 25, 26, 27, 29, 33, 39, 42, 43, 45, 48, 109, 110, 111, 112, 115, 125, 129, 135, 559, 560, 561, 574, 578, 580], "descriptor": [10, 48, 172, 213, 214, 215, 216, 250, 251, 252, 253, 254, 559, 572, 574, 587], "descriptor_character_set": [10, 172, 587], "descriptor_file_id": [10, 172, 587], "descripwidth": 129, "deseri": 586, "design": [45, 55, 591], "desir": [51, 205, 219, 256], "despit": 587, "destin": [158, 159], "detail": [24, 26, 39, 43, 44, 45, 53, 55, 95, 129, 132, 133, 134, 163, 274, 515, 519, 549, 559, 577, 580, 583, 584], "detector": 20, "determin": [39, 43, 52, 129, 132, 172, 214, 251, 252, 271, 515, 518, 559, 580, 587, 592], "determinist": 511, "dev0": 549, "develop": [25, 26, 27, 44, 559, 568], "devic": [2, 8, 20, 26, 27, 591], "di": 587, "diamet": 20, "dicm": [155, 167, 183, 196, 203, 585], "dicom": [1, 2, 4, 6, 7, 9, 13, 14, 15, 19, 21, 22, 23, 27, 28, 30, 32, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 51, 52, 53, 54, 57, 60, 62, 70, 71, 73, 75, 77, 78, 79, 85, 90, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 162, 163, 165, 166, 167, 172, 183, 194, 196, 198, 200, 203, 205, 206, 209, 213, 214, 215, 216, 217, 219, 237, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 264, 265, 266, 268, 269, 271, 272, 486, 511, 515, 516, 519, 520, 522, 523, 539, 549, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 575, 577, 578, 579, 580, 581, 584, 585, 586, 588, 590, 591], "dicom_character_set": 79, "dicom_dao": [559, 563], "dicom_filenam": 14, "dicombytesio": [71, 158, 559, 580], "dicomdir": [10, 42, 70, 170, 172, 173, 559, 567, 571, 572, 575, 578, 579, 580, 588], "dicomdirtest": [10, 587], "dicomfil": [24, 26, 71], "dicomfilelik": [14, 71, 156, 157, 559, 561], "dicominfo": [559, 560], "dicomio": [71, 146, 149, 154, 156, 158, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 559, 580], "dicomit": [559, 563], "dicomtre": [0, 21, 559, 560, 581], "dicomweb": [129, 132, 133, 134, 586], "dicond": [181, 182], "dicosquadrupoleresonanceqrstorag": [559, 575], "dicosquadrupoleresonancestorag": [559, 575], "dict": [14, 30, 34, 43, 93, 109, 111, 129, 132, 133, 134, 170, 172, 206, 218, 236, 243, 258, 261, 262, 559, 562, 577, 579], "dict_item": [132, 133, 134], "dict_kei": [132, 133, 134], "dictionari": [6, 15, 19, 43, 49, 85, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 163, 218, 236, 243, 258, 486, 522, 549, 559, 561, 562, 564, 567, 568, 569, 570, 571, 572, 575, 577, 578, 580, 581, 586, 591], "dictionary_is_retir": [559, 568], "dictionary_vr": 585, "did": [18, 559, 560, 580], "diff": [20, 583], "differ": [4, 6, 17, 21, 25, 26, 28, 32, 37, 38, 42, 48, 53, 132, 133, 134, 515, 559, 562, 574, 581, 583, 584, 585, 586, 587], "difficult": [55, 583], "difflib": 20, "dig": 587, "digit": [89, 135, 197, 486, 515, 522, 592], "dimens": [98, 211, 237, 247, 249, 264, 266], "dimitri": [559, 567], "dir": [43, 45, 132, 133, 134, 559, 565, 578, 584, 591], "direct": [24, 26, 43, 259, 515, 584, 586, 587], "directli": [10, 30, 34, 37, 43, 55, 129, 236, 237, 243, 244, 514, 559, 580, 586, 587, 591], "directori": [10, 45, 170, 171, 172, 173, 175, 559, 560, 578, 580, 583, 584, 587, 589], "directory_record": [172, 549, 587], "directoryrecordsequ": 587, "directoryrecordtyp": [170, 172], "disadvantag": 55, "disagre": [559, 580], "discard": [486, 522], "discuss": [45, 583, 587], "disk": [559, 575], "displai": [6, 20, 21, 26, 27, 28, 36, 37, 38, 43, 49, 51, 101, 129, 132, 559, 560, 566, 571, 577, 581, 583, 592], "distanc": 20, "distinct": [559, 563], "distribut": [559, 563, 575, 589], "distutil": [559, 560], "div": 520, "dive": 583, "divid": 515, "divisionbyzero": 515, "django": [583, 584, 586], "do": [10, 14, 25, 26, 30, 34, 42, 44, 46, 47, 48, 50, 51, 52, 53, 55, 94, 132, 133, 134, 172, 183, 189, 559, 565, 571, 577, 580, 583, 584, 585, 587, 590, 591, 592], "do_command": [25, 26], "doc": [170, 584], "docstr": [41, 583], "document": [40, 44, 132, 133, 134, 170, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 244, 247, 249, 264, 266, 563, 568, 569, 580, 582, 588], "doe": [10, 12, 37, 48, 52, 53, 55, 90, 98, 110, 132, 133, 134, 155, 164, 183, 189, 207, 515, 523, 559, 575, 587], "doesn": [29, 39, 52, 85, 132, 133, 134, 206, 209, 212, 237, 247, 249, 264, 266, 559, 574, 583], "doi": 23, "don": [8, 10, 18, 26, 27, 28, 36, 43, 48, 55, 583, 584, 586, 587, 590], "done": [30, 34, 46, 486, 515, 522, 583, 584, 585, 590], "dont_print": 8, "dose": [26, 27, 28, 70, 170, 172, 559, 565, 587], "dosesummationtyp": 587, "dot": [583, 585], "doubl": [32, 41, 53, 132, 133, 134, 209, 267, 553, 559, 572], "doublefloatpixeldata": [29, 30, 53, 236, 243, 261, 559, 577], "down": [203, 583, 587], "download": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 107, 559, 575, 577, 578, 579], "downsampl": [2, 38], "downscal": [37, 38], "downsiz": [1, 5, 6, 53, 581], "downstream": 37, "dr": 520, "drop": [132, 133, 134, 559, 574, 575], "ds1": 586, "ds2": 132, "ds_byte": 14, "ds_decim": [102, 549, 559, 574], "ds_json": 586, "ds_numpi": [103, 549], "ds_or_path": 172, "ds_out": [247, 249, 264, 266], "dsdecim": [32, 61, 89, 514, 528, 559, 577], "dsfloat": [32, 61, 514, 528, 559, 577], "dst": [517, 521, 587], "dt": [12, 32, 61, 66, 94, 529, 541, 559, 568, 577], "dtype": [41, 43, 52, 53, 54, 132, 133, 134, 211, 236, 244, 248, 265, 267, 590], "dtype_corrected_for_endian": [559, 580], "due": [172, 559, 566, 577, 579, 583, 587], "dummi": [24, 26], "dummydatabas": 14, "dump": [129, 132, 133, 134], "dump_handl": [129, 132, 133, 134], "duplic": [559, 566], "durat": [20, 26, 28, 585], "dure": [36, 37, 43, 48, 110, 559, 578, 580, 583, 584], "dvd": 587, "dwt": 36, "dynam": [16, 20], "e": [20, 24, 26, 27, 28, 30, 34, 41, 43, 44, 45, 52, 53, 57, 86, 129, 132, 133, 134, 135, 162, 168, 169, 172, 173, 174, 205, 206, 237, 244, 248, 259, 265, 270, 513, 515, 520, 545, 559, 562, 569, 571, 575, 580, 583, 584, 585, 589], "e0": 149, "e000": [146, 149, 150, 151], "e0dd": 146, "e3ee934bbc": [559, 563], "e830f30b6781": [559, 566], "each": [0, 3, 10, 20, 29, 30, 33, 34, 36, 37, 38, 39, 42, 43, 46, 52, 53, 54, 70, 78, 132, 133, 134, 139, 140, 145, 146, 149, 150, 151, 152, 153, 173, 174, 205, 212, 219, 236, 237, 243, 244, 247, 249, 256, 259, 264, 266, 486, 515, 520, 522, 546, 559, 574, 577, 583, 585, 587, 590, 592], "earlier": 585, "easi": [45, 53], "easier": [48, 133, 559, 580, 584], "easiest": [23, 590], "easili": [17, 559, 560, 562], "ecg": [54, 70, 592], "echo": [2, 8, 20], "echofindingobservationtyp": 591, "edit": [10, 55, 559, 569, 570, 572, 583, 584, 589], "editor": [583, 584], "eeee": [183, 559, 580], "effect": [43, 146, 511], "effici": [10, 160, 172, 248, 265, 523, 592], "effort": 29, "eg": 4, "einthoven": 592, "either": [26, 27, 30, 34, 36, 37, 39, 43, 44, 48, 50, 98, 129, 132, 133, 134, 142, 144, 148, 167, 172, 206, 236, 243, 248, 260, 265, 267, 268, 271, 272, 515, 518, 520, 527, 535, 559, 575, 580, 584, 585, 587, 589, 590], "elem": [0, 8, 17, 41, 43, 52, 79, 129, 132, 133, 134, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 201, 202, 206, 271, 273, 559, 562, 585], "element": [2, 10, 12, 16, 17, 18, 20, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 40, 41, 42, 45, 46, 49, 51, 52, 53, 54, 55, 57, 68, 78, 79, 81, 83, 85, 86, 94, 95, 98, 101, 102, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 139, 140, 145, 146, 147, 160, 161, 162, 163, 164, 172, 179, 180, 181, 182, 183, 196, 198, 199, 206, 207, 209, 211, 212, 218, 236, 237, 243, 247, 249, 258, 260, 261, 264, 266, 267, 268, 271, 272, 513, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 546, 547, 549, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580, 584, 587, 590, 592], "element_format": [132, 133, 134], "element_offset": [132, 133, 134, 135], "element_v": [25, 26], "element_valu": [25, 26], "elementcallback": 92, "els": [3, 4, 8, 36, 37, 38, 132, 163, 177, 180, 514, 515, 585], "embed": [559, 575], "emin": 515, "empti": [32, 129, 132, 133, 134, 136, 142, 144, 145, 147, 148, 149, 156, 205, 248, 262, 265, 270, 486, 515, 516, 520, 522, 539, 559, 560, 568, 571, 572, 573, 574, 575, 577, 580, 585, 587, 592], "empty_valu": 129, "empty_value_for_vr": 129, "emul": [97, 132, 133, 134], "enabl": [33, 44, 94, 132, 133, 134], "enable_futur": 97, "encap": [46, 170, 549, 559, 568, 570, 580, 590], "encapsul": [29, 39, 46, 53, 132, 133, 134, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 237, 244, 549, 559, 560, 570, 575, 580], "encapsulate_ext": [132, 133, 134], "encapsulate_extend": [46, 139, 559, 575, 580, 590], "encasul": 486, "enclos": 48, "encod": [29, 30, 32, 39, 40, 42, 46, 47, 53, 54, 57, 77, 78, 79, 80, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 156, 158, 159, 160, 163, 168, 169, 172, 183, 190, 194, 195, 196, 198, 199, 200, 202, 212, 236, 237, 246, 247, 249, 264, 266, 486, 512, 515, 520, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 549, 552, 559, 565, 568, 569, 570, 571, 572, 577, 578, 579, 580, 585, 586, 590], "encode_pixel_data": [237, 244], "encode_str": 549, "encodefunct": 243, "encodeopt": [236, 243], "encoder_depend": 34, "encoderunn": 34, "encoding_plugin": [46, 132, 133, 134, 244, 590], "encount": [48, 90], "encourag": [559, 565], "end": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 141, 143, 152, 153, 163, 178, 180, 236, 237, 248, 265, 271, 486, 518, 522, 559, 565, 572], "endian": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 39, 43, 46, 47, 48, 132, 133, 134, 142, 143, 144, 146, 148, 150, 151, 152, 153, 156, 158, 159, 160, 163, 172, 177, 178, 179, 180, 183, 189, 196, 209, 212, 220, 221, 222, 226, 237, 244, 245, 277, 486, 512, 525, 526, 527, 528, 529, 530, 534, 535, 536, 538, 539, 541, 542, 559, 562, 570, 574, 579, 580, 585, 590, 592], "endswith": [486, 522], "energi": [26, 28], "enforc": [43, 49, 205, 559, 565], "enforce_file_format": [12, 132, 133, 134, 183, 559, 580, 585], "enforce_standard": [136, 196, 585], "enforce_valid_valu": [549, 559, 565, 571, 572, 575, 577, 578], "engin": 515, "english": 41, "enhanc": [20, 213, 250, 562], "ensur": [4, 32, 36, 37, 38, 44, 46, 48, 97, 132, 133, 134, 136, 162, 172, 183, 205, 248, 265, 515, 516, 559, 565, 568, 577, 579, 580, 583], "ensure_file_meta": [132, 133, 134], "enter": 23, "entir": [43, 132, 162, 165, 207, 211, 237, 247, 249, 264, 266, 583, 585, 590], "entiti": [2, 20, 26, 28, 32, 48, 172, 196, 585], "entri": [16, 25, 26, 27, 43, 49, 53, 109, 110, 111, 112, 119, 120, 559, 561, 578, 583, 584], "entropy_src": [511, 559, 580], "entry_point": [25, 26], "enum": [559, 578, 580], "enumer": [0, 4, 592], "env": 587, "environ": [26, 27, 44, 559, 560, 575, 589], "eoc": [145, 559, 572], "eof": [156, 158, 159, 180], "eoferror": [156, 158, 159, 180], "eoi": [145, 559, 572], "eol": [559, 579], "equal": [37, 38, 39, 141, 146, 271, 486, 515, 516, 518, 519, 522, 559, 569, 570, 571], "equival": [43, 132, 133, 134, 142, 144, 148, 236, 243, 248, 265, 515, 559, 569], "error": [24, 26, 33, 37, 55, 57, 77, 87, 88, 97, 129, 132, 133, 134, 486, 515, 522, 523, 549, 559, 562, 563, 566, 568, 569, 570, 571, 572, 574, 575, 579, 580, 583, 585, 590], "escap": [559, 580], "especi": [39, 55, 583], "estim": 20, "et": 23, "etc": [17, 18, 41, 43, 45, 51, 53, 129, 132, 133, 134, 206, 559, 560, 566, 577, 583, 587, 590], "euc_kr": [22, 520], "even": [32, 37, 48, 52, 139, 141, 146, 162, 167, 237, 247, 248, 264, 265, 515, 559, 575, 585, 587, 590], "everi": [92, 237, 244, 259, 587, 592], "everyth": [172, 583, 587], "evolut": 44, "exact": [43, 515, 516, 518, 519], "exactli": [26, 27, 52, 54, 271, 515, 516, 518, 519, 585], "exam": 20, "exampl": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 30, 34, 39, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 85, 86, 109, 110, 111, 129, 132, 133, 134, 140, 162, 170, 172, 218, 244, 247, 249, 258, 264, 266, 271, 486, 511, 515, 518, 520, 522, 549, 559, 560, 561, 562, 564, 565, 567, 571, 575, 577, 580, 581, 582, 583, 584, 586, 587, 590, 592], "exc": 86, "exce": [139, 140], "except": [44, 48, 52, 53, 57, 77, 85, 86, 87, 98, 132, 133, 134, 155, 170, 172, 183, 196, 205, 237, 244, 274, 515, 549, 559, 562, 564, 567, 568, 571, 572, 575, 577, 578, 580, 583, 585, 587, 590], "excess": [142, 144, 148, 559, 571, 580], "exclud": [24, 26, 27, 28, 55, 132, 206, 236, 243, 260], "exclude_s": [24, 26], "exclus": 515, "execut": [5, 13, 19, 21, 520, 581], "exist": [9, 16, 30, 34, 38, 41, 43, 44, 55, 110, 132, 133, 134, 164, 172, 183, 196, 559, 579, 580, 582, 583, 584, 590], "exit": [0, 14, 24, 26, 27, 28], "exp": 515, "expand": [10, 26, 28, 259, 486, 522, 559, 578, 584, 587], "expand_ybr422": [559, 578, 580], "expandtab": [486, 522], "expans": [559, 577], "expect": [37, 43, 142, 144, 148, 206, 207, 209, 212, 236, 237, 243, 247, 249, 260, 264, 266, 559, 569, 571, 575, 579, 583, 590], "experiment": [559, 566], "explain": 41, "explan": [36, 37, 38], "explanatori": 592, "explicit": [2, 12, 20, 26, 28, 39, 46, 47, 48, 57, 90, 132, 133, 134, 146, 156, 158, 159, 163, 183, 196, 209, 220, 221, 222, 237, 245, 277, 486, 512, 520, 559, 562, 563, 571, 572, 574, 577, 580, 585], "explicitli": [46, 52, 53, 89, 559, 570, 577, 587, 590], "explicitvrlittleendian": 12, "explor": [26, 27, 48], "expon": 515, "exponenti": 515, "export": [24, 26, 44, 559, 577], "exposur": 20, "expr": 204, "express": [26, 27, 486, 522], "extend": [46, 47, 132, 133, 134, 139, 140, 142, 144, 148, 205, 230, 236, 243, 245, 270, 559, 575, 580, 590], "extended_offset": [142, 144, 148, 236, 243], "extendedoffsett": [46, 140, 590], "extendedoffsettablelength": [46, 140, 590], "extens": [43, 79, 133, 559, 570, 577], "extern": [107, 559, 575, 577], "extra": [26, 28, 43, 237, 559, 580], "extract": 98, "extrem": [559, 579], "ez_setup": [559, 567], "f": [0, 2, 3, 4, 8, 9, 10, 11, 12, 18, 20, 129, 132, 133, 134, 170, 172, 247, 249, 264, 266, 486, 522, 583, 587, 590, 592], "f1ae573d9de5": [559, 566], "facilit": 237, "fact": [98, 585], "factor": [20, 54, 559, 566, 590, 592], "factori": [205, 237, 244, 273, 514, 559, 562, 577, 580], "fail": [30, 34, 98, 559, 562, 563, 568, 583, 584, 587], "failur": [57, 486, 522, 559, 574, 580, 583], "fairli": 41, "fall": [213, 250], "fallback": [559, 570], "fals": [3, 4, 10, 14, 29, 30, 32, 34, 41, 44, 48, 57, 70, 81, 82, 83, 86, 89, 91, 94, 95, 96, 97, 98, 102, 103, 104, 107, 116, 117, 126, 127, 129, 132, 133, 134, 136, 139, 140, 156, 158, 159, 160, 162, 166, 167, 172, 174, 175, 178, 179, 180, 183, 196, 203, 209, 211, 219, 236, 237, 244, 247, 249, 256, 257, 264, 266, 267, 269, 271, 486, 512, 514, 515, 516, 518, 522, 524, 525, 526, 527, 528, 529, 530, 534, 535, 536, 538, 539, 541, 542, 546, 559, 565, 569, 574, 577, 579, 585, 587, 592], "famili": 520, "familiar": [40, 41, 585, 587, 590, 592], "family_comma_given": [9, 520], "family_nam": [520, 559, 577], "family_name_ideograph": 520, "family_name_phonet": 520, "far": [47, 129], "farm": 520, "fast": [203, 273], "faster": [47, 559, 562, 574, 577], "fatq": 20, "favor": [559, 564, 578], "fc790f01f5": [559, 563], "fd": [20, 32], "fe": 149, "featur": [41, 44, 559, 567, 582, 583], "feedback": [45, 559, 566], "fetch": [45, 46, 53, 590], "fetch_data_fil": 589, "fewer": [156, 158, 159, 236, 524], "ff": [20, 149], "ffee": 149, "fffc": [2, 20, 26, 28, 585], "fffe": [146, 149, 150, 151], "ffffp10": [516, 519], "fidel": [20, 48], "fiduci": 170, "field": [11, 20, 26, 28, 43, 91, 129, 131, 146, 486, 513, 517, 521, 522, 559, 577], "fifth": 520, "fig": [3, 592], "fil": 20, "file": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 21, 25, 27, 28, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 70, 73, 75, 86, 90, 95, 101, 105, 106, 107, 108, 110, 132, 133, 134, 136, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 185, 194, 195, 196, 198, 199, 200, 203, 236, 237, 247, 249, 264, 266, 549, 560, 561, 562, 564, 565, 568, 571, 572, 574, 575, 577, 578, 579, 580, 581, 583, 584, 585, 588, 590], "file_meta": [2, 12, 20, 26, 27, 28, 43, 46, 47, 48, 132, 133, 134, 136, 183, 196, 559, 562, 574, 580, 587, 590], "file_metadata": [559, 564], "file_path": [14, 203], "file_set": [171, 173], "file_value_tel": 129, "filebas": [14, 71, 146, 149, 154, 195, 549], "filedataset": [45, 50, 70, 107, 162, 166, 183, 549, 559, 562, 564, 577, 578, 580, 585, 587], "fileid": 171, "fileinst": [10, 172, 173, 549, 559, 580, 587], "filemetadataset": [12, 24, 26, 133, 136, 165, 183, 196, 549, 559, 574, 585], "filenam": [24, 26, 27, 28, 105, 106, 107, 108, 132, 133, 134, 156, 158, 159, 164, 165, 172, 174, 183, 559, 574, 583, 587], "filename_or_obj": [133, 164], "fileobj": [166, 585], "fileobj_typ": [133, 164], "fileread": [50, 71, 203, 549, 584, 585], "fileset": [10, 549, 559, 575, 577, 578, 580], "filespec": [24, 25, 26, 27, 28], "filespec_help": [25, 26], "filespec_pars": [25, 26], "filetyp": [25, 26], "fileutil": [71, 549], "filewrit": [71, 132, 133, 134, 549, 585], "fill": [4, 486, 522, 583, 584], "fillchar": [486, 522], "filter": [20, 26, 27, 132, 133, 134], "final": [2, 17, 45, 107, 139, 142, 143, 144, 183, 585, 592], "find": [10, 17, 20, 23, 25, 26, 46, 94, 132, 133, 134, 165, 172, 177, 178, 179, 181, 182, 486, 522, 583, 584, 585, 587, 591, 592], "find_byt": [71, 178, 179, 559, 566], "find_delimit": [71, 179], "find_valu": [10, 172, 587], "fine": 50, "finit": [515, 523], "first": [3, 20, 26, 28, 36, 37, 38, 39, 41, 43, 44, 45, 48, 50, 53, 55, 77, 78, 80, 98, 107, 131, 132, 133, 134, 142, 143, 144, 145, 146, 148, 149, 152, 153, 167, 172, 180, 205, 234, 237, 247, 249, 262, 264, 266, 270, 486, 515, 520, 522, 559, 570, 571, 572, 582, 583, 584, 587, 592], "firstnam": 12, "fit": [559, 569], "five": [41, 520], "fix": [45, 163, 567, 582, 583, 585], "fix_meta_info": [559, 570, 580], "fixer": [559, 568], "fixm": 2, "fl": [20, 26, 28, 32, 585], "flag": [16, 20, 44, 97, 132, 133, 134, 167, 172, 177, 178, 179, 515, 559, 574, 577, 587], "flat": 587, "flatten": [132, 133, 134], "flexibl": [559, 580], "flip": [2, 8, 20], "float": [11, 32, 33, 36, 41, 43, 53, 82, 89, 129, 132, 133, 134, 160, 162, 163, 164, 166, 180, 204, 209, 267, 514, 515, 516, 517, 518, 519, 523, 539, 553, 559, 565, 566, 572, 575, 577, 579, 585], "float64": [214, 216, 217, 251, 252, 254, 255, 528], "floatpixeldata": [29, 30, 53, 236, 243, 261, 559, 577], "fly": [559, 575], "fma": [515, 591], "fname": 4, "focal": 20, "folder": [559, 562, 580], "follow": [10, 25, 26, 27, 28, 29, 30, 34, 36, 39, 41, 43, 44, 46, 47, 53, 70, 129, 132, 133, 134, 136, 145, 146, 149, 172, 180, 183, 196, 218, 237, 244, 247, 249, 258, 264, 266, 486, 515, 520, 522, 559, 572, 575, 577, 580, 583, 584, 585, 587, 591, 592], "font": 0, "foo": 34, "for_addit": [171, 587], "for_mov": 171, "for_remov": 171, "forc": [16, 29, 132, 133, 134, 155, 162, 166, 167, 172, 183, 559, 563, 565, 567, 585], "force_encod": [183, 559, 580], "force_implicit": 172, "force_rgb": 29, "force_ybr": 29, "foreign": [20, 559, 560], "forg": [589, 590, 592], "forget": [18, 55], "fork": [559, 579, 583, 584, 589], "form": [20, 39, 52, 53, 54, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 132, 133, 134, 237, 247, 249, 264, 266, 272, 511, 520], "format": [6, 7, 12, 13, 20, 24, 26, 27, 28, 32, 34, 43, 44, 45, 47, 129, 132, 133, 134, 139, 140, 141, 146, 162, 183, 198, 209, 212, 486, 513, 515, 516, 517, 520, 521, 522, 539, 559, 560, 561, 562, 568, 571, 577, 578, 580, 581, 585, 587, 589], "format_map": [486, 522], "format_number_as_d": [61, 559, 577], "format_str": 520, "formatted_lin": [132, 133, 134, 559, 561], "found": [10, 45, 48, 52, 53, 54, 107, 132, 133, 134, 162, 167, 172, 177, 180, 237, 244, 486, 522, 585, 587, 590], "found_at": 177, "foundat": 591, "four": [41, 98, 172, 180], "fourth": 520, "fp": [16, 146, 149, 154, 160, 162, 163, 167, 168, 169, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "fpa": 20, "fraction": [26, 27, 28], "fractiongroupnumb": [24, 26], "fractiongroupsequ": [24, 26, 27, 28], "fragment": [53, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 559, 572, 580], "fragments_per_fram": [41, 139], "frame": [2, 8, 20, 29, 30, 34, 37, 39, 46, 53, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 206, 211, 219, 236, 237, 243, 244, 247, 248, 249, 256, 264, 265, 266, 268, 559, 568, 570, 572, 577, 580, 590], "frame1": 139, "frame2": 139, "frame_iter": 590, "frame_length": [236, 243], "framework": 589, "free": [36, 37, 132, 133, 134], "frequenc": [2, 8, 20, 54, 592], "frequent": 587, "friendli": [486, 585, 587], "from": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 70, 73, 77, 78, 80, 82, 85, 86, 92, 98, 109, 110, 119, 120, 129, 130, 131, 132, 133, 134, 136, 137, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 164, 167, 170, 171, 172, 173, 174, 181, 182, 183, 195, 196, 198, 205, 207, 208, 209, 210, 211, 212, 214, 218, 219, 236, 237, 243, 247, 249, 251, 252, 256, 258, 264, 266, 270, 486, 511, 513, 515, 516, 517, 519, 520, 521, 522, 524, 542, 559, 562, 563, 564, 565, 566, 567, 570, 571, 574, 575, 576, 577, 580, 581, 583, 584, 585, 587, 589, 590, 591, 592], "from_byt": [271, 518], "from_float": 515, "from_json": [129, 132, 133, 134, 559, 572, 575, 586], "from_named_compon": [520, 559, 577], "from_named_components_veterinari": [520, 559, 577], "fromhex": [516, 519], "fromisocalendar": [513, 517], "fromisoformat": [513, 517, 521], "fromordin": [513, 517], "fromtimestamp": [513, 517], "front": [486, 522, 583], "full": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 37, 48, 107, 133, 162, 236, 515, 559, 568, 569, 570, 575, 587, 590], "func": [25, 26, 584], "function": [17, 20, 25, 26, 27, 29, 30, 34, 36, 37, 41, 42, 43, 44, 45, 48, 50, 53, 54, 55, 56, 59, 60, 68, 71, 73, 75, 82, 92, 99, 103, 110, 111, 129, 132, 133, 134, 137, 138, 146, 147, 149, 154, 160, 163, 165, 166, 170, 172, 181, 182, 183, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 236, 237, 243, 244, 247, 249, 250, 259, 264, 266, 272, 432, 513, 514, 515, 517, 523, 546, 547, 549, 550, 552, 555, 556, 559, 560, 561, 562, 567, 568, 570, 571, 572, 575, 577, 580, 584, 585, 586, 587, 590, 592], "further": [39, 587, 591], "furthermor": 523, "furthest": [173, 181, 182], "fuse": 515, "futur": [49, 97, 132, 133, 134, 559, 565, 575, 591], "future_behavior": [44, 549, 559, 575], "f\u00e9lix": [559, 566], "g": [2, 8, 9, 11, 12, 17, 20, 22, 24, 26, 27, 30, 34, 38, 39, 41, 43, 44, 45, 52, 53, 57, 86, 129, 132, 133, 134, 135, 162, 205, 206, 237, 244, 270, 513, 515, 520, 545, 559, 562, 569, 571, 575, 580, 585], "g1": 39, "g2": 39, "gain": 20, "galleri": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 581], "gantri": [11, 20, 26, 28], "gantryangl": 11, "gb18030": 22, "gcc": 584, "gdcm": [30, 34, 38, 46, 47, 132, 133, 134, 207, 227, 228, 229, 230, 231, 232, 233, 234, 242, 559, 562, 568, 571, 575, 577, 578, 580, 590], "gdcm_handler": 98, "ge": 20, "ge_genesis_ff": [20, 48], "gems_acqu_01": 20, "gems_iden_01": [20, 48], "gems_imag_01": 20, "gems_imps_01": 20, "gems_parm_01": 20, "gems_pati_01": 20, "gems_rela_01": 20, "gems_sers_01": 20, "gems_stdy_01": 20, "gender": 41, "gener": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 25, 26, 27, 34, 38, 43, 44, 47, 55, 137, 138, 145, 151, 160, 166, 174, 270, 272, 486, 511, 519, 546, 559, 561, 562, 566, 568, 580, 584, 590], "generate_filenam": [549, 559, 580], "generate_frag": [137, 138, 146, 154, 559, 580], "generate_fragmented_fram": [145, 559, 580], "generate_fram": [137, 138, 147, 211, 559, 580], "generate_multiplex": [3, 132, 133, 134, 546, 559, 575, 592], "generate_pixel_data": [559, 572, 580], "generate_pixel_data_frag": [559, 580], "generate_pixel_data_fram": [559, 580], "generate_uid": [10, 38, 172, 559, 571, 580], "genesi": 20, "geometri": 0, "get": [2, 9, 10, 14, 26, 27, 32, 41, 43, 44, 45, 47, 48, 51, 52, 53, 54, 94, 98, 132, 133, 134, 156, 158, 159, 170, 267, 549, 559, 562, 563, 571, 575, 577, 583, 584, 588, 589, 590], "get_charset_fil": 549, "get_data": 236, "get_decod": 549, "get_encod": 549, "get_entri": 120, "get_expected_length": [206, 559, 580], "get_fram": [243, 559, 580], "get_frame_offset": [559, 572, 580], "get_image_pixel_id": [559, 580], "get_item": [132, 133, 134, 559, 580], "get_j2k_paramet": [559, 580], "get_nr_fram": [559, 580], "get_opt": [30, 34, 236, 243], "get_overlay_arrai": 206, "get_palette_fil": [549, 559, 572], "get_pixeldata": [98, 207, 208, 209, 210, 211, 212], "get_private_entri": 119, "get_private_item": [132, 133, 134], "get_tag": 135, "get_testdata_fil": [9, 10, 11, 43, 45, 53, 549, 559, 575, 577, 578, 580, 584, 585, 587], "gggg": 585, "ggggeeee": 271, "gigabyt": 590, "gildong": [22, 520], "git": [24, 26, 27, 583, 584, 589], "github": [23, 559, 568, 582, 583, 584, 589], "give": [45, 515, 523, 559, 561, 562, 585, 590], "given": [2, 11, 24, 26, 27, 28, 29, 32, 36, 37, 47, 53, 54, 78, 80, 129, 130, 132, 133, 134, 135, 136, 142, 144, 156, 158, 159, 162, 164, 170, 172, 206, 209, 211, 212, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 259, 271, 486, 515, 516, 518, 520, 522, 539, 546, 559, 574, 577, 585, 587, 589, 590, 592], "given_nam": [520, 559, 577], "given_name_ideograph": 520, "given_name_phonet": 520, "glob": [4, 10, 105, 106, 108, 587], "global": [100, 559, 578], "glossari": [36, 37, 38, 40], "glow": 20, "gmail": [2, 8, 9, 11, 12, 17, 20, 22], "gn": 39, "go": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 55, 165, 583, 584, 585, 587, 589], "gone": 584, "good": [41, 55, 583, 584], "googl": 582, "got": 584, "goyett": [559, 567], "gracefulli": [559, 575, 580], "grai": 9, "graphic": [0, 51, 53], "grayscal": [30, 34, 36, 37, 38, 39, 53], "greater": [32, 39, 132, 133, 134, 141, 146, 268, 511, 515, 559, 568, 586], "greek": [559, 560], "green": [36, 37, 38, 39, 559, 574], "gregorian": [513, 517], "grep": [26, 27], "greyscal": [36, 37], "grid": 0, "group": [2, 12, 17, 20, 26, 27, 28, 39, 43, 45, 48, 52, 54, 119, 121, 129, 132, 133, 134, 135, 136, 162, 170, 172, 183, 196, 206, 236, 243, 247, 249, 264, 266, 271, 272, 273, 520, 546, 559, 562, 565, 569, 574, 575, 582, 583, 585, 592], "group_dataset": [132, 133, 134], "group_elem": 273, "grouplength": 121, "guarante": [44, 47, 48, 515], "gui": [559, 560], "guid": [30, 34, 41, 45, 46, 132, 133, 134, 549, 559, 571, 577, 580, 584, 585, 590], "guillaum": [2, 8, 9, 11, 12, 17, 20, 22], "gunnar": [559, 566], "gzip": [559, 565, 571], "h": [2, 8, 12, 20, 22, 24, 26, 27, 28], "ha": [2, 10, 14, 20, 24, 25, 26, 27, 30, 34, 36, 37, 38, 39, 41, 44, 45, 46, 48, 53, 55, 83, 90, 92, 129, 132, 133, 134, 141, 142, 144, 146, 148, 149, 163, 164, 171, 172, 173, 183, 184, 195, 205, 206, 207, 208, 209, 210, 211, 212, 243, 248, 263, 265, 271, 486, 511, 512, 514, 515, 522, 546, 559, 561, 562, 564, 569, 570, 572, 573, 574, 579, 580, 583, 584, 585, 586, 587, 590, 592], "habit": 585, "had": [512, 559, 570, 577, 583], "halchenko": [559, 567], "halv": 259, "hand": [39, 55, 515, 559, 575], "handi": 43, "handl": [48, 49, 53, 55, 77, 98, 129, 132, 133, 134, 179, 197, 486, 522, 547, 549, 559, 560, 563, 565, 567, 568, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580, 585, 586, 589], "handler": [41, 46, 47, 53, 81, 95, 98, 132, 133, 134, 206, 207, 208, 209, 210, 211, 212, 546, 549, 559, 568, 570, 572, 573, 574, 575, 577, 578, 580, 583, 586, 590], "handler_nam": [132, 133, 134], "hang": 170, "happi": [583, 584], "harder": 43, "has_bot": [139, 140], "has_inst": 173, "hasattr": 4, "hash": [511, 559, 571, 577], "hasn": [145, 583, 584], "have": [12, 14, 25, 26, 27, 28, 32, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 52, 55, 98, 129, 132, 133, 134, 136, 139, 140, 142, 143, 146, 149, 162, 165, 172, 174, 183, 196, 206, 209, 211, 212, 218, 236, 237, 243, 244, 247, 248, 249, 258, 264, 265, 266, 486, 512, 515, 522, 525, 536, 546, 559, 565, 568, 570, 571, 574, 578, 580, 582, 583, 584, 585, 586, 587, 589, 590, 592], "haven": [41, 583, 585], "hdr": 20, "head": [10, 41, 45, 587], "header": [20, 36, 155, 162, 167, 559, 561, 585], "health": [24, 26, 55], "height": 20, "helic": 20, "hello": [16, 585], "help": [14, 24, 25, 26, 27, 28, 44, 46, 48, 163, 559, 562, 570, 577, 579, 582, 583, 584, 590], "helper": [45, 135], "henc": [39, 183], "here": [10, 24, 26, 28, 30, 34, 42, 48, 51, 100, 179, 237, 244, 584, 585, 586, 587, 591], "heurist": [163, 559, 568], "hex": [41, 52, 129, 132, 133, 134, 135, 516, 519, 559, 562], "hexadecim": [516, 519, 585], "hf": [2, 8, 20, 45], "hfp": 45, "hh": [517, 521], "hierarch": [6, 21, 145, 233, 234, 268, 559, 572, 581], "hierarchi": [172, 587], "high": [2, 8, 20, 37, 38, 39, 41, 112, 223, 224, 225, 559, 572], "higher": [36, 38, 40, 132, 133, 134, 148, 515, 559, 562, 586], "highest": [486, 522, 559, 577], "highli": [559, 579], "hint": 32, "hispe": 20, "histogram": 20, "histori": 20, "hold": [205, 270, 271, 518], "holmberg": [559, 567], "holog": [559, 578], "home": 587, "hong": [22, 520], "hood": 43, "horiz": 20, "horizont": 259, "hors": 520, "host": [20, 271, 518], "hot_iron": [213, 250], "hot_metal_blu": [213, 250], "hotfix": [559, 580], "hounsfield": 53, "hour": [517, 521], "how": [2, 3, 8, 9, 10, 12, 14, 16, 17, 18, 20, 24, 26, 30, 34, 39, 41, 42, 45, 46, 47, 48, 51, 52, 53, 54, 55, 110, 129, 142, 143, 172, 559, 560, 564, 583, 584, 585, 586, 587, 588, 592], "howev": [10, 25, 26, 32, 36, 37, 38, 39, 43, 46, 132, 133, 134, 145, 146, 149, 205, 519, 583, 584, 585, 587, 590], "htj2k": [245, 559, 580], "htj2klossless": [559, 580], "htj2klosslessrpcl": [559, 580], "html": [41, 584], "http": [23, 41, 51, 583, 584, 586, 589], "hu": 53, "human": [486, 520, 585], "hundr": 590, "hypothet": 41, "hz": [3, 54, 592], "i": [0, 2, 3, 4, 10, 17, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 61, 66, 70, 72, 74, 77, 78, 80, 82, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 97, 98, 104, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 195, 196, 197, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 236, 237, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 486, 511, 513, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 534, 535, 536, 538, 539, 541, 542, 547, 548, 559, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592], "i2": 590, "ibh": 20, "icon": [583, 584], "id": [0, 2, 8, 9, 10, 12, 17, 20, 48, 132, 133, 134, 135, 171, 172, 173, 174, 175, 261, 559, 561, 578, 585, 587], "id00001": [26, 28], "idea": [583, 584], "ideal": 47, "iden": 20, "ident": [515, 559, 565], "identif": 10, "identifi": [32, 39, 44, 48, 55, 192, 486, 522], "ideograph": 520, "idx": 0, "ie": 129, "iec": [36, 37, 39, 46, 219, 256, 262, 371, 376, 379, 511], "ignor": [44, 57, 77, 85, 86, 112, 129, 132, 133, 134, 176, 486, 515, 522, 540, 549, 559, 573, 577, 580, 584], "ii": [585, 592], "iii": 592, "illustr": [1, 3, 4, 6, 7, 8, 9, 15, 16, 18, 20, 36, 37, 42, 43, 590], "im": 2, "im000000": [10, 587], "im000001": [10, 587], "im000002": [10, 587], "im000003": [10, 587], "im000004": 10, "im000005": 10, "im000006": 10, "imag": [5, 8, 9, 10, 12, 17, 20, 26, 28, 30, 33, 34, 45, 46, 48, 49, 52, 53, 70, 132, 133, 134, 140, 141, 145, 146, 149, 170, 172, 207, 209, 210, 211, 212, 213, 218, 219, 223, 224, 225, 227, 228, 231, 232, 237, 238, 239, 240, 241, 243, 247, 249, 250, 256, 258, 260, 263, 264, 266, 267, 268, 271, 516, 518, 519, 552, 555, 559, 562, 569, 571, 575, 577, 580, 581, 585, 587, 589, 590], "image_handl": [559, 570, 571], "image_process": [5, 581], "imagecodec": [30, 34], "imagetyp": 585, "imaginari": [271, 516, 518, 519], "img2d": 4, "img3d": 4, "img_shap": 4, "imit": 97, "immedi": 53, "immut": [29, 237, 513, 517, 521, 559, 571], "implant": [170, 172], "implement": [2, 12, 20, 26, 27, 28, 30, 34, 43, 48, 55, 136, 158, 159, 196, 424, 486, 522, 559, 575, 585], "implementationclassuid": 12, "implicit": [16, 26, 27, 39, 43, 47, 90, 132, 133, 134, 156, 158, 159, 160, 163, 172, 183, 209, 226, 245, 486, 512, 534, 559, 562, 569, 571, 577, 580, 590], "implicit_vr": [132, 133, 134, 183, 486, 512, 559, 580], "implicitli": [46, 590], "import": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 30, 34, 36, 37, 38, 39, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 70, 85, 86, 109, 110, 129, 132, 133, 134, 140, 170, 172, 237, 244, 486, 511, 559, 565, 568, 580, 583, 584, 585, 586, 587, 589, 590, 591, 592], "import_path": [237, 244], "importantli": 587, "importerror": [207, 208, 210, 528, 530, 559, 576, 583], "imposs": 172, "improp": [559, 572, 574], "improv": [44, 559, 566, 569, 570, 577, 579, 582], "imshow": [4, 9, 51], "imview": 51, "imxxxxxx": 172, "includ": [24, 25, 26, 29, 44, 52, 55, 129, 132, 133, 134, 139, 170, 172, 183, 206, 236, 243, 260, 274, 486, 515, 517, 521, 522, 549, 559, 561, 563, 565, 567, 568, 580, 583, 584, 585, 587, 590, 592], "include_orphan": 172, "inclus": [37, 38, 39], "incompat": [559, 562, 568], "incorrect": [145, 237, 244, 559, 563, 569, 571, 572, 580], "incorrectli": [559, 560], "incorrectmodalityworklistentri": 591, "increas": [36, 132, 133, 134, 559, 562, 579], "increment": [20, 174], "incur": 523, "indent": [8, 132, 133, 134, 173, 585], "indent_char": [132, 173], "indent_format": [132, 133, 134], "indent_str": 8, "independ": 183, "index": [36, 37, 38, 43, 53, 54, 131, 132, 133, 134, 148, 172, 173, 174, 205, 215, 216, 217, 236, 237, 243, 244, 249, 253, 254, 255, 266, 270, 486, 522, 546, 559, 575, 580, 584, 592], "indexerror": [205, 270], "indic": [2, 8, 20, 39, 48, 52, 98, 129, 132, 133, 134, 156, 158, 159, 237, 247, 264, 271, 515, 518, 559, 566, 583, 584, 585], "indirectli": [30, 34], "individu": [55, 219, 256, 520, 559, 565, 575, 577], "inequ": [559, 569, 570], "inexact": 515, "inf": [515, 523], "infer_sq_for_un_vr": [57, 559, 578], "infil": 585, "infin": [515, 516, 519], "infinit": 515, "info": [11, 20, 160, 163, 166, 178, 179, 180, 486, 559, 562, 563, 565, 567], "inform": [2, 6, 7, 8, 9, 12, 13, 20, 24, 26, 27, 28, 31, 35, 40, 41, 43, 46, 48, 51, 53, 55, 81, 101, 129, 132, 133, 134, 136, 162, 165, 167, 183, 196, 237, 244, 247, 249, 264, 266, 520, 559, 560, 562, 565, 568, 572, 574, 575, 580, 581, 583, 584, 585, 590, 592], "inherit": [559, 577, 580], "init": [559, 577], "init_valu": 134, "initi": [41, 45, 133, 134, 135, 178, 179, 205, 270, 520, 583], "initial_byt": 156, "initialis": [559, 580], "inlin": [132, 133, 134, 586], "inlinebinari": [129, 132, 133, 134], "input": [20, 24, 26, 53, 205, 219, 236, 248, 256, 265, 520, 559, 575], "input_output": [13, 581], "insensit": [43, 132, 133, 134], "insert": [0, 205, 270, 486, 522, 584, 585], "insid": [17, 559, 561], "instal": [42, 44, 47, 51, 98, 211, 237, 244, 559, 560, 567, 577, 584, 585, 588, 590, 592], "instanc": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 38, 43, 45, 48, 50, 51, 53, 70, 79, 89, 132, 133, 134, 136, 156, 158, 159, 162, 163, 170, 171, 172, 173, 183, 196, 205, 213, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 250, 270, 486, 514, 515, 516, 522, 553, 554, 559, 571, 577, 580, 585, 590, 591], "instancecreationd": [24, 26], "instancecreationtim": [24, 26], "instancenumb": 587, "instead": [2, 34, 37, 43, 45, 53, 54, 55, 96, 132, 133, 134, 145, 146, 147, 149, 154, 160, 170, 172, 183, 237, 486, 519, 520, 522, 547, 548, 559, 562, 565, 569, 570, 571, 574, 575, 577, 578, 580, 583, 584, 585, 586, 587, 589, 590, 592], "institut": [2, 8, 20], "instruct": [583, 584, 585], "int": [29, 30, 32, 33, 34, 43, 57, 78, 86, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 139, 141, 142, 144, 145, 147, 148, 149, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 166, 168, 169, 172, 173, 174, 177, 178, 179, 180, 195, 204, 205, 206, 215, 216, 217, 236, 237, 243, 244, 247, 248, 249, 253, 254, 255, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 273, 486, 513, 514, 515, 516, 517, 518, 519, 520, 522, 534, 539, 542, 546, 585], "int16": [43, 53, 54, 592], "int64": 530, "integ": [29, 30, 32, 34, 37, 39, 53, 149, 205, 248, 263, 265, 267, 270, 271, 486, 511, 515, 516, 518, 519, 522, 559, 563, 565, 575, 592], "integr": 20, "intellig": 45, "intend": [30, 34, 38, 39, 132, 133, 134, 236, 243, 244, 583], "intens": [33, 36, 37, 38, 39, 590], "intention": [486, 522], "interact": [10, 43, 45, 48, 132, 133, 134, 587], "intercept": [20, 43, 214, 251, 252], "interchang": [53, 587], "interest": [14, 52, 582, 585], "interfac": [27, 40, 559, 577, 589], "interleav": [33, 37, 592], "interleave_mod": 33, "intermedi": [42, 43, 515], "intern": [129, 132, 133, 134, 160, 566], "interpret": [2, 8, 20, 29, 38, 39, 46, 47, 52, 53, 132, 133, 134, 207, 208, 209, 210, 211, 212, 219, 236, 237, 243, 247, 249, 256, 259, 264, 266, 486, 513, 522, 559, 572, 590, 592], "interscan": 20, "interv": 592, "introduc": [559, 578, 583], "introduct": [28, 34, 42, 49, 583, 584, 587, 588, 592], "invalid": [44, 57, 77, 78, 86, 90, 91, 136, 263, 511, 559, 571, 575, 577, 579, 580], "invalid_key_behavior": [97, 549, 559, 575], "invalid_keyword_behavior": [97, 549, 559, 575], "invaliddicomerror": [162, 167, 549, 559, 563, 585], "invalidoper": 515, "invers": [39, 513, 515, 517], "io": [14, 16, 133, 156, 158, 159, 549, 559, 580, 585], "iobas": [158, 159], "iod": [39, 183, 267, 587, 592], "ipsum": 511, "ipynb": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "ipython": [132, 133, 134, 559, 560], "ir": [559, 572], "irrevers": 36, "is_arrai": [236, 243], "is_avail": [30, 34, 98, 206, 207, 208, 209, 210, 211, 212, 237, 244, 546, 559, 570], "is_binari": [236, 243], "is_buff": [236, 243], "is_canon": 515, "is_compress": 486, "is_conformant_file_id": 549, "is_dataset": [236, 243], "is_defl": 486, "is_dicom": [549, 559, 568], "is_empti": 129, "is_encapsul": [237, 244, 486], "is_fil": [10, 587], "is_finit": 515, "is_implicit_vr": [16, 46, 131, 132, 133, 134, 156, 158, 159, 160, 161, 163, 168, 169, 183, 195, 486, 534, 559, 571, 580], "is_infinit": 515, "is_integ": [516, 519], "is_little_endian": [14, 16, 46, 131, 132, 133, 134, 146, 149, 156, 158, 159, 160, 163, 168, 169, 176, 178, 179, 180, 181, 182, 183, 195, 486, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 541, 542, 559, 580], "is_n": [237, 244], "is_nan": 515, "is_norm": 515, "is_original_encod": [132, 133, 134], "is_priv": [43, 129, 171, 271, 486, 559, 568], "is_private_cr": 271, "is_qnan": 515, "is_raw": 131, "is_retir": [16, 109, 110, 111, 119, 120, 129, 486, 559, 568], "is_root": 173, "is_sign": [262, 515], "is_snan": 515, "is_stag": [171, 172, 587], "is_subnorm": 515, "is_transfer_syntax": 486, "is_undefined_length": [46, 129, 132, 133, 134, 559, 572], "is_valid": 486, "is_valid_d": [61, 559, 577], "is_zero": 515, "isalnum": [486, 522], "isalpha": [486, 522], "isascii": [486, 522], "isdecim": [486, 522], "isdigit": [486, 522], "isfloat": [61, 559, 579], "isidentifi": [486, 522], "iskeyword": [486, 522], "islow": [486, 522], "ismultivalu": [559, 571, 574], "isn": [37, 132, 133, 134, 142, 144, 148, 163, 183, 267, 486, 511, 559, 571, 575, 580, 584, 585], "isnumer": [486, 522], "iso": [26, 27, 36, 37, 39, 46, 219, 256, 262, 371, 376, 379, 511, 513, 517, 521, 559, 572], "iso2022_jp": 22, "iso8859": [22, 132, 133, 134, 160, 163, 195, 534], "iso_ir": [10, 20, 26, 28, 48, 79, 585, 586, 587], "iso_ir_100": 585, "isocalendar": [513, 517], "isoformat": [513, 517, 521], "isol": 589, "isovue300": 20, "isoweekdai": [513, 517], "isprint": [486, 522], "isspac": [486, 522], "isstr": [559, 571], "isstringorstringlist": [559, 571], "issu": [24, 26, 28, 30, 34, 37, 45, 55, 57, 77, 78, 80, 88, 263, 559, 562, 563, 564, 565, 566, 571, 580, 582, 583], "issue18": [559, 560], "issue22": [559, 560], "issue27": [559, 560], "issue33": [559, 560], "issue36": [559, 561], "issue38": [559, 561], "issue40": [559, 561], "issue41": [559, 561], "istitl": [486, 522], "isupp": [486, 522], "ital": 41, "italic": 41, "item": [0, 6, 8, 9, 15, 19, 20, 24, 26, 27, 28, 32, 41, 43, 54, 55, 129, 132, 133, 134, 139, 140, 141, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 169, 176, 200, 205, 270, 559, 560, 561, 562, 565, 568, 571, 572, 577, 578, 581, 585, 587, 592], "itemdelimitertag": 163, "itemis": 151, "iter": [10, 17, 43, 132, 133, 134, 141, 142, 143, 144, 145, 146, 147, 151, 160, 173, 174, 181, 184, 205, 211, 236, 237, 244, 247, 264, 270, 271, 274, 486, 518, 522, 559, 561, 569, 580, 587], "iter_arrai": [29, 237], "iter_buff": [29, 237], "iter_decod": 236, "iter_encod": [244, 590], "iter_pixel": [29, 549, 559, 580], "iteral": [132, 133, 134, 559, 561], "itis_tsn": 591, "its": [10, 24, 25, 26, 27, 30, 32, 34, 36, 37, 38, 39, 43, 44, 83, 129, 132, 133, 134, 149, 172, 173, 180, 205, 206, 207, 208, 209, 210, 211, 212, 486, 515, 522, 546, 559, 570, 575, 580, 585, 587], "itself": [10, 38, 41, 43, 48, 107, 158, 159, 181, 182, 486, 522, 559, 575, 583, 584, 587], "itu": [36, 37, 219, 256, 511], "iv": 20, "j": 22, "j2k": [46, 559, 580], "j2k_cr": [36, 132, 133, 134], "j2k_psnr": [36, 132, 133, 134], "jame": 14, "jan": [23, 85, 585], "januari": [23, 513, 517], "japanes": [559, 560, 565, 568], "jfk": 20, "ji": [559, 571], "jls_error": [37, 132, 133, 134, 590], "joan": [129, 132], "john": [132, 520], "join": [11, 45, 486, 522], "jonathan": [559, 566, 567], "jp2": 36, "jpe2000lossless": 36, "jpeg": [23, 29, 35, 39, 45, 46, 47, 53, 81, 132, 133, 134, 139, 140, 145, 207, 208, 209, 210, 211, 212, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 245, 246, 247, 249, 262, 264, 266, 268, 371, 376, 379, 486, 559, 570, 572, 574, 575, 577, 580, 589, 590], "jpeg2000": [30, 34, 36, 47, 145, 245, 559, 570, 572], "jpeg2000compressedpixeltransfersyntax": [559, 575, 580], "jpeg2000encod": [33, 36, 559, 580], "jpeg2000lossi": [559, 570], "jpeg2000lossless": 590, "jpeg2000losslessencod": [33, 36, 559, 580], "jpeg2000mc": [559, 575, 580], "jpeg2000mclossless": [559, 575, 580], "jpeg2000multicompon": [559, 570, 575, 580, 583], "jpeg2000multicomponentlossless": [559, 570, 575, 580, 583], "jpeg2000transfersyntax": [559, 575, 580], "jpeg2k": [46, 70, 559, 570, 590], "jpeg2kimageplugin": 47, "jpeg_l": [47, 132, 133, 134, 208, 559, 568, 580], "jpeg_ls_handl": 98, "jpegbaselin": [559, 570, 575, 580], "jpegbaseline8bit": [46, 486, 559, 575, 580], "jpegbaselinelossy12bit": [559, 570], "jpegbaselinelossy8bit": [559, 570], "jpegextend": [559, 570, 575, 580], "jpegextended12bit": [559, 575, 580], "jpegimageplugin": 47, "jpeglossless": [559, 575, 580], "jpeglosslessp14": [559, 570], "jpeglosslesssv1": [559, 575, 580], "jpeglossycompressedpixeltransfersyntax": [559, 575, 580], "jpeglslossi": [559, 575, 580], "jpeglslossless": 37, "jpeglslosslessencod": [33, 37, 559, 580], "jpeglsnearlossless": [37, 559, 575, 580, 590], "jpeglsnearlosslessencod": [33, 37, 559, 580], "jpeglssupportedcompressedpixeltransfersyntax": [559, 575, 580], "jpeglstransfersyntax": [559, 575, 580], "jpegtransfersyntax": [559, 575, 580], "jpg": [559, 577], "jpiphtj2kreferenc": [559, 580], "jpiphtj2kreferenceddefl": [559, 580], "json": [129, 132, 133, 134, 271, 559, 571, 572, 576, 577, 588], "json_data": 586, "json_dataset": [132, 133, 134], "json_kei": [271, 559, 579], "jsonmodel": 132, "juli": 23, "julien": [559, 567], "june": 23, "jupyt": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "just": [10, 12, 14, 25, 26, 27, 28, 43, 48, 55, 90, 129, 132, 133, 134, 160, 559, 571, 575, 583, 584, 585, 587], "justifi": [486, 522], "k": [174, 559, 580], "kb": 162, "keep": [36, 37, 38, 172, 587, 589], "keep_def": [132, 133, 134, 559, 580], "keepend": [486, 522], "kei": [4, 33, 43, 86, 129, 132, 133, 134, 135, 170, 173, 206, 218, 258, 271, 486, 522, 559, 575, 583], "kept": [515, 559, 561, 589], "kernel": 20, "key": 51, "keyerror": [113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 130, 132, 133, 134, 559, 580, 585], "keyword": [17, 26, 27, 28, 29, 41, 43, 48, 53, 54, 85, 86, 93, 107, 109, 110, 118, 119, 121, 126, 128, 129, 132, 133, 134, 162, 172, 181, 182, 183, 206, 209, 211, 212, 216, 219, 236, 237, 243, 244, 247, 248, 249, 254, 256, 257, 260, 261, 264, 265, 266, 267, 268, 269, 272, 486, 522, 546, 559, 563, 565, 568, 570, 571, 575, 579, 580, 584, 585, 587, 590, 591], "khz": 592, "kind": [45, 48], "klein": [559, 563], "know": [10, 39, 43, 48, 585, 586, 587], "known": [38, 39, 43, 44, 48, 53, 57, 85, 97, 129, 130, 132, 133, 134, 213, 250, 271, 273, 518, 559, 569, 572, 574, 575, 577, 585, 591], "korean": [520, 559, 565], "kvp": 20, "kwarg": [132, 133, 134, 156, 157, 158, 159, 172, 183, 218, 236, 237, 243, 244, 247, 249, 258, 264, 266, 486, 513, 517, 520, 521, 522], "l": [20, 23, 29, 35, 46, 47, 132, 133, 134, 145, 231, 232, 237, 240, 241, 245, 246, 247, 249, 264, 266, 268, 376, 559, 570, 580, 589, 590], "label": [22, 26, 28, 30, 34, 51, 237, 244], "lack": 585, "lambda": 4, "lami": [559, 567], "landmark": 20, "languag": [559, 560, 565], "larg": [20, 46, 48, 55, 132, 133, 134, 135, 139, 140, 163, 180, 514, 559, 561, 562, 569, 571, 572, 575, 577, 590, 592], "larger": [24, 26, 162, 515, 589, 590], "largest": [2, 8, 20, 515], "last": [20, 26, 28, 41, 43, 45, 48, 86, 98, 141, 146, 205, 270, 559, 565, 578, 585, 587, 590], "lastli": [583, 584], "later": [2, 8, 20, 30, 100, 515, 516, 559, 566, 583, 585], "latest": [48, 589], "latin5": [559, 568], "latter": [142, 143, 144, 148, 152, 153], "layer": [33, 36, 132, 133, 134], "layout": [10, 172], "lazi": 52, "lead": [54, 57, 70, 486, 515, 516, 522, 525, 559, 563, 568, 579, 592], "leaf": [171, 172, 173], "leaf_nod": 172, "learn": [41, 45, 583, 587], "least": [30, 34, 36, 39, 132, 133, 134, 249, 266, 486, 522, 542, 587], "leav": [10, 16, 26, 27, 110, 585], "left": [20, 36, 52, 132, 133, 134, 486, 515, 522, 584], "legaci": 44, "lemaitr": [2, 8, 9, 11, 12, 17, 20, 22], "lemaitre58": [2, 8, 9, 11, 12, 17, 20, 22], "len": [0, 3, 4, 8, 10, 14, 36, 37, 38, 486, 522, 585, 587, 592], "length": [2, 8, 12, 20, 26, 27, 28, 43, 44, 46, 48, 54, 57, 91, 121, 129, 131, 132, 133, 134, 139, 140, 141, 142, 144, 146, 148, 149, 150, 151, 156, 158, 159, 160, 176, 179, 196, 206, 209, 212, 236, 243, 248, 260, 265, 271, 486, 511, 515, 518, 522, 559, 564, 565, 569, 571, 575, 577, 578, 579, 580, 585], "length_of_undefined_length": 71, "less": [10, 37, 38, 39, 156, 158, 159, 515, 559, 580, 592], "let": [45, 46, 559, 572, 583, 584, 585, 587, 590], "letter": [20, 43, 132, 133, 134], "level": [20, 26, 27, 28, 36, 40, 41, 132, 133, 134, 163, 172, 173, 559, 565, 577, 580, 584, 585, 586, 587], "lib": 587, "libjpeg": [47, 559, 580, 589], "librari": [2, 23, 25, 26, 43, 44, 49, 53, 257, 269, 559, 562, 565, 584, 590], "licens": [2, 8, 9, 11, 12, 16, 17, 20, 22, 559, 561, 562, 584], "like": [18, 25, 26, 29, 37, 43, 44, 48, 52, 55, 73, 75, 86, 112, 132, 133, 134, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 177, 179, 180, 183, 195, 196, 198, 199, 200, 236, 237, 243, 247, 249, 264, 266, 517, 559, 562, 572, 575, 578, 580, 584, 585, 586, 587], "limit": [10, 26, 27, 37, 38, 45, 49, 53, 172, 486, 522, 523, 524, 559, 565, 571, 575, 591], "linac": 132, "line": [11, 20, 23, 24, 25, 27, 28, 40, 44, 45, 48, 52, 55, 86, 132, 133, 134, 172, 486, 522, 559, 566, 577, 583, 584, 585, 587, 590], "linear": [559, 577], "link": [36, 37, 41, 584], "linux": [44, 559, 568, 584, 589], "list": [4, 6, 7, 8, 10, 13, 20, 26, 28, 30, 32, 33, 34, 36, 37, 38, 39, 43, 45, 46, 77, 78, 79, 80, 98, 105, 106, 108, 129, 130, 132, 133, 134, 137, 139, 140, 142, 144, 148, 149, 152, 153, 160, 162, 163, 166, 168, 172, 173, 181, 182, 190, 194, 195, 199, 200, 202, 205, 206, 236, 237, 243, 244, 247, 249, 264, 266, 270, 486, 511, 520, 522, 527, 528, 529, 530, 533, 534, 535, 536, 539, 540, 543, 544, 549, 559, 562, 565, 566, 572, 575, 577, 578, 580, 581, 584, 585, 587, 589, 590], "list_beam": 11, "liter": [25, 26], "littl": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 39, 43, 46, 47, 48, 132, 133, 134, 142, 143, 144, 146, 148, 150, 151, 152, 153, 156, 158, 159, 160, 163, 172, 178, 179, 180, 183, 196, 209, 212, 220, 222, 226, 244, 245, 271, 486, 512, 518, 525, 526, 527, 528, 529, 530, 534, 535, 536, 538, 539, 541, 542, 559, 562, 574, 580, 585, 590, 592], "little_endian": [132, 133, 134, 183, 486, 512, 559, 580], "live": [583, 584], "ljust": [486, 522], "ll": [46, 583, 584, 585, 590, 592], "ln": [515, 591], "lo": [2, 12, 16, 17, 18, 20, 26, 27, 32, 48, 132, 543, 585, 587], "load": [1, 5, 6, 10, 12, 14, 16, 163, 171, 172, 180, 559, 571, 575, 576, 577, 581], "loc": 20, "local": [44, 70, 107, 513, 517, 559, 578, 583, 584, 585, 589], "localhost": 584, "localtim": [513, 517], "locat": [2, 4, 8, 9, 20, 95, 132, 133, 134, 135, 145, 171, 178, 584, 587], "log": [95, 132, 133, 134, 559, 565, 578, 583], "log10": 515, "logarithm": 515, "logb": 515, "logger": [95, 559, 566, 580], "logic": [515, 559, 562], "logical_and": 515, "logical_invert": 515, "logical_or": 515, "logical_xor": 515, "long": [12, 32, 37, 179, 183, 542, 559, 579, 585], "longer": [57, 83, 129, 209, 559, 569, 570, 572, 575, 577, 580, 587], "look": [55, 181, 182, 583, 584, 585], "lookup": [36, 37, 38, 53, 113, 114, 115, 117, 118, 128, 213, 214, 215, 216, 250, 251, 252, 253, 254, 486, 522, 559, 575, 585], "lookuperror": [77, 78, 486, 522], "loonei": [559, 566, 567], "loop": [24, 26, 55], "lorem": 511, "loss": [78, 80, 515, 516, 523, 559, 575], "lossi": [36, 37, 38, 46, 47, 145, 232, 241, 268, 590], "lossless": [35, 39, 46, 47, 53, 132, 133, 134, 139, 140, 145, 211, 212, 224, 225, 228, 231, 232, 233, 234, 235, 239, 240, 241, 242, 244, 245, 246, 268, 559, 574, 577, 578, 580, 590], "losslessli": [36, 37], "lossy_error": 33, "lot": [559, 568, 585], "low": [135, 586], "lower": [20, 132, 133, 134, 135, 172, 486, 515, 522, 559, 580, 587, 591], "lowercas": [41, 486, 522], "lowest": [271, 486, 515, 518, 522], "lrcp": 36, "lsb": 212, "lstrip": [486, 522], "lt": [2, 20, 32], "ltd": 111, "lut": [49, 51, 213, 214, 215, 216, 217, 250, 251, 252, 253, 254, 255, 559, 572, 574, 575, 577], "lutdata": [559, 579], "m": [12, 22, 520, 583, 584, 587, 589, 590, 592], "maco": [559, 578, 589], "made": [38, 132, 133, 134, 141, 145, 172, 183, 559, 561, 562, 574, 583, 584, 587], "mai": [23, 24, 26, 27, 29, 30, 33, 34, 36, 37, 39, 44, 47, 48, 51, 52, 53, 55, 79, 97, 100, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 156, 158, 159, 172, 183, 196, 212, 218, 236, 237, 244, 247, 249, 258, 264, 266, 486, 512, 515, 520, 522, 536, 538, 549, 559, 572, 580, 583, 584, 585, 587, 589, 590, 592], "main": [24, 25, 26, 42, 43, 50, 55, 119, 559, 562, 583, 584, 585, 589], "mainli": [51, 132, 133, 134, 486, 522, 559, 566], "mainloop": [0, 22], "major": [45, 49, 97, 575], "make": [29, 30, 34, 36, 37, 39, 43, 44, 45, 48, 55, 132, 133, 134, 486, 511, 522, 523, 559, 562, 571, 577, 580, 585, 587, 589, 590], "maketran": [486, 522], "mamp": 20, "manag": [10, 30, 34, 48, 159, 162, 172, 236, 243, 559, 568, 575, 585, 587], "mani": [39, 44, 51, 53, 139, 140, 142, 143, 559, 561, 565, 566, 580, 582], "manipul": [2, 23, 45, 129, 589], "manner": [585, 590], "manual": [94, 183], "manufactur": [2, 8, 20, 132], "map": [53, 129, 132, 170, 486, 522, 559, 580, 584], "march": 23, "mark": [559, 567], "marker": [141, 145, 167, 180, 559, 572, 577], "markup": [41, 584], "mask": 122, "mason": [11, 12, 16, 17, 23], "massag": 20, "match": [10, 29, 39, 46, 47, 53, 85, 94, 105, 106, 107, 108, 132, 133, 134, 164, 170, 172, 206, 207, 209, 212, 237, 247, 249, 264, 266, 520, 559, 565, 568, 575, 580, 587, 590, 592], "materi": 582, "matplotlib": [3, 4, 9, 49, 592], "matter": [559, 570, 585], "matthew": [559, 567], "max": [20, 37, 214, 251, 252, 515], "max_mag": 515, "maxbytestodisplai": [129, 559, 571], "maxdepth": 584, "maximum": [26, 27, 36, 37, 39, 55, 129, 139, 140, 174, 244, 486, 511, 515, 522, 559, 579, 580], "maxsplit": [486, 522], "mayb": 155, "mb": [5, 13, 19, 21, 162, 546, 581], "mct": [33, 36], "mdc": 591, "mean": [39, 47, 212, 486, 511, 522, 583, 585, 587, 590, 591], "meaningless": 271, "meant": [165, 203], "measur": [149, 152, 170], "mechan": [30, 34, 237, 244], "media": [2, 12, 20, 26, 27, 28, 43, 48, 70, 136, 194, 196, 585, 587], "mediastoragesopclassuid": [12, 587], "mediastoragesopinstanceuid": 12, "medic": [20, 41, 45, 47, 587], "meet": [10, 34, 141, 244, 559, 565], "megabyt": 590, "mem": [5, 13, 19, 21, 581], "member": [43, 515], "memori": [6, 16, 21, 30, 162, 163, 164, 180, 209, 219, 247, 249, 256, 264, 266, 559, 562, 570, 571, 572, 580, 581, 587], "memory_dataset": [14, 21, 581], "memoryview": [156, 158, 159, 236, 237, 243], "mention": [47, 585], "merg": [583, 584], "messag": [24, 26, 27, 28, 95, 274, 559, 562, 571, 579, 580, 583, 585, 587], "met": [30, 34, 166, 206, 207, 208, 209, 210, 211, 212, 546, 559, 570], "meta": [2, 8, 12, 20, 26, 27, 28, 43, 48, 55, 101, 132, 133, 134, 136, 162, 165, 183, 196, 247, 249, 264, 266, 559, 562, 565, 568, 574, 585], "metadata": [559, 577], "metadata_process": [19, 581], "meterset": [26, 27, 28], "method": [17, 23, 29, 30, 34, 36, 37, 39, 43, 46, 47, 48, 50, 51, 52, 54, 98, 101, 129, 131, 132, 133, 134, 135, 139, 140, 142, 143, 144, 148, 152, 153, 156, 158, 159, 162, 170, 171, 172, 173, 183, 205, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 270, 271, 486, 513, 515, 516, 517, 518, 519, 520, 521, 522, 559, 562, 565, 568, 570, 577, 579, 580, 585, 586, 587, 590, 591], "micro": 12, "microscopi": 590, "microsecond": [517, 521], "microvolt": 592, "mid": [20, 26, 28, 43, 45], "middl": 520, "middle_nam": 520, "middle_name_ideograph": 520, "middle_name_phonet": 520, "might": [38, 48, 244, 592], "mike": [559, 563], "millisecond": [517, 521], "min": [10, 37, 214, 251, 252, 515, 587], "min_mag": 515, "mind": [37, 38], "minim": [26, 28, 30, 183, 196, 237, 247, 249, 264, 266, 515, 559, 580], "minimum": [30, 34, 36, 37, 38, 132, 133, 134, 196, 515], "minor": 587, "minut": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 517, 521], "misc": [549, 559, 568], "miscellan": 549, "mismatch": 590, "miss": [9, 34, 107, 132, 133, 134, 136, 162, 167, 181, 183, 196, 206, 209, 211, 212, 213, 237, 244, 250, 559, 567, 568, 571, 572, 578, 580, 583, 585, 587, 589], "missing_depend": [237, 244], "mistak": 77, "mit": [2, 8, 9, 11, 12, 16, 17, 20, 22, 45, 559, 561, 562], "mitig": [559, 580], "mitra": [559, 578], "mix": [559, 571], "mixedmodality3dcammodel": 591, "mm": [20, 23, 513, 517, 521], "mmap": [559, 580], "mmm": [517, 521], "mobil": 20, "mod": 20, "modal": [2, 8, 9, 10, 20, 26, 28, 43, 49, 214, 216, 217, 251, 252, 254, 255, 559, 572, 587, 591], "modalitytoread": 591, "mode": [9, 20, 26, 28, 33, 37, 84, 87, 88, 133, 156, 158, 159, 247, 249, 264, 266, 515, 559, 572, 583, 589], "model": [2, 8, 20, 24, 26, 43, 55, 129, 132, 133, 134, 586, 592], "modern": [559, 566], "modif": [133, 583, 585, 587], "modifi": [6, 15, 30, 34, 42, 45, 52, 53, 55, 107, 132, 133, 134, 172, 559, 572, 575, 580, 588], "modul": [10, 25, 26, 30, 34, 36, 37, 38, 44, 50, 51, 53, 54, 70, 86, 95, 98, 132, 133, 134, 198, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 237, 244, 247, 249, 250, 251, 252, 253, 254, 255, 258, 260, 263, 264, 266, 267, 268, 486, 512, 522, 546, 547, 548, 549, 559, 560, 566, 567, 570, 575, 577, 578, 580, 585, 587, 590, 592], "modulenotfounderror": [237, 244], "mondai": [513, 517], "monochrome1": [10, 36, 37, 38, 39, 209, 211, 587], "monochrome2": [2, 8, 20, 36, 37, 38, 39, 209, 211, 587], "monospac": 0, "month": 517, "more": [0, 24, 26, 27, 32, 34, 36, 37, 39, 41, 43, 44, 45, 46, 47, 48, 52, 53, 54, 100, 129, 132, 133, 134, 139, 141, 142, 144, 145, 146, 149, 163, 166, 172, 175, 180, 183, 184, 198, 236, 237, 244, 247, 249, 264, 266, 268, 486, 515, 520, 522, 523, 559, 560, 561, 562, 564, 565, 572, 580, 583, 584, 585, 586, 587, 589, 590, 592], "morenc": [559, 566], "most": [39, 43, 44, 47, 51, 55, 86, 237, 247, 249, 264, 266, 271, 518, 559, 562, 565, 566, 585, 587, 590, 591], "mostli": [43, 131], "move": [0, 94, 100, 171, 172, 559, 565, 566, 580, 584, 587], "mpeg": [402, 559, 575], "mpeg2mphlf": [559, 580], "mpeg2mpmlf": [559, 580], "mpeg4hp41bdf": [559, 580], "mpeg4hp41f": [559, 580], "mpeg4hp422df": [559, 580], "mpeg4hp423df": [559, 580], "mpeg4hp42stereof": [559, 580], "mplx": 3, "mplx_label": 3, "mr": [2, 8, 10, 17, 20, 70, 520, 587], "mr1": [2, 8, 20], "mr_small": [53, 70], "mra": [10, 587], "mrg": [583, 584], "mri": [1, 5, 6, 53, 581], "mrt50h1": [2, 8, 20], "msb": 212, "msec": 20, "msg": [86, 585], "msh": 591, "much": [37, 43, 523, 559, 562, 565, 566, 574], "multi": [34, 39, 47, 53, 61, 83, 129, 132, 133, 134, 139, 142, 144, 145, 146, 147, 148, 149, 172, 205, 206, 236, 237, 244, 247, 249, 264, 266, 268, 538, 549, 559, 568, 570, 572, 574, 585, 592], "multi_str": [61, 71], "multifram": [559, 575], "multipl": [4, 30, 32, 34, 36, 39, 43, 48, 52, 53, 79, 110, 112, 113, 123, 129, 132, 133, 134, 142, 144, 145, 147, 148, 149, 215, 216, 217, 219, 236, 237, 243, 244, 248, 253, 254, 255, 256, 265, 270, 515, 520, 539, 559, 572, 578, 580, 585], "multiplex": [3, 54, 132, 133, 134, 546, 559, 575, 592], "multiplex_1": 54, "multiplex_2": 54, "multiplex_arrai": [54, 132, 133, 134, 546, 559, 575, 592], "multiplexgrouplabel": [3, 592], "multipli": 515, "multiv": [61, 549, 585], "multivalu": [32, 61, 83, 201, 202, 526, 527, 528, 529, 530, 533, 541, 544, 545, 559, 565], "must": [25, 26, 30, 34, 36, 37, 38, 39, 43, 44, 46, 52, 53, 86, 89, 132, 133, 134, 135, 139, 140, 149, 162, 170, 172, 175, 177, 179, 183, 205, 206, 213, 216, 217, 248, 250, 254, 255, 265, 271, 486, 515, 518, 522, 524, 542, 559, 577, 585, 586, 587, 590, 592], "mutabl": 132, "mutablemap": [132, 133, 134], "mutablesequ": [32, 77, 130, 132, 133, 134, 160, 163, 168, 169, 525, 526, 527, 528, 529, 530, 533, 535, 536, 539, 541, 543, 544, 545], "my": [10, 48, 132, 133, 134, 172, 586], "my_decod": 30, "my_decoder_func": 30, "my_encod": 34, "my_encoder_func": 34, "my_inst": 170, "my_json_dump": [132, 133, 134], "my_packag": [30, 34], "my_record": 170, "my_waveform": 592, "myprint": [8, 559, 560], "myself": [559, 567], "n": [2, 8, 11, 14, 20, 26, 28, 196, 206, 209, 211, 212, 214, 215, 216, 217, 251, 252, 253, 254, 255, 268, 486, 515, 522, 546, 587], "naiv": 517, "name": [0, 2, 6, 8, 9, 10, 11, 12, 14, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 41, 43, 44, 45, 46, 47, 48, 55, 107, 110, 112, 119, 120, 123, 124, 125, 129, 132, 133, 134, 136, 156, 158, 159, 162, 196, 213, 236, 237, 243, 244, 245, 246, 247, 249, 250, 264, 266, 268, 486, 513, 515, 517, 520, 522, 559, 560, 561, 562, 565, 568, 569, 570, 575, 577, 578, 579, 580, 581, 583, 584, 585, 587, 590, 591, 592], "name_prefix": 520, "name_prefix_ideograph": 520, "name_prefix_phonet": 520, "name_suffix": 520, "name_suffix_ideograph": 520, "name_suffix_phonet": 520, "namedtemporaryfil": [12, 17], "nan": [515, 516, 519, 523], "nanz": [559, 562], "nativ": [29, 39, 46, 237, 244, 247, 249, 264, 266, 271, 489, 518, 553, 590], "natur": [45, 486, 515, 522], "navig": 584, "ncit": 591, "ndarrai": [29, 37, 41, 43, 47, 52, 53, 54, 81, 83, 98, 104, 132, 133, 134, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 236, 237, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 264, 265, 266, 268, 269, 528, 530, 546, 559, 568, 572, 575, 580, 590, 592], "ndc": 591, "nearest": [173, 515], "necessari": [37, 43, 44, 51, 141, 146, 271, 515, 518, 520, 587, 592], "necessarili": [48, 52, 559, 580], "need": [25, 26, 27, 30, 34, 37, 38, 39, 41, 43, 44, 46, 47, 48, 50, 54, 55, 78, 80, 94, 98, 132, 133, 134, 160, 166, 237, 540, 543, 559, 562, 577, 580, 583, 584, 585, 586, 587, 589, 590, 592], "needs_to_convert_to_rgb": [98, 207, 208, 209, 210, 211, 212], "neg": [271, 515, 518], "negat": 515, "neither": [85, 86, 172, 214, 216, 251, 252, 254, 515], "nema": 41, "ness": [559, 562], "nest": [26, 28, 43, 132, 559, 566, 579], "network": [559, 575], "neu": 591, "neutral": 41, "never": [32, 82, 132, 133, 134, 486, 515, 522, 583], "new": [10, 16, 17, 18, 26, 27, 38, 41, 42, 45, 49, 70, 109, 110, 111, 112, 129, 132, 133, 134, 156, 158, 159, 171, 172, 173, 205, 236, 237, 243, 244, 486, 513, 517, 520, 521, 522, 560, 561, 562, 565, 566, 567, 570, 571, 572, 574, 575, 577, 580, 582, 585, 588, 592], "new_dict_item": [16, 109, 111], "new_entries_dict": [16, 109, 111], "new_fileset": 10, "newdefineduid": 583, "newer": 48, "newli": [44, 132, 133, 134, 559, 574], "newlin": 20, "next": [44, 48, 97, 132, 133, 134, 163, 172, 173, 559, 562, 575, 587, 592], "next_indent_str": 8, "next_minu": 515, "next_plu": 515, "next_toward": 515, "nfound": 10, "nice": [205, 237, 244, 583], "nikitathespid": [559, 562], "nil": [559, 567], "no_meta": 585, "no_meta_path": 585, "node": [171, 172, 173, 585], "nois": [33, 36, 132, 133, 134], "non": [24, 26, 32, 43, 44, 109, 110, 111, 112, 127, 129, 130, 132, 133, 134, 136, 145, 170, 172, 183, 196, 212, 233, 234, 247, 249, 264, 266, 268, 277, 486, 515, 519, 522, 523, 525, 528, 530, 536, 538, 559, 563, 564, 568, 569, 570, 571, 572, 575, 579, 585], "none": [0, 2, 8, 10, 14, 20, 32, 33, 41, 77, 79, 82, 83, 92, 95, 97, 98, 99, 107, 109, 110, 111, 112, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 142, 144, 145, 147, 148, 154, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 213, 236, 237, 243, 244, 247, 249, 250, 263, 264, 266, 270, 272, 274, 486, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 543, 544, 545, 546, 559, 568, 571, 572, 575, 583, 585, 589, 591], "nor": [85, 86], "norigin": 10, "normal": [9, 16, 20, 25, 26, 27, 43, 70, 515, 559, 580], "not_dicom": 585, "notat": [26, 27, 28, 486, 515, 522, 523, 585], "note": [10, 18, 24, 26, 27, 28, 29, 41, 44, 46, 47, 48, 51, 83, 94, 110, 112, 132, 133, 134, 135, 141, 145, 150, 151, 162, 166, 167, 179, 189, 205, 214, 216, 217, 251, 252, 254, 255, 486, 513, 515, 516, 517, 519, 520, 521, 522, 523, 562, 584, 585, 586, 590, 591, 592], "notebook": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "noth": [36, 37, 38, 587], "notic": [585, 587], "notimplementederror": [98, 132, 133, 134, 208, 209, 210, 212, 267], "notimplementerror": [559, 561], "noun": 41, "noutput": 16, "novemb": 23, "now": [12, 20, 129, 132, 133, 134, 511, 517, 559, 561, 562, 565, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 583, 584, 585, 587, 592], "np": [3, 4, 37, 206, 209, 211, 212, 213, 214, 215, 216, 217, 236, 237, 243, 244, 247, 249, 250, 251, 252, 253, 254, 255, 264, 266, 267, 268, 546, 590, 592], "nr_channel": 3, "nr_fragment": [141, 151], "nr_frame": [145, 147], "nr_retri": [156, 158, 159], "nr_sampl": 3, "nsew": 0, "nucleu": [2, 8, 20], "null": [141, 206, 236, 243, 248, 260, 265, 536], "number": [2, 8, 11, 18, 20, 24, 26, 27, 28, 29, 30, 34, 39, 41, 43, 45, 48, 52, 110, 112, 129, 131, 132, 133, 134, 135, 139, 141, 142, 144, 145, 146, 147, 148, 151, 153, 156, 158, 159, 161, 162, 163, 172, 173, 174, 177, 180, 195, 197, 198, 204, 205, 206, 236, 237, 243, 244, 259, 260, 268, 270, 271, 272, 486, 511, 513, 515, 516, 517, 518, 519, 521, 522, 523, 559, 560, 564, 567, 571, 577, 578, 580, 584, 585, 587, 589, 591, 592], "number_class": 515, "number_of_fram": [29, 30, 34, 142, 144, 148, 218, 236, 243, 244, 258], "numberofbeam": [24, 26], "numberofblock": 18, "numberofbrachyapplicationsetup": [24, 26], "numberoffractionsplan": [24, 26], "numberoffram": [209, 211, 212, 260, 261, 263, 268], "numberofframesinoverlai": 206, "numberofwaveformchannel": [3, 54, 546, 592], "numberofwaveformsampl": [3, 546, 592], "numer": [43, 172, 174, 271, 486, 515, 518, 522, 539, 559, 563, 572, 577, 579], "numpi": [2, 3, 4, 23, 29, 30, 34, 36, 37, 38, 41, 43, 46, 47, 52, 53, 54, 83, 98, 103, 104, 132, 133, 134, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 236, 237, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 264, 265, 266, 267, 268, 269, 528, 530, 546, 559, 560, 568, 570, 571, 572, 574, 578, 580, 583, 589, 590, 592], "numpy_handl": [98, 549, 559, 577], "numpypi": [559, 570], "o": [20, 22, 72, 74, 247, 249, 264, 266], "ob": [2, 12, 20, 26, 27, 28, 32, 43, 46, 48, 141, 188, 196, 531, 559, 563, 578, 585, 586], "obj": [132, 133, 134], "object": [0, 10, 14, 30, 34, 41, 43, 45, 48, 51, 86, 100, 104, 129, 132, 133, 134, 135, 142, 143, 144, 148, 152, 153, 156, 158, 159, 162, 163, 164, 166, 167, 170, 172, 183, 205, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 247, 249, 262, 264, 266, 270, 271, 273, 517, 518, 520, 549, 559, 561, 562, 571, 572, 574, 577, 578, 580, 585, 587, 592], "observ": 591, "observationsubjectclass": 591, "observertyp": 591, "obvious": 592, "obxxxx1a": 70, "occasion": [584, 585, 587], "occur": [87, 88, 515, 559, 572, 583, 587], "occurr": [131, 205, 270, 486, 522], "octob": 23, "od": [32, 183, 559, 568, 569, 577], "odd": [43, 132, 133, 134, 135, 206, 236, 237, 243, 260, 271, 559, 569, 578, 580, 585], "off": [20, 26, 27, 44, 95, 163, 559, 566, 574, 584], "offer": [26, 27, 53, 132, 133, 134], "offic": 520, "offici": [43, 113, 114, 115, 116, 117, 118, 119, 126, 127, 128, 129, 486, 559, 565, 566, 585, 592], "offlin": 589, "offset": [2, 8, 20, 46, 48, 52, 129, 132, 133, 134, 135, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 156, 158, 159, 167, 168, 169, 172, 178, 179, 236, 237, 243, 534, 542, 559, 572, 575, 578, 580, 587, 590], "offsetofreferencedlowerleveldirectoryent": 170, "offsetofthenextdirectoryrecord": 170, "often": [51, 53, 110, 586], "ok": [37, 85, 86, 172, 583], "ol": [32, 183, 559, 568, 569, 577], "old": [486, 522, 559, 560, 561, 565, 568, 574], "older": [515, 589], "onc": [45, 46, 48, 83, 110, 112, 583, 584, 590, 591], "one": [10, 24, 26, 30, 34, 36, 39, 43, 45, 47, 53, 54, 55, 84, 87, 88, 109, 111, 129, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 149, 164, 165, 170, 172, 173, 174, 180, 184, 198, 213, 219, 237, 243, 244, 247, 249, 250, 256, 264, 266, 486, 515, 516, 522, 559, 565, 568, 578, 580, 583, 585, 587, 589, 590, 591, 592], "ones": [271, 486, 518, 522, 582, 585, 587], "onli": [10, 24, 26, 27, 28, 29, 30, 34, 36, 37, 39, 41, 43, 44, 45, 47, 52, 53, 55, 57, 81, 98, 110, 112, 113, 114, 115, 117, 118, 119, 120, 128, 132, 133, 134, 136, 145, 149, 162, 165, 172, 174, 181, 182, 183, 196, 209, 224, 225, 228, 236, 237, 239, 243, 244, 247, 248, 249, 257, 264, 265, 266, 267, 269, 272, 486, 519, 522, 524, 559, 565, 567, 568, 569, 570, 571, 572, 574, 575, 577, 580, 583, 585, 586, 587, 590], "onlin": 23, "open": [9, 23, 25, 26, 157, 163, 247, 249, 264, 266, 559, 562, 583, 584, 585], "openjpeg": [36, 46, 47, 589], "oper": [2, 8, 20, 36, 37, 38, 43, 44, 48, 49, 86, 132, 133, 134, 156, 158, 159, 214, 216, 217, 236, 237, 247, 249, 251, 252, 254, 255, 264, 266, 486, 515, 522, 559, 562, 570, 572, 575, 585, 589], "operand": [515, 559, 577], "opt": 592, "optim": [132, 133, 134], "optimis": [559, 577], "optimist": [559, 575], "option": [2, 8, 17, 20, 25, 27, 28, 30, 31, 32, 34, 35, 44, 47, 51, 82, 83, 95, 105, 106, 107, 108, 110, 112, 129, 130, 132, 133, 134, 136, 139, 141, 142, 143, 144, 145, 147, 148, 151, 152, 153, 156, 158, 159, 160, 162, 163, 166, 172, 173, 174, 180, 183, 195, 205, 206, 209, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 247, 248, 249, 250, 253, 254, 255, 256, 257, 260, 264, 265, 266, 267, 268, 269, 270, 272, 486, 511, 512, 517, 520, 521, 522, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 538, 540, 541, 542, 543, 544, 545, 546, 549, 559, 561, 562, 568, 572, 575, 577, 580, 587, 592], "order": [4, 29, 30, 33, 34, 36, 37, 39, 53, 98, 132, 133, 134, 135, 145, 173, 177, 181, 182, 183, 195, 212, 234, 244, 248, 265, 271, 486, 515, 518, 559, 560, 567, 570, 572, 583, 592], "ordereddict": [559, 567], "ordin": [486, 513, 517, 522], "org": [41, 51, 586], "organ": [26, 27, 520], "organ_at_risk": [26, 27], "orient": [2, 8, 20], "origin": [2, 10, 20, 24, 26, 28, 29, 39, 46, 47, 48, 52, 55, 90, 132, 133, 134, 164, 172, 209, 236, 237, 271, 486, 511, 515, 516, 518, 519, 520, 522, 559, 580, 583, 584, 585, 590, 592], "original_character_set": [132, 133, 134, 559, 580], "original_encod": [132, 133, 134, 183, 195, 559, 580], "original_str": [520, 559, 570], "orphan": 172, "orthogon": 4, "oserror": 164, "other": [2, 8, 17, 20, 24, 30, 32, 34, 39, 44, 46, 47, 48, 51, 52, 53, 55, 166, 183, 188, 189, 196, 248, 265, 486, 515, 520, 522, 580, 583, 585, 587, 590], "othermod": 591, "otherpatientid": [17, 559, 561], "otherpatientidssequ": [17, 585], "otherwis": [24, 26, 30, 34, 39, 43, 89, 98, 116, 117, 121, 122, 126, 127, 128, 129, 132, 133, 134, 139, 142, 143, 144, 148, 152, 153, 160, 172, 174, 175, 178, 179, 183, 203, 215, 216, 217, 236, 237, 243, 244, 247, 248, 249, 253, 254, 255, 257, 264, 265, 266, 267, 269, 486, 512, 515, 520, 522, 524, 525, 526, 527, 528, 529, 530, 534, 535, 536, 538, 539, 541, 542], "our": [37, 583, 584, 585, 587, 592], "out": [0, 51, 53, 55, 140, 172, 205, 248, 265, 270, 515, 516, 559, 575, 582, 583, 584, 585, 587, 592], "outfil": [24, 26, 585], "outlin": 48, "output": [13, 16, 20, 24, 26, 27, 41, 47, 53, 55, 214, 237, 247, 249, 251, 252, 259, 264, 266, 513, 517, 521, 559, 572, 574, 581, 583, 584, 585, 587], "ov": [32, 183, 559, 572, 577], "over": [10, 20, 26, 27, 50, 52, 559, 580, 585, 587], "overflow": 20, "overflowerror": [271, 515, 516, 518, 519], "overlai": [49, 53, 70, 132, 133, 134, 257, 269, 549, 559, 572, 575, 580, 585], "overlap": [486, 522], "overlay_arrai": [49, 132, 133, 134, 559, 572], "overlay_data_handl": [559, 575, 580], "overlaybitposit": 206, "overlaybitsalloc": 206, "overlaycolumn": 206, "overlayrow": 206, "overrang": 20, "overrid": [29, 134, 170, 218, 258, 514, 559, 570, 587], "overview": [45, 587], "overwrit": [10, 545], "ow": [2, 20, 26, 28, 32, 52, 54, 183, 189, 237, 532, 559, 563, 574, 579, 585], "own": [8, 24, 25, 26, 27, 43, 45, 48, 55, 132, 133, 134, 172, 183, 559, 569, 579, 585, 587, 590, 592], "p": [4, 10, 22, 24, 26, 57, 520, 559, 565, 587], "p0xxxxxx": 172, "p14": 245, "p1xxxxxx": 172, "p25": [2, 8, 20], "p2xxxxxx": 172, "p98": 22, "pack": [22, 39, 52, 237, 247, 248, 249, 257, 264, 265, 266, 269, 559, 569, 570, 575, 578], "pack_bit": [52, 549, 559, 570, 575, 580], "packag": [25, 26, 27, 45, 47, 49, 50, 51, 206, 207, 208, 209, 210, 211, 212, 237, 244, 546, 559, 560, 563, 568, 575, 577, 587, 589], "packbit": 38, "packed_byt": 52, "pad": [2, 3, 8, 20, 26, 28, 139, 141, 146, 201, 206, 236, 243, 248, 260, 265, 486, 515, 522, 559, 569, 571, 572, 575, 577, 578, 585], "padraig": [559, 566, 567], "page": [37, 559, 568, 571, 582, 583, 584, 589], "pair": [25, 26, 134, 172, 218, 258, 271, 515, 516, 518, 519], "palett": [36, 37, 38, 39, 49, 106, 170, 172, 213, 250, 559, 572, 574], "palette_color": [53, 70], "panchal": [559, 562], "papadopoulo": [559, 567], "paramet": [0, 10, 20, 24, 26, 41, 53, 54, 55, 77, 78, 79, 80, 82, 83, 95, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 195, 196, 198, 199, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 236, 237, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 486, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 559, 565, 567, 569, 575, 577, 578, 585, 587, 590], "parametr": [53, 583], "pare": 203, "parent": [0, 26, 27, 135, 156, 158, 159, 172, 173, 559, 569, 580, 587], "parent_dataset": [559, 580], "parent_encod": [163, 195], "parent_seq": [559, 580], "pars": [162, 166, 262, 517, 549, 559, 560, 572, 574, 575, 580], "parse_basic_offset": [149, 559, 580], "parse_frag": [559, 580], "parser": [25, 26], "part": [10, 27, 28, 32, 36, 37, 38, 39, 41, 44, 48, 50, 53, 54, 112, 129, 132, 133, 134, 135, 139, 141, 144, 145, 146, 147, 148, 149, 151, 152, 162, 175, 181, 182, 183, 196, 200, 206, 209, 214, 215, 216, 217, 219, 248, 251, 252, 253, 254, 255, 256, 257, 265, 268, 269, 271, 486, 511, 516, 518, 519, 520, 522, 559, 562, 565, 577, 583, 584, 585, 586, 587, 590, 592], "part05": [41, 584], "parti": [49, 520, 589], "partial": [559, 562], "particular": [26, 27, 43, 46, 52, 53, 90, 165, 559, 562, 572, 585, 591], "particularli": [53, 55], "partit": [486, 522], "pass": [36, 37, 41, 43, 46, 52, 53, 93, 105, 106, 108, 134, 139, 140, 205, 559, 562, 583, 584, 587, 590], "past": [39, 146, 167, 196], "pat": 43, "pat_nam": 9, "patch": [559, 562, 582, 583], "path": [0, 9, 10, 11, 12, 17, 24, 26, 27, 28, 30, 34, 41, 43, 45, 47, 50, 53, 105, 106, 107, 108, 132, 133, 134, 162, 171, 172, 175, 183, 203, 237, 244, 247, 249, 264, 266, 559, 575, 580, 584, 587], "pathlib": [0, 10, 12, 175, 587], "pathlik": [132, 133, 134, 162, 164, 165, 172, 183, 247, 249, 264, 266, 559, 574], "patient": [2, 8, 9, 10, 12, 17, 20, 26, 27, 28, 45, 132, 133, 134, 170, 172, 520, 559, 561, 568, 578, 584, 585, 587], "patient_id": 10, "patient_nam": 520, "patient_name_ideograph": 520, "patient_name_phonet": 520, "patientbirthd": [17, 43], "patientid": [9, 10, 12, 14, 17, 26, 28, 43, 132, 170, 172, 585, 587], "patientnam": [9, 10, 12, 14, 26, 28, 43, 45, 70, 85, 86, 129, 132, 162, 170, 172, 272, 559, 571, 584, 585, 587], "patientposit": 45, "patientsbirthd": [559, 561], "patientsetupsequ": [43, 45], "patientsex": [43, 132, 133, 134], "patientsnam": [85, 86], "pattern": [20, 26, 28, 105, 106, 108, 559, 580], "paxxxxxx": 172, "pc": 587, "peak": [33, 36, 132, 133, 134], "penalti": 514, "peopl": 587, "pep": [559, 561, 564, 568], "per": [2, 8, 20, 29, 30, 34, 36, 37, 38, 39, 43, 53, 57, 132, 133, 134, 139, 140, 145, 175, 209, 236, 243, 244, 268, 559, 565, 572, 575, 585, 590], "per_fram": [219, 256, 559, 577], "perform": [2, 30, 34, 36, 37, 39, 44, 46, 84, 113, 114, 115, 117, 118, 128, 132, 133, 134, 136, 172, 211, 237, 244, 247, 249, 264, 266, 515, 532, 559, 566, 569, 570, 589, 590, 592], "perman": 110, "persist": 164, "person": [6, 17, 21, 32, 41, 520, 559, 570, 577, 581, 591], "person_nam": 22, "person_names_callback": 17, "personnam": [22, 32, 61, 129, 533, 559, 560, 571, 574, 575, 577, 580], "personname3": [559, 566, 571, 574], "personnameunicod": [559, 574, 580], "pet": [53, 213, 250], "pet_20_step": [213, 250], "peter": [10, 587], "phase": 20, "phonet": 520, "photoimag": 51, "photometr": [2, 8, 20, 29, 38, 39, 46, 47, 53, 132, 133, 134, 207, 208, 209, 210, 211, 212, 219, 236, 237, 243, 247, 249, 256, 259, 264, 266, 559, 572, 590], "photometric_interpret": [29, 30, 34, 218, 236, 243, 244, 258], "photometricinterpret": [10, 36, 37, 38, 46, 209, 211, 260, 261, 587, 590], "photon": [26, 28], "physic": [53, 587], "physician": [2, 8, 20], "pi": 592, "pickl": [559, 568, 572, 577], "pierr": [559, 562], "pil": [49, 559, 562, 570], "pillow": [30, 34, 47, 51, 132, 133, 134, 210, 227, 228, 229, 230, 559, 568, 570, 572, 574, 577, 580, 583], "pillow_handl": [98, 583], "pilsupportedcompressedpixeltransfersyntax": [559, 575, 580], "pip": [26, 27, 583, 584, 590, 592], "pipe": [26, 27], "pitch": 20, "pixel": [2, 4, 6, 7, 8, 13, 20, 23, 24, 26, 28, 33, 40, 41, 42, 43, 45, 49, 51, 52, 55, 68, 81, 98, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 162, 166, 206, 207, 208, 209, 210, 211, 212, 547, 549, 559, 560, 562, 563, 568, 569, 570, 571, 572, 574, 575, 577, 578, 580, 581, 583, 585, 588, 589], "pixel_arrai": [2, 4, 9, 29, 37, 38, 41, 43, 46, 47, 49, 51, 132, 133, 134, 549, 559, 561, 572, 580], "pixel_byt": 43, "pixel_data_handl": [132, 133, 134, 547, 549, 559, 570, 577, 580], "pixel_dtyp": [236, 559, 580], "pixel_keyword": [29, 30, 236, 243], "pixel_represent": [29, 30, 34, 218, 236, 243, 244, 258], "pixelarrai": [559, 560, 561], "pixeldata": [2, 29, 30, 36, 37, 38, 43, 46, 53, 55, 137, 139, 140, 236, 243, 261, 559, 571, 572, 590], "pixeldataarrai": [559, 560], "pixelrepresent": [36, 37, 38, 209, 211, 212, 261, 267, 559, 571], "pixels1": 20, "pixelspac": [4, 9], "place": [36, 37, 38, 39, 46, 47, 132, 133, 134, 205, 270, 515, 559, 568, 585, 587], "placehold": [132, 133, 134], "plain": [559, 562], "plan": [26, 27, 28, 43, 45, 70, 170], "plan1": [26, 28], "plan_d": 18, "planar": [29, 36, 39, 53, 132, 133, 134, 236, 243, 268, 559, 570], "planar_configur": [29, 30, 218, 236, 243, 258], "planarconfigur": [209, 211, 212, 261, 268, 559, 568], "plane": [4, 20, 30, 33, 37, 39, 53, 206, 236, 237, 244, 247, 249, 264, 266, 268], "pleas": [0, 14, 25, 26, 28, 43, 45, 132, 133, 134, 137, 138, 145, 146, 147, 149, 154, 183, 237, 247, 249, 264, 266, 559, 566, 577, 583, 584], "plot": [1, 5, 6, 7, 13, 559, 571, 581, 592], "plot_add_dict_entri": [16, 19, 581], "plot_anonym": [17, 19, 581], "plot_dicom_differ": [20, 21, 581], "plot_downsize_imag": [2, 5, 581], "plot_printing_dataset": [8, 13, 581], "plot_read_dicom": [9, 13, 581], "plot_read_fileset": [10, 13, 581], "plot_read_rtplan": [11, 13, 581], "plot_sequ": [18, 19, 581], "plot_waveform": [3, 5, 581], "plot_write_dicom": [12, 13, 581], "plt": [3, 4, 9, 51, 592], "plugin": [31, 35, 46, 47, 132, 133, 134, 211, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 247, 249, 264, 266, 559, 577, 578, 582, 589, 590], "plugin_label": [30, 34], "plural": 10, "pn": [2, 12, 17, 20, 32, 43, 66, 129, 132, 133, 134, 520, 533, 559, 572, 577, 584, 585, 587], "point": [17, 24, 25, 26, 27, 28, 32, 51, 55, 180, 209, 267, 486, 515, 516, 519, 522, 523, 559, 561, 566, 577, 583, 585, 591], "pop": [132, 133, 134, 205, 270, 559, 571], "popitem": [132, 133, 134], "popul": [0, 12, 55, 271, 518, 591], "popular": 589, "portion": 43, "posit": [2, 8, 20, 24, 26, 27, 28, 45, 142, 143, 144, 146, 148, 149, 152, 153, 155, 156, 158, 159, 167, 177, 178, 179, 196, 205, 236, 237, 270, 271, 486, 515, 516, 518, 519, 522], "posix": [513, 517], "possibl": [17, 30, 37, 39, 43, 44, 53, 94, 129, 132, 133, 134, 148, 156, 158, 159, 170, 181, 182, 183, 212, 257, 269, 486, 522, 523, 559, 568, 570, 571, 572, 577, 580, 586, 587, 591], "possibli": [53, 132, 133, 134, 237], "post": [20, 559, 574], "posterior": 20, "potenti": 55, "ppscan": 20, "pq": [486, 522], "pr": [559, 578, 583, 584], "practic": [37, 49, 70, 172], "pre": [26, 28, 43, 45, 559, 580, 583], "preambl": [132, 133, 134, 162, 167, 183, 196, 203, 559, 568, 585], "preced": [48, 559, 580], "precis": [81, 89, 262, 515, 516, 520, 523, 559, 577], "precondit": 49, "predefin": 44, "predict": [145, 234], "preexist": 50, "prefer": 585, "prefer_lut": [216, 254, 559, 575], "prefix": [24, 26, 27, 28, 41, 155, 162, 167, 174, 183, 196, 437, 486, 511, 520, 522, 559, 571, 580, 583, 584, 585, 591], "preliminari": [559, 560, 563], "prepar": [559, 566], "prepend": 133, "prerequisit": [590, 592], "prescrib": 20, "prescript": [26, 27], "presenc": [146, 213, 250, 585], "present": [16, 26, 28, 39, 52, 80, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 131, 132, 133, 134, 136, 145, 146, 147, 149, 155, 162, 167, 170, 172, 173, 183, 196, 205, 213, 214, 215, 216, 217, 218, 244, 250, 251, 252, 253, 254, 255, 258, 270, 486, 522, 559, 561, 569, 571, 572, 585, 592], "preserv": [132, 133, 134, 183, 559, 567, 574], "pretti": [173, 583], "prettier": 43, "prettifi": 173, "prevent": [559, 572], "previou": [55, 173, 174, 559, 565, 568, 574, 575, 580], "previous": [39, 164, 559, 570, 574, 577], "primari": [20, 26, 28, 48, 585], "primarili": [45, 559, 563], "primer": 584, "print": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 36, 37, 43, 45, 52, 110, 112, 132, 133, 134, 247, 264, 559, 561, 572, 581, 584, 585, 587, 592], "printabl": [486, 522], "prior": [39, 46, 146, 183, 237, 244, 559, 580, 590], "prioriti": [183, 195, 559, 580], "privat": [6, 15, 17, 19, 20, 24, 26, 27, 28, 39, 43, 49, 55, 109, 110, 111, 112, 119, 120, 123, 124, 125, 127, 129, 130, 132, 133, 134, 135, 170, 171, 172, 196, 271, 432, 486, 512, 549, 559, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 574, 575, 577, 578, 579, 580, 581, 585, 587], "private_block": [16, 48, 132, 133, 134], "private_cr": [16, 48, 111, 112, 120, 123, 124, 125, 132, 133, 134, 135, 271], "private_creator_el": 135, "private_elem": 585, "privateblock": [48, 132, 133, 134, 549], "privaterecorduid": 172, "privileg": 589, "probabl": [23, 55, 587], "problem": [559, 577, 585], "proc": 20, "procedur": 587, "process": [20, 25, 26, 30, 34, 36, 37, 39, 47, 132, 133, 134, 145, 219, 229, 230, 233, 234, 236, 237, 243, 247, 249, 264, 266, 486, 514, 552, 559, 562, 574, 577, 579, 580, 583, 584, 592], "produc": [12, 24, 26, 41, 53, 55, 271, 515, 518, 559, 567, 572, 577, 580], "product": [20, 515], "program": [26, 27, 43, 45, 51, 559, 560, 565], "progress": [36, 559, 579, 584], "project": [9, 10, 20, 98, 582, 583, 584, 589], "projector": 20, "prolept": [513, 517], "promot": [559, 565], "prompt": 43, "prone": 45, "pronoun": 41, "proof": [49, 97], "propag": [559, 572], "proper": [41, 559, 562], "properli": 583, "properti": [10, 14, 30, 34, 43, 57, 129, 132, 133, 134, 156, 158, 159, 171, 172, 173, 236, 237, 243, 244, 271, 486, 520, 559, 560, 562, 565, 568, 569, 575, 580, 587], "protect": 44, "protocol": [170, 271, 518], "provid": [30, 34, 39, 42, 43, 48, 53, 98, 129, 132, 133, 134, 142, 144, 148, 206, 209, 211, 212, 237, 244, 546, 559, 566, 586, 589, 590, 591], "ps3": [22, 520], "psnr": [132, 133, 134], "pt000000": [10, 587], "pt000001": [10, 587], "pt000002": [10, 587], "pt000003": 10, "ptv": [26, 27], "ptxxxxxx": 172, "pubchem_cid": 591, "public": [39, 132, 133, 134, 183], "pull": [25, 26, 28, 582, 589], "puls": 20, "punctuat": [486, 522], "pure": 45, "purpos": [36, 37, 47, 590], "push": [583, 584], "put": 184, "px": 37, "py": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 43, 51, 55, 85, 86, 98, 559, 560, 563, 564, 565, 566, 567, 568, 576, 581, 583, 585, 587, 590], "py3": 589, "pydicom": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 25, 29, 30, 32, 34, 36, 37, 38, 40, 41, 47, 50, 52, 53, 54, 55, 61, 71, 547, 549, 560, 562, 563, 564, 565, 566, 567, 568, 569, 572, 574, 575, 577, 581, 583, 584, 585, 586, 587, 588, 591, 592], "pydicom_futur": [44, 559, 575], "pydicom_pil": 51, "pydicom_seri": [559, 563, 566, 567], "pydicom_subcommand": [25, 26], "pydicom_test": [10, 587], "pydicom_tkint": 51, "pyjpegl": [37, 46, 132, 133, 134, 208, 231, 232, 240, 241, 559, 580, 590], "pylibjpeg": [29, 38, 46, 47, 132, 133, 134, 211, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 242, 244, 559, 575, 577, 580, 590], "pylibjpeg_handl": 98, "pynetdicom": 45, "pypi": [559, 568, 570, 589], "pyplot": [3, 4, 9, 51, 592], "pyproject": [559, 579], "pysid": [559, 566], "pytest": [559, 579], "python": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 40, 41, 42, 43, 44, 45, 48, 49, 55, 77, 78, 80, 95, 132, 133, 134, 207, 208, 210, 486, 522, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 579, 580, 583, 584, 585, 586, 589, 590, 592], "python3": 587, "pythoncod": [24, 26], "q": [26, 27, 28, 583], "qt": [559, 566], "qualiti": [33, 36, 37, 132, 133, 134, 590], "quantiti": [53, 546, 592], "quantiz": 515, "queri": [10, 94, 172, 587], "question": [45, 582], "quickli": [165, 587], "quiet": [26, 27, 28, 515], "quinci": 520, "quit": [55, 559, 562, 583], "r": [20, 39, 129, 132, 133, 134, 486, 522, 586], "r1": 39, "r100": [559, 561], "r102": [559, 561], "r103": [559, 561], "r104": [559, 561], "r105": [559, 561], "r109": [559, 561], "r110": [559, 561], "r111": [559, 561], "r113": [559, 561], "r2": 39, "r45": [559, 560], "r46": [559, 560], "r50": [559, 560], "r51": [559, 560], "r55": [559, 560], "r64": [559, 560], "r65": [559, 560], "r67": [559, 560], "r68": [559, 560], "r69": [559, 560], "r70": [559, 560], "r72": [559, 560], "r73": [559, 560], "r78ba350a3eb8": [559, 566], "r91": [559, 561], "r95": [559, 561], "r96": [559, 561], "r97": [559, 561], "r98": [559, 561], "ra": 20, "radiotherapi": [45, 170], "radix": 515, "radlex": 591, "rai": [20, 26, 28, 585], "rais": [44, 57, 77, 78, 80, 82, 83, 85, 86, 98, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 130, 131, 132, 133, 134, 135, 136, 146, 149, 155, 156, 158, 159, 162, 164, 167, 172, 180, 181, 183, 196, 205, 206, 207, 208, 209, 210, 211, 212, 237, 244, 248, 257, 265, 267, 269, 270, 271, 274, 486, 511, 515, 516, 518, 519, 522, 523, 528, 530, 542, 549, 559, 563, 564, 569, 571, 572, 575, 577, 578, 580, 585, 587, 590], "raise_orphan": 172, "randbelow": [511, 559, 580], "random": [511, 559, 580], "rang": [20, 30, 34, 37, 39, 52, 94, 205, 214, 244, 247, 251, 252, 264, 270, 486, 515, 522, 559, 570, 572, 585], "rare": [559, 580], "rate": [26, 27], "rather": [24, 26, 27, 28, 52, 55, 129, 132, 133, 134, 172, 205, 218, 258, 515, 559, 560, 561, 568, 572, 574, 577, 580, 585], "ratio": [20, 33, 36, 37, 38, 132, 133, 134, 271, 515, 516, 518, 519], "ration": [271, 518], "raw": [29, 30, 34, 37, 43, 52, 53, 54, 130, 131, 132, 133, 134, 142, 144, 148, 154, 160, 164, 170, 237, 244, 247, 249, 264, 266, 546, 559, 565, 571, 574, 592], "raw_data_el": [130, 544], "raw_data_elem": 164, "rawdatael": [61, 92, 130, 132, 133, 134, 160, 164, 194, 544], "rawiobas": [158, 159], "raybaut": [559, 562], "rb": [133, 247, 249, 264, 266, 585], "rbg": [559, 577], "rd000000": 587, "re": [10, 16, 42, 52, 136, 436, 437, 582, 583, 584, 585, 587, 589, 590, 592], "reach": [166, 178, 180, 236], "reachabl": 584, "read": [0, 2, 6, 7, 8, 13, 14, 16, 17, 18, 20, 24, 26, 27, 28, 29, 42, 43, 44, 45, 48, 52, 53, 55, 57, 71, 77, 83, 90, 95, 107, 132, 133, 134, 137, 138, 142, 143, 144, 146, 148, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 176, 177, 179, 180, 203, 207, 209, 236, 237, 247, 249, 264, 266, 512, 518, 519, 549, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580, 581, 584, 586, 587, 588, 591], "read_byt": 14, "read_data_el": 160, "read_dataset": [14, 71, 166], "read_deferred_data_el": 71, "read_dicomdir": [559, 567], "read_encod": [132, 133, 134, 559, 580], "read_exact": [156, 158, 159], "read_fil": [559, 561, 562, 563, 568, 577, 580], "read_file_meta_info": [71, 133], "read_implicit_vr": [132, 133, 134, 559, 580], "read_item": [559, 580], "read_little_endian": [132, 133, 134, 559, 580], "read_onli": 209, "read_ow": [559, 560], "read_parti": [50, 71, 162, 203, 585], "read_preambl": [71, 203, 585], "read_sequ": 71, "read_sequence_item": 71, "read_siz": [177, 178, 179, 180], "read_tag": [156, 158, 159], "read_u": [156, 158, 159], "read_ul": [156, 158, 159], "read_undefined_length_valu": 71, "readabl": [133, 142, 143, 144, 148, 152, 153, 162, 559, 580], "readablebuff": [133, 142, 143, 144, 148, 152, 153, 156, 158, 159, 162], "reader": 41, "readfil": [559, 561], "readi": [583, 584], "reading_validation_mod": [44, 57, 77, 78, 80, 96, 130, 132, 133, 134, 559, 578], "readm": 10, "real": [271, 516, 518, 519, 583, 584, 592], "realli": [43, 559, 562, 571], "reason": [41, 584], "rebuild": 584, "recalcul": 587, "receiv": [20, 196], "recent": [86, 583, 584, 585, 587, 590], "recommend": [23, 25, 26, 30, 36, 37, 43, 44, 46, 94, 132, 133, 134, 139, 140, 172, 205, 248, 265, 270, 585, 587, 589, 590], "recompress": 590, "recon": 20, "reconstruct": [20, 36], "record": [10, 20, 170, 171, 172, 173, 559, 572, 578, 587], "record_gen": 587, "record_typ": [173, 587], "recordinuseflag": 170, "recordnod": [171, 172, 549], "recreat": [24, 26, 559, 567], "recurs": [0, 4, 48, 132, 133, 134, 559, 561, 563], "red": [36, 37, 38, 39, 213, 250, 559, 574, 583, 584], "reduc": [52, 53, 174, 219, 256, 559, 570, 575, 580, 587, 590], "ref": 20, "refactor": [559, 580], "refd_beam1": [24, 26], "refd_beam_sequ": [24, 26], "refer": [2, 8, 20, 26, 27, 39, 41, 43, 53, 94, 139, 141, 144, 145, 146, 147, 148, 149, 151, 152, 171, 206, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 248, 250, 251, 252, 253, 254, 255, 256, 257, 265, 268, 269, 511, 559, 562, 583, 587, 590, 592], "referenc": [24, 26, 27, 28, 41, 43, 165, 171, 172, 587], "referencedbeamsequ": [24, 26], "refus": 98, "reg": 20, "regard": 2, "regex": [436, 437], "regist": [16, 25, 26, 48, 129, 486, 512, 522, 559, 575, 580, 585], "register_error": [486, 522], "register_transfer_syntax": [432, 559, 580], "registr": 170, "regress": [559, 573, 574, 583], "regular": [26, 27, 43, 486, 522, 559, 579], "reinstal": [26, 27], "rel": [156, 158, 159, 175, 559, 580], "relat": [25, 26, 27, 37, 39, 44, 52, 54, 60, 132, 133, 134, 135, 183, 206, 209, 211, 212, 546, 556, 559, 560, 583, 587, 592], "relationship": [36, 37, 38, 172, 584], "relative_to": 10, "releas": [23, 48, 549, 568, 572, 575], "relev": [46, 181, 182, 183, 583], "reli": [47, 81], "reload": 43, "remain": [39, 146, 172, 486, 522, 559, 565, 584], "remaind": 515, "remainder_near": 515, "rememb": [43, 48, 52], "remind": 41, "remot": [583, 584], "remov": [10, 12, 17, 43, 44, 49, 132, 133, 134, 137, 138, 146, 147, 149, 154, 171, 172, 173, 183, 205, 237, 244, 247, 249, 259, 264, 266, 270, 486, 522, 547, 548, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 583, 585], "remove_plugin": [237, 244], "remove_private_tag": [17, 48, 132, 133, 134], "removeprefix": [486, 522], "removesuffix": [486, 522], "renam": [559, 560, 568, 574, 579, 580], "reopen": 12, "reorgan": [559, 560, 562], "rep": 20, "repeat": [26, 27, 52, 119, 122, 126, 127, 172, 559, 570, 579, 585], "repetit": [2, 8, 20, 55], "replac": [17, 77, 78, 80, 110, 486, 513, 517, 521, 522, 559, 571, 578], "replace_un_with_known_vr": [559, 574], "replic": [26, 27], "report": [45, 559, 572, 582, 588], "repositori": [26, 27, 51, 107, 559, 580, 589], "repr": [8, 43, 101, 486, 522, 559, 574], "repr_valu": 8, "repres": [10, 34, 43, 53, 102, 129, 132, 133, 134, 146, 162, 183, 271, 513, 517, 518, 519, 520, 523, 583, 592], "represent": [2, 8, 20, 26, 28, 29, 32, 36, 38, 39, 43, 62, 65, 76, 110, 112, 114, 124, 129, 132, 133, 134, 135, 141, 171, 172, 173, 214, 236, 237, 243, 247, 249, 251, 252, 264, 266, 271, 515, 516, 518, 519, 520, 522, 523, 540, 543, 549, 559, 575, 577, 580, 585, 586, 592], "reproduc": 583, "repval": [129, 132, 133, 134], "request": [25, 26, 28, 43, 271, 518, 559, 575, 577, 582], "requir": [2, 10, 12, 20, 26, 27, 29, 36, 37, 38, 39, 43, 44, 46, 48, 52, 53, 54, 55, 129, 132, 133, 134, 139, 141, 142, 144, 145, 146, 147, 148, 162, 172, 181, 183, 196, 205, 206, 207, 208, 209, 211, 212, 213, 216, 217, 237, 244, 247, 249, 250, 254, 255, 257, 260, 264, 266, 268, 269, 272, 512, 523, 559, 562, 566, 570, 574, 575, 580, 584, 585, 587, 589, 590, 592], "resampl": 209, "rescal": [20, 37, 49, 214, 216, 217, 251, 252, 254, 255], "reserv": [48, 486, 522], "reset": [78, 97, 99, 132, 133, 134, 148, 153], "reset_data_element_callback": 549, "reshap": [98, 206, 211, 236, 237, 247, 249, 264, 266, 268], "reshape_overlay_arrai": 206, "reshape_pixel_arrai": [559, 580], "reslic": [4, 5, 581], "resolut": 36, "resolv": [0, 130, 181, 559, 565, 571], "resort": [559, 578], "resourc": 583, "respect": [77, 94, 559, 569], "respiratori": 592, "respons": [162, 520, 586], "responsible_party_nam": 520, "responsible_party_name_ideograph": 520, "responsible_party_name_phonet": 520, "rest": [486, 522, 559, 578, 584], "restor": [559, 574], "restrict": [37, 39], "restructuredtext": 584, "result": [10, 17, 24, 25, 26, 27, 36, 37, 38, 44, 46, 55, 78, 80, 132, 133, 134, 183, 237, 247, 249, 264, 266, 271, 486, 511, 515, 522, 559, 577, 580, 583, 584, 590], "result_load": 10, "ret": 129, "retain": [523, 559, 577], "retir": [39, 110, 117, 129, 132, 133, 134, 181, 182, 247, 249, 264, 266, 277, 486, 559, 575], "retriev": [43, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 128, 129, 132, 133, 134, 559, 572, 580, 585, 586], "return": [10, 11, 14, 29, 30, 34, 39, 41, 43, 45, 48, 52, 53, 54, 70, 77, 78, 80, 81, 91, 92, 98, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 195, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 236, 237, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 486, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 559, 560, 561, 562, 563, 569, 570, 571, 572, 574, 575, 577, 578, 580, 585, 586, 587, 592], "rev": 520, "revers": [36, 173, 205, 270, 559, 572], "revert": [559, 566], "review": [24, 26, 582, 583, 584], "revis": [20, 559, 563, 565, 566], "rewind": [14, 167, 177, 178, 179, 559, 566], "rewrit": [518, 519], "rfind": [486, 522], "rg1_unci": [559, 575], "rgb": [29, 30, 33, 34, 36, 37, 38, 39, 46, 53, 98, 207, 208, 209, 210, 211, 212, 213, 219, 237, 247, 249, 250, 256, 264, 266, 559, 569, 572, 577, 580, 590], "rgb_color": [36, 37, 38, 70], "rgba": [213, 250], "rhapsod": 20, "rhythm": 592, "rickard": [559, 567], "right": [20, 36, 132, 133, 134, 486, 515, 522], "rightmost": 515, "rindex": [486, 522], "risk": [26, 27], "rjust": [486, 522], "rle": [35, 39, 46, 47, 53, 132, 133, 134, 139, 140, 145, 211, 212, 235, 242, 244, 245, 246, 268, 439, 559, 570, 571, 577, 578, 580, 589, 590], "rle_encode_fram": [559, 577, 580], "rle_handl": [98, 559, 578, 580], "rle_segment_ord": [29, 212], "rlecompressedlosslesssyntax": [559, 575, 580], "rlelossless": [30, 34, 38, 46, 132, 133, 134, 583, 590], "rlelosslessdecod": 30, "rlelosslessencod": [33, 34, 38, 559, 577, 580], "rletransfersyntax": [559, 575, 580], "rn": 39, "robert": 520, "roi": 51, "root": [0, 9, 10, 22, 26, 27, 98, 172, 173, 175, 425, 511, 515, 585, 587], "rotat": [20, 515], "round": [89, 248, 265, 515], "round_half_even": 515, "rout": 20, "routin": 179, "row": [0, 2, 8, 9, 20, 26, 28, 29, 30, 34, 37, 39, 52, 53, 132, 133, 134, 206, 209, 211, 212, 218, 219, 236, 237, 243, 244, 247, 248, 249, 256, 258, 260, 261, 264, 265, 266, 268, 590], "rowconfigur": 0, "rpartit": [486, 522], "rpcl": [225, 245], "rsplit": [486, 522], "rst": [583, 584], "rstrip": [486, 522], "rt": [26, 27, 28, 43, 70, 170, 172, 587], "rt_dose": [70, 587], "rt_plan": 70, "rt_ss": 70, "rtdose": 70, "rtplan": [6, 7, 13, 24, 26, 27, 28, 43, 45, 70, 162, 581], "rtplan2": 45, "rtstruct": 70, "ruff": [559, 580], "rule": 194, "run": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 43, 44, 45, 55, 110, 132, 133, 134, 520, 559, 562, 565, 575, 580, 584, 585, 588, 589], "runner": [30, 34, 236, 243, 590], "runtimeerror": [132, 133, 134, 211], "safe": [237, 244, 273], "sag_aspect": 4, "sagitt": [1, 5, 6, 559, 571, 581], "sai": [55, 583, 585], "sake": [248, 265], "same": [4, 30, 34, 43, 44, 45, 52, 110, 132, 133, 134, 158, 159, 172, 205, 237, 486, 513, 515, 516, 517, 522, 559, 563, 565, 584, 585, 587], "same_quantum": 515, "sampl": [2, 8, 20, 29, 30, 34, 36, 37, 38, 39, 53, 54, 132, 133, 134, 236, 237, 243, 244, 247, 249, 262, 264, 266, 268, 546, 590, 592], "samples_per_pixel": [29, 30, 34, 218, 236, 243, 244, 258], "samplesperpixel": [36, 37, 38, 209, 211, 212, 260, 261, 268, 559, 565, 570, 590], "sampling_fq": 3, "samplingfrequ": [3, 54, 592], "satisfi": [515, 516, 523], "save": [14, 16, 24, 26, 45, 46, 52, 53, 559, 562, 565, 584, 585, 586, 590, 592], "save_a": [12, 16, 17, 24, 26, 45, 46, 50, 52, 53, 132, 133, 134, 183, 559, 561, 574, 580, 585, 590, 592], "save_filenam": [24, 26], "savea": [559, 561], "savenam": [24, 26], "saw": 585, "sb": 546, "scale": 20, "scaleb": 515, "scan": [2, 8, 20, 26, 28, 170, 590], "schaefer": [559, 566], "scheme": [36, 37, 38, 160, 486, 522, 533, 534, 540, 543, 544, 591, 592], "scheme_design": [559, 580, 591], "scheme_vers": 591, "scientif": 523, "scout": [4, 20], "scratch": [12, 18, 49, 132, 133, 134, 183, 559, 563, 564, 577, 583, 590], "screen": [20, 24, 26], "script": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 55, 559, 569, 580, 582], "scroll": 583, "sct": [559, 580, 591], "se": [2, 8, 20], "se000000": [10, 587], "se000001": [10, 587], "se000002": [10, 587], "search": [10, 107, 145, 172, 177, 178, 179, 486, 522, 559, 577, 580, 585, 587], "sec": 20, "second": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 36, 37, 39, 44, 50, 515, 517, 520, 521, 592], "secondari": [2, 8, 20], "secret": 511, "sect": 520, "sect_6": 41, "section": [2, 24, 25, 26, 27, 36, 37, 38, 39, 41, 43, 46, 48, 53, 55, 57, 101, 129, 132, 133, 134, 135, 139, 141, 151, 196, 200, 206, 219, 237, 247, 248, 249, 256, 257, 264, 265, 266, 268, 269, 520, 583, 584], "secur": [559, 580], "see": [23, 24, 26, 27, 28, 34, 36, 37, 38, 43, 44, 45, 46, 53, 55, 57, 129, 132, 133, 134, 135, 160, 163, 166, 170, 178, 179, 180, 183, 196, 200, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 247, 249, 264, 266, 515, 519, 520, 559, 562, 572, 573, 574, 577, 580, 583, 584, 585, 587, 589, 590, 591], "seek": [14, 132, 133, 134, 142, 143, 144, 148, 152, 153, 156, 158, 159, 162, 183, 559, 561, 571, 580], "seem": 583, "seen": [10, 25, 26, 90, 584, 592], "segment": [20, 29, 212, 213, 250, 559, 570, 577], "select": [43, 132, 133, 134, 145, 234], "self": [14, 155, 271, 486, 513, 515, 516, 517, 518, 519, 521, 585, 590], "semant": [10, 41, 172, 520, 587], "send": [196, 583, 584], "sens": [559, 562], "sensit": [24, 26, 54, 55, 132, 133, 134, 546, 592], "sent": [559, 580], "sep": [486, 517, 522], "separ": [37, 46, 101, 129, 132, 133, 134, 139, 140, 486, 517, 520, 522, 559, 562, 563, 590], "seq": [41, 585], "seq_idx": 0, "seq_item": 0, "sequenc": [0, 2, 3, 6, 8, 15, 19, 20, 24, 26, 27, 28, 32, 41, 49, 54, 55, 61, 78, 80, 90, 132, 133, 134, 141, 145, 146, 147, 163, 168, 169, 173, 176, 177, 199, 200, 214, 215, 216, 251, 252, 253, 254, 520, 534, 546, 549, 559, 560, 561, 565, 566, 569, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 587, 592], "sequence_element_format": [132, 133, 134], "sequence_item": 8, "seri": [2, 8, 10, 20, 41, 165, 170, 172, 559, 563, 584, 587, 590], "serial": [2, 8, 20, 129, 132, 133, 134, 586], "series_uid": 10, "seriesinstanceuid": 10, "seriesnumb": [10, 43, 587], "server": [45, 584], "servic": [20, 587], "session": [43, 44, 45, 48, 132, 133, 134, 584], "set": [2, 6, 7, 12, 13, 18, 20, 25, 26, 27, 28, 32, 36, 39, 42, 43, 44, 46, 47, 49, 52, 53, 55, 57, 70, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 92, 93, 94, 96, 97, 102, 103, 104, 110, 129, 130, 132, 133, 134, 146, 149, 155, 156, 158, 159, 162, 163, 164, 170, 171, 172, 174, 175, 180, 183, 195, 236, 243, 486, 512, 515, 519, 520, 522, 523, 524, 549, 559, 560, 565, 568, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 585, 586, 588, 589, 590, 592], "set_aspect": 4, "set_decod": 236, "set_default": [25, 26], "set_encod": 243, "set_opt": [30, 34, 236, 243], "set_original_encod": [132, 133, 134], "set_private_encod": [486, 512, 559, 580], "set_sourc": [236, 243], "set_titl": 3, "set_xlabel": 3, "set_ylabel": [3, 592], "setdefault": [132, 133, 134, 559, 571, 575], "setup": [25, 26, 27, 28, 45, 559, 566, 567, 579], "setuptool": [25, 26, 559, 560, 567, 577], "sever": [51, 57, 559, 566, 568], "sex": [2, 8, 20], "sexxxxxx": 172, "sfov": 20, "sh": [2, 12, 16, 20, 26, 28, 32, 43, 48, 196, 543, 585], "sha512": 511, "shall": [98, 132, 133, 134, 141, 145, 146, 149, 150, 151, 160, 183, 196], "shallow": [132, 133, 134], "shape": [2, 4, 37, 52, 53, 54, 132, 133, 134, 206, 207, 208, 211, 219, 237, 244, 247, 248, 249, 256, 264, 265, 266, 268, 546, 590, 592], "share": 587, "shift": 515, "short": [32, 542, 583, 585], "should": [18, 25, 26, 27, 30, 32, 34, 36, 37, 38, 39, 41, 43, 44, 45, 48, 52, 53, 55, 129, 132, 133, 134, 142, 144, 145, 146, 147, 148, 149, 162, 167, 170, 172, 174, 181, 182, 196, 205, 207, 208, 209, 210, 211, 212, 219, 237, 244, 248, 256, 265, 511, 539, 559, 561, 562, 569, 570, 575, 583, 584, 585, 587, 588, 590, 592], "should_change_photometricinterpretation_to_rgb": [207, 208, 209, 210, 211, 212], "show": [2, 3, 4, 6, 9, 10, 12, 17, 21, 24, 25, 27, 41, 48, 51, 55, 110, 129, 559, 560, 564, 566, 577, 579, 581, 584, 585, 592], "show_charset_nam": [21, 22, 581], "show_dicomdir": [559, 567, 568], "show_file_meta": [549, 559, 574], "shown": [25, 26, 28, 43, 48, 55, 57, 268, 559, 560, 561, 574, 585, 587], "showvr": 129, "shrunk": 53, "shutil": 587, "sibl": 173, "side": 20, "siemen": 70, "sigma": 591, "sign": [29, 30, 32, 34, 36, 37, 39, 53, 81, 244, 271, 515, 518, 559, 575, 583, 584, 592], "signal": [30, 33, 34, 36, 132, 133, 134, 515], "signal_to_noise_ratio": 33, "signatur": [30, 34, 158, 159, 559, 575], "signed": [29, 37, 237, 247, 249, 264, 266], "signific": [39, 44, 271, 518, 525, 536, 538, 559, 562], "significantli": 590, "silent": [559, 577], "similar": [26, 27, 41, 133, 200, 515, 559, 561, 565, 586, 591], "similarli": [43, 514, 585, 590], "simpl": [22, 43, 45, 51, 559, 560], "simpler": 585, "simplest": [44, 587, 589], "simpli": [26, 27, 43, 52], "simplifi": [156, 158, 559, 561, 565], "simul": [16, 132, 133, 134], "sin": 592, "sinc": [18, 39, 48, 132, 133, 134, 137, 138, 145, 146, 147, 149, 154, 183, 515, 547, 548, 559, 579, 583, 587, 592], "sine": 592, "singl": [25, 26, 30, 32, 34, 36, 37, 38, 39, 41, 79, 109, 111, 129, 132, 133, 134, 139, 141, 146, 148, 149, 154, 169, 170, 172, 201, 202, 205, 206, 211, 236, 237, 243, 244, 247, 249, 264, 266, 268, 530, 539, 559, 560, 570, 578, 583, 586, 587], "singleton": 57, "site": 587, "size": [2, 8, 9, 20, 24, 26, 34, 36, 53, 55, 98, 129, 156, 158, 159, 163, 180, 207, 208, 486, 522, 559, 569, 575, 579, 589, 590], "size_in_byt": 549, "skip": [4, 18, 559, 578, 583], "skipcount": 4, "sl": [20, 26, 28, 32, 546], "slice": [1, 2, 5, 6, 8, 9, 20, 26, 28, 132, 133, 134, 486, 522, 559, 568, 569, 571, 581], "sliceloc": [4, 9, 26, 28], "slicethick": 4, "slide": 590, "slope": [20, 214, 251, 252], "slow": [559, 566], "slower": [38, 46, 257, 269], "slowest": [559, 578], "small": [559, 562, 568, 570, 582, 589], "smaller": [515, 586], "smallest": [2, 8, 20, 515], "smart": 20, "smptest211020uncompressedinterlacedactivevideo": [559, 580], "smptest211020uncompressedprogressiveactivevideo": [559, 580], "smptest211030pcmdigitalaudio": [559, 580], "sn": 20, "snan": 515, "snapshot": 589, "snip": 585, "snippet": [25, 26, 48], "so": [3, 16, 26, 27, 30, 32, 34, 37, 39, 41, 43, 44, 46, 52, 53, 55, 94, 132, 133, 134, 172, 174, 183, 203, 512, 514, 515, 559, 560, 563, 580, 583, 585, 586, 587, 590, 592], "softwar": [2, 8, 20, 44, 589], "softwarevers": 43, "some": [9, 14, 16, 17, 26, 28, 41, 43, 44, 48, 51, 52, 53, 54, 55, 57, 77, 90, 100, 132, 133, 166, 183, 515, 516, 523, 559, 560, 561, 563, 565, 568, 569, 579, 584, 585, 586, 587, 589, 591], "somenewtag": 48, "someth": [10, 14, 23, 25, 26, 30, 34, 41, 52, 132, 559, 580, 583], "sometim": [44, 48, 559, 570, 580], "somewher": [6, 45], "son": 132, "sop": [2, 8, 9, 10, 12, 20, 26, 27, 28, 38, 43, 48, 53, 54, 70, 136, 165, 170, 171, 172, 173, 183, 196, 213, 250, 549, 559, 568, 569, 575, 578, 579, 585, 590], "sopclassuid": [9, 24, 26, 28, 171, 585, 592], "sopinstanceuid": [24, 26, 38, 171], "sorri": [559, 567], "sort": [4, 10, 132, 133, 134, 587], "sort_kei": [132, 133, 134], "sourc": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 23, 26, 28, 29, 30, 34, 48, 55, 57, 77, 78, 79, 80, 82, 83, 95, 97, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 559, 567, 575, 577, 580, 582, 585, 588, 589, 592], "sourcetosurfacedist": 11, "space": [2, 8, 9, 20, 29, 30, 34, 36, 37, 38, 39, 41, 46, 49, 110, 219, 244, 256, 486, 520, 522, 525, 536, 538, 540, 559, 568, 580, 585, 587], "span": 145, "sparingli": 41, "special": [44, 61, 549, 559, 566], "specif": [10, 20, 24, 26, 27, 28, 29, 34, 35, 41, 43, 46, 48, 52, 53, 55, 77, 78, 79, 80, 132, 133, 134, 162, 163, 172, 177, 200, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 486, 515, 522, 545, 559, 560, 562, 568, 570, 571, 574, 575, 580, 583, 584, 585, 586, 587, 590], "specifi": [24, 25, 26, 27, 28, 36, 37, 39, 43, 110, 112, 129, 132, 133, 134, 148, 162, 163, 183, 195, 237, 244, 247, 249, 264, 266, 486, 513, 515, 517, 520, 521, 522, 546, 559, 572, 577, 585, 587, 589, 590], "specific_tag": [160, 162, 163, 166, 247, 249, 264, 266, 585], "specificcharacterset": 170, "spectroscopi": 170, "speed": [20, 559, 562, 566, 570, 577, 579], "spell": [41, 77, 559, 570], "sphinx": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 41, 559, 563, 584], "spine": [10, 587], "split": [20, 486, 522, 545, 559, 560, 561], "splitlin": [486, 522], "spot": 20, "spread": [559, 580], "spring": [213, 250], "sq": [0, 8, 32, 57, 129, 132, 133, 134, 160, 534, 559, 565, 575, 578, 580, 585], "sqrt": 515, "squar": [43, 48, 515, 585], "sr": [170, 520, 559, 577, 591], "src": [9, 10, 29, 30, 33, 34, 37, 98, 236, 237, 243, 244, 247, 249, 257, 259, 264, 266, 269, 587, 590], "srt": [559, 580], "ss": [2, 4, 20, 26, 28, 32, 181, 182, 517, 521, 546, 559, 561, 592], "ssd": 11, "st": [32, 45], "st000000": [10, 587], "st000001": [10, 587], "st000002": 10, "st000003": 10, "st_mtime": 164, "stabl": 589, "stack": 592, "stackoverflow": 582, "stage": [10, 171, 172, 583, 584], "stamp": 20, "stand": 77, "standard": [12, 20, 22, 32, 36, 37, 38, 39, 41, 44, 46, 48, 53, 54, 57, 129, 132, 133, 134, 135, 139, 141, 144, 145, 146, 147, 148, 149, 151, 152, 172, 183, 196, 200, 206, 209, 213, 214, 215, 216, 217, 219, 248, 250, 251, 252, 253, 254, 255, 256, 257, 265, 268, 269, 272, 511, 515, 516, 519, 520, 559, 561, 564, 565, 567, 568, 575, 577, 586, 587, 590, 592], "start": [0, 6, 17, 18, 20, 24, 26, 27, 28, 37, 45, 52, 55, 129, 131, 135, 143, 144, 146, 148, 149, 152, 153, 161, 167, 173, 174, 179, 181, 182, 205, 236, 237, 249, 266, 270, 486, 511, 522, 534, 542, 559, 569, 579, 580, 583, 584, 585, 586, 591], "startswith": [486, 522], "stat": [20, 164], "state": [132, 133, 134, 189, 559, 580, 586], "statement": [559, 563], "static": [26, 28, 134, 486, 522], "station": [2, 8, 20], "statu": [20, 117, 129], "stdin": [86, 585, 587, 590], "stdlib": 51, "stdout": [24, 26], "step": [41, 559, 566, 577, 587, 591, 592], "stereometr": 170, "stick": 585, "sticki": 0, "still": [10, 46, 48, 559, 565, 566, 568, 569, 570, 572, 583, 585, 586, 587, 590], "stop": [131, 162, 166, 205, 270, 486, 522, 559, 562], "stop_before_pixel": [162, 559, 562], "stop_when": [160, 163, 166], "storag": [2, 9, 12, 14, 20, 26, 27, 28, 43, 48, 53, 70, 136, 194, 196, 549, 559, 562, 563, 568, 578, 585, 587, 592], "store": [2, 8, 10, 17, 20, 29, 32, 34, 37, 38, 39, 43, 48, 53, 107, 129, 132, 133, 134, 162, 197, 214, 236, 243, 244, 251, 252, 259, 513, 515, 516, 517, 518, 519, 521, 559, 562, 577, 580, 585, 586, 587, 592], "store_data_and_return_uri": 586, "str": [0, 11, 14, 20, 29, 30, 32, 34, 43, 77, 78, 79, 80, 89, 93, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 142, 143, 144, 148, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 183, 184, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 206, 212, 213, 218, 219, 236, 237, 243, 244, 245, 246, 247, 249, 250, 256, 258, 260, 261, 262, 264, 266, 271, 272, 486, 511, 512, 513, 514, 515, 516, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 559, 569, 574, 577, 585], "straightforward": 53, "stream": [146, 154, 156, 158, 159, 559, 580, 583], "streamhandl": 95, "streamlin": [559, 566], "strftime": [12, 513, 517, 521], "strict": [0, 44, 486, 519, 522, 559, 572, 579], "strictli": [44, 51], "string": [16, 17, 20, 25, 26, 32, 43, 57, 78, 79, 80, 110, 129, 132, 133, 134, 135, 162, 173, 184, 193, 195, 197, 201, 202, 205, 237, 244, 271, 486, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 528, 530, 539, 540, 541, 545, 559, 562, 564, 565, 569, 570, 575, 577, 586], "strip": [486, 515, 522], "strongli": [139, 172, 587], "strptime": 517, "struct": [20, 198, 539], "struct_format": [198, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 537, 538, 539, 541], "structur": [10, 26, 27, 43, 45, 70, 170, 172, 173, 559, 572, 579, 580, 585, 587, 588], "studi": [2, 8, 9, 10, 20, 26, 27, 28, 43, 170, 172, 587], "study1": [26, 28], "study_uid": 10, "studyd": [9, 10, 24, 26, 27, 28, 587], "studydescript": [10, 26, 28, 172, 587], "studyid": [26, 28], "studyinstanceuid": 10, "studytim": [10, 24, 26, 28, 587], "stuff": 14, "stxxxxxx": 172, "style": [0, 23, 513, 517, 521, 559, 561, 564], "sub": [25, 26, 36, 237, 247, 249, 264, 266, 486, 522, 549], "subclass": [486, 559, 569], "subcommand": [25, 26, 27, 559, 577], "subcommandnam": [25, 26], "subdirectori": [559, 567], "subject": [41, 586, 591], "submit": [26, 28, 45, 559, 565, 582, 583, 584], "subnorm": 515, "subpars": [25, 26], "subplot": [3, 4, 592], "subsampl": 259, "subsequ": 162, "subset": [10, 24, 26], "substanti": [559, 562], "substitut": [486, 522], "substr": [486, 522], "success": [237, 247, 249, 264, 266, 584], "successfulli": [30, 34, 148], "suever": [559, 566], "suffici": [142, 144, 148, 244], "suffix": [12, 174, 486, 511, 520, 522, 559, 580], "suggest": [44, 582, 583, 584], "suit": [20, 48, 559, 579], "suitabl": [172, 213, 236, 250, 257, 267, 269, 486, 522, 589], "summar": [11, 587], "summari": [10, 25, 26, 583], "summer": [213, 250], "sundai": [513, 517], "super": 134, "supin": 45, "supp": [559, 562], "supplement": [213, 250], "suppli": [0, 14, 51, 55, 80, 142, 144, 148, 162, 172, 213, 237, 244, 250, 511, 520, 585, 587], "support": [30, 34, 36, 44, 49, 71, 72, 81, 98, 132, 133, 134, 158, 159, 172, 205, 206, 207, 208, 209, 210, 211, 212, 213, 237, 244, 245, 250, 257, 267, 268, 269, 270, 271, 518, 546, 559, 560, 568, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580, 587, 588, 589, 590, 591], "supports_transfer_syntax": [98, 207, 208, 209, 210, 211, 212], "suppos": 212, "suppress": [559, 577], "suppress_invalid_tag": [132, 133, 134, 559, 579], "sure": [9, 37, 47, 55, 583, 585, 589], "surfac": 170, "surround": 585, "sv": [32, 546, 559, 572], "sv1": [47, 245, 268, 559, 574], "swap": [189, 237, 532], "swapcas": [486, 522], "switch": [55, 90, 559, 563, 565, 567, 572, 574, 577, 579, 583, 584], "sy": [0, 4, 14, 271, 518, 592], "symmetr": 586, "synchronis": [54, 592], "synonym": [559, 560], "syntax": [2, 12, 16, 20, 24, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 43, 48, 49, 55, 98, 132, 133, 134, 136, 139, 140, 145, 146, 163, 171, 172, 180, 183, 196, 207, 208, 209, 210, 211, 212, 236, 237, 243, 244, 245, 246, 247, 249, 264, 266, 268, 277, 371, 376, 379, 402, 432, 439, 486, 489, 512, 549, 559, 562, 563, 568, 570, 571, 572, 574, 575, 579, 580, 585, 589, 590, 592], "system": [20, 24, 26, 27, 28, 44, 51, 156, 158, 159, 172, 271, 518, 559, 580, 585, 587, 589, 592], "t": [4, 8, 10, 18, 20, 26, 27, 28, 29, 32, 36, 37, 39, 41, 43, 48, 52, 55, 85, 132, 133, 134, 142, 144, 145, 148, 163, 172, 183, 205, 206, 209, 212, 219, 237, 244, 247, 249, 256, 264, 266, 267, 270, 486, 511, 517, 522, 559, 571, 574, 575, 580, 583, 584, 585, 586, 587, 590], "t1": 43, "t2": 43, "t3": 43, "t4": 43, "tab": [486, 522, 584], "tabl": [20, 23, 32, 36, 37, 38, 46, 53, 129, 132, 133, 134, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 183, 196, 206, 209, 211, 212, 213, 214, 215, 216, 236, 243, 250, 251, 252, 253, 254, 268, 486, 522, 546, 559, 572, 575, 580, 584, 585, 587, 589, 590], "tabsiz": [486, 522], "tag": [16, 17, 26, 28, 29, 32, 45, 48, 49, 52, 53, 57, 61, 86, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 143, 146, 149, 150, 151, 152, 153, 156, 158, 159, 160, 162, 164, 172, 180, 181, 185, 200, 206, 209, 211, 212, 247, 249, 260, 261, 264, 266, 267, 268, 542, 546, 549, 559, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 574, 575, 577, 578, 580, 585, 586], "tag_in_except": 61, "tagtyp": [132, 133, 134], "take": [2, 24, 25, 26, 30, 34, 39, 41, 51, 55, 132, 133, 134, 160, 170, 205, 559, 566, 583, 584, 585, 587], "taken": [39, 132, 133, 134, 142, 144, 148, 218, 258, 268], "target": [26, 27, 41], "tarou": 22, "task": 584, "tb": 155, "tdir": 10, "teardown": [559, 579], "technic": [41, 42], "techniqu": [39, 45], "tell": [132, 133, 134, 142, 143, 144, 148, 152, 153, 156, 158, 159, 162, 183, 559, 561, 580, 584, 587], "temp": [52, 53], "tempfil": [10, 12, 17, 587], "temporari": [171, 559, 580, 587], "temporarili": 44, "temporarydirectori": [10, 587], "ten": 515, "tend": [52, 589], "term": [20, 53, 206, 236, 243, 260, 271, 515, 517, 518, 521], "termin": [20, 26, 27, 28, 44, 146, 163, 176], "territori": 590, "test": [2, 12, 16, 24, 26, 27, 28, 43, 45, 90, 109, 110, 111, 132, 133, 134, 486, 515, 522, 524, 559, 560, 566, 568, 572, 575, 577, 579], "test_fil": [9, 10, 24, 26, 43, 45, 584, 585, 587], "test_new_uid": 583, "test_uid": 583, "teston": [109, 110], "testtwo": [109, 110], "text": [0, 20, 22, 32, 43, 48, 129, 162, 199, 200, 202, 486, 522, 534, 540, 541, 543, 544, 559, 561, 570, 583, 584, 585], "tggc": [20, 26, 28], "thai": [559, 568], "than": [24, 25, 26, 27, 28, 32, 37, 38, 39, 41, 46, 47, 52, 55, 57, 129, 132, 133, 134, 141, 142, 143, 144, 145, 146, 148, 149, 156, 158, 159, 162, 166, 172, 175, 184, 198, 205, 218, 248, 258, 265, 268, 511, 515, 559, 560, 561, 562, 567, 568, 569, 572, 574, 577, 580, 585, 586, 590], "thank": [51, 559, 562, 565], "thei": [4, 29, 36, 41, 43, 48, 52, 53, 77, 89, 98, 132, 133, 134, 136, 183, 196, 486, 522, 559, 577, 580, 583, 584, 585, 587, 589, 590], "them": [4, 8, 24, 26, 27, 28, 30, 34, 41, 42, 43, 47, 48, 52, 55, 132, 133, 134, 156, 158, 159, 528, 530, 559, 567, 571, 575, 584, 585, 587], "theme_us": 0, "theoret": [559, 580], "therefor": [37, 205, 259], "theta": 20, "thi": [2, 3, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 57, 70, 77, 82, 83, 84, 87, 88, 90, 97, 98, 110, 129, 132, 133, 134, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 154, 160, 162, 165, 171, 172, 183, 189, 200, 203, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 236, 237, 243, 244, 247, 249, 250, 253, 254, 255, 259, 264, 266, 271, 486, 513, 514, 515, 516, 517, 519, 520, 522, 523, 524, 549, 566, 568, 571, 572, 577, 580, 583, 584, 585, 586, 587, 589, 590, 591, 592], "thick": [2, 8, 20], "thing": [43, 52, 584, 585], "think": [25, 26], "third": [37, 49, 486, 515, 520, 522, 589], "third_party_compression_func": [46, 590], "thorough": 45, "those": [26, 28, 30, 34, 40, 44, 48, 559, 562, 565, 575, 585, 587, 590], "though": [37, 587], "thread": [237, 244, 515], "three": [16, 30, 34, 37, 41, 111, 486, 520, 522, 585, 587], "threshold": [132, 133, 134], "through": [8, 17, 30, 34, 41, 43, 45, 48, 53, 132, 133, 134, 165, 179, 181, 182, 237, 247, 264, 515, 559, 560, 561, 580, 583, 584, 585, 589, 591], "throughput": [223, 224, 225], "thrown": [559, 568], "thu": [48, 559, 560], "tick": 41, "tight_layout": 3, "tile": 36, "tilt": 20, "time": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 26, 27, 28, 32, 43, 44, 48, 55, 70, 92, 94, 110, 133, 144, 164, 177, 180, 257, 269, 513, 514, 517, 521, 559, 562, 568, 577, 582, 583, 584, 585, 587, 592], "timelin": [559, 571], "timespec": [517, 521], "timestamp": [133, 164, 513, 517], "timetupl": [513, 517], "timetz": 517, "timezon": [2, 8, 20, 517], "titl": [0, 2, 20, 26, 28, 41, 48, 196, 486, 520, 522, 583, 584, 585], "titlecas": [486, 522], "tix": [559, 560], "tk": [0, 22], "tkinter": [0, 22, 49, 559, 560, 562], "tm": [2, 12, 20, 26, 27, 28, 32, 43, 61, 66, 94, 535, 541, 559, 568, 577, 585], "tmp": [10, 12, 587], "tmp0aalrzir": 587, "tmpi1x77q63": 10, "tmpq9z1i46x": 12, "tmpsqz8rhgb": 587, "tmpu068kdwp": 587, "to_byt": [271, 518], "to_eng_str": 515, "to_integr": 515, "to_integral_exact": 515, "to_integral_valu": 515, "to_json": [129, 132, 133, 134, 559, 573, 586], "to_json_dict": [129, 132, 133, 134, 559, 573, 579, 586], "tobyt": [2, 53, 592], "toctre": 584, "todai": [513, 517], "togeth": [138, 139, 184], "toi": 18, "toler": [559, 561, 572], "toml": [559, 579], "too": [46, 132, 133, 134, 135, 486, 522, 542, 559, 569, 571, 572, 582], "tool": [55, 559, 580], "toordin": [513, 517], "top": [20, 26, 27, 28, 41, 52, 132, 133, 134, 163, 172, 559, 580, 584, 585], "top_nod": 172, "toshiba": [2, 8, 20], "toshiba_mec": [2, 8, 20], "total": [2, 3, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 37, 139, 140, 206, 236, 243, 260, 515, 581, 590], "toward": [24, 26], "traceback": [86, 274, 585, 587, 590], "track": 37, "tracker": [45, 582, 583], "tract": 170, "trail": [2, 8, 20, 26, 28, 141, 206, 236, 243, 260, 486, 515, 522, 525, 536, 538, 540, 559, 568, 585], "train": [2, 8, 20], "trait_nam": [132, 133, 134], "transfer": [2, 12, 16, 20, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 43, 48, 49, 98, 132, 133, 134, 136, 139, 140, 145, 146, 163, 171, 172, 180, 183, 196, 207, 208, 209, 210, 211, 212, 236, 237, 243, 244, 245, 246, 247, 249, 264, 266, 268, 277, 371, 376, 379, 402, 432, 439, 486, 489, 512, 549, 559, 563, 568, 570, 571, 572, 574, 575, 579, 580, 585, 589, 590, 592], "transfer_syntax": [98, 207, 208, 209, 210, 212, 236, 243], "transfer_syntax_uid": [30, 34, 132, 133, 134], "transfersyntaxuid": [12, 46, 47, 132, 133, 134, 171, 559, 561, 568, 585, 590], "transform": [36, 39, 53], "translat": [24, 26, 43, 486, 522, 559, 568], "travisci": [559, 568], "treat": [170, 236, 587], "treatment": [26, 28], "tree": [6, 21, 43, 173, 559, 566, 581, 585], "tree_item": 0, "tree_seq_item": 0, "treeview": 0, "tri": [132, 133, 134, 156, 158, 159, 237, 244, 247, 249, 264, 266, 559, 580], "tricki": 55, "trigger": [20, 26, 28], "troubl": 583, "true": [0, 10, 12, 16, 29, 30, 32, 33, 34, 41, 43, 44, 46, 48, 54, 57, 70, 81, 82, 83, 89, 90, 94, 95, 97, 98, 101, 107, 116, 117, 126, 127, 129, 131, 132, 133, 134, 136, 139, 146, 149, 155, 156, 158, 159, 160, 162, 163, 167, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 196, 203, 206, 207, 208, 209, 210, 211, 212, 216, 219, 236, 237, 243, 244, 247, 248, 249, 254, 256, 257, 263, 264, 265, 266, 267, 269, 271, 486, 512, 515, 516, 519, 522, 524, 525, 526, 527, 528, 529, 530, 534, 535, 536, 538, 539, 541, 542, 546, 559, 563, 565, 575, 577, 579, 580, 585, 587, 592], "truli": 55, "truncat": [486, 522, 523, 559, 561], "truthi": [559, 572], "try": [41, 98, 181, 182, 236, 486, 522, 559, 563, 571, 585, 587], "tsyntax": [211, 236, 243], "ttk": 0, "tube": 20, "tupl": [30, 34, 43, 46, 48, 86, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 132, 133, 134, 135, 140, 142, 144, 145, 148, 149, 153, 156, 158, 159, 162, 205, 236, 237, 243, 244, 270, 272, 273, 486, 513, 515, 517, 520, 522, 559, 562, 571, 590], "tupletag": [61, 559, 562], "turkish": [559, 568], "turn": [44, 95, 163, 559, 575], "tut": 584, "tutori": [34, 41, 45, 559, 572, 582, 583, 584, 585, 587, 590, 592], "two": [16, 20, 25, 26, 28, 39, 41, 43, 44, 47, 48, 50, 90, 109, 110, 111, 132, 133, 134, 141, 172, 259, 271, 486, 515, 518, 520, 522, 559, 566, 580, 585, 586, 592], "txt": [44, 585], "type": [2, 3, 8, 17, 18, 20, 25, 26, 27, 28, 29, 30, 34, 39, 40, 42, 43, 46, 48, 53, 70, 77, 78, 80, 83, 100, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 148, 149, 150, 152, 153, 154, 156, 158, 159, 162, 163, 164, 166, 167, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 195, 196, 198, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 236, 237, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 272, 486, 511, 512, 515, 520, 523, 524, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 538, 540, 541, 542, 543, 544, 545, 546, 559, 562, 563, 565, 576, 577, 579, 580, 584, 585, 587, 590, 592], "type_constructor": [205, 585], "typeerror": [134, 162, 205, 207, 208, 559, 569, 575, 585], "typeofpatientid": 585, "typic": [39, 97, 137, 590], "typo": 582, "tz": 517, "tzinfo": [517, 521], "tzname": [517, 521], "u": [2, 20, 26, 28, 32, 70, 111, 156, 158, 159, 181, 182, 486, 522, 546, 559, 561, 586, 587, 589, 590, 592], "ub": 546, "uc": [32, 543, 559, 568], "ucum": 591, "ui": [2, 12, 16, 20, 26, 27, 28, 32, 43, 48, 192, 196, 536, 559, 562, 572, 585], "uid": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 35, 36, 37, 38, 39, 43, 46, 47, 48, 53, 55, 98, 132, 133, 134, 136, 139, 140, 171, 172, 183, 196, 207, 208, 209, 210, 211, 212, 213, 236, 237, 243, 244, 245, 246, 250, 268, 536, 545, 549, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580, 583, 585, 587, 589, 590], "uid_dictionari": [559, 560], "uint": [248, 265], "uint16": [213, 214, 215, 216, 244, 250, 251, 252, 253, 254], "uint8": [52, 213, 214, 215, 216, 250, 251, 252, 253, 254], "ul": [2, 12, 16, 20, 26, 27, 28, 32, 43, 48, 109, 110, 111, 156, 158, 159, 196, 546, 585, 587], "ultrasound": 587, "uml": 591, "un": [16, 32, 57, 91, 160, 183, 193, 537, 559, 560, 572, 574, 577, 578, 585], "unabl": [132, 133, 134, 156, 158, 159, 183, 262, 585, 587], "unaffect": 515, "unavail": [237, 244], "uncas": [486, 522], "unchang": [10, 77, 181, 182, 214, 215, 216, 217, 251, 252, 253, 254, 255, 515, 590], "uncom": [559, 566], "uncommon": 519, "uncompress": [2, 8, 20, 29, 34, 36, 37, 38, 45, 46, 47, 53, 132, 133, 134, 243, 244, 259, 489, 559, 570, 572, 577, 578, 590], "uncompressedpixeltransfersyntax": [559, 575, 580], "uncompressedtransfersyntax": [559, 575, 580], "unconvert": [132, 133, 134], "undecod": 131, "undefin": [46, 57, 129, 146, 160, 176, 559, 564, 575, 578], "undefinedlength": [559, 560], "under": [25, 26, 43, 139, 140, 559, 560, 562, 568, 583, 584, 589], "underflow": [20, 515], "underli": 38, "underscor": 591, "understand": [41, 43, 583, 590, 592], "undocu": 589, "unencapsul": 39, "unencod": [30, 34, 244], "unequ": 515, "unexpect": [559, 572], "unfamiliar": 41, "unicod": [6, 21, 32, 78, 80, 486, 520, 522, 559, 560, 562, 563, 579, 581], "unicodedecodeerror": 78, "unicodeencodeerror": [80, 486, 522], "union": 32, "uniqu": [20, 30, 32, 34, 39, 48, 172, 173, 174, 192, 237, 244, 559, 568, 579, 585, 587], "unit": [33, 37, 53, 132, 133, 134, 162, 206, 236, 243, 260, 546, 583, 590, 592], "unitless": [3, 53, 546, 592], "unittest": 583, "unknown": [16, 20, 32, 48, 86, 129, 130, 132, 133, 134, 146, 193, 559, 564, 569, 571, 575, 577, 585, 591], "unless": [41, 166, 173, 486, 515, 522, 559, 563, 574, 587], "unlik": [132, 133, 134, 515], "unlimit": 32, "unlink": 12, "unneed": [559, 569], "unoffici": [559, 566], "unpack": [52, 237, 247, 249, 257, 264, 266, 269, 539, 559, 570, 578], "unpack_bit": [549, 559, 578, 580], "unpickl": [559, 572], "unrealist": [132, 133, 134], "unrecover": 511, "unsign": [29, 30, 32, 34, 36, 37, 39, 53, 149, 244, 559, 575, 592], "unspecifi": [156, 158, 159], "unsupport": [162, 207, 208, 209, 212], "until": [10, 156, 158, 159, 162, 163, 166, 177, 180, 559, 560, 565, 577, 587], "untouch": [486, 522], "unus": [559, 570], "up": [37, 46, 52, 53, 132, 133, 134, 156, 158, 159, 172, 173, 180, 183, 211, 511, 515, 520, 545, 559, 562, 566, 568, 583, 584, 585, 588, 589, 590], "upcom": [44, 97], "updat": [2, 10, 18, 20, 26, 27, 37, 38, 52, 109, 110, 111, 112, 132, 133, 134, 170, 172, 181, 182, 196, 247, 249, 264, 266, 559, 561, 562, 564, 565, 567, 568, 569, 570, 572, 574, 575, 577, 578, 579, 580, 583, 584, 587, 589, 590], "upper": [486, 515, 522, 559, 580], "uppercas": [41, 129, 486, 522], "ur": [32, 538], "uri": [32, 132, 133, 134, 559, 575, 586], "url": [32, 41], "urllib": [559, 577], "us": [1, 3, 5, 6, 7, 9, 10, 12, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 52, 53, 54, 78, 79, 80, 81, 85, 86, 89, 95, 96, 97, 98, 102, 103, 107, 110, 112, 129, 130, 132, 133, 134, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 162, 163, 165, 166, 170, 172, 173, 174, 180, 181, 182, 183, 195, 198, 199, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 236, 237, 243, 244, 247, 248, 249, 250, 251, 252, 257, 258, 259, 264, 265, 266, 267, 269, 270, 271, 274, 432, 486, 511, 512, 515, 517, 518, 519, 520, 522, 523, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 546, 547, 548, 553, 554, 559, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 591, 592], "us1_j2kr": 70, "us1_rl": 46, "us1_uncr": 70, "usabl": [486, 522], "usag": [14, 24, 26, 27, 28, 30, 38, 43, 49, 219, 247, 249, 256, 264, 266, 486, 520, 549, 559, 572, 580, 587], "usb": 587, "use_decimal_boolean": 82, "use_ds_decim": [32, 83, 528, 549, 559, 574], "use_ds_numpi": [82, 528, 549, 559, 574], "use_exist": [172, 587], "use_is_numpi": [530, 549, 559, 574], "use_mct": 33, "use_numpi": 83, "user": [20, 30, 34, 43, 45, 50, 51, 80, 89, 132, 133, 134, 160, 165, 183, 559, 562, 565, 571, 572, 575, 580, 583, 585, 587], "userwarn": [10, 85], "usual": [25, 26, 27, 28, 38, 43, 48, 53, 110, 133, 143, 155, 160, 559, 562, 583, 585, 589, 590], "ut": 32, "utc": [2, 8, 20, 517], "utcfromtimestamp": 517, "utcnow": 517, "utcoffset": [517, 521], "utctimetupl": 517, "utf": [22, 486, 522], "util": [24, 26, 55, 64, 65, 66, 71, 549, 552, 559, 560, 567, 568, 580], "uuid": 511, "uuid4": 511, "uuu": [517, 521], "uv": [32, 546, 559, 572], "v": [559, 571], "v1": [48, 559, 569, 570, 571, 592], "v2": [26, 27, 38, 559, 575, 589, 592], "v3": [2, 8, 20, 36, 37, 559, 575, 577, 578, 580, 592], "v4": [132, 133, 134, 137, 138, 146, 147, 149, 154, 183, 547, 548, 559, 580, 592], "v5": 592, "v6": 592, "val": [156, 158, 159, 184, 205, 270, 486, 514, 515, 516, 518, 519, 520, 523, 545, 585], "valid": [12, 49, 55, 57, 84, 87, 88, 90, 125, 129, 132, 133, 134, 136, 162, 175, 183, 196, 219, 236, 237, 243, 244, 256, 436, 437, 486, 517, 521, 522, 523, 524, 528, 530, 539, 540, 543, 559, 577, 578, 579, 590], "validate_dataset": 585, "validate_file_meta": [549, 559, 580, 585], "validate_valu": 129, "validation_mod": [129, 486, 514, 515, 516, 518, 519, 520], "valtyp": 545, "valu": [0, 2, 8, 9, 10, 12, 17, 20, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 43, 44, 46, 48, 52, 53, 55, 57, 61, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 94, 97, 104, 110, 112, 113, 114, 123, 124, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 156, 158, 159, 161, 162, 164, 170, 172, 180, 181, 182, 183, 184, 193, 198, 199, 200, 205, 206, 209, 211, 212, 213, 214, 215, 216, 218, 219, 234, 236, 237, 243, 244, 248, 250, 251, 252, 253, 254, 256, 258, 261, 263, 265, 267, 268, 270, 271, 486, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 546, 549, 559, 560, 561, 564, 565, 566, 568, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580, 583, 584, 585, 586, 587, 589, 590, 591, 592], "value_kei": 129, "value_tel": 131, "valueerror": [82, 83, 85, 86, 107, 108, 109, 110, 111, 112, 131, 132, 133, 134, 135, 136, 146, 149, 164, 172, 183, 196, 205, 206, 209, 212, 248, 257, 265, 269, 270, 486, 511, 515, 516, 519, 522, 523, 528, 530, 542, 559, 580, 587, 590], "valuerep": [16, 22, 61, 527, 529, 533, 535, 549], "valuesview": [132, 133, 134], "vari": 585, "variabl": [26, 27, 41, 42, 43, 44, 70, 559, 571, 575, 579], "variant": [2, 8, 20], "varieti": 53, "variou": [25, 26, 48, 559, 560], "ve": [46, 559, 567, 583, 584, 587, 590, 592], "veri": [22, 32, 37, 559, 562, 583, 587, 590], "verif": [559, 569], "verifi": [47, 559, 565], "versa": [38, 183, 213, 250], "version": [2, 8, 12, 20, 24, 26, 27, 28, 39, 41, 43, 45, 48, 49, 57, 81, 83, 85, 86, 90, 97, 100, 101, 103, 104, 107, 129, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 174, 181, 182, 183, 196, 203, 211, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 253, 254, 255, 256, 257, 262, 265, 268, 269, 271, 486, 511, 515, 522, 528, 530, 546, 547, 548, 583, 584, 585, 586, 591], "versionad": 41, "versionchang": 41, "veterinari": 520, "via": [43, 46, 57, 129, 132, 133, 134, 211, 486, 513, 522, 559, 568, 570, 575, 577, 578, 580, 586, 587, 590], "vice": [38, 183, 213, 250], "videan42": [559, 567], "view": [4, 10, 20, 29, 38, 43, 45, 49, 53, 215, 216, 217, 236, 253, 254, 255, 559, 560, 562, 580, 584, 587, 592], "view_onli": [29, 237, 247, 249, 264, 266], "viewer": [0, 51], "virtual": [44, 589], "virtualenv": 584, "visibl": 584, "visit": [132, 133, 134, 583, 584], "vm": [16, 32, 43, 63, 109, 110, 111, 112, 113, 119, 120, 123, 129, 559, 563, 571, 574, 580, 585], "vma": 20, "voi": [49, 215, 216, 217, 253, 254, 255, 559, 572, 575], "voic": 54, "volum": 207, "voxel": 2, "vr": [0, 2, 8, 12, 16, 17, 20, 26, 27, 28, 39, 40, 42, 43, 46, 47, 48, 57, 61, 66, 83, 90, 91, 94, 102, 103, 109, 110, 111, 112, 114, 119, 120, 124, 129, 130, 131, 132, 133, 134, 135, 141, 156, 158, 159, 160, 161, 163, 164, 172, 181, 182, 183, 188, 189, 192, 196, 197, 209, 220, 221, 222, 226, 237, 245, 277, 486, 512, 513, 515, 516, 517, 518, 519, 520, 521, 525, 534, 536, 538, 539, 540, 541, 543, 544, 559, 560, 561, 562, 563, 565, 566, 568, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580, 585, 586, 590], "w": 585, "wa": [24, 25, 26, 39, 41, 129, 132, 133, 134, 148, 172, 177, 181, 182, 528, 530, 559, 562, 569, 572, 577, 580, 583, 584, 587, 590], "wado": [129, 132, 133, 134, 586], "wai": [37, 43, 44, 45, 50, 52, 53, 55, 132, 133, 134, 559, 565, 580, 582, 585, 586, 587, 589, 591], "walk": [17, 132, 133, 134], "wallac": [559, 563], "wang": 22, "want": [9, 10, 14, 24, 25, 26, 37, 44, 55, 174, 583, 584, 585, 586, 587, 589], "warn": [41, 44, 55, 57, 77, 78, 80, 85, 86, 263, 549, 559, 561, 565, 569, 570, 571, 572, 574, 577, 578, 580, 583, 584], "warn_and_log": 10, "water": [20, 520], "waveform": [1, 5, 6, 42, 49, 70, 132, 133, 134, 170, 549, 559, 575, 579, 581, 588], "waveform_arrai": [3, 49, 132, 133, 134, 559, 575, 592], "waveform_ecg": 70, "waveformbitsalloc": [546, 592], "waveformbitsstor": 592, "waveformdata": [54, 592], "waveformorigin": 592, "waveformsampleinterpret": [546, 592], "waveformsequ": [3, 54, 592], "wavelet": 36, "wb": 585, "we": [3, 10, 16, 17, 18, 24, 26, 28, 37, 38, 45, 47, 94, 132, 133, 134, 582, 583, 584, 585, 587, 589, 590, 592], "web": 584, "wedg": [26, 28], "week": [513, 517], "weekdai": [513, 517], "weight": [0, 2, 8, 20], "well": [29, 48, 53, 55, 172, 213, 250, 486, 522, 559, 562, 563, 565, 572, 583, 585, 589], "were": [20, 26, 28, 132, 133, 134, 559, 565, 567, 583, 584, 592], "what": [10, 32, 39, 42, 48, 52, 172, 585, 587, 590], "whatev": [218, 258], "whatsoev": 237, "wheel": 589, "when": [10, 16, 23, 24, 25, 26, 27, 29, 30, 32, 34, 36, 37, 38, 39, 41, 43, 46, 48, 50, 52, 53, 55, 81, 85, 86, 90, 94, 95, 98, 132, 133, 134, 139, 140, 142, 144, 145, 147, 148, 149, 155, 156, 158, 159, 166, 172, 174, 181, 182, 183, 212, 214, 215, 216, 217, 237, 244, 247, 249, 251, 252, 253, 254, 255, 257, 264, 266, 267, 268, 269, 272, 274, 486, 511, 512, 520, 522, 559, 561, 562, 563, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 587, 589, 590, 592], "whenc": [156, 158, 159], "whenev": [559, 575], "where": [10, 30, 34, 36, 37, 39, 43, 44, 52, 53, 54, 57, 109, 111, 132, 133, 134, 135, 139, 164, 170, 172, 177, 178, 214, 236, 237, 243, 244, 251, 252, 486, 515, 522, 559, 561, 570, 571, 572, 580, 583, 584, 585, 587], "wherev": 45, "whether": [29, 39, 43, 83, 103, 129, 132, 133, 134, 149, 271, 486, 515, 518, 522, 524, 559, 562, 565, 570, 572, 577, 582, 583, 589], "which": [1, 6, 20, 23, 24, 25, 26, 30, 34, 36, 37, 39, 41, 43, 45, 46, 48, 51, 53, 54, 55, 78, 79, 85, 110, 129, 132, 133, 134, 160, 163, 165, 170, 172, 183, 196, 212, 218, 237, 244, 249, 257, 258, 266, 269, 486, 511, 512, 514, 515, 522, 559, 560, 563, 565, 567, 575, 580, 583, 584, 585, 586, 587, 589, 590, 592], "whichev": 244, "while": [10, 26, 27, 37, 38, 39, 53, 57, 129, 132, 133, 134, 183, 212, 237, 244, 247, 249, 264, 266, 523, 559, 571, 572, 577, 580, 583, 587, 589], "white": [36, 37, 38, 559, 567], "whitespac": [486, 522], "whl": 589, "who": [30, 34, 559, 565, 566], "whole": [24, 26, 160, 206, 236, 243, 260, 559, 580, 590], "whose": [113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 237, 247, 249, 264, 266, 271, 486, 515, 516, 518, 519, 520, 522, 523, 583], "why": [38, 590], "widget": [0, 51], "width": [2, 8, 20, 129, 216, 217, 254, 255, 486, 522, 585], "window": [0, 2, 8, 20, 26, 27, 44, 49, 216, 217, 254, 255, 559, 560, 568, 572, 578, 583, 584, 585, 589], "windowcent": 585, "windowwidth": 585, "winter": [213, 250], "wip": [583, 584], "wise": 515, "wish": [25, 26, 36, 44, 267], "with_traceback": 155, "within": [24, 26, 27, 28, 30, 34, 37, 81, 90, 132, 133, 134, 162, 163, 171, 172, 183, 274, 486, 522, 534, 559, 575, 587, 589, 592], "without": [10, 36, 43, 47, 48, 54, 107, 132, 133, 134, 155, 165, 178, 257, 269, 515, 525, 536, 538, 539, 559, 561, 569, 571, 575, 578, 579, 580, 585, 587, 589, 590], "withoverlai": 70, "witten": [559, 562], "wo": [10, 587], "won": [583, 584, 585, 587], "word": [32, 41, 55, 110, 189, 486, 520, 522, 585], "work": [6, 15, 19, 21, 25, 26, 27, 30, 34, 37, 41, 43, 44, 45, 47, 48, 49, 55, 172, 486, 522, 559, 560, 562, 563, 565, 566, 567, 569, 571, 575, 580, 581, 583, 584, 585, 589, 590, 591, 592], "workflow": [559, 577, 583, 584], "world": [16, 585], "worth": [30, 236, 243], "would": [10, 24, 25, 26, 27, 38, 44, 55, 57, 515, 583, 584, 587, 592], "wrap": [41, 43, 156, 158, 159, 183], "wrapper": [156, 158, 159, 559, 574], "write": [6, 7, 10, 13, 14, 16, 17, 24, 26, 40, 42, 44, 48, 49, 57, 71, 95, 132, 133, 134, 156, 158, 159, 172, 183, 185, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 515, 516, 549, 559, 561, 563, 568, 569, 571, 573, 574, 575, 577, 578, 580, 581, 584, 586, 587, 588], "write_atvalu": 71, "write_da": 71, "write_data_el": 71, "write_dataset": [71, 559, 580], "write_dataset_to_byt": 14, "write_dt": 71, "write_fil": [559, 568, 577, 580], "write_file_meta_info": [71, 183], "write_like_origin": [132, 133, 134, 183, 559, 580], "write_new": [559, 564], "write_numb": 71, "write_number_str": 71, "write_obvalu": 71, "write_owvalu": 71, "write_pn": [71, 559, 569], "write_sequ": 71, "write_sequence_item": 71, "write_str": 71, "write_tag": [156, 158, 159], "write_text": 71, "write_tm": 71, "write_u": [156, 158, 159], "write_ui": 71, "write_ul": [156, 158, 159], "write_un": 71, "writeabl": [132, 133, 134, 183, 209, 237, 247, 249, 264, 266, 559, 580], "writeablebuff": [132, 133, 134, 156, 158, 159, 183], "writer": 90, "writing_validation_mod": [44, 57, 80, 559, 578], "written": [12, 24, 26, 32, 44, 45, 50, 52, 53, 132, 133, 134, 156, 158, 159, 172, 183, 195, 196, 559, 571, 572, 580, 583, 585, 587], "wrong": [559, 570, 571, 575, 579], "wrote": 55, "wxpython": [49, 559, 562], "x": [2, 3, 8, 9, 20, 26, 27, 28, 36, 41, 486, 511, 515, 522, 559, 571, 583, 585, 590, 592], "x00": [2, 8, 12, 16, 20, 26, 27, 28, 37, 43, 48, 52, 585], "x00t": 585, "x01": [2, 8, 12, 20, 26, 27, 28, 43, 48, 53, 585], "x02": 53, "x03": 53, "x04": [8, 53], "x08": 585, "x18": 585, "x5e": 22, "x7f": 53, "x89": 53, "x8b": 22, "x8e": 22, "x8f": 22, "x94": 53, "x9d": 22, "x_unit": 3, "xa1": 22, "xab": 22, "xb0": 22, "xb1": 22, "xb6": 22, "xcb": 53, "xcd": 22, "xd0": 22, "xe5": 22, "xe6": 22, "xe7": 22, "xeb": 53, "xf5": 22, "xf9": 53, "xfb": 53, "xfe": 8, "xff": 37, "xiaodong": 22, "xm": [20, 26, 28], "xmlcharrefreplac": [486, 522], "xr": [10, 587], "xraytubecurr": 584, "xxx": 55, "xxxxxx": 172, "y": [12, 41, 259, 486, 515, 522], "y_unit": 3, "yamada": 22, "yaroslav": [559, 567], "ybr": [38, 53, 559, 577], "ybr_full": [30, 34, 36, 37, 38, 39, 53, 209, 211, 219, 237, 244, 247, 249, 256, 259, 264, 266, 559, 572, 578], "ybr_full_422": [29, 39, 53, 209, 211, 219, 237, 247, 249, 256, 259, 264, 266, 559, 572, 578], "ybr_ict": [36, 39, 211], "ybr_partial_420": 39, "ybr_rct": [36, 39, 46, 211, 590], "ycbcr": [29, 36, 37, 38, 39, 207, 208, 209, 210, 211, 212, 237, 247, 249, 264, 266], "year": [513, 517], "yet": [585, 591], "yield": [10, 43, 132, 133, 134, 141, 142, 143, 144, 145, 146, 147, 151, 160, 173, 174, 211, 236, 237, 244, 247, 264, 546, 559, 580, 585, 587, 592], "you": [10, 12, 14, 16, 18, 23, 24, 25, 26, 27, 28, 30, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 94, 139, 140, 162, 166, 170, 172, 174, 267, 486, 559, 572, 575, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592], "your": [8, 10, 14, 23, 25, 26, 27, 30, 34, 36, 37, 38, 39, 43, 45, 48, 49, 55, 97, 139, 140, 172, 582, 585, 586, 587, 589, 592], "your_fil": [24, 26, 27, 28], "yourarg": [25, 26], "yourpackag": [25, 26], "yourplan": [24, 26, 27, 28], "yourself": [25, 26, 52, 53], "yourusernam": [583, 584], "yyyi": [23, 513, 517], "z": [20, 90, 174, 175, 559, 580], "zenodo": 23, "zero": [4, 20, 32, 53, 132, 133, 134, 180, 236, 486, 515, 522, 559, 579, 585, 590], "zfill": [486, 522], "zip": [3, 6, 559, 571, 592], "\u03bcv": 592, "\u5409\u6d1e": 520, "\u6d2a": 520, "\uae38\ub3d9": 520, "\ud64d": 520}, "titles": ["Show a dicom file using hierarchical tree", "Image processing", "Downsize MRI image using pydicom", "Decode and plot Waveform Data", "Load CT slices and plot axial, sagittal and coronal images", "Computation times", "General examples", "Input-output", "Format the output of the data set printing", "Read a Dataset and plot Pixel Data", "Read a DICOM File-set", "Read RTPLAN DICOM and list information", "Write DICOM data", "Computation times", "Show working with memory-based dataset", "Metadata processing", "Add items to the private DICOM dictionary", "Anonymize DICOM data", "Working with sequences", "Computation times", "Analyse differences between DICOM files", "Computation times", "Display unicode person names", "Frequently asked questions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">codify</span></code> command", "Extending the CLI", "Command-line Interface Guide", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">show</span></code> command", "Pixel Data Decoder Options", "Pixel Data Decoder Plugins", "Pixel Data Decoding", "Element VRs and Python types", "Encoder Plugins Options", "Pixel Data Encoder Plugins", "Pixel Data Encoding", "JPEG 2000 Encoding", "JPEG-LS Encoding", "RLE Lossless Encoding", "Glossary", "Guides", "Writing documentation", "pydicom documentation", "Core elements in pydicom", "Best Practices", "Introduction to pydicom", "Compressing <em>Pixel Data</em>", "Handling of compressed pixel data", "Private Data Elements", "pydicom User Guide", "Reading and writing DICOM files", "Viewing Images", "Working with Overlay Data", "Working with Pixel Data", "Working with Waveform Data", "Writing DICOM Files", "Character Encoding and Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.charset</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.config</span></code>)", "Getting Included Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.data</span></code>)", "Data Dictionary Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.datadict</span></code>)", "Representation of Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataset</span></code>)", "Representation of Data Elements", "Data Elements (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataelem</span></code>)", "Element Multi-value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.multival</span></code>)", "Sequence Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sequence</span></code>)", "Element Tags (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.tag</span></code>)", "Specialized Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.valuerep</span></code>)", "Element Value Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.values</span></code>)", "Bulk Data Encapsulation Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encaps</span></code>)", "Exceptions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.errors</span></code>)", "Example Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.examples</span></code>)", "Dataset IO", "IO Base Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filebase</span></code>)", "Dataset Reading (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filereader</span></code>)", "IO Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileutil</span></code>)", "Dataset Writing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filewriter</span></code>)", "DICOM File-sets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileset</span></code>)", "pydicom.charset.convert_encodings", "pydicom.charset.decode_bytes", "pydicom.charset.decode_element", "pydicom.charset.encode_string", "pydicom.config.APPLY_J2K_CORRECTIONS", "pydicom.config.DS_decimal", "pydicom.config.DS_numpy", "pydicom.config.IGNORE", "pydicom.config.INVALID_KEYWORD_BEHAVIOR", "pydicom.config.INVALID_KEY_BEHAVIOR", "pydicom.config.RAISE", "pydicom.config.WARN", "pydicom.config.allow_DS_float", "pydicom.config.assume_implicit_vr_switch", "pydicom.config.convert_wrong_length_to_UN", "pydicom.config.data_element_callback", "pydicom.config.data_element_callback_kwargs", "pydicom.config.datetime_conversion", "pydicom.config.debug", "pydicom.config.enforce_valid_values", "pydicom.config.future_behavior", "pydicom.config.pixel_data_handlers", "pydicom.config.reset_data_element_callback", "pydicom.config.settings", "pydicom.config.show_file_meta", "pydicom.config.use_DS_decimal", "pydicom.config.use_DS_numpy", "pydicom.config.use_IS_numpy", "pydicom.data.get_charset_files", "pydicom.data.get_palette_files", "pydicom.data.get_testdata_file", "pydicom.data.get_testdata_files", "pydicom.datadict.add_dict_entries", "pydicom.datadict.add_dict_entry", "pydicom.datadict.add_private_dict_entries", "pydicom.datadict.add_private_dict_entry", "pydicom.datadict.dictionary_VM", "pydicom.datadict.dictionary_VR", "pydicom.datadict.dictionary_description", "pydicom.datadict.dictionary_has_tag", "pydicom.datadict.dictionary_is_retired", "pydicom.datadict.dictionary_keyword", "pydicom.datadict.get_entry", "pydicom.datadict.get_private_entry", "pydicom.datadict.keyword_for_tag", "pydicom.datadict.mask_match", "pydicom.datadict.private_dictionary_VM", "pydicom.datadict.private_dictionary_VR", "pydicom.datadict.private_dictionary_description", "pydicom.datadict.repeater_has_keyword", "pydicom.datadict.repeater_has_tag", "pydicom.datadict.tag_for_keyword", "pydicom.dataelem.DataElement", "pydicom.dataelem.DataElement_from_raw", "pydicom.dataelem.RawDataElement", "pydicom.dataset.Dataset", "pydicom.dataset.FileDataset", "pydicom.dataset.FileMetaDataset", "pydicom.dataset.PrivateBlock", "pydicom.dataset.validate_file_meta", "pydicom.encaps.decode_data_sequence", "pydicom.encaps.defragment_data", "pydicom.encaps.encapsulate", "pydicom.encaps.encapsulate_extended", "pydicom.encaps.fragment_frame", "pydicom.encaps.generate_fragmented_frames", "pydicom.encaps.generate_fragments", "pydicom.encaps.generate_frames", "pydicom.encaps.generate_pixel_data", "pydicom.encaps.generate_pixel_data_fragment", "pydicom.encaps.generate_pixel_data_frame", "pydicom.encaps.get_frame", "pydicom.encaps.get_frame_offsets", "pydicom.encaps.itemize_fragment", "pydicom.encaps.itemize_frame", "pydicom.encaps.parse_basic_offsets", "pydicom.encaps.parse_fragments", "pydicom.encaps.read_item", "pydicom.errors.InvalidDicomError", "pydicom.filebase.DicomBytesIO", "pydicom.filebase.DicomFile", "pydicom.filebase.DicomFileLike", "pydicom.filebase.DicomIO", "pydicom.filereader.data_element_generator", "pydicom.filereader.data_element_offset_to_value", "pydicom.filereader.dcmread", "pydicom.filereader.read_dataset", "pydicom.filereader.read_deferred_data_element", "pydicom.filereader.read_file_meta_info", "pydicom.filereader.read_partial", "pydicom.filereader.read_preamble", "pydicom.filereader.read_sequence", "pydicom.filereader.read_sequence_item", "pydicom.fileset.DIRECTORY_RECORDERS", "pydicom.fileset.FileInstance", "pydicom.fileset.FileSet", "pydicom.fileset.RecordNode", "pydicom.fileset.generate_filename", "pydicom.fileset.is_conformant_file_id", "pydicom.fileutil.absorb_delimiter_item", "pydicom.fileutil.find_bytes", "pydicom.fileutil.find_delimiter", "pydicom.fileutil.length_of_undefined_length", "pydicom.fileutil.read_undefined_length_value", "pydicom.filewriter.correct_ambiguous_vr", "pydicom.filewriter.correct_ambiguous_vr_element", "pydicom.filewriter.dcmwrite", "pydicom.filewriter.multi_string", "pydicom.filewriter.write_ATvalue", "pydicom.filewriter.write_DA", "pydicom.filewriter.write_DT", "pydicom.filewriter.write_OBvalue", "pydicom.filewriter.write_OWvalue", "pydicom.filewriter.write_PN", "pydicom.filewriter.write_TM", "pydicom.filewriter.write_UI", "pydicom.filewriter.write_UN", "pydicom.filewriter.write_data_element", "pydicom.filewriter.write_dataset", "pydicom.filewriter.write_file_meta_info", "pydicom.filewriter.write_number_string", "pydicom.filewriter.write_numbers", "pydicom.filewriter.write_sequence", "pydicom.filewriter.write_sequence_item", "pydicom.filewriter.write_string", "pydicom.filewriter.write_text", "pydicom.misc.is_dicom", "pydicom.misc.size_in_bytes", "pydicom.multival.MultiValue", "pydicom.overlays.numpy_handler", "pydicom.pixel_data_handlers.gdcm_handler", "pydicom.pixel_data_handlers.jpeg_ls_handler", "pydicom.pixel_data_handlers.numpy_handler", "pydicom.pixel_data_handlers.pillow_handler", "pydicom.pixel_data_handlers.pylibjpeg_handler", "pydicom.pixel_data_handlers.rle_handler", "pydicom.pixels.apply_color_lut", "pydicom.pixels.apply_modality_lut", "pydicom.pixels.apply_voi", "pydicom.pixels.apply_voi_lut", "pydicom.pixels.apply_windowing", "pydicom.pixels.as_pixel_options", "pydicom.pixels.convert_color_space", "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.HTJ2KDecoder", "pydicom.pixels.decoders.HTJ2KLosslessDecoder", "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.JPEG2000Decoder", "pydicom.pixels.decoders.JPEG2000LosslessDecoder", "pydicom.pixels.decoders.JPEGBaseline8BitDecoder", "pydicom.pixels.decoders.JPEGExtended12BitDecoder", "pydicom.pixels.decoders.JPEGLSLosslessDecoder", "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", "pydicom.pixels.decoders.JPEGLosslessDecoder", "pydicom.pixels.decoders.JPEGLosslessSV1Decoder", "pydicom.pixels.decoders.RLELosslessDecoder", "pydicom.pixels.decoders.base.DecodeRunner", "pydicom.pixels.decoders.base.Decoder", "pydicom.pixels.encoders.JPEG2000Encoder", "pydicom.pixels.encoders.JPEG2000LosslessEncoder", "pydicom.pixels.encoders.JPEGLSLosslessEncoder", "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", "pydicom.pixels.encoders.RLELosslessEncoder", "pydicom.pixels.encoders.base.EncodeRunner", "pydicom.pixels.encoders.base.Encoder", "pydicom.pixels.get_decoder", "pydicom.pixels.get_encoder", "pydicom.pixels.iter_pixels", "pydicom.pixels.pack_bits", "pydicom.pixels.pixel_array", "pydicom.pixels.processing.apply_color_lut", "pydicom.pixels.processing.apply_modality_lut", "pydicom.pixels.processing.apply_rescale", "pydicom.pixels.processing.apply_voi", "pydicom.pixels.processing.apply_voi_lut", "pydicom.pixels.processing.apply_windowing", "pydicom.pixels.processing.convert_color_space", "pydicom.pixels.unpack_bits", "pydicom.pixels.utils.as_pixel_options", "pydicom.pixels.utils.expand_ybr422", "pydicom.pixels.utils.get_expected_length", "pydicom.pixels.utils.get_image_pixel_ids", "pydicom.pixels.utils.get_j2k_parameters", "pydicom.pixels.utils.get_nr_frames", "pydicom.pixels.utils.iter_pixels", "pydicom.pixels.utils.pack_bits", "pydicom.pixels.utils.pixel_array", "pydicom.pixels.utils.pixel_dtype", "pydicom.pixels.utils.reshape_pixel_array", "pydicom.pixels.utils.unpack_bits", "pydicom.sequence.Sequence", "pydicom.tag.BaseTag", "pydicom.tag.Tag", "pydicom.tag.TupleTag", "pydicom.tag.tag_in_exception", "pydicom.uid.AcquisitionContextSRStorage", "pydicom.uid.AdvancedBlendingPresentationStateStorage", "pydicom.uid.AllTransferSyntaxes", "pydicom.uid.AmbulatoryECGWaveformStorage", "pydicom.uid.ArterialPulseWaveformStorage", "pydicom.uid.AutorefractionMeasurementsStorage", "pydicom.uid.BasicStructuredDisplayStorage", "pydicom.uid.BasicTextSRStorage", "pydicom.uid.BasicVoiceAudioWaveformStorage", "pydicom.uid.BlendingSoftcopyPresentationStateStorage", "pydicom.uid.BodyPositionWaveformStorage", "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "pydicom.uid.BreastTomosynthesisImageStorage", "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "pydicom.uid.CArmPhotonElectronRadiationStorage", "pydicom.uid.CTDefinedProcedureProtocolStorage", "pydicom.uid.CTImageStorage", "pydicom.uid.CTPerformedProcedureProtocolStorage", "pydicom.uid.CardiacElectrophysiologyWaveformStorage", "pydicom.uid.ChestCADSRStorage", "pydicom.uid.ColonCADSRStorage", "pydicom.uid.ColorPaletteStorage", "pydicom.uid.ColorSoftcopyPresentationStateStorage", "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.Comprehensive3DSRStorage", "pydicom.uid.ComprehensiveSRStorage", "pydicom.uid.ComputedRadiographyImageStorage", "pydicom.uid.ConfocalMicroscopyImageStorage", "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "pydicom.uid.ContentAssessmentResultsStorage", "pydicom.uid.CornealTopographyMapStorage", "pydicom.uid.DICOS2DAITStorage", "pydicom.uid.DICOS3DAITStorage", "pydicom.uid.DICOSCTImageStorage", "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "pydicom.uid.DICOSQuadrupoleResonanceStorage", "pydicom.uid.DICOSThreatDetectionReportStorage", "pydicom.uid.DeflatedExplicitVRLittleEndian", "pydicom.uid.DeformableSpatialRegistrationStorage", "pydicom.uid.DermoscopicPhotographyImageStorage", "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "pydicom.uid.DigitalXRayImageStorageForPresentation", "pydicom.uid.DigitalXRayImageStorageForProcessing", "pydicom.uid.EddyCurrentImageStorage", "pydicom.uid.EddyCurrentMultiFrameImageStorage", "pydicom.uid.ElectromyogramWaveformStorage", "pydicom.uid.ElectrooculogramWaveformStorage", "pydicom.uid.EncapsulatedCDAStorage", "pydicom.uid.EncapsulatedMTLStorage", "pydicom.uid.EncapsulatedOBJStorage", "pydicom.uid.EncapsulatedPDFStorage", "pydicom.uid.EncapsulatedSTLStorage", "pydicom.uid.EnhancedCTImageStorage", "pydicom.uid.EnhancedContinuousRTImageStorage", "pydicom.uid.EnhancedMRColorImageStorage", "pydicom.uid.EnhancedMRImageStorage", "pydicom.uid.EnhancedPETImageStorage", "pydicom.uid.EnhancedRTImageStorage", "pydicom.uid.EnhancedSRStorage", "pydicom.uid.EnhancedUSVolumeStorage", "pydicom.uid.EnhancedXAImageStorage", "pydicom.uid.EnhancedXRFImageStorage", "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "pydicom.uid.ExplicitVRBigEndian", "pydicom.uid.ExplicitVRLittleEndian", "pydicom.uid.ExtensibleSRStorage", "pydicom.uid.General32bitECGWaveformStorage", "pydicom.uid.GeneralAudioWaveformStorage", "pydicom.uid.GeneralECGWaveformStorage", "pydicom.uid.GenericImplantTemplateStorage", "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.HEVCM10P51", "pydicom.uid.HEVCMP51", "pydicom.uid.HTJ2K", "pydicom.uid.HTJ2KLossless", "pydicom.uid.HTJ2KLosslessRPCL", "pydicom.uid.HangingProtocolStorage", "pydicom.uid.HemodynamicWaveformStorage", "pydicom.uid.ImplantAssemblyTemplateStorage", "pydicom.uid.ImplantTemplateGroupStorage", "pydicom.uid.ImplantationPlanSRStorage", "pydicom.uid.ImplicitVRLittleEndian", "pydicom.uid.IntraocularLensCalculationsStorage", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pydicom.uid.InventoryStorage", "pydicom.uid.JPEG2000", "pydicom.uid.JPEG2000Lossless", "pydicom.uid.JPEG2000MC", "pydicom.uid.JPEG2000MCLossless", "pydicom.uid.JPEG2000TransferSyntaxes", "pydicom.uid.JPEGBaseline8Bit", "pydicom.uid.JPEGExtended12Bit", "pydicom.uid.JPEGLSLossless", "pydicom.uid.JPEGLSNearLossless", "pydicom.uid.JPEGLSTransferSyntaxes", "pydicom.uid.JPEGLossless", "pydicom.uid.JPEGLosslessSV1", "pydicom.uid.JPEGTransferSyntaxes", "pydicom.uid.JPIPHTJ2KReferenced", "pydicom.uid.JPIPHTJ2KReferencedDeflate", "pydicom.uid.KeratometryMeasurementsStorage", "pydicom.uid.KeyObjectSelectionDocumentStorage", "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "pydicom.uid.LensometryMeasurementsStorage", "pydicom.uid.MPEG2MPHL", "pydicom.uid.MPEG2MPHLF", "pydicom.uid.MPEG2MPML", "pydicom.uid.MPEG2MPMLF", "pydicom.uid.MPEG4HP41", "pydicom.uid.MPEG4HP41BD", "pydicom.uid.MPEG4HP41BDF", "pydicom.uid.MPEG4HP41F", "pydicom.uid.MPEG4HP422D", "pydicom.uid.MPEG4HP422DF", "pydicom.uid.MPEG4HP423D", "pydicom.uid.MPEG4HP423DF", "pydicom.uid.MPEG4HP42STEREO", "pydicom.uid.MPEG4HP42STEREOF", "pydicom.uid.MPEGTransferSyntaxes", "pydicom.uid.MRImageStorage", "pydicom.uid.MRSpectroscopyStorage", "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "pydicom.uid.MammographyCADSRStorage", "pydicom.uid.MediaStorageDirectoryStorage", "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "pydicom.uid.MultichannelRespiratoryWaveformStorage", "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.NuclearMedicineImageStorage", "pydicom.uid.OphthalmicAxialMeasurementsStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pydicom.uid.OphthalmicPhotography16BitImageStorage", "pydicom.uid.OphthalmicPhotography8BitImageStorage", "pydicom.uid.OphthalmicThicknessMapStorage", "pydicom.uid.OphthalmicTomographyImageStorage", "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "pydicom.uid.PYDICOM_ROOT_UID", "pydicom.uid.ParametricMapStorage", "pydicom.uid.PatientRadiationDoseSRStorage", "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "pydicom.uid.PhotoacousticImageStorage", "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "pydicom.uid.PositronEmissionTomographyImageStorage", "pydicom.uid.PrivateTransferSyntaxes", "pydicom.uid.ProcedureLogStorage", "pydicom.uid.ProtocolApprovalStorage", "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "pydicom.uid.RE_VALID_UID", "pydicom.uid.RE_VALID_UID_PREFIX", "pydicom.uid.RLELossless", "pydicom.uid.RLETransferSyntaxes", "pydicom.uid.RTBeamsDeliveryInstructionStorage", "pydicom.uid.RTBeamsTreatmentRecordStorage", "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "pydicom.uid.RTBrachyTreatmentRecordStorage", "pydicom.uid.RTDoseStorage", "pydicom.uid.RTImageStorage", "pydicom.uid.RTIonBeamsTreatmentRecordStorage", "pydicom.uid.RTIonPlanStorage", "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "pydicom.uid.RTPhysicianIntentStorage", "pydicom.uid.RTPlanStorage", "pydicom.uid.RTRadiationRecordSetStorage", "pydicom.uid.RTRadiationSalvageRecordStorage", "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "pydicom.uid.RTRadiationSetStorage", "pydicom.uid.RTSegmentAnnotationStorage", "pydicom.uid.RTStructureSetStorage", "pydicom.uid.RTTreatmentPreparationStorage", "pydicom.uid.RTTreatmentSummaryRecordStorage", "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "pydicom.uid.RawDataStorage", "pydicom.uid.RealWorldValueMappingStorage", "pydicom.uid.RespiratoryWaveformStorage", "pydicom.uid.RoboticArmRadiationStorage", "pydicom.uid.RoboticRadiationRecordStorage", "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "pydicom.uid.SMPTEST211030PCMDigitalAudio", "pydicom.uid.SecondaryCaptureImageStorage", "pydicom.uid.SegmentationStorage", "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.SimplifiedAdultEchoSRStorage", "pydicom.uid.SleepElectroencephalogramWaveformStorage", "pydicom.uid.SpatialFiducialsStorage", "pydicom.uid.SpatialRegistrationStorage", "pydicom.uid.SpectaclePrescriptionReportStorage", "pydicom.uid.StereometricRelationshipStorage", "pydicom.uid.SubjectiveRefractionMeasurementsStorage", "pydicom.uid.SurfaceScanMeshStorage", "pydicom.uid.SurfaceScanPointCloudStorage", "pydicom.uid.SurfaceSegmentationStorage", "pydicom.uid.TomotherapeuticRadiationRecordStorage", "pydicom.uid.TomotherapeuticRadiationStorage", "pydicom.uid.TractographyResultsStorage", "pydicom.uid.TwelveLeadECGWaveformStorage", "pydicom.uid.UID", "pydicom.uid.UltrasoundImageStorage", "pydicom.uid.UltrasoundMultiFrameImageStorage", "pydicom.uid.UncompressedTransferSyntaxes", "pydicom.uid.VLEndoscopicImageStorage", "pydicom.uid.VLMicroscopicImageStorage", "pydicom.uid.VLPhotographicImageStorage", "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "pydicom.uid.VLWholeSlideMicroscopyImageStorage", "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "pydicom.uid.VideoEndoscopicImageStorage", "pydicom.uid.VideoMicroscopicImageStorage", "pydicom.uid.VideoPhotographicImageStorage", "pydicom.uid.VisualAcuityMeasurementsStorage", "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pydicom.uid.XADefinedProcedureProtocolStorage", "pydicom.uid.XAPerformedProcedureProtocolStorage", "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.XRay3DAngiographicImageStorage", "pydicom.uid.XRay3DCraniofacialImageStorage", "pydicom.uid.XRayAngiographicImageStorage", "pydicom.uid.XRayRadiationDoseSRStorage", "pydicom.uid.XRayRadiofluoroscopicImageStorage", "pydicom.uid.generate_uid", "pydicom.uid.register_transfer_syntax", "pydicom.valuerep.DA", "pydicom.valuerep.DS", "pydicom.valuerep.DSdecimal", "pydicom.valuerep.DSfloat", "pydicom.valuerep.DT", "pydicom.valuerep.IS", "pydicom.valuerep.ISfloat", "pydicom.valuerep.PersonName", "pydicom.valuerep.TM", "pydicom.valuerep.VR", "pydicom.valuerep.format_number_as_ds", "pydicom.valuerep.is_valid_ds", "pydicom.values.convert_AE_string", "pydicom.values.convert_ATvalue", "pydicom.values.convert_DA_string", "pydicom.values.convert_DS_string", "pydicom.values.convert_DT_string", "pydicom.values.convert_IS_string", "pydicom.values.convert_OBvalue", "pydicom.values.convert_OWvalue", "pydicom.values.convert_PN", "pydicom.values.convert_SQ", "pydicom.values.convert_TM_string", "pydicom.values.convert_UI", "pydicom.values.convert_UN", "pydicom.values.convert_UR_string", "pydicom.values.convert_numbers", "pydicom.values.convert_single_string", "pydicom.values.convert_string", "pydicom.values.convert_tag", "pydicom.values.convert_text", "pydicom.values.convert_value", "pydicom.values.multi_string", "pydicom.waveforms.numpy_handler", "Bulk Data Handlers", "Pixel Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixel_data_handlers</span></code>)", "API Reference", "Miscellaneous (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.misc</span></code>)", "Overlay Data Handling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.overlays</span></code>)", "Pixel Data (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels</span></code>)", "Pixel Data Decoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.decoders</span></code>)", "Pixel Data Encoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.encoders</span></code>)", "Pixel Data Processing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.processing</span></code>)", "Pixel Data Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.utils</span></code>)", "UID Definitions and Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.uid</span></code>)", "Waveform Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.waveforms</span></code>)", "Release notes", "Version 0.9.2", "Version 0.9.3", "Version 0.9.4", "Version 0.9.5", "Version 0.9.6", "Version 0.9.7", "Version 0.9.8", "Version 0.9.9", "Version 1.0.0", "Version 1.1.0", "Version 1.2.0", "Version 1.3.0", "Version 1.4.0", "Version 1.4.1", "Version 2.0.0", "Version 2.1.0", "Version 2.1.1", "Version 2.2.0", "Version 2.3.0", "Version 2.4.0", "Version 3.0.0", "Computation times", "Contributing to pydicom", "Contributing a source code change", "Contributing a documentation change", "Dataset basics: read, access, modify, write", "Introduction to JSON support", "DICOM File-sets and DICOMDIR", "Tutorials", "How to install pydicom", "Compressing <em>Pixel Data</em>", "Structured Reporting", "Waveforms"], "titleterms": {"": 23, "0": [559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580], "1": [559, 568, 569, 570, 571, 572, 573, 575, 576], "2": [559, 560, 570, 574, 575, 576, 577, 578, 579], "2000": 36, "3": [559, 561, 571, 578, 580], "4": [559, 562, 572, 573, 579], "5": [559, 563], "6": [559, 564], "7": [559, 565], "8": [559, 566], "9": [559, 560, 561, 562, 563, 564, 565, 566, 567], "A": [24, 26], "Near": 37, "The": 587, "absorb_delimiter_item": 176, "access": 585, "acquisitioncontextsrstorag": 275, "ad": [30, 34, 48, 585, 587], "add": 16, "add_dict_entri": [109, 110], "add_private_dict_entri": [111, 112], "addit": [559, 562], "advancedblendingpresentationstatestorag": 276, "all": 48, "allow_ds_float": 89, "alltransfersyntax": 277, "ambulatoryecgwaveformstorag": 278, "an": 34, "analys": 20, "ani": 585, "anonym": 17, "api": [42, 549], "appli": 587, "apply_color_lut": [213, 250], "apply_j2k_correct": 81, "apply_modality_lut": [214, 251], "apply_rescal": 252, "apply_voi": [215, 253], "apply_voi_lut": [216, 254], "apply_window": [217, 255], "ar": 23, "arterialpulsewaveformstorag": 279, "as_pixel_opt": [218, 258], "ask": 23, "assume_implicit_vr_switch": 90, "autorefractionmeasurementsstorag": 280, "avail": [36, 37, 38], "axial": 4, "base": [14, 72, 236, 237, 243, 244], "basetag": 271, "basic": 585, "basicstructureddisplaystorag": 281, "basictextsrstorag": 282, "basicvoiceaudiowaveformstorag": 283, "best": 44, "between": 20, "binari": 586, "bit": 36, "blendingsoftcopypresentationstatestorag": 284, "bodypositionwaveformstorag": 285, "branch": [583, 584], "breastprojectionxrayimagestorageforpresent": 286, "breastprojectionxrayimagestorageforprocess": 287, "breasttomosynthesisimagestorag": 288, "bug": [559, 560, 561, 562, 564, 565, 566], "build": 584, "bulk": [68, 547], "can": 23, "cardiacelectrophysiologywaveformstorag": 294, "carmphotonelectronradiationrecordstorag": 289, "carmphotonelectronradiationstorag": 290, "categori": 585, "chang": [559, 560, 561, 562, 564, 565, 566, 567, 568, 570, 571, 572, 573, 575, 577, 578, 579, 580, 583, 584, 587], "changelog": [559, 574], "charact": 56, "charset": [56, 77, 78, 79, 80], "chestcadsrstorag": 295, "cite": 23, "class": [72, 557], "cli": [25, 26, 27], "code": [44, 583], "codifi": [24, 26, 55], "coloncadsrstorag": 296, "color": 53, "colorpalettestorag": 297, "colorsoftcopypresentationstatestorag": 298, "combin": [26, 27], "command": [24, 26, 28], "commit": [583, 584], "compositingplanarmprvolumetricpresentationstatestorag": 299, "comprehensive3dsrstorag": 300, "comprehensivesrstorag": 301, "compress": [46, 47, 590], "comput": [5, 13, 19, 21, 581], "computedradiographyimagestorag": 302, "conclus": 587, "conda": 589, "config": [57, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "configur": [37, 57], "confocalmicroscopyimagestorag": 303, "confocalmicroscopytiledpyramidalimagestorag": 304, "contentassessmentresultsstorag": 305, "contrib": [559, 563, 566, 567], "contribut": [582, 583, 584], "contributor": [559, 567], "convert": 586, "convert_ae_str": 525, "convert_atvalu": 526, "convert_color_spac": [219, 256], "convert_da_str": 527, "convert_ds_str": 528, "convert_dt_str": 529, "convert_encod": 77, "convert_is_str": 530, "convert_numb": 539, "convert_obvalu": 531, "convert_owvalu": 532, "convert_pn": 533, "convert_single_str": 540, "convert_sq": 534, "convert_str": 541, "convert_tag": 542, "convert_text": 543, "convert_tm_str": 535, "convert_ui": 536, "convert_un": 537, "convert_ur_str": 538, "convert_valu": 544, "convert_wrong_length_to_un": 91, "core": 43, "cornealtopographymapstorag": 306, "coron": 4, "correct_ambiguous_vr": 181, "correct_ambiguous_vr_el": 182, "creat": [68, 583, 584, 586, 587], "ct": 4, "ctdefinedprocedureprotocolstorag": 291, "ctimagestorag": 292, "ctperformedprocedureprotocolstorag": 293, "current": 583, "d": 514, "da": 513, "data": [3, 8, 9, 12, 17, 29, 30, 31, 34, 35, 46, 47, 48, 52, 53, 54, 58, 59, 61, 62, 68, 105, 106, 107, 108, 547, 548, 551, 552, 553, 554, 555, 556, 558, 586, 590, 592], "data_element_callback": 92, "data_element_callback_kwarg": 93, "data_element_gener": 160, "data_element_offset_to_valu": 161, "datadict": [59, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "datael": [43, 129], "dataelem": [62, 129, 130, 131], "dataelement_from_raw": 130, "dataset": [9, 14, 43, 46, 52, 53, 54, 58, 60, 70, 71, 73, 75, 132, 133, 134, 135, 136, 585, 586], "datetime_convers": 94, "dcmread": 162, "dcmwrite": 183, "debug": 95, "decod": [3, 29, 30, 31, 56, 67, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 553, 592], "decode_byt": 78, "decode_data_sequ": 137, "decode_el": 79, "decoderunn": 236, "definit": 557, "deflatedexplicitvrlittleendian": 314, "deflatedexplicitvrlittleendiandecod": 220, "deformablespatialregistrationstorag": 315, "defragment_data": 138, "delet": 585, "deprec": [559, 580], "dermoscopicphotographyimagestorag": 316, "develop": 589, "dicom": [0, 10, 11, 12, 16, 17, 20, 24, 26, 44, 48, 50, 55, 59, 76, 587, 589, 592], "dicombytesio": 156, "dicomdir": 587, "dicomfil": 157, "dicomfilelik": 158, "dicomio": 159, "dicos2daitstorag": 307, "dicos3daitstorag": 308, "dicosctimagestorag": 309, "dicosdigitalxrayimagestorageforpresent": 310, "dicosdigitalxrayimagestorageforprocess": 311, "dicosquadrupoleresonancestorag": 312, "dicosthreatdetectionreportstorag": 313, "dictionari": [16, 48, 59], "dictionary_descript": 115, "dictionary_has_tag": 116, "dictionary_is_retir": 117, "dictionary_keyword": 118, "dictionary_vm": 113, "dictionary_vr": 114, "differ": 20, "digitalintraoralxrayimagestorageforpresent": 317, "digitalintraoralxrayimagestorageforprocess": 318, "digitalmammographyxrayimagestorageforpresent": 319, "digitalmammographyxrayimagestorageforprocess": 320, "digitalxrayimagestorageforpresent": 321, "digitalxrayimagestorageforprocess": 322, "directory_record": 170, "displai": [22, 48], "do": 23, "document": [41, 42, 559, 571, 583, 584], "download": [583, 584, 589], "downsiz": 2, "ds_decim": 82, "ds_numpi": 83, "dsdecim": 515, "dsfloat": 516, "dt": 517, "eddycurrentimagestorag": 323, "eddycurrentmultiframeimagestorag": 324, "electromyogramwaveformstorag": 325, "electrooculogramwaveformstorag": 326, "element": [32, 43, 48, 61, 62, 63, 64, 65, 66, 67, 585], "encap": [68, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "encapsul": [68, 139, 590], "encapsulate_extend": 140, "encapsulatedcdastorag": 327, "encapsulatedmtlstorag": 328, "encapsulatedobjstorag": 329, "encapsulatedpdfstorag": 330, "encapsulatedstlstorag": 331, "encod": [33, 34, 35, 36, 37, 38, 56, 238, 239, 240, 241, 242, 243, 244, 554, 592], "encode_str": 80, "encoderunn": 243, "enforc": 44, "enforce_valid_valu": 96, "enhanc": [559, 560, 561, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580], "enhancedcontinuousrtimagestorag": 333, "enhancedctimagestorag": 332, "enhancedmrcolorimagestorag": 334, "enhancedmrimagestorag": 335, "enhancedpetimagestorag": 336, "enhancedrtimagestorag": 337, "enhancedsrstorag": 338, "enhancedusvolumestorag": 339, "enhancedxaimagestorag": 340, "enhancedxrayradiationdosesrstorag": 342, "enhancedxrfimagestorag": 341, "entri": 48, "error": [69, 155], "exampl": [6, 24, 26, 36, 37, 38, 42, 70, 585, 589], "except": 69, "exist": 587, "expand_ybr422": 259, "explicitvrbigendian": 343, "explicitvrbigendiandecod": 221, "explicitvrlittleendian": 344, "explicitvrlittleendiandecod": 222, "extend": [25, 26], "extensiblesrstorag": 345, "file": [0, 10, 17, 20, 24, 26, 39, 50, 55, 76, 559, 563, 566, 567, 587, 589], "file_meta": 585, "filebas": [72, 156, 157, 158, 159], "filedataset": 133, "fileinst": 171, "filemetadataset": 134, "fileread": [73, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "fileset": [76, 170, 171, 172, 173, 174, 175, 587], "fileutil": [74, 176, 177, 178, 179, 180], "filewrit": [75, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "find_byt": 177, "find_delimit": 178, "fix": [559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580], "format": [8, 586], "format_number_as_d": 523, "fragment_fram": 141, "frequent": 23, "from": [55, 586], "futur": 44, "future_behavior": 97, "gdcm": [33, 589], "gdcm_handler": 207, "gener": [6, 23, 41], "general32bitecgwaveformstorag": 346, "generalaudiowaveformstorag": 347, "generalecgwaveformstorag": 348, "generate_filenam": 174, "generate_frag": 143, "generate_fragmented_fram": 142, "generate_fram": 144, "generate_pixel_data": 145, "generate_pixel_data_frag": 146, "generate_pixel_data_fram": 147, "generate_uid": 511, "genericimplanttemplatestorag": 349, "get": [42, 58, 585], "get_charset_fil": 105, "get_decod": 245, "get_encod": 246, "get_entri": 119, "get_expected_length": 260, "get_fram": 148, "get_frame_offset": 149, "get_image_pixel_id": 261, "get_j2k_paramet": 262, "get_nr_fram": 263, "get_palette_fil": 106, "get_private_entri": 120, "get_testdata_fil": [107, 108], "glossari": 39, "grayscaleplanarmprvolumetricpresentationstatestorag": 350, "grayscalesoftcopypresentationstatestorag": 351, "guid": [26, 40, 42, 49], "guidelin": 41, "handl": [47, 551], "handler": [547, 548, 558], "hangingprotocolstorag": 357, "happen": [583, 584], "hemodynamicwaveformstorag": 358, "hevcm10p51": 352, "hevcmp51": 353, "hierarch": 0, "how": [23, 589], "htj2k": 354, "htj2kdecod": 223, "htj2klossless": 355, "htj2klosslessdecod": 224, "htj2klosslessrpcl": 356, "htj2klosslessrpcldecod": 225, "i": [23, 518], "ignor": 84, "imag": [1, 2, 4, 6, 29, 36, 37, 38, 39, 51], "implantassemblytemplatestorag": 359, "implantationplansrstorag": 361, "implanttemplategroupstorag": 360, "implicitvrlittleendian": 362, "implicitvrlittleendiandecod": 226, "includ": 58, "inform": [11, 39], "infrastructur": [559, 568], "input": [6, 7], "instal": [23, 26, 27, 45, 583, 589], "instanc": 587, "interfac": 26, "intern": [559, 579, 580], "interpret": [36, 37], "intraocularlenscalculationsstorag": 363, "intravascularopticalcoherencetomographyimagestorageforpresent": 364, "intravascularopticalcoherencetomographyimagestorageforprocess": 365, "introduct": [26, 27, 44, 45, 48, 51, 52, 53, 54, 55, 586, 590], "invalid_key_behavior": 86, "invalid_keyword_behavior": 85, "invaliddicomerror": 155, "inventorystorag": 366, "io": [71, 72, 74], "is_conformant_file_id": 175, "is_dicom": 203, "is_valid_d": 524, "isfloat": 519, "item": 16, "itemize_frag": 150, "itemize_fram": 151, "iter_pixel": [247, 264], "jpeg": [36, 37], "jpeg2000": 367, "jpeg2000decod": 227, "jpeg2000encod": 238, "jpeg2000lossless": 368, "jpeg2000losslessdecod": 228, "jpeg2000losslessencod": 239, "jpeg2000mc": 369, "jpeg2000mclossless": 370, "jpeg2000transfersyntax": 371, "jpeg_ls_handl": 208, "jpegbaseline8bit": 372, "jpegbaseline8bitdecod": 229, "jpegextended12bit": 373, "jpegextended12bitdecod": 230, "jpeglossless": 377, "jpeglosslessdecod": 233, "jpeglosslesssv1": 378, "jpeglosslesssv1decod": 234, "jpeglslossless": 374, "jpeglslosslessdecod": 231, "jpeglslosslessencod": 240, "jpeglsnearlossless": 375, "jpeglsnearlosslessdecod": 232, "jpeglsnearlosslessencod": 241, "jpeglstransfersyntax": 376, "jpegtransfersyntax": 379, "jpiphtj2kreferenc": 380, "jpiphtj2kreferenceddefl": 381, "json": 586, "keratometrymeasurementsstorag": 382, "keyobjectselectiondocumentstorag": 383, "keyword_for_tag": 121, "l": 37, "larg": 586, "legacyconvertedenhancedctimagestorag": 384, "legacyconvertedenhancedmrimagestorag": 385, "legacyconvertedenhancedpetimagestorag": 386, "length_of_undefined_length": 179, "lensometrymeasurementsstorag": 387, "librari": [51, 583, 589], "licens": 45, "limit": 44, "line": 26, "list": [11, 557], "load": [4, 587], "lossless": [29, 36, 37, 38], "lut": 53, "maculargridthicknessandvolumereportstorag": 405, "major": [44, 559, 560, 561, 562, 563, 564, 565, 566, 568], "make": [583, 584], "mammographycadsrstorag": 406, "mask_match": 122, "matplotlib": 51, "mediastoragedirectorystorag": 407, "memori": 14, "meta": 39, "metadata": [6, 15], "microscopybulksimpleannotationsstorag": 408, "misc": [203, 204, 550], "miscellan": [29, 550], "modal": 53, "modifi": [585, 587], "modul": [39, 552], "mpeg2mphl": 388, "mpeg2mphlf": 389, "mpeg2mpml": 390, "mpeg2mpmlf": 391, "mpeg4hp41": 392, "mpeg4hp41bd": 393, "mpeg4hp41bdf": 394, "mpeg4hp41f": 395, "mpeg4hp422d": 396, "mpeg4hp422df": 397, "mpeg4hp423d": 398, "mpeg4hp423df": 399, "mpeg4hp42stereo": 400, "mpeg4hp42stereof": 401, "mpegtransfersyntax": 402, "mri": 2, "mrimagestorag": 403, "mrspectroscopystorag": 404, "multi": 63, "multi_str": [184, 545], "multichannelrespiratorywaveformstorag": 413, "multiframegrayscalebytesecondarycaptureimagestorag": 409, "multiframegrayscalewordsecondarycaptureimagestorag": 410, "multiframesinglebitsecondarycaptureimagestorag": 411, "multiframetruecolorsecondarycaptureimagestorag": 412, "multiplevolumerenderingvolumetricpresentationstatestorag": 414, "multiv": [63, 205], "multivalu": 205, "name": 22, "new": [48, 559, 563, 583, 584, 587], "next": [45, 583, 584, 585], "note": 559, "nuclearmedicineimagestorag": 415, "numpy_handl": [206, 209, 546], "offici": 589, "oper": 53, "ophthalmicaxialmeasurementsstorag": 416, "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorag": 417, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 418, "ophthalmicphotography16bitimagestorag": 419, "ophthalmicphotography8bitimagestorag": 420, "ophthalmicthicknessmapstorag": 421, "ophthalmictomographyimagestorag": 422, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 423, "option": [23, 24, 26, 29, 33, 57, 583, 589], "other": [26, 27, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569], "output": [6, 7, 8], "overlai": [52, 206, 551], "overlay_arrai": 52, "pack_bit": [248, 265], "packag": [44, 46, 590], "palett": 53, "paramet": [36, 37, 38], "parametricmapstorag": 426, "pars": [50, 68], "parse_basic_offset": 152, "parse_frag": 153, "part": [24, 26], "parti": [46, 590], "path": 585, "patientradiationdosesrstorag": 427, "performedimagingagentadministrationsrstorag": 428, "person": 22, "personnam": 520, "photoacousticimagestorag": 429, "photometr": [36, 37], "pil": 51, "pillow": 589, "pillow_handl": 210, "pip": 589, "pixel": [9, 29, 30, 31, 34, 35, 36, 37, 38, 39, 46, 47, 53, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 548, 552, 553, 554, 555, 556, 590], "pixel_arrai": [53, 249, 266], "pixel_data_handl": [98, 207, 208, 209, 210, 211, 212, 548], "pixel_dtyp": 267, "planar": 37, "plannedimagingagentadministrationsrstorag": 430, "plot": [3, 4, 9], "plugin": [29, 30, 33, 34, 36, 37, 38], "positronemissiontomographyimagestorag": 431, "practic": 44, "precondit": 47, "prerequisit": 23, "preview": [583, 584], "print": 8, "privat": [16, 48, 59], "private_dictionary_descript": 125, "private_dictionary_vm": 123, "private_dictionary_vr": 124, "privateblock": 135, "privatetransfersyntax": 432, "procedurelogstorag": 433, "process": [1, 6, 15, 29, 250, 251, 252, 253, 254, 255, 256, 555], "proof": 44, "protocolapprovalstorag": 434, "pseudocolorsoftcopypresentationstatestorag": 435, "pull": [583, 584], "pydicom": [2, 23, 24, 26, 27, 28, 33, 42, 43, 44, 45, 46, 48, 49, 51, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 579, 580, 582, 589, 590], "pydicom_implementation_uid": 424, "pydicom_root_uid": 425, "pyjpegl": [33, 589], "pylibjpeg": [33, 36, 589], "pylibjpeg_handl": 211, "pytest": 583, "python": [23, 32, 51], "question": 23, "radiopharmaceuticalradiationdosesrstorag": 459, "rais": 87, "rawdatael": 131, "rawdatastorag": 460, "re_valid_uid": 436, "re_valid_uid_prefix": 437, "read": [9, 10, 11, 50, 73, 585], "read_dataset": 163, "read_deferred_data_el": 164, "read_file_meta_info": 165, "read_item": 154, "read_parti": 166, "read_preambl": 167, "read_sequ": 168, "read_sequence_item": 169, "read_undefined_length_valu": 180, "realworldvaluemappingstorag": 461, "recordnod": 173, "refer": [42, 549], "register_transfer_syntax": 512, "releas": [559, 563, 589], "remov": [48, 559, 580, 587], "repeater_has_keyword": 126, "repeater_has_tag": 127, "report": 591, "represent": [37, 60, 61, 63, 64, 66], "request": [583, 584], "requir": [23, 30, 34, 583], "rescal": 53, "reset_data_element_callback": 99, "reshape_pixel_arrai": 268, "respiratorywaveformstorag": 462, "restructuredtext": 41, "rle": [29, 38], "rle_handl": 212, "rlelossless": 438, "rlelosslessdecod": 235, "rlelosslessencod": 242, "rletransfersyntax": 439, "roboticarmradiationstorag": 463, "roboticradiationrecordstorag": 464, "routinescalpelectroencephalogramwaveformstorag": 465, "rtbeamsdeliveryinstructionstorag": 440, "rtbeamstreatmentrecordstorag": 441, "rtbrachyapplicationsetupdeliveryinstructionstorag": 442, "rtbrachytreatmentrecordstorag": 443, "rtdosestorag": 444, "rtimagestorag": 445, "rtionbeamstreatmentrecordstorag": 446, "rtionplanstorag": 447, "rtpatientpositionacquisitioninstructionstorag": 448, "rtphysicianintentstorag": 449, "rtplan": 11, "rtplanstorag": 450, "rtradiationrecordsetstorag": 451, "rtradiationsalvagerecordstorag": 452, "rtradiationsetdeliveryinstructionstorag": 453, "rtradiationsetstorag": 454, "rtsegmentannotationstorag": 455, "rtstructuresetstorag": 456, "rttreatmentpreparationstorag": 457, "rttreatmentsummaryrecordstorag": 458, "run": 583, "sagitt": 4, "scratch": 55, "secondarycaptureimagestorag": 469, "segmentationstorag": 470, "segmentedvolumerenderingvolumetricpresentationstatestorag": 471, "sequenc": [18, 43, 64, 270, 585], "set": [8, 10, 48, 76, 100, 587], "show": [0, 14, 26, 28], "show_file_meta": 101, "simpl": [24, 26], "simplifiedadultechosrstorag": 472, "singl": 17, "size_in_byt": 204, "sleepelectroencephalogramwaveformstorag": 473, "slice": 4, "smptest211020uncompressedinterlacedactivevideo": 466, "smptest211020uncompressedprogressiveactivevideo": 467, "smptest211030pcmdigitalaudio": 468, "sop": [557, 587], "sourc": 583, "space": 53, "spatialfiducialsstorag": 474, "spatialregistrationstorag": 475, "special": 66, "spectacleprescriptionreportstorag": 476, "stage": 587, "standard": 585, "start": 42, "step": [45, 585], "stereometricrelationshipstorag": 477, "storag": 557, "store": 36, "structur": 591, "style": 41, "sub": 552, "subjectiverefractionmeasurementsstorag": 478, "suit": 583, "support": [45, 46, 47, 586], "surfacescanmeshstorag": 479, "surfacescanpointcloudstorag": 480, "surfacesegmentationstorag": 481, "syntax": [46, 47, 557], "tag": [43, 65, 271, 272, 273, 274], "tag_for_keyword": 128, "tag_in_except": 274, "test": [583, 589], "thi": [559, 562, 563], "third": [46, 590], "time": [5, 13, 19, 21, 581], "tkinter": 51, "tm": 521, "tomotherapeuticradiationrecordstorag": 482, "tomotherapeuticradiationstorag": 483, "tractographyresultsstorag": 484, "transfer": [46, 47, 557], "tree": 0, "tupletag": 273, "tutori": 588, "twelveleadecgwaveformstorag": 485, "type": [32, 41], "uid": [275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 557], "ultrasoundimagestorag": 487, "ultrasoundmultiframeimagestorag": 488, "uncompressedtransfersyntax": 489, "unicod": 22, "unpack_bit": [257, 269], "us": [0, 2, 23, 45, 46, 51, 55, 589, 590], "usag": [47, 70], "use_ds_decim": 102, "use_ds_numpi": 103, "use_is_numpi": 104, "user": [42, 49], "util": [59, 68, 74, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 556, 557], "valid": [36, 37, 38, 44], "validate_file_meta": 136, "valu": [63, 64, 66, 67, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545], "valuerep": [66, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524], "variablemodalitylutsoftcopypresentationstatestorag": 495, "version": [23, 44, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 589], "videoendoscopicimagestorag": 496, "videomicroscopicimagestorag": 497, "videophotographicimagestorag": 498, "view": [51, 585], "visualacuitymeasurementsstorag": 499, "vlendoscopicimagestorag": 490, "vlmicroscopicimagestorag": 491, "vlphotographicimagestorag": 492, "vlslidecoordinatesmicroscopicimagestorag": 493, "vlwholeslidemicroscopyimagestorag": 494, "voi": 53, "volumerenderingvolumetricpresentationstatestorag": 500, "vr": [32, 522], "warn": 88, "waveform": [3, 54, 546, 558, 592], "waveform_arrai": 54, "what": [23, 583, 584], "widefieldophthalmicphotography3dcoordinatesimagestorag": 501, "widefieldophthalmicphotographystereographicprojectionimagestorag": 502, "window": 53, "work": [14, 18, 52, 53, 54, 586], "write": [12, 41, 50, 55, 75, 583, 585], "write_atvalu": 185, "write_da": 186, "write_data_el": 194, "write_dataset": 195, "write_dt": 187, "write_file_meta_info": 196, "write_numb": 198, "write_number_str": 197, "write_obvalu": 188, "write_owvalu": 189, "write_pn": 190, "write_sequ": 199, "write_sequence_item": 200, "write_str": 201, "write_text": 202, "write_tm": 191, "write_ui": 192, "write_un": 193, "wxpython": 51, "xadefinedprocedureprotocolstorag": 503, "xaperformedprocedureprotocolstorag": 504, "xaxrfgrayscalesoftcopypresentationstatestorag": 505, "xray3dangiographicimagestorag": 506, "xray3dcraniofacialimagestorag": 507, "xrayangiographicimagestorag": 508, "xrayradiationdosesrstorag": 509, "xrayradiofluoroscopicimagestorag": 510, "your": [44, 583, 584]}})