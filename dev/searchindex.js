Search.setIndex({"alltitles": {"(Optional) Install required libraries": [[594, "optional-install-required-libraries"]], "A simple example": [[24, "a-simple-example"], [26, "a-simple-example"]], "API Reference": [[54, "api-reference"], [559, "api-reference"]], "Add items to the private DICOM dictionary": [[16, "add-items-to-the-private-dicom-dictionary"]], "Adding Plugins to a Decoder": [[30, "adding-plugins-to-a-decoder"]], "Adding Plugins to an Encoder": [[34, "adding-plugins-to-an-encoder"]], "Adding SOP instances": [[598, "adding-sop-instances"]], "Adding elements": [[596, "adding-elements"]], "Adding new entries to the DICOM dictionary": [[47, "adding-new-entries-to-the-dicom-dictionary"]], "Analyse differences between DICOM files": [[20, "analyse-differences-between-dicom-files"]], "Anonymize DICOM data": [[17, "anonymize-dicom-data"]], "Anonymize a single file": [[17, "anonymize-a-single-file"]], "Any category": [[596, "any-category"]], "Applying the changes": [[598, "applying-the-changes"]], "Available Plugins": [[36, "available-plugins"], [37, "available-plugins"], [38, "available-plugins"]], "Best Practices": [[43, "best-practices"]], "Bits Stored": [[36, "bits-stored"]], "Bug Fixes": [[570, "id44"], [570, "id48"], [571, "bug-fixes"], [572, "bug-fixes"]], "Bug fixes": [[570, "bug-fixes"], [570, "id36"], [570, "id39"], [575, "bug-fixes"], [576, "bug-fixes"], [577, "bug-fixes"]], "Build and preview the documentation": [[595, "build-and-preview-the-documentation"]], "Bulk Data Encapsulation Utilities (pydicom.encaps)": [[67, "module-pydicom.encaps"]], "Bulk Data Handlers": [[557, "bulk-data-handlers"]], "Changelog": [[570, "changelog"], [585, "changelog"]], "Changes": [[570, "changes"], [570, "id1"], [570, "id5"], [570, "id8"], [570, "id13"], [570, "id18"], [570, "id21"], [570, "id22"], [570, "id25"], [581, "changes"], [582, "changes"], [583, "changes"], [584, "changes"], [586, "changes"], [588, "changes"], [589, "changes"], [590, "changes"], [591, "changes"]], "Character Encoding and Decoding (pydicom.charset)": [[55, "character-encoding-and-decoding-pydicom-charset"]], "Codifying a part of a DICOM file": [[24, "codifying-a-part-of-a-dicom-file"], [26, "codifying-a-part-of-a-dicom-file"]], "Color space": [[50, "color-space"]], "Combining with other CLIs": [[26, "combining-with-other-clis"], [27, "combining-with-other-clis"]], "Command options": [[24, "command-options"], [26, "command-options"]], "Command-line Interface Guide": [[26, "command-line-interface-guide"]], "Commit your changes and make a pull request": [[594, "commit-your-changes-and-make-a-pull-request"], [595, "commit-your-changes-and-make-a-pull-request"]], "Compressed transfer syntaxes": [[604, "compressed-transfer-syntaxes"]], "Compressing Pixel Data": [[44, "compressing-pixel-data"]], "Compressing a dataset (with RLE Lossless)": [[601, "compressing-a-dataset-with-rle-lossless"]], "Compressing using pydicom": [[44, "compressing-using-pydicom"]], "Compressing using third-party packages": [[44, "compressing-using-third-party-packages"]], "Compressing with Dataset.compress()": [[44, "compressing-with-dataset-compress"]], "Compressing with JPEG 2000": [[601, "compressing-with-jpeg-2000"]], "Compressing with JPEG-LS": [[601, "compressing-with-jpeg-ls"]], "Compression of Pixel Data": [[601, "compression-of-pixel-data"]], "Computation times": [[5, "computation-times"], [13, "computation-times"], [19, "computation-times"], [21, "computation-times"], [592, "computation-times"]], "Concepts and Context Groups (pydicom.sr)": [[567, "module-pydicom.sr"]], "Conclusion": [[598, "conclusion"], [601, "conclusion"]], "Conclusion and next steps": [[602, "conclusion-and-next-steps"], [604, "conclusion-and-next-steps"]], "Configuration Options (pydicom.config)": [[56, "configuration-options-pydicom-config"]], "Contrib file changes": [[570, "contrib-file-changes"], [570, "id34"], [577, "contrib-file-changes"], [578, "contrib-file-changes"]], "Contributing a documentation change": [[595, "contributing-a-documentation-change"]], "Contributing a source code change": [[594, "contributing-a-source-code-change"]], "Contributing to pydicom": [[593, "contributing-to-pydicom"]], "Controlling decoding": [[604, "controlling-decoding"]], "Converting a dataset into JSON format": [[597, "converting-a-dataset-into-json-format"]], "Converting to an ndarray": [[604, "converting-to-an-ndarray"]], "Converting to an ndarray with metadata": [[604, "converting-to-an-ndarray-with-metadata"]], "Core elements in pydicom": [[42, "core-elements-in-pydicom"]], "Create a new branch": [[594, "create-a-new-branch"], [595, "create-a-new-branch"]], "Creating Encapsulated Data": [[67, "creating-encapsulated-data"]], "Creating Float Pixel Data and Double Float Pixel Data": [[602, "creating-float-pixel-data-and-double-float-pixel-data"]], "Creating Pixel Data": [[602, "creating-pixel-data"]], "Creating a dataset from JSON": [[597, "creating-a-dataset-from-json"]], "Creating a new File-set": [[598, "creating-a-new-file-set"]], "DICOM Data Dictionary": [[58, "dicom-data-dictionary"]], "DICOM File-sets (pydicom.fileset)": [[75, "dicom-file-sets-pydicom-fileset"]], "DICOM File-sets and DICOMDIR": [[598, "dicom-file-sets-and-dicomdir"]], "Data Dictionary Utilities (pydicom.datadict)": [[58, "data-dictionary-utilities-pydicom-datadict"]], "Data Elements (pydicom.dataelem)": [[61, "data-elements-pydicom-dataelem"]], "DataElement": [[42, "dataelement"]], "Dataset": [[42, "dataset"]], "Dataset IO": [[70, "dataset-io"]], "Dataset Reading (pydicom.filereader)": [[72, "dataset-reading-pydicom-filereader"]], "Dataset Writing (pydicom.filewriter)": [[74, "dataset-writing-pydicom-filewriter"]], "Dataset basics: read, access, modify, write": [[596, "dataset-basics-read-access-modify-write"]], "Dataset.overlay_array()": [[49, "dataset-overlay-array"]], "Dataset.pixel_array": [[50, "dataset-pixel-array"]], "Dataset.waveform_array()": [[51, "dataset-waveform-array"]], "Decode and plot Waveform Data": [[3, "decode-and-plot-waveform-data"]], "Decoding Plugin Options": [[29, "decoding-plugin-options"]], "Decoding Waveform Data": [[606, "decoding-waveform-data"]], "Decompression of Pixel Data": [[601, "decompression-of-pixel-data"]], "Deleting elements": [[596, "deleting-elements"]], "Deprecations": [[570, "deprecations"], [591, "deprecations"]], "Display unicode person names": [[22, "display-unicode-person-names"]], "Displaying Private Data Elements in pydicom": [[47, "displaying-private-data-elements-in-pydicom"]], "Documentation": [[570, "documentation"], [582, "documentation"]], "Download the current source code": [[594, "download-the-current-source-code"]], "Download the documentation": [[595, "download-the-documentation"]], "Downloading example/test DICOM files": [[600, "downloading-example-test-dicom-files"]], "Downsize MRI image using pydicom": [[2, "downsize-mri-image-using-pydicom"]], "Element Multi-value Representation (pydicom.multival)": [[62, "element-multi-value-representation-pydicom-multival"]], "Element Tags (pydicom.tag)": [[64, "element-tags-pydicom-tag"]], "Element VRs and Python types": [[32, "element-vrs-and-python-types"]], "Element Value Decoding (pydicom.values)": [[66, "element-value-decoding-pydicom-values"]], "Elements": [[596, "elements"]], "Encapsulating data compressed by third-party packages": [[601, "encapsulating-data-compressed-by-third-party-packages"]], "Encoder Plugins Options": [[33, "encoder-plugins-options"]], "Encoding Waveform Data": [[606, "encoding-waveform-data"]], "Enforcing Valid DICOM": [[43, "enforcing-valid-dicom"]], "Enhancements": [[570, "enhancements"], [570, "id2"], [570, "id6"], [570, "id9"], [570, "id12"], [570, "id15"], [570, "id20"], [570, "id23"], [570, "id26"], [570, "id28"], [570, "id31"], [570, "id33"], [577, "enhancements"], [578, "enhancements"], [580, "enhancements"], [581, "enhancements"], [582, "enhancements"], [583, "enhancements"], [585, "enhancements"], [586, "enhancements"], [588, "enhancements"], [589, "enhancements"], [590, "enhancements"], [591, "enhancements"]], "Example Datasets (pydicom.examples)": [[69, "module-pydicom.examples"]], "Examples": [[36, "examples"], [37, "examples"], [38, "examples"], [54, "examples"]], "Exceptions (pydicom.errors)": [[68, "exceptions-pydicom-errors"]], "Extending the CLI": [[25, "extending-the-cli"], [26, "extending-the-cli"]], "File Meta Information": [[39, "file-meta-information"]], "FileSet": [[598, "fileset"]], "FileSet and staging": [[598, "fileset-and-staging"]], "Fixes": [[570, "fixes"], [570, "id3"], [570, "id7"], [570, "id10"], [570, "id11"], [570, "id14"], [570, "id16"], [570, "id17"], [570, "id19"], [570, "id24"], [570, "id27"], [570, "id29"], [570, "id30"], [579, "fixes"], [580, "fixes"], [581, "fixes"], [582, "fixes"], [583, "fixes"], [584, "fixes"], [585, "fixes"], [586, "fixes"], [587, "fixes"], [588, "fixes"], [589, "fixes"], [590, "fixes"], [591, "fixes"]], "Format the output of the data set printing": [[8, "format-the-output-of-the-data-set-printing"]], "Frequently asked questions": [[23, "frequently-asked-questions"]], "Future-proofing your code": [[43, "future-proofing-your-code"]], "General": [[23, "general"]], "General examples": [[6, "general-examples"]], "General style guidelines": [[53, "general-style-guidelines"]], "Getting Included Datasets (pydicom.data)": [[57, "getting-included-datasets-pydicom-data"]], "Getting Started": [[54, "getting-started"]], "Getting the path to the example dataset": [[596, "getting-the-path-to-the-example-dataset"]], "Glossary": [[39, "glossary"]], "Grayscale with 12-bit signed integers": [[602, "grayscale-with-12-bit-signed-integers"]], "Grayscale with 8-bit unsigned integers": [[602, "grayscale-with-8-bit-unsigned-integers"]], "Guidelines for reStructuredText": [[53, "guidelines-for-restructuredtext"]], "Guides": [[40, "guides"]], "Handling of compressed pixel data": [[45, "handling-of-compressed-pixel-data"]], "How do I cite pydicom?": [[23, "how-do-i-cite-pydicom"]], "How to install pydicom": [[600, "how-to-install-pydicom"]], "IO Base Classes (pydicom.filebase)": [[71, "io-base-classes-pydicom-filebase"]], "IO Utilities (pydicom.fileutil)": [[73, "io-utilities-pydicom-fileutil"]], "Image Pixel Module": [[39, "image-pixel-module"]], "Image Pixel Options": [[29, "image-pixel-options"]], "Image Processing Options": [[29, "image-processing-options"]], "Image processing": [[1, "image-processing"], [6, "image-processing"]], "Infrastructure": [[570, "infrastructure"], [579, "infrastructure"]], "Input-output": [[6, "input-output"], [7, "input-output"]], "Install pytest and run the test suite": [[594, "install-pytest-and-run-the-test-suite"]], "Install the development version": [[600, "install-the-development-version"]], "Install the official release": [[600, "install-the-official-release"]], "Install the optional libraries": [[600, "install-the-optional-libraries"]], "Install using conda": [[600, "install-using-conda"]], "Install using pip": [[600, "install-using-pip"]], "Installation": [[23, "installation"]], "Installing GDCM": [[600, "installing-gdcm"]], "Installing Pillow": [[600, "installing-pillow"]], "Installing pyjpegls": [[600, "installing-pyjpegls"]], "Installing pylibjpeg": [[600, "installing-pylibjpeg"]], "Installing the pydicom CLI": [[26, "installing-the-pydicom-cli"], [27, "installing-the-pydicom-cli"]], "Introduction": [[26, "introduction"], [27, "introduction"], [43, "introduction"], [47, "introduction"], [48, "introduction"], [49, "introduction"], [50, "introduction"], [51, "introduction"], [52, "introduction"], [604, "introduction"]], "Introduction to JSON support": [[597, "introduction-to-json-support"]], "JPEG 2000": [[36, "jpeg-2000"]], "JPEG 2000 Encoding": [[36, "jpeg-2000-encoding"]], "JPEG 2000 Lossless": [[36, "jpeg-2000-lossless"]], "JPEG-LS Encoding": [[37, "jpeg-ls-encoding"]], "JPEG-LS Lossless": [[37, "jpeg-ls-lossless"]], "JPEG-LS Near-lossless": [[37, "jpeg-ls-near-lossless"]], "Limiting the pydicom major version in your package": [[43, "limiting-the-pydicom-major-version-in-your-package"]], "Load CT slices and plot axial, sagittal and coronal images": [[4, "load-ct-slices-and-plot-axial-sagittal-and-coronal-images"]], "Loading existing File-sets": [[598, "loading-existing-file-sets"]], "Major changes": [[570, "major-changes"], [570, "id32"], [570, "id35"], [570, "id38"], [570, "id42"], [570, "id46"], [571, "major-changes"], [572, "major-changes"], [575, "major-changes"], [576, "major-changes"], [577, "major-changes"], [579, "major-changes"]], "Major changes/additions in this version": [[570, "major-changes-additions-in-this-version"], [573, "major-changes-additions-in-this-version"]], "Major fixes in this release": [[570, "major-fixes-in-this-release"], [574, "major-fixes-in-this-release"]], "Make a change to the documentation": [[595, "make-a-change-to-the-documentation"]], "Make a code change and document it": [[594, "make-a-code-change-and-document-it"]], "Metadata processing": [[6, "metadata-processing"], [15, "metadata-processing"]], "Minimizing memory usage": [[604, "minimizing-memory-usage"]], "Miscellaneous (pydicom.misc)": [[560, "miscellaneous-pydicom-misc"]], "Miscellaneous Options": [[29, "miscellaneous-options"]], "Modality LUT or Rescale Operation": [[50, "modality-lut-or-rescale-operation"]], "Modifying": [[596, "modifying"]], "Modifying a File-set": [[598, "modifying-a-file-set"]], "Modifying elements": [[596, "modifying-elements"]], "Multi-frame RGB with 8-bit unsigned integers": [[602, "multi-frame-rgb-with-8-bit-unsigned-integers"]], "New \u2018Contrib\u2019 files": [[570, "new-contrib-files"], [574, "new-contrib-files"]], "Next steps": [[596, "next-steps"]], "Optional": [[23, "optional"]], "Other": [[570, "other"], [570, "id40"], [570, "id41"], [570, "id45"], [570, "id49"], [571, "other"], [572, "other"], [574, "other"], [575, "other"], [580, "other"]], "Other Contributors": [[570, "other-contributors"], [578, "other-contributors"]], "Other Enhancements": [[570, "id37"], [570, "id43"], [570, "id47"], [571, "other-enhancements"], [572, "other-enhancements"], [576, "other-enhancements"]], "Other changes and bug fixes": [[570, "other-changes-and-bug-fixes"], [573, "other-changes-and-bug-fixes"]], "Other enhancements": [[570, "other-enhancements"], [579, "other-enhancements"]], "Other fixes in this release": [[570, "other-fixes-in-this-release"], [574, "other-fixes-in-this-release"]], "Overlay Data Handling (pydicom.overlays)": [[561, "overlay-data-handling-pydicom-overlays"]], "Palette Color": [[50, "palette-color"]], "Parsing Encapsulated Data": [[67, "parsing-encapsulated-data"]], "Photometric Interpretation": [[36, "photometric-interpretation"], [37, "photometric-interpretation"]], "Pixel Data": [[603, "pixel-data"]], "Pixel Data (pydicom.pixels)": [[562, "module-pydicom.pixels"]], "Pixel Data - Part 1: Introduction and accessing": [[604, "pixel-data-part-1-introduction-and-accessing"]], "Pixel Data - Part 2: Creation of pixel data": [[602, "pixel-data-part-2-creation-of-pixel-data"]], "Pixel Data - Part 3: Compression and decompression": [[601, "pixel-data-part-3-compression-and-decompression"]], "Pixel Data Decoder Options": [[29, "pixel-data-decoder-options"]], "Pixel Data Decoder Plugins": [[30, "pixel-data-decoder-plugins"]], "Pixel Data Decoders (pydicom.pixels.decoders)": [[563, "module-pydicom.pixels.decoders"]], "Pixel Data Decoding": [[31, "pixel-data-decoding"]], "Pixel Data Encoder Plugins": [[34, "pixel-data-encoder-plugins"]], "Pixel Data Encoders (pydicom.pixels.encoders)": [[564, "module-pydicom.pixels.encoders"]], "Pixel Data Encoding": [[35, "pixel-data-encoding"]], "Pixel Data Handlers (pydicom.pixel_data_handlers)": [[558, "pixel-data-handlers-pydicom-pixel-data-handlers"]], "Pixel Data Processing (pydicom.pixels.processing)": [[565, "pixel-data-processing-pydicom-pixels-processing"]], "Pixel Data Utilities (pydicom.pixels.utils)": [[566, "module-pydicom.pixels.utils"]], "Pixel Representation": [[37, "pixel-representation"]], "Planar Configuration": [[37, "planar-configuration"]], "Plugin Requirements": [[30, "plugin-requirements"], [34, "plugin-requirements"]], "Plugins": [[41, "plugins"], [41, "id5"]], "Plugins for Compression": [[41, "plugins-for-compression"]], "Plugins for Decompression": [[41, "plugins-for-decompression"]], "Plugins for Pixel Data Compression and Decompression": [[41, "plugins-for-pixel-data-compression-and-decompression"]], "Prerequisites": [[45, "prerequisites"]], "Preview your changes": [[594, "preview-your-changes"]], "Private Data Dictionary": [[58, "private-data-dictionary"]], "Private Data Elements": [[47, "private-data-elements"]], "Pydicom Internals": [[570, "pydicom-internals"], [570, "id4"], [590, "pydicom-internals"], [591, "pydicom-internals"]], "RLE Lossless": [[29, "rle-lossless"]], "RLE Lossless Encoding": [[38, "rle-lossless-encoding"]], "Read RTPLAN DICOM and list information": [[11, "read-rtplan-dicom-and-list-information"]], "Read a DICOM File-set": [[10, "read-a-dicom-file-set"]], "Read a Dataset and plot Pixel Data": [[9, "read-a-dataset-and-plot-pixel-data"]], "Reading": [[596, "reading"]], "Release notes": [[570, "release-notes"]], "Removals": [[570, "removals"], [591, "removals"]], "Removing All Private Data Elements": [[47, "removing-all-private-data-elements"]], "Removing instances": [[598, "removing-instances"]], "Representation of Data Elements": [[60, "representation-of-data-elements"]], "Representation of Datasets (pydicom.dataset)": [[59, "representation-of-datasets-pydicom-dataset"]], "Required": [[23, "required"]], "Sequence": [[42, "sequence"]], "Sequence Element Value Representation (pydicom.sequence)": [[63, "sequence-element-value-representation-pydicom-sequence"]], "Sequences": [[596, "sequences"], [596, "id1"]], "Setting Private Data Elements with pydicom": [[47, "setting-private-data-elements-with-pydicom"]], "Show a dicom file using hierarchical tree": [[0, "show-a-dicom-file-using-hierarchical-tree"]], "Show working with memory-based dataset": [[14, "show-working-with-memory-based-dataset"]], "Specialized Element Value Representation (pydicom.valuerep)": [[65, "specialized-element-value-representation-pydicom-valuerep"]], "Standard elements": [[596, "standard-elements"]], "Storage SOP Class UIDs": [[568, "storage-sop-class-uids"]], "Structured Reporting": [[605, "structured-reporting"]], "Sub-modules": [[562, "sub-modules"]], "Supported Transfer Syntaxes": [[44, "supported-transfer-syntaxes"], [45, "supported-transfer-syntaxes"]], "Tag": [[42, "tag"]], "The DICOM File-set": [[598, "the-dicom-file-set"]], "The DICOMDIR file": [[598, "the-dicomdir-file"]], "Transfer Syntax Lists": [[568, "transfer-syntax-lists"]], "Transfer Syntax UIDs": [[568, "transfer-syntax-uids"]], "Tutorials": [[599, "tutorials"]], "Types of documentation": [[53, "types-of-documentation"]], "UID Definitions and Utilities (pydicom.uid)": [[568, "module-pydicom.uid"]], "UID Utilities": [[568, "uid-utilities"]], "Usage": [[45, "usage"], [69, "usage"], [567, "usage"]], "User Guide": [[54, "user-guide"]], "Using codify": [[52, "using-codify"]], "Using pydicom with matplotlib": [[48, "using-pydicom-with-matplotlib"]], "VOI LUT or Windowing Operation": [[50, "voi-lut-or-windowing-operation"]], "Valid Image Pixel Parameters": [[36, "valid-image-pixel-parameters"], [37, "valid-image-pixel-parameters"], [38, "valid-image-pixel-parameters"]], "Version 0.9.2": [[570, "version-0-9-2"], [571, "version-0-9-2"]], "Version 0.9.3": [[570, "version-0-9-3"], [572, "version-0-9-3"]], "Version 0.9.4": [[570, "version-0-9-4"], [573, "version-0-9-4"]], "Version 0.9.5": [[570, "version-0-9-5"], [574, "version-0-9-5"]], "Version 0.9.6": [[570, "version-0-9-6"], [575, "version-0-9-6"]], "Version 0.9.7": [[570, "version-0-9-7"], [576, "version-0-9-7"]], "Version 0.9.8": [[570, "version-0-9-8"], [577, "version-0-9-8"]], "Version 0.9.9": [[570, "version-0-9-9"], [578, "version-0-9-9"]], "Version 1.0.0": [[570, "version-1-0-0"], [579, "version-1-0-0"]], "Version 1.1.0": [[570, "version-1-1-0"], [580, "version-1-1-0"]], "Version 1.2.0": [[570, "version-1-2-0"], [581, "version-1-2-0"]], "Version 1.3.0": [[570, "version-1-3-0"], [582, "version-1-3-0"]], "Version 1.4.0": [[570, "version-1-4-0"], [583, "version-1-4-0"]], "Version 1.4.1": [[570, "version-1-4-1"], [584, "version-1-4-1"]], "Version 2.0.0": [[570, "version-2-0-0"], [585, "version-2-0-0"]], "Version 2.1.0": [[570, "version-2-1-0"], [586, "version-2-1-0"]], "Version 2.1.1": [[570, "version-2-1-1"], [587, "version-2-1-1"]], "Version 2.2.0": [[570, "version-2-2-0"], [588, "version-2-2-0"]], "Version 2.3.0": [[570, "version-2-3-0"], [589, "version-2-3-0"]], "Version 2.4.0": [[570, "version-2-4-0"], [590, "version-2-4-0"]], "Version 3.0.0": [[570, "version-3-0-0"], [591, "version-3-0-0"]], "Viewing Images": [[48, "viewing-images"]], "Viewing and accessing": [[596, "viewing-and-accessing"]], "Waveform Data Handlers (pydicom.waveforms)": [[569, "waveform-data-handlers-pydicom-waveforms"]], "Waveforms": [[606, "waveforms"]], "Waveforms in DICOM": [[606, "waveforms-in-dicom"]], "What are pydicom\u2019s prerequisites?": [[23, "what-are-pydicom-s-prerequisites"]], "What happens next?": [[594, "what-happens-next"], [595, "what-happens-next"]], "What license does pydicom use?": [[23, "what-license-does-pydicom-use"]], "What version of Python can I use?": [[23, "what-version-of-python-can-i-use"]], "Working with Overlay Data": [[49, "working-with-overlay-data"]], "Working with Pixel Data": [[50, "working-with-pixel-data"]], "Working with Waveform Data": [[51, "working-with-waveform-data"]], "Working with large binary data": [[597, "working-with-large-binary-data"]], "Working with sequences": [[18, "working-with-sequences"]], "Write DICOM data": [[12, "write-dicom-data"]], "Write tests for your changes": [[594, "write-tests-for-your-changes"]], "Writing": [[596, "writing"]], "Writing DICOM Files": [[52, "writing-dicom-files"]], "Writing a file from scratch": [[52, "writing-a-file-from-scratch"]], "Writing documentation": [[53, "writing-documentation"]], "file_meta": [[596, "file-meta"]], "gdcm": [[33, "gdcm"], [41, "gdcm"]], "pillow": [[41, "pillow"]], "pydicom": [[33, "pydicom"], [41, "pydicom"], [41, "id12"]], "pydicom User Guide": [[46, "pydicom-user-guide"]], "pydicom codify command": [[24, "pydicom-codify-command"], [26, "pydicom-codify-command"]], "pydicom documentation": [[54, "pydicom-documentation"]], "pydicom show command": [[26, "pydicom-show-command"], [28, "pydicom-show-command"]], "pydicom.charset.convert_encodings": [[76, "pydicom-charset-convert-encodings"]], "pydicom.charset.decode_bytes": [[77, "pydicom-charset-decode-bytes"]], "pydicom.charset.decode_element": [[78, "pydicom-charset-decode-element"]], "pydicom.charset.encode_string": [[79, "pydicom-charset-encode-string"]], "pydicom.config.APPLY_J2K_CORRECTIONS": [[80, "pydicom-config-apply-j2k-corrections"]], "pydicom.config.DS_decimal": [[81, "pydicom-config-ds-decimal"]], "pydicom.config.DS_numpy": [[82, "pydicom-config-ds-numpy"]], "pydicom.config.IGNORE": [[83, "pydicom-config-ignore"]], "pydicom.config.INVALID_KEYWORD_BEHAVIOR": [[84, "pydicom-config-invalid-keyword-behavior"]], "pydicom.config.INVALID_KEY_BEHAVIOR": [[85, "pydicom-config-invalid-key-behavior"]], "pydicom.config.RAISE": [[86, "pydicom-config-raise"]], "pydicom.config.WARN": [[87, "pydicom-config-warn"]], "pydicom.config.allow_DS_float": [[88, "pydicom-config-allow-ds-float"]], "pydicom.config.assume_implicit_vr_switch": [[89, "pydicom-config-assume-implicit-vr-switch"]], "pydicom.config.convert_wrong_length_to_UN": [[90, "pydicom-config-convert-wrong-length-to-un"]], "pydicom.config.data_element_callback": [[91, "pydicom-config-data-element-callback"]], "pydicom.config.data_element_callback_kwargs": [[92, "pydicom-config-data-element-callback-kwargs"]], "pydicom.config.datetime_conversion": [[93, "pydicom-config-datetime-conversion"]], "pydicom.config.debug": [[94, "pydicom-config-debug"]], "pydicom.config.enforce_valid_values": [[95, "pydicom-config-enforce-valid-values"]], "pydicom.config.future_behavior": [[96, "pydicom-config-future-behavior"]], "pydicom.config.pixel_data_handlers": [[97, "pydicom-config-pixel-data-handlers"]], "pydicom.config.reset_data_element_callback": [[98, "pydicom-config-reset-data-element-callback"]], "pydicom.config.settings": [[99, "pydicom-config-settings"]], "pydicom.config.show_file_meta": [[100, "pydicom-config-show-file-meta"]], "pydicom.config.use_DS_decimal": [[101, "pydicom-config-use-ds-decimal"]], "pydicom.config.use_DS_numpy": [[102, "pydicom-config-use-ds-numpy"]], "pydicom.config.use_IS_numpy": [[103, "pydicom-config-use-is-numpy"]], "pydicom.data.get_charset_files": [[104, "pydicom-data-get-charset-files"]], "pydicom.data.get_palette_files": [[105, "pydicom-data-get-palette-files"]], "pydicom.data.get_testdata_file": [[106, "pydicom-data-get-testdata-file"]], "pydicom.data.get_testdata_files": [[107, "pydicom-data-get-testdata-files"]], "pydicom.datadict.add_dict_entries": [[108, "pydicom-datadict-add-dict-entries"]], "pydicom.datadict.add_dict_entry": [[109, "pydicom-datadict-add-dict-entry"]], "pydicom.datadict.add_private_dict_entries": [[110, "pydicom-datadict-add-private-dict-entries"]], "pydicom.datadict.add_private_dict_entry": [[111, "pydicom-datadict-add-private-dict-entry"]], "pydicom.datadict.dictionary_VM": [[112, "pydicom-datadict-dictionary-vm"]], "pydicom.datadict.dictionary_VR": [[113, "pydicom-datadict-dictionary-vr"]], "pydicom.datadict.dictionary_description": [[114, "pydicom-datadict-dictionary-description"]], "pydicom.datadict.dictionary_has_tag": [[115, "pydicom-datadict-dictionary-has-tag"]], "pydicom.datadict.dictionary_is_retired": [[116, "pydicom-datadict-dictionary-is-retired"]], "pydicom.datadict.dictionary_keyword": [[117, "pydicom-datadict-dictionary-keyword"]], "pydicom.datadict.get_entry": [[118, "pydicom-datadict-get-entry"]], "pydicom.datadict.get_private_entry": [[119, "pydicom-datadict-get-private-entry"]], "pydicom.datadict.keyword_for_tag": [[120, "pydicom-datadict-keyword-for-tag"]], "pydicom.datadict.mask_match": [[121, "pydicom-datadict-mask-match"]], "pydicom.datadict.private_dictionary_VM": [[122, "pydicom-datadict-private-dictionary-vm"]], "pydicom.datadict.private_dictionary_VR": [[123, "pydicom-datadict-private-dictionary-vr"]], "pydicom.datadict.private_dictionary_description": [[124, "pydicom-datadict-private-dictionary-description"]], "pydicom.datadict.repeater_has_keyword": [[125, "pydicom-datadict-repeater-has-keyword"]], "pydicom.datadict.repeater_has_tag": [[126, "pydicom-datadict-repeater-has-tag"]], "pydicom.datadict.tag_for_keyword": [[127, "pydicom-datadict-tag-for-keyword"]], "pydicom.dataelem.DataElement": [[128, "pydicom-dataelem-dataelement"]], "pydicom.dataelem.DataElement_from_raw": [[129, "pydicom-dataelem-dataelement-from-raw"]], "pydicom.dataelem.RawDataElement": [[130, "pydicom-dataelem-rawdataelement"]], "pydicom.dataset.Dataset": [[131, "pydicom-dataset-dataset"]], "pydicom.dataset.FileDataset": [[132, "pydicom-dataset-filedataset"]], "pydicom.dataset.FileMetaDataset": [[133, "pydicom-dataset-filemetadataset"]], "pydicom.dataset.PrivateBlock": [[134, "pydicom-dataset-privateblock"]], "pydicom.dataset.validate_file_meta": [[135, "pydicom-dataset-validate-file-meta"]], "pydicom.encaps.decode_data_sequence": [[136, "pydicom-encaps-decode-data-sequence"]], "pydicom.encaps.defragment_data": [[137, "pydicom-encaps-defragment-data"]], "pydicom.encaps.encapsulate": [[138, "pydicom-encaps-encapsulate"]], "pydicom.encaps.encapsulate_extended": [[139, "pydicom-encaps-encapsulate-extended"]], "pydicom.encaps.fragment_frame": [[140, "pydicom-encaps-fragment-frame"]], "pydicom.encaps.generate_fragmented_frames": [[141, "pydicom-encaps-generate-fragmented-frames"]], "pydicom.encaps.generate_fragments": [[142, "pydicom-encaps-generate-fragments"]], "pydicom.encaps.generate_frames": [[143, "pydicom-encaps-generate-frames"]], "pydicom.encaps.generate_pixel_data": [[144, "pydicom-encaps-generate-pixel-data"]], "pydicom.encaps.generate_pixel_data_fragment": [[145, "pydicom-encaps-generate-pixel-data-fragment"]], "pydicom.encaps.generate_pixel_data_frame": [[146, "pydicom-encaps-generate-pixel-data-frame"]], "pydicom.encaps.get_frame": [[147, "pydicom-encaps-get-frame"]], "pydicom.encaps.get_frame_offsets": [[148, "pydicom-encaps-get-frame-offsets"]], "pydicom.encaps.itemize_fragment": [[149, "pydicom-encaps-itemize-fragment"]], "pydicom.encaps.itemize_frame": [[150, "pydicom-encaps-itemize-frame"]], "pydicom.encaps.parse_basic_offsets": [[151, "pydicom-encaps-parse-basic-offsets"]], "pydicom.encaps.parse_fragments": [[152, "pydicom-encaps-parse-fragments"]], "pydicom.encaps.read_item": [[153, "pydicom-encaps-read-item"]], "pydicom.errors.InvalidDicomError": [[154, "pydicom-errors-invaliddicomerror"]], "pydicom.examples.get_path": [[155, "pydicom-examples-get-path"]], "pydicom.filebase.DicomBytesIO": [[156, "pydicom-filebase-dicombytesio"]], "pydicom.filebase.DicomFile": [[157, "pydicom-filebase-dicomfile"]], "pydicom.filebase.DicomFileLike": [[158, "pydicom-filebase-dicomfilelike"]], "pydicom.filebase.DicomIO": [[159, "pydicom-filebase-dicomio"]], "pydicom.filereader.data_element_generator": [[160, "pydicom-filereader-data-element-generator"]], "pydicom.filereader.data_element_offset_to_value": [[161, "pydicom-filereader-data-element-offset-to-value"]], "pydicom.filereader.dcmread": [[162, "pydicom-filereader-dcmread"]], "pydicom.filereader.read_dataset": [[163, "pydicom-filereader-read-dataset"]], "pydicom.filereader.read_deferred_data_element": [[164, "pydicom-filereader-read-deferred-data-element"]], "pydicom.filereader.read_file_meta_info": [[165, "pydicom-filereader-read-file-meta-info"]], "pydicom.filereader.read_partial": [[166, "pydicom-filereader-read-partial"]], "pydicom.filereader.read_preamble": [[167, "pydicom-filereader-read-preamble"]], "pydicom.filereader.read_sequence": [[168, "pydicom-filereader-read-sequence"]], "pydicom.filereader.read_sequence_item": [[169, "pydicom-filereader-read-sequence-item"]], "pydicom.fileset.DIRECTORY_RECORDERS": [[170, "pydicom-fileset-directory-recorders"]], "pydicom.fileset.FileInstance": [[171, "pydicom-fileset-fileinstance"]], "pydicom.fileset.FileSet": [[172, "pydicom-fileset-fileset"]], "pydicom.fileset.RecordNode": [[173, "pydicom-fileset-recordnode"]], "pydicom.fileset.generate_filename": [[174, "pydicom-fileset-generate-filename"]], "pydicom.fileset.is_conformant_file_id": [[175, "pydicom-fileset-is-conformant-file-id"]], "pydicom.fileutil.absorb_delimiter_item": [[176, "pydicom-fileutil-absorb-delimiter-item"]], "pydicom.fileutil.find_bytes": [[177, "pydicom-fileutil-find-bytes"]], "pydicom.fileutil.find_delimiter": [[178, "pydicom-fileutil-find-delimiter"]], "pydicom.fileutil.length_of_undefined_length": [[179, "pydicom-fileutil-length-of-undefined-length"]], "pydicom.fileutil.read_undefined_length_value": [[180, "pydicom-fileutil-read-undefined-length-value"]], "pydicom.filewriter.correct_ambiguous_vr": [[181, "pydicom-filewriter-correct-ambiguous-vr"]], "pydicom.filewriter.correct_ambiguous_vr_element": [[182, "pydicom-filewriter-correct-ambiguous-vr-element"]], "pydicom.filewriter.dcmwrite": [[183, "pydicom-filewriter-dcmwrite"]], "pydicom.filewriter.multi_string": [[184, "pydicom-filewriter-multi-string"]], "pydicom.filewriter.write_ATvalue": [[185, "pydicom-filewriter-write-atvalue"]], "pydicom.filewriter.write_DA": [[186, "pydicom-filewriter-write-da"]], "pydicom.filewriter.write_DT": [[187, "pydicom-filewriter-write-dt"]], "pydicom.filewriter.write_OBvalue": [[188, "pydicom-filewriter-write-obvalue"]], "pydicom.filewriter.write_OWvalue": [[189, "pydicom-filewriter-write-owvalue"]], "pydicom.filewriter.write_PN": [[190, "pydicom-filewriter-write-pn"]], "pydicom.filewriter.write_TM": [[191, "pydicom-filewriter-write-tm"]], "pydicom.filewriter.write_UI": [[192, "pydicom-filewriter-write-ui"]], "pydicom.filewriter.write_UN": [[193, "pydicom-filewriter-write-un"]], "pydicom.filewriter.write_data_element": [[194, "pydicom-filewriter-write-data-element"]], "pydicom.filewriter.write_dataset": [[195, "pydicom-filewriter-write-dataset"]], "pydicom.filewriter.write_file_meta_info": [[196, "pydicom-filewriter-write-file-meta-info"]], "pydicom.filewriter.write_number_string": [[197, "pydicom-filewriter-write-number-string"]], "pydicom.filewriter.write_numbers": [[198, "pydicom-filewriter-write-numbers"]], "pydicom.filewriter.write_sequence": [[199, "pydicom-filewriter-write-sequence"]], "pydicom.filewriter.write_sequence_item": [[200, "pydicom-filewriter-write-sequence-item"]], "pydicom.filewriter.write_string": [[201, "pydicom-filewriter-write-string"]], "pydicom.filewriter.write_text": [[202, "pydicom-filewriter-write-text"]], "pydicom.misc.is_dicom": [[203, "pydicom-misc-is-dicom"]], "pydicom.misc.size_in_bytes": [[204, "pydicom-misc-size-in-bytes"]], "pydicom.multival.MultiValue": [[205, "pydicom-multival-multivalue"]], "pydicom.overlays.numpy_handler": [[206, "module-pydicom.overlays.numpy_handler"]], "pydicom.pixel_data_handlers.gdcm_handler": [[207, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[208, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "pydicom.pixel_data_handlers.numpy_handler": [[209, "module-pydicom.pixel_data_handlers.numpy_handler"]], "pydicom.pixel_data_handlers.pillow_handler": [[210, "module-pydicom.pixel_data_handlers.pillow_handler"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[211, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "pydicom.pixel_data_handlers.rle_handler": [[212, "module-pydicom.pixel_data_handlers.rle_handler"]], "pydicom.pixels.apply_color_lut": [[213, "pydicom-pixels-apply-color-lut"]], "pydicom.pixels.apply_modality_lut": [[214, "pydicom-pixels-apply-modality-lut"]], "pydicom.pixels.apply_rescale": [[215, "pydicom-pixels-apply-rescale"]], "pydicom.pixels.apply_voi": [[216, "pydicom-pixels-apply-voi"]], "pydicom.pixels.apply_voi_lut": [[217, "pydicom-pixels-apply-voi-lut"]], "pydicom.pixels.apply_windowing": [[218, "pydicom-pixels-apply-windowing"]], "pydicom.pixels.as_pixel_options": [[219, "pydicom-pixels-as-pixel-options"]], "pydicom.pixels.compress": [[220, "pydicom-pixels-compress"]], "pydicom.pixels.convert_color_space": [[221, "pydicom-pixels-convert-color-space"]], "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder": [[222, "pydicom-pixels-decoders-deflatedexplicitvrlittleendiandecoder"]], "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder": [[223, "pydicom-pixels-decoders-explicitvrbigendiandecoder"]], "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder": [[224, "pydicom-pixels-decoders-explicitvrlittleendiandecoder"]], "pydicom.pixels.decoders.HTJ2KDecoder": [[225, "pydicom-pixels-decoders-htj2kdecoder"]], "pydicom.pixels.decoders.HTJ2KLosslessDecoder": [[226, "pydicom-pixels-decoders-htj2klosslessdecoder"]], "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder": [[227, "pydicom-pixels-decoders-htj2klosslessrpcldecoder"]], "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder": [[228, "pydicom-pixels-decoders-implicitvrlittleendiandecoder"]], "pydicom.pixels.decoders.JPEG2000Decoder": [[229, "pydicom-pixels-decoders-jpeg2000decoder"]], "pydicom.pixels.decoders.JPEG2000LosslessDecoder": [[230, "pydicom-pixels-decoders-jpeg2000losslessdecoder"]], "pydicom.pixels.decoders.JPEGBaseline8BitDecoder": [[231, "pydicom-pixels-decoders-jpegbaseline8bitdecoder"]], "pydicom.pixels.decoders.JPEGExtended12BitDecoder": [[232, "pydicom-pixels-decoders-jpegextended12bitdecoder"]], "pydicom.pixels.decoders.JPEGLSLosslessDecoder": [[233, "pydicom-pixels-decoders-jpeglslosslessdecoder"]], "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder": [[234, "pydicom-pixels-decoders-jpeglsnearlosslessdecoder"]], "pydicom.pixels.decoders.JPEGLosslessDecoder": [[235, "pydicom-pixels-decoders-jpeglosslessdecoder"]], "pydicom.pixels.decoders.JPEGLosslessSV1Decoder": [[236, "pydicom-pixels-decoders-jpeglosslesssv1decoder"]], "pydicom.pixels.decoders.RLELosslessDecoder": [[237, "pydicom-pixels-decoders-rlelosslessdecoder"]], "pydicom.pixels.decoders.base.DecodeRunner": [[238, "pydicom-pixels-decoders-base-decoderunner"]], "pydicom.pixels.decoders.base.Decoder": [[239, "pydicom-pixels-decoders-base-decoder"]], "pydicom.pixels.decompress": [[240, "pydicom-pixels-decompress"]], "pydicom.pixels.encoders.JPEG2000Encoder": [[241, "pydicom-pixels-encoders-jpeg2000encoder"]], "pydicom.pixels.encoders.JPEG2000LosslessEncoder": [[242, "pydicom-pixels-encoders-jpeg2000losslessencoder"]], "pydicom.pixels.encoders.JPEGLSLosslessEncoder": [[243, "pydicom-pixels-encoders-jpeglslosslessencoder"]], "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder": [[244, "pydicom-pixels-encoders-jpeglsnearlosslessencoder"]], "pydicom.pixels.encoders.RLELosslessEncoder": [[245, "pydicom-pixels-encoders-rlelosslessencoder"]], "pydicom.pixels.encoders.base.EncodeRunner": [[246, "pydicom-pixels-encoders-base-encoderunner"]], "pydicom.pixels.encoders.base.Encoder": [[247, "pydicom-pixels-encoders-base-encoder"]], "pydicom.pixels.get_decoder": [[248, "pydicom-pixels-get-decoder"]], "pydicom.pixels.get_encoder": [[249, "pydicom-pixels-get-encoder"]], "pydicom.pixels.iter_pixels": [[250, "pydicom-pixels-iter-pixels"]], "pydicom.pixels.pack_bits": [[251, "pydicom-pixels-pack-bits"]], "pydicom.pixels.pixel_array": [[252, "pydicom-pixels-pixel-array"]], "pydicom.pixels.processing.apply_color_lut": [[253, "pydicom-pixels-processing-apply-color-lut"]], "pydicom.pixels.processing.apply_modality_lut": [[254, "pydicom-pixels-processing-apply-modality-lut"]], "pydicom.pixels.processing.apply_rescale": [[255, "pydicom-pixels-processing-apply-rescale"]], "pydicom.pixels.processing.apply_voi": [[256, "pydicom-pixels-processing-apply-voi"]], "pydicom.pixels.processing.apply_voi_lut": [[257, "pydicom-pixels-processing-apply-voi-lut"]], "pydicom.pixels.processing.apply_windowing": [[258, "pydicom-pixels-processing-apply-windowing"]], "pydicom.pixels.processing.convert_color_space": [[259, "pydicom-pixels-processing-convert-color-space"]], "pydicom.pixels.set_pixel_data": [[260, "pydicom-pixels-set-pixel-data"]], "pydicom.pixels.unpack_bits": [[261, "pydicom-pixels-unpack-bits"]], "pydicom.pixels.utils.as_pixel_options": [[262, "pydicom-pixels-utils-as-pixel-options"]], "pydicom.pixels.utils.compress": [[263, "pydicom-pixels-utils-compress"]], "pydicom.pixels.utils.decompress": [[264, "pydicom-pixels-utils-decompress"]], "pydicom.pixels.utils.expand_ybr422": [[265, "pydicom-pixels-utils-expand-ybr422"]], "pydicom.pixels.utils.get_expected_length": [[266, "pydicom-pixels-utils-get-expected-length"]], "pydicom.pixels.utils.get_image_pixel_ids": [[267, "pydicom-pixels-utils-get-image-pixel-ids"]], "pydicom.pixels.utils.get_j2k_parameters": [[268, "pydicom-pixels-utils-get-j2k-parameters"]], "pydicom.pixels.utils.get_nr_frames": [[269, "pydicom-pixels-utils-get-nr-frames"]], "pydicom.pixels.utils.iter_pixels": [[270, "pydicom-pixels-utils-iter-pixels"]], "pydicom.pixels.utils.pack_bits": [[271, "pydicom-pixels-utils-pack-bits"]], "pydicom.pixels.utils.pixel_array": [[272, "pydicom-pixels-utils-pixel-array"]], "pydicom.pixels.utils.pixel_dtype": [[273, "pydicom-pixels-utils-pixel-dtype"]], "pydicom.pixels.utils.reshape_pixel_array": [[274, "pydicom-pixels-utils-reshape-pixel-array"]], "pydicom.pixels.utils.set_pixel_data": [[275, "pydicom-pixels-utils-set-pixel-data"]], "pydicom.pixels.utils.unpack_bits": [[276, "pydicom-pixels-utils-unpack-bits"]], "pydicom.sequence.Sequence": [[277, "pydicom-sequence-sequence"]], "pydicom.sr.Code": [[278, "pydicom-sr-code"]], "pydicom.sr.Collection": [[279, "pydicom-sr-collection"]], "pydicom.sr.Concepts": [[280, "pydicom-sr-concepts"]], "pydicom.tag.BaseTag": [[281, "pydicom-tag-basetag"]], "pydicom.tag.Tag": [[282, "pydicom-tag-tag"]], "pydicom.tag.TupleTag": [[283, "pydicom-tag-tupletag"]], "pydicom.tag.tag_in_exception": [[284, "pydicom-tag-tag-in-exception"]], "pydicom.uid.AcquisitionContextSRStorage": [[285, "pydicom-uid-acquisitioncontextsrstorage"]], "pydicom.uid.AdvancedBlendingPresentationStateStorage": [[286, "pydicom-uid-advancedblendingpresentationstatestorage"]], "pydicom.uid.AllTransferSyntaxes": [[287, "pydicom-uid-alltransfersyntaxes"]], "pydicom.uid.AmbulatoryECGWaveformStorage": [[288, "pydicom-uid-ambulatoryecgwaveformstorage"]], "pydicom.uid.ArterialPulseWaveformStorage": [[289, "pydicom-uid-arterialpulsewaveformstorage"]], "pydicom.uid.AutorefractionMeasurementsStorage": [[290, "pydicom-uid-autorefractionmeasurementsstorage"]], "pydicom.uid.BasicStructuredDisplayStorage": [[291, "pydicom-uid-basicstructureddisplaystorage"]], "pydicom.uid.BasicTextSRStorage": [[292, "pydicom-uid-basictextsrstorage"]], "pydicom.uid.BasicVoiceAudioWaveformStorage": [[293, "pydicom-uid-basicvoiceaudiowaveformstorage"]], "pydicom.uid.BlendingSoftcopyPresentationStateStorage": [[294, "pydicom-uid-blendingsoftcopypresentationstatestorage"]], "pydicom.uid.BodyPositionWaveformStorage": [[295, "pydicom-uid-bodypositionwaveformstorage"]], "pydicom.uid.BreastProjectionXRayImageStorageForPresentation": [[296, "pydicom-uid-breastprojectionxrayimagestorageforpresentation"]], "pydicom.uid.BreastProjectionXRayImageStorageForProcessing": [[297, "pydicom-uid-breastprojectionxrayimagestorageforprocessing"]], "pydicom.uid.BreastTomosynthesisImageStorage": [[298, "pydicom-uid-breasttomosynthesisimagestorage"]], "pydicom.uid.CArmPhotonElectronRadiationRecordStorage": [[299, "pydicom-uid-carmphotonelectronradiationrecordstorage"]], "pydicom.uid.CArmPhotonElectronRadiationStorage": [[300, "pydicom-uid-carmphotonelectronradiationstorage"]], "pydicom.uid.CTDefinedProcedureProtocolStorage": [[301, "pydicom-uid-ctdefinedprocedureprotocolstorage"]], "pydicom.uid.CTImageStorage": [[302, "pydicom-uid-ctimagestorage"]], "pydicom.uid.CTPerformedProcedureProtocolStorage": [[303, "pydicom-uid-ctperformedprocedureprotocolstorage"]], "pydicom.uid.CardiacElectrophysiologyWaveformStorage": [[304, "pydicom-uid-cardiacelectrophysiologywaveformstorage"]], "pydicom.uid.ChestCADSRStorage": [[305, "pydicom-uid-chestcadsrstorage"]], "pydicom.uid.ColonCADSRStorage": [[306, "pydicom-uid-coloncadsrstorage"]], "pydicom.uid.ColorPaletteStorage": [[307, "pydicom-uid-colorpalettestorage"]], "pydicom.uid.ColorSoftcopyPresentationStateStorage": [[308, "pydicom-uid-colorsoftcopypresentationstatestorage"]], "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage": [[309, "pydicom-uid-compositingplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.Comprehensive3DSRStorage": [[310, "pydicom-uid-comprehensive3dsrstorage"]], "pydicom.uid.ComprehensiveSRStorage": [[311, "pydicom-uid-comprehensivesrstorage"]], "pydicom.uid.ComputedRadiographyImageStorage": [[312, "pydicom-uid-computedradiographyimagestorage"]], "pydicom.uid.ConfocalMicroscopyImageStorage": [[313, "pydicom-uid-confocalmicroscopyimagestorage"]], "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage": [[314, "pydicom-uid-confocalmicroscopytiledpyramidalimagestorage"]], "pydicom.uid.ContentAssessmentResultsStorage": [[315, "pydicom-uid-contentassessmentresultsstorage"]], "pydicom.uid.CornealTopographyMapStorage": [[316, "pydicom-uid-cornealtopographymapstorage"]], "pydicom.uid.DICOS2DAITStorage": [[317, "pydicom-uid-dicos2daitstorage"]], "pydicom.uid.DICOS3DAITStorage": [[318, "pydicom-uid-dicos3daitstorage"]], "pydicom.uid.DICOSCTImageStorage": [[319, "pydicom-uid-dicosctimagestorage"]], "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation": [[320, "pydicom-uid-dicosdigitalxrayimagestorageforpresentation"]], "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing": [[321, "pydicom-uid-dicosdigitalxrayimagestorageforprocessing"]], "pydicom.uid.DICOSQuadrupoleResonanceStorage": [[322, "pydicom-uid-dicosquadrupoleresonancestorage"]], "pydicom.uid.DICOSThreatDetectionReportStorage": [[323, "pydicom-uid-dicosthreatdetectionreportstorage"]], "pydicom.uid.DeflatedExplicitVRLittleEndian": [[324, "pydicom-uid-deflatedexplicitvrlittleendian"]], "pydicom.uid.DeformableSpatialRegistrationStorage": [[325, "pydicom-uid-deformablespatialregistrationstorage"]], "pydicom.uid.DermoscopicPhotographyImageStorage": [[326, "pydicom-uid-dermoscopicphotographyimagestorage"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation": [[327, "pydicom-uid-digitalintraoralxrayimagestorageforpresentation"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing": [[328, "pydicom-uid-digitalintraoralxrayimagestorageforprocessing"]], "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation": [[329, "pydicom-uid-digitalmammographyxrayimagestorageforpresentation"]], "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing": [[330, "pydicom-uid-digitalmammographyxrayimagestorageforprocessing"]], "pydicom.uid.DigitalXRayImageStorageForPresentation": [[331, "pydicom-uid-digitalxrayimagestorageforpresentation"]], "pydicom.uid.DigitalXRayImageStorageForProcessing": [[332, "pydicom-uid-digitalxrayimagestorageforprocessing"]], "pydicom.uid.EddyCurrentImageStorage": [[333, "pydicom-uid-eddycurrentimagestorage"]], "pydicom.uid.EddyCurrentMultiFrameImageStorage": [[334, "pydicom-uid-eddycurrentmultiframeimagestorage"]], "pydicom.uid.ElectromyogramWaveformStorage": [[335, "pydicom-uid-electromyogramwaveformstorage"]], "pydicom.uid.ElectrooculogramWaveformStorage": [[336, "pydicom-uid-electrooculogramwaveformstorage"]], "pydicom.uid.EncapsulatedCDAStorage": [[337, "pydicom-uid-encapsulatedcdastorage"]], "pydicom.uid.EncapsulatedMTLStorage": [[338, "pydicom-uid-encapsulatedmtlstorage"]], "pydicom.uid.EncapsulatedOBJStorage": [[339, "pydicom-uid-encapsulatedobjstorage"]], "pydicom.uid.EncapsulatedPDFStorage": [[340, "pydicom-uid-encapsulatedpdfstorage"]], "pydicom.uid.EncapsulatedSTLStorage": [[341, "pydicom-uid-encapsulatedstlstorage"]], "pydicom.uid.EnhancedCTImageStorage": [[342, "pydicom-uid-enhancedctimagestorage"]], "pydicom.uid.EnhancedContinuousRTImageStorage": [[343, "pydicom-uid-enhancedcontinuousrtimagestorage"]], "pydicom.uid.EnhancedMRColorImageStorage": [[344, "pydicom-uid-enhancedmrcolorimagestorage"]], "pydicom.uid.EnhancedMRImageStorage": [[345, "pydicom-uid-enhancedmrimagestorage"]], "pydicom.uid.EnhancedPETImageStorage": [[346, "pydicom-uid-enhancedpetimagestorage"]], "pydicom.uid.EnhancedRTImageStorage": [[347, "pydicom-uid-enhancedrtimagestorage"]], "pydicom.uid.EnhancedSRStorage": [[348, "pydicom-uid-enhancedsrstorage"]], "pydicom.uid.EnhancedUSVolumeStorage": [[349, "pydicom-uid-enhancedusvolumestorage"]], "pydicom.uid.EnhancedXAImageStorage": [[350, "pydicom-uid-enhancedxaimagestorage"]], "pydicom.uid.EnhancedXRFImageStorage": [[351, "pydicom-uid-enhancedxrfimagestorage"]], "pydicom.uid.EnhancedXRayRadiationDoseSRStorage": [[352, "pydicom-uid-enhancedxrayradiationdosesrstorage"]], "pydicom.uid.ExplicitVRBigEndian": [[353, "pydicom-uid-explicitvrbigendian"]], "pydicom.uid.ExplicitVRLittleEndian": [[354, "pydicom-uid-explicitvrlittleendian"]], "pydicom.uid.ExtensibleSRStorage": [[355, "pydicom-uid-extensiblesrstorage"]], "pydicom.uid.General32bitECGWaveformStorage": [[356, "pydicom-uid-general32bitecgwaveformstorage"]], "pydicom.uid.GeneralAudioWaveformStorage": [[357, "pydicom-uid-generalaudiowaveformstorage"]], "pydicom.uid.GeneralECGWaveformStorage": [[358, "pydicom-uid-generalecgwaveformstorage"]], "pydicom.uid.GenericImplantTemplateStorage": [[359, "pydicom-uid-genericimplanttemplatestorage"]], "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage": [[360, "pydicom-uid-grayscaleplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage": [[361, "pydicom-uid-grayscalesoftcopypresentationstatestorage"]], "pydicom.uid.HEVCM10P51": [[362, "pydicom-uid-hevcm10p51"]], "pydicom.uid.HEVCMP51": [[363, "pydicom-uid-hevcmp51"]], "pydicom.uid.HTJ2K": [[364, "pydicom-uid-htj2k"]], "pydicom.uid.HTJ2KLossless": [[365, "pydicom-uid-htj2klossless"]], "pydicom.uid.HTJ2KLosslessRPCL": [[366, "pydicom-uid-htj2klosslessrpcl"]], "pydicom.uid.HangingProtocolStorage": [[367, "pydicom-uid-hangingprotocolstorage"]], "pydicom.uid.HemodynamicWaveformStorage": [[368, "pydicom-uid-hemodynamicwaveformstorage"]], "pydicom.uid.ImplantAssemblyTemplateStorage": [[369, "pydicom-uid-implantassemblytemplatestorage"]], "pydicom.uid.ImplantTemplateGroupStorage": [[370, "pydicom-uid-implanttemplategroupstorage"]], "pydicom.uid.ImplantationPlanSRStorage": [[371, "pydicom-uid-implantationplansrstorage"]], "pydicom.uid.ImplicitVRLittleEndian": [[372, "pydicom-uid-implicitvrlittleendian"]], "pydicom.uid.IntraocularLensCalculationsStorage": [[373, "pydicom-uid-intraocularlenscalculationsstorage"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation": [[374, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforpresentation"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing": [[375, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforprocessing"]], "pydicom.uid.InventoryStorage": [[376, "pydicom-uid-inventorystorage"]], "pydicom.uid.JPEG2000": [[377, "pydicom-uid-jpeg2000"]], "pydicom.uid.JPEG2000Lossless": [[378, "pydicom-uid-jpeg2000lossless"]], "pydicom.uid.JPEG2000MC": [[379, "pydicom-uid-jpeg2000mc"]], "pydicom.uid.JPEG2000MCLossless": [[380, "pydicom-uid-jpeg2000mclossless"]], "pydicom.uid.JPEG2000TransferSyntaxes": [[381, "pydicom-uid-jpeg2000transfersyntaxes"]], "pydicom.uid.JPEGBaseline8Bit": [[382, "pydicom-uid-jpegbaseline8bit"]], "pydicom.uid.JPEGExtended12Bit": [[383, "pydicom-uid-jpegextended12bit"]], "pydicom.uid.JPEGLSLossless": [[384, "pydicom-uid-jpeglslossless"]], "pydicom.uid.JPEGLSNearLossless": [[385, "pydicom-uid-jpeglsnearlossless"]], "pydicom.uid.JPEGLSTransferSyntaxes": [[386, "pydicom-uid-jpeglstransfersyntaxes"]], "pydicom.uid.JPEGLossless": [[387, "pydicom-uid-jpeglossless"]], "pydicom.uid.JPEGLosslessSV1": [[388, "pydicom-uid-jpeglosslesssv1"]], "pydicom.uid.JPEGTransferSyntaxes": [[389, "pydicom-uid-jpegtransfersyntaxes"]], "pydicom.uid.JPIPHTJ2KReferenced": [[390, "pydicom-uid-jpiphtj2kreferenced"]], "pydicom.uid.JPIPHTJ2KReferencedDeflate": [[391, "pydicom-uid-jpiphtj2kreferenceddeflate"]], "pydicom.uid.KeratometryMeasurementsStorage": [[392, "pydicom-uid-keratometrymeasurementsstorage"]], "pydicom.uid.KeyObjectSelectionDocumentStorage": [[393, "pydicom-uid-keyobjectselectiondocumentstorage"]], "pydicom.uid.LegacyConvertedEnhancedCTImageStorage": [[394, "pydicom-uid-legacyconvertedenhancedctimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedMRImageStorage": [[395, "pydicom-uid-legacyconvertedenhancedmrimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedPETImageStorage": [[396, "pydicom-uid-legacyconvertedenhancedpetimagestorage"]], "pydicom.uid.LensometryMeasurementsStorage": [[397, "pydicom-uid-lensometrymeasurementsstorage"]], "pydicom.uid.MPEG2MPHL": [[398, "pydicom-uid-mpeg2mphl"]], "pydicom.uid.MPEG2MPHLF": [[399, "pydicom-uid-mpeg2mphlf"]], "pydicom.uid.MPEG2MPML": [[400, "pydicom-uid-mpeg2mpml"]], "pydicom.uid.MPEG2MPMLF": [[401, "pydicom-uid-mpeg2mpmlf"]], "pydicom.uid.MPEG4HP41": [[402, "pydicom-uid-mpeg4hp41"]], "pydicom.uid.MPEG4HP41BD": [[403, "pydicom-uid-mpeg4hp41bd"]], "pydicom.uid.MPEG4HP41BDF": [[404, "pydicom-uid-mpeg4hp41bdf"]], "pydicom.uid.MPEG4HP41F": [[405, "pydicom-uid-mpeg4hp41f"]], "pydicom.uid.MPEG4HP422D": [[406, "pydicom-uid-mpeg4hp422d"]], "pydicom.uid.MPEG4HP422DF": [[407, "pydicom-uid-mpeg4hp422df"]], "pydicom.uid.MPEG4HP423D": [[408, "pydicom-uid-mpeg4hp423d"]], "pydicom.uid.MPEG4HP423DF": [[409, "pydicom-uid-mpeg4hp423df"]], "pydicom.uid.MPEG4HP42STEREO": [[410, "pydicom-uid-mpeg4hp42stereo"]], "pydicom.uid.MPEG4HP42STEREOF": [[411, "pydicom-uid-mpeg4hp42stereof"]], "pydicom.uid.MPEGTransferSyntaxes": [[412, "pydicom-uid-mpegtransfersyntaxes"]], "pydicom.uid.MRImageStorage": [[413, "pydicom-uid-mrimagestorage"]], "pydicom.uid.MRSpectroscopyStorage": [[414, "pydicom-uid-mrspectroscopystorage"]], "pydicom.uid.MacularGridThicknessAndVolumeReportStorage": [[415, "pydicom-uid-maculargridthicknessandvolumereportstorage"]], "pydicom.uid.MammographyCADSRStorage": [[416, "pydicom-uid-mammographycadsrstorage"]], "pydicom.uid.MediaStorageDirectoryStorage": [[417, "pydicom-uid-mediastoragedirectorystorage"]], "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage": [[418, "pydicom-uid-microscopybulksimpleannotationsstorage"]], "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage": [[419, "pydicom-uid-multiframegrayscalebytesecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage": [[420, "pydicom-uid-multiframegrayscalewordsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage": [[421, "pydicom-uid-multiframesinglebitsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage": [[422, "pydicom-uid-multiframetruecolorsecondarycaptureimagestorage"]], "pydicom.uid.MultichannelRespiratoryWaveformStorage": [[423, "pydicom-uid-multichannelrespiratorywaveformstorage"]], "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage": [[424, "pydicom-uid-multiplevolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.NuclearMedicineImageStorage": [[425, "pydicom-uid-nuclearmedicineimagestorage"]], "pydicom.uid.OphthalmicAxialMeasurementsStorage": [[426, "pydicom-uid-ophthalmicaxialmeasurementsstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage": [[427, "pydicom-uid-ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage": [[428, "pydicom-uid-ophthalmicopticalcoherencetomographyenfaceimagestorage"]], "pydicom.uid.OphthalmicPhotography16BitImageStorage": [[429, "pydicom-uid-ophthalmicphotography16bitimagestorage"]], "pydicom.uid.OphthalmicPhotography8BitImageStorage": [[430, "pydicom-uid-ophthalmicphotography8bitimagestorage"]], "pydicom.uid.OphthalmicThicknessMapStorage": [[431, "pydicom-uid-ophthalmicthicknessmapstorage"]], "pydicom.uid.OphthalmicTomographyImageStorage": [[432, "pydicom-uid-ophthalmictomographyimagestorage"]], "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage": [[433, "pydicom-uid-ophthalmicvisualfieldstaticperimetrymeasurementsstorage"]], "pydicom.uid.PYDICOM_IMPLEMENTATION_UID": [[434, "pydicom-uid-pydicom-implementation-uid"]], "pydicom.uid.PYDICOM_ROOT_UID": [[435, "pydicom-uid-pydicom-root-uid"]], "pydicom.uid.ParametricMapStorage": [[436, "pydicom-uid-parametricmapstorage"]], "pydicom.uid.PatientRadiationDoseSRStorage": [[437, "pydicom-uid-patientradiationdosesrstorage"]], "pydicom.uid.PerformedImagingAgentAdministrationSRStorage": [[438, "pydicom-uid-performedimagingagentadministrationsrstorage"]], "pydicom.uid.PhotoacousticImageStorage": [[439, "pydicom-uid-photoacousticimagestorage"]], "pydicom.uid.PlannedImagingAgentAdministrationSRStorage": [[440, "pydicom-uid-plannedimagingagentadministrationsrstorage"]], "pydicom.uid.PositronEmissionTomographyImageStorage": [[441, "pydicom-uid-positronemissiontomographyimagestorage"]], "pydicom.uid.PrivateTransferSyntaxes": [[442, "pydicom-uid-privatetransfersyntaxes"]], "pydicom.uid.ProcedureLogStorage": [[443, "pydicom-uid-procedurelogstorage"]], "pydicom.uid.ProtocolApprovalStorage": [[444, "pydicom-uid-protocolapprovalstorage"]], "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage": [[445, "pydicom-uid-pseudocolorsoftcopypresentationstatestorage"]], "pydicom.uid.RE_VALID_UID": [[446, "pydicom-uid-re-valid-uid"]], "pydicom.uid.RE_VALID_UID_PREFIX": [[447, "pydicom-uid-re-valid-uid-prefix"]], "pydicom.uid.RLELossless": [[448, "pydicom-uid-rlelossless"]], "pydicom.uid.RLETransferSyntaxes": [[449, "pydicom-uid-rletransfersyntaxes"]], "pydicom.uid.RTBeamsDeliveryInstructionStorage": [[450, "pydicom-uid-rtbeamsdeliveryinstructionstorage"]], "pydicom.uid.RTBeamsTreatmentRecordStorage": [[451, "pydicom-uid-rtbeamstreatmentrecordstorage"]], "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage": [[452, "pydicom-uid-rtbrachyapplicationsetupdeliveryinstructionstorage"]], "pydicom.uid.RTBrachyTreatmentRecordStorage": [[453, "pydicom-uid-rtbrachytreatmentrecordstorage"]], "pydicom.uid.RTDoseStorage": [[454, "pydicom-uid-rtdosestorage"]], "pydicom.uid.RTImageStorage": [[455, "pydicom-uid-rtimagestorage"]], "pydicom.uid.RTIonBeamsTreatmentRecordStorage": [[456, "pydicom-uid-rtionbeamstreatmentrecordstorage"]], "pydicom.uid.RTIonPlanStorage": [[457, "pydicom-uid-rtionplanstorage"]], "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage": [[458, "pydicom-uid-rtpatientpositionacquisitioninstructionstorage"]], "pydicom.uid.RTPhysicianIntentStorage": [[459, "pydicom-uid-rtphysicianintentstorage"]], "pydicom.uid.RTPlanStorage": [[460, "pydicom-uid-rtplanstorage"]], "pydicom.uid.RTRadiationRecordSetStorage": [[461, "pydicom-uid-rtradiationrecordsetstorage"]], "pydicom.uid.RTRadiationSalvageRecordStorage": [[462, "pydicom-uid-rtradiationsalvagerecordstorage"]], "pydicom.uid.RTRadiationSetDeliveryInstructionStorage": [[463, "pydicom-uid-rtradiationsetdeliveryinstructionstorage"]], "pydicom.uid.RTRadiationSetStorage": [[464, "pydicom-uid-rtradiationsetstorage"]], "pydicom.uid.RTSegmentAnnotationStorage": [[465, "pydicom-uid-rtsegmentannotationstorage"]], "pydicom.uid.RTStructureSetStorage": [[466, "pydicom-uid-rtstructuresetstorage"]], "pydicom.uid.RTTreatmentPreparationStorage": [[467, "pydicom-uid-rttreatmentpreparationstorage"]], "pydicom.uid.RTTreatmentSummaryRecordStorage": [[468, "pydicom-uid-rttreatmentsummaryrecordstorage"]], "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage": [[469, "pydicom-uid-radiopharmaceuticalradiationdosesrstorage"]], "pydicom.uid.RawDataStorage": [[470, "pydicom-uid-rawdatastorage"]], "pydicom.uid.RealWorldValueMappingStorage": [[471, "pydicom-uid-realworldvaluemappingstorage"]], "pydicom.uid.RespiratoryWaveformStorage": [[472, "pydicom-uid-respiratorywaveformstorage"]], "pydicom.uid.RoboticArmRadiationStorage": [[473, "pydicom-uid-roboticarmradiationstorage"]], "pydicom.uid.RoboticRadiationRecordStorage": [[474, "pydicom-uid-roboticradiationrecordstorage"]], "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage": [[475, "pydicom-uid-routinescalpelectroencephalogramwaveformstorage"]], "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo": [[476, "pydicom-uid-smptest211020uncompressedinterlacedactivevideo"]], "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo": [[477, "pydicom-uid-smptest211020uncompressedprogressiveactivevideo"]], "pydicom.uid.SMPTEST211030PCMDigitalAudio": [[478, "pydicom-uid-smptest211030pcmdigitalaudio"]], "pydicom.uid.SecondaryCaptureImageStorage": [[479, "pydicom-uid-secondarycaptureimagestorage"]], "pydicom.uid.SegmentationStorage": [[480, "pydicom-uid-segmentationstorage"]], "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage": [[481, "pydicom-uid-segmentedvolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.SimplifiedAdultEchoSRStorage": [[482, "pydicom-uid-simplifiedadultechosrstorage"]], "pydicom.uid.SleepElectroencephalogramWaveformStorage": [[483, "pydicom-uid-sleepelectroencephalogramwaveformstorage"]], "pydicom.uid.SpatialFiducialsStorage": [[484, "pydicom-uid-spatialfiducialsstorage"]], "pydicom.uid.SpatialRegistrationStorage": [[485, "pydicom-uid-spatialregistrationstorage"]], "pydicom.uid.SpectaclePrescriptionReportStorage": [[486, "pydicom-uid-spectacleprescriptionreportstorage"]], "pydicom.uid.StereometricRelationshipStorage": [[487, "pydicom-uid-stereometricrelationshipstorage"]], "pydicom.uid.SubjectiveRefractionMeasurementsStorage": [[488, "pydicom-uid-subjectiverefractionmeasurementsstorage"]], "pydicom.uid.SurfaceScanMeshStorage": [[489, "pydicom-uid-surfacescanmeshstorage"]], "pydicom.uid.SurfaceScanPointCloudStorage": [[490, "pydicom-uid-surfacescanpointcloudstorage"]], "pydicom.uid.SurfaceSegmentationStorage": [[491, "pydicom-uid-surfacesegmentationstorage"]], "pydicom.uid.TomotherapeuticRadiationRecordStorage": [[492, "pydicom-uid-tomotherapeuticradiationrecordstorage"]], "pydicom.uid.TomotherapeuticRadiationStorage": [[493, "pydicom-uid-tomotherapeuticradiationstorage"]], "pydicom.uid.TractographyResultsStorage": [[494, "pydicom-uid-tractographyresultsstorage"]], "pydicom.uid.TwelveLeadECGWaveformStorage": [[495, "pydicom-uid-twelveleadecgwaveformstorage"]], "pydicom.uid.UID": [[496, "pydicom-uid-uid"]], "pydicom.uid.UltrasoundImageStorage": [[497, "pydicom-uid-ultrasoundimagestorage"]], "pydicom.uid.UltrasoundMultiFrameImageStorage": [[498, "pydicom-uid-ultrasoundmultiframeimagestorage"]], "pydicom.uid.UncompressedTransferSyntaxes": [[499, "pydicom-uid-uncompressedtransfersyntaxes"]], "pydicom.uid.VLEndoscopicImageStorage": [[500, "pydicom-uid-vlendoscopicimagestorage"]], "pydicom.uid.VLMicroscopicImageStorage": [[501, "pydicom-uid-vlmicroscopicimagestorage"]], "pydicom.uid.VLPhotographicImageStorage": [[502, "pydicom-uid-vlphotographicimagestorage"]], "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage": [[503, "pydicom-uid-vlslidecoordinatesmicroscopicimagestorage"]], "pydicom.uid.VLWholeSlideMicroscopyImageStorage": [[504, "pydicom-uid-vlwholeslidemicroscopyimagestorage"]], "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage": [[505, "pydicom-uid-variablemodalitylutsoftcopypresentationstatestorage"]], "pydicom.uid.VideoEndoscopicImageStorage": [[506, "pydicom-uid-videoendoscopicimagestorage"]], "pydicom.uid.VideoMicroscopicImageStorage": [[507, "pydicom-uid-videomicroscopicimagestorage"]], "pydicom.uid.VideoPhotographicImageStorage": [[508, "pydicom-uid-videophotographicimagestorage"]], "pydicom.uid.VisualAcuityMeasurementsStorage": [[509, "pydicom-uid-visualacuitymeasurementsstorage"]], "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage": [[510, "pydicom-uid-volumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage": [[511, "pydicom-uid-widefieldophthalmicphotography3dcoordinatesimagestorage"]], "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage": [[512, "pydicom-uid-widefieldophthalmicphotographystereographicprojectionimagestorage"]], "pydicom.uid.XADefinedProcedureProtocolStorage": [[513, "pydicom-uid-xadefinedprocedureprotocolstorage"]], "pydicom.uid.XAPerformedProcedureProtocolStorage": [[514, "pydicom-uid-xaperformedprocedureprotocolstorage"]], "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage": [[515, "pydicom-uid-xaxrfgrayscalesoftcopypresentationstatestorage"]], "pydicom.uid.XRay3DAngiographicImageStorage": [[516, "pydicom-uid-xray3dangiographicimagestorage"]], "pydicom.uid.XRay3DCraniofacialImageStorage": [[517, "pydicom-uid-xray3dcraniofacialimagestorage"]], "pydicom.uid.XRayAngiographicImageStorage": [[518, "pydicom-uid-xrayangiographicimagestorage"]], "pydicom.uid.XRayRadiationDoseSRStorage": [[519, "pydicom-uid-xrayradiationdosesrstorage"]], "pydicom.uid.XRayRadiofluoroscopicImageStorage": [[520, "pydicom-uid-xrayradiofluoroscopicimagestorage"]], "pydicom.uid.generate_uid": [[521, "pydicom-uid-generate-uid"]], "pydicom.uid.register_transfer_syntax": [[522, "pydicom-uid-register-transfer-syntax"]], "pydicom.valuerep.DA": [[523, "pydicom-valuerep-da"]], "pydicom.valuerep.DS": [[524, "pydicom-valuerep-ds"]], "pydicom.valuerep.DSdecimal": [[525, "pydicom-valuerep-dsdecimal"]], "pydicom.valuerep.DSfloat": [[526, "pydicom-valuerep-dsfloat"]], "pydicom.valuerep.DT": [[527, "pydicom-valuerep-dt"]], "pydicom.valuerep.IS": [[528, "pydicom-valuerep-is"]], "pydicom.valuerep.ISfloat": [[529, "pydicom-valuerep-isfloat"]], "pydicom.valuerep.PersonName": [[530, "pydicom-valuerep-personname"]], "pydicom.valuerep.TM": [[531, "pydicom-valuerep-tm"]], "pydicom.valuerep.VR": [[532, "pydicom-valuerep-vr"]], "pydicom.valuerep.format_number_as_ds": [[533, "pydicom-valuerep-format-number-as-ds"]], "pydicom.valuerep.is_valid_ds": [[534, "pydicom-valuerep-is-valid-ds"]], "pydicom.values.convert_AE_string": [[535, "pydicom-values-convert-ae-string"]], "pydicom.values.convert_ATvalue": [[536, "pydicom-values-convert-atvalue"]], "pydicom.values.convert_DA_string": [[537, "pydicom-values-convert-da-string"]], "pydicom.values.convert_DS_string": [[538, "pydicom-values-convert-ds-string"]], "pydicom.values.convert_DT_string": [[539, "pydicom-values-convert-dt-string"]], "pydicom.values.convert_IS_string": [[540, "pydicom-values-convert-is-string"]], "pydicom.values.convert_OBvalue": [[541, "pydicom-values-convert-obvalue"]], "pydicom.values.convert_OWvalue": [[542, "pydicom-values-convert-owvalue"]], "pydicom.values.convert_PN": [[543, "pydicom-values-convert-pn"]], "pydicom.values.convert_SQ": [[544, "pydicom-values-convert-sq"]], "pydicom.values.convert_TM_string": [[545, "pydicom-values-convert-tm-string"]], "pydicom.values.convert_UI": [[546, "pydicom-values-convert-ui"]], "pydicom.values.convert_UN": [[547, "pydicom-values-convert-un"]], "pydicom.values.convert_UR_string": [[548, "pydicom-values-convert-ur-string"]], "pydicom.values.convert_numbers": [[549, "pydicom-values-convert-numbers"]], "pydicom.values.convert_single_string": [[550, "pydicom-values-convert-single-string"]], "pydicom.values.convert_string": [[551, "pydicom-values-convert-string"]], "pydicom.values.convert_tag": [[552, "pydicom-values-convert-tag"]], "pydicom.values.convert_text": [[553, "pydicom-values-convert-text"]], "pydicom.values.convert_value": [[554, "pydicom-values-convert-value"]], "pydicom.values.multi_string": [[555, "pydicom-values-multi-string"]], "pydicom.waveforms.numpy_handler": [[556, "module-pydicom.waveforms.numpy_handler"]], "pyjpegls": [[33, "pyjpegls"], [41, "pyjpegls"], [41, "id6"]], "pylibjpeg": [[33, "pylibjpeg"], [36, "pylibjpeg"], [41, "pylibjpeg"], [41, "id8"]]}, "docnames": ["auto_examples/dicomtree", "auto_examples/image_processing/index", "auto_examples/image_processing/plot_downsize_image", "auto_examples/image_processing/plot_waveforms", "auto_examples/image_processing/reslice", "auto_examples/image_processing/sg_execution_times", "auto_examples/index", "auto_examples/input_output/index", "auto_examples/input_output/plot_printing_dataset", "auto_examples/input_output/plot_read_dicom", "auto_examples/input_output/plot_read_fileset", "auto_examples/input_output/plot_read_rtplan", "auto_examples/input_output/plot_write_dicom", "auto_examples/input_output/sg_execution_times", "auto_examples/memory_dataset", "auto_examples/metadata_processing/index", "auto_examples/metadata_processing/plot_add_dict_entries", "auto_examples/metadata_processing/plot_anonymize", "auto_examples/metadata_processing/plot_sequences", "auto_examples/metadata_processing/sg_execution_times", "auto_examples/plot_dicom_difference", "auto_examples/sg_execution_times", "auto_examples/show_charset_name", "faq/index", "guides/cli/cli_codify", "guides/cli/cli_dev", "guides/cli/cli_guide", "guides/cli/cli_intro", "guides/cli/cli_show", "guides/decoding/decoder_options", "guides/decoding/decoder_plugins", "guides/decoding/index", "guides/element_value_types", "guides/encoding/encoder_plugin_options", "guides/encoding/encoder_plugins", "guides/encoding/index", "guides/encoding/jpeg_2k", "guides/encoding/jpeg_ls", "guides/encoding/rle_lossless", "guides/glossary", "guides/index", "guides/plugin_table", "guides/user/base_element", "guides/user/best_practices", "guides/user/image_data_compression", "guides/user/image_data_handlers", "guides/user/index", "guides/user/private_data_elements", "guides/user/viewing_images", "guides/user/working_with_overlays", "guides/user/working_with_pixel_data", "guides/user/working_with_waveforms", "guides/user/writing_files", "guides/writing_documentation", "index", "reference/charset", "reference/config", "reference/data", "reference/datadict", "reference/dataset", "reference/elem", "reference/elem.dataelem", "reference/elem.multival", "reference/elem.sequence", "reference/elem.tag", "reference/elem.valuerep", "reference/elem.values", "reference/encaps", "reference/errors", "reference/examples", "reference/fileio", "reference/fileio.base", "reference/fileio.read", "reference/fileio.util", "reference/fileio.write", "reference/fileset", "reference/generated/pydicom.charset.convert_encodings", "reference/generated/pydicom.charset.decode_bytes", "reference/generated/pydicom.charset.decode_element", "reference/generated/pydicom.charset.encode_string", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS", "reference/generated/pydicom.config.DS_decimal", "reference/generated/pydicom.config.DS_numpy", "reference/generated/pydicom.config.IGNORE", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR", "reference/generated/pydicom.config.RAISE", "reference/generated/pydicom.config.WARN", "reference/generated/pydicom.config.allow_DS_float", "reference/generated/pydicom.config.assume_implicit_vr_switch", "reference/generated/pydicom.config.convert_wrong_length_to_UN", "reference/generated/pydicom.config.data_element_callback", "reference/generated/pydicom.config.data_element_callback_kwargs", "reference/generated/pydicom.config.datetime_conversion", "reference/generated/pydicom.config.debug", "reference/generated/pydicom.config.enforce_valid_values", "reference/generated/pydicom.config.future_behavior", "reference/generated/pydicom.config.pixel_data_handlers", "reference/generated/pydicom.config.reset_data_element_callback", "reference/generated/pydicom.config.settings", "reference/generated/pydicom.config.show_file_meta", "reference/generated/pydicom.config.use_DS_decimal", "reference/generated/pydicom.config.use_DS_numpy", "reference/generated/pydicom.config.use_IS_numpy", "reference/generated/pydicom.data.get_charset_files", "reference/generated/pydicom.data.get_palette_files", "reference/generated/pydicom.data.get_testdata_file", "reference/generated/pydicom.data.get_testdata_files", "reference/generated/pydicom.datadict.add_dict_entries", "reference/generated/pydicom.datadict.add_dict_entry", "reference/generated/pydicom.datadict.add_private_dict_entries", "reference/generated/pydicom.datadict.add_private_dict_entry", "reference/generated/pydicom.datadict.dictionary_VM", "reference/generated/pydicom.datadict.dictionary_VR", "reference/generated/pydicom.datadict.dictionary_description", "reference/generated/pydicom.datadict.dictionary_has_tag", "reference/generated/pydicom.datadict.dictionary_is_retired", "reference/generated/pydicom.datadict.dictionary_keyword", "reference/generated/pydicom.datadict.get_entry", "reference/generated/pydicom.datadict.get_private_entry", "reference/generated/pydicom.datadict.keyword_for_tag", "reference/generated/pydicom.datadict.mask_match", "reference/generated/pydicom.datadict.private_dictionary_VM", "reference/generated/pydicom.datadict.private_dictionary_VR", "reference/generated/pydicom.datadict.private_dictionary_description", "reference/generated/pydicom.datadict.repeater_has_keyword", "reference/generated/pydicom.datadict.repeater_has_tag", "reference/generated/pydicom.datadict.tag_for_keyword", "reference/generated/pydicom.dataelem.DataElement", "reference/generated/pydicom.dataelem.DataElement_from_raw", "reference/generated/pydicom.dataelem.RawDataElement", "reference/generated/pydicom.dataset.Dataset", "reference/generated/pydicom.dataset.FileDataset", "reference/generated/pydicom.dataset.FileMetaDataset", "reference/generated/pydicom.dataset.PrivateBlock", "reference/generated/pydicom.dataset.validate_file_meta", "reference/generated/pydicom.encaps.decode_data_sequence", "reference/generated/pydicom.encaps.defragment_data", "reference/generated/pydicom.encaps.encapsulate", "reference/generated/pydicom.encaps.encapsulate_extended", "reference/generated/pydicom.encaps.fragment_frame", "reference/generated/pydicom.encaps.generate_fragmented_frames", "reference/generated/pydicom.encaps.generate_fragments", "reference/generated/pydicom.encaps.generate_frames", "reference/generated/pydicom.encaps.generate_pixel_data", "reference/generated/pydicom.encaps.generate_pixel_data_fragment", "reference/generated/pydicom.encaps.generate_pixel_data_frame", "reference/generated/pydicom.encaps.get_frame", "reference/generated/pydicom.encaps.get_frame_offsets", "reference/generated/pydicom.encaps.itemize_fragment", "reference/generated/pydicom.encaps.itemize_frame", "reference/generated/pydicom.encaps.parse_basic_offsets", "reference/generated/pydicom.encaps.parse_fragments", "reference/generated/pydicom.encaps.read_item", "reference/generated/pydicom.errors.InvalidDicomError", "reference/generated/pydicom.examples.get_path", "reference/generated/pydicom.filebase.DicomBytesIO", "reference/generated/pydicom.filebase.DicomFile", "reference/generated/pydicom.filebase.DicomFileLike", "reference/generated/pydicom.filebase.DicomIO", "reference/generated/pydicom.filereader.data_element_generator", "reference/generated/pydicom.filereader.data_element_offset_to_value", "reference/generated/pydicom.filereader.dcmread", "reference/generated/pydicom.filereader.read_dataset", "reference/generated/pydicom.filereader.read_deferred_data_element", "reference/generated/pydicom.filereader.read_file_meta_info", "reference/generated/pydicom.filereader.read_partial", "reference/generated/pydicom.filereader.read_preamble", "reference/generated/pydicom.filereader.read_sequence", "reference/generated/pydicom.filereader.read_sequence_item", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS", "reference/generated/pydicom.fileset.FileInstance", "reference/generated/pydicom.fileset.FileSet", "reference/generated/pydicom.fileset.RecordNode", "reference/generated/pydicom.fileset.generate_filename", "reference/generated/pydicom.fileset.is_conformant_file_id", "reference/generated/pydicom.fileutil.absorb_delimiter_item", "reference/generated/pydicom.fileutil.find_bytes", "reference/generated/pydicom.fileutil.find_delimiter", "reference/generated/pydicom.fileutil.length_of_undefined_length", "reference/generated/pydicom.fileutil.read_undefined_length_value", "reference/generated/pydicom.filewriter.correct_ambiguous_vr", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element", "reference/generated/pydicom.filewriter.dcmwrite", "reference/generated/pydicom.filewriter.multi_string", "reference/generated/pydicom.filewriter.write_ATvalue", "reference/generated/pydicom.filewriter.write_DA", "reference/generated/pydicom.filewriter.write_DT", "reference/generated/pydicom.filewriter.write_OBvalue", "reference/generated/pydicom.filewriter.write_OWvalue", "reference/generated/pydicom.filewriter.write_PN", "reference/generated/pydicom.filewriter.write_TM", "reference/generated/pydicom.filewriter.write_UI", "reference/generated/pydicom.filewriter.write_UN", "reference/generated/pydicom.filewriter.write_data_element", "reference/generated/pydicom.filewriter.write_dataset", "reference/generated/pydicom.filewriter.write_file_meta_info", "reference/generated/pydicom.filewriter.write_number_string", "reference/generated/pydicom.filewriter.write_numbers", "reference/generated/pydicom.filewriter.write_sequence", "reference/generated/pydicom.filewriter.write_sequence_item", "reference/generated/pydicom.filewriter.write_string", "reference/generated/pydicom.filewriter.write_text", "reference/generated/pydicom.misc.is_dicom", "reference/generated/pydicom.misc.size_in_bytes", "reference/generated/pydicom.multival.MultiValue", "reference/generated/pydicom.overlays.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler", "reference/generated/pydicom.pixel_data_handlers.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.pillow_handler", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler", "reference/generated/pydicom.pixel_data_handlers.rle_handler", "reference/generated/pydicom.pixels.apply_color_lut", "reference/generated/pydicom.pixels.apply_modality_lut", "reference/generated/pydicom.pixels.apply_rescale", "reference/generated/pydicom.pixels.apply_voi", "reference/generated/pydicom.pixels.apply_voi_lut", "reference/generated/pydicom.pixels.apply_windowing", "reference/generated/pydicom.pixels.as_pixel_options", "reference/generated/pydicom.pixels.compress", "reference/generated/pydicom.pixels.convert_color_space", "reference/generated/pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", "reference/generated/pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", "reference/generated/pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.JPEG2000Decoder", "reference/generated/pydicom.pixels.decoders.JPEG2000LosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGBaseline8BitDecoder", "reference/generated/pydicom.pixels.decoders.JPEGExtended12BitDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLSLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLosslessSV1Decoder", "reference/generated/pydicom.pixels.decoders.RLELosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner", "reference/generated/pydicom.pixels.decoders.base.Decoder", "reference/generated/pydicom.pixels.decompress", "reference/generated/pydicom.pixels.encoders.JPEG2000Encoder", "reference/generated/pydicom.pixels.encoders.JPEG2000LosslessEncoder", "reference/generated/pydicom.pixels.encoders.JPEGLSLosslessEncoder", "reference/generated/pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", "reference/generated/pydicom.pixels.encoders.RLELosslessEncoder", "reference/generated/pydicom.pixels.encoders.base.EncodeRunner", "reference/generated/pydicom.pixels.encoders.base.Encoder", "reference/generated/pydicom.pixels.get_decoder", "reference/generated/pydicom.pixels.get_encoder", "reference/generated/pydicom.pixels.iter_pixels", "reference/generated/pydicom.pixels.pack_bits", "reference/generated/pydicom.pixels.pixel_array", "reference/generated/pydicom.pixels.processing.apply_color_lut", "reference/generated/pydicom.pixels.processing.apply_modality_lut", "reference/generated/pydicom.pixels.processing.apply_rescale", "reference/generated/pydicom.pixels.processing.apply_voi", "reference/generated/pydicom.pixels.processing.apply_voi_lut", "reference/generated/pydicom.pixels.processing.apply_windowing", "reference/generated/pydicom.pixels.processing.convert_color_space", "reference/generated/pydicom.pixels.set_pixel_data", "reference/generated/pydicom.pixels.unpack_bits", "reference/generated/pydicom.pixels.utils.as_pixel_options", "reference/generated/pydicom.pixels.utils.compress", "reference/generated/pydicom.pixels.utils.decompress", "reference/generated/pydicom.pixels.utils.expand_ybr422", "reference/generated/pydicom.pixels.utils.get_expected_length", "reference/generated/pydicom.pixels.utils.get_image_pixel_ids", "reference/generated/pydicom.pixels.utils.get_j2k_parameters", "reference/generated/pydicom.pixels.utils.get_nr_frames", "reference/generated/pydicom.pixels.utils.iter_pixels", "reference/generated/pydicom.pixels.utils.pack_bits", "reference/generated/pydicom.pixels.utils.pixel_array", "reference/generated/pydicom.pixels.utils.pixel_dtype", "reference/generated/pydicom.pixels.utils.reshape_pixel_array", "reference/generated/pydicom.pixels.utils.set_pixel_data", "reference/generated/pydicom.pixels.utils.unpack_bits", "reference/generated/pydicom.sequence.Sequence", "reference/generated/pydicom.sr.Code", "reference/generated/pydicom.sr.Collection", "reference/generated/pydicom.sr.Concepts", "reference/generated/pydicom.tag.BaseTag", "reference/generated/pydicom.tag.Tag", "reference/generated/pydicom.tag.TupleTag", "reference/generated/pydicom.tag.tag_in_exception", "reference/generated/pydicom.uid.AcquisitionContextSRStorage", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage", "reference/generated/pydicom.uid.AllTransferSyntaxes", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage", "reference/generated/pydicom.uid.BasicTextSRStorage", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.BodyPositionWaveformStorage", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.CTImageStorage", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage", "reference/generated/pydicom.uid.ChestCADSRStorage", "reference/generated/pydicom.uid.ColonCADSRStorage", "reference/generated/pydicom.uid.ColorPaletteStorage", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.Comprehensive3DSRStorage", "reference/generated/pydicom.uid.ComprehensiveSRStorage", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage", "reference/generated/pydicom.uid.CornealTopographyMapStorage", "reference/generated/pydicom.uid.DICOS2DAITStorage", "reference/generated/pydicom.uid.DICOS3DAITStorage", "reference/generated/pydicom.uid.DICOSCTImageStorage", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.EddyCurrentImageStorage", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage", "reference/generated/pydicom.uid.EncapsulatedCDAStorage", "reference/generated/pydicom.uid.EncapsulatedMTLStorage", "reference/generated/pydicom.uid.EncapsulatedOBJStorage", "reference/generated/pydicom.uid.EncapsulatedPDFStorage", "reference/generated/pydicom.uid.EncapsulatedSTLStorage", "reference/generated/pydicom.uid.EnhancedCTImageStorage", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage", "reference/generated/pydicom.uid.EnhancedMRImageStorage", "reference/generated/pydicom.uid.EnhancedPETImageStorage", "reference/generated/pydicom.uid.EnhancedRTImageStorage", "reference/generated/pydicom.uid.EnhancedSRStorage", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage", "reference/generated/pydicom.uid.EnhancedXAImageStorage", "reference/generated/pydicom.uid.EnhancedXRFImageStorage", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.ExplicitVRBigEndian", "reference/generated/pydicom.uid.ExplicitVRLittleEndian", "reference/generated/pydicom.uid.ExtensibleSRStorage", "reference/generated/pydicom.uid.General32bitECGWaveformStorage", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage", "reference/generated/pydicom.uid.GeneralECGWaveformStorage", "reference/generated/pydicom.uid.GenericImplantTemplateStorage", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.HEVCM10P51", "reference/generated/pydicom.uid.HEVCMP51", "reference/generated/pydicom.uid.HTJ2K", "reference/generated/pydicom.uid.HTJ2KLossless", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL", "reference/generated/pydicom.uid.HangingProtocolStorage", "reference/generated/pydicom.uid.HemodynamicWaveformStorage", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage", "reference/generated/pydicom.uid.ImplantationPlanSRStorage", "reference/generated/pydicom.uid.ImplicitVRLittleEndian", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pydicom.uid.InventoryStorage", "reference/generated/pydicom.uid.JPEG2000", "reference/generated/pydicom.uid.JPEG2000Lossless", "reference/generated/pydicom.uid.JPEG2000MC", "reference/generated/pydicom.uid.JPEG2000MCLossless", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes", "reference/generated/pydicom.uid.JPEGBaseline8Bit", "reference/generated/pydicom.uid.JPEGExtended12Bit", "reference/generated/pydicom.uid.JPEGLSLossless", "reference/generated/pydicom.uid.JPEGLSNearLossless", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes", "reference/generated/pydicom.uid.JPEGLossless", "reference/generated/pydicom.uid.JPEGLosslessSV1", "reference/generated/pydicom.uid.JPEGTransferSyntaxes", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pydicom.uid.LensometryMeasurementsStorage", "reference/generated/pydicom.uid.MPEG2MPHL", "reference/generated/pydicom.uid.MPEG2MPHLF", "reference/generated/pydicom.uid.MPEG2MPML", "reference/generated/pydicom.uid.MPEG2MPMLF", "reference/generated/pydicom.uid.MPEG4HP41", "reference/generated/pydicom.uid.MPEG4HP41BD", "reference/generated/pydicom.uid.MPEG4HP41BDF", "reference/generated/pydicom.uid.MPEG4HP41F", "reference/generated/pydicom.uid.MPEG4HP422D", "reference/generated/pydicom.uid.MPEG4HP422DF", "reference/generated/pydicom.uid.MPEG4HP423D", "reference/generated/pydicom.uid.MPEG4HP423DF", "reference/generated/pydicom.uid.MPEG4HP42STEREO", "reference/generated/pydicom.uid.MPEG4HP42STEREOF", "reference/generated/pydicom.uid.MPEGTransferSyntaxes", "reference/generated/pydicom.uid.MRImageStorage", "reference/generated/pydicom.uid.MRSpectroscopyStorage", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pydicom.uid.MammographyCADSRStorage", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.NuclearMedicineImageStorage", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID", "reference/generated/pydicom.uid.ParametricMapStorage", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PhotoacousticImageStorage", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage", "reference/generated/pydicom.uid.PrivateTransferSyntaxes", "reference/generated/pydicom.uid.ProcedureLogStorage", "reference/generated/pydicom.uid.ProtocolApprovalStorage", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.RE_VALID_UID", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX", "reference/generated/pydicom.uid.RLELossless", "reference/generated/pydicom.uid.RLETransferSyntaxes", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage", "reference/generated/pydicom.uid.RTDoseStorage", "reference/generated/pydicom.uid.RTImageStorage", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTIonPlanStorage", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "reference/generated/pydicom.uid.RTPhysicianIntentStorage", "reference/generated/pydicom.uid.RTPlanStorage", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTRadiationSetStorage", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage", "reference/generated/pydicom.uid.RTStructureSetStorage", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pydicom.uid.RawDataStorage", "reference/generated/pydicom.uid.RealWorldValueMappingStorage", "reference/generated/pydicom.uid.RespiratoryWaveformStorage", "reference/generated/pydicom.uid.RoboticArmRadiationStorage", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage", "reference/generated/pydicom.uid.SegmentationStorage", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SpatialFiducialsStorage", "reference/generated/pydicom.uid.SpatialRegistrationStorage", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage", "reference/generated/pydicom.uid.StereometricRelationshipStorage", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage", "reference/generated/pydicom.uid.SurfaceScanMeshStorage", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage", "reference/generated/pydicom.uid.SurfaceSegmentationStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage", "reference/generated/pydicom.uid.TractographyResultsStorage", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage", "reference/generated/pydicom.uid.UID", "reference/generated/pydicom.uid.UltrasoundImageStorage", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes", "reference/generated/pydicom.uid.VLEndoscopicImageStorage", "reference/generated/pydicom.uid.VLMicroscopicImageStorage", "reference/generated/pydicom.uid.VLPhotographicImageStorage", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage", "reference/generated/pydicom.uid.VideoPhotographicImageStorage", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage", "reference/generated/pydicom.uid.XRayAngiographicImageStorage", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage", "reference/generated/pydicom.uid.generate_uid", "reference/generated/pydicom.uid.register_transfer_syntax", "reference/generated/pydicom.valuerep.DA", "reference/generated/pydicom.valuerep.DS", "reference/generated/pydicom.valuerep.DSdecimal", "reference/generated/pydicom.valuerep.DSfloat", "reference/generated/pydicom.valuerep.DT", "reference/generated/pydicom.valuerep.IS", "reference/generated/pydicom.valuerep.ISfloat", "reference/generated/pydicom.valuerep.PersonName", "reference/generated/pydicom.valuerep.TM", "reference/generated/pydicom.valuerep.VR", "reference/generated/pydicom.valuerep.format_number_as_ds", "reference/generated/pydicom.valuerep.is_valid_ds", "reference/generated/pydicom.values.convert_AE_string", "reference/generated/pydicom.values.convert_ATvalue", "reference/generated/pydicom.values.convert_DA_string", "reference/generated/pydicom.values.convert_DS_string", "reference/generated/pydicom.values.convert_DT_string", "reference/generated/pydicom.values.convert_IS_string", "reference/generated/pydicom.values.convert_OBvalue", "reference/generated/pydicom.values.convert_OWvalue", "reference/generated/pydicom.values.convert_PN", "reference/generated/pydicom.values.convert_SQ", "reference/generated/pydicom.values.convert_TM_string", "reference/generated/pydicom.values.convert_UI", "reference/generated/pydicom.values.convert_UN", "reference/generated/pydicom.values.convert_UR_string", "reference/generated/pydicom.values.convert_numbers", "reference/generated/pydicom.values.convert_single_string", "reference/generated/pydicom.values.convert_string", "reference/generated/pydicom.values.convert_tag", "reference/generated/pydicom.values.convert_text", "reference/generated/pydicom.values.convert_value", "reference/generated/pydicom.values.multi_string", "reference/generated/pydicom.waveforms.numpy_handler", "reference/handlers", "reference/handlers.pixel_data", "reference/index", "reference/misc", "reference/overlays", "reference/pixels", "reference/pixels.decoders", "reference/pixels.encoders", "reference/pixels.processing", "reference/pixels.utils", "reference/sr", "reference/uid", "reference/waveforms", "release_notes/index", "release_notes/v0.9.2", "release_notes/v0.9.3", "release_notes/v0.9.4", "release_notes/v0.9.5", "release_notes/v0.9.6", "release_notes/v0.9.7", "release_notes/v0.9.8", "release_notes/v0.9.9", "release_notes/v1.0.0", "release_notes/v1.1.0", "release_notes/v1.2.0", "release_notes/v1.3.0", "release_notes/v1.4.0", "release_notes/v1.4.1", "release_notes/v2.0.0", "release_notes/v2.1.0", "release_notes/v2.1.1", "release_notes/v2.2.0", "release_notes/v2.3.0", "release_notes/v2.4.0", "release_notes/v3.0.0", "sg_execution_times", "tutorials/contributing", "tutorials/contributing_code", "tutorials/contributing_docs", "tutorials/dataset_basics", "tutorials/dicom_json", "tutorials/filesets", "tutorials/index", "tutorials/installation", "tutorials/pixel_data/compressing", "tutorials/pixel_data/creation", "tutorials/pixel_data/index", "tutorials/pixel_data/introduction", "tutorials/sr_basics", "tutorials/waveforms"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["auto_examples/dicomtree.rst", "auto_examples/image_processing/index.rst", "auto_examples/image_processing/plot_downsize_image.rst", "auto_examples/image_processing/plot_waveforms.rst", "auto_examples/image_processing/reslice.rst", "auto_examples/image_processing/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/input_output/index.rst", "auto_examples/input_output/plot_printing_dataset.rst", "auto_examples/input_output/plot_read_dicom.rst", "auto_examples/input_output/plot_read_fileset.rst", "auto_examples/input_output/plot_read_rtplan.rst", "auto_examples/input_output/plot_write_dicom.rst", "auto_examples/input_output/sg_execution_times.rst", "auto_examples/memory_dataset.rst", "auto_examples/metadata_processing/index.rst", "auto_examples/metadata_processing/plot_add_dict_entries.rst", "auto_examples/metadata_processing/plot_anonymize.rst", "auto_examples/metadata_processing/plot_sequences.rst", "auto_examples/metadata_processing/sg_execution_times.rst", "auto_examples/plot_dicom_difference.rst", "auto_examples/sg_execution_times.rst", "auto_examples/show_charset_name.rst", "faq/index.rst", "guides/cli/cli_codify.rst", "guides/cli/cli_dev.rst", "guides/cli/cli_guide.rst", "guides/cli/cli_intro.rst", "guides/cli/cli_show.rst", "guides/decoding/decoder_options.rst", "guides/decoding/decoder_plugins.rst", "guides/decoding/index.rst", "guides/element_value_types.rst", "guides/encoding/encoder_plugin_options.rst", "guides/encoding/encoder_plugins.rst", "guides/encoding/index.rst", "guides/encoding/jpeg_2k.rst", "guides/encoding/jpeg_ls.rst", "guides/encoding/rle_lossless.rst", "guides/glossary.rst", "guides/index.rst", "guides/plugin_table.rst", "guides/user/base_element.rst", "guides/user/best_practices.rst", "guides/user/image_data_compression.rst", "guides/user/image_data_handlers.rst", "guides/user/index.rst", "guides/user/private_data_elements.rst", "guides/user/viewing_images.rst", "guides/user/working_with_overlays.rst", "guides/user/working_with_pixel_data.rst", "guides/user/working_with_waveforms.rst", "guides/user/writing_files.rst", "guides/writing_documentation.rst", "index.rst", "reference/charset.rst", "reference/config.rst", "reference/data.rst", "reference/datadict.rst", "reference/dataset.rst", "reference/elem.rst", "reference/elem.dataelem.rst", "reference/elem.multival.rst", "reference/elem.sequence.rst", "reference/elem.tag.rst", "reference/elem.valuerep.rst", "reference/elem.values.rst", "reference/encaps.rst", "reference/errors.rst", "reference/examples.rst", "reference/fileio.rst", "reference/fileio.base.rst", "reference/fileio.read.rst", "reference/fileio.util.rst", "reference/fileio.write.rst", "reference/fileset.rst", "reference/generated/pydicom.charset.convert_encodings.rst", "reference/generated/pydicom.charset.decode_bytes.rst", "reference/generated/pydicom.charset.decode_element.rst", "reference/generated/pydicom.charset.encode_string.rst", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS.rst", "reference/generated/pydicom.config.DS_decimal.rst", "reference/generated/pydicom.config.DS_numpy.rst", "reference/generated/pydicom.config.IGNORE.rst", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR.rst", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR.rst", "reference/generated/pydicom.config.RAISE.rst", "reference/generated/pydicom.config.WARN.rst", "reference/generated/pydicom.config.allow_DS_float.rst", "reference/generated/pydicom.config.assume_implicit_vr_switch.rst", "reference/generated/pydicom.config.convert_wrong_length_to_UN.rst", "reference/generated/pydicom.config.data_element_callback.rst", "reference/generated/pydicom.config.data_element_callback_kwargs.rst", "reference/generated/pydicom.config.datetime_conversion.rst", "reference/generated/pydicom.config.debug.rst", "reference/generated/pydicom.config.enforce_valid_values.rst", "reference/generated/pydicom.config.future_behavior.rst", "reference/generated/pydicom.config.pixel_data_handlers.rst", "reference/generated/pydicom.config.reset_data_element_callback.rst", "reference/generated/pydicom.config.settings.rst", "reference/generated/pydicom.config.show_file_meta.rst", "reference/generated/pydicom.config.use_DS_decimal.rst", "reference/generated/pydicom.config.use_DS_numpy.rst", "reference/generated/pydicom.config.use_IS_numpy.rst", "reference/generated/pydicom.data.get_charset_files.rst", "reference/generated/pydicom.data.get_palette_files.rst", "reference/generated/pydicom.data.get_testdata_file.rst", "reference/generated/pydicom.data.get_testdata_files.rst", "reference/generated/pydicom.datadict.add_dict_entries.rst", "reference/generated/pydicom.datadict.add_dict_entry.rst", "reference/generated/pydicom.datadict.add_private_dict_entries.rst", "reference/generated/pydicom.datadict.add_private_dict_entry.rst", "reference/generated/pydicom.datadict.dictionary_VM.rst", "reference/generated/pydicom.datadict.dictionary_VR.rst", "reference/generated/pydicom.datadict.dictionary_description.rst", "reference/generated/pydicom.datadict.dictionary_has_tag.rst", "reference/generated/pydicom.datadict.dictionary_is_retired.rst", "reference/generated/pydicom.datadict.dictionary_keyword.rst", "reference/generated/pydicom.datadict.get_entry.rst", "reference/generated/pydicom.datadict.get_private_entry.rst", "reference/generated/pydicom.datadict.keyword_for_tag.rst", "reference/generated/pydicom.datadict.mask_match.rst", "reference/generated/pydicom.datadict.private_dictionary_VM.rst", "reference/generated/pydicom.datadict.private_dictionary_VR.rst", "reference/generated/pydicom.datadict.private_dictionary_description.rst", "reference/generated/pydicom.datadict.repeater_has_keyword.rst", "reference/generated/pydicom.datadict.repeater_has_tag.rst", "reference/generated/pydicom.datadict.tag_for_keyword.rst", "reference/generated/pydicom.dataelem.DataElement.rst", "reference/generated/pydicom.dataelem.DataElement_from_raw.rst", "reference/generated/pydicom.dataelem.RawDataElement.rst", "reference/generated/pydicom.dataset.Dataset.rst", "reference/generated/pydicom.dataset.FileDataset.rst", "reference/generated/pydicom.dataset.FileMetaDataset.rst", "reference/generated/pydicom.dataset.PrivateBlock.rst", "reference/generated/pydicom.dataset.validate_file_meta.rst", "reference/generated/pydicom.encaps.decode_data_sequence.rst", "reference/generated/pydicom.encaps.defragment_data.rst", "reference/generated/pydicom.encaps.encapsulate.rst", "reference/generated/pydicom.encaps.encapsulate_extended.rst", "reference/generated/pydicom.encaps.fragment_frame.rst", "reference/generated/pydicom.encaps.generate_fragmented_frames.rst", "reference/generated/pydicom.encaps.generate_fragments.rst", "reference/generated/pydicom.encaps.generate_frames.rst", "reference/generated/pydicom.encaps.generate_pixel_data.rst", "reference/generated/pydicom.encaps.generate_pixel_data_fragment.rst", "reference/generated/pydicom.encaps.generate_pixel_data_frame.rst", "reference/generated/pydicom.encaps.get_frame.rst", "reference/generated/pydicom.encaps.get_frame_offsets.rst", "reference/generated/pydicom.encaps.itemize_fragment.rst", "reference/generated/pydicom.encaps.itemize_frame.rst", "reference/generated/pydicom.encaps.parse_basic_offsets.rst", "reference/generated/pydicom.encaps.parse_fragments.rst", "reference/generated/pydicom.encaps.read_item.rst", "reference/generated/pydicom.errors.InvalidDicomError.rst", "reference/generated/pydicom.examples.get_path.rst", "reference/generated/pydicom.filebase.DicomBytesIO.rst", "reference/generated/pydicom.filebase.DicomFile.rst", "reference/generated/pydicom.filebase.DicomFileLike.rst", "reference/generated/pydicom.filebase.DicomIO.rst", "reference/generated/pydicom.filereader.data_element_generator.rst", "reference/generated/pydicom.filereader.data_element_offset_to_value.rst", "reference/generated/pydicom.filereader.dcmread.rst", "reference/generated/pydicom.filereader.read_dataset.rst", "reference/generated/pydicom.filereader.read_deferred_data_element.rst", "reference/generated/pydicom.filereader.read_file_meta_info.rst", "reference/generated/pydicom.filereader.read_partial.rst", "reference/generated/pydicom.filereader.read_preamble.rst", "reference/generated/pydicom.filereader.read_sequence.rst", "reference/generated/pydicom.filereader.read_sequence_item.rst", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS.rst", "reference/generated/pydicom.fileset.FileInstance.rst", "reference/generated/pydicom.fileset.FileSet.rst", "reference/generated/pydicom.fileset.RecordNode.rst", "reference/generated/pydicom.fileset.generate_filename.rst", "reference/generated/pydicom.fileset.is_conformant_file_id.rst", "reference/generated/pydicom.fileutil.absorb_delimiter_item.rst", "reference/generated/pydicom.fileutil.find_bytes.rst", "reference/generated/pydicom.fileutil.find_delimiter.rst", "reference/generated/pydicom.fileutil.length_of_undefined_length.rst", "reference/generated/pydicom.fileutil.read_undefined_length_value.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element.rst", "reference/generated/pydicom.filewriter.dcmwrite.rst", "reference/generated/pydicom.filewriter.multi_string.rst", "reference/generated/pydicom.filewriter.write_ATvalue.rst", "reference/generated/pydicom.filewriter.write_DA.rst", "reference/generated/pydicom.filewriter.write_DT.rst", "reference/generated/pydicom.filewriter.write_OBvalue.rst", "reference/generated/pydicom.filewriter.write_OWvalue.rst", "reference/generated/pydicom.filewriter.write_PN.rst", "reference/generated/pydicom.filewriter.write_TM.rst", "reference/generated/pydicom.filewriter.write_UI.rst", "reference/generated/pydicom.filewriter.write_UN.rst", "reference/generated/pydicom.filewriter.write_data_element.rst", "reference/generated/pydicom.filewriter.write_dataset.rst", "reference/generated/pydicom.filewriter.write_file_meta_info.rst", "reference/generated/pydicom.filewriter.write_number_string.rst", "reference/generated/pydicom.filewriter.write_numbers.rst", "reference/generated/pydicom.filewriter.write_sequence.rst", "reference/generated/pydicom.filewriter.write_sequence_item.rst", "reference/generated/pydicom.filewriter.write_string.rst", "reference/generated/pydicom.filewriter.write_text.rst", "reference/generated/pydicom.misc.is_dicom.rst", "reference/generated/pydicom.misc.size_in_bytes.rst", "reference/generated/pydicom.multival.MultiValue.rst", "reference/generated/pydicom.overlays.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler.rst", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler.rst", "reference/generated/pydicom.pixel_data_handlers.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pillow_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler.rst", "reference/generated/pydicom.pixel_data_handlers.rle_handler.rst", "reference/generated/pydicom.pixels.apply_color_lut.rst", "reference/generated/pydicom.pixels.apply_modality_lut.rst", "reference/generated/pydicom.pixels.apply_rescale.rst", "reference/generated/pydicom.pixels.apply_voi.rst", "reference/generated/pydicom.pixels.apply_voi_lut.rst", "reference/generated/pydicom.pixels.apply_windowing.rst", "reference/generated/pydicom.pixels.as_pixel_options.rst", "reference/generated/pydicom.pixels.compress.rst", "reference/generated/pydicom.pixels.convert_color_space.rst", "reference/generated/pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.ExplicitVRBigEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder.rst", "reference/generated/pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEG2000Decoder.rst", "reference/generated/pydicom.pixels.decoders.JPEG2000LosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGBaseline8BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGExtended12BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLSLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLSNearLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLosslessSV1Decoder.rst", "reference/generated/pydicom.pixels.decoders.RLELosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner.rst", "reference/generated/pydicom.pixels.decoders.base.Decoder.rst", "reference/generated/pydicom.pixels.decompress.rst", "reference/generated/pydicom.pixels.encoders.JPEG2000Encoder.rst", "reference/generated/pydicom.pixels.encoders.JPEG2000LosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.JPEGLSLosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.JPEGLSNearLosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.RLELosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.base.EncodeRunner.rst", "reference/generated/pydicom.pixels.encoders.base.Encoder.rst", "reference/generated/pydicom.pixels.get_decoder.rst", "reference/generated/pydicom.pixels.get_encoder.rst", "reference/generated/pydicom.pixels.iter_pixels.rst", "reference/generated/pydicom.pixels.pack_bits.rst", "reference/generated/pydicom.pixels.pixel_array.rst", "reference/generated/pydicom.pixels.processing.apply_color_lut.rst", "reference/generated/pydicom.pixels.processing.apply_modality_lut.rst", "reference/generated/pydicom.pixels.processing.apply_rescale.rst", "reference/generated/pydicom.pixels.processing.apply_voi.rst", "reference/generated/pydicom.pixels.processing.apply_voi_lut.rst", "reference/generated/pydicom.pixels.processing.apply_windowing.rst", "reference/generated/pydicom.pixels.processing.convert_color_space.rst", "reference/generated/pydicom.pixels.set_pixel_data.rst", "reference/generated/pydicom.pixels.unpack_bits.rst", "reference/generated/pydicom.pixels.utils.as_pixel_options.rst", "reference/generated/pydicom.pixels.utils.compress.rst", "reference/generated/pydicom.pixels.utils.decompress.rst", "reference/generated/pydicom.pixels.utils.expand_ybr422.rst", "reference/generated/pydicom.pixels.utils.get_expected_length.rst", "reference/generated/pydicom.pixels.utils.get_image_pixel_ids.rst", "reference/generated/pydicom.pixels.utils.get_j2k_parameters.rst", "reference/generated/pydicom.pixels.utils.get_nr_frames.rst", "reference/generated/pydicom.pixels.utils.iter_pixels.rst", "reference/generated/pydicom.pixels.utils.pack_bits.rst", "reference/generated/pydicom.pixels.utils.pixel_array.rst", "reference/generated/pydicom.pixels.utils.pixel_dtype.rst", "reference/generated/pydicom.pixels.utils.reshape_pixel_array.rst", "reference/generated/pydicom.pixels.utils.set_pixel_data.rst", "reference/generated/pydicom.pixels.utils.unpack_bits.rst", "reference/generated/pydicom.sequence.Sequence.rst", "reference/generated/pydicom.sr.Code.rst", "reference/generated/pydicom.sr.Collection.rst", "reference/generated/pydicom.sr.Concepts.rst", "reference/generated/pydicom.tag.BaseTag.rst", "reference/generated/pydicom.tag.Tag.rst", "reference/generated/pydicom.tag.TupleTag.rst", "reference/generated/pydicom.tag.tag_in_exception.rst", "reference/generated/pydicom.uid.AcquisitionContextSRStorage.rst", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pydicom.uid.AllTransferSyntaxes.rst", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage.rst", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage.rst", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage.rst", "reference/generated/pydicom.uid.BasicTextSRStorage.rst", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.BodyPositionWaveformStorage.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CTImageStorage.rst", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pydicom.uid.ChestCADSRStorage.rst", "reference/generated/pydicom.uid.ColonCADSRStorage.rst", "reference/generated/pydicom.uid.ColorPaletteStorage.rst", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.Comprehensive3DSRStorage.rst", "reference/generated/pydicom.uid.ComprehensiveSRStorage.rst", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage.rst", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage.rst", "reference/generated/pydicom.uid.CornealTopographyMapStorage.rst", "reference/generated/pydicom.uid.DICOS2DAITStorage.rst", "reference/generated/pydicom.uid.DICOS3DAITStorage.rst", "reference/generated/pydicom.uid.DICOSCTImageStorage.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage.rst", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage.rst", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.EddyCurrentImageStorage.rst", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage.rst", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage.rst", "reference/generated/pydicom.uid.EncapsulatedCDAStorage.rst", "reference/generated/pydicom.uid.EncapsulatedMTLStorage.rst", "reference/generated/pydicom.uid.EncapsulatedOBJStorage.rst", "reference/generated/pydicom.uid.EncapsulatedPDFStorage.rst", "reference/generated/pydicom.uid.EncapsulatedSTLStorage.rst", "reference/generated/pydicom.uid.EnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.EnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.EnhancedRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedSRStorage.rst", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage.rst", "reference/generated/pydicom.uid.EnhancedXAImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRFImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.ExplicitVRBigEndian.rst", "reference/generated/pydicom.uid.ExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.ExtensibleSRStorage.rst", "reference/generated/pydicom.uid.General32bitECGWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralECGWaveformStorage.rst", "reference/generated/pydicom.uid.GenericImplantTemplateStorage.rst", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.HEVCM10P51.rst", "reference/generated/pydicom.uid.HEVCMP51.rst", "reference/generated/pydicom.uid.HTJ2K.rst", "reference/generated/pydicom.uid.HTJ2KLossless.rst", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL.rst", "reference/generated/pydicom.uid.HangingProtocolStorage.rst", "reference/generated/pydicom.uid.HemodynamicWaveformStorage.rst", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage.rst", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage.rst", "reference/generated/pydicom.uid.ImplantationPlanSRStorage.rst", "reference/generated/pydicom.uid.ImplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pydicom.uid.InventoryStorage.rst", "reference/generated/pydicom.uid.JPEG2000.rst", "reference/generated/pydicom.uid.JPEG2000Lossless.rst", "reference/generated/pydicom.uid.JPEG2000MC.rst", "reference/generated/pydicom.uid.JPEG2000MCLossless.rst", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGBaseline8Bit.rst", "reference/generated/pydicom.uid.JPEGExtended12Bit.rst", "reference/generated/pydicom.uid.JPEGLSLossless.rst", "reference/generated/pydicom.uid.JPEGLSNearLossless.rst", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGLossless.rst", "reference/generated/pydicom.uid.JPEGLosslessSV1.rst", "reference/generated/pydicom.uid.JPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate.rst", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.LensometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.MPEG2MPHL.rst", "reference/generated/pydicom.uid.MPEG2MPHLF.rst", "reference/generated/pydicom.uid.MPEG2MPML.rst", "reference/generated/pydicom.uid.MPEG2MPMLF.rst", "reference/generated/pydicom.uid.MPEG4HP41.rst", "reference/generated/pydicom.uid.MPEG4HP41BD.rst", "reference/generated/pydicom.uid.MPEG4HP41BDF.rst", "reference/generated/pydicom.uid.MPEG4HP41F.rst", "reference/generated/pydicom.uid.MPEG4HP422D.rst", "reference/generated/pydicom.uid.MPEG4HP422DF.rst", "reference/generated/pydicom.uid.MPEG4HP423D.rst", "reference/generated/pydicom.uid.MPEG4HP423DF.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREO.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREOF.rst", "reference/generated/pydicom.uid.MPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.MRImageStorage.rst", "reference/generated/pydicom.uid.MRSpectroscopyStorage.rst", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pydicom.uid.MammographyCADSRStorage.rst", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage.rst", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.NuclearMedicineImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage.rst", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID.rst", "reference/generated/pydicom.uid.ParametricMapStorage.rst", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PhotoacousticImageStorage.rst", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage.rst", "reference/generated/pydicom.uid.PrivateTransferSyntaxes.rst", "reference/generated/pydicom.uid.ProcedureLogStorage.rst", "reference/generated/pydicom.uid.ProtocolApprovalStorage.rst", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.RE_VALID_UID.rst", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX.rst", "reference/generated/pydicom.uid.RLELossless.rst", "reference/generated/pydicom.uid.RLETransferSyntaxes.rst", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTDoseStorage.rst", "reference/generated/pydicom.uid.RTImageStorage.rst", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTIonPlanStorage.rst", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage.rst", "reference/generated/pydicom.uid.RTPhysicianIntentStorage.rst", "reference/generated/pydicom.uid.RTPlanStorage.rst", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage.rst", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetStorage.rst", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage.rst", "reference/generated/pydicom.uid.RTStructureSetStorage.rst", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage.rst", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.RawDataStorage.rst", "reference/generated/pydicom.uid.RealWorldValueMappingStorage.rst", "reference/generated/pydicom.uid.RespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.RoboticArmRadiationStorage.rst", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio.rst", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.SegmentationStorage.rst", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SpatialFiducialsStorage.rst", "reference/generated/pydicom.uid.SpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage.rst", "reference/generated/pydicom.uid.StereometricRelationshipStorage.rst", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.SurfaceScanMeshStorage.rst", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage.rst", "reference/generated/pydicom.uid.SurfaceSegmentationStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage.rst", "reference/generated/pydicom.uid.TractographyResultsStorage.rst", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage.rst", "reference/generated/pydicom.uid.UID.rst", "reference/generated/pydicom.uid.UltrasoundImageStorage.rst", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes.rst", "reference/generated/pydicom.uid.VLEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VLMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage.rst", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage.rst", "reference/generated/pydicom.uid.XRayAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pydicom.uid.generate_uid.rst", "reference/generated/pydicom.uid.register_transfer_syntax.rst", "reference/generated/pydicom.valuerep.DA.rst", "reference/generated/pydicom.valuerep.DS.rst", "reference/generated/pydicom.valuerep.DSdecimal.rst", "reference/generated/pydicom.valuerep.DSfloat.rst", "reference/generated/pydicom.valuerep.DT.rst", "reference/generated/pydicom.valuerep.IS.rst", "reference/generated/pydicom.valuerep.ISfloat.rst", "reference/generated/pydicom.valuerep.PersonName.rst", "reference/generated/pydicom.valuerep.TM.rst", "reference/generated/pydicom.valuerep.VR.rst", "reference/generated/pydicom.valuerep.format_number_as_ds.rst", "reference/generated/pydicom.valuerep.is_valid_ds.rst", "reference/generated/pydicom.values.convert_AE_string.rst", "reference/generated/pydicom.values.convert_ATvalue.rst", "reference/generated/pydicom.values.convert_DA_string.rst", "reference/generated/pydicom.values.convert_DS_string.rst", "reference/generated/pydicom.values.convert_DT_string.rst", "reference/generated/pydicom.values.convert_IS_string.rst", "reference/generated/pydicom.values.convert_OBvalue.rst", "reference/generated/pydicom.values.convert_OWvalue.rst", "reference/generated/pydicom.values.convert_PN.rst", "reference/generated/pydicom.values.convert_SQ.rst", "reference/generated/pydicom.values.convert_TM_string.rst", "reference/generated/pydicom.values.convert_UI.rst", "reference/generated/pydicom.values.convert_UN.rst", "reference/generated/pydicom.values.convert_UR_string.rst", "reference/generated/pydicom.values.convert_numbers.rst", "reference/generated/pydicom.values.convert_single_string.rst", "reference/generated/pydicom.values.convert_string.rst", "reference/generated/pydicom.values.convert_tag.rst", "reference/generated/pydicom.values.convert_text.rst", "reference/generated/pydicom.values.convert_value.rst", "reference/generated/pydicom.values.multi_string.rst", "reference/generated/pydicom.waveforms.numpy_handler.rst", "reference/handlers.rst", "reference/handlers.pixel_data.rst", "reference/index.rst", "reference/misc.rst", "reference/overlays.rst", "reference/pixels.rst", "reference/pixels.decoders.rst", "reference/pixels.encoders.rst", "reference/pixels.processing.rst", "reference/pixels.utils.rst", "reference/sr.rst", "reference/uid.rst", "reference/waveforms.rst", "release_notes/index.rst", "release_notes/v0.9.2.rst", "release_notes/v0.9.3.rst", "release_notes/v0.9.4.rst", "release_notes/v0.9.5.rst", "release_notes/v0.9.6.rst", "release_notes/v0.9.7.rst", "release_notes/v0.9.8.rst", "release_notes/v0.9.9.rst", "release_notes/v1.0.0.rst", "release_notes/v1.1.0.rst", "release_notes/v1.2.0.rst", "release_notes/v1.3.0.rst", "release_notes/v1.4.0.rst", "release_notes/v1.4.1.rst", "release_notes/v2.0.0.rst", "release_notes/v2.1.0.rst", "release_notes/v2.1.1.rst", "release_notes/v2.2.0.rst", "release_notes/v2.3.0.rst", "release_notes/v2.4.0.rst", "release_notes/v3.0.0.rst", "sg_execution_times.rst", "tutorials/contributing.rst", "tutorials/contributing_code.rst", "tutorials/contributing_docs.rst", "tutorials/dataset_basics.rst", "tutorials/dicom_json.rst", "tutorials/filesets.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/pixel_data/compressing.rst", "tutorials/pixel_data/creation.rst", "tutorials/pixel_data/index.rst", "tutorials/pixel_data/introduction.rst", "tutorials/sr_basics.rst", "tutorials/waveforms.rst"], "indexentries": {"__init__() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.__init__", false]], "__init__() (pydicom.dataelem.rawdataelement method)": [[130, "pydicom.dataelem.RawDataElement.__init__", false]], "__init__() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.__init__", false]], "__init__() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.__init__", false]], "__init__() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.__init__", false]], "__init__() (pydicom.dataset.privateblock method)": [[134, "pydicom.dataset.PrivateBlock.__init__", false]], "__init__() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.__init__", false]], "__init__() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.__init__", false]], "__init__() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.__init__", false]], "__init__() (pydicom.fileset.fileinstance method)": [[171, "pydicom.fileset.FileInstance.__init__", false]], "__init__() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.__init__", false]], "__init__() (pydicom.fileset.recordnode method)": [[173, "pydicom.fileset.RecordNode.__init__", false]], "__init__() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.__init__", false]], "__init__() (pydicom.pixels.decoders.base.decoder method)": [[239, "pydicom.pixels.decoders.base.Decoder.__init__", false]], "__init__() (pydicom.pixels.decoders.base.decoderunner method)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.__init__", false]], "__init__() (pydicom.pixels.encoders.base.encoder method)": [[247, "pydicom.pixels.encoders.base.Encoder.__init__", false]], "__init__() (pydicom.pixels.encoders.base.encoderunner method)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.__init__", false]], "__init__() (pydicom.sequence.sequence method)": [[277, "pydicom.sequence.Sequence.__init__", false]], "__init__() (pydicom.sr.code method)": [[278, "pydicom.sr.Code.__init__", false]], "__init__() (pydicom.sr.collection method)": [[279, "pydicom.sr.Collection.__init__", false]], "__init__() (pydicom.sr.concepts method)": [[280, "pydicom.sr.Concepts.__init__", false]], "__init__() (pydicom.tag.basetag method)": [[281, "pydicom.tag.BaseTag.__init__", false]], "__init__() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.__init__", false]], "__init__() (pydicom.valuerep.da method)": [[523, "pydicom.valuerep.DA.__init__", false]], "__init__() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.__init__", false]], "__init__() (pydicom.valuerep.dsfloat method)": [[526, "pydicom.valuerep.DSfloat.__init__", false]], "__init__() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.__init__", false]], "__init__() (pydicom.valuerep.is method)": [[528, "pydicom.valuerep.IS.__init__", false]], "__init__() (pydicom.valuerep.isfloat method)": [[529, "pydicom.valuerep.ISfloat.__init__", false]], "__init__() (pydicom.valuerep.personname method)": [[530, "pydicom.valuerep.PersonName.__init__", false]], "__init__() (pydicom.valuerep.tm method)": [[531, "pydicom.valuerep.TM.__init__", false]], "__init__() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.__init__", false]], "absorb_delimiter_item() (in module pydicom.fileutil)": [[176, "pydicom.fileutil.absorb_delimiter_item", false]], "acquisitioncontextsrstorage (in module pydicom.uid)": [[285, "pydicom.uid.AcquisitionContextSRStorage", false]], "add() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.add", false]], "add() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.add", false]], "add() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.add", false]], "add() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.add", false]], "add() (pydicom.fileset.recordnode method)": [[173, "pydicom.fileset.RecordNode.add", false]], "add_custom() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.add_custom", false]], "add_dict_entries() (in module pydicom.datadict)": [[108, "pydicom.datadict.add_dict_entries", false]], "add_dict_entry() (in module pydicom.datadict)": [[109, "pydicom.datadict.add_dict_entry", false]], "add_new() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.add_new", false]], "add_new() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.add_new", false]], "add_new() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.add_new", false]], "add_new() (pydicom.dataset.privateblock method)": [[134, "pydicom.dataset.PrivateBlock.add_new", false]], "add_new_private() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.add_new_private", false]], "add_new_private() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.add_new_private", false]], "add_new_private() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.add_new_private", false]], "add_plugin() (pydicom.pixels.decoders.base.decoder method)": [[239, "pydicom.pixels.decoders.base.Decoder.add_plugin", false]], "add_plugin() (pydicom.pixels.encoders.base.encoder method)": [[247, "pydicom.pixels.encoders.base.Encoder.add_plugin", false]], "add_plugins() (pydicom.pixels.decoders.base.decoder method)": [[239, "pydicom.pixels.decoders.base.Decoder.add_plugins", false]], "add_plugins() (pydicom.pixels.encoders.base.encoder method)": [[247, "pydicom.pixels.encoders.base.Encoder.add_plugins", false]], "add_private_dict_entries() (in module pydicom.datadict)": [[110, "pydicom.datadict.add_private_dict_entries", false]], "add_private_dict_entry() (in module pydicom.datadict)": [[111, "pydicom.datadict.add_private_dict_entry", false]], "adjusted() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.adjusted", false]], "advancedblendingpresentationstatestorage (in module pydicom.uid)": [[286, "pydicom.uid.AdvancedBlendingPresentationStateStorage", false]], "allow_ds_float (in module pydicom.config)": [[88, "pydicom.config.allow_DS_float", false]], "alltransfersyntaxes (in module pydicom.uid)": [[287, "pydicom.uid.AllTransferSyntaxes", false]], "alphabetic (pydicom.valuerep.personname property)": [[530, "pydicom.valuerep.PersonName.alphabetic", false]], "ambulatoryecgwaveformstorage (in module pydicom.uid)": [[288, "pydicom.uid.AmbulatoryECGWaveformStorage", false]], "ancestors (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.ancestors", false]], "append() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.append", false]], "append() (pydicom.sequence.sequence method)": [[277, "pydicom.sequence.Sequence.append", false]], "apply_color_lut() (in module pydicom.pixels)": [[213, "pydicom.pixels.apply_color_lut", false]], "apply_color_lut() (in module pydicom.pixels.processing)": [[253, "pydicom.pixels.processing.apply_color_lut", false]], "apply_j2k_corrections (in module pydicom.config)": [[80, "pydicom.config.APPLY_J2K_CORRECTIONS", false]], "apply_modality_lut() (in module pydicom.pixels)": [[214, "pydicom.pixels.apply_modality_lut", false]], "apply_modality_lut() (in module pydicom.pixels.processing)": [[254, "pydicom.pixels.processing.apply_modality_lut", false]], "apply_rescale() (in module pydicom.pixels)": [[215, "pydicom.pixels.apply_rescale", false]], "apply_rescale() (in module pydicom.pixels.processing)": [[255, "pydicom.pixels.processing.apply_rescale", false]], "apply_voi() (in module pydicom.pixels)": [[216, "pydicom.pixels.apply_voi", false]], "apply_voi() (in module pydicom.pixels.processing)": [[256, "pydicom.pixels.processing.apply_voi", false]], "apply_voi_lut() (in module pydicom.pixels)": [[217, "pydicom.pixels.apply_voi_lut", false]], "apply_voi_lut() (in module pydicom.pixels.processing)": [[257, "pydicom.pixels.processing.apply_voi_lut", false]], "apply_windowing() (in module pydicom.pixels)": [[218, "pydicom.pixels.apply_windowing", false]], "apply_windowing() (in module pydicom.pixels.processing)": [[258, "pydicom.pixels.processing.apply_windowing", false]], "arterialpulsewaveformstorage (in module pydicom.uid)": [[289, "pydicom.uid.ArterialPulseWaveformStorage", false]], "as_array() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.as_array", false]], "as_array() (pydicom.pixels.decoders.base.decoder method)": [[239, "pydicom.pixels.decoders.base.Decoder.as_array", false]], "as_buffer() (pydicom.pixels.decoders.base.decoder method)": [[239, "pydicom.pixels.decoders.base.Decoder.as_buffer", false]], "as_integer_ratio() (pydicom.tag.basetag method)": [[281, "pydicom.tag.BaseTag.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.dsfloat method)": [[526, "pydicom.valuerep.DSfloat.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.is method)": [[528, "pydicom.valuerep.IS.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.isfloat method)": [[529, "pydicom.valuerep.ISfloat.as_integer_ratio", false]], "as_pixel_options() (in module pydicom.pixels)": [[219, "pydicom.pixels.as_pixel_options", false]], "as_pixel_options() (in module pydicom.pixels.utils)": [[262, "pydicom.pixels.utils.as_pixel_options", false]], "as_tuple() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.as_tuple", false]], "assume_implicit_vr_switch (in module pydicom.config)": [[89, "pydicom.config.assume_implicit_vr_switch", false]], "astimezone() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.astimezone", false]], "autorefractionmeasurementsstorage (in module pydicom.uid)": [[290, "pydicom.uid.AutorefractionMeasurementsStorage", false]], "available_plugins (pydicom.pixels.decoders.base.decoder property)": [[239, "pydicom.pixels.decoders.base.Decoder.available_plugins", false]], "available_plugins (pydicom.pixels.encoders.base.encoder property)": [[247, "pydicom.pixels.encoders.base.Encoder.available_plugins", false]], "basetag (class in pydicom.tag)": [[281, "pydicom.tag.BaseTag", false]], "basicstructureddisplaystorage (in module pydicom.uid)": [[291, "pydicom.uid.BasicStructuredDisplayStorage", false]], "basictextsrstorage (in module pydicom.uid)": [[292, "pydicom.uid.BasicTextSRStorage", false]], "basicvoiceaudiowaveformstorage (in module pydicom.uid)": [[293, "pydicom.uid.BasicVoiceAudioWaveformStorage", false]], "bit_count() (pydicom.tag.basetag method)": [[281, "pydicom.tag.BaseTag.bit_count", false]], "bit_count() (pydicom.valuerep.is method)": [[528, "pydicom.valuerep.IS.bit_count", false]], "bit_length() (pydicom.tag.basetag method)": [[281, "pydicom.tag.BaseTag.bit_length", false]], "bit_length() (pydicom.valuerep.is method)": [[528, "pydicom.valuerep.IS.bit_length", false]], "bits_allocated (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.bits_allocated", false]], "bits_allocated (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.bits_allocated", false]], "bits_stored (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.bits_stored", false]], "bits_stored (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.bits_stored", false]], "blendingsoftcopypresentationstatestorage (in module pydicom.uid)": [[294, "pydicom.uid.BlendingSoftcopyPresentationStateStorage", false]], "block_start (pydicom.dataset.privateblock attribute)": [[134, "pydicom.dataset.PrivateBlock.block_start", false]], "bodypositionwaveformstorage (in module pydicom.uid)": [[295, "pydicom.uid.BodyPositionWaveformStorage", false]], "breastprojectionxrayimagestorageforpresentation (in module pydicom.uid)": [[296, "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", false]], "breastprojectionxrayimagestorageforprocessing (in module pydicom.uid)": [[297, "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", false]], "breasttomosynthesisimagestorage (in module pydicom.uid)": [[298, "pydicom.uid.BreastTomosynthesisImageStorage", false]], "canonical() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.canonical", false]], "capitalize() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.capitalize", false]], "capitalize() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.capitalize", false]], "cardiacelectrophysiologywaveformstorage (in module pydicom.uid)": [[304, "pydicom.uid.CardiacElectrophysiologyWaveformStorage", false]], "carmphotonelectronradiationrecordstorage (in module pydicom.uid)": [[299, "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", false]], "carmphotonelectronradiationstorage (in module pydicom.uid)": [[300, "pydicom.uid.CArmPhotonElectronRadiationStorage", false]], "casefold() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.casefold", false]], "casefold() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.casefold", false]], "center() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.center", false]], "center() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.center", false]], "chestcadsrstorage (in module pydicom.uid)": [[305, "pydicom.uid.ChestCADSRStorage", false]], "children (pydicom.fileset.recordnode attribute)": [[173, "pydicom.fileset.RecordNode.children", false]], "cids() (pydicom.sr.concepts method)": [[280, "pydicom.sr.Concepts.CIDs", false]], "clear() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.clear", false]], "clear() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.clear", false]], "clear() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.clear", false]], "clear() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.clear", false]], "clear() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.clear", false]], "clear() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.clear", false]], "clear() (pydicom.sequence.sequence method)": [[277, "pydicom.sequence.Sequence.clear", false]], "close() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.close", false]], "close() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.close", false]], "close() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.close", false]], "code (class in pydicom.sr)": [[278, "pydicom.sr.Code", false]], "collection (class in pydicom.sr)": [[279, "pydicom.sr.Collection", false]], "collections (pydicom.sr.concepts property)": [[280, "pydicom.sr.Concepts.collections", false]], "coloncadsrstorage (in module pydicom.uid)": [[306, "pydicom.uid.ColonCADSRStorage", false]], "colorpalettestorage (in module pydicom.uid)": [[307, "pydicom.uid.ColorPaletteStorage", false]], "colorsoftcopypresentationstatestorage (in module pydicom.uid)": [[308, "pydicom.uid.ColorSoftcopyPresentationStateStorage", false]], "columns (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.columns", false]], "columns (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.columns", false]], "combine() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.combine", false]], "compare() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.compare", false]], "compare_signal() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.compare_signal", false]], "compare_total() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.compare_total", false]], "compare_total_mag() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.compare_total_mag", false]], "component (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.component", false]], "components (pydicom.valuerep.personname property)": [[530, "pydicom.valuerep.PersonName.components", false]], "compositingplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[309, "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", false]], "comprehensive3dsrstorage (in module pydicom.uid)": [[310, "pydicom.uid.Comprehensive3DSRStorage", false]], "comprehensivesrstorage (in module pydicom.uid)": [[311, "pydicom.uid.ComprehensiveSRStorage", false]], "compress() (in module pydicom.pixels)": [[220, "pydicom.pixels.compress", false]], "compress() (in module pydicom.pixels.utils)": [[263, "pydicom.pixels.utils.compress", false]], "compress() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.compress", false]], "compress() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.compress", false]], "compress() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.compress", false]], "computedradiographyimagestorage (in module pydicom.uid)": [[312, "pydicom.uid.ComputedRadiographyImageStorage", false]], "concepts (class in pydicom.sr)": [[280, "pydicom.sr.Concepts", false]], "concepts (pydicom.sr.collection property)": [[279, "pydicom.sr.Collection.concepts", false]], "confocalmicroscopyimagestorage (in module pydicom.uid)": [[313, "pydicom.uid.ConfocalMicroscopyImageStorage", false]], "confocalmicroscopytiledpyramidalimagestorage (in module pydicom.uid)": [[314, "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", false]], "conjugate() (pydicom.tag.basetag method)": [[281, "pydicom.tag.BaseTag.conjugate", false]], "conjugate() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.conjugate", false]], "conjugate() (pydicom.valuerep.dsfloat method)": [[526, "pydicom.valuerep.DSfloat.conjugate", false]], "conjugate() (pydicom.valuerep.is method)": [[528, "pydicom.valuerep.IS.conjugate", false]], "conjugate() (pydicom.valuerep.isfloat method)": [[529, "pydicom.valuerep.ISfloat.conjugate", false]], "contentassessmentresultsstorage (in module pydicom.uid)": [[315, "pydicom.uid.ContentAssessmentResultsStorage", false]], "convert_ae_string() (in module pydicom.values)": [[535, "pydicom.values.convert_AE_string", false]], "convert_atvalue() (in module pydicom.values)": [[536, "pydicom.values.convert_ATvalue", false]], "convert_color_space() (in module pydicom.pixels)": [[221, "pydicom.pixels.convert_color_space", false]], "convert_color_space() (in module pydicom.pixels.processing)": [[259, "pydicom.pixels.processing.convert_color_space", false]], "convert_da_string() (in module pydicom.values)": [[537, "pydicom.values.convert_DA_string", false]], "convert_ds_string() (in module pydicom.values)": [[538, "pydicom.values.convert_DS_string", false]], "convert_dt_string() (in module pydicom.values)": [[539, "pydicom.values.convert_DT_string", false]], "convert_encodings() (in module pydicom.charset)": [[76, "pydicom.charset.convert_encodings", false]], "convert_is_string() (in module pydicom.values)": [[540, "pydicom.values.convert_IS_string", false]], "convert_numbers() (in module pydicom.values)": [[549, "pydicom.values.convert_numbers", false]], "convert_obvalue() (in module pydicom.values)": [[541, "pydicom.values.convert_OBvalue", false]], "convert_owvalue() (in module pydicom.values)": [[542, "pydicom.values.convert_OWvalue", false]], "convert_pixel_data() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.convert_pixel_data", false]], "convert_pixel_data() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.convert_pixel_data", false]], "convert_pixel_data() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.convert_pixel_data", false]], "convert_pn() (in module pydicom.values)": [[543, "pydicom.values.convert_PN", false]], "convert_single_string() (in module pydicom.values)": [[550, "pydicom.values.convert_single_string", false]], "convert_sq() (in module pydicom.values)": [[544, "pydicom.values.convert_SQ", false]], "convert_string() (in module pydicom.values)": [[551, "pydicom.values.convert_string", false]], "convert_tag() (in module pydicom.values)": [[552, "pydicom.values.convert_tag", false]], "convert_text() (in module pydicom.values)": [[553, "pydicom.values.convert_text", false]], "convert_tm_string() (in module pydicom.values)": [[545, "pydicom.values.convert_TM_string", false]], "convert_ui() (in module pydicom.values)": [[546, "pydicom.values.convert_UI", false]], "convert_un() (in module pydicom.values)": [[547, "pydicom.values.convert_UN", false]], "convert_ur_string() (in module pydicom.values)": [[548, "pydicom.values.convert_UR_string", false]], "convert_value() (in module pydicom.values)": [[554, "pydicom.values.convert_value", false]], "convert_wrong_length_to_un (in module pydicom.config)": [[90, "pydicom.config.convert_wrong_length_to_UN", false]], "copy() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.copy", false]], "copy() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.copy", false]], "copy() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.copy", false]], "copy() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.copy", false]], "copy_abs() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.copy_abs", false]], "copy_negate() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.copy_negate", false]], "copy_sign() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.copy_sign", false]], "cornealtopographymapstorage (in module pydicom.uid)": [[316, "pydicom.uid.CornealTopographyMapStorage", false]], "correct_ambiguous_vr() (in module pydicom.filewriter)": [[181, "pydicom.filewriter.correct_ambiguous_vr", false]], "correct_ambiguous_vr_element() (in module pydicom.filewriter)": [[182, "pydicom.filewriter.correct_ambiguous_vr_element", false]], "count() (pydicom.dataelem.rawdataelement method)": [[130, "pydicom.dataelem.RawDataElement.count", false]], "count() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.count", false]], "count() (pydicom.sequence.sequence method)": [[277, "pydicom.sequence.Sequence.count", false]], "count() (pydicom.sr.code method)": [[278, "pydicom.sr.Code.count", false]], "count() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.count", false]], "count() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.count", false]], "create_data_element() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.create_data_element", false]], "create_image() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.create_image", false]], "ctdefinedprocedureprotocolstorage (in module pydicom.uid)": [[301, "pydicom.uid.CTDefinedProcedureProtocolStorage", false]], "ctimagestorage (in module pydicom.uid)": [[302, "pydicom.uid.CTImageStorage", false]], "ctime() (pydicom.valuerep.da method)": [[523, "pydicom.valuerep.DA.ctime", false]], "ctime() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.ctime", false]], "ctperformedprocedureprotocolstorage (in module pydicom.uid)": [[303, "pydicom.uid.CTPerformedProcedureProtocolStorage", false]], "da (class in pydicom.valuerep)": [[523, "pydicom.valuerep.DA", false]], "data_element() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.data_element", false]], "data_element() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.data_element", false]], "data_element() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.data_element", false]], "data_element_callback (in module pydicom.config)": [[91, "pydicom.config.data_element_callback", false]], "data_element_callback_kwargs (in module pydicom.config)": [[92, "pydicom.config.data_element_callback_kwargs", false]], "data_element_generator() (in module pydicom.filereader)": [[160, "pydicom.filereader.data_element_generator", false]], "data_element_offset_to_value() (in module pydicom.filereader)": [[161, "pydicom.filereader.data_element_offset_to_value", false]], "dataelement (class in pydicom.dataelem)": [[128, "pydicom.dataelem.DataElement", false]], "dataelement_from_raw() (in module pydicom.dataelem)": [[129, "pydicom.dataelem.DataElement_from_raw", false]], "dataset (class in pydicom.dataset)": [[131, "pydicom.dataset.Dataset", false]], "dataset (pydicom.dataset.privateblock attribute)": [[134, "pydicom.dataset.PrivateBlock.dataset", false]], "date() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.date", false]], "datetime_conversion (in module pydicom.config)": [[93, "pydicom.config.datetime_conversion", false]], "dcmread() (in module pydicom.filereader)": [[162, "pydicom.filereader.dcmread", false]], "dcmwrite() (in module pydicom.filewriter)": [[183, "pydicom.filewriter.dcmwrite", false]], "debug() (in module pydicom.config)": [[94, "pydicom.config.debug", false]], "decode() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.decode", false]], "decode() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.decode", false]], "decode() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.decode", false]], "decode() (pydicom.pixels.decoders.base.decoderunner method)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.decode", false]], "decode() (pydicom.valuerep.personname method)": [[530, "pydicom.valuerep.PersonName.decode", false]], "decode_bytes() (in module pydicom.charset)": [[77, "pydicom.charset.decode_bytes", false]], "decode_data_sequence() (in module pydicom.encaps)": [[136, "pydicom.encaps.decode_data_sequence", false]], "decode_element() (in module pydicom.charset)": [[78, "pydicom.charset.decode_element", false]], "decoder (class in pydicom.pixels.decoders.base)": [[239, "pydicom.pixels.decoders.base.Decoder", false]], "decoderunner (class in pydicom.pixels.decoders.base)": [[238, "pydicom.pixels.decoders.base.DecodeRunner", false]], "decompress() (in module pydicom.pixels)": [[240, "pydicom.pixels.decompress", false]], "decompress() (in module pydicom.pixels.utils)": [[264, "pydicom.pixels.utils.decompress", false]], "decompress() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.decompress", false]], "decompress() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.decompress", false]], "decompress() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.decompress", false]], "default_element_format (pydicom.dataset.dataset attribute)": [[131, "pydicom.dataset.Dataset.default_element_format", false]], "default_sequence_element_format (pydicom.dataset.dataset attribute)": [[131, "pydicom.dataset.Dataset.default_sequence_element_format", false]], "deflatedexplicitvrlittleendian (in module pydicom.uid)": [[324, "pydicom.uid.DeflatedExplicitVRLittleEndian", false]], "deflatedexplicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[222, "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", false]], "deformablespatialregistrationstorage (in module pydicom.uid)": [[325, "pydicom.uid.DeformableSpatialRegistrationStorage", false]], "defragment_data() (in module pydicom.encaps)": [[137, "pydicom.encaps.defragment_data", false]], "del_option() (pydicom.pixels.decoders.base.decoderunner method)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.del_option", false]], "del_option() (pydicom.pixels.encoders.base.encoderunner method)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.del_option", false]], "denominator (pydicom.tag.basetag attribute)": [[281, "pydicom.tag.BaseTag.denominator", false]], "denominator (pydicom.valuerep.is attribute)": [[528, "pydicom.valuerep.IS.denominator", false]], "depth (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.depth", false]], "dermoscopicphotographyimagestorage (in module pydicom.uid)": [[326, "pydicom.uid.DermoscopicPhotographyImageStorage", false]], "descriptor_character_set (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.descriptor_character_set", false]], "descriptor_file_id (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.descriptor_file_id", false]], "descripwidth (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.descripWidth", false]], "dicombytesio (class in pydicom.filebase)": [[156, "pydicom.filebase.DicomBytesIO", false]], "dicomfile() (in module pydicom.filebase)": [[157, "pydicom.filebase.DicomFile", false]], "dicomfilelike (class in pydicom.filebase)": [[158, "pydicom.filebase.DicomFileLike", false]], "dicomio (class in pydicom.filebase)": [[159, "pydicom.filebase.DicomIO", false]], "dicos2daitstorage (in module pydicom.uid)": [[317, "pydicom.uid.DICOS2DAITStorage", false]], "dicos3daitstorage (in module pydicom.uid)": [[318, "pydicom.uid.DICOS3DAITStorage", false]], "dicosctimagestorage (in module pydicom.uid)": [[319, "pydicom.uid.DICOSCTImageStorage", false]], "dicosdigitalxrayimagestorageforpresentation (in module pydicom.uid)": [[320, "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", false]], "dicosdigitalxrayimagestorageforprocessing (in module pydicom.uid)": [[321, "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", false]], "dicosquadrupoleresonancestorage (in module pydicom.uid)": [[322, "pydicom.uid.DICOSQuadrupoleResonanceStorage", false]], "dicosthreatdetectionreportstorage (in module pydicom.uid)": [[323, "pydicom.uid.DICOSThreatDetectionReportStorage", false]], "dictionary_description() (in module pydicom.datadict)": [[114, "pydicom.datadict.dictionary_description", false]], "dictionary_has_tag() (in module pydicom.datadict)": [[115, "pydicom.datadict.dictionary_has_tag", false]], "dictionary_is_retired() (in module pydicom.datadict)": [[116, "pydicom.datadict.dictionary_is_retired", false]], "dictionary_keyword() (in module pydicom.datadict)": [[117, "pydicom.datadict.dictionary_keyword", false]], "dictionary_vm() (in module pydicom.datadict)": [[112, "pydicom.datadict.dictionary_VM", false]], "dictionary_vr() (in module pydicom.datadict)": [[113, "pydicom.datadict.dictionary_VR", false]], "digitalintraoralxrayimagestorageforpresentation (in module pydicom.uid)": [[327, "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", false]], "digitalintraoralxrayimagestorageforprocessing (in module pydicom.uid)": [[328, "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", false]], "digitalmammographyxrayimagestorageforpresentation (in module pydicom.uid)": [[329, "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", false]], "digitalmammographyxrayimagestorageforprocessing (in module pydicom.uid)": [[330, "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", false]], "digitalxrayimagestorageforpresentation (in module pydicom.uid)": [[331, "pydicom.uid.DigitalXRayImageStorageForPresentation", false]], "digitalxrayimagestorageforprocessing (in module pydicom.uid)": [[332, "pydicom.uid.DigitalXRayImageStorageForProcessing", false]], "dir() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.dir", false]], "dir() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.dir", false]], "dir() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.dir", false]], "dir() (pydicom.sr.collection method)": [[279, "pydicom.sr.Collection.dir", false]], "directory_recorders (in module pydicom.fileset)": [[170, "pydicom.fileset.DIRECTORY_RECORDERS", false]], "ds() (in module pydicom.valuerep)": [[524, "pydicom.valuerep.DS", false]], "ds_decimal() (in module pydicom.config)": [[81, "pydicom.config.DS_decimal", false]], "ds_numpy() (in module pydicom.config)": [[82, "pydicom.config.DS_numpy", false]], "dsdecimal (class in pydicom.valuerep)": [[525, "pydicom.valuerep.DSdecimal", false]], "dsfloat (class in pydicom.valuerep)": [[526, "pydicom.valuerep.DSfloat", false]], "dst() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.dst", false]], "dst() (pydicom.valuerep.tm method)": [[531, "pydicom.valuerep.TM.dst", false]], "dt (class in pydicom.valuerep)": [[527, "pydicom.valuerep.DT", false]], "eddycurrentimagestorage (in module pydicom.uid)": [[333, "pydicom.uid.EddyCurrentImageStorage", false]], "eddycurrentmultiframeimagestorage (in module pydicom.uid)": [[334, "pydicom.uid.EddyCurrentMultiFrameImageStorage", false]], "electromyogramwaveformstorage (in module pydicom.uid)": [[335, "pydicom.uid.ElectromyogramWaveformStorage", false]], "electrooculogramwaveformstorage (in module pydicom.uid)": [[336, "pydicom.uid.ElectrooculogramWaveformStorage", false]], "elem (pydicom.tag.basetag property)": [[281, "pydicom.tag.BaseTag.elem", false]], "element (pydicom.tag.basetag property)": [[281, "pydicom.tag.BaseTag.element", false]], "elements() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.elements", false]], "elements() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.elements", false]], "elements() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.elements", false]], "empty_value (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.empty_value", false]], "encapsulate() (in module pydicom.encaps)": [[138, "pydicom.encaps.encapsulate", false]], "encapsulate_extended() (in module pydicom.encaps)": [[139, "pydicom.encaps.encapsulate_extended", false]], "encapsulatedcdastorage (in module pydicom.uid)": [[337, "pydicom.uid.EncapsulatedCDAStorage", false]], "encapsulatedmtlstorage (in module pydicom.uid)": [[338, "pydicom.uid.EncapsulatedMTLStorage", false]], "encapsulatedobjstorage (in module pydicom.uid)": [[339, "pydicom.uid.EncapsulatedOBJStorage", false]], "encapsulatedpdfstorage (in module pydicom.uid)": [[340, "pydicom.uid.EncapsulatedPDFStorage", false]], "encapsulatedstlstorage (in module pydicom.uid)": [[341, "pydicom.uid.EncapsulatedSTLStorage", false]], "encode() (pydicom.pixels.encoders.base.encoder method)": [[247, "pydicom.pixels.encoders.base.Encoder.encode", false]], "encode() (pydicom.pixels.encoders.base.encoderunner method)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.encode", false]], "encode() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.encode", false]], "encode() (pydicom.valuerep.personname method)": [[530, "pydicom.valuerep.PersonName.encode", false]], "encode() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.encode", false]], "encode_string() (in module pydicom.charset)": [[79, "pydicom.charset.encode_string", false]], "encoder (class in pydicom.pixels.encoders.base)": [[247, "pydicom.pixels.encoders.base.Encoder", false]], "encoderunner (class in pydicom.pixels.encoders.base)": [[246, "pydicom.pixels.encoders.base.EncodeRunner", false]], "endswith() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.endswith", false]], "endswith() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.endswith", false]], "enforce_valid_values (in module pydicom.config)": [[95, "pydicom.config.enforce_valid_values", false]], "enhancedcontinuousrtimagestorage (in module pydicom.uid)": [[343, "pydicom.uid.EnhancedContinuousRTImageStorage", false]], "enhancedctimagestorage (in module pydicom.uid)": [[342, "pydicom.uid.EnhancedCTImageStorage", false]], "enhancedmrcolorimagestorage (in module pydicom.uid)": [[344, "pydicom.uid.EnhancedMRColorImageStorage", false]], "enhancedmrimagestorage (in module pydicom.uid)": [[345, "pydicom.uid.EnhancedMRImageStorage", false]], "enhancedpetimagestorage (in module pydicom.uid)": [[346, "pydicom.uid.EnhancedPETImageStorage", false]], "enhancedrtimagestorage (in module pydicom.uid)": [[347, "pydicom.uid.EnhancedRTImageStorage", false]], "enhancedsrstorage (in module pydicom.uid)": [[348, "pydicom.uid.EnhancedSRStorage", false]], "enhancedusvolumestorage (in module pydicom.uid)": [[349, "pydicom.uid.EnhancedUSVolumeStorage", false]], "enhancedxaimagestorage (in module pydicom.uid)": [[350, "pydicom.uid.EnhancedXAImageStorage", false]], "enhancedxrayradiationdosesrstorage (in module pydicom.uid)": [[352, "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", false]], "enhancedxrfimagestorage (in module pydicom.uid)": [[351, "pydicom.uid.EnhancedXRFImageStorage", false]], "ensure_file_meta() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.ensure_file_meta", false]], "ensure_file_meta() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.ensure_file_meta", false]], "ensure_file_meta() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.ensure_file_meta", false]], "exp() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.exp", false]], "expand_ybr422() (in module pydicom.pixels.utils)": [[265, "pydicom.pixels.utils.expand_ybr422", false]], "expandtabs() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.expandtabs", false]], "expandtabs() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.expandtabs", false]], "explicitvrbigendian (in module pydicom.uid)": [[353, "pydicom.uid.ExplicitVRBigEndian", false]], "explicitvrbigendiandecoder (in module pydicom.pixels.decoders)": [[223, "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", false]], "explicitvrlittleendian (in module pydicom.uid)": [[354, "pydicom.uid.ExplicitVRLittleEndian", false]], "explicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[224, "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", false]], "extend() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.extend", false]], "extend() (pydicom.sequence.sequence method)": [[277, "pydicom.sequence.Sequence.extend", false]], "extended_offsets (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.extended_offsets", false]], "extended_offsets (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.extended_offsets", false]], "extensiblesrstorage (in module pydicom.uid)": [[355, "pydicom.uid.ExtensibleSRStorage", false]], "family_comma_given() (pydicom.valuerep.personname method)": [[530, "pydicom.valuerep.PersonName.family_comma_given", false]], "family_name (pydicom.valuerep.personname property)": [[530, "pydicom.valuerep.PersonName.family_name", false]], "file_meta (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.file_meta", false]], "file_set (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.file_set", false]], "file_set (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.file_set", false]], "filedataset (class in pydicom.dataset)": [[132, "pydicom.dataset.FileDataset", false]], "fileid (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.FileID", false]], "fileinstance (class in pydicom.fileset)": [[171, "pydicom.fileset.FileInstance", false]], "filemetadataset (class in pydicom.dataset)": [[133, "pydicom.dataset.FileMetaDataset", false]], "filename (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.filename", false]], "fileobj_type (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.fileobj_type", false]], "fileset (class in pydicom.fileset)": [[172, "pydicom.fileset.FileSet", false]], "find() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.find", false]], "find() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.find", false]], "find() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.find", false]], "find_bytes() (in module pydicom.fileutil)": [[177, "pydicom.fileutil.find_bytes", false]], "find_delimiter() (in module pydicom.fileutil)": [[178, "pydicom.fileutil.find_delimiter", false]], "find_values() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.find_values", false]], "fma() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.fma", false]], "for_addition (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.for_addition", false]], "for_moving (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.for_moving", false]], "for_removal (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.for_removal", false]], "format() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.format", false]], "format() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.format", false]], "format_map() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.format_map", false]], "format_map() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.format_map", false]], "format_number_as_ds() (in module pydicom.valuerep)": [[533, "pydicom.valuerep.format_number_as_ds", false]], "formatted() (pydicom.valuerep.personname method)": [[530, "pydicom.valuerep.PersonName.formatted", false]], "formatted_lines() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.formatted_lines", false]], "formatted_lines() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.formatted_lines", false]], "formatted_lines() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.formatted_lines", false]], "fragment_frame() (in module pydicom.encaps)": [[140, "pydicom.encaps.fragment_frame", false]], "frame_length() (pydicom.pixels.decoders.base.decoderunner method)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.frame_length", false]], "frame_length() (pydicom.pixels.encoders.base.encoderunner method)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.frame_length", false]], "from_bytes() (pydicom.tag.basetag method)": [[281, "pydicom.tag.BaseTag.from_bytes", false]], "from_bytes() (pydicom.valuerep.is method)": [[528, "pydicom.valuerep.IS.from_bytes", false]], "from_float() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.from_float", false]], "from_json() (pydicom.dataelem.dataelement class method)": [[128, "pydicom.dataelem.DataElement.from_json", false]], "from_json() (pydicom.dataset.dataset class method)": [[131, "pydicom.dataset.Dataset.from_json", false]], "from_json() (pydicom.dataset.filedataset class method)": [[132, "pydicom.dataset.FileDataset.from_json", false]], "from_json() (pydicom.dataset.filemetadataset class method)": [[133, "pydicom.dataset.FileMetaDataset.from_json", false]], "from_named_components() (pydicom.valuerep.personname class method)": [[530, "pydicom.valuerep.PersonName.from_named_components", false]], "from_named_components_veterinary() (pydicom.valuerep.personname class method)": [[530, "pydicom.valuerep.PersonName.from_named_components_veterinary", false]], "fromhex() (pydicom.valuerep.dsfloat method)": [[526, "pydicom.valuerep.DSfloat.fromhex", false]], "fromhex() (pydicom.valuerep.isfloat method)": [[529, "pydicom.valuerep.ISfloat.fromhex", false]], "fromisocalendar() (pydicom.valuerep.da method)": [[523, "pydicom.valuerep.DA.fromisocalendar", false]], "fromisocalendar() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.fromisocalendar", false]], "fromisoformat() (pydicom.valuerep.da method)": [[523, "pydicom.valuerep.DA.fromisoformat", false]], "fromisoformat() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.fromisoformat", false]], "fromisoformat() (pydicom.valuerep.tm method)": [[531, "pydicom.valuerep.TM.fromisoformat", false]], "fromordinal() (pydicom.valuerep.da method)": [[523, "pydicom.valuerep.DA.fromordinal", false]], "fromordinal() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.fromordinal", false]], "fromtimestamp() (pydicom.valuerep.da method)": [[523, "pydicom.valuerep.DA.fromtimestamp", false]], "fromtimestamp() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.fromtimestamp", false]], "future_behavior() (in module pydicom.config)": [[96, "pydicom.config.future_behavior", false]], "general32bitecgwaveformstorage (in module pydicom.uid)": [[356, "pydicom.uid.General32bitECGWaveformStorage", false]], "generalaudiowaveformstorage (in module pydicom.uid)": [[357, "pydicom.uid.GeneralAudioWaveformStorage", false]], "generalecgwaveformstorage (in module pydicom.uid)": [[358, "pydicom.uid.GeneralECGWaveformStorage", false]], "generate_filename() (in module pydicom.fileset)": [[174, "pydicom.fileset.generate_filename", false]], "generate_fragmented_frames() (in module pydicom.encaps)": [[141, "pydicom.encaps.generate_fragmented_frames", false]], "generate_fragments() (in module pydicom.encaps)": [[142, "pydicom.encaps.generate_fragments", false]], "generate_frames() (in module pydicom.encaps)": [[143, "pydicom.encaps.generate_frames", false]], "generate_frames() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.generate_frames", false]], "generate_multiplex() (in module pydicom.waveforms.numpy_handler)": [[556, "pydicom.waveforms.numpy_handler.generate_multiplex", false]], "generate_pixel_data() (in module pydicom.encaps)": [[144, "pydicom.encaps.generate_pixel_data", false]], "generate_pixel_data_fragment() (in module pydicom.encaps)": [[145, "pydicom.encaps.generate_pixel_data_fragment", false]], "generate_pixel_data_frame() (in module pydicom.encaps)": [[146, "pydicom.encaps.generate_pixel_data_frame", false]], "generate_uid() (in module pydicom.uid)": [[521, "pydicom.uid.generate_uid", false]], "genericimplanttemplatestorage (in module pydicom.uid)": [[359, "pydicom.uid.GenericImplantTemplateStorage", false]], "get() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.get", false]], "get() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.get", false]], "get() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.get", false]], "get_charset_files() (in module pydicom.data)": [[104, "pydicom.data.get_charset_files", false]], "get_data() (pydicom.pixels.decoders.base.decoderunner method)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.get_data", false]], "get_decoder() (in module pydicom.pixels)": [[248, "pydicom.pixels.get_decoder", false]], "get_encoder() (in module pydicom.pixels)": [[249, "pydicom.pixels.get_encoder", false]], "get_entry() (in module pydicom.datadict)": [[118, "pydicom.datadict.get_entry", false]], "get_expected_length() (in module pydicom.overlays.numpy_handler)": [[206, "pydicom.overlays.numpy_handler.get_expected_length", false]], "get_expected_length() (in module pydicom.pixels.utils)": [[266, "pydicom.pixels.utils.get_expected_length", false]], "get_frame() (in module pydicom.encaps)": [[147, "pydicom.encaps.get_frame", false]], "get_frame() (pydicom.pixels.encoders.base.encoderunner method)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.get_frame", false]], "get_frame_offsets() (in module pydicom.encaps)": [[148, "pydicom.encaps.get_frame_offsets", false]], "get_image_pixel_ids() (in module pydicom.pixels.utils)": [[267, "pydicom.pixels.utils.get_image_pixel_ids", false]], "get_item() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.get_item", false]], "get_item() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.get_item", false]], "get_item() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.get_item", false]], "get_j2k_parameters() (in module pydicom.pixels.utils)": [[268, "pydicom.pixels.utils.get_j2k_parameters", false]], "get_nr_frames() (in module pydicom.pixels.utils)": [[269, "pydicom.pixels.utils.get_nr_frames", false]], "get_option() (pydicom.pixels.decoders.base.decoderunner method)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.get_option", false]], "get_option() (pydicom.pixels.encoders.base.encoderunner method)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.get_option", false]], "get_overlay_array() (in module pydicom.overlays.numpy_handler)": [[206, "pydicom.overlays.numpy_handler.get_overlay_array", false]], "get_palette_files() (in module pydicom.data)": [[105, "pydicom.data.get_palette_files", false]], "get_path() (in module pydicom.examples)": [[155, "pydicom.examples.get_path", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[208, "pydicom.pixel_data_handlers.jpeg_ls_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.numpy_handler)": [[209, "pydicom.pixel_data_handlers.numpy_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pillow_handler)": [[210, "pydicom.pixel_data_handlers.pillow_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.rle_handler)": [[212, "pydicom.pixel_data_handlers.rle_handler.get_pixeldata", false]], "get_private_entry() (in module pydicom.datadict)": [[119, "pydicom.datadict.get_private_entry", false]], "get_private_item() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.get_private_item", false]], "get_private_item() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.get_private_item", false]], "get_private_item() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.get_private_item", false]], "get_tag() (pydicom.dataset.privateblock method)": [[134, "pydicom.dataset.PrivateBlock.get_tag", false]], "get_testdata_file() (in module pydicom.data)": [[106, "pydicom.data.get_testdata_file", false]], "get_testdata_files() (in module pydicom.data)": [[107, "pydicom.data.get_testdata_files", false]], "given_name (pydicom.valuerep.personname property)": [[530, "pydicom.valuerep.PersonName.given_name", false]], "grayscaleplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[360, "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", false]], "grayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[361, "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", false]], "group (pydicom.dataset.privateblock attribute)": [[134, "pydicom.dataset.PrivateBlock.group", false]], "group (pydicom.tag.basetag property)": [[281, "pydicom.tag.BaseTag.group", false]], "group_dataset() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.group_dataset", false]], "group_dataset() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.group_dataset", false]], "group_dataset() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.group_dataset", false]], "hangingprotocolstorage (in module pydicom.uid)": [[367, "pydicom.uid.HangingProtocolStorage", false]], "has_instance (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.has_instance", false]], "hemodynamicwaveformstorage (in module pydicom.uid)": [[368, "pydicom.uid.HemodynamicWaveformStorage", false]], "hevcm10p51 (in module pydicom.uid)": [[362, "pydicom.uid.HEVCM10P51", false]], "hevcmp51 (in module pydicom.uid)": [[363, "pydicom.uid.HEVCMP51", false]], "hex() (pydicom.valuerep.dsfloat method)": [[526, "pydicom.valuerep.DSfloat.hex", false]], "hex() (pydicom.valuerep.isfloat method)": [[529, "pydicom.valuerep.ISfloat.hex", false]], "htj2k (in module pydicom.uid)": [[364, "pydicom.uid.HTJ2K", false]], "htj2kdecoder (in module pydicom.pixels.decoders)": [[225, "pydicom.pixels.decoders.HTJ2KDecoder", false]], "htj2klossless (in module pydicom.uid)": [[365, "pydicom.uid.HTJ2KLossless", false]], "htj2klosslessdecoder (in module pydicom.pixels.decoders)": [[226, "pydicom.pixels.decoders.HTJ2KLosslessDecoder", false]], "htj2klosslessrpcl (in module pydicom.uid)": [[366, "pydicom.uid.HTJ2KLosslessRPCL", false]], "htj2klosslessrpcldecoder (in module pydicom.pixels.decoders)": [[227, "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", false]], "id (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.ID", false]], "ideographic (pydicom.valuerep.personname property)": [[530, "pydicom.valuerep.PersonName.ideographic", false]], "ignore (in module pydicom.config)": [[83, "pydicom.config.IGNORE", false]], "imag (pydicom.tag.basetag attribute)": [[281, "pydicom.tag.BaseTag.imag", false]], "imag (pydicom.valuerep.dsfloat attribute)": [[526, "pydicom.valuerep.DSfloat.imag", false]], "imag (pydicom.valuerep.is attribute)": [[528, "pydicom.valuerep.IS.imag", false]], "imag (pydicom.valuerep.isfloat attribute)": [[529, "pydicom.valuerep.ISfloat.imag", false]], "implantassemblytemplatestorage (in module pydicom.uid)": [[369, "pydicom.uid.ImplantAssemblyTemplateStorage", false]], "implantationplansrstorage (in module pydicom.uid)": [[371, "pydicom.uid.ImplantationPlanSRStorage", false]], "implanttemplategroupstorage (in module pydicom.uid)": [[370, "pydicom.uid.ImplantTemplateGroupStorage", false]], "implicitvrlittleendian (in module pydicom.uid)": [[372, "pydicom.uid.ImplicitVRLittleEndian", false]], "implicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[228, "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", false]], "indent_chars (pydicom.dataset.dataset attribute)": [[131, "pydicom.dataset.Dataset.indent_chars", false]], "index (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.index", false]], "index() (pydicom.dataelem.rawdataelement method)": [[130, "pydicom.dataelem.RawDataElement.index", false]], "index() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.index", false]], "index() (pydicom.sequence.sequence method)": [[277, "pydicom.sequence.Sequence.index", false]], "index() (pydicom.sr.code method)": [[278, "pydicom.sr.Code.index", false]], "index() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.index", false]], "index() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.index", false]], "infer_sq_for_un_vr (pydicom.config.settings property)": [[56, "pydicom.config.Settings.infer_sq_for_un_vr", false]], "info (pydicom.uid.uid property)": [[496, "pydicom.uid.UID.info", false]], "insert() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.insert", false]], "insert() (pydicom.sequence.sequence method)": [[277, "pydicom.sequence.Sequence.insert", false]], "instance (pydicom.fileset.recordnode attribute)": [[173, "pydicom.fileset.RecordNode.instance", false]], "intraocularlenscalculationsstorage (in module pydicom.uid)": [[373, "pydicom.uid.IntraocularLensCalculationsStorage", false]], "intravascularopticalcoherencetomographyimagestorageforpresentation (in module pydicom.uid)": [[374, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", false]], "intravascularopticalcoherencetomographyimagestorageforprocessing (in module pydicom.uid)": [[375, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", false]], "invalid_key_behavior (in module pydicom.config)": [[85, "pydicom.config.INVALID_KEY_BEHAVIOR", false]], "invalid_keyword_behavior (in module pydicom.config)": [[84, "pydicom.config.INVALID_KEYWORD_BEHAVIOR", false]], "invaliddicomerror": [[154, "pydicom.errors.InvalidDicomError", false]], "inventorystorage (in module pydicom.uid)": [[376, "pydicom.uid.InventoryStorage", false]], "is (class in pydicom.valuerep)": [[528, "pydicom.valuerep.IS", false]], "is_array (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.is_array", false]], "is_array (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.is_array", false]], "is_available (pydicom.pixels.decoders.base.decoder property)": [[239, "pydicom.pixels.decoders.base.Decoder.is_available", false]], "is_available (pydicom.pixels.encoders.base.encoder property)": [[247, "pydicom.pixels.encoders.base.Encoder.is_available", false]], "is_available() (in module pydicom.overlays.numpy_handler)": [[206, "pydicom.overlays.numpy_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[208, "pydicom.pixel_data_handlers.jpeg_ls_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.numpy_handler)": [[209, "pydicom.pixel_data_handlers.numpy_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.pillow_handler)": [[210, "pydicom.pixel_data_handlers.pillow_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.rle_handler)": [[212, "pydicom.pixel_data_handlers.rle_handler.is_available", false]], "is_available() (in module pydicom.waveforms.numpy_handler)": [[556, "pydicom.waveforms.numpy_handler.is_available", false]], "is_binary (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.is_binary", false]], "is_binary (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.is_binary", false]], "is_buffer (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.is_buffer", false]], "is_buffer (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.is_buffer", false]], "is_canonical() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.is_canonical", false]], "is_cid (pydicom.sr.collection property)": [[279, "pydicom.sr.Collection.is_cid", false]], "is_compressed (pydicom.uid.uid property)": [[496, "pydicom.uid.UID.is_compressed", false]], "is_conformant_file_id() (in module pydicom.fileset)": [[175, "pydicom.fileset.is_conformant_file_id", false]], "is_dataset (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.is_dataset", false]], "is_dataset (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.is_dataset", false]], "is_deflated (pydicom.uid.uid property)": [[496, "pydicom.uid.UID.is_deflated", false]], "is_dicom() (in module pydicom.misc)": [[203, "pydicom.misc.is_dicom", false]], "is_empty (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.is_empty", false]], "is_encapsulated (pydicom.pixels.decoders.base.decoder property)": [[239, "pydicom.pixels.decoders.base.Decoder.is_encapsulated", false]], "is_encapsulated (pydicom.pixels.encoders.base.encoder property)": [[247, "pydicom.pixels.encoders.base.Encoder.is_encapsulated", false]], "is_encapsulated (pydicom.uid.uid property)": [[496, "pydicom.uid.UID.is_encapsulated", false]], "is_finite() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.is_finite", false]], "is_implicit_vr (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicombytesio property)": [[156, "pydicom.filebase.DicomBytesIO.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicomfilelike property)": [[158, "pydicom.filebase.DicomFileLike.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicomio property)": [[159, "pydicom.filebase.DicomIO.is_implicit_VR", false]], "is_implicit_vr (pydicom.uid.uid property)": [[496, "pydicom.uid.UID.is_implicit_VR", false]], "is_infinite() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.is_infinite", false]], "is_integer() (pydicom.valuerep.dsfloat method)": [[526, "pydicom.valuerep.DSfloat.is_integer", false]], "is_integer() (pydicom.valuerep.isfloat method)": [[529, "pydicom.valuerep.ISfloat.is_integer", false]], "is_little_endian (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.is_little_endian", false]], "is_little_endian (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.is_little_endian", false]], "is_little_endian (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.is_little_endian", false]], "is_little_endian (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicombytesio property)": [[156, "pydicom.filebase.DicomBytesIO.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicomfilelike property)": [[158, "pydicom.filebase.DicomFileLike.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicomio property)": [[159, "pydicom.filebase.DicomIO.is_little_endian", false]], "is_little_endian (pydicom.uid.uid property)": [[496, "pydicom.uid.UID.is_little_endian", false]], "is_nan() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.is_nan", false]], "is_native (pydicom.pixels.decoders.base.decoder property)": [[239, "pydicom.pixels.decoders.base.Decoder.is_native", false]], "is_native (pydicom.pixels.encoders.base.encoder property)": [[247, "pydicom.pixels.encoders.base.Encoder.is_native", false]], "is_normal() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.is_normal", false]], "is_original_encoding (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.is_original_encoding", false]], "is_original_encoding (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.is_original_encoding", false]], "is_original_encoding (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.is_original_encoding", false]], "is_private (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.is_private", false]], "is_private (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.is_private", false]], "is_private (pydicom.tag.basetag property)": [[281, "pydicom.tag.BaseTag.is_private", false]], "is_private (pydicom.uid.uid property)": [[496, "pydicom.uid.UID.is_private", false]], "is_private_creator (pydicom.tag.basetag property)": [[281, "pydicom.tag.BaseTag.is_private_creator", false]], "is_qnan() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.is_qnan", false]], "is_raw (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.is_raw", false]], "is_retired (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.is_retired", false]], "is_retired (pydicom.uid.uid property)": [[496, "pydicom.uid.UID.is_retired", false]], "is_root (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.is_root", false]], "is_signed() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.is_signed", false]], "is_snan() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.is_snan", false]], "is_staged (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.is_staged", false]], "is_staged (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.is_staged", false]], "is_subnormal() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.is_subnormal", false]], "is_transfer_syntax (pydicom.uid.uid property)": [[496, "pydicom.uid.UID.is_transfer_syntax", false]], "is_undefined_length (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.is_undefined_length", false]], "is_valid (pydicom.uid.uid property)": [[496, "pydicom.uid.UID.is_valid", false]], "is_valid_ds() (in module pydicom.valuerep)": [[534, "pydicom.valuerep.is_valid_ds", false]], "is_zero() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.is_zero", false]], "isalnum() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.isalnum", false]], "isalnum() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.isalnum", false]], "isalpha() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.isalpha", false]], "isalpha() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.isalpha", false]], "isascii() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.isascii", false]], "isascii() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.isascii", false]], "isdecimal() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.isdecimal", false]], "isdecimal() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.isdecimal", false]], "isdigit() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.isdigit", false]], "isdigit() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.isdigit", false]], "isfloat (class in pydicom.valuerep)": [[529, "pydicom.valuerep.ISfloat", false]], "isidentifier() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.isidentifier", false]], "isidentifier() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.isidentifier", false]], "islower() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.islower", false]], "islower() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.islower", false]], "isnumeric() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.isnumeric", false]], "isnumeric() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.isnumeric", false]], "isocalendar() (pydicom.valuerep.da method)": [[523, "pydicom.valuerep.DA.isocalendar", false]], "isocalendar() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.isocalendar", false]], "isoformat() (pydicom.valuerep.da method)": [[523, "pydicom.valuerep.DA.isoformat", false]], "isoformat() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.isoformat", false]], "isoformat() (pydicom.valuerep.tm method)": [[531, "pydicom.valuerep.TM.isoformat", false]], "isoweekday() (pydicom.valuerep.da method)": [[523, "pydicom.valuerep.DA.isoweekday", false]], "isoweekday() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.isoweekday", false]], "isprintable() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.isprintable", false]], "isprintable() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.isprintable", false]], "isspace() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.isspace", false]], "isspace() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.isspace", false]], "istitle() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.istitle", false]], "istitle() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.istitle", false]], "isupper() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.isupper", false]], "isupper() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.isupper", false]], "itemize_fragment() (in module pydicom.encaps)": [[149, "pydicom.encaps.itemize_fragment", false]], "itemize_frame() (in module pydicom.encaps)": [[150, "pydicom.encaps.itemize_frame", false]], "items() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.items", false]], "items() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.items", false]], "items() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.items", false]], "iter_array() (pydicom.pixels.decoders.base.decoder method)": [[239, "pydicom.pixels.decoders.base.Decoder.iter_array", false]], "iter_buffer() (pydicom.pixels.decoders.base.decoder method)": [[239, "pydicom.pixels.decoders.base.Decoder.iter_buffer", false]], "iter_decode() (pydicom.pixels.decoders.base.decoderunner method)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.iter_decode", false]], "iter_encode() (pydicom.pixels.encoders.base.encoder method)": [[247, "pydicom.pixels.encoders.base.Encoder.iter_encode", false]], "iter_pixels() (in module pydicom.pixels)": [[250, "pydicom.pixels.iter_pixels", false]], "iter_pixels() (in module pydicom.pixels.utils)": [[270, "pydicom.pixels.utils.iter_pixels", false]], "iterall() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.iterall", false]], "iterall() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.iterall", false]], "iterall() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.iterall", false]], "join() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.join", false]], "join() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.join", false]], "jpeg2000 (in module pydicom.uid)": [[377, "pydicom.uid.JPEG2000", false]], "jpeg2000decoder (in module pydicom.pixels.decoders)": [[229, "pydicom.pixels.decoders.JPEG2000Decoder", false]], "jpeg2000encoder (in module pydicom.pixels.encoders)": [[241, "pydicom.pixels.encoders.JPEG2000Encoder", false]], "jpeg2000lossless (in module pydicom.uid)": [[378, "pydicom.uid.JPEG2000Lossless", false]], "jpeg2000losslessdecoder (in module pydicom.pixels.decoders)": [[230, "pydicom.pixels.decoders.JPEG2000LosslessDecoder", false]], "jpeg2000losslessencoder (in module pydicom.pixels.encoders)": [[242, "pydicom.pixels.encoders.JPEG2000LosslessEncoder", false]], "jpeg2000mc (in module pydicom.uid)": [[379, "pydicom.uid.JPEG2000MC", false]], "jpeg2000mclossless (in module pydicom.uid)": [[380, "pydicom.uid.JPEG2000MCLossless", false]], "jpeg2000transfersyntaxes (in module pydicom.uid)": [[381, "pydicom.uid.JPEG2000TransferSyntaxes", false]], "jpegbaseline8bit (in module pydicom.uid)": [[382, "pydicom.uid.JPEGBaseline8Bit", false]], "jpegbaseline8bitdecoder (in module pydicom.pixels.decoders)": [[231, "pydicom.pixels.decoders.JPEGBaseline8BitDecoder", false]], "jpegextended12bit (in module pydicom.uid)": [[383, "pydicom.uid.JPEGExtended12Bit", false]], "jpegextended12bitdecoder (in module pydicom.pixels.decoders)": [[232, "pydicom.pixels.decoders.JPEGExtended12BitDecoder", false]], "jpeglossless (in module pydicom.uid)": [[387, "pydicom.uid.JPEGLossless", false]], "jpeglosslessdecoder (in module pydicom.pixels.decoders)": [[235, "pydicom.pixels.decoders.JPEGLosslessDecoder", false]], "jpeglosslesssv1 (in module pydicom.uid)": [[388, "pydicom.uid.JPEGLosslessSV1", false]], "jpeglosslesssv1decoder (in module pydicom.pixels.decoders)": [[236, "pydicom.pixels.decoders.JPEGLosslessSV1Decoder", false]], "jpeglslossless (in module pydicom.uid)": [[384, "pydicom.uid.JPEGLSLossless", false]], "jpeglslosslessdecoder (in module pydicom.pixels.decoders)": [[233, "pydicom.pixels.decoders.JPEGLSLosslessDecoder", false]], "jpeglslosslessencoder (in module pydicom.pixels.encoders)": [[243, "pydicom.pixels.encoders.JPEGLSLosslessEncoder", false]], "jpeglsnearlossless (in module pydicom.uid)": [[385, "pydicom.uid.JPEGLSNearLossless", false]], "jpeglsnearlosslessdecoder (in module pydicom.pixels.decoders)": [[234, "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", false]], "jpeglsnearlosslessencoder (in module pydicom.pixels.encoders)": [[244, "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", false]], "jpeglstransfersyntaxes (in module pydicom.uid)": [[386, "pydicom.uid.JPEGLSTransferSyntaxes", false]], "jpegtransfersyntaxes (in module pydicom.uid)": [[389, "pydicom.uid.JPEGTransferSyntaxes", false]], "jpiphtj2kreferenced (in module pydicom.uid)": [[390, "pydicom.uid.JPIPHTJ2KReferenced", false]], "jpiphtj2kreferenceddeflate (in module pydicom.uid)": [[391, "pydicom.uid.JPIPHTJ2KReferencedDeflate", false]], "json_key (pydicom.tag.basetag property)": [[281, "pydicom.tag.BaseTag.json_key", false]], "keratometrymeasurementsstorage (in module pydicom.uid)": [[392, "pydicom.uid.KeratometryMeasurementsStorage", false]], "key (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.key", false]], "keyobjectselectiondocumentstorage (in module pydicom.uid)": [[393, "pydicom.uid.KeyObjectSelectionDocumentStorage", false]], "keys() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.keys", false]], "keys() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.keys", false]], "keys() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.keys", false]], "keyword (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.keyword", false]], "keyword (pydicom.uid.uid property)": [[496, "pydicom.uid.UID.keyword", false]], "keyword_for_tag() (in module pydicom.datadict)": [[120, "pydicom.datadict.keyword_for_tag", false]], "legacyconvertedenhancedctimagestorage (in module pydicom.uid)": [[394, "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", false]], "legacyconvertedenhancedmrimagestorage (in module pydicom.uid)": [[395, "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", false]], "legacyconvertedenhancedpetimagestorage (in module pydicom.uid)": [[396, "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", false]], "length (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.length", false]], "length_of_undefined_length() (in module pydicom.fileutil)": [[179, "pydicom.fileutil.length_of_undefined_length", false]], "lensometrymeasurementsstorage (in module pydicom.uid)": [[397, "pydicom.uid.LensometryMeasurementsStorage", false]], "ljust() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.ljust", false]], "ljust() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.ljust", false]], "ln() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.ln", false]], "load() (pydicom.fileset.fileinstance method)": [[171, "pydicom.fileset.FileInstance.load", false]], "load() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.load", false]], "log10() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.log10", false]], "logb() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.logb", false]], "logical_and() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.logical_and", false]], "logical_invert() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.logical_invert", false]], "logical_or() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.logical_or", false]], "logical_xor() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.logical_xor", false]], "lower() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.lower", false]], "lower() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.lower", false]], "lstrip() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.lstrip", false]], "lstrip() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.lstrip", false]], "maculargridthicknessandvolumereportstorage (in module pydicom.uid)": [[415, "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", false]], "maketrans() (pydicom.uid.uid static method)": [[496, "pydicom.uid.UID.maketrans", false]], "maketrans() (pydicom.valuerep.vr static method)": [[532, "pydicom.valuerep.VR.maketrans", false]], "mammographycadsrstorage (in module pydicom.uid)": [[416, "pydicom.uid.MammographyCADSRStorage", false]], "mask_match() (in module pydicom.datadict)": [[121, "pydicom.datadict.mask_match", false]], "max() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.max", false]], "max_mag() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.max_mag", false]], "maxbytestodisplay (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.maxBytesToDisplay", false]], "meaning (pydicom.sr.code attribute)": [[278, "pydicom.sr.Code.meaning", false]], "mediastoragedirectorystorage (in module pydicom.uid)": [[417, "pydicom.uid.MediaStorageDirectoryStorage", false]], "microscopybulksimpleannotationsstorage (in module pydicom.uid)": [[418, "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", false]], "middle_name (pydicom.valuerep.personname property)": [[530, "pydicom.valuerep.PersonName.middle_name", false]], "min() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.min", false]], "min_mag() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.min_mag", false]], "missing_dependencies (pydicom.pixels.decoders.base.decoder property)": [[239, "pydicom.pixels.decoders.base.Decoder.missing_dependencies", false]], "missing_dependencies (pydicom.pixels.encoders.base.encoder property)": [[247, "pydicom.pixels.encoders.base.Encoder.missing_dependencies", false]], "module": [[67, "module-pydicom.encaps", false], [69, "module-pydicom.examples", false], [206, "module-pydicom.overlays.numpy_handler", false], [207, "module-pydicom.pixel_data_handlers.gdcm_handler", false], [208, "module-pydicom.pixel_data_handlers.jpeg_ls_handler", false], [209, "module-pydicom.pixel_data_handlers.numpy_handler", false], [210, "module-pydicom.pixel_data_handlers.pillow_handler", false], [211, "module-pydicom.pixel_data_handlers.pylibjpeg_handler", false], [212, "module-pydicom.pixel_data_handlers.rle_handler", false], [556, "module-pydicom.waveforms.numpy_handler", false], [558, "module-pydicom.pixel_data_handlers", false], [559, "module-pydicom", false], [561, "module-pydicom.overlays", false], [562, "module-pydicom.pixels", false], [563, "module-pydicom.pixels.decoders", false], [564, "module-pydicom.pixels.encoders", false], [565, "module-pydicom.pixels.processing", false], [566, "module-pydicom.pixels.utils", false], [567, "module-pydicom.sr", false], [568, "module-pydicom.uid", false], [569, "module-pydicom.waveforms", false]], "mpeg2mphl (in module pydicom.uid)": [[398, "pydicom.uid.MPEG2MPHL", false]], "mpeg2mphlf (in module pydicom.uid)": [[399, "pydicom.uid.MPEG2MPHLF", false]], "mpeg2mpml (in module pydicom.uid)": [[400, "pydicom.uid.MPEG2MPML", false]], "mpeg2mpmlf (in module pydicom.uid)": [[401, "pydicom.uid.MPEG2MPMLF", false]], "mpeg4hp41 (in module pydicom.uid)": [[402, "pydicom.uid.MPEG4HP41", false]], "mpeg4hp41bd (in module pydicom.uid)": [[403, "pydicom.uid.MPEG4HP41BD", false]], "mpeg4hp41bdf (in module pydicom.uid)": [[404, "pydicom.uid.MPEG4HP41BDF", false]], "mpeg4hp41f (in module pydicom.uid)": [[405, "pydicom.uid.MPEG4HP41F", false]], "mpeg4hp422d (in module pydicom.uid)": [[406, "pydicom.uid.MPEG4HP422D", false]], "mpeg4hp422df (in module pydicom.uid)": [[407, "pydicom.uid.MPEG4HP422DF", false]], "mpeg4hp423d (in module pydicom.uid)": [[408, "pydicom.uid.MPEG4HP423D", false]], "mpeg4hp423df (in module pydicom.uid)": [[409, "pydicom.uid.MPEG4HP423DF", false]], "mpeg4hp42stereo (in module pydicom.uid)": [[410, "pydicom.uid.MPEG4HP42STEREO", false]], "mpeg4hp42stereof (in module pydicom.uid)": [[411, "pydicom.uid.MPEG4HP42STEREOF", false]], "mpegtransfersyntaxes (in module pydicom.uid)": [[412, "pydicom.uid.MPEGTransferSyntaxes", false]], "mrimagestorage (in module pydicom.uid)": [[413, "pydicom.uid.MRImageStorage", false]], "mrspectroscopystorage (in module pydicom.uid)": [[414, "pydicom.uid.MRSpectroscopyStorage", false]], "multi_string() (in module pydicom.filewriter)": [[184, "pydicom.filewriter.multi_string", false]], "multi_string() (in module pydicom.values)": [[555, "pydicom.values.multi_string", false]], "multichannelrespiratorywaveformstorage (in module pydicom.uid)": [[423, "pydicom.uid.MultichannelRespiratoryWaveformStorage", false]], "multiframegrayscalebytesecondarycaptureimagestorage (in module pydicom.uid)": [[419, "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", false]], "multiframegrayscalewordsecondarycaptureimagestorage (in module pydicom.uid)": [[420, "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", false]], "multiframesinglebitsecondarycaptureimagestorage (in module pydicom.uid)": [[421, "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", false]], "multiframetruecolorsecondarycaptureimagestorage (in module pydicom.uid)": [[422, "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", false]], "multiplevolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[424, "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", false]], "multiplex_array() (in module pydicom.waveforms.numpy_handler)": [[556, "pydicom.waveforms.numpy_handler.multiplex_array", false]], "multivalue (class in pydicom.multival)": [[205, "pydicom.multival.MultiValue", false]], "name (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.name", false]], "name (pydicom.filebase.dicombytesio property)": [[156, "pydicom.filebase.DicomBytesIO.name", false]], "name (pydicom.filebase.dicomfilelike property)": [[158, "pydicom.filebase.DicomFileLike.name", false]], "name (pydicom.filebase.dicomio property)": [[159, "pydicom.filebase.DicomIO.name", false]], "name (pydicom.sr.collection property)": [[279, "pydicom.sr.Collection.name", false]], "name (pydicom.uid.uid property)": [[496, "pydicom.uid.UID.name", false]], "name_prefix (pydicom.valuerep.personname property)": [[530, "pydicom.valuerep.PersonName.name_prefix", false]], "name_suffix (pydicom.valuerep.personname property)": [[530, "pydicom.valuerep.PersonName.name_suffix", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[208, "pydicom.pixel_data_handlers.jpeg_ls_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[209, "pydicom.pixel_data_handlers.numpy_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[210, "pydicom.pixel_data_handlers.pillow_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[212, "pydicom.pixel_data_handlers.rle_handler.needs_to_convert_to_RGB", false]], "next (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.next", false]], "next_minus() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.next_minus", false]], "next_plus() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.next_plus", false]], "next_toward() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.next_toward", false]], "node (pydicom.fileset.fileinstance attribute)": [[171, "pydicom.fileset.FileInstance.node", false]], "normalize() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.normalize", false]], "now() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.now", false]], "nuclearmedicineimagestorage (in module pydicom.uid)": [[425, "pydicom.uid.NuclearMedicineImageStorage", false]], "number_class() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.number_class", false]], "number_of_frames (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.number_of_frames", false]], "number_of_frames (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.number_of_frames", false]], "numerator (pydicom.tag.basetag attribute)": [[281, "pydicom.tag.BaseTag.numerator", false]], "numerator (pydicom.valuerep.is attribute)": [[528, "pydicom.valuerep.IS.numerator", false]], "ophthalmicaxialmeasurementsstorage (in module pydicom.uid)": [[426, "pydicom.uid.OphthalmicAxialMeasurementsStorage", false]], "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage (in module pydicom.uid)": [[427, "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", false]], "ophthalmicopticalcoherencetomographyenfaceimagestorage (in module pydicom.uid)": [[428, "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", false]], "ophthalmicphotography16bitimagestorage (in module pydicom.uid)": [[429, "pydicom.uid.OphthalmicPhotography16BitImageStorage", false]], "ophthalmicphotography8bitimagestorage (in module pydicom.uid)": [[430, "pydicom.uid.OphthalmicPhotography8BitImageStorage", false]], "ophthalmicthicknessmapstorage (in module pydicom.uid)": [[431, "pydicom.uid.OphthalmicThicknessMapStorage", false]], "ophthalmictomographyimagestorage (in module pydicom.uid)": [[432, "pydicom.uid.OphthalmicTomographyImageStorage", false]], "ophthalmicvisualfieldstaticperimetrymeasurementsstorage (in module pydicom.uid)": [[433, "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", false]], "options (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.options", false]], "options (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.options", false]], "original_character_set (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.original_character_set", false]], "original_character_set (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.original_character_set", false]], "original_character_set (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.original_character_set", false]], "original_encoding (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.original_encoding", false]], "original_encoding (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.original_encoding", false]], "original_encoding (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.original_encoding", false]], "overlay_array() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.overlay_array", false]], "overlay_array() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.overlay_array", false]], "overlay_array() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.overlay_array", false]], "pack_bits() (in module pydicom.pixels)": [[251, "pydicom.pixels.pack_bits", false]], "pack_bits() (in module pydicom.pixels.utils)": [[271, "pydicom.pixels.utils.pack_bits", false]], "parametricmapstorage (in module pydicom.uid)": [[436, "pydicom.uid.ParametricMapStorage", false]], "parent (pydicom.filebase.dicombytesio property)": [[156, "pydicom.filebase.DicomBytesIO.parent", false]], "parent (pydicom.filebase.dicomfilelike property)": [[158, "pydicom.filebase.DicomFileLike.parent", false]], "parent (pydicom.filebase.dicomio property)": [[159, "pydicom.filebase.DicomIO.parent", false]], "parent (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.parent", false]], "parse_basic_offsets() (in module pydicom.encaps)": [[151, "pydicom.encaps.parse_basic_offsets", false]], "parse_fragments() (in module pydicom.encaps)": [[152, "pydicom.encaps.parse_fragments", false]], "partition() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.partition", false]], "partition() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.partition", false]], "path (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.path", false]], "path (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.path", false]], "patientradiationdosesrstorage (in module pydicom.uid)": [[437, "pydicom.uid.PatientRadiationDoseSRStorage", false]], "performedimagingagentadministrationsrstorage (in module pydicom.uid)": [[438, "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", false]], "personname (class in pydicom.valuerep)": [[530, "pydicom.valuerep.PersonName", false]], "phonetic (pydicom.valuerep.personname property)": [[530, "pydicom.valuerep.PersonName.phonetic", false]], "photoacousticimagestorage (in module pydicom.uid)": [[439, "pydicom.uid.PhotoacousticImageStorage", false]], "photometric_interpretation (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.photometric_interpretation", false]], "photometric_interpretation (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.photometric_interpretation", false]], "pixel_array (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.pixel_array", false]], "pixel_array (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.pixel_array", false]], "pixel_array (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.pixel_array", false]], "pixel_array() (in module pydicom.pixels)": [[252, "pydicom.pixels.pixel_array", false]], "pixel_array() (in module pydicom.pixels.utils)": [[272, "pydicom.pixels.utils.pixel_array", false]], "pixel_array_options() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.pixel_array_options", false]], "pixel_array_options() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.pixel_array_options", false]], "pixel_array_options() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.pixel_array_options", false]], "pixel_data_handlers (in module pydicom.config)": [[97, "pydicom.config.pixel_data_handlers", false]], "pixel_dtype (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.pixel_dtype", false]], "pixel_dtype() (in module pydicom.pixels.utils)": [[273, "pydicom.pixels.utils.pixel_dtype", false]], "pixel_keyword (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.pixel_keyword", false]], "pixel_keyword (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.pixel_keyword", false]], "pixel_properties() (pydicom.pixels.decoders.base.decoderunner method)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.pixel_properties", false]], "pixel_representation (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.pixel_representation", false]], "pixel_representation (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.pixel_representation", false]], "planar_configuration (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.planar_configuration", false]], "planar_configuration (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.planar_configuration", false]], "plannedimagingagentadministrationsrstorage (in module pydicom.uid)": [[440, "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", false]], "pop() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.pop", false]], "pop() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.pop", false]], "pop() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.pop", false]], "pop() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.pop", false]], "pop() (pydicom.sequence.sequence method)": [[277, "pydicom.sequence.Sequence.pop", false]], "popitem() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.popitem", false]], "popitem() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.popitem", false]], "popitem() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.popitem", false]], "positronemissiontomographyimagestorage (in module pydicom.uid)": [[441, "pydicom.uid.PositronEmissionTomographyImageStorage", false]], "preamble (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.preamble", false]], "prettify() (pydicom.fileset.recordnode method)": [[173, "pydicom.fileset.RecordNode.prettify", false]], "previous (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.previous", false]], "private_block() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.private_block", false]], "private_block() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.private_block", false]], "private_block() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.private_block", false]], "private_creator (pydicom.dataset.privateblock attribute)": [[134, "pydicom.dataset.PrivateBlock.private_creator", false]], "private_creator (pydicom.tag.basetag property)": [[281, "pydicom.tag.BaseTag.private_creator", false]], "private_creators() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.private_creators", false]], "private_creators() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.private_creators", false]], "private_creators() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.private_creators", false]], "private_dictionary_description() (in module pydicom.datadict)": [[124, "pydicom.datadict.private_dictionary_description", false]], "private_dictionary_vm() (in module pydicom.datadict)": [[122, "pydicom.datadict.private_dictionary_VM", false]], "private_dictionary_vr() (in module pydicom.datadict)": [[123, "pydicom.datadict.private_dictionary_VR", false]], "privateblock (class in pydicom.dataset)": [[134, "pydicom.dataset.PrivateBlock", false]], "privatetransfersyntaxes (in module pydicom.uid)": [[442, "pydicom.uid.PrivateTransferSyntaxes", false]], "procedurelogstorage (in module pydicom.uid)": [[443, "pydicom.uid.ProcedureLogStorage", false]], "process() (pydicom.pixels.decoders.base.decoderunner method)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.process", false]], "protocolapprovalstorage (in module pydicom.uid)": [[444, "pydicom.uid.ProtocolApprovalStorage", false]], "pseudocolorsoftcopypresentationstatestorage (in module pydicom.uid)": [[445, "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", false]], "pydicom": [[559, "module-pydicom", false]], "pydicom.encaps": [[67, "module-pydicom.encaps", false]], "pydicom.examples": [[69, "module-pydicom.examples", false]], "pydicom.overlays": [[561, "module-pydicom.overlays", false]], "pydicom.overlays.numpy_handler": [[206, "module-pydicom.overlays.numpy_handler", false]], "pydicom.pixel_data_handlers": [[558, "module-pydicom.pixel_data_handlers", false]], "pydicom.pixel_data_handlers.gdcm_handler": [[207, "module-pydicom.pixel_data_handlers.gdcm_handler", false]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[208, "module-pydicom.pixel_data_handlers.jpeg_ls_handler", false]], "pydicom.pixel_data_handlers.numpy_handler": [[209, "module-pydicom.pixel_data_handlers.numpy_handler", false]], "pydicom.pixel_data_handlers.pillow_handler": [[210, "module-pydicom.pixel_data_handlers.pillow_handler", false]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[211, "module-pydicom.pixel_data_handlers.pylibjpeg_handler", false]], "pydicom.pixel_data_handlers.rle_handler": [[212, "module-pydicom.pixel_data_handlers.rle_handler", false]], "pydicom.pixels": [[562, "module-pydicom.pixels", false]], "pydicom.pixels.decoders": [[563, "module-pydicom.pixels.decoders", false]], "pydicom.pixels.encoders": [[564, "module-pydicom.pixels.encoders", false]], "pydicom.pixels.processing": [[565, "module-pydicom.pixels.processing", false]], "pydicom.pixels.utils": [[566, "module-pydicom.pixels.utils", false]], "pydicom.sr": [[567, "module-pydicom.sr", false]], "pydicom.uid": [[568, "module-pydicom.uid", false]], "pydicom.waveforms": [[569, "module-pydicom.waveforms", false]], "pydicom.waveforms.numpy_handler": [[556, "module-pydicom.waveforms.numpy_handler", false]], "pydicom_implementation_uid (in module pydicom.uid)": [[434, "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", false]], "pydicom_root_uid (in module pydicom.uid)": [[435, "pydicom.uid.PYDICOM_ROOT_UID", false]], "quantize() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.quantize", false]], "radiopharmaceuticalradiationdosesrstorage (in module pydicom.uid)": [[469, "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", false]], "radix() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.radix", false]], "raise (in module pydicom.config)": [[86, "pydicom.config.RAISE", false]], "rawdataelement (class in pydicom.dataelem)": [[130, "pydicom.dataelem.RawDataElement", false]], "rawdatastorage (in module pydicom.uid)": [[470, "pydicom.uid.RawDataStorage", false]], "re_valid_uid (in module pydicom.uid)": [[446, "pydicom.uid.RE_VALID_UID", false]], "re_valid_uid_prefix (in module pydicom.uid)": [[447, "pydicom.uid.RE_VALID_UID_PREFIX", false]], "read() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.read", false]], "read() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.read", false]], "read() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.read", false]], "read_dataset() (in module pydicom.filereader)": [[163, "pydicom.filereader.read_dataset", false]], "read_deferred_data_element() (in module pydicom.filereader)": [[164, "pydicom.filereader.read_deferred_data_element", false]], "read_encoding (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.read_encoding", false]], "read_encoding (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.read_encoding", false]], "read_encoding (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.read_encoding", false]], "read_exact() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.read_exact", false]], "read_exact() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.read_exact", false]], "read_exact() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.read_exact", false]], "read_file_meta_info() (in module pydicom.filereader)": [[165, "pydicom.filereader.read_file_meta_info", false]], "read_implicit_vr (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.read_implicit_vr", false]], "read_implicit_vr (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.read_implicit_vr", false]], "read_implicit_vr (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.read_implicit_vr", false]], "read_item() (in module pydicom.encaps)": [[153, "pydicom.encaps.read_item", false]], "read_little_endian (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.read_little_endian", false]], "read_little_endian (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.read_little_endian", false]], "read_little_endian (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.read_little_endian", false]], "read_partial() (in module pydicom.filereader)": [[166, "pydicom.filereader.read_partial", false]], "read_preamble() (in module pydicom.filereader)": [[167, "pydicom.filereader.read_preamble", false]], "read_sequence() (in module pydicom.filereader)": [[168, "pydicom.filereader.read_sequence", false]], "read_sequence_item() (in module pydicom.filereader)": [[169, "pydicom.filereader.read_sequence_item", false]], "read_tag() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.read_tag", false]], "read_tag() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.read_tag", false]], "read_tag() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.read_tag", false]], "read_ul() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.read_UL", false]], "read_ul() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.read_UL", false]], "read_ul() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.read_UL", false]], "read_undefined_length_value() (in module pydicom.fileutil)": [[180, "pydicom.fileutil.read_undefined_length_value", false]], "read_us() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.read_US", false]], "read_us() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.read_US", false]], "read_us() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.read_US", false]], "reading_validation_mode (pydicom.config.settings property)": [[56, "pydicom.config.Settings.reading_validation_mode", false]], "real (pydicom.tag.basetag attribute)": [[281, "pydicom.tag.BaseTag.real", false]], "real (pydicom.valuerep.dsfloat attribute)": [[526, "pydicom.valuerep.DSfloat.real", false]], "real (pydicom.valuerep.is attribute)": [[528, "pydicom.valuerep.IS.real", false]], "real (pydicom.valuerep.isfloat attribute)": [[529, "pydicom.valuerep.ISfloat.real", false]], "realworldvaluemappingstorage (in module pydicom.uid)": [[471, "pydicom.uid.RealWorldValueMappingStorage", false]], "record_type (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.record_type", false]], "recordnode (class in pydicom.fileset)": [[173, "pydicom.fileset.RecordNode", false]], "register_transfer_syntax() (in module pydicom.uid)": [[522, "pydicom.uid.register_transfer_syntax", false]], "remainder_near() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.remainder_near", false]], "remove() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.remove", false]], "remove() (pydicom.fileset.recordnode method)": [[173, "pydicom.fileset.RecordNode.remove", false]], "remove() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.remove", false]], "remove() (pydicom.sequence.sequence method)": [[277, "pydicom.sequence.Sequence.remove", false]], "remove_plugin() (pydicom.pixels.decoders.base.decoder method)": [[239, "pydicom.pixels.decoders.base.Decoder.remove_plugin", false]], "remove_plugin() (pydicom.pixels.encoders.base.encoder method)": [[247, "pydicom.pixels.encoders.base.Encoder.remove_plugin", false]], "remove_private_tags() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.remove_private_tags", false]], "remove_private_tags() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.remove_private_tags", false]], "remove_private_tags() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.remove_private_tags", false]], "removeprefix() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.removeprefix", false]], "removeprefix() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.removeprefix", false]], "removesuffix() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.removesuffix", false]], "removesuffix() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.removesuffix", false]], "repeater_has_keyword() (in module pydicom.datadict)": [[125, "pydicom.datadict.repeater_has_keyword", false]], "repeater_has_tag() (in module pydicom.datadict)": [[126, "pydicom.datadict.repeater_has_tag", false]], "replace() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.replace", false]], "replace() (pydicom.valuerep.da method)": [[523, "pydicom.valuerep.DA.replace", false]], "replace() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.replace", false]], "replace() (pydicom.valuerep.tm method)": [[531, "pydicom.valuerep.TM.replace", false]], "replace() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.replace", false]], "repval (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.repval", false]], "reset_data_element_callback() (in module pydicom.config)": [[98, "pydicom.config.reset_data_element_callback", false]], "reshape() (pydicom.pixels.decoders.base.decoderunner method)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.reshape", false]], "reshape_overlay_array() (in module pydicom.overlays.numpy_handler)": [[206, "pydicom.overlays.numpy_handler.reshape_overlay_array", false]], "reshape_pixel_array() (in module pydicom.pixels.utils)": [[274, "pydicom.pixels.utils.reshape_pixel_array", false]], "respiratorywaveformstorage (in module pydicom.uid)": [[472, "pydicom.uid.RespiratoryWaveformStorage", false]], "reverse() (pydicom.fileset.recordnode method)": [[173, "pydicom.fileset.RecordNode.reverse", false]], "reverse() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.reverse", false]], "reverse() (pydicom.sequence.sequence method)": [[277, "pydicom.sequence.Sequence.reverse", false]], "rfind() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.rfind", false]], "rfind() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.rfind", false]], "rindex() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.rindex", false]], "rindex() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.rindex", false]], "rjust() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.rjust", false]], "rjust() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.rjust", false]], "rlelossless (in module pydicom.uid)": [[448, "pydicom.uid.RLELossless", false]], "rlelosslessdecoder (in module pydicom.pixels.decoders)": [[237, "pydicom.pixels.decoders.RLELosslessDecoder", false]], "rlelosslessencoder (in module pydicom.pixels.encoders)": [[245, "pydicom.pixels.encoders.RLELosslessEncoder", false]], "rletransfersyntaxes (in module pydicom.uid)": [[449, "pydicom.uid.RLETransferSyntaxes", false]], "roboticarmradiationstorage (in module pydicom.uid)": [[473, "pydicom.uid.RoboticArmRadiationStorage", false]], "roboticradiationrecordstorage (in module pydicom.uid)": [[474, "pydicom.uid.RoboticRadiationRecordStorage", false]], "root (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.root", false]], "rotate() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.rotate", false]], "routinescalpelectroencephalogramwaveformstorage (in module pydicom.uid)": [[475, "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", false]], "rows (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.rows", false]], "rows (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.rows", false]], "rpartition() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.rpartition", false]], "rpartition() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.rpartition", false]], "rsplit() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.rsplit", false]], "rsplit() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.rsplit", false]], "rstrip() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.rstrip", false]], "rstrip() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.rstrip", false]], "rtbeamsdeliveryinstructionstorage (in module pydicom.uid)": [[450, "pydicom.uid.RTBeamsDeliveryInstructionStorage", false]], "rtbeamstreatmentrecordstorage (in module pydicom.uid)": [[451, "pydicom.uid.RTBeamsTreatmentRecordStorage", false]], "rtbrachyapplicationsetupdeliveryinstructionstorage (in module pydicom.uid)": [[452, "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", false]], "rtbrachytreatmentrecordstorage (in module pydicom.uid)": [[453, "pydicom.uid.RTBrachyTreatmentRecordStorage", false]], "rtdosestorage (in module pydicom.uid)": [[454, "pydicom.uid.RTDoseStorage", false]], "rtimagestorage (in module pydicom.uid)": [[455, "pydicom.uid.RTImageStorage", false]], "rtionbeamstreatmentrecordstorage (in module pydicom.uid)": [[456, "pydicom.uid.RTIonBeamsTreatmentRecordStorage", false]], "rtionplanstorage (in module pydicom.uid)": [[457, "pydicom.uid.RTIonPlanStorage", false]], "rtpatientpositionacquisitioninstructionstorage (in module pydicom.uid)": [[458, "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", false]], "rtphysicianintentstorage (in module pydicom.uid)": [[459, "pydicom.uid.RTPhysicianIntentStorage", false]], "rtplanstorage (in module pydicom.uid)": [[460, "pydicom.uid.RTPlanStorage", false]], "rtradiationrecordsetstorage (in module pydicom.uid)": [[461, "pydicom.uid.RTRadiationRecordSetStorage", false]], "rtradiationsalvagerecordstorage (in module pydicom.uid)": [[462, "pydicom.uid.RTRadiationSalvageRecordStorage", false]], "rtradiationsetdeliveryinstructionstorage (in module pydicom.uid)": [[463, "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", false]], "rtradiationsetstorage (in module pydicom.uid)": [[464, "pydicom.uid.RTRadiationSetStorage", false]], "rtsegmentannotationstorage (in module pydicom.uid)": [[465, "pydicom.uid.RTSegmentAnnotationStorage", false]], "rtstructuresetstorage (in module pydicom.uid)": [[466, "pydicom.uid.RTStructureSetStorage", false]], "rttreatmentpreparationstorage (in module pydicom.uid)": [[467, "pydicom.uid.RTTreatmentPreparationStorage", false]], "rttreatmentsummaryrecordstorage (in module pydicom.uid)": [[468, "pydicom.uid.RTTreatmentSummaryRecordStorage", false]], "same_quantum() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.same_quantum", false]], "samples_per_pixel (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.samples_per_pixel", false]], "samples_per_pixel (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.samples_per_pixel", false]], "save_as() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.save_as", false]], "save_as() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.save_as", false]], "save_as() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.save_as", false]], "scaleb() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.scaleb", false]], "scheme_designator (pydicom.sr.code attribute)": [[278, "pydicom.sr.Code.scheme_designator", false]], "scheme_designator (pydicom.sr.collection property)": [[279, "pydicom.sr.Collection.scheme_designator", false]], "scheme_version (pydicom.sr.code attribute)": [[278, "pydicom.sr.Code.scheme_version", false]], "schemes() (pydicom.sr.concepts method)": [[280, "pydicom.sr.Concepts.schemes", false]], "secondarycaptureimagestorage (in module pydicom.uid)": [[479, "pydicom.uid.SecondaryCaptureImageStorage", false]], "seek() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.seek", false]], "seek() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.seek", false]], "seek() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.seek", false]], "segmentationstorage (in module pydicom.uid)": [[480, "pydicom.uid.SegmentationStorage", false]], "segmentedvolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[481, "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", false]], "sequence (class in pydicom.sequence)": [[277, "pydicom.sequence.Sequence", false]], "set_decoders() (pydicom.pixels.decoders.base.decoderunner method)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.set_decoders", false]], "set_encoders() (pydicom.pixels.encoders.base.encoderunner method)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.set_encoders", false]], "set_option() (pydicom.pixels.decoders.base.decoderunner method)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.set_option", false]], "set_option() (pydicom.pixels.encoders.base.encoderunner method)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.set_option", false]], "set_options() (pydicom.pixels.decoders.base.decoderunner method)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.set_options", false]], "set_options() (pydicom.pixels.encoders.base.encoderunner method)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.set_options", false]], "set_original_encoding() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.set_original_encoding", false]], "set_original_encoding() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.set_original_encoding", false]], "set_original_encoding() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.set_original_encoding", false]], "set_pixel_data() (in module pydicom.pixels)": [[260, "pydicom.pixels.set_pixel_data", false]], "set_pixel_data() (in module pydicom.pixels.utils)": [[275, "pydicom.pixels.utils.set_pixel_data", false]], "set_pixel_data() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.set_pixel_data", false]], "set_pixel_data() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.set_pixel_data", false]], "set_pixel_data() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.set_pixel_data", false]], "set_private_encoding() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.set_private_encoding", false]], "set_source() (pydicom.pixels.decoders.base.decoderunner method)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.set_source", false]], "set_source() (pydicom.pixels.encoders.base.encoderunner method)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.set_source", false]], "setdefault() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.setdefault", false]], "setdefault() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.setdefault", false]], "setdefault() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.setdefault", false]], "settings (class in pydicom.config)": [[56, "pydicom.config.Settings", false]], "settings (in module pydicom.config)": [[99, "pydicom.config.settings", false]], "shift() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.shift", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[208, "pydicom.pixel_data_handlers.jpeg_ls_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[209, "pydicom.pixel_data_handlers.numpy_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[210, "pydicom.pixel_data_handlers.pillow_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[212, "pydicom.pixel_data_handlers.rle_handler.should_change_PhotometricInterpretation_to_RGB", false]], "show_file_meta (in module pydicom.config)": [[100, "pydicom.config.show_file_meta", false]], "showvr (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.showVR", false]], "simplifiedadultechosrstorage (in module pydicom.uid)": [[482, "pydicom.uid.SimplifiedAdultEchoSRStorage", false]], "size_in_bytes() (in module pydicom.misc)": [[204, "pydicom.misc.size_in_bytes", false]], "sleepelectroencephalogramwaveformstorage (in module pydicom.uid)": [[483, "pydicom.uid.SleepElectroencephalogramWaveformStorage", false]], "smptest211020uncompressedinterlacedactivevideo (in module pydicom.uid)": [[476, "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", false]], "smptest211020uncompressedprogressiveactivevideo (in module pydicom.uid)": [[477, "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", false]], "smptest211030pcmdigitalaudio (in module pydicom.uid)": [[478, "pydicom.uid.SMPTEST211030PCMDigitalAudio", false]], "sopclassuid (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.SOPClassUID", false]], "sopinstanceuid (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.SOPInstanceUID", false]], "spatialfiducialsstorage (in module pydicom.uid)": [[484, "pydicom.uid.SpatialFiducialsStorage", false]], "spatialregistrationstorage (in module pydicom.uid)": [[485, "pydicom.uid.SpatialRegistrationStorage", false]], "spectacleprescriptionreportstorage (in module pydicom.uid)": [[486, "pydicom.uid.SpectaclePrescriptionReportStorage", false]], "split() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.split", false]], "split() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.split", false]], "splitlines() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.splitlines", false]], "splitlines() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.splitlines", false]], "sqrt() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.sqrt", false]], "src (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.src", false]], "src (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.src", false]], "startswith() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.startswith", false]], "startswith() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.startswith", false]], "stereometricrelationshipstorage (in module pydicom.uid)": [[487, "pydicom.uid.StereometricRelationshipStorage", false]], "strftime() (pydicom.valuerep.da method)": [[523, "pydicom.valuerep.DA.strftime", false]], "strftime() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.strftime", false]], "strftime() (pydicom.valuerep.tm method)": [[531, "pydicom.valuerep.TM.strftime", false]], "strip() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.strip", false]], "strip() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.strip", false]], "strptime() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.strptime", false]], "subjectiverefractionmeasurementsstorage (in module pydicom.uid)": [[488, "pydicom.uid.SubjectiveRefractionMeasurementsStorage", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[207, "pydicom.pixel_data_handlers.gdcm_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[208, "pydicom.pixel_data_handlers.jpeg_ls_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.numpy_handler)": [[209, "pydicom.pixel_data_handlers.numpy_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pillow_handler)": [[210, "pydicom.pixel_data_handlers.pillow_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[211, "pydicom.pixel_data_handlers.pylibjpeg_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.rle_handler)": [[212, "pydicom.pixel_data_handlers.rle_handler.supports_transfer_syntax", false]], "surfacescanmeshstorage (in module pydicom.uid)": [[489, "pydicom.uid.SurfaceScanMeshStorage", false]], "surfacescanpointcloudstorage (in module pydicom.uid)": [[490, "pydicom.uid.SurfaceScanPointCloudStorage", false]], "surfacesegmentationstorage (in module pydicom.uid)": [[491, "pydicom.uid.SurfaceSegmentationStorage", false]], "swapcase() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.swapcase", false]], "swapcase() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.swapcase", false]], "tag (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.tag", false]], "tag (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.tag", false]], "tag() (in module pydicom.tag)": [[282, "pydicom.tag.Tag", false]], "tag_for_keyword() (in module pydicom.datadict)": [[127, "pydicom.datadict.tag_for_keyword", false]], "tag_in_exception() (in module pydicom.tag)": [[284, "pydicom.tag.tag_in_exception", false]], "tell() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.tell", false]], "tell() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.tell", false]], "tell() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.tell", false]], "time() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.time", false]], "timestamp (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.timestamp", false]], "timestamp() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.timestamp", false]], "timetuple() (pydicom.valuerep.da method)": [[523, "pydicom.valuerep.DA.timetuple", false]], "timetuple() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.timetuple", false]], "timetz() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.timetz", false]], "title() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.title", false]], "title() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.title", false]], "tm (class in pydicom.valuerep)": [[531, "pydicom.valuerep.TM", false]], "to_bytes() (pydicom.tag.basetag method)": [[281, "pydicom.tag.BaseTag.to_bytes", false]], "to_bytes() (pydicom.valuerep.is method)": [[528, "pydicom.valuerep.IS.to_bytes", false]], "to_eng_string() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.to_eng_string", false]], "to_integral() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.to_integral", false]], "to_integral_exact() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.to_integral_exact", false]], "to_integral_value() (pydicom.valuerep.dsdecimal method)": [[525, "pydicom.valuerep.DSdecimal.to_integral_value", false]], "to_json() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.to_json", false]], "to_json() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.to_json", false]], "to_json() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.to_json", false]], "to_json() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.to_json", false]], "to_json_dict() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.to_json_dict", false]], "to_json_dict() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.to_json_dict", false]], "to_json_dict() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.to_json_dict", false]], "to_json_dict() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.to_json_dict", false]], "today() (pydicom.valuerep.da method)": [[523, "pydicom.valuerep.DA.today", false]], "today() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.today", false]], "tomotherapeuticradiationrecordstorage (in module pydicom.uid)": [[492, "pydicom.uid.TomotherapeuticRadiationRecordStorage", false]], "tomotherapeuticradiationstorage (in module pydicom.uid)": [[493, "pydicom.uid.TomotherapeuticRadiationStorage", false]], "toordinal() (pydicom.valuerep.da method)": [[523, "pydicom.valuerep.DA.toordinal", false]], "toordinal() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.toordinal", false]], "top() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.top", false]], "top() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.top", false]], "top() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.top", false]], "tractographyresultsstorage (in module pydicom.uid)": [[494, "pydicom.uid.TractographyResultsStorage", false]], "trait_names() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.trait_names", false]], "trait_names() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.trait_names", false]], "trait_names() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.trait_names", false]], "trait_names() (pydicom.sr.collection method)": [[279, "pydicom.sr.Collection.trait_names", false]], "transfer_syntax (pydicom.pixels.decoders.base.decoderunner property)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.transfer_syntax", false]], "transfer_syntax (pydicom.pixels.encoders.base.encoderunner property)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.transfer_syntax", false]], "transfersyntaxuid (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.TransferSyntaxUID", false]], "translate() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.translate", false]], "translate() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.translate", false]], "tupletag() (in module pydicom.tag)": [[283, "pydicom.tag.TupleTag", false]], "twelveleadecgwaveformstorage (in module pydicom.uid)": [[495, "pydicom.uid.TwelveLeadECGWaveformStorage", false]], "type (pydicom.uid.uid property)": [[496, "pydicom.uid.UID.type", false]], "tzname() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.tzname", false]], "tzname() (pydicom.valuerep.tm method)": [[531, "pydicom.valuerep.TM.tzname", false]], "uid (class in pydicom.uid)": [[496, "pydicom.uid.UID", false]], "uid (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.UID", false]], "uid (pydicom.pixels.decoders.base.decoder property)": [[239, "pydicom.pixels.decoders.base.Decoder.UID", false]], "uid (pydicom.pixels.encoders.base.encoder property)": [[247, "pydicom.pixels.encoders.base.Encoder.UID", false]], "ultrasoundimagestorage (in module pydicom.uid)": [[497, "pydicom.uid.UltrasoundImageStorage", false]], "ultrasoundmultiframeimagestorage (in module pydicom.uid)": [[498, "pydicom.uid.UltrasoundMultiFrameImageStorage", false]], "uncompressedtransfersyntaxes (in module pydicom.uid)": [[499, "pydicom.uid.UncompressedTransferSyntaxes", false]], "unpack_bits() (in module pydicom.pixels)": [[261, "pydicom.pixels.unpack_bits", false]], "unpack_bits() (in module pydicom.pixels.utils)": [[276, "pydicom.pixels.utils.unpack_bits", false]], "update() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.update", false]], "update() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.update", false]], "update() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.update", false]], "upper() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.upper", false]], "upper() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.upper", false]], "use_ds_decimal (in module pydicom.config)": [[101, "pydicom.config.use_DS_decimal", false]], "use_ds_numpy (in module pydicom.config)": [[102, "pydicom.config.use_DS_numpy", false]], "use_is_numpy (in module pydicom.config)": [[103, "pydicom.config.use_IS_numpy", false]], "utcfromtimestamp() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.utcfromtimestamp", false]], "utcnow() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.utcnow", false]], "utcoffset() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.utcoffset", false]], "utcoffset() (pydicom.valuerep.tm method)": [[531, "pydicom.valuerep.TM.utcoffset", false]], "utctimetuple() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.utctimetuple", false]], "validate() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.validate", false]], "validate() (pydicom.dataset.filemetadataset static method)": [[133, "pydicom.dataset.FileMetaDataset.validate", false]], "validate() (pydicom.pixels.decoders.base.decoderunner method)": [[238, "pydicom.pixels.decoders.base.DecodeRunner.validate", false]], "validate() (pydicom.pixels.encoders.base.encoderunner method)": [[246, "pydicom.pixels.encoders.base.EncodeRunner.validate", false]], "validate_file_meta() (in module pydicom.dataset)": [[135, "pydicom.dataset.validate_file_meta", false]], "value (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.value", false]], "value (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.value", false]], "value (pydicom.sr.code attribute)": [[278, "pydicom.sr.Code.value", false]], "value_tell (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.value_tell", false]], "values() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.values", false]], "values() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.values", false]], "values() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.values", false]], "variablemodalitylutsoftcopypresentationstatestorage (in module pydicom.uid)": [[505, "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", false]], "videoendoscopicimagestorage (in module pydicom.uid)": [[506, "pydicom.uid.VideoEndoscopicImageStorage", false]], "videomicroscopicimagestorage (in module pydicom.uid)": [[507, "pydicom.uid.VideoMicroscopicImageStorage", false]], "videophotographicimagestorage (in module pydicom.uid)": [[508, "pydicom.uid.VideoPhotographicImageStorage", false]], "visualacuitymeasurementsstorage (in module pydicom.uid)": [[509, "pydicom.uid.VisualAcuityMeasurementsStorage", false]], "vlendoscopicimagestorage (in module pydicom.uid)": [[500, "pydicom.uid.VLEndoscopicImageStorage", false]], "vlmicroscopicimagestorage (in module pydicom.uid)": [[501, "pydicom.uid.VLMicroscopicImageStorage", false]], "vlphotographicimagestorage (in module pydicom.uid)": [[502, "pydicom.uid.VLPhotographicImageStorage", false]], "vlslidecoordinatesmicroscopicimagestorage (in module pydicom.uid)": [[503, "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", false]], "vlwholeslidemicroscopyimagestorage (in module pydicom.uid)": [[504, "pydicom.uid.VLWholeSlideMicroscopyImageStorage", false]], "vm (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.VM", false]], "volumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[510, "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", false]], "vr (class in pydicom.valuerep)": [[532, "pydicom.valuerep.VR", false]], "vr (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.VR", false]], "vr (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.VR", false]], "walk() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.walk", false]], "walk() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.walk", false]], "walk() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.walk", false]], "warn (in module pydicom.config)": [[87, "pydicom.config.WARN", false]], "waveform_array() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.waveform_array", false]], "waveform_array() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.waveform_array", false]], "waveform_array() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.waveform_array", false]], "weekday() (pydicom.valuerep.da method)": [[523, "pydicom.valuerep.DA.weekday", false]], "weekday() (pydicom.valuerep.dt method)": [[527, "pydicom.valuerep.DT.weekday", false]], "widefieldophthalmicphotography3dcoordinatesimagestorage (in module pydicom.uid)": [[511, "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", false]], "widefieldophthalmicphotographystereographicprojectionimagestorage (in module pydicom.uid)": [[512, "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", false]], "with_traceback() (pydicom.errors.invaliddicomerror method)": [[154, "pydicom.errors.InvalidDicomError.with_traceback", false]], "write() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.write", false]], "write() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.write", false]], "write() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.write", false]], "write() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.write", false]], "write_atvalue() (in module pydicom.filewriter)": [[185, "pydicom.filewriter.write_ATvalue", false]], "write_da() (in module pydicom.filewriter)": [[186, "pydicom.filewriter.write_DA", false]], "write_data_element() (in module pydicom.filewriter)": [[194, "pydicom.filewriter.write_data_element", false]], "write_dataset() (in module pydicom.filewriter)": [[195, "pydicom.filewriter.write_dataset", false]], "write_dt() (in module pydicom.filewriter)": [[187, "pydicom.filewriter.write_DT", false]], "write_file_meta_info() (in module pydicom.filewriter)": [[196, "pydicom.filewriter.write_file_meta_info", false]], "write_number_string() (in module pydicom.filewriter)": [[197, "pydicom.filewriter.write_number_string", false]], "write_numbers() (in module pydicom.filewriter)": [[198, "pydicom.filewriter.write_numbers", false]], "write_obvalue() (in module pydicom.filewriter)": [[188, "pydicom.filewriter.write_OBvalue", false]], "write_owvalue() (in module pydicom.filewriter)": [[189, "pydicom.filewriter.write_OWvalue", false]], "write_pn() (in module pydicom.filewriter)": [[190, "pydicom.filewriter.write_PN", false]], "write_sequence() (in module pydicom.filewriter)": [[199, "pydicom.filewriter.write_sequence", false]], "write_sequence_item() (in module pydicom.filewriter)": [[200, "pydicom.filewriter.write_sequence_item", false]], "write_string() (in module pydicom.filewriter)": [[201, "pydicom.filewriter.write_string", false]], "write_tag() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.write_tag", false]], "write_tag() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.write_tag", false]], "write_tag() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.write_tag", false]], "write_text() (in module pydicom.filewriter)": [[202, "pydicom.filewriter.write_text", false]], "write_tm() (in module pydicom.filewriter)": [[191, "pydicom.filewriter.write_TM", false]], "write_ui() (in module pydicom.filewriter)": [[192, "pydicom.filewriter.write_UI", false]], "write_ul() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.write_UL", false]], "write_ul() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.write_UL", false]], "write_ul() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.write_UL", false]], "write_un() (in module pydicom.filewriter)": [[193, "pydicom.filewriter.write_UN", false]], "write_us() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.write_US", false]], "write_us() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.write_US", false]], "write_us() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.write_US", false]], "writing_validation_mode (pydicom.config.settings property)": [[56, "pydicom.config.Settings.writing_validation_mode", false]], "xadefinedprocedureprotocolstorage (in module pydicom.uid)": [[513, "pydicom.uid.XADefinedProcedureProtocolStorage", false]], "xaperformedprocedureprotocolstorage (in module pydicom.uid)": [[514, "pydicom.uid.XAPerformedProcedureProtocolStorage", false]], "xaxrfgrayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[515, "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", false]], "xray3dangiographicimagestorage (in module pydicom.uid)": [[516, "pydicom.uid.XRay3DAngiographicImageStorage", false]], "xray3dcraniofacialimagestorage (in module pydicom.uid)": [[517, "pydicom.uid.XRay3DCraniofacialImageStorage", false]], "xrayangiographicimagestorage (in module pydicom.uid)": [[518, "pydicom.uid.XRayAngiographicImageStorage", false]], "xrayradiationdosesrstorage (in module pydicom.uid)": [[519, "pydicom.uid.XRayRadiationDoseSRStorage", false]], "xrayradiofluoroscopicimagestorage (in module pydicom.uid)": [[520, "pydicom.uid.XRayRadiofluoroscopicImageStorage", false]], "zfill() (pydicom.uid.uid method)": [[496, "pydicom.uid.UID.zfill", false]], "zfill() (pydicom.valuerep.vr method)": [[532, "pydicom.valuerep.VR.zfill", false]]}, "objects": {"": [[559, 0, 0, "-", "pydicom"]], "pydicom": [[67, 0, 0, "-", "encaps"], [69, 0, 0, "-", "examples"], [561, 0, 0, "-", "overlays"], [558, 0, 0, "-", "pixel_data_handlers"], [562, 0, 0, "-", "pixels"], [567, 0, 0, "-", "sr"], [568, 0, 0, "-", "uid"], [569, 0, 0, "-", "waveforms"]], "pydicom.charset": [[76, 1, 1, "", "convert_encodings"], [77, 1, 1, "", "decode_bytes"], [78, 1, 1, "", "decode_element"], [79, 1, 1, "", "encode_string"]], "pydicom.config": [[80, 2, 1, "", "APPLY_J2K_CORRECTIONS"], [81, 1, 1, "", "DS_decimal"], [82, 1, 1, "", "DS_numpy"], [83, 2, 1, "", "IGNORE"], [84, 2, 1, "", "INVALID_KEYWORD_BEHAVIOR"], [85, 2, 1, "", "INVALID_KEY_BEHAVIOR"], [86, 2, 1, "", "RAISE"], [56, 3, 1, "", "Settings"], [87, 2, 1, "", "WARN"], [88, 2, 1, "", "allow_DS_float"], [89, 2, 1, "", "assume_implicit_vr_switch"], [90, 2, 1, "", "convert_wrong_length_to_UN"], [91, 2, 1, "", "data_element_callback"], [92, 2, 1, "", "data_element_callback_kwargs"], [93, 2, 1, "", "datetime_conversion"], [94, 1, 1, "", "debug"], [95, 2, 1, "", "enforce_valid_values"], [96, 1, 1, "", "future_behavior"], [97, 2, 1, "", "pixel_data_handlers"], [98, 1, 1, "", "reset_data_element_callback"], [99, 2, 1, "", "settings"], [100, 2, 1, "", "show_file_meta"], [101, 2, 1, "", "use_DS_decimal"], [102, 2, 1, "", "use_DS_numpy"], [103, 2, 1, "", "use_IS_numpy"]], "pydicom.config.Settings": [[56, 4, 1, "", "infer_sq_for_un_vr"], [56, 4, 1, "", "reading_validation_mode"], [56, 4, 1, "", "writing_validation_mode"]], "pydicom.data": [[104, 1, 1, "", "get_charset_files"], [105, 1, 1, "", "get_palette_files"], [106, 1, 1, "", "get_testdata_file"], [107, 1, 1, "", "get_testdata_files"]], "pydicom.datadict": [[108, 1, 1, "", "add_dict_entries"], [109, 1, 1, "", "add_dict_entry"], [110, 1, 1, "", "add_private_dict_entries"], [111, 1, 1, "", "add_private_dict_entry"], [112, 1, 1, "", "dictionary_VM"], [113, 1, 1, "", "dictionary_VR"], [114, 1, 1, "", "dictionary_description"], [115, 1, 1, "", "dictionary_has_tag"], [116, 1, 1, "", "dictionary_is_retired"], [117, 1, 1, "", "dictionary_keyword"], [118, 1, 1, "", "get_entry"], [119, 1, 1, "", "get_private_entry"], [120, 1, 1, "", "keyword_for_tag"], [121, 1, 1, "", "mask_match"], [122, 1, 1, "", "private_dictionary_VM"], [123, 1, 1, "", "private_dictionary_VR"], [124, 1, 1, "", "private_dictionary_description"], [125, 1, 1, "", "repeater_has_keyword"], [126, 1, 1, "", "repeater_has_tag"], [127, 1, 1, "", "tag_for_keyword"]], "pydicom.dataelem": [[128, 3, 1, "", "DataElement"], [129, 1, 1, "", "DataElement_from_raw"], [130, 3, 1, "", "RawDataElement"]], "pydicom.dataelem.DataElement": [[128, 4, 1, "", "VM"], [128, 5, 1, "", "VR"], [128, 6, 1, "", "__init__"], [128, 6, 1, "", "clear"], [128, 5, 1, "", "descripWidth"], [128, 4, 1, "", "empty_value"], [128, 6, 1, "", "from_json"], [128, 4, 1, "", "is_empty"], [128, 4, 1, "", "is_private"], [128, 4, 1, "", "is_retired"], [128, 5, 1, "", "is_undefined_length"], [128, 4, 1, "", "keyword"], [128, 5, 1, "", "maxBytesToDisplay"], [128, 4, 1, "", "name"], [128, 4, 1, "", "repval"], [128, 5, 1, "", "showVR"], [128, 5, 1, "", "tag"], [128, 6, 1, "", "to_json"], [128, 6, 1, "", "to_json_dict"], [128, 6, 1, "", "validate"], [128, 4, 1, "", "value"]], "pydicom.dataelem.RawDataElement": [[130, 5, 1, "", "VR"], [130, 6, 1, "", "__init__"], [130, 6, 1, "", "count"], [130, 6, 1, "", "index"], [130, 5, 1, "", "is_implicit_VR"], [130, 5, 1, "", "is_little_endian"], [130, 5, 1, "", "is_raw"], [130, 5, 1, "", "length"], [130, 5, 1, "", "tag"], [130, 5, 1, "", "value"], [130, 5, 1, "", "value_tell"]], "pydicom.dataset": [[131, 3, 1, "", "Dataset"], [132, 3, 1, "", "FileDataset"], [133, 3, 1, "", "FileMetaDataset"], [134, 3, 1, "", "PrivateBlock"], [135, 1, 1, "", "validate_file_meta"]], "pydicom.dataset.Dataset": [[131, 6, 1, "", "__init__"], [131, 6, 1, "", "add"], [131, 6, 1, "", "add_new"], [131, 6, 1, "", "add_new_private"], [131, 6, 1, "", "clear"], [131, 6, 1, "", "compress"], [131, 6, 1, "", "convert_pixel_data"], [131, 6, 1, "", "copy"], [131, 6, 1, "", "data_element"], [131, 6, 1, "", "decode"], [131, 6, 1, "", "decompress"], [131, 5, 1, "", "default_element_format"], [131, 5, 1, "", "default_sequence_element_format"], [131, 6, 1, "", "dir"], [131, 6, 1, "", "elements"], [131, 6, 1, "", "ensure_file_meta"], [131, 6, 1, "", "formatted_lines"], [131, 6, 1, "", "from_json"], [131, 6, 1, "", "get"], [131, 6, 1, "", "get_item"], [131, 6, 1, "", "get_private_item"], [131, 6, 1, "", "group_dataset"], [131, 5, 1, "", "indent_chars"], [131, 4, 1, "", "is_implicit_VR"], [131, 4, 1, "", "is_little_endian"], [131, 4, 1, "", "is_original_encoding"], [131, 6, 1, "", "items"], [131, 6, 1, "", "iterall"], [131, 6, 1, "", "keys"], [131, 4, 1, "", "original_character_set"], [131, 4, 1, "", "original_encoding"], [131, 6, 1, "", "overlay_array"], [131, 4, 1, "", "pixel_array"], [131, 6, 1, "", "pixel_array_options"], [131, 6, 1, "", "pop"], [131, 6, 1, "", "popitem"], [131, 6, 1, "", "private_block"], [131, 6, 1, "", "private_creators"], [131, 4, 1, "", "read_encoding"], [131, 4, 1, "", "read_implicit_vr"], [131, 4, 1, "", "read_little_endian"], [131, 6, 1, "", "remove_private_tags"], [131, 6, 1, "", "save_as"], [131, 6, 1, "", "set_original_encoding"], [131, 6, 1, "", "set_pixel_data"], [131, 6, 1, "", "setdefault"], [131, 6, 1, "", "to_json"], [131, 6, 1, "", "to_json_dict"], [131, 6, 1, "", "top"], [131, 6, 1, "", "trait_names"], [131, 6, 1, "", "update"], [131, 6, 1, "", "values"], [131, 6, 1, "", "walk"], [131, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileDataset": [[132, 6, 1, "", "__init__"], [132, 6, 1, "", "add"], [132, 6, 1, "", "add_new"], [132, 6, 1, "", "add_new_private"], [132, 6, 1, "", "clear"], [132, 6, 1, "", "compress"], [132, 6, 1, "", "convert_pixel_data"], [132, 6, 1, "", "copy"], [132, 6, 1, "", "data_element"], [132, 6, 1, "", "decode"], [132, 6, 1, "", "decompress"], [132, 6, 1, "", "dir"], [132, 6, 1, "", "elements"], [132, 6, 1, "", "ensure_file_meta"], [132, 5, 1, "", "file_meta"], [132, 5, 1, "", "filename"], [132, 5, 1, "", "fileobj_type"], [132, 6, 1, "", "formatted_lines"], [132, 6, 1, "", "from_json"], [132, 6, 1, "", "get"], [132, 6, 1, "", "get_item"], [132, 6, 1, "", "get_private_item"], [132, 6, 1, "", "group_dataset"], [132, 4, 1, "", "is_implicit_VR"], [132, 4, 1, "", "is_little_endian"], [132, 4, 1, "", "is_original_encoding"], [132, 6, 1, "", "items"], [132, 6, 1, "", "iterall"], [132, 6, 1, "", "keys"], [132, 4, 1, "", "original_character_set"], [132, 4, 1, "", "original_encoding"], [132, 6, 1, "", "overlay_array"], [132, 4, 1, "", "pixel_array"], [132, 6, 1, "", "pixel_array_options"], [132, 6, 1, "", "pop"], [132, 6, 1, "", "popitem"], [132, 5, 1, "", "preamble"], [132, 6, 1, "", "private_block"], [132, 6, 1, "", "private_creators"], [132, 4, 1, "", "read_encoding"], [132, 4, 1, "", "read_implicit_vr"], [132, 4, 1, "", "read_little_endian"], [132, 6, 1, "", "remove_private_tags"], [132, 6, 1, "", "save_as"], [132, 6, 1, "", "set_original_encoding"], [132, 6, 1, "", "set_pixel_data"], [132, 6, 1, "", "setdefault"], [132, 5, 1, "", "timestamp"], [132, 6, 1, "", "to_json"], [132, 6, 1, "", "to_json_dict"], [132, 6, 1, "", "top"], [132, 6, 1, "", "trait_names"], [132, 6, 1, "", "update"], [132, 6, 1, "", "values"], [132, 6, 1, "", "walk"], [132, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileMetaDataset": [[133, 6, 1, "", "__init__"], [133, 6, 1, "", "add"], [133, 6, 1, "", "add_new"], [133, 6, 1, "", "add_new_private"], [133, 6, 1, "", "clear"], [133, 6, 1, "", "compress"], [133, 6, 1, "", "convert_pixel_data"], [133, 6, 1, "", "copy"], [133, 6, 1, "", "data_element"], [133, 6, 1, "", "decode"], [133, 6, 1, "", "decompress"], [133, 6, 1, "", "dir"], [133, 6, 1, "", "elements"], [133, 6, 1, "", "ensure_file_meta"], [133, 6, 1, "", "formatted_lines"], [133, 6, 1, "", "from_json"], [133, 6, 1, "", "get"], [133, 6, 1, "", "get_item"], [133, 6, 1, "", "get_private_item"], [133, 6, 1, "", "group_dataset"], [133, 4, 1, "", "is_implicit_VR"], [133, 4, 1, "", "is_little_endian"], [133, 4, 1, "", "is_original_encoding"], [133, 6, 1, "", "items"], [133, 6, 1, "", "iterall"], [133, 6, 1, "", "keys"], [133, 4, 1, "", "original_character_set"], [133, 4, 1, "", "original_encoding"], [133, 6, 1, "", "overlay_array"], [133, 4, 1, "", "pixel_array"], [133, 6, 1, "", "pixel_array_options"], [133, 6, 1, "", "pop"], [133, 6, 1, "", "popitem"], [133, 6, 1, "", "private_block"], [133, 6, 1, "", "private_creators"], [133, 4, 1, "", "read_encoding"], [133, 4, 1, "", "read_implicit_vr"], [133, 4, 1, "", "read_little_endian"], [133, 6, 1, "", "remove_private_tags"], [133, 6, 1, "", "save_as"], [133, 6, 1, "", "set_original_encoding"], [133, 6, 1, "", "set_pixel_data"], [133, 6, 1, "", "setdefault"], [133, 6, 1, "", "to_json"], [133, 6, 1, "", "to_json_dict"], [133, 6, 1, "", "top"], [133, 6, 1, "", "trait_names"], [133, 6, 1, "", "update"], [133, 6, 1, "", "validate"], [133, 6, 1, "", "values"], [133, 6, 1, "", "walk"], [133, 6, 1, "", "waveform_array"]], "pydicom.dataset.PrivateBlock": [[134, 6, 1, "", "__init__"], [134, 6, 1, "", "add_new"], [134, 5, 1, "", "block_start"], [134, 5, 1, "", "dataset"], [134, 6, 1, "", "get_tag"], [134, 5, 1, "", "group"], [134, 5, 1, "", "private_creator"]], "pydicom.encaps": [[136, 1, 1, "", "decode_data_sequence"], [137, 1, 1, "", "defragment_data"], [138, 1, 1, "", "encapsulate"], [139, 1, 1, "", "encapsulate_extended"], [140, 1, 1, "", "fragment_frame"], [141, 1, 1, "", "generate_fragmented_frames"], [142, 1, 1, "", "generate_fragments"], [143, 1, 1, "", "generate_frames"], [144, 1, 1, "", "generate_pixel_data"], [145, 1, 1, "", "generate_pixel_data_fragment"], [146, 1, 1, "", "generate_pixel_data_frame"], [147, 1, 1, "", "get_frame"], [148, 1, 1, "", "get_frame_offsets"], [149, 1, 1, "", "itemize_fragment"], [150, 1, 1, "", "itemize_frame"], [151, 1, 1, "", "parse_basic_offsets"], [152, 1, 1, "", "parse_fragments"], [153, 1, 1, "", "read_item"]], "pydicom.errors": [[154, 7, 1, "", "InvalidDicomError"]], "pydicom.errors.InvalidDicomError": [[154, 6, 1, "", "with_traceback"]], "pydicom.examples": [[155, 1, 1, "", "get_path"]], "pydicom.filebase": [[156, 3, 1, "", "DicomBytesIO"], [157, 1, 1, "", "DicomFile"], [158, 3, 1, "", "DicomFileLike"], [159, 3, 1, "", "DicomIO"]], "pydicom.filebase.DicomBytesIO": [[156, 6, 1, "", "__init__"], [156, 6, 1, "", "close"], [156, 4, 1, "", "is_implicit_VR"], [156, 4, 1, "", "is_little_endian"], [156, 4, 1, "", "name"], [156, 4, 1, "", "parent"], [156, 6, 1, "", "read"], [156, 6, 1, "", "read_UL"], [156, 6, 1, "", "read_US"], [156, 6, 1, "", "read_exact"], [156, 6, 1, "", "read_tag"], [156, 6, 1, "", "seek"], [156, 6, 1, "", "tell"], [156, 6, 1, "", "write"], [156, 6, 1, "", "write_UL"], [156, 6, 1, "", "write_US"], [156, 6, 1, "", "write_tag"]], "pydicom.filebase.DicomFileLike": [[158, 6, 1, "", "__init__"], [158, 6, 1, "", "close"], [158, 4, 1, "", "is_implicit_VR"], [158, 4, 1, "", "is_little_endian"], [158, 4, 1, "", "name"], [158, 4, 1, "", "parent"], [158, 6, 1, "", "read"], [158, 6, 1, "", "read_UL"], [158, 6, 1, "", "read_US"], [158, 6, 1, "", "read_exact"], [158, 6, 1, "", "read_tag"], [158, 6, 1, "", "seek"], [158, 6, 1, "", "tell"], [158, 6, 1, "", "write"], [158, 6, 1, "", "write_UL"], [158, 6, 1, "", "write_US"], [158, 6, 1, "", "write_tag"]], "pydicom.filebase.DicomIO": [[159, 6, 1, "", "__init__"], [159, 6, 1, "", "close"], [159, 4, 1, "", "is_implicit_VR"], [159, 4, 1, "", "is_little_endian"], [159, 4, 1, "", "name"], [159, 4, 1, "", "parent"], [159, 6, 1, "", "read"], [159, 6, 1, "", "read_UL"], [159, 6, 1, "", "read_US"], [159, 6, 1, "", "read_exact"], [159, 6, 1, "", "read_tag"], [159, 6, 1, "", "seek"], [159, 6, 1, "", "tell"], [159, 6, 1, "", "write"], [159, 6, 1, "", "write_UL"], [159, 6, 1, "", "write_US"], [159, 6, 1, "", "write_tag"]], "pydicom.filereader": [[160, 1, 1, "", "data_element_generator"], [161, 1, 1, "", "data_element_offset_to_value"], [162, 1, 1, "", "dcmread"], [163, 1, 1, "", "read_dataset"], [164, 1, 1, "", "read_deferred_data_element"], [165, 1, 1, "", "read_file_meta_info"], [166, 1, 1, "", "read_partial"], [167, 1, 1, "", "read_preamble"], [168, 1, 1, "", "read_sequence"], [169, 1, 1, "", "read_sequence_item"]], "pydicom.fileset": [[170, 2, 1, "", "DIRECTORY_RECORDERS"], [171, 3, 1, "", "FileInstance"], [172, 3, 1, "", "FileSet"], [173, 3, 1, "", "RecordNode"], [174, 1, 1, "", "generate_filename"], [175, 1, 1, "", "is_conformant_file_id"]], "pydicom.fileset.FileInstance": [[171, 4, 1, "", "FileID"], [171, 4, 1, "", "SOPClassUID"], [171, 4, 1, "", "SOPInstanceUID"], [171, 4, 1, "", "TransferSyntaxUID"], [171, 6, 1, "", "__init__"], [171, 4, 1, "", "file_set"], [171, 4, 1, "", "for_addition"], [171, 4, 1, "", "for_moving"], [171, 4, 1, "", "for_removal"], [171, 4, 1, "", "is_private"], [171, 4, 1, "", "is_staged"], [171, 6, 1, "", "load"], [171, 5, 1, "", "node"], [171, 4, 1, "", "path"]], "pydicom.fileset.FileSet": [[172, 4, 1, "", "ID"], [172, 4, 1, "", "UID"], [172, 6, 1, "", "__init__"], [172, 6, 1, "", "add"], [172, 6, 1, "", "add_custom"], [172, 6, 1, "", "clear"], [172, 6, 1, "", "copy"], [172, 4, 1, "", "descriptor_character_set"], [172, 4, 1, "", "descriptor_file_id"], [172, 6, 1, "", "find"], [172, 6, 1, "", "find_values"], [172, 4, 1, "", "is_staged"], [172, 6, 1, "", "load"], [172, 4, 1, "", "path"], [172, 6, 1, "", "remove"], [172, 6, 1, "", "write"]], "pydicom.fileset.RecordNode": [[173, 6, 1, "", "__init__"], [173, 6, 1, "", "add"], [173, 4, 1, "", "ancestors"], [173, 5, 1, "", "children"], [173, 4, 1, "", "component"], [173, 4, 1, "", "depth"], [173, 4, 1, "", "file_set"], [173, 4, 1, "", "has_instance"], [173, 4, 1, "", "index"], [173, 5, 1, "", "instance"], [173, 4, 1, "", "is_root"], [173, 4, 1, "", "key"], [173, 4, 1, "", "next"], [173, 4, 1, "", "parent"], [173, 6, 1, "", "prettify"], [173, 4, 1, "", "previous"], [173, 4, 1, "", "record_type"], [173, 6, 1, "", "remove"], [173, 6, 1, "", "reverse"], [173, 4, 1, "", "root"]], "pydicom.fileutil": [[176, 1, 1, "", "absorb_delimiter_item"], [177, 1, 1, "", "find_bytes"], [178, 1, 1, "", "find_delimiter"], [179, 1, 1, "", "length_of_undefined_length"], [180, 1, 1, "", "read_undefined_length_value"]], "pydicom.filewriter": [[181, 1, 1, "", "correct_ambiguous_vr"], [182, 1, 1, "", "correct_ambiguous_vr_element"], [183, 1, 1, "", "dcmwrite"], [184, 1, 1, "", "multi_string"], [185, 1, 1, "", "write_ATvalue"], [186, 1, 1, "", "write_DA"], [187, 1, 1, "", "write_DT"], [188, 1, 1, "", "write_OBvalue"], [189, 1, 1, "", "write_OWvalue"], [190, 1, 1, "", "write_PN"], [191, 1, 1, "", "write_TM"], [192, 1, 1, "", "write_UI"], [193, 1, 1, "", "write_UN"], [194, 1, 1, "", "write_data_element"], [195, 1, 1, "", "write_dataset"], [196, 1, 1, "", "write_file_meta_info"], [197, 1, 1, "", "write_number_string"], [198, 1, 1, "", "write_numbers"], [199, 1, 1, "", "write_sequence"], [200, 1, 1, "", "write_sequence_item"], [201, 1, 1, "", "write_string"], [202, 1, 1, "", "write_text"]], "pydicom.misc": [[203, 1, 1, "", "is_dicom"], [204, 1, 1, "", "size_in_bytes"]], "pydicom.multival": [[205, 3, 1, "", "MultiValue"]], "pydicom.multival.MultiValue": [[205, 6, 1, "", "__init__"], [205, 6, 1, "", "append"], [205, 6, 1, "", "clear"], [205, 6, 1, "", "count"], [205, 6, 1, "", "extend"], [205, 6, 1, "", "index"], [205, 6, 1, "", "insert"], [205, 6, 1, "", "pop"], [205, 6, 1, "", "remove"], [205, 6, 1, "", "reverse"]], "pydicom.overlays": [[206, 0, 0, "-", "numpy_handler"]], "pydicom.overlays.numpy_handler": [[206, 1, 1, "", "get_expected_length"], [206, 1, 1, "", "get_overlay_array"], [206, 1, 1, "", "is_available"], [206, 1, 1, "", "reshape_overlay_array"]], "pydicom.pixel_data_handlers": [[207, 0, 0, "-", "gdcm_handler"], [208, 0, 0, "-", "jpeg_ls_handler"], [209, 0, 0, "-", "numpy_handler"], [210, 0, 0, "-", "pillow_handler"], [211, 0, 0, "-", "pylibjpeg_handler"], [212, 0, 0, "-", "rle_handler"]], "pydicom.pixel_data_handlers.gdcm_handler": [[207, 1, 1, "", "create_data_element"], [207, 1, 1, "", "create_image"], [207, 1, 1, "", "get_pixeldata"], [207, 1, 1, "", "is_available"], [207, 1, 1, "", "needs_to_convert_to_RGB"], [207, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [207, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[208, 1, 1, "", "get_pixeldata"], [208, 1, 1, "", "is_available"], [208, 1, 1, "", "needs_to_convert_to_RGB"], [208, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [208, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.numpy_handler": [[209, 1, 1, "", "get_pixeldata"], [209, 1, 1, "", "is_available"], [209, 1, 1, "", "needs_to_convert_to_RGB"], [209, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [209, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pillow_handler": [[210, 1, 1, "", "get_pixeldata"], [210, 1, 1, "", "is_available"], [210, 1, 1, "", "needs_to_convert_to_RGB"], [210, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [210, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[211, 1, 1, "", "as_array"], [211, 1, 1, "", "generate_frames"], [211, 1, 1, "", "get_pixeldata"], [211, 1, 1, "", "is_available"], [211, 1, 1, "", "needs_to_convert_to_RGB"], [211, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [211, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.rle_handler": [[212, 1, 1, "", "get_pixeldata"], [212, 1, 1, "", "is_available"], [212, 1, 1, "", "needs_to_convert_to_RGB"], [212, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [212, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixels": [[213, 1, 1, "", "apply_color_lut"], [214, 1, 1, "", "apply_modality_lut"], [215, 1, 1, "", "apply_rescale"], [216, 1, 1, "", "apply_voi"], [217, 1, 1, "", "apply_voi_lut"], [218, 1, 1, "", "apply_windowing"], [219, 1, 1, "", "as_pixel_options"], [220, 1, 1, "", "compress"], [221, 1, 1, "", "convert_color_space"], [563, 0, 0, "-", "decoders"], [240, 1, 1, "", "decompress"], [564, 0, 0, "-", "encoders"], [248, 1, 1, "", "get_decoder"], [249, 1, 1, "", "get_encoder"], [250, 1, 1, "", "iter_pixels"], [251, 1, 1, "", "pack_bits"], [252, 1, 1, "", "pixel_array"], [565, 0, 0, "-", "processing"], [260, 1, 1, "", "set_pixel_data"], [261, 1, 1, "", "unpack_bits"], [566, 0, 0, "-", "utils"]], "pydicom.pixels.decoders": [[222, 2, 1, "", "DeflatedExplicitVRLittleEndianDecoder"], [223, 2, 1, "", "ExplicitVRBigEndianDecoder"], [224, 2, 1, "", "ExplicitVRLittleEndianDecoder"], [225, 2, 1, "", "HTJ2KDecoder"], [226, 2, 1, "", "HTJ2KLosslessDecoder"], [227, 2, 1, "", "HTJ2KLosslessRPCLDecoder"], [228, 2, 1, "", "ImplicitVRLittleEndianDecoder"], [229, 2, 1, "", "JPEG2000Decoder"], [230, 2, 1, "", "JPEG2000LosslessDecoder"], [231, 2, 1, "", "JPEGBaseline8BitDecoder"], [232, 2, 1, "", "JPEGExtended12BitDecoder"], [233, 2, 1, "", "JPEGLSLosslessDecoder"], [234, 2, 1, "", "JPEGLSNearLosslessDecoder"], [235, 2, 1, "", "JPEGLosslessDecoder"], [236, 2, 1, "", "JPEGLosslessSV1Decoder"], [237, 2, 1, "", "RLELosslessDecoder"]], "pydicom.pixels.decoders.base": [[238, 3, 1, "", "DecodeRunner"], [239, 3, 1, "", "Decoder"]], "pydicom.pixels.decoders.base.DecodeRunner": [[238, 6, 1, "", "__init__"], [238, 4, 1, "", "bits_allocated"], [238, 4, 1, "", "bits_stored"], [238, 4, 1, "", "columns"], [238, 6, 1, "", "decode"], [238, 6, 1, "", "del_option"], [238, 4, 1, "", "extended_offsets"], [238, 6, 1, "", "frame_length"], [238, 6, 1, "", "get_data"], [238, 6, 1, "", "get_option"], [238, 4, 1, "", "is_array"], [238, 4, 1, "", "is_binary"], [238, 4, 1, "", "is_buffer"], [238, 4, 1, "", "is_dataset"], [238, 6, 1, "", "iter_decode"], [238, 4, 1, "", "number_of_frames"], [238, 4, 1, "", "options"], [238, 4, 1, "", "photometric_interpretation"], [238, 4, 1, "", "pixel_dtype"], [238, 4, 1, "", "pixel_keyword"], [238, 6, 1, "", "pixel_properties"], [238, 4, 1, "", "pixel_representation"], [238, 4, 1, "", "planar_configuration"], [238, 6, 1, "", "process"], [238, 6, 1, "", "reshape"], [238, 4, 1, "", "rows"], [238, 4, 1, "", "samples_per_pixel"], [238, 6, 1, "", "set_decoders"], [238, 6, 1, "", "set_option"], [238, 6, 1, "", "set_options"], [238, 6, 1, "", "set_source"], [238, 4, 1, "", "src"], [238, 4, 1, "", "transfer_syntax"], [238, 6, 1, "", "validate"]], "pydicom.pixels.decoders.base.Decoder": [[239, 4, 1, "", "UID"], [239, 6, 1, "", "__init__"], [239, 6, 1, "", "add_plugin"], [239, 6, 1, "", "add_plugins"], [239, 6, 1, "", "as_array"], [239, 6, 1, "", "as_buffer"], [239, 4, 1, "", "available_plugins"], [239, 4, 1, "", "is_available"], [239, 4, 1, "", "is_encapsulated"], [239, 4, 1, "", "is_native"], [239, 6, 1, "", "iter_array"], [239, 6, 1, "", "iter_buffer"], [239, 4, 1, "", "missing_dependencies"], [239, 6, 1, "", "remove_plugin"]], "pydicom.pixels.encoders": [[241, 2, 1, "", "JPEG2000Encoder"], [242, 2, 1, "", "JPEG2000LosslessEncoder"], [243, 2, 1, "", "JPEGLSLosslessEncoder"], [244, 2, 1, "", "JPEGLSNearLosslessEncoder"], [245, 2, 1, "", "RLELosslessEncoder"]], "pydicom.pixels.encoders.base": [[246, 3, 1, "", "EncodeRunner"], [247, 3, 1, "", "Encoder"]], "pydicom.pixels.encoders.base.EncodeRunner": [[246, 6, 1, "", "__init__"], [246, 4, 1, "", "bits_allocated"], [246, 4, 1, "", "bits_stored"], [246, 4, 1, "", "columns"], [246, 6, 1, "", "del_option"], [246, 6, 1, "", "encode"], [246, 4, 1, "", "extended_offsets"], [246, 6, 1, "", "frame_length"], [246, 6, 1, "", "get_frame"], [246, 6, 1, "", "get_option"], [246, 4, 1, "", "is_array"], [246, 4, 1, "", "is_binary"], [246, 4, 1, "", "is_buffer"], [246, 4, 1, "", "is_dataset"], [246, 4, 1, "", "number_of_frames"], [246, 4, 1, "", "options"], [246, 4, 1, "", "photometric_interpretation"], [246, 4, 1, "", "pixel_keyword"], [246, 4, 1, "", "pixel_representation"], [246, 4, 1, "", "planar_configuration"], [246, 4, 1, "", "rows"], [246, 4, 1, "", "samples_per_pixel"], [246, 6, 1, "", "set_encoders"], [246, 6, 1, "", "set_option"], [246, 6, 1, "", "set_options"], [246, 6, 1, "", "set_source"], [246, 4, 1, "", "src"], [246, 4, 1, "", "transfer_syntax"], [246, 6, 1, "", "validate"]], "pydicom.pixels.encoders.base.Encoder": [[247, 4, 1, "", "UID"], [247, 6, 1, "", "__init__"], [247, 6, 1, "", "add_plugin"], [247, 6, 1, "", "add_plugins"], [247, 4, 1, "", "available_plugins"], [247, 6, 1, "", "encode"], [247, 4, 1, "", "is_available"], [247, 4, 1, "", "is_encapsulated"], [247, 4, 1, "", "is_native"], [247, 6, 1, "", "iter_encode"], [247, 4, 1, "", "missing_dependencies"], [247, 6, 1, "", "remove_plugin"]], "pydicom.pixels.processing": [[253, 1, 1, "", "apply_color_lut"], [254, 1, 1, "", "apply_modality_lut"], [255, 1, 1, "", "apply_rescale"], [256, 1, 1, "", "apply_voi"], [257, 1, 1, "", "apply_voi_lut"], [258, 1, 1, "", "apply_windowing"], [259, 1, 1, "", "convert_color_space"]], "pydicom.pixels.utils": [[262, 1, 1, "", "as_pixel_options"], [263, 1, 1, "", "compress"], [264, 1, 1, "", "decompress"], [265, 1, 1, "", "expand_ybr422"], [266, 1, 1, "", "get_expected_length"], [267, 1, 1, "", "get_image_pixel_ids"], [268, 1, 1, "", "get_j2k_parameters"], [269, 1, 1, "", "get_nr_frames"], [270, 1, 1, "", "iter_pixels"], [271, 1, 1, "", "pack_bits"], [272, 1, 1, "", "pixel_array"], [273, 1, 1, "", "pixel_dtype"], [274, 1, 1, "", "reshape_pixel_array"], [275, 1, 1, "", "set_pixel_data"], [276, 1, 1, "", "unpack_bits"]], "pydicom.sequence": [[277, 3, 1, "", "Sequence"]], "pydicom.sequence.Sequence": [[277, 6, 1, "", "__init__"], [277, 6, 1, "", "append"], [277, 6, 1, "", "clear"], [277, 6, 1, "", "count"], [277, 6, 1, "", "extend"], [277, 6, 1, "", "index"], [277, 6, 1, "", "insert"], [277, 6, 1, "", "pop"], [277, 6, 1, "", "remove"], [277, 6, 1, "", "reverse"]], "pydicom.sr": [[278, 3, 1, "", "Code"], [279, 3, 1, "", "Collection"], [280, 3, 1, "", "Concepts"]], "pydicom.sr.Code": [[278, 6, 1, "", "__init__"], [278, 6, 1, "", "count"], [278, 6, 1, "", "index"], [278, 5, 1, "", "meaning"], [278, 5, 1, "", "scheme_designator"], [278, 5, 1, "", "scheme_version"], [278, 5, 1, "", "value"]], "pydicom.sr.Collection": [[279, 6, 1, "", "__init__"], [279, 4, 1, "", "concepts"], [279, 6, 1, "", "dir"], [279, 4, 1, "", "is_cid"], [279, 4, 1, "", "name"], [279, 4, 1, "", "scheme_designator"], [279, 6, 1, "", "trait_names"]], "pydicom.sr.Concepts": [[280, 6, 1, "", "CIDs"], [280, 6, 1, "", "__init__"], [280, 4, 1, "", "collections"], [280, 6, 1, "", "schemes"]], "pydicom.tag": [[281, 3, 1, "", "BaseTag"], [282, 1, 1, "", "Tag"], [283, 1, 1, "", "TupleTag"], [284, 1, 1, "", "tag_in_exception"]], "pydicom.tag.BaseTag": [[281, 6, 1, "", "__init__"], [281, 6, 1, "", "as_integer_ratio"], [281, 6, 1, "", "bit_count"], [281, 6, 1, "", "bit_length"], [281, 6, 1, "", "conjugate"], [281, 5, 1, "", "denominator"], [281, 4, 1, "", "elem"], [281, 4, 1, "", "element"], [281, 6, 1, "", "from_bytes"], [281, 4, 1, "", "group"], [281, 5, 1, "", "imag"], [281, 4, 1, "", "is_private"], [281, 4, 1, "", "is_private_creator"], [281, 4, 1, "", "json_key"], [281, 5, 1, "", "numerator"], [281, 4, 1, "", "private_creator"], [281, 5, 1, "", "real"], [281, 6, 1, "", "to_bytes"]], "pydicom.uid": [[285, 2, 1, "", "AcquisitionContextSRStorage"], [286, 2, 1, "", "AdvancedBlendingPresentationStateStorage"], [287, 2, 1, "", "AllTransferSyntaxes"], [288, 2, 1, "", "AmbulatoryECGWaveformStorage"], [289, 2, 1, "", "ArterialPulseWaveformStorage"], [290, 2, 1, "", "AutorefractionMeasurementsStorage"], [291, 2, 1, "", "BasicStructuredDisplayStorage"], [292, 2, 1, "", "BasicTextSRStorage"], [293, 2, 1, "", "BasicVoiceAudioWaveformStorage"], [294, 2, 1, "", "BlendingSoftcopyPresentationStateStorage"], [295, 2, 1, "", "BodyPositionWaveformStorage"], [296, 2, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [297, 2, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [298, 2, 1, "", "BreastTomosynthesisImageStorage"], [299, 2, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [300, 2, 1, "", "CArmPhotonElectronRadiationStorage"], [301, 2, 1, "", "CTDefinedProcedureProtocolStorage"], [302, 2, 1, "", "CTImageStorage"], [303, 2, 1, "", "CTPerformedProcedureProtocolStorage"], [304, 2, 1, "", "CardiacElectrophysiologyWaveformStorage"], [305, 2, 1, "", "ChestCADSRStorage"], [306, 2, 1, "", "ColonCADSRStorage"], [307, 2, 1, "", "ColorPaletteStorage"], [308, 2, 1, "", "ColorSoftcopyPresentationStateStorage"], [309, 2, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [310, 2, 1, "", "Comprehensive3DSRStorage"], [311, 2, 1, "", "ComprehensiveSRStorage"], [312, 2, 1, "", "ComputedRadiographyImageStorage"], [313, 2, 1, "", "ConfocalMicroscopyImageStorage"], [314, 2, 1, "", "ConfocalMicroscopyTiledPyramidalImageStorage"], [315, 2, 1, "", "ContentAssessmentResultsStorage"], [316, 2, 1, "", "CornealTopographyMapStorage"], [317, 2, 1, "", "DICOS2DAITStorage"], [318, 2, 1, "", "DICOS3DAITStorage"], [319, 2, 1, "", "DICOSCTImageStorage"], [320, 2, 1, "", "DICOSDigitalXRayImageStorageForPresentation"], [321, 2, 1, "", "DICOSDigitalXRayImageStorageForProcessing"], [322, 2, 1, "", "DICOSQuadrupoleResonanceStorage"], [323, 2, 1, "", "DICOSThreatDetectionReportStorage"], [324, 2, 1, "", "DeflatedExplicitVRLittleEndian"], [325, 2, 1, "", "DeformableSpatialRegistrationStorage"], [326, 2, 1, "", "DermoscopicPhotographyImageStorage"], [327, 2, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [328, 2, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [329, 2, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [330, 2, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [331, 2, 1, "", "DigitalXRayImageStorageForPresentation"], [332, 2, 1, "", "DigitalXRayImageStorageForProcessing"], [333, 2, 1, "", "EddyCurrentImageStorage"], [334, 2, 1, "", "EddyCurrentMultiFrameImageStorage"], [335, 2, 1, "", "ElectromyogramWaveformStorage"], [336, 2, 1, "", "ElectrooculogramWaveformStorage"], [337, 2, 1, "", "EncapsulatedCDAStorage"], [338, 2, 1, "", "EncapsulatedMTLStorage"], [339, 2, 1, "", "EncapsulatedOBJStorage"], [340, 2, 1, "", "EncapsulatedPDFStorage"], [341, 2, 1, "", "EncapsulatedSTLStorage"], [342, 2, 1, "", "EnhancedCTImageStorage"], [343, 2, 1, "", "EnhancedContinuousRTImageStorage"], [344, 2, 1, "", "EnhancedMRColorImageStorage"], [345, 2, 1, "", "EnhancedMRImageStorage"], [346, 2, 1, "", "EnhancedPETImageStorage"], [347, 2, 1, "", "EnhancedRTImageStorage"], [348, 2, 1, "", "EnhancedSRStorage"], [349, 2, 1, "", "EnhancedUSVolumeStorage"], [350, 2, 1, "", "EnhancedXAImageStorage"], [351, 2, 1, "", "EnhancedXRFImageStorage"], [352, 2, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [353, 2, 1, "", "ExplicitVRBigEndian"], [354, 2, 1, "", "ExplicitVRLittleEndian"], [355, 2, 1, "", "ExtensibleSRStorage"], [356, 2, 1, "", "General32bitECGWaveformStorage"], [357, 2, 1, "", "GeneralAudioWaveformStorage"], [358, 2, 1, "", "GeneralECGWaveformStorage"], [359, 2, 1, "", "GenericImplantTemplateStorage"], [360, 2, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [361, 2, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [362, 2, 1, "", "HEVCM10P51"], [363, 2, 1, "", "HEVCMP51"], [364, 2, 1, "", "HTJ2K"], [365, 2, 1, "", "HTJ2KLossless"], [366, 2, 1, "", "HTJ2KLosslessRPCL"], [367, 2, 1, "", "HangingProtocolStorage"], [368, 2, 1, "", "HemodynamicWaveformStorage"], [369, 2, 1, "", "ImplantAssemblyTemplateStorage"], [370, 2, 1, "", "ImplantTemplateGroupStorage"], [371, 2, 1, "", "ImplantationPlanSRStorage"], [372, 2, 1, "", "ImplicitVRLittleEndian"], [373, 2, 1, "", "IntraocularLensCalculationsStorage"], [374, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [375, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [376, 2, 1, "", "InventoryStorage"], [377, 2, 1, "", "JPEG2000"], [378, 2, 1, "", "JPEG2000Lossless"], [379, 2, 1, "", "JPEG2000MC"], [380, 2, 1, "", "JPEG2000MCLossless"], [381, 2, 1, "", "JPEG2000TransferSyntaxes"], [382, 2, 1, "", "JPEGBaseline8Bit"], [383, 2, 1, "", "JPEGExtended12Bit"], [384, 2, 1, "", "JPEGLSLossless"], [385, 2, 1, "", "JPEGLSNearLossless"], [386, 2, 1, "", "JPEGLSTransferSyntaxes"], [387, 2, 1, "", "JPEGLossless"], [388, 2, 1, "", "JPEGLosslessSV1"], [389, 2, 1, "", "JPEGTransferSyntaxes"], [390, 2, 1, "", "JPIPHTJ2KReferenced"], [391, 2, 1, "", "JPIPHTJ2KReferencedDeflate"], [392, 2, 1, "", "KeratometryMeasurementsStorage"], [393, 2, 1, "", "KeyObjectSelectionDocumentStorage"], [394, 2, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [395, 2, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [396, 2, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [397, 2, 1, "", "LensometryMeasurementsStorage"], [398, 2, 1, "", "MPEG2MPHL"], [399, 2, 1, "", "MPEG2MPHLF"], [400, 2, 1, "", "MPEG2MPML"], [401, 2, 1, "", "MPEG2MPMLF"], [402, 2, 1, "", "MPEG4HP41"], [403, 2, 1, "", "MPEG4HP41BD"], [404, 2, 1, "", "MPEG4HP41BDF"], [405, 2, 1, "", "MPEG4HP41F"], [406, 2, 1, "", "MPEG4HP422D"], [407, 2, 1, "", "MPEG4HP422DF"], [408, 2, 1, "", "MPEG4HP423D"], [409, 2, 1, "", "MPEG4HP423DF"], [410, 2, 1, "", "MPEG4HP42STEREO"], [411, 2, 1, "", "MPEG4HP42STEREOF"], [412, 2, 1, "", "MPEGTransferSyntaxes"], [413, 2, 1, "", "MRImageStorage"], [414, 2, 1, "", "MRSpectroscopyStorage"], [415, 2, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [416, 2, 1, "", "MammographyCADSRStorage"], [417, 2, 1, "", "MediaStorageDirectoryStorage"], [418, 2, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [419, 2, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [420, 2, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [421, 2, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [422, 2, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [423, 2, 1, "", "MultichannelRespiratoryWaveformStorage"], [424, 2, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [425, 2, 1, "", "NuclearMedicineImageStorage"], [426, 2, 1, "", "OphthalmicAxialMeasurementsStorage"], [427, 2, 1, "", "OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [428, 2, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [429, 2, 1, "", "OphthalmicPhotography16BitImageStorage"], [430, 2, 1, "", "OphthalmicPhotography8BitImageStorage"], [431, 2, 1, "", "OphthalmicThicknessMapStorage"], [432, 2, 1, "", "OphthalmicTomographyImageStorage"], [433, 2, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [434, 2, 1, "", "PYDICOM_IMPLEMENTATION_UID"], [435, 2, 1, "", "PYDICOM_ROOT_UID"], [436, 2, 1, "", "ParametricMapStorage"], [437, 2, 1, "", "PatientRadiationDoseSRStorage"], [438, 2, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [439, 2, 1, "", "PhotoacousticImageStorage"], [440, 2, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [441, 2, 1, "", "PositronEmissionTomographyImageStorage"], [442, 2, 1, "", "PrivateTransferSyntaxes"], [443, 2, 1, "", "ProcedureLogStorage"], [444, 2, 1, "", "ProtocolApprovalStorage"], [445, 2, 1, "", "PseudoColorSoftcopyPresentationStateStorage"], [446, 2, 1, "", "RE_VALID_UID"], [447, 2, 1, "", "RE_VALID_UID_PREFIX"], [448, 2, 1, "", "RLELossless"], [449, 2, 1, "", "RLETransferSyntaxes"], [450, 2, 1, "", "RTBeamsDeliveryInstructionStorage"], [451, 2, 1, "", "RTBeamsTreatmentRecordStorage"], [452, 2, 1, "", "RTBrachyApplicationSetupDeliveryInstructionStorage"], [453, 2, 1, "", "RTBrachyTreatmentRecordStorage"], [454, 2, 1, "", "RTDoseStorage"], [455, 2, 1, "", "RTImageStorage"], [456, 2, 1, "", "RTIonBeamsTreatmentRecordStorage"], [457, 2, 1, "", "RTIonPlanStorage"], [458, 2, 1, "", "RTPatientPositionAcquisitionInstructionStorage"], [459, 2, 1, "", "RTPhysicianIntentStorage"], [460, 2, 1, "", "RTPlanStorage"], [461, 2, 1, "", "RTRadiationRecordSetStorage"], [462, 2, 1, "", "RTRadiationSalvageRecordStorage"], [463, 2, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [464, 2, 1, "", "RTRadiationSetStorage"], [465, 2, 1, "", "RTSegmentAnnotationStorage"], [466, 2, 1, "", "RTStructureSetStorage"], [467, 2, 1, "", "RTTreatmentPreparationStorage"], [468, 2, 1, "", "RTTreatmentSummaryRecordStorage"], [469, 2, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [470, 2, 1, "", "RawDataStorage"], [471, 2, 1, "", "RealWorldValueMappingStorage"], [472, 2, 1, "", "RespiratoryWaveformStorage"], [473, 2, 1, "", "RoboticArmRadiationStorage"], [474, 2, 1, "", "RoboticRadiationRecordStorage"], [475, 2, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [476, 2, 1, "", "SMPTEST211020UncompressedInterlacedActiveVideo"], [477, 2, 1, "", "SMPTEST211020UncompressedProgressiveActiveVideo"], [478, 2, 1, "", "SMPTEST211030PCMDigitalAudio"], [479, 2, 1, "", "SecondaryCaptureImageStorage"], [480, 2, 1, "", "SegmentationStorage"], [481, 2, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [482, 2, 1, "", "SimplifiedAdultEchoSRStorage"], [483, 2, 1, "", "SleepElectroencephalogramWaveformStorage"], [484, 2, 1, "", "SpatialFiducialsStorage"], [485, 2, 1, "", "SpatialRegistrationStorage"], [486, 2, 1, "", "SpectaclePrescriptionReportStorage"], [487, 2, 1, "", "StereometricRelationshipStorage"], [488, 2, 1, "", "SubjectiveRefractionMeasurementsStorage"], [489, 2, 1, "", "SurfaceScanMeshStorage"], [490, 2, 1, "", "SurfaceScanPointCloudStorage"], [491, 2, 1, "", "SurfaceSegmentationStorage"], [492, 2, 1, "", "TomotherapeuticRadiationRecordStorage"], [493, 2, 1, "", "TomotherapeuticRadiationStorage"], [494, 2, 1, "", "TractographyResultsStorage"], [495, 2, 1, "", "TwelveLeadECGWaveformStorage"], [496, 3, 1, "", "UID"], [497, 2, 1, "", "UltrasoundImageStorage"], [498, 2, 1, "", "UltrasoundMultiFrameImageStorage"], [499, 2, 1, "", "UncompressedTransferSyntaxes"], [500, 2, 1, "", "VLEndoscopicImageStorage"], [501, 2, 1, "", "VLMicroscopicImageStorage"], [502, 2, 1, "", "VLPhotographicImageStorage"], [503, 2, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [504, 2, 1, "", "VLWholeSlideMicroscopyImageStorage"], [505, 2, 1, "", "VariableModalityLUTSoftcopyPresentationStateStorage"], [506, 2, 1, "", "VideoEndoscopicImageStorage"], [507, 2, 1, "", "VideoMicroscopicImageStorage"], [508, 2, 1, "", "VideoPhotographicImageStorage"], [509, 2, 1, "", "VisualAcuityMeasurementsStorage"], [510, 2, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [511, 2, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [512, 2, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [513, 2, 1, "", "XADefinedProcedureProtocolStorage"], [514, 2, 1, "", "XAPerformedProcedureProtocolStorage"], [515, 2, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [516, 2, 1, "", "XRay3DAngiographicImageStorage"], [517, 2, 1, "", "XRay3DCraniofacialImageStorage"], [518, 2, 1, "", "XRayAngiographicImageStorage"], [519, 2, 1, "", "XRayRadiationDoseSRStorage"], [520, 2, 1, "", "XRayRadiofluoroscopicImageStorage"], [521, 1, 1, "", "generate_uid"], [522, 1, 1, "", "register_transfer_syntax"]], "pydicom.uid.UID": [[496, 6, 1, "", "__init__"], [496, 6, 1, "", "capitalize"], [496, 6, 1, "", "casefold"], [496, 6, 1, "", "center"], [496, 6, 1, "", "count"], [496, 6, 1, "", "encode"], [496, 6, 1, "", "endswith"], [496, 6, 1, "", "expandtabs"], [496, 6, 1, "", "find"], [496, 6, 1, "", "format"], [496, 6, 1, "", "format_map"], [496, 6, 1, "", "index"], [496, 4, 1, "", "info"], [496, 4, 1, "", "is_compressed"], [496, 4, 1, "", "is_deflated"], [496, 4, 1, "", "is_encapsulated"], [496, 4, 1, "", "is_implicit_VR"], [496, 4, 1, "", "is_little_endian"], [496, 4, 1, "", "is_private"], [496, 4, 1, "", "is_retired"], [496, 4, 1, "", "is_transfer_syntax"], [496, 4, 1, "", "is_valid"], [496, 6, 1, "", "isalnum"], [496, 6, 1, "", "isalpha"], [496, 6, 1, "", "isascii"], [496, 6, 1, "", "isdecimal"], [496, 6, 1, "", "isdigit"], [496, 6, 1, "", "isidentifier"], [496, 6, 1, "", "islower"], [496, 6, 1, "", "isnumeric"], [496, 6, 1, "", "isprintable"], [496, 6, 1, "", "isspace"], [496, 6, 1, "", "istitle"], [496, 6, 1, "", "isupper"], [496, 6, 1, "", "join"], [496, 4, 1, "", "keyword"], [496, 6, 1, "", "ljust"], [496, 6, 1, "", "lower"], [496, 6, 1, "", "lstrip"], [496, 6, 1, "", "maketrans"], [496, 4, 1, "", "name"], [496, 6, 1, "", "partition"], [496, 6, 1, "", "removeprefix"], [496, 6, 1, "", "removesuffix"], [496, 6, 1, "", "replace"], [496, 6, 1, "", "rfind"], [496, 6, 1, "", "rindex"], [496, 6, 1, "", "rjust"], [496, 6, 1, "", "rpartition"], [496, 6, 1, "", "rsplit"], [496, 6, 1, "", "rstrip"], [496, 6, 1, "", "set_private_encoding"], [496, 6, 1, "", "split"], [496, 6, 1, "", "splitlines"], [496, 6, 1, "", "startswith"], [496, 6, 1, "", "strip"], [496, 6, 1, "", "swapcase"], [496, 6, 1, "", "title"], [496, 6, 1, "", "translate"], [496, 4, 1, "", "type"], [496, 6, 1, "", "upper"], [496, 6, 1, "", "zfill"]], "pydicom.valuerep": [[523, 3, 1, "", "DA"], [524, 1, 1, "", "DS"], [525, 3, 1, "", "DSdecimal"], [526, 3, 1, "", "DSfloat"], [527, 3, 1, "", "DT"], [528, 3, 1, "", "IS"], [529, 3, 1, "", "ISfloat"], [530, 3, 1, "", "PersonName"], [531, 3, 1, "", "TM"], [532, 3, 1, "", "VR"], [533, 1, 1, "", "format_number_as_ds"], [534, 1, 1, "", "is_valid_ds"]], "pydicom.valuerep.DA": [[523, 6, 1, "", "__init__"], [523, 6, 1, "", "ctime"], [523, 6, 1, "", "fromisocalendar"], [523, 6, 1, "", "fromisoformat"], [523, 6, 1, "", "fromordinal"], [523, 6, 1, "", "fromtimestamp"], [523, 6, 1, "", "isocalendar"], [523, 6, 1, "", "isoformat"], [523, 6, 1, "", "isoweekday"], [523, 6, 1, "", "replace"], [523, 6, 1, "", "strftime"], [523, 6, 1, "", "timetuple"], [523, 6, 1, "", "today"], [523, 6, 1, "", "toordinal"], [523, 6, 1, "", "weekday"]], "pydicom.valuerep.DSdecimal": [[525, 6, 1, "", "__init__"], [525, 6, 1, "", "adjusted"], [525, 6, 1, "", "as_integer_ratio"], [525, 6, 1, "", "as_tuple"], [525, 6, 1, "", "canonical"], [525, 6, 1, "", "compare"], [525, 6, 1, "", "compare_signal"], [525, 6, 1, "", "compare_total"], [525, 6, 1, "", "compare_total_mag"], [525, 6, 1, "", "conjugate"], [525, 6, 1, "", "copy_abs"], [525, 6, 1, "", "copy_negate"], [525, 6, 1, "", "copy_sign"], [525, 6, 1, "", "exp"], [525, 6, 1, "", "fma"], [525, 6, 1, "", "from_float"], [525, 6, 1, "", "is_canonical"], [525, 6, 1, "", "is_finite"], [525, 6, 1, "", "is_infinite"], [525, 6, 1, "", "is_nan"], [525, 6, 1, "", "is_normal"], [525, 6, 1, "", "is_qnan"], [525, 6, 1, "", "is_signed"], [525, 6, 1, "", "is_snan"], [525, 6, 1, "", "is_subnormal"], [525, 6, 1, "", "is_zero"], [525, 6, 1, "", "ln"], [525, 6, 1, "", "log10"], [525, 6, 1, "", "logb"], [525, 6, 1, "", "logical_and"], [525, 6, 1, "", "logical_invert"], [525, 6, 1, "", "logical_or"], [525, 6, 1, "", "logical_xor"], [525, 6, 1, "", "max"], [525, 6, 1, "", "max_mag"], [525, 6, 1, "", "min"], [525, 6, 1, "", "min_mag"], [525, 6, 1, "", "next_minus"], [525, 6, 1, "", "next_plus"], [525, 6, 1, "", "next_toward"], [525, 6, 1, "", "normalize"], [525, 6, 1, "", "number_class"], [525, 6, 1, "", "quantize"], [525, 6, 1, "", "radix"], [525, 6, 1, "", "remainder_near"], [525, 6, 1, "", "rotate"], [525, 6, 1, "", "same_quantum"], [525, 6, 1, "", "scaleb"], [525, 6, 1, "", "shift"], [525, 6, 1, "", "sqrt"], [525, 6, 1, "", "to_eng_string"], [525, 6, 1, "", "to_integral"], [525, 6, 1, "", "to_integral_exact"], [525, 6, 1, "", "to_integral_value"]], "pydicom.valuerep.DSfloat": [[526, 6, 1, "", "__init__"], [526, 6, 1, "", "as_integer_ratio"], [526, 6, 1, "", "conjugate"], [526, 6, 1, "", "fromhex"], [526, 6, 1, "", "hex"], [526, 5, 1, "", "imag"], [526, 6, 1, "", "is_integer"], [526, 5, 1, "", "real"]], "pydicom.valuerep.DT": [[527, 6, 1, "", "__init__"], [527, 6, 1, "", "astimezone"], [527, 6, 1, "", "combine"], [527, 6, 1, "", "ctime"], [527, 6, 1, "", "date"], [527, 6, 1, "", "dst"], [527, 6, 1, "", "fromisocalendar"], [527, 6, 1, "", "fromisoformat"], [527, 6, 1, "", "fromordinal"], [527, 6, 1, "", "fromtimestamp"], [527, 6, 1, "", "isocalendar"], [527, 6, 1, "", "isoformat"], [527, 6, 1, "", "isoweekday"], [527, 6, 1, "", "now"], [527, 6, 1, "", "replace"], [527, 6, 1, "", "strftime"], [527, 6, 1, "", "strptime"], [527, 6, 1, "", "time"], [527, 6, 1, "", "timestamp"], [527, 6, 1, "", "timetuple"], [527, 6, 1, "", "timetz"], [527, 6, 1, "", "today"], [527, 6, 1, "", "toordinal"], [527, 6, 1, "", "tzname"], [527, 6, 1, "", "utcfromtimestamp"], [527, 6, 1, "", "utcnow"], [527, 6, 1, "", "utcoffset"], [527, 6, 1, "", "utctimetuple"], [527, 6, 1, "", "weekday"]], "pydicom.valuerep.IS": [[528, 6, 1, "", "__init__"], [528, 6, 1, "", "as_integer_ratio"], [528, 6, 1, "", "bit_count"], [528, 6, 1, "", "bit_length"], [528, 6, 1, "", "conjugate"], [528, 5, 1, "", "denominator"], [528, 6, 1, "", "from_bytes"], [528, 5, 1, "", "imag"], [528, 5, 1, "", "numerator"], [528, 5, 1, "", "real"], [528, 6, 1, "", "to_bytes"]], "pydicom.valuerep.ISfloat": [[529, 6, 1, "", "__init__"], [529, 6, 1, "", "as_integer_ratio"], [529, 6, 1, "", "conjugate"], [529, 6, 1, "", "fromhex"], [529, 6, 1, "", "hex"], [529, 5, 1, "", "imag"], [529, 6, 1, "", "is_integer"], [529, 5, 1, "", "real"]], "pydicom.valuerep.PersonName": [[530, 6, 1, "", "__init__"], [530, 4, 1, "", "alphabetic"], [530, 4, 1, "", "components"], [530, 6, 1, "", "decode"], [530, 6, 1, "", "encode"], [530, 6, 1, "", "family_comma_given"], [530, 4, 1, "", "family_name"], [530, 6, 1, "", "formatted"], [530, 6, 1, "", "from_named_components"], [530, 6, 1, "", "from_named_components_veterinary"], [530, 4, 1, "", "given_name"], [530, 4, 1, "", "ideographic"], [530, 4, 1, "", "middle_name"], [530, 4, 1, "", "name_prefix"], [530, 4, 1, "", "name_suffix"], [530, 4, 1, "", "phonetic"]], "pydicom.valuerep.TM": [[531, 6, 1, "", "__init__"], [531, 6, 1, "", "dst"], [531, 6, 1, "", "fromisoformat"], [531, 6, 1, "", "isoformat"], [531, 6, 1, "", "replace"], [531, 6, 1, "", "strftime"], [531, 6, 1, "", "tzname"], [531, 6, 1, "", "utcoffset"]], "pydicom.valuerep.VR": [[532, 6, 1, "", "__init__"], [532, 6, 1, "", "capitalize"], [532, 6, 1, "", "casefold"], [532, 6, 1, "", "center"], [532, 6, 1, "", "count"], [532, 6, 1, "", "encode"], [532, 6, 1, "", "endswith"], [532, 6, 1, "", "expandtabs"], [532, 6, 1, "", "find"], [532, 6, 1, "", "format"], [532, 6, 1, "", "format_map"], [532, 6, 1, "", "index"], [532, 6, 1, "", "isalnum"], [532, 6, 1, "", "isalpha"], [532, 6, 1, "", "isascii"], [532, 6, 1, "", "isdecimal"], [532, 6, 1, "", "isdigit"], [532, 6, 1, "", "isidentifier"], [532, 6, 1, "", "islower"], [532, 6, 1, "", "isnumeric"], [532, 6, 1, "", "isprintable"], [532, 6, 1, "", "isspace"], [532, 6, 1, "", "istitle"], [532, 6, 1, "", "isupper"], [532, 6, 1, "", "join"], [532, 6, 1, "", "ljust"], [532, 6, 1, "", "lower"], [532, 6, 1, "", "lstrip"], [532, 6, 1, "", "maketrans"], [532, 6, 1, "", "partition"], [532, 6, 1, "", "removeprefix"], [532, 6, 1, "", "removesuffix"], [532, 6, 1, "", "replace"], [532, 6, 1, "", "rfind"], [532, 6, 1, "", "rindex"], [532, 6, 1, "", "rjust"], [532, 6, 1, "", "rpartition"], [532, 6, 1, "", "rsplit"], [532, 6, 1, "", "rstrip"], [532, 6, 1, "", "split"], [532, 6, 1, "", "splitlines"], [532, 6, 1, "", "startswith"], [532, 6, 1, "", "strip"], [532, 6, 1, "", "swapcase"], [532, 6, 1, "", "title"], [532, 6, 1, "", "translate"], [532, 6, 1, "", "upper"], [532, 6, 1, "", "zfill"]], "pydicom.values": [[535, 1, 1, "", "convert_AE_string"], [536, 1, 1, "", "convert_ATvalue"], [537, 1, 1, "", "convert_DA_string"], [538, 1, 1, "", "convert_DS_string"], [539, 1, 1, "", "convert_DT_string"], [540, 1, 1, "", "convert_IS_string"], [541, 1, 1, "", "convert_OBvalue"], [542, 1, 1, "", "convert_OWvalue"], [543, 1, 1, "", "convert_PN"], [544, 1, 1, "", "convert_SQ"], [545, 1, 1, "", "convert_TM_string"], [546, 1, 1, "", "convert_UI"], [547, 1, 1, "", "convert_UN"], [548, 1, 1, "", "convert_UR_string"], [549, 1, 1, "", "convert_numbers"], [550, 1, 1, "", "convert_single_string"], [551, 1, 1, "", "convert_string"], [552, 1, 1, "", "convert_tag"], [553, 1, 1, "", "convert_text"], [554, 1, 1, "", "convert_value"], [555, 1, 1, "", "multi_string"]], "pydicom.waveforms": [[556, 0, 0, "-", "numpy_handler"]], "pydicom.waveforms.numpy_handler": [[556, 1, 1, "", "generate_multiplex"], [556, 1, 1, "", "is_available"], [556, 1, 1, "", "multiplex_array"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:method", "7": "py:exception"}, "terms": {"": [0, 2, 3, 4, 8, 9, 10, 12, 16, 17, 20, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 41, 42, 44, 47, 48, 49, 50, 52, 53, 54, 84, 93, 94, 97, 110, 116, 120, 127, 128, 131, 132, 133, 138, 141, 144, 147, 148, 151, 153, 156, 158, 159, 162, 172, 173, 181, 182, 183, 205, 221, 238, 239, 240, 246, 247, 250, 251, 252, 259, 260, 264, 267, 270, 271, 272, 275, 277, 281, 282, 434, 435, 496, 525, 527, 528, 532, 533, 534, 536, 543, 544, 551, 553, 554, 567, 570, 572, 573, 575, 580, 581, 583, 586, 588, 591, 593, 594, 595, 596, 598, 600, 601, 602, 604, 606], "0": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 33, 34, 36, 37, 38, 39, 42, 43, 44, 47, 49, 50, 51, 81, 82, 83, 100, 102, 103, 128, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 156, 158, 159, 168, 169, 170, 174, 175, 181, 182, 183, 206, 209, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 260, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 434, 435, 446, 447, 496, 521, 523, 525, 526, 527, 528, 529, 538, 540, 544, 552, 556, 557, 558, 559, 587, 592, 595, 596, 598, 600, 601, 602, 604, 606], "00": [5, 13, 19, 21, 148, 592], "000": [5, 21, 525, 592, 606], "0000": [2, 8, 12, 20, 26, 27, 28, 42, 47, 196, 496, 532, 570, 591, 596], "000000": [10, 20, 598], "00000000": 174, "000000000": [2, 8, 20], "00000000000000": [26, 28], "00000001": 174, "00000002": 174, "0000200": [2, 8, 20], "0001": [2, 12, 20, 26, 27, 28, 42, 47, 131, 132, 133, 135, 141, 143, 147, 196, 220, 263, 596], "00010": 174, "0002": [2, 12, 20, 26, 27, 28, 29, 39, 42, 47, 50, 131, 132, 133, 135, 141, 143, 147, 183, 196, 209, 211, 212, 220, 240, 260, 263, 264, 266, 267, 274, 275, 434, 596, 600, 604], "0003": [2, 12, 20, 26, 27, 28, 42, 47, 135, 196, 596], "0004": [2, 10, 20, 26, 27, 28, 29, 39, 50, 131, 132, 133, 170, 172, 209, 211, 220, 221, 259, 260, 263, 265, 266, 267, 275, 570, 583, 598, 604], "0005": [20, 26, 28, 47, 76, 77, 78, 79, 131, 132, 133, 162, 163, 556, 570, 571, 596, 597, 598], "0006": [26, 27, 28, 29, 39, 131, 132, 133, 209, 211, 212, 220, 260, 263, 267, 274, 275], "0008": [2, 12, 20, 26, 27, 28, 29, 39, 42, 47, 50, 76, 77, 78, 79, 131, 132, 133, 141, 143, 144, 146, 147, 162, 163, 209, 211, 212, 213, 220, 240, 253, 260, 263, 264, 266, 267, 274, 275, 563, 570, 571, 583, 596, 597, 598, 604], "00080005": 597, "00080008": 597, "0009": [20, 47, 50, 131, 132, 133, 209, 267, 563, 570, 583, 604], "00091002": 597, "000b": 47, "000d": [2, 20], "000e": [2, 20], "000y": 20, "001": [18, 19, 47, 592], "0010": [2, 12, 16, 17, 20, 26, 27, 28, 29, 39, 42, 47, 49, 50, 53, 67, 97, 131, 132, 133, 135, 144, 145, 146, 162, 196, 206, 209, 210, 211, 212, 220, 240, 260, 263, 264, 266, 267, 274, 275, 556, 557, 563, 564, 570, 579, 591, 595, 596, 598, 600, 604], "0011": [2, 20, 29, 39, 49, 131, 132, 133, 206, 209, 211, 212, 220, 260, 261, 263, 266, 267, 274, 275, 276, 604], "0012": [2, 12, 20, 26, 27, 28, 42, 47, 135, 196, 434, 596], "0013": [2, 12, 20, 26, 27, 28, 42, 47, 135, 196, 596, 598], "0014": [2, 20, 26, 27, 28, 596], "0015": 206, "0016": [2, 20, 26, 27, 28, 42, 47, 196, 596], "0017": 196, "0018": [2, 20, 26, 27, 28, 42, 131, 132, 133, 196, 213, 220, 240, 253, 260, 263, 264, 275], "0019": 20, "0019xx43": [570, 589], "001a": 51, "0020": [2, 12, 17, 20, 26, 27, 28, 42, 596, 598], "0021": [2, 20], "0022": [2, 20, 596], "0023": [2, 12, 20, 26, 27], "0025": 20, "0026": [26, 27], "0027": 20, "0028": [2, 20, 29, 39, 45, 50, 131, 132, 133, 141, 143, 144, 146, 147, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 247, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 271, 273, 274, 275, 276, 570, 583, 585, 596, 604], "0029": 20, "002c": [26, 27], "003": [11, 13, 16, 19, 592], "0030": [2, 17, 20, 42, 604], "0031": [2, 20], "0032": [2, 20], "0033": [12, 20], "0036697": [26, 27, 28], "003669700000": [26, 28], "0037": [2, 20], "003a": [51, 131, 132, 133, 556, 606], "004": [12, 13, 592], "0040": [2, 20], "0041": 131, "0043": [20, 26, 28, 596], "005": [2, 5, 8, 13, 592], "0050": [2, 20, 26, 27, 42, 49], "0051": [26, 27], "0052": [2, 20], "0060": [2, 20, 26, 27, 42], "007": [14, 17, 19, 592], "0070": [2, 20, 26, 27], "0071": [26, 27, 28], "0078": [26, 27, 28], "007f": [496, 532], "0080": [2, 20, 26, 27, 28], "0081": [2, 20], "0082": [26, 27, 28], "0083": [2, 20], "0084": [2, 20, 26, 27, 28], "0085": [2, 20], "0086": [2, 20, 26, 27, 28], "0088": 20, "0090": [2, 20], "0091": [2, 20], "00a0": [26, 27, 28], "00b0": [26, 27], "00b6": [26, 27], "00f8": 18, "00fe": 18, "0100": [2, 20, 29, 39, 45, 51, 131, 132, 133, 196, 206, 209, 211, 212, 220, 251, 260, 261, 263, 265, 266, 267, 271, 275, 276, 556, 604, 606], "0101": [2, 20, 29, 39, 131, 132, 133, 209, 211, 214, 215, 220, 254, 255, 260, 263, 267, 273, 275, 604], "0102": [2, 20, 39, 131, 132, 133, 196, 206, 260, 275, 604], "0103": [2, 20, 29, 39, 131, 132, 133, 209, 211, 212, 214, 215, 220, 247, 254, 255, 260, 263, 267, 273, 275, 604], "0104": [131, 132, 133], "0106": [2, 20], "0107": [2, 20], "010c": [26, 27], "011": 19, "0111": [26, 27], "0115": [26, 27], "011a": [26, 27], "0120": 20, "0166": 20, "0180": [26, 27], "0197b5846bb5": [570, 577], "0200": 606, "0201": [2, 20, 570, 582], "0210": [131, 132, 133, 556, 606], "0211": [131, 132, 133], "025109": [10, 598], "0275401": [26, 27, 28], "02754010000000": [26, 28], "033": [22, 604], "035797": 20, "03579711914062": 20, "0400": [2, 8, 20], "0411bab7c985": [570, 577], "045357": [10, 598], "05": [20, 595], "0500": 20, "050743": [10, 598], "072730": [20, 26, 28], "072731": [20, 26, 28, 596], "07992553710938": 20, "079926": 20, "079956": 20, "08": 148, "085000": 20, "086": [9, 13, 592], "095": [20, 21, 592], "095000": 20, "0b00011001": 29, "0b01111111": 37, "0b10000000": 37, "0b100101": [281, 528], "0b1101": [281, 528], "0e0": 525, "0x00": [131, 132, 133, 138, 140, 183, 546], "0x0000": 183, "0x00000000": [145, 148], "0x0002": [132, 183, 250, 252, 270, 272, 596], "0x0006": [570, 580], "0x0008": 596, "0x0009": [47, 131, 132, 133], "0x00091001": 47, "0x000b": 47, "0x0010": [42, 131, 132, 133, 282, 596], "0x00100010": [42, 128, 131, 132, 133], "0x00100015": 282, "0x00100020": 131, "0x00100030": 131, "0x00100040": [131, 132, 133], "0x0015": 282, "0x0016": 596, "0x0018": 42, "0x0028": [238, 246, 250, 252, 270, 272, 596, 604], "0x0030": 131, "0x0041": [131, 132, 133], "0x004100001": 47, "0x00410001": 110, "0x00410002": 110, "0x0043": 596, "0x01": [16, 47, 131], "0x02": [16, 47], "0x03": 16, "0x1": [526, 529], "0x10": [42, 128, 131, 132, 133, 282], "0x1001": 16, "0x100100010": 85, "0x10011001": 16, "0x10011002": 16, "0x10011003": 16, "0x1002": 596, "0x10021001": [108, 109], "0x10021002": [108, 109], "0x1020": 42, "0x104e": 596, "0x1050": 596, "0x1p": [526, 529], "0x3000": 49, "0x300a": 42, "0x50": 282, "0x5000": 17, "0x6000": [49, 206, 596], "0x6002": 596, "0x6004": 596, "0x6010": 206, "0x601e": 596, "0x60ff": 206, "0x7fe0": 604, "0x888800001": 47, "0xb0": 42, "0xb4": 53, "0xc2": 42, "0xff": [131, 132, 133], "0xff00": 17, "0xffd9": 144, "0xffff": [131, 132, 133, 170, 570, 580], "0xffffffff": 128, "0xffffffffl": 128, "1": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 41, 42, 44, 45, 47, 49, 50, 51, 53, 62, 80, 84, 85, 87, 96, 106, 108, 109, 110, 111, 128, 130, 131, 132, 133, 134, 135, 138, 139, 140, 144, 148, 149, 150, 156, 158, 159, 162, 174, 183, 196, 206, 209, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 530, 532, 556, 571, 574, 577, 585, 588, 591, 594, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606], "10": [11, 20, 23, 26, 28, 39, 49, 51, 148, 174, 196, 250, 270, 281, 417, 452, 459, 481, 525, 526, 528, 529, 570, 577, 581, 591, 596, 598, 604, 606], "100": [10, 20, 24, 26, 28, 36, 47, 51, 287, 400, 401, 412, 525, 596, 597, 598, 606], "1000": [2, 20, 51, 606], "10000": [51, 606], "1000000000000000055511151231257827021181583404541015625": 525, "10008": [8, 9, 12, 24, 26, 41, 44, 45, 50, 131, 132, 133, 144, 209, 212, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 243, 244, 245, 248, 249, 263, 274, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 570, 580, 581, 583, 585, 586, 591, 594, 596], "1001": [16, 20, 47, 131], "1002": [16, 20, 47, 596], "1003": [16, 20], "1004": [20, 556, 570, 583], "1005": 20, "1006": [20, 556, 570, 583], "1007": 20, "1008": 20, "1009": 20, "100a": 20, "100f": 20, "101": [22, 287, 398, 399, 412], "1010": [2, 20, 51, 606], "1011": 20, "1012": 20, "1013": [20, 570, 583], "1014": [20, 570, 586], "1015": 20, "1016": [20, 570, 583], "1017": 20, "1018": 20, "1019": [20, 50], "101a": 20, "101b": 20, "101c": 20, "101d": 20, "101e": 20, "101f": 20, "102": [287, 402, 405, 412, 570, 576], "1020": [2, 20], "102000": 20, "1021": [20, 570, 591], "1023": 20, "1024": [20, 128, 131, 132, 133, 570, 584, 597, 602, 604], "1025": 20, "1026": 20, "1027": 20, "1028": 20, "1029": [20, 570, 584], "102a": 20, "102b": 20, "102c": 20, "102e": 20, "102f": 20, "103": [287, 403, 404, 412, 570, 576], "1030": [2, 20, 570, 584], "1031": 20, "1034": 20, "1035": 20, "1037": 20, "1038": [570, 585], "1039": [20, 598], "104": [22, 287, 337, 338, 339, 340, 341, 406, 407, 412], "1040": [2, 20], "1041": [2, 20], "1042": [20, 570, 585], "1043": 20, "10431": 20, "1044": 20, "1045": 20, "1046": 20, "1047": [20, 570, 585], "1048": 20, "1049": [20, 570, 585], "104a": 20, "104b": [20, 26, 28], "104c": [20, 26, 28], "104d": [20, 26, 28], "104e": [20, 26, 28, 596], "105": [22, 51, 287, 408, 409, 412], "1050": [2, 20, 217, 218, 257, 258, 596], "1051": [2, 20, 217, 218, 257, 258, 570, 588, 596], "1052": [20, 214, 215, 254, 255], "1053": [20, 214, 215, 254, 255, 570, 585], "1054": 20, "1055": 20, "1057": 20, "1058": 20, "105e": 20, "105f": 20, "106": [51, 287, 410, 411, 412], "1060": [2, 20], "1061": 20, "1062": 20, "1067": [570, 585], "1068": 50, "106a": 20, "106b": 20, "107": [20, 287, 363, 412, 570, 577], "1070": [2, 20], "1071": 20, "1072": 20, "1073": [20, 570, 585], "1074": [20, 526, 529], "1075": [20, 570, 585], "1076": 20, "1078": [570, 585], "1079": 596, "107d": 20, "108": [287, 362, 412, 530], "1082": [570, 585], "1083": 50, "1086": [570, 585], "1090": [2, 20], "1091": 20, "10918": [39, 44, 221, 259, 389, 570, 588], "1092": 20, "1093": [20, 570, 586], "1094": 50, "1097": [570, 585], "1099": 20, "10da": 20, "10db": 20, "10dc": 20, "10dd": 20, "10de": 20, "10e6": 20, "10e7": 20, "10e9": 20, "11": [11, 20, 23, 214, 215, 216, 217, 218, 254, 255, 256, 257, 258, 286, 292, 294, 308, 309, 360, 361, 424, 445, 465, 481, 505, 510, 515, 525, 570, 590, 591, 602, 606], "110": [51, 570, 576], "1100": 20, "1101": [570, 583], "1103": [570, 583, 586], "111": [570, 576], "1110": 20, "111079": 20, "1111": 20, "112": 51, "1120": 20, "1127": [570, 586], "112749": 20, "1129": 50, "112936": 20, "113": [570, 577], "1130": [10, 20], "113008": 20, "1133": [570, 591], "114": [570, 577], "1140": [570, 586], "1141": 10, "1142": 10, "1146": [570, 586], "1147": [570, 588], "1149": [570, 586], "1150": 20, "1151": 20, "1152": 20, "1153": [570, 586], "1155": [570, 586], "1156": [570, 586], "116": [20, 26, 27, 28, 51], "1160": 20, "1161": [570, 586], "117": [570, 573], "1178": [570, 586], "118": 10, "1181": [570, 586], "119": [570, 573], "1190": [20, 570, 586], "1193": [570, 586], "1196533885": 10, "12": [0, 23, 30, 34, 39, 41, 51, 69, 209, 247, 248, 350, 351, 464, 505, 518, 520, 525, 598, 606], "120": [20, 51], "1200": [51, 570, 586, 606], "1200x900": 0, "1201": [213, 253], "1203": [213, 253], "1204": [213, 253], "1210": 20, "121006": 605, "1211": [570, 586], "1215": [570, 586], "122": [570, 573], "1220": 598, "1221": [213, 253], "1223": [213, 253], "1224": [213, 253], "1227": 50, "123": [525, 597], "12322": [20, 26, 28, 47, 596], "1234": [570, 586], "12345": [42, 131], "123456": 12, "1234567": 172, "1234abcd": [20, 596], "1237": [570, 586], "123e": 525, "124": 601, "1240": [570, 586], "1243": [570, 591], "125": [570, 579, 601], "1251": [570, 587], "1253": [570, 587], "1254": [570, 587], "126": [2, 20, 26, 28, 596, 606], "1262": [570, 588], "1263": [570, 591], "127": [37, 602], "1273": [570, 591], "1278": [570, 588], "128": [2, 9, 12, 20, 26, 28, 37, 132, 154, 167, 177, 178, 179, 183, 196, 396, 441, 596, 601, 604], "128002": 605, "129": [20, 601], "13": [11, 281, 296, 297, 298, 300, 516, 517, 528], "130": 346, "131": [51, 291], "1311": 596, "1312": [570, 588], "1314": [2, 20], "1318": 50, "1327": [570, 588], "133": [20, 167], "1332": [570, 588], "1336": 50, "1338": [570, 588], "1340": [570, 588], "1341": [570, 588], "1346": 50, "1348": [570, 588], "135803": 20, "1359940846": [10, 598], "1361": [570, 588], "13656": 36, "1369": 50, "137": 51, "1372": [570, 588], "1386": 604, "1388": [570, 591], "14": [20, 45, 144, 235, 236, 374, 375, 493, 570, 585], "1400": [172, 598], "1410": [172, 598], "1412": [570, 588], "1414": [570, 590], "1415": [570, 588], "14159": [526, 529], "14180": 37, "1420": [172, 598], "1428": [570, 588], "143": [570, 579], "1430": [170, 598], "1434": [570, 588], "1436": 596, "1438": [570, 588], "1444": [570, 588], "1449": [570, 588], "14495": [37, 386, 601], "1454": [570, 591], "1457": [570, 588], "1479": 10, "1481": [570, 591], "1487": [570, 589], "149188": 37, "1498": [570, 589], "15": [2, 8, 20, 473, 592, 596, 604, 606], "150": [20, 51], "1500": [172, 570, 589], "150031": [24, 26, 27, 42], "151": [570, 579], "1510": 172, "1511": [172, 570, 589], "1512": 172, "152": 42, "152294": 604, "152326": 604, "152342": [36, 601], "1529": [570, 591], "153557": [24, 26, 28, 42], "15444": [36, 268, 381, 601], "156": [26, 27, 42], "1565": [570, 589], "157": 42, "1571": [570, 589], "1576": 20, "158": 20, "1581": [570, 589], "1582": 36, "1588": [570, 589], "159": [20, 570, 583], "1593": [570, 589], "1594": [570, 589], "1596": [570, 589], "1599": [570, 589], "16": [2, 8, 20, 26, 28, 30, 34, 36, 37, 38, 39, 41, 45, 56, 128, 131, 132, 133, 134, 209, 211, 212, 273, 461, 533, 534, 556, 570, 583, 591, 601, 602, 604, 606], "1600": [2, 8, 20], "1601": 20, "1605775145": 20, "1606": [570, 589], "1609": [570, 589], "1611": [570, 590], "1617": [570, 589], "1632": [570, 590], "1634": [570, 590], "1638": [570, 590], "164": 42, "1648": [570, 590], "1658": [570, 590], "166": 42, "1661": [570, 590], "1666": [570, 591], "1667": [570, 590], "1670": [570, 590], "167161297070865690102504091919570542144": 521, "1674": [570, 590], "1680": [570, 590], "1683": [570, 590], "1689": [570, 591], "1693": [570, 590], "17": [20, 51, 462], "170": 20, "1702": [570, 590], "1703": 596, "171": 42, "17106": 598, "17136": 598, "17166": 598, "17196": 598, "172": [570, 579], "1728": [570, 590], "173032": [10, 598], "1734": [570, 590], "1738": [570, 590], "1743": [570, 591], "1747": [570, 590], "175": 42, "1752": [570, 591], "1773": [570, 591], "1774": [570, 591], "178": 20, "1781": [570, 591], "1788": [570, 590], "179": 20, "1792": [570, 590], "18": [128, 131, 132, 133, 492, 570, 579, 597], "180": [20, 42], "1803": [570, 590], "181": 42, "18148": 10, "1816": [570, 591], "183": 42, "1838265625": [570, 591], "184": [3, 5, 42, 592], "1844": [570, 591], "1848": [570, 591], "185059": [2, 8, 20], "185434": [2, 8, 20], "1858": 598, "186": 42, "1860": 598, "1873": [570, 591], "1874": [570, 591], "187460": 38, "189": [5, 10, 13, 592], "1895": 84, "19": 299, "190": [2, 20, 42], "19000101": 17, "1907": [570, 591], "192": [20, 26, 28, 47, 596], "1922": [570, 591], "1943": [570, 591], "194851": 12, "1957": 601, "1965": [570, 591], "1968": [570, 591], "1969": 20, "197": [570, 579], "197968": 20, "1983": [570, 591], "1994": [570, 591], "19950903": [10, 598], "1997": [570, 591], "19970430": 20, "19999694824219": 20, "199999809265137": 20, "1c": [3, 183, 196, 209, 211, 212, 266, 267, 274, 606], "1c32791bf0": [570, 574], "1ct1": [9, 20, 26, 28, 598], "1d": [97, 206, 209, 210, 211, 212, 238, 251, 271, 274], "1f": 11, "2": [0, 2, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 50, 51, 53, 56, 80, 82, 84, 85, 86, 89, 96, 99, 100, 102, 103, 106, 108, 109, 110, 111, 128, 130, 131, 132, 133, 134, 135, 138, 139, 140, 144, 145, 148, 149, 150, 162, 170, 196, 206, 209, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 263, 268, 270, 271, 272, 274, 276, 278, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 525, 530, 538, 540, 556, 573, 574, 576, 577, 579, 580, 582, 583, 591, 594, 596, 598, 600, 601, 603, 604, 606], "20": [20, 36, 41, 51, 131, 132, 133, 220, 261, 263, 276, 425, 474, 570, 588], "200": [36, 301, 303, 444, 513, 514], "2000": [2, 8, 20, 29, 35, 39, 41, 44, 45, 80, 131, 132, 133, 144, 220, 225, 226, 227, 229, 230, 239, 241, 242, 249, 250, 252, 263, 268, 270, 272, 274, 381, 570, 583, 586, 591, 600, 604], "200000": 20, "20010101": [10, 131, 598], "20030505": [10, 598], "20030716": [24, 26, 27, 28, 42], "20030903": [24, 26, 27, 42], "20030903150023": [24, 26, 27, 42], "20040119": [9, 20, 26, 28, 596], "20040119072730": [20, 26, 28, 47, 596], "20040826": [2, 8, 20], "20040826185059": [2, 8, 20], "2006": [131, 132, 133, 570, 591], "2008": [22, 530, 570, 591], "2009": [570, 591], "201": [41, 45, 226, 248, 287, 365, 376, 381], "2010": [570, 591], "2011": [570, 575, 576], "2012": [221, 259], "2013": [570, 591], "2017c": [570, 579], "2018": [23, 595], "2018b": [570, 580], "2018c": [570, 581], "2019": 23, "2019e": [570, 583], "202": [41, 45, 227, 248, 287, 366, 381], "2020": 23, "2020d": [570, 586], "2021": [23, 570, 590], "2021b": [570, 588], "2022": 23, "2022a": [570, 589], "2023": 23, "2023b": [570, 590], "2023d": [570, 591], "2024": [23, 559, 570, 591], "20240629": 12, "2024c": [570, 591], "2025": [570, 591], "203": [41, 42, 45, 225, 248, 287, 364, 381], "20304870605469": 20, "2035": [570, 591], "204": [287, 390], "2040634155": [9, 20, 26, 28], "20406341552734": 20, "2047": [526, 529, 602], "2048": 602, "205": [287, 391, 570, 583], "2062": [570, 591], "2068": 20, "207": 42, "2073": [570, 591], "2075": [570, 591], "2081": [570, 591], "20x": [38, 44, 131, 132, 133, 220, 263, 570, 588], "21": [20, 51, 463], "212": [570, 579], "216": 42, "2191": 601, "219482421875": 20, "21b0": 20, "22": [348, 467], "22463838056059845879389038257786771680": 521, "2281": 598, "23": [347, 570, 591], "230": 604, "2338": 598, "235": 42, "236": 594, "239": [24, 26, 27, 28, 42], "23e": 525, "23e2": 525, "24": [20, 36, 41, 343], "240": [2, 8, 20], "240000": [51, 606], "24078": 20, "243": [570, 586], "2452": 596, "249": 604, "25": [29, 51, 458, 521, 526, 529], "253": 22, "255": [37, 602], "256": [570, 580], "256x256": [49, 50], "258": [570, 579], "261": 22, "261792": 37, "263": [570, 583], "265": 22, "270": 605, "273": [570, 583], "276": [10, 598], "277": [22, 570, 583], "280": 50, "285": 50, "286": 13, "28726007": 567, "29": 559, "291": [570, 581], "292": [570, 580], "29282": 49, "298": 50, "299316": 20, "2d": [570, 586, 604], "3": [2, 4, 5, 8, 10, 12, 16, 17, 19, 20, 22, 23, 26, 28, 29, 30, 32, 34, 36, 37, 38, 39, 41, 42, 43, 45, 47, 50, 51, 56, 99, 106, 108, 109, 110, 128, 130, 131, 132, 133, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 156, 158, 159, 170, 174, 181, 182, 183, 196, 206, 209, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 272, 274, 275, 276, 278, 279, 280, 281, 287, 288, 298, 304, 323, 325, 327, 328, 336, 341, 344, 392, 417, 420, 439, 444, 445, 466, 478, 487, 496, 498, 503, 521, 525, 526, 528, 529, 532, 557, 558, 559, 573, 574, 576, 577, 578, 579, 580, 581, 585, 586, 587, 590, 594, 595, 596, 597, 598, 602, 603, 604, 606], "30": [24, 26, 27, 28, 51, 52, 436, 595], "300": [50, 131, 132, 133, 220, 263], "3000": [49, 131, 132, 133, 206, 214, 215, 254, 255, 570, 583, 596], "3002": [214, 215, 216, 217, 254, 255, 256, 257, 570, 583], "3006": [570, 585], "300a": [18, 26, 27, 28], "300c": [26, 27, 28], "3010": [216, 217, 256, 257], "302": 50, "304": [50, 601], "31": [138, 602], "310": 22, "3100585938": 20, "3125": [2, 8, 20], "3126": 598, "316": 22, "31906": [10, 598], "32": [34, 36, 39, 131, 132, 133, 134, 139, 148, 209, 212, 273, 525, 556, 570, 580, 588, 591, 602, 606], "320": [20, 50, 601, 602], "3204": 596, "321": 22, "321000e": 525, "324": [22, 526, 529], "327": 22, "32767": [570, 591], "32768": [20, 26, 28, 36, 37, 596], "328": 50, "33": 311, "331": 50, "333": 601, "334": 50, "334412": [36, 601], "338": 20, "339": 50, "34": [310, 450, 452], "346": [22, 570, 579], "35": [128, 131, 132, 133, 174, 355], "350": 20, "353": [570, 579], "355": 50, "358336": 12, "363": 22, "3678b1be6aca": [570, 577], "3680043": [434, 435, 521], "37": [51, 281, 528], "371919006": 605, "373": [20, 22], "374": 50, "377": 50, "378": 50, "38": [36, 367], "380": 594, "3816": 20, "39": 307, "3994": 20, "3d": [2, 4, 8, 20, 251, 271, 570, 586, 604], "3ed": 22, "3rd": [213, 214, 215, 216, 217, 252, 253, 254, 255, 256, 257, 272], "4": [2, 8, 9, 10, 12, 16, 20, 21, 23, 24, 26, 28, 34, 36, 37, 38, 39, 41, 42, 44, 45, 47, 50, 53, 130, 131, 132, 133, 138, 140, 144, 145, 148, 149, 150, 151, 178, 179, 183, 196, 214, 215, 216, 217, 218, 220, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 241, 242, 243, 244, 247, 248, 249, 254, 255, 256, 257, 258, 263, 274, 278, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 443, 444, 445, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 526, 529, 552, 576, 581, 582, 585, 586, 588, 591, 594, 596, 598, 605, 606], "40": [20, 36, 51, 443, 570, 588], "400": [20, 50], "4000": [2, 8, 20], "4095": [30, 34, 39, 247], "413": 50, "414": 525, "41421356": 525, "42": [16, 570, 573], "422": 50, "424152": 38, "43": [359, 570, 573], "431": 50, "44": [20, 369], "45": 370, "452": [570, 583], "46": 595, "46076": 36, "46100": 36, "464": [570, 580], "46af": 598, "47": [570, 573], "480": [20, 601, 602], "481": [24, 26, 299, 300, 343, 347, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 473, 474, 492, 493], "484": 49, "489": [570, 580], "494": 85, "498": [50, 434, 435, 521, 570, 580], "4ed698a7bfb": [570, 576], "4mr1": [2, 8, 17, 20], "4x": 41, "5": [8, 9, 10, 12, 13, 16, 20, 22, 23, 24, 26, 29, 32, 36, 37, 38, 39, 41, 42, 44, 45, 50, 51, 56, 128, 130, 131, 132, 133, 134, 138, 140, 143, 144, 145, 146, 147, 148, 150, 151, 200, 206, 212, 216, 217, 218, 220, 221, 237, 245, 248, 249, 251, 256, 257, 258, 259, 261, 263, 271, 274, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 367, 368, 369, 370, 371, 373, 374, 375, 376, 392, 393, 394, 395, 396, 397, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 525, 530, 585, 586, 594, 595, 596, 598, 601, 604, 606], "50": [8, 41, 45, 50, 51, 144, 231, 248, 274, 287, 382, 389, 416, 496, 570, 591, 604], "500": [594, 596], "501": [317, 318, 319, 320, 321, 322, 323], "51": [2, 8, 20, 41, 45, 144, 232, 248, 287, 383, 389], "510": 598, "5100": [2, 20], "512": [2, 20, 162, 206, 570, 580], "512x512": [49, 50], "51698a8366f2": 598, "52": [570, 576], "524288": 52, "531250000000": [24, 26, 27, 28], "53579711914062": 20, "537": [570, 583], "54": [521, 570, 591], "5400": [51, 131, 132, 133, 556, 606], "5457": [2, 8, 20], "55": [51, 570, 573], "566": 50, "57": [41, 45, 144, 235, 248, 274, 287, 387, 389, 570, 581, 586, 591], "58": [570, 573, 602], "581": [592, 596], "584": [570, 581], "59": 393, "5962": [2, 8, 10, 20, 26, 28, 47, 596], "597": [570, 580], "599": [570, 580], "5e": [526, 529], "5x": [45, 131, 132, 133, 220, 263, 570, 588], "6": [2, 8, 10, 20, 23, 26, 28, 32, 36, 39, 41, 45, 47, 50, 56, 78, 128, 130, 131, 132, 133, 140, 209, 221, 259, 274, 281, 322, 349, 360, 423, 439, 453, 472, 486, 494, 497, 504, 511, 523, 527, 528, 530, 571, 576, 577, 579, 586, 587, 590, 591, 595, 596, 606], "60": [51, 570, 577, 588], "600": [2, 8, 20], "6000": 49, "6002": 49, "60060977935791": [20, 26, 28, 596], "601": [333, 334], "601e": 49, "605": [570, 580], "60xx": [49, 206, 261, 276, 570, 583, 596], "6154": 598, "62": 51, "620": [570, 580], "623": [570, 585], "624": [570, 581], "6247": 598, "625": [570, 580], "6278": 598, "628": 50, "62824007": 567, "63": [2, 8, 20, 596, 602], "630": 20, "631": 596, "63580322265625": 20, "64": [2, 8, 20, 32, 34, 36, 39, 50, 209, 219, 262, 273, 521, 556, 570, 573, 602, 606], "640": [570, 580], "6406": [2, 8, 20], "649": [570, 580], "65": [51, 305], "650": [26, 27], "65535": [30, 34, 39, 247, 598], "66": [325, 470, 480, 484, 485, 491, 494], "660": [570, 581], "661468": [9, 20, 604], "663": [570, 581], "666": [570, 582], "667": 521, "67": [471, 519], "6716": 20, "677": [570, 581], "678": [596, 601], "68": [51, 469, 489, 490], "682": [570, 581], "685": [570, 583], "6854": 596, "689": [570, 581], "69": 306, "693": [570, 583], "695": [570, 581], "696": [570, 581], "69999694824219": 20, "699997": 20, "699999809265137": 20, "6b949a5b925b": [570, 577], "7": [10, 20, 23, 24, 26, 27, 29, 36, 39, 41, 42, 50, 130, 134, 138, 150, 172, 196, 200, 209, 221, 259, 274, 287, 309, 326, 335, 336, 419, 420, 421, 422, 426, 428, 450, 468, 475, 476, 477, 478, 479, 483, 513, 523, 527, 577, 581, 590, 591, 595, 598, 606], "70": [41, 45, 144, 236, 248, 274, 287, 371, 388, 389, 570, 585, 586, 591], "700": [10, 570, 581, 598], "700000": 20, "704": [570, 581], "706": 50, "707": [570, 581], "71": 285, "713": [570, 581], "715": [570, 581], "716": [570, 581], "717": [570, 581], "718": 20, "72": [482, 570, 573], "722": [570, 581], "7230010": [10, 598], "726": [570, 581], "728": [570, 581], "729": [570, 581], "73": [437, 570, 573], "730": [570, 582], "7369": 596, "737": [570, 581], "74": 440, "740": [570, 581], "7400": 20, "741": [26, 27], "746": [570, 591], "748": 20, "749": 20, "75": [20, 26, 27, 51, 438], "750": 20, "750675506": 20, "751": [24, 26, 27, 28], "753": [570, 582], "757": [570, 582], "76": 352, "760": [570, 582], "763": 20, "764": 20, "7654321": 172, "77": [9, 20, 24, 26, 27, 28, 42, 313, 314, 326, 427, 428, 429, 430, 432, 487, 500, 501, 502, 503, 504, 506, 507, 508, 511, 512], "770": 50, "774b7a55db33": [570, 577], "77654033": [10, 598], "777": [24, 26, 27, 42], "7777": [24, 26, 27, 42], "78": [290, 373, 392, 397, 426, 486, 488, 509, 570, 574], "78187": [10, 598], "784578": 20, "785": [570, 582], "788": [570, 582], "789": [570, 582], "79": [415, 570, 574], "791": [570, 582], "79187": 20, "799": [570, 582], "799988": 20, "7fe0": [2, 20, 26, 28, 42, 50, 53, 67, 97, 131, 132, 133, 141, 143, 144, 145, 146, 147, 162, 209, 210, 211, 212, 220, 263, 267, 557, 563, 564, 570, 579, 583, 591, 596, 604], "8": [2, 8, 11, 20, 22, 23, 26, 27, 29, 30, 34, 36, 37, 38, 39, 41, 42, 44, 45, 50, 81, 131, 132, 133, 134, 174, 175, 206, 209, 211, 212, 216, 217, 218, 221, 239, 240, 247, 248, 251, 256, 257, 258, 259, 261, 264, 271, 273, 274, 276, 286, 295, 313, 373, 427, 434, 435, 457, 496, 514, 521, 532, 556, 572, 575, 579, 581, 583, 586, 589, 590, 591, 601, 606], "80": [2, 8, 20, 36, 41, 44, 45, 51, 53, 131, 132, 133, 144, 220, 233, 243, 248, 249, 263, 274, 287, 384, 386, 433, 606], "800": [36, 601], "804": [570, 582], "81": [41, 44, 45, 51, 131, 132, 133, 144, 220, 234, 244, 248, 249, 263, 274, 287, 385, 386, 431, 570, 574], "810": [570, 582], "815": [570, 582], "819": [570, 582], "8192": [20, 180], "82": [316, 570, 574], "820": [570, 582], "822": [570, 583], "826": [434, 435, 521, 570, 583], "826203": [26, 27], "83": [2, 8, 20], "833": 596, "835": [570, 582], "838": [570, 582], "84": [570, 574], "840": [8, 9, 12, 24, 26, 41, 44, 45, 50, 131, 132, 133, 144, 209, 212, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 243, 244, 245, 248, 249, 263, 274, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 570, 580, 581, 583, 585, 586, 591, 594, 596], "848": [570, 583], "84af4b240add": [570, 577], "85": 51, "850": [570, 582], "8508": 37, "852": [20, 570, 582], "856": [570, 582], "8601": [523, 527, 531], "862": 50, "862399669": 20, "862399761": 20, "864": [570, 582], "86e6b75b": 598, "87": [20, 37, 601], "87000000000": [24, 26, 27, 28], "871": [221, 259], "87507166259346337659265156363895084463": 521, "878": [570, 588], "88": [26, 27, 42, 285, 292, 305, 306, 310, 311, 348, 352, 355, 371, 393, 416, 437, 438, 440, 443, 469, 482, 519, 570, 574], "887": [570, 583, 596], "888": [26, 27, 42], "89": 11, "891": [570, 583], "892": [570, 583], "894": [570, 583], "896": [570, 583], "899": [570, 583], "8d": 11, "9": [20, 23, 26, 27, 36, 37, 38, 42, 50, 51, 81, 174, 175, 206, 288, 289, 293, 295, 304, 314, 335, 336, 356, 357, 358, 368, 423, 446, 447, 456, 472, 475, 483, 495, 510, 521, 580, 583, 586, 591, 606], "90": [2, 8, 20, 41, 44, 45, 51, 131, 132, 133, 144, 220, 230, 242, 248, 249, 263, 274, 287, 315, 378, 381, 570, 583], "904": 42, "905": [42, 50], "906": 42, "9063": [2, 8, 20], "907": 50, "909": 42, "91": [2, 8, 20, 41, 44, 45, 131, 132, 133, 144, 220, 229, 241, 248, 249, 263, 274, 287, 377, 381, 418, 570, 575, 583], "910": 42, "911": 42, "912": [20, 570, 583], "914": 42, "915": [570, 583], "916": [42, 570, 573], "917": [570, 583], "92": [144, 287, 380, 381, 570, 580, 581], "921600": [36, 37, 38], "921f9f01b866ep": [526, 529], "922": 42, "9223372036854775807": [130, 278], "923": 42, "924339": [2, 8, 20], "925": 42, "927": 42, "929": 42, "93": [51, 144, 287, 379, 381, 570, 575, 581], "932": [570, 583], "938": 42, "940": [570, 583], "942": [42, 570, 583], "947": [570, 583], "95": [20, 570, 576, 579], "951": [570, 583], "954": 42, "955": [20, 42], "959": 42, "96": [570, 575], "968": [570, 583], "97": [570, 575], "971": [570, 583, 604], "973283917": 20, "98": [570, 576], "981": [570, 583], "9834": 521, "984": 20, "984375": [526, 529], "98890234": [10, 598], "98892001": 598, "98892003": 598, "99": [26, 27, 42, 45, 209, 222, 248, 287, 324, 499], "994": [570, 583], "999": [26, 27, 42, 570, 583], "9990268": [26, 27], "9999": [26, 27, 42, 595], "999999999999ap": [526, 529], "9b92b336e7d4": [570, 577], "A": [10, 20, 28, 29, 30, 34, 36, 37, 38, 39, 42, 44, 52, 53, 54, 76, 77, 89, 104, 105, 107, 131, 132, 133, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 158, 159, 160, 162, 163, 170, 172, 173, 174, 175, 181, 182, 183, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 267, 268, 270, 272, 273, 274, 280, 496, 521, 522, 525, 530, 532, 543, 550, 553, 554, 567, 570, 580, 588, 591, 594, 596, 598, 601, 602, 604], "AS": [20, 32, 551], "AT": [32, 536, 570, 583, 588, 590], "And": [25, 26, 27, 28, 30, 570, 586, 594, 595, 596, 604, 606], "As": [43, 45, 47, 69, 525, 596, 601, 605], "At": [30, 34, 594, 605], "Be": 45, "But": 596, "By": [24, 26, 50, 170, 172, 529, 570, 574, 596, 602, 604], "For": [0, 17, 24, 26, 27, 29, 30, 34, 36, 37, 38, 39, 42, 43, 47, 49, 50, 52, 53, 120, 128, 131, 132, 133, 138, 144, 145, 148, 170, 172, 206, 219, 220, 238, 239, 240, 246, 247, 250, 251, 252, 262, 263, 264, 270, 271, 272, 274, 525, 530, 570, 576, 586, 591, 594, 595, 596, 598, 600, 601, 602, 604], "IN": [205, 277], "If": [24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 42, 43, 44, 50, 51, 52, 53, 54, 56, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 94, 97, 100, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 138, 141, 142, 143, 144, 145, 147, 148, 151, 152, 156, 158, 159, 160, 162, 163, 164, 167, 171, 172, 173, 174, 180, 181, 182, 183, 195, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 238, 239, 240, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 269, 270, 271, 272, 273, 275, 276, 277, 279, 281, 282, 496, 521, 522, 525, 526, 527, 528, 530, 532, 533, 537, 538, 539, 540, 545, 549, 552, 556, 570, 576, 588, 591, 593, 594, 595, 596, 597, 598, 600, 601, 602, 604, 605, 606], "In": [24, 25, 26, 27, 30, 34, 37, 39, 42, 44, 47, 50, 52, 53, 76, 131, 132, 133, 172, 260, 275, 496, 525, 532, 570, 578, 584, 586, 590, 591, 594, 595, 596, 598, 601, 602, 604], "Into": 594, "It": [17, 26, 27, 30, 34, 42, 43, 47, 50, 52, 54, 131, 132, 133, 145, 172, 183, 239, 570, 576, 577, 594, 595, 596, 597, 598, 600, 604, 606], "Its": 128, "NEAR": [37, 601], "NOT": [206, 238, 246, 266], "Near": [41, 44, 131, 132, 133, 144, 220, 234, 244, 248, 249, 263, 570, 591, 601], "No": [20, 36, 41, 175, 542, 593, 601, 602], "Not": [525, 535, 536, 537, 538, 539, 540, 545, 546, 548, 551], "OF": [32, 183, 570, 585, 602, 604], "ON": 20, "OR": 530, "Of": 10, "On": [20, 39, 180, 530, 597], "One": [16, 29, 47, 49, 52, 53, 108, 109, 110, 128, 131, 132, 133, 213, 221, 238, 239, 246, 252, 253, 259, 272, 594, 595], "Or": [42, 600], "That": [43, 47], "The": [0, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 56, 69, 76, 77, 78, 79, 97, 99, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 156, 158, 159, 160, 162, 164, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 195, 196, 198, 199, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 238, 239, 240, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 281, 282, 284, 496, 521, 522, 523, 525, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 567, 570, 573, 580, 581, 586, 591, 594, 595, 596, 597, 600, 601, 602, 604, 605, 606], "Then": [599, 600], "There": [36, 43, 48, 50, 131, 132, 133, 220, 263, 570, 581, 594, 595, 596, 597, 601, 606], "These": [1, 6, 7, 15, 40, 42, 43, 570, 586, 591, 596], "To": [10, 24, 26, 28, 36, 37, 38, 42, 43, 45, 49, 51, 52, 131, 132, 133, 154, 160, 239, 250, 252, 270, 272, 281, 528, 570, 576, 581, 586, 594, 595, 596, 598, 600, 601, 602, 604, 606], "Will": [44, 109], "With": [37, 131, 132, 133, 247, 496, 532, 601], "_": [175, 595], "_1sigmalowervalueofpopul": 605, "__class__": [523, 527], "__concepts_version__": [570, 591], "__contains__": [85, 570, 586], "__dir__": [570, 576], "__doc__": [0, 2, 8, 11, 14, 16, 20, 22], "__eq__": [570, 580, 588], "__getitem__": [131, 132, 133, 496, 532, 596], "__init__": [14, 128, 130, 131, 132, 133, 134, 156, 158, 159, 171, 172, 173, 205, 238, 239, 246, 247, 277, 278, 279, 280, 281, 496, 523, 525, 526, 527, 528, 529, 530, 531, 532], "__iter__": [570, 571, 586, 596], "__main__": [0, 14, 25, 26], "__name__": [0, 14, 25, 26], "__ne__": [570, 580], "__new__": 524, "__next__": [570, 586], "__setattr__": 84, "__str__": [570, 580, 588, 596], "__traceback__": 154, "__write_like_origin": 183, "_blob": 14, "_build": 595, "_check_dataset": 598, "_cid_dict": 279, "_concepts_dict": 279, "_dataset__write_like_origin": [131, 132, 133], "_define_assess": 170, "_define_empti": 170, "_define_encap_doc": 170, "_define_generic_cont": 170, "_define_generic_content_id": 170, "_define_hanging_protocol": 170, "_define_imag": 170, "_define_impl": 170, "_define_implant_assi": 170, "_define_implant_group": 170, "_define_key_object_doc": 170, "_define_palett": 170, "_define_pati": 170, "_define_present": 170, "_define_radiotherapi": 170, "_define_rt_dos": [170, 598], "_define_rt_plan": 170, "_define_rt_structure_set": 170, "_define_rt_treatment_record": 170, "_define_seri": 170, "_define_spectroscopi": 170, "_define_sr_docu": 170, "_define_studi": 170, "_define_surface_scan": 170, "_dicom_dict": 42, "_from_codifi": [24, 26], "_list": 596, "_new": 14, "_pretty_str": [8, 596], "_recordifi": 598, "_storage_sopclass_uid": [570, 586, 591], "_t": 555, "_validate_arrai": 601, "_validate_plugin": 604, "a1": 4, "a2": 4, "a3": 4, "ab": [496, 532, 556], "abc": 530, "abcd1234": [20, 596], "abil": [26, 27, 50, 570, 578, 579, 586, 591], "abl": [45, 47, 570, 585, 591, 597, 598, 606], "about": [42, 43, 50, 53, 94, 261, 276, 596, 598, 601, 604, 606], "abov": [18, 24, 25, 26, 27, 28, 42, 47, 49, 52, 128, 131, 132, 133, 206, 239, 250, 252, 270, 272, 570, 580, 595, 598, 604], "absenc": 145, "absent": [36, 37, 530, 606], "absolut": [33, 37, 104, 105, 106, 107, 131, 132, 133, 152, 156, 158, 159, 171, 172, 220, 263, 281, 525, 528, 570, 591, 601], "absorb_delimiter_item": 70, "abstract": [525, 598], "accept": [24, 26, 32, 43, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 131, 132, 133, 148, 570, 585, 586, 588, 590, 594], "access": [2, 8, 20, 23, 26, 27, 30, 34, 36, 37, 42, 45, 47, 49, 54, 56, 69, 82, 99, 131, 132, 133, 162, 567, 570, 572, 579, 585, 586, 590, 591, 595, 597, 598, 599, 601, 602, 603, 605], "accessionnumb": 595, "accident": [594, 598], "accomplish": 47, "accord": [32, 52, 162, 194, 596, 598], "accordingli": [37, 38, 131, 132, 133], "account": [39, 570, 591], "achiev": [53, 140], "acknowledg": [570, 577], "acm": [16, 47, 110], "acq": 20, "acquisit": [2, 8, 20], "acquisitiondata": 595, "across": [570, 576, 591], "act": 596, "activ": 600, "actual": [10, 20, 25, 26, 29, 30, 34, 37, 39, 42, 49, 128, 131, 132, 133, 172, 183, 206, 209, 212, 239, 240, 247, 250, 252, 264, 270, 272, 278, 594, 598, 601, 602, 604], "ad": [20, 25, 26, 27, 36, 37, 38, 42, 46, 53, 56, 80, 82, 84, 85, 89, 91, 96, 99, 100, 102, 103, 106, 128, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 147, 149, 150, 151, 152, 170, 172, 173, 181, 182, 183, 196, 205, 211, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 270, 271, 272, 275, 276, 279, 280, 281, 442, 496, 538, 540, 556, 570, 571, 572, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 588, 589, 590, 591, 593, 594, 597, 602, 605], "adam": 530, "adapt": [570, 581], "adapt_dataset_from_byt": 14, "add": [0, 2, 6, 10, 12, 15, 18, 19, 20, 25, 26, 27, 30, 34, 42, 43, 47, 49, 53, 108, 110, 111, 128, 131, 132, 133, 134, 138, 139, 170, 172, 173, 183, 220, 239, 247, 251, 260, 263, 271, 275, 525, 570, 579, 582, 588, 590, 591, 592, 594, 595, 596, 598, 601, 602, 606], "add_argu": [25, 26], "add_custom": [170, 172, 598], "add_dict_entri": [42, 47, 111, 570, 579, 582], "add_new": [16, 47, 131, 132, 133, 134, 596], "add_new_priv": [47, 131, 132, 133, 570, 591], "add_pars": [25, 26], "add_plugin": [30, 34, 239, 247], "add_private_dict_entri": [16, 42, 47, 570, 582], "add_subpars": [25, 26], "addit": [20, 26, 27, 28, 30, 34, 39, 76, 131, 132, 133, 171, 172, 220, 239, 240, 247, 250, 252, 260, 263, 264, 270, 272, 275, 527, 530, 531, 578, 586, 588, 591, 597, 598, 600, 601, 604], "addition": 530, "adher": 43, "adit": [570, 573], "adjust": 525, "admin": 600, "advanc": [30, 34, 53, 239], "advantag": [20, 570, 577], "ae": [2, 20, 26, 28, 32, 47, 196, 535, 551, 570, 579, 591, 596], "affect": [30, 34, 207, 208, 209, 210, 211, 212, 267, 525, 594, 595], "after": [2, 8, 20, 26, 27, 28, 29, 30, 34, 37, 47, 53, 131, 132, 133, 140, 142, 145, 151, 152, 167, 173, 178, 179, 180, 183, 196, 238, 239, 250, 252, 270, 272, 496, 525, 532, 570, 585, 588, 591, 594, 595, 596, 598, 600], "afterward": [152, 594], "ag": [20, 32], "again": [43, 52, 594, 598], "against": [43, 128, 172, 570, 575, 586], "agent": [2, 8, 20], "aid": [570, 578], "aim": [53, 570, 586], "al": 23, "algorithm": [38, 521], "alia": [130, 278, 570, 586], "alias": [570, 572, 585], "align": 49, "all": [4, 6, 8, 10, 12, 17, 20, 24, 26, 27, 28, 37, 39, 42, 43, 44, 46, 52, 54, 69, 97, 110, 128, 131, 132, 133, 136, 137, 138, 140, 145, 148, 156, 158, 159, 162, 172, 174, 181, 182, 183, 205, 220, 239, 240, 247, 250, 252, 263, 264, 270, 272, 277, 279, 287, 496, 525, 532, 563, 564, 570, 571, 572, 573, 576, 578, 581, 583, 586, 588, 589, 590, 591, 592, 594, 595, 596, 600, 601, 602, 604], "alloc": [2, 8, 20, 29, 36, 37, 38, 39, 41, 45, 53, 131, 132, 133, 209, 212, 220, 238, 239, 240, 246, 250, 251, 252, 260, 261, 263, 264, 265, 270, 271, 272, 273, 275, 276, 570, 590, 591, 602, 604, 606], "allow": [16, 17, 24, 26, 27, 36, 37, 39, 43, 47, 49, 56, 88, 131, 132, 133, 170, 172, 220, 251, 263, 271, 529, 570, 572, 573, 582, 585, 586, 588, 589, 590, 591, 600, 601, 602], "allow_ds_float": [559, 570, 576], "allow_excess_fram": [29, 602], "alltransfersyntax": [570, 586], "almar": [570, 574], "almost": 50, "alon": 76, "along": [23, 172, 240, 264, 601], "alpha": [20, 213, 253, 496, 532, 570, 582, 583, 605], "alphabet": [131, 132, 133, 496, 530, 532, 570, 590], "alphanumer": [172, 174, 570, 591], "alreadi": [26, 28, 36, 37, 38, 40, 44, 50, 53, 76, 109, 131, 132, 133, 135, 145, 173, 177, 196, 205, 220, 251, 260, 263, 271, 275, 524, 570, 578, 596, 598, 604, 606], "already_convert": 128, "also": [3, 17, 26, 27, 28, 29, 30, 32, 34, 37, 39, 42, 47, 50, 52, 53, 78, 118, 131, 132, 133, 167, 196, 220, 239, 240, 247, 250, 252, 263, 264, 270, 272, 281, 496, 525, 528, 530, 532, 570, 571, 572, 573, 574, 577, 578, 581, 582, 586, 591, 594, 595, 596, 597, 598, 600, 601, 604, 605, 606], "alter": 52, "altern": [10, 23, 42, 131, 216, 217, 218, 256, 257, 258, 594, 596, 598, 604], "although": [50, 172, 570, 591, 598, 604], "alwai": [26, 28, 45, 47, 50, 120, 128, 131, 132, 133, 134, 162, 209, 219, 239, 250, 252, 262, 270, 272, 274, 525, 570, 582, 586, 588, 591, 601, 602, 604], "am": 595, "ambigu": [181, 182, 570, 579, 581, 582, 586], "american": 53, "amongst": 173, "amount": [44, 131, 132, 133, 207, 220, 238, 263, 525, 601, 602, 604, 606], "an": [2, 10, 11, 16, 23, 24, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 42, 43, 44, 47, 48, 49, 50, 52, 53, 54, 56, 69, 76, 77, 78, 84, 85, 86, 89, 97, 106, 107, 109, 115, 118, 119, 125, 128, 129, 131, 132, 133, 134, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 162, 163, 172, 173, 182, 183, 193, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 238, 239, 240, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 263, 264, 266, 268, 269, 271, 272, 273, 275, 276, 277, 279, 281, 284, 496, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 549, 556, 567, 570, 573, 574, 580, 582, 583, 585, 586, 588, 589, 591, 594, 595, 596, 598, 600, 601, 602, 605, 606], "analog": [47, 131, 132, 133], "analys": [6, 21, 592], "anatom": 20, "ancestor": [172, 173, 181, 182], "angl": [2, 8, 20], "ani": [0, 10, 24, 26, 27, 29, 30, 32, 34, 36, 37, 39, 42, 43, 48, 49, 51, 79, 92, 106, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 131, 132, 133, 135, 138, 139, 140, 154, 156, 157, 158, 159, 164, 172, 173, 183, 196, 205, 206, 217, 218, 219, 220, 238, 239, 240, 246, 247, 250, 251, 252, 257, 258, 262, 263, 264, 268, 270, 271, 272, 279, 281, 282, 496, 523, 525, 526, 527, 528, 529, 530, 531, 532, 544, 548, 554, 555, 570, 572, 573, 582, 588, 591, 594, 595, 598, 600, 601, 602, 604], "annex": [10, 36, 37, 38, 39, 50, 51, 128, 131, 132, 133, 138, 140, 143, 144, 145, 146, 147, 148, 150, 151, 170, 209, 214, 215, 216, 217, 218, 221, 251, 254, 255, 256, 257, 258, 259, 261, 271, 274, 276, 521, 598], "announc": 97, "anonym": [6, 15, 19, 42, 47, 570, 571, 572, 582, 592], "anoth": [43, 221, 259, 570, 586, 596], "answer": [38, 593, 596], "anterior": 20, "anymor": 93, "anyon": [570, 578], "anyth": [32, 47, 49, 50, 251, 271, 601], "anywher": [42, 596], "apertur": 18, "api": [53, 131, 132, 133, 239, 240, 247, 250, 252, 264, 270, 272, 570, 580, 594, 597, 605], "app": 22, "app14": [570, 588], "appear": [154, 598], "append": [4, 11, 18, 20, 42, 140, 205, 277, 521, 596, 606], "appli": [1, 6, 10, 16, 29, 36, 39, 50, 51, 67, 78, 80, 131, 132, 133, 172, 213, 214, 215, 216, 217, 218, 238, 239, 250, 252, 253, 254, 255, 256, 257, 258, 270, 272, 565, 570, 583, 586, 595, 600, 601, 606], "applic": [2, 20, 26, 27, 28, 32, 43, 44, 47, 196, 596, 601], "apply_color_lut": [50, 559, 570, 583, 591], "apply_j2k_correct": [559, 570, 591], "apply_j2k_sign_correct": 29, "apply_jls_sign_correct": 29, "apply_modality_lut": [50, 216, 217, 218, 256, 257, 258, 559, 570, 583, 585, 591], "apply_rescal": [559, 570, 586, 591, 604], "apply_voi": [217, 218, 257, 258, 559, 570, 586, 591], "apply_voi_lut": [50, 559, 570, 583, 585, 586, 591], "apply_window": [216, 217, 256, 257, 559, 570, 586, 591], "approach": 203, "appropri": [44, 49, 50, 167, 205, 211, 238, 525, 554, 570, 591, 601, 602], "approv": [594, 595], "approx": [570, 573, 577], "approxim": 52, "appveyor": [570, 579], "apr": 595, "ar": [4, 10, 18, 24, 26, 27, 28, 29, 36, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 56, 69, 76, 77, 81, 82, 85, 94, 97, 101, 102, 108, 110, 111, 128, 131, 132, 133, 134, 135, 138, 139, 141, 143, 144, 145, 146, 147, 148, 156, 158, 159, 162, 167, 170, 172, 175, 181, 182, 183, 196, 205, 207, 208, 212, 213, 214, 215, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 247, 250, 252, 253, 254, 255, 257, 258, 260, 262, 265, 268, 270, 272, 273, 275, 279, 281, 496, 525, 527, 528, 530, 531, 532, 533, 548, 551, 553, 555, 570, 576, 581, 582, 583, 585, 586, 588, 589, 591, 593, 594, 595, 596, 598, 600, 601, 602, 604, 605, 606], "arang": [3, 606], "archibald": [10, 598], "archiv": 20, "area": 594, "aren": [172, 238, 239, 247, 570, 591, 596, 598, 602], "arg": [25, 26, 131, 132, 133, 154, 156, 157, 158, 159, 282, 496, 523, 527, 530, 531, 532, 570, 574], "arg2": [282, 570, 573], "argpars": [25, 26], "argument": [24, 25, 26, 27, 28, 42, 44, 53, 92, 131, 132, 133, 181, 182, 183, 204, 205, 277, 279, 281, 496, 525, 527, 528, 531, 532, 570, 572, 573, 581, 582, 583, 584, 585, 586, 591, 597, 598, 601, 604], "argv": [0, 4, 14], "arithmet": 525, "around": [42, 570, 591, 594], "arr": [2, 3, 37, 42, 49, 50, 51, 53, 131, 132, 133, 206, 213, 214, 215, 216, 217, 218, 220, 221, 238, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 269, 270, 271, 272, 274, 275, 601, 602, 604, 606], "arr_downsampl": 2, "arrai": [2, 4, 14, 20, 26, 28, 29, 37, 42, 49, 50, 51, 52, 53, 82, 97, 102, 128, 131, 132, 133, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 238, 239, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 270, 271, 272, 274, 275, 281, 524, 528, 570, 571, 581, 582, 585, 586, 591, 596, 602, 604], "array_equ": 601, "artifact": 595, "as_arrai": [29, 211, 239, 261, 276, 604], "as_buff": [29, 239], "as_float": 273, "as_fram": 238, "as_integer_ratio": [281, 525, 526, 528, 529], "as_pixel_opt": 559, "as_raw": [3, 51, 556, 570, 590, 606], "as_rgb": [29, 131, 132, 133, 240, 264, 601], "as_tupl": 525, "ascii": [32, 175, 201, 496, 532, 570, 582], "ask": [38, 593, 594, 595], "aspect": 4, "assert": [36, 37, 594, 597, 601, 602, 604], "assess": 170, "assi": 170, "assign": [17, 42, 69, 128, 570, 576, 583, 589], "associ": [131, 132, 133, 238, 246], "assum": [4, 25, 26, 37, 44, 50, 89, 145, 496, 532, 570, 579, 598, 601, 604, 606], "assume_implicit_vr_switch": [559, 570, 588], "astimezon": 527, "astyp": [602, 606], "at_top_level": 163, "attach": 172, "attempt": [29, 30, 34, 144, 182, 183, 556, 570, 579, 588, 591, 596], "attr": 53, "attribut": [32, 39, 47, 69, 84, 128, 130, 131, 132, 133, 155, 156, 158, 159, 171, 172, 173, 183, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 264, 278, 279, 280, 281, 496, 523, 525, 526, 527, 528, 529, 530, 531, 532, 567, 570, 571, 581, 586, 589, 590, 591, 596, 598], "attributeerror": [181, 206, 207, 209, 211, 212, 239, 247, 570, 573, 589, 591, 596], "audio": [51, 606], "august": 23, "author": [2, 8, 9, 11, 12, 16, 17, 20, 22], "auto": [20, 131, 132, 133, 279, 527, 531, 570, 571], "auto_exampl": [5, 13, 19, 21], "auto_examples_jupyt": 6, "auto_examples_python": 6, "auto_format": [524, 525, 526, 570, 588], "autocomplet": [131, 132, 133, 279], "automat": [26, 27, 42, 44, 47, 49, 50, 52, 53, 97, 128, 131, 132, 133, 172, 181, 182, 183, 525, 526, 570, 579, 583, 585, 588, 591, 594, 595, 596, 602], "avail": [1, 6, 10, 15, 24, 26, 27, 28, 30, 33, 34, 41, 42, 47, 48, 50, 51, 52, 106, 131, 132, 133, 138, 139, 141, 143, 147, 156, 158, 159, 172, 207, 208, 210, 220, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 247, 250, 252, 261, 263, 264, 268, 270, 272, 276, 280, 530, 538, 540, 567, 570, 572, 573, 577, 579, 580, 581, 583, 586, 598, 600, 601, 604, 605, 606], "available_plugin": [239, 247], "averag": [2, 8, 20], "averagin": 2, "avf": 606, "avg": 20, "avl": 606, "avoid": [43, 103, 163, 180, 524, 570, 582, 583, 586, 598, 601, 604], "avr": 606, "awai": 598, "awar": [30, 34, 52, 598], "ax": 3, "ax1": 606, "ax2": 606, "ax_aspect": 4, "axesimag": 48, "axi": 606, "axial": [1, 5, 6, 20, 26, 28, 47, 570, 582, 592, 596], "azimuth": 20, "b": [2, 8, 12, 16, 20, 22, 26, 27, 28, 37, 39, 42, 47, 49, 50, 128, 131, 132, 133, 156, 158, 159, 183, 521, 525, 530, 594, 595, 596, 602, 604], "b1": 39, "b2": 39, "b6b3658f3b14": [570, 576], "b764": 598, "back": [2, 14, 16, 20, 38, 49, 50, 52, 53, 594, 595, 596, 598], "backend": [29, 131, 132, 133, 570, 591, 601], "backslash": [128, 131, 132, 133, 530, 550, 570, 571, 572, 588], "backup": 172, "backward": [131, 132, 133, 570, 573, 579], "bad": [570, 579, 589], "balanc": 43, "bar": [570, 590], "bari": 605, "base": [6, 21, 23, 36, 37, 38, 39, 70, 81, 131, 132, 133, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 243, 244, 245, 279, 523, 525, 527, 531, 559, 563, 564, 570, 573, 579, 583, 586, 592, 594, 595, 598, 601, 604, 606], "base64": [128, 131, 132, 133, 597], "baselin": [20, 39, 41, 44, 45, 50, 144, 231, 248, 274, 496, 570, 590, 601, 606], "basetag": [32, 42, 60, 85, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 130, 131, 132, 133, 134, 160, 162, 163, 166, 172, 176, 178, 179, 180, 250, 252, 270, 272, 282, 283, 284, 536, 552, 570, 573, 588], "basic": [11, 26, 27, 28, 44, 51, 52, 54, 71, 131, 132, 133, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 220, 263, 570, 583, 591, 598, 599, 601, 604, 606], "bb": 22, "bbh": 20, "beam": [11, 18, 24, 26, 27, 28, 570, 576], "beam0": 18, "beam1": 42, "beamdosespecificationpoint": [24, 26], "beamnam": [11, 18, 42], "beamnumb": [11, 24, 26, 27, 28], "beamsequ": [11, 18, 24, 26, 27, 28, 42, 131, 570, 576], "bec3": 598, "becaus": [10, 24, 26, 37, 38, 39, 42, 49, 50, 52, 53, 69, 154, 172, 594, 595, 596, 601, 602, 604], "becom": [96, 570, 576, 586, 594, 595, 598], "been": [10, 25, 26, 39, 41, 45, 47, 50, 82, 89, 91, 131, 132, 133, 138, 139, 141, 142, 143, 144, 145, 147, 164, 171, 172, 174, 183, 195, 196, 238, 239, 246, 251, 271, 496, 524, 525, 532, 570, 573, 580, 585, 588, 589, 591, 594, 595, 596, 597, 601, 602, 604], "befor": [38, 45, 47, 91, 128, 131, 132, 133, 162, 173, 180, 217, 218, 238, 239, 257, 258, 496, 532, 570, 573, 576, 577, 579, 582, 594, 595, 596, 598, 604, 606], "beforehand": 600, "began": 605, "begin": [42, 100, 138, 151, 167, 281, 496, 528, 532], "behav": [43, 111, 205, 570, 580, 582, 598], "behavior": [42, 43, 56, 84, 85, 96, 131, 132, 133, 570, 577, 581, 585, 586], "being": [37, 39, 103, 112, 113, 114, 116, 117, 120, 122, 123, 124, 127, 131, 132, 133, 145, 156, 158, 159, 212, 247, 570, 571, 581, 588, 589, 591, 598, 600, 601, 602, 604], "belong": [129, 131, 132, 133, 171, 172], "below": [26, 28, 32, 36, 37, 38, 41, 44, 47, 173, 183, 206, 209, 211, 212, 274, 556, 570, 573, 598, 602, 604, 605], "best": [29, 46, 69], "beta": 597, "better": [37, 53, 570, 574, 576, 580], "between": [6, 21, 37, 38, 49, 50, 53, 109, 206, 496, 532, 570, 591, 592, 594, 595, 596, 601], "beyond": 601, "big": [29, 33, 34, 39, 45, 131, 132, 133, 141, 142, 143, 147, 151, 152, 156, 158, 159, 183, 209, 212, 223, 239, 248, 281, 287, 496, 522, 528, 570, 590, 591, 606], "bigger": [52, 570, 585], "bin": [281, 528, 594, 595], "binari": [24, 26, 128, 131, 132, 133, 251, 271, 281, 525, 528, 570, 574, 582, 583, 591], "binaryio": [131, 132, 133, 160, 162, 163, 164, 166, 167, 168, 169, 176, 177, 178, 179, 180, 183, 238, 239, 246, 250, 252, 270, 272, 570, 591], "biopsi": 20, "birth": [2, 8, 17, 20], "bit": [2, 8, 20, 29, 30, 32, 34, 37, 38, 39, 41, 45, 49, 50, 53, 131, 132, 133, 134, 148, 209, 212, 214, 215, 220, 221, 238, 239, 240, 246, 247, 248, 250, 251, 252, 254, 255, 259, 260, 261, 263, 264, 265, 270, 271, 272, 273, 275, 276, 281, 528, 570, 580, 581, 583, 588, 589, 590, 591, 594, 595, 601, 604, 606], "bit_count": [281, 528], "bit_length": [281, 528], "bits_alloc": [29, 30, 34, 219, 238, 246, 247, 262, 265], "bits_stor": [29, 30, 34, 131, 132, 133, 219, 238, 246, 247, 260, 262, 275], "bitsalloc": [36, 37, 38, 44, 45, 128, 209, 211, 212, 266, 267, 273, 570, 581, 601, 602], "bitsstor": [26, 28, 36, 37, 209, 211, 267, 601, 602], "black": [36, 37, 38, 570, 591], "blank": [16, 17, 109, 205, 524, 570, 572, 596], "blend": 20, "blob": 14, "block": [16, 18, 20, 26, 27, 28, 36, 47, 131, 132, 133, 134, 570, 585, 591, 595], "block1": 18, "block2": 18, "block_ds1": 18, "block_ds2": 18, "block_ds3": 18, "block_start": 134, "blocknam": 18, "blocksequ": 18, "blocktyp": 18, "blue": [36, 37, 38, 39, 570, 585], "bn": 39, "boli": [26, 28], "bolu": [2, 8, 20], "bond": 14, "bone": 20, "boolboolean": 602, "bot": 148, "both": [29, 37, 38, 43, 76, 81, 82, 97, 148, 172, 217, 257, 525, 570, 572, 579, 582, 585, 591, 597, 601], "bottom": [20, 53, 594, 595], "boundari": [144, 496, 532, 570, 591], "bowti": 20, "box": [23, 53], "brace": [496, 532], "brachi": [26, 27, 28], "bracket": [42, 47, 596], "brain": [10, 598], "branch": [596, 600], "break": [43, 496, 532, 570, 586, 598], "brett": [570, 578], "briefli": [598, 604], "broken": 50, "browser": 595, "bubbl": [131, 132, 133], "buffer": [14, 29, 131, 132, 133, 141, 142, 143, 146, 147, 151, 152, 156, 158, 159, 162, 183, 195, 209, 238, 239, 246, 281, 528, 570, 591], "bug": [574, 578, 582, 585, 588, 593, 594, 600], "build": [0, 4, 181, 182, 570, 579, 590, 594], "build_tre": 0, "built": [53, 281, 528, 600], "bulk": [50, 128, 131, 132, 133, 559, 570, 583, 584, 587, 597, 604], "bulk_data_element_handl": [128, 131, 132, 133, 597], "bulk_data_handl": 597, "bulk_data_read": 597, "bulk_data_threshold": [128, 131, 132, 133, 570, 584, 597], "bulk_data_uri": 597, "bulk_data_uri_handl": [128, 131, 132, 133, 570, 586, 597], "bulkdatauri": [128, 131, 132, 133, 597], "bullet": [570, 573], "button": 20, "bypass": 56, "byte": [14, 24, 26, 29, 30, 32, 33, 34, 37, 39, 42, 44, 49, 50, 51, 52, 77, 78, 79, 89, 90, 111, 128, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 161, 162, 163, 164, 165, 167, 177, 178, 179, 180, 181, 182, 183, 188, 189, 193, 195, 196, 204, 206, 238, 239, 246, 247, 251, 261, 265, 266, 268, 271, 276, 281, 496, 528, 530, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 570, 581, 582, 583, 588, 591, 596, 598, 601, 602, 604, 606], "byte_str": [535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553], "bytearrai": [29, 30, 34, 131, 132, 133, 141, 142, 143, 147, 151, 152, 156, 158, 159, 238, 239, 246, 265, 281, 528], "bytelength": [163, 168], "byteord": [29, 33, 34, 281, 528, 606], "bytes_to_find": 177, "bytesio": [14, 16, 132, 156, 570, 591, 596], "byteslengthexcept": [570, 590], "bytestr": [183, 265], "bytestream": [144, 146], "c": [2, 10, 18, 20, 22, 24, 26, 27, 28, 32, 39, 42, 47, 50, 51, 93, 131, 132, 133, 206, 209, 214, 215, 216, 217, 218, 221, 254, 255, 256, 257, 258, 259, 274, 525, 551, 570, 577, 596, 597, 598, 600, 601, 602, 604, 606], "c313d2befb08": [570, 576], "cach": [594, 600], "cal": 20, "calcul": [570, 588, 590], "calibr": 20, "call": [10, 25, 26, 39, 42, 43, 44, 49, 52, 81, 85, 91, 131, 132, 133, 145, 156, 158, 159, 160, 172, 179, 183, 205, 238, 496, 524, 532, 570, 573, 576, 580, 586, 591, 596, 598, 601, 604], "call_back": 163, "callabl": [91, 128, 131, 132, 133, 160, 163, 166, 170, 205, 238, 246, 555], "callback": [17, 25, 26, 131, 132, 133, 570, 579], "caller": [162, 570, 573], "camel": [84, 570, 586], "can": [1, 6, 10, 14, 17, 24, 25, 26, 27, 28, 30, 32, 34, 37, 39, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 69, 96, 131, 132, 133, 138, 139, 158, 159, 162, 163, 170, 172, 183, 198, 205, 239, 247, 279, 496, 522, 524, 525, 529, 532, 555, 567, 570, 571, 572, 573, 576, 585, 586, 589, 591, 594, 595, 596, 597, 598, 600, 601, 602, 604, 605, 606], "cancel": 172, "cannot": [42, 45, 85, 131, 132, 133, 172, 183, 205, 220, 263, 525, 529, 533, 570, 588, 591, 594, 598], "canon": 525, "capabl": 605, "capac": 45, "capit": [53, 496, 525, 532, 570, 576], "captur": 594, "carotid": [10, 598], "carri": [524, 525, 570, 578], "case": [25, 26, 29, 37, 42, 43, 47, 52, 56, 76, 78, 84, 131, 132, 133, 163, 220, 239, 263, 279, 496, 525, 530, 532, 570, 582, 586, 591, 596, 597, 601, 602, 604, 606], "casefold": [496, 532], "caseless": [496, 532], "catch": [570, 573, 575], "caus": [30, 34, 533, 570, 572, 598], "caution": 596, "cb": 265, "cd": [594, 595, 598], "cell": 20, "center": [2, 8, 20, 217, 218, 257, 258, 496, 532, 596], "central": 2, "certain": [52, 131, 132, 133, 274, 595, 596], "certainli": 52, "ch": [37, 606], "ch1": 606, "ch2": 606, "ch_idx": 3, "ch_item": 3, "ch_sourc": 3, "chain": 20, "chan": 20, "chanc": 596, "chang": [10, 12, 25, 26, 27, 30, 34, 38, 43, 44, 49, 50, 53, 56, 82, 96, 106, 128, 131, 132, 133, 148, 156, 158, 159, 172, 174, 181, 182, 183, 207, 208, 209, 210, 211, 212, 217, 221, 238, 251, 257, 259, 261, 271, 274, 276, 521, 525, 538, 540, 585, 593, 596, 597, 599, 600, 601, 602, 605], "channel": [3, 20, 37, 39, 50, 51, 131, 132, 133, 209, 556, 602, 606], "channeldefinitionsequ": [3, 606], "channelsampleskew": 606, "channelsensit": 606, "channelsensitivityunitssequ": [3, 606], "channelsourcesequ": [3, 606], "chapter": [39, 521], "chapter_7": 595, "char": [496, 532], "charact": [10, 20, 26, 28, 32, 43, 47, 53, 56, 76, 77, 78, 79, 89, 128, 129, 131, 132, 133, 134, 162, 163, 172, 173, 174, 175, 195, 198, 199, 200, 496, 521, 530, 532, 533, 534, 538, 540, 543, 544, 550, 553, 554, 559, 570, 571, 572, 579, 581, 582, 585, 586, 588, 589, 590, 591, 594, 596, 597, 598], "character_encod": [131, 132, 133], "character_set": 596, "charl": 600, "charpyl": [570, 590, 600], "charset": [104, 559, 570, 590], "chdef": 606, "chdef_seq": 606, "check": [3, 12, 42, 43, 115, 116, 118, 119, 121, 125, 126, 131, 132, 133, 135, 175, 183, 196, 524, 534, 570, 576, 579, 581, 582, 585, 586, 588, 591, 594, 595, 600, 602, 606], "checkout": [594, 595], "checksum": 20, "chief": 530, "child": 173, "children": 173, "chines": [570, 571, 579], "choic": [601, 602], "choos": [594, 595, 601], "chosen": [525, 602, 604, 606], "chtml": 53, "ci": [570, 591], "cid": [279, 280, 567, 605], "cid1234": 279, "cid270": 605, "cid4": 567, "cid6": 567, "cid_concept": 279, "cid_for_nam": 605, "circl": 602, "circleci": 595, "circumst": [138, 139], "citat": 23, "citizen": [84, 128, 131, 596], "clam": 0, "clarif": [594, 595], "clariti": [570, 579], "class": [2, 8, 9, 12, 14, 20, 26, 27, 28, 29, 30, 34, 42, 47, 50, 51, 53, 54, 56, 69, 70, 81, 128, 130, 131, 132, 133, 134, 135, 156, 158, 159, 162, 171, 172, 173, 183, 196, 205, 238, 239, 246, 247, 277, 278, 279, 280, 281, 434, 496, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 559, 563, 564, 570, 571, 572, 573, 576, 577, 578, 579, 580, 581, 583, 585, 586, 589, 590, 591, 595, 596, 598, 604, 605], "classmethod": [128, 131, 132, 133, 530], "clean": [524, 570, 579, 594, 595], "clear": [47, 128, 131, 132, 133, 172, 205, 277, 570, 591], "cli": [570, 590], "click": [594, 595], "clip": [20, 37], "clone": [26, 27, 594, 595, 600], "close": [156, 158, 159, 162, 166, 570, 572, 573, 601, 602], "closest": [181, 182, 525], "clunie1": [2, 20, 26, 28, 47, 596], "cm": [9, 11, 48], "cmap": [9, 48, 604], "co": [131, 606], "code": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 32, 36, 42, 46, 47, 52, 77, 78, 96, 131, 132, 133, 160, 162, 165, 279, 496, 532, 559, 567, 570, 571, 573, 577, 578, 579, 581, 583, 586, 588, 591, 593, 595, 599, 600, 605, 606], "code_fil": 52, "codec": [496, 532], "codedict": 605, "codemean": [3, 606], "codestream": [29, 131, 132, 133, 220, 263, 268, 601], "codevalu": 606, "codifi": [25, 27, 46, 570, 578, 580, 588, 590, 591], "codingschemedesign": 606, "codingschemevers": 606, "coeffici": [20, 26, 27, 525], "coll": [26, 28], "collect": [20, 47, 56, 133, 163, 280, 559, 598], "collis": [570, 572], "color": [29, 30, 33, 34, 36, 37, 38, 39, 46, 131, 132, 133, 213, 221, 238, 247, 253, 259, 260, 275, 570, 583, 585, 601, 602, 604], "color3d_jpeg_baselin": 69, "colour": [213, 253], "colourspac": [97, 570, 588], "column": [0, 2, 8, 9, 20, 26, 28, 29, 30, 34, 37, 39, 49, 50, 131, 132, 133, 206, 209, 211, 212, 219, 220, 221, 238, 239, 246, 247, 250, 251, 252, 259, 260, 262, 263, 266, 267, 270, 271, 272, 274, 275, 601, 602, 604], "columnconfigur": 0, "com": [2, 8, 9, 11, 12, 17, 20, 22, 23, 594, 595, 600], "combin": [131, 132, 133, 282, 527, 596, 606], "comfort": 601, "comma": 53, "command": [25, 27, 40, 52, 131, 132, 133, 183, 279, 570, 578, 588, 590, 591, 594, 595, 600], "command1": [25, 26], "command1modul": [25, 26], "command2": [25, 26], "command2modul": [25, 26], "comment": [2, 8, 20, 594], "commit": [570, 591], "common": [37, 47, 51, 52, 76, 570, 581, 598, 604, 606], "commonli": [45, 131, 132, 133, 239, 250, 252, 270, 272, 598, 604], "commun": [570, 586], "comp": [10, 20, 26, 28, 598], "compani": 47, "compar": [20, 56, 496, 525, 532, 570, 577, 580, 588, 591, 594, 595, 602], "compare_sign": 525, "compare_tot": 525, "compare_total_mag": 525, "comparison": [496, 525, 532, 570, 575, 580], "compat": [43, 44, 131, 132, 133, 523, 525, 527, 570, 573, 574, 576, 577, 578, 579, 591, 600], "compil": [446, 447], "complement": [34, 39, 54, 247, 281, 528], "complet": [20, 24, 26, 34, 52, 131, 132, 133, 143, 146, 180, 279, 570, 571, 594, 598, 600, 602], "complex": [50, 281, 526, 528, 529, 604], "compliant": [12, 52, 570, 579], "complic": [37, 598, 601], "compon": [36, 39, 80, 144, 173, 175, 211, 268, 530, 570, 571, 573, 588, 601], "compress": [20, 23, 29, 30, 33, 34, 36, 37, 38, 39, 40, 46, 50, 54, 131, 132, 133, 138, 139, 144, 145, 225, 226, 227, 229, 230, 233, 234, 238, 239, 240, 241, 242, 243, 244, 246, 250, 252, 260, 264, 270, 272, 274, 275, 496, 559, 563, 564, 570, 579, 581, 583, 588, 589, 591, 600, 602, 603], "compressedsampl": [2, 8, 9, 20, 26, 28, 69, 595, 596], "compression_ratio": 33, "comput": 20, "concaten": [37, 137, 148, 496, 532, 602], "concept": [278, 279, 559, 570, 591], "concern": 48, "conda": [601, 602, 604, 606], "condit": [162, 166, 525, 570, 579], "condition": [30, 606], "config": [32, 43, 529, 551, 559, 570, 576, 581, 582, 583, 585, 586, 588, 591], "configur": [0, 29, 36, 39, 43, 99, 128, 131, 132, 133, 220, 238, 246, 260, 263, 274, 275, 559, 570, 581, 588, 589, 602], "conform": [56, 128, 131, 132, 133, 172, 175, 183, 196, 203, 212, 570, 579, 581, 582, 591, 596, 598, 601, 602, 604], "confus": [570, 591], "congratul": 596, "conjug": [281, 525, 526, 528, 529], "conjunct": [251, 271], "connect": [570, 586], "conserv": 203, "consid": [10, 25, 26, 52, 131, 132, 133, 496, 532, 594, 595, 597], "consist": [51, 132, 183, 278, 570, 576, 595, 604, 606], "consolid": [570, 577], "constant": [570, 586, 591, 606], "constrain": 39, "constraint": [37, 39, 525, 526, 533], "construct": [523, 525, 526, 527, 530, 570, 576, 577, 588], "constructor": 205, "consumpt": [570, 581], "contain": [0, 10, 24, 26, 29, 30, 32, 34, 39, 40, 42, 43, 47, 49, 50, 51, 52, 53, 54, 56, 69, 76, 78, 128, 130, 131, 132, 133, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 162, 163, 170, 177, 181, 182, 183, 196, 199, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 238, 239, 240, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 282, 496, 523, 527, 530, 532, 534, 538, 540, 556, 567, 570, 578, 581, 588, 591, 594, 596, 598, 601, 602, 604, 606], "content": [10, 12, 14, 20, 42, 56, 131, 132, 133, 141, 144, 206, 209, 210, 211, 212, 219, 220, 239, 262, 263, 274, 595, 596, 598, 601], "contentd": 12, "contenttim": 12, "context": [162, 284, 525, 559, 570, 579, 596], "contigu": 39, "continu": [137, 570, 571, 588], "contrast": [2, 8, 10, 20, 598], "contrib": 573, "contribut": [25, 26, 570, 573, 576, 577, 599], "contributing_cod": 595, "contributing_doc": 595, "contributor": 16, "control": [26, 27, 29, 36, 37, 84, 85, 101, 102, 131, 132, 133, 239, 250, 252, 270, 272, 570, 576, 591, 598, 601], "controlpointsequ": 11, "conveni": [42, 47, 50, 128, 570, 586, 591, 597], "convent": [25, 26, 42, 530], "convers": [29, 30, 34, 36, 37, 38, 39, 93, 128, 206, 209, 211, 212, 556, 570, 572, 582, 583, 585, 597, 601, 604, 606], "convert": [14, 29, 30, 34, 36, 37, 38, 39, 50, 76, 77, 79, 85, 88, 90, 93, 97, 129, 131, 132, 133, 172, 183, 205, 206, 207, 208, 209, 210, 211, 212, 221, 238, 239, 240, 247, 250, 252, 259, 264, 270, 272, 281, 496, 525, 527, 528, 532, 556, 570, 573, 576, 579, 582, 583, 586, 587, 588, 591, 595, 596, 601, 602, 606], "convert_ae_str": 60, "convert_atvalu": 60, "convert_color_spac": [38, 50, 559, 570, 588, 591, 601, 604], "convert_da_str": 60, "convert_ds_str": 60, "convert_dt_str": 60, "convert_encod": 559, "convert_is_str": 60, "convert_numb": [60, 181, 182], "convert_obvalu": 60, "convert_owvalu": 60, "convert_pixel_data": [97, 131, 132, 133, 570, 591], "convert_pn": 60, "convert_single_str": 60, "convert_sq": 60, "convert_str": 60, "convert_tag": 60, "convert_text": 60, "convert_tm_str": 60, "convert_ui": 60, "convert_un": 60, "convert_ur_str": 60, "convert_valu": 60, "convert_wrong_length_to_un": [559, 570, 588], "convolut": 20, "coord": 20, "coordin": [20, 26, 27, 42], "copi": [2, 10, 52, 131, 132, 133, 172, 496, 525, 532, 570, 576, 586, 589, 591, 594, 595, 598, 600], "copy_ab": 525, "copy_neg": 525, "copy_sign": 525, "copyfil": 598, "copyright": 595, "copytre": 598, "cor_aspect": 4, "core": [46, 54], "cornea": 567, "corner": 20, "coron": [1, 5, 6, 567, 570, 582, 592], "correct": [4, 16, 20, 24, 26, 29, 36, 37, 38, 39, 43, 45, 49, 51, 76, 80, 97, 131, 132, 133, 162, 177, 181, 182, 205, 211, 220, 251, 263, 271, 570, 580, 581, 583, 588, 589, 591, 594, 596, 606], "correct_ambiguous_vr": 70, "correct_ambiguous_vr_el": 70, "correct_unused_bit": 29, "correctli": [32, 47, 52, 97, 172, 207, 208, 525, 570, 573, 576, 579, 580, 582, 583, 586, 588, 589, 590, 591, 594], "correspond": [10, 17, 29, 30, 34, 36, 37, 38, 41, 42, 44, 49, 50, 51, 53, 76, 106, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 138, 139, 164, 171, 172, 173, 183, 206, 213, 220, 238, 239, 240, 246, 247, 248, 249, 253, 260, 263, 264, 269, 274, 275, 282, 496, 522, 523, 527, 556, 570, 588, 591, 594, 595, 598, 601, 604, 606], "cosin": 606, "cost": 598, "couch": [26, 28], "couchdb": [570, 574], "could": [3, 24, 25, 26, 50, 52, 76, 77, 79, 205, 207, 570, 573, 574, 588, 594, 595], "count": [4, 130, 205, 277, 278, 281, 496, 528, 532], "counter": 20, "coupl": 598, "courier": 0, "cours": [10, 604], "cover": [30, 34, 596, 598, 604, 606], "coverag": [570, 579, 594], "cp0": 11, "cp805": [570, 573], "cr": [10, 265, 598], "cr1": 598, "cr2": 598, "cr3": 598, "crash": [570, 580, 589, 590], "creat": [0, 4, 12, 14, 16, 18, 24, 25, 26, 27, 42, 43, 47, 52, 54, 88, 128, 129, 131, 132, 133, 156, 158, 159, 160, 170, 171, 172, 173, 183, 205, 238, 239, 246, 247, 279, 280, 282, 496, 521, 523, 524, 526, 527, 529, 530, 559, 570, 573, 575, 588, 590, 591, 596, 600, 601, 604, 605, 606], "create_data_el": 207, "create_imag": 207, "creation": [2, 8, 12, 20, 26, 27, 28, 42, 170, 570, 582, 596, 598, 603], "creator": [2, 8, 16, 20, 26, 28, 47, 110, 111, 119, 122, 123, 124, 131, 132, 133, 134, 196, 281, 570, 580, 585, 590, 596, 598], "credit": 595, "ct": [1, 5, 6, 9, 10, 12, 20, 26, 28, 36, 37, 38, 42, 44, 47, 48, 50, 69, 131, 132, 133, 172, 220, 263, 279, 570, 582, 592, 596, 597, 598, 601, 604], "ct01": [20, 47], "ct01_oc0": 20, "ct1": [9, 20, 26, 28, 69, 595, 596], "ct2": 598, "ct_compressed_bas": [44, 601], "ct_compressed_ext": [44, 601], "ct_rle_lossless": [44, 131, 132, 133, 220, 263], "ct_small": [9, 26, 28, 69, 162, 595, 596], "ctime": [523, 527], "cumul": [26, 27], "current": [0, 20, 24, 26, 28, 39, 43, 44, 53, 96, 128, 131, 132, 133, 156, 158, 159, 172, 173, 181, 182, 189, 213, 221, 253, 259, 523, 525, 527, 530, 570, 588, 595, 598, 600], "curv": [17, 606], "curve_typ": 606, "curves_callback": 17, "custom": [8, 26, 28, 131, 132, 133, 170, 172, 570, 571, 572, 579, 582, 586, 601, 604], "cython": 600, "d": [0, 2, 3, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 60, 65, 69, 81, 82, 84, 85, 97, 101, 102, 108, 109, 110, 128, 131, 132, 133, 138, 139, 162, 170, 172, 181, 182, 197, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 240, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 525, 526, 530, 533, 538, 556, 570, 576, 577, 585, 588, 590, 594, 595, 596, 597, 598, 601, 602, 604, 606], "da": [2, 12, 17, 20, 26, 27, 28, 32, 42, 47, 60, 65, 93, 131, 537, 551, 570, 579, 588, 596], "dai": [523, 527], "daniel": [570, 573], "darci": [11, 12, 16, 17], "data": [1, 2, 5, 6, 7, 10, 11, 13, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 32, 33, 36, 37, 38, 39, 40, 42, 43, 46, 48, 52, 53, 54, 56, 62, 63, 64, 65, 69, 77, 78, 79, 80, 82, 84, 97, 100, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 158, 159, 160, 161, 162, 164, 166, 170, 172, 179, 195, 198, 199, 200, 206, 207, 208, 209, 210, 211, 212, 213, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 496, 521, 532, 549, 556, 559, 570, 571, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600], "data_el": [17, 131, 132, 133, 185, 188, 189, 192, 194, 199, 200, 207, 596, 597], "data_elem": [570, 571, 596], "data_element_callback": [92, 98, 559], "data_element_callback_kwarg": 559, "data_element_gener": [70, 163], "data_element_offset_to_valu": 70, "data_retrieved_for_tag_and_vr_via_uri": 597, "data_retrieved_via_uri": 597, "databas": 14, "datadict": [16, 559, 570, 579, 582, 596], "datael": [0, 46, 47, 49, 53, 60, 78, 129, 131, 132, 133, 160, 163, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 201, 202, 207, 240, 264, 570, 571, 579, 580, 581, 582, 585, 589, 591, 596], "dataelem": [60, 78, 131, 132, 133, 164, 182, 198, 199, 554, 559, 570, 582, 585, 596], "dataelement_from_raw": [60, 596], "dataset": [0, 2, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 32, 37, 38, 39, 43, 45, 46, 47, 48, 52, 53, 54, 73, 80, 84, 85, 91, 97, 100, 106, 107, 108, 109, 128, 129, 136, 138, 139, 144, 146, 155, 156, 158, 159, 162, 163, 166, 168, 169, 170, 171, 172, 173, 181, 182, 183, 195, 196, 200, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 238, 239, 240, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 277, 496, 522, 556, 559, 570, 571, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 595, 598, 599, 600, 602, 604, 606], "dataset_class": 128, "datastor": 106, "date": [2, 8, 9, 12, 17, 20, 23, 26, 27, 28, 32, 42, 43, 47, 93, 172, 523, 527, 559, 570, 579, 580, 582, 588, 596, 600], "datetim": [12, 93, 523, 527, 531], "datetime_convers": [32, 537, 539, 545, 559], "daughter": 131, "daunt": 594, "dave": [570, 573], "db": [14, 36, 131, 132, 133, 220, 263, 601], "dcm": [9, 11, 12, 24, 26, 27, 28, 42, 44, 49, 50, 53, 69, 131, 132, 133, 162, 170, 220, 250, 252, 263, 270, 272, 570, 586, 595, 596, 601, 605, 606], "dcm_qt_tree": [570, 577, 578], "dcmread": [0, 4, 9, 10, 11, 12, 14, 16, 42, 45, 50, 70, 91, 106, 132, 154, 158, 159, 160, 163, 166, 180, 204, 250, 252, 270, 272, 522, 570, 579, 585, 586, 588, 591, 595, 596, 598, 604, 606], "dcmwrite": [14, 70, 131, 132, 133, 158, 159, 570, 579, 585, 586, 588, 591, 596], "dctool100": [2, 20, 26, 28, 47, 596], "dd": [23, 523], "ddt": 527, "de": 52, "deal": [23, 43, 49, 212, 570, 572, 581, 596], "debug": [559, 570, 576, 578], "debug_on": 94, "decemb": [570, 590], "decid": [570, 591, 601], "decim": [32, 81, 101, 496, 524, 525, 526, 528, 529, 532, 533, 534, 570, 576, 577, 588], "decis": 38, "decod": [1, 5, 6, 37, 39, 40, 45, 50, 54, 60, 77, 78, 128, 131, 132, 133, 141, 143, 147, 148, 156, 158, 159, 162, 195, 207, 208, 210, 211, 212, 240, 247, 248, 250, 252, 264, 270, 272, 530, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 559, 562, 570, 574, 581, 582, 583, 586, 588, 589, 591, 592, 598, 600, 601], "decode_byt": 559, "decode_data_sequ": [570, 591], "decode_el": 559, "decode_pixel_data": [239, 247], "decodefunct": 238, "decodeopt": [238, 239, 246], "decoder_depend": 30, "decoderunn": [30, 239], "decoding_plugin": [131, 132, 133, 239, 240, 250, 252, 264, 270, 272, 601, 604], "decomposit": 36, "decompress": [29, 40, 44, 45, 54, 131, 132, 133, 210, 239, 250, 252, 270, 272, 559, 570, 579, 583, 591, 600, 602, 603, 604], "decon": 20, "decor": [570, 577], "decreas": [36, 131, 132, 133, 220, 263, 601], "deep": [570, 589], "deepcopi": [570, 588, 591], "def": [0, 8, 11, 14, 17, 25, 26, 30, 34, 97, 131, 132, 133, 170, 496, 532, 594, 597, 602], "default": [0, 9, 24, 26, 29, 32, 33, 34, 43, 45, 49, 50, 56, 76, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 128, 131, 132, 133, 135, 138, 140, 141, 142, 143, 147, 150, 151, 152, 156, 158, 159, 160, 162, 163, 172, 174, 181, 182, 183, 195, 196, 205, 206, 209, 211, 212, 216, 217, 218, 220, 221, 238, 239, 240, 246, 247, 250, 251, 252, 256, 257, 258, 259, 260, 261, 263, 264, 266, 269, 270, 271, 272, 273, 275, 276, 277, 496, 521, 525, 527, 530, 532, 538, 540, 544, 555, 556, 570, 574, 576, 577, 579, 581, 582, 583, 584, 585, 586, 588, 591, 595, 596, 597, 598, 601, 602, 604], "default_element_format": 131, "default_encod": [22, 530], "default_handl": 94, "default_sequence_element_format": 131, "defer": [131, 132, 133, 164, 570, 572, 576, 583, 589, 596], "defer_s": [160, 162, 163, 166, 180, 204, 570, 572], "deferreddatael": [570, 581, 582], "defin": [16, 17, 20, 25, 26, 36, 37, 38, 39, 47, 49, 56, 128, 131, 132, 133, 134, 171, 172, 213, 253, 496, 525, 570, 576, 594, 596, 598, 601, 606], "definit": [172, 183, 559, 570, 579, 606], "deflat": [45, 209, 222, 248, 496, 570, 585], "defragment_data": [570, 591], "degre": 20, "del": [17, 18, 42, 47, 131, 596], "del_opt": [238, 246], "delai": [20, 26, 28], "delattr": 17, "delet": [12, 17, 52, 131, 132, 133, 238, 246, 496, 532, 570, 585, 594, 595], "delimit": [77, 144, 145, 146, 176, 178, 179, 180, 184, 496, 532, 555, 570, 586, 588], "delimiter_tag": 180, "deliveri": [26, 27], "delta": 20, "demand": 530, "demonstr": [16, 570, 571, 602], "denomin": [281, 525, 526, 528, 529], "depend": [20, 30, 34, 39, 44, 45, 50, 52, 97, 128, 131, 132, 133, 141, 142, 143, 172, 183, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 238, 239, 247, 253, 254, 255, 256, 257, 262, 263, 274, 551, 556, 570, 581, 582, 589, 595, 597, 598, 600, 602, 604, 606], "dependabot": [570, 591], "deprec": [95, 96, 131, 132, 133, 136, 137, 144, 145, 146, 148, 153, 183, 557, 558, 575, 576, 580, 581, 582, 585, 586, 588, 589, 590], "deprecationwarn": [570, 571], "depth": [32, 37, 50, 54, 173, 570, 583, 600, 601], "deriv": [2, 8, 20, 42, 81, 97, 128, 133, 570, 576, 596], "describ": [29, 39, 42, 52, 108, 110, 128, 131, 132, 133, 239, 525, 530, 597, 598, 604], "descript": [3, 16, 20, 25, 26, 27, 29, 33, 39, 42, 47, 54, 108, 109, 110, 111, 114, 124, 128, 134, 570, 571, 572, 585, 589, 591, 604], "descriptor": [10, 47, 172, 213, 214, 215, 216, 217, 253, 254, 255, 256, 257, 570, 583, 585, 591, 598], "descriptor_character_set": [10, 172, 598], "descriptor_file_id": [10, 172, 598], "descripwidth": 128, "deseri": 597, "design": [52, 278, 279, 280, 605], "desir": [48, 205, 221, 259], "despit": 598, "destin": [158, 159], "detail": [24, 26, 39, 42, 43, 50, 52, 94, 128, 131, 132, 133, 163, 284, 525, 529, 559, 570, 588, 591, 594, 595], "detector": 20, "determin": [39, 42, 49, 128, 131, 172, 214, 215, 254, 255, 281, 525, 528, 570, 591, 598, 606], "determinist": 521, "dev0": 559, "develop": [25, 26, 27, 43, 570, 579], "devic": [2, 8, 20, 26, 27, 605], "di": 598, "diamet": 20, "dicm": [154, 167, 183, 196, 203, 596], "dicom": [1, 2, 4, 6, 7, 9, 13, 14, 15, 19, 21, 22, 23, 27, 28, 30, 32, 34, 36, 37, 38, 39, 42, 44, 45, 46, 48, 49, 50, 51, 53, 54, 56, 59, 61, 69, 70, 72, 74, 76, 77, 78, 84, 89, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 131, 132, 133, 134, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 158, 159, 160, 162, 163, 165, 166, 167, 172, 183, 194, 196, 198, 200, 203, 205, 206, 209, 213, 214, 215, 216, 217, 218, 221, 239, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 270, 271, 272, 274, 276, 279, 281, 282, 496, 521, 525, 526, 529, 530, 532, 533, 549, 559, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 586, 588, 589, 590, 591, 592, 595, 596, 597, 599, 601, 602, 604, 605], "dicom_character_set": 78, "dicom_dao": [570, 574], "dicom_filenam": 14, "dicombytesio": [70, 158, 570, 591], "dicomdir": [10, 54, 69, 170, 172, 173, 570, 578, 582, 583, 586, 589, 590, 591, 599], "dicomdirtest": [10, 598], "dicomfil": [24, 26, 70], "dicomfilelik": [14, 70, 156, 157, 570, 572], "dicominfo": [570, 571], "dicomio": [70, 145, 148, 153, 156, 158, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 570, 591], "dicomit": [570, 574], "dicomtre": [0, 21, 570, 571, 592], "dicomweb": [128, 131, 132, 133, 597], "dicond": [181, 182], "dicosquadrupoleresonanceqrstorag": [570, 586], "dicosquadrupoleresonancestorag": [570, 586], "dict": [14, 30, 34, 42, 92, 108, 110, 128, 131, 132, 133, 170, 172, 206, 219, 238, 239, 240, 246, 262, 264, 267, 268, 279, 570, 573, 588, 590, 604], "dict_item": [131, 132, 133], "dict_kei": [131, 132, 133], "dictionari": [6, 15, 19, 42, 46, 84, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 163, 219, 238, 246, 262, 496, 532, 559, 570, 572, 573, 575, 578, 579, 580, 581, 582, 583, 586, 588, 589, 591, 592, 597, 605], "dictionary_is_retir": [570, 579], "dictionary_vr": 596, "did": [18, 570, 571, 591], "diff": [20, 594], "differ": [4, 6, 17, 21, 25, 26, 28, 32, 37, 38, 47, 50, 54, 131, 132, 133, 525, 570, 573, 585, 592, 594, 595, 596, 597, 598, 601, 602, 604], "difficult": [52, 594], "difflib": 20, "dig": 598, "digit": [88, 134, 197, 496, 525, 532, 606], "dimens": [97, 131, 132, 133, 211, 239, 250, 252, 270, 272, 604], "dimitri": [570, 578], "dir": [42, 131, 132, 133, 279, 567, 570, 576, 589, 595, 605], "direct": [24, 26, 265, 525, 595, 597, 598], "directli": [10, 30, 34, 37, 42, 128, 238, 239, 246, 247, 524, 570, 591, 597, 598, 601, 602, 604, 605], "directori": [10, 170, 171, 172, 173, 175, 570, 571, 589, 591, 594, 595, 598, 600], "directory_record": [172, 559, 598], "directoryrecordsequ": 598, "directoryrecordtyp": [170, 172], "disabl": 601, "disadvantag": 52, "disagre": [570, 591], "discard": [496, 532], "discuss": [594, 598], "disk": [570, 586], "displai": [6, 20, 21, 26, 27, 28, 36, 37, 38, 42, 46, 48, 100, 128, 131, 570, 571, 577, 582, 588, 592, 594, 602, 604, 606], "distanc": 20, "distinct": [570, 574], "distribut": [570, 574, 586, 600], "distutil": [570, 571], "div": 530, "dive": 594, "divid": 525, "divisionbyzero": 525, "django": [594, 595, 597], "do": [10, 14, 25, 26, 30, 34, 43, 44, 45, 47, 49, 50, 52, 54, 93, 131, 132, 133, 172, 183, 189, 570, 576, 582, 588, 591, 594, 595, 596, 598, 601, 602, 605, 606], "do_command": [25, 26], "doc": [170, 595], "docstr": [53, 594], "document": [40, 43, 131, 132, 133, 170, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 247, 250, 252, 264, 270, 272, 574, 579, 580, 591, 593, 599], "doe": [10, 12, 37, 47, 49, 50, 52, 89, 97, 109, 131, 132, 133, 154, 164, 183, 189, 207, 525, 533, 570, 586, 598], "doesn": [29, 39, 49, 84, 131, 132, 133, 206, 209, 212, 239, 250, 252, 260, 270, 272, 275, 570, 585, 594, 601, 602], "doi": 23, "domain": 604, "don": [8, 10, 18, 26, 27, 28, 36, 42, 45, 47, 52, 238, 594, 595, 597, 598, 601, 602, 604], "done": [30, 34, 44, 496, 525, 532, 594, 595, 596], "dont_print": 8, "dose": [26, 27, 28, 69, 170, 172, 570, 576, 598], "dosesummationtyp": 598, "dot": [594, 596], "doubl": [32, 50, 53, 131, 132, 133, 209, 273, 563, 570, 583, 604], "doublefloatpixeldata": [29, 30, 50, 238, 246, 267, 570, 588, 604], "down": [203, 594, 598], "download": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 106, 570, 586, 588, 589, 590], "downsampl": [2, 38], "downscal": [37, 38], "downsiz": [1, 5, 6, 50, 592], "downstream": 37, "dr": 530, "draw_circl": 602, "drop": [131, 132, 133, 570, 585, 586], "ds1": 597, "ds2": 131, "ds_byte": 14, "ds_decim": [101, 559, 570, 585], "ds_json": 597, "ds_numpi": [102, 559], "ds_or_path": 172, "ds_out": [250, 252, 270, 272, 604], "dsdecim": [32, 60, 88, 524, 538, 570, 588], "dsfloat": [32, 60, 524, 538, 570, 588], "dst": [527, 531, 598], "dt": [12, 32, 60, 65, 93, 539, 551, 570, 579, 588], "dtype": [42, 49, 50, 51, 53, 131, 132, 133, 211, 220, 221, 238, 239, 247, 251, 259, 260, 263, 271, 273, 275, 601, 602, 604], "dtype_corrected_for_endian": [570, 591], "due": [29, 172, 238, 570, 577, 588, 590, 594, 598, 604], "dummi": [24, 26], "dummydatabas": 14, "dump": [128, 131, 132, 133], "dump_handl": [128, 131, 132, 133], "duplic": [570, 577], "durat": [20, 26, 28, 596], "dure": [36, 37, 42, 47, 109, 570, 589, 591, 594, 595, 601], "dvd": 598, "dwt": 36, "dynam": [16, 20], "e": [20, 24, 26, 27, 28, 30, 34, 42, 43, 49, 50, 53, 56, 85, 128, 131, 132, 133, 134, 162, 168, 169, 172, 173, 174, 205, 206, 239, 247, 251, 265, 271, 277, 523, 525, 530, 555, 570, 573, 580, 582, 586, 591, 594, 595, 596, 600], "e0": 148, "e000": [145, 148, 149, 150], "e0dd": 145, "e3ee934bbc": [570, 574], "e830f30b6781": [570, 577], "each": [0, 3, 10, 20, 29, 30, 33, 34, 36, 37, 38, 39, 42, 44, 49, 50, 51, 54, 69, 77, 131, 132, 133, 138, 139, 144, 145, 148, 149, 150, 151, 152, 173, 174, 205, 212, 220, 221, 238, 239, 240, 246, 247, 250, 252, 259, 263, 264, 265, 270, 272, 496, 525, 530, 532, 556, 567, 570, 585, 588, 594, 596, 598, 601, 602, 604, 606], "earlier": 596, "easi": [50, 601], "easier": [47, 132, 570, 591, 595], "easiest": 23, "easili": [17, 570, 571, 573], "ecg": [51, 69, 606], "echo": [2, 8, 20], "echofindingobservationtyp": 605, "edit": [10, 52, 570, 580, 581, 583, 594, 595, 600], "editor": [594, 595], "eeee": [183, 570, 591], "effect": [42, 145, 521, 602], "effici": [10, 160, 172, 251, 271, 533, 601, 606], "effort": 29, "eg": 4, "einthoven": 606, "either": [26, 27, 30, 34, 36, 37, 39, 42, 43, 47, 52, 97, 128, 131, 132, 133, 141, 143, 147, 167, 172, 206, 238, 246, 251, 266, 271, 273, 274, 279, 281, 282, 525, 528, 530, 537, 545, 567, 570, 586, 591, 595, 596, 598, 600, 601, 602, 604], "elem": [0, 8, 17, 42, 49, 53, 78, 128, 131, 132, 133, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 201, 202, 206, 281, 283, 570, 573, 596], "element": [2, 10, 12, 16, 17, 18, 20, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 40, 44, 46, 48, 49, 50, 51, 52, 53, 54, 56, 67, 77, 78, 80, 82, 84, 85, 93, 94, 97, 100, 101, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 138, 139, 144, 145, 146, 160, 161, 162, 163, 164, 172, 179, 180, 181, 182, 183, 196, 198, 199, 206, 207, 209, 211, 212, 219, 220, 238, 239, 240, 246, 250, 252, 260, 262, 263, 264, 266, 267, 270, 272, 273, 274, 275, 279, 281, 282, 523, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 556, 557, 559, 570, 571, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 585, 586, 588, 589, 590, 591, 595, 598, 601, 602, 604, 606], "element_format": [131, 132, 133], "element_offset": [131, 132, 133, 134], "element_v": [25, 26], "element_valu": [25, 26], "elementcallback": 91, "els": [3, 4, 8, 36, 37, 38, 44, 131, 163, 177, 180, 524, 525, 596, 602], "embed": [570, 586], "emin": 525, "empti": [32, 128, 131, 132, 133, 135, 141, 143, 144, 146, 147, 148, 156, 205, 251, 268, 271, 277, 496, 525, 526, 530, 532, 549, 570, 571, 579, 582, 583, 584, 585, 586, 588, 591, 596, 598, 602, 604, 606], "empty_valu": 128, "empty_value_for_vr": 128, "emul": [42, 96, 131, 132, 133], "enabl": [33, 43, 93, 131, 132, 133, 601], "enable_futur": 96, "encap": [44, 170, 559, 570, 579, 581, 591, 601, 604], "encapsul": [29, 39, 44, 50, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 220, 239, 247, 260, 263, 275, 559, 570, 571, 581, 586, 591, 604], "encapsulate_ext": [131, 132, 133, 220, 263], "encapsulate_extend": [44, 138, 570, 586, 591, 601], "encasul": 496, "enclos": 47, "encod": [29, 30, 32, 39, 40, 41, 44, 45, 50, 51, 54, 56, 76, 77, 78, 79, 128, 129, 131, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 156, 158, 159, 160, 163, 168, 169, 172, 183, 190, 194, 195, 196, 198, 199, 200, 202, 212, 220, 238, 239, 249, 250, 252, 260, 263, 270, 272, 275, 496, 522, 525, 530, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 559, 562, 570, 576, 579, 580, 581, 582, 583, 588, 589, 590, 591, 596, 597, 601, 602, 604], "encode_pixel_data": [239, 247], "encode_str": 559, "encodefunct": 246, "encodeopt": [238, 246], "encoder_depend": 34, "encoderunn": 34, "encoding_plugin": [44, 131, 132, 133, 220, 247, 263, 601], "encount": [47, 89], "encourag": [570, 576], "end": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 140, 142, 151, 152, 163, 178, 180, 238, 239, 251, 271, 281, 496, 528, 532, 570, 576, 583, 601], "endian": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 39, 42, 44, 45, 47, 131, 132, 133, 141, 142, 143, 145, 147, 149, 150, 151, 152, 156, 158, 159, 160, 163, 172, 177, 178, 179, 180, 183, 189, 196, 209, 212, 222, 223, 224, 228, 239, 240, 247, 248, 260, 264, 275, 287, 496, 522, 535, 536, 537, 538, 539, 540, 544, 545, 546, 548, 549, 551, 552, 570, 573, 581, 585, 590, 591, 596, 601, 602, 604, 606], "endswith": [496, 532], "energi": [26, 28], "enforc": [42, 46, 205, 570, 576], "enforce_file_format": [12, 131, 132, 133, 183, 570, 591, 596], "enforce_standard": [135, 196, 596], "enforce_valid_valu": [559, 570, 576, 582, 583, 586, 588, 589], "engin": 525, "english": 53, "enhanc": [20, 213, 253, 573], "ensur": [4, 32, 36, 37, 38, 43, 47, 96, 131, 132, 133, 135, 162, 172, 183, 205, 251, 271, 525, 526, 570, 576, 579, 588, 590, 591, 594, 604], "ensure_file_meta": [131, 132, 133], "enter": 23, "entir": [42, 131, 162, 165, 207, 211, 239, 250, 252, 270, 272, 594, 596, 601, 604], "entireti": [131, 132, 133, 240, 264], "entiti": [2, 20, 26, 28, 32, 47, 172, 196, 596], "entri": [16, 25, 26, 27, 42, 46, 50, 108, 109, 110, 111, 118, 119, 570, 572, 589, 594, 595], "entropy_src": [521, 570, 591], "entry_point": [25, 26], "enum": [570, 589, 591], "enumer": [0, 4, 606], "env": 598, "environ": [26, 27, 43, 570, 571, 586, 600], "eoc": [144, 570, 583], "eof": [156, 158, 159, 180], "eoferror": [156, 158, 159, 180], "eoi": [144, 570, 583], "eol": [570, 590], "equal": [29, 37, 38, 39, 140, 145, 281, 496, 525, 526, 528, 529, 532, 570, 580, 581, 582], "equival": [42, 131, 132, 133, 141, 143, 147, 238, 246, 251, 271, 525, 570, 580], "error": [24, 26, 33, 37, 52, 56, 76, 86, 87, 96, 128, 131, 132, 133, 220, 263, 496, 525, 532, 533, 559, 570, 573, 574, 577, 579, 580, 581, 582, 583, 585, 586, 590, 591, 594, 596, 601], "escap": [570, 591], "especi": [39, 52, 594, 601, 604], "estim": 20, "et": 23, "etc": [17, 18, 42, 50, 53, 128, 131, 132, 133, 206, 570, 571, 577, 588, 594, 598, 601], "euc_kr": [22, 530], "even": [32, 37, 47, 49, 131, 132, 133, 138, 140, 145, 162, 167, 239, 240, 250, 251, 264, 270, 271, 525, 570, 586, 596, 598, 602, 604], "everi": [91, 239, 247, 265, 598, 606], "everyth": [172, 594, 598], "evolut": 43, "exact": [42, 525, 526, 528, 529], "exactli": [26, 27, 49, 51, 281, 525, 526, 528, 529, 596], "exam": 20, "exampl": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 29, 30, 34, 39, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 84, 85, 108, 109, 110, 128, 131, 132, 133, 139, 162, 170, 172, 219, 220, 238, 247, 250, 252, 262, 263, 270, 272, 281, 496, 521, 525, 528, 530, 532, 559, 570, 571, 572, 573, 575, 576, 578, 582, 586, 588, 591, 592, 593, 594, 595, 597, 598, 601, 602, 604, 606], "exc": 85, "exce": [138, 139], "except": [43, 47, 49, 50, 56, 76, 84, 85, 86, 97, 131, 132, 133, 154, 170, 172, 183, 196, 205, 239, 247, 284, 525, 559, 570, 573, 575, 578, 579, 582, 583, 586, 588, 589, 591, 594, 596, 598, 601, 604], "excess": [141, 143, 147, 570, 582, 591], "exclud": [24, 26, 27, 28, 52, 131, 206, 238, 246, 266], "exclude_s": [24, 26], "exclus": 525, "execut": [5, 13, 19, 21, 530, 592], "exist": [9, 16, 30, 34, 38, 42, 43, 52, 53, 109, 131, 132, 133, 164, 172, 183, 196, 220, 260, 263, 275, 570, 590, 591, 593, 594, 595, 601], "exit": [0, 14, 24, 26, 27, 28], "exp": 525, "expand": [10, 26, 28, 265, 496, 532, 570, 589, 595, 598], "expand_ybr422": [570, 589, 591], "expandtab": [496, 532], "expans": [570, 588], "expect": [37, 42, 131, 132, 133, 141, 143, 147, 206, 207, 209, 212, 238, 239, 246, 250, 252, 266, 270, 272, 570, 580, 582, 586, 590, 594, 601], "experiment": [570, 577, 602], "explain": 53, "explan": [36, 37, 38, 604], "explanatori": 606, "explicit": [2, 12, 20, 26, 28, 39, 44, 45, 47, 56, 89, 131, 132, 133, 145, 156, 158, 159, 163, 183, 196, 209, 222, 223, 224, 239, 240, 248, 260, 264, 275, 287, 496, 522, 530, 570, 573, 574, 582, 583, 585, 588, 591, 596, 601, 604], "explicitli": [49, 50, 88, 570, 581, 588, 598], "explicitvrlittleendian": [12, 602], "explor": [26, 27, 47], "expon": 525, "exponenti": 525, "export": [24, 26, 43, 570, 588], "exposur": 20, "expr": 204, "express": [26, 27, 496, 532], "extend": [41, 44, 45, 131, 132, 133, 138, 139, 141, 143, 147, 205, 220, 232, 238, 246, 248, 263, 277, 570, 586, 591, 601], "extended_offset": [141, 143, 147, 238, 246], "extendedoffsett": [44, 139, 601], "extendedoffsettablelength": [44, 139, 601], "extens": [42, 78, 132, 570, 581, 588], "extern": [106, 570, 586, 588], "extra": [26, 28, 29, 42, 239, 570, 591, 602], "extract": 97, "extrem": [570, 590], "ez_setup": [570, 578], "f": [0, 2, 3, 4, 8, 9, 10, 11, 12, 18, 20, 128, 131, 132, 133, 170, 172, 250, 252, 270, 272, 496, 532, 594, 598, 601, 606], "f1ae573d9de5": [570, 577], "facilit": 239, "fact": [97, 596], "factor": [20, 51, 570, 577, 606], "factori": [205, 239, 247, 283, 524, 570, 573, 588, 591], "fail": [30, 34, 97, 570, 573, 574, 579, 594, 595, 598], "failur": [56, 496, 532, 570, 585, 591, 594], "fairli": [53, 601], "fall": [213, 253], "fallback": [570, 581], "fals": [3, 4, 10, 14, 29, 30, 32, 34, 43, 47, 53, 56, 69, 80, 81, 82, 85, 88, 90, 93, 94, 95, 96, 97, 101, 102, 103, 106, 115, 116, 125, 126, 128, 131, 132, 133, 135, 138, 139, 156, 158, 159, 160, 162, 166, 167, 172, 174, 175, 178, 179, 180, 183, 196, 203, 209, 211, 220, 221, 238, 239, 240, 247, 250, 252, 259, 261, 263, 264, 270, 272, 273, 276, 281, 496, 522, 524, 525, 526, 528, 532, 534, 535, 536, 537, 538, 539, 540, 544, 545, 546, 548, 549, 551, 552, 556, 570, 576, 580, 585, 588, 590, 596, 598, 601, 602, 604, 606], "famili": [530, 601], "familiar": [40, 53, 596, 598, 604, 606], "family_comma_given": [9, 530], "family_nam": [530, 570, 588], "family_name_ideograph": 530, "family_name_phonet": 530, "far": [45, 128, 601], "farm": 530, "fast": [203, 283], "faster": [45, 570, 573, 585, 588], "fatq": 20, "favor": [570, 575, 589], "fc790f01f5": [570, 574], "fd": [20, 32], "fe": 148, "featur": [43, 53, 570, 578, 593, 594], "feedback": [570, 577], "fetch": [44, 50, 601], "fetch_data_fil": 600, "fewer": [156, 158, 159, 238, 534], "ff": [20, 148], "ffee": 148, "fffc": [2, 20, 26, 28, 596], "fffe": [145, 148, 149, 150], "ffffp10": [526, 529], "fidel": [20, 47], "fiduci": 170, "field": [11, 20, 26, 28, 42, 90, 128, 130, 145, 278, 496, 523, 527, 531, 532, 570, 588], "fifth": 530, "fig": [3, 604, 606], "fil": 20, "file": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 21, 25, 27, 28, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 69, 72, 74, 85, 89, 94, 100, 104, 105, 106, 107, 109, 131, 132, 133, 135, 153, 154, 157, 158, 160, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 185, 194, 195, 196, 198, 199, 200, 203, 220, 238, 239, 250, 252, 263, 270, 272, 559, 571, 572, 573, 575, 576, 579, 582, 583, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 599, 601, 602, 604], "file_meta": [2, 12, 20, 26, 27, 28, 42, 44, 45, 47, 131, 132, 133, 135, 183, 196, 240, 264, 570, 573, 585, 591, 598, 601, 602, 604], "file_metadata": [570, 575], "file_path": [14, 203], "file_set": [171, 173], "file_value_tel": 128, "filebas": [14, 70, 145, 148, 153, 195, 559], "filedataset": [69, 106, 162, 166, 183, 559, 570, 573, 575, 588, 589, 591, 596, 598, 604], "fileid": 171, "fileinst": [10, 172, 173, 559, 570, 591, 598], "filemetadataset": [12, 24, 26, 132, 135, 165, 183, 196, 559, 570, 585, 596, 602], "filenam": [24, 26, 27, 28, 104, 105, 106, 107, 131, 132, 133, 156, 158, 159, 164, 165, 172, 174, 183, 570, 585, 594, 598], "filename_or_obj": [132, 164], "fileobj": [166, 596], "fileobj_typ": [132, 164], "fileread": [70, 203, 559, 595, 596], "fileset": [10, 559, 570, 586, 588, 589, 591], "filespec": [24, 25, 26, 27, 28], "filespec_help": [25, 26], "filespec_pars": [25, 26], "filetyp": [25, 26], "fileutil": [70, 559], "filewrit": [70, 131, 132, 133, 559, 596], "fill": [4, 29, 496, 532, 594, 595], "fillchar": [496, 532], "filter": [20, 26, 27, 131, 132, 133, 279], "final": [2, 17, 106, 138, 141, 142, 143, 183, 596, 601, 602, 606], "find": [10, 17, 20, 23, 25, 26, 44, 93, 131, 132, 133, 165, 172, 177, 178, 179, 181, 182, 496, 532, 594, 595, 596, 598, 602, 605, 606], "find_byt": [70, 178, 179, 570, 577], "find_delimit": [70, 179], "find_valu": [10, 172, 598], "finit": [525, 533], "first": [3, 20, 26, 28, 36, 37, 38, 39, 42, 43, 47, 50, 52, 53, 76, 77, 79, 97, 106, 130, 131, 132, 133, 141, 142, 143, 144, 145, 147, 148, 151, 152, 167, 172, 180, 205, 236, 239, 240, 250, 252, 264, 268, 270, 272, 277, 278, 496, 525, 530, 532, 570, 581, 582, 583, 591, 593, 594, 595, 598, 601, 602, 604, 606], "firstnam": 12, "fit": [570, 580], "five": [53, 530], "fivechamb": 567, "fix": [163, 578, 593, 594, 596], "fix_meta_info": [570, 581, 591], "fixer": [570, 579], "fixm": 2, "fl": [20, 26, 28, 32, 596], "flag": [16, 20, 43, 96, 131, 132, 133, 167, 172, 177, 178, 179, 525, 570, 585, 588, 598], "flat": 598, "flatten": [131, 132, 133], "flexibl": [570, 591], "flip": [2, 8, 20], "float": [11, 32, 33, 36, 42, 50, 53, 81, 88, 128, 131, 132, 133, 160, 162, 163, 164, 166, 180, 204, 209, 220, 263, 273, 524, 525, 526, 527, 528, 529, 533, 549, 563, 570, 576, 577, 583, 586, 588, 590, 596, 601, 604], "float32": 602, "float64": [214, 215, 217, 218, 254, 255, 257, 258, 538, 602], "floatpixeldata": [29, 30, 50, 238, 246, 267, 570, 588, 602, 604], "fly": [570, 586], "fma": [525, 605], "fname": 4, "focal": 20, "folder": [570, 573, 591], "follow": [10, 25, 26, 27, 28, 29, 30, 34, 36, 39, 42, 43, 44, 45, 50, 53, 69, 128, 131, 132, 133, 135, 144, 145, 148, 172, 180, 183, 196, 219, 220, 239, 247, 250, 252, 260, 262, 263, 270, 272, 275, 496, 525, 530, 532, 570, 583, 586, 588, 591, 594, 595, 596, 598, 601, 602, 605, 606], "font": 0, "foo": 34, "for_addit": [171, 598], "for_mov": 171, "for_remov": 171, "forc": [16, 29, 131, 132, 133, 154, 162, 166, 167, 172, 183, 220, 263, 570, 574, 576, 578, 596], "force_encod": [183, 570, 591], "force_implicit": 172, "force_rgb": 29, "force_ybr": 29, "foreign": [20, 570, 571], "forg": [600, 601, 602, 604, 606], "forget": [18, 52], "fork": [570, 590, 594, 595, 600], "form": [20, 39, 49, 50, 51, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 131, 132, 133, 239, 250, 252, 270, 272, 282, 521, 530, 604], "format": [6, 7, 12, 13, 20, 24, 26, 27, 28, 32, 34, 42, 43, 45, 128, 131, 132, 133, 138, 139, 140, 145, 162, 183, 198, 209, 212, 496, 523, 525, 526, 527, 530, 531, 532, 549, 570, 571, 572, 573, 579, 582, 588, 589, 591, 592, 596, 598, 600, 601, 604], "format_map": [496, 532], "format_number_as_d": [60, 570, 588], "format_str": 530, "formatted_lin": [131, 132, 133, 570, 572], "found": [10, 47, 49, 50, 51, 106, 131, 132, 133, 162, 167, 172, 177, 180, 239, 247, 279, 496, 532, 596, 598, 601, 604], "found_at": 177, "foundat": 605, "four": [53, 97, 172, 180], "fourchamb": 567, "fourth": 530, "fp": [16, 145, 148, 153, 160, 162, 163, 167, 168, 169, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "fpa": 20, "fraction": [26, 27, 28], "fractiongroupnumb": [24, 26], "fractiongroupsequ": [24, 26, 27, 28], "fragment": [50, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 570, 583, 591], "fragments_per_fram": [53, 138], "frame": [2, 8, 20, 29, 30, 34, 37, 39, 44, 50, 69, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 206, 211, 220, 221, 238, 239, 246, 247, 250, 251, 252, 259, 260, 263, 270, 271, 272, 274, 275, 570, 579, 581, 583, 588, 591, 601, 604], "frame1": 138, "frame2": 138, "frame_iter": 601, "frame_length": [238, 246], "framework": 600, "free": [36, 37, 131, 132, 133], "frequenc": [2, 8, 20, 51, 606], "frequent": 598, "friendli": [496, 596, 598], "from": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 69, 72, 76, 77, 79, 81, 84, 85, 91, 97, 108, 109, 118, 119, 128, 129, 130, 131, 132, 133, 135, 136, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 153, 156, 157, 158, 159, 160, 161, 164, 167, 170, 171, 172, 173, 174, 181, 182, 183, 195, 196, 198, 205, 207, 208, 209, 210, 211, 212, 214, 215, 219, 220, 221, 238, 239, 240, 246, 250, 252, 254, 255, 259, 260, 262, 263, 264, 270, 272, 275, 277, 496, 521, 523, 525, 526, 527, 529, 530, 531, 532, 534, 552, 567, 570, 573, 574, 575, 576, 577, 578, 581, 582, 585, 586, 587, 588, 591, 592, 594, 595, 596, 598, 600, 601, 602, 604, 605, 606], "from_byt": [281, 528], "from_float": 525, "from_json": [128, 131, 132, 133, 570, 583, 586, 597], "from_named_compon": [530, 570, 588], "from_named_components_veterinari": [530, 570, 588], "fromhex": [526, 529], "fromisocalendar": [523, 527], "fromisoformat": [523, 527, 531], "fromordin": [523, 527], "fromtimestamp": [523, 527], "front": [496, 532, 594], "full": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 37, 47, 106, 132, 162, 238, 525, 570, 579, 580, 581, 586, 598], "func": [25, 26, 595], "function": [17, 20, 25, 26, 27, 29, 30, 34, 36, 37, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 55, 58, 59, 67, 69, 70, 72, 74, 81, 91, 98, 102, 109, 110, 128, 131, 132, 133, 136, 137, 145, 146, 148, 153, 160, 163, 165, 166, 170, 172, 181, 182, 183, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 238, 239, 240, 246, 247, 250, 252, 253, 264, 265, 270, 272, 279, 282, 442, 523, 524, 525, 527, 533, 556, 557, 559, 560, 562, 565, 566, 570, 571, 572, 573, 578, 579, 581, 582, 583, 586, 588, 591, 595, 596, 597, 598, 601, 602, 604, 606], "further": [39, 598, 601, 604, 605], "furthermor": 533, "furthest": [173, 181, 182], "fuse": 525, "futur": [46, 96, 131, 132, 133, 570, 576, 586, 605], "future_behavior": [43, 559, 570, 586], "f\u00e9lix": [570, 577], "g": [2, 8, 9, 11, 12, 17, 20, 22, 24, 26, 27, 30, 34, 38, 39, 42, 43, 49, 50, 53, 56, 85, 128, 131, 132, 133, 134, 162, 205, 206, 239, 247, 277, 523, 525, 530, 555, 570, 573, 580, 582, 586, 591, 596, 602], "g1": 39, "g2": 39, "gain": 20, "galleri": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 592], "gantri": [11, 20, 26, 28], "gantryangl": 11, "gb18030": 22, "gcc": 595, "gdcm": [30, 34, 38, 44, 45, 131, 132, 133, 207, 220, 229, 230, 231, 232, 233, 234, 235, 236, 245, 263, 570, 573, 579, 582, 586, 588, 589, 591, 604], "gdcm_handler": 97, "ge": 20, "ge_genesis_ff": [20, 47], "gems_acqu_01": 20, "gems_iden_01": [20, 47], "gems_imag_01": 20, "gems_imps_01": 20, "gems_parm_01": 20, "gems_pati_01": 20, "gems_rela_01": 20, "gems_sers_01": 20, "gems_stdy_01": 20, "gender": 53, "gener": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 25, 26, 27, 34, 38, 42, 43, 45, 52, 131, 132, 133, 136, 137, 144, 150, 160, 166, 174, 220, 240, 260, 263, 264, 275, 277, 282, 496, 521, 529, 556, 570, 572, 573, 577, 579, 591, 593, 595, 601], "generate_filenam": [559, 570, 591], "generate_frag": [136, 137, 145, 153, 570, 591], "generate_fragmented_fram": [144, 570, 591], "generate_fram": [136, 137, 146, 211, 570, 591, 604], "generate_instance_uid": [131, 132, 133, 220, 240, 260, 263, 264, 275], "generate_multiplex": [3, 131, 132, 133, 556, 570, 586, 606], "generate_pixel_data": [570, 583, 591], "generate_pixel_data_frag": [570, 591], "generate_pixel_data_fram": [570, 591], "generate_uid": [10, 38, 131, 132, 133, 172, 220, 240, 260, 263, 264, 275, 570, 582, 591], "genesi": 20, "geometri": 0, "get": [2, 9, 10, 14, 26, 27, 32, 42, 43, 45, 47, 48, 49, 50, 51, 53, 93, 97, 131, 132, 133, 156, 158, 159, 170, 273, 559, 570, 573, 574, 582, 586, 588, 594, 595, 599, 600, 601, 604], "get_charset_fil": 559, "get_data": 238, "get_decod": [559, 604], "get_encod": 559, "get_entri": 119, "get_expected_length": [206, 570, 591], "get_fram": [246, 570, 591, 604], "get_frame_offset": [570, 583, 591], "get_image_pixel_id": [570, 591], "get_item": [131, 132, 133, 570, 591], "get_j2k_paramet": [570, 591], "get_nr_fram": [570, 591], "get_opt": [30, 34, 238, 246], "get_overlay_arrai": 206, "get_palette_fil": [559, 570, 583], "get_path": [42, 50, 69, 559, 596, 598, 604], "get_pixeldata": [97, 207, 208, 209, 210, 211, 212], "get_private_entri": 118, "get_private_item": [131, 132, 133], "get_tag": 134, "get_testdata_fil": [9, 10, 11, 559, 570, 586, 588, 589, 591, 595], "gggg": 596, "ggggeeee": 281, "gildong": [22, 530], "git": [24, 26, 27, 594, 595, 600], "github": [23, 570, 579, 593, 594, 595, 600], "give": [525, 533, 570, 572, 573, 596], "given": [2, 11, 24, 26, 27, 28, 29, 32, 36, 37, 45, 50, 51, 77, 79, 128, 129, 131, 132, 133, 134, 135, 141, 143, 156, 158, 159, 162, 164, 170, 172, 206, 209, 211, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 265, 281, 496, 525, 526, 528, 530, 532, 549, 556, 570, 585, 588, 596, 598, 600, 601, 604, 606], "given_nam": [530, 570, 588], "given_name_ideograph": 530, "given_name_phonet": 530, "glob": [4, 10, 104, 105, 107, 598], "global": [99, 570, 589], "glossari": [36, 37, 38, 40, 604], "glow": 20, "gmail": [2, 8, 9, 11, 12, 17, 20, 22], "gn": 39, "go": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 165, 594, 595, 596, 598, 600, 602], "gone": 595, "good": [52, 53, 594, 595, 601], "googl": 593, "got": 595, "goyett": [570, 578], "gracefulli": [570, 586, 591], "grai": [9, 48, 604], "graphic": [0, 50], "grayscal": [30, 34, 36, 37, 38, 39, 50, 131, 132, 133, 260, 275, 604], "greater": [32, 39, 131, 132, 133, 140, 145, 220, 260, 263, 274, 275, 521, 525, 570, 579, 591, 597], "greek": [570, 571], "green": [36, 37, 38, 39, 570, 585], "gregorian": [523, 527], "grep": [26, 27], "greyscal": [36, 37], "grid": 0, "group": [2, 12, 17, 20, 26, 27, 28, 39, 42, 47, 49, 51, 118, 120, 128, 131, 132, 133, 134, 135, 162, 170, 172, 183, 196, 206, 238, 246, 250, 252, 270, 272, 281, 282, 283, 530, 556, 559, 570, 573, 576, 580, 585, 586, 593, 594, 596, 604, 606], "group_dataset": [131, 132, 133, 604], "group_elem": 283, "grouplength": 120, "guarante": [43, 45, 47, 525], "gui": [570, 571], "guid": [30, 34, 41, 44, 53, 131, 132, 133, 220, 263, 559, 570, 582, 588, 591, 593, 595, 596, 601], "guillaum": [2, 8, 9, 11, 12, 17, 20, 22], "gunnar": [570, 577], "gzip": [570, 576, 582], "h": [2, 8, 12, 20, 22, 24, 26, 27, 28], "ha": [2, 10, 14, 20, 23, 24, 25, 26, 27, 30, 34, 36, 37, 38, 39, 43, 44, 47, 50, 52, 53, 82, 89, 91, 128, 131, 132, 133, 140, 141, 143, 145, 147, 148, 163, 164, 171, 172, 173, 183, 184, 195, 205, 206, 207, 208, 209, 210, 211, 212, 238, 246, 251, 269, 271, 281, 496, 521, 522, 524, 525, 532, 556, 570, 572, 573, 575, 580, 581, 583, 584, 585, 590, 591, 594, 595, 596, 597, 598, 601, 602, 604, 606], "habit": 596, "had": [522, 570, 581, 588, 594], "halchenko": [570, 578], "halv": 265, "hand": [39, 52, 525, 570, 586], "handi": 42, "handl": [46, 47, 50, 52, 76, 97, 128, 131, 132, 133, 179, 197, 496, 532, 557, 559, 570, 571, 574, 576, 578, 579, 580, 581, 582, 583, 585, 586, 588, 589, 590, 591, 596, 597, 600, 604], "handler": [44, 53, 80, 94, 97, 131, 132, 133, 206, 207, 208, 209, 210, 211, 212, 556, 559, 570, 579, 581, 583, 584, 585, 586, 588, 589, 591, 594, 597], "handler_nam": [131, 132, 133], "hang": 170, "happi": [594, 595], "harder": 42, "has_bot": [138, 139], "has_inst": 173, "hasattr": 4, "hash": [521, 570, 582, 588], "hasn": [144, 594, 595], "have": [12, 14, 25, 26, 27, 28, 32, 36, 37, 38, 39, 42, 43, 44, 45, 47, 49, 50, 52, 53, 97, 128, 131, 132, 133, 135, 138, 139, 141, 142, 145, 148, 162, 165, 172, 174, 183, 196, 206, 209, 211, 212, 219, 220, 238, 239, 246, 247, 250, 251, 252, 262, 263, 270, 271, 272, 496, 522, 525, 532, 535, 546, 556, 570, 576, 579, 581, 582, 585, 589, 591, 593, 594, 595, 596, 597, 598, 600, 601, 602, 604, 606], "haven": [53, 570, 591, 594, 596], "hdr": 20, "head": [10, 53, 598], "header": [20, 36, 154, 162, 167, 570, 572, 591, 596], "health": [24, 26, 52], "height": 20, "helic": 20, "hello": [16, 596], "help": [14, 24, 25, 26, 27, 28, 43, 44, 47, 163, 570, 573, 581, 588, 590, 593, 594, 595], "helper": 134, "henc": [39, 183], "here": [10, 24, 26, 28, 30, 34, 47, 54, 99, 179, 239, 247, 595, 596, 597, 598, 605], "heurist": [163, 570, 579], "hex": [49, 53, 128, 131, 132, 133, 134, 526, 529, 570, 573], "hexadecim": [526, 529, 596], "hf": [2, 8, 20], "hh": [527, 531], "hierarch": [6, 21, 144, 235, 236, 274, 570, 583, 592], "hierarchi": [172, 598], "high": [2, 8, 20, 37, 38, 39, 45, 53, 111, 131, 132, 133, 225, 226, 227, 260, 275, 570, 583, 604], "highbit": [601, 602], "higher": [36, 38, 40, 131, 132, 133, 147, 525, 570, 573, 597], "highest": [496, 532, 570, 588], "highli": [570, 590], "hint": 32, "hispe": 20, "histogram": 20, "histori": 20, "hold": [205, 277, 281, 528], "holmberg": [570, 578], "holog": [570, 589], "home": [69, 598], "hong": [22, 530], "hood": 42, "horiz": 20, "horizont": 265, "hors": 530, "host": [20, 281, 528], "hot_iron": [213, 253], "hot_metal_blu": [213, 253], "hotfix": [570, 591], "hounsfield": [50, 604], "hour": [527, 531], "how": [2, 3, 8, 9, 10, 12, 14, 16, 17, 18, 20, 24, 26, 30, 34, 39, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 109, 128, 141, 142, 172, 570, 571, 575, 594, 595, 596, 597, 598, 599, 601, 602, 604, 606], "howev": [10, 25, 26, 29, 32, 36, 37, 38, 39, 41, 42, 44, 45, 131, 132, 133, 144, 145, 148, 205, 260, 275, 529, 594, 595, 596, 598, 601, 604], "htj2k": [41, 248, 570, 591], "htj2klossless": [570, 591], "htj2klosslessrpcl": [570, 591], "html": [53, 595], "http": [23, 53, 594, 595, 597, 600], "hu": [50, 604], "human": [496, 530, 596], "hypothet": 53, "hz": [3, 51, 606], "i": [0, 2, 3, 4, 10, 17, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 60, 65, 69, 71, 73, 76, 77, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 96, 97, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 154, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 195, 196, 197, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 238, 239, 240, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 496, 521, 523, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 544, 545, 546, 548, 549, 551, 552, 557, 558, 567, 570, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 600, 601, 602, 604, 605, 606], "i2": 601, "ibh": 20, "icon": [594, 595], "id": [0, 2, 8, 9, 10, 12, 17, 20, 47, 131, 132, 133, 134, 171, 172, 173, 174, 175, 267, 570, 572, 589, 596, 598], "id00001": [26, 28], "idea": [594, 595], "ideal": 45, "iden": 20, "ident": [525, 570, 576, 604], "identif": 10, "identifi": [32, 39, 43, 47, 52, 192, 279, 496, 532, 570, 591], "ideograph": 530, "idx": 0, "ie": 128, "iec": [36, 37, 39, 44, 221, 259, 268, 381, 386, 389, 521, 601], "ignor": [43, 56, 76, 84, 85, 111, 128, 131, 132, 133, 176, 496, 525, 532, 550, 559, 570, 584, 588, 591, 595], "ii": [596, 606], "iii": 606, "illustr": [1, 3, 4, 6, 7, 8, 9, 15, 16, 18, 20, 36, 37, 42, 54, 601], "im": [2, 602, 604], "im000000": [10, 598], "im000001": [10, 598], "im000002": [10, 598], "im000003": [10, 598], "im000004": 10, "im000005": 10, "im000006": 10, "im1": 604, "im2": 604, "imag": [5, 8, 9, 10, 12, 17, 20, 26, 28, 30, 33, 34, 44, 45, 46, 47, 49, 50, 69, 131, 132, 133, 139, 140, 144, 145, 148, 170, 172, 207, 209, 210, 211, 212, 213, 219, 220, 221, 225, 226, 227, 229, 230, 233, 234, 238, 239, 240, 241, 242, 243, 244, 246, 250, 252, 253, 259, 260, 262, 263, 264, 266, 269, 270, 272, 273, 274, 275, 281, 526, 528, 529, 562, 565, 570, 573, 580, 582, 586, 588, 591, 592, 596, 598, 600, 601, 602, 604], "image_handl": [570, 581, 582], "image_process": [5, 592], "imagecodec": [30, 34], "imageri": 604, "imagetyp": 596, "imaginari": [281, 526, 528, 529], "img2d": 4, "img3d": 4, "img_shap": 4, "imit": 96, "immedi": 50, "immut": [29, 239, 523, 527, 531, 570, 582], "implant": [170, 172], "implement": [2, 12, 20, 26, 27, 28, 30, 34, 42, 47, 52, 135, 158, 159, 196, 434, 496, 532, 570, 586, 596], "implementationclassuid": 12, "implicit": [16, 26, 27, 39, 42, 45, 89, 131, 132, 133, 156, 158, 159, 160, 163, 172, 183, 209, 228, 248, 496, 522, 544, 570, 573, 580, 582, 588, 591], "implicit_vr": [131, 132, 133, 183, 496, 522, 570, 591], "implicitli": 44, "import": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 30, 34, 36, 37, 38, 39, 42, 43, 44, 45, 47, 48, 49, 50, 51, 69, 84, 85, 108, 109, 128, 131, 132, 133, 139, 170, 172, 220, 239, 247, 250, 252, 263, 270, 272, 496, 521, 567, 570, 576, 579, 591, 594, 595, 596, 597, 598, 600, 601, 602, 604, 605, 606], "import_path": [239, 247], "importantli": [598, 604], "importerror": [207, 208, 210, 538, 540, 570, 587, 594], "imposs": 172, "improp": [570, 583, 585], "improv": [43, 570, 577, 580, 581, 588, 590, 591, 593, 601], "imshow": [4, 9, 48, 602, 604], "imxxxxxx": 172, "includ": [24, 25, 26, 29, 43, 49, 52, 128, 131, 132, 133, 138, 170, 172, 183, 206, 238, 246, 266, 284, 496, 525, 527, 531, 532, 559, 570, 572, 574, 576, 578, 579, 591, 594, 595, 596, 598, 601, 606], "include_orphan": 172, "inclus": [37, 38, 39], "incompat": [570, 573, 579], "incorrect": [144, 239, 247, 570, 574, 580, 582, 583, 591], "incorrectli": [570, 571], "incorrectmodalityworklistentri": 605, "increas": [36, 131, 132, 133, 220, 263, 570, 573, 590, 601], "increment": [20, 174], "incur": 533, "indent": [8, 131, 132, 133, 173, 596], "indent_char": [131, 173], "indent_format": [131, 132, 133], "indent_str": 8, "independ": 183, "index": [36, 37, 38, 42, 50, 51, 130, 131, 132, 133, 147, 172, 173, 174, 205, 216, 217, 218, 238, 239, 246, 247, 252, 256, 257, 258, 272, 277, 278, 496, 532, 556, 570, 586, 591, 595, 604, 606], "indexerror": [205, 277], "indic": [2, 8, 20, 39, 47, 49, 97, 128, 131, 132, 133, 156, 158, 159, 239, 250, 270, 281, 525, 528, 570, 577, 594, 595, 596, 604], "indirectli": [30, 34], "individu": [52, 221, 259, 530, 567, 570, 576, 586, 588], "inequ": [570, 580, 581], "inexact": 525, "inf": [525, 533], "infer_sq_for_un_vr": [56, 570, 589], "infil": 596, "infin": [525, 526, 529], "infinit": 525, "info": [11, 20, 160, 163, 166, 178, 179, 180, 496, 570, 573, 574, 576, 578], "inform": [2, 6, 7, 8, 9, 12, 13, 20, 24, 26, 27, 28, 31, 35, 40, 42, 44, 47, 50, 52, 53, 80, 100, 128, 131, 132, 133, 135, 162, 165, 167, 183, 196, 220, 239, 240, 247, 250, 252, 263, 264, 270, 272, 530, 570, 571, 573, 576, 579, 583, 585, 586, 591, 592, 594, 595, 596, 601, 604, 606], "inherit": [570, 588, 591], "init": [570, 588], "init_valu": 133, "initi": [53, 132, 133, 134, 178, 179, 205, 277, 530, 594, 604], "initial_byt": 156, "initialis": [570, 591], "inlin": [131, 132, 133, 570, 591, 597], "inlinebinari": [128, 131, 132, 133], "input": [20, 24, 26, 50, 205, 221, 238, 251, 259, 271, 530, 570, 586], "input_output": [13, 592], "insensit": [42, 131, 132, 133, 279], "insert": [0, 205, 277, 496, 532, 595, 596], "insid": [17, 570, 572, 602], "instal": [43, 45, 54, 97, 131, 132, 133, 211, 239, 240, 247, 250, 252, 264, 270, 272, 570, 571, 578, 588, 595, 596, 599, 601, 602, 604, 606], "instanc": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 38, 42, 45, 47, 50, 52, 69, 78, 88, 131, 132, 133, 135, 156, 158, 159, 162, 163, 170, 171, 172, 173, 183, 196, 205, 213, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 252, 253, 260, 263, 264, 270, 272, 275, 277, 280, 496, 524, 525, 526, 532, 563, 564, 570, 582, 588, 591, 596, 601, 602, 604, 605], "instancecreationd": [24, 26], "instancecreationtim": [24, 26], "instancenumb": 598, "instead": [2, 29, 34, 37, 42, 50, 51, 52, 95, 131, 132, 133, 144, 145, 146, 148, 153, 160, 170, 172, 183, 220, 239, 263, 496, 529, 530, 532, 557, 558, 570, 573, 576, 580, 581, 582, 585, 586, 588, 589, 591, 594, 595, 596, 597, 598, 600, 602, 604, 606], "institut": [2, 8, 20], "instruct": [594, 595, 596], "int": [29, 30, 32, 33, 34, 42, 56, 77, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 138, 140, 141, 143, 144, 146, 147, 148, 150, 151, 152, 156, 158, 159, 160, 161, 162, 163, 166, 168, 169, 172, 173, 174, 177, 178, 179, 180, 195, 204, 205, 206, 216, 217, 218, 220, 238, 239, 246, 247, 250, 251, 252, 256, 257, 258, 260, 263, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277, 281, 282, 283, 496, 523, 524, 525, 526, 527, 528, 529, 530, 532, 544, 549, 552, 556, 596, 602], "int16": [42, 50, 51, 131, 132, 133, 260, 275, 602, 604, 606], "int64": 540, "int8": [131, 132, 133, 260, 275], "integ": [29, 30, 32, 34, 37, 39, 50, 148, 205, 251, 269, 271, 273, 277, 281, 496, 521, 525, 526, 528, 529, 532, 570, 574, 576, 586, 601, 604, 606], "integr": 20, "intend": [30, 34, 38, 39, 131, 132, 133, 238, 246, 247, 594], "intens": [33, 36, 37, 38, 39, 601], "intention": [496, 532], "interact": [10, 42, 47, 131, 132, 133, 598], "intercept": [20, 42, 214, 215, 254, 255], "interchang": [50, 598], "interest": [14, 49, 593, 596, 604], "interfac": [27, 40, 279, 567, 570, 588, 591, 600], "interleav": [33, 37, 606], "interleave_mod": 33, "intermedi": [42, 54, 525], "intern": [128, 131, 132, 133, 160, 577], "interpret": [2, 8, 20, 29, 38, 39, 49, 50, 131, 132, 133, 207, 208, 209, 210, 211, 212, 220, 221, 238, 239, 240, 246, 250, 252, 259, 260, 263, 264, 265, 270, 272, 275, 496, 523, 532, 570, 583, 591, 601, 602, 604, 606], "interscan": 20, "interv": [601, 602, 606], "intricaci": 239, "introduc": [570, 589, 594, 604], "introduct": [28, 34, 46, 54, 594, 595, 598, 599, 603, 606], "intuit": 601, "invalid": [43, 56, 76, 77, 85, 89, 90, 135, 269, 521, 570, 582, 586, 588, 590, 591], "invalid_key_behavior": [96, 559, 570, 586], "invalid_keyword_behavior": [96, 559, 570, 586], "invaliddicomerror": [162, 167, 559, 570, 574, 596], "invalidoper": 525, "invers": [39, 523, 525, 527], "io": [14, 16, 132, 156, 158, 159, 559, 570, 591, 596], "iobas": [158, 159], "iod": [39, 183, 273, 598, 602, 606], "ipsum": 521, "ipynb": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "ipython": [131, 132, 133, 279, 570, 571], "ir": [570, 583], "irrevers": 36, "is_arrai": [238, 246], "is_avail": [30, 34, 97, 206, 207, 208, 209, 210, 211, 212, 239, 247, 556, 570, 581], "is_binari": [238, 246], "is_buff": [238, 246], "is_canon": 525, "is_cid": 279, "is_compress": [496, 601, 604], "is_conformant_file_id": 559, "is_dataset": [238, 246], "is_defl": 496, "is_dicom": [559, 570, 579], "is_empti": 128, "is_encapsul": [239, 247, 496], "is_fil": [10, 598], "is_finit": 525, "is_implicit_vr": [16, 44, 130, 131, 132, 133, 156, 158, 159, 160, 161, 163, 168, 169, 183, 195, 496, 544, 570, 582, 591], "is_infinit": 525, "is_integ": [526, 529], "is_little_endian": [14, 16, 44, 130, 131, 132, 133, 145, 148, 156, 158, 159, 160, 163, 168, 169, 176, 178, 179, 180, 181, 182, 183, 195, 496, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 551, 552, 570, 591], "is_n": [239, 247], "is_nan": 525, "is_norm": 525, "is_original_encod": [131, 132, 133], "is_priv": [42, 128, 171, 281, 496, 570, 579], "is_private_cr": 281, "is_qnan": 525, "is_raw": 130, "is_retir": [16, 108, 109, 110, 118, 119, 128, 496, 570, 579], "is_root": 173, "is_sign": [268, 525], "is_snan": 525, "is_stag": [171, 172, 598], "is_subnorm": 525, "is_transfer_syntax": 496, "is_undefined_length": [44, 128, 131, 132, 133, 240, 264, 570, 583], "is_valid": 496, "is_valid_d": [60, 570, 588], "is_zero": 525, "isalnum": [496, 532], "isalpha": [496, 532], "isascii": [496, 532], "isdecim": [496, 532], "isdigit": [496, 532], "isfloat": [60, 570, 590], "isidentifi": [496, 532], "isinst": 601, "iskeyword": [496, 532], "islow": [496, 532], "ismultivalu": [570, 582, 585], "isn": [37, 131, 132, 133, 141, 143, 147, 163, 183, 273, 496, 521, 570, 582, 586, 591, 595, 596, 604], "isnumer": [496, 532], "iso": [26, 27, 36, 37, 39, 44, 221, 259, 268, 381, 386, 389, 521, 523, 527, 531, 570, 583, 601], "iso2022_jp": 22, "iso8859": [22, 131, 132, 133, 160, 163, 195, 544], "iso_ir": [10, 20, 26, 28, 47, 78, 596, 597, 598], "iso_ir_100": 596, "isocalendar": [523, 527], "isoformat": [523, 527, 531], "isol": 600, "isovue300": 20, "isoweekdai": [523, 527], "isprint": [496, 532], "isspac": [496, 532], "isstr": [570, 582], "isstringorstringlist": [570, 582], "issu": [24, 26, 28, 30, 34, 37, 52, 56, 76, 77, 79, 87, 269, 570, 573, 574, 575, 576, 577, 582, 591, 593, 594], "issue18": [570, 571], "issue22": [570, 571], "issue27": [570, 571], "issue33": [570, 571], "issue36": [570, 572], "issue38": [570, 572], "issue40": [570, 572], "issue41": [570, 572], "istitl": [496, 532], "isupp": [496, 532], "ital": 53, "italic": 53, "item": [0, 6, 8, 9, 15, 19, 20, 24, 26, 27, 28, 32, 42, 51, 52, 53, 128, 131, 132, 133, 138, 139, 140, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 169, 176, 200, 205, 277, 570, 571, 572, 573, 576, 579, 582, 583, 588, 589, 592, 596, 598, 606], "itemdelimitertag": 163, "itemis": 150, "items": [131, 132, 133, 239, 260, 275], "iter": [10, 17, 42, 131, 132, 133, 140, 141, 142, 143, 144, 145, 146, 150, 160, 173, 174, 181, 184, 205, 211, 238, 239, 247, 250, 270, 277, 281, 284, 496, 528, 532, 570, 572, 580, 591, 598, 604], "iter_arrai": [29, 239, 604], "iter_buff": [29, 239], "iter_decod": 238, "iter_encod": [247, 601], "iter_pixel": [29, 45, 131, 132, 133, 559, 570, 591, 602, 604], "iteral": [131, 132, 133, 570, 572], "itis_tsn": 605, "its": [10, 24, 25, 26, 27, 29, 30, 32, 34, 36, 37, 38, 39, 42, 43, 82, 128, 131, 132, 133, 148, 172, 173, 180, 205, 206, 207, 208, 209, 210, 211, 212, 240, 264, 496, 525, 532, 556, 570, 581, 586, 591, 596, 598, 601, 604], "itself": [10, 38, 42, 47, 53, 106, 158, 159, 181, 182, 496, 532, 570, 586, 594, 595, 598], "itu": [36, 37, 221, 259, 521, 601], "iv": 20, "j": 22, "j2k": [570, 591], "j2k_cr": [36, 131, 132, 133, 220, 263, 601], "j2k_psnr": [36, 131, 132, 133, 220, 263, 601], "jame": 14, "jan": [84, 596], "januari": [23, 523, 527], "japanes": [570, 571, 576, 579], "jfk": 20, "ji": [570, 582], "jls_error": [37, 131, 132, 133, 220, 263, 601], "joan": [128, 131], "john": [131, 530], "join": [11, 496, 532, 602], "jonathan": [570, 577, 578], "jp2": [36, 570, 591], "jpe2000lossless": 36, "jpeg": [29, 35, 39, 41, 44, 45, 50, 80, 131, 132, 133, 138, 139, 144, 207, 208, 209, 210, 211, 212, 220, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 239, 241, 242, 243, 244, 248, 249, 250, 252, 263, 268, 270, 272, 274, 381, 386, 389, 496, 570, 581, 583, 585, 586, 588, 591, 600, 604], "jpeg2000": [30, 34, 36, 45, 144, 248, 570, 581, 583, 601], "jpeg2000compressedpixeltransfersyntax": [570, 586, 591], "jpeg2000encod": [33, 36, 570, 591], "jpeg2000lossi": [570, 581], "jpeg2000lossless": 601, "jpeg2000losslessencod": [33, 36, 570, 591], "jpeg2000mc": [570, 586, 591], "jpeg2000mclossless": [570, 586, 591], "jpeg2000multicompon": [570, 581, 586, 591, 594], "jpeg2000multicomponentlossless": [570, 581, 586, 591, 594], "jpeg2000transfersyntax": [570, 586, 591], "jpeg2k": [44, 69, 570, 581, 601, 604], "jpeg2kimageplugin": [41, 45], "jpeg_l": [45, 131, 132, 133, 208, 570, 579, 591], "jpeg_ls_handl": 97, "jpegbaselin": [570, 581, 586, 591], "jpegbaseline8bit": [44, 496, 570, 586, 591, 601], "jpegbaselinelossy12bit": [570, 581], "jpegbaselinelossy8bit": [570, 581], "jpegextend": [570, 581, 586, 591], "jpegextended12bit": [570, 586, 591], "jpegimageplugin": 45, "jpeglossless": [570, 586, 591], "jpeglosslessp14": [570, 581], "jpeglosslesssv1": [570, 586, 591], "jpeglossycompressedpixeltransfersyntax": [570, 586, 591], "jpeglslossi": [570, 586, 591], "jpeglslossless": [37, 601], "jpeglslosslessencod": [33, 37, 570, 591], "jpeglsnearlossless": [37, 570, 586, 591, 601], "jpeglsnearlosslessencod": [33, 37, 570, 591], "jpeglssupportedcompressedpixeltransfersyntax": [570, 586, 591], "jpeglstransfersyntax": [570, 586, 591], "jpegtransfersyntax": [570, 586, 591], "jpg": [570, 588], "jpiphtj2kreferenc": [570, 591], "jpiphtj2kreferenceddefl": [570, 591], "json": [128, 131, 132, 133, 281, 570, 582, 583, 587, 588, 591, 599], "json_data": 597, "json_dataset": [131, 132, 133], "json_kei": [281, 570, 590], "jsonmodel": 131, "juli": 23, "julien": [570, 578], "jun": 559, "june": 23, "jupyt": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "just": [10, 12, 14, 25, 26, 27, 28, 42, 47, 52, 89, 128, 131, 132, 133, 160, 220, 263, 570, 582, 586, 594, 595, 596, 598, 604], "justifi": [496, 532], "k": [174, 570, 591], "kb": 162, "keep": [36, 37, 38, 131, 132, 133, 172, 220, 240, 263, 264, 598, 600, 601, 602, 604], "keep_def": [131, 132, 133, 570, 591], "keepend": [496, 532], "kei": [4, 33, 42, 85, 128, 131, 132, 133, 134, 170, 173, 206, 219, 262, 279, 281, 496, 532, 570, 586, 594], "kept": [525, 570, 572, 600], "kernel": 20, "keyerror": [112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 129, 131, 132, 133, 570, 591, 596], "keysview": 280, "keyword": [17, 26, 27, 28, 29, 42, 47, 50, 51, 53, 84, 85, 92, 106, 108, 109, 117, 118, 120, 125, 127, 128, 131, 132, 133, 162, 172, 181, 182, 183, 206, 209, 211, 212, 217, 220, 221, 238, 239, 240, 246, 247, 250, 251, 252, 257, 259, 261, 263, 264, 266, 267, 270, 271, 272, 273, 274, 276, 279, 282, 496, 532, 556, 567, 570, 574, 576, 579, 581, 582, 586, 590, 591, 595, 596, 598, 604, 605], "khz": 606, "kind": 47, "klein": [570, 574], "know": [10, 39, 42, 47, 596, 597, 598], "knowledg": 604, "known": [38, 39, 41, 42, 43, 47, 50, 56, 84, 96, 128, 129, 131, 132, 133, 213, 253, 281, 283, 528, 570, 580, 583, 585, 586, 588, 596, 605], "korean": [530, 570, 576], "kvp": 20, "kwarg": [131, 132, 133, 156, 157, 158, 159, 172, 183, 219, 220, 238, 239, 240, 246, 247, 250, 252, 262, 263, 264, 270, 272, 496, 523, 527, 530, 531, 532], "l": [20, 23, 29, 35, 41, 44, 45, 131, 132, 133, 144, 220, 233, 234, 239, 243, 244, 248, 249, 250, 252, 263, 270, 272, 274, 386, 570, 581, 591, 600], "label": [22, 26, 28, 30, 34, 239, 247], "lack": 596, "lambda": 4, "lami": [570, 578], "landmark": 20, "languag": [570, 571, 576], "larg": [20, 44, 47, 52, 131, 132, 133, 134, 138, 139, 163, 180, 220, 263, 524, 570, 572, 573, 580, 582, 583, 586, 588, 601, 604, 606], "larger": [24, 26, 162, 525, 600], "largest": [2, 8, 20, 525], "last": [20, 26, 28, 42, 47, 53, 85, 97, 140, 145, 205, 277, 570, 576, 589, 596, 598, 601, 604], "lastli": [594, 595], "later": [2, 8, 20, 30, 99, 525, 526, 570, 577, 594, 596], "latest": [47, 600], "latin5": [570, 579], "latter": [141, 142, 143, 147, 151, 152, 602], "layer": [33, 36, 131, 132, 133, 220, 263, 601], "layout": [10, 172], "lazi": 49, "lead": [51, 56, 69, 496, 525, 526, 532, 535, 570, 574, 579, 590, 606], "leaf": [171, 172, 173], "leaf_nod": 172, "learn": [53, 594, 598, 601, 602, 604], "least": [30, 34, 36, 39, 41, 131, 132, 133, 220, 239, 252, 263, 272, 496, 532, 552, 598, 601, 602], "leav": [10, 16, 26, 27, 109, 596], "left": [20, 36, 49, 131, 132, 133, 220, 263, 496, 525, 532, 595, 601], "legaci": 43, "lemaitr": [2, 8, 9, 11, 12, 17, 20, 22], "lemaitre58": [2, 8, 9, 11, 12, 17, 20, 22], "len": [0, 3, 4, 8, 10, 14, 36, 37, 38, 496, 532, 596, 598, 601, 604, 606], "length": [2, 8, 12, 20, 26, 27, 28, 42, 43, 44, 47, 51, 56, 90, 120, 128, 130, 131, 132, 133, 138, 139, 140, 141, 143, 145, 147, 148, 149, 150, 156, 158, 159, 160, 176, 179, 196, 206, 209, 212, 220, 238, 240, 246, 251, 263, 264, 266, 271, 281, 496, 521, 525, 528, 532, 570, 575, 576, 580, 582, 586, 588, 589, 590, 591, 596, 602], "length_of_undefined_length": 70, "less": [10, 37, 38, 39, 156, 158, 159, 525, 570, 591, 601, 602, 606], "let": [44, 570, 583, 594, 595, 596, 598, 601], "letter": [20, 42, 131, 132, 133], "level": [20, 26, 27, 28, 36, 40, 53, 131, 132, 133, 163, 172, 173, 570, 576, 588, 591, 595, 596, 597, 598, 604], "lib": 598, "libjpeg": [41, 45, 570, 591, 600], "librari": [2, 23, 25, 26, 42, 43, 50, 261, 276, 570, 573, 576, 595], "licens": [2, 8, 9, 11, 12, 16, 17, 20, 22, 570, 572, 573, 595], "like": [18, 25, 26, 29, 37, 42, 43, 47, 49, 52, 72, 74, 85, 111, 131, 132, 133, 153, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 177, 179, 180, 183, 195, 196, 198, 199, 200, 238, 239, 246, 250, 252, 270, 272, 527, 570, 573, 583, 586, 589, 591, 595, 596, 597, 598, 601, 602, 604], "limit": [10, 26, 27, 37, 38, 41, 46, 50, 172, 496, 532, 533, 534, 570, 576, 582, 586, 605], "linac": 131, "line": [11, 20, 23, 24, 25, 27, 28, 40, 43, 47, 49, 52, 85, 131, 132, 133, 172, 279, 496, 532, 570, 577, 588, 594, 595, 596, 598, 601, 604], "linear": [570, 588], "link": [36, 37, 53, 595], "linspac": 602, "linux": [43, 570, 579, 595, 600], "list": [4, 6, 7, 8, 10, 13, 20, 26, 28, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 44, 76, 77, 78, 79, 97, 104, 105, 107, 128, 129, 131, 132, 133, 136, 138, 139, 141, 143, 147, 148, 151, 152, 160, 162, 163, 166, 168, 172, 173, 181, 182, 190, 194, 195, 199, 200, 202, 205, 206, 220, 238, 239, 246, 247, 250, 252, 263, 270, 272, 277, 279, 280, 496, 521, 530, 532, 537, 538, 539, 540, 543, 544, 545, 546, 549, 550, 553, 554, 559, 567, 570, 573, 576, 577, 583, 586, 588, 589, 591, 592, 595, 596, 598, 600, 601, 604], "list_beam": 11, "liter": [25, 26], "littl": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 39, 42, 44, 45, 47, 131, 132, 133, 141, 142, 143, 145, 147, 149, 150, 151, 152, 156, 158, 159, 160, 163, 172, 178, 179, 180, 183, 196, 209, 212, 222, 224, 228, 240, 247, 248, 260, 264, 275, 281, 496, 522, 528, 535, 536, 537, 538, 539, 540, 544, 545, 546, 548, 549, 551, 552, 570, 573, 585, 591, 596, 601, 602, 604, 606], "little_endian": [131, 132, 133, 183, 496, 522, 570, 591], "live": [594, 595], "ljust": [496, 532], "ll": [42, 44, 594, 595, 596, 601, 602, 604, 606], "ln": [525, 605], "lo": [2, 12, 16, 17, 18, 20, 26, 27, 32, 47, 131, 553, 596, 598], "load": [1, 5, 6, 10, 12, 14, 16, 163, 171, 172, 180, 570, 582, 586, 587, 588, 592, 604], "loc": 20, "local": [43, 69, 106, 523, 527, 570, 589, 594, 595, 596, 600], "localhost": 595, "localtim": [523, 527], "locat": [2, 4, 8, 9, 20, 94, 131, 132, 133, 134, 144, 171, 178, 595, 598], "log": [94, 131, 132, 133, 570, 576, 589, 594], "log10": 525, "logarithm": 525, "logb": 525, "logger": [94, 570, 577, 591], "logic": [525, 570, 573], "logical_and": 525, "logical_invert": 525, "logical_or": 525, "logical_xor": 525, "long": [12, 32, 37, 179, 183, 552, 570, 590, 596, 602], "longer": [56, 82, 128, 209, 570, 580, 581, 583, 586, 588, 591, 598], "look": [52, 181, 182, 594, 595, 596], "lookup": [36, 37, 38, 50, 112, 113, 114, 116, 117, 127, 213, 214, 215, 216, 217, 253, 254, 255, 256, 257, 496, 532, 570, 586, 596], "lookuperror": [76, 77, 496, 532], "loonei": [570, 577, 578], "loop": [24, 26, 52], "lorem": 521, "loss": [77, 79, 525, 526, 533, 570, 586, 601], "lossi": [36, 37, 38, 41, 44, 45, 144, 234, 244, 274, 601, 604], "lossless": [35, 39, 41, 44, 45, 50, 131, 132, 133, 138, 139, 144, 211, 212, 220, 226, 227, 230, 233, 234, 235, 236, 237, 242, 243, 244, 245, 247, 248, 249, 263, 274, 570, 585, 588, 589, 591, 604], "losslessli": [36, 37], "lossy_error": 33, "lot": [570, 579, 596, 604], "low": [134, 597], "lower": [20, 131, 132, 133, 134, 172, 496, 525, 532, 570, 591, 598, 605], "lowercas": [53, 496, 532], "lowest": [281, 496, 525, 528, 532], "lrcp": 36, "lsb": 212, "lstrip": [496, 532], "lt": [2, 20, 32], "ltd": 110, "lut": [46, 213, 214, 215, 216, 217, 218, 253, 254, 255, 256, 257, 258, 570, 583, 585, 586, 588, 591], "lutdata": [570, 590], "m": [12, 22, 530, 594, 595, 598, 600, 601, 602, 604, 606], "maco": [570, 589, 600], "made": [38, 131, 132, 133, 140, 144, 172, 183, 570, 572, 573, 585, 594, 595, 598, 601], "mai": [23, 24, 26, 27, 29, 30, 33, 34, 36, 37, 39, 43, 47, 49, 50, 52, 78, 96, 99, 131, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 156, 158, 159, 172, 183, 196, 212, 219, 220, 238, 239, 240, 247, 250, 252, 262, 263, 264, 270, 272, 496, 522, 525, 530, 532, 546, 548, 570, 583, 591, 594, 595, 596, 598, 600, 602, 604, 606], "main": [24, 25, 26, 42, 52, 54, 118, 570, 573, 594, 595, 596, 600, 602], "mainli": [48, 131, 132, 133, 496, 532, 570, 577], "mainloop": [0, 22], "major": [46, 96, 586], "make": [29, 30, 34, 36, 37, 39, 42, 43, 47, 52, 131, 132, 133, 496, 521, 532, 533, 570, 573, 582, 588, 591, 596, 598, 600, 601, 602], "maketran": [496, 532], "mamp": 20, "manag": [10, 30, 34, 47, 159, 162, 172, 238, 246, 280, 570, 579, 586, 596, 598], "mani": [39, 43, 48, 50, 138, 139, 141, 142, 570, 572, 576, 577, 591, 593, 602, 604], "manipul": [2, 23, 128, 600], "manner": [596, 601], "manual": [93, 183, 602], "manufactur": [2, 8, 20, 131], "map": [50, 128, 131, 170, 496, 532, 570, 591, 595], "march": 23, "mark": [570, 578], "marker": [140, 144, 167, 180, 570, 583, 588], "markup": [53, 595], "mask": 121, "mason": [11, 12, 16, 17, 23], "massag": 20, "match": [10, 29, 39, 44, 50, 84, 93, 104, 105, 106, 107, 131, 132, 133, 164, 170, 172, 206, 207, 209, 212, 220, 238, 239, 240, 250, 252, 263, 264, 270, 272, 279, 530, 570, 576, 579, 586, 591, 598, 601, 602, 604, 606], "materi": 593, "matplotlib": [3, 4, 9, 46, 602, 604, 606], "matter": [570, 581, 596, 604], "matthew": [570, 578], "max": [20, 37, 214, 215, 254, 255, 525, 601], "max_mag": 525, "maxbytestodisplai": [128, 570, 582], "maxdepth": 595, "maximum": [26, 27, 36, 37, 39, 41, 52, 128, 138, 139, 174, 247, 496, 521, 525, 532, 570, 590, 591, 601, 602], "maxsplit": [496, 532], "mayb": 154, "mb": [5, 13, 19, 21, 162, 556, 592], "mct": [33, 36, 601], "mdc": 605, "mean": [39, 45, 212, 278, 496, 521, 532, 567, 594, 596, 598, 601, 602, 604, 605], "meaningless": 281, "meant": [165, 203], "measur": [148, 151, 170], "mechan": [30, 34, 239, 247, 601], "media": [2, 12, 20, 26, 27, 28, 42, 47, 69, 135, 194, 196, 596, 598], "mediastoragesopclassuid": [12, 598], "mediastoragesopinstanceuid": 12, "medic": [20, 53, 598, 604], "meet": [10, 34, 140, 247, 570, 576, 601, 602], "mem": [5, 13, 19, 21, 592], "member": [42, 525], "memori": [6, 16, 21, 30, 45, 131, 132, 133, 162, 163, 164, 180, 209, 221, 250, 252, 259, 270, 272, 570, 573, 581, 582, 583, 591, 592, 598, 602], "memory_dataset": [14, 21, 592], "memoryview": [29, 156, 158, 159, 238, 239, 246], "mention": [45, 596], "merg": [594, 595], "messag": [24, 26, 27, 28, 94, 284, 570, 573, 582, 590, 591, 594, 596, 598], "met": [30, 34, 50, 166, 206, 207, 208, 209, 210, 211, 212, 556, 570, 581], "meta": [2, 8, 12, 20, 26, 27, 28, 42, 47, 52, 100, 131, 132, 133, 135, 162, 165, 183, 196, 220, 250, 252, 263, 270, 272, 570, 573, 576, 579, 585, 596, 604], "metadata": [570, 588], "metadata_process": [19, 592], "meterset": [26, 27, 28], "method": [17, 23, 29, 30, 34, 36, 37, 39, 42, 44, 47, 49, 51, 97, 100, 128, 130, 131, 132, 133, 134, 138, 139, 141, 142, 143, 147, 151, 152, 156, 158, 159, 162, 170, 171, 172, 173, 183, 205, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 263, 277, 278, 279, 280, 281, 496, 523, 525, 526, 527, 528, 529, 530, 531, 532, 570, 573, 576, 579, 581, 588, 590, 591, 596, 597, 598, 601, 604, 605], "micro": 12, "microsecond": [527, 531], "microvolt": 606, "mid": [20, 26, 28, 42, 604], "middl": 530, "middle_nam": 530, "middle_name_ideograph": 530, "middle_name_phonet": 530, "might": [38, 47, 247, 606], "mike": [570, 574], "millisecond": [527, 531], "min": [10, 37, 214, 215, 254, 255, 525, 598, 601, 602], "min_mag": 525, "mind": [37, 38, 601, 604], "minim": [26, 28, 30, 45, 131, 132, 133, 183, 196, 239, 250, 252, 270, 272, 525, 570, 591, 602], "minimum": [30, 34, 36, 37, 38, 131, 132, 133, 196, 220, 263, 525, 601, 602, 604], "minor": 598, "minut": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 527, 531], "misc": [559, 570, 579], "miscellan": 559, "misinterpret": 29, "mismatch": 601, "miss": [9, 34, 106, 131, 132, 133, 135, 162, 167, 181, 183, 196, 206, 209, 211, 212, 213, 239, 247, 253, 570, 578, 579, 582, 583, 589, 591, 594, 596, 598, 600, 604], "missing_depend": [239, 247], "mistak": 76, "mit": [2, 8, 9, 11, 12, 16, 17, 20, 22, 23, 570, 572, 573], "mitig": [570, 591], "mitra": [570, 589], "mix": [570, 582], "mixedmodality3dcammodel": 605, "mm": [20, 23, 523, 527, 531], "mmap": [570, 591], "mmm": [527, 531], "mobil": 20, "mod": 20, "modal": [2, 8, 9, 10, 20, 26, 28, 42, 46, 214, 215, 217, 218, 254, 255, 257, 258, 570, 583, 598, 605], "modalitytoread": 605, "mode": [9, 20, 26, 28, 33, 37, 83, 86, 87, 132, 156, 158, 159, 250, 252, 270, 272, 525, 570, 583, 594, 600], "model": [2, 8, 20, 24, 26, 42, 52, 128, 131, 132, 133, 597, 606], "modern": [570, 577], "modif": [132, 594, 596, 598], "modifi": [6, 15, 30, 34, 45, 49, 50, 52, 54, 106, 131, 132, 133, 172, 220, 240, 260, 263, 264, 275, 570, 583, 586, 591, 599, 602], "modul": [10, 25, 26, 30, 34, 36, 37, 38, 43, 48, 50, 51, 69, 85, 94, 97, 131, 132, 133, 198, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 238, 239, 240, 247, 250, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 266, 269, 270, 272, 273, 274, 275, 496, 522, 532, 556, 557, 558, 559, 567, 570, 571, 577, 578, 581, 586, 588, 589, 591, 596, 598, 601, 604, 606], "modulenotfounderror": [239, 247], "mondai": [523, 527], "monochrome1": [10, 36, 37, 38, 39, 131, 132, 133, 209, 211, 260, 275, 598], "monochrome2": [2, 8, 20, 36, 37, 38, 39, 131, 132, 133, 209, 211, 260, 275, 598, 601, 602, 604], "monospac": 0, "month": 527, "more": [0, 24, 26, 27, 29, 32, 34, 36, 37, 39, 42, 43, 44, 45, 47, 49, 50, 51, 53, 99, 128, 131, 132, 133, 138, 140, 141, 143, 144, 145, 148, 163, 166, 172, 175, 180, 183, 184, 198, 220, 238, 239, 240, 247, 250, 252, 263, 264, 270, 272, 274, 279, 496, 525, 530, 532, 533, 570, 571, 572, 573, 575, 576, 583, 591, 594, 595, 596, 597, 598, 600, 601, 604, 606], "morenc": [570, 577], "most": [29, 39, 43, 45, 52, 85, 131, 132, 133, 239, 250, 252, 270, 272, 281, 528, 570, 573, 576, 577, 596, 598, 601, 604, 605], "mostli": 130, "move": [0, 93, 99, 171, 172, 570, 576, 577, 591, 595, 598], "mpeg": [412, 570, 586], "mpeg2mphlf": [570, 591], "mpeg2mpmlf": [570, 591], "mpeg4hp41bdf": [570, 591], "mpeg4hp41f": [570, 591], "mpeg4hp422df": [570, 591], "mpeg4hp423df": [570, 591], "mpeg4hp42stereof": [570, 591], "mplx": 3, "mplx_label": 3, "mr": [2, 8, 10, 17, 20, 50, 69, 530, 598], "mr1": [2, 8, 20], "mr_small": 69, "mra": [10, 598], "mrg": [594, 595], "mri": [1, 5, 6, 50, 592], "mrt50h1": [2, 8, 20], "msb": 212, "msec": 20, "msg": [85, 596], "msh": 605, "much": [37, 41, 42, 533, 570, 573, 576, 577, 585], "multi": [34, 39, 50, 60, 69, 82, 128, 131, 132, 133, 138, 144, 145, 146, 147, 148, 172, 205, 206, 238, 239, 247, 250, 252, 260, 270, 272, 274, 275, 548, 559, 570, 579, 581, 583, 585, 591, 596, 604, 606], "multi_str": [60, 70], "multifram": [570, 586], "multipl": [4, 30, 32, 34, 36, 39, 42, 47, 49, 50, 78, 109, 111, 112, 122, 128, 131, 132, 133, 144, 146, 147, 148, 216, 217, 218, 220, 221, 238, 239, 246, 247, 251, 256, 257, 258, 259, 263, 271, 277, 525, 530, 549, 570, 583, 589, 591, 596, 601, 602, 604], "multiplex": [3, 51, 131, 132, 133, 556, 570, 586, 606], "multiplex_1": 51, "multiplex_2": 51, "multiplex_arrai": [51, 131, 132, 133, 556, 570, 586, 606], "multiplexgrouplabel": [3, 606], "multipli": 525, "multiv": [60, 559, 596], "multivalu": [32, 60, 82, 201, 202, 536, 537, 538, 539, 540, 543, 551, 554, 555, 570, 576], "must": [25, 26, 30, 34, 36, 37, 38, 39, 42, 43, 44, 49, 50, 85, 88, 131, 132, 133, 134, 138, 139, 148, 162, 170, 172, 175, 177, 179, 183, 205, 206, 213, 217, 218, 220, 251, 253, 257, 258, 260, 263, 271, 275, 281, 496, 525, 528, 532, 534, 552, 570, 588, 596, 597, 598, 601, 602, 606], "mutabl": 131, "mutablemap": [131, 132, 133], "mutablesequ": [32, 76, 129, 131, 132, 133, 160, 163, 168, 169, 535, 536, 537, 538, 539, 540, 543, 545, 546, 549, 551, 553, 554, 555], "my": [10, 47, 131, 132, 133, 172, 597], "my_decod": 30, "my_decoder_func": 30, "my_encod": 34, "my_encoder_func": 34, "my_inst": 170, "my_json_dump": [131, 132, 133], "my_packag": [30, 34], "my_record": 170, "my_waveform": 606, "myprint": [8, 570, 571], "myself": [570, 578], "n": [2, 8, 11, 14, 20, 26, 28, 196, 206, 209, 211, 212, 214, 215, 216, 217, 218, 254, 255, 256, 257, 258, 274, 496, 525, 532, 556, 598], "naiv": 527, "name": [0, 2, 6, 8, 9, 10, 11, 12, 14, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 41, 42, 43, 44, 45, 47, 52, 53, 106, 109, 111, 118, 119, 122, 123, 124, 128, 131, 132, 133, 135, 155, 156, 158, 159, 162, 196, 213, 220, 238, 239, 240, 246, 247, 248, 249, 250, 252, 253, 263, 264, 270, 272, 274, 279, 280, 496, 523, 525, 527, 530, 532, 570, 571, 572, 573, 576, 579, 580, 581, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 601, 604, 605, 606], "name_prefix": 530, "name_prefix_ideograph": 530, "name_prefix_phonet": 530, "name_suffix": 530, "name_suffix_ideograph": 530, "name_suffix_phonet": 530, "namedtemporaryfil": [12, 17], "namedtupl": 278, "nan": [525, 526, 529, 533], "nanz": [570, 573], "nativ": [29, 39, 44, 131, 132, 133, 239, 247, 250, 252, 270, 272, 281, 499, 528, 563, 570, 591], "natur": [496, 525, 532], "navig": 595, "ncit": 605, "ndarrai": [29, 37, 42, 45, 48, 49, 50, 51, 53, 80, 82, 97, 103, 131, 132, 133, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 238, 239, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 270, 271, 272, 274, 275, 276, 538, 540, 556, 570, 579, 583, 586, 591, 601, 602, 606], "ndc": 605, "nearest": [173, 525], "necessari": [29, 37, 42, 43, 131, 132, 133, 140, 145, 260, 275, 281, 525, 528, 530, 598, 606], "necessarili": [47, 49, 570, 591], "need": [25, 26, 27, 30, 34, 37, 38, 39, 42, 43, 44, 45, 47, 49, 51, 52, 53, 77, 79, 93, 97, 131, 132, 133, 160, 166, 220, 238, 239, 263, 550, 553, 570, 573, 588, 591, 594, 595, 596, 597, 598, 600, 601, 602, 604, 606], "needs_to_convert_to_rgb": [97, 207, 208, 209, 210, 211, 212], "neg": [281, 525, 528], "negat": 525, "neither": [84, 85, 172, 214, 215, 217, 254, 255, 257, 525], "nema": 53, "ness": [570, 573], "nest": [26, 28, 42, 131, 570, 577, 590], "network": [570, 586], "neu": 605, "neutral": 53, "never": [32, 81, 131, 132, 133, 496, 525, 532, 594, 604], "new": [10, 16, 17, 18, 26, 27, 38, 46, 52, 53, 54, 69, 108, 109, 110, 111, 128, 131, 132, 133, 156, 158, 159, 171, 172, 173, 205, 220, 221, 238, 239, 240, 246, 247, 259, 263, 264, 279, 280, 496, 523, 527, 530, 531, 532, 571, 572, 573, 576, 577, 578, 581, 582, 583, 585, 586, 588, 591, 593, 596, 599, 601, 606], "new_dict_item": [16, 108, 110], "new_entries_dict": [16, 108, 110], "new_fileset": 10, "new_instance_uid": 601, "newdefineduid": 594, "newer": 47, "newli": [43, 131, 132, 133, 570, 585], "newlin": 20, "next": [43, 47, 96, 131, 132, 133, 163, 172, 173, 570, 573, 586, 598, 606], "next_indent_str": 8, "next_minu": 525, "next_plu": 525, "next_toward": 525, "nfound": 10, "nice": [205, 239, 247, 594], "nikitathespid": [570, 573], "nil": [570, 578], "no_meta": 596, "no_meta_path": 596, "node": [171, 172, 173, 596], "nois": [33, 36, 131, 132, 133, 220, 263, 601], "non": [24, 26, 32, 42, 43, 108, 109, 110, 111, 126, 128, 129, 131, 132, 133, 135, 144, 170, 172, 183, 196, 212, 235, 236, 250, 252, 270, 272, 274, 287, 496, 525, 529, 532, 533, 535, 538, 540, 546, 548, 570, 574, 575, 579, 580, 581, 582, 583, 586, 590, 591, 596, 604], "none": [0, 2, 8, 10, 14, 20, 32, 33, 53, 76, 78, 81, 82, 91, 94, 96, 97, 98, 106, 108, 109, 110, 111, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 141, 143, 144, 146, 147, 153, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 213, 220, 238, 239, 246, 247, 250, 252, 253, 260, 263, 269, 270, 272, 275, 277, 278, 279, 280, 282, 284, 496, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 555, 556, 567, 570, 579, 582, 583, 586, 594, 596, 600, 602, 605], "nor": [84, 85], "norigin": 10, "normal": [9, 16, 20, 25, 26, 27, 42, 69, 525, 570, 591], "not_dicom": 596, "notat": [26, 27, 28, 496, 525, 532, 533, 596], "note": [10, 18, 24, 26, 27, 28, 29, 43, 47, 53, 82, 93, 109, 111, 131, 132, 133, 134, 140, 144, 149, 150, 162, 166, 167, 179, 189, 205, 214, 215, 217, 218, 254, 255, 257, 258, 496, 523, 525, 526, 527, 529, 530, 531, 532, 533, 573, 595, 596, 597, 604, 605, 606], "notebook": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "noth": [36, 37, 38, 598], "notic": [596, 598], "notimplementederror": [97, 131, 132, 133, 208, 209, 210, 212, 273], "notimplementerror": [570, 572], "noun": 53, "noutput": 16, "novemb": 23, "now": [12, 20, 128, 131, 132, 133, 521, 527, 570, 572, 573, 576, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 594, 595, 596, 598, 601, 606], "np": [3, 4, 37, 206, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 238, 239, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 260, 263, 270, 272, 273, 274, 275, 556, 601, 602, 604, 606], "nr_channel": 3, "nr_fragment": [140, 150], "nr_frame": [144, 146], "nr_retri": [156, 158, 159], "nr_sampl": 3, "nsew": 0, "nucleu": [2, 8, 20], "null": [140, 206, 238, 246, 251, 266, 271, 546], "number": [2, 8, 11, 18, 20, 24, 26, 27, 28, 29, 30, 34, 39, 42, 45, 47, 49, 53, 109, 111, 128, 130, 131, 132, 133, 134, 138, 140, 141, 143, 144, 145, 146, 147, 150, 152, 156, 158, 159, 161, 162, 163, 172, 173, 174, 177, 180, 195, 197, 198, 204, 205, 206, 220, 238, 239, 246, 247, 260, 263, 265, 266, 274, 275, 277, 278, 281, 282, 496, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 570, 571, 575, 578, 582, 588, 589, 591, 595, 596, 598, 600, 602, 604, 605, 606], "number_class": 525, "number_of_fram": [29, 30, 34, 141, 143, 147, 219, 238, 246, 247, 262, 604], "numberofbeam": [24, 26], "numberofblock": 18, "numberofbrachyapplicationsetup": [24, 26], "numberoffractionsplan": [24, 26], "numberoffram": [209, 211, 212, 266, 267, 269, 274, 602, 604], "numberofframesinoverlai": 206, "numberofwaveformchannel": [3, 51, 556, 606], "numberofwaveformsampl": [3, 556, 606], "numer": [42, 172, 174, 281, 496, 525, 528, 532, 549, 570, 574, 583, 588, 590], "numpi": [2, 3, 4, 23, 29, 30, 34, 36, 37, 38, 42, 44, 45, 48, 49, 50, 51, 53, 82, 97, 102, 103, 131, 132, 133, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 238, 239, 240, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 263, 264, 270, 271, 272, 273, 274, 276, 538, 540, 556, 570, 571, 579, 581, 582, 583, 585, 589, 591, 594, 600, 601, 602, 604, 606], "numpy_handl": [97, 559, 570, 588], "numpypi": [570, 581], "o": [20, 22, 71, 73, 250, 252, 270, 272, 604], "ob": [2, 12, 20, 26, 27, 28, 32, 42, 44, 47, 131, 132, 133, 140, 188, 196, 240, 264, 541, 570, 574, 589, 596, 597, 601, 602, 604], "obj": [131, 132, 133], "object": [0, 10, 14, 29, 30, 34, 42, 47, 48, 53, 85, 99, 103, 128, 131, 132, 133, 134, 141, 142, 143, 147, 151, 152, 156, 158, 159, 162, 163, 164, 166, 167, 170, 172, 183, 205, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 243, 244, 245, 250, 252, 270, 272, 277, 281, 283, 527, 528, 530, 559, 570, 572, 573, 582, 583, 585, 588, 589, 591, 596, 598, 606], "observ": 605, "observationsubjectclass": 605, "observertyp": 605, "obviou": 602, "obvious": 606, "obxxxx1a": 69, "occasion": [595, 596, 598], "occur": [86, 87, 525, 570, 583, 594, 598], "occurr": [130, 205, 277, 278, 496, 532], "octob": 23, "od": [32, 183, 570, 579, 580, 588, 602, 604], "odd": [42, 131, 132, 133, 134, 206, 238, 239, 246, 266, 281, 570, 580, 589, 591, 596, 602], "off": [20, 26, 27, 43, 94, 163, 570, 577, 585, 595], "offer": [26, 27, 50, 131, 132, 133, 279, 604], "offic": 530, "offici": [42, 112, 113, 114, 115, 116, 117, 118, 125, 126, 127, 128, 496, 570, 576, 577, 596, 606], "offlin": 600, "offset": [2, 8, 20, 44, 47, 49, 128, 131, 132, 133, 134, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 156, 158, 159, 167, 168, 169, 172, 178, 179, 220, 238, 239, 246, 263, 544, 552, 570, 583, 586, 589, 591, 598, 601], "offsetofreferencedlowerleveldirectoryent": 170, "offsetofthenextdirectoryrecord": 170, "often": [48, 50, 109, 597], "ok": [37, 84, 85, 172, 594], "ol": [32, 183, 570, 579, 580, 588], "old": [131, 132, 133, 496, 532, 570, 571, 572, 576, 579, 585], "older": [525, 600], "onc": [44, 47, 82, 109, 111, 594, 595, 605], "one": [10, 24, 26, 30, 34, 36, 39, 41, 42, 45, 50, 51, 52, 83, 86, 87, 108, 110, 128, 131, 132, 133, 137, 138, 139, 140, 143, 144, 145, 148, 164, 165, 170, 172, 173, 174, 180, 184, 198, 213, 220, 221, 239, 240, 246, 247, 250, 252, 253, 259, 260, 263, 264, 270, 272, 275, 279, 496, 525, 526, 532, 570, 576, 579, 589, 591, 594, 596, 598, 600, 601, 602, 604, 605, 606], "ones": [281, 496, 528, 532, 593, 596, 598, 601], "onli": [10, 24, 26, 27, 28, 29, 30, 34, 36, 37, 39, 41, 42, 43, 45, 49, 50, 52, 53, 56, 80, 97, 109, 111, 112, 113, 114, 116, 117, 118, 119, 127, 131, 132, 133, 135, 144, 148, 162, 165, 172, 174, 181, 182, 183, 196, 209, 220, 226, 227, 230, 238, 239, 242, 246, 247, 250, 251, 252, 260, 261, 263, 270, 271, 272, 273, 275, 276, 282, 496, 529, 532, 534, 570, 576, 578, 579, 580, 581, 582, 583, 585, 586, 588, 591, 594, 596, 597, 598, 601, 604], "onlin": 23, "open": [9, 23, 25, 26, 157, 163, 250, 252, 270, 272, 570, 573, 594, 595, 596], "openjpeg": [36, 41, 44, 45, 600, 601, 604], "oper": [2, 8, 20, 29, 36, 37, 38, 42, 43, 45, 46, 47, 85, 131, 132, 133, 156, 158, 159, 214, 215, 217, 218, 238, 239, 250, 252, 254, 255, 257, 258, 270, 272, 496, 525, 532, 570, 573, 581, 583, 586, 596, 600, 604], "operand": [525, 570, 588], "opt": 606, "optim": [131, 132, 133], "optimis": [570, 588], "optimist": [570, 586], "option": [2, 8, 17, 20, 25, 27, 28, 30, 31, 32, 34, 35, 43, 45, 48, 81, 82, 94, 104, 105, 106, 107, 109, 111, 128, 129, 131, 132, 133, 135, 138, 140, 141, 142, 143, 144, 146, 147, 150, 151, 152, 156, 158, 159, 160, 162, 163, 166, 172, 173, 174, 180, 183, 195, 205, 206, 209, 211, 212, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 246, 247, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 263, 264, 266, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 496, 521, 522, 527, 530, 531, 532, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 548, 550, 551, 552, 553, 554, 555, 556, 559, 570, 572, 573, 579, 583, 586, 588, 591, 598, 601, 604, 606], "order": [4, 29, 30, 33, 34, 36, 37, 39, 50, 97, 131, 132, 133, 134, 144, 173, 177, 181, 182, 183, 195, 212, 220, 236, 247, 251, 263, 271, 281, 496, 525, 528, 570, 571, 578, 581, 583, 594, 601, 602, 604, 606], "ordereddict": [570, 578], "ordin": [496, 523, 527, 532], "org": [53, 597], "organ": [26, 27, 530], "organ_at_risk": [26, 27], "orient": [2, 8, 20], "origin": [2, 10, 20, 24, 26, 28, 29, 39, 44, 47, 49, 52, 89, 131, 132, 133, 164, 172, 209, 220, 238, 239, 240, 263, 264, 281, 496, 521, 525, 526, 528, 529, 530, 532, 570, 591, 594, 595, 596, 601, 604, 606], "original_character_set": [131, 132, 133, 570, 591], "original_encod": [131, 132, 133, 183, 195, 570, 591], "original_str": [530, 570, 581], "orphan": 172, "orthogon": 4, "oserror": 164, "other": [2, 8, 17, 20, 24, 30, 32, 34, 39, 41, 43, 44, 45, 47, 48, 49, 50, 52, 166, 183, 188, 189, 196, 251, 271, 496, 525, 530, 532, 591, 594, 596, 598, 601, 602, 604], "othermod": 605, "otherpatientid": [17, 570, 572], "otherpatientidssequ": [17, 596], "otherwis": [24, 26, 29, 30, 34, 39, 42, 88, 97, 115, 116, 120, 121, 125, 126, 127, 128, 131, 132, 133, 138, 141, 142, 143, 147, 151, 152, 160, 172, 174, 175, 178, 179, 183, 203, 216, 217, 218, 220, 221, 238, 239, 240, 246, 247, 250, 251, 252, 256, 257, 258, 259, 260, 261, 263, 264, 270, 271, 272, 273, 275, 276, 496, 522, 525, 530, 532, 534, 535, 536, 537, 538, 539, 540, 544, 545, 546, 548, 549, 551, 552], "our": [37, 594, 595, 596, 598, 601, 602, 606], "out": [0, 50, 52, 139, 172, 205, 251, 271, 277, 525, 526, 570, 586, 593, 594, 595, 596, 598, 602, 606], "outfil": [24, 26, 596], "outlin": 47, "output": [13, 16, 20, 24, 26, 27, 45, 50, 52, 53, 131, 132, 133, 214, 215, 239, 250, 252, 254, 255, 265, 270, 272, 523, 527, 531, 570, 583, 585, 592, 594, 595, 596, 598], "ov": [32, 183, 570, 583, 588], "over": [10, 20, 26, 27, 49, 570, 591, 596, 598], "overflow": 20, "overflowerror": [281, 525, 526, 528, 529], "overlai": [46, 50, 69, 131, 132, 133, 261, 276, 559, 570, 583, 586, 591, 596], "overlap": [496, 532], "overlay_arrai": [46, 131, 132, 133, 570, 583], "overlay_data_handl": [570, 586, 591], "overlaybitposit": 206, "overlaybitsalloc": 206, "overlaycolumn": 206, "overlayrow": 206, "overrang": 20, "overrid": [29, 133, 170, 219, 262, 524, 570, 581, 598], "overview": 598, "overwrit": [10, 555], "ow": [2, 20, 26, 28, 32, 44, 49, 51, 131, 132, 133, 183, 189, 239, 240, 264, 542, 570, 574, 585, 590, 596, 602, 604], "own": [8, 24, 25, 26, 27, 42, 47, 52, 131, 132, 133, 172, 183, 570, 580, 590, 596, 598, 604, 606], "p": [4, 10, 22, 24, 26, 56, 530, 570, 576, 598], "p0xxxxxx": 172, "p14": [41, 248], "p1xxxxxx": 172, "p25": [2, 8, 20], "p2xxxxxx": 172, "p98": 22, "pack": [22, 39, 49, 131, 132, 133, 239, 250, 251, 252, 261, 270, 271, 272, 276, 570, 580, 581, 586, 589], "pack_bit": [49, 559, 570, 581, 586, 591], "packag": [25, 26, 27, 45, 46, 48, 131, 132, 133, 206, 207, 208, 209, 210, 211, 212, 239, 240, 247, 250, 252, 264, 270, 272, 556, 570, 571, 574, 579, 586, 588, 598, 600, 604], "packbit": [38, 601], "packed_byt": 49, "pad": [2, 3, 8, 20, 26, 28, 131, 132, 133, 138, 140, 145, 201, 206, 238, 240, 246, 251, 264, 266, 271, 496, 525, 532, 570, 580, 582, 583, 586, 588, 589, 596, 602], "padraig": [570, 577, 578], "page": [37, 570, 579, 582, 593, 594, 595, 600], "pair": [25, 26, 133, 172, 219, 262, 281, 525, 526, 528, 529], "palett": [36, 37, 38, 39, 46, 105, 131, 132, 133, 170, 172, 213, 253, 260, 275, 570, 583, 585], "palette_color": [50, 69], "panchal": [570, 573], "papadopoulo": [570, 578], "paramet": [0, 10, 20, 24, 26, 50, 51, 52, 53, 76, 77, 78, 79, 81, 82, 94, 96, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 195, 196, 198, 199, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 238, 239, 240, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 282, 284, 496, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 570, 576, 578, 580, 586, 588, 589, 596, 598, 601, 604], "parametr": [50, 594], "pare": 203, "parent": [0, 26, 27, 134, 156, 158, 159, 172, 173, 570, 580, 591, 598], "parent_dataset": [570, 591], "parent_encod": [163, 195], "parent_seq": [570, 591], "pars": [162, 166, 268, 527, 559, 570, 571, 583, 585, 586, 591], "parse_basic_offset": [148, 570, 591], "parse_frag": [570, 591], "parser": [25, 26], "part": [10, 27, 28, 32, 36, 37, 38, 39, 43, 47, 50, 51, 53, 111, 128, 131, 132, 133, 134, 138, 140, 143, 144, 145, 146, 147, 148, 150, 151, 162, 175, 181, 182, 183, 196, 200, 206, 209, 214, 215, 216, 217, 218, 221, 251, 254, 255, 256, 257, 258, 259, 261, 271, 274, 276, 279, 281, 496, 521, 526, 528, 529, 530, 532, 570, 573, 576, 588, 594, 595, 596, 597, 598, 603, 606], "part05": [53, 595], "parti": [46, 530, 600], "partial": [279, 570, 573], "particular": [26, 27, 42, 49, 50, 89, 131, 132, 133, 165, 570, 573, 583, 596, 604, 605], "particularli": [50, 52], "partit": [496, 532], "pass": [36, 37, 42, 44, 49, 50, 53, 92, 104, 105, 107, 131, 132, 133, 138, 139, 205, 570, 573, 594, 595, 598, 601, 602, 604], "past": [39, 145, 167, 196], "pat": 42, "pat_nam": 9, "patch": [570, 573, 593, 594], "path": [0, 9, 10, 11, 12, 17, 24, 26, 27, 28, 30, 34, 42, 45, 50, 53, 69, 104, 105, 106, 107, 131, 132, 133, 155, 162, 171, 172, 175, 183, 203, 239, 247, 250, 252, 270, 272, 570, 586, 591, 595, 598, 604], "pathlib": [0, 10, 12, 69, 155, 175, 596, 598, 604], "pathlik": [131, 132, 133, 162, 164, 165, 172, 183, 250, 252, 270, 272, 570, 585], "patient": [2, 8, 9, 10, 12, 17, 20, 26, 27, 28, 131, 132, 133, 170, 172, 530, 570, 572, 579, 589, 595, 596, 598], "patient_id": 10, "patient_nam": 530, "patient_name_ideograph": 530, "patient_name_phonet": 530, "patientbirthd": [17, 42], "patientid": [9, 10, 12, 14, 17, 26, 28, 42, 131, 170, 172, 596, 598], "patientnam": [9, 10, 12, 14, 26, 28, 42, 69, 84, 85, 128, 131, 162, 170, 172, 282, 570, 582, 595, 596, 598], "patientsbirthd": [570, 572], "patientsetupsequ": 42, "patientsex": [42, 131, 132, 133], "patientsnam": [84, 85], "pattern": [20, 26, 28, 104, 105, 107, 570, 591], "paus": [602, 604], "paxxxxxx": 172, "pc": 598, "peak": [33, 36, 131, 132, 133, 220, 263, 601], "penalti": 524, "peopl": 598, "pep": [570, 572, 575, 579], "per": [2, 8, 20, 29, 30, 34, 36, 37, 38, 39, 41, 42, 50, 56, 131, 132, 133, 138, 139, 144, 175, 209, 220, 238, 246, 247, 260, 263, 274, 275, 570, 576, 583, 586, 596, 601, 602, 604], "per_fram": [221, 259, 570, 588], "perform": [2, 30, 34, 36, 37, 39, 43, 44, 45, 83, 112, 113, 114, 116, 117, 127, 131, 132, 133, 135, 172, 211, 239, 240, 247, 250, 252, 264, 270, 272, 525, 542, 570, 577, 580, 581, 600, 601, 604, 606], "perman": 109, "persist": 164, "person": [6, 17, 21, 32, 53, 530, 570, 581, 588, 592, 605], "person_nam": 22, "person_names_callback": 17, "personnam": [22, 32, 60, 128, 543, 570, 571, 582, 585, 586, 588, 591], "personname3": [570, 577, 582, 585], "personnameunicod": [570, 585, 591], "pet": [50, 213, 253], "pet_20_step": [213, 253], "peter": [10, 598], "phase": 20, "phonet": 530, "photometr": [2, 8, 20, 29, 38, 39, 50, 131, 132, 133, 207, 208, 209, 210, 211, 212, 220, 221, 238, 239, 240, 246, 250, 252, 259, 260, 263, 264, 265, 270, 272, 275, 570, 583, 601, 602, 604], "photometric_interpret": [29, 30, 34, 131, 132, 133, 219, 238, 246, 247, 260, 262, 275, 604], "photometricinterpret": [10, 36, 37, 38, 209, 211, 266, 267, 598, 601, 602, 604], "photon": [26, 28], "physic": [50, 598], "physician": [2, 8, 20], "pi": 606, "pickl": [570, 579, 583, 588], "pierr": [570, 573], "pil": [570, 573, 581], "pillow": [30, 34, 45, 48, 131, 132, 133, 210, 229, 230, 231, 232, 570, 579, 581, 583, 585, 588, 591, 594, 604], "pillow_handl": [97, 594], "pilsupportedcompressedpixeltransfersyntax": [570, 586, 591], "pip": [26, 27, 594, 595, 601, 602, 604, 606], "pipe": [26, 27], "pitch": 20, "pixel": [2, 4, 6, 7, 8, 13, 20, 23, 24, 26, 28, 33, 40, 42, 46, 48, 49, 52, 53, 54, 67, 80, 97, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 162, 166, 206, 207, 208, 209, 210, 211, 212, 557, 559, 570, 571, 573, 574, 579, 580, 581, 582, 583, 585, 586, 588, 589, 591, 592, 594, 596, 599, 600], "pixel_arrai": [2, 4, 9, 29, 37, 38, 42, 45, 46, 48, 53, 131, 132, 133, 559, 570, 572, 583, 591, 601, 602, 604], "pixel_array_opt": [29, 131, 132, 133, 570, 591], "pixel_byt": 42, "pixel_data_handl": [131, 132, 133, 557, 559, 570, 581, 588, 591], "pixel_dtyp": [238, 570, 591], "pixel_keyword": [29, 30, 238, 246], "pixel_properti": [238, 239], "pixel_represent": [29, 30, 34, 219, 238, 246, 247, 262], "pixelarrai": [570, 571, 572], "pixeldata": [2, 29, 30, 36, 37, 38, 42, 44, 50, 52, 136, 138, 139, 238, 246, 267, 570, 582, 583, 601, 602, 604], "pixeldataarrai": [570, 571], "pixelrepresent": [36, 37, 38, 209, 211, 212, 267, 273, 570, 582, 601, 602], "pixels1": 20, "pixelspac": [4, 9], "place": [36, 37, 38, 39, 44, 45, 131, 132, 133, 205, 220, 221, 240, 259, 263, 264, 277, 525, 570, 579, 596, 598, 601, 602], "placehold": [131, 132, 133], "plain": [570, 573], "plan": [26, 27, 28, 42, 69, 170], "plan1": [26, 28], "plan_d": 18, "planar": [29, 36, 39, 50, 131, 132, 133, 220, 238, 246, 260, 263, 274, 275, 570, 581, 602], "planar_configur": [29, 30, 219, 238, 246, 262], "planarconfigur": [209, 211, 212, 267, 274, 570, 579, 602], "plane": [4, 20, 30, 33, 37, 39, 50, 206, 247], "pleas": [0, 14, 25, 26, 28, 42, 131, 132, 133, 136, 137, 144, 145, 146, 148, 153, 183, 239, 250, 252, 270, 272, 570, 577, 588, 594, 595], "plot": [1, 5, 6, 7, 13, 570, 582, 592, 606], "plot_add_dict_entri": [16, 19, 592], "plot_anonym": [17, 19, 592], "plot_dicom_differ": [20, 21, 592], "plot_downsize_imag": [2, 5, 592], "plot_printing_dataset": [8, 13, 592], "plot_read_dicom": [9, 13, 592], "plot_read_fileset": [10, 13, 592], "plot_read_rtplan": [11, 13, 592], "plot_sequ": [18, 19, 592], "plot_waveform": [3, 5, 592], "plot_write_dicom": [12, 13, 592], "plt": [3, 4, 9, 48, 602, 604, 606], "plugin": [31, 35, 40, 44, 45, 54, 131, 132, 133, 211, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 252, 263, 264, 270, 272, 570, 588, 589, 600, 601, 604], "plugin_label": [30, 34], "plural": 10, "pn": [2, 12, 17, 20, 32, 42, 65, 128, 131, 132, 133, 530, 543, 570, 583, 588, 595, 596, 598], "point": [17, 24, 25, 26, 27, 28, 32, 52, 180, 209, 273, 496, 525, 526, 529, 532, 533, 570, 572, 577, 588, 594, 596, 605], "poor": 41, "pop": [131, 132, 133, 205, 277, 570, 582], "popitem": [131, 132, 133], "popul": [0, 12, 52, 281, 528, 605], "popular": 600, "portion": 42, "posit": [2, 8, 20, 24, 26, 27, 28, 141, 142, 143, 145, 147, 148, 151, 152, 154, 156, 158, 159, 167, 177, 178, 179, 196, 205, 238, 239, 277, 281, 496, 525, 526, 528, 529, 532], "posix": [523, 527], "posixpath": [42, 69, 596], "possibl": [17, 30, 37, 39, 42, 43, 50, 93, 128, 131, 132, 133, 147, 156, 158, 159, 170, 181, 182, 183, 212, 239, 261, 276, 496, 532, 533, 570, 579, 581, 582, 583, 588, 591, 597, 598, 604, 605], "possibli": [50, 131, 132, 133, 239], "post": [20, 570, 585], "posterior": 20, "potenti": [52, 601], "ppscan": 20, "pq": [496, 532], "pr": [570, 589, 594, 595], "practic": [37, 46, 69, 172], "pre": [26, 28, 42, 570, 591, 594], "preambl": [131, 132, 133, 162, 167, 183, 196, 203, 570, 579, 596], "preced": [47, 570, 591], "precis": [80, 88, 268, 525, 526, 530, 533, 570, 588], "predefin": 43, "predict": [144, 236], "prefer": 596, "prefer_lut": [217, 257, 570, 586], "prefix": [24, 26, 27, 28, 53, 154, 162, 167, 174, 183, 196, 447, 496, 521, 530, 532, 570, 582, 591, 594, 595, 596, 605], "preliminari": [570, 571, 574], "prepar": [570, 577], "prepend": 132, "prerequisit": [46, 601, 602, 604, 606], "prescrib": 20, "prescript": [26, 27], "presenc": [145, 213, 253, 596], "present": [16, 26, 28, 39, 49, 79, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 130, 131, 132, 133, 135, 144, 145, 146, 148, 154, 162, 167, 170, 172, 173, 183, 196, 205, 213, 214, 215, 216, 217, 218, 219, 220, 240, 247, 253, 254, 255, 256, 257, 258, 262, 263, 264, 277, 278, 496, 532, 570, 572, 580, 582, 583, 591, 596, 602, 604, 606], "preserv": [131, 132, 133, 183, 570, 578, 585], "pretti": [173, 594], "prettier": 42, "prettifi": 173, "prevent": [570, 583], "previou": [52, 173, 174, 570, 576, 579, 585, 586, 591], "previous": [39, 131, 132, 133, 164, 570, 581, 585, 588], "primari": [20, 26, 28, 47, 596], "primarili": [570, 574], "primer": 595, "print": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 36, 37, 42, 49, 109, 111, 131, 132, 133, 250, 270, 570, 572, 583, 592, 595, 596, 598, 604, 606], "printabl": [496, 532], "prior": [39, 44, 145, 183, 239, 247, 570, 591, 601, 604], "prioriti": [183, 195, 570, 591], "privat": [6, 15, 17, 19, 20, 24, 26, 27, 28, 39, 42, 46, 52, 108, 109, 110, 111, 118, 119, 122, 123, 124, 126, 128, 129, 131, 132, 133, 134, 170, 171, 172, 196, 281, 442, 496, 522, 559, 570, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 585, 586, 588, 589, 590, 591, 592, 596, 598], "private_block": [16, 47, 131, 132, 133], "private_cr": [16, 47, 110, 111, 119, 122, 123, 124, 131, 132, 133, 134, 281], "private_creator_el": 134, "private_elem": 596, "privateblock": [47, 131, 132, 133, 559], "privaterecorduid": 172, "privileg": 600, "probabl": [23, 52, 598], "problem": [570, 588, 596], "proc": 20, "procedur": 598, "process": [20, 25, 26, 30, 34, 36, 37, 39, 45, 131, 132, 133, 144, 221, 231, 232, 235, 236, 238, 239, 246, 250, 252, 270, 272, 496, 524, 562, 570, 573, 585, 588, 590, 591, 594, 595, 601, 604, 606], "produc": [12, 24, 26, 29, 50, 52, 53, 281, 525, 528, 570, 578, 583, 588, 591], "product": [20, 525], "program": [26, 27, 48, 570, 571, 576], "progress": [36, 570, 590, 595], "project": [9, 10, 20, 97, 594, 595, 600], "projector": 20, "prolept": [523, 527], "promot": [570, 576], "prompt": 42, "pronoun": 53, "proof": [46, 96], "propag": [570, 583], "proper": [53, 570, 573], "properli": [594, 604], "properti": [10, 14, 29, 30, 34, 42, 45, 56, 128, 131, 132, 133, 156, 158, 159, 171, 172, 173, 238, 239, 246, 247, 279, 280, 281, 496, 530, 570, 571, 573, 576, 579, 580, 586, 591, 598, 601, 602], "protect": 43, "protocol": [170, 281, 528], "provid": [30, 34, 39, 42, 47, 50, 54, 97, 128, 131, 132, 133, 141, 143, 147, 206, 209, 211, 212, 239, 247, 556, 570, 577, 597, 600, 601, 604, 605], "ps3": [22, 530], "psnr": [131, 132, 133, 220, 263], "pt000000": [10, 598], "pt000001": [10, 598], "pt000002": [10, 598], "pt000003": 10, "ptv": [26, 27], "ptxxxxxx": 172, "pubchem_cid": 605, "public": [39, 131, 132, 133, 183], "pull": [25, 26, 28, 593, 600], "puls": 20, "punctuat": [496, 532], "purpos": [36, 37, 601], "push": [594, 595], "put": 184, "px": 37, "py": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 42, 52, 84, 85, 97, 570, 571, 574, 575, 576, 577, 578, 579, 587, 592, 594, 596, 598, 601, 604], "py3": 600, "pydicom": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 25, 29, 30, 32, 34, 36, 37, 38, 40, 45, 49, 50, 51, 52, 53, 60, 70, 557, 559, 571, 573, 574, 575, 576, 577, 578, 579, 580, 583, 585, 586, 588, 592, 594, 595, 596, 597, 598, 599, 601, 602, 604, 605, 606], "pydicom_futur": [43, 570, 586], "pydicom_seri": [570, 574, 577, 578], "pydicom_subcommand": [25, 26], "pydicom_test": [10, 598], "pyjpegl": [37, 44, 131, 132, 133, 208, 220, 233, 234, 243, 244, 263, 570, 591, 601], "pylibjpeg": [29, 38, 44, 45, 131, 132, 133, 211, 220, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 245, 247, 263, 570, 586, 588, 591, 601, 602, 604], "pylibjpeg_handl": 97, "pypi": [570, 579, 581, 600], "pyplot": [3, 4, 9, 48, 602, 604, 606], "pyproject": [43, 570, 590], "pysid": [570, 577], "pytest": [570, 590], "python": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 40, 41, 42, 43, 47, 48, 52, 53, 54, 76, 77, 79, 94, 131, 132, 133, 207, 208, 210, 496, 532, 570, 571, 573, 574, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 590, 591, 594, 595, 596, 597, 600, 601, 602, 604, 606], "python3": 598, "pythoncod": [24, 26], "q": [26, 27, 28, 594, 601], "qt": [570, 577], "qualiti": [33, 36, 37, 131, 132, 133, 220, 263, 601], "quantiti": [50, 556, 606], "quantiz": 525, "queri": [10, 93, 172, 598], "question": 593, "quickli": [165, 598], "quiet": [26, 27, 28, 525], "quinci": 530, "quit": [52, 570, 573, 594], "r": [20, 39, 128, 131, 132, 133, 496, 532, 597, 601, 602], "r1": 39, "r100": [570, 572], "r102": [570, 572], "r103": [570, 572], "r104": [570, 572], "r105": [570, 572], "r109": [570, 572], "r110": [570, 572], "r111": [570, 572], "r113": [570, 572], "r2": 39, "r45": [570, 571], "r46": [570, 571], "r50": [570, 571], "r51": [570, 571], "r55": [570, 571], "r64": [570, 571], "r65": [570, 571], "r67": [570, 571], "r68": [570, 571], "r69": [570, 571], "r70": [570, 571], "r72": [570, 571], "r73": [570, 571], "r78ba350a3eb8": [570, 577], "r91": [570, 572], "r95": [570, 572], "r96": [570, 572], "r97": [570, 572], "r98": [570, 572], "ra": 20, "radiotherapi": 170, "radiu": 602, "radix": 525, "radlex": 605, "rai": [20, 26, 28, 596], "rais": [43, 56, 76, 77, 79, 81, 82, 84, 85, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 129, 130, 131, 132, 133, 134, 135, 145, 148, 154, 156, 158, 159, 162, 164, 167, 172, 180, 181, 183, 196, 205, 206, 207, 208, 209, 210, 211, 212, 239, 247, 251, 261, 271, 273, 276, 277, 278, 281, 284, 496, 521, 525, 526, 528, 529, 532, 533, 538, 540, 552, 559, 570, 574, 575, 580, 582, 583, 586, 588, 589, 591, 596, 598, 601, 604], "raise_orphan": 172, "randbelow": [521, 570, 591], "random": [521, 570, 591], "rang": [20, 30, 34, 37, 39, 49, 93, 205, 214, 215, 247, 250, 254, 255, 270, 277, 496, 525, 532, 570, 581, 583, 596, 601], "rare": [570, 591], "rate": [26, 27], "rather": [24, 26, 27, 28, 49, 52, 128, 131, 132, 133, 172, 205, 219, 262, 525, 570, 571, 572, 579, 583, 585, 588, 591, 596], "ratio": [20, 33, 36, 37, 38, 131, 132, 133, 220, 263, 281, 525, 526, 528, 529, 601], "ration": [281, 528], "raw": [29, 30, 34, 37, 42, 49, 50, 51, 129, 130, 131, 132, 133, 141, 143, 147, 153, 160, 164, 170, 239, 247, 250, 252, 270, 272, 556, 570, 576, 582, 585, 601, 602, 604, 606], "raw_data_el": [129, 554], "raw_data_elem": 164, "rawdatael": [60, 91, 129, 131, 132, 133, 160, 164, 182, 194, 554], "rawiobas": [158, 159], "raybaut": [570, 573], "rb": [132, 250, 252, 270, 272, 596], "rbg": [570, 588], "rd000000": 598, "re": [10, 16, 49, 54, 135, 446, 447, 593, 594, 595, 596, 598, 600, 601, 602, 604, 606], "reach": [166, 178, 180, 238], "reachabl": 595, "read": [0, 2, 6, 7, 8, 13, 14, 16, 17, 18, 20, 24, 26, 27, 28, 29, 42, 43, 47, 49, 50, 52, 54, 56, 70, 76, 82, 89, 94, 106, 131, 132, 133, 136, 137, 141, 142, 143, 145, 147, 151, 152, 153, 154, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 176, 177, 179, 180, 203, 207, 209, 238, 239, 250, 252, 270, 272, 522, 528, 529, 559, 570, 571, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 585, 586, 588, 589, 590, 591, 592, 595, 597, 598, 599, 604, 605], "read_byt": 14, "read_data_el": 160, "read_dataset": [14, 70, 166], "read_deferred_data_el": 70, "read_dicomdir": [570, 578], "read_encod": [131, 132, 133, 570, 591], "read_exact": [156, 158, 159], "read_fil": [570, 572, 573, 574, 579, 588, 591], "read_file_meta_info": [70, 132], "read_implicit_vr": [131, 132, 133, 570, 591], "read_item": [570, 591], "read_little_endian": [131, 132, 133, 570, 591], "read_onli": 209, "read_ow": [570, 571], "read_parti": [70, 162, 203, 596], "read_preambl": [70, 203, 596], "read_sequ": 70, "read_sequence_item": 70, "read_siz": [177, 178, 179, 180], "read_tag": [156, 158, 159], "read_u": [156, 158, 159], "read_ul": [156, 158, 159], "read_undefined_length_valu": 70, "readabl": [131, 132, 133, 141, 142, 143, 147, 151, 152, 162, 570, 591], "readablebuff": [132, 141, 142, 143, 147, 151, 152, 156, 158, 159, 162], "reader": 53, "readfil": [570, 572], "readi": [594, 595], "reading_validation_mod": [43, 56, 76, 77, 79, 95, 129, 131, 132, 133, 570, 589], "readm": 10, "real": [281, 526, 528, 529, 594, 595, 606], "realli": [42, 570, 573, 582], "reason": [53, 595, 604], "rebuild": 595, "recalcul": 598, "receiv": [20, 196], "recent": [85, 594, 595, 596, 598, 601, 604], "recommend": [23, 25, 26, 30, 36, 37, 42, 43, 44, 45, 93, 131, 132, 133, 138, 139, 172, 205, 251, 271, 277, 596, 598, 600, 601], "recon": 20, "reconstruct": [20, 36], "record": [10, 20, 170, 171, 172, 173, 570, 583, 589, 598], "record_gen": 598, "record_typ": [173, 598], "recordinuseflag": 170, "recordnod": [171, 172, 559], "recreat": [24, 26, 570, 578], "recurs": [0, 4, 47, 131, 132, 133, 570, 572, 574], "recursionerror": [570, 591], "red": [36, 37, 38, 39, 213, 253, 570, 585, 594, 595], "reduc": [49, 50, 174, 221, 259, 570, 581, 586, 591, 598], "ref": 20, "refactor": [570, 591], "refd_beam1": [24, 26], "refd_beam_sequ": [24, 26], "refer": [2, 8, 20, 26, 27, 39, 42, 50, 53, 93, 138, 140, 143, 144, 145, 146, 147, 148, 150, 151, 171, 206, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 251, 253, 254, 255, 256, 257, 258, 259, 261, 271, 274, 276, 521, 570, 573, 594, 598, 601, 606], "referenc": [24, 26, 27, 28, 42, 53, 165, 171, 172, 598], "referencedbeamsequ": [24, 26], "reflect": 238, "refus": 97, "reg": 20, "regard": 2, "regex": [446, 447], "regist": [16, 25, 26, 47, 128, 496, 522, 532, 570, 586, 591, 596], "register_error": [496, 532], "register_transfer_syntax": [442, 570, 591], "registr": 170, "regress": [570, 584, 585, 594], "regular": [26, 27, 42, 496, 532, 570, 590], "reinstal": [26, 27], "rel": [156, 158, 159, 175, 570, 591], "relat": [25, 26, 27, 37, 39, 43, 49, 51, 59, 131, 132, 133, 134, 183, 206, 209, 211, 212, 238, 260, 275, 556, 566, 570, 571, 591, 594, 598, 601, 606], "relationship": [36, 37, 38, 172, 595], "relative_to": 10, "releas": [23, 47, 559, 579, 583, 586], "relev": [44, 181, 182, 183, 594], "reli": [45, 80], "reload": 42, "remain": [39, 145, 172, 496, 532, 570, 576, 595], "remaind": 525, "remainder_near": 525, "rememb": [42, 47, 49], "remind": 53, "remot": [594, 595], "remov": [10, 12, 17, 42, 43, 46, 131, 132, 133, 136, 137, 145, 146, 148, 153, 171, 172, 173, 183, 205, 239, 247, 250, 252, 260, 265, 270, 272, 275, 277, 496, 532, 557, 558, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 594, 596], "remove_plugin": [239, 247], "remove_private_tag": [17, 47, 131, 132, 133], "removeprefix": [496, 532], "removesuffix": [496, 532], "renam": [570, 571, 579, 585, 590, 591], "reopen": 12, "reorgan": [570, 571, 573], "rep": 20, "repeat": [26, 27, 49, 118, 121, 125, 126, 172, 570, 581, 590, 596], "repetit": [2, 8, 20, 52], "replac": [17, 76, 77, 79, 109, 496, 523, 527, 531, 532, 570, 582, 589], "replace_un_with_known_vr": [570, 585], "replic": [26, 27], "report": [570, 583, 593, 599], "repositori": [26, 27, 106, 570, 591, 600], "repr": [8, 100, 496, 532, 570, 585], "repr_valu": 8, "repres": [10, 34, 42, 50, 101, 128, 131, 132, 133, 145, 162, 183, 281, 523, 527, 528, 529, 530, 533, 594, 601, 604, 606], "represent": [2, 8, 20, 26, 28, 29, 32, 36, 38, 39, 41, 42, 61, 64, 75, 109, 111, 113, 123, 128, 131, 132, 133, 134, 140, 171, 172, 173, 214, 215, 220, 238, 239, 246, 250, 252, 254, 255, 260, 263, 270, 272, 275, 278, 281, 525, 526, 528, 529, 530, 532, 533, 550, 553, 559, 570, 586, 588, 591, 596, 597, 602, 604, 606], "reproduc": 594, "repval": [128, 131, 132, 133], "request": [25, 26, 28, 42, 281, 528, 570, 586, 588, 593], "requir": [2, 10, 12, 20, 26, 27, 29, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 128, 131, 132, 133, 138, 140, 141, 143, 144, 145, 146, 147, 162, 172, 181, 183, 196, 205, 206, 207, 208, 209, 211, 212, 213, 217, 218, 220, 238, 239, 240, 247, 250, 252, 253, 257, 258, 261, 263, 264, 266, 270, 272, 274, 276, 282, 522, 533, 570, 573, 577, 581, 585, 586, 591, 595, 596, 598, 600, 601, 602, 604, 606], "resampl": 209, "rescal": [20, 37, 46, 214, 215, 217, 218, 254, 255, 257, 258, 601, 604], "rescaleintercept": 604, "rescaleslop": 604, "reserv": [47, 496, 532], "reset": [77, 96, 98, 131, 132, 133, 147, 152], "reset_data_element_callback": 559, "reshap": [97, 131, 132, 133, 206, 211, 238, 239, 250, 252, 270, 272, 274], "reshape_overlay_arrai": 206, "reshape_pixel_arrai": [570, 591], "resiz": 49, "reslic": [4, 5, 592], "resolut": 36, "resolv": [0, 129, 181, 570, 576, 582, 591], "resort": [570, 589], "resourc": 594, "respect": [76, 93, 570, 580], "respiratori": 606, "respons": [162, 530, 597], "responsible_party_nam": 530, "responsible_party_name_ideograph": 530, "responsible_party_name_phonet": 530, "rest": [496, 532, 570, 589, 595], "restor": [570, 585], "restrict": [37, 39, 602], "restructuredtext": 595, "result": [10, 17, 24, 25, 26, 27, 36, 37, 38, 41, 43, 44, 52, 77, 79, 131, 132, 133, 183, 220, 239, 240, 250, 252, 263, 264, 270, 272, 281, 496, 521, 525, 532, 570, 588, 591, 594, 595, 601, 602, 604], "result_load": 10, "ret": 128, "retain": [533, 570, 588], "retir": [39, 109, 116, 128, 131, 132, 133, 181, 182, 250, 252, 270, 272, 287, 496, 570, 586], "retriev": [42, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 127, 128, 131, 132, 133, 570, 583, 591, 596, 597], "return": [10, 11, 14, 29, 30, 34, 39, 42, 47, 49, 50, 51, 53, 69, 76, 77, 79, 80, 90, 91, 97, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 195, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 238, 239, 240, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 496, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 570, 571, 572, 573, 574, 580, 581, 582, 583, 585, 586, 588, 589, 591, 596, 597, 598, 602, 604, 606], "rev": 530, "revers": [36, 45, 173, 205, 277, 570, 583], "revert": [131, 132, 133, 570, 577], "review": [24, 26, 593, 594, 595], "revis": [20, 570, 574, 576, 577], "rewind": [14, 167, 177, 178, 179, 570, 577], "rewrit": [528, 529], "rfind": [496, 532], "rg1_unci": [570, 586], "rgb": [29, 30, 33, 34, 36, 37, 38, 39, 50, 97, 131, 132, 133, 207, 208, 209, 210, 211, 212, 213, 221, 238, 239, 240, 250, 252, 253, 259, 260, 264, 270, 272, 275, 570, 580, 583, 588, 591, 601, 604], "rgb_color": [36, 37, 38, 69, 601], "rgba": [213, 253], "rhapsod": 20, "rhythm": 606, "rickard": [570, 578], "right": [20, 36, 131, 132, 133, 220, 263, 496, 525, 532, 601], "rightmost": 525, "rindex": [496, 532], "risk": [26, 27], "rjust": [496, 532], "rle": [35, 39, 41, 44, 45, 50, 131, 132, 133, 138, 139, 144, 211, 212, 220, 237, 245, 247, 248, 249, 263, 274, 449, 570, 581, 582, 588, 589, 591, 600], "rle_encode_fram": [570, 588, 591], "rle_handl": [97, 570, 589, 591], "rle_segment_ord": [29, 212], "rlecompressedlosslesssyntax": [570, 586, 591], "rlelossless": [30, 34, 38, 44, 131, 132, 133, 220, 263, 594, 601], "rlelosslessdecod": 30, "rlelosslessencod": [33, 34, 38, 570, 588, 591], "rletransfersyntax": [570, 586, 591], "rn": 39, "robert": 530, "root": [0, 9, 10, 22, 26, 27, 97, 172, 173, 175, 435, 521, 525, 596, 598], "rotat": [20, 525], "roughli": 602, "round": [88, 251, 271, 525], "round_half_even": 525, "rout": 20, "routin": 179, "row": [0, 2, 8, 9, 20, 26, 28, 29, 30, 34, 37, 39, 49, 50, 131, 132, 133, 206, 209, 211, 212, 219, 220, 221, 238, 239, 246, 247, 250, 251, 252, 259, 260, 262, 263, 266, 267, 270, 271, 272, 274, 275, 601, 602, 604], "rowconfigur": 0, "rpartit": [496, 532], "rpcl": [41, 45, 227, 248], "rsplit": [496, 532], "rst": [594, 595], "rstrip": [496, 532], "rt": [26, 27, 28, 42, 69, 170, 172, 598], "rt_dose": [69, 598, 604], "rt_plan": [42, 69], "rt_ss": 69, "rtdose": 69, "rtplan": [6, 7, 13, 24, 26, 27, 28, 42, 69, 162, 592], "rtstruct": 69, "ruff": [570, 591], "rule": 194, "run": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 42, 43, 52, 109, 131, 132, 133, 530, 570, 573, 576, 586, 591, 595, 596, 599, 600], "runner": [30, 34, 238, 246, 601], "runtimeerror": [131, 132, 133, 211, 604], "safe": [239, 247, 283], "sag_aspect": 4, "sagitt": [1, 5, 6, 570, 582, 592], "sai": [52, 594, 596], "sake": [251, 271], "same": [4, 30, 34, 42, 43, 49, 109, 131, 132, 133, 158, 159, 172, 205, 239, 496, 523, 525, 526, 527, 532, 570, 574, 576, 595, 596, 598, 601, 604], "same_quantum": 525, "sampl": [2, 8, 20, 29, 30, 34, 36, 37, 38, 39, 41, 50, 51, 131, 132, 133, 220, 238, 239, 246, 247, 250, 252, 260, 263, 268, 270, 272, 274, 275, 556, 570, 591, 601, 602, 604, 606], "samples_per_pixel": [29, 30, 34, 219, 238, 246, 247, 262, 604], "samplesperpixel": [36, 37, 38, 209, 211, 212, 266, 267, 274, 570, 576, 581, 601, 602], "sampling_fq": 3, "samplingfrequ": [3, 51, 606], "satisfi": [525, 526, 533], "save": [14, 16, 24, 26, 44, 49, 50, 570, 573, 576, 591, 595, 596, 597, 606], "save_a": [12, 16, 17, 24, 26, 44, 49, 50, 131, 132, 133, 183, 220, 263, 570, 572, 585, 591, 596, 601, 606], "save_filenam": [24, 26], "savea": [570, 572], "savenam": [24, 26], "saw": 596, "sb": 556, "scale": 20, "scaleb": 525, "scan": [2, 8, 20, 26, 28, 170], "schaefer": [570, 577], "scheme": [36, 37, 38, 160, 278, 279, 280, 496, 532, 543, 544, 550, 553, 554, 567, 601, 604, 605, 606], "scheme_design": [278, 279, 567, 570, 591, 605], "scheme_vers": [278, 567, 605], "scientif": 533, "scope": 601, "scout": [4, 20], "scratch": [12, 18, 46, 131, 132, 133, 183, 570, 574, 575, 588, 594, 602, 604], "screen": [20, 24, 26], "script": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 52, 570, 580, 591], "scroll": 594, "sct": [567, 570, 591, 605], "se": [2, 8, 20], "se000000": [10, 598], "se000001": [10, 598], "se000002": [10, 598], "search": [10, 106, 144, 172, 177, 178, 179, 496, 532, 570, 588, 591, 596, 598], "sec": 20, "second": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 36, 37, 39, 43, 525, 527, 530, 531, 601, 602, 606], "secondari": [2, 8, 20], "secret": 521, "sect": 530, "sect_6": 53, "section": [2, 24, 25, 26, 27, 36, 37, 38, 39, 42, 44, 47, 50, 52, 53, 56, 100, 128, 131, 132, 133, 134, 138, 140, 150, 196, 200, 206, 221, 239, 250, 251, 252, 259, 261, 270, 271, 272, 274, 276, 530, 594, 595], "secur": [570, 591], "see": [23, 24, 26, 27, 28, 34, 36, 37, 38, 42, 43, 44, 50, 52, 56, 128, 131, 132, 133, 134, 160, 163, 166, 170, 178, 179, 180, 183, 196, 200, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 247, 250, 252, 263, 264, 270, 272, 525, 529, 530, 570, 573, 583, 584, 585, 588, 591, 594, 595, 596, 598, 600, 602, 605], "seek": [14, 131, 132, 133, 141, 142, 143, 147, 151, 152, 156, 158, 159, 162, 183, 570, 572, 582, 591], "seem": 594, "seen": [10, 25, 26, 89, 595, 606], "segment": [20, 29, 212, 213, 253, 570, 581, 588], "select": [42, 131, 132, 133, 144, 236, 601], "self": [14, 154, 281, 496, 523, 525, 526, 527, 528, 529, 531, 596, 601, 604], "semant": [10, 53, 172, 530, 598], "send": [196, 594, 595], "sens": [570, 573], "sensit": [24, 26, 51, 52, 131, 132, 133, 556, 606], "sent": [570, 591], "sep": [496, 527, 532], "separ": [37, 44, 100, 128, 131, 132, 133, 138, 139, 496, 527, 530, 532, 570, 573, 574, 601, 602, 604], "septemb": 23, "seq": [53, 596], "seq_idx": 0, "seq_item": 0, "sequenc": [0, 2, 3, 6, 8, 15, 19, 20, 24, 26, 27, 28, 32, 46, 51, 52, 53, 60, 77, 79, 89, 131, 132, 133, 140, 144, 145, 146, 163, 168, 169, 173, 176, 177, 199, 200, 214, 215, 216, 217, 254, 255, 256, 257, 530, 544, 556, 559, 570, 571, 572, 576, 577, 580, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 598, 606], "sequence_element_format": [131, 132, 133], "sequence_item": 8, "seri": [2, 8, 10, 20, 53, 165, 170, 172, 570, 574, 595, 598], "serial": [2, 8, 20, 128, 131, 132, 133, 597], "series_uid": 10, "seriesinstanceuid": 10, "seriesnumb": [10, 42, 598], "server": 595, "servic": [20, 598], "session": [42, 43, 47, 131, 132, 133, 595], "set": [2, 6, 7, 12, 13, 18, 20, 25, 26, 27, 28, 32, 36, 39, 42, 43, 44, 46, 49, 50, 52, 54, 56, 69, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 91, 92, 93, 95, 96, 101, 102, 103, 109, 128, 129, 131, 132, 133, 145, 148, 154, 156, 158, 159, 162, 163, 164, 170, 171, 172, 174, 175, 180, 183, 195, 220, 238, 240, 246, 260, 263, 264, 275, 496, 522, 525, 529, 530, 532, 533, 534, 559, 570, 571, 576, 579, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 596, 597, 599, 600, 601, 602, 604, 606], "set_aspect": 4, "set_data": [602, 604], "set_decod": 238, "set_default": [25, 26], "set_encod": 246, "set_opt": [30, 34, 238, 246], "set_original_encod": [131, 132, 133], "set_pixel_data": [131, 132, 133, 559, 570, 591], "set_private_encod": [496, 522, 570, 591], "set_sourc": [238, 246], "set_titl": [3, 604], "set_xlabel": 3, "set_ylabel": [3, 606], "setdefault": [131, 132, 133, 570, 582, 586], "setup": [25, 26, 27, 28, 570, 577, 578, 590], "setuptool": [25, 26, 570, 571, 578, 588], "sever": [48, 56, 570, 577, 579], "sex": [2, 8, 20], "sexxxxxx": 172, "sfov": 20, "sh": [2, 12, 16, 20, 26, 28, 32, 42, 47, 196, 553, 596], "sha512": 521, "shall": [97, 140, 144, 145, 148, 149, 150, 160, 183, 196], "shallow": [131, 132, 133], "shape": [2, 4, 37, 49, 50, 51, 131, 132, 133, 206, 207, 208, 211, 220, 221, 239, 247, 250, 251, 252, 259, 260, 263, 270, 271, 272, 274, 275, 556, 601, 602, 604, 606], "share": 598, "shift": [29, 525], "short": [32, 552, 594, 596], "should": [18, 25, 26, 27, 30, 32, 34, 36, 37, 38, 39, 42, 43, 47, 49, 50, 52, 53, 128, 131, 132, 133, 141, 143, 144, 145, 146, 147, 148, 162, 167, 170, 172, 174, 181, 182, 196, 205, 207, 208, 209, 210, 211, 212, 220, 221, 239, 247, 250, 251, 252, 259, 263, 270, 271, 272, 279, 521, 549, 570, 572, 573, 580, 581, 586, 594, 595, 596, 598, 599, 601, 602, 604, 606], "should_change_photometricinterpretation_to_rgb": [207, 208, 209, 210, 211, 212], "shouldn": 29, "show": [2, 3, 4, 6, 9, 10, 12, 17, 21, 24, 25, 27, 47, 52, 53, 109, 128, 570, 571, 575, 577, 588, 590, 592, 595, 596, 602, 604, 606], "show_charset_nam": [21, 22, 592], "show_dicomdir": [570, 578, 579], "show_file_meta": [559, 570, 585], "shown": [25, 26, 28, 42, 47, 52, 56, 274, 570, 571, 572, 585, 596, 598], "showvr": 128, "shrunk": 50, "shutil": 598, "sibl": 173, "side": 20, "siemen": 69, "sigma": 605, "sign": [29, 30, 32, 34, 36, 37, 39, 50, 80, 247, 281, 525, 528, 570, 586, 594, 595, 601, 604, 606], "signal": [30, 33, 34, 36, 131, 132, 133, 220, 263, 525, 601], "signal_to_noise_ratio": 33, "signatur": [30, 34, 158, 159, 570, 586], "signed": [29, 37, 131, 132, 133, 239, 250, 252, 270, 272], "signific": [29, 39, 43, 281, 528, 535, 546, 548, 570, 573], "silent": [570, 588], "similar": [26, 27, 53, 131, 132, 133, 200, 525, 570, 572, 576, 597, 602, 605], "similarli": [42, 524, 596], "simpl": [22, 42, 570, 571], "simpler": 596, "simplest": [43, 598, 600], "simpli": [26, 27], "simplifi": [156, 158, 570, 572, 576, 591, 601], "simul": [16, 131, 132, 133], "sin": 606, "sinc": [18, 39, 47, 131, 132, 133, 136, 137, 144, 145, 146, 148, 153, 183, 525, 557, 558, 570, 590, 594, 598, 606], "sine": 606, "singl": [25, 26, 30, 32, 34, 36, 37, 38, 39, 53, 78, 108, 110, 128, 131, 132, 133, 138, 140, 145, 147, 148, 153, 169, 170, 172, 201, 202, 205, 206, 211, 238, 239, 246, 247, 250, 252, 260, 270, 272, 274, 275, 540, 549, 570, 571, 581, 589, 594, 597, 598, 602, 604], "singleton": 56, "site": 598, "size": [2, 8, 9, 20, 24, 26, 34, 36, 50, 52, 97, 128, 156, 158, 159, 163, 180, 207, 208, 496, 532, 570, 580, 586, 590, 600, 602], "size_in_byt": 559, "skip": [4, 18, 570, 589, 594, 604], "skipcount": 4, "sl": [20, 26, 28, 32, 556], "slice": [1, 2, 5, 6, 8, 9, 20, 26, 28, 131, 132, 133, 496, 532, 570, 579, 580, 582, 592, 604], "sliceloc": [4, 9, 26, 28], "slicethick": 4, "slight": 604, "slope": [20, 214, 215, 254, 255], "slow": [570, 577], "slower": [38, 41, 44, 261, 276], "slowest": [570, 589], "small": [570, 573, 579, 581, 593, 600], "smaller": [525, 597], "smallest": [2, 8, 20, 525], "smart": 20, "smptest211020uncompressedinterlacedactivevideo": [570, 591], "smptest211020uncompressedprogressiveactivevideo": [570, 591], "smptest211030pcmdigitalaudio": [570, 591], "sn": 20, "snan": 525, "snapshot": 600, "snip": 596, "snippet": [25, 26, 47], "snome": 279, "so": [3, 16, 26, 27, 30, 32, 34, 37, 39, 42, 43, 44, 49, 50, 52, 53, 93, 131, 132, 133, 172, 174, 183, 203, 279, 522, 524, 525, 570, 571, 574, 591, 594, 596, 597, 598, 601, 602, 606], "softwar": [2, 8, 20, 43, 600], "softwarevers": 42, "some": [9, 14, 16, 17, 26, 28, 42, 43, 47, 49, 50, 51, 52, 53, 56, 76, 89, 99, 131, 132, 166, 183, 525, 526, 533, 570, 571, 572, 574, 576, 579, 580, 590, 595, 596, 597, 598, 600, 605], "somenewtag": 47, "someth": [10, 14, 23, 25, 26, 30, 34, 49, 53, 131, 570, 591, 594, 602], "sometim": [43, 47, 570, 581, 591, 604], "somewher": 6, "son": 131, "sop": [2, 8, 9, 10, 12, 20, 26, 27, 28, 38, 42, 47, 50, 51, 69, 131, 132, 133, 135, 165, 170, 171, 172, 173, 183, 196, 213, 220, 240, 253, 260, 263, 264, 275, 559, 570, 579, 580, 586, 589, 590, 596, 601, 602, 604], "sopclassuid": [9, 24, 26, 28, 171, 596, 606], "sopinstanceuid": [24, 26, 38, 171], "sorri": [570, 578], "sort": [4, 10, 131, 132, 133, 279, 598], "sort_kei": [131, 132, 133], "sourc": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 23, 26, 28, 29, 30, 34, 47, 52, 56, 76, 77, 78, 79, 81, 82, 94, 96, 98, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 570, 578, 586, 588, 591, 593, 596, 599, 600, 606], "sourcetosurfacedist": 11, "space": [2, 8, 9, 20, 29, 30, 34, 36, 37, 38, 39, 46, 53, 109, 131, 132, 133, 221, 238, 247, 259, 496, 530, 532, 535, 546, 548, 550, 570, 579, 591, 596, 598, 601, 604], "span": 144, "sparingli": 53, "special": [43, 60, 559, 570, 577], "specif": [10, 20, 24, 26, 27, 28, 29, 34, 35, 42, 44, 47, 49, 50, 52, 53, 76, 77, 78, 79, 131, 132, 133, 162, 163, 172, 177, 200, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 496, 525, 532, 555, 570, 571, 573, 579, 581, 582, 585, 586, 591, 594, 595, 596, 597, 598, 601, 602, 604], "specifi": [24, 25, 26, 27, 28, 36, 37, 39, 42, 109, 111, 128, 131, 132, 133, 147, 162, 163, 183, 195, 220, 239, 240, 247, 250, 252, 263, 264, 270, 272, 496, 523, 525, 527, 530, 531, 532, 556, 570, 583, 588, 596, 598, 600, 601, 604], "specific_tag": [160, 162, 163, 166, 250, 252, 270, 272, 596], "specificcharacterset": 170, "spectroscopi": 170, "sped": 601, "speed": [20, 570, 573, 577, 581, 588, 590], "spell": [53, 76, 570, 581], "sphinx": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 53, 570, 574, 595], "spine": [10, 598], "split": [20, 496, 532, 555, 570, 571, 572], "splitlin": [496, 532], "spot": 20, "spread": [570, 591], "spring": [213, 253], "sq": [0, 8, 32, 56, 128, 131, 132, 133, 160, 544, 570, 576, 586, 589, 591, 596], "sqrt": 525, "squar": [42, 47, 525, 596], "sr": [170, 530, 559, 570, 588, 591, 605], "src": [9, 10, 29, 30, 33, 34, 37, 69, 97, 238, 239, 246, 247, 250, 252, 261, 265, 270, 272, 276, 598, 601], "srt": [570, 591], "ss": [2, 4, 20, 26, 28, 32, 181, 182, 527, 531, 556, 570, 572, 591, 606], "ssd": 11, "st": 32, "st000000": [10, 598], "st000001": [10, 598], "st000002": 10, "st000003": 10, "st_mtime": 164, "stabl": 600, "stack": 606, "stackoverflow": 593, "stage": [10, 171, 172, 594, 595], "stamp": 20, "stand": 76, "standard": [12, 20, 22, 32, 36, 37, 38, 39, 43, 44, 47, 50, 51, 53, 56, 128, 131, 132, 133, 134, 138, 140, 143, 144, 145, 146, 147, 148, 150, 151, 172, 183, 196, 200, 206, 209, 213, 214, 215, 216, 217, 218, 221, 251, 253, 254, 255, 256, 257, 258, 259, 261, 271, 274, 276, 282, 521, 525, 526, 529, 530, 570, 572, 575, 576, 578, 579, 586, 588, 591, 597, 598, 601, 602, 606], "start": [0, 6, 17, 18, 20, 24, 26, 27, 28, 37, 49, 52, 128, 130, 131, 132, 133, 134, 142, 143, 145, 147, 148, 151, 152, 161, 167, 173, 174, 179, 181, 182, 205, 238, 239, 252, 272, 277, 278, 496, 521, 532, 544, 552, 570, 580, 590, 591, 594, 595, 596, 597, 601, 605], "startswith": [496, 532], "stat": [20, 164], "state": [189, 570, 591, 597], "statement": [570, 574], "static": [26, 28, 133, 496, 532], "station": [2, 8, 20], "statu": [20, 116, 128], "stdin": [85, 596, 598, 601, 604], "stdlib": 48, "stdout": [24, 26], "step": [53, 570, 577, 588, 598, 605, 606], "stereometr": 170, "stick": 596, "sticki": 0, "still": [10, 44, 47, 570, 576, 577, 579, 580, 581, 583, 594, 596, 597, 598, 604], "stop": [130, 162, 166, 205, 277, 278, 496, 532, 570, 573], "stop_before_pixel": [162, 570, 573, 604], "stop_when": [160, 163, 166], "storag": [2, 9, 12, 14, 20, 26, 27, 28, 42, 47, 50, 69, 135, 194, 196, 559, 570, 573, 574, 579, 589, 596, 598, 606], "store": [2, 8, 10, 17, 20, 29, 32, 34, 37, 38, 39, 41, 42, 47, 50, 106, 128, 131, 132, 133, 162, 197, 214, 215, 220, 238, 246, 247, 254, 255, 260, 263, 265, 275, 523, 525, 526, 527, 528, 529, 531, 570, 573, 588, 591, 596, 597, 598, 601, 602, 604, 606], "store_data_and_return_uri": 597, "str": [0, 11, 14, 20, 29, 30, 32, 34, 42, 76, 77, 78, 79, 88, 92, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 141, 142, 143, 147, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 183, 184, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 206, 212, 213, 219, 220, 221, 238, 239, 240, 246, 247, 248, 249, 250, 252, 253, 259, 260, 262, 263, 264, 266, 267, 268, 270, 272, 275, 278, 279, 280, 281, 282, 496, 521, 522, 523, 524, 525, 526, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 570, 580, 585, 588, 596, 602, 604], "straightforward": [50, 601], "stream": [145, 153, 156, 158, 159, 570, 591, 594, 601, 604], "streamhandl": 94, "streamlin": [570, 577], "strftime": [12, 523, 527, 531], "strict": [0, 43, 496, 529, 532, 570, 583, 590], "strictli": 43, "string": [16, 17, 20, 25, 26, 32, 42, 56, 77, 78, 79, 109, 128, 131, 132, 133, 134, 162, 173, 184, 193, 195, 197, 201, 202, 205, 239, 247, 279, 281, 496, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 538, 540, 549, 550, 551, 555, 570, 573, 575, 576, 580, 581, 586, 588, 597], "strip": [496, 525, 532, 602], "strongli": [138, 172, 598], "strptime": 527, "struct": [20, 198, 549], "struct_format": [198, 535, 536, 537, 538, 539, 540, 541, 542, 545, 546, 547, 548, 549, 551], "structur": [10, 26, 27, 42, 69, 170, 172, 173, 570, 583, 590, 591, 596, 598, 599], "studi": [2, 8, 9, 10, 20, 26, 27, 28, 42, 170, 172, 598], "study1": [26, 28], "study_uid": 10, "studyd": [9, 10, 24, 26, 27, 28, 598], "studydescript": [10, 26, 28, 172, 598], "studyid": [26, 28], "studyinstanceuid": 10, "studytim": [10, 24, 26, 28, 598], "stuff": 14, "stxxxxxx": 172, "style": [0, 23, 523, 527, 531, 570, 572, 575], "sub": [25, 26, 36, 131, 132, 133, 239, 250, 252, 270, 272, 496, 532, 559], "subclass": [496, 570, 580], "subcommand": [25, 26, 27, 570, 588], "subcommandnam": [25, 26], "subdirectori": [570, 578], "subject": [53, 597, 605], "submit": [26, 28, 570, 576, 593, 594, 595], "subnorm": 525, "subpars": [25, 26], "subplot": [3, 4, 604, 606], "subsampl": 265, "subsequ": 162, "subset": [10, 24, 26], "substanti": [570, 573], "substitut": [496, 532], "substr": [496, 532], "success": [131, 132, 133, 239, 240, 250, 252, 264, 270, 272, 595, 604], "successfulli": [30, 34, 147], "suever": [570, 577], "suffici": [141, 143, 147, 239, 247, 602], "suffix": [12, 174, 496, 521, 530, 532, 570, 591], "suggest": [43, 593, 594, 595], "suit": [20, 47, 570, 590, 601], "suitabl": [172, 213, 238, 240, 253, 261, 264, 273, 276, 496, 532, 600, 602], "summar": [11, 598], "summari": [10, 25, 26, 594], "summer": [213, 253], "sundai": [523, 527], "super": 133, "supp": [570, 573], "supplement": [213, 253], "suppli": [0, 14, 52, 79, 141, 143, 147, 162, 172, 213, 239, 247, 253, 521, 530, 596, 598, 604], "support": [30, 34, 36, 41, 43, 46, 70, 71, 80, 97, 131, 132, 133, 158, 159, 172, 205, 206, 207, 208, 209, 210, 211, 212, 213, 220, 239, 247, 248, 253, 261, 263, 273, 274, 276, 277, 281, 528, 556, 570, 571, 579, 580, 581, 582, 583, 585, 586, 588, 589, 590, 591, 598, 599, 600, 601, 605], "supports_transfer_syntax": [97, 207, 208, 209, 210, 211, 212], "suppos": 212, "suppress": [570, 588], "suppress_invalid_tag": [131, 132, 133, 570, 590], "sure": [9, 37, 45, 52, 594, 596, 600], "surfac": 170, "surround": 596, "sv": [32, 556, 570, 583], "sv1": [41, 45, 248, 274, 570, 585], "swap": [189, 239, 542], "swapcas": [496, 532], "switch": [52, 89, 570, 574, 576, 578, 583, 585, 588, 590, 594, 595], "sy": [0, 4, 14, 281, 528, 606], "symmetr": 597, "synchronis": [51, 606], "synonym": [570, 571], "syntax": [2, 12, 16, 20, 24, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 41, 42, 46, 47, 52, 97, 131, 132, 133, 135, 138, 139, 144, 145, 163, 171, 172, 180, 183, 196, 207, 208, 209, 210, 211, 212, 220, 238, 239, 240, 246, 247, 248, 249, 250, 252, 260, 263, 264, 270, 272, 274, 275, 287, 381, 386, 389, 412, 442, 449, 496, 499, 522, 559, 570, 573, 574, 579, 581, 582, 583, 585, 586, 590, 591, 596, 600, 601, 606], "system": [20, 24, 26, 27, 28, 43, 156, 158, 159, 172, 281, 528, 570, 591, 596, 598, 600, 606], "t": [4, 8, 10, 18, 20, 26, 27, 28, 29, 32, 36, 37, 39, 42, 45, 47, 49, 52, 53, 84, 131, 132, 133, 141, 143, 144, 147, 163, 172, 183, 205, 206, 209, 212, 221, 238, 239, 247, 250, 252, 259, 260, 270, 272, 273, 275, 277, 496, 521, 527, 532, 570, 582, 585, 586, 591, 594, 595, 596, 597, 598, 601, 602, 604], "t1": 42, "t2": 42, "t3": 42, "t4": 42, "tab": [496, 532, 595], "tabl": [20, 23, 32, 36, 37, 38, 41, 44, 50, 128, 131, 132, 133, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 183, 196, 206, 209, 211, 212, 213, 214, 215, 216, 217, 220, 238, 246, 253, 254, 255, 256, 257, 263, 274, 496, 532, 556, 570, 583, 586, 591, 595, 596, 598, 600, 601, 604], "tabsiz": [496, 532], "tag": [16, 17, 26, 28, 29, 32, 46, 47, 49, 50, 56, 60, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 142, 145, 148, 149, 150, 151, 152, 156, 158, 159, 160, 162, 164, 172, 180, 181, 185, 200, 206, 209, 211, 212, 250, 252, 266, 267, 270, 272, 273, 274, 552, 556, 559, 570, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 585, 586, 588, 589, 591, 596, 597, 604], "tag_in_except": 60, "tagtyp": [131, 132, 133], "take": [2, 24, 25, 26, 30, 34, 39, 52, 53, 131, 132, 133, 160, 170, 205, 570, 577, 591, 594, 595, 596, 598], "taken": [39, 131, 132, 133, 141, 143, 147, 219, 262, 274], "target": [26, 27, 53], "tarou": 22, "task": [595, 601], "tb": 154, "tdir": 10, "teardown": [570, 590], "technic": [53, 54], "techniqu": 39, "tell": [131, 132, 133, 141, 142, 143, 147, 151, 152, 156, 158, 159, 162, 183, 570, 572, 591, 595, 598], "temp": [49, 50], "tempfil": [10, 12, 17, 598], "temporari": [171, 570, 591, 598], "temporarili": 43, "temporarydirectori": [10, 598], "ten": 525, "tend": [49, 600], "term": [20, 50, 206, 238, 246, 266, 281, 525, 527, 528, 531, 601], "termin": [20, 26, 27, 28, 43, 145, 163, 176], "test": [2, 12, 16, 24, 26, 27, 28, 42, 89, 108, 109, 110, 131, 132, 133, 496, 525, 532, 534, 570, 571, 577, 579, 583, 586, 588, 590, 601], "test_fil": [9, 10, 24, 26, 42, 69, 595, 596, 598], "test_new_uid": 594, "test_uid": 594, "teston": [108, 109], "testtwo": [108, 109], "text": [0, 20, 22, 32, 42, 47, 128, 162, 199, 200, 202, 496, 532, 544, 550, 551, 553, 554, 570, 572, 581, 594, 595, 596], "tggc": [20, 26, 28], "thai": [570, 579], "than": [24, 25, 26, 27, 28, 29, 32, 37, 38, 39, 41, 44, 45, 49, 52, 53, 56, 128, 131, 132, 133, 140, 141, 142, 143, 144, 145, 147, 148, 156, 158, 159, 162, 166, 172, 175, 184, 198, 205, 219, 220, 251, 260, 262, 263, 271, 274, 275, 521, 525, 570, 571, 572, 573, 578, 579, 580, 583, 585, 588, 591, 596, 597, 601, 602], "thank": [570, 573, 576], "thei": [4, 29, 36, 42, 47, 49, 50, 53, 76, 88, 97, 131, 132, 133, 135, 183, 196, 220, 263, 496, 532, 570, 588, 591, 594, 595, 596, 598, 600, 601, 602, 604], "them": [4, 8, 24, 26, 27, 28, 30, 34, 42, 45, 47, 49, 52, 53, 54, 131, 132, 133, 156, 158, 159, 538, 540, 570, 578, 582, 586, 595, 596, 598, 604], "theme_us": 0, "theoret": [570, 591], "therefor": [29, 37, 205, 265, 601], "theta": 20, "thi": [2, 3, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 42, 43, 47, 49, 50, 52, 53, 54, 56, 69, 76, 81, 82, 83, 86, 87, 89, 96, 97, 109, 128, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 153, 160, 162, 165, 171, 172, 183, 189, 200, 203, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 220, 238, 239, 240, 246, 247, 250, 252, 253, 256, 257, 258, 263, 264, 265, 270, 272, 281, 496, 523, 524, 525, 526, 527, 529, 530, 532, 533, 534, 559, 577, 579, 582, 583, 588, 591, 594, 595, 596, 597, 598, 600, 601, 602, 604, 605, 606], "thick": [2, 8, 20], "thing": [42, 49, 595, 596, 604], "think": [25, 26], "third": [37, 46, 496, 525, 530, 532, 600], "third_party_compression_func": [44, 601], "thoroughli": 601, "those": [26, 28, 29, 30, 34, 40, 43, 47, 570, 573, 576, 586, 596, 598, 604], "though": [37, 598, 601], "thread": [239, 247, 525], "three": [16, 30, 34, 37, 53, 110, 496, 530, 532, 596, 598, 604], "threshold": [131, 132, 133], "through": [8, 17, 30, 34, 42, 47, 50, 53, 131, 132, 133, 165, 179, 181, 182, 239, 250, 270, 525, 570, 571, 572, 591, 594, 595, 596, 600, 604, 605], "throughput": [45, 225, 226, 227], "thrown": [570, 579], "thu": [47, 570, 571], "tick": 53, "tight_layout": 3, "tile": 36, "tilt": 20, "time": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 26, 27, 28, 32, 42, 43, 47, 52, 69, 91, 93, 109, 132, 143, 164, 177, 180, 261, 276, 523, 524, 527, 531, 570, 573, 579, 588, 593, 594, 595, 596, 598, 606], "timelin": [570, 582], "timespec": [527, 531], "timestamp": [132, 164, 523, 527], "timetupl": [523, 527], "timetz": 527, "timezon": [2, 8, 20, 527], "titl": [0, 2, 20, 26, 28, 47, 53, 196, 496, 530, 532, 594, 595, 596], "titlecas": [496, 532], "tix": [570, 571], "tk": [0, 22], "tkinter": [0, 22, 48, 570, 571, 573], "tm": [2, 12, 20, 26, 27, 28, 32, 42, 60, 65, 93, 545, 551, 570, 579, 588, 596], "tmp": [10, 12, 598], "tmp0aalrzir": 598, "tmp0n0asbn4": 10, "tmpph9hry3n": 12, "tmpsqz8rhgb": 598, "tmpu068kdwp": 598, "to_byt": [281, 528], "to_eng_str": 525, "to_integr": 525, "to_integral_exact": 525, "to_integral_valu": 525, "to_json": [128, 131, 132, 133, 570, 584, 597], "to_json_dict": [128, 131, 132, 133, 570, 584, 590, 597], "tobyt": [2, 50, 602, 606], "toctre": 595, "todai": [523, 527], "togeth": [137, 138, 184, 602], "toi": 18, "toler": [570, 572, 583], "toml": [43, 570, 590], "too": [44, 131, 132, 133, 134, 220, 263, 496, 532, 552, 570, 580, 582, 583, 593], "tool": [52, 570, 591], "toordin": [523, 527], "top": [20, 26, 27, 28, 49, 53, 131, 132, 133, 163, 172, 570, 591, 595, 596], "top_nod": 172, "toshiba": [2, 8, 20], "toshiba_mec": [2, 8, 20], "total": [2, 3, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 37, 138, 139, 206, 238, 246, 266, 525, 592], "toward": [24, 26], "traceback": [85, 284, 596, 598, 601, 604], "track": 37, "tracker": [593, 594], "tract": 170, "trail": [2, 8, 20, 26, 28, 140, 206, 238, 246, 266, 496, 525, 532, 535, 546, 548, 550, 570, 579, 596, 602], "train": [2, 8, 20], "trait_nam": [131, 132, 133, 279], "transfer": [2, 12, 16, 20, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 41, 42, 46, 47, 97, 131, 132, 133, 135, 138, 139, 144, 145, 163, 171, 172, 180, 183, 196, 207, 208, 209, 210, 211, 212, 220, 238, 239, 240, 246, 247, 248, 249, 250, 252, 260, 263, 264, 270, 272, 274, 275, 287, 381, 386, 389, 412, 442, 449, 496, 499, 522, 559, 570, 574, 579, 581, 582, 583, 585, 586, 590, 591, 596, 600, 601, 606], "transfer_syntax": [97, 207, 208, 209, 210, 212, 238, 246], "transfer_syntax_uid": [30, 34, 131, 132, 133, 220, 263], "transfersyntaxuid": [12, 44, 45, 171, 570, 572, 579, 596, 601, 602, 604], "transform": [36, 39, 50, 601], "translat": [24, 26, 42, 496, 532, 570, 579], "transvers": 567, "travisci": [570, 579], "treat": [170, 238, 598, 601], "treatment": [26, 28], "tree": [6, 21, 173, 570, 577, 592, 596], "tree_item": 0, "tree_seq_item": 0, "treeview": 0, "tri": [131, 132, 133, 156, 158, 159, 220, 239, 240, 247, 250, 252, 263, 264, 270, 272, 570, 591, 604], "tricki": 52, "trigger": [20, 26, 28], "troubl": 594, "true": [0, 10, 12, 16, 29, 30, 32, 33, 34, 42, 43, 44, 47, 51, 53, 56, 69, 80, 81, 82, 88, 89, 93, 94, 96, 97, 100, 106, 115, 116, 125, 126, 128, 130, 131, 132, 133, 135, 138, 145, 148, 154, 156, 158, 159, 160, 162, 163, 167, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 196, 203, 206, 207, 208, 209, 210, 211, 212, 217, 220, 221, 238, 239, 240, 246, 247, 250, 251, 252, 257, 259, 260, 261, 263, 264, 269, 270, 271, 272, 273, 275, 276, 279, 281, 496, 522, 525, 526, 529, 532, 534, 535, 536, 537, 538, 539, 540, 544, 545, 546, 548, 549, 551, 552, 556, 570, 574, 576, 586, 588, 590, 591, 596, 598, 601, 602, 604, 606], "truli": 52, "truncat": [496, 532, 533, 570, 572], "truthi": [570, 583], "try": [53, 97, 181, 182, 238, 496, 532, 570, 574, 582, 596, 598, 602], "tsyntax": [211, 238, 246, 604], "ttk": 0, "tube": 20, "tupl": [30, 34, 42, 44, 47, 85, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 131, 132, 133, 134, 139, 141, 143, 144, 147, 148, 152, 156, 158, 159, 162, 205, 238, 239, 246, 247, 277, 282, 283, 496, 523, 525, 527, 530, 532, 570, 573, 582, 601, 602, 604], "tupletag": [60, 570, 573], "turkish": [570, 579], "turn": [43, 94, 163, 570, 586], "tut": 595, "tutori": [34, 52, 53, 570, 583, 593, 594, 595, 596, 598, 601, 602, 604, 606], "two": [16, 20, 25, 26, 28, 39, 42, 43, 47, 53, 89, 108, 109, 110, 131, 132, 133, 140, 172, 265, 281, 496, 525, 528, 530, 532, 570, 577, 591, 596, 597, 601, 602, 606], "txt": [43, 596], "type": [2, 3, 8, 17, 18, 20, 25, 26, 27, 28, 29, 30, 34, 39, 40, 42, 44, 47, 50, 54, 69, 76, 77, 79, 82, 99, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 147, 148, 149, 151, 152, 153, 156, 158, 159, 162, 163, 164, 166, 167, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 195, 196, 198, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 238, 239, 240, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 279, 282, 496, 521, 522, 525, 530, 533, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 548, 550, 551, 552, 553, 554, 555, 556, 570, 573, 574, 576, 587, 588, 590, 591, 595, 596, 598, 602, 606], "type_constructor": [205, 596], "typeerror": [133, 162, 205, 207, 208, 570, 580, 586, 596], "typeofpatientid": 596, "typic": [29, 39, 96, 136, 604], "typo": 593, "tz": 527, "tzinfo": [527, 531], "tzname": [527, 531], "u": [2, 20, 26, 28, 32, 69, 110, 156, 158, 159, 181, 182, 496, 532, 556, 570, 572, 597, 598, 600, 601, 602, 604, 606], "u1": 604, "ub": 556, "uc": [32, 553, 570, 579], "ucum": 605, "ui": [2, 12, 16, 20, 26, 27, 28, 32, 42, 47, 192, 196, 546, 570, 573, 583, 596], "uid": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 50, 52, 97, 131, 132, 133, 135, 138, 139, 171, 172, 183, 196, 207, 208, 209, 210, 211, 212, 213, 220, 238, 239, 240, 246, 247, 248, 249, 253, 260, 263, 264, 274, 275, 546, 555, 559, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 585, 586, 588, 589, 590, 591, 594, 596, 598, 600, 601, 602, 604], "uid_dictionari": [570, 571], "uint": [251, 271], "uint16": [131, 132, 133, 213, 214, 215, 216, 217, 247, 253, 254, 255, 256, 257, 260, 275, 602], "uint8": [49, 131, 132, 133, 213, 214, 215, 216, 217, 221, 253, 254, 255, 256, 257, 259, 260, 275, 601, 602], "ul": [2, 12, 16, 20, 26, 27, 28, 32, 42, 47, 108, 109, 110, 156, 158, 159, 196, 556, 596, 598], "ultrasound": 598, "uml": 605, "un": [16, 32, 56, 90, 160, 183, 193, 547, 570, 571, 583, 585, 588, 589, 591, 596], "unabl": [131, 132, 133, 156, 158, 159, 183, 268, 570, 591, 596, 598, 604], "unaffect": 525, "unavail": [239, 247], "uncas": [496, 532], "unchang": [10, 76, 181, 182, 214, 215, 216, 217, 218, 254, 255, 256, 257, 258, 525, 601], "uncom": [570, 577], "uncommon": 529, "uncompress": [2, 8, 20, 29, 34, 36, 37, 38, 41, 44, 45, 50, 131, 132, 133, 220, 240, 246, 247, 263, 264, 265, 499, 570, 581, 583, 588, 589, 601, 602, 604], "uncompressedpixeltransfersyntax": [570, 586, 591], "uncompressedtransfersyntax": [570, 586, 591], "unconvert": [131, 132, 133], "undecod": 130, "undefin": [44, 56, 128, 145, 160, 176, 570, 575, 586, 589], "undefinedlength": [570, 571], "under": [25, 26, 42, 138, 139, 570, 571, 573, 579, 594, 595, 600], "underflow": [20, 525], "undergon": 604, "underli": 38, "underscor": 605, "understand": [42, 53, 239, 594, 601, 606], "undesir": 45, "undocu": 600, "unencapsul": 39, "unencod": [30, 34, 247], "unequ": 525, "unexpect": [570, 583], "unfamiliar": 53, "unicod": [6, 21, 32, 77, 79, 496, 530, 532, 570, 571, 573, 574, 590, 592], "unicodedecodeerror": 77, "unicodeencodeerror": [79, 496, 532], "union": 32, "uniqu": [20, 30, 32, 34, 39, 47, 172, 173, 174, 192, 239, 247, 570, 579, 590, 591, 596, 598], "unit": [33, 37, 50, 131, 132, 133, 162, 206, 238, 246, 266, 556, 594, 601, 604, 606], "unitless": [3, 50, 556, 606], "unittest": 594, "unknown": [16, 20, 32, 47, 85, 128, 129, 131, 132, 133, 145, 193, 570, 575, 580, 582, 586, 588, 596, 605], "unless": [53, 166, 173, 496, 525, 532, 570, 574, 585, 598], "unlik": [131, 132, 133, 525], "unlimit": 32, "unlink": 12, "unneed": [570, 580], "unoffici": [570, 577], "unpack": [49, 131, 132, 133, 239, 250, 252, 261, 270, 272, 276, 549, 570, 581, 589], "unpack_bit": [559, 570, 589, 591], "unpickl": [570, 583], "unrealist": [131, 132, 133], "unrecover": 521, "unsign": [29, 30, 32, 34, 36, 37, 39, 50, 148, 221, 247, 259, 570, 586, 601, 606], "unspecifi": [156, 158, 159], "unsupport": [162, 207, 208, 209, 212], "until": [10, 156, 158, 159, 162, 163, 166, 177, 180, 570, 571, 576, 588, 591, 598], "untouch": [496, 532], "unus": [29, 570, 581, 591, 602], "up": [37, 49, 50, 131, 132, 133, 156, 158, 159, 172, 173, 180, 183, 211, 521, 525, 530, 555, 570, 573, 577, 579, 594, 595, 596, 599, 600, 601], "upcom": [43, 96], "updat": [2, 10, 18, 20, 26, 27, 37, 38, 49, 108, 109, 110, 111, 131, 132, 133, 170, 172, 181, 182, 196, 220, 221, 238, 240, 250, 252, 259, 260, 263, 264, 270, 272, 275, 570, 572, 573, 575, 576, 578, 579, 580, 581, 583, 585, 586, 588, 589, 590, 591, 594, 595, 598, 600, 601, 604], "upper": [496, 525, 532, 570, 591], "uppercas": [53, 128, 496, 532], "ur": [32, 548], "uri": [32, 131, 132, 133, 570, 586, 597], "url": [32, 53], "urllib": [570, 588], "us": [1, 3, 5, 6, 7, 9, 10, 12, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 69, 77, 78, 79, 80, 84, 85, 88, 94, 95, 96, 97, 101, 102, 106, 109, 111, 128, 129, 131, 132, 133, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 158, 159, 160, 162, 163, 165, 166, 170, 172, 173, 174, 180, 181, 182, 183, 195, 198, 199, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 238, 239, 240, 246, 247, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 270, 271, 272, 273, 275, 276, 277, 279, 281, 284, 442, 496, 521, 522, 525, 527, 528, 529, 530, 532, 533, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 556, 557, 558, 563, 564, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 601, 602, 604, 605, 606], "us1_j2kr": 69, "us1_rl": 44, "us1_uncr": 69, "usabl": [239, 496, 532], "usag": [14, 24, 26, 27, 28, 30, 38, 42, 46, 221, 250, 252, 259, 270, 272, 496, 530, 559, 570, 583, 591, 598, 601, 602], "usb": 598, "use_decimal_boolean": 81, "use_ds_decim": [32, 82, 538, 559, 570, 585], "use_ds_numpi": [81, 538, 559, 570, 585], "use_exist": [172, 598], "use_is_numpi": [540, 559, 570, 585], "use_mct": 33, "use_numpi": 82, "use_v2_backend": [131, 132, 133], "user": [20, 30, 34, 40, 42, 69, 79, 88, 131, 132, 133, 160, 165, 183, 220, 239, 263, 570, 573, 576, 582, 583, 586, 591, 594, 596, 598], "userwarn": [10, 84], "usual": [25, 26, 27, 28, 38, 42, 47, 50, 109, 132, 142, 154, 160, 570, 573, 594, 596, 600, 601], "ut": 32, "utc": [2, 8, 20, 527], "utcfromtimestamp": 527, "utcnow": 527, "utcoffset": [527, 531], "utctimetupl": 527, "utf": [22, 496, 532], "util": [24, 26, 52, 63, 64, 65, 69, 70, 559, 562, 570, 571, 578, 579, 591, 604], "uuid": 521, "uuid4": 521, "uuu": [527, 531], "uv": [32, 556, 570, 583], "v": [570, 582], "v1": [570, 580, 581, 582, 606], "v2": [26, 27, 38, 570, 586, 591, 600, 606], "v3": [2, 8, 20, 36, 37, 47, 570, 586, 588, 589, 591, 606], "v4": [131, 132, 133, 136, 137, 145, 146, 148, 153, 183, 557, 558, 570, 591, 606], "v5": 606, "v6": 606, "val": [156, 158, 159, 184, 205, 277, 496, 524, 525, 526, 528, 529, 530, 533, 555, 596], "valid": [12, 46, 52, 56, 83, 86, 87, 89, 124, 128, 131, 132, 133, 135, 162, 175, 183, 196, 221, 238, 239, 246, 247, 259, 260, 275, 279, 446, 447, 496, 527, 531, 532, 533, 534, 538, 540, 549, 550, 553, 570, 588, 589, 590, 601], "validate_dataset": 596, "validate_file_meta": [559, 570, 591, 596], "validate_valu": 128, "validation_mod": [128, 496, 524, 525, 526, 528, 529, 530], "valtyp": 555, "valu": [0, 2, 8, 9, 10, 12, 17, 20, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 42, 43, 47, 49, 50, 52, 53, 56, 60, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 93, 96, 103, 109, 111, 112, 113, 122, 123, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 156, 158, 159, 161, 162, 164, 170, 172, 180, 181, 182, 183, 184, 193, 198, 199, 200, 205, 206, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 236, 238, 239, 240, 246, 247, 251, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 267, 269, 271, 273, 274, 275, 277, 278, 281, 496, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 556, 559, 567, 570, 571, 572, 575, 576, 577, 579, 580, 581, 582, 583, 585, 586, 588, 589, 590, 591, 594, 595, 596, 597, 598, 600, 601, 602, 604, 605, 606], "value_kei": 128, "value_tel": 130, "valueerror": [81, 82, 84, 85, 106, 107, 108, 109, 110, 111, 130, 131, 132, 133, 134, 135, 145, 148, 164, 172, 183, 196, 205, 206, 209, 212, 251, 261, 271, 276, 277, 278, 496, 521, 525, 526, 529, 532, 533, 538, 540, 552, 570, 591, 598, 601], "valuerep": [16, 22, 60, 537, 539, 543, 545, 559], "valuesview": [131, 132, 133], "vari": 596, "variabl": [26, 27, 42, 43, 53, 54, 69, 570, 582, 586, 590], "variant": [2, 8, 20], "variat": 604, "varieti": [50, 601, 602], "variou": [25, 26, 47, 570, 571, 604], "ve": [44, 570, 578, 594, 595, 598, 601, 602, 604, 606], "veri": [22, 32, 37, 41, 570, 573, 594, 598, 601, 602, 604], "verif": [570, 580], "verifi": [45, 570, 576], "versa": [38, 183, 213, 253], "version": [2, 8, 12, 20, 24, 26, 27, 28, 39, 42, 46, 47, 53, 56, 80, 82, 84, 85, 89, 96, 99, 100, 102, 103, 106, 128, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 174, 181, 182, 183, 196, 203, 211, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 270, 271, 272, 274, 275, 276, 278, 279, 280, 281, 496, 521, 525, 532, 538, 540, 556, 557, 558, 594, 595, 596, 597, 605], "versionad": [53, 278], "versionchang": 53, "veterinari": 530, "via": [29, 41, 44, 56, 128, 131, 132, 133, 211, 496, 523, 532, 567, 570, 579, 581, 586, 588, 589, 591, 597, 598, 601, 604], "vice": [38, 183, 213, 253], "videan42": [570, 578], "view": [4, 10, 20, 29, 38, 42, 46, 50, 131, 132, 133, 216, 217, 218, 238, 256, 257, 258, 570, 571, 573, 591, 595, 598, 606], "view_onli": [29, 131, 132, 133, 239, 250, 252, 270, 272], "viewer": [0, 48], "virtual": [43, 600], "virtualenv": 595, "visibl": 595, "visit": [131, 132, 133, 594, 595], "vm": [16, 32, 42, 62, 108, 109, 110, 111, 112, 118, 119, 122, 128, 570, 574, 582, 585, 591, 596], "vma": 20, "voi": [46, 216, 217, 218, 256, 257, 258, 570, 583, 586], "voic": 51, "volum": [207, 604], "voxel": 2, "vr": [0, 2, 8, 12, 16, 17, 20, 26, 27, 28, 39, 40, 42, 44, 45, 47, 54, 56, 60, 65, 82, 89, 90, 93, 101, 102, 108, 109, 110, 111, 113, 118, 119, 123, 128, 129, 130, 131, 132, 133, 134, 140, 156, 158, 159, 160, 161, 163, 164, 172, 181, 182, 183, 188, 189, 192, 196, 197, 209, 222, 223, 224, 228, 239, 240, 248, 260, 264, 275, 287, 496, 522, 523, 525, 526, 527, 528, 529, 530, 531, 535, 544, 546, 548, 549, 550, 551, 553, 554, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582, 583, 585, 586, 588, 589, 590, 591, 596, 597, 601, 602, 604], "w": 596, "wa": [24, 25, 26, 39, 53, 128, 131, 132, 133, 147, 172, 177, 181, 182, 538, 540, 570, 573, 580, 583, 588, 591, 594, 595, 598], "wado": [128, 131, 132, 133, 597], "wai": [37, 42, 43, 49, 50, 131, 132, 133, 570, 576, 591, 593, 596, 597, 598, 600, 605], "walk": [17, 131, 132, 133], "wallac": [570, 574], "wang": 22, "want": [9, 10, 14, 24, 25, 26, 37, 43, 52, 174, 594, 595, 596, 597, 598, 600, 601, 604], "warn": [43, 52, 53, 56, 76, 77, 79, 84, 85, 269, 559, 570, 572, 576, 580, 581, 582, 583, 585, 588, 589, 591, 594, 595], "warn_and_log": 10, "water": [20, 530], "waveform": [1, 5, 6, 46, 54, 69, 131, 132, 133, 170, 559, 570, 586, 590, 592, 599], "waveform_arrai": [3, 46, 131, 132, 133, 570, 586, 606], "waveform_ecg": 69, "waveformbitsalloc": [556, 606], "waveformbitsstor": 606, "waveformdata": [51, 606], "waveformorigin": 606, "waveformsampleinterpret": [556, 606], "waveformsequ": [3, 51, 606], "wavelet": 36, "wb": 596, "we": [3, 10, 16, 17, 18, 24, 26, 28, 37, 38, 45, 93, 131, 132, 133, 593, 594, 595, 596, 598, 600, 601, 602, 606], "web": 595, "wedg": [26, 28], "week": [523, 527], "weekdai": [523, 527], "weight": [0, 2, 8, 20], "well": [41, 47, 50, 52, 69, 172, 213, 253, 496, 532, 570, 573, 574, 576, 583, 593, 594, 596, 600, 601], "were": [20, 26, 28, 131, 132, 133, 570, 576, 578, 594, 595, 602, 606], "weren": 601, "what": [10, 32, 39, 47, 49, 54, 172, 596, 598, 602, 604], "whatev": [219, 262, 601], "whatsoev": 239, "wheel": 600, "when": [10, 16, 23, 24, 25, 26, 27, 29, 30, 32, 34, 36, 37, 38, 39, 41, 42, 44, 47, 49, 50, 52, 53, 80, 84, 85, 89, 93, 94, 97, 131, 132, 133, 138, 139, 141, 143, 144, 146, 147, 148, 154, 156, 158, 159, 166, 172, 174, 181, 182, 183, 212, 214, 215, 216, 217, 218, 220, 239, 240, 247, 250, 252, 254, 255, 256, 257, 258, 261, 263, 264, 270, 272, 273, 274, 276, 282, 284, 496, 521, 522, 530, 532, 570, 572, 573, 574, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 594, 595, 596, 598, 600, 601, 602, 604, 606], "whenc": [156, 158, 159], "whenev": [570, 586], "where": [10, 30, 34, 36, 37, 39, 42, 43, 49, 50, 51, 56, 108, 110, 131, 132, 133, 134, 138, 164, 170, 172, 177, 178, 214, 215, 238, 239, 246, 247, 254, 255, 496, 525, 532, 570, 572, 581, 582, 583, 591, 594, 595, 596, 598, 601, 602, 604], "whether": [29, 39, 42, 82, 102, 128, 131, 132, 133, 148, 238, 281, 496, 525, 528, 532, 534, 570, 573, 576, 581, 583, 588, 593, 594, 600, 604], "which": [1, 6, 20, 23, 24, 25, 26, 30, 34, 36, 37, 39, 42, 45, 47, 50, 51, 52, 53, 77, 78, 84, 109, 128, 131, 132, 133, 160, 163, 165, 170, 172, 183, 196, 212, 219, 220, 239, 247, 252, 261, 262, 263, 272, 276, 496, 521, 522, 524, 525, 532, 570, 571, 574, 576, 578, 586, 591, 594, 595, 596, 597, 598, 600, 601, 602, 604, 606], "whichev": 247, "while": [10, 26, 27, 37, 38, 39, 45, 50, 56, 128, 131, 132, 133, 183, 212, 239, 247, 250, 252, 270, 272, 533, 570, 582, 583, 588, 591, 594, 598, 600, 601, 604], "white": [36, 37, 38, 570, 578], "whitespac": [496, 532], "whl": 600, "who": [30, 34, 239, 570, 576, 577], "whole": [24, 26, 160, 206, 238, 246, 266, 570, 591], "whose": [42, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 131, 132, 133, 239, 250, 252, 270, 272, 281, 496, 525, 526, 528, 529, 530, 532, 533, 594], "why": 38, "wide": 601, "widget": 0, "width": [2, 8, 20, 128, 217, 218, 257, 258, 496, 532, 596], "window": [0, 2, 8, 20, 26, 27, 43, 46, 217, 218, 257, 258, 570, 571, 579, 583, 589, 594, 595, 596, 600, 604], "windowcent": 596, "windowwidth": 596, "winter": [213, 253], "wip": [594, 595], "wise": 525, "wish": [25, 26, 36, 43, 273], "with_traceback": 154, "within": [24, 26, 27, 28, 30, 34, 37, 80, 89, 131, 132, 133, 162, 163, 171, 172, 183, 284, 496, 532, 544, 570, 586, 598, 600, 601, 606], "without": [10, 36, 42, 45, 47, 51, 106, 131, 132, 133, 154, 165, 178, 261, 276, 525, 535, 546, 548, 549, 570, 572, 580, 582, 586, 589, 590, 591, 596, 598, 600, 601], "withoverlai": 69, "witten": [570, 573], "wo": [10, 598], "won": [594, 595, 596, 598], "word": [32, 52, 53, 109, 189, 496, 530, 532, 596], "work": [6, 15, 19, 21, 25, 26, 27, 30, 34, 37, 42, 43, 46, 47, 52, 53, 172, 496, 532, 570, 571, 573, 574, 576, 577, 578, 580, 582, 586, 591, 592, 594, 595, 596, 600, 602, 605, 606], "workflow": [570, 588, 594, 595], "world": [16, 596], "worri": 601, "worth": [30, 238, 246], "would": [10, 24, 25, 26, 27, 29, 38, 43, 52, 56, 525, 594, 595, 598, 602, 606], "wrap": [42, 53, 156, 158, 159, 183], "wrapper": [156, 158, 159, 570, 585], "write": [6, 7, 10, 13, 14, 16, 17, 24, 26, 40, 43, 46, 47, 54, 56, 70, 94, 131, 132, 133, 156, 158, 159, 172, 183, 185, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 525, 526, 559, 570, 572, 574, 579, 580, 582, 584, 585, 586, 588, 589, 591, 592, 595, 597, 598, 599, 602], "write_atvalu": 70, "write_da": 70, "write_data_el": 70, "write_dataset": [70, 570, 591], "write_dataset_to_byt": 14, "write_dt": 70, "write_fil": [570, 579, 588, 591], "write_file_meta_info": [70, 183], "write_like_origin": [131, 132, 133, 183, 570, 591], "write_new": [570, 575], "write_numb": 70, "write_number_str": 70, "write_obvalu": 70, "write_owvalu": 70, "write_pn": [70, 570, 580], "write_sequ": 70, "write_sequence_item": 70, "write_str": 70, "write_tag": [156, 158, 159], "write_text": 70, "write_tm": 70, "write_u": [156, 158, 159], "write_ui": 70, "write_ul": [156, 158, 159], "write_un": 70, "writeabl": [131, 132, 133, 183, 209, 239, 250, 252, 270, 272, 570, 591], "writeablebuff": [131, 132, 133, 156, 158, 159, 183], "writer": 89, "writing_validation_mod": [43, 56, 79, 570, 589], "written": [12, 24, 26, 32, 43, 49, 50, 131, 132, 133, 156, 158, 159, 172, 183, 195, 196, 570, 582, 583, 591, 594, 596, 598, 604], "wrong": [570, 581, 582, 586, 590], "wrote": 52, "wxpython": [48, 570, 573], "x": [2, 3, 8, 9, 20, 26, 27, 28, 36, 53, 496, 521, 525, 532, 570, 582, 594, 596, 602, 604, 606], "x0": 602, "x00": [2, 8, 12, 16, 20, 26, 27, 28, 37, 42, 47, 49, 596, 602, 604], "x00t": 596, "x01": [2, 8, 12, 20, 26, 27, 28, 42, 47, 50, 596, 604], "x02": 50, "x03": 50, "x04": [8, 50], "x08": 596, "x18": 596, "x5e": 22, "x7f": 50, "x89": 50, "x8b": 22, "x8e": 22, "x8f": 22, "x94": 50, "x9d": 22, "x_unit": 3, "xa1": 22, "xab": 22, "xb0": 22, "xb1": 22, "xb6": 22, "xcb": 50, "xcd": 22, "xd0": 22, "xe0": 604, "xe5": 22, "xe6": 22, "xe7": 22, "xeb": 50, "xf5": 22, "xf9": 50, "xfb": 50, "xfe": [8, 604], "xff": [37, 604], "xffo": 604, "xffq": 604, "xiaodong": 22, "xm": [20, 26, 28], "xmlcharrefreplac": [496, 532], "xr": [10, 598], "xraytubecurr": 595, "xxx": 52, "xxxxxx": 172, "y": [12, 53, 265, 496, 525, 532, 602], "y0": 602, "y_unit": 3, "yamada": 22, "yaroslav": [570, 578], "ybr": [38, 50, 570, 588, 601, 604], "ybr_color": [69, 604], "ybr_full": [30, 34, 36, 37, 38, 39, 50, 131, 132, 133, 209, 211, 221, 239, 247, 250, 252, 259, 260, 265, 270, 272, 275, 570, 583, 589, 601], "ybr_full_422": [29, 39, 50, 131, 132, 133, 209, 211, 221, 239, 240, 250, 252, 259, 260, 264, 265, 270, 272, 275, 570, 583, 589, 604], "ybr_ict": [36, 39, 211, 601], "ybr_partial_420": 39, "ybr_rct": [36, 39, 211, 601], "ycbcr": [29, 36, 37, 38, 39, 131, 132, 133, 207, 208, 209, 210, 211, 212, 238, 239, 240, 250, 252, 264, 270, 272, 601, 604], "year": [523, 527], "yet": [596, 605], "yield": [10, 42, 131, 132, 133, 140, 141, 142, 143, 144, 145, 146, 150, 160, 173, 174, 211, 238, 239, 240, 247, 250, 264, 270, 556, 570, 591, 596, 598, 604, 606], "you": [10, 12, 14, 16, 18, 23, 24, 25, 26, 27, 28, 30, 34, 36, 37, 38, 39, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 93, 138, 139, 162, 166, 170, 172, 174, 273, 496, 570, 583, 586, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 606], "your": [8, 10, 14, 23, 25, 26, 27, 30, 34, 36, 37, 38, 39, 42, 45, 46, 47, 52, 96, 138, 139, 172, 593, 596, 597, 598, 600, 604, 606], "your_fil": [24, 26, 27, 28], "yourarg": [25, 26], "yourpackag": [25, 26], "yourplan": [24, 26, 27, 28], "yourself": [25, 26, 49, 50], "yourusernam": [594, 595], "yyyi": [23, 523, 527], "z": [20, 89, 174, 175, 570, 591], "zenodo": 23, "zero": [4, 20, 32, 50, 131, 132, 133, 180, 238, 279, 496, 525, 532, 570, 590, 596, 601, 602, 604], "zfill": [496, 532], "zip": [3, 6, 570, 582, 606], "\u03bcv": 606, "\u5409\u6d1e": 530, "\u6d2a": 530, "\uae38\ub3d9": 530, "\ud64d": 530}, "titles": ["Show a dicom file using hierarchical tree", "Image processing", "Downsize MRI image using pydicom", "Decode and plot Waveform Data", "Load CT slices and plot axial, sagittal and coronal images", "Computation times", "General examples", "Input-output", "Format the output of the data set printing", "Read a Dataset and plot Pixel Data", "Read a DICOM File-set", "Read RTPLAN DICOM and list information", "Write DICOM data", "Computation times", "Show working with memory-based dataset", "Metadata processing", "Add items to the private DICOM dictionary", "Anonymize DICOM data", "Working with sequences", "Computation times", "Analyse differences between DICOM files", "Computation times", "Display unicode person names", "Frequently asked questions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">codify</span></code> command", "Extending the CLI", "Command-line Interface Guide", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">show</span></code> command", "Pixel Data Decoder Options", "Pixel Data Decoder Plugins", "Pixel Data Decoding", "Element VRs and Python types", "Encoder Plugins Options", "Pixel Data Encoder Plugins", "Pixel Data Encoding", "JPEG 2000 Encoding", "JPEG-LS Encoding", "RLE Lossless Encoding", "Glossary", "Guides", "Plugins for Pixel Data Compression and Decompression", "Core elements in pydicom", "Best Practices", "Compressing <em>Pixel Data</em>", "Handling of compressed pixel data", "pydicom User Guide", "Private Data Elements", "Viewing Images", "Working with Overlay Data", "Working with Pixel Data", "Working with Waveform Data", "Writing DICOM Files", "Writing documentation", "pydicom documentation", "Character Encoding and Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.charset</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.config</span></code>)", "Getting Included Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.data</span></code>)", "Data Dictionary Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.datadict</span></code>)", "Representation of Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataset</span></code>)", "Representation of Data Elements", "Data Elements (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataelem</span></code>)", "Element Multi-value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.multival</span></code>)", "Sequence Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sequence</span></code>)", "Element Tags (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.tag</span></code>)", "Specialized Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.valuerep</span></code>)", "Element Value Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.values</span></code>)", "Bulk Data Encapsulation Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encaps</span></code>)", "Exceptions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.errors</span></code>)", "Example Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.examples</span></code>)", "Dataset IO", "IO Base Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filebase</span></code>)", "Dataset Reading (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filereader</span></code>)", "IO Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileutil</span></code>)", "Dataset Writing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filewriter</span></code>)", "DICOM File-sets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileset</span></code>)", "pydicom.charset.convert_encodings", "pydicom.charset.decode_bytes", "pydicom.charset.decode_element", "pydicom.charset.encode_string", "pydicom.config.APPLY_J2K_CORRECTIONS", "pydicom.config.DS_decimal", "pydicom.config.DS_numpy", "pydicom.config.IGNORE", "pydicom.config.INVALID_KEYWORD_BEHAVIOR", "pydicom.config.INVALID_KEY_BEHAVIOR", "pydicom.config.RAISE", "pydicom.config.WARN", "pydicom.config.allow_DS_float", "pydicom.config.assume_implicit_vr_switch", "pydicom.config.convert_wrong_length_to_UN", "pydicom.config.data_element_callback", "pydicom.config.data_element_callback_kwargs", "pydicom.config.datetime_conversion", "pydicom.config.debug", "pydicom.config.enforce_valid_values", "pydicom.config.future_behavior", "pydicom.config.pixel_data_handlers", "pydicom.config.reset_data_element_callback", "pydicom.config.settings", "pydicom.config.show_file_meta", "pydicom.config.use_DS_decimal", "pydicom.config.use_DS_numpy", "pydicom.config.use_IS_numpy", "pydicom.data.get_charset_files", "pydicom.data.get_palette_files", "pydicom.data.get_testdata_file", "pydicom.data.get_testdata_files", "pydicom.datadict.add_dict_entries", "pydicom.datadict.add_dict_entry", "pydicom.datadict.add_private_dict_entries", "pydicom.datadict.add_private_dict_entry", "pydicom.datadict.dictionary_VM", "pydicom.datadict.dictionary_VR", "pydicom.datadict.dictionary_description", "pydicom.datadict.dictionary_has_tag", "pydicom.datadict.dictionary_is_retired", "pydicom.datadict.dictionary_keyword", "pydicom.datadict.get_entry", "pydicom.datadict.get_private_entry", "pydicom.datadict.keyword_for_tag", "pydicom.datadict.mask_match", "pydicom.datadict.private_dictionary_VM", "pydicom.datadict.private_dictionary_VR", "pydicom.datadict.private_dictionary_description", "pydicom.datadict.repeater_has_keyword", "pydicom.datadict.repeater_has_tag", "pydicom.datadict.tag_for_keyword", "pydicom.dataelem.DataElement", "pydicom.dataelem.DataElement_from_raw", "pydicom.dataelem.RawDataElement", "pydicom.dataset.Dataset", "pydicom.dataset.FileDataset", "pydicom.dataset.FileMetaDataset", "pydicom.dataset.PrivateBlock", "pydicom.dataset.validate_file_meta", "pydicom.encaps.decode_data_sequence", "pydicom.encaps.defragment_data", "pydicom.encaps.encapsulate", "pydicom.encaps.encapsulate_extended", "pydicom.encaps.fragment_frame", "pydicom.encaps.generate_fragmented_frames", "pydicom.encaps.generate_fragments", "pydicom.encaps.generate_frames", "pydicom.encaps.generate_pixel_data", "pydicom.encaps.generate_pixel_data_fragment", "pydicom.encaps.generate_pixel_data_frame", "pydicom.encaps.get_frame", "pydicom.encaps.get_frame_offsets", "pydicom.encaps.itemize_fragment", "pydicom.encaps.itemize_frame", "pydicom.encaps.parse_basic_offsets", "pydicom.encaps.parse_fragments", "pydicom.encaps.read_item", "pydicom.errors.InvalidDicomError", "pydicom.examples.get_path", "pydicom.filebase.DicomBytesIO", "pydicom.filebase.DicomFile", "pydicom.filebase.DicomFileLike", "pydicom.filebase.DicomIO", "pydicom.filereader.data_element_generator", "pydicom.filereader.data_element_offset_to_value", "pydicom.filereader.dcmread", "pydicom.filereader.read_dataset", "pydicom.filereader.read_deferred_data_element", "pydicom.filereader.read_file_meta_info", "pydicom.filereader.read_partial", "pydicom.filereader.read_preamble", "pydicom.filereader.read_sequence", "pydicom.filereader.read_sequence_item", "pydicom.fileset.DIRECTORY_RECORDERS", "pydicom.fileset.FileInstance", "pydicom.fileset.FileSet", "pydicom.fileset.RecordNode", "pydicom.fileset.generate_filename", "pydicom.fileset.is_conformant_file_id", "pydicom.fileutil.absorb_delimiter_item", "pydicom.fileutil.find_bytes", "pydicom.fileutil.find_delimiter", "pydicom.fileutil.length_of_undefined_length", "pydicom.fileutil.read_undefined_length_value", "pydicom.filewriter.correct_ambiguous_vr", "pydicom.filewriter.correct_ambiguous_vr_element", "pydicom.filewriter.dcmwrite", "pydicom.filewriter.multi_string", "pydicom.filewriter.write_ATvalue", "pydicom.filewriter.write_DA", "pydicom.filewriter.write_DT", "pydicom.filewriter.write_OBvalue", "pydicom.filewriter.write_OWvalue", "pydicom.filewriter.write_PN", "pydicom.filewriter.write_TM", "pydicom.filewriter.write_UI", "pydicom.filewriter.write_UN", "pydicom.filewriter.write_data_element", "pydicom.filewriter.write_dataset", "pydicom.filewriter.write_file_meta_info", "pydicom.filewriter.write_number_string", "pydicom.filewriter.write_numbers", "pydicom.filewriter.write_sequence", "pydicom.filewriter.write_sequence_item", "pydicom.filewriter.write_string", "pydicom.filewriter.write_text", "pydicom.misc.is_dicom", "pydicom.misc.size_in_bytes", "pydicom.multival.MultiValue", "pydicom.overlays.numpy_handler", "pydicom.pixel_data_handlers.gdcm_handler", "pydicom.pixel_data_handlers.jpeg_ls_handler", "pydicom.pixel_data_handlers.numpy_handler", "pydicom.pixel_data_handlers.pillow_handler", "pydicom.pixel_data_handlers.pylibjpeg_handler", "pydicom.pixel_data_handlers.rle_handler", "pydicom.pixels.apply_color_lut", "pydicom.pixels.apply_modality_lut", "pydicom.pixels.apply_rescale", "pydicom.pixels.apply_voi", "pydicom.pixels.apply_voi_lut", "pydicom.pixels.apply_windowing", "pydicom.pixels.as_pixel_options", "pydicom.pixels.compress", "pydicom.pixels.convert_color_space", "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.HTJ2KDecoder", "pydicom.pixels.decoders.HTJ2KLosslessDecoder", "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.JPEG2000Decoder", "pydicom.pixels.decoders.JPEG2000LosslessDecoder", "pydicom.pixels.decoders.JPEGBaseline8BitDecoder", "pydicom.pixels.decoders.JPEGExtended12BitDecoder", "pydicom.pixels.decoders.JPEGLSLosslessDecoder", "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", "pydicom.pixels.decoders.JPEGLosslessDecoder", "pydicom.pixels.decoders.JPEGLosslessSV1Decoder", "pydicom.pixels.decoders.RLELosslessDecoder", "pydicom.pixels.decoders.base.DecodeRunner", "pydicom.pixels.decoders.base.Decoder", "pydicom.pixels.decompress", "pydicom.pixels.encoders.JPEG2000Encoder", "pydicom.pixels.encoders.JPEG2000LosslessEncoder", "pydicom.pixels.encoders.JPEGLSLosslessEncoder", "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", "pydicom.pixels.encoders.RLELosslessEncoder", "pydicom.pixels.encoders.base.EncodeRunner", "pydicom.pixels.encoders.base.Encoder", "pydicom.pixels.get_decoder", "pydicom.pixels.get_encoder", "pydicom.pixels.iter_pixels", "pydicom.pixels.pack_bits", "pydicom.pixels.pixel_array", "pydicom.pixels.processing.apply_color_lut", "pydicom.pixels.processing.apply_modality_lut", "pydicom.pixels.processing.apply_rescale", "pydicom.pixels.processing.apply_voi", "pydicom.pixels.processing.apply_voi_lut", "pydicom.pixels.processing.apply_windowing", "pydicom.pixels.processing.convert_color_space", "pydicom.pixels.set_pixel_data", "pydicom.pixels.unpack_bits", "pydicom.pixels.utils.as_pixel_options", "pydicom.pixels.utils.compress", "pydicom.pixels.utils.decompress", "pydicom.pixels.utils.expand_ybr422", "pydicom.pixels.utils.get_expected_length", "pydicom.pixels.utils.get_image_pixel_ids", "pydicom.pixels.utils.get_j2k_parameters", "pydicom.pixels.utils.get_nr_frames", "pydicom.pixels.utils.iter_pixels", "pydicom.pixels.utils.pack_bits", "pydicom.pixels.utils.pixel_array", "pydicom.pixels.utils.pixel_dtype", "pydicom.pixels.utils.reshape_pixel_array", "pydicom.pixels.utils.set_pixel_data", "pydicom.pixels.utils.unpack_bits", "pydicom.sequence.Sequence", "pydicom.sr.Code", "pydicom.sr.Collection", "pydicom.sr.Concepts", "pydicom.tag.BaseTag", "pydicom.tag.Tag", "pydicom.tag.TupleTag", "pydicom.tag.tag_in_exception", "pydicom.uid.AcquisitionContextSRStorage", "pydicom.uid.AdvancedBlendingPresentationStateStorage", "pydicom.uid.AllTransferSyntaxes", "pydicom.uid.AmbulatoryECGWaveformStorage", "pydicom.uid.ArterialPulseWaveformStorage", "pydicom.uid.AutorefractionMeasurementsStorage", "pydicom.uid.BasicStructuredDisplayStorage", "pydicom.uid.BasicTextSRStorage", "pydicom.uid.BasicVoiceAudioWaveformStorage", "pydicom.uid.BlendingSoftcopyPresentationStateStorage", "pydicom.uid.BodyPositionWaveformStorage", "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "pydicom.uid.BreastTomosynthesisImageStorage", "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "pydicom.uid.CArmPhotonElectronRadiationStorage", "pydicom.uid.CTDefinedProcedureProtocolStorage", "pydicom.uid.CTImageStorage", "pydicom.uid.CTPerformedProcedureProtocolStorage", "pydicom.uid.CardiacElectrophysiologyWaveformStorage", "pydicom.uid.ChestCADSRStorage", "pydicom.uid.ColonCADSRStorage", "pydicom.uid.ColorPaletteStorage", "pydicom.uid.ColorSoftcopyPresentationStateStorage", "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.Comprehensive3DSRStorage", "pydicom.uid.ComprehensiveSRStorage", "pydicom.uid.ComputedRadiographyImageStorage", "pydicom.uid.ConfocalMicroscopyImageStorage", "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "pydicom.uid.ContentAssessmentResultsStorage", "pydicom.uid.CornealTopographyMapStorage", "pydicom.uid.DICOS2DAITStorage", "pydicom.uid.DICOS3DAITStorage", "pydicom.uid.DICOSCTImageStorage", "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "pydicom.uid.DICOSQuadrupoleResonanceStorage", "pydicom.uid.DICOSThreatDetectionReportStorage", "pydicom.uid.DeflatedExplicitVRLittleEndian", "pydicom.uid.DeformableSpatialRegistrationStorage", "pydicom.uid.DermoscopicPhotographyImageStorage", "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "pydicom.uid.DigitalXRayImageStorageForPresentation", "pydicom.uid.DigitalXRayImageStorageForProcessing", "pydicom.uid.EddyCurrentImageStorage", "pydicom.uid.EddyCurrentMultiFrameImageStorage", "pydicom.uid.ElectromyogramWaveformStorage", "pydicom.uid.ElectrooculogramWaveformStorage", "pydicom.uid.EncapsulatedCDAStorage", "pydicom.uid.EncapsulatedMTLStorage", "pydicom.uid.EncapsulatedOBJStorage", "pydicom.uid.EncapsulatedPDFStorage", "pydicom.uid.EncapsulatedSTLStorage", "pydicom.uid.EnhancedCTImageStorage", "pydicom.uid.EnhancedContinuousRTImageStorage", "pydicom.uid.EnhancedMRColorImageStorage", "pydicom.uid.EnhancedMRImageStorage", "pydicom.uid.EnhancedPETImageStorage", "pydicom.uid.EnhancedRTImageStorage", "pydicom.uid.EnhancedSRStorage", "pydicom.uid.EnhancedUSVolumeStorage", "pydicom.uid.EnhancedXAImageStorage", "pydicom.uid.EnhancedXRFImageStorage", "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "pydicom.uid.ExplicitVRBigEndian", "pydicom.uid.ExplicitVRLittleEndian", "pydicom.uid.ExtensibleSRStorage", "pydicom.uid.General32bitECGWaveformStorage", "pydicom.uid.GeneralAudioWaveformStorage", "pydicom.uid.GeneralECGWaveformStorage", "pydicom.uid.GenericImplantTemplateStorage", "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.HEVCM10P51", "pydicom.uid.HEVCMP51", "pydicom.uid.HTJ2K", "pydicom.uid.HTJ2KLossless", "pydicom.uid.HTJ2KLosslessRPCL", "pydicom.uid.HangingProtocolStorage", "pydicom.uid.HemodynamicWaveformStorage", "pydicom.uid.ImplantAssemblyTemplateStorage", "pydicom.uid.ImplantTemplateGroupStorage", "pydicom.uid.ImplantationPlanSRStorage", "pydicom.uid.ImplicitVRLittleEndian", "pydicom.uid.IntraocularLensCalculationsStorage", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pydicom.uid.InventoryStorage", "pydicom.uid.JPEG2000", "pydicom.uid.JPEG2000Lossless", "pydicom.uid.JPEG2000MC", "pydicom.uid.JPEG2000MCLossless", "pydicom.uid.JPEG2000TransferSyntaxes", "pydicom.uid.JPEGBaseline8Bit", "pydicom.uid.JPEGExtended12Bit", "pydicom.uid.JPEGLSLossless", "pydicom.uid.JPEGLSNearLossless", "pydicom.uid.JPEGLSTransferSyntaxes", "pydicom.uid.JPEGLossless", "pydicom.uid.JPEGLosslessSV1", "pydicom.uid.JPEGTransferSyntaxes", "pydicom.uid.JPIPHTJ2KReferenced", "pydicom.uid.JPIPHTJ2KReferencedDeflate", "pydicom.uid.KeratometryMeasurementsStorage", "pydicom.uid.KeyObjectSelectionDocumentStorage", "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "pydicom.uid.LensometryMeasurementsStorage", "pydicom.uid.MPEG2MPHL", "pydicom.uid.MPEG2MPHLF", "pydicom.uid.MPEG2MPML", "pydicom.uid.MPEG2MPMLF", "pydicom.uid.MPEG4HP41", "pydicom.uid.MPEG4HP41BD", "pydicom.uid.MPEG4HP41BDF", "pydicom.uid.MPEG4HP41F", "pydicom.uid.MPEG4HP422D", "pydicom.uid.MPEG4HP422DF", "pydicom.uid.MPEG4HP423D", "pydicom.uid.MPEG4HP423DF", "pydicom.uid.MPEG4HP42STEREO", "pydicom.uid.MPEG4HP42STEREOF", "pydicom.uid.MPEGTransferSyntaxes", "pydicom.uid.MRImageStorage", "pydicom.uid.MRSpectroscopyStorage", "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "pydicom.uid.MammographyCADSRStorage", "pydicom.uid.MediaStorageDirectoryStorage", "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "pydicom.uid.MultichannelRespiratoryWaveformStorage", "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.NuclearMedicineImageStorage", "pydicom.uid.OphthalmicAxialMeasurementsStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pydicom.uid.OphthalmicPhotography16BitImageStorage", "pydicom.uid.OphthalmicPhotography8BitImageStorage", "pydicom.uid.OphthalmicThicknessMapStorage", "pydicom.uid.OphthalmicTomographyImageStorage", "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "pydicom.uid.PYDICOM_ROOT_UID", "pydicom.uid.ParametricMapStorage", "pydicom.uid.PatientRadiationDoseSRStorage", "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "pydicom.uid.PhotoacousticImageStorage", "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "pydicom.uid.PositronEmissionTomographyImageStorage", "pydicom.uid.PrivateTransferSyntaxes", "pydicom.uid.ProcedureLogStorage", "pydicom.uid.ProtocolApprovalStorage", "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "pydicom.uid.RE_VALID_UID", "pydicom.uid.RE_VALID_UID_PREFIX", "pydicom.uid.RLELossless", "pydicom.uid.RLETransferSyntaxes", "pydicom.uid.RTBeamsDeliveryInstructionStorage", "pydicom.uid.RTBeamsTreatmentRecordStorage", "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "pydicom.uid.RTBrachyTreatmentRecordStorage", "pydicom.uid.RTDoseStorage", "pydicom.uid.RTImageStorage", "pydicom.uid.RTIonBeamsTreatmentRecordStorage", "pydicom.uid.RTIonPlanStorage", "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "pydicom.uid.RTPhysicianIntentStorage", "pydicom.uid.RTPlanStorage", "pydicom.uid.RTRadiationRecordSetStorage", "pydicom.uid.RTRadiationSalvageRecordStorage", "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "pydicom.uid.RTRadiationSetStorage", "pydicom.uid.RTSegmentAnnotationStorage", "pydicom.uid.RTStructureSetStorage", "pydicom.uid.RTTreatmentPreparationStorage", "pydicom.uid.RTTreatmentSummaryRecordStorage", "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "pydicom.uid.RawDataStorage", "pydicom.uid.RealWorldValueMappingStorage", "pydicom.uid.RespiratoryWaveformStorage", "pydicom.uid.RoboticArmRadiationStorage", "pydicom.uid.RoboticRadiationRecordStorage", "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "pydicom.uid.SMPTEST211030PCMDigitalAudio", "pydicom.uid.SecondaryCaptureImageStorage", "pydicom.uid.SegmentationStorage", "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.SimplifiedAdultEchoSRStorage", "pydicom.uid.SleepElectroencephalogramWaveformStorage", "pydicom.uid.SpatialFiducialsStorage", "pydicom.uid.SpatialRegistrationStorage", "pydicom.uid.SpectaclePrescriptionReportStorage", "pydicom.uid.StereometricRelationshipStorage", "pydicom.uid.SubjectiveRefractionMeasurementsStorage", "pydicom.uid.SurfaceScanMeshStorage", "pydicom.uid.SurfaceScanPointCloudStorage", "pydicom.uid.SurfaceSegmentationStorage", "pydicom.uid.TomotherapeuticRadiationRecordStorage", "pydicom.uid.TomotherapeuticRadiationStorage", "pydicom.uid.TractographyResultsStorage", "pydicom.uid.TwelveLeadECGWaveformStorage", "pydicom.uid.UID", "pydicom.uid.UltrasoundImageStorage", "pydicom.uid.UltrasoundMultiFrameImageStorage", "pydicom.uid.UncompressedTransferSyntaxes", "pydicom.uid.VLEndoscopicImageStorage", "pydicom.uid.VLMicroscopicImageStorage", "pydicom.uid.VLPhotographicImageStorage", "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "pydicom.uid.VLWholeSlideMicroscopyImageStorage", "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "pydicom.uid.VideoEndoscopicImageStorage", "pydicom.uid.VideoMicroscopicImageStorage", "pydicom.uid.VideoPhotographicImageStorage", "pydicom.uid.VisualAcuityMeasurementsStorage", "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pydicom.uid.XADefinedProcedureProtocolStorage", "pydicom.uid.XAPerformedProcedureProtocolStorage", "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.XRay3DAngiographicImageStorage", "pydicom.uid.XRay3DCraniofacialImageStorage", "pydicom.uid.XRayAngiographicImageStorage", "pydicom.uid.XRayRadiationDoseSRStorage", "pydicom.uid.XRayRadiofluoroscopicImageStorage", "pydicom.uid.generate_uid", "pydicom.uid.register_transfer_syntax", "pydicom.valuerep.DA", "pydicom.valuerep.DS", "pydicom.valuerep.DSdecimal", "pydicom.valuerep.DSfloat", "pydicom.valuerep.DT", "pydicom.valuerep.IS", "pydicom.valuerep.ISfloat", "pydicom.valuerep.PersonName", "pydicom.valuerep.TM", "pydicom.valuerep.VR", "pydicom.valuerep.format_number_as_ds", "pydicom.valuerep.is_valid_ds", "pydicom.values.convert_AE_string", "pydicom.values.convert_ATvalue", "pydicom.values.convert_DA_string", "pydicom.values.convert_DS_string", "pydicom.values.convert_DT_string", "pydicom.values.convert_IS_string", "pydicom.values.convert_OBvalue", "pydicom.values.convert_OWvalue", "pydicom.values.convert_PN", "pydicom.values.convert_SQ", "pydicom.values.convert_TM_string", "pydicom.values.convert_UI", "pydicom.values.convert_UN", "pydicom.values.convert_UR_string", "pydicom.values.convert_numbers", "pydicom.values.convert_single_string", "pydicom.values.convert_string", "pydicom.values.convert_tag", "pydicom.values.convert_text", "pydicom.values.convert_value", "pydicom.values.multi_string", "pydicom.waveforms.numpy_handler", "Bulk Data Handlers", "Pixel Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixel_data_handlers</span></code>)", "API Reference", "Miscellaneous (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.misc</span></code>)", "Overlay Data Handling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.overlays</span></code>)", "Pixel Data (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels</span></code>)", "Pixel Data Decoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.decoders</span></code>)", "Pixel Data Encoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.encoders</span></code>)", "Pixel Data Processing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.processing</span></code>)", "Pixel Data Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.utils</span></code>)", "Concepts and Context Groups (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sr</span></code>)", "UID Definitions and Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.uid</span></code>)", "Waveform Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.waveforms</span></code>)", "Release notes", "Version 0.9.2", "Version 0.9.3", "Version 0.9.4", "Version 0.9.5", "Version 0.9.6", "Version 0.9.7", "Version 0.9.8", "Version 0.9.9", "Version 1.0.0", "Version 1.1.0", "Version 1.2.0", "Version 1.3.0", "Version 1.4.0", "Version 1.4.1", "Version 2.0.0", "Version 2.1.0", "Version 2.1.1", "Version 2.2.0", "Version 2.3.0", "Version 2.4.0", "Version 3.0.0", "Computation times", "Contributing to pydicom", "Contributing a source code change", "Contributing a documentation change", "Dataset basics: read, access, modify, write", "Introduction to JSON support", "DICOM File-sets and DICOMDIR", "Tutorials", "How to install pydicom", "<em>Pixel Data</em> - Part 3: Compression and decompression", "<em>Pixel Data</em> - Part 2: Creation of pixel data", "<em>Pixel Data</em>", "<em>Pixel Data</em> - Part 1: Introduction and accessing", "Structured Reporting", "Waveforms"], "titleterms": {"": 23, "0": [570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 588, 589, 590, 591], "1": [570, 579, 580, 581, 582, 583, 584, 586, 587, 604], "12": 602, "2": [570, 571, 581, 585, 586, 587, 588, 589, 590, 602], "2000": [36, 601], "3": [570, 572, 582, 589, 591, 601], "4": [570, 573, 583, 584, 590], "5": [570, 574], "6": [570, 575], "7": [570, 576], "8": [570, 577, 602], "9": [570, 571, 572, 573, 574, 575, 576, 577, 578], "A": [24, 26], "Near": 37, "The": 598, "absorb_delimiter_item": 176, "access": [596, 604], "acquisitioncontextsrstorag": 285, "ad": [30, 34, 47, 596, 598], "add": 16, "add_dict_entri": [108, 109], "add_private_dict_entri": [110, 111], "addit": [570, 573], "advancedblendingpresentationstatestorag": 286, "all": 47, "allow_ds_float": 88, "alltransfersyntax": 287, "ambulatoryecgwaveformstorag": 288, "an": [34, 604], "analys": 20, "ani": 596, "anonym": 17, "api": [54, 559], "appli": 598, "apply_color_lut": [213, 253], "apply_j2k_correct": 80, "apply_modality_lut": [214, 254], "apply_rescal": [215, 255], "apply_voi": [216, 256], "apply_voi_lut": [217, 257], "apply_window": [218, 258], "ar": 23, "arterialpulsewaveformstorag": 289, "as_pixel_opt": [219, 262], "ask": 23, "assume_implicit_vr_switch": 89, "autorefractionmeasurementsstorag": 290, "avail": [36, 37, 38], "axial": 4, "base": [14, 71, 238, 239, 246, 247], "basetag": 281, "basic": 596, "basicstructureddisplaystorag": 291, "basictextsrstorag": 292, "basicvoiceaudiowaveformstorag": 293, "best": 43, "between": 20, "binari": 597, "bit": [36, 602], "blendingsoftcopypresentationstatestorag": 294, "bodypositionwaveformstorag": 295, "branch": [594, 595], "breastprojectionxrayimagestorageforpresent": 296, "breastprojectionxrayimagestorageforprocess": 297, "breasttomosynthesisimagestorag": 298, "bug": [570, 571, 572, 573, 575, 576, 577], "build": 595, "bulk": [67, 557], "can": 23, "cardiacelectrophysiologywaveformstorag": 304, "carmphotonelectronradiationrecordstorag": 299, "carmphotonelectronradiationstorag": 300, "categori": 596, "chang": [570, 571, 572, 573, 575, 576, 577, 578, 579, 581, 582, 583, 584, 586, 588, 589, 590, 591, 594, 595, 598], "changelog": [570, 585], "charact": 55, "charset": [55, 76, 77, 78, 79], "chestcadsrstorag": 305, "cite": 23, "class": [71, 568], "cli": [25, 26, 27], "code": [43, 278, 594], "codifi": [24, 26, 52], "collect": 279, "coloncadsrstorag": 306, "color": 50, "colorpalettestorag": 307, "colorsoftcopypresentationstatestorag": 308, "combin": [26, 27], "command": [24, 26, 28], "commit": [594, 595], "compositingplanarmprvolumetricpresentationstatestorag": 309, "comprehensive3dsrstorag": 310, "comprehensivesrstorag": 311, "compress": [41, 44, 45, 220, 263, 601, 604], "comput": [5, 13, 19, 21, 592], "computedradiographyimagestorag": 312, "concept": [280, 567], "conclus": [598, 601, 602, 604], "conda": 600, "config": [56, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "configur": [37, 56], "confocalmicroscopyimagestorag": 313, "confocalmicroscopytiledpyramidalimagestorag": 314, "contentassessmentresultsstorag": 315, "context": 567, "contrib": [570, 574, 577, 578], "contribut": [593, 594, 595], "contributor": [570, 578], "control": 604, "convert": [597, 604], "convert_ae_str": 535, "convert_atvalu": 536, "convert_color_spac": [221, 259], "convert_da_str": 537, "convert_ds_str": 538, "convert_dt_str": 539, "convert_encod": 76, "convert_is_str": 540, "convert_numb": 549, "convert_obvalu": 541, "convert_owvalu": 542, "convert_pn": 543, "convert_single_str": 550, "convert_sq": 544, "convert_str": 551, "convert_tag": 552, "convert_text": 553, "convert_tm_str": 545, "convert_ui": 546, "convert_un": 547, "convert_ur_str": 548, "convert_valu": 554, "convert_wrong_length_to_un": 90, "core": 42, "cornealtopographymapstorag": 316, "coron": 4, "correct_ambiguous_vr": 181, "correct_ambiguous_vr_el": 182, "creat": [67, 594, 595, 597, 598, 602], "creation": 602, "ct": 4, "ctdefinedprocedureprotocolstorag": 301, "ctimagestorag": 302, "ctperformedprocedureprotocolstorag": 303, "current": 594, "d": 524, "da": 523, "data": [3, 8, 9, 12, 17, 29, 30, 31, 34, 35, 41, 44, 45, 47, 49, 50, 51, 57, 58, 60, 61, 67, 104, 105, 106, 107, 557, 558, 561, 562, 563, 564, 565, 566, 569, 597, 601, 602, 603, 604, 606], "data_element_callback": 91, "data_element_callback_kwarg": 92, "data_element_gener": 160, "data_element_offset_to_valu": 161, "datadict": [58, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "datael": [42, 128], "dataelem": [61, 128, 129, 130], "dataelement_from_raw": 129, "dataset": [9, 14, 42, 44, 49, 50, 51, 57, 59, 69, 70, 72, 74, 131, 132, 133, 134, 135, 596, 597, 601], "datetime_convers": 93, "dcmread": 162, "dcmwrite": 183, "debug": 94, "decod": [3, 29, 30, 31, 55, 66, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 563, 604, 606], "decode_byt": 77, "decode_data_sequ": 136, "decode_el": 78, "decoderunn": 238, "decompress": [41, 240, 264, 601], "definit": 568, "deflatedexplicitvrlittleendian": 324, "deflatedexplicitvrlittleendiandecod": 222, "deformablespatialregistrationstorag": 325, "defragment_data": 137, "delet": 596, "deprec": [570, 591], "dermoscopicphotographyimagestorag": 326, "develop": 600, "dicom": [0, 10, 11, 12, 16, 17, 20, 24, 26, 43, 47, 52, 58, 75, 598, 600, 606], "dicombytesio": 156, "dicomdir": 598, "dicomfil": 157, "dicomfilelik": 158, "dicomio": 159, "dicos2daitstorag": 317, "dicos3daitstorag": 318, "dicosctimagestorag": 319, "dicosdigitalxrayimagestorageforpresent": 320, "dicosdigitalxrayimagestorageforprocess": 321, "dicosquadrupoleresonancestorag": 322, "dicosthreatdetectionreportstorag": 323, "dictionari": [16, 47, 58], "dictionary_descript": 114, "dictionary_has_tag": 115, "dictionary_is_retir": 116, "dictionary_keyword": 117, "dictionary_vm": 112, "dictionary_vr": 113, "differ": 20, "digitalintraoralxrayimagestorageforpresent": 327, "digitalintraoralxrayimagestorageforprocess": 328, "digitalmammographyxrayimagestorageforpresent": 329, "digitalmammographyxrayimagestorageforprocess": 330, "digitalxrayimagestorageforpresent": 331, "digitalxrayimagestorageforprocess": 332, "directory_record": 170, "displai": [22, 47], "do": 23, "document": [53, 54, 570, 582, 594, 595], "doe": 23, "doubl": 602, "download": [594, 595, 600], "downsiz": 2, "ds_decim": 81, "ds_numpi": 82, "dsdecim": 525, "dsfloat": 526, "dt": 527, "eddycurrentimagestorag": 333, "eddycurrentmultiframeimagestorag": 334, "electromyogramwaveformstorag": 335, "electrooculogramwaveformstorag": 336, "element": [32, 42, 47, 60, 61, 62, 63, 64, 65, 66, 596], "encap": [67, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "encapsul": [67, 138, 601], "encapsulate_extend": 139, "encapsulatedcdastorag": 337, "encapsulatedmtlstorag": 338, "encapsulatedobjstorag": 339, "encapsulatedpdfstorag": 340, "encapsulatedstlstorag": 341, "encod": [33, 34, 35, 36, 37, 38, 55, 241, 242, 243, 244, 245, 246, 247, 564, 606], "encode_str": 79, "encoderunn": 246, "enforc": 43, "enforce_valid_valu": 95, "enhanc": [570, 571, 572, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 588, 589, 590, 591], "enhancedcontinuousrtimagestorag": 343, "enhancedctimagestorag": 342, "enhancedmrcolorimagestorag": 344, "enhancedmrimagestorag": 345, "enhancedpetimagestorag": 346, "enhancedrtimagestorag": 347, "enhancedsrstorag": 348, "enhancedusvolumestorag": 349, "enhancedxaimagestorag": 350, "enhancedxrayradiationdosesrstorag": 352, "enhancedxrfimagestorag": 351, "entri": 47, "error": [68, 154], "exampl": [6, 24, 26, 36, 37, 38, 54, 69, 155, 596, 600], "except": 68, "exist": 598, "expand_ybr422": 265, "explicitvrbigendian": 353, "explicitvrbigendiandecod": 223, "explicitvrlittleendian": 354, "explicitvrlittleendiandecod": 224, "extend": [25, 26], "extensiblesrstorag": 355, "file": [0, 10, 17, 20, 24, 26, 39, 52, 75, 570, 574, 577, 578, 598, 600], "file_meta": 596, "filebas": [71, 156, 157, 158, 159], "filedataset": 132, "fileinst": 171, "filemetadataset": 133, "fileread": [72, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "fileset": [75, 170, 171, 172, 173, 174, 175, 598], "fileutil": [73, 176, 177, 178, 179, 180], "filewrit": [74, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "find_byt": 177, "find_delimit": 178, "fix": [570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591], "float": 602, "format": [8, 597], "format_number_as_d": 533, "fragment_fram": 140, "frame": 602, "frequent": 23, "from": [52, 597], "futur": 43, "future_behavior": 96, "gdcm": [33, 41, 600], "gdcm_handler": 207, "gener": [6, 23, 53], "general32bitecgwaveformstorag": 356, "generalaudiowaveformstorag": 357, "generalecgwaveformstorag": 358, "generate_filenam": 174, "generate_frag": 142, "generate_fragmented_fram": 141, "generate_fram": 143, "generate_pixel_data": 144, "generate_pixel_data_frag": 145, "generate_pixel_data_fram": 146, "generate_uid": 521, "genericimplanttemplatestorag": 359, "get": [54, 57, 596], "get_charset_fil": 104, "get_decod": 248, "get_encod": 249, "get_entri": 118, "get_expected_length": 266, "get_fram": 147, "get_frame_offset": 148, "get_image_pixel_id": 267, "get_j2k_paramet": 268, "get_nr_fram": 269, "get_palette_fil": 105, "get_path": 155, "get_private_entri": 119, "get_testdata_fil": [106, 107], "glossari": 39, "grayscal": 602, "grayscaleplanarmprvolumetricpresentationstatestorag": 360, "grayscalesoftcopypresentationstatestorag": 361, "group": 567, "guid": [26, 40, 46, 54], "guidelin": 53, "handl": [45, 561], "handler": [557, 558, 569], "hangingprotocolstorag": 367, "happen": [594, 595], "hemodynamicwaveformstorag": 368, "hevcm10p51": 362, "hevcmp51": 363, "hierarch": 0, "how": [23, 600], "htj2k": 364, "htj2kdecod": 225, "htj2klossless": 365, "htj2klosslessdecod": 226, "htj2klosslessrpcl": 366, "htj2klosslessrpcldecod": 227, "i": [23, 528], "ignor": 83, "imag": [1, 2, 4, 6, 29, 36, 37, 38, 39, 48], "implantassemblytemplatestorag": 369, "implantationplansrstorag": 371, "implanttemplategroupstorag": 370, "implicitvrlittleendian": 372, "implicitvrlittleendiandecod": 228, "includ": 57, "inform": [11, 39], "infrastructur": [570, 579], "input": [6, 7], "instal": [23, 26, 27, 594, 600], "instanc": 598, "integ": 602, "interfac": 26, "intern": [570, 590, 591], "interpret": [36, 37], "intraocularlenscalculationsstorag": 373, "intravascularopticalcoherencetomographyimagestorageforpresent": 374, "intravascularopticalcoherencetomographyimagestorageforprocess": 375, "introduct": [26, 27, 43, 47, 48, 49, 50, 51, 52, 597, 604], "invalid_key_behavior": 85, "invalid_keyword_behavior": 84, "invaliddicomerror": 154, "inventorystorag": 376, "io": [70, 71, 73], "is_conformant_file_id": 175, "is_dicom": 203, "is_valid_d": 534, "isfloat": 529, "item": 16, "itemize_frag": 149, "itemize_fram": 150, "iter_pixel": [250, 270], "jpeg": [36, 37, 601], "jpeg2000": 377, "jpeg2000decod": 229, "jpeg2000encod": 241, "jpeg2000lossless": 378, "jpeg2000losslessdecod": 230, "jpeg2000losslessencod": 242, "jpeg2000mc": 379, "jpeg2000mclossless": 380, "jpeg2000transfersyntax": 381, "jpeg_ls_handl": 208, "jpegbaseline8bit": 382, "jpegbaseline8bitdecod": 231, "jpegextended12bit": 383, "jpegextended12bitdecod": 232, "jpeglossless": 387, "jpeglosslessdecod": 235, "jpeglosslesssv1": 388, "jpeglosslesssv1decod": 236, "jpeglslossless": 384, "jpeglslosslessdecod": 233, "jpeglslosslessencod": 243, "jpeglsnearlossless": 385, "jpeglsnearlosslessdecod": 234, "jpeglsnearlosslessencod": 244, "jpeglstransfersyntax": 386, "jpegtransfersyntax": 389, "jpiphtj2kreferenc": 390, "jpiphtj2kreferenceddefl": 391, "json": 597, "keratometrymeasurementsstorag": 392, "keyobjectselectiondocumentstorag": 393, "keyword_for_tag": 120, "l": [37, 601], "larg": 597, "legacyconvertedenhancedctimagestorag": 394, "legacyconvertedenhancedmrimagestorag": 395, "legacyconvertedenhancedpetimagestorag": 396, "length_of_undefined_length": 179, "lensometrymeasurementsstorag": 397, "librari": [594, 600], "licens": 23, "limit": 43, "line": 26, "list": [11, 568], "load": [4, 598], "lossless": [29, 36, 37, 38, 601], "lut": 50, "maculargridthicknessandvolumereportstorag": 415, "major": [43, 570, 571, 572, 573, 574, 575, 576, 577, 579], "make": [594, 595], "mammographycadsrstorag": 416, "mask_match": 121, "matplotlib": 48, "mediastoragedirectorystorag": 417, "memori": [14, 604], "meta": 39, "metadata": [6, 15, 604], "microscopybulksimpleannotationsstorag": 418, "minim": 604, "misc": [203, 204, 560], "miscellan": [29, 560], "modal": 50, "modifi": [596, 598], "modul": [39, 562], "mpeg2mphl": 398, "mpeg2mphlf": 399, "mpeg2mpml": 400, "mpeg2mpmlf": 401, "mpeg4hp41": 402, "mpeg4hp41bd": 403, "mpeg4hp41bdf": 404, "mpeg4hp41f": 405, "mpeg4hp422d": 406, "mpeg4hp422df": 407, "mpeg4hp423d": 408, "mpeg4hp423df": 409, "mpeg4hp42stereo": 410, "mpeg4hp42stereof": 411, "mpegtransfersyntax": 412, "mri": 2, "mrimagestorag": 413, "mrspectroscopystorag": 414, "multi": [62, 602], "multi_str": [184, 555], "multichannelrespiratorywaveformstorag": 423, "multiframegrayscalebytesecondarycaptureimagestorag": 419, "multiframegrayscalewordsecondarycaptureimagestorag": 420, "multiframesinglebitsecondarycaptureimagestorag": 421, "multiframetruecolorsecondarycaptureimagestorag": 422, "multiplevolumerenderingvolumetricpresentationstatestorag": 424, "multiv": [62, 205], "multivalu": 205, "name": 22, "ndarrai": 604, "new": [47, 570, 574, 594, 595, 598], "next": [594, 595, 596, 602, 604], "note": 570, "nuclearmedicineimagestorag": 425, "numpy_handl": [206, 209, 556], "offici": 600, "oper": 50, "ophthalmicaxialmeasurementsstorag": 426, "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorag": 427, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 428, "ophthalmicphotography16bitimagestorag": 429, "ophthalmicphotography8bitimagestorag": 430, "ophthalmicthicknessmapstorag": 431, "ophthalmictomographyimagestorag": 432, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 433, "option": [23, 24, 26, 29, 33, 56, 594, 600], "other": [26, 27, 570, 571, 572, 573, 574, 575, 576, 578, 579, 580], "output": [6, 7, 8], "overlai": [49, 206, 561], "overlay_arrai": 49, "pack_bit": [251, 271], "packag": [43, 44, 601], "palett": 50, "paramet": [36, 37, 38], "parametricmapstorag": 436, "pars": 67, "parse_basic_offset": 151, "parse_frag": 152, "part": [24, 26, 601, 602, 604], "parti": [44, 601], "path": 596, "patientradiationdosesrstorag": 437, "performedimagingagentadministrationsrstorag": 438, "person": 22, "personnam": 530, "photoacousticimagestorag": 439, "photometr": [36, 37], "pillow": [41, 600], "pillow_handl": 210, "pip": 600, "pixel": [9, 29, 30, 31, 34, 35, 36, 37, 38, 39, 41, 44, 45, 50, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 558, 562, 563, 564, 565, 566, 601, 602, 603, 604], "pixel_arrai": [50, 252, 272], "pixel_data_handl": [97, 207, 208, 209, 210, 211, 212, 558], "pixel_dtyp": 273, "planar": 37, "plannedimagingagentadministrationsrstorag": 440, "plot": [3, 4, 9], "plugin": [29, 30, 33, 34, 36, 37, 38, 41], "positronemissiontomographyimagestorag": 441, "practic": 43, "prerequisit": [23, 45], "preview": [594, 595], "print": 8, "privat": [16, 47, 58], "private_dictionary_descript": 124, "private_dictionary_vm": 122, "private_dictionary_vr": 123, "privateblock": 134, "privatetransfersyntax": 442, "procedurelogstorag": 443, "process": [1, 6, 15, 29, 253, 254, 255, 256, 257, 258, 259, 565], "proof": 43, "protocolapprovalstorag": 444, "pseudocolorsoftcopypresentationstatestorag": 445, "pull": [594, 595], "pydicom": [2, 23, 24, 26, 27, 28, 33, 41, 42, 43, 44, 46, 47, 48, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 590, 591, 593, 600], "pydicom_implementation_uid": 434, "pydicom_root_uid": 435, "pyjpegl": [33, 41, 600], "pylibjpeg": [33, 36, 41, 600], "pylibjpeg_handl": 211, "pytest": 594, "python": [23, 32], "question": 23, "radiopharmaceuticalradiationdosesrstorag": 469, "rais": 86, "rawdatael": 130, "rawdatastorag": 470, "re_valid_uid": 446, "re_valid_uid_prefix": 447, "read": [9, 10, 11, 72, 596], "read_dataset": 163, "read_deferred_data_el": 164, "read_file_meta_info": 165, "read_item": 153, "read_parti": 166, "read_preambl": 167, "read_sequ": 168, "read_sequence_item": 169, "read_undefined_length_valu": 180, "realworldvaluemappingstorag": 471, "recordnod": 173, "refer": [54, 559], "register_transfer_syntax": 522, "releas": [570, 574, 600], "remov": [47, 570, 591, 598], "repeater_has_keyword": 125, "repeater_has_tag": 126, "report": 605, "represent": [37, 59, 60, 62, 63, 65], "request": [594, 595], "requir": [23, 30, 34, 594], "rescal": 50, "reset_data_element_callback": 98, "reshape_pixel_arrai": 274, "respiratorywaveformstorag": 472, "restructuredtext": 53, "rgb": 602, "rle": [29, 38, 601], "rle_handl": 212, "rlelossless": 448, "rlelosslessdecod": 237, "rlelosslessencod": 245, "rletransfersyntax": 449, "roboticarmradiationstorag": 473, "roboticradiationrecordstorag": 474, "routinescalpelectroencephalogramwaveformstorag": 475, "rtbeamsdeliveryinstructionstorag": 450, "rtbeamstreatmentrecordstorag": 451, "rtbrachyapplicationsetupdeliveryinstructionstorag": 452, "rtbrachytreatmentrecordstorag": 453, "rtdosestorag": 454, "rtimagestorag": 455, "rtionbeamstreatmentrecordstorag": 456, "rtionplanstorag": 457, "rtpatientpositionacquisitioninstructionstorag": 458, "rtphysicianintentstorag": 459, "rtplan": 11, "rtplanstorag": 460, "rtradiationrecordsetstorag": 461, "rtradiationsalvagerecordstorag": 462, "rtradiationsetdeliveryinstructionstorag": 463, "rtradiationsetstorag": 464, "rtsegmentannotationstorag": 465, "rtstructuresetstorag": 466, "rttreatmentpreparationstorag": 467, "rttreatmentsummaryrecordstorag": 468, "run": 594, "sagitt": 4, "scratch": 52, "secondarycaptureimagestorag": 479, "segmentationstorag": 480, "segmentedvolumerenderingvolumetricpresentationstatestorag": 481, "sequenc": [18, 42, 63, 277, 596], "set": [8, 10, 47, 75, 99, 598], "set_pixel_data": [260, 275], "show": [0, 14, 26, 28], "show_file_meta": 100, "sign": 602, "simpl": [24, 26], "simplifiedadultechosrstorag": 482, "singl": 17, "size_in_byt": 204, "sleepelectroencephalogramwaveformstorag": 483, "slice": 4, "smptest211020uncompressedinterlacedactivevideo": 476, "smptest211020uncompressedprogressiveactivevideo": 477, "smptest211030pcmdigitalaudio": 478, "sop": [568, 598], "sourc": 594, "space": 50, "spatialfiducialsstorag": 484, "spatialregistrationstorag": 485, "special": 65, "spectacleprescriptionreportstorag": 486, "sr": [278, 279, 280, 567], "stage": 598, "standard": 596, "start": 54, "step": [596, 602, 604], "stereometricrelationshipstorag": 487, "storag": 568, "store": 36, "structur": 605, "style": 53, "sub": 562, "subjectiverefractionmeasurementsstorag": 488, "suit": 594, "support": [44, 45, 597], "surfacescanmeshstorag": 489, "surfacescanpointcloudstorag": 490, "surfacesegmentationstorag": 491, "syntax": [44, 45, 568, 604], "tag": [42, 64, 281, 282, 283, 284], "tag_for_keyword": 127, "tag_in_except": 284, "test": [594, 600], "thi": [570, 573, 574], "third": [44, 601], "time": [5, 13, 19, 21, 592], "tm": 531, "tomotherapeuticradiationrecordstorag": 492, "tomotherapeuticradiationstorag": 493, "tractographyresultsstorag": 494, "transfer": [44, 45, 568, 604], "tree": 0, "tupletag": 283, "tutori": 599, "twelveleadecgwaveformstorag": 495, "type": [32, 53], "uid": [285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 568], "ultrasoundimagestorag": 497, "ultrasoundmultiframeimagestorag": 498, "uncompressedtransfersyntax": 499, "unicod": 22, "unpack_bit": [261, 276], "unsign": 602, "us": [0, 2, 23, 44, 48, 52, 600], "usag": [45, 69, 567, 604], "use_ds_decim": 101, "use_ds_numpi": 102, "use_is_numpi": 103, "user": [46, 54], "util": [58, 67, 73, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 566, 568], "valid": [36, 37, 38, 43], "validate_file_meta": 135, "valu": [62, 63, 65, 66, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555], "valuerep": [65, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534], "variablemodalitylutsoftcopypresentationstatestorag": 505, "version": [23, 43, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 600], "videoendoscopicimagestorag": 506, "videomicroscopicimagestorag": 507, "videophotographicimagestorag": 508, "view": [48, 596], "visualacuitymeasurementsstorag": 509, "vlendoscopicimagestorag": 500, "vlmicroscopicimagestorag": 501, "vlphotographicimagestorag": 502, "vlslidecoordinatesmicroscopicimagestorag": 503, "vlwholeslidemicroscopyimagestorag": 504, "voi": 50, "volumerenderingvolumetricpresentationstatestorag": 510, "vr": [32, 532], "warn": 87, "waveform": [3, 51, 556, 569, 606], "waveform_arrai": 51, "what": [23, 594, 595], "widefieldophthalmicphotography3dcoordinatesimagestorag": 511, "widefieldophthalmicphotographystereographicprojectionimagestorag": 512, "window": 50, "work": [14, 18, 49, 50, 51, 597], "write": [12, 52, 53, 74, 594, 596], "write_atvalu": 185, "write_da": 186, "write_data_el": 194, "write_dataset": 195, "write_dt": 187, "write_file_meta_info": 196, "write_numb": 198, "write_number_str": 197, "write_obvalu": 188, "write_owvalu": 189, "write_pn": 190, "write_sequ": 199, "write_sequence_item": 200, "write_str": 201, "write_text": 202, "write_tm": 191, "write_ui": 192, "write_un": 193, "xadefinedprocedureprotocolstorag": 513, "xaperformedprocedureprotocolstorag": 514, "xaxrfgrayscalesoftcopypresentationstatestorag": 515, "xray3dangiographicimagestorag": 516, "xray3dcraniofacialimagestorag": 517, "xrayangiographicimagestorag": 518, "xrayradiationdosesrstorag": 519, "xrayradiofluoroscopicimagestorag": 520, "your": [43, 594, 595]}})