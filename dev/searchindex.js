Search.setIndex({"docnames": ["auto_examples/dicomtree", "auto_examples/image_processing/index", "auto_examples/image_processing/plot_downsize_image", "auto_examples/image_processing/plot_waveforms", "auto_examples/image_processing/reslice", "auto_examples/image_processing/sg_execution_times", "auto_examples/index", "auto_examples/input_output/index", "auto_examples/input_output/plot_printing_dataset", "auto_examples/input_output/plot_read_dicom", "auto_examples/input_output/plot_read_dicom_directory", "auto_examples/input_output/plot_read_fileset", "auto_examples/input_output/plot_read_rtplan", "auto_examples/input_output/plot_write_dicom", "auto_examples/input_output/sg_execution_times", "auto_examples/memory_dataset", "auto_examples/metadata_processing/index", "auto_examples/metadata_processing/plot_add_dict_entries", "auto_examples/metadata_processing/plot_anonymize", "auto_examples/metadata_processing/plot_sequences", "auto_examples/metadata_processing/sg_execution_times", "auto_examples/plot_dicom_difference", "auto_examples/sg_execution_times", "auto_examples/show_charset_name", "faq/index", "guides/cli/cli_codify", "guides/cli/cli_dev", "guides/cli/cli_guide", "guides/cli/cli_intro", "guides/cli/cli_show", "guides/element_value_types", "guides/encoding/encoder_plugin_options", "guides/encoding/encoder_plugins", "guides/encoding/index", "guides/encoding/rle_lossless", "guides/glossary", "guides/index", "guides/writing_documentation", "index", "old/base_element", "old/best_practices", "old/getting_started", "old/image_data_compression", "old/image_data_handlers", "old/private_data_elements", "old/pydicom_user_guide", "old/python2_support", "old/ref_guide", "old/transition_to_pydicom1", "old/viewing_images", "old/working_with_overlays", "old/working_with_pixel_data", "old/working_with_waveforms", "old/writing_files", "reference/charset", "reference/config", "reference/data", "reference/datadict", "reference/dataset", "reference/dicomdir", "reference/elem", "reference/elem.dataelem", "reference/elem.multival", "reference/elem.sequence", "reference/elem.tag", "reference/elem.valuerep", "reference/elem.values", "reference/encaps", "reference/encoders", "reference/errors", "reference/fileio", "reference/fileio.base", "reference/fileio.read", "reference/fileio.util", "reference/fileio.write", "reference/fileset", "reference/generated/pydicom.charset.convert_encodings", "reference/generated/pydicom.charset.decode_bytes", "reference/generated/pydicom.charset.decode_element", "reference/generated/pydicom.charset.encode_string", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS", "reference/generated/pydicom.config.DS_decimal", "reference/generated/pydicom.config.DS_numpy", "reference/generated/pydicom.config.IGNORE", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR", "reference/generated/pydicom.config.RAISE", "reference/generated/pydicom.config.WARN", "reference/generated/pydicom.config.allow_DS_float", "reference/generated/pydicom.config.assume_implicit_vr_switch", "reference/generated/pydicom.config.convert_wrong_length_to_UN", "reference/generated/pydicom.config.data_element_callback", "reference/generated/pydicom.config.data_element_callback_kwargs", "reference/generated/pydicom.config.datetime_conversion", "reference/generated/pydicom.config.debug", "reference/generated/pydicom.config.enforce_valid_values", "reference/generated/pydicom.config.future_behavior", "reference/generated/pydicom.config.overlay_data_handlers", "reference/generated/pydicom.config.pixel_data_handlers", "reference/generated/pydicom.config.reset_data_element_callback", "reference/generated/pydicom.config.settings", "reference/generated/pydicom.config.show_file_meta", "reference/generated/pydicom.config.use_DS_decimal", "reference/generated/pydicom.config.use_DS_numpy", "reference/generated/pydicom.config.use_IS_numpy", "reference/generated/pydicom.data.get_charset_files", "reference/generated/pydicom.data.get_palette_files", "reference/generated/pydicom.data.get_testdata_file", "reference/generated/pydicom.data.get_testdata_files", "reference/generated/pydicom.datadict.add_dict_entries", "reference/generated/pydicom.datadict.add_dict_entry", "reference/generated/pydicom.datadict.add_private_dict_entries", "reference/generated/pydicom.datadict.add_private_dict_entry", "reference/generated/pydicom.datadict.dictionary_VM", "reference/generated/pydicom.datadict.dictionary_VR", "reference/generated/pydicom.datadict.dictionary_description", "reference/generated/pydicom.datadict.dictionary_has_tag", "reference/generated/pydicom.datadict.dictionary_is_retired", "reference/generated/pydicom.datadict.dictionary_keyword", "reference/generated/pydicom.datadict.get_entry", "reference/generated/pydicom.datadict.get_private_entry", "reference/generated/pydicom.datadict.keyword_for_tag", "reference/generated/pydicom.datadict.mask_match", "reference/generated/pydicom.datadict.private_dictionary_VM", "reference/generated/pydicom.datadict.private_dictionary_VR", "reference/generated/pydicom.datadict.private_dictionary_description", "reference/generated/pydicom.datadict.repeater_has_keyword", "reference/generated/pydicom.datadict.repeater_has_tag", "reference/generated/pydicom.datadict.tag_for_keyword", "reference/generated/pydicom.dataelem.DataElement", "reference/generated/pydicom.dataelem.DataElement_from_raw", "reference/generated/pydicom.dataelem.RawDataElement", "reference/generated/pydicom.dataset.Dataset", "reference/generated/pydicom.dataset.FileDataset", "reference/generated/pydicom.dataset.FileMetaDataset", "reference/generated/pydicom.dataset.PrivateBlock", "reference/generated/pydicom.dataset.validate_file_meta", "reference/generated/pydicom.dicomdir.DicomDir", "reference/generated/pydicom.encaps.decode_data_sequence", "reference/generated/pydicom.encaps.defragment_data", "reference/generated/pydicom.encaps.encapsulate", "reference/generated/pydicom.encaps.encapsulate_extended", "reference/generated/pydicom.encaps.fragment_frame", "reference/generated/pydicom.encaps.generate_pixel_data", "reference/generated/pydicom.encaps.generate_pixel_data_fragment", "reference/generated/pydicom.encaps.generate_pixel_data_frame", "reference/generated/pydicom.encaps.get_frame_offsets", "reference/generated/pydicom.encaps.itemize_fragment", "reference/generated/pydicom.encaps.itemize_frame", "reference/generated/pydicom.encaps.read_item", "reference/generated/pydicom.encoders.RLELosslessEncoder", "reference/generated/pydicom.encoders.base.Encoder", "reference/generated/pydicom.encoders.get_encoder", "reference/generated/pydicom.errors.InvalidDicomError", "reference/generated/pydicom.filebase.DicomBytesIO", "reference/generated/pydicom.filebase.DicomFile", "reference/generated/pydicom.filebase.DicomFileLike", "reference/generated/pydicom.filebase.DicomIO", "reference/generated/pydicom.filereader.data_element_generator", "reference/generated/pydicom.filereader.data_element_offset_to_value", "reference/generated/pydicom.filereader.dcmread", "reference/generated/pydicom.filereader.read_dataset", "reference/generated/pydicom.filereader.read_deferred_data_element", "reference/generated/pydicom.filereader.read_dicomdir", "reference/generated/pydicom.filereader.read_file_meta_info", "reference/generated/pydicom.filereader.read_partial", "reference/generated/pydicom.filereader.read_preamble", "reference/generated/pydicom.filereader.read_sequence", "reference/generated/pydicom.filereader.read_sequence_item", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS", "reference/generated/pydicom.fileset.FileInstance", "reference/generated/pydicom.fileset.FileSet", "reference/generated/pydicom.fileset.RecordNode", "reference/generated/pydicom.fileset.generate_filename", "reference/generated/pydicom.fileset.is_conformant_file_id", "reference/generated/pydicom.fileutil.absorb_delimiter_item", "reference/generated/pydicom.fileutil.find_bytes", "reference/generated/pydicom.fileutil.find_delimiter", "reference/generated/pydicom.fileutil.length_of_undefined_length", "reference/generated/pydicom.fileutil.read_undefined_length_value", "reference/generated/pydicom.filewriter.correct_ambiguous_vr", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element", "reference/generated/pydicom.filewriter.dcmwrite", "reference/generated/pydicom.filewriter.multi_string", "reference/generated/pydicom.filewriter.write_ATvalue", "reference/generated/pydicom.filewriter.write_DA", "reference/generated/pydicom.filewriter.write_DT", "reference/generated/pydicom.filewriter.write_OBvalue", "reference/generated/pydicom.filewriter.write_OWvalue", "reference/generated/pydicom.filewriter.write_PN", "reference/generated/pydicom.filewriter.write_TM", "reference/generated/pydicom.filewriter.write_UI", "reference/generated/pydicom.filewriter.write_UN", "reference/generated/pydicom.filewriter.write_data_element", "reference/generated/pydicom.filewriter.write_dataset", "reference/generated/pydicom.filewriter.write_file_meta_info", "reference/generated/pydicom.filewriter.write_number_string", "reference/generated/pydicom.filewriter.write_numbers", "reference/generated/pydicom.filewriter.write_sequence", "reference/generated/pydicom.filewriter.write_sequence_item", "reference/generated/pydicom.filewriter.write_string", "reference/generated/pydicom.filewriter.write_text", "reference/generated/pydicom.misc.is_dicom", "reference/generated/pydicom.misc.size_in_bytes", "reference/generated/pydicom.multival.MultiValue", "reference/generated/pydicom.overlays.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut", "reference/generated/pydicom.pixel_data_handlers.apply_rescale", "reference/generated/pydicom.pixel_data_handlers.apply_voi", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut", "reference/generated/pydicom.pixel_data_handlers.apply_windowing", "reference/generated/pydicom.pixel_data_handlers.convert_color_space", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler", "reference/generated/pydicom.pixel_data_handlers.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.pillow_handler", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler", "reference/generated/pydicom.pixel_data_handlers.rle_handler", "reference/generated/pydicom.pixel_data_handlers.util", "reference/generated/pydicom.sequence.Sequence", "reference/generated/pydicom.sequence.validate_dataset", "reference/generated/pydicom.tag.BaseTag", "reference/generated/pydicom.tag.Tag", "reference/generated/pydicom.tag.TupleTag", "reference/generated/pydicom.tag.tag_in_exception", "reference/generated/pydicom.uid.AcquisitionContextSRStorage", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage", "reference/generated/pydicom.uid.AllTransferSyntaxes", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage", "reference/generated/pydicom.uid.BasicTextSRStorage", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.BodyPositionWaveformStorage", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.CTImageStorage", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage", "reference/generated/pydicom.uid.ChestCADSRStorage", "reference/generated/pydicom.uid.ColonCADSRStorage", "reference/generated/pydicom.uid.ColorPaletteStorage", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.Comprehensive3DSRStorage", "reference/generated/pydicom.uid.ComprehensiveSRStorage", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage", "reference/generated/pydicom.uid.CornealTopographyMapStorage", "reference/generated/pydicom.uid.DICOS2DAITStorage", "reference/generated/pydicom.uid.DICOS3DAITStorage", "reference/generated/pydicom.uid.DICOSCTImageStorage", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.EddyCurrentImageStorage", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage", "reference/generated/pydicom.uid.EncapsulatedCDAStorage", "reference/generated/pydicom.uid.EncapsulatedMTLStorage", "reference/generated/pydicom.uid.EncapsulatedOBJStorage", "reference/generated/pydicom.uid.EncapsulatedPDFStorage", "reference/generated/pydicom.uid.EncapsulatedSTLStorage", "reference/generated/pydicom.uid.EnhancedCTImageStorage", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage", "reference/generated/pydicom.uid.EnhancedMRImageStorage", "reference/generated/pydicom.uid.EnhancedPETImageStorage", "reference/generated/pydicom.uid.EnhancedSRStorage", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage", "reference/generated/pydicom.uid.EnhancedXAImageStorage", "reference/generated/pydicom.uid.EnhancedXRFImageStorage", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.ExplicitVRBigEndian", "reference/generated/pydicom.uid.ExplicitVRLittleEndian", "reference/generated/pydicom.uid.ExtensibleSRStorage", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage", "reference/generated/pydicom.uid.GeneralECGWaveformStorage", "reference/generated/pydicom.uid.GenericImplantTemplateStorage", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.HEVCM10P51", "reference/generated/pydicom.uid.HEVCMP51", "reference/generated/pydicom.uid.HangingProtocolStorage", "reference/generated/pydicom.uid.HemodynamicWaveformStorage", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage", "reference/generated/pydicom.uid.ImplantationPlanSRStorage", "reference/generated/pydicom.uid.ImplicitVRLittleEndian", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pydicom.uid.JPEG2000", "reference/generated/pydicom.uid.JPEG2000Lossless", "reference/generated/pydicom.uid.JPEG2000MC", "reference/generated/pydicom.uid.JPEG2000MCLossless", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes", "reference/generated/pydicom.uid.JPEGBaseline8Bit", "reference/generated/pydicom.uid.JPEGExtended12Bit", "reference/generated/pydicom.uid.JPEGLSLossless", "reference/generated/pydicom.uid.JPEGLSNearLossless", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes", "reference/generated/pydicom.uid.JPEGLosslessP14", "reference/generated/pydicom.uid.JPEGLosslessSV1", "reference/generated/pydicom.uid.JPEGTransferSyntaxes", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pydicom.uid.LensometryMeasurementsStorage", "reference/generated/pydicom.uid.MPEG2MPHL", "reference/generated/pydicom.uid.MPEG2MPML", "reference/generated/pydicom.uid.MPEG4HP41", "reference/generated/pydicom.uid.MPEG4HP41BD", "reference/generated/pydicom.uid.MPEG4HP422D", "reference/generated/pydicom.uid.MPEG4HP423D", "reference/generated/pydicom.uid.MPEG4HP42STEREO", "reference/generated/pydicom.uid.MPEGTransferSyntaxes", "reference/generated/pydicom.uid.MRImageStorage", "reference/generated/pydicom.uid.MRSpectroscopyStorage", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pydicom.uid.MammographyCADSRStorage", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.NuclearMedicineImageStorage", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID", "reference/generated/pydicom.uid.ParametricMapStorage", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage", "reference/generated/pydicom.uid.ProcedureLogStorage", "reference/generated/pydicom.uid.ProtocolApprovalStorage", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.RE_VALID_UID", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX", "reference/generated/pydicom.uid.RLELossless", "reference/generated/pydicom.uid.RLETransferSyntaxes", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage", "reference/generated/pydicom.uid.RTDoseStorage", "reference/generated/pydicom.uid.RTImageStorage", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTIonPlanStorage", "reference/generated/pydicom.uid.RTPhysicianIntentStorage", "reference/generated/pydicom.uid.RTPlanStorage", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTRadiationSetStorage", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage", "reference/generated/pydicom.uid.RTStructureSetStorage", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pydicom.uid.RawDataStorage", "reference/generated/pydicom.uid.RealWorldValueMappingStorage", "reference/generated/pydicom.uid.RespiratoryWaveformStorage", "reference/generated/pydicom.uid.RoboticArmRadiationStorage", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage", "reference/generated/pydicom.uid.SegmentationStorage", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SpatialFiducialsStorage", "reference/generated/pydicom.uid.SpatialRegistrationStorage", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage", "reference/generated/pydicom.uid.StereometricRelationshipStorage", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage", "reference/generated/pydicom.uid.SurfaceScanMeshStorage", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage", "reference/generated/pydicom.uid.SurfaceSegmentationStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage", "reference/generated/pydicom.uid.TractographyResultsStorage", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage", "reference/generated/pydicom.uid.UID", "reference/generated/pydicom.uid.UltrasoundImageStorage", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes", "reference/generated/pydicom.uid.VLEndoscopicImageStorage", "reference/generated/pydicom.uid.VLMicroscopicImageStorage", "reference/generated/pydicom.uid.VLPhotographicImageStorage", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage", "reference/generated/pydicom.uid.VideoPhotographicImageStorage", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage", "reference/generated/pydicom.uid.XRayAngiographicImageStorage", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage", "reference/generated/pydicom.uid.generate_uid", "reference/generated/pydicom.valuerep.DA", "reference/generated/pydicom.valuerep.DS", "reference/generated/pydicom.valuerep.DSdecimal", "reference/generated/pydicom.valuerep.DSfloat", "reference/generated/pydicom.valuerep.DT", "reference/generated/pydicom.valuerep.IS", "reference/generated/pydicom.valuerep.ISfloat", "reference/generated/pydicom.valuerep.MultiString", "reference/generated/pydicom.valuerep.PersonName", "reference/generated/pydicom.valuerep.PersonNameUnicode", "reference/generated/pydicom.valuerep.TM", "reference/generated/pydicom.valuerep.VR", "reference/generated/pydicom.valuerep.format_number_as_ds", "reference/generated/pydicom.valuerep.is_valid_ds", "reference/generated/pydicom.values.convert_AE_string", "reference/generated/pydicom.values.convert_ATvalue", "reference/generated/pydicom.values.convert_DA_string", "reference/generated/pydicom.values.convert_DS_string", "reference/generated/pydicom.values.convert_DT_string", "reference/generated/pydicom.values.convert_IS_string", "reference/generated/pydicom.values.convert_OBvalue", "reference/generated/pydicom.values.convert_OWvalue", "reference/generated/pydicom.values.convert_PN", "reference/generated/pydicom.values.convert_SQ", "reference/generated/pydicom.values.convert_TM_string", "reference/generated/pydicom.values.convert_UI", "reference/generated/pydicom.values.convert_UN", "reference/generated/pydicom.values.convert_UR_string", "reference/generated/pydicom.values.convert_numbers", "reference/generated/pydicom.values.convert_single_string", "reference/generated/pydicom.values.convert_string", "reference/generated/pydicom.values.convert_tag", "reference/generated/pydicom.values.convert_text", "reference/generated/pydicom.values.convert_value", "reference/generated/pydicom.waveforms.numpy_handler", "reference/handlers", "reference/handlers.overlay_data", "reference/handlers.pixel_data", "reference/handlers.waveform_data", "reference/index", "reference/misc", "reference/uid", "release_notes/index", "release_notes/v0.9.2", "release_notes/v0.9.3", "release_notes/v0.9.4", "release_notes/v0.9.5", "release_notes/v0.9.6", "release_notes/v0.9.7", "release_notes/v0.9.8", "release_notes/v0.9.9", "release_notes/v1.0.0", "release_notes/v1.1.0", "release_notes/v1.2.0", "release_notes/v1.3.0", "release_notes/v1.4.0", "release_notes/v1.4.1", "release_notes/v2.0.0", "release_notes/v2.1.0", "release_notes/v2.1.1", "release_notes/v2.2.0", "release_notes/v2.3.0", "release_notes/v2.4.0", "release_notes/v3.0.0", "tutorials/contributing", "tutorials/contributing_code", "tutorials/contributing_docs", "tutorials/dataset_basics", "tutorials/dicom_json", "tutorials/filesets", "tutorials/index", "tutorials/installation", "tutorials/pixel_data/compressing", "tutorials/sr_basics", "tutorials/virtualenvs", "tutorials/waveforms"], "filenames": ["auto_examples/dicomtree.rst", "auto_examples/image_processing/index.rst", "auto_examples/image_processing/plot_downsize_image.rst", "auto_examples/image_processing/plot_waveforms.rst", "auto_examples/image_processing/reslice.rst", "auto_examples/image_processing/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/input_output/index.rst", "auto_examples/input_output/plot_printing_dataset.rst", "auto_examples/input_output/plot_read_dicom.rst", "auto_examples/input_output/plot_read_dicom_directory.rst", "auto_examples/input_output/plot_read_fileset.rst", "auto_examples/input_output/plot_read_rtplan.rst", "auto_examples/input_output/plot_write_dicom.rst", "auto_examples/input_output/sg_execution_times.rst", "auto_examples/memory_dataset.rst", "auto_examples/metadata_processing/index.rst", "auto_examples/metadata_processing/plot_add_dict_entries.rst", "auto_examples/metadata_processing/plot_anonymize.rst", "auto_examples/metadata_processing/plot_sequences.rst", "auto_examples/metadata_processing/sg_execution_times.rst", "auto_examples/plot_dicom_difference.rst", "auto_examples/sg_execution_times.rst", "auto_examples/show_charset_name.rst", "faq/index.rst", "guides/cli/cli_codify.rst", "guides/cli/cli_dev.rst", "guides/cli/cli_guide.rst", "guides/cli/cli_intro.rst", "guides/cli/cli_show.rst", "guides/element_value_types.rst", "guides/encoding/encoder_plugin_options.rst", "guides/encoding/encoder_plugins.rst", "guides/encoding/index.rst", "guides/encoding/rle_lossless.rst", "guides/glossary.rst", "guides/index.rst", "guides/writing_documentation.rst", "index.rst", "old/base_element.rst", "old/best_practices.rst", "old/getting_started.rst", "old/image_data_compression.rst", "old/image_data_handlers.rst", "old/private_data_elements.rst", "old/pydicom_user_guide.rst", "old/python2_support.rst", "old/ref_guide.rst", "old/transition_to_pydicom1.rst", "old/viewing_images.rst", "old/working_with_overlays.rst", "old/working_with_pixel_data.rst", "old/working_with_waveforms.rst", "old/writing_files.rst", "reference/charset.rst", "reference/config.rst", "reference/data.rst", "reference/datadict.rst", "reference/dataset.rst", "reference/dicomdir.rst", "reference/elem.rst", "reference/elem.dataelem.rst", "reference/elem.multival.rst", "reference/elem.sequence.rst", "reference/elem.tag.rst", "reference/elem.valuerep.rst", "reference/elem.values.rst", "reference/encaps.rst", "reference/encoders.rst", "reference/errors.rst", "reference/fileio.rst", "reference/fileio.base.rst", "reference/fileio.read.rst", "reference/fileio.util.rst", "reference/fileio.write.rst", "reference/fileset.rst", "reference/generated/pydicom.charset.convert_encodings.rst", "reference/generated/pydicom.charset.decode_bytes.rst", "reference/generated/pydicom.charset.decode_element.rst", "reference/generated/pydicom.charset.encode_string.rst", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS.rst", "reference/generated/pydicom.config.DS_decimal.rst", "reference/generated/pydicom.config.DS_numpy.rst", "reference/generated/pydicom.config.IGNORE.rst", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR.rst", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR.rst", "reference/generated/pydicom.config.RAISE.rst", "reference/generated/pydicom.config.WARN.rst", "reference/generated/pydicom.config.allow_DS_float.rst", "reference/generated/pydicom.config.assume_implicit_vr_switch.rst", "reference/generated/pydicom.config.convert_wrong_length_to_UN.rst", "reference/generated/pydicom.config.data_element_callback.rst", "reference/generated/pydicom.config.data_element_callback_kwargs.rst", "reference/generated/pydicom.config.datetime_conversion.rst", "reference/generated/pydicom.config.debug.rst", "reference/generated/pydicom.config.enforce_valid_values.rst", "reference/generated/pydicom.config.future_behavior.rst", "reference/generated/pydicom.config.overlay_data_handlers.rst", "reference/generated/pydicom.config.pixel_data_handlers.rst", "reference/generated/pydicom.config.reset_data_element_callback.rst", "reference/generated/pydicom.config.settings.rst", "reference/generated/pydicom.config.show_file_meta.rst", "reference/generated/pydicom.config.use_DS_decimal.rst", "reference/generated/pydicom.config.use_DS_numpy.rst", "reference/generated/pydicom.config.use_IS_numpy.rst", "reference/generated/pydicom.data.get_charset_files.rst", "reference/generated/pydicom.data.get_palette_files.rst", "reference/generated/pydicom.data.get_testdata_file.rst", "reference/generated/pydicom.data.get_testdata_files.rst", "reference/generated/pydicom.datadict.add_dict_entries.rst", "reference/generated/pydicom.datadict.add_dict_entry.rst", "reference/generated/pydicom.datadict.add_private_dict_entries.rst", "reference/generated/pydicom.datadict.add_private_dict_entry.rst", "reference/generated/pydicom.datadict.dictionary_VM.rst", "reference/generated/pydicom.datadict.dictionary_VR.rst", "reference/generated/pydicom.datadict.dictionary_description.rst", "reference/generated/pydicom.datadict.dictionary_has_tag.rst", "reference/generated/pydicom.datadict.dictionary_is_retired.rst", "reference/generated/pydicom.datadict.dictionary_keyword.rst", "reference/generated/pydicom.datadict.get_entry.rst", "reference/generated/pydicom.datadict.get_private_entry.rst", "reference/generated/pydicom.datadict.keyword_for_tag.rst", "reference/generated/pydicom.datadict.mask_match.rst", "reference/generated/pydicom.datadict.private_dictionary_VM.rst", "reference/generated/pydicom.datadict.private_dictionary_VR.rst", "reference/generated/pydicom.datadict.private_dictionary_description.rst", "reference/generated/pydicom.datadict.repeater_has_keyword.rst", "reference/generated/pydicom.datadict.repeater_has_tag.rst", "reference/generated/pydicom.datadict.tag_for_keyword.rst", "reference/generated/pydicom.dataelem.DataElement.rst", "reference/generated/pydicom.dataelem.DataElement_from_raw.rst", "reference/generated/pydicom.dataelem.RawDataElement.rst", "reference/generated/pydicom.dataset.Dataset.rst", "reference/generated/pydicom.dataset.FileDataset.rst", "reference/generated/pydicom.dataset.FileMetaDataset.rst", "reference/generated/pydicom.dataset.PrivateBlock.rst", "reference/generated/pydicom.dataset.validate_file_meta.rst", "reference/generated/pydicom.dicomdir.DicomDir.rst", "reference/generated/pydicom.encaps.decode_data_sequence.rst", "reference/generated/pydicom.encaps.defragment_data.rst", "reference/generated/pydicom.encaps.encapsulate.rst", "reference/generated/pydicom.encaps.encapsulate_extended.rst", "reference/generated/pydicom.encaps.fragment_frame.rst", "reference/generated/pydicom.encaps.generate_pixel_data.rst", "reference/generated/pydicom.encaps.generate_pixel_data_fragment.rst", "reference/generated/pydicom.encaps.generate_pixel_data_frame.rst", "reference/generated/pydicom.encaps.get_frame_offsets.rst", "reference/generated/pydicom.encaps.itemize_fragment.rst", "reference/generated/pydicom.encaps.itemize_frame.rst", "reference/generated/pydicom.encaps.read_item.rst", "reference/generated/pydicom.encoders.RLELosslessEncoder.rst", "reference/generated/pydicom.encoders.base.Encoder.rst", "reference/generated/pydicom.encoders.get_encoder.rst", "reference/generated/pydicom.errors.InvalidDicomError.rst", "reference/generated/pydicom.filebase.DicomBytesIO.rst", "reference/generated/pydicom.filebase.DicomFile.rst", "reference/generated/pydicom.filebase.DicomFileLike.rst", "reference/generated/pydicom.filebase.DicomIO.rst", "reference/generated/pydicom.filereader.data_element_generator.rst", "reference/generated/pydicom.filereader.data_element_offset_to_value.rst", "reference/generated/pydicom.filereader.dcmread.rst", "reference/generated/pydicom.filereader.read_dataset.rst", "reference/generated/pydicom.filereader.read_deferred_data_element.rst", "reference/generated/pydicom.filereader.read_dicomdir.rst", "reference/generated/pydicom.filereader.read_file_meta_info.rst", "reference/generated/pydicom.filereader.read_partial.rst", "reference/generated/pydicom.filereader.read_preamble.rst", "reference/generated/pydicom.filereader.read_sequence.rst", "reference/generated/pydicom.filereader.read_sequence_item.rst", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS.rst", "reference/generated/pydicom.fileset.FileInstance.rst", "reference/generated/pydicom.fileset.FileSet.rst", "reference/generated/pydicom.fileset.RecordNode.rst", "reference/generated/pydicom.fileset.generate_filename.rst", "reference/generated/pydicom.fileset.is_conformant_file_id.rst", "reference/generated/pydicom.fileutil.absorb_delimiter_item.rst", "reference/generated/pydicom.fileutil.find_bytes.rst", "reference/generated/pydicom.fileutil.find_delimiter.rst", "reference/generated/pydicom.fileutil.length_of_undefined_length.rst", "reference/generated/pydicom.fileutil.read_undefined_length_value.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element.rst", "reference/generated/pydicom.filewriter.dcmwrite.rst", "reference/generated/pydicom.filewriter.multi_string.rst", "reference/generated/pydicom.filewriter.write_ATvalue.rst", "reference/generated/pydicom.filewriter.write_DA.rst", "reference/generated/pydicom.filewriter.write_DT.rst", "reference/generated/pydicom.filewriter.write_OBvalue.rst", "reference/generated/pydicom.filewriter.write_OWvalue.rst", "reference/generated/pydicom.filewriter.write_PN.rst", "reference/generated/pydicom.filewriter.write_TM.rst", "reference/generated/pydicom.filewriter.write_UI.rst", "reference/generated/pydicom.filewriter.write_UN.rst", "reference/generated/pydicom.filewriter.write_data_element.rst", "reference/generated/pydicom.filewriter.write_dataset.rst", "reference/generated/pydicom.filewriter.write_file_meta_info.rst", "reference/generated/pydicom.filewriter.write_number_string.rst", "reference/generated/pydicom.filewriter.write_numbers.rst", "reference/generated/pydicom.filewriter.write_sequence.rst", "reference/generated/pydicom.filewriter.write_sequence_item.rst", "reference/generated/pydicom.filewriter.write_string.rst", "reference/generated/pydicom.filewriter.write_text.rst", "reference/generated/pydicom.misc.is_dicom.rst", "reference/generated/pydicom.misc.size_in_bytes.rst", "reference/generated/pydicom.multival.MultiValue.rst", "reference/generated/pydicom.overlays.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_rescale.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_windowing.rst", "reference/generated/pydicom.pixel_data_handlers.convert_color_space.rst", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler.rst", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler.rst", "reference/generated/pydicom.pixel_data_handlers.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pillow_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler.rst", "reference/generated/pydicom.pixel_data_handlers.rle_handler.rst", "reference/generated/pydicom.pixel_data_handlers.util.rst", "reference/generated/pydicom.sequence.Sequence.rst", "reference/generated/pydicom.sequence.validate_dataset.rst", "reference/generated/pydicom.tag.BaseTag.rst", "reference/generated/pydicom.tag.Tag.rst", "reference/generated/pydicom.tag.TupleTag.rst", "reference/generated/pydicom.tag.tag_in_exception.rst", "reference/generated/pydicom.uid.AcquisitionContextSRStorage.rst", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pydicom.uid.AllTransferSyntaxes.rst", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage.rst", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage.rst", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage.rst", "reference/generated/pydicom.uid.BasicTextSRStorage.rst", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.BodyPositionWaveformStorage.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CTImageStorage.rst", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pydicom.uid.ChestCADSRStorage.rst", "reference/generated/pydicom.uid.ColonCADSRStorage.rst", "reference/generated/pydicom.uid.ColorPaletteStorage.rst", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.Comprehensive3DSRStorage.rst", "reference/generated/pydicom.uid.ComprehensiveSRStorage.rst", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage.rst", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage.rst", "reference/generated/pydicom.uid.CornealTopographyMapStorage.rst", "reference/generated/pydicom.uid.DICOS2DAITStorage.rst", "reference/generated/pydicom.uid.DICOS3DAITStorage.rst", "reference/generated/pydicom.uid.DICOSCTImageStorage.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage.rst", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage.rst", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.EddyCurrentImageStorage.rst", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage.rst", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage.rst", "reference/generated/pydicom.uid.EncapsulatedCDAStorage.rst", "reference/generated/pydicom.uid.EncapsulatedMTLStorage.rst", "reference/generated/pydicom.uid.EncapsulatedOBJStorage.rst", "reference/generated/pydicom.uid.EncapsulatedPDFStorage.rst", "reference/generated/pydicom.uid.EncapsulatedSTLStorage.rst", "reference/generated/pydicom.uid.EnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.EnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.EnhancedSRStorage.rst", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage.rst", "reference/generated/pydicom.uid.EnhancedXAImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRFImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.ExplicitVRBigEndian.rst", "reference/generated/pydicom.uid.ExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.ExtensibleSRStorage.rst", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralECGWaveformStorage.rst", "reference/generated/pydicom.uid.GenericImplantTemplateStorage.rst", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.HEVCM10P51.rst", "reference/generated/pydicom.uid.HEVCMP51.rst", "reference/generated/pydicom.uid.HangingProtocolStorage.rst", "reference/generated/pydicom.uid.HemodynamicWaveformStorage.rst", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage.rst", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage.rst", "reference/generated/pydicom.uid.ImplantationPlanSRStorage.rst", "reference/generated/pydicom.uid.ImplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pydicom.uid.JPEG2000.rst", "reference/generated/pydicom.uid.JPEG2000Lossless.rst", "reference/generated/pydicom.uid.JPEG2000MC.rst", "reference/generated/pydicom.uid.JPEG2000MCLossless.rst", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGBaseline8Bit.rst", "reference/generated/pydicom.uid.JPEGExtended12Bit.rst", "reference/generated/pydicom.uid.JPEGLSLossless.rst", "reference/generated/pydicom.uid.JPEGLSNearLossless.rst", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGLosslessP14.rst", "reference/generated/pydicom.uid.JPEGLosslessSV1.rst", "reference/generated/pydicom.uid.JPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.LensometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.MPEG2MPHL.rst", "reference/generated/pydicom.uid.MPEG2MPML.rst", "reference/generated/pydicom.uid.MPEG4HP41.rst", "reference/generated/pydicom.uid.MPEG4HP41BD.rst", "reference/generated/pydicom.uid.MPEG4HP422D.rst", "reference/generated/pydicom.uid.MPEG4HP423D.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREO.rst", "reference/generated/pydicom.uid.MPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.MRImageStorage.rst", "reference/generated/pydicom.uid.MRSpectroscopyStorage.rst", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pydicom.uid.MammographyCADSRStorage.rst", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage.rst", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.NuclearMedicineImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage.rst", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID.rst", "reference/generated/pydicom.uid.ParametricMapStorage.rst", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage.rst", "reference/generated/pydicom.uid.ProcedureLogStorage.rst", "reference/generated/pydicom.uid.ProtocolApprovalStorage.rst", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.RE_VALID_UID.rst", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX.rst", "reference/generated/pydicom.uid.RLELossless.rst", "reference/generated/pydicom.uid.RLETransferSyntaxes.rst", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTDoseStorage.rst", "reference/generated/pydicom.uid.RTImageStorage.rst", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTIonPlanStorage.rst", "reference/generated/pydicom.uid.RTPhysicianIntentStorage.rst", "reference/generated/pydicom.uid.RTPlanStorage.rst", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage.rst", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetStorage.rst", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage.rst", "reference/generated/pydicom.uid.RTStructureSetStorage.rst", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage.rst", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.RawDataStorage.rst", "reference/generated/pydicom.uid.RealWorldValueMappingStorage.rst", "reference/generated/pydicom.uid.RespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.RoboticArmRadiationStorage.rst", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.SegmentationStorage.rst", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SpatialFiducialsStorage.rst", "reference/generated/pydicom.uid.SpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage.rst", "reference/generated/pydicom.uid.StereometricRelationshipStorage.rst", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.SurfaceScanMeshStorage.rst", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage.rst", "reference/generated/pydicom.uid.SurfaceSegmentationStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage.rst", "reference/generated/pydicom.uid.TractographyResultsStorage.rst", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage.rst", "reference/generated/pydicom.uid.UID.rst", "reference/generated/pydicom.uid.UltrasoundImageStorage.rst", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes.rst", "reference/generated/pydicom.uid.VLEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VLMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage.rst", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage.rst", "reference/generated/pydicom.uid.XRayAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pydicom.uid.generate_uid.rst", "reference/generated/pydicom.valuerep.DA.rst", "reference/generated/pydicom.valuerep.DS.rst", "reference/generated/pydicom.valuerep.DSdecimal.rst", "reference/generated/pydicom.valuerep.DSfloat.rst", "reference/generated/pydicom.valuerep.DT.rst", "reference/generated/pydicom.valuerep.IS.rst", "reference/generated/pydicom.valuerep.ISfloat.rst", "reference/generated/pydicom.valuerep.MultiString.rst", "reference/generated/pydicom.valuerep.PersonName.rst", "reference/generated/pydicom.valuerep.PersonNameUnicode.rst", "reference/generated/pydicom.valuerep.TM.rst", "reference/generated/pydicom.valuerep.VR.rst", "reference/generated/pydicom.valuerep.format_number_as_ds.rst", "reference/generated/pydicom.valuerep.is_valid_ds.rst", "reference/generated/pydicom.values.convert_AE_string.rst", "reference/generated/pydicom.values.convert_ATvalue.rst", "reference/generated/pydicom.values.convert_DA_string.rst", "reference/generated/pydicom.values.convert_DS_string.rst", "reference/generated/pydicom.values.convert_DT_string.rst", "reference/generated/pydicom.values.convert_IS_string.rst", "reference/generated/pydicom.values.convert_OBvalue.rst", "reference/generated/pydicom.values.convert_OWvalue.rst", "reference/generated/pydicom.values.convert_PN.rst", "reference/generated/pydicom.values.convert_SQ.rst", "reference/generated/pydicom.values.convert_TM_string.rst", "reference/generated/pydicom.values.convert_UI.rst", "reference/generated/pydicom.values.convert_UN.rst", "reference/generated/pydicom.values.convert_UR_string.rst", "reference/generated/pydicom.values.convert_numbers.rst", "reference/generated/pydicom.values.convert_single_string.rst", "reference/generated/pydicom.values.convert_string.rst", "reference/generated/pydicom.values.convert_tag.rst", "reference/generated/pydicom.values.convert_text.rst", "reference/generated/pydicom.values.convert_value.rst", "reference/generated/pydicom.waveforms.numpy_handler.rst", "reference/handlers.rst", "reference/handlers.overlay_data.rst", "reference/handlers.pixel_data.rst", "reference/handlers.waveform_data.rst", "reference/index.rst", "reference/misc.rst", "reference/uid.rst", "release_notes/index.rst", "release_notes/v0.9.2.rst", "release_notes/v0.9.3.rst", "release_notes/v0.9.4.rst", "release_notes/v0.9.5.rst", "release_notes/v0.9.6.rst", "release_notes/v0.9.7.rst", "release_notes/v0.9.8.rst", "release_notes/v0.9.9.rst", "release_notes/v1.0.0.rst", "release_notes/v1.1.0.rst", "release_notes/v1.2.0.rst", "release_notes/v1.3.0.rst", "release_notes/v1.4.0.rst", "release_notes/v1.4.1.rst", "release_notes/v2.0.0.rst", "release_notes/v2.1.0.rst", "release_notes/v2.1.1.rst", "release_notes/v2.2.0.rst", "release_notes/v2.3.0.rst", "release_notes/v2.4.0.rst", "release_notes/v3.0.0.rst", "tutorials/contributing.rst", "tutorials/contributing_code.rst", "tutorials/contributing_docs.rst", "tutorials/dataset_basics.rst", "tutorials/dicom_json.rst", "tutorials/filesets.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/pixel_data/compressing.rst", "tutorials/sr_basics.rst", "tutorials/virtualenvs.rst", "tutorials/waveforms.rst"], "titles": ["Show a dicom file using hierarchical tree", "Image processing", "Downsize MRI image using pydicom", "Decode and plot Waveform Data", "Load CT slices and plot axial, sagittal and coronal images", "Computation times", "General examples", "Input-output", "Format the output of the data set printing", "Read a Dataset and plot Pixel Data", "Read a DICOMDIR dataset", "Read a DICOM File-set", "Read RTPLAN DICOM and list information", "Write DICOM data", "Computation times", "Show working with memory-based dataset", "Metadata processing", "Add dictionary items in the standard DICOM dictionary", "Anonymize DICOM data", "Working with sequences", "Computation times", "Analyse differences between DICOM files", "Computation times", "Display unicode person names", "Frequently asked questions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">codify</span></code> command", "Extending the CLI", "Command-line Interface Guide", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">show</span></code> command", "Element VRs and Python types", "Encoder Plugins Options", "Pixel Data Encoder Plugins", "Pixel Data Encoding", "RLE Lossless Encoding", "Glossary", "Guides", "Writing documentation", "pydicom documentation", "Core elements in pydicom", "Best Practices", "Introduction to pydicom", "Compressing <em>Pixel Data</em>", "Handling of compressed pixel data", "Private Data Elements", "pydicom User Guide", "Python 2 Support", "Reading and writing DICOM files", "Transition to pydicom 1.x", "Viewing Images", "Working with Overlay Data", "Working with Pixel Data", "Working with Waveform Data", "Writing DICOM Files", "Character Encoding and Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.charset</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.config</span></code>)", "Getting Included Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.data</span></code>)", "Data Dictionary Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.datadict</span></code>)", "Representation of Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataset</span></code>)", "DICOMDIR (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dicomdir</span></code>)", "Representation of Data Elements", "Data Elements (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataelem</span></code>)", "Element Multi-value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.multival</span></code>)", "Sequence Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sequence</span></code>)", "Element Tags (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.tag</span></code>)", "Specialized Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.valuerep</span></code>)", "Element Value Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.values</span></code>)", "Bulk Data Encapsulation Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encaps</span></code>)", "Pixel Data Encoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encoders</span></code>)", "Exceptions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.errors</span></code>)", "Dataset IO", "IO Base Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filebase</span></code>)", "Dataset Reading (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filereader</span></code>)", "IO Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileutil</span></code>)", "Dataset Writing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filewriter</span></code>)", "DICOM File-sets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileset</span></code>)", "pydicom.charset.convert_encodings", "pydicom.charset.decode_bytes", "pydicom.charset.decode_element", "pydicom.charset.encode_string", "pydicom.config.APPLY_J2K_CORRECTIONS", "pydicom.config.DS_decimal", "pydicom.config.DS_numpy", "pydicom.config.IGNORE", "pydicom.config.INVALID_KEYWORD_BEHAVIOR", "pydicom.config.INVALID_KEY_BEHAVIOR", "pydicom.config.RAISE", "pydicom.config.WARN", "pydicom.config.allow_DS_float", "pydicom.config.assume_implicit_vr_switch", "pydicom.config.convert_wrong_length_to_UN", "pydicom.config.data_element_callback", "pydicom.config.data_element_callback_kwargs", "pydicom.config.datetime_conversion", "pydicom.config.debug", "pydicom.config.enforce_valid_values", "pydicom.config.future_behavior", "pydicom.config.overlay_data_handlers", "pydicom.config.pixel_data_handlers", "pydicom.config.reset_data_element_callback", "pydicom.config.settings", "pydicom.config.show_file_meta", "pydicom.config.use_DS_decimal", "pydicom.config.use_DS_numpy", "pydicom.config.use_IS_numpy", "pydicom.data.get_charset_files", "pydicom.data.get_palette_files", "pydicom.data.get_testdata_file", "pydicom.data.get_testdata_files", "pydicom.datadict.add_dict_entries", "pydicom.datadict.add_dict_entry", "pydicom.datadict.add_private_dict_entries", "pydicom.datadict.add_private_dict_entry", "pydicom.datadict.dictionary_VM", "pydicom.datadict.dictionary_VR", "pydicom.datadict.dictionary_description", "pydicom.datadict.dictionary_has_tag", "pydicom.datadict.dictionary_is_retired", "pydicom.datadict.dictionary_keyword", "pydicom.datadict.get_entry", "pydicom.datadict.get_private_entry", "pydicom.datadict.keyword_for_tag", "pydicom.datadict.mask_match", "pydicom.datadict.private_dictionary_VM", "pydicom.datadict.private_dictionary_VR", "pydicom.datadict.private_dictionary_description", "pydicom.datadict.repeater_has_keyword", "pydicom.datadict.repeater_has_tag", "pydicom.datadict.tag_for_keyword", "pydicom.dataelem.DataElement", "pydicom.dataelem.DataElement_from_raw", "pydicom.dataelem.RawDataElement", "pydicom.dataset.Dataset", "pydicom.dataset.FileDataset", "pydicom.dataset.FileMetaDataset", "pydicom.dataset.PrivateBlock", "pydicom.dataset.validate_file_meta", "pydicom.dicomdir.DicomDir", "pydicom.encaps.decode_data_sequence", "pydicom.encaps.defragment_data", "pydicom.encaps.encapsulate", "pydicom.encaps.encapsulate_extended", "pydicom.encaps.fragment_frame", "pydicom.encaps.generate_pixel_data", "pydicom.encaps.generate_pixel_data_fragment", "pydicom.encaps.generate_pixel_data_frame", "pydicom.encaps.get_frame_offsets", "pydicom.encaps.itemize_fragment", "pydicom.encaps.itemize_frame", "pydicom.encaps.read_item", "pydicom.encoders.RLELosslessEncoder", "pydicom.encoders.base.Encoder", "pydicom.encoders.get_encoder", "pydicom.errors.InvalidDicomError", "pydicom.filebase.DicomBytesIO", "pydicom.filebase.DicomFile", "pydicom.filebase.DicomFileLike", "pydicom.filebase.DicomIO", "pydicom.filereader.data_element_generator", "pydicom.filereader.data_element_offset_to_value", "pydicom.filereader.dcmread", "pydicom.filereader.read_dataset", "pydicom.filereader.read_deferred_data_element", "pydicom.filereader.read_dicomdir", "pydicom.filereader.read_file_meta_info", "pydicom.filereader.read_partial", "pydicom.filereader.read_preamble", "pydicom.filereader.read_sequence", "pydicom.filereader.read_sequence_item", "pydicom.fileset.DIRECTORY_RECORDERS", "pydicom.fileset.FileInstance", "pydicom.fileset.FileSet", "pydicom.fileset.RecordNode", "pydicom.fileset.generate_filename", "pydicom.fileset.is_conformant_file_id", "pydicom.fileutil.absorb_delimiter_item", "pydicom.fileutil.find_bytes", "pydicom.fileutil.find_delimiter", "pydicom.fileutil.length_of_undefined_length", "pydicom.fileutil.read_undefined_length_value", "pydicom.filewriter.correct_ambiguous_vr", "pydicom.filewriter.correct_ambiguous_vr_element", "pydicom.filewriter.dcmwrite", "pydicom.filewriter.multi_string", "pydicom.filewriter.write_ATvalue", "pydicom.filewriter.write_DA", "pydicom.filewriter.write_DT", "pydicom.filewriter.write_OBvalue", "pydicom.filewriter.write_OWvalue", "pydicom.filewriter.write_PN", "pydicom.filewriter.write_TM", "pydicom.filewriter.write_UI", "pydicom.filewriter.write_UN", "pydicom.filewriter.write_data_element", "pydicom.filewriter.write_dataset", "pydicom.filewriter.write_file_meta_info", "pydicom.filewriter.write_number_string", "pydicom.filewriter.write_numbers", "pydicom.filewriter.write_sequence", "pydicom.filewriter.write_sequence_item", "pydicom.filewriter.write_string", "pydicom.filewriter.write_text", "pydicom.misc.is_dicom", "pydicom.misc.size_in_bytes", "pydicom.multival.MultiValue", "pydicom.overlays.numpy_handler", "pydicom.pixel_data_handlers.apply_color_lut", "pydicom.pixel_data_handlers.apply_modality_lut", "pydicom.pixel_data_handlers.apply_rescale", "pydicom.pixel_data_handlers.apply_voi", "pydicom.pixel_data_handlers.apply_voi_lut", "pydicom.pixel_data_handlers.apply_windowing", "pydicom.pixel_data_handlers.convert_color_space", "pydicom.pixel_data_handlers.gdcm_handler", "pydicom.pixel_data_handlers.jpeg_ls_handler", "pydicom.pixel_data_handlers.numpy_handler", "pydicom.pixel_data_handlers.pillow_handler", "pydicom.pixel_data_handlers.pylibjpeg_handler", "pydicom.pixel_data_handlers.rle_handler", "pydicom.pixel_data_handlers.util", "pydicom.sequence.Sequence", "pydicom.sequence.validate_dataset", "pydicom.tag.BaseTag", "pydicom.tag.Tag", "pydicom.tag.TupleTag", "pydicom.tag.tag_in_exception", "pydicom.uid.AcquisitionContextSRStorage", "pydicom.uid.AdvancedBlendingPresentationStateStorage", "pydicom.uid.AllTransferSyntaxes", "pydicom.uid.AmbulatoryECGWaveformStorage", "pydicom.uid.ArterialPulseWaveformStorage", "pydicom.uid.AutorefractionMeasurementsStorage", "pydicom.uid.BasicStructuredDisplayStorage", "pydicom.uid.BasicTextSRStorage", "pydicom.uid.BasicVoiceAudioWaveformStorage", "pydicom.uid.BlendingSoftcopyPresentationStateStorage", "pydicom.uid.BodyPositionWaveformStorage", "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "pydicom.uid.BreastTomosynthesisImageStorage", "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "pydicom.uid.CArmPhotonElectronRadiationStorage", "pydicom.uid.CTDefinedProcedureProtocolStorage", "pydicom.uid.CTImageStorage", "pydicom.uid.CTPerformedProcedureProtocolStorage", "pydicom.uid.CardiacElectrophysiologyWaveformStorage", "pydicom.uid.ChestCADSRStorage", "pydicom.uid.ColonCADSRStorage", "pydicom.uid.ColorPaletteStorage", "pydicom.uid.ColorSoftcopyPresentationStateStorage", "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.Comprehensive3DSRStorage", "pydicom.uid.ComprehensiveSRStorage", "pydicom.uid.ComputedRadiographyImageStorage", "pydicom.uid.ContentAssessmentResultsStorage", "pydicom.uid.CornealTopographyMapStorage", "pydicom.uid.DICOS2DAITStorage", "pydicom.uid.DICOS3DAITStorage", "pydicom.uid.DICOSCTImageStorage", "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "pydicom.uid.DICOSQuadrupoleResonanceStorage", "pydicom.uid.DICOSThreatDetectionReportStorage", "pydicom.uid.DeflatedExplicitVRLittleEndian", "pydicom.uid.DeformableSpatialRegistrationStorage", "pydicom.uid.DermoscopicPhotographyImageStorage", "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "pydicom.uid.DigitalXRayImageStorageForPresentation", "pydicom.uid.DigitalXRayImageStorageForProcessing", "pydicom.uid.EddyCurrentImageStorage", "pydicom.uid.EddyCurrentMultiFrameImageStorage", "pydicom.uid.ElectromyogramWaveformStorage", "pydicom.uid.ElectrooculogramWaveformStorage", "pydicom.uid.EncapsulatedCDAStorage", "pydicom.uid.EncapsulatedMTLStorage", "pydicom.uid.EncapsulatedOBJStorage", "pydicom.uid.EncapsulatedPDFStorage", "pydicom.uid.EncapsulatedSTLStorage", "pydicom.uid.EnhancedCTImageStorage", "pydicom.uid.EnhancedMRColorImageStorage", "pydicom.uid.EnhancedMRImageStorage", "pydicom.uid.EnhancedPETImageStorage", "pydicom.uid.EnhancedSRStorage", "pydicom.uid.EnhancedUSVolumeStorage", "pydicom.uid.EnhancedXAImageStorage", "pydicom.uid.EnhancedXRFImageStorage", "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "pydicom.uid.ExplicitVRBigEndian", "pydicom.uid.ExplicitVRLittleEndian", "pydicom.uid.ExtensibleSRStorage", "pydicom.uid.GeneralAudioWaveformStorage", "pydicom.uid.GeneralECGWaveformStorage", "pydicom.uid.GenericImplantTemplateStorage", "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.HEVCM10P51", "pydicom.uid.HEVCMP51", "pydicom.uid.HangingProtocolStorage", "pydicom.uid.HemodynamicWaveformStorage", "pydicom.uid.ImplantAssemblyTemplateStorage", "pydicom.uid.ImplantTemplateGroupStorage", "pydicom.uid.ImplantationPlanSRStorage", "pydicom.uid.ImplicitVRLittleEndian", "pydicom.uid.IntraocularLensCalculationsStorage", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pydicom.uid.JPEG2000", "pydicom.uid.JPEG2000Lossless", "pydicom.uid.JPEG2000MC", "pydicom.uid.JPEG2000MCLossless", "pydicom.uid.JPEG2000TransferSyntaxes", "pydicom.uid.JPEGBaseline8Bit", "pydicom.uid.JPEGExtended12Bit", "pydicom.uid.JPEGLSLossless", "pydicom.uid.JPEGLSNearLossless", "pydicom.uid.JPEGLSTransferSyntaxes", "pydicom.uid.JPEGLosslessP14", "pydicom.uid.JPEGLosslessSV1", "pydicom.uid.JPEGTransferSyntaxes", "pydicom.uid.KeratometryMeasurementsStorage", "pydicom.uid.KeyObjectSelectionDocumentStorage", "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "pydicom.uid.LensometryMeasurementsStorage", "pydicom.uid.MPEG2MPHL", "pydicom.uid.MPEG2MPML", "pydicom.uid.MPEG4HP41", "pydicom.uid.MPEG4HP41BD", "pydicom.uid.MPEG4HP422D", "pydicom.uid.MPEG4HP423D", "pydicom.uid.MPEG4HP42STEREO", "pydicom.uid.MPEGTransferSyntaxes", "pydicom.uid.MRImageStorage", "pydicom.uid.MRSpectroscopyStorage", "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "pydicom.uid.MammographyCADSRStorage", "pydicom.uid.MediaStorageDirectoryStorage", "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "pydicom.uid.MultichannelRespiratoryWaveformStorage", "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.NuclearMedicineImageStorage", "pydicom.uid.OphthalmicAxialMeasurementsStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pydicom.uid.OphthalmicPhotography16BitImageStorage", "pydicom.uid.OphthalmicPhotography8BitImageStorage", "pydicom.uid.OphthalmicThicknessMapStorage", "pydicom.uid.OphthalmicTomographyImageStorage", "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "pydicom.uid.PYDICOM_ROOT_UID", "pydicom.uid.ParametricMapStorage", "pydicom.uid.PatientRadiationDoseSRStorage", "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "pydicom.uid.PositronEmissionTomographyImageStorage", "pydicom.uid.ProcedureLogStorage", "pydicom.uid.ProtocolApprovalStorage", "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "pydicom.uid.RE_VALID_UID", "pydicom.uid.RE_VALID_UID_PREFIX", "pydicom.uid.RLELossless", "pydicom.uid.RLETransferSyntaxes", "pydicom.uid.RTBeamsDeliveryInstructionStorage", "pydicom.uid.RTBeamsTreatmentRecordStorage", "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "pydicom.uid.RTBrachyTreatmentRecordStorage", "pydicom.uid.RTDoseStorage", "pydicom.uid.RTImageStorage", "pydicom.uid.RTIonBeamsTreatmentRecordStorage", "pydicom.uid.RTIonPlanStorage", "pydicom.uid.RTPhysicianIntentStorage", "pydicom.uid.RTPlanStorage", "pydicom.uid.RTRadiationRecordSetStorage", "pydicom.uid.RTRadiationSalvageRecordStorage", "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "pydicom.uid.RTRadiationSetStorage", "pydicom.uid.RTSegmentAnnotationStorage", "pydicom.uid.RTStructureSetStorage", "pydicom.uid.RTTreatmentPreparationStorage", "pydicom.uid.RTTreatmentSummaryRecordStorage", "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "pydicom.uid.RawDataStorage", "pydicom.uid.RealWorldValueMappingStorage", "pydicom.uid.RespiratoryWaveformStorage", "pydicom.uid.RoboticArmRadiationStorage", "pydicom.uid.RoboticRadiationRecordStorage", "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "pydicom.uid.SecondaryCaptureImageStorage", "pydicom.uid.SegmentationStorage", "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.SimplifiedAdultEchoSRStorage", "pydicom.uid.SleepElectroencephalogramWaveformStorage", "pydicom.uid.SpatialFiducialsStorage", "pydicom.uid.SpatialRegistrationStorage", "pydicom.uid.SpectaclePrescriptionReportStorage", "pydicom.uid.StereometricRelationshipStorage", "pydicom.uid.SubjectiveRefractionMeasurementsStorage", "pydicom.uid.SurfaceScanMeshStorage", "pydicom.uid.SurfaceScanPointCloudStorage", "pydicom.uid.SurfaceSegmentationStorage", "pydicom.uid.TomotherapeuticRadiationRecordStorage", "pydicom.uid.TomotherapeuticRadiationStorage", "pydicom.uid.TractographyResultsStorage", "pydicom.uid.TwelveLeadECGWaveformStorage", "pydicom.uid.UID", "pydicom.uid.UltrasoundImageStorage", "pydicom.uid.UltrasoundMultiFrameImageStorage", "pydicom.uid.UncompressedTransferSyntaxes", "pydicom.uid.VLEndoscopicImageStorage", "pydicom.uid.VLMicroscopicImageStorage", "pydicom.uid.VLPhotographicImageStorage", "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "pydicom.uid.VLWholeSlideMicroscopyImageStorage", "pydicom.uid.VideoEndoscopicImageStorage", "pydicom.uid.VideoMicroscopicImageStorage", "pydicom.uid.VideoPhotographicImageStorage", "pydicom.uid.VisualAcuityMeasurementsStorage", "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pydicom.uid.XADefinedProcedureProtocolStorage", "pydicom.uid.XAPerformedProcedureProtocolStorage", "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.XRay3DAngiographicImageStorage", "pydicom.uid.XRay3DCraniofacialImageStorage", "pydicom.uid.XRayAngiographicImageStorage", "pydicom.uid.XRayRadiationDoseSRStorage", "pydicom.uid.XRayRadiofluoroscopicImageStorage", "pydicom.uid.generate_uid", "pydicom.valuerep.DA", "pydicom.valuerep.DS", "pydicom.valuerep.DSdecimal", "pydicom.valuerep.DSfloat", "pydicom.valuerep.DT", "pydicom.valuerep.IS", "pydicom.valuerep.ISfloat", "pydicom.valuerep.MultiString", "pydicom.valuerep.PersonName", "pydicom.valuerep.PersonNameUnicode", "pydicom.valuerep.TM", "pydicom.valuerep.VR", "pydicom.valuerep.format_number_as_ds", "pydicom.valuerep.is_valid_ds", "pydicom.values.convert_AE_string", "pydicom.values.convert_ATvalue", "pydicom.values.convert_DA_string", "pydicom.values.convert_DS_string", "pydicom.values.convert_DT_string", "pydicom.values.convert_IS_string", "pydicom.values.convert_OBvalue", "pydicom.values.convert_OWvalue", "pydicom.values.convert_PN", "pydicom.values.convert_SQ", "pydicom.values.convert_TM_string", "pydicom.values.convert_UI", "pydicom.values.convert_UN", "pydicom.values.convert_UR_string", "pydicom.values.convert_numbers", "pydicom.values.convert_single_string", "pydicom.values.convert_string", "pydicom.values.convert_tag", "pydicom.values.convert_text", "pydicom.values.convert_value", "pydicom.waveforms.numpy_handler", "Bulk Data Handlers", "Overlay Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.overlays</span></code>)", "Pixel Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixel_data_handlers</span></code>)", "Waveform Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.waveforms</span></code>)", "API Reference", "Miscellaneous (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.misc</span></code>)", "UID Definitions and Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.uid</span></code>)", "Release notes", "Version 0.9.2", "Version 0.9.3", "Version 0.9.4", "Version 0.9.5", "Version 0.9.6", "Version 0.9.7", "Version 0.9.8", "Version 0.9.9", "Version 1.0.0", "Version 1.1.0", "Version 1.2.0", "Version 1.3.0", "Version 1.4.0", "Version 1.4.1", "Version 2.0.0", "Version 2.1.0", "Version 2.1.1", "Version 2.2.0", "Version 2.3.0", "Version 2.4.0", "Version 3.0.0", "Contributing to pydicom", "Contributing a source code change", "Contributing a documentation change", "Dataset basics: read, access, modify, write", "Introduction to JSON support", "DICOM File-sets and DICOMDIR", "Tutorials", "How to install pydicom", "Compressing <em>Pixel Data</em>", "Structured Reporting", "Creating and managing virtual environments", "Waveforms"], "terms": {"go": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23, 48, 53, 164, 503, 504, 505, 507, 509, 512], "end": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23, 25, 27, 142, 161, 177, 179, 204, 219, 480, 486, 493, 512], "download": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23, 107, 480, 496, 498, 499, 500], "full": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23, 25, 27, 44, 48, 107, 133, 137, 160, 163, 480, 489, 490, 491, 496, 507, 510], "exampl": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 23, 26, 28, 29, 32, 35, 37, 39, 40, 41, 42, 44, 48, 49, 50, 51, 53, 84, 85, 109, 110, 111, 129, 132, 141, 151, 160, 169, 171, 182, 413, 437, 446, 480, 481, 482, 483, 485, 486, 488, 492, 496, 498, 502, 503, 504, 507, 510, 513], "code": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23, 25, 26, 27, 28, 30, 39, 41, 45, 47, 48, 53, 77, 78, 96, 132, 158, 160, 164, 480, 481, 483, 487, 488, 489, 491, 493, 496, 498, 502, 504, 508, 509, 511, 513], "graphic": [0, 49, 51], "window": [0, 2, 8, 21, 27, 28, 40, 45, 210, 211, 219, 480, 481, 489, 493, 499, 503, 504, 505, 509], "sudo": 0, "apt": 0, "instal": [0, 38, 40, 43, 48, 49, 97, 98, 217, 480, 481, 488, 498, 504, 505, 508, 510, 513], "tix": [0, 480, 481], "dev": 0, "pip": [0, 27, 28, 48, 503, 504, 510, 513], "u": [0, 2, 21, 27, 29, 30, 111, 180, 181, 472, 480, 482, 506, 507, 509, 510, 513], "pydicom": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 23, 26, 30, 32, 34, 36, 37, 43, 46, 47, 50, 51, 52, 53, 60, 70, 473, 477, 481, 483, 484, 485, 486, 487, 488, 489, 490, 493, 495, 496, 498, 503, 504, 505, 506, 507, 508, 511, 512, 513], "python3": [0, 504, 505, 507, 512], "dicomtre": [0, 22, 480, 481], "py": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 39, 49, 53, 84, 85, 97, 98, 480, 481, 484, 485, 486, 487, 488, 489, 497, 503, 505, 507, 510], "dcm": [0, 2, 3, 8, 9, 11, 12, 13, 18, 21, 25, 27, 28, 29, 34, 37, 39, 41, 42, 44, 49, 50, 51, 52, 132, 160, 169, 171, 480, 496, 504, 505, 506, 507, 510, 511, 513], "Or": [0, 39, 509], "browser": [0, 504], "right": [0, 21], "click": [0, 503, 504], "open": [0, 9, 24, 26, 27, 161, 163, 480, 483, 503, 504, 505], "custom": [0, 8, 27, 29, 32, 169, 171, 480, 481, 482, 489, 492, 496], "command": [0, 26, 28, 36, 41, 53, 132, 480, 488, 498, 500, 503, 504, 509, 512], "import": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23, 25, 26, 27, 32, 34, 35, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 84, 85, 109, 110, 129, 132, 141, 151, 169, 171, 413, 437, 480, 486, 489, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513], "tkinter": [0, 23, 45, 480, 481, 483], "tkinter_tix": 0, "print": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 23, 39, 50, 110, 112, 132, 480, 482, 493, 504, 505, 507, 512, 513], "__doc__": [0, 2, 8, 12, 15, 17, 18, 21, 23], "usag": [0, 15, 25, 27, 28, 29, 34, 39, 45, 212, 219, 446, 480, 493, 507], "python": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23, 25, 26, 27, 28, 36, 37, 38, 39, 40, 41, 44, 45, 48, 53, 76, 77, 79, 94, 132, 213, 214, 216, 413, 480, 481, 483, 484, 486, 487, 488, 489, 490, 491, 492, 495, 496, 497, 498, 500, 501, 503, 504, 505, 506, 509, 510, 512, 513], "dicom_filenam": [0, 15], "def": [0, 8, 12, 15, 18, 26, 27, 32, 97, 98, 132, 169, 503, 506], "runtre": 0, "w": [0, 505], "filenam": [0, 2, 8, 10, 12, 13, 18, 21, 25, 27, 28, 29, 39, 41, 49, 51, 105, 106, 107, 108, 132, 133, 137, 162, 163, 164, 171, 173, 182, 480, 495, 503, 505, 506, 507], "top": [0, 17, 21, 27, 28, 29, 37, 50, 132, 161, 171, 480, 501, 504, 505], "frame": [0, 2, 8, 21, 32, 42, 51, 132, 140, 141, 142, 143, 144, 145, 146, 148, 151, 205, 212, 217, 218, 219, 480, 489, 491, 493, 498, 501, 510], "relief": 0, "rais": [0, 40, 55, 76, 77, 79, 81, 82, 84, 85, 97, 98, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 130, 132, 134, 135, 136, 137, 144, 146, 151, 153, 160, 162, 163, 166, 171, 179, 180, 182, 195, 204, 205, 213, 214, 215, 216, 217, 218, 219, 225, 437, 450, 455, 457, 469, 477, 480, 484, 485, 490, 492, 493, 496, 498, 499, 505, 507, 510], "bd": 0, "1": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 19, 21, 23, 24, 25, 27, 28, 29, 30, 32, 34, 35, 37, 39, 41, 42, 43, 44, 46, 50, 51, 52, 62, 77, 79, 80, 84, 85, 87, 96, 97, 98, 106, 107, 109, 110, 111, 112, 129, 131, 132, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 150, 151, 152, 156, 160, 163, 173, 182, 195, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 446, 472, 481, 484, 487, 495, 498, 501, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513], "option": [0, 2, 8, 10, 18, 21, 26, 28, 29, 30, 32, 33, 40, 43, 49, 81, 82, 94, 105, 106, 107, 108, 110, 112, 129, 130, 132, 133, 136, 140, 142, 143, 145, 148, 151, 158, 160, 161, 163, 165, 171, 172, 173, 179, 182, 205, 206, 209, 210, 211, 212, 215, 217, 218, 219, 220, 223, 437, 445, 446, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 477, 480, 482, 483, 489, 493, 496, 498, 504, 507, 512, 513], "hlist": 0, "column": [0, 2, 8, 9, 21, 27, 29, 32, 50, 51, 132, 151, 205, 212, 215, 217, 218, 219, 510], "2": [0, 2, 4, 8, 9, 10, 11, 13, 15, 17, 18, 19, 21, 23, 24, 25, 27, 28, 29, 30, 32, 34, 35, 37, 39, 40, 42, 43, 44, 45, 51, 52, 55, 77, 79, 80, 82, 84, 85, 86, 89, 96, 97, 98, 100, 101, 103, 104, 107, 109, 110, 111, 112, 129, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 160, 163, 169, 182, 195, 205, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 220, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 446, 455, 457, 472, 483, 484, 486, 487, 489, 490, 492, 493, 503, 505, 507, 509, 510, 512, 513], "pack": [0, 23, 35, 50, 219, 480, 490, 491, 496, 499], "expand": [0, 27, 29, 219, 480, 499, 504, 507], "fill": [0, 4, 503, 504], "both": [0, 34, 40, 41, 76, 81, 82, 97, 98, 146, 171, 182, 210, 219, 480, 482, 489, 492, 495, 506, 512], "padx": 0, "10": [0, 12, 21, 24, 27, 29, 50, 52, 146, 173, 182, 195, 340, 373, 379, 398, 480, 487, 491, 504, 505, 507, 513], "padi": 0, "side": [0, 21], "left": [0, 21, 50, 504], "kei": [0, 4, 31, 32, 39, 85, 129, 132, 135, 151, 169, 172, 205, 222, 480, 496, 503], "see": [0, 10, 24, 25, 27, 28, 29, 32, 34, 39, 40, 41, 42, 48, 51, 53, 55, 129, 132, 135, 150, 151, 158, 161, 165, 169, 177, 178, 179, 182, 195, 199, 444, 446, 480, 483, 493, 494, 495, 498, 503, 504, 505, 507, 509, 510, 511, 512], "avail": [0, 1, 6, 10, 11, 16, 25, 27, 28, 29, 31, 32, 39, 44, 48, 49, 51, 52, 53, 107, 132, 133, 137, 140, 141, 151, 156, 171, 182, 213, 214, 216, 219, 446, 455, 457, 480, 482, 483, 487, 489, 490, 491, 493, 496, 507, 509, 510, 511, 512, 513], "configur": [0, 35, 40, 100, 129, 132, 219, 477, 480, 491, 498, 499], "bg": 0, "white": [0, 34, 480, 488], "font": 0, "courier": 0, "indent": [0, 8, 132, 172, 505], "30": [0, 25, 27, 28, 29, 52, 53, 359, 504], "selectbackground": 0, "light": 0, "yellow": 0, "gap": 0, "150": [0, 21, 52], "box": [0, 24, 37], "buttonbox": 0, "orient": [0, 2, 8, 21], "horizont": [0, 219], "add": [0, 2, 6, 11, 13, 16, 19, 20, 21, 26, 27, 28, 32, 37, 39, 40, 42, 50, 109, 111, 112, 129, 132, 135, 140, 141, 151, 169, 171, 172, 219, 480, 489, 492, 498, 500, 503, 504, 505, 507, 510, 513], "ok": [0, 84, 85, 171, 503], "text": [0, 21, 23, 30, 39, 44, 129, 160, 198, 199, 201, 461, 467, 468, 470, 471, 480, 482, 491, 503, 504, 505], "underlin": 0, "0": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 32, 34, 35, 39, 40, 41, 42, 46, 49, 50, 51, 52, 81, 82, 83, 101, 103, 104, 129, 131, 132, 134, 135, 137, 141, 151, 156, 160, 163, 167, 168, 169, 173, 174, 205, 209, 210, 211, 215, 217, 218, 219, 357, 358, 367, 368, 437, 455, 457, 461, 469, 472, 477, 497, 504, 505, 507, 509, 510, 512, 513], "destroi": 0, "width": [0, 2, 8, 21, 129, 210, 211, 219, 505], "6": [0, 2, 8, 11, 21, 24, 27, 29, 30, 35, 43, 44, 46, 51, 55, 78, 129, 131, 132, 142, 212, 215, 219, 261, 286, 296, 346, 374, 392, 403, 411, 414, 421, 427, 446, 481, 486, 487, 489, 496, 497, 500, 504, 505, 507, 513], "exit": [0, 15, 25, 27, 28, 29], "bottom": [0, 21, 37, 503, 504], "x": [0, 2, 3, 8, 9, 21, 27, 28, 29, 37, 46, 480, 492, 503, 504, 505, 510, 512, 513], "http": [0, 24, 37, 49, 97, 503, 504, 506, 509], "stackoverflow": [0, 502], "com": [0, 2, 8, 9, 12, 13, 17, 18, 21, 23, 24, 97, 503, 504, 509], "question": [0, 41, 48, 502], "17355902": 0, "bind": 0, "mousewheel": 0, "scrollbar": 0, "bind_al": 0, "lambda": [0, 4], "event": 0, "yview_scrol": 0, "wheel": [0, 509, 512], "int": [0, 30, 32, 39, 55, 77, 85, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 140, 142, 143, 145, 146, 148, 151, 156, 157, 158, 159, 160, 161, 165, 167, 168, 171, 172, 173, 176, 177, 178, 179, 194, 203, 204, 205, 209, 210, 211, 219, 220, 222, 223, 224, 413, 439, 440, 441, 443, 444, 445, 446, 461, 466, 469, 472, 505], "delta": [0, 21], "120": [0, 21, 52], "unit": [0, 51, 132, 160, 205, 219, 472, 503, 513], "button": [0, 21], "4": [0, 2, 8, 9, 10, 11, 13, 17, 21, 24, 25, 27, 29, 34, 35, 37, 39, 43, 44, 46, 51, 97, 106, 107, 129, 131, 132, 140, 142, 143, 144, 146, 147, 148, 177, 178, 182, 195, 205, 206, 207, 208, 209, 210, 211, 212, 215, 219, 220, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 469, 486, 491, 492, 495, 496, 498, 503, 505, 507, 511, 512, 513], "up": [0, 42, 50, 51, 132, 171, 172, 179, 182, 217, 437, 445, 446, 480, 483, 487, 489, 503, 504, 505, 508, 509, 510, 512], "linux": [0, 40, 480, 489, 504, 509], "5": [0, 8, 9, 10, 11, 13, 17, 21, 23, 24, 25, 27, 30, 34, 35, 39, 42, 43, 46, 51, 52, 55, 129, 131, 132, 135, 140, 142, 143, 144, 145, 146, 148, 150, 152, 182, 199, 205, 209, 210, 211, 212, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 306, 307, 308, 322, 323, 324, 325, 326, 327, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 446, 495, 496, 503, 504, 505, 507, 510, 512, 513], "down": [0, 202, 503, 507], "show_fil": 0, "root": [0, 9, 10, 11, 23, 27, 28, 97, 98, 171, 172, 174, 358, 437, 505, 507], "d": [0, 2, 3, 8, 9, 10, 11, 13, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 39, 41, 42, 43, 44, 49, 50, 51, 52, 53, 55, 60, 65, 81, 82, 84, 85, 97, 98, 102, 103, 109, 110, 111, 129, 132, 140, 141, 151, 160, 169, 171, 180, 181, 196, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 440, 441, 446, 450, 455, 472, 480, 486, 487, 495, 498, 500, 503, 504, 505, 506, 507, 510, 513], "dcmread": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 18, 21, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 70, 91, 107, 133, 137, 153, 158, 161, 163, 165, 171, 179, 182, 203, 480, 489, 495, 496, 498, 504, 505, 506, 507, 510, 513], "decod": [0, 1, 5, 6, 35, 38, 60, 77, 78, 129, 132, 146, 151, 160, 213, 214, 216, 217, 218, 446, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 477, 480, 484, 491, 492, 493, 496, 498, 499, 507, 509], "chang": [0, 11, 13, 26, 27, 28, 34, 37, 40, 41, 42, 43, 50, 51, 55, 82, 96, 107, 132, 136, 137, 146, 171, 210, 212, 213, 214, 215, 216, 217, 218, 219, 223, 437, 455, 457, 495, 502, 505, 506, 508, 509, 510, 511, 512], "string": [0, 18, 21, 26, 27, 30, 39, 55, 77, 78, 79, 110, 129, 132, 135, 151, 160, 172, 183, 192, 196, 200, 201, 204, 222, 439, 440, 441, 443, 444, 445, 446, 450, 451, 455, 457, 466, 467, 468, 480, 483, 485, 486, 490, 491, 496, 498, 506], "unicod": [0, 6, 22, 30, 77, 79, 446, 480, 481, 483, 484, 500], "recurse_tre": 0, "fals": [0, 3, 4, 11, 13, 15, 30, 32, 37, 40, 42, 44, 55, 80, 81, 82, 85, 88, 90, 93, 94, 95, 96, 97, 98, 102, 103, 104, 107, 116, 117, 126, 127, 129, 132, 133, 136, 137, 140, 141, 151, 157, 158, 160, 165, 166, 171, 173, 174, 177, 178, 179, 182, 195, 202, 212, 215, 217, 219, 413, 439, 440, 441, 451, 452, 453, 454, 455, 456, 457, 461, 462, 463, 465, 466, 468, 469, 472, 480, 486, 490, 495, 498, 500, 505, 507, 513], "autosetmod": 0, "dataset": [0, 2, 6, 7, 8, 11, 12, 13, 14, 17, 18, 19, 21, 22, 25, 26, 27, 28, 29, 30, 34, 35, 37, 40, 41, 43, 44, 45, 47, 48, 49, 53, 59, 73, 80, 84, 85, 91, 97, 98, 101, 107, 108, 109, 110, 129, 130, 137, 138, 140, 141, 143, 145, 151, 160, 161, 165, 167, 168, 169, 170, 171, 172, 180, 181, 182, 194, 195, 199, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 472, 477, 480, 481, 482, 483, 484, 485, 486, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 504, 507, 508, 509, 510, 513], "parent": [0, 10, 27, 28, 132, 135, 171, 172, 220, 480, 490, 507], "hide": 0, "order": [0, 4, 31, 32, 35, 51, 97, 98, 132, 133, 135, 143, 151, 157, 172, 176, 180, 181, 218, 219, 220, 480, 481, 488, 491, 493, 503, 512, 513], "tag": [0, 17, 18, 27, 29, 30, 41, 44, 45, 48, 50, 51, 55, 60, 85, 97, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 144, 146, 147, 148, 157, 158, 160, 161, 162, 165, 171, 179, 180, 184, 199, 205, 215, 217, 218, 219, 469, 472, 477, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 498, 499, 501, 505, 506], "data_el": [0, 8, 18, 132, 184, 187, 188, 191, 193, 198, 199, 213, 505, 506], "node_id": 0, "hex": [0, 37, 50, 129, 132, 135, 480, 483], "id": [0, 2, 8, 9, 11, 13, 18, 21, 44, 135, 170, 171, 172, 173, 174, 219, 480, 482, 499, 505, 507], "isinst": 0, "valu": [0, 2, 8, 9, 10, 11, 13, 18, 21, 27, 29, 30, 31, 32, 34, 35, 37, 39, 40, 42, 44, 50, 51, 53, 55, 60, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 93, 96, 104, 110, 112, 113, 114, 123, 124, 129, 131, 132, 134, 135, 138, 140, 141, 142, 143, 144, 145, 146, 151, 159, 160, 162, 169, 171, 179, 180, 181, 182, 183, 192, 197, 198, 199, 204, 205, 206, 207, 208, 209, 210, 212, 215, 217, 218, 219, 220, 222, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 472, 477, 480, 481, 482, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 507, 509, 510, 511, 513], "str": [0, 10, 21, 30, 32, 39, 76, 77, 78, 79, 88, 92, 97, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 137, 151, 152, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 182, 183, 189, 193, 194, 197, 198, 199, 200, 201, 202, 203, 205, 206, 212, 218, 219, 222, 223, 413, 437, 439, 440, 441, 443, 444, 445, 446, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 480, 490, 495, 498, 505], "els": [0, 3, 4, 8, 10, 34, 132, 157, 161, 176, 179, 439, 505], "hide_entri": 0, "vr": [0, 2, 8, 13, 17, 18, 21, 27, 28, 29, 36, 38, 39, 42, 43, 44, 55, 60, 65, 82, 89, 90, 93, 102, 103, 109, 110, 111, 112, 114, 119, 120, 124, 129, 130, 131, 132, 133, 135, 137, 142, 158, 159, 161, 162, 171, 180, 181, 182, 187, 188, 191, 195, 196, 215, 228, 413, 438, 440, 441, 442, 443, 444, 446, 448, 452, 461, 463, 465, 466, 467, 468, 470, 471, 480, 481, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 505, 506, 510], "sq": [0, 8, 30, 55, 129, 132, 158, 461, 480, 486, 496, 499, 505], "sequenc": [0, 2, 3, 6, 8, 16, 20, 21, 25, 27, 28, 29, 30, 37, 45, 52, 53, 60, 77, 79, 89, 132, 142, 143, 144, 145, 161, 167, 168, 172, 175, 176, 182, 198, 199, 204, 207, 208, 209, 210, 219, 446, 461, 472, 477, 480, 481, 482, 486, 487, 490, 492, 493, 494, 496, 497, 498, 499, 500, 507, 513], "i": [0, 2, 3, 4, 10, 11, 17, 18, 21, 23, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 55, 60, 65, 71, 73, 76, 77, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 96, 97, 98, 104, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 147, 148, 151, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 195, 196, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 413, 437, 438, 442, 444, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 461, 462, 463, 465, 466, 468, 469, 480, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513], "enumer": [0, 4, 513], "item_id": 0, "sq_item_descript": 0, "name": [0, 2, 6, 8, 9, 11, 12, 13, 15, 17, 18, 19, 21, 22, 25, 26, 27, 28, 29, 30, 32, 34, 37, 39, 40, 41, 42, 43, 44, 53, 97, 107, 110, 112, 119, 120, 123, 124, 125, 129, 132, 136, 151, 152, 160, 163, 182, 195, 206, 219, 413, 446, 480, 481, 482, 483, 486, 489, 490, 491, 496, 498, 499, 500, 503, 504, 505, 507, 510, 511, 512, 513], "replac": [0, 18, 76, 77, 79, 110, 480, 492, 499], "xxx": [0, 13, 53], "i18n": 0, "item_text": 0, "f": [0, 2, 3, 4, 8, 9, 10, 11, 13, 19, 21, 129, 132, 169, 171, 503, 507, 510, 513], "": [0, 2, 3, 4, 8, 9, 10, 11, 13, 17, 18, 21, 25, 26, 27, 28, 29, 32, 35, 37, 38, 39, 42, 44, 47, 48, 49, 50, 51, 53, 84, 93, 94, 97, 98, 111, 117, 121, 128, 129, 132, 133, 140, 143, 146, 149, 151, 160, 171, 172, 180, 181, 182, 204, 212, 219, 222, 223, 357, 358, 449, 450, 451, 453, 460, 461, 468, 470, 471, 480, 482, 483, 485, 490, 491, 493, 496, 498, 502, 503, 504, 505, 507, 509, 510, 512, 513], "true": [0, 11, 13, 21, 30, 32, 34, 37, 39, 40, 42, 44, 52, 55, 80, 81, 82, 88, 89, 93, 94, 96, 97, 98, 101, 107, 116, 117, 126, 127, 129, 131, 132, 133, 136, 137, 140, 144, 146, 151, 153, 158, 160, 161, 166, 170, 171, 172, 174, 176, 177, 178, 179, 182, 195, 202, 205, 210, 212, 213, 214, 215, 216, 217, 218, 219, 222, 413, 440, 441, 451, 452, 453, 454, 455, 456, 457, 461, 462, 463, 465, 466, 468, 469, 472, 480, 484, 486, 496, 498, 500, 501, 505, 507, 510, 513], "__name__": [0, 15, 26, 27], "__main__": [0, 15, 26, 27], "sy": [0, 4, 15, 513], "len": [0, 3, 4, 8, 10, 11, 15, 34, 505, 507, 513], "argv": [0, 4, 15], "pleas": [0, 15, 26, 27, 29, 39, 41, 480, 487, 498, 503, 504], "suppli": [0, 13, 15, 49, 53, 79, 160, 171, 206, 219, 437, 446, 505, 507], "n": [0, 2, 8, 10, 12, 15, 21, 27, 29, 195, 205, 207, 208, 209, 210, 211, 215, 217, 218, 219, 472, 507, 512], "tk": [0, 23], "geometri": 0, "1200x900": 0, "titl": [0, 2, 21, 27, 29, 37, 44, 195, 446, 503, 504, 505], "viewer": [0, 49], "mainloop": [0, 23], "total": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 140, 141, 194, 205, 219, 510], "run": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23, 39, 40, 41, 53, 110, 132, 446, 480, 483, 486, 496, 504, 505, 508, 509, 512], "time": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23, 27, 28, 29, 30, 39, 40, 48, 53, 91, 93, 110, 133, 162, 176, 179, 219, 439, 448, 480, 483, 489, 498, 502, 503, 504, 505, 507, 513], "script": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23, 25, 26, 27, 53, 480, 490, 502], "minut": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23], "000": [0, 4, 5, 15, 22, 23, 513], "second": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23, 35, 40, 47, 446, 513], "sourc": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23, 24, 27, 29, 32, 44, 53, 55, 76, 77, 78, 79, 81, 82, 94, 96, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 480, 488, 496, 498, 501, 502, 504, 505, 508, 509, 513], "jupyt": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23], "notebook": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23], "ipynb": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23], "galleri": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23], "gener": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23, 26, 27, 28, 32, 34, 39, 40, 43, 46, 53, 142, 143, 144, 145, 148, 158, 165, 173, 220, 223, 437, 444, 472, 480, 482, 483, 487, 489, 504, 510], "sphinx": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23, 37, 480, 484, 504], "These": [1, 6, 7, 16, 36, 39, 40, 48, 480, 496, 505], "illustr": [1, 3, 4, 6, 7, 8, 9, 16, 17, 19, 21, 38, 39], "which": [1, 6, 21, 24, 25, 26, 27, 32, 35, 37, 39, 42, 44, 48, 49, 51, 52, 53, 77, 78, 84, 110, 129, 132, 157, 158, 160, 161, 163, 164, 169, 171, 182, 195, 218, 219, 437, 439, 480, 481, 484, 486, 488, 496, 503, 504, 505, 506, 507, 509, 510, 512, 513], "can": [1, 6, 11, 15, 18, 25, 26, 27, 28, 29, 30, 32, 37, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 55, 96, 132, 140, 141, 151, 160, 161, 169, 171, 197, 204, 439, 444, 445, 480, 481, 482, 483, 486, 495, 496, 499, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513], "appli": [1, 6, 11, 35, 51, 52, 67, 78, 80, 132, 171, 206, 207, 208, 209, 210, 211, 219, 480, 493, 496, 504, 509, 513], "dicom": [1, 2, 4, 6, 7, 9, 10, 14, 15, 16, 20, 22, 23, 24, 28, 29, 30, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 55, 58, 61, 70, 72, 74, 76, 77, 78, 84, 89, 94, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 137, 140, 142, 143, 144, 145, 146, 147, 148, 151, 153, 157, 158, 160, 161, 164, 165, 166, 171, 182, 193, 195, 197, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 219, 222, 223, 413, 437, 440, 441, 444, 446, 449, 450, 466, 477, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496, 498, 499, 500, 504, 505, 506, 508, 510, 511], "downsiz": [1, 5, 6, 51], "mri": [1, 5, 6, 51], "us": [1, 3, 5, 6, 7, 9, 11, 13, 17, 18, 21, 22, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 43, 44, 45, 47, 48, 50, 51, 52, 68, 77, 78, 79, 80, 84, 85, 88, 94, 95, 96, 97, 98, 102, 103, 107, 110, 112, 129, 130, 132, 133, 137, 140, 141, 143, 151, 153, 156, 158, 160, 161, 163, 164, 165, 169, 171, 172, 173, 179, 180, 181, 182, 197, 198, 199, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 218, 219, 220, 223, 225, 437, 440, 444, 446, 450, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 511, 513], "plot": [1, 5, 6, 7, 14, 480, 492, 513], "waveform": [1, 5, 6, 38, 45, 132, 169, 473, 477, 480, 496, 500, 508], "data": [1, 2, 5, 6, 7, 10, 11, 12, 14, 16, 17, 19, 20, 21, 24, 25, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 45, 49, 53, 55, 62, 63, 64, 65, 77, 78, 79, 80, 82, 84, 97, 98, 101, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 158, 159, 160, 162, 165, 169, 171, 178, 182, 197, 198, 199, 205, 206, 213, 214, 215, 216, 217, 218, 219, 437, 449, 466, 472, 477, 480, 481, 482, 483, 484, 485, 486, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 507, 508, 509], "load": [1, 5, 6, 11, 13, 15, 161, 170, 171, 179, 480, 492, 496, 497, 498], "ct": [1, 5, 6, 9, 10, 11, 13, 21, 27, 29, 44, 51, 480, 492, 505, 507, 510], "slice": [1, 2, 5, 6, 8, 9, 21, 27, 29, 132, 480, 489, 490, 492], "axial": [1, 5, 6, 21, 27, 29, 480, 492, 505], "sagitt": [1, 5, 6, 480, 492], "coron": [1, 5, 6, 480, 492], "thi": [2, 3, 4, 8, 9, 10, 11, 13, 15, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 32, 35, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 53, 55, 76, 81, 82, 83, 86, 87, 89, 96, 97, 98, 110, 129, 132, 134, 137, 140, 143, 144, 145, 151, 158, 160, 163, 164, 170, 171, 188, 199, 202, 204, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 439, 440, 441, 444, 446, 450, 451, 477, 487, 489, 492, 493, 498, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513], "show": [2, 3, 4, 6, 9, 10, 11, 13, 18, 22, 25, 26, 28, 37, 44, 49, 53, 110, 129, 480, 481, 485, 487, 498, 500, 504, 505, 513], "how": [2, 3, 8, 9, 10, 11, 13, 15, 17, 18, 19, 21, 25, 27, 32, 37, 38, 41, 42, 43, 49, 50, 51, 52, 53, 110, 129, 171, 445, 480, 481, 485, 503, 504, 505, 506, 507, 508, 512, 513], "an": [2, 11, 12, 24, 25, 27, 28, 29, 30, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 53, 55, 76, 77, 78, 84, 85, 86, 89, 97, 98, 107, 110, 116, 119, 120, 126, 129, 130, 132, 133, 135, 137, 142, 143, 144, 145, 146, 147, 148, 151, 157, 160, 161, 171, 172, 181, 182, 192, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 219, 220, 222, 223, 225, 413, 438, 440, 441, 442, 443, 444, 446, 448, 450, 466, 472, 480, 483, 484, 490, 492, 493, 495, 496, 498, 499, 501, 503, 504, 505, 507, 509, 510, 511, 512, 513], "mr": [2, 8, 10, 11, 21, 50, 51, 446, 507], "from": [2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 30, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 72, 76, 77, 79, 81, 84, 85, 91, 97, 98, 109, 110, 119, 120, 129, 130, 131, 132, 133, 134, 136, 137, 138, 141, 142, 143, 145, 146, 148, 149, 151, 157, 158, 159, 162, 166, 169, 170, 171, 172, 173, 182, 195, 197, 204, 207, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 413, 437, 440, 441, 446, 451, 469, 480, 483, 484, 485, 486, 487, 488, 491, 492, 495, 496, 497, 498, 503, 504, 505, 507, 509, 510, 511, 512, 513], "512": [2, 21, 160, 205, 480, 490], "im": 2, "64": [2, 8, 21, 30, 35, 51, 215, 219, 437, 472, 480, 483, 513], "The": [2, 10, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 55, 76, 77, 78, 79, 97, 98, 100, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 158, 160, 162, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 195, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 437, 445, 446, 450, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 480, 483, 490, 491, 496, 503, 504, 505, 506, 509, 510, 511, 512, 513], "perform": [2, 32, 35, 40, 42, 83, 113, 114, 115, 117, 118, 128, 132, 136, 171, 217, 459, 480, 487, 490, 491, 509, 513], "take": [2, 25, 26, 27, 32, 35, 37, 42, 49, 53, 132, 158, 169, 204, 480, 487, 503, 504, 505, 507, 512], "central": 2, "section": [2, 25, 26, 27, 28, 34, 37, 39, 42, 44, 48, 51, 53, 55, 101, 129, 132, 135, 140, 142, 148, 182, 195, 199, 205, 212, 219, 446, 503, 504], "instead": [2, 32, 39, 41, 48, 51, 52, 53, 95, 129, 132, 137, 158, 160, 163, 169, 171, 182, 218, 437, 444, 446, 480, 483, 486, 490, 491, 492, 495, 496, 498, 499, 503, 504, 505, 506, 507, 509, 510, 513], "averagin": 2, "pixel": [2, 4, 6, 7, 8, 14, 21, 24, 25, 27, 29, 36, 37, 38, 39, 41, 45, 49, 50, 53, 67, 80, 98, 132, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 160, 165, 182, 205, 206, 207, 208, 213, 214, 215, 216, 217, 218, 219, 477, 480, 481, 483, 484, 489, 490, 491, 492, 493, 495, 496, 498, 499, 501, 503, 505, 508, 509], "final": [2, 18, 107, 140, 505, 513], "store": [2, 8, 11, 18, 21, 30, 34, 35, 39, 44, 51, 107, 129, 132, 160, 182, 196, 207, 208, 219, 438, 440, 441, 442, 443, 444, 448, 480, 483, 498, 505, 506, 507, 513], "requir": [2, 11, 13, 21, 27, 28, 34, 35, 39, 40, 42, 44, 50, 51, 52, 53, 97, 129, 132, 140, 142, 143, 144, 145, 151, 157, 160, 171, 180, 182, 195, 204, 205, 206, 210, 211, 213, 214, 215, 217, 218, 219, 223, 450, 480, 483, 487, 491, 495, 496, 501, 504, 505, 507, 509, 510, 513], "numpi": [2, 3, 4, 24, 32, 34, 37, 39, 42, 43, 50, 51, 52, 82, 97, 98, 103, 104, 132, 151, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 455, 457, 472, 480, 481, 489, 491, 492, 493, 495, 499, 503, 509, 510, 512, 513], "librari": [2, 24, 26, 27, 39, 40, 45, 48, 51, 219, 480, 483, 486, 504, 510], "manipul": [2, 24, 41, 129, 473, 509], "ha": [2, 11, 15, 21, 25, 26, 27, 28, 32, 34, 35, 37, 40, 41, 42, 44, 48, 51, 53, 82, 89, 91, 129, 132, 142, 144, 146, 151, 161, 162, 170, 171, 172, 182, 183, 204, 205, 213, 214, 215, 216, 217, 218, 219, 222, 437, 439, 472, 480, 482, 483, 485, 490, 491, 493, 494, 495, 500, 503, 504, 505, 506, 507, 510, 512, 513], "voxel": 2, "downsampl": [2, 34], "8": [2, 8, 12, 21, 23, 24, 27, 28, 32, 34, 35, 39, 43, 51, 81, 135, 151, 173, 174, 205, 209, 210, 211, 215, 217, 218, 219, 227, 236, 306, 350, 357, 358, 378, 430, 437, 472, 482, 485, 489, 491, 493, 496, 499, 500, 513], "inform": [2, 6, 7, 8, 9, 13, 14, 21, 25, 27, 28, 29, 33, 35, 36, 37, 39, 42, 44, 48, 49, 51, 53, 80, 101, 129, 132, 133, 134, 136, 137, 151, 160, 164, 166, 182, 195, 446, 480, 481, 483, 486, 489, 493, 495, 496, 501, 503, 504, 505, 510, 512, 513], "set": [2, 6, 7, 10, 13, 14, 19, 21, 26, 27, 28, 29, 30, 35, 38, 39, 40, 42, 43, 45, 46, 50, 51, 53, 55, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 91, 92, 93, 95, 96, 102, 103, 104, 110, 129, 130, 132, 144, 146, 160, 161, 162, 169, 170, 171, 173, 174, 179, 182, 440, 444, 446, 450, 451, 477, 480, 481, 486, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 505, 506, 508, 509, 510, 512, 513], "after": [2, 8, 21, 27, 28, 29, 37, 49, 142, 144, 166, 172, 177, 178, 179, 182, 195, 480, 495, 498, 503, 504, 505, 507, 509, 510, 512], "file_meta": [2, 13, 21, 27, 28, 29, 39, 42, 43, 44, 48, 132, 133, 134, 136, 137, 182, 195, 480, 483, 495, 507, 510], "0002": [2, 13, 21, 27, 28, 29, 35, 39, 44, 51, 132, 136, 182, 195, 215, 217, 218, 219, 357, 505, 509], "0000": [2, 8, 21, 27, 28, 29, 39, 44, 182, 195, 505], "file": [2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 19, 20, 22, 26, 28, 29, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 72, 74, 85, 89, 94, 101, 105, 106, 107, 108, 110, 132, 133, 134, 136, 137, 149, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 184, 193, 194, 195, 197, 198, 199, 202, 477, 481, 482, 483, 485, 486, 489, 492, 493, 495, 496, 498, 499, 500, 503, 504, 505, 508, 510], "meta": [2, 8, 13, 21, 27, 28, 29, 39, 44, 53, 101, 132, 133, 134, 136, 137, 160, 164, 182, 195, 480, 483, 486, 489, 495, 505], "group": [2, 18, 21, 27, 28, 29, 39, 41, 44, 50, 52, 97, 119, 121, 129, 132, 133, 134, 135, 136, 160, 169, 171, 182, 195, 205, 222, 223, 224, 446, 472, 480, 483, 486, 490, 495, 496, 502, 503, 505, 513], "length": [2, 8, 21, 27, 28, 29, 39, 40, 44, 52, 55, 90, 121, 129, 131, 132, 140, 141, 142, 144, 146, 147, 148, 157, 158, 175, 178, 182, 194, 195, 205, 215, 218, 219, 480, 485, 486, 490, 492, 496, 498, 499, 500, 501, 505], "ul": [2, 17, 21, 27, 28, 29, 30, 39, 44, 109, 110, 111, 195, 472, 505, 507], "190": [2, 21, 39], "0001": [2, 21, 27, 28, 29, 39, 44, 132, 136, 195, 505], "version": [2, 8, 21, 25, 27, 28, 29, 35, 37, 39, 41, 44, 45, 46, 55, 77, 79, 80, 82, 84, 85, 89, 96, 97, 98, 100, 101, 103, 104, 106, 107, 111, 112, 129, 132, 134, 135, 136, 137, 140, 142, 146, 147, 148, 150, 151, 152, 160, 163, 195, 202, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 220, 222, 223, 437, 446, 455, 457, 472, 503, 504, 505, 506, 511, 512], "ob": [2, 17, 21, 27, 28, 29, 30, 39, 44, 142, 187, 195, 458, 480, 484, 499, 505, 506], "b": [2, 8, 12, 13, 21, 23, 27, 28, 29, 35, 39, 44, 50, 51, 129, 132, 182, 446, 503, 504, 505, 512], "x00": [2, 8, 21, 27, 28, 29, 39, 44, 50, 505], "x01": [2, 8, 21, 27, 28, 29, 39, 44, 51, 505], "media": [2, 13, 21, 27, 28, 29, 39, 44, 132, 136, 160, 193, 195, 505, 507], "storag": [2, 9, 13, 15, 21, 27, 28, 29, 39, 44, 51, 132, 136, 160, 193, 195, 477, 480, 483, 484, 489, 499, 505, 507, 513], "sop": [2, 8, 9, 10, 11, 13, 21, 27, 28, 29, 34, 39, 44, 51, 52, 136, 164, 169, 170, 171, 172, 182, 195, 206, 219, 477, 480, 489, 490, 496, 499, 500, 505, 510], "class": [2, 8, 9, 10, 13, 15, 21, 27, 28, 29, 37, 38, 39, 44, 48, 51, 52, 55, 68, 70, 81, 129, 131, 132, 133, 134, 135, 136, 137, 151, 154, 156, 157, 160, 170, 171, 172, 182, 195, 204, 220, 222, 357, 413, 438, 439, 440, 441, 442, 443, 444, 446, 448, 449, 477, 480, 481, 482, 483, 486, 487, 488, 489, 490, 491, 493, 495, 496, 499, 500, 504, 505, 507, 510, 511], "uid": [2, 8, 11, 13, 21, 27, 28, 29, 30, 32, 33, 34, 35, 39, 42, 43, 44, 48, 51, 53, 98, 132, 136, 140, 141, 151, 152, 170, 171, 182, 195, 206, 213, 214, 215, 216, 217, 218, 219, 445, 463, 477, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 503, 505, 507, 509, 510], "ui": [2, 13, 17, 21, 27, 28, 29, 30, 39, 44, 191, 195, 463, 480, 483, 493, 505], "0003": [2, 13, 21, 27, 28, 29, 39, 44, 136, 195, 505], "instanc": [2, 8, 10, 11, 13, 21, 27, 28, 29, 30, 32, 34, 39, 44, 47, 49, 51, 68, 78, 88, 132, 136, 150, 151, 160, 161, 169, 170, 171, 172, 182, 195, 204, 206, 219, 220, 221, 439, 440, 441, 480, 492, 498, 505, 510, 511], "3": [2, 4, 8, 10, 11, 13, 17, 18, 21, 23, 24, 27, 29, 30, 32, 34, 35, 39, 40, 43, 44, 46, 51, 52, 55, 100, 107, 109, 110, 111, 112, 129, 131, 132, 135, 151, 169, 182, 195, 205, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 223, 229, 239, 245, 262, 264, 266, 267, 275, 280, 282, 322, 340, 343, 365, 366, 386, 404, 415, 420, 437, 477, 483, 484, 486, 487, 488, 489, 490, 491, 495, 496, 497, 500, 503, 504, 505, 506, 507, 510, 512, 513], "5962": [2, 8, 11, 21, 27, 29, 44, 505, 507], "20040826185059": [2, 8, 21], "5457": [2, 8, 21], "0010": [2, 13, 18, 21, 27, 28, 29, 37, 39, 44, 50, 51, 67, 68, 98, 132, 136, 143, 144, 145, 160, 182, 195, 205, 215, 216, 217, 218, 219, 472, 473, 480, 489, 504, 505, 507, 509], "transfer": [2, 13, 21, 27, 28, 29, 32, 33, 35, 39, 44, 45, 97, 98, 132, 133, 136, 137, 140, 141, 143, 144, 151, 152, 157, 161, 170, 171, 179, 182, 195, 213, 214, 215, 216, 217, 218, 219, 228, 313, 318, 321, 335, 370, 413, 416, 477, 480, 484, 489, 491, 492, 493, 495, 496, 500, 505, 509, 510, 513], "syntax": [2, 13, 21, 25, 27, 28, 29, 32, 33, 35, 39, 44, 45, 48, 53, 97, 98, 132, 133, 136, 137, 140, 141, 143, 144, 151, 152, 157, 161, 170, 171, 179, 182, 195, 213, 214, 215, 216, 217, 218, 219, 228, 313, 318, 321, 335, 370, 413, 416, 477, 480, 483, 484, 489, 491, 492, 493, 495, 496, 500, 505, 509, 510, 513], "explicit": [2, 13, 21, 27, 29, 42, 43, 44, 55, 89, 132, 133, 137, 144, 161, 182, 195, 215, 228, 446, 480, 483, 484, 492, 493, 495, 498, 505], "littl": [2, 21, 27, 28, 29, 31, 32, 39, 42, 43, 44, 132, 133, 137, 144, 147, 148, 151, 157, 158, 161, 171, 177, 178, 179, 182, 195, 215, 218, 413, 452, 453, 454, 455, 456, 457, 461, 462, 463, 465, 466, 468, 469, 480, 483, 495, 505, 510, 513], "endian": [2, 13, 21, 27, 28, 29, 31, 32, 39, 42, 43, 44, 132, 133, 137, 144, 147, 148, 151, 157, 158, 161, 171, 176, 177, 178, 179, 182, 188, 195, 215, 218, 219, 228, 413, 452, 453, 454, 455, 456, 457, 461, 462, 463, 465, 466, 468, 469, 480, 483, 491, 495, 500, 505, 510, 513], "0012": [2, 13, 21, 27, 28, 29, 39, 44, 136, 195, 357, 505], "implement": [2, 13, 21, 27, 28, 29, 32, 39, 44, 53, 136, 182, 195, 357, 480, 496, 505], "0013": [2, 21, 27, 28, 29, 39, 44, 136, 195, 505, 507], "sh": [2, 21, 27, 29, 30, 39, 44, 195, 470, 505], "dctool100": [2, 21, 27, 29, 44, 505], "0016": [2, 21, 27, 28, 29, 39, 44, 195, 505], "applic": [2, 21, 27, 28, 29, 30, 40, 44, 182, 195, 505, 510], "entiti": [2, 21, 27, 29, 30, 44, 171, 195, 505], "ae": [2, 21, 27, 29, 30, 44, 195, 452, 468, 480, 489, 501, 505], "clunie1": [2, 21, 27, 29, 44, 505], "0008": [2, 13, 21, 27, 28, 29, 39, 44, 51, 76, 77, 78, 79, 132, 143, 145, 160, 161, 206, 215, 217, 218, 219, 480, 481, 493, 505, 506, 507], "type": [2, 3, 8, 18, 19, 21, 26, 27, 28, 29, 32, 35, 36, 38, 39, 42, 44, 48, 51, 76, 77, 79, 82, 100, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 138, 139, 140, 141, 146, 147, 149, 151, 160, 161, 162, 163, 165, 166, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 195, 197, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 413, 437, 445, 446, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 480, 483, 484, 486, 497, 498, 500, 504, 505, 507, 510, 513], "c": [2, 10, 11, 19, 21, 23, 25, 27, 28, 29, 30, 35, 39, 41, 44, 51, 52, 93, 132, 205, 207, 208, 209, 210, 211, 212, 215, 219, 468, 480, 487, 505, 506, 507, 509, 510, 512, 513], "deriv": [2, 8, 21, 39, 47, 81, 97, 98, 129, 134, 137, 220, 480, 486, 505], "secondari": [2, 8, 21], "other": [2, 8, 18, 21, 25, 30, 35, 40, 42, 43, 44, 49, 50, 51, 53, 165, 182, 187, 188, 195, 219, 446, 503, 505, 507, 510, 512], "creation": [2, 8, 10, 13, 21, 27, 28, 29, 39, 169, 480, 492, 505, 507, 512], "date": [2, 8, 9, 13, 18, 21, 24, 27, 28, 29, 30, 39, 40, 46, 93, 171, 438, 477, 480, 489, 490, 492, 498, 505, 509], "da": [2, 13, 18, 21, 27, 28, 29, 30, 39, 60, 65, 93, 132, 454, 468, 480, 489, 498, 505], "20040826": [2, 8, 21], "tm": [2, 13, 21, 27, 28, 29, 30, 39, 60, 65, 93, 462, 468, 480, 489, 498, 505], "185434": [2, 8, 21], "0014": [2, 21, 27, 28, 29, 505], "creator": [2, 8, 21, 27, 29, 44, 111, 112, 120, 123, 124, 125, 132, 135, 195, 222, 480, 490, 495, 500, 505, 507], "0018": [2, 21, 27, 28, 29, 39, 41, 195, 206, 219], "0020": [2, 13, 18, 21, 27, 28, 29, 39, 505, 507], "studi": [2, 8, 9, 10, 11, 21, 27, 28, 29, 39, 137, 169, 171, 507], "0021": [2, 21], "seri": [2, 8, 10, 11, 21, 37, 137, 164, 169, 171, 480, 484, 504, 507, 510], "0022": [2, 21, 505], "acquisit": [2, 8, 21], "0030": [2, 18, 21, 39], "185059": [2, 8, 21], "0031": [2, 21], "0032": [2, 21], "0050": [2, 21, 27, 28, 39, 50], "access": [2, 8, 21, 24, 27, 28, 38, 39, 44, 50, 55, 82, 100, 132, 160, 480, 482, 489, 495, 496, 500, 504, 506, 507, 508, 511], "number": [2, 8, 12, 19, 21, 25, 27, 28, 29, 32, 35, 37, 39, 41, 44, 48, 50, 110, 112, 129, 131, 132, 135, 140, 142, 143, 144, 145, 148, 151, 159, 160, 161, 171, 172, 173, 176, 179, 196, 197, 203, 205, 219, 222, 223, 440, 441, 450, 480, 481, 485, 488, 492, 498, 499, 504, 505, 507, 509, 511, 513], "0060": [2, 21, 27, 28, 39], "modal": [2, 8, 9, 10, 11, 21, 27, 29, 39, 45, 207, 208, 210, 211, 219, 480, 493, 507, 511], "0070": [2, 21, 27, 28], "manufactur": [2, 8, 21, 132], "lo": [2, 13, 18, 19, 21, 27, 28, 30, 44, 132, 470, 505, 507], "toshiba_mec": [2, 8, 21], "0080": [2, 21, 27, 28, 29], "institut": [2, 8, 21], "toshiba": [2, 8, 21], "0090": [2, 21], "refer": [2, 8, 21, 27, 28, 35, 37, 39, 51, 93, 132, 140, 142, 143, 144, 145, 146, 148, 150, 170, 205, 206, 207, 208, 209, 210, 211, 212, 219, 220, 480, 483, 503, 507, 510, 512, 513], "physician": [2, 8, 21], "pn": [2, 13, 18, 21, 30, 39, 65, 129, 132, 446, 460, 480, 493, 498, 504, 505, 507], "0201": [2, 21, 480, 492], "timezon": [2, 8, 21], "offset": [2, 8, 21, 42, 50, 129, 132, 135, 140, 141, 143, 144, 145, 146, 156, 166, 167, 168, 171, 177, 178, 461, 469, 480, 493, 496, 499, 507, 510], "utc": [2, 8, 21], "0400": [2, 8, 21], "1010": [2, 21, 52, 513], "station": [2, 8, 21], "000000000": [2, 8, 21], "1060": [2, 21], "read": [2, 6, 7, 8, 14, 15, 18, 19, 21, 25, 27, 28, 29, 34, 38, 39, 40, 41, 42, 44, 50, 51, 53, 55, 70, 76, 82, 89, 94, 107, 132, 133, 137, 138, 139, 144, 149, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 175, 176, 178, 179, 182, 202, 213, 215, 443, 444, 477, 480, 481, 482, 483, 484, 485, 486, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 504, 506, 507, 508, 510, 511, 512], "1070": [2, 21], "oper": [2, 8, 21, 34, 39, 40, 44, 45, 85, 132, 207, 208, 210, 211, 219, 480, 483, 491, 493, 496, 505, 509], "1090": [2, 21], "model": [2, 8, 21, 25, 27, 39, 53, 129, 132, 506, 513], "mrt50h1": [2, 8, 21], "patient": [2, 8, 9, 10, 11, 13, 18, 21, 27, 28, 29, 41, 132, 137, 169, 171, 446, 480, 482, 489, 499, 504, 505, 507], "compressedsampl": [2, 8, 9, 21, 27, 29, 504, 505], "mr1": [2, 8, 10, 21], "4mr1": [2, 8, 18, 21], "birth": [2, 8, 18, 21], "0040": [2, 21], "sex": [2, 8, 21], "1020": [2, 21], "size": [2, 8, 9, 21, 25, 27, 51, 53, 97, 98, 129, 156, 161, 179, 213, 214, 480, 490, 496, 500, 509, 510], "none": [2, 8, 21, 30, 31, 37, 76, 78, 81, 82, 91, 94, 96, 98, 99, 107, 109, 110, 111, 112, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 143, 144, 145, 148, 149, 151, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 170, 171, 172, 175, 176, 177, 178, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 206, 219, 220, 223, 225, 413, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 470, 471, 472, 480, 489, 492, 493, 496, 503, 505, 509, 511], "1030": [2, 21, 480, 494], "weight": [2, 8, 21], "80": [2, 8, 21, 37, 43, 52, 143, 219, 228, 316, 318, 356, 513], "contrast": [2, 8, 10, 11, 21, 507], "bolu": [2, 8, 21], "agent": [2, 8, 21], "scan": [2, 8, 21, 27, 29, 169, 510], "se": [2, 8, 21], "variant": [2, 8, 21], "0023": [2, 13, 21, 27, 28], "3d": [2, 4, 8, 21, 218, 219, 480, 496], "thick": [2, 8, 21], "repetit": [2, 8, 21, 53], "4000": [2, 8, 21], "0081": [2, 21], "echo": [2, 8, 21], "240": [2, 3, 5, 8, 21], "0083": [2, 21], "averag": [2, 8, 21], "0084": [2, 21, 27, 28, 29], "frequenc": [2, 8, 21, 52, 513], "63": [2, 8, 21, 437, 505], "924339": [2, 8, 21], "0085": [2, 21], "nucleu": [2, 8, 21], "h": [2, 8, 13, 21, 23, 25, 27, 28, 29], "0086": [2, 21, 27, 28, 29], "0091": [2, 21], "train": [2, 8, 21], "1000": [2, 21, 52, 513], "devic": [2, 8, 21, 27, 28, 511], "serial": [2, 8, 21, 129, 132, 506], "0000200": [2, 8, 21], "softwar": [2, 8, 21, 40, 48, 509], "v3": [2, 8, 21, 129, 137, 160, 163, 480, 496, 498, 499, 513], "51": [2, 8, 21, 43, 143, 228, 315, 321], "p25": [2, 8, 21], "1314": [2, 21], "flip": [2, 8, 21], "angl": [2, 8, 21], "90": [2, 8, 21, 43, 52, 143, 219, 228, 254, 310, 313, 480, 493], "5100": [2, 21, 41], "posit": [2, 8, 21, 25, 27, 28, 29, 41, 144, 146, 153, 166, 176, 177, 178, 195, 204, 220], "hf": [2, 8, 21, 41], "000d": [2, 21], "000e": [2, 21], "0011": [2, 21, 50, 132, 205, 215, 217, 218, 219], "83": [2, 8, 21], "9063": [2, 8, 21], "91": [2, 8, 21, 43, 143, 219, 228, 309, 313, 341, 480, 485, 493], "2000": [2, 8, 21, 35, 42, 80, 143, 219, 313, 480, 493, 496, 509, 510], "6406": [2, 8, 21], "0037": [2, 21], "0052": [2, 21], "later": [2, 8, 21, 100, 440, 441, 480, 487, 503, 505], "1040": [2, 21], "indic": [2, 8, 21, 35, 44, 50, 98, 129, 132, 480, 487, 503, 504, 505], "1041": [2, 21], "locat": [2, 4, 8, 9, 21, 94, 132, 135, 143, 170, 177, 504, 507, 512], "comment": [2, 8, 21, 503], "lt": [2, 21, 30], "uncompress": [2, 8, 21, 32, 34, 41, 42, 43, 51, 132, 151, 215, 219, 416, 480, 491, 493, 498, 499, 510], "0028": [2, 21, 35, 43, 51, 132, 143, 145, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 480, 493, 495, 505], "sampl": [2, 8, 21, 32, 34, 35, 42, 51, 52, 132, 151, 218, 219, 472, 510, 513], "per": [2, 8, 21, 32, 34, 35, 39, 42, 51, 55, 132, 134, 140, 141, 143, 151, 174, 215, 218, 219, 480, 486, 493, 496, 505, 510], "0004": [2, 11, 21, 27, 28, 29, 35, 51, 132, 169, 171, 212, 215, 217, 219, 480, 493, 507], "photometr": [2, 8, 21, 34, 35, 42, 43, 51, 132, 212, 213, 214, 215, 216, 217, 218, 219, 480, 493, 510], "interpret": [2, 8, 21, 34, 35, 42, 43, 50, 51, 132, 212, 213, 214, 215, 216, 217, 218, 219, 480, 493, 510, 513], "monochrome2": [2, 8, 21, 34, 35, 215, 217, 507], "row": [2, 8, 9, 21, 27, 29, 32, 50, 51, 132, 151, 205, 212, 215, 217, 218, 219, 510], "space": [2, 8, 9, 21, 32, 34, 35, 37, 42, 45, 110, 151, 212, 219, 446, 452, 463, 465, 467, 480, 489, 505, 507], "3125": [2, 8, 21], "0100": [2, 21, 35, 43, 52, 132, 195, 205, 215, 217, 218, 219, 472, 513], "bit": [2, 8, 21, 30, 32, 34, 35, 37, 43, 49, 50, 51, 132, 135, 146, 151, 207, 208, 215, 218, 219, 480, 490, 491, 493, 498, 499, 500, 503, 504, 510, 513], "alloc": [2, 8, 21, 34, 35, 37, 43, 132, 215, 218, 219, 480, 500, 513], "16": [2, 8, 21, 27, 29, 32, 34, 35, 43, 55, 129, 132, 135, 215, 217, 218, 219, 381, 450, 451, 472, 480, 493, 510, 513], "0101": [2, 21, 35, 132, 207, 208, 215, 217, 219], "0102": [2, 21, 35, 195, 205], "high": [2, 8, 21, 34, 35, 37, 112, 480, 493], "15": [2, 8, 21, 393, 505, 513], "0103": [2, 21, 35, 132, 207, 208, 215, 217, 218, 219], "represent": [2, 8, 21, 27, 29, 30, 34, 35, 39, 59, 61, 64, 75, 110, 112, 114, 124, 129, 132, 135, 142, 170, 171, 172, 207, 208, 219, 440, 441, 446, 449, 450, 467, 470, 477, 480, 496, 498, 501, 505, 506, 513], "0106": [2, 21], "smallest": [2, 8, 21], "ss": [2, 4, 21, 27, 29, 30, 180, 181, 472, 480, 482, 513], "0107": [2, 21], "largest": [2, 8, 21], "1050": [2, 21, 210, 211, 219, 505], "center": [2, 8, 21, 210, 211, 219, 505], "600": [2, 8, 21], "1051": [2, 21, 210, 211, 219, 480, 498, 505], "1600": [2, 8, 21], "7fe0": [2, 21, 27, 29, 37, 39, 51, 67, 68, 98, 132, 143, 144, 145, 160, 215, 216, 217, 218, 219, 473, 480, 489, 493, 505], "ow": [2, 21, 27, 29, 30, 50, 52, 188, 459, 480, 484, 495, 500, 505], "arrai": [2, 4, 15, 21, 27, 29, 37, 39, 50, 51, 52, 53, 82, 97, 98, 103, 129, 132, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 439, 480, 481, 491, 492, 495, 496, 505], "128": [2, 9, 13, 21, 27, 29, 133, 137, 153, 166, 176, 177, 178, 182, 195, 326, 363, 505, 510], "element": [2, 11, 13, 17, 18, 19, 21, 25, 26, 27, 28, 29, 34, 36, 37, 38, 41, 45, 49, 50, 51, 52, 53, 55, 67, 77, 78, 80, 82, 84, 85, 93, 94, 97, 98, 101, 102, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 140, 141, 143, 144, 145, 151, 158, 159, 160, 161, 162, 171, 178, 179, 180, 181, 182, 195, 197, 198, 205, 213, 215, 217, 218, 219, 222, 223, 438, 440, 441, 442, 443, 444, 446, 448, 449, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 477, 480, 481, 482, 483, 484, 485, 486, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 504, 507, 510, 513], "fffc": [2, 21, 27, 29, 505], "trail": [2, 8, 21, 27, 29, 142, 205, 219, 452, 463, 465, 467, 480, 489, 505], "pad": [2, 3, 8, 21, 27, 29, 140, 142, 144, 200, 205, 219, 480, 490, 492, 493, 496, 498, 499, 505], "126": [2, 21, 27, 29, 505, 513], "author": [2, 8, 9, 12, 13, 17, 18, 21, 23], "guillaum": [2, 8, 9, 12, 13, 17, 18, 21, 23], "lemaitr": [2, 8, 9, 12, 13, 17, 18, 21, 23], "g": [2, 8, 9, 12, 13, 17, 18, 21, 23, 25, 27, 28, 32, 34, 35, 37, 39, 40, 41, 48, 50, 51, 55, 85, 97, 129, 132, 135, 151, 160, 182, 204, 205, 218, 219, 220, 440, 445, 446, 480, 483, 490, 492, 496, 505], "lemaitre58": [2, 8, 9, 12, 13, 17, 18, 21, 23], "gmail": [2, 8, 9, 12, 13, 17, 18, 21, 23], "licens": [2, 8, 9, 12, 13, 17, 18, 21, 23, 480, 482, 483, 504], "mit": [2, 8, 9, 12, 13, 17, 18, 21, 23, 41, 480, 482, 483], "get_testdata_fil": [2, 3, 8, 9, 10, 11, 12, 18, 21, 34, 39, 41, 42, 44, 49, 50, 51, 52, 132, 171, 477, 480, 496, 498, 499, 504, 505, 506, 507, 510, 513], "fixm": 2, "test": [2, 10, 13, 17, 25, 27, 28, 29, 39, 44, 89, 109, 110, 111, 132, 451, 480, 481, 487, 489, 493, 496, 498, 500, 512], "mr_small": [2, 8, 11, 18, 21, 51, 507], "get": [2, 9, 10, 11, 15, 17, 27, 28, 30, 37, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 93, 98, 132, 157, 169, 219, 477, 480, 483, 484, 492, 496, 498, 503, 504, 508, 509, 510, 512], "pixel_arrai": [2, 4, 9, 34, 37, 39, 42, 43, 45, 49, 132, 480, 482, 493], "shape": [2, 4, 50, 51, 52, 97, 132, 151, 205, 212, 213, 214, 217, 219, 472, 510, 513], "data_downsampl": 2, "copi": [2, 11, 43, 53, 132, 171, 480, 486, 496, 499, 503, 504, 507, 509], "back": [2, 15, 21, 34, 37, 41, 50, 51, 53, 503, 504, 505, 507], "origin": [2, 11, 21, 25, 27, 29, 35, 42, 43, 44, 50, 53, 89, 132, 162, 171, 182, 215, 437, 440, 441, 443, 444, 446, 503, 504, 505, 510, 513], "pixeldata": [2, 34, 39, 42, 51, 53, 138, 140, 141, 219, 480, 492, 493, 510], "tobyt": [2, 51, 513], "updat": [2, 11, 17, 19, 21, 27, 28, 34, 48, 50, 109, 110, 111, 112, 132, 169, 171, 180, 181, 182, 195, 480, 482, 483, 485, 486, 488, 489, 490, 491, 493, 495, 496, 498, 499, 500, 503, 504, 507, 509, 510, 512], "regard": 2, "given": [2, 12, 25, 27, 28, 29, 30, 43, 51, 52, 77, 79, 129, 130, 132, 135, 137, 160, 162, 169, 171, 182, 205, 215, 217, 218, 219, 222, 440, 441, 446, 466, 472, 480, 495, 498, 505, 507, 509, 510, 512, 513], "006": [2, 5, 8, 14], "plot_downsize_imag": [2, 5], "matplotlib": [3, 4, 9, 45, 513], "np": [3, 4, 205, 206, 207, 208, 209, 210, 211, 215, 217, 218, 219, 472, 510, 513], "pyplot": [3, 4, 9, 49, 513], "plt": [3, 4, 9, 49, 513], "generate_multiplex": [3, 132, 472, 480, 496, 513], "fpath": [3, 9, 50, 52, 504, 505, 513], "waveform_ecg": [3, 52, 513], "first": [3, 21, 27, 29, 34, 35, 37, 39, 40, 41, 44, 47, 48, 51, 53, 76, 77, 79, 97, 98, 107, 132, 143, 144, 146, 166, 171, 179, 219, 446, 480, 491, 492, 493, 502, 503, 504, 507, 512, 513], "channel": [3, 21, 35, 51, 52, 132, 215, 472, 513], "each": [3, 10, 11, 21, 32, 34, 35, 38, 39, 42, 50, 51, 52, 77, 132, 140, 141, 143, 144, 146, 147, 148, 151, 172, 173, 204, 212, 218, 219, 446, 472, 480, 495, 498, 503, 505, 507, 510, 513], "multiplex": [3, 52, 132, 472, 480, 496, 513], "ch_idx": 3, "we": [3, 11, 18, 19, 25, 27, 29, 34, 43, 46, 93, 132, 157, 502, 503, 504, 505, 507, 509, 510, 512, 513], "could": [3, 17, 25, 26, 27, 39, 51, 53, 76, 77, 79, 204, 213, 480, 483, 484, 498, 503, 504], "also": [3, 18, 27, 28, 29, 30, 32, 37, 39, 41, 44, 47, 49, 51, 53, 78, 119, 132, 151, 166, 195, 446, 480, 481, 482, 483, 484, 487, 488, 491, 492, 496, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513], "waveform_arrai": [3, 45, 132, 480, 496, 513], "fig": [3, 513], "ax": [3, 44], "subplot": [3, 4, 513], "waveformsequ": [3, 52, 513], "as_raw": [3, 52, 472, 480, 500, 513], "mplx": 3, "arr": [3, 37, 39, 42, 50, 51, 52, 132, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 510, 513], "zip": [3, 6, 480, 492, 513], "nr_channel": 3, "numberofwaveformchannel": [3, 52, 472, 513], "nr_sampl": 3, "numberofwaveformsampl": [3, 472, 513], "sampling_fq": 3, "samplingfrequ": [3, 52, 513], "hz": [3, 52, 513], "mplx_label": 3, "multiplexgrouplabel": [3, 513], "ch_item": 3, "channeldefinitionsequ": [3, 513], "arang": [3, 513], "x_unit": 3, "channelsensitivityunitssequ": [3, 513], "1c": [3, 182, 195, 215, 217, 218, 219, 513], "so": [3, 27, 28, 30, 32, 37, 39, 40, 48, 50, 51, 53, 93, 132, 171, 173, 182, 202, 439, 480, 481, 484, 503, 505, 506, 507, 510, 513], "check": [3, 13, 39, 40, 48, 116, 117, 119, 120, 122, 126, 127, 132, 134, 136, 151, 174, 182, 195, 221, 439, 451, 480, 486, 489, 491, 492, 495, 496, 498, 503, 504, 509, 513], "y_unit": 3, "codemean": [3, 513], "unitless": [3, 51, 472, 513], "descript": [3, 17, 21, 26, 27, 28, 31, 38, 39, 41, 44, 109, 110, 111, 112, 115, 125, 129, 135, 480, 481, 482, 495, 499], "ch_sourc": 3, "channelsourcesequ": [3, 513], "set_titl": 3, "set_xlabel": 3, "set_ylabel": [3, 513], "tight_layout": 3, "plot_waveform": [3, 5], "multipl": [4, 30, 32, 35, 39, 50, 51, 78, 110, 112, 113, 123, 129, 132, 143, 145, 146, 151, 209, 210, 211, 212, 219, 220, 446, 466, 480, 493, 499, 505], "sort": [4, 11, 132, 507], "them": [4, 8, 25, 27, 28, 29, 32, 37, 38, 39, 43, 44, 50, 53, 132, 182, 455, 457, 480, 488, 492, 496, 504, 505, 507, 512], "build": [4, 137, 480, 489, 500, 503], "reslic": [4, 5], "differ": [4, 6, 13, 18, 22, 26, 27, 29, 30, 34, 38, 44, 48, 51, 480, 483, 495, 503, 504, 505, 506, 507, 512], "plane": [4, 21, 35, 51, 205, 219], "glob": [4, 11, 105, 106, 108, 507], "fname": [4, 51], "recurs": [4, 44, 132, 480, 482, 484], "append": [4, 12, 19, 21, 39, 142, 204, 220, 437, 505, 513], "count": 4, "skip": [4, 19, 480, 499, 503], "sliceloc": [4, 9, 27, 29], "eg": 4, "scout": [4, 21], "view": [4, 10, 11, 21, 34, 39, 41, 45, 51, 209, 210, 211, 219, 480, 481, 483, 504, 507, 513], "skipcount": 4, "hasattr": 4, "ensur": [4, 30, 34, 40, 42, 44, 48, 96, 132, 160, 171, 182, 204, 219, 440, 441, 480, 486, 489, 498, 500, 503], "thei": [4, 37, 39, 44, 48, 50, 51, 76, 88, 98, 182, 195, 480, 498, 503, 504, 505, 507, 509, 510, 512], "ar": [4, 11, 19, 25, 27, 28, 29, 34, 35, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 53, 55, 76, 77, 81, 82, 85, 94, 97, 98, 102, 103, 109, 111, 112, 129, 132, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 151, 160, 166, 169, 171, 174, 180, 181, 182, 195, 204, 206, 207, 208, 210, 211, 213, 214, 218, 219, 220, 222, 445, 446, 450, 465, 468, 470, 480, 486, 491, 492, 493, 495, 496, 498, 499, 501, 502, 503, 504, 505, 507, 509, 510, 511, 512, 513], "correct": [4, 21, 25, 27, 34, 35, 40, 42, 43, 48, 50, 52, 76, 80, 98, 132, 160, 176, 180, 181, 204, 217, 219, 480, 490, 491, 493, 498, 499, 503, 505, 510, 513], "aspect": 4, "assum": [4, 26, 27, 42, 51, 89, 144, 480, 489, 507, 510, 513], "all": [4, 6, 8, 10, 13, 18, 21, 25, 27, 28, 29, 35, 38, 39, 40, 42, 45, 46, 53, 68, 97, 98, 111, 129, 132, 134, 137, 138, 139, 140, 142, 144, 146, 151, 157, 160, 171, 173, 180, 181, 182, 204, 220, 228, 480, 481, 482, 483, 486, 488, 491, 493, 496, 498, 499, 500, 503, 504, 505, 509, 510, 512], "same": [4, 32, 39, 40, 41, 48, 50, 110, 132, 171, 204, 440, 441, 480, 484, 486, 504, 505, 507, 512], "p": [4, 10, 11, 23, 25, 27, 55, 446, 480, 486, 503, 507, 512], "pixelspac": [4, 9], "slicethick": 4, "ax_aspect": 4, "sag_aspect": 4, "cor_aspect": 4, "creat": [4, 13, 15, 19, 25, 26, 27, 28, 39, 40, 44, 49, 53, 88, 129, 130, 132, 151, 158, 169, 170, 171, 172, 204, 223, 437, 438, 439, 442, 444, 446, 477, 480, 483, 485, 498, 500, 505, 508, 509, 510, 511, 513], "img_shap": 4, "list": [4, 6, 7, 8, 10, 11, 14, 21, 27, 29, 30, 32, 34, 39, 41, 42, 48, 76, 77, 78, 79, 97, 98, 105, 106, 108, 129, 130, 132, 138, 140, 141, 146, 151, 158, 160, 161, 165, 167, 171, 172, 189, 193, 194, 198, 199, 201, 204, 205, 220, 437, 445, 446, 454, 455, 456, 457, 460, 461, 462, 463, 466, 467, 470, 471, 477, 480, 483, 486, 487, 493, 496, 498, 499, 504, 505, 507, 509, 510, 512], "img3d": 4, "zero": [4, 21, 30, 51, 132, 179, 480, 500, 505, 510], "img2d": 4, "orthogon": 4, "a1": 4, "imshow": [4, 9, 49], "set_aspect": 4, "a2": 4, "a3": 4, "t": [4, 8, 11, 13, 19, 21, 27, 28, 29, 30, 35, 37, 39, 48, 50, 53, 84, 132, 143, 151, 161, 171, 205, 212, 215, 218, 219, 413, 437, 480, 492, 495, 496, 503, 504, 505, 506, 507, 510], "00": [5, 14, 20, 22, 146], "246": 5, "execut": [5, 14, 20, 22, 446, 503, 512], "auto_examples_image_process": 5, "mb": [5, 14, 20, 22, 160, 472], "imag": [5, 8, 9, 10, 11, 13, 18, 21, 27, 29, 32, 41, 42, 44, 45, 50, 51, 132, 137, 141, 142, 143, 144, 146, 169, 171, 206, 212, 213, 215, 216, 217, 218, 219, 480, 483, 490, 492, 496, 498, 505, 507, 509, 510], "somewher": [6, 41], "start": [6, 18, 19, 21, 25, 27, 28, 29, 41, 50, 53, 129, 135, 144, 146, 159, 166, 172, 173, 178, 437, 461, 469, 480, 490, 500, 503, 504, 505, 506, 511, 512], "analys": [6, 22], "between": [6, 22, 34, 37, 48, 50, 51, 110, 205, 503, 504, 505, 512], "displai": [6, 21, 22, 27, 28, 29, 34, 39, 45, 49, 101, 129, 132, 480, 481, 487, 492, 498, 503, 513], "person": [6, 18, 22, 30, 37, 446, 480, 491, 498, 511], "work": [6, 10, 16, 17, 20, 22, 26, 27, 28, 32, 37, 39, 40, 41, 43, 44, 45, 53, 171, 480, 481, 483, 484, 486, 487, 488, 490, 492, 496, 503, 504, 505, 509, 511, 512, 513], "memori": [6, 22, 133, 160, 161, 162, 179, 212, 215, 219, 480, 483, 491, 492, 493, 507], "base": [6, 22, 34, 35, 41, 68, 70, 81, 132, 150, 438, 442, 448, 477, 480, 483, 489, 493, 496, 503, 504, 507, 510, 512, 513], "hierarch": [6, 22, 143, 219, 480, 493], "tree": [6, 22, 39, 172, 480, 487, 505], "rtplan": [6, 7, 14, 25, 27, 28, 29, 39, 41, 160], "format": [6, 7, 12, 13, 14, 21, 25, 27, 28, 29, 30, 32, 39, 40, 41, 43, 129, 132, 140, 141, 142, 144, 160, 182, 197, 215, 218, 440, 441, 446, 466, 480, 481, 482, 483, 489, 492, 498, 499, 505, 507, 509], "write": [6, 7, 11, 14, 15, 18, 25, 27, 36, 38, 40, 44, 45, 55, 70, 94, 132, 133, 156, 157, 171, 182, 184, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 440, 441, 477, 480, 482, 484, 489, 490, 492, 494, 495, 496, 498, 499, 504, 506, 507, 508], "dicomdir": [6, 7, 11, 14, 38, 160, 163, 165, 169, 171, 172, 477, 480, 488, 492, 493, 496, 499, 500, 508], "modifi": [6, 16, 38, 41, 50, 51, 53, 107, 132, 171, 480, 493, 496, 508], "dictionari": [6, 16, 20, 39, 84, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 137, 161, 194, 413, 477, 480, 482, 483, 485, 488, 489, 490, 491, 492, 493, 496, 498, 499, 506, 511], "item": [6, 8, 9, 16, 20, 21, 25, 27, 28, 29, 30, 37, 39, 52, 53, 129, 132, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 168, 175, 199, 204, 220, 480, 481, 482, 483, 486, 489, 492, 493, 498, 499, 505, 507, 513], "standard": [6, 13, 16, 20, 21, 23, 30, 34, 35, 37, 40, 42, 44, 48, 51, 52, 55, 129, 132, 135, 140, 142, 143, 144, 145, 146, 148, 171, 182, 195, 199, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 219, 223, 440, 441, 444, 446, 480, 482, 485, 486, 488, 489, 496, 498, 506, 507, 510, 513], "anonym": [6, 16, 20, 39, 44, 480, 481, 482, 492], "auto_examples_python": 6, "auto_examples_jupyt": 6, "your": [8, 11, 15, 24, 26, 27, 28, 32, 34, 35, 39, 41, 44, 45, 48, 53, 96, 140, 141, 171, 502, 505, 506, 507, 509, 512, 513], "own": [8, 25, 26, 27, 28, 39, 41, 44, 48, 53, 132, 171, 182, 480, 490, 500, 505, 507, 510, 512, 513], "840": [8, 9, 13, 25, 27, 42, 43, 51, 132, 143, 150, 152, 182, 215, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 480, 490, 491, 493, 495, 496, 503, 505], "10008": [8, 9, 13, 25, 27, 42, 43, 51, 132, 143, 150, 152, 182, 215, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 480, 490, 491, 493, 495, 496, 503, 505], "don": [8, 11, 19, 27, 28, 29, 39, 53, 503, 504, 506, 507, 510], "xfe": 8, "x04": [8, 51], "myprint": [8, 480, 481], "through": [8, 10, 18, 37, 39, 41, 44, 51, 132, 164, 178, 180, 480, 481, 482, 503, 504, 505, 509, 511, 512], "_pretty_str": [8, 505], "dont_print": 8, "indent_str": 8, "next_indent_str": 8, "sequence_item": 8, "repr_valu": 8, "repr": [8, 39, 101, 480, 495], "50": [8, 43, 51, 52, 143, 219, 228, 314, 321, 339, 413], "plot_printing_dataset": [8, 14], "some": [9, 13, 15, 18, 27, 29, 37, 39, 40, 44, 46, 48, 49, 50, 51, 52, 53, 55, 76, 89, 100, 132, 133, 137, 151, 165, 182, 440, 441, 450, 480, 481, 482, 484, 486, 489, 490, 500, 504, 505, 506, 507, 509, 511, 512], "path": [9, 10, 11, 25, 27, 28, 29, 32, 37, 42, 43, 47, 105, 106, 107, 108, 133, 137, 151, 160, 163, 170, 171, 174, 202, 480, 496, 503, 504, 505, 507, 510, 512], "project": [9, 10, 11, 21, 97, 98, 502, 503, 504, 509, 512], "src": [9, 10, 11, 31, 32, 97, 98, 151, 219, 507, 510], "test_fil": [9, 10, 11, 25, 27, 504, 505, 507], "ct_small": [9, 11, 21, 27, 29, 34, 39, 42, 44, 49, 51, 132, 160, 171, 504, 505, 506, 507, 510], "ct1": [9, 21, 27, 29, 504, 505], "1ct1": [9, 21, 27, 29, 507], "20040119": [9, 21, 27, 29, 505], "661468": [9, 21], "77": [9, 21, 25, 27, 28, 29, 39, 265, 350, 351, 352, 353, 355, 404, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428], "2040634155": [9, 21, 27, 29], "normal": [9, 21, 26, 27, 28, 39, 512], "mode": [9, 21, 27, 29, 83, 86, 87, 480, 493, 503, 509], "sopclassuid": [9, 25, 27, 29, 170, 505, 513], "pat_nam": 9, "patientnam": [9, 10, 11, 13, 15, 27, 29, 39, 41, 84, 85, 129, 132, 160, 169, 171, 223, 480, 492, 504, 505, 507], "family_comma_given": [9, 446], "patientid": [9, 10, 11, 13, 15, 18, 27, 29, 39, 132, 169, 171, 505, 507], "studyd": [9, 10, 11, 25, 27, 28, 29, 507], "sure": [9, 10, 43, 53, 503, 505, 509], "exist": [9, 32, 34, 37, 39, 40, 48, 53, 110, 132, 162, 171, 182, 195, 480, 500, 502, 503, 504, 510], "want": [9, 11, 15, 25, 26, 27, 40, 53, 173, 503, 504, 505, 506, 507, 509, 512], "default": [9, 25, 27, 30, 32, 40, 43, 49, 50, 51, 55, 76, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 129, 132, 133, 136, 137, 140, 142, 148, 151, 158, 160, 161, 163, 171, 173, 182, 195, 205, 209, 210, 211, 212, 215, 217, 218, 219, 437, 445, 446, 455, 457, 461, 472, 480, 484, 486, 487, 489, 491, 492, 493, 494, 495, 496, 498, 504, 505, 506, 507, 510, 512], "miss": [9, 17, 32, 48, 107, 132, 136, 151, 160, 166, 180, 182, 195, 205, 206, 215, 217, 218, 219, 480, 488, 489, 492, 493, 499, 501, 503, 505, 507, 509], "cmap": [9, 49], "cm": [9, 12, 49], "grai": 9, "095": [9, 14, 21], "plot_read_dicom": [9, 14], "fileset": [10, 11, 137, 160, 477, 480, 496, 498, 499, 501], "much": [10, 39, 48, 450, 480, 483, 486, 487, 495], "better": [10, 37, 480, 484, 486, 490], "wai": [10, 39, 40, 41, 47, 48, 50, 51, 53, 132, 480, 486, 502, 505, 506, 507, 509, 511], "allow": [10, 18, 25, 27, 28, 32, 35, 39, 40, 44, 48, 50, 55, 88, 132, 134, 169, 171, 219, 444, 480, 482, 483, 492, 495, 496, 498, 499, 500, 503, 509, 512], "modif": [10, 133, 503, 505, 507], "tutori": [10, 32, 37, 480, 493, 502, 503, 504, 505, 507, 509, 510, 512, 513], "directori": [10, 11, 41, 137, 160, 169, 170, 171, 172, 174, 480, 481, 499, 503, 504, 507, 509, 512], "dicomdirtest": [10, 11, 507], "77654033": [10, 11, 507], "doe": [10, 11, 13, 44, 48, 50, 51, 53, 89, 97, 98, 110, 132, 153, 162, 188, 213, 450, 480, 496, 507], "archibald": [10, 11, 507], "studyid": [10, 27, 29], "20010101": [10, 11, 132, 507], "studydescript": [10, 11, 27, 29, 171, 507], "xr": [10, 11, 507], "spine": [10, 11, 507], "comp": [10, 11, 21, 27, 29, 507], "min": [10, 11, 207, 208, 219, 507], "seriesnumb": [10, 11, 39, 507], "cr": [10, 11, 219, 507], "seriesdescript": 10, "cr1": [10, 507], "6154": [10, 507], "cr2": [10, 507], "6247": [10, 507], "cr3": [10, 507], "6278": [10, 507], "19950903": [10, 11, 507], "head": [10, 11, 37, 41, 507], "brain": [10, 11, 507], "wo": [10, 11, 507], "ct2": [10, 507], "17106": [10, 507], "17136": [10, 507], "17166": [10, 507], "17196": [10, 507], "98890234": [10, 11, 507], "peter": [10, 11, 507], "98892001": [10, 507], "ct2n": 10, "6293": 10, "6924": 10, "ct5n": 10, "2062": 10, "2392": 10, "2693": 10, "3023": 10, "3353": 10, "428": 10, "20030505": [10, 11, 507], "carotid": [10, 11, 507], "98892003": [10, 507], "15820": 10, "mr2": 10, "15970": 10, "134": 10, "4919": 10, "4950": 10, "5011": 10, "4981": 10, "mra": [10, 11, 507], "5641": 10, "6935": 10, "6605": 10, "6273": 10, "700": [10, 11, 480, 491, 507], "7": [10, 11, 21, 24, 25, 27, 28, 35, 39, 51, 131, 135, 140, 148, 171, 195, 199, 212, 215, 219, 250, 265, 274, 275, 342, 343, 344, 345, 349, 351, 371, 388, 395, 396, 400, 429, 487, 491, 500, 503, 504, 505, 507, 512, 513], "mr700": 10, "4558": 10, "4528": 10, "4588": 10, "4467": 10, "4618": 10, "4678": 10, "4648": 10, "o": [10, 13, 21, 23, 71, 73], "pathlib": [10, 11, 174, 507], "fetch": 10, "root_dir": 10, "resolv": [10, 130, 180, 480, 486, 492], "iter": [10, 11, 18, 39, 132, 151, 158, 172, 173, 180, 183, 204, 217, 220, 225, 480, 482, 490, 507], "record": [10, 11, 21, 137, 169, 170, 171, 172, 480, 493, 499, 507], "patient_record": 10, "find": [10, 11, 18, 21, 24, 26, 27, 48, 93, 132, 164, 171, 176, 177, 178, 503, 504, 505, 507, 511, 513], "ii": [10, 505, 513], "children": [10, 172], "directoryrecordtyp": [10, 169, 171], "descr": 10, "all_seri": 10, "plural": [10, 11], "getattr": 10, "absolut": [10, 105, 106, 107, 108, 170, 171], "contain": [10, 11, 25, 27, 30, 32, 35, 36, 37, 38, 39, 40, 44, 50, 51, 52, 53, 55, 76, 78, 97, 129, 131, 132, 134, 142, 143, 144, 145, 146, 151, 160, 161, 169, 176, 180, 181, 182, 195, 198, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 223, 446, 451, 455, 457, 472, 480, 488, 491, 498, 503, 505, 507, 513], "rel": [10, 174], "elem": [10, 37, 39, 50, 78, 129, 132, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 200, 201, 205, 221, 222, 224, 480, 483, 505], "referencedfileid": 10, "make": [10, 35, 39, 40, 41, 44, 46, 48, 53, 132, 133, 437, 450, 480, 483, 492, 498, 505, 507, 509, 512], "alwai": [10, 27, 29, 43, 51, 121, 129, 135, 160, 215, 219, 480, 492, 496, 498], "ee": 10, "vm": [10, 17, 30, 39, 62, 109, 110, 111, 112, 113, 119, 120, 123, 129, 480, 484, 492, 495, 505], "fspath": 10, "correspond": [10, 11, 18, 32, 34, 37, 39, 50, 51, 52, 76, 107, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 132, 135, 140, 141, 151, 152, 162, 170, 171, 172, 205, 206, 219, 223, 472, 480, 498, 503, 504, 507, 510, 513], "012": [10, 14], "plot_read_dicom_directori": [10, 14], "interact": [11, 39, 41, 44, 132, 507], "pydicom_test": [11, 507], "276": [11, 507], "7230010": [11, 507], "31906": [11, 507], "1359940846": [11, 507], "78187": [11, 507], "descriptor": [11, 44, 171, 206, 207, 208, 209, 210, 219, 480, 493, 495, 507], "charact": [11, 21, 27, 29, 30, 37, 40, 44, 55, 76, 77, 78, 79, 89, 129, 130, 132, 135, 160, 161, 171, 172, 173, 174, 182, 197, 198, 199, 437, 446, 450, 451, 455, 457, 460, 461, 467, 470, 471, 477, 480, 481, 482, 489, 491, 492, 495, 496, 498, 499, 500, 503, 505, 506, 507], "stage": [11, 170, 171, 503, 504], "structur": [11, 27, 28, 39, 41, 137, 169, 171, 172, 480, 493, 500, 501, 505, 507, 508], "manag": [11, 32, 44, 160, 171, 480, 489, 496, 505, 507, 508, 509], "studytim": [11, 25, 27, 29, 507], "000000": [11, 21, 507], "173032": [11, 507], "050743": [11, 507], "025109": [11, 507], "045357": [11, 507], "found": [11, 50, 51, 52, 107, 132, 151, 160, 166, 171, 176, 179, 505, 507, 510], "seriesinstanceuid": 11, "1196533885": 11, "18148": 11, "118": 11, "photometricinterpret": [11, 34, 42, 215, 217, 219, 507, 510], "monochrome1": [11, 34, 35, 215, 217, 507], "without": [11, 39, 43, 52, 107, 132, 153, 164, 177, 219, 452, 463, 465, 466, 480, 482, 490, 492, 496, 499, 500, 505, 507, 509, 512], "still": [11, 42, 44, 480, 486, 487, 489, 490, 491, 493, 503, 505, 506, 507, 510], "tmp": [11, 13, 507], "tmp57jjliav": 11, "follow": [11, 26, 27, 28, 29, 32, 35, 37, 39, 40, 42, 43, 46, 48, 51, 129, 132, 136, 143, 144, 146, 151, 171, 179, 182, 195, 218, 446, 480, 493, 496, 498, 503, 504, 505, 507, 511, 512, 513], "pt000000": [11, 507], "st000000": [11, 507], "se000000": [11, 507], "im000000": [11, 507], "se000001": [11, 507], "se000002": [11, 507], "st000001": [11, 507], "im000001": [11, 507], "im000002": [11, 507], "im000003": [11, 507], "pt000001": [11, 507], "im000004": 11, "st000002": 11, "st000003": 11, "im000005": 11, "im000006": 11, "pt000002": [11, 507], "pt000003": 11, "tempfil": [11, 13, 18, 507], "temporarydirectori": [11, 507], "warn": [11, 37, 40, 53, 55, 76, 77, 79, 84, 85, 219, 477, 480, 482, 486, 490, 491, 492, 493, 495, 498, 499, 501, 503, 504], "generate_uid": [11, 34, 171, 480, 492], "filterwarn": 11, "ignor": [11, 40, 55, 76, 84, 85, 112, 129, 132, 175, 467, 477, 480, 494, 498, 501, 504], "A": [11, 21, 29, 32, 34, 35, 37, 38, 39, 42, 53, 76, 77, 89, 97, 105, 106, 108, 132, 140, 142, 143, 144, 145, 146, 148, 150, 151, 158, 161, 169, 171, 172, 173, 174, 182, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 437, 446, 460, 467, 470, 471, 480, 490, 498, 503, 505, 507, 510], "its": [11, 25, 26, 27, 28, 30, 32, 34, 35, 39, 40, 82, 129, 132, 146, 171, 172, 179, 182, 204, 205, 213, 214, 215, 216, 217, 218, 472, 480, 491, 496, 505, 507, 512], "itself": [11, 17, 34, 37, 39, 44, 107, 480, 496, 503, 504, 507], "summari": [11, 26, 27, 503], "content": [11, 13, 15, 21, 39, 55, 132, 143, 205, 215, 216, 217, 218, 219, 504, 505, 507, 510], "seen": [11, 26, 27, 89, 504, 513], "when": [11, 24, 25, 26, 27, 28, 30, 32, 34, 35, 37, 39, 42, 44, 47, 50, 51, 53, 80, 84, 85, 89, 93, 94, 98, 132, 140, 141, 143, 145, 146, 151, 153, 165, 171, 180, 181, 207, 208, 209, 210, 211, 218, 219, 220, 223, 225, 437, 446, 480, 482, 483, 484, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 507, 509, 510, 512, 513], "over": [11, 21, 27, 28, 47, 50, 505, 507], "yield": [11, 39, 132, 142, 143, 144, 145, 148, 151, 158, 172, 173, 217, 472, 505, 507, 510, 513], "fileinst": [11, 171, 172, 477, 507], "object": [11, 15, 32, 37, 39, 41, 44, 49, 85, 100, 104, 129, 132, 133, 135, 150, 156, 157, 160, 161, 162, 165, 166, 169, 171, 182, 204, 219, 220, 221, 224, 446, 477, 480, 482, 483, 492, 493, 495, 498, 499, 505, 507, 513], "do": [11, 15, 26, 27, 32, 38, 40, 43, 47, 48, 49, 50, 51, 53, 93, 132, 171, 182, 188, 220, 480, 486, 492, 498, 503, 504, 505, 507, 510, 511, 513], "someth": [11, 15, 24, 26, 27, 37, 50, 132, 503], "search": [11, 48, 107, 143, 171, 176, 177, 178, 480, 498, 505, 507], "patient_id": 11, "find_valu": [11, 171, 507], "return": [11, 12, 15, 32, 35, 37, 39, 44, 50, 51, 52, 76, 77, 79, 80, 90, 91, 97, 98, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 137, 138, 139, 140, 141, 144, 146, 147, 149, 151, 152, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 194, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 413, 437, 439, 440, 441, 444, 445, 446, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 480, 481, 482, 483, 484, 490, 491, 492, 493, 495, 496, 498, 499, 505, 506, 507, 512, 513], "where": [11, 32, 35, 39, 40, 50, 51, 52, 55, 109, 111, 132, 135, 140, 156, 162, 169, 171, 176, 177, 207, 208, 219, 480, 482, 491, 492, 493, 503, 504, 505, 507, 512], "one": [11, 17, 25, 27, 32, 35, 39, 43, 51, 52, 53, 83, 86, 87, 109, 111, 129, 132, 133, 137, 139, 140, 141, 142, 143, 144, 146, 151, 162, 164, 169, 171, 172, 173, 179, 183, 197, 206, 212, 219, 440, 441, 480, 486, 489, 499, 503, 505, 507, 509, 511, 512, 513], "repres": [11, 32, 39, 51, 102, 129, 132, 144, 160, 182, 222, 444, 446, 450, 503, 513], "match": [11, 42, 43, 48, 51, 84, 93, 105, 106, 107, 108, 132, 162, 169, 171, 205, 213, 215, 218, 446, 480, 486, 489, 496, 505, 507, 510, 513], "result": [11, 18, 25, 26, 27, 28, 34, 40, 42, 53, 77, 79, 132, 182, 222, 437, 480, 498, 503, 504, 510], "study_uid": 11, "studyinstanceuid": 11, "series_uid": 11, "Of": 11, "cours": [11, 510], "you": [11, 13, 15, 19, 24, 25, 26, 27, 28, 29, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 50, 51, 52, 53, 93, 140, 141, 160, 165, 169, 171, 173, 219, 480, 493, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513], "just": [11, 13, 15, 26, 27, 28, 29, 39, 44, 53, 89, 129, 132, 158, 480, 492, 496, 503, 504, 505, 507, 512], "directli": [11, 32, 39, 53, 129, 151, 439, 506, 507, 511], "know": [11, 35, 39, 44, 505, 506, 507], "what": [11, 30, 35, 38, 44, 50, 171, 182, 505, 507, 510, 512], "nfound": 11, "actual": [11, 21, 26, 27, 32, 35, 39, 42, 50, 129, 132, 151, 171, 182, 205, 215, 218, 503, 507], "onli": [11, 17, 25, 27, 28, 29, 37, 39, 40, 41, 43, 46, 50, 51, 53, 55, 80, 97, 98, 110, 112, 113, 114, 115, 117, 118, 119, 120, 128, 132, 134, 136, 137, 143, 146, 151, 160, 164, 171, 173, 180, 181, 182, 195, 215, 219, 223, 444, 451, 480, 486, 488, 489, 490, 491, 492, 493, 495, 496, 498, 503, 505, 506, 507, 510, 512], "limit": [11, 27, 28, 34, 41, 42, 45, 51, 171, 450, 451, 480, 486, 492, 496, 511], "subset": [11, 25, 27], "howev": [11, 26, 27, 30, 32, 34, 35, 39, 42, 46, 143, 144, 146, 204, 444, 503, 504, 505, 507, 510, 512], "less": [11, 34, 35, 48, 157, 513], "effici": [11, 158, 171, 219, 450, 513], "result_load": 11, "remov": [11, 13, 18, 39, 40, 45, 129, 132, 137, 151, 160, 163, 170, 171, 172, 219, 480, 489, 490, 491, 492, 495, 496, 497, 498, 499, 500, 501, 503, 505, 512], "To": [11, 25, 27, 29, 34, 39, 40, 41, 43, 50, 52, 53, 153, 158, 182, 480, 486, 491, 496, 503, 504, 505, 507, 509, 512, 513], "edit": [11, 53, 480, 490, 491, 493, 503, 504, 509], "identif": 11, "modul": [11, 26, 27, 32, 34, 40, 47, 49, 51, 52, 85, 94, 97, 98, 132, 151, 197, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 472, 477, 480, 481, 487, 488, 491, 496, 498, 499, 501, 505, 507, 510, 512, 513], "part": [11, 28, 29, 30, 34, 35, 37, 40, 44, 47, 51, 52, 112, 129, 132, 135, 140, 142, 143, 144, 145, 146, 148, 160, 174, 180, 181, 182, 195, 199, 205, 207, 208, 209, 210, 211, 212, 215, 218, 219, 446, 480, 483, 486, 498, 503, 504, 505, 506, 507, 510, 513], "annex": [11, 34, 35, 51, 52, 129, 132, 140, 142, 143, 144, 145, 146, 148, 169, 207, 208, 209, 210, 211, 212, 215, 218, 219, 507], "properti": [11, 15, 39, 48, 55, 129, 132, 151, 170, 171, 172, 220, 222, 413, 446, 480, 481, 483, 486, 489, 490, 496, 507], "1130": [11, 21], "my": [11, 44, 132, 171, 506], "1141": 11, "descriptor_file_id": [11, 171, 507], "readm": 11, "1142": 11, "specif": [11, 21, 25, 27, 28, 29, 32, 33, 37, 39, 42, 44, 50, 51, 53, 76, 77, 78, 79, 132, 137, 160, 161, 171, 176, 182, 199, 445, 480, 481, 483, 489, 491, 492, 495, 496, 503, 504, 505, 506, 507, 510], "descriptor_character_set": [11, 171, 507], "iso_ir": [11, 21, 27, 29, 44, 78, 505, 506, 507], "100": [11, 21, 25, 27, 29, 44, 52, 228, 329, 335, 505, 506, 507, 513], "until": [11, 160, 161, 165, 176, 179, 480, 481, 486, 498, 507, 512], "call": [11, 26, 27, 39, 40, 42, 47, 48, 50, 53, 81, 85, 91, 132, 144, 158, 171, 178, 204, 439, 480, 483, 486, 490, 496, 505, 507, 510], "meet": [11, 32, 142, 151, 480, 486], "semant": [11, 37, 171, 446, 507], "re": [11, 38, 50, 367, 368, 502, 503, 504, 505, 507, 509, 510, 512, 513], "here": [11, 13, 25, 27, 29, 32, 38, 41, 44, 48, 49, 100, 151, 178, 504, 505, 506, 507, 511, 512], "becaus": [11, 25, 27, 34, 37, 39, 41, 42, 50, 51, 53, 153, 171, 503, 504, 505, 512], "would": [11, 25, 26, 27, 28, 34, 40, 53, 55, 440, 503, 504, 507, 513], "overwrit": [11, 445], "altern": [11, 24, 39, 132, 209, 210, 211, 219, 503, 505, 507], "new": [11, 18, 19, 27, 28, 34, 37, 38, 41, 48, 55, 77, 79, 80, 82, 84, 85, 89, 96, 97, 98, 100, 101, 103, 104, 106, 107, 109, 110, 111, 112, 129, 132, 134, 135, 140, 142, 147, 148, 150, 151, 152, 170, 171, 172, 182, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 222, 438, 442, 446, 472, 481, 482, 483, 486, 487, 488, 491, 492, 493, 495, 496, 498, 501, 502, 505, 506, 508, 511, 513], "ani": [11, 25, 27, 28, 30, 32, 35, 39, 40, 49, 50, 52, 79, 92, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 132, 134, 136, 140, 141, 142, 151, 153, 154, 155, 156, 157, 162, 171, 172, 182, 195, 204, 205, 210, 211, 219, 223, 438, 442, 445, 446, 448, 461, 465, 471, 480, 482, 483, 492, 498, 503, 504, 507, 509, 510], "while": [11, 27, 28, 34, 35, 51, 55, 129, 132, 182, 218, 450, 480, 492, 493, 498, 503, 507, 509], "leav": [11, 17, 27, 28, 110, 505], "unchang": [11, 42, 76, 180, 181, 207, 208, 209, 210, 211, 219, 510], "tdir": 11, "new_fileset": 11, "norigin": 11, "note": [11, 17, 19, 25, 27, 28, 29, 37, 40, 42, 43, 49, 82, 93, 110, 112, 132, 135, 142, 143, 147, 148, 160, 165, 166, 178, 188, 204, 207, 208, 210, 211, 219, 438, 440, 441, 442, 444, 446, 448, 450, 483, 504, 505, 506, 510, 511, 513], "layout": [11, 171], "been": [11, 26, 27, 35, 42, 43, 44, 48, 51, 82, 89, 91, 132, 140, 141, 143, 144, 162, 170, 171, 182, 195, 219, 439, 480, 483, 490, 495, 498, 499, 503, 504, 505, 506], "is_fil": [11, 507], "relative_to": 11, "227": [11, 14], "plot_read_fileset": [11, 14], "basic": [12, 27, 28, 29, 38, 42, 49, 52, 53, 71, 132, 140, 141, 143, 144, 145, 146, 480, 493, 507, 508, 510, 513], "info": [12, 21, 132, 157, 158, 161, 165, 177, 178, 179, 413, 480, 483, 484, 486, 488], "beam": [12, 19, 25, 27, 28, 29, 48, 480, 486], "gantri": [12, 21, 27, 29], "ssd": 12, "field": [12, 21, 27, 29, 39, 90, 129, 131, 144, 480, 498], "89": 12, "darci": [12, 13, 17, 18], "mason": [12, 13, 17, 18, 24], "list_beam": 12, "plan_dataset": 12, "summar": [12, 507], "line": [12, 21, 24, 25, 26, 28, 29, 36, 40, 41, 44, 48, 50, 53, 85, 132, 171, 480, 487, 498, 503, 504, 505, 507, 510], "13": [12, 237, 238, 239, 241, 432, 433], "num": 12, "11": [12, 21, 24, 207, 208, 209, 210, 211, 219, 227, 233, 235, 249, 250, 296, 297, 347, 366, 385, 398, 426, 431, 480, 500, 513], "beamsequ": [12, 19, 25, 27, 28, 29, 39, 48, 132, 480, 486], "cp0": 12, "controlpointsequ": 12, "float": [12, 30, 37, 39, 51, 81, 88, 129, 132, 133, 158, 160, 161, 162, 165, 179, 203, 215, 219, 439, 440, 441, 443, 444, 450, 466, 480, 486, 487, 493, 496, 498, 500, 505], "sourcetosurfacedist": 12, "beamnam": [12, 19, 39], "beamnumb": [12, 25, 27, 28, 29], "8d": 12, "1f": 12, "gantryangl": 12, "join": [12, 41], "003": [12, 14], "plot_read_rtplan": [12, 14], "scratch": [13, 19, 45, 480, 484, 485, 498, 503, 510], "produc": [13, 25, 27, 37, 51, 53, 182, 480, 488, 493, 498, 512], "compliant": [13, 53, 480, 489], "written": [13, 25, 27, 30, 40, 41, 47, 50, 51, 132, 171, 182, 194, 195, 480, 492, 493, 503, 505, 507], "have": [13, 15, 26, 27, 28, 29, 30, 34, 35, 37, 39, 40, 42, 43, 44, 48, 50, 53, 97, 98, 129, 132, 140, 141, 144, 146, 151, 160, 164, 171, 182, 195, 205, 215, 217, 218, 219, 452, 463, 472, 480, 486, 489, 491, 492, 495, 499, 502, 503, 504, 505, 506, 507, 509, 510, 512, 513], "valid": [13, 45, 53, 55, 83, 86, 87, 89, 125, 129, 132, 134, 136, 151, 160, 174, 182, 195, 212, 219, 220, 367, 368, 413, 445, 450, 451, 455, 457, 466, 467, 470, 480, 498, 499, 500], "tmpc08uh13t": 13, "save": [13, 15, 25, 27, 41, 42, 50, 51, 480, 483, 486, 504, 505, 506, 510, 513], "big": [13, 31, 32, 43, 132, 133, 137, 157, 215, 218, 228, 480, 500, 513], "tmpisu4q9hv": 13, "20230731": 13, "0033": [13, 21], "192124": 13, "112272": 13, "firstnam": 13, "123456": 13, "datetim": [13, 93, 438, 442, 448], "filedataset": [13, 47, 107, 132, 137, 160, 165, 182, 477, 480, 483, 485, 498, 499, 505, 507], "filemetadataset": [13, 25, 27, 133, 136, 137, 164, 195, 477, 480, 495, 505], "temporari": [13, 170, 507], "suffix": [13, 173, 437, 446], "filename_little_endian": 13, "namedtemporaryfil": [13, 18], "filename_big_endian": 13, "popul": [13, 53, 511], "mediastoragesopclassuid": [13, 507], "mediastoragesopinstanceuid": 13, "implementationclassuid": 13, "initi": [13, 37, 41, 133, 134, 135, 137, 177, 178, 204, 219, 220, 446, 503], "preambl": [13, 133, 137, 160, 166, 182, 195, 202, 480, 489, 505], "try": [13, 37, 48, 97, 98, 480, 484, 492, 505, 507], "is_little_endian": [13, 15, 42, 131, 132, 133, 137, 144, 146, 158, 161, 167, 168, 175, 177, 178, 179, 180, 181, 182, 219, 413, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 468, 469], "is_implicit_vr": [13, 42, 131, 132, 133, 137, 158, 159, 161, 167, 168, 182, 413, 461, 480, 492], "dt": [13, 30, 60, 65, 93, 456, 468, 480, 489, 498], "now": [13, 21, 48, 182, 480, 482, 483, 486, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 507, 513], "contentd": 13, "strftime": 13, "y": [13, 37, 219, 503, 512], "m": [13, 23, 446, 503, 504, 507, 509, 510, 513], "timestr": 13, "long": [13, 30, 157, 178, 182, 469, 480, 500, 505, 512], "micro": 13, "contenttim": 13, "save_a": [13, 18, 25, 27, 41, 42, 47, 48, 50, 51, 132, 182, 480, 482, 495, 505, 510, 513], "shouldn": 13, "need": [13, 26, 27, 28, 34, 35, 37, 39, 40, 43, 44, 47, 48, 52, 53, 77, 79, 93, 98, 132, 157, 158, 165, 467, 470, 480, 483, 498, 503, 504, 505, 506, 507, 509, 510, 512, 513], "9": [13, 21, 24, 27, 28, 34, 39, 48, 51, 52, 81, 173, 174, 205, 229, 230, 234, 236, 245, 274, 275, 293, 294, 301, 346, 367, 368, 377, 392, 395, 400, 412, 426, 490, 493, 496, 501, 513], "bug": [13, 41, 484, 488, 492, 495, 498, 502, 503, 509], "recogn": 13, "transfersyntaxuid": [13, 42, 43, 48, 132, 170, 182, 480, 482, 489, 505, 510], "explicitvrbigendian": 13, "reopen": 13, "005": [13, 14], "plot_write_dicom": [13, 14], "348": 14, "auto_examples_input_output": 14, "output": [14, 21, 25, 27, 28, 37, 43, 51, 53, 207, 208, 219, 480, 493, 495, 503, 504, 505, 507, 512], "byte": [15, 25, 27, 30, 31, 32, 39, 42, 50, 51, 52, 53, 77, 78, 79, 89, 90, 112, 129, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 156, 157, 159, 160, 161, 162, 163, 164, 166, 176, 177, 178, 179, 180, 181, 182, 187, 188, 192, 195, 203, 205, 218, 219, 446, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 480, 491, 492, 493, 498, 501, 505, 507, 510, 513], "help": [15, 25, 26, 27, 28, 29, 40, 44, 48, 161, 480, 483, 491, 498, 500, 502, 503, 504], "blob": 15, "databas": 15, "io": [15, 133, 137, 477, 505], "bytesio": [15, 133, 137, 156, 505], "dcmwrite": [15, 47, 48, 70, 132, 480, 489, 495, 496, 498, 505], "filebas": [15, 70, 144, 146, 149, 477], "dicomfilelik": [15, 70, 133, 144, 146, 149, 155, 160, 480, 482], "memory_dataset": [15, 22], "write_dataset_to_byt": 15, "buffer": [15, 133, 215], "rewind": [15, 166, 176, 177, 178, 480, 487], "seek": [15, 156, 160, 480, 482, 492], "adapt_dataset_from_byt": 15, "interest": [15, 50, 502, 505, 512], "stuff": 15, "bond": 15, "jame": 15, "007": 15, "dummydatabas": 15, "__init__": [15, 129, 131, 132, 133, 134, 135, 137, 151, 154, 156, 157, 170, 171, 172, 204, 220, 222, 413, 438, 440, 441, 442, 443, 444, 446, 448, 449], "self": [15, 413, 505, 510], "_blob": 15, "file_path": [15, 202], "db": 15, "convert": [15, 32, 34, 35, 43, 51, 76, 77, 79, 85, 88, 90, 93, 97, 98, 130, 132, 151, 171, 204, 205, 212, 213, 214, 215, 216, 217, 218, 219, 472, 480, 483, 486, 489, 492, 493, 496, 497, 498, 504, 505, 513], "ds_byte": 15, "read_byt": 15, "read_dataset": [15, 70, 165], "_new": 15, "dynam": [17, 21], "recommend": [17, 24, 26, 27, 39, 40, 42, 93, 140, 141, 151, 171, 219, 503, 504, 505, 507, 509, 510, 512], "solut": 17, "demonstr": [17, 49, 480, 481], "hous": 17, "program": [17, 27, 28, 39, 41, 49, 480, 481, 486], "around": [17, 39, 163, 503], "1001": [17, 21, 44, 132], "privat": [17, 18, 21, 25, 27, 28, 29, 39, 45, 53, 109, 110, 111, 112, 119, 120, 123, 124, 125, 127, 129, 130, 132, 135, 169, 170, 171, 195, 222, 413, 477, 480, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 495, 496, 498, 499, 500, 505, 507], "42": [17, 480, 483], "1002": [17, 21, 44, 505], "12345": [17, 39, 132], "1003": [17, 21], "datadict": [17, 48, 477, 480, 489, 492, 505], "dicomdictionari": 17, "keyword_dict": 17, "defin": [17, 18, 21, 26, 27, 34, 35, 44, 50, 55, 129, 132, 135, 170, 171, 182, 206, 219, 445, 480, 486, 503, 505, 507, 513], "is_retir": [17, 109, 110, 111, 119, 120, 129, 413, 480, 489], "flag": [17, 21, 40, 96, 132, 166, 171, 176, 177, 178, 480, 495, 498, 507, 512], "keyword": [17, 27, 28, 29, 37, 39, 48, 51, 52, 84, 85, 92, 107, 109, 110, 118, 119, 121, 126, 128, 129, 132, 151, 160, 171, 205, 210, 212, 215, 217, 218, 219, 223, 413, 472, 480, 484, 486, 489, 491, 492, 496, 500, 504, 505, 507, 511], "blank": [17, 18, 110, 204, 439, 480, 482, 505], "new_dict_item": [17, 109, 111], "0x10011001": 17, "One": [17, 37, 41, 44, 50, 53, 109, 110, 111, 129, 132, 206, 212, 219, 503, 504], "teston": [17, 109, 110], "0x10011002": 17, "two": [17, 21, 26, 27, 29, 37, 39, 40, 43, 44, 47, 89, 97, 109, 110, 111, 132, 142, 157, 171, 219, 446, 480, 487, 505, 506, 512, 513], "testtwo": [17, 109, 110], "0x10011003": 17, "three": [17, 32, 37, 111, 446, 505, 507], "testthre": 17, "revers": [17, 172, 480, 493], "map": [17, 51, 129, 132, 169, 504], "new_names_dict": 17, "dict": [17, 32, 39, 92, 97, 109, 111, 129, 132, 133, 134, 151, 169, 171, 205, 219, 480, 483, 498, 500], "val": [17, 157, 183, 204, 220, 413, 439, 440, 441, 443, 444, 445, 446, 450, 505], "etc": [17, 18, 19, 37, 39, 41, 49, 51, 129, 132, 205, 480, 481, 487, 498, 503, 507, 510], "001": [17, 19, 20, 44], "plot_add_dict_entri": [17, 20], "point": [18, 25, 26, 27, 28, 29, 30, 49, 53, 179, 215, 219, 450, 480, 482, 487, 498, 503, 505, 511], "It": [18, 27, 28, 38, 39, 40, 41, 42, 47, 49, 51, 53, 132, 144, 171, 182, 480, 486, 487, 503, 504, 505, 506, 507, 509, 510, 513], "curv": [18, 513], "patientbirthd": [18, 39], "de": [18, 53], "callback": [18, 26, 27, 132, 480, 489], "function": [18, 21, 26, 27, 28, 32, 37, 38, 39, 40, 44, 47, 51, 52, 53, 54, 57, 58, 67, 70, 72, 74, 81, 91, 99, 103, 110, 111, 129, 132, 144, 151, 158, 161, 164, 165, 169, 171, 180, 181, 202, 204, 205, 206, 213, 214, 215, 216, 217, 218, 219, 223, 439, 450, 472, 473, 477, 478, 480, 481, 482, 483, 488, 489, 491, 492, 493, 496, 498, 504, 505, 506, 507, 510, 512, 513], "insid": [18, 480, 482], "person_names_callback": 18, "curves_callback": 18, "0xff00": 18, "0x5000": 18, "del": [18, 19, 39, 44, 132, 505], "walk": [18, 132], "remove_private_tag": [18, 44, 132], "method": [18, 24, 32, 35, 39, 42, 43, 47, 49, 50, 52, 97, 98, 101, 129, 131, 132, 133, 134, 135, 137, 140, 141, 150, 151, 154, 156, 157, 160, 169, 170, 171, 172, 204, 220, 222, 413, 438, 440, 441, 442, 443, 444, 446, 448, 480, 483, 486, 489, 491, 498, 500, 505, 506, 507, 510, 511], "easili": [18, 480, 481, 483], "delet": [18, 53, 132, 480, 495, 503, 504], "delattr": 18, "otherpatientid": [18, 480, 482], "otherpatientidssequ": [18, 505], "For": [18, 25, 27, 28, 32, 34, 35, 37, 39, 40, 42, 50, 51, 53, 121, 129, 132, 140, 143, 144, 146, 151, 169, 171, 182, 205, 219, 446, 480, 486, 496, 503, 504, 505, 507, 509, 510], "possibl": [18, 35, 39, 40, 46, 51, 93, 129, 132, 169, 180, 181, 218, 219, 450, 480, 489, 491, 492, 493, 498, 506, 507, 511], "assign": [18, 39, 129, 480, 486, 493, 499], "19000101": 18, "output_filenam": 18, "008": [18, 20], "plot_anonym": [18, 20], "block": [19, 21, 27, 28, 29, 44, 132, 135, 480, 495, 504], "300a": [19, 27, 28, 29, 41], "00f8": 19, "apertur": 19, "00fe": 19, "block1": 19, "block2": 19, "toi": 19, "block_ds1": 19, "blocktyp": 19, "blocknam": 19, "block_ds2": 19, "should": [19, 26, 27, 28, 30, 32, 34, 35, 37, 39, 40, 41, 44, 48, 50, 51, 53, 129, 132, 143, 144, 145, 146, 151, 160, 166, 169, 171, 173, 182, 195, 204, 212, 213, 214, 215, 216, 217, 218, 219, 437, 466, 480, 482, 483, 490, 491, 496, 503, 504, 505, 507, 508, 510, 512, 513], "like": [19, 26, 27, 39, 40, 44, 48, 50, 53, 72, 74, 85, 112, 133, 137, 149, 156, 158, 160, 161, 162, 165, 166, 176, 178, 179, 182, 195, 197, 198, 199, 220, 480, 483, 493, 496, 499, 504, 505, 506, 507], "plan_d": 19, "sinc": [19, 35, 44, 97, 129, 132, 137, 160, 163, 218, 220, 480, 500, 503, 507, 513], "did": [19, 480, 481], "blocksequ": 19, "numberofblock": 19, "beam0": 19, "block_ds3": 19, "abov": [19, 25, 26, 27, 28, 29, 39, 44, 50, 53, 129, 132, 205, 480, 490, 504, 507, 512], "forget": [19, 53], "plot_sequ": [19, 20], "011": 20, "auto_examples_metadata_process": 20, "192": [21, 27, 29, 44, 505], "20040119072730": [21, 27, 29, 44, 505, 507], "12322": [21, 27, 29, 44, 505, 507], "0005": [21, 27, 29, 44, 76, 77, 78, 79, 132, 160, 161, 472, 480, 481, 505, 506, 507], "primari": [21, 27, 29, 44, 505], "072731": [21, 27, 29, 505], "19970430": 21, "072730": [21, 27, 29], "112749": 21, "112936": 21, "113008": 21, "ge": 21, "medic": [21, 37, 41, 43, 507], "system": [21, 25, 27, 28, 29, 40, 49, 171, 219, 505, 507, 509, 512, 513], "jfk": 21, "0500": 21, "ct01_oc0": 21, "e": [21, 25, 27, 28, 29, 32, 37, 39, 40, 41, 48, 50, 51, 55, 85, 97, 129, 132, 135, 151, 160, 167, 168, 171, 172, 173, 182, 204, 205, 219, 220, 440, 445, 446, 480, 483, 490, 492, 496, 503, 504, 505, 509], "rhapsod": 21, "0009": [21, 44, 51, 132, 215, 219, 480, 493], "gems_iden_01": [21, 44], "fidel": [21, 44], "ge_genesis_ff": [21, 44], "suit": [21, 44, 480, 500], "ct01": [21, 44], "1004": [21, 472, 480, 493], "product": 21, "hispe": 21, "1027": 21, "sl": [21, 27, 29, 30, 472], "862399669": 21, "servic": [21, 507], "1031": 21, "mobil": 21, "10e6": 21, "genesi": 21, "05": [21, 504], "10e7": 21, "exam": 21, "checksum": 21, "973283917": 21, "10e9": 21, "stamp": 21, "abcd1234": [21, 505], "1234abcd": [21, 505], "ag": [21, 30], "AS": [21, 30, 468], "000y": 21, "21b0": 21, "addit": [21, 27, 28, 29, 32, 76, 132, 137, 170, 171, 446, 488, 496, 498, 506, 507, 509, 510], "histori": 21, "gems_pati_01": 21, "statu": [21, 117, 129], "isovue300": 21, "helic": 21, "kvp": 21, "0088": 21, "collect": [21, 55, 134, 161, 507], "diamet": 21, "480": 21, "rout": 21, "iv": 21, "1100": 21, "reconstruct": 21, "338": 21, "6716": 21, "1110": 21, "distanc": 21, "detector": 21, "1099": 21, "3100585938": 21, "1111": 21, "630": 21, "1120": 21, "tilt": 21, "tabl": [21, 24, 30, 34, 42, 51, 129, 132, 140, 141, 143, 144, 145, 146, 182, 195, 205, 206, 207, 208, 209, 210, 215, 217, 218, 219, 472, 480, 493, 496, 504, 505, 507, 509, 510], "height": 21, "133": [21, 166], "699997": 21, "1150": 21, "exposur": 21, "1601": 21, "1151": 21, "rai": [21, 27, 29, 505], "tube": 21, "current": [21, 25, 27, 29, 35, 37, 40, 42, 96, 129, 132, 171, 172, 180, 181, 188, 206, 212, 219, 446, 480, 498, 504, 507, 509, 510, 512], "170": 21, "1152": 21, "1160": 21, "filter": [21, 27, 28, 132], "larg": [21, 42, 44, 53, 132, 135, 140, 141, 161, 179, 439, 480, 482, 483, 490, 492, 493, 496, 498, 510, 513], "bowti": 21, "fil": 21, "1190": [21, 480, 496], "focal": 21, "spot": 21, "1210": 21, "convolut": 21, "kernel": 21, "ff": [21, 146], "0019": 21, "gems_acqu_01": 21, "912": [21, 480, 493], "cell": 21, "theta": 21, "373": [21, 23], "75": [21, 27, 28, 52, 361], "0166": 21, "100f": 21, "horiz": 21, "ref": 21, "955": [21, 39], "799988": 21, "1011": 21, "1013": [21, 480, 493], "baselin": [21, 43, 51, 143, 219, 413, 480, 500, 513], "1014": [21, 480, 496], "1015": 21, "enhanc": [21, 206, 219, 483], "1016": [21, 480, 493], "1017": 21, "1018": 21, "ra": 21, "1019": [21, 51], "79187": 21, "101a": 21, "last": [21, 27, 29, 37, 39, 41, 44, 48, 85, 97, 98, 142, 144, 480, 486, 499, 505, 507, 510], "101b": 21, "loc": 21, "320": [21, 51], "197968": 21, "101e": 21, "1023": 21, "speed": [21, 480, 483, 487, 491, 498, 500], "mm": [21, 24], "rotat": 21, "1024": [21, 129, 132, 480, 494, 506, 510], "mid": [21, 27, 29, 39, 41], "sec": 21, "17": [21, 52, 382, 512], "784578": 21, "1025": 21, "1026": 21, "azimuth": 21, "degre": 21, "msec": 21, "102a": 21, "On": [21, 35, 179, 446, 506], "178": 21, "079926": 21, "102b": 21, "off": [21, 27, 28, 40, 48, 94, 161, 480, 487, 495, 504], "3994": 21, "299316": 21, "102c": 21, "trigger": [21, 27, 29], "10431": 21, "102e": 21, "718": 21, "079956": 21, "102f": 21, "984": 21, "1039": [21, 507], "sfov": 21, "stat": [21, 162], "recon": 21, "comput": 21, "1042": [21, 480, 495], "segment": [21, 206, 218, 219, 480, 491, 498], "1043": 21, "1044": 21, "interscan": 21, "delai": [21, 27, 29], "1047": [21, 480, 495], "compress": [21, 24, 32, 34, 35, 38, 41, 45, 51, 68, 132, 140, 141, 143, 144, 151, 182, 218, 219, 413, 480, 489, 491, 493, 498, 499, 508, 509], "factor": [21, 52, 480, 487, 510, 513], "104a": 21, "104b": [21, 27, 29], "1052": [21, 207, 208, 219], "post": [21, 48, 480, 495], "proc": 21, "1057": 21, "water": [21, 446], "95": [21, 480, 486, 489], "1058": 21, "bone": [21, 49], "105e": 21, "763": 21, "105f": 21, "increment": [21, 173], "1969": 21, "1061": 21, "1576": 21, "1062": 21, "106a": 21, "depend": [21, 32, 35, 42, 43, 51, 53, 97, 98, 129, 132, 151, 171, 182, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 468, 472, 480, 491, 492, 499, 504, 506, 507, 509, 512, 513], "process": [21, 26, 27, 32, 43, 143, 212, 219, 413, 439, 480, 483, 495, 498, 500, 503, 504, 513], "106b": 21, "852": [21, 480, 492], "1071": 21, "fatq": 21, "estim": 21, "were": [21, 27, 29, 132, 480, 486, 488, 503, 504, 513], "1072": 21, "z": [21, 89, 173, 174], "chan": 21, "avg": 21, "1073": [21, 480, 495], "1074": 21, "max": [21, 207, 208, 219], "1075": [21, 480, 495], "1076": 21, "10da": 21, "10db": 21, "projector": 21, "coeffici": [21, 27, 28], "10dc": 21, "10dd": 21, "overrang": 21, "10de": 21, "alpha": [21, 206, 219, 480, 492, 493, 511], "158": 21, "135803": 21, "179": 21, "035797": 21, "sn": 21, "gems_rela_01": 21, "prescrib": 21, "1005": 21, "1007": 21, "1605775145": 21, "unknown": [21, 30, 85, 129, 130, 132, 144, 192, 480, 485, 490, 492, 496, 498, 505, 511], "24078": 21, "acq": 21, "750675506": 21, "1037": 21, "screen": [21, 25, 27], "anatom": 21, "7400": 21, "1091": 21, "biopsi": 21, "1092": 21, "fl": [21, 27, 29, 30, 505], "1093": [21, 480, 496], "gems_stdy_01": 21, "fd": [21, 30], "862399761": 21, "111079": 21, "No": [21, 48, 174, 459, 502], "header": [21, 153, 160, 166, 218, 480, 482, 505], "107d": 21, "complet": [21, 25, 27, 32, 53, 132, 179, 480, 481, 503, 507, 509], "0025": 21, "gems_sers_01": 21, "1006": [21, 472, 480, 493], "puls": 21, "44": [21, 302], "landmark": 21, "counter": 21, "archiv": 21, "receiv": [21, 195], "host": [21, 48], "0027": 21, "gems_imag_01": 21, "101c": 21, "vma": 21, "mamp": 21, "101d": 21, "phase": 21, "mod": 21, "24": 21, "101f": 21, "clip": 21, "129": [21, 510], "smart": 21, "ON": 21, "foreign": [21, 480, 481], "revis": [21, 480, 484, 486, 487], "1035": 21, "letter": [21, 39], "20406341552734": 21, "r": [21, 35, 129, 132, 506], "coord": 21, "199999809265137": 21, "699999809265137": 21, "69999694824219": 21, "1045": 21, "1046": 21, "1048": 21, "corner": 21, "180": [21, 39], "53579711914062": 21, "1049": [21, 480, 495], "03579711914062": 21, "104c": [21, 27, 29], "159": [21, 480, 493], "63580322265625": 21, "104d": [21, 27, 29], "19999694824219": 21, "116": [21, 27, 28, 29, 52], "20304870605469": 21, "l": [21, 24, 43, 143, 219, 318, 480, 491, 509], "1053": [21, 207, 208, 219, 480, 495], "anterior": 21, "posterior": 21, "1054": 21, "1055": 21, "0120": 21, "rescal": [21, 45, 207, 208, 210, 211, 219], "intercept": [21, 39, 207, 208, 219], "slope": [21, 207, 208, 219], "0029": 21, "gems_imps_01": 21, "lower": [21, 132, 135, 171, 507, 511], "rang": [21, 32, 35, 50, 93, 151, 207, 208, 219, 480, 491, 493, 505], "pixels1": 21, "87": 21, "1008": 21, "1009": 21, "100a": 21, "764": 21, "hdr": 21, "struct": [21, 197, 466], "1034": 21, "advantag": [21, 480, 487], "overflow": 21, "underflow": 21, "0043": [21, 27, 29, 505], "gems_parm_01": 21, "400": [21, 51], "input": [21, 25, 27, 51, 204, 212, 219, 446, 480, 496], "1012": 21, "chain": 21, "14": [21, 43, 143, 307, 308, 410, 480, 495], "decon": 21, "paramet": [21, 25, 27, 32, 37, 51, 52, 53, 76, 77, 78, 79, 81, 82, 94, 96, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 158, 160, 161, 162, 163, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 195, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 225, 437, 440, 441, 444, 445, 446, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 480, 486, 488, 490, 496, 498, 499, 505, 507], "107": [21, 228, 299, 335, 480, 487], "21": [21, 52, 383], "20": [21, 52, 219, 348, 394, 480, 498], "calibr": 21, "ibh": 21, "scale": 21, "bbh": 21, "085000": 21, "102000": 21, "095000": 21, "blend": 21, "350": 21, "ppscan": 21, "integr": 21, "level": [21, 27, 28, 29, 36, 37, 132, 161, 171, 172, 480, 486, 498, 501, 504, 505, 506, 507], "40": [21, 52, 364, 480, 498], "1021": 21, "glow": 21, "term": [21, 51, 205, 219], "748": 21, "749": 21, "750": 21, "pitch": 21, "ratio": [21, 34], "1028": 21, "uniqu": [21, 30, 32, 44, 151, 171, 172, 173, 191, 480, 489, 500, 505, 507], "iden": 21, "1029": [21, 480, 494], "histogram": 21, "2068": 21, "user": [21, 32, 39, 41, 46, 47, 48, 49, 79, 88, 132, 151, 158, 164, 182, 480, 483, 486, 492, 493, 496, 501, 503, 505, 507, 512], "coordin": [21, 27, 28, 39], "200000": 21, "700000": 21, "07992553710938": 21, "3816": 21, "219482421875": 21, "fpa": 21, "gain": 21, "ad": [21, 26, 27, 28, 34, 37, 39, 48, 91, 107, 132, 135, 136, 152, 169, 171, 172, 182, 195, 204, 210, 212, 215, 217, 219, 220, 223, 455, 457, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 502, 503, 506, 511], "cal": 21, "reg": 21, "xm": [21, 27, 29], "auto": [21, 132, 480, 481], "pattern": [21, 27, 29, 105, 106, 108], "tggc": [21, 27, 29], "104e": [21, 27, 29, 505], "durat": [21, 27, 29, 505], "60060977935791": [21, 27, 29, 505], "8192": [21, 179], "32768": [21, 27, 29, 505], "difflib": 21, "filename_mr": 21, "filename_ct": 21, "tupl": [21, 32, 39, 42, 85, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 132, 135, 141, 143, 146, 151, 157, 160, 204, 220, 223, 224, 446, 480, 483, 492, 510], "forc": [21, 132, 153, 160, 165, 166, 171, 480, 484, 486, 488, 505], "compar": [21, 55, 480, 487, 490, 498, 503, 504], "termin": [21, 27, 28, 29, 40, 144, 161, 175], "newlin": [21, 505], "massag": 21, "form": [21, 35, 48, 50, 51, 52, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 132, 133, 137, 223, 437, 446], "rep": 21, "split": [21, 48, 445, 480, 481, 482], "diff": [21, 503], "102": [21, 22, 228, 330, 335, 480, 486], "plot_dicom_differ": [21, 22], "auto_exampl": 22, "show_charset_nam": [22, 23], "veri": [23, 30, 46, 480, 483, 503, 507, 510], "simpl": [23, 39, 41, 49, 480, 481], "app": 23, "valuerep": [23, 60, 454, 456, 460, 462, 477], "personnameunicod": [23, 60, 480, 495], "default_encod": [23, 446], "iso8859": [23, 158, 161, 194, 461], "person_nam": 23, "2008": [23, 446], "ps3": [23, 446], "p98": 23, "yamada": 23, "tarou": 23, "033": 23, "3ed": 23, "bb": 23, "iso2022_jp": 23, "j": 23, "105": [23, 52, 228, 333, 335], "wang": 23, "xiaodong": 23, "xcd": 23, "xf5": 23, "x5e": 23, "xd0": 23, "xa1": 23, "xb6": 23, "xab": 23, "gb18030": 23, "104": [23, 228, 276, 277, 278, 279, 280, 332, 335], "xe7": 23, "x8e": 23, "x8b": 23, "xe5": 23, "xb0": 23, "x8f": 23, "xe6": 23, "x9d": 23, "xb1": 23, "utf": 23, "101": [23, 228, 328, 335], "hong": [23, 446], "gildong": [23, 446], "363": 23, "321": 23, "316": 23, "324": 23, "327": 23, "310": 23, "253": 23, "261": 23, "346": [23, 480, 489], "265": 23, "277": [23, 480, 493], "euc_kr": [23, 446], "label": [23, 27, 29, 32, 49, 151], "easiest": [24, 510], "probabl": [24, 53, 507], "zenodo": 24, "doi": 24, "enter": [24, 512], "citat": 24, "style": [24, 48, 480, 482, 485], "along": [24, 171], "et": 24, "al": 24, "github": [24, 48, 480, 489, 502, 503, 504, 509], "onlin": [24, 48], "yyyi": 24, "dd": 24, "deal": [24, 40, 48, 50, 218, 480, 482, 491, 505, 512], "jpeg": [24, 35, 41, 42, 43, 51, 80, 140, 141, 143, 213, 214, 215, 216, 217, 218, 219, 313, 318, 321, 413, 480, 491, 493, 495, 496, 498, 509, 510], "releas": [24, 48, 477, 489, 493, 496], "march": 24, "2018": [24, 504], "june": 24, "octob": 24, "juli": 24, "2019": 24, "januari": 24, "2020": [24, 46], "mai": [24, 25, 27, 28, 31, 32, 35, 40, 43, 44, 46, 48, 49, 50, 51, 53, 78, 96, 100, 132, 140, 141, 142, 143, 144, 145, 146, 151, 171, 182, 195, 218, 446, 463, 465, 480, 493, 503, 504, 505, 507, 509, 510, 512, 513], "novemb": 24, "august": 24, "2021": [24, 480, 500], "2022": 24, "2023": [24, 477], "jan": [24, 84, 505], "2024": 24, "recreat": [25, 27, 480, 488], "within": [25, 27, 28, 29, 32, 48, 80, 89, 132, 160, 161, 170, 171, 182, 225, 461, 480, 496, 507, 509, 512, 513], "detail": [25, 27, 35, 39, 40, 41, 51, 53, 94, 129, 132, 161, 225, 444, 477, 480, 498, 501, 503, 504], "review": [25, 27, 502, 503, 504], "more": [25, 27, 28, 30, 32, 35, 37, 39, 40, 41, 42, 43, 44, 50, 51, 52, 100, 129, 132, 140, 142, 143, 144, 146, 151, 161, 165, 171, 174, 179, 182, 183, 197, 219, 446, 450, 480, 481, 482, 483, 485, 486, 493, 503, 504, 505, 506, 507, 509, 510, 512, 513], "than": [25, 26, 27, 28, 29, 30, 34, 35, 37, 42, 43, 48, 50, 53, 55, 129, 132, 142, 143, 144, 146, 160, 165, 171, 174, 182, 183, 197, 204, 219, 437, 480, 481, 482, 483, 488, 489, 490, 493, 495, 498, 505, 506], "export": [25, 27, 40, 480, 498], "includ": [25, 26, 27, 40, 50, 53, 129, 132, 140, 169, 171, 182, 205, 218, 219, 225, 477, 480, 482, 484, 486, 488, 489, 503, 504, 505, 507, 510, 512, 513], "health": [25, 27, 53], "sensit": [25, 27, 52, 53, 132, 472, 513], "git": [25, 27, 28, 503, 504, 509], "util": [25, 27, 51, 53, 63, 64, 65, 68, 70, 477, 480, 481, 488, 489, 501], "main": [25, 26, 27, 38, 39, 47, 48, 53, 119, 480, 483, 503, 504, 505, 509], "instancecreationd": [25, 27], "20030903": [25, 27, 28, 39], "instancecreationtim": [25, 27], "150031": [25, 27, 28, 39], "481": [25, 27, 240, 241, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 393, 394, 409, 410], "sopinstanceuid": [25, 27, 34, 170], "777": [25, 27, 28, 39], "7777": [25, 27, 28, 39], "20030903150023": [25, 27, 28, 39], "20030716": [25, 27, 28, 29, 39], "153557": [25, 27, 29, 39], "prefix": [25, 27, 28, 29, 37, 153, 160, 166, 173, 182, 195, 368, 437, 446, 480, 492, 503, 504, 505, 511, 512], "rather": [25, 27, 28, 29, 48, 50, 53, 129, 132, 171, 182, 204, 480, 481, 482, 489, 493, 495, 498, 505], "In": [25, 26, 27, 28, 32, 37, 39, 42, 48, 51, 53, 76, 171, 220, 480, 488, 494, 496, 500, 503, 504, 505, 507, 510, 512], "wa": [25, 26, 27, 35, 37, 48, 129, 132, 133, 171, 176, 182, 455, 457, 480, 483, 490, 493, 498, 503, 504, 507, 510], "direct": [25, 27, 39, 48, 219, 504, 506, 507], "specifi": [25, 26, 27, 28, 29, 39, 110, 112, 129, 132, 151, 160, 161, 182, 218, 446, 472, 480, 493, 498, 505, 507, 509, 512], "exclude_s": [25, 27], "filespec": [25, 26, 27, 28, 29], "outfil": [25, 27, 505], "argument": [25, 26, 27, 28, 29, 37, 39, 42, 92, 132, 134, 203, 480, 482, 483, 491, 492, 493, 494, 495, 496, 506, 507, 510], "If": [25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 47, 48, 51, 52, 53, 55, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 94, 97, 98, 101, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 132, 134, 135, 136, 137, 140, 143, 144, 146, 151, 157, 158, 160, 161, 162, 166, 170, 171, 172, 173, 179, 180, 181, 182, 195, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 437, 440, 441, 446, 450, 454, 455, 456, 457, 462, 466, 469, 472, 480, 486, 498, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513], "your_fil": [25, 27, 28, 29], "yourplan": [25, 27, 28, 29], "stdout": [25, 27], "messag": [25, 27, 28, 29, 94, 225, 480, 483, 492, 500, 503, 505, 507], "exclud": [25, 27, 28, 29, 53, 132, 205, 219], "binari": [25, 27, 129, 132, 219, 480, 484, 492, 493], "larger": [25, 27, 160, 509, 510], "save_filenam": [25, 27], "otherwis": [25, 27, 32, 35, 39, 88, 97, 98, 116, 117, 121, 122, 126, 127, 128, 129, 132, 133, 140, 151, 158, 171, 173, 174, 177, 178, 202, 209, 210, 211, 219, 413, 446, 451, 452, 453, 454, 455, 456, 457, 461, 462, 463, 465, 466, 468, 469], "_from_codifi": [25, 27], "dummi": [25, 27], "error": [25, 27, 53, 55, 76, 86, 87, 96, 129, 132, 134, 445, 450, 477, 480, 483, 484, 487, 489, 490, 491, 492, 493, 495, 496, 500, 503, 505, 512], "savenam": [25, 27], "dicomfil": [25, 27, 70], "pythoncod": [25, 27], "By": [25, 27, 51, 169, 171, 444, 480, 484, 505, 512], "translat": [25, 27, 39, 480, 489], "whole": [25, 27, 158, 205, 219, 510], "fractiongroupsequ": [25, 27, 28, 29], "non": [25, 27, 30, 39, 40, 109, 110, 111, 112, 127, 129, 130, 132, 136, 143, 169, 171, 182, 195, 218, 219, 228, 444, 450, 452, 455, 457, 463, 465, 480, 484, 485, 489, 490, 491, 492, 493, 496, 500, 505], "fractiongroupnumb": [25, 27], "numberoffractionsplan": [25, 27], "numberofbeam": [25, 27], "numberofbrachyapplicationsetup": [25, 27], "referenc": [25, 27, 28, 29, 37, 39, 164, 170, 171, 507], "refd_beam_sequ": [25, 27], "referencedbeamsequ": [25, 27], "refd_beam1": [25, 27], "beamdosespecificationpoint": [25, 27], "239": [25, 27, 28, 29, 39], "531250000000": [25, 27, 28, 29], "751": [25, 27, 28, 29], "87000000000": [25, 27, 28, 29], "accept": [25, 27, 30, 40, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 132, 134, 146, 480, 495, 496, 498, 500, 503], "issu": [25, 27, 29, 41, 46, 48, 53, 55, 76, 77, 79, 87, 219, 480, 483, 484, 485, 486, 487, 492, 501, 502, 503, 512], "toward": [25, 27], "loop": [25, 27, 53], "develop": [26, 27, 28, 40, 480, 489, 503, 504], "subcommand": [26, 27, 28, 480, 498], "entri": [26, 27, 28, 39, 51, 109, 110, 111, 112, 119, 120, 480, 482, 499, 503, 504], "packag": [26, 27, 28, 41, 43, 45, 47, 49, 97, 205, 213, 214, 215, 216, 217, 218, 472, 480, 481, 484, 489, 496, 498, 503, 505, 507, 509], "setup": [26, 27, 28, 29, 41, 480, 487, 488, 500], "regist": [26, 27, 129, 413, 480, 496, 505], "command1": [26, 27], "command2": [26, 27], "setuptool": [26, 27, 480, 481, 488, 498, 512], "yourpackag": [26, 27], "variou": [26, 27, 480, 481], "entry_point": [26, 27], "pydicom_subcommand": [26, 27], "command1modul": [26, 27], "add_subpars": [26, 27], "command2modul": [26, 27], "liter": [26, 27], "must": [26, 27, 32, 34, 35, 39, 40, 42, 50, 51, 85, 88, 132, 135, 140, 141, 146, 160, 169, 171, 174, 176, 178, 182, 204, 205, 206, 210, 211, 219, 451, 469, 480, 498, 505, 506, 507, 510, 512, 513], "wish": [26, 27, 40, 219], "usual": [26, 27, 28, 29, 34, 39, 44, 51, 110, 133, 137, 153, 158, 480, 483, 503, 505, 509, 510], "convent": [26, 27, 39, 446], "singl": [26, 27, 30, 32, 34, 37, 78, 109, 111, 129, 132, 140, 142, 144, 146, 149, 151, 168, 169, 171, 200, 201, 204, 205, 217, 218, 219, 457, 466, 480, 481, 491, 499, 503, 506, 507], "subpars": [26, 27], "do_command": [26, 27], "filespec_help": [26, 27], "filespec_pars": [26, 27], "sub": [26, 27], "parser": [26, 27], "add_pars": [26, 27], "subcommandnam": [26, 27], "add_argu": [26, 27], "set_default": [26, 27], "func": [26, 27, 504], "And": [26, 27, 28, 29, 97, 480, 496, 503, 504, 505, 512, 513], "arg": [26, 27, 132, 134, 153, 154, 155, 156, 157, 223, 438, 442, 446, 448, 480, 484], "element_v": [26, 27], "yourarg": [26, 27], "argpars": [26, 27], "snippet": [26, 27], "element_valu": [26, 27], "pair": [26, 27, 134, 171], "codifi": [26, 28, 45, 480, 488, 490, 498, 500], "filetyp": [26, 27], "yourself": [26, 27, 50, 51], "shown": [26, 27, 29, 39, 44, 53, 55, 219, 480, 481, 482, 495, 505, 507, 512], "relat": [26, 27, 28, 35, 40, 50, 52, 58, 132, 135, 182, 205, 215, 217, 218, 472, 480, 481, 503, 507, 513], "think": [26, 27], "consid": [26, 27, 46, 53, 132, 219, 503, 504, 506], "contribut": [26, 27, 480, 483, 486, 487, 508], "case": [26, 27, 39, 40, 42, 46, 48, 53, 55, 76, 78, 84, 132, 160, 161, 446, 480, 492, 496, 505, 506, 510, 512, 513], "under": [26, 27, 39, 140, 141, 480, 481, 483, 489, 503, 504, 509], "pull": [26, 27, 29, 502, 509], "request": [26, 27, 29, 39, 480, 496, 498, 502], "v2": [27, 28, 34, 46, 480, 496, 509, 513], "offer": [27, 28, 42, 51, 132, 510], "explor": [27, 28, 44], "156": [27, 28, 39], "rt": [27, 28, 29, 39, 169, 171, 507], "plan": [27, 28, 29, 39, 41, 46, 169], "999": [27, 28, 39, 480, 493], "99": [27, 28, 39, 43, 215, 228, 263, 416], "9999": [27, 28, 39, 504], "implicit": [27, 28, 39, 43, 89, 132, 133, 137, 158, 161, 171, 182, 215, 413, 461, 480, 483, 490, 492, 498, 510], "888": [27, 28, 39], "88": [27, 28, 39, 226, 233, 246, 247, 251, 252, 285, 289, 292, 304, 323, 339, 360, 361, 362, 364, 389, 399, 435, 480, 484], "replic": [27, 28], "exactli": [27, 28, 50, 52, 505], "notat": [27, 28, 29, 450, 505], "0071": [27, 28, 29], "fraction": [27, 28, 29], "0078": [27, 28, 29], "00a0": [27, 28, 29], "brachi": [27, 28, 29], "300c": [27, 28, 29], "0082": [27, 28, 29], "dose": [27, 28, 29, 169, 171, 480, 486, 507], "0275401": [27, 28, 29], "meterset": [27, 28, 29], "0036697": [27, 28, 29], "0006": [27, 28, 29, 35, 132, 215, 217, 218, 219], "simpli": [27, 28, 39, 48, 50], "particular": [27, 28, 39, 42, 50, 51, 89, 164, 480, 483, 493, 505, 511], "q": [27, 28, 29, 503], "quiet": [27, 28, 29], "automat": [27, 28, 37, 39, 42, 44, 48, 50, 51, 53, 98, 129, 171, 440, 441, 480, 489, 493, 495, 498, 503, 504, 505], "environ": [27, 28, 40, 480, 481, 496, 503, 504, 508, 509], "variabl": [27, 28, 37, 38, 39, 40, 480, 492, 496, 500, 512], "clone": [27, 28, 503, 504, 509], "repositori": [27, 28, 49, 107, 480, 501, 509], "repeat": [27, 28, 50, 119, 122, 126, 127, 171, 480, 491, 500, 505], "reinstal": [27, 28], "similar": [27, 28, 37, 133, 199, 480, 482, 486, 506, 511, 512], "pipe": [27, 28], "grep": [27, 28], "either": [27, 28, 35, 39, 40, 47, 98, 129, 132, 160, 166, 171, 182, 205, 219, 223, 446, 454, 462, 480, 496, 504, 505, 507, 509, 510, 512], "iso": [27, 28, 212, 219, 313, 318, 321, 480, 493], "741": [27, 28], "organ_at_risk": [27, 28], "deliveri": [27, 28], "maximum": [27, 28, 35, 53, 129, 140, 141, 151, 173, 480, 500], "002c": [27, 28], "organ": [27, 28, 446], "risk": [27, 28], "ptv": [27, 28], "target": [27, 28, 37, 48], "0026": [27, 28], "prescript": [27, 28], "826203": [27, 28], "00b0": [27, 28], "00b6": [27, 28], "0111": [27, 28], "control": [27, 28, 47, 84, 85, 102, 103, 480, 486, 507], "0115": [27, 28], "rate": [27, 28], "650": [27, 28], "011a": [27, 28], "010c": [27, 28], "cumul": [27, 28], "0051": [27, 28], "9990268": [27, 28], "0180": [27, 28], "regular": [27, 28, 39, 480, 500], "express": [27, 28], "abil": [27, 28, 51, 480, 488, 489, 496], "alreadi": [27, 29, 34, 36, 37, 42, 51, 76, 110, 132, 136, 144, 172, 176, 195, 204, 219, 439, 480, 488, 505, 507, 510, 513], "present": [27, 29, 50, 79, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 132, 133, 136, 143, 144, 145, 146, 151, 153, 160, 166, 169, 171, 172, 182, 195, 206, 207, 208, 209, 210, 211, 219, 480, 482, 490, 492, 493, 505, 513], "nest": [27, 29, 39, 132, 480, 487, 500], "minim": [27, 29, 182, 195], "below": [27, 29, 30, 34, 39, 42, 44, 172, 182, 205, 215, 217, 218, 219, 472, 480, 483, 507, 510, 511], "bitsstor": [27, 29, 215, 217, 219], "pre": [27, 29, 39, 41, 48, 480, 501, 503], "id00001": [27, 29], "study1": [27, 29], "plan1": [27, 29], "02754010000000": [27, 29], "003669700000": [27, 29], "treatment": [27, 29], "static": [27, 29, 134, 151], "photon": [27, 29], "energi": [27, 29], "00000000000000": [27, 29], "coll": [27, 29], "couch": [27, 29], "wedg": [27, 29], "boli": [27, 29], "those": [27, 29, 32, 36, 40, 44, 48, 480, 483, 486, 496, 505, 507], "extra": [27, 29, 39, 480, 501, 512], "submit": [27, 29, 41, 480, 486, 502, 503, 504], "interfac": [28, 36, 480, 498, 509], "introduct": [29, 32, 38, 45, 503, 504, 507, 508, 513], "anyth": [30, 44, 50, 51, 157, 219], "ascii": [30, 174, 200, 480, 492], "decim": [30, 81, 102, 439, 440, 441, 443, 444, 450, 451, 480, 486, 487, 498], "sign": [30, 32, 35, 51, 80, 151, 480, 496, 503, 504, 513], "unsign": [30, 32, 35, 51, 146, 151, 157, 480, 496, 513], "integ": [30, 32, 35, 51, 146, 219, 437, 443, 444, 480, 484, 486, 496, 513], "depth": [30, 38, 49, 51, 172, 480, 493, 509], "even": [30, 44, 50, 140, 142, 144, 160, 166, 219, 480, 496, 505, 507, 510], "encod": [30, 35, 36, 38, 42, 43, 51, 52, 55, 76, 77, 78, 79, 129, 130, 132, 133, 140, 141, 142, 143, 144, 147, 148, 158, 161, 167, 168, 171, 182, 189, 193, 195, 197, 198, 199, 201, 218, 446, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 477, 480, 486, 489, 490, 491, 492, 493, 498, 499, 500, 505, 506, 510], "correctli": [30, 53, 97, 98, 137, 171, 182, 213, 214, 480, 483, 486, 489, 490, 492, 493, 496, 498, 499, 500, 503], "empti": [30, 129, 132, 133, 137, 143, 145, 146, 219, 220, 440, 441, 446, 466, 480, 481, 489, 492, 493, 494, 495, 496, 498, 505, 507, 513], "multivalu": [30, 60, 82, 200, 201, 220, 445, 453, 454, 455, 456, 457, 460, 468, 471, 480, 486], "accord": [30, 53, 160, 193, 505, 507], "od": [30, 480, 489, 490, 498], "OF": [30, 480, 495], "ol": [30, 480, 489, 490, 498], "st": [30, 41], "un": [30, 55, 90, 158, 192, 464, 480, 481, 493, 495, 498, 499, 505], "ur": [30, 465], "ut": 30, "never": [30, 81, 132, 503], "greater": [30, 35, 132, 142, 144, 219, 437, 480, 489, 506], "hint": 30, "union": 30, "mutablesequ": [30, 76, 130, 132, 158, 161, 167, 168, 445, 452, 453, 454, 455, 456, 457, 460, 462, 463, 466, 468, 470, 471], "AT": [30, 453, 480, 493, 498, 500], "attribut": [30, 44, 84, 97, 129, 131, 132, 133, 134, 137, 150, 151, 154, 156, 157, 170, 171, 172, 182, 220, 222, 413, 438, 440, 441, 442, 443, 444, 446, 448, 449, 480, 481, 491, 496, 499, 500, 505, 507], "basetag": [30, 39, 60, 85, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 131, 132, 133, 134, 135, 157, 158, 160, 161, 165, 171, 175, 177, 178, 179, 223, 224, 225, 453, 469, 480, 483, 498], "dsfloat": [30, 60, 439, 455, 480, 498], "dsdecim": [30, 60, 88, 439, 455, 480, 498], "doubl": [30, 37, 51, 132, 215, 219, 480, 493], "ov": [30, 480, 493, 498], "word": [30, 37, 53, 110, 188, 446, 505], "personnam": [30, 60, 129, 447, 460, 480, 481, 492, 495, 496, 498], "short": [30, 48, 157, 469, 503, 505], "sv": [30, 472, 480, 493], "uc": [30, 470, 480, 489], "unlimit": 30, "identifi": [30, 40, 44, 53, 191], "uri": [30, 132, 480, 496, 506], "url": [30, 37, 97], "uv": [30, 472, 480, 493], "config": [30, 40, 444, 468, 477, 480, 486, 491, 492, 493, 495, 496, 498], "datetime_convers": [30, 454, 456, 462, 477], "use_ds_decim": [30, 82, 455, 477, 480, 495], "rlelosslessencod": [31, 32, 34, 477, 480, 498], "byteord": [31, 32, 513], "guid": [32, 37, 41, 48, 132, 477, 480, 492, 498, 504, 505, 510], "cover": [32, 505, 507, 510, 513], "intend": [32, 34, 35, 132, 137, 151, 503], "provid": [32, 38, 39, 44, 51, 97, 98, 129, 132, 151, 205, 215, 217, 218, 472, 480, 487, 506, 509, 510, 511], "mechan": [32, 151], "raw": [32, 39, 50, 51, 52, 130, 131, 132, 149, 151, 158, 162, 169, 472, 480, 486, 492, 495, 513], "unencod": [32, 151], "least": [32, 35, 469, 507], "convers": [32, 34, 35, 48, 93, 129, 205, 215, 217, 218, 472, 480, 482, 492, 493, 495, 506, 513], "signatur": [32, 480, 496], "foo": 32, "kwarg": [32, 132, 134, 151, 154, 155, 156, 157, 171, 438, 442, 446, 448, 510], "multi": [32, 43, 51, 60, 82, 129, 132, 140, 143, 144, 145, 146, 151, 171, 204, 205, 219, 465, 477, 480, 489, 491, 493, 495, 505, 513], "support": [32, 40, 45, 48, 70, 71, 80, 97, 98, 132, 151, 171, 205, 206, 212, 213, 214, 215, 216, 217, 218, 219, 223, 472, 480, 481, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 507, 508, 509, 510, 511], "minimum": [32, 34, 195], "transfer_syntax_uid": [32, 132], "samples_per_pixel": [32, 151], "grayscal": [32, 34, 35, 51], "rgb": [32, 34, 35, 42, 51, 98, 206, 212, 213, 214, 215, 216, 217, 218, 219, 480, 490, 493, 498, 510], "number_of_fram": [32, 151], "bits_alloc": [32, 151, 219], "bits_stor": [32, 151], "12": [32, 35, 52, 151, 215, 287, 288, 384, 434, 436, 507, 513], "4095": [32, 35, 151], "65535": [32, 151, 507], "pixel_represent": [32, 151], "complement": [32, 35, 38, 151], "photometric_interpret": [32, 151], "color": [32, 34, 35, 42, 45, 151, 206, 212, 219, 480, 493, 495, 510], "ybr_full": [32, 34, 35, 51, 151, 212, 215, 217, 219, 480, 493, 499], "At": [32, 503, 511], "is_avail": [32, 97, 98, 151, 205, 213, 214, 215, 216, 217, 218, 472, 480, 491], "bool": [32, 55, 81, 82, 94, 96, 102, 107, 116, 117, 126, 127, 129, 131, 132, 133, 136, 137, 140, 146, 151, 157, 158, 159, 160, 161, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 195, 202, 205, 210, 212, 213, 214, 215, 216, 217, 218, 219, 222, 413, 439, 440, 441, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 468, 469, 472], "met": [32, 165, 205, 213, 214, 215, 216, 217, 218, 472, 480, 491], "encoder_depend": [32, 151], "rlelossless": [32, 34, 42, 132, 503, 510], "jpeg2000": [32, 43, 143, 480, 491, 493], "pillow": [32, 43, 132, 216, 480, 489, 491, 493, 495, 498, 503], "imagecodec": 32, "gdcm": [32, 34, 42, 43, 132, 150, 213, 480, 483, 489, 492, 496, 498, 499, 501, 510], "add_plugin": [32, 151], "plugin_label": 32, "my_encoder_func": 32, "my_packag": 32, "my_encod": 32, "rle": [33, 35, 42, 43, 51, 132, 140, 141, 143, 150, 152, 217, 218, 219, 370, 480, 491, 492, 498, 499, 509, 510], "lossless": [33, 35, 42, 43, 51, 132, 140, 141, 143, 150, 152, 217, 218, 219, 480, 495, 498, 499, 510], "plugin": [33, 42, 43, 132, 150, 151, 217, 480, 498, 499, 502, 509, 510], "underli": 34, "algorithm": [34, 437], "packbit": 34, "scheme": [34, 158, 460, 461, 467, 470, 471, 511, 513], "explan": 34, "relationship": [34, 171, 504], "glossari": [34, 36], "palett": [34, 35, 45, 106, 169, 171, 206, 219, 480, 493, 495], "intens": [34, 35], "black": [34, 480, 501], "index": [34, 39, 51, 52, 132, 151, 171, 172, 173, 204, 209, 210, 211, 219, 472, 480, 496, 504, 513], "red": [34, 35, 206, 219, 480, 495, 503, 504], "green": [34, 35, 480, 495], "blue": [34, 35, 480, 495], "lookup": [34, 51, 113, 114, 115, 117, 118, 128, 206, 207, 208, 209, 210, 219, 480, 496, 505], "noth": [34, 507], "equal": [34, 35, 142, 144, 480, 490, 491, 492], "ycbcr": [34, 35, 213, 214, 215, 216, 217, 218], "keep": [34, 171, 507, 509], "mind": 34, "lossi": [34, 43, 143, 219], "inclus": [34, 35], "downscal": 34, "accordingli": [34, 132], "made": [34, 48, 132, 142, 143, 171, 480, 482, 483, 495, 503, 504, 507], "might": [34, 44, 151, 513], "ask": [34, 41, 502, 503, 504, 512], "why": [34, 48, 510], "vice": [34, 206, 219], "versa": [34, 206, 219], "answer": [34, 502, 505, 510], "higher": [34, 36, 480, 483, 506, 512], "befor": [34, 43, 48, 91, 129, 132, 160, 172, 179, 204, 210, 211, 219, 480, 483, 486, 487, 489, 492, 503, 504, 505, 507, 510, 512, 513], "decis": [34, 48], "known": [34, 35, 39, 40, 44, 51, 55, 84, 96, 129, 130, 132, 206, 219, 224, 480, 490, 493, 495, 496, 498, 505, 511], "20x": [34, 42, 480, 498], "slower": [34, 42, 219], "pylibjpeg": [34, 42, 43, 132, 150, 151, 217, 480, 496, 498, 501, 510], "place": [34, 35, 42, 43, 132, 182, 480, 489, 505, 507], "samplesperpixel": [34, 215, 217, 218, 219, 480, 486, 491, 510], "bitsalloc": [34, 43, 129, 215, 217, 218, 219, 480, 491], "pixelrepresent": [34, 215, 217, 218, 219, 480, 492], "us1_uncr": 34, "921600": 34, "424152": 34, "pixel_data_handl": [34, 50, 51, 132, 473, 477, 480, 491, 498], "convert_color_spac": [34, 51, 219, 477, 480, 498], "ybr": [34, 51, 480, 498], "187460": 34, "compon": [35, 43, 80, 143, 172, 174, 217, 219, 446, 480, 481, 483, 498], "previous": [35, 162, 480, 491, 495, 498], "constrain": 35, "iod": [35, 219, 507, 513], "remain": [35, 48, 144, 171, 480, 486, 504], "hand": [35, 53, 480, 496], "ybr_rct": [35, 42, 217, 510], "whether": [35, 39, 82, 103, 129, 132, 146, 451, 480, 483, 486, 491, 493, 498, 502, 503, 509], "transform": [35, 51], "prior": [35, 42, 144, 510], "taken": [35, 48, 219], "account": 35, "doesn": [35, 50, 84, 132, 205, 215, 218, 480, 495, 503, 510], "determin": [35, 39, 50, 129, 132, 171, 207, 208, 219, 507, 513], "invers": 35, "ybr_full_422": [35, 51, 212, 215, 217, 219, 480, 493, 499], "ybr_partial_420": 35, "ybr_ict": [35, 217], "restrict": 35, "further": [35, 507, 511], "constraint": [35, 440, 441, 450], "planar": [35, 51, 132, 219, 480, 491], "r1": 35, "g1": 35, "b1": 35, "r2": 35, "g2": 35, "b2": 35, "rn": 35, "gn": 35, "bn": 35, "contigu": 35, "typic": [35, 96, 138, 510], "32": [35, 132, 135, 141, 146, 215, 218, 219, 472, 480, 490, 498, 513], "being": [35, 104, 113, 114, 115, 117, 118, 121, 123, 124, 125, 128, 132, 144, 151, 218, 480, 481, 491, 498, 499, 507, 509, 510], "mean": [35, 43, 218, 437, 503, 505, 507, 510, 511, 512], "chapter": 35, "mani": [35, 40, 49, 51, 140, 141, 480, 482, 486, 487, 502], "most": [35, 39, 40, 43, 48, 49, 53, 85, 480, 483, 486, 487, 505, 507, 510, 511], "signific": [35, 40, 452, 463, 465, 480, 483], "past": [35, 144, 166, 195], "describ": [35, 39, 43, 53, 109, 111, 129, 132, 446, 506, 507], "familiar": [36, 37, 505, 507, 510, 513], "document": [36, 40, 132, 151, 169, 484, 489, 490, 502, 508], "reader": 37, "unfamiliar": 37, "step": [37, 480, 487, 498, 507, 511, 513], "achiev": [37, 142], "advanc": [37, 151], "understand": [37, 39, 503, 513], "aim": [37, 480, 496], "explain": 37, "subject": [37, 506, 511], "fairli": 37, "technic": [37, 38], "api": [37, 151, 480, 490, 503, 506, 510, 511], "learn": [37, 41, 503, 507, 512], "remind": 37, "about": [37, 39, 40, 41, 49, 51, 53, 94, 219, 505, 507, 510, 512, 513], "italic": 37, "lowercas": 37, "uppercas": [37, 129], "capit": [37, 480, 486], "american": 37, "english": 37, "spell": [37, 76, 480, 491], "comma": 37, "ital": 37, "seq": [37, 182, 505], "datael": [37, 44, 45, 50, 60, 78, 130, 132, 133, 134, 158, 161, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 200, 201, 213, 480, 481, 489, 490, 491, 492, 495, 499, 505], "gender": 37, "neutral": 37, "pronoun": 37, "hypothet": 37, "tick": 37, "markup": [37, 504], "0xb4": 37, "built": [37, 509], "pass": [37, 39, 42, 50, 51, 92, 105, 106, 108, 132, 134, 140, 141, 204, 480, 483, 503, 504, 507, 510, 512], "fragments_per_fram": [37, 140], "haven": [37, 503, 505], "docstr": [37, 503], "proper": [37, 480, 483], "noun": 37, "wrap": [37, 39, 182], "unless": [37, 160, 165, 172, 480, 484, 495, 507], "good": [37, 48, 53, 503, 504], "reason": [37, 48, 504, 512], "link": [37, 504], "attr": 37, "ndarrai": [37, 39, 43, 50, 51, 52, 80, 82, 97, 98, 104, 132, 151, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 455, 457, 472, 480, 489, 493, 496, 510, 513], "dtype": [37, 39, 50, 51, 52, 132, 151, 217, 219, 510], "chtml": 37, "part05": [37, 504], "sect_6": 37, "html": [37, 504], "nema": 37, "org": [37, 49, 506], "four": [37, 98, 171, 179], "five": [37, 446], "sparingli": 37, "featur": [37, 40, 480, 488, 502, 503], "versionad": 37, "versionchang": 37, "handler": [37, 42, 43, 51, 80, 94, 97, 98, 132, 151, 205, 213, 214, 215, 216, 217, 218, 219, 472, 477, 480, 489, 491, 493, 494, 495, 496, 498, 499, 501, 503, 506, 510], "intermedi": [38, 39], "core": [38, 45], "mostli": [39, 131], "behav": [39, 40, 112, 204, 480, 490, 492, 507], "via": [39, 42, 55, 129, 132, 217, 480, 489, 491, 496, 498, 499, 506, 507, 510], "entir": [39, 132, 160, 164, 213, 217, 503, 505, 510], "collaps": [39, 50], "dcm_qt_tree": [39, 480, 487, 488], "0x10": [39, 129, 132, 223], "squar": [39, 44, 505], "bracket": [39, 44, 505], "conveni": [39, 44, 51, 129, 480, 496, 506], "cannot": [39, 43, 85, 171, 204, 444, 450, 480, 498, 503, 507, 512], "retriev": [39, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 128, 129, 132, 480, 493, 505, 506], "member": 39, "numer": [39, 171, 173, 466, 480, 484, 493, 498, 500], "begin": [39, 101, 140, 166], "beam1": 39, "thing": [39, 48, 50, 504, 505], "harder": 39, "realli": [39, 48, 480, 483, 492], "0x300a": 39, "0xb0": 39, "0xc2": 39, "rememb": [39, 44, 50, 512], "exact": [39, 440, 441, 443, 444], "handi": 39, "dir": [39, 41, 132, 480, 486, 499, 504, 511], "dure": [39, 44, 110, 480, 499, 503, 504], "session": [39, 40, 41, 44, 132, 504], "prompt": [39, 512], "pat": 39, "patientsetupsequ": [39, 41], "patientsex": [39, 132], "anywher": [39, 505], "insensit": [39, 132], "_dicom_dict": 39, "necessari": [39, 40, 49, 142, 144, 446, 507, 512, 513], "add_dict_entri": [39, 112, 480, 489, 492], "similarli": [39, 439, 505], "add_private_dict_entri": [39, 480, 492], "hood": 39, "offici": [39, 113, 114, 115, 116, 117, 118, 119, 126, 127, 128, 129, 413, 480, 486, 487, 505, 513], "reload": 39, "0x0010": [39, 132, 223, 505], "softwarevers": 39, "0x0018": 39, "0x1020": 39, "pixel_byt": 39, "175": 39, "166": 39, "203": 39, "207": 39, "216": 39, "186": 39, "183": 39, "157": 39, "181": 39, "184": 39, "171": 39, "152": 39, "164": 39, "235": 39, "906": 39, "910": 39, "923": 39, "922": 39, "929": 39, "927": 39, "914": 39, "954": 39, "938": 39, "942": [39, 480, 493], "925": [39, 505], "905": [39, 51], "959": 39, "916": [39, 480, 483], "911": 39, "904": 39, "909": 39, "int16": [39, 51, 52, 513], "extens": [39, 78, 133, 480, 491, 498], "effect": [39, 144, 437], "behavior": [39, 40, 55, 84, 85, 96, 132, 480, 487, 491, 495, 496], "enforc": [39, 45, 204, 220, 480, 486], "expect": [39, 48, 205, 213, 215, 218, 219, 480, 490, 492, 496, 500, 503], "t1": 39, "0x00100010": [39, 129, 132], "equival": [39, 132, 219, 480, 490], "t2": 39, "t3": 39, "t4": 39, "portion": 39, "is_priv": [39, 129, 170, 222, 413, 480, 489], "odd": [39, 132, 135, 205, 219, 222, 480, 490, 499, 505], "prettier": 39, "select": [39, 132, 143], "There": [40, 47, 48, 49, 51, 480, 491, 503, 504, 505, 506, 513], "strict": [40, 444, 480, 493, 500], "against": [40, 129, 171, 480, 485, 496], "turn": [40, 94, 161, 480, 496], "enabl": [40, 93, 132], "reading_validation_mod": [40, 55, 76, 77, 79, 95, 130, 132, 137, 480, 499], "writing_validation_mod": [40, 55, 79, 480, 499], "newli": [40, 132, 480, 495], "As": [40, 43, 48, 505, 511], "suggest": [40, 502, 503, 504], "except": [40, 44, 50, 51, 55, 76, 84, 85, 86, 97, 98, 153, 169, 171, 195, 204, 225, 477, 480, 483, 485, 488, 489, 492, 493, 496, 498, 499, 503, 505, 507, 510], "special": [40, 60, 477, 480, 487], "avoid": [40, 104, 161, 179, 439, 480, 492, 493, 496, 507], "invalid": [40, 55, 76, 77, 85, 89, 90, 136, 219, 437, 480, 492, 496, 498, 500], "legaci": 40, "strictli": [40, 49], "adher": 40, "guarante": [40, 43, 44], "predefin": 40, "That": [40, 44], "local": [40, 107, 480, 499, 503, 504, 505, 509, 512], "balanc": 40, "evolut": 40, "break": [40, 48, 480, 496, 507], "sometim": [40, 480, 491], "improv": [40, 480, 487, 490, 491, 498, 500, 502], "protect": 40, "upcom": [40, 96], "compat": [40, 42, 48, 182, 480, 483, 484, 486, 487, 488, 489, 501, 509], "next": [40, 44, 96, 132, 161, 171, 172, 480, 483, 496, 507, 513], "simplest": [40, 507, 509], "pydicom_futur": [40, 480, 496], "temporarili": 40, "future_behavior": [40, 477, 480, 496], "again": [40, 41, 53, 503, 507, 512], "anoth": [40, 212, 219, 480, 496, 505, 510, 512], "txt": [40, 48, 505], "virtual": [40, 503, 504, 508, 509], "brief": 41, "overview": [41, 507], "pure": 41, "report": [41, 480, 493, 502, 508], "radiotherapi": [41, 169], "easi": [41, 51], "complex": [41, 51], "natur": 41, "supin": 41, "prone": 41, "0182": 41, "01b2": 41, "techniqu": 41, "patientposit": 41, "hfp": 41, "rtplan2": 41, "server": [41, 504], "pynetdicom": 41, "primarili": [41, 480, 484], "design": [41, 53, 511], "let": [41, 42, 480, 493, 503, 504, 505, 507, 510, 512], "wherev": 41, "alter": [41, 53], "intellig": 41, "decompress": [41, 42, 43, 132, 216, 480, 489, 493, 509, 510], "onc": [41, 42, 82, 110, 112, 503, 504, 510, 511], "kind": [41, 44], "discuss": [41, 48, 503, 507], "give": [41, 163, 450, 480, 482, 483, 505, 510], "feedback": [41, 480, 487], "tracker": [41, 502, 503], "major": [41, 45, 48, 96, 496], "fix": [41, 46, 161, 488, 502, 503, 505], "announc": [41, 97, 98], "ll": [42, 503, 504, 505, 510, 512, 513], "reli": [42, 43, 80], "separ": [42, 101, 129, 132, 140, 141, 446, 480, 483, 484, 510, 512], "encapsul": [42, 51, 132, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 477, 480, 481, 491, 496], "amount": [42, 132, 213, 510, 513], "too": [42, 132, 135, 182, 469, 480, 490, 492, 493, 502], "extend": [42, 43, 132, 140, 141, 204, 220, 480, 496, 510], "relev": [42, 48, 182, 503], "encap": [42, 169, 477, 480, 489, 491, 510], "encapsulate_extend": [42, 140, 480, 496, 510], "jpeg2000lossless": [42, 510], "third_party_compression_func": [42, 510], "appropri": [42, 50, 51, 132, 166, 182, 204, 217, 471, 510], "ct_small_compressed_bas": [42, 510], "extendedoffsett": [42, 141, 510], "extendedoffsettablelength": [42, 141, 510], "ct_small_compressed_ext": [42, 510], "nativ": [42, 416, 510], "ct_small_rl": [42, 132, 510], "encoding_plugin": [42, 132, 151, 510], "Will": [42, 110], "implicitli": [42, 510], "done": [42, 503, 504, 505, 510, 512], "explicitli": [42, 50, 51, 88, 480, 491, 498, 507, 510], "us1_j2kr": [42, 510], "us1_rl": 42, "j2k": [42, 480, 501], "abl": [43, 44, 48, 480, 495, 506, 507, 510, 513], "ideal": 43, "jpeg_l": [43, 132, 214, 480, 489], "libjpeg": [43, 509], "openjpeg": [43, 509], "capac": 43, "mention": [43, 505, 512], "Be": 43, "verifi": [43, 480, 486], "purpos": 43, "far": [43, 129], "deflat": [43, 215, 413, 480, 495], "57": [43, 143, 219, 228, 319, 321, 480, 491, 496], "sv1": [43, 219, 480, 495], "70": [43, 143, 219, 228, 304, 320, 321, 480, 495, 496], "81": [43, 52, 143, 219, 228, 317, 318, 354, 480, 484], "92": [43, 143, 228, 312, 313, 480, 490, 491], "93": [43, 52, 143, 228, 311, 313, 480, 485, 491], "jpegimageplugin": 43, "jpeg2kimageplugin": 43, "5x": [43, 480, 498], "faster": [43, 480, 483, 495, 498], "adapt": [43, 480, 491], "well": [44, 51, 53, 171, 182, 206, 219, 480, 483, 484, 486, 493, 503, 505, 509], "v1": [44, 46, 480, 490, 491, 492, 513], "easier": [44, 48, 133, 504, 512], "outlin": 44, "ct_filenam": 44, "ial": 44, "preced": 44, "reserv": 44, "thu": [44, 480, 481], "necessarili": [44, 50], "enclos": 44, "clear": [44, 129, 132, 171], "0x00091001": 44, "privateblock": [44, 132, 477], "private_block": [44, 132], "0x0009": 44, "0x01": [44, 132], "compani": 44, "accomplish": 44, "0x000b": 44, "add_new": [44, 132, 135, 505], "000b": 44, "0x02": 44, "lut": [45, 49, 206, 207, 208, 209, 210, 211, 219, 480, 493, 495, 496, 498], "voi": [45, 209, 210, 211, 219, 480, 493, 496], "overlai": [45, 97, 132, 219, 473, 477, 480, 493, 496, 505], "overlay_arrai": [45, 97, 132, 480, 493], "handl": [45, 51, 53, 76, 98, 129, 132, 178, 196, 445, 473, 480, 481, 484, 486, 488, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 505, 506, 509], "precondit": 45, "third": [45, 446, 509, 512], "parti": [45, 446, 509, 512], "pil": [45, 480, 483, 491], "wxpython": [45, 480, 483], "best": 45, "practic": [45, 48, 171], "futur": [45, 96, 132, 151, 480, 486, 496, 511], "proof": [45, 96], "drop": [46, 132, 480, 495, 496], "april": 46, "backport": 46, "seriou": 46, "speak": 46, "encourag": [46, 480, 486], "transit": 46, "earli": 46, "common": [47, 52, 53, 76, 480, 491, 507, 513], "fileread": [47, 48, 70, 202, 477, 504, 505], "fine": 47, "read_parti": [47, 70, 160, 202, 505], "preexist": 47, "v": [48, 480, 492], "often": [48, 49, 51, 110, 506], "previou": [48, 53, 172, 173, 480, 486, 489, 495, 496, 512], "sever": [48, 49, 55, 480, 487, 489], "backward": [48, 480, 483, 489, 512], "incompat": [48, 480, 483, 489, 512], "longer": [48, 55, 82, 129, 215, 480, 490, 491, 493, 496, 498, 507, 512], "renam": [48, 480, 481, 489, 495, 500, 501], "caus": [48, 450, 480, 482, 507], "confus": 48, "sens": [48, 480, 483], "engin": 48, "wasn": 48, "lightli": 48, "great": 48, "leap": 48, "rest": [48, 480, 499, 504], "smooth": 48, "old": [48, 480, 481, 482, 486, 489, 495, 512], "pypi": [48, 480, 489, 491, 509], "co": [48, 132, 513], "alongsid": 48, "uninstal": [48, 512], "becom": [48, 96, 480, 486, 496, 503, 504, 507, 512], "instruct": [48, 503, 504, 505], "hope": 48, "peopl": [48, 507], "page": [48, 480, 489, 492, 502, 503, 504, 509], "welcom": 48, "hopefulli": 48, "quickli": [48, 164, 507], "importerror": [48, 213, 214, 216, 455, 457, 480, 497, 503], "traceback": [48, 85, 225, 505, 507, 510], "recent": [48, 85, 503, 504, 505, 507, 510], "stdin": [48, 85, 505, 507, 510], "choic": 48, "look": [48, 53, 503, 504, 505, 512], "continu": [48, 139, 480, 481, 498, 512], "apart": 48, "dictionaryvm": 48, "dictionary_vm": 48, "dictionaryvr": 48, "dictionary_vr": [48, 505], "private_dictionaryvm": 48, "private_dictionary_vm": 48, "private_dictionaryvr": 48, "private_dictionary_vr": 48, "read_fil": [48, 480, 482, 483, 484, 489, 498], "filewrit": [48, 70, 132, 136, 477, 505], "write_fil": [48, 480, 489, 498], "tagtool": 48, "tag_in_except": [48, 60], "move": [48, 93, 100, 136, 170, 171, 480, 486, 487, 504, 507], "is_valid": [48, 413], "notcompressedpixeltransfersyntax": 48, "uncompressedpixeltransfersyntax": [48, 480, 496], "pydicom_root_uid": 48, "gone": [48, 504], "cleannam": 48, "short_nam": 48, "long_nam": 48, "all_names_for_tag": 48, "not_group2": 48, "pydicom_uid": 48, "mainli": [49, 132, 480, 487], "concern": 49, "desir": [49, 204, 212, 219], "stdlib": 49, "2d": [49, 218, 480, 496], "axesimag": 49, "thank": [49, 480, 483, 486], "roi": 49, "key": 49, "out": [49, 51, 53, 141, 171, 219, 440, 441, 480, 496, 502, 503, 504, 505, 507, 513], "pydicom_tkint": 49, "contrib": [49, 483, 502], "come": [49, 512], "photoimag": 49, "widget": 49, "pydicom_pil": 49, "imview": 49, "60xx": [50, 97, 205, 219, 473, 480, 493, 505], "3000": [50, 97, 132, 205, 207, 208, 219, 473, 480, 493, 505], "6000": 50, "6002": 50, "601e": 50, "siemen": [50, 51], "withoverlai": [50, 51], "0x6000": [50, 205, 505], "0x3000": 50, "29282": 50, "tend": [50, 509], "lazi": 50, "unpack": [50, 219, 466, 480, 491, 499], "uint8": [50, 206, 207, 208, 209, 210, 219], "484": 50, "align": 50, "pack_bit": [50, 219, 480, 491, 496], "numpy_handl": [50, 97, 98, 480, 498], "packed_byt": 50, "temp": [50, 51], "reduc": [50, 51, 212, 219, 480, 491, 496, 507, 510], "512x512": [50, 51], "256x256": [50, 51], "bulk": [51, 129, 132, 477, 480, 493, 494, 497, 506], "although": [51, 171, 507], "almost": 51, "parametr": [51, 503], "floatpixeldata": [51, 219, 480, 498], "doublefloatpixeldata": [51, 219, 480, 498], "interchang": [51, 507], "x89": 51, "x03": 51, "xfb": 51, "xcb": 51, "xeb": 51, "xf9": 51, "x02": 51, "x94": 51, "x7f": 51, "immedi": 51, "varieti": 51, "broken": [51, 512], "fragment": [51, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 480, 493], "1227": 51, "302": 51, "304": 51, "328": 51, "628": 51, "770": 51, "907": 51, "298": 51, "331": 51, "355": 51, "498": [51, 357, 358, 437, 480, 490], "566": 51, "706": 51, "280": 51, "285": 51, "334": 51, "431": 51, "1094": 51, "1068": 51, "1083": 51, "339": 51, "377": 51, "413": 51, "1318": 51, "1346": 51, "1336": 51, "378": 51, "374": 51, "422": 51, "1369": 51, "1129": 51, "862": 51, "straightforward": 51, "particularli": [51, 53], "300": 51, "shrunk": 51, "apply_color_lut": [51, 219, 477, 480, 493], "obxxxx1a": 51, "pet": [51, 206, 219], "possibli": [51, 132], "physic": [51, 507], "quantiti": [51, 472, 513], "hounsfield": 51, "apply_modality_lut": [51, 209, 210, 211, 219, 477, 480, 493, 495], "hu": 51, "apply_voi_lut": [51, 219, 477, 480, 493, 495, 496], "voic": 52, "audio": [52, 513], "lead": [52, 55, 440, 441, 452, 480, 484, 489, 500, 513], "ecg": [52, 513], "5400": [52, 132, 472, 513], "consist": [52, 133, 182, 480, 486, 504, 510, 513], "synchronis": [52, 513], "003a": [52, 132, 472, 513], "001a": 52, "waveformdata": [52, 513], "240000": [52, 513], "multiplex_1": 52, "112": 52, "25": [52, 437], "68": [52, 389, 406, 407], "106": [52, 228, 334, 335], "62": 52, "37": 52, "131": [52, 232], "137": 52, "10000": [52, 513], "multiplex_2": 52, "1200": [52, 480, 496, 513], "multiplex_arrai": [52, 132, 472, 480, 496, 513], "55": [52, 480, 483], "65": [52, 246], "85": 52, "60": [52, 480, 487, 498], "110": [52, 480, 486], "coupl": [53, 507, 512], "truli": 53, "certain": [53, 132, 219, 504, 505], "tool": [53, 480, 501], "approxim": 53, "especi": [53, 503], "tricki": 53, "awar": [53, 507], "524288": 53, "bigger": [53, 480, 495], "potenti": 53, "disadvantag": 53, "sai": [53, 503, 505], "wrote": 53, "quit": [53, 480, 483, 503], "switch": [53, 89, 480, 484, 486, 488, 493, 495, 498, 500, 503, 504, 512], "individu": [53, 212, 219, 446, 480, 486, 496, 498], "code_fil": 53, "certainli": 53, "difficult": [53, 503], "singleton": 55, "infer_sq_for_un_vr": [55, 480, 499], "undefin": [55, 129, 144, 158, 175, 182, 480, 485, 496, 499], "conform": [55, 129, 132, 171, 174, 182, 195, 202, 218, 437, 480, 489, 491, 492, 505, 507, 510], "failur": [55, 480, 495, 503], "bypass": [55, 151], "dataelem": [60, 78, 132, 162, 181, 197, 198, 471, 477, 480, 492, 495, 505], "dataelement_from_raw": [60, 505], "rawdatael": [60, 91, 130, 132, 133, 134, 158, 162, 193, 471], "tupletag": [60, 480, 483], "convert_ae_str": 60, "convert_atvalu": 60, "convert_da_str": 60, "convert_ds_str": 60, "convert_dt_str": 60, "convert_is_str": 60, "convert_numb": [60, 180, 181], "convert_obvalu": 60, "convert_owvalu": 60, "convert_pn": 60, "convert_single_str": 60, "convert_sq": 60, "convert_str": 60, "convert_tag": 60, "convert_text": 60, "convert_tm_str": 60, "convert_ui": 60, "convert_un": 60, "convert_ur_str": 60, "convert_valu": 60, "multiv": [60, 477, 505], "validate_dataset": [60, 505], "is_valid_d": [60, 480, 498], "format_number_as_d": [60, 480, 498], "isfloat": [60, 480, 500], "multistr": 60, "data_element_gener": [70, 161], "data_element_offset_to_valu": 70, "read_deferred_data_el": 70, "read_dicomdir": [70, 480, 488], "read_file_meta_info": [70, 133, 137], "read_preambl": [70, 202, 505], "read_sequ": 70, "read_sequence_item": 70, "correct_ambiguous_vr": 70, "correct_ambiguous_vr_el": 70, "multi_str": 70, "write_atvalu": 70, "write_da": 70, "write_dataset": 70, "write_data_el": 70, "write_dt": 70, "write_file_meta_info": [70, 182, 505], "write_numb": 70, "write_number_str": 70, "write_obvalu": 70, "write_owvalu": 70, "write_pn": [70, 480, 490], "write_sequ": 70, "write_sequence_item": 70, "write_str": 70, "write_text": 70, "write_tm": 70, "write_ui": 70, "write_un": 70, "dicombytesio": 70, "dicomio": [70, 149, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "fileutil": [70, 477], "absorb_delimiter_item": 70, "find_byt": [70, 177, 178, 480, 487], "find_delimit": [70, 178], "length_of_undefined_length": 70, "read_undefined_length_valu": 70, "mistak": 76, "stand": 76, "alon": 76, "respect": [76, 93, 480, 490], "lookuperror": [76, 77], "delimit": [77, 143, 144, 145, 175, 177, 178, 179, 182, 183, 445, 480, 496, 498], "reset": [77, 96, 99], "loss": [77, 79, 440, 441, 450, 480, 496], "unicodedecodeerror": 77, "dicom_character_set": 78, "unicodeencodeerror": 79, "precis": [80, 88, 219, 440, 441, 446, 450, 480, 498], "use_decimal_boolean": 81, "valueerror": [81, 82, 84, 85, 109, 110, 111, 112, 132, 134, 135, 136, 144, 146, 162, 171, 182, 195, 205, 215, 218, 219, 437, 450, 455, 457, 469, 505, 507, 510], "use_ds_numpi": [81, 455, 477, 480, 495], "use_numpi": 82, "__setattr__": 84, "camel": [84, 480, 496], "neither": [84, 85, 171, 207, 208, 210, 219], "nor": [84, 85], "citizen": [84, 129, 132, 505], "patientsnam": [84, 85], "1895": 84, "userwarn": 84, "__contains__": [85, 480, 496], "0x100100010": 85, "494": 85, "msg": [85, 505], "exc": 85, "occur": [86, 87, 480, 493, 503, 507], "digit": [88, 135, 196, 513], "round": [88, 219], "encount": 89, "writer": 89, "elementcallback": 91, "callabl": [91, 129, 132, 158, 161, 165, 169, 204, 445], "everi": [91, 151, 219, 507, 512, 513], "data_element_callback": [92, 99, 477], "queri": [93, 171, 507], "anymor": 93, "manual": 93, "debug_on": 94, "default_handl": 94, "log": [94, 132, 480, 486, 499, 503], "logger": [94, 480, 487], "streamhandl": 94, "deprec": [95, 96, 97, 129, 132, 137, 160, 163, 218, 220, 480, 485, 486, 490, 491, 492, 495, 496, 498, 499, 500], "enable_futur": 96, "imit": 96, "emul": [96, 132], "invalid_keyword_behavior": [96, 477, 480, 496], "invalid_key_behavior": [96, 477, 480, 496], "extract": [97, 98], "get_overlay_arrai": [97, 205], "package_import_nam": 97, "handler_nam": [97, 132], "fail": [97, 98, 480, 483, 484, 489, 503, 504, 507], "gdcm_handler": 98, "pillow_handl": [98, 503], "jpeg_ls_handl": 98, "pylibjpeg_handl": 98, "rle_handl": [98, 480, 499], "convert_pixel_data": [98, 132], "shall": [98, 132, 142, 143, 144, 146, 147, 148, 158, 182, 195], "supports_transfer_syntax": [98, 213, 214, 215, 216, 217, 218], "transfer_syntax": [98, 213, 214, 215, 216, 218], "get_pixeldata": [98, 213, 214, 215, 216, 217, 218], "1d": [98, 205, 215, 216, 217, 218, 219], "reshap": [98, 205, 217, 219], "dimens": [98, 217], "needs_to_convert_to_rgb": [98, 213, 214, 215, 216, 217, 218], "colourspac": [98, 480, 498], "refus": 98, "fact": [98, 505], "notimplementederror": [98, 132, 214, 215, 216, 218, 219], "global": [100, 480, 499], "ds_decim": [102, 477, 480, 495], "ds_numpi": [103, 477], "charset": [105, 477, 480, 500], "extern": [107, 480, 496, 498], "new_entries_dict": [109, 111], "0x10021001": [109, 110], "0x10021002": [109, 110], "retir": [110, 117, 129, 180, 181, 228, 413, 480, 496], "perman": 110, "private_cr": [111, 112, 120, 123, 124, 125, 132, 135, 222], "0x00410001": 111, "0x00410002": 111, "acm": 111, "ltd": 111, "whose": [113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 446, 450, 503], "keyerror": [113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 130, 132, 505], "get_private_entri": 119, "get_entri": 120, "grouplength": 121, "mask": 122, "file_value_tel": 129, "is_undefined_length": [129, 132, 182, 480, 493], "already_convert": 129, "validation_mod": [129, 204, 413, 439, 440, 441, 443, 444, 445, 446], "joan": [129, 132], "Its": 129, "descripwidth": 129, "35": [129, 132, 292], "0xffffffffl": 129, "ie": 129, "maxbytestodisplai": [129, 480, 492], "showvr": 129, "backslash": [129, 132, 446, 467, 480, 481, 482, 498], "intern": [129, 132, 158, 487], "0xffffffff": 129, "empty_value_for_vr": 129, "empty_valu": 129, "classmethod": [129, 132, 446], "from_json": [129, 132, 480, 493, 496, 506], "dataset_class": 129, "value_kei": 129, "bulk_data_uri_handl": [129, 132, 480, 496, 506], "json": [129, 132, 222, 480, 492, 493, 497, 498, 508], "inlinebinari": [129, 132], "bulkdatauri": [129, 132, 506], "dicomweb": [129, 132, 506], "wado": [129, 132, 506], "is_empti": 129, "ret": 129, "repval": [129, 132], "to_json": [129, 132, 480, 494, 506], "bulk_data_threshold": [129, 132, 480, 494, 506], "bulk_data_element_handl": [129, 132, 506], "dump_handl": [129, 132], "base64": [129, 132, 506], "dump": [129, 132], "to_json_dict": [129, 132, 480, 494, 500, 506], "18": [129, 132, 409, 480, 489, 506], "validate_valu": 129, "raw_data_el": [130, 471], "belong": [130, 132, 170, 171, 182], "value_tel": 131, "is_raw": 131, "undecod": 131, "alia": [131, 447, 480, 496], "mutablemap": [132, 133, 134], "mutabl": 132, "0x00100020": 132, "0x0030": 132, "0x00100030": 132, "linac": 132, "son": 132, "daughter": 132, "0x0041": 132, "john": [132, 446], "0041": 132, "get_private_item": 132, "iteral": [132, 480, 482], "jsonmodel": 132, "ds2": 132, "default_element_format": 132, "default_sequence_element_format": 132, "indent_char": [132, 172], "write_like_origin": [132, 182, 505], "decoding_plugin": [132, 151], "encapsulate_ext": 132, "tri": [132, 151], "placehold": [132, 151], "unabl": [132, 219, 505, 507, 510, 512], "runtimeerror": [132, 217], "shallow": 132, "state": [132, 188, 506], "alphabet": [132, 446, 480, 500], "__getitem__": [132, 505], "unconvert": 132, "increas": [132, 480, 483, 500], "ensure_file_meta": 132, "fix_meta_info": [132, 480, 491], "enforce_standard": [132, 136, 195, 505], "ambigu": [132, 180, 181, 480, 489, 491, 492, 496], "therefor": [132, 204, 219], "incorrect": [132, 143, 151, 480, 484, 490, 492, 493, 501], "validate_file_meta": [132, 477, 505], "formatted_lin": [132, 480, 482], "element_format": 132, "sequence_element_format": 132, "indent_format": 132, "json_dataset": 132, "bytearrai": [132, 218, 219], "simul": 132, "obj": 132, "get_item": 132, "defer": [132, 162, 480, 482, 486, 493, 499, 505], "element_offset": [132, 135], "analog": 132, "group_dataset": 132, "is_original_encod": 132, "dict_item": 132, "unlik": 132, "flatten": 132, "dict_kei": 132, "referencetyp": [132, 220], "weak": [132, 220], "parent_seq": 132, "weakref": 132, "pop": [132, 480, 492], "tagtyp": 132, "combin": [132, 223, 503, 505, 513], "popitem": 132, "unrealist": 132, "free": 132, "associ": 132, "pathlik": [132, 133, 137, 160, 162, 163, 164, 171, 182, 480, 495], "binaryio": [132, 133, 137, 156, 158, 160, 161, 162, 165, 166, 167, 168, 175, 176, 177, 178, 179, 182], "wrapper": [132, 163, 480, 495], "set_original_encod": 132, "character_encod": 132, "optim": 132, "setdefault": [132, 480, 492, 496], "0x00100040": 132, "suppress_invalid_tag": [132, 480, 500], "threshold": 132, "inlin": [132, 506], "bubbl": 132, "my_json_dump": 132, "sort_kei": 132, "trait_nam": 132, "ipython": [132, 480, 481], "autocomplet": 132, "valuesview": 132, "visit": [132, 503, 504], "0210": [132, 472, 513], "0211": 132, "filename_or_obj": [133, 137, 162], "prepend": 133, "0x0002": [133, 505], "fileobj_typ": [133, 162], "timestamp": [133, 162], "overrid": [134, 169, 439, 480, 491, 507], "super": [134, 220], "typeerror": [134, 160, 204, 213, 214, 480, 490, 496, 505], "init_valu": 134, "private_creator_el": 135, "helper": 135, "block_start": 135, "low": [135, 506], "get_tag": 135, "hold": [137, 157, 182, 204, 220], "carri": [137, 439, 480, 488], "forward": 137, "invaliddicomerror": [137, 160, 163, 166, 477, 480, 484, 505], "parse_record": 137, "hierarchi": [137, 171, 507], "reorgan": [137, 480, 481, 483], "concaten": [139, 146], "togeth": [139, 140, 183], "has_bot": [140, 141], "frame1": 140, "frame2": 140, "exce": [140, 141], "31": [140, 477], "circumst": [140, 141], "0x00": [140, 142, 182, 463], "strongli": [140, 171, 507], "nr_fragment": [142, 148], "marker": [142, 143, 166, 179, 480, 493, 498], "null": [142, 205, 219, 463], "bytestream": [143, 145], "nr_frame": [143, 145], "span": 143, "predict": 143, "Near": 143, "attempt": [143, 181, 472, 480, 489, 498, 505], "boundari": 143, "eoi": [143, 480, 493], "eoc": [143, 480, 493], "0xffd9": 143, "hasn": [143, 503, 504], "fp": [144, 146, 149, 158, 160, 161, 166, 167, 168, 175, 176, 177, 178, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "stream": [144, 149, 182, 480, 501, 503], "fffe": [144, 146, 147, 148], "e000": [144, 146, 147, 148], "e0dd": 144, "0x00000000": [144, 146], "presenc": [144, 206, 219, 505], "absenc": 144, "fe": 146, "e0": 146, "08": 146, "measur": [146, 169], "bot": 146, "ffee": 146, "itemis": 148, "factori": [151, 204, 224, 439, 480, 483, 498], "import_path": 151, "encode_pixel_data": 151, "modulenotfounderror": 151, "unavail": 151, "attributeerror": [151, 180, 182, 205, 213, 215, 217, 218, 480, 483, 499], "aren": [151, 171, 505, 507], "idx": [151, 510], "uint16": [151, 206, 207, 208, 209, 210, 219], "iter_encod": [151, 510], "kwargs_from_d": 151, "missing_depend": 151, "nice": [151, 204, 503], "remove_plugin": 151, "appear": [153, 507], "dicm": [153, 166, 182, 195, 202, 505], "mayb": 153, "file_like_obj": 156, "textio": 156, "no_read": 156, "no_seek": 156, "whenc": 156, "no_writ": 156, "bytes_read": 156, "need_exact_length": 157, "eoferror": [157, 179], "read_beul": 157, "read_beu": 157, "read_be_tag": 157, "read_leul": 157, "read_leu": 157, "read_le_tag": 157, "write_ul": 157, "write_u": 157, "write_beul": 157, "write_beu": 157, "write_leul": 157, "write_leu": 157, "write_tag": 157, "stop_when": [158, 161, 165], "defer_s": [158, 160, 161, 165, 179, 203, 480, 482], "specific_tag": [158, 160, 161, 165, 505], "read_data_el": 158, "stop_before_pixel": [160, 480, 483], "pars": [160, 165, 219, 477, 480, 481, 493, 495, 496], "context": [160, 225, 480, 489, 505], "tell": [160, 480, 482, 504, 507], "caller": [160, 480, 483], "respons": [160, 446, 506], "close": [160, 165, 480, 482, 483], "kb": 160, "stop": [160, 165, 480, 483], "subsequ": 160, "unsupport": [160, 213, 214, 215, 218], "condit": [160, 165, 480, 489], "bytelength": [161, 167], "parent_encod": [161, 194], "at_top_level": 161, "itemdelitertag": 161, "call_back": 161, "isn": [161, 219, 413, 437, 480, 492, 496, 504, 505], "heurist": [161, 480, 489], "raw_data_elem": 162, "persist": 162, "st_mtime": 162, "oserror": 162, "meant": [164, 202], "fileobj": [165, 505], "reach": [165, 177, 179], "assess": 169, "_define_assess": 169, "doc": [169, 504], "_define_encap_doc": 169, "fiduci": 169, "_define_generic_content_id": 169, "hang": 169, "protocol": 169, "_define_hanging_protocol": 169, "_define_imag": 169, "implant": [169, 171], "_define_impl": 169, "assi": 169, "_define_implant_assi": 169, "_define_implant_group": 169, "_define_key_object_doc": 169, "_define_palett": 169, "_define_pati": 169, "_define_empti": 169, "_define_present": 169, "_define_radiotherapi": 169, "_define_generic_cont": 169, "registr": 169, "_define_rt_dos": [169, 507], "_define_rt_plan": 169, "_define_rt_structure_set": 169, "treat": [169, 507], "_define_rt_treatment_record": 169, "_define_seri": 169, "spectroscopi": 169, "_define_spectroscopi": 169, "sr": [169, 446, 480, 498, 511], "_define_sr_docu": 169, "stereometr": 169, "_define_studi": 169, "surfac": 169, "_define_surface_scan": 169, "tract": 169, "1430": [169, 507], "my_record": 169, "offsetofthenextdirectoryrecord": 169, "recordinuseflag": 169, "0xffff": [169, 480, 490], "offsetofreferencedlowerleveldirectoryent": 169, "specificcharacterset": 169, "my_inst": 169, "add_custom": [169, 171, 507], "node": [170, 171, 172, 505], "recordnod": [170, 171, 477], "leaf": [170, 171, 172], "fileid": 170, "file_set": [170, 172], "for_addit": [170, 507], "for_mov": 170, "for_remov": 170, "is_stag": [170, 171, 507], "ds_or_path": 171, "cancel": 171, "directory_record": [171, 477, 507], "definit": [171, 182, 477, 480, 489, 513], "suitabl": [171, 206, 219, 509], "1400": [171, 507], "1410": [171, 507], "1420": [171, 507], "1500": [171, 480, 499], "1510": 171, "1511": [171, 480, 499], "1512": 171, "privaterecorduid": 171, "leaf_nod": 171, "top_nod": 171, "ancestor": [171, 172], "due": [171, 480, 487, 498, 500, 503, 507], "force_implicit": 171, "1234567": 171, "7654321": 171, "include_orphan": 171, "raise_orphan": 171, "attach": 171, "imposs": [171, 512], "orphan": 171, "use_exist": [171, 507], "backup": 171, "ptxxxxxx": 171, "stxxxxxx": 171, "sexxxxxx": 171, "imxxxxxx": 171, "xxxxxx": 171, "alphanumer": [171, 173], "paxxxxxx": 171, "p0xxxxxx": 171, "p1xxxxxx": 171, "p2xxxxxx": 171, "everyth": [171, 503, 507], "child": 172, "nearest": 172, "furthest": 172, "has_inst": 172, "amongst": 172, "sibl": 172, "is_root": 172, "prettifi": 172, "pretti": [172, 503], "record_typ": [172, 507], "36": 173, "00010": 173, "00000000": 173, "00000001": 173, "00000002": 173, "_": [174, 504], "bytes_to_find": 176, "read_siz": [176, 177, 178, 179], "found_at": 176, "routin": 178, "delimiter_tag": 179, "eof": 179, "dicond": [180, 181], "henc": 182, "profil": 182, "bytestr": [182, 219], "eeee": 182, "independ": 182, "preserv": [182, 480, 488, 495], "had": [182, 480, 491, 498, 503], "sensibl": 182, "is_undefined_length_sequence_item": 182, "put": 183, "swap": [188, 459], "rule": 193, "0017": 195, "send": [195, 503, 504], "struct_format": [197, 452, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 468], "pare": 202, "fast": [202, 224], "conserv": 202, "approach": 202, "expr": 203, "type_constructor": [204, 220, 505], "_t": [204, 445], "_itemtyp": 204, "constructor": 204, "insert": [204, 220, 504, 505], "overlayrow": 205, "overlaycolumn": 205, "0015": 205, "numberofframesinoverlai": 205, "overlaybitsalloc": 205, "overlaybitposit": 205, "get_expected_length": [205, 219], "NOT": [205, 219], "0x6010": 205, "0x60ff": 205, "reshape_overlay_arrai": 205, "1201": [206, 219], "1203": [206, 219], "1221": [206, 219], "1223": [206, 219], "1204": [206, 219], "1224": [206, 219], "supplement": [206, 219], "hot_iron": [206, 219], "hot_metal_blu": [206, 219], "pet_20_step": [206, 219], "spring": [206, 219], "summer": [206, 219], "fall": [206, 219], "winter": [206, 219], "rgba": [206, 219], "3rd": [206, 207, 208, 209, 210, 219], "colour": [206, 219], "3002": [207, 208, 209, 210, 219, 480, 493], "float64": [207, 208, 210, 211, 219, 455], "3010": [209, 210, 219], "apply_window": [209, 210, 219, 477, 480, 496], "prefer_lut": [210, 219, 480, 496], "apply_voi": [210, 211, 219, 477, 480, 496], "per_fram": [212, 219, 480, 498], "iec": [212, 219, 313, 318, 321], "10918": [212, 219, 321, 480, 498], "2012": [212, 219], "itu": [212, 219], "871": [212, 219], "create_data_el": 213, "create_imag": 213, "volum": 213, "affect": [213, 214, 215, 216, 217, 218, 219, 503, 504], "should_change_photometricinterpretation_to_rgb": [213, 214, 215, 216, 217, 218], "pyjpegl": 214, "planarconfigur": [215, 217, 218, 219, 480, 489], "numberoffram": [215, 217, 218, 219, 480, 501], "read_onli": 215, "resampl": 215, "writeabl": 215, "as_arrai": [217, 219], "generate_fram": 217, "tsyntax": 217, "rle_segment_ord": 218, "suppos": 218, "msb": 218, "lsb": 218, "rle_encode_fram": [218, 480, 498], "dtype_corrected_for_endian": 219, "numpy_dtyp": 219, "expand_ybr422": [219, 480, 499], "subsampl": 219, "halv": 219, "cb": 219, "get_image_pixel_id": 219, "get_j2k_paramet": 219, "codestream": 219, "15444": [219, 313], "is_sign": 219, "get_nr_fram": 219, "conjunct": 219, "uint": 219, "sake": 219, "pixel_dtyp": 219, "as_float": 219, "reshape_pixel_arrai": 219, "unpack_bit": [219, 480, 499], "substitut": 220, "construct": [220, 440, 441, 446, 480, 486, 487, 498], "parent_dataset": 220, "is_private_cr": 222, "json_kei": [222, 480, 500], "ggggeeee": 222, "meaningless": 222, "arg2": [223, 480, 483], "0x00100015": 223, "0x50": 223, "0x0015": 223, "group_elem": 224, "safe": 224, "71": 226, "103": [228, 331, 335, 480, 486], "108": [228, 298, 335, 446], "78": [231, 306, 322, 327, 349, 403, 405, 425, 480, 484], "19": 240, "200": [242, 244, 365, 429, 430], "69": 247, "39": [248, 437], "34": [251, 371, 373], "33": 252, "82": [255, 480, 484], "501": [256, 257, 258, 259, 260, 261, 262], "66": [264, 390, 397, 401, 402, 408, 411], "601": [272, 273], "130": 284, "22": [285, 387], "76": 289, "43": [295, 480, 483], "38": 300, "45": 303, "14495": 318, "59": 323, "mpeg": [335, 480, 496], "79": [338, 480, 484], "826": [357, 358, 437, 480, 493], "3680043": [357, 358, 437], "73": [360, 480, 483], "74": 362, "compil": [367, 368], "regex": [367, 368], "67": [391, 435], "72": [399, 480, 483], "human": [413, 446, 505], "friendli": [413, 505, 507], "subclass": [413, 480, 490], "is_transfer_syntax": 413, "is_compress": 413, "is_defl": 413, "is_encapsul": 413, "encasul": 413, "entropy_src": 437, "uuid": 437, "hash": [437, 480, 492, 498], "uuid4": 437, "sha512": 437, "determinist": 437, "unrecover": 437, "random": 437, "22463838056059845879389038257786771680": 437, "167161297070865690102504091919570542144": 437, "lorem": 437, "ipsum": 437, "87507166259346337659265156363895084463": 437, "immut": [438, 442, 448, 480, 492], "auto_format": [439, 440, 441, 480, 498], "__new__": 439, "penalti": 439, "clean": [439, 480, 489, 503, 504, 512], "satisfi": [440, 441, 450], "23e2": 440, "123": [440, 506], "rewrit": [443, 444], "uncommon": 444, "valtyp": 445, "original_str": [446, 480, 491], "from_named_compon": [446, 480, 498], "from_named_components_veterinari": [446, 480, 498], "ideograph": 446, "phonet": 446, "absent": [446, 513], "demand": 446, "famili": 446, "family_nam": [446, 480, 498], "format_str": 446, "given_nam": [446, 480, 498], "middle_nam": 446, "name_prefix": 446, "name_suffix": 446, "family_name_ideograph": 446, "given_name_ideograph": 446, "middle_name_ideograph": 446, "name_prefix_ideograph": 446, "name_suffix_ideograph": 446, "family_name_phonet": 446, "given_name_phonet": 446, "middle_name_phonet": 446, "name_prefix_phonet": 446, "name_suffix_phonet": 446, "middl": 446, "addition": 446, "sect": 446, "adam": 446, "robert": 446, "quinci": 446, "rev": 446, "div": 446, "korean": [446, 480, 486], "\u6d2a": 446, "\u5409\u6d1e": 446, "\ud64d": 446, "\uae38\ub3d9": 446, "dr": 446, "chief": 446, "offic": 446, "responsible_party_nam": 446, "patient_nam": 446, "responsible_party_name_ideograph": 446, "patient_name_ideograph": 446, "responsible_party_name_phonet": 446, "patient_name_phonet": 446, "veterinari": 446, "OR": 446, "hors": 446, "abc": 446, "farm": 446, "fourth": 446, "fifth": 446, "truncat": [450, 480, 482], "retain": [450, 480, 498], "scientif": 450, "incur": 450, "furthermor": 450, "finit": 450, "inf": 450, "nan": 450, "fewer": 451, "byte_str": [452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470], "Not": [452, 453, 454, 455, 456, 457, 462, 463, 465, 468], "int64": 457, "use_is_numpi": [457, 477, 480, 495], "waveformbitsalloc": [472, 513], "waveformsampleinterpret": [472, 513], "sb": 472, "ub": 472, "ab": 472, "dev0": 477, "jul": 477, "convert_encod": 477, "decode_el": 477, "decode_byt": 477, "encode_str": 477, "allow_ds_float": [477, 480, 486], "assume_implicit_vr_switch": [477, 480, 498], "convert_wrong_length_to_un": [477, 480, 498], "data_element_callback_kwarg": 477, "debug": [477, 480, 486, 488], "enforce_valid_valu": [477, 480, 486, 492, 493, 496, 498, 499], "overlay_data_handl": [477, 480, 496], "reset_data_element_callback": 477, "show_file_meta": [477, 480, 495], "apply_j2k_correct": [477, 480, 501], "get_charset_fil": 477, "get_palette_fil": [477, 480, 493], "apply_rescal": [477, 480, 496], "get_encod": 477, "generate_filenam": 477, "is_conformant_file_id": 477, "miscellan": 477, "misc": [477, 480, 489], "is_dicom": [477, 480, 489], "size_in_byt": 477, "gracefulli": [480, 496, 501], "1844": [480, 501], "disagre": [480, 501], "1689": [480, 501], "folder": [480, 483, 501], "refactor": [480, 501], "ci": [480, 501], "dependabot": [480, 501], "commit": [480, 501], "ruff": [480, 501], "eol": [480, 500], "decemb": [480, 500], "1634": [480, 500], "1648": [480, 500], "1414": [480, 500], "cli": [480, 500], "1674": [480, 500], "1658": [480, 500], "1661": [480, 500], "highli": [480, 500], "1728": [480, 500], "1734": [480, 500], "pyproject": [480, 500], "toml": [480, 500], "1792": [480, 500], "2023b": [480, 500], "1803": [480, 500], "1632": [480, 500], "progress": [480, 500, 504], "bar": [480, 500], "1611": [480, 500], "crash": [480, 490, 499, 500], "1638": [480, 500], "extrem": [480, 500], "byteslengthexcept": [480, 500], "1683": [480, 500], "1670": [480, 500], "1693": [480, 500], "1680": [480, 500], "1702": [480, 500], "wrong": [480, 491, 492, 496, 500], "calcul": [480, 498, 500], "1667": [480, 500], "lutdata": [480, 500], "1747": [480, 500], "1738": [480, 500], "teardown": [480, 500], "pytest": [480, 500], "fork": [480, 500, 503, 504, 509], "charpyl": [480, 500, 509], "1788": [480, 500], "favor": [480, 485, 499], "1617": [480, 499], "enum": [480, 499], "1498": [480, 499], "resort": [480, 499], "slowest": [480, 499], "1487": [480, 499], "mitra": [480, 499], "1588": [480, 499], "pr": [480, 499, 503, 504], "1594": [480, 499], "1593": [480, 499], "introduc": [480, 499, 503], "2022a": [480, 499], "holog": [480, 499], "0019xx43": [480, 499], "1565": [480, 499], "deep": [480, 499], "1571": [480, 499], "1581": [480, 499], "maco": [480, 499, 509], "1599": [480, 499], "bad": [480, 489, 499], "1596": [480, 499], "1606": [480, 499], "1609": [480, 499], "__eq__": [480, 490, 498], "operand": [480, 498], "1327": [480, 498], "__str__": [480, 490, 498, 505], "1262": [480, 498], "metadata": [480, 498], "2021b": [480, 498], "inherit": [480, 498], "silent": [480, 498], "highest": [480, 498], "init": [480, 498], "urllib": [480, 498], "1340": [480, 498], "1348": [480, 498], "optimis": [480, 498], "1361": [480, 498], "1372": [480, 498], "1438": [480, 498], "suppress": [480, 498], "1332": [480, 498], "1428": [480, 498], "1434": [480, 498], "pickl": [480, 489, 493, 498], "1278": [480, 498], "1312": [480, 498], "problem": [480, 498, 505, 512], "workflow": [480, 498, 503, 504], "1341": [480, 498], "1338": [480, 498], "878": [480, 498], "deepcopi": [480, 498], "1147": [480, 498], "1412": [480, 498], "expans": [480, 498], "linear": [480, 498], "1415": [480, 498], "1449": [480, 498], "rbg": [480, 498], "jpg": [480, 498], "app14": [480, 498], "1444": [480, 498], "1457": [480, 498], "1251": [480, 497], "1253": [480, 497], "1254": [480, 497], "distribut": [480, 484, 496, 509], "fly": [480, 496], "whenev": [480, 496], "disk": [480, 496], "rg1_unci": [480, 496], "1127": [480, 496], "1234": [480, 496], "1237": [480, 496], "1156": [480, 496], "__next__": [480, 496], "__iter__": [480, 481, 496, 505], "1103": [480, 493, 496], "constant": [480, 496, 513], "1155": [480, 496], "1149": [480, 496], "2020d": [480, 496], "243": [480, 496], "alltransfersyntax": [480, 496], "commun": [480, 496], "1240": [480, 496], "1178": [480, 496], "1161": [480, 496], "_storage_sopclass_uid": [480, 496], "multifram": [480, 496], "dicosquadrupoleresonanceqrstorag": [480, 496], "dicosquadrupoleresonancestorag": [480, 496], "jpegbaselin": [480, 491, 496], "jpegbaseline8bit": [480, 496], "jpegextend": [480, 491, 496], "jpegextended12bit": [480, 496], "jpeglossless": [480, 496], "jpeglosslesssv1": [480, 496], "jpeglslossi": [480, 496], "jpeglsnearlossless": [480, 496], "jpeg2000multicomponentlossless": [480, 491, 496, 503], "jpeg2000mclossless": [480, 496], "jpeg2000multicompon": [480, 491, 496, 503], "jpeg2000mc": [480, 496], "jpeglossycompressedpixeltransfersyntax": [480, 496], "jpegtransfersyntax": [480, 496], "jpeglssupportedcompressedpixeltransfersyntax": [480, 496], "jpeglstransfersyntax": [480, 496], "jpeg2000compressedpixeltransfersyntax": [480, 496], "jpeg2000transfersyntax": [480, 496], "rlecompressedlosslesssyntax": [480, 496], "rletransfersyntax": [480, 496], "uncompressedtransfersyntax": [480, 496], "pilsupportedcompressedpixeltransfersyntax": [480, 496], "1211": [480, 496], "1181": [480, 496], "1146": [480, 496], "optimist": [480, 496], "embed": [480, 496], "1140": [480, 496], "network": [480, 496], "connect": [480, 496], "1153": [480, 496], "1193": [480, 496], "1215": [480, 496], "restor": [480, 495], "personname3": [480, 487, 492, 495], "alias": [480, 482, 495], "ismultivalu": [480, 492, 495], "1086": [480, 495], "replace_un_with_known_vr": [480, 495], "1067": [480, 495], "623": [480, 495], "regress": [480, 494, 495, 503], "1038": [480, 495], "improp": [480, 493, 495], "3006": [480, 495], "1078": [480, 495], "1082": [480, 495], "1097": [480, 495], "915": [480, 493], "887": [480, 493, 505], "prevent": [480, 493], "894": [480, 493], "892": [480, 493], "truthi": [480, 493], "891": [480, 493], "899": [480, 493], "968": [480, 493], "896": [480, 493], "unpickl": [480, 493], "947": [480, 493], "951": [480, 493], "1101": [480, 493], "ir": [480, 493], "917": [480, 493], "propag": [480, 493], "971": [480, 493], "822": [480, 493], "263": [480, 493], "273": [480, 493], "994": [480, 493], "generate_pixel_data": [480, 493], "685": [480, 493], "693": [480, 493], "932": [480, 493], "toler": [480, 482, 493], "940": [480, 493], "205": [480, 493], "unexpect": [480, 493], "848": [480, 493], "981": [480, 493], "537": [480, 493], "452": [480, 493], "2019e": [480, 493], "get_frame_offset": [480, 493], "timelin": [480, 492], "789": [480, 492], "image_handl": [480, 491, 492], "deferreddatael": [480, 491, 492], "760": [480, 492], "isstringorstringlist": [480, 492], "isstr": [480, 492], "666": [480, 492], "799": [480, 492], "gzip": [480, 486, 492], "753": [480, 492], "730": [480, 492], "820": [480, 492], "864": [480, 492], "819": [480, 492], "850": [480, 492], "838": [480, 492], "757": [480, 492], "785": [480, 492], "788": [480, 492], "810": [480, 492], "815": [480, 492], "804": [480, 492], "mix": [480, 492], "835": [480, 492], "excess": [480, 492], "791": [480, 492], "ji": [480, 492], "856": [480, 492], "fallback": [480, 491], "722": [480, 491], "jpegbaselinelossy8bit": [480, 491], "726": [480, 491], "jpegbaselinelossy12bit": [480, 491], "jpeg2000lossi": [480, 491], "inequ": [480, 490, 491], "matter": [480, 491, 505], "291": [480, 491], "numpypi": [480, 491], "2018c": [480, 491], "677": [480, 491], "624": [480, 491], "696": [480, 491], "584": [480, 491], "715": [480, 491], "716": [480, 491], "695": [480, 491], "737": [480, 491], "jpeglosslessp14": [480, 491], "713": [480, 491], "small": [480, 483, 489, 491, 502, 509], "729": [480, 491], "unus": [480, 491], "660": [480, 491], "682": [480, 491], "689": [480, 491], "jpeg2k": [480, 491], "663": [480, 491], "728": [480, 491], "704": [480, 491], "707": [480, 491], "consumpt": [480, 491], "717": [480, 491], "740": [480, 491], "464": [480, 490], "605": [480, 490], "292": [480, 490], "2018b": [480, 490], "649": [480, 490], "256": [480, 490], "0x0006": [480, 490], "489": [480, 490], "599": [480, 490], "unneed": [480, 490], "597": [480, 490], "620": [480, 490], "625": [480, 490], "fit": [480, 490], "640": [480, 490], "__ne__": [480, 490], "comparison": [480, 485, 490], "verif": [480, 490], "2017c": [480, 489], "fixer": [480, 489], "thrown": [480, 489], "143": [480, 489], "197": [480, 489], "212": [480, 489], "dictionary_is_retir": [480, 489], "thai": [480, 489], "japanes": [480, 481, 486, 489], "chines": [480, 481, 489], "353": [480, 489], "172": [480, 489], "clariti": [480, 489], "travisci": [480, 489], "appveyor": [480, 489], "coverag": [480, 489, 503], "pep": [480, 482, 485, 489], "151": [480, 489], "125": [480, 489], "show_dicomdir": [480, 488, 489], "258": [480, 489], "latin5": [480, 489], "turkish": [480, 489], "lot": [480, 489, 505, 512], "subdirectori": [480, 488], "ez_setup": [480, 488], "aid": [480, 488], "pydicom_seri": [480, 484, 487, 488], "nil": [480, 488], "goyett": [480, 488], "ordereddict": [480, 488], "padraig": [480, 487, 488], "loonei": [480, 487, 488], "jonathan": [480, 487, 488], "myself": [480, 488], "rickard": [480, 488], "holmberg": [480, 488], "julien": [480, 488], "lami": [480, 488], "yaroslav": [480, 488], "halchenko": [480, 488], "mark": [480, 488], "matthew": [480, 488], "brett": [480, 488], "dimitri": [480, 488], "papadopoulo": [480, 488], "videan42": [480, 488], "sorri": [480, 488], "ve": [480, 488, 503, 504, 507, 510, 513], "anyon": [480, 488], "consolid": [480, 487], "revert": [480, 487], "prepar": [480, 487], "experiment": [480, 487], "unoffici": [480, 487], "uncom": [480, 487], "114": [480, 487], "slow": [480, 487], "approx": [480, 483, 487], "r78ba350a3eb8": [480, 487], "streamlin": [480, 487], "modern": [480, 487], "decor": [480, 487], "duplic": [480, 487], "gunnar": [480, 487], "schaefer": [480, 487], "774b7a55db33": [480, 487], "6b949a5b925b": [480, 487], "113": [480, 487], "84af4b240add": [480, 487], "f\u00e9lix": [480, 487], "morenc": [480, 487], "0197b5846bb5": [480, 487], "3678b1be6aca": [480, 487], "f1ae573d9de5": [480, 487], "0411bab7c985": [480, 487], "9b92b336e7d4": [480, 487], "e830f30b6781": [480, 487], "pysid": [480, 487], "qt": [480, 487], "acknowledg": [480, 487], "suever": [480, 487], "who": [480, 486, 487], "2011": [480, 485, 486], "ident": [480, 486], "4ed698a7bfb": [480, 486], "c313d2befb08": [480, 486], "promot": [480, 486], "across": [480, 486], "languag": [480, 481, 486], "b6b3658f3b14": [480, 486], "98": [480, 486], "52": [480, 486], "111": [480, 486], "__dir__": [480, 486], "simplifi": [480, 482, 486], "file_metadata": [480, 485], "96": [480, 485], "catch": [480, 483, 485], "97": [480, 485], "write_new": [480, 485], "fc790f01f5": [480, 484], "84": [480, 484], "dicomit": [480, 484], "statement": [480, 484], "1c32791bf0": [480, 484], "e3ee934bbc": [480, 484], "dicom_dao": [480, 484], "mike": [480, 484], "wallac": [480, 484], "couchdb": [480, 484], "almar": [480, 484], "klein": [480, 484], "distinct": [480, 484], "preliminari": [480, 481, 484], "substanti": [480, 483], "partial": [480, 483], "plain": [480, 483], "bullet": [480, 483], "ness": [480, 483], "logic": [480, 483], "daniel": [480, 483], "nanz": [480, 483], "dave": [480, 483], "witten": [480, 483], "adit": [480, 483], "panchal": [480, 483], "cp805": [480, 483], "supp": [480, 483], "117": [480, 483], "119": [480, 483], "122": [480, 483], "patch": [480, 483, 502, 503], "nikitathespid": [480, 483], "58": [480, 483], "pierr": [480, 483], "raybaut": [480, 483], "47": [480, 483], "r102": [480, 482], "r103": [480, 482], "issue36": [480, 482], "r97": [480, 482], "r110": [480, 482], "readfil": [480, 482], "savea": [480, 482], "pixelarrai": [480, 481, 482], "kept": [480, 482, 509], "r105": [480, 482], "r91": [480, 482], "r113": [480, 482], "r95": [480, 482], "issue38": [480, 482], "collis": [480, 482], "r96": [480, 482], "issue40": [480, 482], "notimplementerror": [480, 482], "r100": [480, 482], "issue41": [480, 482], "r104": [480, 482], "r109": [480, 482], "r111": [480, 482], "patientsbirthd": [480, 482], "r98": [480, 482], "deprecationwarn": [480, 481], "issue22": [480, 481], "r72": [480, 481], "r73": [480, 481], "greek": [480, 481], "gui": [480, 481], "r64": [480, 481], "r65": [480, 481], "r69": [480, 481], "r70": [480, 481], "data_elem": [480, 481, 505], "r68": [480, 481], "r55": [480, 481], "uid_dictionari": [480, 481], "r51": [480, 481], "synonym": [480, 481], "issue27": [480, 481], "incorrectli": [480, 481], "read_ow": [480, 481], "undefinedlength": [480, 481], "r50": [480, 481], "dicominfo": [480, 481], "issue33": [480, 481], "issue18": [480, 481], "r45": [480, 481], "r67": [480, 481], "r46": [480, 481], "pixeldataarrai": [480, 481], "distutil": [480, 481], "ones": [502, 505, 507], "typo": 502, "materi": 502, "googl": 502, "django": [503, 504, 506], "cd": [503, 504, 507], "live": [503, 504], "yourusernam": [503, 504], "virtualenv": [503, 504, 512], "pydx": 503, "pythonx": 503, "mkvirtualenv": [503, 512], "accident": [503, 507], "area": 503, "afterward": 503, "our": [503, 504, 507, 513], "dot": [503, 505], "choos": [503, 504], "won": [503, 504, 505, 507], "master": [503, 504], "checkout": [503, 504], "reproduc": 503, "seem": 503, "daunt": 503, "resourc": 503, "captur": 503, "dive": 503, "Into": 503, "unittest": 503, "troubl": 503, "500": [503, 505], "test_uid": 503, "test_new_uid": 503, "newdefineduid": 503, "assert": [503, 506], "380": 503, "editor": [503, 504], "236": 503, "rst": [503, 504], "properli": 503, "happi": [503, 504], "idea": [503, 504], "cach": [503, 509], "scroll": 503, "front": 503, "push": [503, 504], "wip": [503, 504], "real": [503, 504, 513], "mrg": [503, 504], "readi": [503, 504, 512], "merg": [503, 504], "clarif": [503, 504], "approv": [503, 504], "lastli": [503, 504], "remot": [503, 504], "bin": [503, 504, 512], "icon": [503, 504], "pyd": [504, 505], "activ": [504, 509], "venv": [504, 512], "restructuredtext": 504, "navig": 504, "occasion": [504, 505, 507], "_build": 504, "web": 504, "localhost": 504, "tut": 504, "toctre": 504, "visibl": 504, "got": 504, "maxdepth": 504, "contributing_cod": 504, "contributing_doc": 504, "rebuild": 504, "reachabl": 504, "task": 504, "chapter_7": 504, "apr": 504, "46": 504, "gcc": 504, "copyright": 504, "credit": 504, "accessionnumb": 504, "acquisitiondata": 504, "xraytubecurr": 504, "primer": 504, "am": 504, "circleci": 504, "success": 504, "artifact": 504, "tab": 504, "yet": [505, 511], "vari": 505, "home": [505, 507, 512], "env": [505, 507, 512], "lib": [505, 507], "site": [505, 507], "earlier": 505, "__version__": [505, 512], "rb": 505, "infil": 505, "no_meta": 505, "678": 505, "631": 505, "caution": 505, "not_dicom": 505, "1703": 505, "1436": 505, "1079": 505, "833": 505, "character_set": 505, "581": 505, "6854": 505, "7369": 505, "hexadecim": 505, "iso_ir_100": 505, "0x6002": 505, "0x6004": 505, "0x601e": 505, "gggg": 505, "surround": 505, "0x0008": 505, "0x0016": 505, "private_elem": 505, "0x0043": 505, "0x104e": 505, "lack": 505, "stick": 505, "simpler": 505, "imagetyp": 505, "act": 505, "branch": [505, 509], "manner": [505, 510], "0x1002": 505, "saw": 505, "x00t": 505, "x18": 505, "x08": 505, "chanc": 505, "But": 505, "snip": 505, "hello": 505, "world": 505, "_list": 505, "0x0028": 505, "0x1050": 505, "windowwidth": 505, "notic": [505, 507], "typeofpatientid": 505, "windowcent": 505, "prefer": 505, "wb": 505, "1794": 505, "712": 505, "2372": 505, "habit": 505, "congratul": 505, "beta": 506, "deseri": 506, "00080005": 506, "00080008": 506, "symmetr": 506, "ds_json": 506, "ds1": 506, "smaller": 506, "bulk_data_handl": 506, "store_data_and_return_uri": 506, "bulk_data_read": 506, "bulk_data_uri": 506, "data_retrieved_via_uri": 506, "json_data": 506, "00091002": 506, "data_retrieved_for_tag_and_vr_via_uri": 506, "share": 507, "frequent": 507, "dvd": 507, "procedur": 507, "ultrasound": 507, "despit": 507, "commonli": [507, 510], "usb": 507, "pc": 507, "minor": 507, "recalcul": 507, "1220": 507, "briefli": 507, "directoryrecordsequ": 507, "3126": 507, "di": 507, "510": 507, "complic": [507, 512], "flat": 507, "abstract": 507, "awai": 507, "dig": 507, "cost": 507, "importantli": 507, "though": 507, "tmp0aalrzir": 507, "rtdose": 507, "1858": 507, "_recordifi": 507, "2338": 507, "_check_dataset": 507, "instancenumb": 507, "dosesummationtyp": 507, "2281": 507, "record_gen": 507, "1860": 507, "tmpsqz8rhgb": 507, "rd000000": 507, "shutil": 507, "copytre": 507, "copyfil": 507, "dst": 507, "tmpu068kdwp": 507, "Then": [508, 509], "isol": [509, 512], "admin": 509, "privileg": 509, "offlin": 509, "whl": 509, "py3": 509, "forg": [509, 510, 513], "fetch_data_fil": 509, "popular": 509, "beforehand": 509, "charl": 509, "latest": 509, "cython": 509, "older": 509, "framework": 509, "snapshot": 509, "stabl": 509, "undocu": 509, "prerequisit": [510, 513], "conda": [510, 513], "hundr": 510, "megabyt": 510, "slide": 510, "microscopi": 510, "gigabyt": 510, "territori": 510, "Being": 510, "significantli": 510, "i2": 510, "1697": 510, "frame_iter": 510, "listcomp": 510, "382": 510, "_encode_arrai": 510, "209": 510, "_preprocess": 510, "533": 510, "recompress": 510, "began": 511, "foundat": 511, "codedict": 511, "cid": 511, "incorrectmodalityworklistentri": 511, "mixedmodality3dcammodel": 511, "modalitytoread": 511, "othermod": 511, "128002": 511, "scheme_design": 511, "scheme_vers": 511, "underscor": 511, "sct": 511, "_1sigmalowervalueofpopul": 511, "371919006": 511, "sigma": 511, "cid270": 511, "121006": 511, "cid_for_nam": 511, "observ": 511, "observationsubjectclass": 511, "observertyp": 511, "echofindingobservationtyp": 511, "270": 511, "ln": 511, "fma": 511, "mdc": 511, "uml": 511, "bari": 511, "ncit": 511, "neu": 511, "ucum": 511, "radlex": 511, "ndc": 511, "itis_tsn": 511, "pubchem_cid": 511, "msh": 511, "capabl": 511, "differenti": 512, "simultan": 512, "maintain": 512, "worri": 512, "fulli": 512, "virtualenvwrapp": 512, "usr": 512, "user_script": 512, "predeactiv": 512, "postdeactiv": 512, "preactiv": 512, "postactiv": 512, "get_env_detail": 512, "workon_hom": 512, "environment": 512, "py37": 512, "rmvirtualenv": 512, "workon": 512, "antigrav": 512, "surpris": 512, "lsvirtualenv": 512, "fresh": 512, "proce": 512, "py35": 512, "condaenvironmenterror": 512, "explanatori": 513, "respiratori": 513, "interv": 513, "rhythm": 513, "khz": 513, "0200": 513, "channelsensit": 513, "einthoven": 513, "microvolt": 513, "iii": 513, "avr": 513, "avl": 513, "avf": 513, "v4": 513, "v5": 513, "v6": 513, "interleav": 513, "ch": 513, "ax1": 513, "ax2": 513, "\u03bcv": 513, "cosin": 513, "sine": 513, "chosen": 513, "pi": 513, "ch1": 513, "astyp": 513, "ch2": 513, "sin": 513, "waveformorigin": 513, "condition": 513, "opt": 513, "obvious": 513, "chdef_seq": 513, "chdef": 513, "curve_typ": 513, "channelsampleskew": 513, "waveformbitsstor": 513, "codevalu": 513, "codingschemedesign": 513, "codingschemevers": 513, "stack": 513, "axi": 513, "my_waveform": 513}, "objects": {"": [[477, 0, 0, "-", "pydicom"]], "pydicom.charset": [[76, 1, 1, "", "convert_encodings"], [77, 1, 1, "", "decode_bytes"], [78, 1, 1, "", "decode_element"], [79, 1, 1, "", "encode_string"]], "pydicom.config": [[80, 2, 1, "", "APPLY_J2K_CORRECTIONS"], [81, 1, 1, "", "DS_decimal"], [82, 1, 1, "", "DS_numpy"], [83, 2, 1, "", "IGNORE"], [84, 2, 1, "", "INVALID_KEYWORD_BEHAVIOR"], [85, 2, 1, "", "INVALID_KEY_BEHAVIOR"], [86, 2, 1, "", "RAISE"], [55, 3, 1, "", "Settings"], [87, 2, 1, "", "WARN"], [88, 2, 1, "", "allow_DS_float"], [89, 2, 1, "", "assume_implicit_vr_switch"], [90, 2, 1, "", "convert_wrong_length_to_UN"], [91, 2, 1, "", "data_element_callback"], [92, 2, 1, "", "data_element_callback_kwargs"], [93, 2, 1, "", "datetime_conversion"], [94, 1, 1, "", "debug"], [95, 2, 1, "", "enforce_valid_values"], [96, 1, 1, "", "future_behavior"], [97, 2, 1, "", "overlay_data_handlers"], [98, 2, 1, "", "pixel_data_handlers"], [99, 1, 1, "", "reset_data_element_callback"], [100, 2, 1, "", "settings"], [101, 2, 1, "", "show_file_meta"], [102, 2, 1, "", "use_DS_decimal"], [103, 2, 1, "", "use_DS_numpy"], [104, 2, 1, "", "use_IS_numpy"]], "pydicom.config.Settings": [[55, 4, 1, "", "infer_sq_for_un_vr"], [55, 4, 1, "", "reading_validation_mode"], [55, 4, 1, "", "writing_validation_mode"]], "pydicom.data": [[105, 1, 1, "", "get_charset_files"], [106, 1, 1, "", "get_palette_files"], [107, 1, 1, "", "get_testdata_file"], [108, 1, 1, "", "get_testdata_files"]], "pydicom.datadict": [[109, 1, 1, "", "add_dict_entries"], [110, 1, 1, "", "add_dict_entry"], [111, 1, 1, "", "add_private_dict_entries"], [112, 1, 1, "", "add_private_dict_entry"], [113, 1, 1, "", "dictionary_VM"], [114, 1, 1, "", "dictionary_VR"], [115, 1, 1, "", "dictionary_description"], [116, 1, 1, "", "dictionary_has_tag"], [117, 1, 1, "", "dictionary_is_retired"], [118, 1, 1, "", "dictionary_keyword"], [119, 1, 1, "", "get_entry"], [120, 1, 1, "", "get_private_entry"], [121, 1, 1, "", "keyword_for_tag"], [122, 1, 1, "", "mask_match"], [123, 1, 1, "", "private_dictionary_VM"], [124, 1, 1, "", "private_dictionary_VR"], [125, 1, 1, "", "private_dictionary_description"], [126, 1, 1, "", "repeater_has_keyword"], [127, 1, 1, "", "repeater_has_tag"], [128, 1, 1, "", "tag_for_keyword"]], "pydicom.dataelem": [[129, 3, 1, "", "DataElement"], [130, 1, 1, "", "DataElement_from_raw"], [131, 3, 1, "", "RawDataElement"]], "pydicom.dataelem.DataElement": [[129, 4, 1, "", "VM"], [129, 5, 1, "", "VR"], [129, 6, 1, "", "__init__"], [129, 6, 1, "", "clear"], [129, 5, 1, "", "descripWidth"], [129, 6, 1, "", "description"], [129, 4, 1, "", "empty_value"], [129, 6, 1, "", "from_json"], [129, 4, 1, "", "is_empty"], [129, 4, 1, "", "is_private"], [129, 4, 1, "", "is_retired"], [129, 5, 1, "", "is_undefined_length"], [129, 4, 1, "", "keyword"], [129, 5, 1, "", "maxBytesToDisplay"], [129, 4, 1, "", "name"], [129, 4, 1, "", "repval"], [129, 5, 1, "", "showVR"], [129, 5, 1, "", "tag"], [129, 6, 1, "", "to_json"], [129, 6, 1, "", "to_json_dict"], [129, 6, 1, "", "validate"], [129, 4, 1, "", "value"]], "pydicom.dataelem.RawDataElement": [[131, 5, 1, "", "VR"], [131, 6, 1, "", "__init__"], [131, 5, 1, "", "is_implicit_VR"], [131, 5, 1, "", "is_little_endian"], [131, 5, 1, "", "is_raw"], [131, 5, 1, "", "length"], [131, 5, 1, "", "tag"], [131, 5, 1, "", "value"], [131, 5, 1, "", "value_tell"]], "pydicom.dataset": [[132, 3, 1, "", "Dataset"], [133, 3, 1, "", "FileDataset"], [134, 3, 1, "", "FileMetaDataset"], [135, 3, 1, "", "PrivateBlock"], [136, 1, 1, "", "validate_file_meta"]], "pydicom.dataset.Dataset": [[132, 6, 1, "", "__init__"], [132, 6, 1, "", "add"], [132, 6, 1, "", "add_new"], [132, 6, 1, "", "clear"], [132, 6, 1, "", "compress"], [132, 6, 1, "", "convert_pixel_data"], [132, 6, 1, "", "copy"], [132, 6, 1, "", "data_element"], [132, 6, 1, "", "decode"], [132, 6, 1, "", "decompress"], [132, 5, 1, "", "default_element_format"], [132, 5, 1, "", "default_sequence_element_format"], [132, 6, 1, "", "dir"], [132, 6, 1, "", "elements"], [132, 6, 1, "", "ensure_file_meta"], [132, 6, 1, "", "fix_meta_info"], [132, 6, 1, "", "formatted_lines"], [132, 6, 1, "", "from_json"], [132, 6, 1, "", "get"], [132, 6, 1, "", "get_item"], [132, 6, 1, "", "get_private_item"], [132, 6, 1, "", "group_dataset"], [132, 5, 1, "", "indent_chars"], [132, 5, 1, "", "is_implicit_VR"], [132, 5, 1, "", "is_little_endian"], [132, 4, 1, "", "is_original_encoding"], [132, 6, 1, "", "items"], [132, 6, 1, "", "iterall"], [132, 6, 1, "", "keys"], [132, 6, 1, "", "overlay_array"], [132, 4, 1, "", "parent"], [132, 4, 1, "", "parent_seq"], [132, 4, 1, "", "pixel_array"], [132, 6, 1, "", "pop"], [132, 6, 1, "", "popitem"], [132, 6, 1, "", "private_block"], [132, 6, 1, "", "private_creators"], [132, 6, 1, "", "remove_private_tags"], [132, 6, 1, "", "save_as"], [132, 6, 1, "", "set_original_encoding"], [132, 6, 1, "", "setdefault"], [132, 6, 1, "", "to_json"], [132, 6, 1, "", "to_json_dict"], [132, 6, 1, "", "top"], [132, 6, 1, "", "trait_names"], [132, 6, 1, "", "update"], [132, 6, 1, "", "values"], [132, 6, 1, "", "walk"], [132, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileDataset": [[133, 6, 1, "", "__init__"], [133, 5, 1, "", "file_meta"], [133, 5, 1, "", "filename"], [133, 5, 1, "", "fileobj_type"], [133, 5, 1, "", "is_implicit_VR"], [133, 5, 1, "", "is_little_endian"], [133, 5, 1, "", "preamble"], [133, 5, 1, "", "timestamp"]], "pydicom.dataset.FileMetaDataset": [[134, 6, 1, "", "__init__"], [134, 6, 1, "", "validate"]], "pydicom.dataset.PrivateBlock": [[135, 6, 1, "", "__init__"], [135, 6, 1, "", "add_new"], [135, 5, 1, "", "block_start"], [135, 5, 1, "", "dataset"], [135, 6, 1, "", "get_tag"], [135, 5, 1, "", "group"], [135, 5, 1, "", "private_creator"]], "pydicom.dicomdir": [[137, 3, 1, "", "DicomDir"]], "pydicom.dicomdir.DicomDir": [[137, 6, 1, "", "__init__"], [137, 6, 1, "", "parse_records"]], "pydicom.encaps": [[138, 1, 1, "", "decode_data_sequence"], [139, 1, 1, "", "defragment_data"], [140, 1, 1, "", "encapsulate"], [141, 1, 1, "", "encapsulate_extended"], [142, 1, 1, "", "fragment_frame"], [143, 1, 1, "", "generate_pixel_data"], [144, 1, 1, "", "generate_pixel_data_fragment"], [145, 1, 1, "", "generate_pixel_data_frame"], [146, 1, 1, "", "get_frame_offsets"], [147, 1, 1, "", "itemize_fragment"], [148, 1, 1, "", "itemize_frame"], [149, 1, 1, "", "read_item"]], "pydicom": [[68, 0, 0, "-", "encoders"], [474, 0, 0, "-", "overlays"], [475, 0, 0, "-", "pixel_data_handlers"], [476, 0, 0, "-", "waveforms"]], "pydicom.encoders": [[150, 2, 1, "", "RLELosslessEncoder"], [152, 1, 1, "", "get_encoder"]], "pydicom.encoders.base": [[151, 3, 1, "", "Encoder"]], "pydicom.encoders.base.Encoder": [[151, 4, 1, "", "UID"], [151, 6, 1, "", "__init__"], [151, 6, 1, "", "add_plugin"], [151, 6, 1, "", "encode"], [151, 4, 1, "", "is_available"], [151, 6, 1, "", "iter_encode"], [151, 6, 1, "", "kwargs_from_ds"], [151, 4, 1, "", "missing_dependencies"], [151, 4, 1, "", "name"], [151, 6, 1, "", "remove_plugin"]], "pydicom.errors": [[153, 7, 1, "", "InvalidDicomError"]], "pydicom.filebase": [[154, 3, 1, "", "DicomBytesIO"], [155, 1, 1, "", "DicomFile"], [156, 3, 1, "", "DicomFileLike"], [157, 3, 1, "", "DicomIO"]], "pydicom.filebase.DicomBytesIO": [[154, 6, 1, "", "__init__"]], "pydicom.filebase.DicomFileLike": [[156, 6, 1, "", "__init__"], [156, 6, 1, "", "no_read"], [156, 6, 1, "", "no_seek"], [156, 6, 1, "", "no_write"]], "pydicom.filebase.DicomIO": [[157, 6, 1, "", "__init__"], [157, 6, 1, "", "read"], [157, 6, 1, "", "read_beUL"], [157, 6, 1, "", "read_beUS"], [157, 6, 1, "", "read_be_tag"], [157, 6, 1, "", "read_leUL"], [157, 6, 1, "", "read_leUS"], [157, 6, 1, "", "read_le_tag"], [157, 6, 1, "", "write_UL"], [157, 6, 1, "", "write_US"], [157, 6, 1, "", "write_beUL"], [157, 6, 1, "", "write_beUS"], [157, 6, 1, "", "write_leUL"], [157, 6, 1, "", "write_leUS"], [157, 6, 1, "", "write_tag"]], "pydicom.filereader": [[158, 1, 1, "", "data_element_generator"], [159, 1, 1, "", "data_element_offset_to_value"], [160, 1, 1, "", "dcmread"], [161, 1, 1, "", "read_dataset"], [162, 1, 1, "", "read_deferred_data_element"], [163, 1, 1, "", "read_dicomdir"], [164, 1, 1, "", "read_file_meta_info"], [165, 1, 1, "", "read_partial"], [166, 1, 1, "", "read_preamble"], [167, 1, 1, "", "read_sequence"], [168, 1, 1, "", "read_sequence_item"]], "pydicom.fileset": [[169, 2, 1, "", "DIRECTORY_RECORDERS"], [170, 3, 1, "", "FileInstance"], [171, 3, 1, "", "FileSet"], [172, 3, 1, "", "RecordNode"], [173, 1, 1, "", "generate_filename"], [174, 1, 1, "", "is_conformant_file_id"]], "pydicom.fileset.FileInstance": [[170, 4, 1, "", "FileID"], [170, 4, 1, "", "SOPClassUID"], [170, 4, 1, "", "SOPInstanceUID"], [170, 4, 1, "", "TransferSyntaxUID"], [170, 6, 1, "", "__init__"], [170, 4, 1, "", "file_set"], [170, 4, 1, "", "for_addition"], [170, 4, 1, "", "for_moving"], [170, 4, 1, "", "for_removal"], [170, 4, 1, "", "is_private"], [170, 4, 1, "", "is_staged"], [170, 6, 1, "", "load"], [170, 5, 1, "", "node"], [170, 4, 1, "", "path"]], "pydicom.fileset.FileSet": [[171, 4, 1, "", "ID"], [171, 4, 1, "", "UID"], [171, 6, 1, "", "__init__"], [171, 6, 1, "", "add"], [171, 6, 1, "", "add_custom"], [171, 6, 1, "", "clear"], [171, 6, 1, "", "copy"], [171, 4, 1, "", "descriptor_character_set"], [171, 4, 1, "", "descriptor_file_id"], [171, 6, 1, "", "find"], [171, 6, 1, "", "find_values"], [171, 4, 1, "", "is_staged"], [171, 6, 1, "", "load"], [171, 4, 1, "", "path"], [171, 6, 1, "", "remove"], [171, 6, 1, "", "write"]], "pydicom.fileset.RecordNode": [[172, 6, 1, "", "__init__"], [172, 6, 1, "", "add"], [172, 4, 1, "", "ancestors"], [172, 5, 1, "", "children"], [172, 4, 1, "", "component"], [172, 4, 1, "", "depth"], [172, 4, 1, "", "file_set"], [172, 4, 1, "", "has_instance"], [172, 4, 1, "", "index"], [172, 5, 1, "", "instance"], [172, 4, 1, "", "is_root"], [172, 4, 1, "", "key"], [172, 4, 1, "", "next"], [172, 4, 1, "", "parent"], [172, 6, 1, "", "prettify"], [172, 4, 1, "", "previous"], [172, 4, 1, "", "record_type"], [172, 6, 1, "", "remove"], [172, 6, 1, "", "reverse"], [172, 4, 1, "", "root"]], "pydicom.fileutil": [[175, 1, 1, "", "absorb_delimiter_item"], [176, 1, 1, "", "find_bytes"], [177, 1, 1, "", "find_delimiter"], [178, 1, 1, "", "length_of_undefined_length"], [179, 1, 1, "", "read_undefined_length_value"]], "pydicom.filewriter": [[180, 1, 1, "", "correct_ambiguous_vr"], [181, 1, 1, "", "correct_ambiguous_vr_element"], [182, 1, 1, "", "dcmwrite"], [183, 1, 1, "", "multi_string"], [184, 1, 1, "", "write_ATvalue"], [185, 1, 1, "", "write_DA"], [186, 1, 1, "", "write_DT"], [187, 1, 1, "", "write_OBvalue"], [188, 1, 1, "", "write_OWvalue"], [189, 1, 1, "", "write_PN"], [190, 1, 1, "", "write_TM"], [191, 1, 1, "", "write_UI"], [192, 1, 1, "", "write_UN"], [193, 1, 1, "", "write_data_element"], [194, 1, 1, "", "write_dataset"], [195, 1, 1, "", "write_file_meta_info"], [196, 1, 1, "", "write_number_string"], [197, 1, 1, "", "write_numbers"], [198, 1, 1, "", "write_sequence"], [199, 1, 1, "", "write_sequence_item"], [200, 1, 1, "", "write_string"], [201, 1, 1, "", "write_text"]], "pydicom.misc": [[202, 1, 1, "", "is_dicom"], [203, 1, 1, "", "size_in_bytes"]], "pydicom.multival": [[204, 3, 1, "", "MultiValue"]], "pydicom.multival.MultiValue": [[204, 6, 1, "", "__init__"], [204, 6, 1, "", "append"], [204, 6, 1, "", "extend"], [204, 6, 1, "", "insert"]], "pydicom.overlays": [[205, 0, 0, "-", "numpy_handler"]], "pydicom.overlays.numpy_handler": [[205, 1, 1, "", "get_expected_length"], [205, 1, 1, "", "get_overlay_array"], [205, 1, 1, "", "is_available"], [205, 1, 1, "", "reshape_overlay_array"]], "pydicom.pixel_data_handlers": [[206, 1, 1, "", "apply_color_lut"], [207, 1, 1, "", "apply_modality_lut"], [208, 1, 1, "", "apply_rescale"], [209, 1, 1, "", "apply_voi"], [210, 1, 1, "", "apply_voi_lut"], [211, 1, 1, "", "apply_windowing"], [212, 1, 1, "", "convert_color_space"], [213, 0, 0, "-", "gdcm_handler"], [214, 0, 0, "-", "jpeg_ls_handler"], [215, 0, 0, "-", "numpy_handler"], [216, 0, 0, "-", "pillow_handler"], [217, 0, 0, "-", "pylibjpeg_handler"], [218, 0, 0, "-", "rle_handler"], [219, 0, 0, "-", "util"]], "pydicom.pixel_data_handlers.gdcm_handler": [[213, 1, 1, "", "create_data_element"], [213, 1, 1, "", "create_image"], [213, 1, 1, "", "get_pixeldata"], [213, 1, 1, "", "is_available"], [213, 1, 1, "", "needs_to_convert_to_RGB"], [213, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [213, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[214, 1, 1, "", "get_pixeldata"], [214, 1, 1, "", "is_available"], [214, 1, 1, "", "needs_to_convert_to_RGB"], [214, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [214, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.numpy_handler": [[215, 1, 1, "", "get_pixeldata"], [215, 1, 1, "", "is_available"], [215, 1, 1, "", "needs_to_convert_to_RGB"], [215, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [215, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pillow_handler": [[216, 1, 1, "", "get_pixeldata"], [216, 1, 1, "", "is_available"], [216, 1, 1, "", "needs_to_convert_to_RGB"], [216, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [216, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[217, 1, 1, "", "as_array"], [217, 1, 1, "", "generate_frames"], [217, 1, 1, "", "get_pixeldata"], [217, 1, 1, "", "is_available"], [217, 1, 1, "", "needs_to_convert_to_RGB"], [217, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [217, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.rle_handler": [[218, 1, 1, "", "get_pixeldata"], [218, 1, 1, "", "is_available"], [218, 1, 1, "", "needs_to_convert_to_RGB"], [218, 1, 1, "", "rle_encode_frame"], [218, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [218, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.util": [[219, 1, 1, "", "apply_color_lut"], [219, 1, 1, "", "apply_modality_lut"], [219, 1, 1, "", "apply_voi"], [219, 1, 1, "", "apply_voi_lut"], [219, 1, 1, "", "apply_windowing"], [219, 1, 1, "", "convert_color_space"], [219, 1, 1, "", "dtype_corrected_for_endianness"], [219, 1, 1, "", "expand_ybr422"], [219, 1, 1, "", "get_expected_length"], [219, 1, 1, "", "get_image_pixel_ids"], [219, 1, 1, "", "get_j2k_parameters"], [219, 1, 1, "", "get_nr_frames"], [219, 1, 1, "", "pack_bits"], [219, 1, 1, "", "pixel_dtype"], [219, 1, 1, "", "reshape_pixel_array"], [219, 1, 1, "", "unpack_bits"]], "pydicom.sequence": [[220, 3, 1, "", "Sequence"], [221, 1, 1, "", "validate_dataset"]], "pydicom.sequence.Sequence": [[220, 6, 1, "", "__init__"], [220, 6, 1, "", "append"], [220, 6, 1, "", "extend"], [220, 6, 1, "", "insert"], [220, 4, 1, "", "parent"], [220, 4, 1, "", "parent_dataset"]], "pydicom.tag": [[222, 3, 1, "", "BaseTag"], [223, 1, 1, "", "Tag"], [224, 1, 1, "", "TupleTag"], [225, 1, 1, "", "tag_in_exception"]], "pydicom.tag.BaseTag": [[222, 6, 1, "", "__init__"], [222, 4, 1, "", "elem"], [222, 4, 1, "", "element"], [222, 4, 1, "", "group"], [222, 4, 1, "", "is_private"], [222, 4, 1, "", "is_private_creator"], [222, 4, 1, "", "json_key"], [222, 4, 1, "", "private_creator"]], "pydicom.uid": [[226, 2, 1, "", "AcquisitionContextSRStorage"], [227, 2, 1, "", "AdvancedBlendingPresentationStateStorage"], [228, 2, 1, "", "AllTransferSyntaxes"], [229, 2, 1, "", "AmbulatoryECGWaveformStorage"], [230, 2, 1, "", "ArterialPulseWaveformStorage"], [231, 2, 1, "", "AutorefractionMeasurementsStorage"], [232, 2, 1, "", "BasicStructuredDisplayStorage"], [233, 2, 1, "", "BasicTextSRStorage"], [234, 2, 1, "", "BasicVoiceAudioWaveformStorage"], [235, 2, 1, "", "BlendingSoftcopyPresentationStateStorage"], [236, 2, 1, "", "BodyPositionWaveformStorage"], [237, 2, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [238, 2, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [239, 2, 1, "", "BreastTomosynthesisImageStorage"], [240, 2, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [241, 2, 1, "", "CArmPhotonElectronRadiationStorage"], [242, 2, 1, "", "CTDefinedProcedureProtocolStorage"], [243, 2, 1, "", "CTImageStorage"], [244, 2, 1, "", "CTPerformedProcedureProtocolStorage"], [245, 2, 1, "", "CardiacElectrophysiologyWaveformStorage"], [246, 2, 1, "", "ChestCADSRStorage"], [247, 2, 1, "", "ColonCADSRStorage"], [248, 2, 1, "", "ColorPaletteStorage"], [249, 2, 1, "", "ColorSoftcopyPresentationStateStorage"], [250, 2, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [251, 2, 1, "", "Comprehensive3DSRStorage"], [252, 2, 1, "", "ComprehensiveSRStorage"], [253, 2, 1, "", "ComputedRadiographyImageStorage"], [254, 2, 1, "", "ContentAssessmentResultsStorage"], [255, 2, 1, "", "CornealTopographyMapStorage"], [256, 2, 1, "", "DICOS2DAITStorage"], [257, 2, 1, "", "DICOS3DAITStorage"], [258, 2, 1, "", "DICOSCTImageStorage"], [259, 2, 1, "", "DICOSDigitalXRayImageStorageForPresentation"], [260, 2, 1, "", "DICOSDigitalXRayImageStorageForProcessing"], [261, 2, 1, "", "DICOSQuadrupoleResonanceStorage"], [262, 2, 1, "", "DICOSThreatDetectionReportStorage"], [263, 2, 1, "", "DeflatedExplicitVRLittleEndian"], [264, 2, 1, "", "DeformableSpatialRegistrationStorage"], [265, 2, 1, "", "DermoscopicPhotographyImageStorage"], [266, 2, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [267, 2, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [268, 2, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [269, 2, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [270, 2, 1, "", "DigitalXRayImageStorageForPresentation"], [271, 2, 1, "", "DigitalXRayImageStorageForProcessing"], [272, 2, 1, "", "EddyCurrentImageStorage"], [273, 2, 1, "", "EddyCurrentMultiFrameImageStorage"], [274, 2, 1, "", "ElectromyogramWaveformStorage"], [275, 2, 1, "", "ElectrooculogramWaveformStorage"], [276, 2, 1, "", "EncapsulatedCDAStorage"], [277, 2, 1, "", "EncapsulatedMTLStorage"], [278, 2, 1, "", "EncapsulatedOBJStorage"], [279, 2, 1, "", "EncapsulatedPDFStorage"], [280, 2, 1, "", "EncapsulatedSTLStorage"], [281, 2, 1, "", "EnhancedCTImageStorage"], [282, 2, 1, "", "EnhancedMRColorImageStorage"], [283, 2, 1, "", "EnhancedMRImageStorage"], [284, 2, 1, "", "EnhancedPETImageStorage"], [285, 2, 1, "", "EnhancedSRStorage"], [286, 2, 1, "", "EnhancedUSVolumeStorage"], [287, 2, 1, "", "EnhancedXAImageStorage"], [288, 2, 1, "", "EnhancedXRFImageStorage"], [289, 2, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [290, 2, 1, "", "ExplicitVRBigEndian"], [291, 2, 1, "", "ExplicitVRLittleEndian"], [292, 2, 1, "", "ExtensibleSRStorage"], [293, 2, 1, "", "GeneralAudioWaveformStorage"], [294, 2, 1, "", "GeneralECGWaveformStorage"], [295, 2, 1, "", "GenericImplantTemplateStorage"], [296, 2, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [297, 2, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [298, 2, 1, "", "HEVCM10P51"], [299, 2, 1, "", "HEVCMP51"], [300, 2, 1, "", "HangingProtocolStorage"], [301, 2, 1, "", "HemodynamicWaveformStorage"], [302, 2, 1, "", "ImplantAssemblyTemplateStorage"], [303, 2, 1, "", "ImplantTemplateGroupStorage"], [304, 2, 1, "", "ImplantationPlanSRStorage"], [305, 2, 1, "", "ImplicitVRLittleEndian"], [306, 2, 1, "", "IntraocularLensCalculationsStorage"], [307, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [308, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [309, 2, 1, "", "JPEG2000"], [310, 2, 1, "", "JPEG2000Lossless"], [311, 2, 1, "", "JPEG2000MC"], [312, 2, 1, "", "JPEG2000MCLossless"], [313, 2, 1, "", "JPEG2000TransferSyntaxes"], [314, 2, 1, "", "JPEGBaseline8Bit"], [315, 2, 1, "", "JPEGExtended12Bit"], [316, 2, 1, "", "JPEGLSLossless"], [317, 2, 1, "", "JPEGLSNearLossless"], [318, 2, 1, "", "JPEGLSTransferSyntaxes"], [319, 2, 1, "", "JPEGLosslessP14"], [320, 2, 1, "", "JPEGLosslessSV1"], [321, 2, 1, "", "JPEGTransferSyntaxes"], [322, 2, 1, "", "KeratometryMeasurementsStorage"], [323, 2, 1, "", "KeyObjectSelectionDocumentStorage"], [324, 2, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [325, 2, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [326, 2, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [327, 2, 1, "", "LensometryMeasurementsStorage"], [328, 2, 1, "", "MPEG2MPHL"], [329, 2, 1, "", "MPEG2MPML"], [330, 2, 1, "", "MPEG4HP41"], [331, 2, 1, "", "MPEG4HP41BD"], [332, 2, 1, "", "MPEG4HP422D"], [333, 2, 1, "", "MPEG4HP423D"], [334, 2, 1, "", "MPEG4HP42STEREO"], [335, 2, 1, "", "MPEGTransferSyntaxes"], [336, 2, 1, "", "MRImageStorage"], [337, 2, 1, "", "MRSpectroscopyStorage"], [338, 2, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [339, 2, 1, "", "MammographyCADSRStorage"], [340, 2, 1, "", "MediaStorageDirectoryStorage"], [341, 2, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [342, 2, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [343, 2, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [344, 2, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [345, 2, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [346, 2, 1, "", "MultichannelRespiratoryWaveformStorage"], [347, 2, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [348, 2, 1, "", "NuclearMedicineImageStorage"], [349, 2, 1, "", "OphthalmicAxialMeasurementsStorage"], [350, 2, 1, "", "OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [351, 2, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [352, 2, 1, "", "OphthalmicPhotography16BitImageStorage"], [353, 2, 1, "", "OphthalmicPhotography8BitImageStorage"], [354, 2, 1, "", "OphthalmicThicknessMapStorage"], [355, 2, 1, "", "OphthalmicTomographyImageStorage"], [356, 2, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [357, 2, 1, "", "PYDICOM_IMPLEMENTATION_UID"], [358, 2, 1, "", "PYDICOM_ROOT_UID"], [359, 2, 1, "", "ParametricMapStorage"], [360, 2, 1, "", "PatientRadiationDoseSRStorage"], [361, 2, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [362, 2, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [363, 2, 1, "", "PositronEmissionTomographyImageStorage"], [364, 2, 1, "", "ProcedureLogStorage"], [365, 2, 1, "", "ProtocolApprovalStorage"], [366, 2, 1, "", "PseudoColorSoftcopyPresentationStateStorage"], [367, 2, 1, "", "RE_VALID_UID"], [368, 2, 1, "", "RE_VALID_UID_PREFIX"], [369, 2, 1, "", "RLELossless"], [370, 2, 1, "", "RLETransferSyntaxes"], [371, 2, 1, "", "RTBeamsDeliveryInstructionStorage"], [372, 2, 1, "", "RTBeamsTreatmentRecordStorage"], [373, 2, 1, "", "RTBrachyApplicationSetupDeliveryInstructionStorage"], [374, 2, 1, "", "RTBrachyTreatmentRecordStorage"], [375, 2, 1, "", "RTDoseStorage"], [376, 2, 1, "", "RTImageStorage"], [377, 2, 1, "", "RTIonBeamsTreatmentRecordStorage"], [378, 2, 1, "", "RTIonPlanStorage"], [379, 2, 1, "", "RTPhysicianIntentStorage"], [380, 2, 1, "", "RTPlanStorage"], [381, 2, 1, "", "RTRadiationRecordSetStorage"], [382, 2, 1, "", "RTRadiationSalvageRecordStorage"], [383, 2, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [384, 2, 1, "", "RTRadiationSetStorage"], [385, 2, 1, "", "RTSegmentAnnotationStorage"], [386, 2, 1, "", "RTStructureSetStorage"], [387, 2, 1, "", "RTTreatmentPreparationStorage"], [388, 2, 1, "", "RTTreatmentSummaryRecordStorage"], [389, 2, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [390, 2, 1, "", "RawDataStorage"], [391, 2, 1, "", "RealWorldValueMappingStorage"], [392, 2, 1, "", "RespiratoryWaveformStorage"], [393, 2, 1, "", "RoboticArmRadiationStorage"], [394, 2, 1, "", "RoboticRadiationRecordStorage"], [395, 2, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [396, 2, 1, "", "SecondaryCaptureImageStorage"], [397, 2, 1, "", "SegmentationStorage"], [398, 2, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [399, 2, 1, "", "SimplifiedAdultEchoSRStorage"], [400, 2, 1, "", "SleepElectroencephalogramWaveformStorage"], [401, 2, 1, "", "SpatialFiducialsStorage"], [402, 2, 1, "", "SpatialRegistrationStorage"], [403, 2, 1, "", "SpectaclePrescriptionReportStorage"], [404, 2, 1, "", "StereometricRelationshipStorage"], [405, 2, 1, "", "SubjectiveRefractionMeasurementsStorage"], [406, 2, 1, "", "SurfaceScanMeshStorage"], [407, 2, 1, "", "SurfaceScanPointCloudStorage"], [408, 2, 1, "", "SurfaceSegmentationStorage"], [409, 2, 1, "", "TomotherapeuticRadiationRecordStorage"], [410, 2, 1, "", "TomotherapeuticRadiationStorage"], [411, 2, 1, "", "TractographyResultsStorage"], [412, 2, 1, "", "TwelveLeadECGWaveformStorage"], [413, 3, 1, "", "UID"], [414, 2, 1, "", "UltrasoundImageStorage"], [415, 2, 1, "", "UltrasoundMultiFrameImageStorage"], [416, 2, 1, "", "UncompressedTransferSyntaxes"], [417, 2, 1, "", "VLEndoscopicImageStorage"], [418, 2, 1, "", "VLMicroscopicImageStorage"], [419, 2, 1, "", "VLPhotographicImageStorage"], [420, 2, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [421, 2, 1, "", "VLWholeSlideMicroscopyImageStorage"], [422, 2, 1, "", "VideoEndoscopicImageStorage"], [423, 2, 1, "", "VideoMicroscopicImageStorage"], [424, 2, 1, "", "VideoPhotographicImageStorage"], [425, 2, 1, "", "VisualAcuityMeasurementsStorage"], [426, 2, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [427, 2, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [428, 2, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [429, 2, 1, "", "XADefinedProcedureProtocolStorage"], [430, 2, 1, "", "XAPerformedProcedureProtocolStorage"], [431, 2, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [432, 2, 1, "", "XRay3DAngiographicImageStorage"], [433, 2, 1, "", "XRay3DCraniofacialImageStorage"], [434, 2, 1, "", "XRayAngiographicImageStorage"], [435, 2, 1, "", "XRayRadiationDoseSRStorage"], [436, 2, 1, "", "XRayRadiofluoroscopicImageStorage"], [437, 1, 1, "", "generate_uid"]], "pydicom.uid.UID": [[413, 6, 1, "", "__init__"], [413, 4, 1, "", "info"], [413, 4, 1, "", "is_compressed"], [413, 4, 1, "", "is_deflated"], [413, 4, 1, "", "is_encapsulated"], [413, 4, 1, "", "is_implicit_VR"], [413, 4, 1, "", "is_little_endian"], [413, 4, 1, "", "is_private"], [413, 4, 1, "", "is_retired"], [413, 4, 1, "", "is_transfer_syntax"], [413, 4, 1, "", "is_valid"], [413, 4, 1, "", "keyword"], [413, 4, 1, "", "name"], [413, 4, 1, "", "type"]], "pydicom.valuerep": [[438, 3, 1, "", "DA"], [439, 1, 1, "", "DS"], [440, 3, 1, "", "DSdecimal"], [441, 3, 1, "", "DSfloat"], [442, 3, 1, "", "DT"], [443, 3, 1, "", "IS"], [444, 3, 1, "", "ISfloat"], [445, 1, 1, "", "MultiString"], [446, 3, 1, "", "PersonName"], [447, 5, 1, "", "PersonNameUnicode"], [448, 3, 1, "", "TM"], [449, 3, 1, "", "VR"], [450, 1, 1, "", "format_number_as_ds"], [451, 1, 1, "", "is_valid_ds"]], "pydicom.valuerep.DA": [[438, 6, 1, "", "__init__"]], "pydicom.valuerep.DSdecimal": [[440, 6, 1, "", "__init__"]], "pydicom.valuerep.DSfloat": [[441, 6, 1, "", "__init__"]], "pydicom.valuerep.DT": [[442, 6, 1, "", "__init__"]], "pydicom.valuerep.IS": [[443, 6, 1, "", "__init__"]], "pydicom.valuerep.ISfloat": [[444, 6, 1, "", "__init__"]], "pydicom.valuerep.PersonName": [[446, 6, 1, "", "__init__"], [446, 4, 1, "", "alphabetic"], [446, 4, 1, "", "components"], [446, 6, 1, "", "decode"], [446, 6, 1, "", "encode"], [446, 6, 1, "", "family_comma_given"], [446, 4, 1, "", "family_name"], [446, 6, 1, "", "formatted"], [446, 6, 1, "", "from_named_components"], [446, 6, 1, "", "from_named_components_veterinary"], [446, 4, 1, "", "given_name"], [446, 4, 1, "", "ideographic"], [446, 4, 1, "", "middle_name"], [446, 4, 1, "", "name_prefix"], [446, 4, 1, "", "name_suffix"], [446, 4, 1, "", "phonetic"]], "pydicom.valuerep.TM": [[448, 6, 1, "", "__init__"]], "pydicom.valuerep.VR": [[449, 6, 1, "", "__init__"]], "pydicom.values": [[452, 1, 1, "", "convert_AE_string"], [453, 1, 1, "", "convert_ATvalue"], [454, 1, 1, "", "convert_DA_string"], [455, 1, 1, "", "convert_DS_string"], [456, 1, 1, "", "convert_DT_string"], [457, 1, 1, "", "convert_IS_string"], [458, 1, 1, "", "convert_OBvalue"], [459, 1, 1, "", "convert_OWvalue"], [460, 1, 1, "", "convert_PN"], [461, 1, 1, "", "convert_SQ"], [462, 1, 1, "", "convert_TM_string"], [463, 1, 1, "", "convert_UI"], [464, 1, 1, "", "convert_UN"], [465, 1, 1, "", "convert_UR_string"], [466, 1, 1, "", "convert_numbers"], [467, 1, 1, "", "convert_single_string"], [468, 1, 1, "", "convert_string"], [469, 1, 1, "", "convert_tag"], [470, 1, 1, "", "convert_text"], [471, 1, 1, "", "convert_value"]], "pydicom.waveforms": [[472, 0, 0, "-", "numpy_handler"]], "pydicom.waveforms.numpy_handler": [[472, 1, 1, "", "generate_multiplex"], [472, 1, 1, "", "is_available"], [472, 1, 1, "", "multiplex_array"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:method", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"show": [0, 15, 27, 29], "dicom": [0, 11, 12, 13, 17, 18, 21, 25, 27, 40, 47, 53, 57, 75, 507, 509, 513], "file": [0, 11, 18, 21, 25, 27, 47, 53, 75, 480, 484, 487, 488, 507, 509], "us": [0, 2, 24, 41, 42, 49, 53, 509, 510, 512], "hierarch": 0, "tree": 0, "imag": [1, 2, 4, 6, 34, 35, 49], "process": [1, 6, 16], "downsiz": 2, "mri": 2, "pydicom": [2, 24, 25, 27, 28, 29, 31, 38, 39, 40, 41, 42, 44, 45, 48, 49, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 478, 479, 480, 500, 501, 502, 509, 510], "decod": [3, 54, 66, 513], "plot": [3, 4, 9], "waveform": [3, 52, 472, 476, 513], "data": [3, 8, 9, 13, 18, 32, 33, 42, 43, 44, 50, 51, 52, 56, 57, 60, 61, 67, 68, 105, 106, 107, 108, 473, 474, 475, 476, 506, 510, 513], "load": [4, 507], "ct": 4, "slice": 4, "axial": 4, "sagitt": 4, "coron": 4, "comput": [5, 14, 20, 22], "time": [5, 14, 20, 22], "gener": [6, 24, 37], "exampl": [6, 25, 27, 34, 38, 505, 509], "input": [6, 7], "output": [6, 7, 8], "metadata": [6, 16], "format": [8, 506], "set": [8, 11, 44, 75, 100, 507], "print": 8, "read": [9, 10, 11, 12, 47, 72, 505], "dataset": [9, 10, 15, 39, 42, 50, 51, 52, 56, 58, 70, 72, 74, 132, 133, 134, 135, 136, 505, 506], "pixel": [9, 32, 33, 34, 35, 42, 43, 51, 68, 473, 475, 510], "dicomdir": [10, 59, 137, 507], "rtplan": 12, "list": [12, 479], "inform": 12, "write": [13, 37, 47, 53, 74, 503, 505], "work": [15, 19, 50, 51, 52, 506], "memori": 15, "base": [15, 71, 151], "add": 17, "dictionari": [17, 57], "item": 17, "standard": [17, 505], "anonym": 18, "singl": 18, "sequenc": [19, 39, 63, 220, 221, 505], "analys": 21, "differ": 21, "between": 21, "displai": [23, 44], "unicod": 23, "person": 23, "name": [23, 48], "frequent": 24, "ask": 24, "question": 24, "how": [24, 509], "do": 24, "i": [24, 443], "cite": 24, "instal": [24, 27, 28, 41, 503, 509, 512], "what": [24, 503, 504], "ar": 24, "": 24, "prerequisit": 24, "requir": [24, 32, 48, 503], "option": [24, 25, 27, 31, 55, 503, 509], "version": [24, 40, 48, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 509], "python": [24, 30, 46, 49], "can": 24, "codifi": [25, 27, 53], "command": [25, 27, 29], "A": [25, 27], "simpl": [25, 27], "part": [25, 27], "extend": [26, 27], "cli": [26, 27, 28], "line": 27, "interfac": 27, "guid": [27, 36, 38, 45], "introduct": [27, 28, 40, 41, 44, 48, 49, 50, 51, 52, 53, 506, 510], "combin": [27, 28], "other": [27, 28, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490], "element": [30, 39, 44, 60, 61, 62, 63, 64, 65, 66, 505], "vr": [30, 449], "type": [30, 37], "encod": [31, 32, 33, 34, 54, 68, 150, 151, 152, 513], "plugin": [31, 32, 34], "gdcm": [31, 509], "pylibjpeg": [31, 509], "ad": [32, 505, 507], "an": 32, "rle": 34, "lossless": 34, "valid": [34, 40], "paramet": 34, "avail": 34, "glossari": 35, "modul": [35, 48], "document": [37, 38, 480, 492, 503, 504], "style": 37, "guidelin": 37, "restructuredtext": 37, "get": [38, 56, 505], "start": 38, "user": [38, 45], "api": [38, 48, 477], "refer": [38, 477], "core": 39, "datael": [39, 129], "tag": [39, 64, 222, 223, 224, 225], "best": 40, "practic": 40, "enforc": 40, "futur": 40, "proof": 40, "your": [40, 503, 504], "code": [40, 503], "limit": 40, "major": [40, 480, 481, 482, 483, 484, 485, 486, 487, 489], "packag": [40, 42, 48, 510, 512], "licens": 41, "support": [41, 42, 43, 46, 506], "next": [41, 503, 504, 505], "step": [41, 505, 512], "compress": [42, 43, 510], "third": [42, 510], "parti": [42, 510], "transfer": [42, 43, 479], "syntax": [42, 43, 479], "handl": 43, "precondit": 43, "usag": 43, "privat": [44, 57], "remov": [44, 48, 507], "all": 44, "2": [46, 480, 481, 491, 495, 496, 497, 498, 499, 500], "pars": [47, 67], "transit": 48, "1": [48, 480, 489, 490, 491, 492, 493, 494, 496, 497], "x": 48, "For": 48, "author": 48, "0": [48, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501], "error": [48, 69, 153], "messag": 48, "relat": 48, "chang": [48, 480, 481, 482, 483, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 499, 500, 501, 503, 504, 507], "function": 48, "variabl": 48, "behavior": 48, "view": [49, 505], "matplotlib": 49, "tkinter": 49, "librari": [49, 503, 509], "pil": 49, "wxpython": 49, "overlai": [50, 205, 474], "overlay_arrai": 50, "pixel_arrai": 51, "color": 51, "space": 51, "palett": 51, "modal": 51, "lut": 51, "rescal": 51, "oper": 51, "voi": 51, "window": 51, "waveform_arrai": 52, "from": [53, 506], "scratch": 53, "charact": 54, "charset": [54, 76, 77, 78, 79], "configur": 55, "config": [55, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "includ": 56, "util": [57, 67, 73, 219, 473, 479], "datadict": [57, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "represent": [58, 60, 62, 63, 65], "dataelem": [61, 129, 130, 131], "multi": 62, "valu": [62, 63, 65, 66, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471], "multiv": [62, 204], "special": 65, "valuerep": [65, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451], "bulk": [67, 473], "encapsul": [67, 140, 510], "encap": [67, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "creat": [67, 503, 504, 506, 507, 512], "except": 69, "io": [70, 71, 73], "class": [71, 479], "filebas": [71, 154, 155, 156, 157], "fileread": [72, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "fileutil": [73, 175, 176, 177, 178, 179], "filewrit": [74, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "fileset": [75, 169, 170, 171, 172, 173, 174, 507], "convert_encod": 76, "decode_byt": 77, "decode_el": 78, "encode_str": 79, "apply_j2k_correct": 80, "ds_decim": 81, "ds_numpi": 82, "ignor": 83, "invalid_keyword_behavior": 84, "invalid_key_behavior": 85, "rais": 86, "warn": 87, "allow_ds_float": 88, "assume_implicit_vr_switch": 89, "convert_wrong_length_to_un": 90, "data_element_callback": 91, "data_element_callback_kwarg": 92, "datetime_convers": 93, "debug": 94, "enforce_valid_valu": 95, "future_behavior": 96, "overlay_data_handl": 97, "pixel_data_handl": [98, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 475], "reset_data_element_callback": 99, "show_file_meta": 101, "use_ds_decim": 102, "use_ds_numpi": 103, "use_is_numpi": 104, "get_charset_fil": 105, "get_palette_fil": 106, "get_testdata_fil": [107, 108], "add_dict_entri": [109, 110], "add_private_dict_entri": [111, 112], "dictionary_vm": 113, "dictionary_vr": 114, "dictionary_descript": 115, "dictionary_has_tag": 116, "dictionary_is_retir": 117, "dictionary_keyword": 118, "get_entri": 119, "get_private_entri": 120, "keyword_for_tag": 121, "mask_match": 122, "private_dictionary_vm": 123, "private_dictionary_vr": 124, "private_dictionary_descript": 125, "repeater_has_keyword": 126, "repeater_has_tag": 127, "tag_for_keyword": 128, "dataelement_from_raw": 130, "rawdatael": 131, "filedataset": 133, "filemetadataset": 134, "privateblock": 135, "validate_file_meta": 136, "decode_data_sequ": 138, "defragment_data": 139, "encapsulate_extend": 141, "fragment_fram": 142, "generate_pixel_data": 143, "generate_pixel_data_frag": 144, "generate_pixel_data_fram": 145, "get_frame_offset": 146, "itemize_frag": 147, "itemize_fram": 148, "read_item": 149, "rlelosslessencod": 150, "get_encod": 152, "invaliddicomerror": 153, "dicombytesio": 154, "dicomfil": 155, "dicomfilelik": 156, "dicomio": 157, "data_element_gener": 158, "data_element_offset_to_valu": 159, "dcmread": 160, "read_dataset": 161, "read_deferred_data_el": 162, "read_dicomdir": 163, "read_file_meta_info": 164, "read_parti": 165, "read_preambl": 166, "read_sequ": 167, "read_sequence_item": 168, "directory_record": 169, "fileinst": 170, "recordnod": 172, "generate_filenam": 173, "is_conformant_file_id": 174, "absorb_delimiter_item": 175, "find_byt": 176, "find_delimit": 177, "length_of_undefined_length": 178, "read_undefined_length_valu": 179, "correct_ambiguous_vr": 180, "correct_ambiguous_vr_el": 181, "dcmwrite": 182, "multi_str": 183, "write_atvalu": 184, "write_da": 185, "write_dt": 186, "write_obvalu": 187, "write_owvalu": 188, "write_pn": 189, "write_tm": 190, "write_ui": 191, "write_un": 192, "write_data_el": 193, "write_dataset": 194, "write_file_meta_info": 195, "write_number_str": 196, "write_numb": 197, "write_sequ": 198, "write_sequence_item": 199, "write_str": 200, "write_text": 201, "misc": [202, 203, 478], "is_dicom": 202, "size_in_byt": 203, "multivalu": 204, "numpy_handl": [205, 215, 472], "apply_color_lut": 206, "apply_modality_lut": 207, "apply_rescal": 208, "apply_voi": 209, "apply_voi_lut": 210, "apply_window": 211, "convert_color_spac": 212, "gdcm_handler": 213, "jpeg_ls_handl": 214, "pillow_handl": 216, "pylibjpeg_handl": 217, "rle_handl": 218, "validate_dataset": 221, "basetag": 222, "tupletag": 224, "tag_in_except": 225, "uid": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 479], "acquisitioncontextsrstorag": 226, "advancedblendingpresentationstatestorag": 227, "alltransfersyntax": 228, "ambulatoryecgwaveformstorag": 229, "arterialpulsewaveformstorag": 230, "autorefractionmeasurementsstorag": 231, "basicstructureddisplaystorag": 232, "basictextsrstorag": 233, "basicvoiceaudiowaveformstorag": 234, "blendingsoftcopypresentationstatestorag": 235, "bodypositionwaveformstorag": 236, "breastprojectionxrayimagestorageforpresent": 237, "breastprojectionxrayimagestorageforprocess": 238, "breasttomosynthesisimagestorag": 239, "carmphotonelectronradiationrecordstorag": 240, "carmphotonelectronradiationstorag": 241, "ctdefinedprocedureprotocolstorag": 242, "ctimagestorag": 243, "ctperformedprocedureprotocolstorag": 244, "cardiacelectrophysiologywaveformstorag": 245, "chestcadsrstorag": 246, "coloncadsrstorag": 247, "colorpalettestorag": 248, "colorsoftcopypresentationstatestorag": 249, "compositingplanarmprvolumetricpresentationstatestorag": 250, "comprehensive3dsrstorag": 251, "comprehensivesrstorag": 252, "computedradiographyimagestorag": 253, "contentassessmentresultsstorag": 254, "cornealtopographymapstorag": 255, "dicos2daitstorag": 256, "dicos3daitstorag": 257, "dicosctimagestorag": 258, "dicosdigitalxrayimagestorageforpresent": 259, "dicosdigitalxrayimagestorageforprocess": 260, "dicosquadrupoleresonancestorag": 261, "dicosthreatdetectionreportstorag": 262, "deflatedexplicitvrlittleendian": 263, "deformablespatialregistrationstorag": 264, "dermoscopicphotographyimagestorag": 265, "digitalintraoralxrayimagestorageforpresent": 266, "digitalintraoralxrayimagestorageforprocess": 267, "digitalmammographyxrayimagestorageforpresent": 268, "digitalmammographyxrayimagestorageforprocess": 269, "digitalxrayimagestorageforpresent": 270, "digitalxrayimagestorageforprocess": 271, "eddycurrentimagestorag": 272, "eddycurrentmultiframeimagestorag": 273, "electromyogramwaveformstorag": 274, "electrooculogramwaveformstorag": 275, "encapsulatedcdastorag": 276, "encapsulatedmtlstorag": 277, "encapsulatedobjstorag": 278, "encapsulatedpdfstorag": 279, "encapsulatedstlstorag": 280, "enhancedctimagestorag": 281, "enhancedmrcolorimagestorag": 282, "enhancedmrimagestorag": 283, "enhancedpetimagestorag": 284, "enhancedsrstorag": 285, "enhancedusvolumestorag": 286, "enhancedxaimagestorag": 287, "enhancedxrfimagestorag": 288, "enhancedxrayradiationdosesrstorag": 289, "explicitvrbigendian": 290, "explicitvrlittleendian": 291, "extensiblesrstorag": 292, "generalaudiowaveformstorag": 293, "generalecgwaveformstorag": 294, "genericimplanttemplatestorag": 295, "grayscaleplanarmprvolumetricpresentationstatestorag": 296, "grayscalesoftcopypresentationstatestorag": 297, "hevcm10p51": 298, "hevcmp51": 299, "hangingprotocolstorag": 300, "hemodynamicwaveformstorag": 301, "implantassemblytemplatestorag": 302, "implanttemplategroupstorag": 303, "implantationplansrstorag": 304, "implicitvrlittleendian": 305, "intraocularlenscalculationsstorag": 306, "intravascularopticalcoherencetomographyimagestorageforpresent": 307, "intravascularopticalcoherencetomographyimagestorageforprocess": 308, "jpeg2000": 309, "jpeg2000lossless": 310, "jpeg2000mc": 311, "jpeg2000mclossless": 312, "jpeg2000transfersyntax": 313, "jpegbaseline8bit": 314, "jpegextended12bit": 315, "jpeglslossless": 316, "jpeglsnearlossless": 317, "jpeglstransfersyntax": 318, "jpeglosslessp14": 319, "jpeglosslesssv1": 320, "jpegtransfersyntax": 321, "keratometrymeasurementsstorag": 322, "keyobjectselectiondocumentstorag": 323, "legacyconvertedenhancedctimagestorag": 324, "legacyconvertedenhancedmrimagestorag": 325, "legacyconvertedenhancedpetimagestorag": 326, "lensometrymeasurementsstorag": 327, "mpeg2mphl": 328, "mpeg2mpml": 329, "mpeg4hp41": 330, "mpeg4hp41bd": 331, "mpeg4hp422d": 332, "mpeg4hp423d": 333, "mpeg4hp42stereo": 334, "mpegtransfersyntax": 335, "mrimagestorag": 336, "mrspectroscopystorag": 337, "maculargridthicknessandvolumereportstorag": 338, "mammographycadsrstorag": 339, "mediastoragedirectorystorag": 340, "microscopybulksimpleannotationsstorag": 341, "multiframegrayscalebytesecondarycaptureimagestorag": 342, "multiframegrayscalewordsecondarycaptureimagestorag": 343, "multiframesinglebitsecondarycaptureimagestorag": 344, "multiframetruecolorsecondarycaptureimagestorag": 345, "multichannelrespiratorywaveformstorag": 346, "multiplevolumerenderingvolumetricpresentationstatestorag": 347, "nuclearmedicineimagestorag": 348, "ophthalmicaxialmeasurementsstorag": 349, "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorag": 350, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 351, "ophthalmicphotography16bitimagestorag": 352, "ophthalmicphotography8bitimagestorag": 353, "ophthalmicthicknessmapstorag": 354, "ophthalmictomographyimagestorag": 355, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 356, "pydicom_implementation_uid": 357, "pydicom_root_uid": 358, "parametricmapstorag": 359, "patientradiationdosesrstorag": 360, "performedimagingagentadministrationsrstorag": 361, "plannedimagingagentadministrationsrstorag": 362, "positronemissiontomographyimagestorag": 363, "procedurelogstorag": 364, "protocolapprovalstorag": 365, "pseudocolorsoftcopypresentationstatestorag": 366, "re_valid_uid": 367, "re_valid_uid_prefix": 368, "rlelossless": 369, "rletransfersyntax": 370, "rtbeamsdeliveryinstructionstorag": 371, "rtbeamstreatmentrecordstorag": 372, "rtbrachyapplicationsetupdeliveryinstructionstorag": 373, "rtbrachytreatmentrecordstorag": 374, "rtdosestorag": 375, "rtimagestorag": 376, "rtionbeamstreatmentrecordstorag": 377, "rtionplanstorag": 378, "rtphysicianintentstorag": 379, "rtplanstorag": 380, "rtradiationrecordsetstorag": 381, "rtradiationsalvagerecordstorag": 382, "rtradiationsetdeliveryinstructionstorag": 383, "rtradiationsetstorag": 384, "rtsegmentannotationstorag": 385, "rtstructuresetstorag": 386, "rttreatmentpreparationstorag": 387, "rttreatmentsummaryrecordstorag": 388, "radiopharmaceuticalradiationdosesrstorag": 389, "rawdatastorag": 390, "realworldvaluemappingstorag": 391, "respiratorywaveformstorag": 392, "roboticarmradiationstorag": 393, "roboticradiationrecordstorag": 394, "routinescalpelectroencephalogramwaveformstorag": 395, "secondarycaptureimagestorag": 396, "segmentationstorag": 397, "segmentedvolumerenderingvolumetricpresentationstatestorag": 398, "simplifiedadultechosrstorag": 399, "sleepelectroencephalogramwaveformstorag": 400, "spatialfiducialsstorag": 401, "spatialregistrationstorag": 402, "spectacleprescriptionreportstorag": 403, "stereometricrelationshipstorag": 404, "subjectiverefractionmeasurementsstorag": 405, "surfacescanmeshstorag": 406, "surfacescanpointcloudstorag": 407, "surfacesegmentationstorag": 408, "tomotherapeuticradiationrecordstorag": 409, "tomotherapeuticradiationstorag": 410, "tractographyresultsstorag": 411, "twelveleadecgwaveformstorag": 412, "ultrasoundimagestorag": 414, "ultrasoundmultiframeimagestorag": 415, "uncompressedtransfersyntax": 416, "vlendoscopicimagestorag": 417, "vlmicroscopicimagestorag": 418, "vlphotographicimagestorag": 419, "vlslidecoordinatesmicroscopicimagestorag": 420, "vlwholeslidemicroscopyimagestorag": 421, "videoendoscopicimagestorag": 422, "videomicroscopicimagestorag": 423, "videophotographicimagestorag": 424, "visualacuitymeasurementsstorag": 425, "volumerenderingvolumetricpresentationstatestorag": 426, "widefieldophthalmicphotography3dcoordinatesimagestorag": 427, "widefieldophthalmicphotographystereographicprojectionimagestorag": 428, "xadefinedprocedureprotocolstorag": 429, "xaperformedprocedureprotocolstorag": 430, "xaxrfgrayscalesoftcopypresentationstatestorag": 431, "xray3dangiographicimagestorag": 432, "xray3dcraniofacialimagestorag": 433, "xrayangiographicimagestorag": 434, "xrayradiationdosesrstorag": 435, "xrayradiofluoroscopicimagestorag": 436, "generate_uid": 437, "da": 438, "d": 439, "dsdecim": 440, "dsfloat": 441, "dt": 442, "isfloat": 444, "multistr": 445, "personnam": 446, "personnameunicod": 447, "tm": 448, "format_number_as_d": 450, "is_valid_d": 451, "convert_ae_str": 452, "convert_atvalu": 453, "convert_da_str": 454, "convert_ds_str": 455, "convert_dt_str": 456, "convert_is_str": 457, "convert_obvalu": 458, "convert_owvalu": 459, "convert_pn": 460, "convert_sq": 461, "convert_tm_str": 462, "convert_ui": 463, "convert_un": 464, "convert_ur_str": 465, "convert_numb": 466, "convert_single_str": 467, "convert_str": 468, "convert_tag": 469, "convert_text": 470, "convert_valu": 471, "handler": [473, 474, 475, 476], "miscellan": 478, "definit": 479, "storag": 479, "sop": [479, 507], "releas": [480, 484, 509], "note": 480, "3": [480, 482, 492, 499, 501], "enhanc": [480, 481, 482, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501], "fix": [480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "intern": [480, 500, 501], "4": [480, 483, 493, 494, 500], "changelog": [480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "infrastructur": [480, 489], "9": [480, 481, 482, 483, 484, 485, 486, 487, 488], "contrib": [480, 484, 487, 488], "contributor": [480, 488], "8": [480, 487], "bug": [480, 481, 482, 483, 485, 486, 487], "7": [480, 486], "6": [480, 485], "5": [480, 484], "thi": [480, 483, 484], "new": [480, 484, 503, 504, 507, 512], "addit": [480, 483], "contribut": [502, 503, 504], "sourc": 503, "download": [503, 504, 509], "current": 503, "pytest": 503, "run": 503, "test": [503, 509], "suit": 503, "branch": [503, 504], "make": [503, 504], "preview": [503, 504], "commit": [503, 504], "pull": [503, 504], "request": [503, 504], "happen": [503, 504], "build": 504, "basic": 505, "access": 505, "modifi": [505, 507], "our": 505, "file_meta": 505, "ani": 505, "categori": 505, "delet": [505, 512], "json": 506, "convert": 506, "larg": 506, "binari": 506, "The": 507, "exist": 507, "stage": 507, "instanc": 507, "appli": 507, "conclus": 507, "tutori": 508, "offici": 509, "pip": [509, 512], "conda": [509, 512], "pillow": 509, "pyjpegl": 509, "develop": 509, "structur": 511, "report": 511, "manag": 512, "virtual": 512, "environ": 512, "activ": 512, "deactiv": 512, "final": 512}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Show a dicom file using hierarchical tree": [[0, "show-a-dicom-file-using-hierarchical-tree"]], "Image processing": [[1, "image-processing"], [6, "image-processing"]], "Downsize MRI image using pydicom": [[2, "downsize-mri-image-using-pydicom"]], "Decode and plot Waveform Data": [[3, "decode-and-plot-waveform-data"]], "Load CT slices and plot axial, sagittal and coronal images": [[4, "load-ct-slices-and-plot-axial-sagittal-and-coronal-images"]], "Computation times": [[5, "computation-times"], [14, "computation-times"], [20, "computation-times"], [22, "computation-times"]], "General examples": [[6, "general-examples"]], "Input-output": [[6, "input-output"], [7, "input-output"]], "Metadata processing": [[6, "metadata-processing"], [16, "metadata-processing"]], "Format the output of the data set printing": [[8, "format-the-output-of-the-data-set-printing"]], "Read a Dataset and plot Pixel Data": [[9, "read-a-dataset-and-plot-pixel-data"]], "Read a DICOMDIR dataset": [[10, "read-a-dicomdir-dataset"]], "Read a DICOM File-set": [[11, "read-a-dicom-file-set"]], "Read RTPLAN DICOM and list information": [[12, "read-rtplan-dicom-and-list-information"]], "Write DICOM data": [[13, "write-dicom-data"]], "Show working with memory-based dataset": [[15, "show-working-with-memory-based-dataset"]], "Add dictionary items in the standard DICOM dictionary": [[17, "add-dictionary-items-in-the-standard-dicom-dictionary"]], "Anonymize DICOM data": [[18, "anonymize-dicom-data"]], "Anonymize a single file": [[18, "anonymize-a-single-file"]], "Working with sequences": [[19, "working-with-sequences"]], "Analyse differences between DICOM files": [[21, "analyse-differences-between-dicom-files"]], "Display unicode person names": [[23, "display-unicode-person-names"]], "Frequently asked questions": [[24, "frequently-asked-questions"]], "General": [[24, "general"]], "How do I cite pydicom?": [[24, "how-do-i-cite-pydicom"]], "Installation": [[24, "installation"]], "What are pydicom\u2019s prerequisites?": [[24, "what-are-pydicom-s-prerequisites"]], "Required": [[24, "required"]], "Optional": [[24, "optional"]], "What version of Python can I use?": [[24, "what-version-of-python-can-i-use"]], "pydicom codify command": [[25, "pydicom-codify-command"], [27, "pydicom-codify-command"]], "A simple example": [[25, "a-simple-example"], [27, "a-simple-example"]], "Command options": [[25, "command-options"], [27, "command-options"]], "Codifying a part of a DICOM file": [[25, "codifying-a-part-of-a-dicom-file"], [27, "codifying-a-part-of-a-dicom-file"]], "Extending the CLI": [[26, "extending-the-cli"], [27, "extending-the-cli"]], "Command-line Interface Guide": [[27, "command-line-interface-guide"]], "Introduction": [[27, "introduction"], [28, "introduction"], [40, "introduction"], [41, "introduction"], [44, "introduction"], [48, "introduction"], [49, "introduction"], [50, "introduction"], [51, "introduction"], [52, "introduction"], [53, "introduction"], [510, "introduction"]], "Installing the pydicom CLI": [[27, "installing-the-pydicom-cli"], [28, "installing-the-pydicom-cli"]], "Combining with other CLIs": [[27, "combining-with-other-clis"], [28, "combining-with-other-clis"]], "pydicom show command": [[27, "pydicom-show-command"], [29, "pydicom-show-command"]], "Element VRs and Python types": [[30, "element-vrs-and-python-types"]], "Encoder Plugins Options": [[31, "encoder-plugins-options"]], "pydicom": [[31, "pydicom"]], "gdcm": [[31, "gdcm"]], "pylibjpeg": [[31, "pylibjpeg"]], "Pixel Data Encoder Plugins": [[32, "pixel-data-encoder-plugins"]], "Plugin Requirements": [[32, "plugin-requirements"]], "Adding Plugins to an Encoder": [[32, "adding-plugins-to-an-encoder"]], "Pixel Data Encoding": [[33, "pixel-data-encoding"]], "RLE Lossless Encoding": [[34, "rle-lossless-encoding"]], "Valid Image Pixel Parameters": [[34, "valid-image-pixel-parameters"]], "Available Plugins": [[34, "available-plugins"]], "Examples": [[34, "examples"], [38, "examples"]], "Glossary": [[35, "glossary"]], "Image Pixel Module": [[35, "image-pixel-module"]], "Guides": [[36, "guides"]], "Writing documentation": [[37, "writing-documentation"]], "Types of documentation": [[37, "types-of-documentation"]], "General style guidelines": [[37, "general-style-guidelines"]], "Guidelines for reStructuredText": [[37, "guidelines-for-restructuredtext"]], "pydicom documentation": [[38, "pydicom-documentation"]], "Getting Started": [[38, "getting-started"]], "User Guide": [[38, "user-guide"]], "API Reference": [[38, "api-reference"], [477, "api-reference"]], "Core elements in pydicom": [[39, "core-elements-in-pydicom"]], "Dataset": [[39, "dataset"]], "DataElement": [[39, "dataelement"]], "Tag": [[39, "tag"]], "Sequence": [[39, "sequence"]], "Best Practices": [[40, "best-practices"]], "Enforcing Valid DICOM": [[40, "enforcing-valid-dicom"]], "Future-proofing your code": [[40, "future-proofing-your-code"]], "Limiting the pydicom major version in your package": [[40, "limiting-the-pydicom-major-version-in-your-package"]], "Introduction to pydicom": [[41, "introduction-to-pydicom"]], "License": [[41, "license"]], "Installing": [[41, "installing"]], "Using pydicom": [[41, "using-pydicom"]], "Support": [[41, "support"]], "Next Steps": [[41, "next-steps"]], "Compressing Pixel Data": [[42, "compressing-pixel-data"], [510, "compressing-pixel-data"]], "Compressing using third-party packages": [[42, "compressing-using-third-party-packages"]], "Compressing using pydicom": [[42, "compressing-using-pydicom"], [510, "compressing-using-pydicom"]], "Supported Transfer Syntaxes": [[42, "supported-transfer-syntaxes"], [43, "supported-transfer-syntaxes"]], "Compressing with Dataset.compress()": [[42, "compressing-with-dataset-compress"]], "Handling of compressed pixel data": [[43, "handling-of-compressed-pixel-data"]], "Preconditions": [[43, "preconditions"]], "Usage": [[43, "usage"]], "Private Data Elements": [[44, "private-data-elements"]], "Displaying Private Data Elements in pydicom": [[44, "displaying-private-data-elements-in-pydicom"]], "Setting Private Data Elements with pydicom": [[44, "setting-private-data-elements-with-pydicom"]], "Removing All Private Data Elements": [[44, "removing-all-private-data-elements"]], "pydicom User Guide": [[45, "pydicom-user-guide"]], "Python 2 Support": [[46, "python-2-support"]], "Reading and writing DICOM files": [[47, "reading-and-writing-dicom-files"]], "File Reading/Parsing": [[47, "file-reading-parsing"]], "File Writing": [[47, "file-writing"]], "Transition to pydicom 1.x": [[48, "transition-to-pydicom-1-x"]], "For authors of packages requiring pydicom < 1.0": [[48, "for-authors-of-packages-requiring-pydicom-1-0"]], "Error messages relating to the pydicom transition": [[48, "error-messages-relating-to-the-pydicom-transition"]], "API Changes in version 1.0": [[48, "api-changes-in-version-1-0"]], "Changed module names": [[48, "changed-module-names"]], "Changed function and variable names": [[48, "changed-function-and-variable-names"]], "Removed functions and names": [[48, "removed-functions-and-names"]], "Changed behavior": [[48, "changed-behavior"]], "Viewing Images": [[49, "viewing-images"]], "Using pydicom with matplotlib": [[49, "using-pydicom-with-matplotlib"]], "Using pydicom with Tkinter": [[49, "using-pydicom-with-tkinter"]], "Using pydicom with Python Imaging Library (PIL)": [[49, "using-pydicom-with-python-imaging-library-pil"]], "Using pydicom with wxPython": [[49, "using-pydicom-with-wxpython"]], "Working with Overlay Data": [[50, "working-with-overlay-data"]], "Dataset.overlay_array()": [[50, "dataset-overlay-array"]], "Working with Pixel Data": [[51, "working-with-pixel-data"]], "Dataset.pixel_array": [[51, "dataset-pixel-array"]], "Color space": [[51, "color-space"]], "Palette Color": [[51, "palette-color"]], "Modality LUT or Rescale Operation": [[51, "modality-lut-or-rescale-operation"]], "VOI LUT or Windowing Operation": [[51, "voi-lut-or-windowing-operation"]], "Working with Waveform Data": [[52, "working-with-waveform-data"]], "Dataset.waveform_array()": [[52, "dataset-waveform-array"]], "Writing DICOM Files": [[53, "writing-dicom-files"]], "Using Codify": [[53, "using-codify"]], "Writing a file from Scratch": [[53, "writing-a-file-from-scratch"]], "Character Encoding and Decoding (pydicom.charset)": [[54, "character-encoding-and-decoding-pydicom-charset"]], "Configuration Options (pydicom.config)": [[55, "configuration-options-pydicom-config"]], "Getting Included Datasets (pydicom.data)": [[56, "getting-included-datasets-pydicom-data"]], "Data Dictionary Utilities (pydicom.datadict)": [[57, "data-dictionary-utilities-pydicom-datadict"]], "DICOM Data Dictionary": [[57, "dicom-data-dictionary"]], "Private Data Dictionary": [[57, "private-data-dictionary"]], "Representation of Datasets (pydicom.dataset)": [[58, "representation-of-datasets-pydicom-dataset"]], "DICOMDIR (pydicom.dicomdir)": [[59, "dicomdir-pydicom-dicomdir"]], "Representation of Data Elements": [[60, "representation-of-data-elements"]], "Data Elements (pydicom.dataelem)": [[61, "data-elements-pydicom-dataelem"]], "Element Multi-value Representation (pydicom.multival)": [[62, "element-multi-value-representation-pydicom-multival"]], "Sequence Element Value Representation (pydicom.sequence)": [[63, "sequence-element-value-representation-pydicom-sequence"]], "Element Tags (pydicom.tag)": [[64, "element-tags-pydicom-tag"]], "Specialized Element Value Representation (pydicom.valuerep)": [[65, "specialized-element-value-representation-pydicom-valuerep"]], "Element Value Decoding (pydicom.values)": [[66, "element-value-decoding-pydicom-values"]], "Bulk Data Encapsulation Utilities (pydicom.encaps)": [[67, "bulk-data-encapsulation-utilities-pydicom-encaps"]], "Parsing Encapsulated Data": [[67, "parsing-encapsulated-data"]], "Creating Encapsulated Data": [[67, "creating-encapsulated-data"]], "Pixel Data Encoders (pydicom.encoders)": [[68, "pixel-data-encoders-pydicom-encoders"]], "Exceptions (pydicom.errors)": [[69, "exceptions-pydicom-errors"]], "Dataset IO": [[70, "dataset-io"]], "IO Base Classes (pydicom.filebase)": [[71, "io-base-classes-pydicom-filebase"]], "Dataset Reading (pydicom.filereader)": [[72, "dataset-reading-pydicom-filereader"]], "IO Utilities (pydicom.fileutil)": [[73, "io-utilities-pydicom-fileutil"]], "Dataset Writing (pydicom.filewriter)": [[74, "dataset-writing-pydicom-filewriter"]], "DICOM File-sets (pydicom.fileset)": [[75, "dicom-file-sets-pydicom-fileset"]], "pydicom.charset.convert_encodings": [[76, "pydicom-charset-convert-encodings"]], "pydicom.charset.decode_bytes": [[77, "pydicom-charset-decode-bytes"]], "pydicom.charset.decode_element": [[78, "pydicom-charset-decode-element"]], "pydicom.charset.encode_string": [[79, "pydicom-charset-encode-string"]], "pydicom.config.APPLY_J2K_CORRECTIONS": [[80, "pydicom-config-apply-j2k-corrections"]], "pydicom.config.DS_decimal": [[81, "pydicom-config-ds-decimal"]], "pydicom.config.DS_numpy": [[82, "pydicom-config-ds-numpy"]], "pydicom.config.IGNORE": [[83, "pydicom-config-ignore"]], "pydicom.config.INVALID_KEYWORD_BEHAVIOR": [[84, "pydicom-config-invalid-keyword-behavior"]], "pydicom.config.INVALID_KEY_BEHAVIOR": [[85, "pydicom-config-invalid-key-behavior"]], "pydicom.config.RAISE": [[86, "pydicom-config-raise"]], "pydicom.config.WARN": [[87, "pydicom-config-warn"]], "pydicom.config.allow_DS_float": [[88, "pydicom-config-allow-ds-float"]], "pydicom.config.assume_implicit_vr_switch": [[89, "pydicom-config-assume-implicit-vr-switch"]], "pydicom.config.convert_wrong_length_to_UN": [[90, "pydicom-config-convert-wrong-length-to-un"]], "pydicom.config.data_element_callback": [[91, "pydicom-config-data-element-callback"]], "pydicom.config.data_element_callback_kwargs": [[92, "pydicom-config-data-element-callback-kwargs"]], "pydicom.config.datetime_conversion": [[93, "pydicom-config-datetime-conversion"]], "pydicom.config.debug": [[94, "pydicom-config-debug"]], "pydicom.config.enforce_valid_values": [[95, "pydicom-config-enforce-valid-values"]], "pydicom.config.future_behavior": [[96, "pydicom-config-future-behavior"]], "pydicom.config.overlay_data_handlers": [[97, "pydicom-config-overlay-data-handlers"]], "pydicom.config.pixel_data_handlers": [[98, "pydicom-config-pixel-data-handlers"]], "pydicom.config.reset_data_element_callback": [[99, "pydicom-config-reset-data-element-callback"]], "pydicom.config.settings": [[100, "pydicom-config-settings"]], "pydicom.config.show_file_meta": [[101, "pydicom-config-show-file-meta"]], "pydicom.config.use_DS_decimal": [[102, "pydicom-config-use-ds-decimal"]], "pydicom.config.use_DS_numpy": [[103, "pydicom-config-use-ds-numpy"]], "pydicom.config.use_IS_numpy": [[104, "pydicom-config-use-is-numpy"]], "pydicom.data.get_charset_files": [[105, "pydicom-data-get-charset-files"]], "pydicom.data.get_palette_files": [[106, "pydicom-data-get-palette-files"]], "pydicom.data.get_testdata_file": [[107, "pydicom-data-get-testdata-file"]], "pydicom.data.get_testdata_files": [[108, "pydicom-data-get-testdata-files"]], "pydicom.datadict.add_dict_entries": [[109, "pydicom-datadict-add-dict-entries"]], "pydicom.datadict.add_dict_entry": [[110, "pydicom-datadict-add-dict-entry"]], "pydicom.datadict.add_private_dict_entries": [[111, "pydicom-datadict-add-private-dict-entries"]], "pydicom.datadict.add_private_dict_entry": [[112, "pydicom-datadict-add-private-dict-entry"]], "pydicom.datadict.dictionary_VM": [[113, "pydicom-datadict-dictionary-vm"]], "pydicom.datadict.dictionary_VR": [[114, "pydicom-datadict-dictionary-vr"]], "pydicom.datadict.dictionary_description": [[115, "pydicom-datadict-dictionary-description"]], "pydicom.datadict.dictionary_has_tag": [[116, "pydicom-datadict-dictionary-has-tag"]], "pydicom.datadict.dictionary_is_retired": [[117, "pydicom-datadict-dictionary-is-retired"]], "pydicom.datadict.dictionary_keyword": [[118, "pydicom-datadict-dictionary-keyword"]], "pydicom.datadict.get_entry": [[119, "pydicom-datadict-get-entry"]], "pydicom.datadict.get_private_entry": [[120, "pydicom-datadict-get-private-entry"]], "pydicom.datadict.keyword_for_tag": [[121, "pydicom-datadict-keyword-for-tag"]], "pydicom.datadict.mask_match": [[122, "pydicom-datadict-mask-match"]], "pydicom.datadict.private_dictionary_VM": [[123, "pydicom-datadict-private-dictionary-vm"]], "pydicom.datadict.private_dictionary_VR": [[124, "pydicom-datadict-private-dictionary-vr"]], "pydicom.datadict.private_dictionary_description": [[125, "pydicom-datadict-private-dictionary-description"]], "pydicom.datadict.repeater_has_keyword": [[126, "pydicom-datadict-repeater-has-keyword"]], "pydicom.datadict.repeater_has_tag": [[127, "pydicom-datadict-repeater-has-tag"]], "pydicom.datadict.tag_for_keyword": [[128, "pydicom-datadict-tag-for-keyword"]], "pydicom.dataelem.DataElement": [[129, "pydicom-dataelem-dataelement"]], "pydicom.dataelem.DataElement_from_raw": [[130, "pydicom-dataelem-dataelement-from-raw"]], "pydicom.dataelem.RawDataElement": [[131, "pydicom-dataelem-rawdataelement"]], "pydicom.dataset.Dataset": [[132, "pydicom-dataset-dataset"]], "pydicom.dataset.FileDataset": [[133, "pydicom-dataset-filedataset"]], "pydicom.dataset.FileMetaDataset": [[134, "pydicom-dataset-filemetadataset"]], "pydicom.dataset.PrivateBlock": [[135, "pydicom-dataset-privateblock"]], "pydicom.dataset.validate_file_meta": [[136, "pydicom-dataset-validate-file-meta"]], "pydicom.dicomdir.DicomDir": [[137, "pydicom-dicomdir-dicomdir"]], "pydicom.encaps.decode_data_sequence": [[138, "pydicom-encaps-decode-data-sequence"]], "pydicom.encaps.defragment_data": [[139, "pydicom-encaps-defragment-data"]], "pydicom.encaps.encapsulate": [[140, "pydicom-encaps-encapsulate"]], "pydicom.encaps.encapsulate_extended": [[141, "pydicom-encaps-encapsulate-extended"]], "pydicom.encaps.fragment_frame": [[142, "pydicom-encaps-fragment-frame"]], "pydicom.encaps.generate_pixel_data": [[143, "pydicom-encaps-generate-pixel-data"]], "pydicom.encaps.generate_pixel_data_fragment": [[144, "pydicom-encaps-generate-pixel-data-fragment"]], "pydicom.encaps.generate_pixel_data_frame": [[145, "pydicom-encaps-generate-pixel-data-frame"]], "pydicom.encaps.get_frame_offsets": [[146, "pydicom-encaps-get-frame-offsets"]], "pydicom.encaps.itemize_fragment": [[147, "pydicom-encaps-itemize-fragment"]], "pydicom.encaps.itemize_frame": [[148, "pydicom-encaps-itemize-frame"]], "pydicom.encaps.read_item": [[149, "pydicom-encaps-read-item"]], "pydicom.encoders.RLELosslessEncoder": [[150, "pydicom-encoders-rlelosslessencoder"]], "pydicom.encoders.base.Encoder": [[151, "pydicom-encoders-base-encoder"]], "pydicom.encoders.get_encoder": [[152, "pydicom-encoders-get-encoder"]], "pydicom.errors.InvalidDicomError": [[153, "pydicom-errors-invaliddicomerror"]], "pydicom.filebase.DicomBytesIO": [[154, "pydicom-filebase-dicombytesio"]], "pydicom.filebase.DicomFile": [[155, "pydicom-filebase-dicomfile"]], "pydicom.filebase.DicomFileLike": [[156, "pydicom-filebase-dicomfilelike"]], "pydicom.filebase.DicomIO": [[157, "pydicom-filebase-dicomio"]], "pydicom.filereader.data_element_generator": [[158, "pydicom-filereader-data-element-generator"]], "pydicom.filereader.data_element_offset_to_value": [[159, "pydicom-filereader-data-element-offset-to-value"]], "pydicom.filereader.dcmread": [[160, "pydicom-filereader-dcmread"]], "pydicom.filereader.read_dataset": [[161, "pydicom-filereader-read-dataset"]], "pydicom.filereader.read_deferred_data_element": [[162, "pydicom-filereader-read-deferred-data-element"]], "pydicom.filereader.read_dicomdir": [[163, "pydicom-filereader-read-dicomdir"]], "pydicom.filereader.read_file_meta_info": [[164, "pydicom-filereader-read-file-meta-info"]], "pydicom.filereader.read_partial": [[165, "pydicom-filereader-read-partial"]], "pydicom.filereader.read_preamble": [[166, "pydicom-filereader-read-preamble"]], "pydicom.filereader.read_sequence": [[167, "pydicom-filereader-read-sequence"]], "pydicom.filereader.read_sequence_item": [[168, "pydicom-filereader-read-sequence-item"]], "pydicom.fileset.DIRECTORY_RECORDERS": [[169, "pydicom-fileset-directory-recorders"]], "pydicom.fileset.FileInstance": [[170, "pydicom-fileset-fileinstance"]], "pydicom.fileset.FileSet": [[171, "pydicom-fileset-fileset"]], "pydicom.fileset.RecordNode": [[172, "pydicom-fileset-recordnode"]], "pydicom.fileset.generate_filename": [[173, "pydicom-fileset-generate-filename"]], "pydicom.fileset.is_conformant_file_id": [[174, "pydicom-fileset-is-conformant-file-id"]], "pydicom.fileutil.absorb_delimiter_item": [[175, "pydicom-fileutil-absorb-delimiter-item"]], "pydicom.fileutil.find_bytes": [[176, "pydicom-fileutil-find-bytes"]], "pydicom.fileutil.find_delimiter": [[177, "pydicom-fileutil-find-delimiter"]], "pydicom.fileutil.length_of_undefined_length": [[178, "pydicom-fileutil-length-of-undefined-length"]], "pydicom.fileutil.read_undefined_length_value": [[179, "pydicom-fileutil-read-undefined-length-value"]], "pydicom.filewriter.correct_ambiguous_vr": [[180, "pydicom-filewriter-correct-ambiguous-vr"]], "pydicom.filewriter.correct_ambiguous_vr_element": [[181, "pydicom-filewriter-correct-ambiguous-vr-element"]], "pydicom.filewriter.dcmwrite": [[182, "pydicom-filewriter-dcmwrite"]], "pydicom.filewriter.multi_string": [[183, "pydicom-filewriter-multi-string"]], "pydicom.filewriter.write_ATvalue": [[184, "pydicom-filewriter-write-atvalue"]], "pydicom.filewriter.write_DA": [[185, "pydicom-filewriter-write-da"]], "pydicom.filewriter.write_DT": [[186, "pydicom-filewriter-write-dt"]], "pydicom.filewriter.write_OBvalue": [[187, "pydicom-filewriter-write-obvalue"]], "pydicom.filewriter.write_OWvalue": [[188, "pydicom-filewriter-write-owvalue"]], "pydicom.filewriter.write_PN": [[189, "pydicom-filewriter-write-pn"]], "pydicom.filewriter.write_TM": [[190, "pydicom-filewriter-write-tm"]], "pydicom.filewriter.write_UI": [[191, "pydicom-filewriter-write-ui"]], "pydicom.filewriter.write_UN": [[192, "pydicom-filewriter-write-un"]], "pydicom.filewriter.write_data_element": [[193, "pydicom-filewriter-write-data-element"]], "pydicom.filewriter.write_dataset": [[194, "pydicom-filewriter-write-dataset"]], "pydicom.filewriter.write_file_meta_info": [[195, "pydicom-filewriter-write-file-meta-info"]], "pydicom.filewriter.write_number_string": [[196, "pydicom-filewriter-write-number-string"]], "pydicom.filewriter.write_numbers": [[197, "pydicom-filewriter-write-numbers"]], "pydicom.filewriter.write_sequence": [[198, "pydicom-filewriter-write-sequence"]], "pydicom.filewriter.write_sequence_item": [[199, "pydicom-filewriter-write-sequence-item"]], "pydicom.filewriter.write_string": [[200, "pydicom-filewriter-write-string"]], "pydicom.filewriter.write_text": [[201, "pydicom-filewriter-write-text"]], "pydicom.misc.is_dicom": [[202, "pydicom-misc-is-dicom"]], "pydicom.misc.size_in_bytes": [[203, "pydicom-misc-size-in-bytes"]], "pydicom.multival.MultiValue": [[204, "pydicom-multival-multivalue"]], "pydicom.overlays.numpy_handler": [[205, "module-pydicom.overlays.numpy_handler"]], "pydicom.pixel_data_handlers.apply_color_lut": [[206, "pydicom-pixel-data-handlers-apply-color-lut"]], "pydicom.pixel_data_handlers.apply_modality_lut": [[207, "pydicom-pixel-data-handlers-apply-modality-lut"]], "pydicom.pixel_data_handlers.apply_rescale": [[208, "pydicom-pixel-data-handlers-apply-rescale"]], "pydicom.pixel_data_handlers.apply_voi": [[209, "pydicom-pixel-data-handlers-apply-voi"]], "pydicom.pixel_data_handlers.apply_voi_lut": [[210, "pydicom-pixel-data-handlers-apply-voi-lut"]], "pydicom.pixel_data_handlers.apply_windowing": [[211, "pydicom-pixel-data-handlers-apply-windowing"]], "pydicom.pixel_data_handlers.convert_color_space": [[212, "pydicom-pixel-data-handlers-convert-color-space"]], "pydicom.pixel_data_handlers.gdcm_handler": [[213, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[214, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "pydicom.pixel_data_handlers.numpy_handler": [[215, "module-pydicom.pixel_data_handlers.numpy_handler"]], "pydicom.pixel_data_handlers.pillow_handler": [[216, "module-pydicom.pixel_data_handlers.pillow_handler"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[217, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "pydicom.pixel_data_handlers.rle_handler": [[218, "module-pydicom.pixel_data_handlers.rle_handler"]], "pydicom.pixel_data_handlers.util": [[219, "module-pydicom.pixel_data_handlers.util"]], "pydicom.sequence.Sequence": [[220, "pydicom-sequence-sequence"]], "pydicom.sequence.validate_dataset": [[221, "pydicom-sequence-validate-dataset"]], "pydicom.tag.BaseTag": [[222, "pydicom-tag-basetag"]], "pydicom.tag.Tag": [[223, "pydicom-tag-tag"]], "pydicom.tag.TupleTag": [[224, "pydicom-tag-tupletag"]], "pydicom.tag.tag_in_exception": [[225, "pydicom-tag-tag-in-exception"]], "pydicom.uid.AcquisitionContextSRStorage": [[226, "pydicom-uid-acquisitioncontextsrstorage"]], "pydicom.uid.AdvancedBlendingPresentationStateStorage": [[227, "pydicom-uid-advancedblendingpresentationstatestorage"]], "pydicom.uid.AllTransferSyntaxes": [[228, "pydicom-uid-alltransfersyntaxes"]], "pydicom.uid.AmbulatoryECGWaveformStorage": [[229, "pydicom-uid-ambulatoryecgwaveformstorage"]], "pydicom.uid.ArterialPulseWaveformStorage": [[230, "pydicom-uid-arterialpulsewaveformstorage"]], "pydicom.uid.AutorefractionMeasurementsStorage": [[231, "pydicom-uid-autorefractionmeasurementsstorage"]], "pydicom.uid.BasicStructuredDisplayStorage": [[232, "pydicom-uid-basicstructureddisplaystorage"]], "pydicom.uid.BasicTextSRStorage": [[233, "pydicom-uid-basictextsrstorage"]], "pydicom.uid.BasicVoiceAudioWaveformStorage": [[234, "pydicom-uid-basicvoiceaudiowaveformstorage"]], "pydicom.uid.BlendingSoftcopyPresentationStateStorage": [[235, "pydicom-uid-blendingsoftcopypresentationstatestorage"]], "pydicom.uid.BodyPositionWaveformStorage": [[236, "pydicom-uid-bodypositionwaveformstorage"]], "pydicom.uid.BreastProjectionXRayImageStorageForPresentation": [[237, "pydicom-uid-breastprojectionxrayimagestorageforpresentation"]], "pydicom.uid.BreastProjectionXRayImageStorageForProcessing": [[238, "pydicom-uid-breastprojectionxrayimagestorageforprocessing"]], "pydicom.uid.BreastTomosynthesisImageStorage": [[239, "pydicom-uid-breasttomosynthesisimagestorage"]], "pydicom.uid.CArmPhotonElectronRadiationRecordStorage": [[240, "pydicom-uid-carmphotonelectronradiationrecordstorage"]], "pydicom.uid.CArmPhotonElectronRadiationStorage": [[241, "pydicom-uid-carmphotonelectronradiationstorage"]], "pydicom.uid.CTDefinedProcedureProtocolStorage": [[242, "pydicom-uid-ctdefinedprocedureprotocolstorage"]], "pydicom.uid.CTImageStorage": [[243, "pydicom-uid-ctimagestorage"]], "pydicom.uid.CTPerformedProcedureProtocolStorage": [[244, "pydicom-uid-ctperformedprocedureprotocolstorage"]], "pydicom.uid.CardiacElectrophysiologyWaveformStorage": [[245, "pydicom-uid-cardiacelectrophysiologywaveformstorage"]], "pydicom.uid.ChestCADSRStorage": [[246, "pydicom-uid-chestcadsrstorage"]], "pydicom.uid.ColonCADSRStorage": [[247, "pydicom-uid-coloncadsrstorage"]], "pydicom.uid.ColorPaletteStorage": [[248, "pydicom-uid-colorpalettestorage"]], "pydicom.uid.ColorSoftcopyPresentationStateStorage": [[249, "pydicom-uid-colorsoftcopypresentationstatestorage"]], "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage": [[250, "pydicom-uid-compositingplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.Comprehensive3DSRStorage": [[251, "pydicom-uid-comprehensive3dsrstorage"]], "pydicom.uid.ComprehensiveSRStorage": [[252, "pydicom-uid-comprehensivesrstorage"]], "pydicom.uid.ComputedRadiographyImageStorage": [[253, "pydicom-uid-computedradiographyimagestorage"]], "pydicom.uid.ContentAssessmentResultsStorage": [[254, "pydicom-uid-contentassessmentresultsstorage"]], "pydicom.uid.CornealTopographyMapStorage": [[255, "pydicom-uid-cornealtopographymapstorage"]], "pydicom.uid.DICOS2DAITStorage": [[256, "pydicom-uid-dicos2daitstorage"]], "pydicom.uid.DICOS3DAITStorage": [[257, "pydicom-uid-dicos3daitstorage"]], "pydicom.uid.DICOSCTImageStorage": [[258, "pydicom-uid-dicosctimagestorage"]], "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation": [[259, "pydicom-uid-dicosdigitalxrayimagestorageforpresentation"]], "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing": [[260, "pydicom-uid-dicosdigitalxrayimagestorageforprocessing"]], "pydicom.uid.DICOSQuadrupoleResonanceStorage": [[261, "pydicom-uid-dicosquadrupoleresonancestorage"]], "pydicom.uid.DICOSThreatDetectionReportStorage": [[262, "pydicom-uid-dicosthreatdetectionreportstorage"]], "pydicom.uid.DeflatedExplicitVRLittleEndian": [[263, "pydicom-uid-deflatedexplicitvrlittleendian"]], "pydicom.uid.DeformableSpatialRegistrationStorage": [[264, "pydicom-uid-deformablespatialregistrationstorage"]], "pydicom.uid.DermoscopicPhotographyImageStorage": [[265, "pydicom-uid-dermoscopicphotographyimagestorage"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation": [[266, "pydicom-uid-digitalintraoralxrayimagestorageforpresentation"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing": [[267, "pydicom-uid-digitalintraoralxrayimagestorageforprocessing"]], "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation": [[268, "pydicom-uid-digitalmammographyxrayimagestorageforpresentation"]], "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing": [[269, "pydicom-uid-digitalmammographyxrayimagestorageforprocessing"]], "pydicom.uid.DigitalXRayImageStorageForPresentation": [[270, "pydicom-uid-digitalxrayimagestorageforpresentation"]], "pydicom.uid.DigitalXRayImageStorageForProcessing": [[271, "pydicom-uid-digitalxrayimagestorageforprocessing"]], "pydicom.uid.EddyCurrentImageStorage": [[272, "pydicom-uid-eddycurrentimagestorage"]], "pydicom.uid.EddyCurrentMultiFrameImageStorage": [[273, "pydicom-uid-eddycurrentmultiframeimagestorage"]], "pydicom.uid.ElectromyogramWaveformStorage": [[274, "pydicom-uid-electromyogramwaveformstorage"]], "pydicom.uid.ElectrooculogramWaveformStorage": [[275, "pydicom-uid-electrooculogramwaveformstorage"]], "pydicom.uid.EncapsulatedCDAStorage": [[276, "pydicom-uid-encapsulatedcdastorage"]], "pydicom.uid.EncapsulatedMTLStorage": [[277, "pydicom-uid-encapsulatedmtlstorage"]], "pydicom.uid.EncapsulatedOBJStorage": [[278, "pydicom-uid-encapsulatedobjstorage"]], "pydicom.uid.EncapsulatedPDFStorage": [[279, "pydicom-uid-encapsulatedpdfstorage"]], "pydicom.uid.EncapsulatedSTLStorage": [[280, "pydicom-uid-encapsulatedstlstorage"]], "pydicom.uid.EnhancedCTImageStorage": [[281, "pydicom-uid-enhancedctimagestorage"]], "pydicom.uid.EnhancedMRColorImageStorage": [[282, "pydicom-uid-enhancedmrcolorimagestorage"]], "pydicom.uid.EnhancedMRImageStorage": [[283, "pydicom-uid-enhancedmrimagestorage"]], "pydicom.uid.EnhancedPETImageStorage": [[284, "pydicom-uid-enhancedpetimagestorage"]], "pydicom.uid.EnhancedSRStorage": [[285, "pydicom-uid-enhancedsrstorage"]], "pydicom.uid.EnhancedUSVolumeStorage": [[286, "pydicom-uid-enhancedusvolumestorage"]], "pydicom.uid.EnhancedXAImageStorage": [[287, "pydicom-uid-enhancedxaimagestorage"]], "pydicom.uid.EnhancedXRFImageStorage": [[288, "pydicom-uid-enhancedxrfimagestorage"]], "pydicom.uid.EnhancedXRayRadiationDoseSRStorage": [[289, "pydicom-uid-enhancedxrayradiationdosesrstorage"]], "pydicom.uid.ExplicitVRBigEndian": [[290, "pydicom-uid-explicitvrbigendian"]], "pydicom.uid.ExplicitVRLittleEndian": [[291, "pydicom-uid-explicitvrlittleendian"]], "pydicom.uid.ExtensibleSRStorage": [[292, "pydicom-uid-extensiblesrstorage"]], "pydicom.uid.GeneralAudioWaveformStorage": [[293, "pydicom-uid-generalaudiowaveformstorage"]], "pydicom.uid.GeneralECGWaveformStorage": [[294, "pydicom-uid-generalecgwaveformstorage"]], "pydicom.uid.GenericImplantTemplateStorage": [[295, "pydicom-uid-genericimplanttemplatestorage"]], "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage": [[296, "pydicom-uid-grayscaleplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage": [[297, "pydicom-uid-grayscalesoftcopypresentationstatestorage"]], "pydicom.uid.HEVCM10P51": [[298, "pydicom-uid-hevcm10p51"]], "pydicom.uid.HEVCMP51": [[299, "pydicom-uid-hevcmp51"]], "pydicom.uid.HangingProtocolStorage": [[300, "pydicom-uid-hangingprotocolstorage"]], "pydicom.uid.HemodynamicWaveformStorage": [[301, "pydicom-uid-hemodynamicwaveformstorage"]], "pydicom.uid.ImplantAssemblyTemplateStorage": [[302, "pydicom-uid-implantassemblytemplatestorage"]], "pydicom.uid.ImplantTemplateGroupStorage": [[303, "pydicom-uid-implanttemplategroupstorage"]], "pydicom.uid.ImplantationPlanSRStorage": [[304, "pydicom-uid-implantationplansrstorage"]], "pydicom.uid.ImplicitVRLittleEndian": [[305, "pydicom-uid-implicitvrlittleendian"]], "pydicom.uid.IntraocularLensCalculationsStorage": [[306, "pydicom-uid-intraocularlenscalculationsstorage"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation": [[307, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforpresentation"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing": [[308, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforprocessing"]], "pydicom.uid.JPEG2000": [[309, "pydicom-uid-jpeg2000"]], "pydicom.uid.JPEG2000Lossless": [[310, "pydicom-uid-jpeg2000lossless"]], "pydicom.uid.JPEG2000MC": [[311, "pydicom-uid-jpeg2000mc"]], "pydicom.uid.JPEG2000MCLossless": [[312, "pydicom-uid-jpeg2000mclossless"]], "pydicom.uid.JPEG2000TransferSyntaxes": [[313, "pydicom-uid-jpeg2000transfersyntaxes"]], "pydicom.uid.JPEGBaseline8Bit": [[314, "pydicom-uid-jpegbaseline8bit"]], "pydicom.uid.JPEGExtended12Bit": [[315, "pydicom-uid-jpegextended12bit"]], "pydicom.uid.JPEGLSLossless": [[316, "pydicom-uid-jpeglslossless"]], "pydicom.uid.JPEGLSNearLossless": [[317, "pydicom-uid-jpeglsnearlossless"]], "pydicom.uid.JPEGLSTransferSyntaxes": [[318, "pydicom-uid-jpeglstransfersyntaxes"]], "pydicom.uid.JPEGLosslessP14": [[319, "pydicom-uid-jpeglosslessp14"]], "pydicom.uid.JPEGLosslessSV1": [[320, "pydicom-uid-jpeglosslesssv1"]], "pydicom.uid.JPEGTransferSyntaxes": [[321, "pydicom-uid-jpegtransfersyntaxes"]], "pydicom.uid.KeratometryMeasurementsStorage": [[322, "pydicom-uid-keratometrymeasurementsstorage"]], "pydicom.uid.KeyObjectSelectionDocumentStorage": [[323, "pydicom-uid-keyobjectselectiondocumentstorage"]], "pydicom.uid.LegacyConvertedEnhancedCTImageStorage": [[324, "pydicom-uid-legacyconvertedenhancedctimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedMRImageStorage": [[325, "pydicom-uid-legacyconvertedenhancedmrimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedPETImageStorage": [[326, "pydicom-uid-legacyconvertedenhancedpetimagestorage"]], "pydicom.uid.LensometryMeasurementsStorage": [[327, "pydicom-uid-lensometrymeasurementsstorage"]], "pydicom.uid.MPEG2MPHL": [[328, "pydicom-uid-mpeg2mphl"]], "pydicom.uid.MPEG2MPML": [[329, "pydicom-uid-mpeg2mpml"]], "pydicom.uid.MPEG4HP41": [[330, "pydicom-uid-mpeg4hp41"]], "pydicom.uid.MPEG4HP41BD": [[331, "pydicom-uid-mpeg4hp41bd"]], "pydicom.uid.MPEG4HP422D": [[332, "pydicom-uid-mpeg4hp422d"]], "pydicom.uid.MPEG4HP423D": [[333, "pydicom-uid-mpeg4hp423d"]], "pydicom.uid.MPEG4HP42STEREO": [[334, "pydicom-uid-mpeg4hp42stereo"]], "pydicom.uid.MPEGTransferSyntaxes": [[335, "pydicom-uid-mpegtransfersyntaxes"]], "pydicom.uid.MRImageStorage": [[336, "pydicom-uid-mrimagestorage"]], "pydicom.uid.MRSpectroscopyStorage": [[337, "pydicom-uid-mrspectroscopystorage"]], "pydicom.uid.MacularGridThicknessAndVolumeReportStorage": [[338, "pydicom-uid-maculargridthicknessandvolumereportstorage"]], "pydicom.uid.MammographyCADSRStorage": [[339, "pydicom-uid-mammographycadsrstorage"]], "pydicom.uid.MediaStorageDirectoryStorage": [[340, "pydicom-uid-mediastoragedirectorystorage"]], "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage": [[341, "pydicom-uid-microscopybulksimpleannotationsstorage"]], "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage": [[342, "pydicom-uid-multiframegrayscalebytesecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage": [[343, "pydicom-uid-multiframegrayscalewordsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage": [[344, "pydicom-uid-multiframesinglebitsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage": [[345, "pydicom-uid-multiframetruecolorsecondarycaptureimagestorage"]], "pydicom.uid.MultichannelRespiratoryWaveformStorage": [[346, "pydicom-uid-multichannelrespiratorywaveformstorage"]], "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage": [[347, "pydicom-uid-multiplevolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.NuclearMedicineImageStorage": [[348, "pydicom-uid-nuclearmedicineimagestorage"]], "pydicom.uid.OphthalmicAxialMeasurementsStorage": [[349, "pydicom-uid-ophthalmicaxialmeasurementsstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage": [[350, "pydicom-uid-ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage": [[351, "pydicom-uid-ophthalmicopticalcoherencetomographyenfaceimagestorage"]], "pydicom.uid.OphthalmicPhotography16BitImageStorage": [[352, "pydicom-uid-ophthalmicphotography16bitimagestorage"]], "pydicom.uid.OphthalmicPhotography8BitImageStorage": [[353, "pydicom-uid-ophthalmicphotography8bitimagestorage"]], "pydicom.uid.OphthalmicThicknessMapStorage": [[354, "pydicom-uid-ophthalmicthicknessmapstorage"]], "pydicom.uid.OphthalmicTomographyImageStorage": [[355, "pydicom-uid-ophthalmictomographyimagestorage"]], "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage": [[356, "pydicom-uid-ophthalmicvisualfieldstaticperimetrymeasurementsstorage"]], "pydicom.uid.PYDICOM_IMPLEMENTATION_UID": [[357, "pydicom-uid-pydicom-implementation-uid"]], "pydicom.uid.PYDICOM_ROOT_UID": [[358, "pydicom-uid-pydicom-root-uid"]], "pydicom.uid.ParametricMapStorage": [[359, "pydicom-uid-parametricmapstorage"]], "pydicom.uid.PatientRadiationDoseSRStorage": [[360, "pydicom-uid-patientradiationdosesrstorage"]], "pydicom.uid.PerformedImagingAgentAdministrationSRStorage": [[361, "pydicom-uid-performedimagingagentadministrationsrstorage"]], "pydicom.uid.PlannedImagingAgentAdministrationSRStorage": [[362, "pydicom-uid-plannedimagingagentadministrationsrstorage"]], "pydicom.uid.PositronEmissionTomographyImageStorage": [[363, "pydicom-uid-positronemissiontomographyimagestorage"]], "pydicom.uid.ProcedureLogStorage": [[364, "pydicom-uid-procedurelogstorage"]], "pydicom.uid.ProtocolApprovalStorage": [[365, "pydicom-uid-protocolapprovalstorage"]], "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage": [[366, "pydicom-uid-pseudocolorsoftcopypresentationstatestorage"]], "pydicom.uid.RE_VALID_UID": [[367, "pydicom-uid-re-valid-uid"]], "pydicom.uid.RE_VALID_UID_PREFIX": [[368, "pydicom-uid-re-valid-uid-prefix"]], "pydicom.uid.RLELossless": [[369, "pydicom-uid-rlelossless"]], "pydicom.uid.RLETransferSyntaxes": [[370, "pydicom-uid-rletransfersyntaxes"]], "pydicom.uid.RTBeamsDeliveryInstructionStorage": [[371, "pydicom-uid-rtbeamsdeliveryinstructionstorage"]], "pydicom.uid.RTBeamsTreatmentRecordStorage": [[372, "pydicom-uid-rtbeamstreatmentrecordstorage"]], "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage": [[373, "pydicom-uid-rtbrachyapplicationsetupdeliveryinstructionstorage"]], "pydicom.uid.RTBrachyTreatmentRecordStorage": [[374, "pydicom-uid-rtbrachytreatmentrecordstorage"]], "pydicom.uid.RTDoseStorage": [[375, "pydicom-uid-rtdosestorage"]], "pydicom.uid.RTImageStorage": [[376, "pydicom-uid-rtimagestorage"]], "pydicom.uid.RTIonBeamsTreatmentRecordStorage": [[377, "pydicom-uid-rtionbeamstreatmentrecordstorage"]], "pydicom.uid.RTIonPlanStorage": [[378, "pydicom-uid-rtionplanstorage"]], "pydicom.uid.RTPhysicianIntentStorage": [[379, "pydicom-uid-rtphysicianintentstorage"]], "pydicom.uid.RTPlanStorage": [[380, "pydicom-uid-rtplanstorage"]], "pydicom.uid.RTRadiationRecordSetStorage": [[381, "pydicom-uid-rtradiationrecordsetstorage"]], "pydicom.uid.RTRadiationSalvageRecordStorage": [[382, "pydicom-uid-rtradiationsalvagerecordstorage"]], "pydicom.uid.RTRadiationSetDeliveryInstructionStorage": [[383, "pydicom-uid-rtradiationsetdeliveryinstructionstorage"]], "pydicom.uid.RTRadiationSetStorage": [[384, "pydicom-uid-rtradiationsetstorage"]], "pydicom.uid.RTSegmentAnnotationStorage": [[385, "pydicom-uid-rtsegmentannotationstorage"]], "pydicom.uid.RTStructureSetStorage": [[386, "pydicom-uid-rtstructuresetstorage"]], "pydicom.uid.RTTreatmentPreparationStorage": [[387, "pydicom-uid-rttreatmentpreparationstorage"]], "pydicom.uid.RTTreatmentSummaryRecordStorage": [[388, "pydicom-uid-rttreatmentsummaryrecordstorage"]], "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage": [[389, "pydicom-uid-radiopharmaceuticalradiationdosesrstorage"]], "pydicom.uid.RawDataStorage": [[390, "pydicom-uid-rawdatastorage"]], "pydicom.uid.RealWorldValueMappingStorage": [[391, "pydicom-uid-realworldvaluemappingstorage"]], "pydicom.uid.RespiratoryWaveformStorage": [[392, "pydicom-uid-respiratorywaveformstorage"]], "pydicom.uid.RoboticArmRadiationStorage": [[393, "pydicom-uid-roboticarmradiationstorage"]], "pydicom.uid.RoboticRadiationRecordStorage": [[394, "pydicom-uid-roboticradiationrecordstorage"]], "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage": [[395, "pydicom-uid-routinescalpelectroencephalogramwaveformstorage"]], "pydicom.uid.SecondaryCaptureImageStorage": [[396, "pydicom-uid-secondarycaptureimagestorage"]], "pydicom.uid.SegmentationStorage": [[397, "pydicom-uid-segmentationstorage"]], "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage": [[398, "pydicom-uid-segmentedvolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.SimplifiedAdultEchoSRStorage": [[399, "pydicom-uid-simplifiedadultechosrstorage"]], "pydicom.uid.SleepElectroencephalogramWaveformStorage": [[400, "pydicom-uid-sleepelectroencephalogramwaveformstorage"]], "pydicom.uid.SpatialFiducialsStorage": [[401, "pydicom-uid-spatialfiducialsstorage"]], "pydicom.uid.SpatialRegistrationStorage": [[402, "pydicom-uid-spatialregistrationstorage"]], "pydicom.uid.SpectaclePrescriptionReportStorage": [[403, "pydicom-uid-spectacleprescriptionreportstorage"]], "pydicom.uid.StereometricRelationshipStorage": [[404, "pydicom-uid-stereometricrelationshipstorage"]], "pydicom.uid.SubjectiveRefractionMeasurementsStorage": [[405, "pydicom-uid-subjectiverefractionmeasurementsstorage"]], "pydicom.uid.SurfaceScanMeshStorage": [[406, "pydicom-uid-surfacescanmeshstorage"]], "pydicom.uid.SurfaceScanPointCloudStorage": [[407, "pydicom-uid-surfacescanpointcloudstorage"]], "pydicom.uid.SurfaceSegmentationStorage": [[408, "pydicom-uid-surfacesegmentationstorage"]], "pydicom.uid.TomotherapeuticRadiationRecordStorage": [[409, "pydicom-uid-tomotherapeuticradiationrecordstorage"]], "pydicom.uid.TomotherapeuticRadiationStorage": [[410, "pydicom-uid-tomotherapeuticradiationstorage"]], "pydicom.uid.TractographyResultsStorage": [[411, "pydicom-uid-tractographyresultsstorage"]], "pydicom.uid.TwelveLeadECGWaveformStorage": [[412, "pydicom-uid-twelveleadecgwaveformstorage"]], "pydicom.uid.UID": [[413, "pydicom-uid-uid"]], "pydicom.uid.UltrasoundImageStorage": [[414, "pydicom-uid-ultrasoundimagestorage"]], "pydicom.uid.UltrasoundMultiFrameImageStorage": [[415, "pydicom-uid-ultrasoundmultiframeimagestorage"]], "pydicom.uid.UncompressedTransferSyntaxes": [[416, "pydicom-uid-uncompressedtransfersyntaxes"]], "pydicom.uid.VLEndoscopicImageStorage": [[417, "pydicom-uid-vlendoscopicimagestorage"]], "pydicom.uid.VLMicroscopicImageStorage": [[418, "pydicom-uid-vlmicroscopicimagestorage"]], "pydicom.uid.VLPhotographicImageStorage": [[419, "pydicom-uid-vlphotographicimagestorage"]], "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage": [[420, "pydicom-uid-vlslidecoordinatesmicroscopicimagestorage"]], "pydicom.uid.VLWholeSlideMicroscopyImageStorage": [[421, "pydicom-uid-vlwholeslidemicroscopyimagestorage"]], "pydicom.uid.VideoEndoscopicImageStorage": [[422, "pydicom-uid-videoendoscopicimagestorage"]], "pydicom.uid.VideoMicroscopicImageStorage": [[423, "pydicom-uid-videomicroscopicimagestorage"]], "pydicom.uid.VideoPhotographicImageStorage": [[424, "pydicom-uid-videophotographicimagestorage"]], "pydicom.uid.VisualAcuityMeasurementsStorage": [[425, "pydicom-uid-visualacuitymeasurementsstorage"]], "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage": [[426, "pydicom-uid-volumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage": [[427, "pydicom-uid-widefieldophthalmicphotography3dcoordinatesimagestorage"]], "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage": [[428, "pydicom-uid-widefieldophthalmicphotographystereographicprojectionimagestorage"]], "pydicom.uid.XADefinedProcedureProtocolStorage": [[429, "pydicom-uid-xadefinedprocedureprotocolstorage"]], "pydicom.uid.XAPerformedProcedureProtocolStorage": [[430, "pydicom-uid-xaperformedprocedureprotocolstorage"]], "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage": [[431, "pydicom-uid-xaxrfgrayscalesoftcopypresentationstatestorage"]], "pydicom.uid.XRay3DAngiographicImageStorage": [[432, "pydicom-uid-xray3dangiographicimagestorage"]], "pydicom.uid.XRay3DCraniofacialImageStorage": [[433, "pydicom-uid-xray3dcraniofacialimagestorage"]], "pydicom.uid.XRayAngiographicImageStorage": [[434, "pydicom-uid-xrayangiographicimagestorage"]], "pydicom.uid.XRayRadiationDoseSRStorage": [[435, "pydicom-uid-xrayradiationdosesrstorage"]], "pydicom.uid.XRayRadiofluoroscopicImageStorage": [[436, "pydicom-uid-xrayradiofluoroscopicimagestorage"]], "pydicom.uid.generate_uid": [[437, "pydicom-uid-generate-uid"]], "pydicom.valuerep.DA": [[438, "pydicom-valuerep-da"]], "pydicom.valuerep.DS": [[439, "pydicom-valuerep-ds"]], "pydicom.valuerep.DSdecimal": [[440, "pydicom-valuerep-dsdecimal"]], "pydicom.valuerep.DSfloat": [[441, "pydicom-valuerep-dsfloat"]], "pydicom.valuerep.DT": [[442, "pydicom-valuerep-dt"]], "pydicom.valuerep.IS": [[443, "pydicom-valuerep-is"]], "pydicom.valuerep.ISfloat": [[444, "pydicom-valuerep-isfloat"]], "pydicom.valuerep.MultiString": [[445, "pydicom-valuerep-multistring"]], "pydicom.valuerep.PersonName": [[446, "pydicom-valuerep-personname"]], "pydicom.valuerep.PersonNameUnicode": [[447, "pydicom-valuerep-personnameunicode"]], "pydicom.valuerep.TM": [[448, "pydicom-valuerep-tm"]], "pydicom.valuerep.VR": [[449, "pydicom-valuerep-vr"]], "pydicom.valuerep.format_number_as_ds": [[450, "pydicom-valuerep-format-number-as-ds"]], "pydicom.valuerep.is_valid_ds": [[451, "pydicom-valuerep-is-valid-ds"]], "pydicom.values.convert_AE_string": [[452, "pydicom-values-convert-ae-string"]], "pydicom.values.convert_ATvalue": [[453, "pydicom-values-convert-atvalue"]], "pydicom.values.convert_DA_string": [[454, "pydicom-values-convert-da-string"]], "pydicom.values.convert_DS_string": [[455, "pydicom-values-convert-ds-string"]], "pydicom.values.convert_DT_string": [[456, "pydicom-values-convert-dt-string"]], "pydicom.values.convert_IS_string": [[457, "pydicom-values-convert-is-string"]], "pydicom.values.convert_OBvalue": [[458, "pydicom-values-convert-obvalue"]], "pydicom.values.convert_OWvalue": [[459, "pydicom-values-convert-owvalue"]], "pydicom.values.convert_PN": [[460, "pydicom-values-convert-pn"]], "pydicom.values.convert_SQ": [[461, "pydicom-values-convert-sq"]], "pydicom.values.convert_TM_string": [[462, "pydicom-values-convert-tm-string"]], "pydicom.values.convert_UI": [[463, "pydicom-values-convert-ui"]], "pydicom.values.convert_UN": [[464, "pydicom-values-convert-un"]], "pydicom.values.convert_UR_string": [[465, "pydicom-values-convert-ur-string"]], "pydicom.values.convert_numbers": [[466, "pydicom-values-convert-numbers"]], "pydicom.values.convert_single_string": [[467, "pydicom-values-convert-single-string"]], "pydicom.values.convert_string": [[468, "pydicom-values-convert-string"]], "pydicom.values.convert_tag": [[469, "pydicom-values-convert-tag"]], "pydicom.values.convert_text": [[470, "pydicom-values-convert-text"]], "pydicom.values.convert_value": [[471, "pydicom-values-convert-value"]], "pydicom.waveforms.numpy_handler": [[472, "module-pydicom.waveforms.numpy_handler"]], "Bulk Data Handlers": [[473, "bulk-data-handlers"]], "Pixel Data Utilities": [[473, "pixel-data-utilities"]], "Overlay Data Handlers (pydicom.overlays)": [[474, "overlay-data-handlers-pydicom-overlays"]], "Pixel Data Handlers (pydicom.pixel_data_handlers)": [[475, "pixel-data-handlers-pydicom-pixel-data-handlers"]], "Waveform Data Handlers (pydicom.waveforms)": [[476, "waveform-data-handlers-pydicom-waveforms"]], "Miscellaneous (pydicom.misc)": [[478, "miscellaneous-pydicom-misc"]], "UID Definitions and Utilities (pydicom.uid)": [[479, "uid-definitions-and-utilities-pydicom-uid"]], "Transfer Syntax UIDs": [[479, "transfer-syntax-uids"]], "Transfer Syntax Lists": [[479, "transfer-syntax-lists"]], "UID Utilities": [[479, "uid-utilities"]], "Storage SOP Class UIDs": [[479, "storage-sop-class-uids"]], "Release notes": [[480, "release-notes"]], "Version 3.0.0": [[480, "version-3-0-0"], [501, "version-3-0-0"]], "Changes": [[480, "changes"], [480, "id1"], [480, "id5"], [480, "id8"], [480, "id13"], [480, "id20"], [480, "id24"], [480, "id26"], [480, "id30"], [491, "changes"], [492, "changes"], [493, "changes"], [494, "changes"], [496, "changes"], [498, "changes"], [499, "changes"], [500, "changes"], [501, "changes"]], "Enhancements": [[480, "enhancements"], [480, "id2"], [480, "id6"], [480, "id9"], [480, "id12"], [480, "id16"], [480, "id23"], [480, "id27"], [480, "id31"], [480, "id34"], [480, "id39"], [480, "id42"], [487, "enhancements"], [488, "enhancements"], [490, "enhancements"], [491, "enhancements"], [492, "enhancements"], [493, "enhancements"], [495, "enhancements"], [496, "enhancements"], [498, "enhancements"], [499, "enhancements"], [500, "enhancements"], [501, "enhancements"]], "Fixes": [[480, "fixes"], [480, "id3"], [480, "id7"], [480, "id10"], [480, "id11"], [480, "id14"], [480, "id17"], [480, "id19"], [480, "id22"], [480, "id28"], [480, "id32"], [480, "id35"], [480, "id37"], [489, "fixes"], [490, "fixes"], [491, "fixes"], [492, "fixes"], [493, "fixes"], [494, "fixes"], [495, "fixes"], [496, "fixes"], [497, "fixes"], [498, "fixes"], [499, "fixes"], [500, "fixes"], [501, "fixes"]], "Pydicom Internals": [[480, "pydicom-internals"], [480, "id4"], [500, "pydicom-internals"], [501, "pydicom-internals"]], "Version 2.4.0": [[480, "version-2-4-0"], [500, "version-2-4-0"]], "Version 2.3.0": [[480, "version-2-3-0"], [499, "version-2-3-0"]], "Version 2.2.0": [[480, "version-2-2-0"], [498, "version-2-2-0"]], "Version 2.1.1": [[480, "version-2-1-1"], [497, "version-2-1-1"]], "Version 2.1.0": [[480, "version-2-1-0"], [496, "version-2-1-0"]], "Changelog": [[480, "changelog"], [480, "id15"], [480, "id18"], [480, "id21"], [480, "id25"], [480, "id29"], [480, "id33"], [480, "id36"], [480, "id38"], [480, "id40"], [480, "id44"], [480, "id48"], [480, "id52"], [480, "id54"], [480, "id55"], [480, "id60"], [481, "changelog"], [482, "changelog"], [483, "changelog"], [484, "changelog"], [485, "changelog"], [486, "changelog"], [487, "changelog"], [488, "changelog"], [489, "changelog"], [490, "changelog"], [491, "changelog"], [492, "changelog"], [493, "changelog"], [494, "changelog"], [495, "changelog"], [496, "changelog"]], "Version 2.0.0": [[480, "version-2-0-0"], [495, "version-2-0-0"]], "Version 1.4.1": [[480, "version-1-4-1"], [494, "version-1-4-1"]], "Version 1.4.0": [[480, "version-1-4-0"], [493, "version-1-4-0"]], "Version 1.3.0": [[480, "version-1-3-0"], [492, "version-1-3-0"]], "Documentation": [[480, "documentation"], [492, "documentation"]], "Version 1.2.0": [[480, "version-1-2-0"], [491, "version-1-2-0"]], "Version 1.1.0": [[480, "version-1-1-0"], [490, "version-1-1-0"]], "Other": [[480, "other"], [480, "id51"], [480, "id53"], [480, "id59"], [480, "id64"], [481, "other"], [482, "other"], [484, "other"], [485, "other"], [490, "other"]], "Version 1.0.0": [[480, "version-1-0-0"], [489, "version-1-0-0"]], "Major changes": [[480, "major-changes"], [480, "id41"], [480, "id45"], [480, "id49"], [480, "id56"], [480, "id61"], [481, "major-changes"], [482, "major-changes"], [485, "major-changes"], [486, "major-changes"], [487, "major-changes"], [489, "major-changes"]], "Other enhancements": [[480, "other-enhancements"], [489, "other-enhancements"]], "Infrastructure": [[480, "infrastructure"], [489, "infrastructure"]], "Version 0.9.9": [[480, "version-0-9-9"], [488, "version-0-9-9"]], "Contrib file changes": [[480, "contrib-file-changes"], [480, "id43"], [487, "contrib-file-changes"], [488, "contrib-file-changes"]], "Other Contributors": [[480, "other-contributors"], [488, "other-contributors"]], "Version 0.9.8": [[480, "version-0-9-8"], [487, "version-0-9-8"]], "Bug fixes": [[480, "bug-fixes"], [480, "id46"], [480, "id50"], [485, "bug-fixes"], [486, "bug-fixes"], [487, "bug-fixes"]], "Version 0.9.7": [[480, "version-0-9-7"], [486, "version-0-9-7"]], "Other Enhancements": [[480, "id47"], [480, "id57"], [480, "id62"], [481, "other-enhancements"], [482, "other-enhancements"], [486, "other-enhancements"]], "Version 0.9.6": [[480, "version-0-9-6"], [485, "version-0-9-6"]], "Version 0.9.5": [[480, "version-0-9-5"], [484, "version-0-9-5"]], "Major fixes in this release": [[480, "major-fixes-in-this-release"], [484, "major-fixes-in-this-release"]], "Other fixes in this release": [[480, "other-fixes-in-this-release"], [484, "other-fixes-in-this-release"]], "New \u2018Contrib\u2019 files": [[480, "new-contrib-files"], [484, "new-contrib-files"]], "Version 0.9.4": [[480, "version-0-9-4"], [483, "version-0-9-4"]], "Major changes/additions in this version": [[480, "major-changes-additions-in-this-version"], [483, "major-changes-additions-in-this-version"]], "Other changes and bug fixes": [[480, "other-changes-and-bug-fixes"], [483, "other-changes-and-bug-fixes"]], "Version 0.9.3": [[480, "version-0-9-3"], [482, "version-0-9-3"]], "Bug Fixes": [[480, "id58"], [480, "id63"], [481, "bug-fixes"], [482, "bug-fixes"]], "Version 0.9.2": [[480, "version-0-9-2"], [481, "version-0-9-2"]], "Contributing to pydicom": [[502, "contributing-to-pydicom"]], "Contributing a source code change": [[503, "contributing-a-source-code-change"]], "Download the current source code": [[503, "download-the-current-source-code"]], "(Optional) Install required libraries": [[503, "optional-install-required-libraries"]], "Install pytest and run the test suite": [[503, "install-pytest-and-run-the-test-suite"]], "Create a new branch": [[503, "create-a-new-branch"], [504, "create-a-new-branch"]], "Write tests for your changes": [[503, "write-tests-for-your-changes"]], "Make a code change and document it": [[503, "make-a-code-change-and-document-it"]], "Preview your changes": [[503, "preview-your-changes"]], "Commit your changes and make a pull request": [[503, "commit-your-changes-and-make-a-pull-request"], [504, "commit-your-changes-and-make-a-pull-request"]], "What happens next?": [[503, "what-happens-next"], [504, "what-happens-next"]], "Contributing a documentation change": [[504, "contributing-a-documentation-change"]], "Download the documentation": [[504, "download-the-documentation"]], "Build and preview the documentation": [[504, "build-and-preview-the-documentation"]], "Make a change to the documentation": [[504, "make-a-change-to-the-documentation"]], "Dataset basics: read, access, modify, write": [[505, "dataset-basics-read-access-modify-write"]], "Getting our example dataset": [[505, "getting-our-example-dataset"]], "Reading": [[505, "reading"]], "Viewing and accessing": [[505, "viewing-and-accessing"]], "Elements": [[505, "elements"]], "Sequences": [[505, "sequences"], [505, "id1"]], "file_meta": [[505, "file-meta"]], "Modifying": [[505, "modifying"]], "Modifying elements": [[505, "modifying-elements"]], "Adding elements": [[505, "adding-elements"]], "Any category": [[505, "any-category"]], "Standard elements": [[505, "standard-elements"]], "Deleting elements": [[505, "deleting-elements"]], "Writing": [[505, "writing"]], "Next steps": [[505, "next-steps"]], "Introduction to JSON support": [[506, "introduction-to-json-support"]], "Converting a dataset into JSON format": [[506, "converting-a-dataset-into-json-format"]], "Creating a dataset from JSON": [[506, "creating-a-dataset-from-json"]], "Working with large binary data": [[506, "working-with-large-binary-data"]], "DICOM File-sets and DICOMDIR": [[507, "dicom-file-sets-and-dicomdir"]], "The DICOM File-set": [[507, "the-dicom-file-set"]], "The DICOMDIR file": [[507, "the-dicomdir-file"]], "FileSet": [[507, "fileset"]], "Loading existing File-sets": [[507, "loading-existing-file-sets"]], "Creating a new File-set": [[507, "creating-a-new-file-set"]], "Modifying a File-set": [[507, "modifying-a-file-set"]], "FileSet and staging": [[507, "fileset-and-staging"]], "Adding SOP instances": [[507, "adding-sop-instances"]], "Removing instances": [[507, "removing-instances"]], "Applying the changes": [[507, "applying-the-changes"]], "Conclusion": [[507, "conclusion"]], "Tutorials": [[508, "tutorials"]], "How to install pydicom": [[509, "how-to-install-pydicom"]], "Install the official release": [[509, "install-the-official-release"]], "Install using pip": [[509, "install-using-pip"]], "Install using conda": [[509, "install-using-conda"]], "Downloading example/test DICOM files": [[509, "downloading-example-test-dicom-files"]], "Install the optional libraries": [[509, "install-the-optional-libraries"]], "Installing Pillow": [[509, "installing-pillow"]], "Installing pyjpegls": [[509, "installing-pyjpegls"]], "Installing GDCM": [[509, "installing-gdcm"]], "Installing pylibjpeg": [[509, "installing-pylibjpeg"]], "Install the development version": [[509, "install-the-development-version"]], "Encapsulating data compressed by third-party packages": [[510, "encapsulating-data-compressed-by-third-party-packages"]], "Structured Reporting": [[511, "structured-reporting"]], "Creating and managing virtual environments": [[512, "creating-and-managing-virtual-environments"]], "Using pip": [[512, "using-pip"]], "Install packages": [[512, "install-packages"]], "Create new virtual environments": [[512, "create-new-virtual-environments"]], "Deleting environments": [[512, "deleting-environments"], [512, "id1"]], "Activating and deactivating": [[512, "activating-and-deactivating"]], "Managing packages": [[512, "managing-packages"]], "Final steps": [[512, "final-steps"], [512, "id2"]], "Using conda": [[512, "using-conda"]], "Create a new virtual environment": [[512, "create-a-new-virtual-environment"]], "Activating and deactivating environments": [[512, "activating-and-deactivating-environments"]], "Managing installed packages": [[512, "managing-installed-packages"]], "Waveforms": [[513, "waveforms"]], "Waveforms in DICOM": [[513, "waveforms-in-dicom"]], "Decoding Waveform Data": [[513, "decoding-waveform-data"]], "Encoding Waveform Data": [[513, "encoding-waveform-data"]]}, "indexentries": {"settings (class in pydicom.config)": [[55, "pydicom.config.Settings"]], "infer_sq_for_un_vr (pydicom.config.settings property)": [[55, "pydicom.config.Settings.infer_sq_for_un_vr"]], "reading_validation_mode (pydicom.config.settings property)": [[55, "pydicom.config.Settings.reading_validation_mode"]], "writing_validation_mode (pydicom.config.settings property)": [[55, "pydicom.config.Settings.writing_validation_mode"]], "module": [[68, "module-pydicom.encoders"], [205, "module-pydicom.overlays.numpy_handler"], [213, "module-pydicom.pixel_data_handlers.gdcm_handler"], [214, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"], [215, "module-pydicom.pixel_data_handlers.numpy_handler"], [216, "module-pydicom.pixel_data_handlers.pillow_handler"], [217, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"], [218, "module-pydicom.pixel_data_handlers.rle_handler"], [219, "module-pydicom.pixel_data_handlers.util"], [472, "module-pydicom.waveforms.numpy_handler"], [474, "module-pydicom.overlays"], [475, "module-pydicom.pixel_data_handlers"], [476, "module-pydicom.waveforms"], [477, "module-pydicom"]], "pydicom.encoders": [[68, "module-pydicom.encoders"]], "convert_encodings() (in module pydicom.charset)": [[76, "pydicom.charset.convert_encodings"]], "decode_bytes() (in module pydicom.charset)": [[77, "pydicom.charset.decode_bytes"]], "decode_element() (in module pydicom.charset)": [[78, "pydicom.charset.decode_element"]], "encode_string() (in module pydicom.charset)": [[79, "pydicom.charset.encode_string"]], "apply_j2k_corrections (in module pydicom.config)": [[80, "pydicom.config.APPLY_J2K_CORRECTIONS"]], "ds_decimal() (in module pydicom.config)": [[81, "pydicom.config.DS_decimal"]], "ds_numpy() (in module pydicom.config)": [[82, "pydicom.config.DS_numpy"]], "ignore (in module pydicom.config)": [[83, "pydicom.config.IGNORE"]], "invalid_keyword_behavior (in module pydicom.config)": [[84, "pydicom.config.INVALID_KEYWORD_BEHAVIOR"]], "invalid_key_behavior (in module pydicom.config)": [[85, "pydicom.config.INVALID_KEY_BEHAVIOR"]], "raise (in module pydicom.config)": [[86, "pydicom.config.RAISE"]], "warn (in module pydicom.config)": [[87, "pydicom.config.WARN"]], "allow_ds_float (in module pydicom.config)": [[88, "pydicom.config.allow_DS_float"]], "assume_implicit_vr_switch (in module pydicom.config)": [[89, "pydicom.config.assume_implicit_vr_switch"]], "convert_wrong_length_to_un (in module pydicom.config)": [[90, "pydicom.config.convert_wrong_length_to_UN"]], "data_element_callback (in module pydicom.config)": [[91, "pydicom.config.data_element_callback"]], "data_element_callback_kwargs (in module pydicom.config)": [[92, "pydicom.config.data_element_callback_kwargs"]], "datetime_conversion (in module pydicom.config)": [[93, "pydicom.config.datetime_conversion"]], "debug() (in module pydicom.config)": [[94, "pydicom.config.debug"]], "enforce_valid_values (in module pydicom.config)": [[95, "pydicom.config.enforce_valid_values"]], "future_behavior() (in module pydicom.config)": [[96, "pydicom.config.future_behavior"]], "overlay_data_handlers (in module pydicom.config)": [[97, "pydicom.config.overlay_data_handlers"]], "pixel_data_handlers (in module pydicom.config)": [[98, "pydicom.config.pixel_data_handlers"]], "reset_data_element_callback() (in module pydicom.config)": [[99, "pydicom.config.reset_data_element_callback"]], "settings (in module pydicom.config)": [[100, "pydicom.config.settings"]], "show_file_meta (in module pydicom.config)": [[101, "pydicom.config.show_file_meta"]], "use_ds_decimal (in module pydicom.config)": [[102, "pydicom.config.use_DS_decimal"]], "use_ds_numpy (in module pydicom.config)": [[103, "pydicom.config.use_DS_numpy"]], "use_is_numpy (in module pydicom.config)": [[104, "pydicom.config.use_IS_numpy"]], "get_charset_files() (in module pydicom.data)": [[105, "pydicom.data.get_charset_files"]], "get_palette_files() (in module pydicom.data)": [[106, "pydicom.data.get_palette_files"]], "get_testdata_file() (in module pydicom.data)": [[107, "pydicom.data.get_testdata_file"]], "get_testdata_files() (in module pydicom.data)": [[108, "pydicom.data.get_testdata_files"]], "add_dict_entries() (in module pydicom.datadict)": [[109, "pydicom.datadict.add_dict_entries"]], "add_dict_entry() (in module pydicom.datadict)": [[110, "pydicom.datadict.add_dict_entry"]], "add_private_dict_entries() (in module pydicom.datadict)": [[111, "pydicom.datadict.add_private_dict_entries"]], "add_private_dict_entry() (in module pydicom.datadict)": [[112, "pydicom.datadict.add_private_dict_entry"]], "dictionary_vm() (in module pydicom.datadict)": [[113, "pydicom.datadict.dictionary_VM"]], "dictionary_vr() (in module pydicom.datadict)": [[114, "pydicom.datadict.dictionary_VR"]], "dictionary_description() (in module pydicom.datadict)": [[115, "pydicom.datadict.dictionary_description"]], "dictionary_has_tag() (in module pydicom.datadict)": [[116, "pydicom.datadict.dictionary_has_tag"]], "dictionary_is_retired() (in module pydicom.datadict)": [[117, "pydicom.datadict.dictionary_is_retired"]], "dictionary_keyword() (in module pydicom.datadict)": [[118, "pydicom.datadict.dictionary_keyword"]], "get_entry() (in module pydicom.datadict)": [[119, "pydicom.datadict.get_entry"]], "get_private_entry() (in module pydicom.datadict)": [[120, "pydicom.datadict.get_private_entry"]], "keyword_for_tag() (in module pydicom.datadict)": [[121, "pydicom.datadict.keyword_for_tag"]], "mask_match() (in module pydicom.datadict)": [[122, "pydicom.datadict.mask_match"]], "private_dictionary_vm() (in module pydicom.datadict)": [[123, "pydicom.datadict.private_dictionary_VM"]], "private_dictionary_vr() (in module pydicom.datadict)": [[124, "pydicom.datadict.private_dictionary_VR"]], "private_dictionary_description() (in module pydicom.datadict)": [[125, "pydicom.datadict.private_dictionary_description"]], "repeater_has_keyword() (in module pydicom.datadict)": [[126, "pydicom.datadict.repeater_has_keyword"]], "repeater_has_tag() (in module pydicom.datadict)": [[127, "pydicom.datadict.repeater_has_tag"]], "tag_for_keyword() (in module pydicom.datadict)": [[128, "pydicom.datadict.tag_for_keyword"]], "dataelement (class in pydicom.dataelem)": [[129, "pydicom.dataelem.DataElement"]], "vm (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.VM"]], "vr (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.VR"]], "__init__() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.__init__"]], "clear() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.clear"]], "descripwidth (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.descripWidth"]], "description() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.description"]], "empty_value (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.empty_value"]], "from_json() (pydicom.dataelem.dataelement class method)": [[129, "pydicom.dataelem.DataElement.from_json"]], "is_empty (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.is_empty"]], "is_private (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.is_private"]], "is_retired (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.is_retired"]], "is_undefined_length (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.is_undefined_length"]], "keyword (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.keyword"]], "maxbytestodisplay (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.maxBytesToDisplay"]], "name (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.name"]], "repval (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.repval"]], "showvr (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.showVR"]], "tag (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.tag"]], "to_json() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.to_json"]], "to_json_dict() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.to_json_dict"]], "validate() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.validate"]], "value (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.value"]], "dataelement_from_raw() (in module pydicom.dataelem)": [[130, "pydicom.dataelem.DataElement_from_raw"]], "rawdataelement (class in pydicom.dataelem)": [[131, "pydicom.dataelem.RawDataElement"]], "vr (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.VR"]], "__init__() (pydicom.dataelem.rawdataelement method)": [[131, "pydicom.dataelem.RawDataElement.__init__"]], "is_implicit_vr (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.is_implicit_VR"]], "is_little_endian (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.is_little_endian"]], "is_raw (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.is_raw"]], "length (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.length"]], "tag (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.tag"]], "value (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.value"]], "value_tell (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.value_tell"]], "dataset (class in pydicom.dataset)": [[132, "pydicom.dataset.Dataset"]], "__init__() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.__init__"]], "add() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.add"]], "add_new() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.add_new"]], "clear() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.clear"]], "compress() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.compress"]], "convert_pixel_data() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.convert_pixel_data"]], "copy() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.copy"]], "data_element() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.data_element"]], "decode() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.decode"]], "decompress() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.decompress"]], "default_element_format (pydicom.dataset.dataset attribute)": [[132, "pydicom.dataset.Dataset.default_element_format"]], "default_sequence_element_format (pydicom.dataset.dataset attribute)": [[132, "pydicom.dataset.Dataset.default_sequence_element_format"]], "dir() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.dir"]], "elements() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.elements"]], "ensure_file_meta() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.ensure_file_meta"]], "fix_meta_info() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.fix_meta_info"]], "formatted_lines() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.formatted_lines"]], "from_json() (pydicom.dataset.dataset class method)": [[132, "pydicom.dataset.Dataset.from_json"]], "get() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.get"]], "get_item() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.get_item"]], "get_private_item() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.get_private_item"]], "group_dataset() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.group_dataset"]], "indent_chars (pydicom.dataset.dataset attribute)": [[132, "pydicom.dataset.Dataset.indent_chars"]], "is_implicit_vr (pydicom.dataset.dataset attribute)": [[132, "pydicom.dataset.Dataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.dataset attribute)": [[132, "pydicom.dataset.Dataset.is_little_endian"]], "is_original_encoding (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.is_original_encoding"]], "items() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.items"]], "iterall() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.iterall"]], "keys() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.keys"]], "overlay_array() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.overlay_array"]], "parent (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.parent"]], "parent_seq (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.parent_seq"]], "pixel_array (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.pixel_array"]], "pop() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.pop"]], "popitem() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.popitem"]], "private_block() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.private_block"]], "private_creators() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.private_creators"]], "remove_private_tags() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.remove_private_tags"]], "save_as() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.save_as"]], "set_original_encoding() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.set_original_encoding"]], "setdefault() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.setdefault"]], "to_json() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.to_json"]], "to_json_dict() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.to_json_dict"]], "top() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.top"]], "trait_names() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.trait_names"]], "update() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.update"]], "values() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.values"]], "walk() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.walk"]], "waveform_array() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.waveform_array"]], "filedataset (class in pydicom.dataset)": [[133, "pydicom.dataset.FileDataset"]], "__init__() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.__init__"]], "file_meta (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.file_meta"]], "filename (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.filename"]], "fileobj_type (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.fileobj_type"]], "is_implicit_vr (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.is_little_endian"]], "preamble (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.preamble"]], "timestamp (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.timestamp"]], "filemetadataset (class in pydicom.dataset)": [[134, "pydicom.dataset.FileMetaDataset"]], "__init__() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.__init__"]], "validate() (pydicom.dataset.filemetadataset static method)": [[134, "pydicom.dataset.FileMetaDataset.validate"]], "privateblock (class in pydicom.dataset)": [[135, "pydicom.dataset.PrivateBlock"]], "__init__() (pydicom.dataset.privateblock method)": [[135, "pydicom.dataset.PrivateBlock.__init__"]], "add_new() (pydicom.dataset.privateblock method)": [[135, "pydicom.dataset.PrivateBlock.add_new"]], "block_start (pydicom.dataset.privateblock attribute)": [[135, "pydicom.dataset.PrivateBlock.block_start"]], "dataset (pydicom.dataset.privateblock attribute)": [[135, "pydicom.dataset.PrivateBlock.dataset"]], "get_tag() (pydicom.dataset.privateblock method)": [[135, "pydicom.dataset.PrivateBlock.get_tag"]], "group (pydicom.dataset.privateblock attribute)": [[135, "pydicom.dataset.PrivateBlock.group"]], "private_creator (pydicom.dataset.privateblock attribute)": [[135, "pydicom.dataset.PrivateBlock.private_creator"]], "validate_file_meta() (in module pydicom.dataset)": [[136, "pydicom.dataset.validate_file_meta"]], "dicomdir (class in pydicom.dicomdir)": [[137, "pydicom.dicomdir.DicomDir"]], "__init__() (pydicom.dicomdir.dicomdir method)": [[137, "pydicom.dicomdir.DicomDir.__init__"]], "parse_records() (pydicom.dicomdir.dicomdir method)": [[137, "pydicom.dicomdir.DicomDir.parse_records"]], "decode_data_sequence() (in module pydicom.encaps)": [[138, "pydicom.encaps.decode_data_sequence"]], "defragment_data() (in module pydicom.encaps)": [[139, "pydicom.encaps.defragment_data"]], "encapsulate() (in module pydicom.encaps)": [[140, "pydicom.encaps.encapsulate"]], "encapsulate_extended() (in module pydicom.encaps)": [[141, "pydicom.encaps.encapsulate_extended"]], "fragment_frame() (in module pydicom.encaps)": [[142, "pydicom.encaps.fragment_frame"]], "generate_pixel_data() (in module pydicom.encaps)": [[143, "pydicom.encaps.generate_pixel_data"]], "generate_pixel_data_fragment() (in module pydicom.encaps)": [[144, "pydicom.encaps.generate_pixel_data_fragment"]], "generate_pixel_data_frame() (in module pydicom.encaps)": [[145, "pydicom.encaps.generate_pixel_data_frame"]], "get_frame_offsets() (in module pydicom.encaps)": [[146, "pydicom.encaps.get_frame_offsets"]], "itemize_fragment() (in module pydicom.encaps)": [[147, "pydicom.encaps.itemize_fragment"]], "itemize_frame() (in module pydicom.encaps)": [[148, "pydicom.encaps.itemize_frame"]], "read_item() (in module pydicom.encaps)": [[149, "pydicom.encaps.read_item"]], "rlelosslessencoder (in module pydicom.encoders)": [[150, "pydicom.encoders.RLELosslessEncoder"]], "encoder (class in pydicom.encoders.base)": [[151, "pydicom.encoders.base.Encoder"]], "uid (pydicom.encoders.base.encoder property)": [[151, "pydicom.encoders.base.Encoder.UID"]], "__init__() (pydicom.encoders.base.encoder method)": [[151, "pydicom.encoders.base.Encoder.__init__"]], "add_plugin() (pydicom.encoders.base.encoder method)": [[151, "pydicom.encoders.base.Encoder.add_plugin"]], "encode() (pydicom.encoders.base.encoder method)": [[151, "pydicom.encoders.base.Encoder.encode"]], "is_available (pydicom.encoders.base.encoder property)": [[151, "pydicom.encoders.base.Encoder.is_available"]], "iter_encode() (pydicom.encoders.base.encoder method)": [[151, "pydicom.encoders.base.Encoder.iter_encode"]], "kwargs_from_ds() (pydicom.encoders.base.encoder static method)": [[151, "pydicom.encoders.base.Encoder.kwargs_from_ds"]], "missing_dependencies (pydicom.encoders.base.encoder property)": [[151, "pydicom.encoders.base.Encoder.missing_dependencies"]], "name (pydicom.encoders.base.encoder property)": [[151, "pydicom.encoders.base.Encoder.name"]], "remove_plugin() (pydicom.encoders.base.encoder method)": [[151, "pydicom.encoders.base.Encoder.remove_plugin"]], "get_encoder() (in module pydicom.encoders)": [[152, "pydicom.encoders.get_encoder"]], "invaliddicomerror": [[153, "pydicom.errors.InvalidDicomError"]], "dicombytesio (class in pydicom.filebase)": [[154, "pydicom.filebase.DicomBytesIO"]], "__init__() (pydicom.filebase.dicombytesio method)": [[154, "pydicom.filebase.DicomBytesIO.__init__"]], "dicomfile() (in module pydicom.filebase)": [[155, "pydicom.filebase.DicomFile"]], "dicomfilelike (class in pydicom.filebase)": [[156, "pydicom.filebase.DicomFileLike"]], "__init__() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.__init__"]], "no_read() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.no_read"]], "no_seek() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.no_seek"]], "no_write() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.no_write"]], "dicomio (class in pydicom.filebase)": [[157, "pydicom.filebase.DicomIO"]], "__init__() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.__init__"]], "read() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.read"]], "read_beul() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.read_beUL"]], "read_beus() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.read_beUS"]], "read_be_tag() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.read_be_tag"]], "read_leul() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.read_leUL"]], "read_leus() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.read_leUS"]], "read_le_tag() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.read_le_tag"]], "write_ul() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.write_UL"]], "write_us() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.write_US"]], "write_beul() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.write_beUL"]], "write_beus() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.write_beUS"]], "write_leul() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.write_leUL"]], "write_leus() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.write_leUS"]], "write_tag() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.write_tag"]], "data_element_generator() (in module pydicom.filereader)": [[158, "pydicom.filereader.data_element_generator"]], "data_element_offset_to_value() (in module pydicom.filereader)": [[159, "pydicom.filereader.data_element_offset_to_value"]], "dcmread() (in module pydicom.filereader)": [[160, "pydicom.filereader.dcmread"]], "read_dataset() (in module pydicom.filereader)": [[161, "pydicom.filereader.read_dataset"]], "read_deferred_data_element() (in module pydicom.filereader)": [[162, "pydicom.filereader.read_deferred_data_element"]], "read_dicomdir() (in module pydicom.filereader)": [[163, "pydicom.filereader.read_dicomdir"]], "read_file_meta_info() (in module pydicom.filereader)": [[164, "pydicom.filereader.read_file_meta_info"]], "read_partial() (in module pydicom.filereader)": [[165, "pydicom.filereader.read_partial"]], "read_preamble() (in module pydicom.filereader)": [[166, "pydicom.filereader.read_preamble"]], "read_sequence() (in module pydicom.filereader)": [[167, "pydicom.filereader.read_sequence"]], "read_sequence_item() (in module pydicom.filereader)": [[168, "pydicom.filereader.read_sequence_item"]], "directory_recorders (in module pydicom.fileset)": [[169, "pydicom.fileset.DIRECTORY_RECORDERS"]], "fileid (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.FileID"]], "fileinstance (class in pydicom.fileset)": [[170, "pydicom.fileset.FileInstance"]], "sopclassuid (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.SOPClassUID"]], "sopinstanceuid (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.SOPInstanceUID"]], "transfersyntaxuid (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.TransferSyntaxUID"]], "__init__() (pydicom.fileset.fileinstance method)": [[170, "pydicom.fileset.FileInstance.__init__"]], "file_set (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.file_set"]], "for_addition (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.for_addition"]], "for_moving (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.for_moving"]], "for_removal (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.for_removal"]], "is_private (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.is_private"]], "is_staged (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.is_staged"]], "load() (pydicom.fileset.fileinstance method)": [[170, "pydicom.fileset.FileInstance.load"]], "node (pydicom.fileset.fileinstance attribute)": [[170, "pydicom.fileset.FileInstance.node"]], "path (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.path"]], "fileset (class in pydicom.fileset)": [[171, "pydicom.fileset.FileSet"]], "id (pydicom.fileset.fileset property)": [[171, "pydicom.fileset.FileSet.ID"]], "uid (pydicom.fileset.fileset property)": [[171, "pydicom.fileset.FileSet.UID"]], "__init__() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.__init__"]], "add() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.add"]], "add_custom() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.add_custom"]], "clear() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.clear"]], "copy() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.copy"]], "descriptor_character_set (pydicom.fileset.fileset property)": [[171, "pydicom.fileset.FileSet.descriptor_character_set"]], "descriptor_file_id (pydicom.fileset.fileset property)": [[171, "pydicom.fileset.FileSet.descriptor_file_id"]], "find() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.find"]], "find_values() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.find_values"]], "is_staged (pydicom.fileset.fileset property)": [[171, "pydicom.fileset.FileSet.is_staged"]], "load() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.load"]], "path (pydicom.fileset.fileset property)": [[171, "pydicom.fileset.FileSet.path"]], "remove() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.remove"]], "write() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.write"]], "recordnode (class in pydicom.fileset)": [[172, "pydicom.fileset.RecordNode"]], "__init__() (pydicom.fileset.recordnode method)": [[172, "pydicom.fileset.RecordNode.__init__"]], "add() (pydicom.fileset.recordnode method)": [[172, "pydicom.fileset.RecordNode.add"]], "ancestors (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.ancestors"]], "children (pydicom.fileset.recordnode attribute)": [[172, "pydicom.fileset.RecordNode.children"]], "component (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.component"]], "depth (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.depth"]], "file_set (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.file_set"]], "has_instance (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.has_instance"]], "index (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.index"]], "instance (pydicom.fileset.recordnode attribute)": [[172, "pydicom.fileset.RecordNode.instance"]], "is_root (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.is_root"]], "key (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.key"]], "next (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.next"]], "parent (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.parent"]], "prettify() (pydicom.fileset.recordnode method)": [[172, "pydicom.fileset.RecordNode.prettify"]], "previous (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.previous"]], "record_type (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.record_type"]], "remove() (pydicom.fileset.recordnode method)": [[172, "pydicom.fileset.RecordNode.remove"]], "reverse() (pydicom.fileset.recordnode method)": [[172, "pydicom.fileset.RecordNode.reverse"]], "root (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.root"]], "generate_filename() (in module pydicom.fileset)": [[173, "pydicom.fileset.generate_filename"]], "is_conformant_file_id() (in module pydicom.fileset)": [[174, "pydicom.fileset.is_conformant_file_id"]], "absorb_delimiter_item() (in module pydicom.fileutil)": [[175, "pydicom.fileutil.absorb_delimiter_item"]], "find_bytes() (in module pydicom.fileutil)": [[176, "pydicom.fileutil.find_bytes"]], "find_delimiter() (in module pydicom.fileutil)": [[177, "pydicom.fileutil.find_delimiter"]], "length_of_undefined_length() (in module pydicom.fileutil)": [[178, "pydicom.fileutil.length_of_undefined_length"]], "read_undefined_length_value() (in module pydicom.fileutil)": [[179, "pydicom.fileutil.read_undefined_length_value"]], "correct_ambiguous_vr() (in module pydicom.filewriter)": [[180, "pydicom.filewriter.correct_ambiguous_vr"]], "correct_ambiguous_vr_element() (in module pydicom.filewriter)": [[181, "pydicom.filewriter.correct_ambiguous_vr_element"]], "dcmwrite() (in module pydicom.filewriter)": [[182, "pydicom.filewriter.dcmwrite"]], "multi_string() (in module pydicom.filewriter)": [[183, "pydicom.filewriter.multi_string"]], "write_atvalue() (in module pydicom.filewriter)": [[184, "pydicom.filewriter.write_ATvalue"]], "write_da() (in module pydicom.filewriter)": [[185, "pydicom.filewriter.write_DA"]], "write_dt() (in module pydicom.filewriter)": [[186, "pydicom.filewriter.write_DT"]], "write_obvalue() (in module pydicom.filewriter)": [[187, "pydicom.filewriter.write_OBvalue"]], "write_owvalue() (in module pydicom.filewriter)": [[188, "pydicom.filewriter.write_OWvalue"]], "write_pn() (in module pydicom.filewriter)": [[189, "pydicom.filewriter.write_PN"]], "write_tm() (in module pydicom.filewriter)": [[190, "pydicom.filewriter.write_TM"]], "write_ui() (in module pydicom.filewriter)": [[191, "pydicom.filewriter.write_UI"]], "write_un() (in module pydicom.filewriter)": [[192, "pydicom.filewriter.write_UN"]], "write_data_element() (in module pydicom.filewriter)": [[193, "pydicom.filewriter.write_data_element"]], "write_dataset() (in module pydicom.filewriter)": [[194, "pydicom.filewriter.write_dataset"]], "write_file_meta_info() (in module pydicom.filewriter)": [[195, "pydicom.filewriter.write_file_meta_info"]], "write_number_string() (in module pydicom.filewriter)": [[196, "pydicom.filewriter.write_number_string"]], "write_numbers() (in module pydicom.filewriter)": [[197, "pydicom.filewriter.write_numbers"]], "write_sequence() (in module pydicom.filewriter)": [[198, "pydicom.filewriter.write_sequence"]], "write_sequence_item() (in module pydicom.filewriter)": [[199, "pydicom.filewriter.write_sequence_item"]], "write_string() (in module pydicom.filewriter)": [[200, "pydicom.filewriter.write_string"]], "write_text() (in module pydicom.filewriter)": [[201, "pydicom.filewriter.write_text"]], "is_dicom() (in module pydicom.misc)": [[202, "pydicom.misc.is_dicom"]], "size_in_bytes() (in module pydicom.misc)": [[203, "pydicom.misc.size_in_bytes"]], "multivalue (class in pydicom.multival)": [[204, "pydicom.multival.MultiValue"]], "__init__() (pydicom.multival.multivalue method)": [[204, "pydicom.multival.MultiValue.__init__"]], "append() (pydicom.multival.multivalue method)": [[204, "pydicom.multival.MultiValue.append"]], "extend() (pydicom.multival.multivalue method)": [[204, "pydicom.multival.MultiValue.extend"]], "insert() (pydicom.multival.multivalue method)": [[204, "pydicom.multival.MultiValue.insert"]], "get_expected_length() (in module pydicom.overlays.numpy_handler)": [[205, "pydicom.overlays.numpy_handler.get_expected_length"]], "get_overlay_array() (in module pydicom.overlays.numpy_handler)": [[205, "pydicom.overlays.numpy_handler.get_overlay_array"]], "is_available() (in module pydicom.overlays.numpy_handler)": [[205, "pydicom.overlays.numpy_handler.is_available"]], "pydicom.overlays.numpy_handler": [[205, "module-pydicom.overlays.numpy_handler"]], "reshape_overlay_array() (in module pydicom.overlays.numpy_handler)": [[205, "pydicom.overlays.numpy_handler.reshape_overlay_array"]], "apply_color_lut() (in module pydicom.pixel_data_handlers)": [[206, "pydicom.pixel_data_handlers.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers)": [[207, "pydicom.pixel_data_handlers.apply_modality_lut"]], "apply_rescale() (in module pydicom.pixel_data_handlers)": [[208, "pydicom.pixel_data_handlers.apply_rescale"]], "apply_voi() (in module pydicom.pixel_data_handlers)": [[209, "pydicom.pixel_data_handlers.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers)": [[210, "pydicom.pixel_data_handlers.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers)": [[211, "pydicom.pixel_data_handlers.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers)": [[212, "pydicom.pixel_data_handlers.convert_color_space"]], "create_data_element() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[213, "pydicom.pixel_data_handlers.gdcm_handler.create_data_element"]], "create_image() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[213, "pydicom.pixel_data_handlers.gdcm_handler.create_image"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[213, "pydicom.pixel_data_handlers.gdcm_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[213, "pydicom.pixel_data_handlers.gdcm_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[213, "pydicom.pixel_data_handlers.gdcm_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.gdcm_handler": [[213, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[213, "pydicom.pixel_data_handlers.gdcm_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[213, "pydicom.pixel_data_handlers.gdcm_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[214, "pydicom.pixel_data_handlers.jpeg_ls_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[214, "pydicom.pixel_data_handlers.jpeg_ls_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[214, "pydicom.pixel_data_handlers.jpeg_ls_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[214, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[214, "pydicom.pixel_data_handlers.jpeg_ls_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[214, "pydicom.pixel_data_handlers.jpeg_ls_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.numpy_handler)": [[215, "pydicom.pixel_data_handlers.numpy_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.numpy_handler)": [[215, "pydicom.pixel_data_handlers.numpy_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[215, "pydicom.pixel_data_handlers.numpy_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.numpy_handler": [[215, "module-pydicom.pixel_data_handlers.numpy_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[215, "pydicom.pixel_data_handlers.numpy_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.numpy_handler)": [[215, "pydicom.pixel_data_handlers.numpy_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pillow_handler)": [[216, "pydicom.pixel_data_handlers.pillow_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pillow_handler)": [[216, "pydicom.pixel_data_handlers.pillow_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[216, "pydicom.pixel_data_handlers.pillow_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pillow_handler": [[216, "module-pydicom.pixel_data_handlers.pillow_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[216, "pydicom.pixel_data_handlers.pillow_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pillow_handler)": [[216, "pydicom.pixel_data_handlers.pillow_handler.supports_transfer_syntax"]], "as_array() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[217, "pydicom.pixel_data_handlers.pylibjpeg_handler.as_array"]], "generate_frames() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[217, "pydicom.pixel_data_handlers.pylibjpeg_handler.generate_frames"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[217, "pydicom.pixel_data_handlers.pylibjpeg_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[217, "pydicom.pixel_data_handlers.pylibjpeg_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[217, "pydicom.pixel_data_handlers.pylibjpeg_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[217, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[217, "pydicom.pixel_data_handlers.pylibjpeg_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[217, "pydicom.pixel_data_handlers.pylibjpeg_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.rle_handler)": [[218, "pydicom.pixel_data_handlers.rle_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.rle_handler)": [[218, "pydicom.pixel_data_handlers.rle_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[218, "pydicom.pixel_data_handlers.rle_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.rle_handler": [[218, "module-pydicom.pixel_data_handlers.rle_handler"]], "rle_encode_frame() (in module pydicom.pixel_data_handlers.rle_handler)": [[218, "pydicom.pixel_data_handlers.rle_handler.rle_encode_frame"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[218, "pydicom.pixel_data_handlers.rle_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.rle_handler)": [[218, "pydicom.pixel_data_handlers.rle_handler.supports_transfer_syntax"]], "apply_color_lut() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.apply_modality_lut"]], "apply_voi() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.convert_color_space"]], "dtype_corrected_for_endianness() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.dtype_corrected_for_endianness"]], "expand_ybr422() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.expand_ybr422"]], "get_expected_length() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.get_expected_length"]], "get_image_pixel_ids() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.get_image_pixel_ids"]], "get_j2k_parameters() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.get_j2k_parameters"]], "get_nr_frames() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.get_nr_frames"]], "pack_bits() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.pack_bits"]], "pixel_dtype() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.pixel_dtype"]], "pydicom.pixel_data_handlers.util": [[219, "module-pydicom.pixel_data_handlers.util"]], "reshape_pixel_array() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.reshape_pixel_array"]], "unpack_bits() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.unpack_bits"]], "sequence (class in pydicom.sequence)": [[220, "pydicom.sequence.Sequence"]], "__init__() (pydicom.sequence.sequence method)": [[220, "pydicom.sequence.Sequence.__init__"]], "append() (pydicom.sequence.sequence method)": [[220, "pydicom.sequence.Sequence.append"]], "extend() (pydicom.sequence.sequence method)": [[220, "pydicom.sequence.Sequence.extend"]], "insert() (pydicom.sequence.sequence method)": [[220, "pydicom.sequence.Sequence.insert"]], "parent (pydicom.sequence.sequence property)": [[220, "pydicom.sequence.Sequence.parent"]], "parent_dataset (pydicom.sequence.sequence property)": [[220, "pydicom.sequence.Sequence.parent_dataset"]], "validate_dataset() (in module pydicom.sequence)": [[221, "pydicom.sequence.validate_dataset"]], "basetag (class in pydicom.tag)": [[222, "pydicom.tag.BaseTag"]], "__init__() (pydicom.tag.basetag method)": [[222, "pydicom.tag.BaseTag.__init__"]], "elem (pydicom.tag.basetag property)": [[222, "pydicom.tag.BaseTag.elem"]], "element (pydicom.tag.basetag property)": [[222, "pydicom.tag.BaseTag.element"]], "group (pydicom.tag.basetag property)": [[222, "pydicom.tag.BaseTag.group"]], "is_private (pydicom.tag.basetag property)": [[222, "pydicom.tag.BaseTag.is_private"]], "is_private_creator (pydicom.tag.basetag property)": [[222, "pydicom.tag.BaseTag.is_private_creator"]], "json_key (pydicom.tag.basetag property)": [[222, "pydicom.tag.BaseTag.json_key"]], "private_creator (pydicom.tag.basetag property)": [[222, "pydicom.tag.BaseTag.private_creator"]], "tag() (in module pydicom.tag)": [[223, "pydicom.tag.Tag"]], "tupletag() (in module pydicom.tag)": [[224, "pydicom.tag.TupleTag"]], "tag_in_exception() (in module pydicom.tag)": [[225, "pydicom.tag.tag_in_exception"]], "acquisitioncontextsrstorage (in module pydicom.uid)": [[226, "pydicom.uid.AcquisitionContextSRStorage"]], "advancedblendingpresentationstatestorage (in module pydicom.uid)": [[227, "pydicom.uid.AdvancedBlendingPresentationStateStorage"]], "alltransfersyntaxes (in module pydicom.uid)": [[228, "pydicom.uid.AllTransferSyntaxes"]], "ambulatoryecgwaveformstorage (in module pydicom.uid)": [[229, "pydicom.uid.AmbulatoryECGWaveformStorage"]], "arterialpulsewaveformstorage (in module pydicom.uid)": [[230, "pydicom.uid.ArterialPulseWaveformStorage"]], "autorefractionmeasurementsstorage (in module pydicom.uid)": [[231, "pydicom.uid.AutorefractionMeasurementsStorage"]], "basicstructureddisplaystorage (in module pydicom.uid)": [[232, "pydicom.uid.BasicStructuredDisplayStorage"]], "basictextsrstorage (in module pydicom.uid)": [[233, "pydicom.uid.BasicTextSRStorage"]], "basicvoiceaudiowaveformstorage (in module pydicom.uid)": [[234, "pydicom.uid.BasicVoiceAudioWaveformStorage"]], "blendingsoftcopypresentationstatestorage (in module pydicom.uid)": [[235, "pydicom.uid.BlendingSoftcopyPresentationStateStorage"]], "bodypositionwaveformstorage (in module pydicom.uid)": [[236, "pydicom.uid.BodyPositionWaveformStorage"]], "breastprojectionxrayimagestorageforpresentation (in module pydicom.uid)": [[237, "pydicom.uid.BreastProjectionXRayImageStorageForPresentation"]], "breastprojectionxrayimagestorageforprocessing (in module pydicom.uid)": [[238, "pydicom.uid.BreastProjectionXRayImageStorageForProcessing"]], "breasttomosynthesisimagestorage (in module pydicom.uid)": [[239, "pydicom.uid.BreastTomosynthesisImageStorage"]], "carmphotonelectronradiationrecordstorage (in module pydicom.uid)": [[240, "pydicom.uid.CArmPhotonElectronRadiationRecordStorage"]], "carmphotonelectronradiationstorage (in module pydicom.uid)": [[241, "pydicom.uid.CArmPhotonElectronRadiationStorage"]], "ctdefinedprocedureprotocolstorage (in module pydicom.uid)": [[242, "pydicom.uid.CTDefinedProcedureProtocolStorage"]], "ctimagestorage (in module pydicom.uid)": [[243, "pydicom.uid.CTImageStorage"]], "ctperformedprocedureprotocolstorage (in module pydicom.uid)": [[244, "pydicom.uid.CTPerformedProcedureProtocolStorage"]], "cardiacelectrophysiologywaveformstorage (in module pydicom.uid)": [[245, "pydicom.uid.CardiacElectrophysiologyWaveformStorage"]], "chestcadsrstorage (in module pydicom.uid)": [[246, "pydicom.uid.ChestCADSRStorage"]], "coloncadsrstorage (in module pydicom.uid)": [[247, "pydicom.uid.ColonCADSRStorage"]], "colorpalettestorage (in module pydicom.uid)": [[248, "pydicom.uid.ColorPaletteStorage"]], "colorsoftcopypresentationstatestorage (in module pydicom.uid)": [[249, "pydicom.uid.ColorSoftcopyPresentationStateStorage"]], "compositingplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[250, "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage"]], "comprehensive3dsrstorage (in module pydicom.uid)": [[251, "pydicom.uid.Comprehensive3DSRStorage"]], "comprehensivesrstorage (in module pydicom.uid)": [[252, "pydicom.uid.ComprehensiveSRStorage"]], "computedradiographyimagestorage (in module pydicom.uid)": [[253, "pydicom.uid.ComputedRadiographyImageStorage"]], "contentassessmentresultsstorage (in module pydicom.uid)": [[254, "pydicom.uid.ContentAssessmentResultsStorage"]], "cornealtopographymapstorage (in module pydicom.uid)": [[255, "pydicom.uid.CornealTopographyMapStorage"]], "dicos2daitstorage (in module pydicom.uid)": [[256, "pydicom.uid.DICOS2DAITStorage"]], "dicos3daitstorage (in module pydicom.uid)": [[257, "pydicom.uid.DICOS3DAITStorage"]], "dicosctimagestorage (in module pydicom.uid)": [[258, "pydicom.uid.DICOSCTImageStorage"]], "dicosdigitalxrayimagestorageforpresentation (in module pydicom.uid)": [[259, "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation"]], "dicosdigitalxrayimagestorageforprocessing (in module pydicom.uid)": [[260, "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing"]], "dicosquadrupoleresonancestorage (in module pydicom.uid)": [[261, "pydicom.uid.DICOSQuadrupoleResonanceStorage"]], "dicosthreatdetectionreportstorage (in module pydicom.uid)": [[262, "pydicom.uid.DICOSThreatDetectionReportStorage"]], "deflatedexplicitvrlittleendian (in module pydicom.uid)": [[263, "pydicom.uid.DeflatedExplicitVRLittleEndian"]], "deformablespatialregistrationstorage (in module pydicom.uid)": [[264, "pydicom.uid.DeformableSpatialRegistrationStorage"]], "dermoscopicphotographyimagestorage (in module pydicom.uid)": [[265, "pydicom.uid.DermoscopicPhotographyImageStorage"]], "digitalintraoralxrayimagestorageforpresentation (in module pydicom.uid)": [[266, "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation"]], "digitalintraoralxrayimagestorageforprocessing (in module pydicom.uid)": [[267, "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing"]], "digitalmammographyxrayimagestorageforpresentation (in module pydicom.uid)": [[268, "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation"]], "digitalmammographyxrayimagestorageforprocessing (in module pydicom.uid)": [[269, "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing"]], "digitalxrayimagestorageforpresentation (in module pydicom.uid)": [[270, "pydicom.uid.DigitalXRayImageStorageForPresentation"]], "digitalxrayimagestorageforprocessing (in module pydicom.uid)": [[271, "pydicom.uid.DigitalXRayImageStorageForProcessing"]], "eddycurrentimagestorage (in module pydicom.uid)": [[272, "pydicom.uid.EddyCurrentImageStorage"]], "eddycurrentmultiframeimagestorage (in module pydicom.uid)": [[273, "pydicom.uid.EddyCurrentMultiFrameImageStorage"]], "electromyogramwaveformstorage (in module pydicom.uid)": [[274, "pydicom.uid.ElectromyogramWaveformStorage"]], "electrooculogramwaveformstorage (in module pydicom.uid)": [[275, "pydicom.uid.ElectrooculogramWaveformStorage"]], "encapsulatedcdastorage (in module pydicom.uid)": [[276, "pydicom.uid.EncapsulatedCDAStorage"]], "encapsulatedmtlstorage (in module pydicom.uid)": [[277, "pydicom.uid.EncapsulatedMTLStorage"]], "encapsulatedobjstorage (in module pydicom.uid)": [[278, "pydicom.uid.EncapsulatedOBJStorage"]], "encapsulatedpdfstorage (in module pydicom.uid)": [[279, "pydicom.uid.EncapsulatedPDFStorage"]], "encapsulatedstlstorage (in module pydicom.uid)": [[280, "pydicom.uid.EncapsulatedSTLStorage"]], "enhancedctimagestorage (in module pydicom.uid)": [[281, "pydicom.uid.EnhancedCTImageStorage"]], "enhancedmrcolorimagestorage (in module pydicom.uid)": [[282, "pydicom.uid.EnhancedMRColorImageStorage"]], "enhancedmrimagestorage (in module pydicom.uid)": [[283, "pydicom.uid.EnhancedMRImageStorage"]], "enhancedpetimagestorage (in module pydicom.uid)": [[284, "pydicom.uid.EnhancedPETImageStorage"]], "enhancedsrstorage (in module pydicom.uid)": [[285, "pydicom.uid.EnhancedSRStorage"]], "enhancedusvolumestorage (in module pydicom.uid)": [[286, "pydicom.uid.EnhancedUSVolumeStorage"]], "enhancedxaimagestorage (in module pydicom.uid)": [[287, "pydicom.uid.EnhancedXAImageStorage"]], "enhancedxrfimagestorage (in module pydicom.uid)": [[288, "pydicom.uid.EnhancedXRFImageStorage"]], "enhancedxrayradiationdosesrstorage (in module pydicom.uid)": [[289, "pydicom.uid.EnhancedXRayRadiationDoseSRStorage"]], "explicitvrbigendian (in module pydicom.uid)": [[290, "pydicom.uid.ExplicitVRBigEndian"]], "explicitvrlittleendian (in module pydicom.uid)": [[291, "pydicom.uid.ExplicitVRLittleEndian"]], "extensiblesrstorage (in module pydicom.uid)": [[292, "pydicom.uid.ExtensibleSRStorage"]], "generalaudiowaveformstorage (in module pydicom.uid)": [[293, "pydicom.uid.GeneralAudioWaveformStorage"]], "generalecgwaveformstorage (in module pydicom.uid)": [[294, "pydicom.uid.GeneralECGWaveformStorage"]], "genericimplanttemplatestorage (in module pydicom.uid)": [[295, "pydicom.uid.GenericImplantTemplateStorage"]], "grayscaleplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[296, "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage"]], "grayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[297, "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage"]], "hevcm10p51 (in module pydicom.uid)": [[298, "pydicom.uid.HEVCM10P51"]], "hevcmp51 (in module pydicom.uid)": [[299, "pydicom.uid.HEVCMP51"]], "hangingprotocolstorage (in module pydicom.uid)": [[300, "pydicom.uid.HangingProtocolStorage"]], "hemodynamicwaveformstorage (in module pydicom.uid)": [[301, "pydicom.uid.HemodynamicWaveformStorage"]], "implantassemblytemplatestorage (in module pydicom.uid)": [[302, "pydicom.uid.ImplantAssemblyTemplateStorage"]], "implanttemplategroupstorage (in module pydicom.uid)": [[303, "pydicom.uid.ImplantTemplateGroupStorage"]], "implantationplansrstorage (in module pydicom.uid)": [[304, "pydicom.uid.ImplantationPlanSRStorage"]], "implicitvrlittleendian (in module pydicom.uid)": [[305, "pydicom.uid.ImplicitVRLittleEndian"]], "intraocularlenscalculationsstorage (in module pydicom.uid)": [[306, "pydicom.uid.IntraocularLensCalculationsStorage"]], "intravascularopticalcoherencetomographyimagestorageforpresentation (in module pydicom.uid)": [[307, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation"]], "intravascularopticalcoherencetomographyimagestorageforprocessing (in module pydicom.uid)": [[308, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing"]], "jpeg2000 (in module pydicom.uid)": [[309, "pydicom.uid.JPEG2000"]], "jpeg2000lossless (in module pydicom.uid)": [[310, "pydicom.uid.JPEG2000Lossless"]], "jpeg2000mc (in module pydicom.uid)": [[311, "pydicom.uid.JPEG2000MC"]], "jpeg2000mclossless (in module pydicom.uid)": [[312, "pydicom.uid.JPEG2000MCLossless"]], "jpeg2000transfersyntaxes (in module pydicom.uid)": [[313, "pydicom.uid.JPEG2000TransferSyntaxes"]], "jpegbaseline8bit (in module pydicom.uid)": [[314, "pydicom.uid.JPEGBaseline8Bit"]], "jpegextended12bit (in module pydicom.uid)": [[315, "pydicom.uid.JPEGExtended12Bit"]], "jpeglslossless (in module pydicom.uid)": [[316, "pydicom.uid.JPEGLSLossless"]], "jpeglsnearlossless (in module pydicom.uid)": [[317, "pydicom.uid.JPEGLSNearLossless"]], "jpeglstransfersyntaxes (in module pydicom.uid)": [[318, "pydicom.uid.JPEGLSTransferSyntaxes"]], "jpeglosslessp14 (in module pydicom.uid)": [[319, "pydicom.uid.JPEGLosslessP14"]], "jpeglosslesssv1 (in module pydicom.uid)": [[320, "pydicom.uid.JPEGLosslessSV1"]], "jpegtransfersyntaxes (in module pydicom.uid)": [[321, "pydicom.uid.JPEGTransferSyntaxes"]], "keratometrymeasurementsstorage (in module pydicom.uid)": [[322, "pydicom.uid.KeratometryMeasurementsStorage"]], "keyobjectselectiondocumentstorage (in module pydicom.uid)": [[323, "pydicom.uid.KeyObjectSelectionDocumentStorage"]], "legacyconvertedenhancedctimagestorage (in module pydicom.uid)": [[324, "pydicom.uid.LegacyConvertedEnhancedCTImageStorage"]], "legacyconvertedenhancedmrimagestorage (in module pydicom.uid)": [[325, "pydicom.uid.LegacyConvertedEnhancedMRImageStorage"]], "legacyconvertedenhancedpetimagestorage (in module pydicom.uid)": [[326, "pydicom.uid.LegacyConvertedEnhancedPETImageStorage"]], "lensometrymeasurementsstorage (in module pydicom.uid)": [[327, "pydicom.uid.LensometryMeasurementsStorage"]], "mpeg2mphl (in module pydicom.uid)": [[328, "pydicom.uid.MPEG2MPHL"]], "mpeg2mpml (in module pydicom.uid)": [[329, "pydicom.uid.MPEG2MPML"]], "mpeg4hp41 (in module pydicom.uid)": [[330, "pydicom.uid.MPEG4HP41"]], "mpeg4hp41bd (in module pydicom.uid)": [[331, "pydicom.uid.MPEG4HP41BD"]], "mpeg4hp422d (in module pydicom.uid)": [[332, "pydicom.uid.MPEG4HP422D"]], "mpeg4hp423d (in module pydicom.uid)": [[333, "pydicom.uid.MPEG4HP423D"]], "mpeg4hp42stereo (in module pydicom.uid)": [[334, "pydicom.uid.MPEG4HP42STEREO"]], "mpegtransfersyntaxes (in module pydicom.uid)": [[335, "pydicom.uid.MPEGTransferSyntaxes"]], "mrimagestorage (in module pydicom.uid)": [[336, "pydicom.uid.MRImageStorage"]], "mrspectroscopystorage (in module pydicom.uid)": [[337, "pydicom.uid.MRSpectroscopyStorage"]], "maculargridthicknessandvolumereportstorage (in module pydicom.uid)": [[338, "pydicom.uid.MacularGridThicknessAndVolumeReportStorage"]], "mammographycadsrstorage (in module pydicom.uid)": [[339, "pydicom.uid.MammographyCADSRStorage"]], "mediastoragedirectorystorage (in module pydicom.uid)": [[340, "pydicom.uid.MediaStorageDirectoryStorage"]], "microscopybulksimpleannotationsstorage (in module pydicom.uid)": [[341, "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage"]], "multiframegrayscalebytesecondarycaptureimagestorage (in module pydicom.uid)": [[342, "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage"]], "multiframegrayscalewordsecondarycaptureimagestorage (in module pydicom.uid)": [[343, "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage"]], "multiframesinglebitsecondarycaptureimagestorage (in module pydicom.uid)": [[344, "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage"]], "multiframetruecolorsecondarycaptureimagestorage (in module pydicom.uid)": [[345, "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage"]], "multichannelrespiratorywaveformstorage (in module pydicom.uid)": [[346, "pydicom.uid.MultichannelRespiratoryWaveformStorage"]], "multiplevolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[347, "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage"]], "nuclearmedicineimagestorage (in module pydicom.uid)": [[348, "pydicom.uid.NuclearMedicineImageStorage"]], "ophthalmicaxialmeasurementsstorage (in module pydicom.uid)": [[349, "pydicom.uid.OphthalmicAxialMeasurementsStorage"]], "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage (in module pydicom.uid)": [[350, "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"]], "ophthalmicopticalcoherencetomographyenfaceimagestorage (in module pydicom.uid)": [[351, "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"]], "ophthalmicphotography16bitimagestorage (in module pydicom.uid)": [[352, "pydicom.uid.OphthalmicPhotography16BitImageStorage"]], "ophthalmicphotography8bitimagestorage (in module pydicom.uid)": [[353, "pydicom.uid.OphthalmicPhotography8BitImageStorage"]], "ophthalmicthicknessmapstorage (in module pydicom.uid)": [[354, "pydicom.uid.OphthalmicThicknessMapStorage"]], "ophthalmictomographyimagestorage (in module pydicom.uid)": [[355, "pydicom.uid.OphthalmicTomographyImageStorage"]], "ophthalmicvisualfieldstaticperimetrymeasurementsstorage (in module pydicom.uid)": [[356, "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"]], "pydicom_implementation_uid (in module pydicom.uid)": [[357, "pydicom.uid.PYDICOM_IMPLEMENTATION_UID"]], "pydicom_root_uid (in module pydicom.uid)": [[358, "pydicom.uid.PYDICOM_ROOT_UID"]], "parametricmapstorage (in module pydicom.uid)": [[359, "pydicom.uid.ParametricMapStorage"]], "patientradiationdosesrstorage (in module pydicom.uid)": [[360, "pydicom.uid.PatientRadiationDoseSRStorage"]], "performedimagingagentadministrationsrstorage (in module pydicom.uid)": [[361, "pydicom.uid.PerformedImagingAgentAdministrationSRStorage"]], "plannedimagingagentadministrationsrstorage (in module pydicom.uid)": [[362, "pydicom.uid.PlannedImagingAgentAdministrationSRStorage"]], "positronemissiontomographyimagestorage (in module pydicom.uid)": [[363, "pydicom.uid.PositronEmissionTomographyImageStorage"]], "procedurelogstorage (in module pydicom.uid)": [[364, "pydicom.uid.ProcedureLogStorage"]], "protocolapprovalstorage (in module pydicom.uid)": [[365, "pydicom.uid.ProtocolApprovalStorage"]], "pseudocolorsoftcopypresentationstatestorage (in module pydicom.uid)": [[366, "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage"]], "re_valid_uid (in module pydicom.uid)": [[367, "pydicom.uid.RE_VALID_UID"]], "re_valid_uid_prefix (in module pydicom.uid)": [[368, "pydicom.uid.RE_VALID_UID_PREFIX"]], "rlelossless (in module pydicom.uid)": [[369, "pydicom.uid.RLELossless"]], "rletransfersyntaxes (in module pydicom.uid)": [[370, "pydicom.uid.RLETransferSyntaxes"]], "rtbeamsdeliveryinstructionstorage (in module pydicom.uid)": [[371, "pydicom.uid.RTBeamsDeliveryInstructionStorage"]], "rtbeamstreatmentrecordstorage (in module pydicom.uid)": [[372, "pydicom.uid.RTBeamsTreatmentRecordStorage"]], "rtbrachyapplicationsetupdeliveryinstructionstorage (in module pydicom.uid)": [[373, "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage"]], "rtbrachytreatmentrecordstorage (in module pydicom.uid)": [[374, "pydicom.uid.RTBrachyTreatmentRecordStorage"]], "rtdosestorage (in module pydicom.uid)": [[375, "pydicom.uid.RTDoseStorage"]], "rtimagestorage (in module pydicom.uid)": [[376, "pydicom.uid.RTImageStorage"]], "rtionbeamstreatmentrecordstorage (in module pydicom.uid)": [[377, "pydicom.uid.RTIonBeamsTreatmentRecordStorage"]], "rtionplanstorage (in module pydicom.uid)": [[378, "pydicom.uid.RTIonPlanStorage"]], "rtphysicianintentstorage (in module pydicom.uid)": [[379, "pydicom.uid.RTPhysicianIntentStorage"]], "rtplanstorage (in module pydicom.uid)": [[380, "pydicom.uid.RTPlanStorage"]], "rtradiationrecordsetstorage (in module pydicom.uid)": [[381, "pydicom.uid.RTRadiationRecordSetStorage"]], "rtradiationsalvagerecordstorage (in module pydicom.uid)": [[382, "pydicom.uid.RTRadiationSalvageRecordStorage"]], "rtradiationsetdeliveryinstructionstorage (in module pydicom.uid)": [[383, "pydicom.uid.RTRadiationSetDeliveryInstructionStorage"]], "rtradiationsetstorage (in module pydicom.uid)": [[384, "pydicom.uid.RTRadiationSetStorage"]], "rtsegmentannotationstorage (in module pydicom.uid)": [[385, "pydicom.uid.RTSegmentAnnotationStorage"]], "rtstructuresetstorage (in module pydicom.uid)": [[386, "pydicom.uid.RTStructureSetStorage"]], "rttreatmentpreparationstorage (in module pydicom.uid)": [[387, "pydicom.uid.RTTreatmentPreparationStorage"]], "rttreatmentsummaryrecordstorage (in module pydicom.uid)": [[388, "pydicom.uid.RTTreatmentSummaryRecordStorage"]], "radiopharmaceuticalradiationdosesrstorage (in module pydicom.uid)": [[389, "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage"]], "rawdatastorage (in module pydicom.uid)": [[390, "pydicom.uid.RawDataStorage"]], "realworldvaluemappingstorage (in module pydicom.uid)": [[391, "pydicom.uid.RealWorldValueMappingStorage"]], "respiratorywaveformstorage (in module pydicom.uid)": [[392, "pydicom.uid.RespiratoryWaveformStorage"]], "roboticarmradiationstorage (in module pydicom.uid)": [[393, "pydicom.uid.RoboticArmRadiationStorage"]], "roboticradiationrecordstorage (in module pydicom.uid)": [[394, "pydicom.uid.RoboticRadiationRecordStorage"]], "routinescalpelectroencephalogramwaveformstorage (in module pydicom.uid)": [[395, "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage"]], "secondarycaptureimagestorage (in module pydicom.uid)": [[396, "pydicom.uid.SecondaryCaptureImageStorage"]], "segmentationstorage (in module pydicom.uid)": [[397, "pydicom.uid.SegmentationStorage"]], "segmentedvolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[398, "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage"]], "simplifiedadultechosrstorage (in module pydicom.uid)": [[399, "pydicom.uid.SimplifiedAdultEchoSRStorage"]], "sleepelectroencephalogramwaveformstorage (in module pydicom.uid)": [[400, "pydicom.uid.SleepElectroencephalogramWaveformStorage"]], "spatialfiducialsstorage (in module pydicom.uid)": [[401, "pydicom.uid.SpatialFiducialsStorage"]], "spatialregistrationstorage (in module pydicom.uid)": [[402, "pydicom.uid.SpatialRegistrationStorage"]], "spectacleprescriptionreportstorage (in module pydicom.uid)": [[403, "pydicom.uid.SpectaclePrescriptionReportStorage"]], "stereometricrelationshipstorage (in module pydicom.uid)": [[404, "pydicom.uid.StereometricRelationshipStorage"]], "subjectiverefractionmeasurementsstorage (in module pydicom.uid)": [[405, "pydicom.uid.SubjectiveRefractionMeasurementsStorage"]], "surfacescanmeshstorage (in module pydicom.uid)": [[406, "pydicom.uid.SurfaceScanMeshStorage"]], "surfacescanpointcloudstorage (in module pydicom.uid)": [[407, "pydicom.uid.SurfaceScanPointCloudStorage"]], "surfacesegmentationstorage (in module pydicom.uid)": [[408, "pydicom.uid.SurfaceSegmentationStorage"]], "tomotherapeuticradiationrecordstorage (in module pydicom.uid)": [[409, "pydicom.uid.TomotherapeuticRadiationRecordStorage"]], "tomotherapeuticradiationstorage (in module pydicom.uid)": [[410, "pydicom.uid.TomotherapeuticRadiationStorage"]], "tractographyresultsstorage (in module pydicom.uid)": [[411, "pydicom.uid.TractographyResultsStorage"]], "twelveleadecgwaveformstorage (in module pydicom.uid)": [[412, "pydicom.uid.TwelveLeadECGWaveformStorage"]], "uid (class in pydicom.uid)": [[413, "pydicom.uid.UID"]], "__init__() (pydicom.uid.uid method)": [[413, "pydicom.uid.UID.__init__"]], "info (pydicom.uid.uid property)": [[413, "pydicom.uid.UID.info"]], "is_compressed (pydicom.uid.uid property)": [[413, "pydicom.uid.UID.is_compressed"]], "is_deflated (pydicom.uid.uid property)": [[413, "pydicom.uid.UID.is_deflated"]], "is_encapsulated (pydicom.uid.uid property)": [[413, "pydicom.uid.UID.is_encapsulated"]], "is_implicit_vr (pydicom.uid.uid property)": [[413, "pydicom.uid.UID.is_implicit_VR"]], "is_little_endian (pydicom.uid.uid property)": [[413, "pydicom.uid.UID.is_little_endian"]], "is_private (pydicom.uid.uid property)": [[413, "pydicom.uid.UID.is_private"]], "is_retired (pydicom.uid.uid property)": [[413, "pydicom.uid.UID.is_retired"]], "is_transfer_syntax (pydicom.uid.uid property)": [[413, "pydicom.uid.UID.is_transfer_syntax"]], "is_valid (pydicom.uid.uid property)": [[413, "pydicom.uid.UID.is_valid"]], "keyword (pydicom.uid.uid property)": [[413, "pydicom.uid.UID.keyword"]], "name (pydicom.uid.uid property)": [[413, "pydicom.uid.UID.name"]], "type (pydicom.uid.uid property)": [[413, "pydicom.uid.UID.type"]], "ultrasoundimagestorage (in module pydicom.uid)": [[414, "pydicom.uid.UltrasoundImageStorage"]], "ultrasoundmultiframeimagestorage (in module pydicom.uid)": [[415, "pydicom.uid.UltrasoundMultiFrameImageStorage"]], "uncompressedtransfersyntaxes (in module pydicom.uid)": [[416, "pydicom.uid.UncompressedTransferSyntaxes"]], "vlendoscopicimagestorage (in module pydicom.uid)": [[417, "pydicom.uid.VLEndoscopicImageStorage"]], "vlmicroscopicimagestorage (in module pydicom.uid)": [[418, "pydicom.uid.VLMicroscopicImageStorage"]], "vlphotographicimagestorage (in module pydicom.uid)": [[419, "pydicom.uid.VLPhotographicImageStorage"]], "vlslidecoordinatesmicroscopicimagestorage (in module pydicom.uid)": [[420, "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage"]], "vlwholeslidemicroscopyimagestorage (in module pydicom.uid)": [[421, "pydicom.uid.VLWholeSlideMicroscopyImageStorage"]], "videoendoscopicimagestorage (in module pydicom.uid)": [[422, "pydicom.uid.VideoEndoscopicImageStorage"]], "videomicroscopicimagestorage (in module pydicom.uid)": [[423, "pydicom.uid.VideoMicroscopicImageStorage"]], "videophotographicimagestorage (in module pydicom.uid)": [[424, "pydicom.uid.VideoPhotographicImageStorage"]], "visualacuitymeasurementsstorage (in module pydicom.uid)": [[425, "pydicom.uid.VisualAcuityMeasurementsStorage"]], "volumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[426, "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage"]], "widefieldophthalmicphotography3dcoordinatesimagestorage (in module pydicom.uid)": [[427, "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage"]], "widefieldophthalmicphotographystereographicprojectionimagestorage (in module pydicom.uid)": [[428, "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"]], "xadefinedprocedureprotocolstorage (in module pydicom.uid)": [[429, "pydicom.uid.XADefinedProcedureProtocolStorage"]], "xaperformedprocedureprotocolstorage (in module pydicom.uid)": [[430, "pydicom.uid.XAPerformedProcedureProtocolStorage"]], "xaxrfgrayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[431, "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage"]], "xray3dangiographicimagestorage (in module pydicom.uid)": [[432, "pydicom.uid.XRay3DAngiographicImageStorage"]], "xray3dcraniofacialimagestorage (in module pydicom.uid)": [[433, "pydicom.uid.XRay3DCraniofacialImageStorage"]], "xrayangiographicimagestorage (in module pydicom.uid)": [[434, "pydicom.uid.XRayAngiographicImageStorage"]], "xrayradiationdosesrstorage (in module pydicom.uid)": [[435, "pydicom.uid.XRayRadiationDoseSRStorage"]], "xrayradiofluoroscopicimagestorage (in module pydicom.uid)": [[436, "pydicom.uid.XRayRadiofluoroscopicImageStorage"]], "generate_uid() (in module pydicom.uid)": [[437, "pydicom.uid.generate_uid"]], "da (class in pydicom.valuerep)": [[438, "pydicom.valuerep.DA"]], "__init__() (pydicom.valuerep.da method)": [[438, "pydicom.valuerep.DA.__init__"]], "ds() (in module pydicom.valuerep)": [[439, "pydicom.valuerep.DS"]], "dsdecimal (class in pydicom.valuerep)": [[440, "pydicom.valuerep.DSdecimal"]], "__init__() (pydicom.valuerep.dsdecimal method)": [[440, "pydicom.valuerep.DSdecimal.__init__"]], "dsfloat (class in pydicom.valuerep)": [[441, "pydicom.valuerep.DSfloat"]], "__init__() (pydicom.valuerep.dsfloat method)": [[441, "pydicom.valuerep.DSfloat.__init__"]], "dt (class in pydicom.valuerep)": [[442, "pydicom.valuerep.DT"]], "__init__() (pydicom.valuerep.dt method)": [[442, "pydicom.valuerep.DT.__init__"]], "is (class in pydicom.valuerep)": [[443, "pydicom.valuerep.IS"]], "__init__() (pydicom.valuerep.is method)": [[443, "pydicom.valuerep.IS.__init__"]], "isfloat (class in pydicom.valuerep)": [[444, "pydicom.valuerep.ISfloat"]], "__init__() (pydicom.valuerep.isfloat method)": [[444, "pydicom.valuerep.ISfloat.__init__"]], "multistring() (in module pydicom.valuerep)": [[445, "pydicom.valuerep.MultiString"]], "personname (class in pydicom.valuerep)": [[446, "pydicom.valuerep.PersonName"]], "__init__() (pydicom.valuerep.personname method)": [[446, "pydicom.valuerep.PersonName.__init__"]], "alphabetic (pydicom.valuerep.personname property)": [[446, "pydicom.valuerep.PersonName.alphabetic"]], "components (pydicom.valuerep.personname property)": [[446, "pydicom.valuerep.PersonName.components"]], "decode() (pydicom.valuerep.personname method)": [[446, "pydicom.valuerep.PersonName.decode"]], "encode() (pydicom.valuerep.personname method)": [[446, "pydicom.valuerep.PersonName.encode"]], "family_comma_given() (pydicom.valuerep.personname method)": [[446, "pydicom.valuerep.PersonName.family_comma_given"]], "family_name (pydicom.valuerep.personname property)": [[446, "pydicom.valuerep.PersonName.family_name"]], "formatted() (pydicom.valuerep.personname method)": [[446, "pydicom.valuerep.PersonName.formatted"]], "from_named_components() (pydicom.valuerep.personname class method)": [[446, "pydicom.valuerep.PersonName.from_named_components"]], "from_named_components_veterinary() (pydicom.valuerep.personname class method)": [[446, "pydicom.valuerep.PersonName.from_named_components_veterinary"]], "given_name (pydicom.valuerep.personname property)": [[446, "pydicom.valuerep.PersonName.given_name"]], "ideographic (pydicom.valuerep.personname property)": [[446, "pydicom.valuerep.PersonName.ideographic"]], "middle_name (pydicom.valuerep.personname property)": [[446, "pydicom.valuerep.PersonName.middle_name"]], "name_prefix (pydicom.valuerep.personname property)": [[446, "pydicom.valuerep.PersonName.name_prefix"]], "name_suffix (pydicom.valuerep.personname property)": [[446, "pydicom.valuerep.PersonName.name_suffix"]], "phonetic (pydicom.valuerep.personname property)": [[446, "pydicom.valuerep.PersonName.phonetic"]], "personnameunicode (in module pydicom.valuerep)": [[447, "pydicom.valuerep.PersonNameUnicode"]], "tm (class in pydicom.valuerep)": [[448, "pydicom.valuerep.TM"]], "__init__() (pydicom.valuerep.tm method)": [[448, "pydicom.valuerep.TM.__init__"]], "vr (class in pydicom.valuerep)": [[449, "pydicom.valuerep.VR"]], "__init__() (pydicom.valuerep.vr method)": [[449, "pydicom.valuerep.VR.__init__"]], "format_number_as_ds() (in module pydicom.valuerep)": [[450, "pydicom.valuerep.format_number_as_ds"]], "is_valid_ds() (in module pydicom.valuerep)": [[451, "pydicom.valuerep.is_valid_ds"]], "convert_ae_string() (in module pydicom.values)": [[452, "pydicom.values.convert_AE_string"]], "convert_atvalue() (in module pydicom.values)": [[453, "pydicom.values.convert_ATvalue"]], "convert_da_string() (in module pydicom.values)": [[454, "pydicom.values.convert_DA_string"]], "convert_ds_string() (in module pydicom.values)": [[455, "pydicom.values.convert_DS_string"]], "convert_dt_string() (in module pydicom.values)": [[456, "pydicom.values.convert_DT_string"]], "convert_is_string() (in module pydicom.values)": [[457, "pydicom.values.convert_IS_string"]], "convert_obvalue() (in module pydicom.values)": [[458, "pydicom.values.convert_OBvalue"]], "convert_owvalue() (in module pydicom.values)": [[459, "pydicom.values.convert_OWvalue"]], "convert_pn() (in module pydicom.values)": [[460, "pydicom.values.convert_PN"]], "convert_sq() (in module pydicom.values)": [[461, "pydicom.values.convert_SQ"]], "convert_tm_string() (in module pydicom.values)": [[462, "pydicom.values.convert_TM_string"]], "convert_ui() (in module pydicom.values)": [[463, "pydicom.values.convert_UI"]], "convert_un() (in module pydicom.values)": [[464, "pydicom.values.convert_UN"]], "convert_ur_string() (in module pydicom.values)": [[465, "pydicom.values.convert_UR_string"]], "convert_numbers() (in module pydicom.values)": [[466, "pydicom.values.convert_numbers"]], "convert_single_string() (in module pydicom.values)": [[467, "pydicom.values.convert_single_string"]], "convert_string() (in module pydicom.values)": [[468, "pydicom.values.convert_string"]], "convert_tag() (in module pydicom.values)": [[469, "pydicom.values.convert_tag"]], "convert_text() (in module pydicom.values)": [[470, "pydicom.values.convert_text"]], "convert_value() (in module pydicom.values)": [[471, "pydicom.values.convert_value"]], "generate_multiplex() (in module pydicom.waveforms.numpy_handler)": [[472, "pydicom.waveforms.numpy_handler.generate_multiplex"]], "is_available() (in module pydicom.waveforms.numpy_handler)": [[472, "pydicom.waveforms.numpy_handler.is_available"]], "multiplex_array() (in module pydicom.waveforms.numpy_handler)": [[472, "pydicom.waveforms.numpy_handler.multiplex_array"]], "pydicom.waveforms.numpy_handler": [[472, "module-pydicom.waveforms.numpy_handler"]], "pydicom.overlays": [[474, "module-pydicom.overlays"]], "pydicom.pixel_data_handlers": [[475, "module-pydicom.pixel_data_handlers"]], "pydicom.waveforms": [[476, "module-pydicom.waveforms"]], "pydicom": [[477, "module-pydicom"]]}})