Search.setIndex({"docnames": ["auto_examples/dicomtree", "auto_examples/image_processing/index", "auto_examples/image_processing/plot_downsize_image", "auto_examples/image_processing/plot_waveforms", "auto_examples/image_processing/reslice", "auto_examples/image_processing/sg_execution_times", "auto_examples/index", "auto_examples/input_output/index", "auto_examples/input_output/plot_printing_dataset", "auto_examples/input_output/plot_read_dicom", "auto_examples/input_output/plot_read_fileset", "auto_examples/input_output/plot_read_rtplan", "auto_examples/input_output/plot_write_dicom", "auto_examples/input_output/sg_execution_times", "auto_examples/memory_dataset", "auto_examples/metadata_processing/index", "auto_examples/metadata_processing/plot_add_dict_entries", "auto_examples/metadata_processing/plot_anonymize", "auto_examples/metadata_processing/plot_sequences", "auto_examples/metadata_processing/sg_execution_times", "auto_examples/plot_dicom_difference", "auto_examples/sg_execution_times", "auto_examples/show_charset_name", "faq/index", "guides/cli/cli_codify", "guides/cli/cli_dev", "guides/cli/cli_guide", "guides/cli/cli_intro", "guides/cli/cli_show", "guides/element_value_types", "guides/encoding/encoder_plugin_options", "guides/encoding/encoder_plugins", "guides/encoding/index", "guides/encoding/rle_lossless", "guides/glossary", "guides/index", "guides/writing_documentation", "index", "old/base_element", "old/best_practices", "old/getting_started", "old/image_data_compression", "old/image_data_handlers", "old/private_data_elements", "old/pydicom_user_guide", "old/python2_support", "old/ref_guide", "old/transition_to_pydicom1", "old/viewing_images", "old/working_with_overlays", "old/working_with_pixel_data", "old/working_with_waveforms", "old/writing_files", "reference/charset", "reference/config", "reference/data", "reference/datadict", "reference/dataset", "reference/elem", "reference/elem.dataelem", "reference/elem.multival", "reference/elem.sequence", "reference/elem.tag", "reference/elem.valuerep", "reference/elem.values", "reference/encaps", "reference/encoders", "reference/errors", "reference/fileio", "reference/fileio.base", "reference/fileio.read", "reference/fileio.util", "reference/fileio.write", "reference/fileset", "reference/generated/pydicom.charset.convert_encodings", "reference/generated/pydicom.charset.decode_bytes", "reference/generated/pydicom.charset.decode_element", "reference/generated/pydicom.charset.encode_string", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS", "reference/generated/pydicom.config.DS_decimal", "reference/generated/pydicom.config.DS_numpy", "reference/generated/pydicom.config.IGNORE", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR", "reference/generated/pydicom.config.RAISE", "reference/generated/pydicom.config.WARN", "reference/generated/pydicom.config.allow_DS_float", "reference/generated/pydicom.config.assume_implicit_vr_switch", "reference/generated/pydicom.config.convert_wrong_length_to_UN", "reference/generated/pydicom.config.data_element_callback", "reference/generated/pydicom.config.data_element_callback_kwargs", "reference/generated/pydicom.config.datetime_conversion", "reference/generated/pydicom.config.debug", "reference/generated/pydicom.config.enforce_valid_values", "reference/generated/pydicom.config.future_behavior", "reference/generated/pydicom.config.overlay_data_handlers", "reference/generated/pydicom.config.pixel_data_handlers", "reference/generated/pydicom.config.reset_data_element_callback", "reference/generated/pydicom.config.settings", "reference/generated/pydicom.config.show_file_meta", "reference/generated/pydicom.config.use_DS_decimal", "reference/generated/pydicom.config.use_DS_numpy", "reference/generated/pydicom.config.use_IS_numpy", "reference/generated/pydicom.data.get_charset_files", "reference/generated/pydicom.data.get_palette_files", "reference/generated/pydicom.data.get_testdata_file", "reference/generated/pydicom.data.get_testdata_files", "reference/generated/pydicom.datadict.add_dict_entries", "reference/generated/pydicom.datadict.add_dict_entry", "reference/generated/pydicom.datadict.add_private_dict_entries", "reference/generated/pydicom.datadict.add_private_dict_entry", "reference/generated/pydicom.datadict.dictionary_VM", "reference/generated/pydicom.datadict.dictionary_VR", "reference/generated/pydicom.datadict.dictionary_description", "reference/generated/pydicom.datadict.dictionary_has_tag", "reference/generated/pydicom.datadict.dictionary_is_retired", "reference/generated/pydicom.datadict.dictionary_keyword", "reference/generated/pydicom.datadict.get_entry", "reference/generated/pydicom.datadict.get_private_entry", "reference/generated/pydicom.datadict.keyword_for_tag", "reference/generated/pydicom.datadict.mask_match", "reference/generated/pydicom.datadict.private_dictionary_VM", "reference/generated/pydicom.datadict.private_dictionary_VR", "reference/generated/pydicom.datadict.private_dictionary_description", "reference/generated/pydicom.datadict.repeater_has_keyword", "reference/generated/pydicom.datadict.repeater_has_tag", "reference/generated/pydicom.datadict.tag_for_keyword", "reference/generated/pydicom.dataelem.DataElement", "reference/generated/pydicom.dataelem.DataElement_from_raw", "reference/generated/pydicom.dataelem.RawDataElement", "reference/generated/pydicom.dataset.Dataset", "reference/generated/pydicom.dataset.FileDataset", "reference/generated/pydicom.dataset.FileMetaDataset", "reference/generated/pydicom.dataset.PrivateBlock", "reference/generated/pydicom.dataset.validate_file_meta", "reference/generated/pydicom.encaps.decode_data_sequence", "reference/generated/pydicom.encaps.defragment_data", "reference/generated/pydicom.encaps.encapsulate", "reference/generated/pydicom.encaps.encapsulate_extended", "reference/generated/pydicom.encaps.fragment_frame", "reference/generated/pydicom.encaps.generate_pixel_data", "reference/generated/pydicom.encaps.generate_pixel_data_fragment", "reference/generated/pydicom.encaps.generate_pixel_data_frame", "reference/generated/pydicom.encaps.get_frame_offsets", "reference/generated/pydicom.encaps.itemize_fragment", "reference/generated/pydicom.encaps.itemize_frame", "reference/generated/pydicom.encaps.read_item", "reference/generated/pydicom.encoders.RLELosslessEncoder", "reference/generated/pydicom.encoders.base.Encoder", "reference/generated/pydicom.encoders.get_encoder", "reference/generated/pydicom.errors.InvalidDicomError", "reference/generated/pydicom.filebase.DicomBytesIO", "reference/generated/pydicom.filebase.DicomFile", "reference/generated/pydicom.filebase.DicomFileLike", "reference/generated/pydicom.filebase.DicomIO", "reference/generated/pydicom.filereader.data_element_generator", "reference/generated/pydicom.filereader.data_element_offset_to_value", "reference/generated/pydicom.filereader.dcmread", "reference/generated/pydicom.filereader.read_dataset", "reference/generated/pydicom.filereader.read_deferred_data_element", "reference/generated/pydicom.filereader.read_file_meta_info", "reference/generated/pydicom.filereader.read_partial", "reference/generated/pydicom.filereader.read_preamble", "reference/generated/pydicom.filereader.read_sequence", "reference/generated/pydicom.filereader.read_sequence_item", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS", "reference/generated/pydicom.fileset.FileInstance", "reference/generated/pydicom.fileset.FileSet", "reference/generated/pydicom.fileset.RecordNode", "reference/generated/pydicom.fileset.generate_filename", "reference/generated/pydicom.fileset.is_conformant_file_id", "reference/generated/pydicom.fileutil.absorb_delimiter_item", "reference/generated/pydicom.fileutil.find_bytes", "reference/generated/pydicom.fileutil.find_delimiter", "reference/generated/pydicom.fileutil.length_of_undefined_length", "reference/generated/pydicom.fileutil.read_undefined_length_value", "reference/generated/pydicom.filewriter.correct_ambiguous_vr", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element", "reference/generated/pydicom.filewriter.dcmwrite", "reference/generated/pydicom.filewriter.multi_string", "reference/generated/pydicom.filewriter.write_ATvalue", "reference/generated/pydicom.filewriter.write_DA", "reference/generated/pydicom.filewriter.write_DT", "reference/generated/pydicom.filewriter.write_OBvalue", "reference/generated/pydicom.filewriter.write_OWvalue", "reference/generated/pydicom.filewriter.write_PN", "reference/generated/pydicom.filewriter.write_TM", "reference/generated/pydicom.filewriter.write_UI", "reference/generated/pydicom.filewriter.write_UN", "reference/generated/pydicom.filewriter.write_data_element", "reference/generated/pydicom.filewriter.write_dataset", "reference/generated/pydicom.filewriter.write_file_meta_info", "reference/generated/pydicom.filewriter.write_number_string", "reference/generated/pydicom.filewriter.write_numbers", "reference/generated/pydicom.filewriter.write_sequence", "reference/generated/pydicom.filewriter.write_sequence_item", "reference/generated/pydicom.filewriter.write_string", "reference/generated/pydicom.filewriter.write_text", "reference/generated/pydicom.misc.is_dicom", "reference/generated/pydicom.misc.size_in_bytes", "reference/generated/pydicom.multival.MultiValue", "reference/generated/pydicom.overlays.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut", "reference/generated/pydicom.pixel_data_handlers.apply_rescale", "reference/generated/pydicom.pixel_data_handlers.apply_voi", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut", "reference/generated/pydicom.pixel_data_handlers.apply_windowing", "reference/generated/pydicom.pixel_data_handlers.convert_color_space", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler", "reference/generated/pydicom.pixel_data_handlers.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.pillow_handler", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler", "reference/generated/pydicom.pixel_data_handlers.rle_handler", "reference/generated/pydicom.pixel_data_handlers.util", "reference/generated/pydicom.sequence.Sequence", "reference/generated/pydicom.sequence.validate_dataset", "reference/generated/pydicom.tag.BaseTag", "reference/generated/pydicom.tag.Tag", "reference/generated/pydicom.tag.TupleTag", "reference/generated/pydicom.tag.tag_in_exception", "reference/generated/pydicom.uid.AcquisitionContextSRStorage", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage", "reference/generated/pydicom.uid.AllTransferSyntaxes", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage", "reference/generated/pydicom.uid.BasicTextSRStorage", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.BodyPositionWaveformStorage", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.CTImageStorage", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage", "reference/generated/pydicom.uid.ChestCADSRStorage", "reference/generated/pydicom.uid.ColonCADSRStorage", "reference/generated/pydicom.uid.ColorPaletteStorage", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.Comprehensive3DSRStorage", "reference/generated/pydicom.uid.ComprehensiveSRStorage", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage", "reference/generated/pydicom.uid.CornealTopographyMapStorage", "reference/generated/pydicom.uid.DICOS2DAITStorage", "reference/generated/pydicom.uid.DICOS3DAITStorage", "reference/generated/pydicom.uid.DICOSCTImageStorage", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.EddyCurrentImageStorage", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage", "reference/generated/pydicom.uid.EncapsulatedCDAStorage", "reference/generated/pydicom.uid.EncapsulatedMTLStorage", "reference/generated/pydicom.uid.EncapsulatedOBJStorage", "reference/generated/pydicom.uid.EncapsulatedPDFStorage", "reference/generated/pydicom.uid.EncapsulatedSTLStorage", "reference/generated/pydicom.uid.EnhancedCTImageStorage", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage", "reference/generated/pydicom.uid.EnhancedMRImageStorage", "reference/generated/pydicom.uid.EnhancedPETImageStorage", "reference/generated/pydicom.uid.EnhancedSRStorage", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage", "reference/generated/pydicom.uid.EnhancedXAImageStorage", "reference/generated/pydicom.uid.EnhancedXRFImageStorage", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.ExplicitVRBigEndian", "reference/generated/pydicom.uid.ExplicitVRLittleEndian", "reference/generated/pydicom.uid.ExtensibleSRStorage", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage", "reference/generated/pydicom.uid.GeneralECGWaveformStorage", "reference/generated/pydicom.uid.GenericImplantTemplateStorage", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.HEVCM10P51", "reference/generated/pydicom.uid.HEVCMP51", "reference/generated/pydicom.uid.HangingProtocolStorage", "reference/generated/pydicom.uid.HemodynamicWaveformStorage", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage", "reference/generated/pydicom.uid.ImplantationPlanSRStorage", "reference/generated/pydicom.uid.ImplicitVRLittleEndian", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pydicom.uid.JPEG2000", "reference/generated/pydicom.uid.JPEG2000Lossless", "reference/generated/pydicom.uid.JPEG2000MC", "reference/generated/pydicom.uid.JPEG2000MCLossless", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes", "reference/generated/pydicom.uid.JPEGBaseline8Bit", "reference/generated/pydicom.uid.JPEGExtended12Bit", "reference/generated/pydicom.uid.JPEGLSLossless", "reference/generated/pydicom.uid.JPEGLSNearLossless", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes", "reference/generated/pydicom.uid.JPEGLosslessP14", "reference/generated/pydicom.uid.JPEGLosslessSV1", "reference/generated/pydicom.uid.JPEGTransferSyntaxes", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pydicom.uid.LensometryMeasurementsStorage", "reference/generated/pydicom.uid.MPEG2MPHL", "reference/generated/pydicom.uid.MPEG2MPML", "reference/generated/pydicom.uid.MPEG4HP41", "reference/generated/pydicom.uid.MPEG4HP41BD", "reference/generated/pydicom.uid.MPEG4HP422D", "reference/generated/pydicom.uid.MPEG4HP423D", "reference/generated/pydicom.uid.MPEG4HP42STEREO", "reference/generated/pydicom.uid.MPEGTransferSyntaxes", "reference/generated/pydicom.uid.MRImageStorage", "reference/generated/pydicom.uid.MRSpectroscopyStorage", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pydicom.uid.MammographyCADSRStorage", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.NuclearMedicineImageStorage", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID", "reference/generated/pydicom.uid.ParametricMapStorage", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage", "reference/generated/pydicom.uid.ProcedureLogStorage", "reference/generated/pydicom.uid.ProtocolApprovalStorage", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.RE_VALID_UID", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX", "reference/generated/pydicom.uid.RLELossless", "reference/generated/pydicom.uid.RLETransferSyntaxes", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage", "reference/generated/pydicom.uid.RTDoseStorage", "reference/generated/pydicom.uid.RTImageStorage", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTIonPlanStorage", "reference/generated/pydicom.uid.RTPhysicianIntentStorage", "reference/generated/pydicom.uid.RTPlanStorage", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTRadiationSetStorage", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage", "reference/generated/pydicom.uid.RTStructureSetStorage", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pydicom.uid.RawDataStorage", "reference/generated/pydicom.uid.RealWorldValueMappingStorage", "reference/generated/pydicom.uid.RespiratoryWaveformStorage", "reference/generated/pydicom.uid.RoboticArmRadiationStorage", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage", "reference/generated/pydicom.uid.SegmentationStorage", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SpatialFiducialsStorage", "reference/generated/pydicom.uid.SpatialRegistrationStorage", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage", "reference/generated/pydicom.uid.StereometricRelationshipStorage", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage", "reference/generated/pydicom.uid.SurfaceScanMeshStorage", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage", "reference/generated/pydicom.uid.SurfaceSegmentationStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage", "reference/generated/pydicom.uid.TractographyResultsStorage", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage", "reference/generated/pydicom.uid.UID", "reference/generated/pydicom.uid.UltrasoundImageStorage", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes", "reference/generated/pydicom.uid.VLEndoscopicImageStorage", "reference/generated/pydicom.uid.VLMicroscopicImageStorage", "reference/generated/pydicom.uid.VLPhotographicImageStorage", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage", "reference/generated/pydicom.uid.VideoPhotographicImageStorage", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage", "reference/generated/pydicom.uid.XRayAngiographicImageStorage", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage", "reference/generated/pydicom.uid.generate_uid", "reference/generated/pydicom.valuerep.DA", "reference/generated/pydicom.valuerep.DS", "reference/generated/pydicom.valuerep.DSdecimal", "reference/generated/pydicom.valuerep.DSfloat", "reference/generated/pydicom.valuerep.DT", "reference/generated/pydicom.valuerep.IS", "reference/generated/pydicom.valuerep.ISfloat", "reference/generated/pydicom.valuerep.MultiString", "reference/generated/pydicom.valuerep.PersonName", "reference/generated/pydicom.valuerep.PersonNameUnicode", "reference/generated/pydicom.valuerep.TM", "reference/generated/pydicom.valuerep.VR", "reference/generated/pydicom.valuerep.format_number_as_ds", "reference/generated/pydicom.valuerep.is_valid_ds", "reference/generated/pydicom.values.convert_AE_string", "reference/generated/pydicom.values.convert_ATvalue", "reference/generated/pydicom.values.convert_DA_string", "reference/generated/pydicom.values.convert_DS_string", "reference/generated/pydicom.values.convert_DT_string", "reference/generated/pydicom.values.convert_IS_string", "reference/generated/pydicom.values.convert_OBvalue", "reference/generated/pydicom.values.convert_OWvalue", "reference/generated/pydicom.values.convert_PN", "reference/generated/pydicom.values.convert_SQ", "reference/generated/pydicom.values.convert_TM_string", "reference/generated/pydicom.values.convert_UI", "reference/generated/pydicom.values.convert_UN", "reference/generated/pydicom.values.convert_UR_string", "reference/generated/pydicom.values.convert_numbers", "reference/generated/pydicom.values.convert_single_string", "reference/generated/pydicom.values.convert_string", "reference/generated/pydicom.values.convert_tag", "reference/generated/pydicom.values.convert_text", "reference/generated/pydicom.values.convert_value", "reference/generated/pydicom.waveforms.numpy_handler", "reference/handlers", "reference/handlers.overlay_data", "reference/handlers.pixel_data", "reference/handlers.waveform_data", "reference/index", "reference/misc", "reference/uid", "release_notes/index", "release_notes/v0.9.2", "release_notes/v0.9.3", "release_notes/v0.9.4", "release_notes/v0.9.5", "release_notes/v0.9.6", "release_notes/v0.9.7", "release_notes/v0.9.8", "release_notes/v0.9.9", "release_notes/v1.0.0", "release_notes/v1.1.0", "release_notes/v1.2.0", "release_notes/v1.3.0", "release_notes/v1.4.0", "release_notes/v1.4.1", "release_notes/v2.0.0", "release_notes/v2.1.0", "release_notes/v2.1.1", "release_notes/v2.2.0", "release_notes/v2.3.0", "release_notes/v2.4.0", "release_notes/v3.0.0", "tutorials/contributing", "tutorials/contributing_code", "tutorials/contributing_docs", "tutorials/dataset_basics", "tutorials/dicom_json", "tutorials/filesets", "tutorials/index", "tutorials/installation", "tutorials/pixel_data/compressing", "tutorials/sr_basics", "tutorials/virtualenvs", "tutorials/waveforms"], "filenames": ["auto_examples/dicomtree.rst", "auto_examples/image_processing/index.rst", "auto_examples/image_processing/plot_downsize_image.rst", "auto_examples/image_processing/plot_waveforms.rst", "auto_examples/image_processing/reslice.rst", "auto_examples/image_processing/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/input_output/index.rst", "auto_examples/input_output/plot_printing_dataset.rst", "auto_examples/input_output/plot_read_dicom.rst", "auto_examples/input_output/plot_read_fileset.rst", "auto_examples/input_output/plot_read_rtplan.rst", "auto_examples/input_output/plot_write_dicom.rst", "auto_examples/input_output/sg_execution_times.rst", "auto_examples/memory_dataset.rst", "auto_examples/metadata_processing/index.rst", "auto_examples/metadata_processing/plot_add_dict_entries.rst", "auto_examples/metadata_processing/plot_anonymize.rst", "auto_examples/metadata_processing/plot_sequences.rst", "auto_examples/metadata_processing/sg_execution_times.rst", "auto_examples/plot_dicom_difference.rst", "auto_examples/sg_execution_times.rst", "auto_examples/show_charset_name.rst", "faq/index.rst", "guides/cli/cli_codify.rst", "guides/cli/cli_dev.rst", "guides/cli/cli_guide.rst", "guides/cli/cli_intro.rst", "guides/cli/cli_show.rst", "guides/element_value_types.rst", "guides/encoding/encoder_plugin_options.rst", "guides/encoding/encoder_plugins.rst", "guides/encoding/index.rst", "guides/encoding/rle_lossless.rst", "guides/glossary.rst", "guides/index.rst", "guides/writing_documentation.rst", "index.rst", "old/base_element.rst", "old/best_practices.rst", "old/getting_started.rst", "old/image_data_compression.rst", "old/image_data_handlers.rst", "old/private_data_elements.rst", "old/pydicom_user_guide.rst", "old/python2_support.rst", "old/ref_guide.rst", "old/transition_to_pydicom1.rst", "old/viewing_images.rst", "old/working_with_overlays.rst", "old/working_with_pixel_data.rst", "old/working_with_waveforms.rst", "old/writing_files.rst", "reference/charset.rst", "reference/config.rst", "reference/data.rst", "reference/datadict.rst", "reference/dataset.rst", "reference/elem.rst", "reference/elem.dataelem.rst", "reference/elem.multival.rst", "reference/elem.sequence.rst", "reference/elem.tag.rst", "reference/elem.valuerep.rst", "reference/elem.values.rst", "reference/encaps.rst", "reference/encoders.rst", "reference/errors.rst", "reference/fileio.rst", "reference/fileio.base.rst", "reference/fileio.read.rst", "reference/fileio.util.rst", "reference/fileio.write.rst", "reference/fileset.rst", "reference/generated/pydicom.charset.convert_encodings.rst", "reference/generated/pydicom.charset.decode_bytes.rst", "reference/generated/pydicom.charset.decode_element.rst", "reference/generated/pydicom.charset.encode_string.rst", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS.rst", "reference/generated/pydicom.config.DS_decimal.rst", "reference/generated/pydicom.config.DS_numpy.rst", "reference/generated/pydicom.config.IGNORE.rst", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR.rst", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR.rst", "reference/generated/pydicom.config.RAISE.rst", "reference/generated/pydicom.config.WARN.rst", "reference/generated/pydicom.config.allow_DS_float.rst", "reference/generated/pydicom.config.assume_implicit_vr_switch.rst", "reference/generated/pydicom.config.convert_wrong_length_to_UN.rst", "reference/generated/pydicom.config.data_element_callback.rst", "reference/generated/pydicom.config.data_element_callback_kwargs.rst", "reference/generated/pydicom.config.datetime_conversion.rst", "reference/generated/pydicom.config.debug.rst", "reference/generated/pydicom.config.enforce_valid_values.rst", "reference/generated/pydicom.config.future_behavior.rst", "reference/generated/pydicom.config.overlay_data_handlers.rst", "reference/generated/pydicom.config.pixel_data_handlers.rst", "reference/generated/pydicom.config.reset_data_element_callback.rst", "reference/generated/pydicom.config.settings.rst", "reference/generated/pydicom.config.show_file_meta.rst", "reference/generated/pydicom.config.use_DS_decimal.rst", "reference/generated/pydicom.config.use_DS_numpy.rst", "reference/generated/pydicom.config.use_IS_numpy.rst", "reference/generated/pydicom.data.get_charset_files.rst", "reference/generated/pydicom.data.get_palette_files.rst", "reference/generated/pydicom.data.get_testdata_file.rst", "reference/generated/pydicom.data.get_testdata_files.rst", "reference/generated/pydicom.datadict.add_dict_entries.rst", "reference/generated/pydicom.datadict.add_dict_entry.rst", "reference/generated/pydicom.datadict.add_private_dict_entries.rst", "reference/generated/pydicom.datadict.add_private_dict_entry.rst", "reference/generated/pydicom.datadict.dictionary_VM.rst", "reference/generated/pydicom.datadict.dictionary_VR.rst", "reference/generated/pydicom.datadict.dictionary_description.rst", "reference/generated/pydicom.datadict.dictionary_has_tag.rst", "reference/generated/pydicom.datadict.dictionary_is_retired.rst", "reference/generated/pydicom.datadict.dictionary_keyword.rst", "reference/generated/pydicom.datadict.get_entry.rst", "reference/generated/pydicom.datadict.get_private_entry.rst", "reference/generated/pydicom.datadict.keyword_for_tag.rst", "reference/generated/pydicom.datadict.mask_match.rst", "reference/generated/pydicom.datadict.private_dictionary_VM.rst", "reference/generated/pydicom.datadict.private_dictionary_VR.rst", "reference/generated/pydicom.datadict.private_dictionary_description.rst", "reference/generated/pydicom.datadict.repeater_has_keyword.rst", "reference/generated/pydicom.datadict.repeater_has_tag.rst", "reference/generated/pydicom.datadict.tag_for_keyword.rst", "reference/generated/pydicom.dataelem.DataElement.rst", "reference/generated/pydicom.dataelem.DataElement_from_raw.rst", "reference/generated/pydicom.dataelem.RawDataElement.rst", "reference/generated/pydicom.dataset.Dataset.rst", "reference/generated/pydicom.dataset.FileDataset.rst", "reference/generated/pydicom.dataset.FileMetaDataset.rst", "reference/generated/pydicom.dataset.PrivateBlock.rst", "reference/generated/pydicom.dataset.validate_file_meta.rst", "reference/generated/pydicom.encaps.decode_data_sequence.rst", "reference/generated/pydicom.encaps.defragment_data.rst", "reference/generated/pydicom.encaps.encapsulate.rst", "reference/generated/pydicom.encaps.encapsulate_extended.rst", "reference/generated/pydicom.encaps.fragment_frame.rst", "reference/generated/pydicom.encaps.generate_pixel_data.rst", "reference/generated/pydicom.encaps.generate_pixel_data_fragment.rst", "reference/generated/pydicom.encaps.generate_pixel_data_frame.rst", "reference/generated/pydicom.encaps.get_frame_offsets.rst", "reference/generated/pydicom.encaps.itemize_fragment.rst", "reference/generated/pydicom.encaps.itemize_frame.rst", "reference/generated/pydicom.encaps.read_item.rst", "reference/generated/pydicom.encoders.RLELosslessEncoder.rst", "reference/generated/pydicom.encoders.base.Encoder.rst", "reference/generated/pydicom.encoders.get_encoder.rst", "reference/generated/pydicom.errors.InvalidDicomError.rst", "reference/generated/pydicom.filebase.DicomBytesIO.rst", "reference/generated/pydicom.filebase.DicomFile.rst", "reference/generated/pydicom.filebase.DicomFileLike.rst", "reference/generated/pydicom.filebase.DicomIO.rst", "reference/generated/pydicom.filereader.data_element_generator.rst", "reference/generated/pydicom.filereader.data_element_offset_to_value.rst", "reference/generated/pydicom.filereader.dcmread.rst", "reference/generated/pydicom.filereader.read_dataset.rst", "reference/generated/pydicom.filereader.read_deferred_data_element.rst", "reference/generated/pydicom.filereader.read_file_meta_info.rst", "reference/generated/pydicom.filereader.read_partial.rst", "reference/generated/pydicom.filereader.read_preamble.rst", "reference/generated/pydicom.filereader.read_sequence.rst", "reference/generated/pydicom.filereader.read_sequence_item.rst", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS.rst", "reference/generated/pydicom.fileset.FileInstance.rst", "reference/generated/pydicom.fileset.FileSet.rst", "reference/generated/pydicom.fileset.RecordNode.rst", "reference/generated/pydicom.fileset.generate_filename.rst", "reference/generated/pydicom.fileset.is_conformant_file_id.rst", "reference/generated/pydicom.fileutil.absorb_delimiter_item.rst", "reference/generated/pydicom.fileutil.find_bytes.rst", "reference/generated/pydicom.fileutil.find_delimiter.rst", "reference/generated/pydicom.fileutil.length_of_undefined_length.rst", "reference/generated/pydicom.fileutil.read_undefined_length_value.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element.rst", "reference/generated/pydicom.filewriter.dcmwrite.rst", "reference/generated/pydicom.filewriter.multi_string.rst", "reference/generated/pydicom.filewriter.write_ATvalue.rst", "reference/generated/pydicom.filewriter.write_DA.rst", "reference/generated/pydicom.filewriter.write_DT.rst", "reference/generated/pydicom.filewriter.write_OBvalue.rst", "reference/generated/pydicom.filewriter.write_OWvalue.rst", "reference/generated/pydicom.filewriter.write_PN.rst", "reference/generated/pydicom.filewriter.write_TM.rst", "reference/generated/pydicom.filewriter.write_UI.rst", "reference/generated/pydicom.filewriter.write_UN.rst", "reference/generated/pydicom.filewriter.write_data_element.rst", "reference/generated/pydicom.filewriter.write_dataset.rst", "reference/generated/pydicom.filewriter.write_file_meta_info.rst", "reference/generated/pydicom.filewriter.write_number_string.rst", "reference/generated/pydicom.filewriter.write_numbers.rst", "reference/generated/pydicom.filewriter.write_sequence.rst", "reference/generated/pydicom.filewriter.write_sequence_item.rst", "reference/generated/pydicom.filewriter.write_string.rst", "reference/generated/pydicom.filewriter.write_text.rst", "reference/generated/pydicom.misc.is_dicom.rst", "reference/generated/pydicom.misc.size_in_bytes.rst", "reference/generated/pydicom.multival.MultiValue.rst", "reference/generated/pydicom.overlays.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_rescale.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_windowing.rst", "reference/generated/pydicom.pixel_data_handlers.convert_color_space.rst", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler.rst", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler.rst", "reference/generated/pydicom.pixel_data_handlers.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pillow_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler.rst", "reference/generated/pydicom.pixel_data_handlers.rle_handler.rst", "reference/generated/pydicom.pixel_data_handlers.util.rst", "reference/generated/pydicom.sequence.Sequence.rst", "reference/generated/pydicom.sequence.validate_dataset.rst", "reference/generated/pydicom.tag.BaseTag.rst", "reference/generated/pydicom.tag.Tag.rst", "reference/generated/pydicom.tag.TupleTag.rst", "reference/generated/pydicom.tag.tag_in_exception.rst", "reference/generated/pydicom.uid.AcquisitionContextSRStorage.rst", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pydicom.uid.AllTransferSyntaxes.rst", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage.rst", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage.rst", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage.rst", "reference/generated/pydicom.uid.BasicTextSRStorage.rst", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.BodyPositionWaveformStorage.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CTImageStorage.rst", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pydicom.uid.ChestCADSRStorage.rst", "reference/generated/pydicom.uid.ColonCADSRStorage.rst", "reference/generated/pydicom.uid.ColorPaletteStorage.rst", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.Comprehensive3DSRStorage.rst", "reference/generated/pydicom.uid.ComprehensiveSRStorage.rst", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage.rst", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage.rst", "reference/generated/pydicom.uid.CornealTopographyMapStorage.rst", "reference/generated/pydicom.uid.DICOS2DAITStorage.rst", "reference/generated/pydicom.uid.DICOS3DAITStorage.rst", "reference/generated/pydicom.uid.DICOSCTImageStorage.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage.rst", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage.rst", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.EddyCurrentImageStorage.rst", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage.rst", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage.rst", "reference/generated/pydicom.uid.EncapsulatedCDAStorage.rst", "reference/generated/pydicom.uid.EncapsulatedMTLStorage.rst", "reference/generated/pydicom.uid.EncapsulatedOBJStorage.rst", "reference/generated/pydicom.uid.EncapsulatedPDFStorage.rst", "reference/generated/pydicom.uid.EncapsulatedSTLStorage.rst", "reference/generated/pydicom.uid.EnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.EnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.EnhancedSRStorage.rst", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage.rst", "reference/generated/pydicom.uid.EnhancedXAImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRFImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.ExplicitVRBigEndian.rst", "reference/generated/pydicom.uid.ExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.ExtensibleSRStorage.rst", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralECGWaveformStorage.rst", "reference/generated/pydicom.uid.GenericImplantTemplateStorage.rst", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.HEVCM10P51.rst", "reference/generated/pydicom.uid.HEVCMP51.rst", "reference/generated/pydicom.uid.HangingProtocolStorage.rst", "reference/generated/pydicom.uid.HemodynamicWaveformStorage.rst", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage.rst", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage.rst", "reference/generated/pydicom.uid.ImplantationPlanSRStorage.rst", "reference/generated/pydicom.uid.ImplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pydicom.uid.JPEG2000.rst", "reference/generated/pydicom.uid.JPEG2000Lossless.rst", "reference/generated/pydicom.uid.JPEG2000MC.rst", "reference/generated/pydicom.uid.JPEG2000MCLossless.rst", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGBaseline8Bit.rst", "reference/generated/pydicom.uid.JPEGExtended12Bit.rst", "reference/generated/pydicom.uid.JPEGLSLossless.rst", "reference/generated/pydicom.uid.JPEGLSNearLossless.rst", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGLosslessP14.rst", "reference/generated/pydicom.uid.JPEGLosslessSV1.rst", "reference/generated/pydicom.uid.JPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.LensometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.MPEG2MPHL.rst", "reference/generated/pydicom.uid.MPEG2MPML.rst", "reference/generated/pydicom.uid.MPEG4HP41.rst", "reference/generated/pydicom.uid.MPEG4HP41BD.rst", "reference/generated/pydicom.uid.MPEG4HP422D.rst", "reference/generated/pydicom.uid.MPEG4HP423D.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREO.rst", "reference/generated/pydicom.uid.MPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.MRImageStorage.rst", "reference/generated/pydicom.uid.MRSpectroscopyStorage.rst", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pydicom.uid.MammographyCADSRStorage.rst", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage.rst", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.NuclearMedicineImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage.rst", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID.rst", "reference/generated/pydicom.uid.ParametricMapStorage.rst", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage.rst", "reference/generated/pydicom.uid.ProcedureLogStorage.rst", "reference/generated/pydicom.uid.ProtocolApprovalStorage.rst", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.RE_VALID_UID.rst", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX.rst", "reference/generated/pydicom.uid.RLELossless.rst", "reference/generated/pydicom.uid.RLETransferSyntaxes.rst", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTDoseStorage.rst", "reference/generated/pydicom.uid.RTImageStorage.rst", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTIonPlanStorage.rst", "reference/generated/pydicom.uid.RTPhysicianIntentStorage.rst", "reference/generated/pydicom.uid.RTPlanStorage.rst", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage.rst", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetStorage.rst", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage.rst", "reference/generated/pydicom.uid.RTStructureSetStorage.rst", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage.rst", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.RawDataStorage.rst", "reference/generated/pydicom.uid.RealWorldValueMappingStorage.rst", "reference/generated/pydicom.uid.RespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.RoboticArmRadiationStorage.rst", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.SegmentationStorage.rst", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SpatialFiducialsStorage.rst", "reference/generated/pydicom.uid.SpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage.rst", "reference/generated/pydicom.uid.StereometricRelationshipStorage.rst", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.SurfaceScanMeshStorage.rst", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage.rst", "reference/generated/pydicom.uid.SurfaceSegmentationStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage.rst", "reference/generated/pydicom.uid.TractographyResultsStorage.rst", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage.rst", "reference/generated/pydicom.uid.UID.rst", "reference/generated/pydicom.uid.UltrasoundImageStorage.rst", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes.rst", "reference/generated/pydicom.uid.VLEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VLMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage.rst", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage.rst", "reference/generated/pydicom.uid.XRayAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pydicom.uid.generate_uid.rst", "reference/generated/pydicom.valuerep.DA.rst", "reference/generated/pydicom.valuerep.DS.rst", "reference/generated/pydicom.valuerep.DSdecimal.rst", "reference/generated/pydicom.valuerep.DSfloat.rst", "reference/generated/pydicom.valuerep.DT.rst", "reference/generated/pydicom.valuerep.IS.rst", "reference/generated/pydicom.valuerep.ISfloat.rst", "reference/generated/pydicom.valuerep.MultiString.rst", "reference/generated/pydicom.valuerep.PersonName.rst", "reference/generated/pydicom.valuerep.PersonNameUnicode.rst", "reference/generated/pydicom.valuerep.TM.rst", "reference/generated/pydicom.valuerep.VR.rst", "reference/generated/pydicom.valuerep.format_number_as_ds.rst", "reference/generated/pydicom.valuerep.is_valid_ds.rst", "reference/generated/pydicom.values.convert_AE_string.rst", "reference/generated/pydicom.values.convert_ATvalue.rst", "reference/generated/pydicom.values.convert_DA_string.rst", "reference/generated/pydicom.values.convert_DS_string.rst", "reference/generated/pydicom.values.convert_DT_string.rst", "reference/generated/pydicom.values.convert_IS_string.rst", "reference/generated/pydicom.values.convert_OBvalue.rst", "reference/generated/pydicom.values.convert_OWvalue.rst", "reference/generated/pydicom.values.convert_PN.rst", "reference/generated/pydicom.values.convert_SQ.rst", "reference/generated/pydicom.values.convert_TM_string.rst", "reference/generated/pydicom.values.convert_UI.rst", "reference/generated/pydicom.values.convert_UN.rst", "reference/generated/pydicom.values.convert_UR_string.rst", "reference/generated/pydicom.values.convert_numbers.rst", "reference/generated/pydicom.values.convert_single_string.rst", "reference/generated/pydicom.values.convert_string.rst", "reference/generated/pydicom.values.convert_tag.rst", "reference/generated/pydicom.values.convert_text.rst", "reference/generated/pydicom.values.convert_value.rst", "reference/generated/pydicom.waveforms.numpy_handler.rst", "reference/handlers.rst", "reference/handlers.overlay_data.rst", "reference/handlers.pixel_data.rst", "reference/handlers.waveform_data.rst", "reference/index.rst", "reference/misc.rst", "reference/uid.rst", "release_notes/index.rst", "release_notes/v0.9.2.rst", "release_notes/v0.9.3.rst", "release_notes/v0.9.4.rst", "release_notes/v0.9.5.rst", "release_notes/v0.9.6.rst", "release_notes/v0.9.7.rst", "release_notes/v0.9.8.rst", "release_notes/v0.9.9.rst", "release_notes/v1.0.0.rst", "release_notes/v1.1.0.rst", "release_notes/v1.2.0.rst", "release_notes/v1.3.0.rst", "release_notes/v1.4.0.rst", "release_notes/v1.4.1.rst", "release_notes/v2.0.0.rst", "release_notes/v2.1.0.rst", "release_notes/v2.1.1.rst", "release_notes/v2.2.0.rst", "release_notes/v2.3.0.rst", "release_notes/v2.4.0.rst", "release_notes/v3.0.0.rst", "tutorials/contributing.rst", "tutorials/contributing_code.rst", "tutorials/contributing_docs.rst", "tutorials/dataset_basics.rst", "tutorials/dicom_json.rst", "tutorials/filesets.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/pixel_data/compressing.rst", "tutorials/sr_basics.rst", "tutorials/virtualenvs.rst", "tutorials/waveforms.rst"], "titles": ["Show a dicom file using hierarchical tree", "Image processing", "Downsize MRI image using pydicom", "Decode and plot Waveform Data", "Load CT slices and plot axial, sagittal and coronal images", "Computation times", "General examples", "Input-output", "Format the output of the data set printing", "Read a Dataset and plot Pixel Data", "Read a DICOM File-set", "Read RTPLAN DICOM and list information", "Write DICOM data", "Computation times", "Show working with memory-based dataset", "Metadata processing", "Add dictionary items in the standard DICOM dictionary", "Anonymize DICOM data", "Working with sequences", "Computation times", "Analyse differences between DICOM files", "Computation times", "Display unicode person names", "Frequently asked questions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">codify</span></code> command", "Extending the CLI", "Command-line Interface Guide", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">show</span></code> command", "Element VRs and Python types", "Encoder Plugins Options", "Pixel Data Encoder Plugins", "Pixel Data Encoding", "RLE Lossless Encoding", "Glossary", "Guides", "Writing documentation", "pydicom documentation", "Core elements in pydicom", "Best Practices", "Introduction to pydicom", "Compressing <em>Pixel Data</em>", "Handling of compressed pixel data", "Private Data Elements", "pydicom User Guide", "Python 2 Support", "Reading and writing DICOM files", "Transition to pydicom 1.x", "Viewing Images", "Working with Overlay Data", "Working with Pixel Data", "Working with Waveform Data", "Writing DICOM Files", "Character Encoding and Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.charset</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.config</span></code>)", "Getting Included Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.data</span></code>)", "Data Dictionary Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.datadict</span></code>)", "Representation of Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataset</span></code>)", "Representation of Data Elements", "Data Elements (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataelem</span></code>)", "Element Multi-value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.multival</span></code>)", "Sequence Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sequence</span></code>)", "Element Tags (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.tag</span></code>)", "Specialized Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.valuerep</span></code>)", "Element Value Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.values</span></code>)", "Bulk Data Encapsulation Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encaps</span></code>)", "Pixel Data Encoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encoders</span></code>)", "Exceptions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.errors</span></code>)", "Dataset IO", "IO Base Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filebase</span></code>)", "Dataset Reading (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filereader</span></code>)", "IO Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileutil</span></code>)", "Dataset Writing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filewriter</span></code>)", "DICOM File-sets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileset</span></code>)", "pydicom.charset.convert_encodings", "pydicom.charset.decode_bytes", "pydicom.charset.decode_element", "pydicom.charset.encode_string", "pydicom.config.APPLY_J2K_CORRECTIONS", "pydicom.config.DS_decimal", "pydicom.config.DS_numpy", "pydicom.config.IGNORE", "pydicom.config.INVALID_KEYWORD_BEHAVIOR", "pydicom.config.INVALID_KEY_BEHAVIOR", "pydicom.config.RAISE", "pydicom.config.WARN", "pydicom.config.allow_DS_float", "pydicom.config.assume_implicit_vr_switch", "pydicom.config.convert_wrong_length_to_UN", "pydicom.config.data_element_callback", "pydicom.config.data_element_callback_kwargs", "pydicom.config.datetime_conversion", "pydicom.config.debug", "pydicom.config.enforce_valid_values", "pydicom.config.future_behavior", "pydicom.config.overlay_data_handlers", "pydicom.config.pixel_data_handlers", "pydicom.config.reset_data_element_callback", "pydicom.config.settings", "pydicom.config.show_file_meta", "pydicom.config.use_DS_decimal", "pydicom.config.use_DS_numpy", "pydicom.config.use_IS_numpy", "pydicom.data.get_charset_files", "pydicom.data.get_palette_files", "pydicom.data.get_testdata_file", "pydicom.data.get_testdata_files", "pydicom.datadict.add_dict_entries", "pydicom.datadict.add_dict_entry", "pydicom.datadict.add_private_dict_entries", "pydicom.datadict.add_private_dict_entry", "pydicom.datadict.dictionary_VM", "pydicom.datadict.dictionary_VR", "pydicom.datadict.dictionary_description", "pydicom.datadict.dictionary_has_tag", "pydicom.datadict.dictionary_is_retired", "pydicom.datadict.dictionary_keyword", "pydicom.datadict.get_entry", "pydicom.datadict.get_private_entry", "pydicom.datadict.keyword_for_tag", "pydicom.datadict.mask_match", "pydicom.datadict.private_dictionary_VM", "pydicom.datadict.private_dictionary_VR", "pydicom.datadict.private_dictionary_description", "pydicom.datadict.repeater_has_keyword", "pydicom.datadict.repeater_has_tag", "pydicom.datadict.tag_for_keyword", "pydicom.dataelem.DataElement", "pydicom.dataelem.DataElement_from_raw", "pydicom.dataelem.RawDataElement", "pydicom.dataset.Dataset", "pydicom.dataset.FileDataset", "pydicom.dataset.FileMetaDataset", "pydicom.dataset.PrivateBlock", "pydicom.dataset.validate_file_meta", "pydicom.encaps.decode_data_sequence", "pydicom.encaps.defragment_data", "pydicom.encaps.encapsulate", "pydicom.encaps.encapsulate_extended", "pydicom.encaps.fragment_frame", "pydicom.encaps.generate_pixel_data", "pydicom.encaps.generate_pixel_data_fragment", "pydicom.encaps.generate_pixel_data_frame", "pydicom.encaps.get_frame_offsets", "pydicom.encaps.itemize_fragment", "pydicom.encaps.itemize_frame", "pydicom.encaps.read_item", "pydicom.encoders.RLELosslessEncoder", "pydicom.encoders.base.Encoder", "pydicom.encoders.get_encoder", "pydicom.errors.InvalidDicomError", "pydicom.filebase.DicomBytesIO", "pydicom.filebase.DicomFile", "pydicom.filebase.DicomFileLike", "pydicom.filebase.DicomIO", "pydicom.filereader.data_element_generator", "pydicom.filereader.data_element_offset_to_value", "pydicom.filereader.dcmread", "pydicom.filereader.read_dataset", "pydicom.filereader.read_deferred_data_element", "pydicom.filereader.read_file_meta_info", "pydicom.filereader.read_partial", "pydicom.filereader.read_preamble", "pydicom.filereader.read_sequence", "pydicom.filereader.read_sequence_item", "pydicom.fileset.DIRECTORY_RECORDERS", "pydicom.fileset.FileInstance", "pydicom.fileset.FileSet", "pydicom.fileset.RecordNode", "pydicom.fileset.generate_filename", "pydicom.fileset.is_conformant_file_id", "pydicom.fileutil.absorb_delimiter_item", "pydicom.fileutil.find_bytes", "pydicom.fileutil.find_delimiter", "pydicom.fileutil.length_of_undefined_length", "pydicom.fileutil.read_undefined_length_value", "pydicom.filewriter.correct_ambiguous_vr", "pydicom.filewriter.correct_ambiguous_vr_element", "pydicom.filewriter.dcmwrite", "pydicom.filewriter.multi_string", "pydicom.filewriter.write_ATvalue", "pydicom.filewriter.write_DA", "pydicom.filewriter.write_DT", "pydicom.filewriter.write_OBvalue", "pydicom.filewriter.write_OWvalue", "pydicom.filewriter.write_PN", "pydicom.filewriter.write_TM", "pydicom.filewriter.write_UI", "pydicom.filewriter.write_UN", "pydicom.filewriter.write_data_element", "pydicom.filewriter.write_dataset", "pydicom.filewriter.write_file_meta_info", "pydicom.filewriter.write_number_string", "pydicom.filewriter.write_numbers", "pydicom.filewriter.write_sequence", "pydicom.filewriter.write_sequence_item", "pydicom.filewriter.write_string", "pydicom.filewriter.write_text", "pydicom.misc.is_dicom", "pydicom.misc.size_in_bytes", "pydicom.multival.MultiValue", "pydicom.overlays.numpy_handler", "pydicom.pixel_data_handlers.apply_color_lut", "pydicom.pixel_data_handlers.apply_modality_lut", "pydicom.pixel_data_handlers.apply_rescale", "pydicom.pixel_data_handlers.apply_voi", "pydicom.pixel_data_handlers.apply_voi_lut", "pydicom.pixel_data_handlers.apply_windowing", "pydicom.pixel_data_handlers.convert_color_space", "pydicom.pixel_data_handlers.gdcm_handler", "pydicom.pixel_data_handlers.jpeg_ls_handler", "pydicom.pixel_data_handlers.numpy_handler", "pydicom.pixel_data_handlers.pillow_handler", "pydicom.pixel_data_handlers.pylibjpeg_handler", "pydicom.pixel_data_handlers.rle_handler", "pydicom.pixel_data_handlers.util", "pydicom.sequence.Sequence", "pydicom.sequence.validate_dataset", "pydicom.tag.BaseTag", "pydicom.tag.Tag", "pydicom.tag.TupleTag", "pydicom.tag.tag_in_exception", "pydicom.uid.AcquisitionContextSRStorage", "pydicom.uid.AdvancedBlendingPresentationStateStorage", "pydicom.uid.AllTransferSyntaxes", "pydicom.uid.AmbulatoryECGWaveformStorage", "pydicom.uid.ArterialPulseWaveformStorage", "pydicom.uid.AutorefractionMeasurementsStorage", "pydicom.uid.BasicStructuredDisplayStorage", "pydicom.uid.BasicTextSRStorage", "pydicom.uid.BasicVoiceAudioWaveformStorage", "pydicom.uid.BlendingSoftcopyPresentationStateStorage", "pydicom.uid.BodyPositionWaveformStorage", "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "pydicom.uid.BreastTomosynthesisImageStorage", "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "pydicom.uid.CArmPhotonElectronRadiationStorage", "pydicom.uid.CTDefinedProcedureProtocolStorage", "pydicom.uid.CTImageStorage", "pydicom.uid.CTPerformedProcedureProtocolStorage", "pydicom.uid.CardiacElectrophysiologyWaveformStorage", "pydicom.uid.ChestCADSRStorage", "pydicom.uid.ColonCADSRStorage", "pydicom.uid.ColorPaletteStorage", "pydicom.uid.ColorSoftcopyPresentationStateStorage", "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.Comprehensive3DSRStorage", "pydicom.uid.ComprehensiveSRStorage", "pydicom.uid.ComputedRadiographyImageStorage", "pydicom.uid.ContentAssessmentResultsStorage", "pydicom.uid.CornealTopographyMapStorage", "pydicom.uid.DICOS2DAITStorage", "pydicom.uid.DICOS3DAITStorage", "pydicom.uid.DICOSCTImageStorage", "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "pydicom.uid.DICOSQuadrupoleResonanceStorage", "pydicom.uid.DICOSThreatDetectionReportStorage", "pydicom.uid.DeflatedExplicitVRLittleEndian", "pydicom.uid.DeformableSpatialRegistrationStorage", "pydicom.uid.DermoscopicPhotographyImageStorage", "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "pydicom.uid.DigitalXRayImageStorageForPresentation", "pydicom.uid.DigitalXRayImageStorageForProcessing", "pydicom.uid.EddyCurrentImageStorage", "pydicom.uid.EddyCurrentMultiFrameImageStorage", "pydicom.uid.ElectromyogramWaveformStorage", "pydicom.uid.ElectrooculogramWaveformStorage", "pydicom.uid.EncapsulatedCDAStorage", "pydicom.uid.EncapsulatedMTLStorage", "pydicom.uid.EncapsulatedOBJStorage", "pydicom.uid.EncapsulatedPDFStorage", "pydicom.uid.EncapsulatedSTLStorage", "pydicom.uid.EnhancedCTImageStorage", "pydicom.uid.EnhancedMRColorImageStorage", "pydicom.uid.EnhancedMRImageStorage", "pydicom.uid.EnhancedPETImageStorage", "pydicom.uid.EnhancedSRStorage", "pydicom.uid.EnhancedUSVolumeStorage", "pydicom.uid.EnhancedXAImageStorage", "pydicom.uid.EnhancedXRFImageStorage", "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "pydicom.uid.ExplicitVRBigEndian", "pydicom.uid.ExplicitVRLittleEndian", "pydicom.uid.ExtensibleSRStorage", "pydicom.uid.GeneralAudioWaveformStorage", "pydicom.uid.GeneralECGWaveformStorage", "pydicom.uid.GenericImplantTemplateStorage", "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.HEVCM10P51", "pydicom.uid.HEVCMP51", "pydicom.uid.HangingProtocolStorage", "pydicom.uid.HemodynamicWaveformStorage", "pydicom.uid.ImplantAssemblyTemplateStorage", "pydicom.uid.ImplantTemplateGroupStorage", "pydicom.uid.ImplantationPlanSRStorage", "pydicom.uid.ImplicitVRLittleEndian", "pydicom.uid.IntraocularLensCalculationsStorage", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pydicom.uid.JPEG2000", "pydicom.uid.JPEG2000Lossless", "pydicom.uid.JPEG2000MC", "pydicom.uid.JPEG2000MCLossless", "pydicom.uid.JPEG2000TransferSyntaxes", "pydicom.uid.JPEGBaseline8Bit", "pydicom.uid.JPEGExtended12Bit", "pydicom.uid.JPEGLSLossless", "pydicom.uid.JPEGLSNearLossless", "pydicom.uid.JPEGLSTransferSyntaxes", "pydicom.uid.JPEGLosslessP14", "pydicom.uid.JPEGLosslessSV1", "pydicom.uid.JPEGTransferSyntaxes", "pydicom.uid.KeratometryMeasurementsStorage", "pydicom.uid.KeyObjectSelectionDocumentStorage", "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "pydicom.uid.LensometryMeasurementsStorage", "pydicom.uid.MPEG2MPHL", "pydicom.uid.MPEG2MPML", "pydicom.uid.MPEG4HP41", "pydicom.uid.MPEG4HP41BD", "pydicom.uid.MPEG4HP422D", "pydicom.uid.MPEG4HP423D", "pydicom.uid.MPEG4HP42STEREO", "pydicom.uid.MPEGTransferSyntaxes", "pydicom.uid.MRImageStorage", "pydicom.uid.MRSpectroscopyStorage", "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "pydicom.uid.MammographyCADSRStorage", "pydicom.uid.MediaStorageDirectoryStorage", "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "pydicom.uid.MultichannelRespiratoryWaveformStorage", "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.NuclearMedicineImageStorage", "pydicom.uid.OphthalmicAxialMeasurementsStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pydicom.uid.OphthalmicPhotography16BitImageStorage", "pydicom.uid.OphthalmicPhotography8BitImageStorage", "pydicom.uid.OphthalmicThicknessMapStorage", "pydicom.uid.OphthalmicTomographyImageStorage", "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "pydicom.uid.PYDICOM_ROOT_UID", "pydicom.uid.ParametricMapStorage", "pydicom.uid.PatientRadiationDoseSRStorage", "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "pydicom.uid.PositronEmissionTomographyImageStorage", "pydicom.uid.ProcedureLogStorage", "pydicom.uid.ProtocolApprovalStorage", "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "pydicom.uid.RE_VALID_UID", "pydicom.uid.RE_VALID_UID_PREFIX", "pydicom.uid.RLELossless", "pydicom.uid.RLETransferSyntaxes", "pydicom.uid.RTBeamsDeliveryInstructionStorage", "pydicom.uid.RTBeamsTreatmentRecordStorage", "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "pydicom.uid.RTBrachyTreatmentRecordStorage", "pydicom.uid.RTDoseStorage", "pydicom.uid.RTImageStorage", "pydicom.uid.RTIonBeamsTreatmentRecordStorage", "pydicom.uid.RTIonPlanStorage", "pydicom.uid.RTPhysicianIntentStorage", "pydicom.uid.RTPlanStorage", "pydicom.uid.RTRadiationRecordSetStorage", "pydicom.uid.RTRadiationSalvageRecordStorage", "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "pydicom.uid.RTRadiationSetStorage", "pydicom.uid.RTSegmentAnnotationStorage", "pydicom.uid.RTStructureSetStorage", "pydicom.uid.RTTreatmentPreparationStorage", "pydicom.uid.RTTreatmentSummaryRecordStorage", "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "pydicom.uid.RawDataStorage", "pydicom.uid.RealWorldValueMappingStorage", "pydicom.uid.RespiratoryWaveformStorage", "pydicom.uid.RoboticArmRadiationStorage", "pydicom.uid.RoboticRadiationRecordStorage", "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "pydicom.uid.SecondaryCaptureImageStorage", "pydicom.uid.SegmentationStorage", "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.SimplifiedAdultEchoSRStorage", "pydicom.uid.SleepElectroencephalogramWaveformStorage", "pydicom.uid.SpatialFiducialsStorage", "pydicom.uid.SpatialRegistrationStorage", "pydicom.uid.SpectaclePrescriptionReportStorage", "pydicom.uid.StereometricRelationshipStorage", "pydicom.uid.SubjectiveRefractionMeasurementsStorage", "pydicom.uid.SurfaceScanMeshStorage", "pydicom.uid.SurfaceScanPointCloudStorage", "pydicom.uid.SurfaceSegmentationStorage", "pydicom.uid.TomotherapeuticRadiationRecordStorage", "pydicom.uid.TomotherapeuticRadiationStorage", "pydicom.uid.TractographyResultsStorage", "pydicom.uid.TwelveLeadECGWaveformStorage", "pydicom.uid.UID", "pydicom.uid.UltrasoundImageStorage", "pydicom.uid.UltrasoundMultiFrameImageStorage", "pydicom.uid.UncompressedTransferSyntaxes", "pydicom.uid.VLEndoscopicImageStorage", "pydicom.uid.VLMicroscopicImageStorage", "pydicom.uid.VLPhotographicImageStorage", "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "pydicom.uid.VLWholeSlideMicroscopyImageStorage", "pydicom.uid.VideoEndoscopicImageStorage", "pydicom.uid.VideoMicroscopicImageStorage", "pydicom.uid.VideoPhotographicImageStorage", "pydicom.uid.VisualAcuityMeasurementsStorage", "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pydicom.uid.XADefinedProcedureProtocolStorage", "pydicom.uid.XAPerformedProcedureProtocolStorage", "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.XRay3DAngiographicImageStorage", "pydicom.uid.XRay3DCraniofacialImageStorage", "pydicom.uid.XRayAngiographicImageStorage", "pydicom.uid.XRayRadiationDoseSRStorage", "pydicom.uid.XRayRadiofluoroscopicImageStorage", "pydicom.uid.generate_uid", "pydicom.valuerep.DA", "pydicom.valuerep.DS", "pydicom.valuerep.DSdecimal", "pydicom.valuerep.DSfloat", "pydicom.valuerep.DT", "pydicom.valuerep.IS", "pydicom.valuerep.ISfloat", "pydicom.valuerep.MultiString", "pydicom.valuerep.PersonName", "pydicom.valuerep.PersonNameUnicode", "pydicom.valuerep.TM", "pydicom.valuerep.VR", "pydicom.valuerep.format_number_as_ds", "pydicom.valuerep.is_valid_ds", "pydicom.values.convert_AE_string", "pydicom.values.convert_ATvalue", "pydicom.values.convert_DA_string", "pydicom.values.convert_DS_string", "pydicom.values.convert_DT_string", "pydicom.values.convert_IS_string", "pydicom.values.convert_OBvalue", "pydicom.values.convert_OWvalue", "pydicom.values.convert_PN", "pydicom.values.convert_SQ", "pydicom.values.convert_TM_string", "pydicom.values.convert_UI", "pydicom.values.convert_UN", "pydicom.values.convert_UR_string", "pydicom.values.convert_numbers", "pydicom.values.convert_single_string", "pydicom.values.convert_string", "pydicom.values.convert_tag", "pydicom.values.convert_text", "pydicom.values.convert_value", "pydicom.waveforms.numpy_handler", "Bulk Data Handlers", "Overlay Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.overlays</span></code>)", "Pixel Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixel_data_handlers</span></code>)", "Waveform Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.waveforms</span></code>)", "API Reference", "Miscellaneous (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.misc</span></code>)", "UID Definitions and Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.uid</span></code>)", "Release notes", "Version 0.9.2", "Version 0.9.3", "Version 0.9.4", "Version 0.9.5", "Version 0.9.6", "Version 0.9.7", "Version 0.9.8", "Version 0.9.9", "Version 1.0.0", "Version 1.1.0", "Version 1.2.0", "Version 1.3.0", "Version 1.4.0", "Version 1.4.1", "Version 2.0.0", "Version 2.1.0", "Version 2.1.1", "Version 2.2.0", "Version 2.3.0", "Version 2.4.0", "Version 3.0.0", "Contributing to pydicom", "Contributing a source code change", "Contributing a documentation change", "Dataset basics: read, access, modify, write", "Introduction to JSON support", "DICOM File-sets and DICOMDIR", "Tutorials", "How to install pydicom", "Compressing <em>Pixel Data</em>", "Structured Reporting", "Creating and managing virtual environments", "Waveforms"], "terms": {"go": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 47, 52, 160, 499, 500, 501, 503, 505, 508], "end": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 139, 158, 173, 175, 200, 215, 476, 482, 489, 508], "download": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 105, 476, 492, 494, 495, 496], "full": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 43, 47, 105, 131, 157, 476, 485, 486, 487, 492, 503, 506], "exampl": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 25, 27, 28, 31, 34, 36, 38, 39, 40, 41, 43, 47, 48, 49, 50, 52, 82, 83, 107, 108, 109, 127, 130, 138, 148, 157, 165, 167, 178, 409, 433, 442, 476, 477, 478, 479, 481, 482, 484, 488, 492, 494, 498, 499, 500, 503, 506, 509], "code": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 29, 38, 40, 44, 46, 47, 52, 75, 76, 94, 130, 155, 157, 160, 476, 477, 479, 483, 484, 485, 487, 489, 492, 494, 498, 500, 504, 505, 507, 509], "graphic": [0, 48, 50], "window": [0, 2, 8, 20, 26, 27, 39, 44, 206, 207, 215, 476, 477, 485, 489, 495, 499, 500, 501, 505], "sudo": 0, "apt": 0, "instal": [0, 37, 39, 42, 47, 48, 95, 96, 213, 476, 477, 484, 494, 500, 501, 504, 506, 509], "tix": [0, 476, 477], "dev": 0, "pip": [0, 26, 27, 47, 499, 500, 506, 509], "u": [0, 2, 20, 26, 28, 29, 109, 176, 177, 468, 476, 478, 502, 503, 505, 506, 509], "pydicom": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 25, 29, 31, 33, 35, 36, 42, 45, 46, 49, 50, 51, 52, 58, 68, 469, 473, 477, 479, 480, 481, 482, 483, 484, 485, 486, 489, 491, 492, 494, 499, 500, 501, 502, 503, 504, 507, 508, 509], "python3": [0, 500, 501, 503, 508], "dicomtre": [0, 21, 476, 477], "py": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 38, 48, 52, 82, 83, 95, 96, 476, 477, 480, 481, 482, 483, 484, 485, 493, 499, 501, 503, 506], "dcm": [0, 2, 3, 8, 9, 10, 11, 12, 17, 20, 24, 26, 27, 28, 33, 36, 38, 40, 41, 43, 48, 49, 50, 51, 130, 157, 165, 167, 476, 492, 500, 501, 502, 503, 506, 507, 509], "Or": [0, 38, 505], "browser": [0, 500], "right": [0, 20], "click": [0, 499, 500], "open": [0, 9, 23, 25, 26, 158, 476, 479, 499, 500, 501], "custom": [0, 8, 26, 28, 31, 165, 167, 476, 477, 478, 485, 488, 492], "command": [0, 25, 27, 35, 40, 52, 130, 476, 484, 494, 496, 499, 500, 505, 508], "import": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 31, 33, 34, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 82, 83, 107, 108, 127, 130, 138, 148, 165, 167, 409, 433, 476, 482, 485, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509], "tkinter": [0, 22, 44, 476, 477, 479], "tkinter_tix": 0, "print": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 38, 49, 108, 110, 130, 476, 478, 489, 500, 501, 503, 508, 509], "__doc__": [0, 2, 8, 11, 14, 16, 17, 20, 22], "usag": [0, 14, 24, 26, 27, 28, 33, 38, 44, 208, 215, 442, 476, 489, 503], "python": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 43, 44, 47, 52, 74, 75, 77, 92, 130, 209, 210, 212, 409, 476, 477, 479, 480, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 496, 497, 499, 500, 501, 502, 505, 506, 508, 509], "dicom_filenam": [0, 14], "def": [0, 8, 11, 14, 17, 25, 26, 31, 95, 96, 130, 165, 499, 502], "runtre": 0, "w": [0, 501], "filenam": [0, 2, 8, 11, 12, 17, 20, 24, 26, 27, 28, 38, 40, 48, 50, 103, 104, 105, 106, 130, 131, 159, 160, 167, 169, 178, 476, 491, 499, 501, 502, 503], "top": [0, 16, 20, 26, 27, 28, 36, 49, 130, 158, 167, 476, 497, 500, 501], "frame": [0, 2, 8, 20, 31, 41, 50, 130, 137, 138, 139, 140, 141, 142, 143, 145, 148, 201, 208, 213, 214, 215, 476, 485, 487, 489, 494, 497, 506], "relief": 0, "rais": [0, 39, 54, 74, 75, 77, 79, 80, 82, 83, 95, 96, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 121, 122, 123, 128, 130, 132, 133, 134, 141, 143, 148, 150, 157, 159, 162, 167, 175, 176, 178, 191, 200, 201, 209, 210, 211, 212, 213, 214, 215, 221, 433, 446, 451, 453, 465, 473, 476, 480, 481, 486, 488, 489, 492, 494, 495, 501, 503, 506], "bd": 0, "1": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 38, 40, 41, 42, 43, 45, 49, 50, 51, 60, 75, 77, 78, 82, 83, 85, 94, 95, 96, 104, 105, 107, 108, 109, 110, 127, 129, 130, 133, 134, 137, 138, 139, 140, 143, 144, 145, 147, 148, 149, 153, 157, 169, 178, 191, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 214, 215, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 442, 468, 477, 480, 483, 491, 494, 497, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509], "option": [0, 2, 8, 17, 20, 25, 27, 28, 29, 31, 32, 39, 42, 48, 79, 80, 92, 103, 104, 105, 106, 108, 110, 127, 128, 130, 131, 134, 137, 139, 140, 142, 145, 148, 155, 157, 158, 161, 167, 168, 169, 175, 178, 201, 202, 205, 206, 207, 208, 211, 213, 214, 215, 216, 219, 433, 441, 442, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 473, 476, 478, 479, 485, 489, 492, 494, 500, 503, 508, 509], "hlist": 0, "column": [0, 2, 8, 9, 20, 26, 28, 31, 49, 50, 130, 148, 201, 208, 211, 213, 214, 215, 506], "2": [0, 2, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 38, 39, 41, 42, 43, 44, 50, 51, 54, 75, 77, 78, 80, 82, 83, 84, 87, 94, 95, 96, 98, 99, 101, 102, 105, 107, 108, 109, 110, 127, 129, 130, 132, 133, 134, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 157, 165, 178, 191, 201, 203, 204, 205, 206, 207, 208, 211, 213, 214, 215, 216, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 442, 451, 453, 468, 479, 480, 482, 483, 485, 486, 488, 489, 499, 501, 503, 505, 506, 508, 509], "pack": [0, 22, 34, 49, 215, 476, 486, 487, 492, 495], "expand": [0, 26, 28, 215, 476, 495, 500, 503], "fill": [0, 4, 499, 500], "both": [0, 33, 39, 40, 74, 79, 80, 95, 96, 143, 167, 178, 206, 215, 476, 478, 485, 488, 491, 502, 508], "padx": 0, "10": [0, 11, 20, 23, 26, 28, 49, 51, 143, 169, 178, 191, 336, 369, 375, 394, 476, 483, 487, 500, 501, 503, 509], "padi": 0, "side": [0, 20], "left": [0, 20, 49, 500], "kei": [0, 4, 30, 31, 38, 83, 127, 130, 133, 148, 165, 168, 201, 218, 476, 492, 499], "see": [0, 23, 24, 26, 27, 28, 31, 33, 38, 39, 40, 41, 47, 50, 52, 54, 127, 130, 133, 147, 148, 155, 158, 161, 165, 173, 174, 175, 178, 191, 195, 440, 442, 476, 479, 489, 490, 491, 494, 499, 500, 501, 503, 505, 506, 507, 508], "avail": [0, 1, 6, 10, 15, 24, 26, 27, 28, 30, 31, 38, 43, 47, 48, 50, 51, 52, 105, 130, 131, 137, 138, 148, 153, 167, 178, 209, 210, 212, 215, 442, 451, 453, 476, 478, 479, 483, 485, 486, 487, 489, 492, 503, 505, 506, 507, 508, 509], "configur": [0, 34, 39, 98, 127, 130, 215, 473, 476, 487, 494, 495], "bg": 0, "white": [0, 33, 476, 484], "font": 0, "courier": 0, "indent": [0, 8, 130, 168, 501], "30": [0, 24, 26, 27, 28, 51, 52, 355, 500], "selectbackground": 0, "light": 0, "yellow": 0, "gap": 0, "150": [0, 20, 51], "box": [0, 23, 36], "buttonbox": 0, "orient": [0, 2, 8, 20], "horizont": [0, 215], "add": [0, 2, 6, 10, 12, 15, 18, 19, 20, 25, 26, 27, 31, 36, 38, 39, 41, 49, 107, 109, 110, 127, 130, 133, 137, 138, 148, 165, 167, 168, 215, 476, 485, 488, 494, 496, 499, 500, 501, 503, 506, 509], "ok": [0, 82, 83, 167, 499], "text": [0, 20, 22, 29, 38, 43, 127, 157, 194, 195, 197, 457, 463, 464, 466, 467, 476, 478, 487, 499, 500, 501], "underlin": 0, "0": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 31, 33, 34, 38, 39, 40, 41, 45, 48, 49, 50, 51, 79, 80, 81, 99, 101, 102, 127, 129, 130, 132, 133, 138, 148, 153, 163, 164, 165, 169, 170, 201, 205, 206, 207, 211, 213, 214, 215, 353, 354, 363, 364, 433, 451, 453, 457, 465, 468, 473, 493, 500, 501, 503, 505, 506, 508, 509], "destroi": 0, "width": [0, 2, 8, 20, 127, 206, 207, 215, 501], "6": [0, 2, 8, 10, 20, 23, 26, 28, 29, 34, 42, 43, 45, 50, 54, 76, 127, 129, 130, 139, 208, 211, 215, 257, 282, 292, 342, 370, 388, 399, 407, 410, 417, 423, 442, 477, 482, 483, 485, 492, 493, 496, 500, 501, 503, 509], "exit": [0, 14, 24, 26, 27, 28], "bottom": [0, 20, 36, 499, 500], "x": [0, 2, 3, 8, 9, 20, 26, 27, 28, 36, 45, 476, 488, 499, 500, 501, 506, 508, 509], "http": [0, 23, 36, 48, 95, 499, 500, 502, 505], "stackoverflow": [0, 498], "com": [0, 2, 8, 9, 11, 12, 16, 17, 20, 22, 23, 95, 499, 500, 505], "question": [0, 40, 47, 498], "17355902": 0, "bind": 0, "mousewheel": 0, "scrollbar": 0, "bind_al": 0, "lambda": [0, 4], "event": 0, "yview_scrol": 0, "wheel": [0, 505, 508], "int": [0, 29, 31, 38, 54, 75, 83, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 133, 137, 139, 140, 142, 143, 145, 148, 153, 154, 155, 156, 157, 158, 161, 163, 164, 167, 168, 169, 172, 173, 174, 175, 190, 199, 200, 201, 205, 206, 207, 215, 216, 218, 219, 220, 409, 435, 436, 437, 439, 440, 441, 442, 457, 462, 465, 468, 501], "delta": [0, 20], "120": [0, 20, 51], "unit": [0, 50, 130, 157, 201, 215, 468, 499, 509], "button": [0, 20], "4": [0, 2, 8, 9, 10, 12, 16, 20, 23, 24, 26, 28, 33, 34, 36, 38, 42, 43, 45, 50, 95, 104, 105, 127, 129, 130, 137, 139, 140, 141, 143, 144, 145, 173, 174, 178, 191, 201, 202, 203, 204, 205, 206, 207, 208, 211, 215, 216, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 465, 482, 487, 488, 491, 492, 494, 499, 501, 503, 507, 508, 509], "up": [0, 41, 49, 50, 130, 167, 168, 175, 178, 213, 433, 441, 442, 476, 479, 483, 485, 499, 500, 501, 504, 505, 506, 508], "linux": [0, 39, 476, 485, 500, 505], "5": [0, 8, 9, 10, 12, 16, 20, 22, 23, 24, 26, 29, 33, 34, 38, 41, 42, 45, 50, 51, 54, 127, 129, 130, 133, 137, 139, 140, 141, 142, 143, 145, 147, 149, 178, 195, 201, 205, 206, 207, 208, 214, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 302, 303, 304, 318, 319, 320, 321, 322, 323, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 442, 491, 492, 499, 500, 501, 503, 506, 508, 509], "down": [0, 198, 499, 503], "show_fil": 0, "root": [0, 9, 10, 22, 26, 27, 95, 96, 167, 168, 170, 354, 433, 501, 503], "d": [0, 2, 3, 8, 9, 10, 12, 16, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 38, 40, 41, 42, 43, 48, 49, 50, 51, 52, 54, 58, 63, 79, 80, 82, 83, 95, 96, 100, 101, 107, 108, 109, 127, 130, 137, 138, 148, 157, 165, 167, 176, 177, 192, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 436, 437, 442, 446, 451, 468, 476, 482, 483, 491, 494, 496, 499, 500, 501, 502, 503, 506, 509], "dcmread": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 20, 38, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 68, 89, 105, 131, 150, 155, 158, 161, 167, 175, 178, 199, 476, 485, 491, 492, 494, 500, 501, 502, 503, 506, 509], "decod": [0, 1, 5, 6, 34, 37, 58, 75, 76, 127, 130, 143, 148, 157, 209, 210, 212, 213, 214, 442, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 473, 476, 480, 487, 488, 489, 492, 494, 495, 503, 505], "chang": [0, 10, 12, 25, 26, 27, 33, 36, 39, 40, 41, 42, 49, 50, 54, 80, 94, 105, 130, 134, 143, 167, 206, 208, 209, 210, 211, 212, 213, 214, 215, 219, 433, 451, 453, 491, 498, 501, 502, 504, 505, 506, 507, 508], "string": [0, 17, 20, 25, 26, 29, 38, 54, 75, 76, 77, 108, 127, 130, 133, 148, 157, 168, 179, 188, 192, 196, 197, 200, 218, 435, 436, 437, 439, 440, 441, 442, 446, 447, 451, 453, 462, 463, 464, 476, 479, 481, 482, 486, 487, 492, 494, 502], "unicod": [0, 6, 21, 29, 75, 77, 442, 476, 477, 479, 480, 496], "recurse_tre": 0, "fals": [0, 3, 4, 10, 12, 14, 29, 31, 36, 39, 41, 43, 54, 78, 79, 80, 83, 86, 88, 91, 92, 93, 94, 95, 96, 100, 101, 102, 105, 114, 115, 124, 125, 127, 130, 131, 134, 137, 138, 148, 154, 155, 157, 161, 162, 167, 169, 170, 173, 174, 175, 178, 191, 198, 208, 211, 213, 215, 409, 435, 436, 437, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 461, 462, 464, 465, 468, 476, 482, 486, 491, 494, 496, 501, 503, 509], "autosetmod": 0, "dataset": [0, 2, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 33, 34, 36, 39, 40, 42, 43, 44, 46, 47, 48, 52, 71, 78, 82, 83, 89, 95, 96, 99, 105, 106, 107, 108, 127, 128, 135, 137, 138, 140, 142, 148, 157, 158, 161, 163, 164, 165, 166, 167, 168, 176, 177, 178, 190, 191, 195, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 468, 473, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 500, 503, 504, 505, 506, 509], "parent": [0, 26, 27, 130, 133, 167, 168, 216, 476, 486, 503], "hide": 0, "order": [0, 4, 30, 31, 34, 50, 95, 96, 130, 131, 133, 140, 148, 154, 168, 172, 176, 177, 214, 215, 216, 476, 477, 484, 487, 489, 499, 508, 509], "tag": [0, 16, 17, 26, 28, 29, 40, 43, 44, 47, 49, 50, 54, 58, 83, 95, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 141, 143, 144, 145, 154, 155, 157, 158, 159, 161, 167, 175, 176, 180, 195, 201, 211, 213, 214, 215, 465, 468, 473, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 497, 501, 502], "data_el": [0, 8, 17, 130, 180, 183, 184, 187, 189, 194, 195, 209, 501, 502], "node_id": 0, "hex": [0, 36, 49, 127, 130, 133, 476, 479], "id": [0, 2, 8, 9, 10, 12, 17, 20, 43, 133, 166, 167, 168, 169, 170, 215, 476, 478, 495, 501, 503], "isinst": 0, "valu": [0, 2, 8, 9, 10, 12, 17, 20, 26, 28, 29, 30, 31, 33, 34, 36, 38, 39, 41, 43, 49, 50, 52, 54, 58, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 91, 94, 102, 108, 110, 111, 112, 121, 122, 127, 129, 130, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 148, 156, 157, 159, 165, 167, 175, 176, 177, 178, 179, 188, 193, 194, 195, 200, 201, 202, 203, 204, 205, 206, 208, 211, 213, 214, 215, 216, 218, 433, 434, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 468, 473, 476, 477, 478, 481, 482, 483, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 505, 506, 507, 509], "str": [0, 20, 29, 31, 38, 74, 75, 76, 77, 86, 90, 95, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 148, 149, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 178, 179, 185, 189, 190, 193, 194, 195, 196, 197, 198, 199, 201, 202, 208, 214, 215, 218, 219, 409, 433, 435, 436, 437, 439, 440, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 476, 486, 491, 494, 501], "els": [0, 3, 4, 8, 33, 130, 154, 158, 172, 175, 435, 501], "hide_entri": 0, "vr": [0, 2, 8, 12, 16, 17, 20, 26, 27, 28, 35, 37, 38, 41, 42, 43, 54, 58, 63, 80, 87, 88, 91, 100, 101, 107, 108, 109, 110, 112, 117, 118, 122, 127, 128, 129, 130, 131, 133, 139, 155, 156, 158, 159, 167, 176, 177, 178, 183, 184, 187, 191, 192, 211, 224, 409, 434, 436, 437, 438, 439, 440, 442, 444, 448, 457, 459, 461, 462, 463, 464, 466, 467, 476, 477, 478, 479, 480, 482, 483, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 497, 501, 502, 506], "sq": [0, 8, 29, 54, 127, 130, 155, 457, 476, 482, 492, 495, 501], "sequenc": [0, 2, 3, 6, 8, 15, 19, 20, 24, 26, 27, 28, 29, 36, 44, 51, 52, 58, 75, 77, 87, 130, 139, 140, 141, 142, 158, 163, 164, 168, 171, 172, 178, 194, 195, 200, 203, 204, 205, 206, 215, 442, 457, 468, 473, 476, 477, 478, 482, 483, 486, 488, 489, 490, 492, 493, 494, 495, 496, 503, 509], "i": [0, 2, 3, 4, 10, 16, 17, 20, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 58, 63, 69, 71, 74, 75, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 94, 95, 96, 102, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 138, 140, 141, 142, 143, 144, 145, 148, 150, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 191, 192, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 409, 433, 434, 438, 440, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 461, 462, 464, 465, 476, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509], "enumer": [0, 4, 509], "item_id": 0, "sq_item_descript": 0, "name": [0, 2, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 31, 33, 36, 38, 39, 40, 41, 42, 43, 52, 95, 105, 108, 110, 117, 118, 121, 122, 123, 127, 130, 134, 148, 149, 157, 178, 191, 202, 215, 409, 442, 476, 477, 478, 479, 482, 485, 486, 487, 492, 494, 495, 496, 499, 500, 501, 503, 506, 507, 508, 509], "replac": [0, 17, 74, 75, 77, 108, 476, 488, 495], "xxx": [0, 12, 52], "i18n": 0, "item_text": 0, "f": [0, 2, 3, 4, 8, 9, 10, 12, 18, 20, 127, 130, 165, 167, 499, 503, 506, 509], "": [0, 2, 3, 4, 8, 9, 10, 12, 16, 17, 20, 24, 25, 26, 27, 28, 31, 34, 36, 37, 38, 41, 43, 46, 47, 48, 49, 50, 52, 82, 91, 92, 95, 96, 109, 115, 119, 126, 127, 130, 131, 137, 140, 143, 146, 148, 157, 167, 168, 176, 177, 178, 200, 208, 215, 218, 219, 353, 354, 445, 446, 447, 449, 456, 457, 464, 466, 467, 476, 478, 479, 481, 486, 487, 489, 492, 494, 498, 499, 500, 501, 503, 505, 506, 508, 509], "true": [0, 10, 12, 20, 29, 31, 33, 36, 38, 39, 41, 43, 51, 54, 78, 79, 80, 86, 87, 91, 92, 94, 95, 96, 99, 105, 114, 115, 124, 125, 127, 129, 130, 131, 134, 137, 141, 143, 148, 150, 155, 157, 158, 162, 166, 167, 168, 170, 172, 173, 174, 175, 178, 191, 198, 201, 206, 208, 209, 210, 211, 212, 213, 214, 215, 218, 409, 436, 437, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 461, 462, 464, 465, 468, 476, 480, 482, 492, 494, 496, 497, 501, 503, 506, 509], "__name__": [0, 14, 25, 26], "__main__": [0, 14, 25, 26], "sy": [0, 4, 14, 509], "len": [0, 3, 4, 8, 10, 14, 33, 501, 503, 509], "argv": [0, 4, 14], "pleas": [0, 14, 25, 26, 28, 38, 40, 476, 483, 494, 499, 500], "suppli": [0, 12, 14, 48, 52, 77, 157, 167, 202, 215, 433, 442, 501, 503], "n": [0, 2, 8, 11, 14, 20, 26, 28, 191, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 468, 503, 508], "tk": [0, 22], "geometri": 0, "1200x900": 0, "titl": [0, 2, 20, 26, 28, 36, 43, 191, 442, 499, 500, 501], "viewer": [0, 48], "mainloop": [0, 22], "total": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 137, 138, 190, 201, 215, 506], "run": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 38, 39, 40, 52, 108, 130, 442, 476, 479, 482, 492, 500, 501, 504, 505, 508], "time": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 26, 27, 28, 29, 38, 39, 47, 52, 89, 91, 108, 131, 159, 172, 175, 215, 435, 444, 476, 479, 485, 494, 498, 499, 500, 501, 503, 509], "script": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 52, 476, 486, 498], "minut": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "000": [0, 4, 5, 14, 21, 22, 509], "second": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 34, 39, 46, 442, 509], "sourc": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 23, 26, 28, 31, 43, 52, 54, 74, 75, 76, 77, 79, 80, 92, 94, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 476, 484, 492, 494, 497, 498, 500, 501, 504, 505, 509], "jupyt": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "notebook": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "ipynb": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "galleri": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "gener": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 25, 26, 27, 31, 33, 38, 39, 42, 45, 52, 139, 140, 141, 142, 145, 155, 161, 169, 216, 219, 433, 440, 468, 476, 478, 479, 483, 485, 500, 506], "sphinx": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 36, 476, 480, 500], "These": [1, 6, 7, 15, 35, 38, 39, 47, 476, 492, 501], "illustr": [1, 3, 4, 6, 7, 8, 9, 15, 16, 18, 20, 37, 38], "which": [1, 6, 20, 23, 24, 25, 26, 31, 34, 36, 38, 41, 43, 47, 48, 50, 51, 52, 75, 76, 82, 108, 127, 130, 154, 155, 158, 160, 165, 167, 178, 191, 214, 215, 433, 435, 476, 477, 480, 482, 484, 492, 499, 500, 501, 502, 503, 505, 506, 508, 509], "can": [1, 6, 10, 14, 17, 24, 25, 26, 27, 28, 29, 31, 36, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 94, 130, 137, 138, 148, 157, 158, 165, 167, 193, 200, 435, 440, 441, 476, 477, 478, 479, 482, 491, 492, 495, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509], "appli": [1, 6, 10, 34, 50, 51, 65, 76, 78, 130, 167, 202, 203, 204, 205, 206, 207, 215, 476, 489, 492, 500, 505, 509], "dicom": [1, 2, 4, 6, 7, 9, 13, 14, 15, 19, 21, 22, 23, 27, 28, 29, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 54, 57, 59, 68, 70, 72, 74, 75, 76, 82, 87, 92, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 132, 133, 137, 139, 140, 141, 142, 143, 144, 145, 148, 150, 154, 155, 157, 158, 160, 161, 162, 167, 178, 189, 191, 193, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 214, 215, 218, 219, 409, 433, 436, 437, 440, 442, 445, 446, 462, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 500, 501, 502, 504, 506, 507], "downsiz": [1, 5, 6, 50], "mri": [1, 5, 6, 50], "us": [1, 3, 5, 6, 7, 9, 10, 12, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 46, 47, 49, 50, 51, 66, 75, 76, 77, 78, 82, 83, 86, 92, 93, 94, 95, 96, 100, 101, 105, 108, 110, 127, 128, 130, 131, 137, 138, 140, 148, 150, 153, 155, 157, 158, 160, 161, 165, 167, 168, 169, 175, 176, 177, 178, 193, 194, 195, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 215, 216, 219, 221, 433, 436, 440, 442, 446, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 507, 509], "plot": [1, 5, 6, 7, 13, 476, 488, 509], "waveform": [1, 5, 6, 37, 44, 130, 165, 469, 473, 476, 492, 496, 504], "data": [1, 2, 5, 6, 7, 10, 11, 13, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 44, 48, 52, 54, 60, 61, 62, 63, 75, 76, 77, 78, 80, 82, 95, 96, 99, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 155, 156, 157, 159, 161, 165, 167, 174, 178, 193, 194, 195, 201, 202, 209, 210, 211, 212, 213, 214, 215, 433, 445, 462, 468, 473, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505], "load": [1, 5, 6, 10, 12, 14, 158, 166, 167, 175, 476, 488, 492, 493, 494], "ct": [1, 5, 6, 9, 10, 12, 20, 26, 28, 43, 50, 476, 488, 501, 503, 506], "slice": [1, 2, 5, 6, 8, 9, 20, 26, 28, 130, 476, 485, 486, 488], "axial": [1, 5, 6, 20, 26, 28, 476, 488, 501], "sagitt": [1, 5, 6, 476, 488], "coron": [1, 5, 6, 476, 488], "thi": [2, 3, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 31, 34, 36, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 52, 54, 74, 79, 80, 81, 84, 85, 87, 94, 95, 96, 108, 127, 130, 132, 137, 140, 141, 142, 148, 155, 157, 160, 166, 167, 184, 195, 198, 200, 202, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 218, 435, 436, 437, 440, 442, 446, 447, 473, 483, 485, 488, 489, 494, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509], "show": [2, 3, 4, 6, 9, 10, 12, 17, 21, 24, 25, 27, 36, 43, 48, 52, 108, 127, 476, 477, 481, 483, 494, 496, 500, 501, 509], "how": [2, 3, 8, 9, 10, 12, 14, 16, 17, 18, 20, 24, 26, 31, 36, 37, 40, 41, 42, 48, 49, 50, 51, 52, 108, 127, 167, 441, 476, 477, 481, 499, 500, 501, 502, 503, 504, 508, 509], "an": [2, 10, 11, 23, 24, 26, 27, 28, 29, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 54, 74, 75, 76, 82, 83, 84, 87, 95, 96, 105, 108, 114, 117, 118, 124, 127, 128, 130, 131, 133, 139, 140, 141, 142, 143, 144, 145, 148, 154, 157, 158, 167, 168, 177, 178, 188, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 215, 216, 218, 219, 221, 409, 434, 436, 437, 438, 439, 440, 442, 444, 446, 462, 468, 476, 479, 480, 486, 488, 489, 491, 492, 494, 495, 497, 499, 500, 501, 503, 505, 506, 507, 508, 509], "mr": [2, 8, 10, 20, 49, 50, 442, 503], "from": [2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 28, 29, 31, 33, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 70, 74, 75, 77, 79, 82, 83, 89, 95, 96, 107, 108, 117, 118, 127, 128, 129, 130, 131, 132, 134, 135, 138, 139, 140, 142, 143, 145, 146, 148, 154, 155, 156, 159, 162, 165, 166, 167, 168, 169, 178, 191, 193, 200, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 409, 433, 436, 437, 442, 447, 465, 476, 479, 480, 481, 482, 483, 484, 487, 488, 491, 492, 493, 494, 499, 500, 501, 503, 505, 506, 507, 508, 509], "512": [2, 20, 157, 201, 476, 486], "im": 2, "64": [2, 8, 20, 29, 34, 50, 211, 215, 433, 468, 476, 479, 509], "The": [2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 74, 75, 76, 77, 95, 96, 98, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 155, 157, 159, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 191, 193, 194, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 433, 441, 442, 446, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 476, 479, 486, 487, 492, 497, 499, 500, 501, 502, 505, 506, 507, 508, 509], "perform": [2, 31, 34, 39, 41, 81, 111, 112, 113, 115, 116, 126, 130, 134, 167, 213, 455, 476, 483, 486, 487, 505, 509], "take": [2, 24, 25, 26, 31, 34, 36, 41, 48, 52, 130, 155, 165, 200, 476, 483, 499, 500, 501, 503, 508], "central": 2, "section": [2, 24, 25, 26, 27, 33, 36, 38, 41, 43, 47, 50, 52, 54, 99, 127, 130, 133, 137, 139, 145, 178, 191, 195, 201, 208, 215, 442, 499, 500], "instead": [2, 31, 38, 40, 47, 50, 51, 52, 93, 127, 130, 155, 165, 167, 178, 214, 433, 440, 442, 476, 479, 482, 486, 487, 488, 491, 492, 494, 495, 497, 499, 500, 501, 502, 503, 505, 506, 509], "averagin": 2, "pixel": [2, 4, 6, 7, 8, 13, 20, 23, 24, 26, 28, 35, 36, 37, 38, 40, 44, 48, 49, 52, 65, 78, 96, 130, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 157, 161, 178, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 215, 473, 476, 477, 479, 480, 485, 486, 487, 488, 489, 491, 492, 494, 495, 497, 499, 501, 504, 505], "final": [2, 17, 105, 137, 501, 509], "store": [2, 8, 10, 17, 20, 29, 33, 34, 38, 43, 50, 105, 127, 130, 157, 178, 192, 203, 204, 215, 434, 436, 437, 438, 439, 440, 444, 476, 479, 494, 501, 502, 503, 509], "requir": [2, 10, 12, 20, 26, 27, 33, 34, 38, 39, 41, 43, 49, 50, 51, 52, 95, 127, 130, 137, 139, 140, 141, 142, 148, 154, 157, 167, 176, 178, 191, 200, 201, 202, 206, 207, 209, 210, 211, 213, 214, 215, 219, 446, 476, 479, 483, 487, 491, 492, 497, 500, 501, 503, 505, 506, 509], "numpi": [2, 3, 4, 23, 31, 33, 36, 38, 41, 42, 49, 50, 51, 80, 95, 96, 101, 102, 130, 148, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 451, 453, 468, 476, 477, 485, 487, 488, 489, 491, 495, 499, 505, 506, 508, 509], "librari": [2, 23, 25, 26, 38, 39, 44, 47, 50, 215, 476, 479, 482, 500, 506], "manipul": [2, 23, 40, 127, 469, 505], "ha": [2, 10, 14, 20, 24, 25, 26, 27, 31, 33, 34, 36, 39, 40, 41, 43, 47, 50, 52, 80, 87, 89, 127, 130, 139, 141, 143, 148, 158, 159, 166, 167, 168, 178, 179, 200, 201, 209, 210, 211, 212, 213, 214, 215, 218, 433, 435, 468, 476, 478, 479, 481, 486, 487, 489, 490, 491, 496, 499, 500, 501, 502, 503, 506, 508, 509], "voxel": 2, "downsampl": [2, 33], "8": [2, 8, 11, 20, 22, 23, 26, 27, 31, 33, 34, 38, 42, 50, 79, 133, 148, 169, 170, 201, 205, 206, 207, 211, 213, 214, 215, 223, 232, 302, 346, 353, 354, 374, 426, 433, 468, 478, 481, 485, 487, 489, 492, 495, 496, 509], "inform": [2, 6, 7, 8, 9, 12, 13, 20, 24, 26, 27, 28, 32, 34, 35, 36, 38, 41, 43, 47, 48, 50, 52, 78, 99, 127, 130, 131, 132, 134, 148, 157, 160, 162, 178, 191, 442, 476, 477, 479, 482, 485, 489, 491, 492, 497, 499, 500, 501, 506, 508, 509], "set": [2, 6, 7, 12, 13, 18, 20, 25, 26, 27, 28, 29, 34, 37, 38, 39, 41, 42, 44, 45, 49, 50, 52, 54, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 89, 90, 91, 93, 94, 100, 101, 102, 108, 127, 128, 130, 141, 143, 157, 158, 159, 165, 166, 167, 169, 170, 175, 178, 436, 440, 442, 446, 447, 473, 476, 477, 482, 485, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 501, 502, 504, 505, 506, 508, 509], "after": [2, 8, 20, 26, 27, 28, 36, 48, 139, 141, 162, 168, 173, 174, 175, 178, 191, 476, 491, 494, 499, 500, 501, 503, 505, 506, 508], "file_meta": [2, 12, 20, 26, 27, 28, 38, 41, 42, 43, 47, 130, 131, 132, 134, 178, 191, 476, 479, 491, 503, 506], "0002": [2, 12, 20, 26, 27, 28, 34, 38, 43, 50, 130, 134, 178, 191, 211, 213, 214, 215, 353, 501, 505], "0000": [2, 8, 20, 26, 27, 28, 38, 43, 178, 191, 501], "file": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 18, 19, 21, 25, 27, 28, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 70, 72, 83, 87, 92, 99, 103, 104, 105, 106, 108, 130, 131, 132, 134, 146, 150, 153, 154, 155, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 178, 180, 189, 190, 191, 193, 194, 195, 198, 473, 477, 478, 479, 481, 482, 485, 488, 489, 491, 492, 494, 495, 496, 497, 499, 500, 501, 504, 506], "meta": [2, 8, 12, 20, 26, 27, 28, 38, 43, 52, 99, 130, 131, 132, 134, 157, 160, 178, 191, 476, 479, 482, 485, 491, 501], "group": [2, 17, 20, 26, 27, 28, 38, 40, 43, 49, 51, 95, 117, 119, 127, 130, 131, 132, 133, 134, 157, 165, 167, 178, 191, 201, 218, 219, 220, 442, 468, 476, 479, 482, 486, 491, 492, 498, 499, 501, 509], "length": [2, 8, 20, 26, 27, 28, 38, 39, 43, 51, 54, 88, 119, 127, 129, 130, 137, 138, 139, 141, 143, 144, 145, 154, 155, 171, 174, 178, 190, 191, 201, 211, 214, 215, 476, 481, 482, 486, 488, 492, 494, 495, 496, 497, 501], "ul": [2, 16, 20, 26, 27, 28, 29, 38, 43, 107, 108, 109, 191, 468, 501, 503], "190": [2, 20, 38], "0001": [2, 20, 26, 27, 28, 38, 43, 130, 134, 191, 501], "version": [2, 8, 20, 24, 26, 27, 28, 34, 36, 38, 40, 43, 44, 45, 54, 75, 77, 78, 80, 82, 83, 87, 94, 95, 96, 98, 99, 101, 102, 104, 105, 109, 110, 127, 130, 132, 133, 134, 137, 139, 143, 144, 145, 147, 148, 149, 191, 198, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 214, 215, 216, 218, 219, 433, 442, 451, 453, 468, 499, 500, 501, 502, 507, 508], "ob": [2, 16, 20, 26, 27, 28, 29, 38, 43, 139, 183, 191, 454, 476, 480, 495, 501, 502], "b": [2, 8, 11, 12, 20, 22, 26, 27, 28, 34, 38, 43, 49, 50, 127, 130, 178, 442, 499, 500, 501, 508], "x00": [2, 8, 20, 26, 27, 28, 38, 43, 49, 501], "x01": [2, 8, 20, 26, 27, 28, 38, 43, 50, 501], "media": [2, 12, 20, 26, 27, 28, 38, 43, 130, 134, 189, 191, 501, 503], "storag": [2, 9, 12, 14, 20, 26, 27, 28, 38, 43, 50, 130, 134, 189, 191, 473, 476, 479, 480, 485, 495, 501, 503, 509], "sop": [2, 8, 9, 10, 12, 20, 26, 27, 28, 33, 38, 43, 50, 51, 134, 160, 165, 166, 167, 168, 178, 191, 202, 215, 473, 476, 485, 486, 492, 495, 496, 501, 506], "class": [2, 8, 9, 12, 14, 20, 26, 27, 28, 36, 37, 38, 43, 47, 50, 51, 54, 66, 68, 79, 127, 129, 130, 131, 132, 133, 134, 148, 151, 153, 154, 157, 166, 167, 168, 178, 191, 200, 216, 218, 353, 409, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 473, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 489, 491, 492, 495, 496, 497, 500, 501, 503, 506, 507], "uid": [2, 8, 10, 12, 20, 26, 27, 28, 29, 31, 32, 33, 34, 38, 41, 42, 43, 47, 50, 52, 96, 130, 134, 137, 138, 148, 149, 166, 167, 178, 191, 202, 209, 210, 211, 212, 213, 214, 215, 441, 459, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 499, 501, 503, 505, 506], "ui": [2, 12, 16, 20, 26, 27, 28, 29, 38, 43, 187, 191, 459, 476, 479, 489, 501], "0003": [2, 12, 20, 26, 27, 28, 38, 43, 134, 191, 501], "instanc": [2, 8, 10, 12, 20, 26, 27, 28, 29, 31, 33, 38, 43, 46, 48, 50, 66, 76, 86, 130, 134, 147, 148, 157, 158, 165, 166, 167, 168, 178, 191, 200, 202, 215, 216, 217, 435, 436, 437, 476, 488, 494, 497, 501, 506, 507], "3": [2, 4, 8, 10, 12, 16, 17, 20, 22, 23, 26, 28, 29, 31, 33, 34, 38, 39, 42, 43, 45, 50, 51, 54, 98, 105, 107, 108, 109, 110, 127, 129, 130, 133, 148, 165, 178, 191, 201, 203, 204, 205, 206, 207, 208, 211, 213, 214, 215, 219, 225, 235, 241, 258, 260, 262, 263, 271, 276, 278, 318, 336, 339, 361, 362, 382, 400, 411, 416, 433, 473, 479, 480, 482, 483, 484, 485, 486, 487, 491, 492, 493, 496, 499, 500, 501, 502, 503, 506, 508, 509], "5962": [2, 8, 10, 20, 26, 28, 43, 501, 503], "20040826185059": [2, 8, 20], "5457": [2, 8, 20], "0010": [2, 12, 17, 20, 26, 27, 28, 36, 38, 43, 49, 50, 65, 66, 96, 130, 134, 140, 141, 142, 157, 178, 191, 201, 211, 212, 213, 214, 215, 468, 469, 476, 485, 500, 501, 503, 505], "transfer": [2, 12, 20, 26, 27, 28, 31, 32, 34, 38, 43, 44, 95, 96, 130, 131, 134, 137, 138, 140, 141, 148, 149, 154, 158, 166, 167, 175, 178, 191, 209, 210, 211, 212, 213, 214, 215, 224, 309, 314, 317, 331, 366, 409, 412, 473, 476, 480, 485, 487, 488, 489, 491, 492, 496, 501, 505, 506, 509], "syntax": [2, 12, 20, 24, 26, 27, 28, 31, 32, 34, 38, 43, 44, 47, 52, 95, 96, 130, 131, 134, 137, 138, 140, 141, 148, 149, 154, 158, 166, 167, 175, 178, 191, 209, 210, 211, 212, 213, 214, 215, 224, 309, 314, 317, 331, 366, 409, 412, 473, 476, 479, 480, 485, 487, 488, 489, 491, 492, 496, 501, 505, 506, 509], "explicit": [2, 12, 20, 26, 28, 41, 42, 43, 54, 87, 130, 131, 141, 158, 178, 191, 211, 224, 442, 476, 479, 480, 488, 489, 491, 494, 501], "littl": [2, 20, 26, 27, 28, 30, 31, 38, 41, 42, 43, 130, 131, 141, 144, 145, 148, 154, 155, 158, 167, 173, 174, 175, 178, 191, 211, 214, 409, 448, 449, 450, 451, 452, 453, 457, 458, 459, 461, 462, 464, 465, 476, 479, 491, 501, 506, 509], "endian": [2, 12, 20, 26, 27, 28, 30, 31, 38, 41, 42, 43, 130, 131, 141, 144, 145, 148, 154, 155, 158, 167, 172, 173, 174, 175, 178, 184, 191, 211, 214, 215, 224, 409, 448, 449, 450, 451, 452, 453, 457, 458, 459, 461, 462, 464, 465, 476, 479, 487, 491, 496, 501, 506, 509], "0012": [2, 12, 20, 26, 27, 28, 38, 43, 134, 191, 353, 501], "implement": [2, 12, 20, 26, 27, 28, 31, 38, 43, 52, 134, 178, 191, 353, 476, 492, 501], "0013": [2, 20, 26, 27, 28, 38, 43, 134, 191, 501, 503], "sh": [2, 20, 26, 28, 29, 38, 43, 191, 466, 501], "dctool100": [2, 20, 26, 28, 43, 501], "0016": [2, 20, 26, 27, 28, 38, 43, 191, 501], "applic": [2, 20, 26, 27, 28, 29, 39, 43, 178, 191, 501, 506], "entiti": [2, 20, 26, 28, 29, 43, 167, 191, 501], "ae": [2, 20, 26, 28, 29, 43, 191, 448, 464, 476, 485, 497, 501], "clunie1": [2, 20, 26, 28, 43, 501], "0008": [2, 12, 20, 26, 27, 28, 38, 43, 50, 74, 75, 76, 77, 130, 140, 142, 157, 158, 202, 211, 213, 214, 215, 476, 477, 489, 501, 502, 503], "type": [2, 3, 8, 17, 18, 20, 25, 26, 27, 28, 31, 34, 35, 37, 38, 41, 43, 47, 50, 74, 75, 77, 80, 98, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 136, 137, 138, 143, 144, 146, 148, 157, 158, 159, 161, 162, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 191, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 409, 433, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 476, 479, 480, 482, 493, 494, 496, 500, 501, 503, 506, 509], "c": [2, 10, 18, 20, 22, 24, 26, 27, 28, 29, 34, 38, 40, 43, 50, 51, 91, 130, 201, 203, 204, 205, 206, 207, 208, 211, 215, 464, 476, 483, 501, 502, 503, 505, 506, 508, 509], "deriv": [2, 8, 20, 38, 46, 79, 95, 96, 127, 132, 216, 476, 482, 501], "secondari": [2, 8, 20], "other": [2, 8, 17, 20, 24, 29, 34, 39, 41, 42, 43, 48, 49, 50, 52, 161, 178, 183, 184, 191, 215, 442, 499, 501, 503, 506, 508], "creation": [2, 8, 12, 20, 26, 27, 28, 38, 165, 476, 488, 501, 503, 508], "date": [2, 8, 9, 12, 17, 20, 23, 26, 27, 28, 29, 38, 39, 45, 91, 167, 434, 473, 476, 485, 486, 488, 494, 501, 505], "da": [2, 12, 17, 20, 26, 27, 28, 29, 38, 58, 63, 91, 130, 450, 464, 476, 485, 494, 501], "20040826": [2, 8, 20], "tm": [2, 12, 20, 26, 27, 28, 29, 38, 58, 63, 91, 458, 464, 476, 485, 494, 501], "185434": [2, 8, 20], "0014": [2, 20, 26, 27, 28, 501], "creator": [2, 8, 20, 26, 28, 43, 109, 110, 118, 121, 122, 123, 130, 133, 191, 218, 476, 486, 491, 496, 501, 503], "0018": [2, 20, 26, 27, 28, 38, 40, 191, 202, 215], "0020": [2, 12, 17, 20, 26, 27, 28, 38, 501, 503], "studi": [2, 8, 9, 10, 20, 26, 27, 28, 38, 165, 167, 503], "0021": [2, 20], "seri": [2, 8, 10, 20, 36, 160, 165, 167, 476, 480, 500, 503, 506], "0022": [2, 20, 501], "acquisit": [2, 8, 20], "0030": [2, 17, 20, 38], "185059": [2, 8, 20], "0031": [2, 20], "0032": [2, 20], "0050": [2, 20, 26, 27, 38, 49], "access": [2, 8, 20, 23, 26, 27, 37, 38, 43, 49, 54, 80, 98, 130, 157, 476, 478, 485, 491, 492, 496, 500, 502, 503, 504, 507], "number": [2, 8, 11, 18, 20, 24, 26, 27, 28, 31, 34, 36, 38, 40, 43, 47, 49, 108, 110, 127, 129, 130, 133, 137, 139, 140, 141, 142, 145, 148, 156, 157, 158, 167, 168, 169, 172, 175, 192, 193, 199, 201, 215, 218, 219, 436, 437, 446, 476, 477, 481, 484, 488, 494, 495, 500, 501, 503, 505, 507, 509], "0060": [2, 20, 26, 27, 38], "modal": [2, 8, 9, 10, 20, 26, 28, 38, 44, 203, 204, 206, 207, 215, 476, 489, 503, 507], "0070": [2, 20, 26, 27], "manufactur": [2, 8, 20, 130], "lo": [2, 12, 17, 18, 20, 26, 27, 29, 43, 130, 466, 501, 503], "toshiba_mec": [2, 8, 20], "0080": [2, 20, 26, 27, 28], "institut": [2, 8, 20], "toshiba": [2, 8, 20], "0090": [2, 20], "refer": [2, 8, 20, 26, 27, 34, 36, 38, 50, 91, 130, 137, 139, 140, 141, 142, 143, 145, 147, 166, 201, 202, 203, 204, 205, 206, 207, 208, 215, 216, 476, 479, 499, 503, 506, 508, 509], "physician": [2, 8, 20], "pn": [2, 12, 17, 20, 29, 38, 63, 127, 130, 442, 456, 476, 489, 494, 500, 501, 503], "0201": [2, 20, 476, 488], "timezon": [2, 8, 20], "offset": [2, 8, 20, 41, 49, 127, 130, 133, 137, 138, 140, 141, 142, 143, 153, 162, 163, 164, 167, 173, 174, 457, 465, 476, 489, 492, 495, 503, 506], "utc": [2, 8, 20], "0400": [2, 8, 20], "1010": [2, 20, 51, 509], "station": [2, 8, 20], "000000000": [2, 8, 20], "1060": [2, 20], "read": [2, 6, 7, 8, 13, 14, 17, 18, 20, 24, 26, 27, 28, 33, 37, 38, 39, 40, 41, 43, 49, 50, 52, 54, 68, 74, 80, 87, 92, 105, 130, 131, 135, 136, 141, 146, 150, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 171, 172, 174, 175, 178, 198, 209, 211, 439, 440, 473, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 497, 500, 502, 503, 504, 506, 507, 508], "1070": [2, 20], "oper": [2, 8, 20, 33, 38, 39, 43, 44, 83, 130, 203, 204, 206, 207, 215, 476, 479, 487, 489, 492, 501, 505], "1090": [2, 20], "model": [2, 8, 20, 24, 26, 38, 52, 127, 130, 502, 509], "mrt50h1": [2, 8, 20], "patient": [2, 8, 9, 10, 12, 17, 20, 26, 27, 28, 40, 130, 165, 167, 442, 476, 478, 485, 495, 500, 501, 503], "compressedsampl": [2, 8, 9, 20, 26, 28, 500, 501], "mr1": [2, 8, 20], "4mr1": [2, 8, 17, 20], "birth": [2, 8, 17, 20], "0040": [2, 20], "sex": [2, 8, 20], "1020": [2, 20], "size": [2, 8, 9, 20, 24, 26, 50, 52, 95, 96, 127, 153, 158, 175, 209, 210, 476, 486, 492, 496, 505, 506], "none": [2, 8, 20, 29, 30, 36, 74, 76, 79, 80, 89, 92, 94, 96, 97, 105, 107, 108, 109, 110, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 145, 146, 148, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 171, 172, 173, 174, 175, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 202, 215, 216, 219, 221, 409, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 466, 467, 468, 476, 485, 488, 489, 492, 499, 501, 505, 507], "1030": [2, 20, 476, 490], "weight": [2, 8, 20], "80": [2, 8, 20, 36, 42, 51, 140, 215, 224, 312, 314, 352, 509], "contrast": [2, 8, 10, 20, 503], "bolu": [2, 8, 20], "agent": [2, 8, 20], "scan": [2, 8, 20, 26, 28, 165, 506], "se": [2, 8, 20], "variant": [2, 8, 20], "0023": [2, 12, 20, 26, 27], "3d": [2, 4, 8, 20, 214, 215, 476, 492], "thick": [2, 8, 20], "repetit": [2, 8, 20, 52], "4000": [2, 8, 20], "0081": [2, 20], "echo": [2, 8, 20], "240": [2, 8, 20], "0083": [2, 20], "averag": [2, 8, 20], "0084": [2, 20, 26, 27, 28], "frequenc": [2, 8, 20, 51, 509], "63": [2, 8, 20, 433, 501], "924339": [2, 8, 20], "0085": [2, 20], "nucleu": [2, 8, 20], "h": [2, 8, 12, 20, 22, 24, 26, 27, 28], "0086": [2, 20, 26, 27, 28], "0091": [2, 20], "train": [2, 8, 20], "1000": [2, 20, 51, 509], "devic": [2, 8, 20, 26, 27, 507], "serial": [2, 8, 20, 127, 130, 502], "0000200": [2, 8, 20], "softwar": [2, 8, 20, 39, 47, 505], "v3": [2, 8, 20, 127, 476, 492, 494, 495, 509], "51": [2, 8, 20, 42, 140, 224, 311, 317], "p25": [2, 8, 20], "1314": [2, 20], "flip": [2, 8, 20], "angl": [2, 8, 20], "90": [2, 8, 20, 42, 51, 140, 215, 224, 250, 306, 309, 476, 489], "5100": [2, 20, 40], "posit": [2, 8, 20, 24, 26, 27, 28, 40, 141, 143, 150, 162, 172, 173, 174, 191, 200, 216], "hf": [2, 8, 20, 40], "000d": [2, 20], "000e": [2, 20], "0011": [2, 20, 49, 130, 201, 211, 213, 214, 215], "83": [2, 8, 20], "9063": [2, 8, 20], "91": [2, 8, 20, 42, 140, 215, 224, 305, 309, 337, 476, 481, 489], "2000": [2, 8, 20, 34, 41, 78, 140, 215, 309, 476, 489, 492, 505, 506], "6406": [2, 8, 20], "0037": [2, 20], "0052": [2, 20], "later": [2, 8, 20, 98, 436, 437, 476, 483, 499, 501], "1040": [2, 20], "indic": [2, 8, 20, 34, 43, 49, 96, 127, 130, 476, 483, 499, 500, 501], "1041": [2, 20], "locat": [2, 4, 8, 9, 20, 92, 130, 133, 140, 166, 173, 500, 503, 508], "comment": [2, 8, 20, 499], "lt": [2, 20, 29], "uncompress": [2, 8, 20, 31, 33, 40, 41, 42, 50, 130, 148, 211, 215, 412, 476, 487, 489, 494, 495, 506], "0028": [2, 20, 34, 42, 50, 130, 140, 142, 202, 203, 204, 205, 206, 207, 208, 211, 213, 214, 215, 476, 489, 491, 501], "sampl": [2, 8, 20, 31, 33, 34, 41, 50, 51, 130, 148, 214, 215, 468, 506, 509], "per": [2, 8, 20, 31, 33, 34, 38, 41, 50, 54, 130, 132, 137, 138, 140, 148, 170, 211, 214, 215, 476, 482, 489, 492, 501, 506], "0004": [2, 10, 20, 26, 27, 28, 34, 50, 130, 165, 167, 208, 211, 213, 215, 476, 489, 503], "photometr": [2, 8, 20, 33, 34, 41, 42, 50, 130, 208, 209, 210, 211, 212, 213, 214, 215, 476, 489, 506], "interpret": [2, 8, 20, 33, 34, 41, 42, 49, 50, 130, 208, 209, 210, 211, 212, 213, 214, 215, 476, 489, 506, 509], "monochrome2": [2, 8, 20, 33, 34, 211, 213, 503], "row": [2, 8, 9, 20, 26, 28, 31, 49, 50, 130, 148, 201, 208, 211, 213, 214, 215, 506], "space": [2, 8, 9, 20, 31, 33, 34, 36, 41, 44, 108, 148, 208, 215, 442, 448, 459, 461, 463, 476, 485, 501, 503], "3125": [2, 8, 20], "0100": [2, 20, 34, 42, 51, 130, 191, 201, 211, 213, 214, 215, 468, 509], "bit": [2, 8, 20, 29, 31, 33, 34, 36, 42, 48, 49, 50, 130, 133, 143, 148, 203, 204, 211, 214, 215, 476, 486, 487, 489, 494, 495, 496, 499, 500, 506, 509], "alloc": [2, 8, 20, 33, 34, 36, 42, 130, 211, 214, 215, 476, 496, 509], "16": [2, 8, 20, 26, 28, 31, 33, 34, 42, 54, 127, 130, 133, 211, 213, 214, 215, 377, 446, 447, 468, 476, 489, 506, 509], "0101": [2, 20, 34, 130, 203, 204, 211, 213, 215], "0102": [2, 20, 34, 191, 201], "high": [2, 8, 20, 33, 34, 36, 110, 476, 489], "15": [2, 8, 20, 389, 501, 509], "0103": [2, 20, 34, 130, 203, 204, 211, 213, 214, 215], "represent": [2, 8, 20, 26, 28, 29, 33, 34, 38, 59, 62, 73, 108, 110, 112, 122, 127, 130, 133, 139, 166, 167, 168, 203, 204, 215, 436, 437, 442, 445, 446, 463, 466, 473, 476, 492, 494, 497, 501, 502, 509], "0106": [2, 20], "smallest": [2, 8, 20], "ss": [2, 4, 20, 26, 28, 29, 176, 177, 468, 476, 478, 509], "0107": [2, 20], "largest": [2, 8, 20], "1050": [2, 20, 206, 207, 215, 501], "center": [2, 8, 20, 206, 207, 215, 501], "600": [2, 8, 20], "1051": [2, 20, 206, 207, 215, 476, 494, 501], "1600": [2, 8, 20], "7fe0": [2, 20, 26, 28, 36, 38, 50, 65, 66, 96, 130, 140, 141, 142, 157, 211, 212, 213, 214, 215, 469, 476, 485, 489, 501], "ow": [2, 20, 26, 28, 29, 49, 51, 184, 455, 476, 480, 491, 496, 501], "arrai": [2, 4, 14, 20, 26, 28, 36, 38, 49, 50, 51, 52, 80, 95, 96, 101, 127, 130, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 435, 476, 477, 487, 488, 491, 492, 501], "128": [2, 9, 12, 20, 26, 28, 131, 150, 162, 172, 173, 174, 178, 191, 322, 359, 501, 506], "element": [2, 10, 12, 16, 17, 18, 20, 24, 25, 26, 27, 28, 33, 35, 36, 37, 40, 44, 48, 49, 50, 51, 52, 54, 65, 75, 76, 78, 80, 82, 83, 91, 92, 95, 96, 99, 100, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 138, 140, 141, 142, 148, 155, 156, 157, 158, 159, 167, 174, 175, 176, 177, 178, 191, 193, 194, 201, 209, 211, 213, 214, 215, 218, 219, 434, 436, 437, 438, 439, 440, 442, 444, 445, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 473, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 500, 503, 506, 509], "fffc": [2, 20, 26, 28, 501], "trail": [2, 8, 20, 26, 28, 139, 201, 215, 448, 459, 461, 463, 476, 485, 501], "pad": [2, 3, 8, 20, 26, 28, 137, 139, 141, 196, 201, 215, 476, 486, 488, 489, 492, 494, 495, 501], "126": [2, 20, 26, 28, 501, 509], "author": [2, 8, 9, 11, 12, 16, 17, 20, 22], "guillaum": [2, 8, 9, 11, 12, 16, 17, 20, 22], "lemaitr": [2, 8, 9, 11, 12, 16, 17, 20, 22], "g": [2, 8, 9, 11, 12, 16, 17, 20, 22, 24, 26, 27, 31, 33, 34, 36, 38, 39, 40, 47, 49, 50, 54, 83, 95, 127, 130, 133, 148, 157, 178, 200, 201, 214, 215, 216, 436, 441, 442, 476, 479, 486, 488, 492, 501], "lemaitre58": [2, 8, 9, 11, 12, 16, 17, 20, 22], "gmail": [2, 8, 9, 11, 12, 16, 17, 20, 22], "licens": [2, 8, 9, 11, 12, 16, 17, 20, 22, 476, 478, 479, 500], "mit": [2, 8, 9, 11, 12, 16, 17, 20, 22, 40, 476, 478, 479], "get_testdata_fil": [2, 3, 8, 9, 10, 11, 17, 20, 33, 38, 40, 41, 43, 48, 49, 50, 51, 130, 167, 473, 476, 492, 494, 495, 500, 501, 502, 503, 506, 509], "fixm": 2, "test": [2, 12, 16, 24, 26, 27, 28, 38, 43, 87, 107, 108, 109, 130, 447, 476, 477, 483, 485, 489, 492, 494, 496, 508], "mr_small": [2, 8, 10, 17, 20, 50, 503], "get": [2, 9, 10, 14, 16, 26, 27, 29, 36, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 91, 96, 130, 154, 165, 215, 473, 476, 479, 480, 488, 492, 494, 499, 500, 504, 505, 506, 508], "pixel_arrai": [2, 4, 9, 33, 36, 38, 41, 42, 44, 48, 130, 476, 478, 489], "shape": [2, 4, 49, 50, 51, 95, 130, 148, 201, 208, 209, 210, 213, 215, 468, 506, 509], "data_downsampl": 2, "copi": [2, 10, 42, 52, 130, 167, 476, 482, 492, 495, 499, 500, 503, 505], "back": [2, 14, 20, 33, 36, 40, 49, 50, 52, 499, 500, 501, 503], "origin": [2, 10, 20, 24, 26, 28, 34, 41, 42, 43, 49, 52, 87, 130, 159, 167, 178, 211, 433, 436, 437, 439, 440, 442, 499, 500, 501, 506, 509], "pixeldata": [2, 33, 38, 41, 50, 52, 135, 137, 138, 215, 476, 488, 489, 506], "tobyt": [2, 50, 509], "updat": [2, 10, 16, 18, 20, 26, 27, 33, 47, 49, 107, 108, 109, 110, 130, 165, 167, 176, 177, 178, 191, 476, 478, 479, 481, 482, 484, 485, 486, 487, 489, 491, 492, 494, 495, 496, 499, 500, 503, 505, 506, 508], "regard": 2, "given": [2, 11, 24, 26, 27, 28, 29, 42, 50, 51, 75, 77, 127, 128, 130, 133, 157, 159, 165, 167, 178, 201, 211, 213, 214, 215, 218, 436, 437, 442, 462, 468, 476, 491, 494, 501, 503, 505, 506, 508, 509], "006": [2, 5, 8, 13], "plot_downsize_imag": [2, 5], "matplotlib": [3, 4, 9, 44, 509], "np": [3, 4, 201, 202, 203, 204, 205, 206, 207, 211, 213, 214, 215, 468, 506, 509], "pyplot": [3, 4, 9, 48, 509], "plt": [3, 4, 9, 48, 509], "generate_multiplex": [3, 130, 468, 476, 492, 509], "fpath": [3, 9, 49, 51, 500, 501, 509], "waveform_ecg": [3, 51, 509], "first": [3, 20, 26, 28, 33, 34, 36, 38, 39, 40, 43, 46, 47, 50, 52, 74, 75, 77, 95, 96, 105, 130, 140, 141, 143, 162, 167, 175, 215, 442, 476, 487, 488, 489, 498, 499, 500, 503, 508, 509], "channel": [3, 20, 34, 50, 51, 130, 211, 468, 509], "each": [3, 10, 20, 31, 33, 34, 37, 38, 41, 49, 50, 51, 75, 130, 137, 138, 140, 141, 143, 144, 145, 148, 168, 169, 200, 208, 214, 215, 442, 468, 476, 491, 494, 499, 501, 503, 506, 509], "multiplex": [3, 51, 130, 468, 476, 492, 509], "ch_idx": 3, "we": [3, 10, 17, 18, 24, 26, 28, 33, 42, 45, 91, 130, 154, 498, 499, 500, 501, 503, 505, 506, 508, 509], "could": [3, 16, 24, 25, 26, 38, 50, 52, 74, 75, 77, 200, 209, 476, 479, 480, 494, 499, 500], "also": [3, 17, 26, 27, 28, 29, 31, 36, 38, 40, 43, 46, 48, 50, 52, 76, 117, 130, 148, 162, 191, 442, 476, 477, 478, 479, 480, 483, 484, 487, 488, 492, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509], "waveform_arrai": [3, 44, 130, 476, 492, 509], "fig": [3, 509], "ax": [3, 43], "subplot": [3, 4, 509], "waveformsequ": [3, 51, 509], "as_raw": [3, 51, 468, 476, 496, 509], "mplx": 3, "arr": [3, 36, 38, 41, 49, 50, 51, 130, 201, 202, 203, 204, 205, 206, 207, 208, 214, 215, 506, 509], "zip": [3, 6, 476, 488, 509], "nr_channel": 3, "numberofwaveformchannel": [3, 51, 468, 509], "nr_sampl": 3, "numberofwaveformsampl": [3, 468, 509], "sampling_fq": 3, "samplingfrequ": [3, 51, 509], "hz": [3, 51, 509], "mplx_label": 3, "multiplexgrouplabel": [3, 509], "ch_item": 3, "channeldefinitionsequ": [3, 509], "arang": [3, 509], "x_unit": 3, "channelsensitivityunitssequ": [3, 509], "1c": [3, 178, 191, 211, 213, 214, 215, 509], "so": [3, 26, 27, 29, 31, 36, 38, 39, 47, 49, 50, 52, 91, 130, 167, 169, 178, 198, 435, 476, 477, 480, 499, 501, 502, 503, 506, 509], "check": [3, 12, 38, 39, 47, 114, 115, 117, 118, 120, 124, 125, 130, 132, 134, 148, 170, 178, 191, 217, 435, 447, 476, 482, 485, 487, 488, 491, 492, 494, 499, 500, 505, 509], "y_unit": 3, "codemean": [3, 509], "unitless": [3, 50, 468, 509], "descript": [3, 16, 20, 25, 26, 27, 30, 37, 38, 40, 43, 107, 108, 109, 110, 113, 123, 127, 133, 476, 477, 478, 491, 495], "ch_sourc": 3, "channelsourcesequ": [3, 509], "set_titl": 3, "set_xlabel": 3, "set_ylabel": [3, 509], "tight_layout": 3, "245": [3, 5], "plot_waveform": [3, 5], "multipl": [4, 29, 31, 34, 38, 49, 50, 76, 108, 110, 111, 121, 127, 130, 140, 142, 143, 148, 205, 206, 207, 208, 215, 216, 442, 462, 476, 489, 495, 501], "sort": [4, 10, 130, 503], "them": [4, 8, 24, 26, 27, 28, 31, 36, 37, 38, 42, 43, 49, 52, 130, 178, 451, 453, 476, 484, 488, 492, 500, 501, 503, 508], "build": [4, 476, 485, 496, 499], "reslic": [4, 5], "differ": [4, 6, 12, 17, 21, 25, 26, 28, 29, 33, 37, 43, 47, 50, 476, 479, 491, 499, 500, 501, 502, 503, 508], "plane": [4, 20, 34, 50, 201, 215], "glob": [4, 10, 103, 104, 106, 503], "fname": [4, 50], "recurs": [4, 43, 130, 476, 478, 480], "append": [4, 11, 18, 20, 38, 139, 200, 216, 433, 501, 509], "count": 4, "skip": [4, 18, 476, 495, 499], "sliceloc": [4, 9, 26, 28], "eg": 4, "scout": [4, 20], "view": [4, 10, 20, 33, 38, 40, 44, 50, 205, 206, 207, 215, 476, 477, 479, 500, 503, 509], "skipcount": 4, "hasattr": 4, "ensur": [4, 29, 33, 39, 41, 43, 47, 94, 130, 157, 167, 178, 200, 215, 436, 437, 476, 482, 485, 494, 496, 499], "thei": [4, 36, 38, 43, 47, 49, 50, 74, 86, 96, 178, 191, 476, 494, 499, 500, 501, 503, 505, 506, 508], "ar": [4, 10, 18, 24, 26, 27, 28, 33, 34, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 52, 54, 74, 75, 79, 80, 83, 92, 95, 96, 100, 101, 107, 109, 110, 127, 130, 132, 133, 134, 137, 138, 140, 141, 142, 143, 148, 157, 162, 165, 167, 170, 176, 177, 178, 191, 200, 202, 203, 204, 206, 207, 209, 210, 214, 215, 216, 218, 441, 442, 446, 461, 464, 466, 476, 482, 487, 488, 489, 491, 492, 494, 495, 497, 498, 499, 500, 501, 503, 505, 506, 507, 508, 509], "correct": [4, 20, 24, 26, 33, 34, 39, 41, 42, 47, 49, 51, 74, 78, 96, 130, 157, 172, 176, 177, 200, 213, 215, 476, 486, 487, 489, 494, 495, 499, 501, 506, 509], "aspect": 4, "assum": [4, 25, 26, 41, 50, 87, 141, 476, 485, 503, 506, 509], "all": [4, 6, 8, 12, 17, 20, 24, 26, 27, 28, 34, 37, 38, 39, 41, 44, 45, 52, 66, 95, 96, 109, 127, 130, 132, 135, 136, 137, 139, 141, 143, 148, 154, 157, 167, 169, 176, 177, 178, 200, 216, 224, 476, 477, 478, 479, 482, 484, 487, 489, 492, 494, 495, 496, 499, 500, 501, 505, 506, 508], "same": [4, 31, 38, 39, 40, 47, 49, 108, 130, 167, 200, 436, 437, 476, 480, 482, 500, 501, 503, 508], "p": [4, 10, 22, 24, 26, 54, 442, 476, 482, 499, 503, 508], "pixelspac": [4, 9], "slicethick": 4, "ax_aspect": 4, "sag_aspect": 4, "cor_aspect": 4, "creat": [4, 12, 14, 18, 24, 25, 26, 27, 38, 39, 43, 48, 52, 86, 127, 128, 130, 148, 155, 165, 166, 167, 168, 200, 219, 433, 434, 435, 438, 440, 442, 473, 476, 479, 481, 494, 496, 501, 504, 505, 506, 507, 509], "img_shap": 4, "list": [4, 6, 7, 8, 10, 13, 20, 26, 28, 29, 31, 33, 38, 40, 41, 47, 74, 75, 76, 77, 95, 96, 103, 104, 106, 127, 128, 130, 135, 137, 138, 143, 148, 155, 157, 158, 161, 163, 167, 168, 185, 189, 190, 194, 195, 197, 200, 201, 216, 433, 441, 442, 450, 451, 452, 453, 456, 457, 458, 459, 462, 463, 466, 467, 473, 476, 479, 482, 483, 489, 492, 494, 495, 500, 501, 503, 505, 506, 508], "img3d": 4, "zero": [4, 20, 29, 50, 130, 175, 476, 496, 501, 506], "img2d": 4, "orthogon": 4, "a1": 4, "imshow": [4, 9, 48], "set_aspect": 4, "a2": 4, "a3": 4, "t": [4, 8, 10, 12, 18, 20, 26, 27, 28, 29, 34, 36, 38, 47, 49, 52, 82, 130, 140, 148, 158, 167, 201, 208, 211, 214, 215, 409, 433, 476, 488, 491, 492, 499, 500, 501, 502, 503, 506], "00": [5, 13, 19, 21, 143], "252": 5, "execut": [5, 13, 19, 21, 442, 499, 508], "auto_examples_image_process": 5, "mb": [5, 13, 19, 21, 157, 468], "imag": [5, 8, 9, 10, 12, 17, 20, 26, 28, 31, 40, 41, 43, 44, 49, 50, 130, 138, 139, 140, 141, 143, 165, 167, 202, 208, 209, 211, 212, 213, 214, 215, 476, 479, 486, 488, 492, 494, 501, 503, 505, 506], "somewher": [6, 40], "start": [6, 17, 18, 20, 24, 26, 27, 28, 40, 49, 52, 127, 133, 141, 143, 156, 162, 168, 169, 174, 433, 457, 465, 476, 486, 496, 499, 500, 501, 502, 507, 508], "analys": [6, 21], "between": [6, 21, 33, 36, 47, 49, 50, 108, 201, 499, 500, 501, 508], "displai": [6, 20, 21, 26, 27, 28, 33, 38, 44, 48, 99, 127, 130, 476, 477, 483, 488, 494, 499, 509], "person": [6, 17, 21, 29, 36, 442, 476, 487, 494, 507], "work": [6, 15, 16, 19, 21, 25, 26, 27, 31, 36, 38, 39, 40, 42, 43, 44, 52, 167, 476, 477, 479, 480, 482, 483, 484, 486, 488, 492, 499, 500, 501, 505, 507, 508, 509], "memori": [6, 21, 131, 157, 158, 159, 175, 208, 211, 215, 476, 479, 487, 488, 489, 503], "base": [6, 21, 33, 34, 40, 66, 68, 79, 130, 147, 434, 438, 444, 473, 476, 479, 485, 489, 492, 499, 500, 503, 506, 508, 509], "hierarch": [6, 21, 140, 215, 476, 489], "tree": [6, 21, 38, 168, 476, 483, 501], "rtplan": [6, 7, 13, 24, 26, 27, 28, 38, 40, 157], "format": [6, 7, 11, 12, 13, 20, 24, 26, 27, 28, 29, 31, 38, 39, 40, 42, 127, 130, 137, 138, 139, 141, 157, 178, 193, 211, 214, 436, 437, 442, 462, 476, 477, 478, 479, 485, 488, 494, 495, 501, 503, 505], "write": [6, 7, 10, 13, 14, 17, 24, 26, 35, 37, 39, 43, 44, 54, 68, 92, 130, 131, 153, 154, 167, 178, 180, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 436, 437, 473, 476, 478, 480, 485, 486, 488, 490, 491, 492, 494, 495, 500, 502, 503, 504], "modifi": [6, 15, 37, 40, 49, 50, 52, 105, 130, 167, 476, 489, 492, 504], "dictionari": [6, 15, 19, 38, 82, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 158, 190, 409, 473, 476, 478, 479, 481, 484, 485, 486, 487, 488, 489, 492, 494, 495, 502, 507], "item": [6, 8, 9, 15, 19, 20, 24, 26, 27, 28, 29, 36, 38, 51, 52, 127, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 164, 171, 195, 200, 216, 476, 477, 478, 479, 482, 485, 488, 489, 494, 495, 501, 503, 509], "standard": [6, 12, 15, 19, 20, 22, 29, 33, 34, 36, 39, 41, 43, 47, 50, 51, 54, 127, 130, 133, 137, 139, 140, 141, 142, 143, 145, 167, 178, 191, 195, 201, 202, 203, 204, 205, 206, 207, 208, 211, 214, 215, 219, 436, 437, 440, 442, 476, 478, 481, 482, 484, 485, 492, 494, 502, 503, 506, 509], "anonym": [6, 15, 19, 38, 43, 476, 477, 478, 488], "auto_examples_python": 6, "auto_examples_jupyt": 6, "your": [8, 10, 14, 23, 25, 26, 27, 31, 33, 34, 38, 40, 43, 44, 47, 52, 94, 137, 138, 167, 498, 501, 502, 503, 505, 508, 509], "own": [8, 24, 25, 26, 27, 38, 40, 43, 47, 52, 130, 167, 178, 476, 486, 496, 501, 503, 506, 508, 509], "840": [8, 9, 12, 24, 26, 41, 42, 50, 130, 140, 147, 149, 178, 211, 214, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 476, 486, 487, 489, 491, 492, 499, 501], "10008": [8, 9, 12, 24, 26, 41, 42, 50, 130, 140, 147, 149, 178, 211, 214, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 476, 486, 487, 489, 491, 492, 499, 501], "don": [8, 10, 18, 26, 27, 28, 38, 52, 499, 500, 502, 503, 506], "xfe": 8, "x04": [8, 50], "myprint": [8, 476, 477], "through": [8, 17, 36, 38, 40, 43, 50, 130, 160, 174, 176, 476, 477, 478, 499, 500, 501, 505, 507, 508], "_pretty_str": [8, 501], "dont_print": 8, "indent_str": 8, "next_indent_str": 8, "sequence_item": 8, "repr_valu": 8, "repr": [8, 38, 99, 476, 491], "50": [8, 42, 50, 51, 140, 215, 224, 310, 317, 335, 409], "plot_printing_dataset": [8, 13], "some": [9, 12, 14, 17, 26, 28, 36, 38, 39, 43, 45, 47, 48, 49, 50, 51, 52, 54, 74, 87, 98, 130, 131, 148, 161, 178, 436, 437, 446, 476, 477, 478, 480, 482, 485, 486, 496, 500, 501, 502, 503, 505, 507, 508], "path": [9, 10, 24, 26, 27, 28, 31, 36, 41, 42, 46, 103, 104, 105, 106, 131, 148, 157, 166, 167, 170, 198, 476, 492, 499, 500, 501, 503, 506, 508], "project": [9, 10, 20, 95, 96, 498, 499, 500, 505, 508], "src": [9, 10, 30, 31, 95, 96, 148, 215, 503, 506], "test_fil": [9, 10, 24, 26, 500, 501, 503], "ct_small": [9, 10, 20, 26, 28, 33, 38, 41, 43, 48, 50, 130, 157, 167, 500, 501, 502, 503, 506], "ct1": [9, 20, 26, 28, 500, 501], "1ct1": [9, 20, 26, 28, 503], "20040119": [9, 20, 26, 28, 501], "661468": [9, 20], "77": [9, 20, 24, 26, 27, 28, 38, 261, 346, 347, 348, 349, 351, 400, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424], "2040634155": [9, 20, 26, 28], "normal": [9, 20, 25, 26, 27, 38, 476, 497, 508], "mode": [9, 20, 26, 28, 81, 84, 85, 476, 489, 499, 505], "sopclassuid": [9, 24, 26, 28, 166, 501, 509], "pat_nam": 9, "patientnam": [9, 10, 12, 14, 26, 28, 38, 40, 82, 83, 127, 130, 157, 165, 167, 219, 476, 488, 500, 501, 503], "family_comma_given": [9, 442], "patientid": [9, 10, 12, 14, 17, 26, 28, 38, 130, 165, 167, 501, 503], "studyd": [9, 10, 24, 26, 27, 28, 503], "sure": [9, 42, 52, 499, 501, 505], "exist": [9, 31, 33, 36, 38, 39, 47, 52, 108, 130, 159, 167, 178, 191, 476, 496, 498, 499, 500, 506], "want": [9, 10, 14, 24, 25, 26, 39, 52, 169, 499, 500, 501, 502, 503, 505, 508], "default": [9, 24, 26, 29, 31, 39, 42, 48, 49, 50, 54, 74, 78, 79, 80, 82, 83, 86, 87, 88, 89, 90, 91, 92, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 127, 130, 131, 134, 137, 139, 145, 148, 155, 157, 158, 167, 169, 178, 191, 201, 205, 206, 207, 208, 211, 213, 214, 215, 433, 441, 442, 451, 453, 457, 468, 476, 480, 482, 483, 485, 487, 488, 489, 490, 491, 492, 494, 500, 501, 502, 503, 506, 508], "miss": [9, 16, 31, 47, 105, 130, 134, 148, 157, 162, 176, 178, 191, 201, 202, 211, 213, 214, 215, 476, 484, 485, 488, 489, 495, 497, 499, 501, 503, 505], "cmap": [9, 48], "cm": [9, 11, 48], "grai": 9, "112": [9, 13, 51], "plot_read_dicom": [9, 13], "interact": [10, 38, 40, 43, 130, 503], "directori": [10, 40, 165, 166, 167, 168, 170, 476, 477, 495, 499, 500, 503, 505, 508], "dicomdirtest": [10, 503], "pydicom_test": [10, 503], "276": [10, 503], "7230010": [10, 503], "31906": [10, 503], "1359940846": [10, 503], "78187": [10, 503], "descriptor": [10, 43, 167, 202, 203, 204, 205, 206, 215, 476, 489, 491, 503], "charact": [10, 20, 26, 28, 29, 36, 39, 43, 54, 74, 75, 76, 77, 87, 127, 128, 130, 133, 157, 158, 167, 168, 169, 170, 178, 193, 194, 195, 433, 442, 446, 447, 451, 453, 456, 457, 463, 466, 467, 473, 476, 477, 478, 485, 487, 488, 491, 492, 494, 495, 496, 499, 501, 502, 503], "stage": [10, 166, 167, 499, 500], "dicomdir": [10, 37, 165, 167, 168, 476, 484, 488, 489, 492, 495, 496, 497, 504], "structur": [10, 26, 27, 38, 40, 165, 167, 168, 476, 489, 496, 497, 501, 503, 504], "manag": [10, 31, 43, 157, 167, 476, 485, 492, 501, 503, 504, 505], "77654033": [10, 503], "doe": [10, 12, 43, 47, 49, 50, 52, 87, 95, 96, 108, 130, 150, 159, 184, 209, 446, 476, 492, 503], "archibald": [10, 503], "20010101": [10, 130, 503], "studytim": [10, 24, 26, 28, 503], "000000": [10, 20, 503], "studydescript": [10, 26, 28, 167, 503], "xr": [10, 503], "spine": [10, 503], "comp": [10, 20, 26, 28, 503], "min": [10, 203, 204, 215, 503], "cr": [10, 215, 503], "seriesnumb": [10, 38, 503], "19950903": [10, 503], "173032": [10, 503], "head": [10, 36, 40, 503], "brain": [10, 503], "wo": [10, 503], "98890234": [10, 503], "peter": [10, 503], "20030505": [10, 503], "050743": [10, 503], "carotid": [10, 503], "025109": [10, 503], "045357": [10, 503], "mra": [10, 503], "700": [10, 476, 487, 503], "7": [10, 20, 23, 24, 26, 27, 34, 38, 50, 129, 133, 137, 145, 167, 191, 195, 208, 211, 215, 246, 261, 270, 271, 338, 339, 340, 341, 345, 347, 367, 384, 391, 392, 396, 425, 483, 487, 496, 499, 500, 501, 503, 508, 509], "found": [10, 49, 50, 51, 105, 130, 148, 157, 162, 167, 172, 175, 501, 503, 506], "seriesinstanceuid": 10, "1196533885": 10, "18148": 10, "118": 10, "photometricinterpret": [10, 33, 41, 211, 213, 215, 503, 506], "monochrome1": [10, 33, 34, 211, 213, 503], "without": [10, 38, 42, 51, 105, 130, 150, 160, 173, 215, 448, 459, 461, 462, 476, 478, 486, 488, 492, 495, 496, 501, 503, 505, 508], "still": [10, 41, 43, 476, 482, 483, 485, 486, 487, 489, 499, 501, 502, 503, 506], "tmp": [10, 12, 503], "tmp9dln6g99": 10, "contain": [10, 24, 26, 29, 31, 34, 35, 36, 37, 38, 39, 43, 49, 50, 51, 52, 54, 74, 76, 95, 127, 129, 130, 132, 139, 140, 141, 142, 143, 148, 157, 158, 165, 172, 176, 177, 178, 191, 194, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 219, 442, 447, 451, 453, 468, 476, 484, 487, 494, 499, 501, 503, 509], "follow": [10, 25, 26, 27, 28, 31, 34, 36, 38, 39, 41, 42, 45, 47, 50, 127, 130, 134, 140, 141, 143, 148, 167, 175, 178, 191, 214, 442, 476, 489, 492, 494, 499, 500, 501, 503, 507, 508, 509], "pt000000": [10, 503], "st000000": [10, 503], "se000000": [10, 503], "im000000": [10, 503], "se000001": [10, 503], "se000002": [10, 503], "st000001": [10, 503], "im000001": [10, 503], "im000002": [10, 503], "im000003": [10, 503], "pt000001": [10, 503], "im000004": 10, "st000002": 10, "st000003": 10, "im000005": 10, "im000006": 10, "pt000002": [10, 503], "pt000003": 10, "pathlib": [10, 170, 503], "tempfil": [10, 12, 17, 503], "temporarydirectori": [10, 503], "warn": [10, 36, 39, 52, 54, 74, 75, 77, 82, 83, 215, 473, 476, 478, 482, 486, 487, 488, 489, 491, 494, 495, 497, 499, 500], "fileset": [10, 473, 476, 492, 494, 495, 497], "generate_uid": [10, 33, 167, 476, 488], "filterwarn": 10, "ignor": [10, 39, 54, 74, 82, 83, 110, 127, 130, 171, 463, 473, 476, 490, 494, 497, 500], "A": [10, 20, 28, 31, 33, 34, 36, 37, 38, 41, 52, 74, 75, 87, 95, 103, 104, 106, 130, 137, 139, 140, 141, 142, 143, 145, 147, 148, 155, 158, 165, 167, 168, 169, 170, 178, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 433, 442, 456, 463, 466, 467, 476, 486, 494, 499, 501, 503, 506], "its": [10, 24, 25, 26, 27, 29, 31, 33, 34, 38, 39, 80, 127, 130, 143, 167, 168, 175, 178, 200, 201, 209, 210, 211, 212, 213, 214, 468, 476, 487, 492, 501, 503, 508], "itself": [10, 16, 33, 36, 38, 43, 105, 476, 492, 499, 500, 503], "summari": [10, 25, 26, 499], "content": [10, 12, 14, 20, 38, 54, 130, 140, 201, 211, 212, 213, 214, 215, 500, 501, 503, 506], "seen": [10, 25, 26, 87, 500, 509], "when": [10, 23, 24, 25, 26, 27, 29, 31, 33, 34, 36, 38, 41, 43, 46, 49, 50, 52, 78, 82, 83, 87, 91, 92, 96, 130, 137, 138, 140, 142, 143, 148, 150, 161, 167, 176, 177, 203, 204, 205, 206, 207, 214, 215, 216, 219, 221, 433, 442, 476, 478, 479, 480, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 505, 506, 508, 509], "iter": [10, 17, 38, 130, 148, 155, 168, 169, 176, 179, 200, 213, 216, 221, 476, 478, 486, 503], "over": [10, 20, 26, 27, 46, 49, 501, 503], "yield": [10, 38, 130, 139, 140, 141, 142, 145, 148, 155, 168, 169, 213, 468, 501, 503, 506, 509], "fileinst": [10, 167, 168, 473, 503], "object": [10, 14, 31, 36, 38, 40, 43, 48, 83, 98, 102, 127, 130, 131, 133, 147, 153, 154, 157, 158, 159, 161, 162, 165, 167, 178, 200, 215, 216, 217, 220, 442, 473, 476, 478, 479, 488, 489, 491, 494, 495, 501, 503, 509], "correspond": [10, 17, 31, 33, 36, 38, 49, 50, 51, 74, 105, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 130, 133, 137, 138, 148, 149, 159, 166, 167, 168, 201, 202, 215, 219, 468, 476, 494, 499, 500, 503, 506, 509], "do": [10, 14, 25, 26, 31, 37, 39, 42, 46, 47, 48, 49, 50, 52, 91, 130, 167, 178, 184, 216, 476, 482, 488, 494, 499, 500, 501, 503, 506, 507, 509], "someth": [10, 14, 23, 25, 26, 36, 49, 130, 499], "search": [10, 47, 105, 140, 167, 172, 173, 174, 476, 494, 501, 503], "patient_id": 10, "find_valu": [10, 167, 503], "return": [10, 11, 14, 31, 34, 36, 38, 43, 49, 50, 51, 74, 75, 77, 78, 88, 89, 95, 96, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 136, 137, 138, 141, 143, 144, 146, 148, 149, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 190, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 409, 433, 435, 436, 437, 440, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 476, 477, 478, 479, 480, 486, 487, 488, 489, 491, 492, 494, 495, 497, 501, 502, 503, 508, 509], "where": [10, 31, 34, 38, 39, 49, 50, 51, 54, 107, 109, 130, 133, 137, 153, 159, 165, 167, 172, 173, 203, 204, 215, 476, 478, 487, 488, 489, 499, 500, 501, 503, 508], "one": [10, 16, 24, 26, 31, 34, 38, 42, 50, 51, 52, 81, 84, 85, 107, 109, 127, 130, 131, 136, 137, 138, 139, 140, 141, 143, 148, 159, 160, 165, 167, 168, 169, 175, 179, 193, 202, 208, 215, 436, 437, 476, 482, 485, 495, 499, 501, 503, 505, 507, 508, 509], "repres": [10, 31, 38, 50, 100, 127, 130, 141, 157, 178, 218, 440, 442, 446, 499, 509], "match": [10, 41, 42, 47, 50, 82, 91, 103, 104, 105, 106, 130, 159, 165, 167, 201, 209, 211, 214, 442, 476, 482, 485, 492, 501, 503, 506, 509], "result": [10, 17, 24, 25, 26, 27, 33, 39, 41, 52, 75, 77, 130, 178, 218, 433, 476, 494, 499, 500, 506], "find": [10, 17, 20, 23, 25, 26, 47, 91, 130, 160, 167, 172, 173, 174, 499, 500, 501, 503, 507, 509], "study_uid": 10, "studyinstanceuid": 10, "series_uid": 10, "plural": 10, "Of": 10, "cours": [10, 506], "you": [10, 12, 14, 18, 23, 24, 25, 26, 27, 28, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 49, 50, 51, 52, 91, 137, 138, 157, 161, 165, 167, 169, 215, 476, 489, 492, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509], "just": [10, 12, 14, 25, 26, 27, 28, 38, 43, 52, 87, 127, 130, 155, 476, 488, 492, 499, 500, 501, 503, 508], "directli": [10, 31, 38, 52, 127, 148, 435, 502, 503, 507], "know": [10, 34, 38, 43, 501, 502, 503], "what": [10, 29, 34, 37, 43, 49, 167, 178, 501, 503, 506, 508], "nfound": 10, "actual": [10, 20, 25, 26, 31, 34, 38, 41, 49, 127, 130, 148, 167, 178, 201, 211, 214, 499, 503], "record": [10, 20, 165, 166, 167, 168, 476, 489, 495, 503], "onli": [10, 16, 24, 26, 27, 28, 36, 38, 39, 40, 42, 45, 49, 50, 52, 54, 78, 95, 96, 108, 110, 111, 112, 113, 115, 116, 117, 118, 126, 130, 132, 134, 140, 143, 148, 157, 160, 167, 169, 176, 177, 178, 191, 211, 215, 219, 440, 447, 476, 482, 484, 485, 486, 487, 488, 489, 491, 492, 494, 499, 501, 502, 503, 506, 508], "limit": [10, 26, 27, 33, 40, 41, 44, 50, 167, 446, 447, 476, 482, 488, 492, 507], "subset": [10, 24, 26], "howev": [10, 25, 26, 29, 31, 33, 34, 38, 41, 45, 140, 141, 143, 200, 440, 499, 500, 501, 503, 506, 508], "less": [10, 33, 34, 47, 154, 509], "effici": [10, 155, 167, 215, 446, 509], "result_load": 10, "remov": [10, 12, 17, 38, 39, 44, 127, 130, 148, 166, 167, 168, 215, 476, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 499, 501, 508], "To": [10, 24, 26, 28, 33, 38, 39, 40, 42, 49, 51, 52, 150, 155, 178, 476, 482, 487, 492, 499, 500, 501, 503, 505, 508, 509], "edit": [10, 52, 476, 486, 487, 489, 499, 500, 505], "identif": 10, "modul": [10, 25, 26, 31, 33, 39, 46, 48, 50, 51, 83, 92, 95, 96, 130, 148, 193, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 214, 215, 468, 473, 476, 477, 483, 484, 487, 492, 494, 495, 497, 501, 503, 506, 508, 509], "part": [10, 27, 28, 29, 33, 34, 36, 39, 43, 46, 50, 51, 110, 127, 130, 133, 137, 139, 140, 141, 142, 143, 145, 157, 170, 176, 177, 178, 191, 195, 201, 203, 204, 205, 206, 207, 208, 211, 214, 215, 442, 476, 479, 482, 494, 499, 500, 501, 502, 503, 506, 509], "annex": [10, 33, 34, 50, 51, 127, 130, 137, 139, 140, 141, 142, 143, 145, 165, 203, 204, 205, 206, 207, 208, 211, 214, 215, 503], "properti": [10, 14, 38, 47, 54, 127, 130, 148, 166, 167, 168, 216, 218, 409, 442, 476, 477, 479, 482, 485, 486, 492, 503], "1130": [10, 20], "my": [10, 43, 130, 167, 502], "1141": 10, "descriptor_file_id": [10, 167, 503], "readm": 10, "1142": 10, "specif": [10, 20, 24, 26, 27, 28, 31, 32, 36, 38, 41, 43, 49, 50, 52, 74, 75, 76, 77, 130, 157, 158, 167, 172, 178, 195, 441, 476, 477, 479, 485, 487, 488, 491, 492, 499, 500, 501, 502, 503, 506], "descriptor_character_set": [10, 167, 503], "iso_ir": [10, 20, 26, 28, 43, 76, 501, 502, 503], "100": [10, 20, 24, 26, 28, 43, 51, 224, 325, 331, 501, 502, 503, 509], "until": [10, 157, 158, 161, 172, 175, 476, 477, 482, 494, 503, 508], "call": [10, 25, 26, 38, 39, 41, 46, 47, 49, 52, 79, 83, 89, 130, 141, 155, 167, 174, 200, 435, 476, 479, 482, 486, 492, 501, 503, 506], "meet": [10, 31, 139, 148, 476, 482], "semant": [10, 36, 167, 442, 503], "re": [10, 37, 49, 363, 364, 498, 499, 500, 501, 503, 505, 506, 508, 509], "here": [10, 12, 24, 26, 28, 31, 37, 40, 43, 47, 48, 98, 148, 174, 500, 501, 502, 503, 507, 508], "becaus": [10, 24, 26, 33, 36, 38, 40, 41, 49, 50, 52, 150, 167, 499, 500, 501, 508], "would": [10, 24, 25, 26, 27, 33, 39, 52, 54, 436, 499, 500, 503, 509], "overwrit": [10, 441], "altern": [10, 23, 38, 130, 205, 206, 207, 215, 499, 501, 503], "new": [10, 17, 18, 26, 27, 33, 36, 37, 40, 47, 54, 75, 77, 78, 80, 82, 83, 87, 94, 95, 96, 98, 99, 101, 102, 104, 105, 107, 108, 109, 110, 127, 130, 132, 133, 137, 139, 144, 145, 147, 148, 149, 166, 167, 168, 178, 200, 201, 202, 203, 204, 205, 206, 207, 213, 214, 215, 216, 218, 434, 438, 442, 468, 477, 478, 479, 482, 483, 484, 487, 488, 489, 491, 492, 494, 497, 498, 501, 502, 504, 507, 509], "ani": [10, 24, 26, 27, 29, 31, 34, 38, 39, 48, 49, 51, 77, 90, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 130, 132, 134, 137, 138, 139, 148, 150, 151, 152, 153, 154, 159, 167, 168, 178, 191, 200, 201, 206, 207, 215, 219, 434, 438, 441, 442, 444, 457, 461, 467, 476, 478, 479, 488, 494, 499, 500, 503, 505, 506], "while": [10, 26, 27, 33, 34, 50, 54, 127, 130, 178, 214, 446, 476, 488, 489, 494, 499, 503, 505], "leav": [10, 16, 26, 27, 108, 501], "unchang": [10, 41, 74, 176, 177, 203, 204, 205, 206, 207, 215, 506], "tdir": 10, "new_fileset": 10, "norigin": 10, "note": [10, 16, 18, 24, 26, 27, 28, 36, 39, 41, 42, 48, 80, 91, 108, 110, 130, 133, 139, 140, 144, 145, 157, 161, 162, 174, 184, 200, 203, 204, 206, 207, 215, 434, 436, 437, 438, 440, 442, 444, 446, 479, 500, 501, 502, 506, 507, 509], "layout": [10, 167], "been": [10, 25, 26, 34, 41, 42, 43, 47, 50, 80, 87, 89, 130, 137, 138, 140, 141, 159, 166, 167, 178, 191, 215, 435, 476, 479, 486, 491, 494, 495, 497, 499, 500, 501, 502], "is_fil": [10, 503], "relative_to": 10, "228": [10, 13], "plot_read_fileset": [10, 13], "basic": [11, 26, 27, 28, 37, 41, 48, 51, 52, 69, 130, 137, 138, 140, 141, 142, 143, 476, 489, 503, 504, 506, 509], "info": [11, 20, 130, 154, 155, 158, 161, 173, 174, 175, 409, 476, 479, 480, 482, 484], "beam": [11, 18, 24, 26, 27, 28, 47, 476, 482], "gantri": [11, 20, 26, 28], "ssd": 11, "field": [11, 20, 26, 28, 38, 88, 127, 129, 141, 476, 494], "89": 11, "darci": [11, 12, 16, 17], "mason": [11, 12, 16, 17, 23], "list_beam": 11, "plan_dataset": 11, "summar": [11, 503], "line": [11, 20, 23, 24, 25, 27, 28, 35, 39, 40, 43, 47, 49, 52, 83, 130, 167, 476, 483, 494, 499, 500, 501, 503, 506], "13": [11, 233, 234, 235, 237, 428, 429], "num": 11, "11": [11, 20, 23, 203, 204, 205, 206, 207, 215, 223, 229, 231, 245, 246, 292, 293, 343, 362, 381, 394, 422, 427, 476, 496, 509], "beamsequ": [11, 18, 24, 26, 27, 28, 38, 47, 130, 476, 482], "cp0": 11, "controlpointsequ": 11, "float": [11, 29, 36, 38, 50, 79, 86, 127, 130, 131, 155, 157, 158, 159, 161, 175, 199, 211, 215, 435, 436, 437, 439, 440, 446, 462, 476, 482, 483, 489, 492, 494, 496, 501], "sourcetosurfacedist": 11, "beamnam": [11, 18, 38], "beamnumb": [11, 24, 26, 27, 28], "8d": 11, "1f": 11, "gantryangl": 11, "join": [11, 40], "003": [11, 13], "plot_read_rtplan": [11, 13], "scratch": [12, 18, 44, 476, 480, 481, 494, 499, 506], "produc": [12, 24, 26, 36, 50, 52, 178, 476, 484, 489, 494, 508], "compliant": [12, 52, 476, 485], "written": [12, 24, 26, 29, 39, 40, 46, 49, 50, 130, 167, 178, 190, 191, 476, 488, 489, 499, 501, 503], "have": [12, 14, 25, 26, 27, 28, 29, 33, 34, 36, 38, 39, 41, 42, 43, 47, 49, 52, 95, 96, 127, 130, 137, 138, 141, 143, 148, 157, 160, 167, 178, 191, 201, 211, 213, 214, 215, 448, 459, 468, 476, 482, 485, 487, 488, 491, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 508, 509], "valid": [12, 44, 52, 54, 81, 84, 85, 87, 123, 127, 130, 132, 134, 148, 157, 170, 178, 191, 208, 215, 216, 363, 364, 409, 441, 446, 447, 451, 453, 462, 463, 466, 476, 494, 495, 496], "tmpsy2c5_mp": 12, "save": [12, 14, 24, 26, 40, 41, 49, 50, 476, 479, 482, 500, 501, 502, 506, 509], "big": [12, 30, 31, 42, 130, 131, 154, 211, 214, 224, 476, 496, 509], "tmpbwycgajg": 12, "20230801": 12, "0033": [12, 20], "171424": 12, "837766": 12, "firstnam": 12, "123456": 12, "datetim": [12, 91, 434, 438, 444], "o": [12, 20, 22, 69, 71], "filedataset": [12, 46, 105, 130, 157, 161, 178, 473, 476, 479, 481, 494, 495, 497, 501, 503], "filemetadataset": [12, 24, 26, 131, 134, 160, 191, 473, 476, 491, 501], "temporari": [12, 166, 503], "suffix": [12, 169, 433, 442], "filename_little_endian": 12, "namedtemporaryfil": [12, 17], "filename_big_endian": 12, "popul": [12, 52, 507], "mediastoragesopclassuid": [12, 503], "mediastoragesopinstanceuid": 12, "implementationclassuid": 12, "initi": [12, 36, 40, 131, 132, 133, 173, 174, 200, 215, 216, 442, 499], "preambl": [12, 131, 157, 162, 178, 191, 198, 476, 485, 501], "try": [12, 36, 47, 95, 96, 476, 480, 488, 501, 503], "is_little_endian": [12, 14, 41, 129, 130, 131, 141, 143, 155, 158, 163, 164, 171, 173, 174, 175, 176, 177, 178, 215, 409, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 464, 465], "is_implicit_vr": [12, 41, 129, 130, 131, 155, 156, 158, 163, 164, 178, 409, 457, 476, 488], "dt": [12, 29, 58, 63, 91, 452, 464, 476, 485, 494], "now": [12, 20, 47, 178, 476, 478, 479, 482, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 503, 509], "contentd": 12, "strftime": 12, "y": [12, 36, 215, 499, 508], "m": [12, 22, 442, 499, 500, 503, 505, 506, 509], "timestr": 12, "long": [12, 29, 154, 174, 178, 465, 476, 496, 501, 508], "micro": 12, "contenttim": 12, "save_a": [12, 17, 24, 26, 40, 41, 46, 47, 49, 50, 130, 178, 476, 478, 491, 501, 506, 509], "shouldn": 12, "need": [12, 25, 26, 27, 33, 34, 36, 38, 39, 42, 43, 46, 47, 51, 52, 75, 77, 91, 96, 130, 154, 155, 161, 463, 466, 476, 479, 494, 499, 500, 501, 502, 503, 505, 506, 508, 509], "9": [12, 20, 23, 26, 27, 33, 38, 47, 50, 51, 79, 169, 170, 201, 225, 226, 230, 232, 241, 270, 271, 289, 290, 297, 342, 363, 364, 373, 388, 391, 396, 408, 422, 486, 489, 492, 497, 509], "bug": [12, 40, 480, 484, 488, 491, 494, 498, 499, 505], "recogn": 12, "transfersyntaxuid": [12, 41, 42, 47, 130, 166, 178, 476, 478, 485, 501, 506], "explicitvrbigendian": 12, "reopen": 12, "005": [12, 13], "plot_write_dicom": [12, 13], "354": 13, "auto_examples_input_output": 13, "output": [13, 20, 24, 26, 27, 36, 42, 50, 52, 203, 204, 215, 476, 489, 491, 499, 500, 501, 503, 508], "byte": [14, 24, 26, 29, 30, 31, 38, 41, 49, 50, 51, 52, 75, 76, 77, 87, 88, 110, 127, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 153, 154, 156, 157, 158, 159, 160, 162, 172, 173, 174, 175, 176, 177, 178, 183, 184, 188, 191, 199, 201, 214, 215, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 476, 487, 488, 489, 494, 497, 501, 503, 506, 509], "help": [14, 24, 25, 26, 27, 28, 39, 43, 47, 158, 476, 479, 487, 494, 496, 498, 499, 500], "blob": 14, "databas": 14, "io": [14, 131, 473, 501], "bytesio": [14, 131, 153, 501], "dcmwrite": [14, 46, 47, 68, 130, 476, 485, 491, 492, 494, 501], "filebas": [14, 68, 141, 143, 146, 473], "dicomfilelik": [14, 68, 131, 141, 143, 146, 152, 157, 476, 478], "memory_dataset": [14, 21], "write_dataset_to_byt": 14, "buffer": [14, 131, 211], "rewind": [14, 162, 172, 173, 174, 476, 483], "seek": [14, 153, 157, 476, 478, 488], "adapt_dataset_from_byt": 14, "interest": [14, 49, 498, 501, 508], "stuff": 14, "bond": 14, "jame": 14, "007": 14, "dummydatabas": 14, "__init__": [14, 127, 129, 130, 131, 132, 133, 148, 151, 153, 154, 166, 167, 168, 200, 216, 218, 409, 434, 436, 437, 438, 439, 440, 442, 444, 445], "self": [14, 409, 501, 506], "_blob": 14, "file_path": [14, 198], "db": 14, "convert": [14, 31, 33, 34, 42, 50, 74, 75, 77, 83, 86, 88, 91, 95, 96, 128, 130, 148, 167, 200, 201, 208, 209, 210, 211, 212, 213, 214, 215, 468, 476, 479, 482, 485, 488, 489, 492, 493, 494, 500, 501, 509], "ds_byte": 14, "read_byt": 14, "read_dataset": [14, 68, 161], "_new": 14, "dynam": [16, 20], "recommend": [16, 23, 25, 26, 38, 39, 41, 91, 137, 138, 148, 167, 215, 499, 500, 501, 503, 505, 506, 508], "solut": 16, "demonstr": [16, 48, 476, 477], "hous": 16, "program": [16, 26, 27, 38, 40, 48, 476, 477, 482], "around": [16, 38, 499], "1001": [16, 20, 43, 130], "privat": [16, 17, 20, 24, 26, 27, 28, 38, 44, 52, 107, 108, 109, 110, 117, 118, 121, 122, 123, 125, 127, 128, 130, 133, 165, 166, 167, 191, 218, 409, 473, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 491, 492, 494, 495, 496, 501, 503], "42": [16, 476, 479], "1002": [16, 20, 43, 501], "12345": [16, 38, 130], "1003": [16, 20], "datadict": [16, 47, 473, 476, 485, 488, 501], "dicomdictionari": 16, "keyword_dict": 16, "defin": [16, 17, 20, 25, 26, 33, 34, 43, 49, 54, 127, 130, 133, 166, 167, 178, 202, 215, 441, 476, 482, 499, 501, 503, 509], "vm": [16, 29, 38, 60, 107, 108, 109, 110, 111, 117, 118, 121, 127, 476, 480, 488, 491, 501], "is_retir": [16, 107, 108, 109, 117, 118, 127, 409, 476, 485], "flag": [16, 20, 39, 94, 130, 162, 167, 172, 173, 174, 476, 491, 494, 503, 508], "keyword": [16, 26, 27, 28, 36, 38, 47, 50, 51, 82, 83, 90, 105, 107, 108, 116, 117, 119, 124, 126, 127, 130, 148, 157, 167, 201, 206, 208, 211, 213, 214, 215, 219, 409, 468, 476, 480, 482, 485, 487, 488, 492, 496, 500, 501, 503, 507], "blank": [16, 17, 108, 200, 435, 476, 478, 501], "new_dict_item": [16, 107, 109], "0x10011001": 16, "One": [16, 36, 40, 43, 49, 52, 107, 108, 109, 127, 130, 202, 208, 215, 499, 500], "teston": [16, 107, 108], "0x10011002": 16, "two": [16, 20, 25, 26, 28, 36, 38, 39, 42, 43, 46, 87, 95, 107, 108, 109, 130, 139, 154, 167, 215, 442, 476, 483, 501, 502, 508, 509], "testtwo": [16, 107, 108], "0x10011003": 16, "three": [16, 31, 36, 109, 442, 501, 503], "testthre": 16, "revers": [16, 168, 476, 489], "map": [16, 50, 127, 130, 165, 500], "new_names_dict": 16, "dict": [16, 31, 38, 90, 95, 107, 109, 127, 130, 131, 132, 148, 165, 167, 201, 215, 476, 479, 494, 496], "val": [16, 154, 179, 200, 216, 409, 435, 436, 437, 439, 440, 441, 442, 446, 501], "etc": [16, 17, 18, 36, 38, 40, 48, 50, 127, 130, 201, 476, 477, 483, 494, 499, 503, 506], "001": [16, 18, 19, 43], "plot_add_dict_entri": [16, 19], "point": [17, 24, 25, 26, 27, 28, 29, 48, 52, 175, 211, 215, 446, 476, 478, 483, 494, 499, 501, 507], "It": [17, 26, 27, 37, 38, 39, 40, 41, 46, 48, 50, 52, 130, 141, 167, 178, 476, 482, 483, 499, 500, 501, 502, 503, 505, 506, 509], "curv": [17, 509], "patientbirthd": [17, 38], "de": [17, 52], "callback": [17, 25, 26, 130, 476, 485], "function": [17, 20, 25, 26, 27, 31, 36, 37, 38, 39, 43, 46, 50, 51, 52, 53, 56, 57, 65, 68, 70, 72, 79, 89, 97, 101, 108, 109, 127, 130, 141, 148, 155, 158, 160, 161, 165, 167, 176, 177, 198, 200, 201, 202, 209, 210, 211, 212, 213, 214, 215, 219, 435, 446, 468, 469, 473, 474, 476, 477, 478, 479, 484, 485, 487, 488, 489, 492, 494, 500, 501, 502, 503, 506, 508, 509], "insid": [17, 476, 478], "person_names_callback": 17, "curves_callback": 17, "0xff00": 17, "0x5000": 17, "del": [17, 18, 38, 43, 130, 501], "walk": [17, 130], "allow": [17, 24, 26, 27, 31, 34, 38, 39, 43, 47, 49, 54, 86, 130, 132, 165, 167, 215, 440, 476, 478, 479, 488, 491, 492, 494, 495, 496, 499, 505, 508], "remove_private_tag": [17, 43, 130], "method": [17, 23, 31, 34, 38, 41, 42, 46, 48, 49, 51, 95, 96, 99, 127, 129, 130, 131, 132, 133, 137, 138, 147, 148, 151, 153, 154, 157, 165, 166, 167, 168, 200, 216, 218, 409, 434, 436, 437, 438, 439, 440, 442, 444, 476, 479, 482, 485, 487, 494, 496, 501, 502, 503, 506, 507], "easili": [17, 476, 477, 479], "delet": [17, 52, 130, 476, 491, 499, 500], "delattr": 17, "otherpatientid": [17, 476, 478], "otherpatientidssequ": [17, 501], "For": [17, 24, 26, 27, 31, 33, 34, 36, 38, 39, 41, 49, 50, 52, 119, 127, 130, 137, 140, 141, 143, 148, 165, 167, 178, 201, 215, 442, 476, 482, 492, 497, 499, 500, 501, 503, 505, 506], "possibl": [17, 34, 38, 39, 45, 50, 91, 127, 130, 165, 176, 177, 214, 215, 446, 476, 485, 487, 488, 489, 494, 502, 503, 507], "assign": [17, 38, 127, 476, 482, 489, 495], "19000101": 17, "output_filenam": 17, "013": [17, 19], "plot_anonym": [17, 19], "block": [18, 20, 26, 27, 28, 43, 130, 133, 476, 491, 500], "300a": [18, 26, 27, 28, 40], "00f8": 18, "apertur": 18, "00fe": 18, "block1": 18, "block2": 18, "toi": 18, "block_ds1": 18, "blocktyp": 18, "blocknam": 18, "block_ds2": 18, "should": [18, 25, 26, 27, 29, 31, 33, 34, 36, 38, 39, 40, 43, 47, 49, 50, 52, 127, 130, 140, 141, 142, 143, 148, 157, 162, 165, 167, 169, 178, 191, 200, 208, 209, 210, 211, 212, 213, 214, 215, 433, 462, 476, 478, 479, 486, 487, 492, 499, 500, 501, 503, 504, 506, 508, 509], "like": [18, 25, 26, 38, 39, 43, 47, 49, 52, 70, 72, 83, 110, 131, 146, 153, 155, 157, 158, 159, 161, 162, 172, 174, 175, 178, 191, 193, 194, 195, 216, 476, 479, 489, 492, 495, 500, 501, 502, 503], "plan_d": 18, "sinc": [18, 34, 43, 95, 127, 130, 214, 216, 476, 496, 499, 503, 509], "did": [18, 476, 477], "blocksequ": 18, "numberofblock": 18, "beam0": 18, "block_ds3": 18, "abov": [18, 24, 25, 26, 27, 28, 38, 43, 49, 52, 127, 130, 201, 476, 486, 500, 503, 508], "forget": [18, 52], "plot_sequ": [18, 19], "015": 19, "auto_examples_metadata_process": 19, "192": [20, 26, 28, 43, 501], "20040119072730": [20, 26, 28, 43, 501, 503], "12322": [20, 26, 28, 43, 501, 503], "0005": [20, 26, 28, 43, 74, 75, 76, 77, 130, 157, 158, 468, 476, 477, 501, 502, 503], "primari": [20, 26, 28, 43, 501], "072731": [20, 26, 28, 501], "19970430": 20, "072730": [20, 26, 28], "112749": 20, "112936": 20, "113008": 20, "ge": 20, "medic": [20, 36, 40, 42, 503], "system": [20, 24, 26, 27, 28, 39, 48, 167, 215, 501, 503, 505, 508, 509], "jfk": 20, "0500": 20, "ct01_oc0": 20, "e": [20, 24, 26, 27, 28, 31, 36, 38, 39, 40, 47, 49, 50, 54, 83, 95, 127, 130, 133, 148, 157, 163, 164, 167, 168, 169, 178, 200, 201, 215, 216, 436, 441, 442, 476, 479, 486, 488, 492, 499, 500, 501, 505], "rhapsod": 20, "0009": [20, 43, 50, 130, 211, 215, 476, 489], "gems_iden_01": [20, 43], "fidel": [20, 43], "ge_genesis_ff": [20, 43], "suit": [20, 43, 476, 496], "ct01": [20, 43], "1004": [20, 468, 476, 489], "product": 20, "hispe": 20, "1027": 20, "sl": [20, 26, 28, 29, 468], "862399669": 20, "servic": [20, 503], "1031": 20, "mobil": 20, "10e6": 20, "genesi": 20, "05": [20, 500], "10e7": 20, "exam": 20, "checksum": 20, "973283917": 20, "10e9": 20, "stamp": 20, "abcd1234": [20, 501], "1234abcd": [20, 501], "ag": [20, 29], "AS": [20, 29, 464], "000y": 20, "21b0": 20, "addit": [20, 26, 27, 28, 31, 74, 130, 166, 167, 442, 484, 492, 494, 502, 503, 505, 506], "histori": 20, "gems_pati_01": 20, "statu": [20, 115, 127], "isovue300": 20, "helic": 20, "kvp": 20, "0088": 20, "collect": [20, 54, 132, 158, 503], "diamet": 20, "480": 20, "rout": 20, "iv": 20, "1100": 20, "reconstruct": 20, "338": 20, "6716": 20, "1110": 20, "distanc": 20, "detector": 20, "1099": 20, "3100585938": 20, "1111": 20, "630": 20, "1120": 20, "tilt": 20, "tabl": [20, 23, 29, 33, 41, 50, 127, 130, 137, 138, 140, 141, 142, 143, 178, 191, 201, 202, 203, 204, 205, 206, 211, 213, 214, 215, 468, 476, 489, 492, 500, 501, 503, 505, 506], "height": 20, "133": [20, 162], "699997": 20, "1150": 20, "exposur": 20, "1601": 20, "1151": 20, "rai": [20, 26, 28, 501], "tube": 20, "current": [20, 24, 26, 28, 34, 36, 39, 41, 94, 127, 130, 167, 168, 176, 177, 184, 202, 208, 215, 442, 476, 494, 500, 503, 505, 506, 508], "170": 20, "1152": 20, "1160": 20, "filter": [20, 26, 27, 130], "larg": [20, 41, 43, 52, 130, 133, 137, 138, 158, 175, 435, 476, 478, 479, 486, 488, 489, 492, 494, 506, 509], "bowti": 20, "fil": 20, "1190": [20, 476, 492], "focal": 20, "spot": 20, "1210": 20, "convolut": 20, "kernel": 20, "ff": [20, 143], "0019": 20, "gems_acqu_01": 20, "912": [20, 476, 489], "cell": 20, "theta": 20, "373": [20, 22], "75": [20, 26, 27, 51, 357], "0166": 20, "100f": 20, "horiz": 20, "ref": 20, "955": [20, 38], "799988": 20, "1011": 20, "1013": [20, 476, 489], "baselin": [20, 42, 50, 140, 215, 409, 476, 496, 509], "1014": [20, 476, 492], "1015": 20, "enhanc": [20, 202, 215, 479], "1016": [20, 476, 489], "1017": 20, "1018": 20, "ra": 20, "1019": [20, 50], "79187": 20, "101a": 20, "last": [20, 26, 28, 36, 38, 40, 43, 47, 83, 95, 96, 139, 141, 476, 482, 495, 501, 503, 506], "101b": 20, "loc": 20, "320": [20, 50], "197968": 20, "101e": 20, "1023": 20, "speed": [20, 476, 479, 483, 487, 494, 496], "mm": [20, 23], "rotat": 20, "1024": [20, 127, 130, 476, 490, 502, 506], "mid": [20, 26, 28, 38, 40], "sec": 20, "17": [20, 51, 378, 508], "784578": 20, "1025": 20, "1026": 20, "azimuth": 20, "degre": 20, "msec": 20, "102a": 20, "On": [20, 34, 175, 442, 502], "178": 20, "079926": 20, "102b": 20, "off": [20, 26, 27, 39, 47, 92, 158, 476, 483, 491, 500], "3994": 20, "299316": 20, "102c": 20, "trigger": [20, 26, 28], "10431": 20, "102e": 20, "718": 20, "079956": 20, "102f": 20, "984": 20, "1039": [20, 503], "sfov": 20, "stat": [20, 159], "recon": 20, "comput": 20, "1042": [20, 476, 491], "segment": [20, 202, 214, 215, 476, 487, 494], "1043": 20, "1044": 20, "interscan": 20, "delai": [20, 26, 28], "1047": [20, 476, 491], "compress": [20, 23, 31, 33, 34, 37, 40, 44, 50, 66, 130, 137, 138, 140, 141, 148, 178, 214, 215, 409, 476, 485, 487, 489, 494, 495, 504, 505], "factor": [20, 51, 476, 483, 506, 509], "104a": 20, "104b": [20, 26, 28], "1052": [20, 203, 204, 215], "post": [20, 47, 476, 491], "proc": 20, "1057": 20, "water": [20, 442], "95": [20, 476, 482, 485], "1058": 20, "bone": [20, 48], "105e": 20, "763": 20, "105f": 20, "increment": [20, 169], "1969": 20, "1061": 20, "1576": 20, "1062": 20, "106a": 20, "depend": [20, 31, 34, 41, 42, 50, 52, 95, 96, 127, 130, 148, 167, 178, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 464, 468, 476, 487, 488, 495, 500, 502, 503, 505, 508, 509], "process": [20, 25, 26, 31, 42, 140, 208, 215, 409, 435, 476, 479, 491, 494, 496, 499, 500, 509], "106b": 20, "852": [20, 476, 488], "1071": 20, "fatq": 20, "estim": 20, "were": [20, 26, 28, 130, 476, 482, 484, 499, 500, 509], "1072": 20, "z": [20, 87, 169, 170], "chan": 20, "avg": 20, "1073": [20, 476, 491], "1074": 20, "max": [20, 203, 204, 215], "1075": [20, 476, 491], "1076": 20, "10da": 20, "10db": 20, "projector": 20, "coeffici": [20, 26, 27], "10dc": 20, "10dd": 20, "overrang": 20, "10de": 20, "alpha": [20, 202, 215, 476, 488, 489, 507], "158": 20, "135803": 20, "179": 20, "035797": 20, "sn": 20, "gems_rela_01": 20, "prescrib": 20, "1005": 20, "1007": 20, "1605775145": 20, "unknown": [20, 29, 83, 127, 128, 130, 141, 188, 476, 481, 486, 488, 492, 494, 501, 507], "24078": 20, "acq": 20, "750675506": 20, "1037": 20, "screen": [20, 24, 26], "anatom": 20, "7400": 20, "1091": 20, "biopsi": 20, "1092": 20, "fl": [20, 26, 28, 29, 501], "1093": [20, 476, 492], "gems_stdy_01": 20, "fd": [20, 29], "862399761": 20, "111079": 20, "No": [20, 47, 170, 455, 498], "header": [20, 150, 157, 162, 214, 476, 478, 501], "107d": 20, "complet": [20, 24, 26, 31, 52, 130, 175, 476, 477, 499, 503, 505], "0025": 20, "gems_sers_01": 20, "1006": [20, 468, 476, 489], "puls": 20, "44": [20, 298], "landmark": 20, "counter": 20, "archiv": 20, "receiv": [20, 191], "host": [20, 47], "0027": 20, "gems_imag_01": 20, "101c": 20, "vma": 20, "mamp": 20, "101d": 20, "phase": 20, "mod": 20, "24": 20, "101f": 20, "clip": 20, "129": [20, 506], "smart": 20, "ON": 20, "foreign": [20, 476, 477], "revis": [20, 476, 480, 482, 483], "1035": 20, "letter": [20, 38], "20406341552734": 20, "r": [20, 34, 127, 130, 502], "coord": 20, "199999809265137": 20, "699999809265137": 20, "69999694824219": 20, "1045": 20, "1046": 20, "1048": 20, "corner": 20, "180": [20, 38], "53579711914062": 20, "1049": [20, 476, 491], "03579711914062": 20, "104c": [20, 26, 28], "159": [20, 476, 489], "63580322265625": 20, "104d": [20, 26, 28], "19999694824219": 20, "116": [20, 26, 27, 28, 51], "20304870605469": 20, "l": [20, 23, 42, 140, 215, 314, 476, 487, 505], "1053": [20, 203, 204, 215, 476, 491], "anterior": 20, "posterior": 20, "1054": 20, "1055": 20, "0120": 20, "rescal": [20, 44, 203, 204, 206, 207, 215], "intercept": [20, 38, 203, 204, 215], "slope": [20, 203, 204, 215], "0029": 20, "gems_imps_01": 20, "lower": [20, 130, 133, 167, 503, 507], "rang": [20, 31, 34, 49, 91, 148, 203, 204, 215, 476, 487, 489, 501], "pixels1": 20, "87": 20, "1008": 20, "1009": 20, "100a": 20, "764": 20, "hdr": 20, "struct": [20, 193, 462], "1034": 20, "advantag": [20, 476, 483], "overflow": 20, "underflow": 20, "0043": [20, 26, 28, 501], "gems_parm_01": 20, "400": [20, 50], "input": [20, 24, 26, 50, 200, 208, 215, 442, 476, 492], "1012": 20, "chain": 20, "14": [20, 42, 140, 303, 304, 406, 476, 491], "decon": 20, "paramet": [20, 24, 26, 31, 36, 50, 51, 52, 74, 75, 76, 77, 79, 80, 92, 94, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 155, 157, 158, 159, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 191, 193, 194, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 221, 433, 436, 437, 440, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 476, 482, 484, 486, 492, 494, 495, 501, 503], "107": [20, 224, 295, 331, 476, 483], "21": [20, 51, 379], "20": [20, 51, 215, 344, 390, 476, 494], "calibr": 20, "ibh": 20, "scale": 20, "095": 20, "bbh": 20, "085000": 20, "102000": 20, "095000": 20, "blend": 20, "350": 20, "ppscan": 20, "integr": 20, "level": [20, 26, 27, 28, 35, 36, 130, 158, 167, 168, 476, 482, 494, 497, 500, 501, 502, 503], "40": [20, 51, 360, 476, 494], "1021": 20, "glow": 20, "term": [20, 50, 201, 215], "748": 20, "749": 20, "750": 20, "pitch": 20, "ratio": [20, 33], "1028": 20, "uniqu": [20, 29, 31, 43, 148, 167, 168, 169, 187, 476, 485, 496, 501, 503], "iden": 20, "1029": [20, 476, 490], "histogram": 20, "2068": 20, "user": [20, 31, 38, 40, 45, 46, 47, 48, 77, 86, 130, 148, 155, 160, 178, 476, 479, 482, 488, 489, 492, 497, 499, 501, 503, 508], "coordin": [20, 26, 27, 38], "200000": 20, "700000": 20, "07992553710938": 20, "3816": 20, "219482421875": 20, "fpa": 20, "gain": 20, "ad": [20, 25, 26, 27, 33, 36, 38, 47, 89, 105, 130, 133, 134, 149, 165, 167, 168, 178, 191, 200, 206, 208, 211, 213, 215, 216, 219, 451, 453, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 497, 498, 499, 502, 507], "cal": 20, "reg": 20, "xm": [20, 26, 28], "auto": [20, 130, 476, 477], "pattern": [20, 26, 28, 103, 104, 106], "tggc": [20, 26, 28], "104e": [20, 26, 28, 501], "durat": [20, 26, 28, 501], "60060977935791": [20, 26, 28, 501], "8192": [20, 175], "32768": [20, 26, 28, 501], "difflib": 20, "filename_mr": 20, "filename_ct": 20, "tupl": [20, 31, 38, 41, 83, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 130, 133, 138, 140, 143, 148, 154, 157, 200, 216, 219, 220, 442, 476, 479, 488, 506], "forc": [20, 130, 150, 157, 161, 162, 167, 476, 480, 482, 484, 501], "compar": [20, 54, 476, 483, 486, 494, 499, 500], "termin": [20, 26, 27, 28, 39, 141, 158, 171], "newlin": [20, 501], "massag": 20, "form": [20, 34, 47, 49, 50, 51, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 130, 131, 219, 433, 442], "rep": 20, "split": [20, 47, 441, 476, 477, 478], "diff": [20, 499], "111": [20, 21, 476, 482], "plot_dicom_differ": [20, 21], "auto_exampl": 21, "show_charset_nam": [21, 22], "veri": [22, 29, 45, 476, 479, 499, 503, 506], "simpl": [22, 38, 40, 48, 476, 477], "app": 22, "valuerep": [22, 58, 450, 452, 456, 458, 473], "personnameunicod": [22, 58, 476, 491], "default_encod": [22, 442], "iso8859": [22, 155, 158, 190, 457], "person_nam": 22, "2008": [22, 442], "ps3": [22, 442], "p98": 22, "yamada": 22, "tarou": 22, "033": 22, "3ed": 22, "bb": 22, "iso2022_jp": 22, "j": 22, "105": [22, 51, 224, 329, 331], "wang": 22, "xiaodong": 22, "xcd": 22, "xf5": 22, "x5e": 22, "xd0": 22, "xa1": 22, "xb6": 22, "xab": 22, "gb18030": 22, "104": [22, 224, 272, 273, 274, 275, 276, 328, 331], "xe7": 22, "x8e": 22, "x8b": 22, "xe5": 22, "xb0": 22, "x8f": 22, "xe6": 22, "x9d": 22, "xb1": 22, "utf": 22, "101": [22, 224, 324, 331], "hong": [22, 442], "gildong": [22, 442], "363": 22, "321": 22, "316": 22, "324": 22, "327": 22, "310": 22, "253": 22, "261": 22, "346": [22, 476, 485], "265": 22, "277": [22, 476, 489], "euc_kr": [22, 442], "label": [22, 26, 28, 31, 48, 148], "easiest": [23, 506], "probabl": [23, 52, 503], "zenodo": 23, "doi": 23, "enter": [23, 508], "citat": 23, "style": [23, 47, 476, 478, 481], "along": [23, 167], "et": 23, "al": 23, "github": [23, 47, 476, 485, 498, 499, 500, 505], "onlin": [23, 47], "yyyi": 23, "dd": 23, "deal": [23, 39, 47, 49, 214, 476, 478, 487, 501, 508], "jpeg": [23, 34, 40, 41, 42, 50, 78, 137, 138, 140, 209, 210, 211, 212, 213, 214, 215, 309, 314, 317, 409, 476, 487, 489, 491, 492, 494, 505, 506], "releas": [23, 47, 473, 485, 489, 492], "march": 23, "2018": [23, 500], "june": 23, "octob": 23, "juli": 23, "2019": 23, "januari": 23, "2020": [23, 45], "mai": [23, 24, 26, 27, 30, 31, 34, 39, 42, 43, 45, 47, 48, 49, 50, 52, 76, 94, 98, 130, 137, 138, 139, 140, 141, 142, 143, 148, 167, 178, 191, 214, 442, 459, 461, 476, 489, 499, 500, 501, 503, 505, 506, 508, 509], "novemb": 23, "august": 23, "2021": [23, 476, 496], "2022": 23, "2023": [23, 473], "jan": [23, 82, 501], "2024": 23, "recreat": [24, 26, 476, 484], "within": [24, 26, 27, 28, 31, 47, 78, 87, 130, 157, 158, 166, 167, 178, 221, 457, 476, 492, 503, 505, 508, 509], "detail": [24, 26, 34, 38, 39, 40, 50, 52, 92, 127, 130, 158, 221, 440, 473, 476, 494, 497, 499, 500], "review": [24, 26, 498, 499, 500], "more": [24, 26, 27, 29, 31, 34, 36, 38, 39, 40, 41, 42, 43, 49, 50, 51, 98, 127, 130, 137, 139, 140, 141, 143, 148, 158, 161, 167, 170, 175, 178, 179, 193, 215, 442, 446, 476, 477, 478, 479, 481, 482, 489, 499, 500, 501, 502, 503, 505, 506, 508, 509], "than": [24, 25, 26, 27, 28, 29, 33, 34, 36, 41, 42, 47, 49, 52, 54, 127, 130, 139, 140, 141, 143, 157, 161, 167, 170, 178, 179, 193, 200, 215, 433, 476, 477, 478, 479, 484, 485, 486, 489, 491, 494, 501, 502], "export": [24, 26, 39, 476, 494], "includ": [24, 25, 26, 39, 49, 52, 127, 130, 137, 165, 167, 178, 201, 214, 215, 221, 473, 476, 478, 480, 482, 484, 485, 499, 500, 501, 503, 506, 508, 509], "health": [24, 26, 52], "sensit": [24, 26, 51, 52, 130, 468, 509], "git": [24, 26, 27, 499, 500, 505], "util": [24, 26, 50, 52, 61, 62, 63, 66, 68, 473, 476, 477, 484, 485, 497], "main": [24, 25, 26, 37, 38, 46, 47, 52, 117, 476, 479, 499, 500, 501, 505], "instancecreationd": [24, 26], "20030903": [24, 26, 27, 38], "instancecreationtim": [24, 26], "150031": [24, 26, 27, 38], "481": [24, 26, 236, 237, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 389, 390, 405, 406], "sopinstanceuid": [24, 26, 33, 166], "777": [24, 26, 27, 38], "7777": [24, 26, 27, 38], "20030903150023": [24, 26, 27, 38], "20030716": [24, 26, 27, 28, 38], "153557": [24, 26, 28, 38], "prefix": [24, 26, 27, 28, 36, 150, 157, 162, 169, 178, 191, 364, 433, 442, 476, 488, 499, 500, 501, 507, 508], "rather": [24, 26, 27, 28, 47, 49, 52, 127, 130, 167, 178, 200, 476, 477, 478, 485, 489, 491, 494, 501], "In": [24, 25, 26, 27, 31, 36, 38, 41, 47, 50, 52, 74, 167, 216, 476, 484, 490, 492, 496, 499, 500, 501, 503, 506, 508], "wa": [24, 25, 26, 34, 36, 47, 127, 130, 131, 167, 172, 178, 451, 453, 476, 479, 486, 489, 494, 499, 500, 503, 506], "direct": [24, 26, 38, 47, 215, 500, 502, 503], "specifi": [24, 25, 26, 27, 28, 38, 108, 110, 127, 130, 148, 157, 158, 178, 214, 442, 468, 476, 489, 494, 501, 503, 505, 508], "exclude_s": [24, 26], "filespec": [24, 25, 26, 27, 28], "outfil": [24, 26, 501], "argument": [24, 25, 26, 27, 28, 36, 38, 41, 90, 130, 132, 199, 476, 478, 479, 487, 488, 489, 490, 491, 492, 502, 503, 506], "If": [24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 46, 47, 50, 51, 52, 54, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 92, 95, 96, 99, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 130, 132, 133, 134, 137, 140, 141, 143, 148, 154, 155, 157, 158, 159, 162, 166, 167, 168, 169, 175, 176, 177, 178, 191, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 433, 436, 437, 442, 446, 450, 451, 452, 453, 458, 462, 465, 468, 476, 482, 494, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509], "your_fil": [24, 26, 27, 28], "yourplan": [24, 26, 27, 28], "stdout": [24, 26], "messag": [24, 26, 27, 28, 92, 221, 476, 479, 488, 496, 499, 501, 503], "exclud": [24, 26, 27, 28, 52, 130, 201, 215], "binari": [24, 26, 127, 130, 215, 476, 480, 488, 489], "larger": [24, 26, 157, 505, 506], "save_filenam": [24, 26], "otherwis": [24, 26, 31, 34, 38, 86, 95, 96, 114, 115, 119, 120, 124, 125, 126, 127, 130, 131, 137, 148, 155, 167, 169, 170, 173, 174, 198, 205, 206, 207, 215, 409, 442, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 461, 462, 464, 465], "_from_codifi": [24, 26], "dummi": [24, 26], "error": [24, 26, 52, 54, 74, 84, 85, 94, 127, 130, 132, 441, 446, 473, 476, 479, 480, 483, 485, 486, 487, 488, 489, 491, 492, 496, 499, 501, 508], "savenam": [24, 26], "dicomfil": [24, 26, 68], "pythoncod": [24, 26], "By": [24, 26, 50, 165, 167, 440, 476, 480, 501, 508], "translat": [24, 26, 38, 476, 485], "whole": [24, 26, 155, 201, 215, 506], "fractiongroupsequ": [24, 26, 27, 28], "non": [24, 26, 29, 38, 39, 107, 108, 109, 110, 125, 127, 128, 130, 134, 140, 165, 167, 178, 191, 214, 215, 224, 440, 446, 448, 451, 453, 459, 461, 476, 480, 481, 485, 486, 487, 488, 489, 492, 496, 501], "fractiongroupnumb": [24, 26], "numberoffractionsplan": [24, 26], "numberofbeam": [24, 26], "numberofbrachyapplicationsetup": [24, 26], "referenc": [24, 26, 27, 28, 36, 38, 160, 166, 167, 503], "refd_beam_sequ": [24, 26], "referencedbeamsequ": [24, 26], "refd_beam1": [24, 26], "beamdosespecificationpoint": [24, 26], "239": [24, 26, 27, 28, 38], "531250000000": [24, 26, 27, 28], "751": [24, 26, 27, 28], "87000000000": [24, 26, 27, 28], "accept": [24, 26, 29, 39, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 130, 132, 143, 476, 491, 492, 494, 496, 499], "issu": [24, 26, 28, 40, 45, 47, 52, 54, 74, 75, 77, 85, 215, 476, 479, 480, 481, 482, 483, 488, 497, 498, 499, 508], "toward": [24, 26], "loop": [24, 26, 52], "develop": [25, 26, 27, 39, 476, 485, 499, 500], "subcommand": [25, 26, 27, 476, 494], "entri": [25, 26, 27, 38, 50, 107, 108, 109, 110, 117, 118, 476, 478, 495, 499, 500], "packag": [25, 26, 27, 40, 42, 44, 46, 48, 95, 201, 209, 210, 211, 212, 213, 214, 468, 476, 477, 480, 485, 492, 494, 499, 501, 503, 505], "setup": [25, 26, 27, 28, 40, 476, 483, 484, 496], "regist": [25, 26, 127, 409, 476, 492, 501], "command1": [25, 26], "command2": [25, 26], "setuptool": [25, 26, 476, 477, 484, 494, 508], "yourpackag": [25, 26], "variou": [25, 26, 476, 477], "entry_point": [25, 26], "pydicom_subcommand": [25, 26], "command1modul": [25, 26], "add_subpars": [25, 26], "command2modul": [25, 26], "liter": [25, 26], "must": [25, 26, 31, 33, 34, 38, 39, 41, 49, 50, 83, 86, 130, 133, 137, 138, 143, 157, 165, 167, 170, 172, 174, 178, 200, 201, 202, 206, 207, 215, 447, 465, 476, 494, 501, 502, 503, 506, 508, 509], "wish": [25, 26, 39, 215], "usual": [25, 26, 27, 28, 33, 38, 43, 50, 108, 131, 150, 155, 476, 479, 499, 501, 505, 506], "convent": [25, 26, 38, 442], "singl": [25, 26, 29, 31, 33, 36, 76, 107, 109, 127, 130, 137, 139, 141, 143, 146, 148, 164, 165, 167, 196, 197, 200, 201, 213, 214, 215, 453, 462, 476, 477, 487, 495, 499, 502, 503], "subpars": [25, 26], "do_command": [25, 26], "filespec_help": [25, 26], "filespec_pars": [25, 26], "sub": [25, 26], "parser": [25, 26], "add_pars": [25, 26], "subcommandnam": [25, 26], "add_argu": [25, 26], "set_default": [25, 26], "func": [25, 26, 500], "And": [25, 26, 27, 28, 95, 476, 492, 499, 500, 501, 508, 509], "arg": [25, 26, 130, 132, 150, 151, 152, 153, 154, 219, 434, 438, 442, 444, 476, 480], "element_v": [25, 26], "yourarg": [25, 26], "argpars": [25, 26], "snippet": [25, 26], "element_valu": [25, 26], "pair": [25, 26, 132, 167], "codifi": [25, 27, 44, 476, 484, 486, 494, 496], "filetyp": [25, 26], "yourself": [25, 26, 49, 50], "shown": [25, 26, 28, 38, 43, 52, 54, 215, 476, 477, 478, 491, 501, 503, 508], "relat": [25, 26, 27, 34, 39, 49, 51, 57, 130, 133, 178, 201, 211, 213, 214, 468, 476, 477, 499, 503, 509], "think": [25, 26], "consid": [25, 26, 45, 52, 130, 215, 499, 500, 502], "contribut": [25, 26, 476, 479, 482, 483, 504], "case": [25, 26, 38, 39, 41, 45, 47, 52, 54, 74, 76, 82, 130, 158, 442, 476, 488, 492, 501, 502, 506, 508, 509], "under": [25, 26, 38, 137, 138, 476, 477, 479, 485, 499, 500, 505], "pull": [25, 26, 28, 498, 505], "request": [25, 26, 28, 38, 476, 492, 494, 498], "v2": [26, 27, 33, 45, 476, 492, 505, 509], "offer": [26, 27, 41, 50, 130, 506], "explor": [26, 27, 43], "156": [26, 27, 38], "rt": [26, 27, 28, 38, 165, 167, 503], "plan": [26, 27, 28, 38, 40, 45, 165], "999": [26, 27, 38, 476, 489], "99": [26, 27, 38, 42, 211, 224, 259, 412], "9999": [26, 27, 38, 500], "implicit": [26, 27, 38, 42, 87, 130, 131, 155, 158, 167, 178, 211, 409, 457, 476, 479, 486, 488, 494, 506], "888": [26, 27, 38], "88": [26, 27, 38, 222, 229, 242, 243, 247, 248, 281, 285, 288, 300, 319, 335, 356, 357, 358, 360, 385, 395, 431, 476, 480], "replic": [26, 27], "exactli": [26, 27, 49, 51, 501], "notat": [26, 27, 28, 446, 501], "0071": [26, 27, 28], "fraction": [26, 27, 28], "0078": [26, 27, 28], "00a0": [26, 27, 28], "brachi": [26, 27, 28], "300c": [26, 27, 28], "0082": [26, 27, 28], "dose": [26, 27, 28, 165, 167, 476, 482, 503], "0275401": [26, 27, 28], "meterset": [26, 27, 28], "0036697": [26, 27, 28], "0006": [26, 27, 28, 34, 130, 211, 213, 214, 215], "simpli": [26, 27, 38, 47, 49], "particular": [26, 27, 38, 41, 49, 50, 87, 160, 476, 479, 489, 501, 507], "q": [26, 27, 28, 499], "quiet": [26, 27, 28], "automat": [26, 27, 36, 38, 41, 43, 47, 49, 50, 52, 96, 127, 167, 436, 437, 476, 485, 489, 491, 494, 499, 500, 501], "environ": [26, 27, 39, 476, 477, 492, 499, 500, 504, 505], "variabl": [26, 27, 36, 37, 38, 39, 476, 488, 492, 496, 508], "clone": [26, 27, 499, 500, 505], "repositori": [26, 27, 48, 105, 476, 497, 505], "repeat": [26, 27, 49, 117, 120, 124, 125, 167, 476, 487, 496, 501], "reinstal": [26, 27], "similar": [26, 27, 36, 131, 195, 476, 478, 482, 502, 507, 508], "pipe": [26, 27], "grep": [26, 27], "either": [26, 27, 34, 38, 39, 46, 96, 127, 130, 157, 162, 167, 178, 201, 215, 219, 442, 450, 458, 476, 492, 500, 501, 503, 505, 506, 508], "iso": [26, 27, 208, 215, 309, 314, 317, 476, 489], "741": [26, 27], "organ_at_risk": [26, 27], "deliveri": [26, 27], "maximum": [26, 27, 34, 52, 127, 137, 138, 148, 169, 476, 496], "002c": [26, 27], "organ": [26, 27, 442], "risk": [26, 27], "ptv": [26, 27], "target": [26, 27, 36, 47], "0026": [26, 27], "prescript": [26, 27], "826203": [26, 27], "00b0": [26, 27], "00b6": [26, 27], "0111": [26, 27], "control": [26, 27, 46, 82, 83, 100, 101, 476, 482, 503], "0115": [26, 27], "rate": [26, 27], "650": [26, 27], "011a": [26, 27], "010c": [26, 27], "cumul": [26, 27], "0051": [26, 27], "9990268": [26, 27], "0180": [26, 27], "regular": [26, 27, 38, 476, 496], "express": [26, 27], "abil": [26, 27, 50, 476, 484, 485, 492], "alreadi": [26, 28, 33, 35, 36, 41, 50, 74, 108, 130, 134, 141, 168, 172, 191, 200, 215, 435, 476, 484, 501, 503, 506, 509], "present": [26, 28, 49, 77, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 130, 131, 134, 140, 141, 142, 143, 148, 150, 157, 162, 165, 167, 168, 178, 191, 202, 203, 204, 205, 206, 207, 215, 476, 478, 486, 488, 489, 501, 509], "nest": [26, 28, 38, 130, 476, 483, 496], "minim": [26, 28, 178, 191], "below": [26, 28, 29, 33, 38, 41, 43, 168, 178, 201, 211, 213, 214, 215, 468, 476, 479, 503, 506, 507], "studyid": [26, 28], "bitsstor": [26, 28, 211, 213, 215], "pre": [26, 28, 38, 40, 47, 476, 497, 499], "id00001": [26, 28], "study1": [26, 28], "plan1": [26, 28], "02754010000000": [26, 28], "003669700000": [26, 28], "treatment": [26, 28], "static": [26, 28, 132, 148], "photon": [26, 28], "energi": [26, 28], "00000000000000": [26, 28], "coll": [26, 28], "couch": [26, 28], "wedg": [26, 28], "boli": [26, 28], "alwai": [26, 28, 42, 50, 119, 127, 133, 157, 211, 215, 476, 488, 492, 494], "those": [26, 28, 31, 35, 39, 43, 47, 476, 479, 482, 492, 501, 503], "extra": [26, 28, 38, 476, 497, 508], "submit": [26, 28, 40, 476, 482, 498, 499, 500], "interfac": [27, 35, 476, 494, 505], "introduct": [28, 31, 37, 44, 499, 500, 503, 504, 509], "anyth": [29, 43, 49, 50, 154, 215], "ascii": [29, 170, 196, 476, 488], "decim": [29, 79, 100, 435, 436, 437, 439, 440, 446, 447, 476, 482, 483, 494], "sign": [29, 31, 34, 50, 78, 148, 476, 492, 499, 500, 509], "unsign": [29, 31, 34, 50, 143, 148, 154, 476, 492, 509], "integ": [29, 31, 34, 50, 143, 215, 433, 439, 440, 476, 480, 482, 492, 509], "depth": [29, 37, 48, 50, 168, 476, 489, 505], "even": [29, 43, 49, 137, 139, 141, 157, 162, 215, 476, 492, 501, 503, 506], "encod": [29, 34, 35, 37, 41, 42, 50, 51, 54, 74, 75, 76, 77, 127, 128, 130, 131, 137, 138, 139, 140, 141, 144, 145, 155, 158, 163, 164, 167, 178, 185, 189, 191, 193, 194, 195, 197, 214, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 473, 476, 482, 485, 486, 487, 488, 489, 494, 495, 496, 501, 502, 506], "correctli": [29, 52, 95, 96, 167, 178, 209, 210, 476, 479, 482, 485, 486, 488, 489, 492, 494, 495, 496, 499], "empti": [29, 127, 130, 131, 140, 142, 143, 215, 216, 436, 437, 442, 462, 476, 477, 485, 488, 489, 490, 491, 492, 494, 501, 503, 509], "multivalu": [29, 58, 80, 196, 197, 216, 441, 449, 450, 451, 452, 453, 456, 464, 467, 476, 482], "accord": [29, 52, 157, 189, 501, 503], "od": [29, 476, 485, 486, 494], "OF": [29, 476, 491], "ol": [29, 476, 485, 486, 494], "st": [29, 40], "un": [29, 54, 88, 155, 188, 460, 476, 477, 489, 491, 494, 495, 501], "ur": [29, 461], "ut": 29, "never": [29, 79, 130, 499], "greater": [29, 34, 130, 139, 141, 215, 433, 476, 485, 502], "hint": 29, "union": 29, "mutablesequ": [29, 74, 128, 130, 155, 158, 163, 164, 441, 448, 449, 450, 451, 452, 453, 456, 458, 459, 462, 464, 466, 467], "AT": [29, 449, 476, 489, 494, 496], "attribut": [29, 43, 82, 95, 127, 129, 130, 131, 132, 147, 148, 151, 153, 154, 166, 167, 168, 178, 216, 218, 409, 434, 436, 437, 438, 439, 440, 442, 444, 445, 476, 477, 487, 492, 495, 496, 501, 503], "basetag": [29, 38, 58, 83, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 129, 130, 131, 132, 133, 154, 155, 157, 158, 161, 167, 171, 173, 174, 175, 219, 220, 221, 449, 465, 476, 479, 494], "dsfloat": [29, 58, 435, 451, 476, 494], "dsdecim": [29, 58, 86, 435, 451, 476, 494], "doubl": [29, 36, 50, 130, 211, 215, 476, 489], "ov": [29, 476, 489, 494], "word": [29, 36, 52, 108, 184, 442, 501], "personnam": [29, 58, 127, 443, 456, 476, 477, 488, 491, 492, 494], "short": [29, 47, 154, 465, 499, 501], "sv": [29, 468, 476, 489], "uc": [29, 466, 476, 485], "unlimit": 29, "identifi": [29, 39, 43, 52, 187], "uri": [29, 130, 476, 492, 502], "url": [29, 36, 95], "uv": [29, 468, 476, 489], "config": [29, 39, 440, 464, 473, 476, 482, 487, 488, 489, 491, 492, 494], "datetime_convers": [29, 450, 452, 458, 473], "use_ds_decim": [29, 80, 451, 473, 476, 491], "rlelosslessencod": [30, 31, 33, 473, 476, 494], "byteord": [30, 31, 509], "guid": [31, 36, 40, 47, 130, 473, 476, 488, 494, 500, 501, 506], "cover": [31, 501, 503, 506, 509], "tutori": [31, 36, 476, 489, 498, 499, 500, 501, 503, 505, 506, 508, 509], "intend": [31, 33, 34, 130, 148, 499], "provid": [31, 37, 38, 43, 50, 95, 96, 127, 130, 148, 201, 211, 213, 214, 468, 476, 483, 502, 505, 506, 507], "mechan": [31, 148], "raw": [31, 38, 49, 50, 51, 128, 129, 130, 146, 148, 155, 159, 165, 468, 476, 482, 488, 491, 509], "unencod": [31, 148], "least": [31, 34, 465, 503], "convers": [31, 33, 34, 47, 91, 127, 201, 211, 213, 214, 468, 476, 478, 488, 489, 491, 502, 509], "signatur": [31, 476, 492], "foo": 31, "kwarg": [31, 130, 132, 148, 151, 152, 153, 154, 167, 434, 438, 442, 444, 506], "multi": [31, 42, 50, 58, 80, 127, 130, 137, 140, 141, 142, 143, 148, 167, 200, 201, 215, 461, 473, 476, 485, 487, 489, 491, 501, 509], "support": [31, 39, 44, 47, 68, 69, 78, 95, 96, 130, 148, 167, 201, 202, 208, 209, 210, 211, 212, 213, 214, 215, 219, 468, 476, 477, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 497, 503, 504, 505, 506, 507], "minimum": [31, 33, 191], "transfer_syntax_uid": [31, 130], "samples_per_pixel": [31, 148], "grayscal": [31, 33, 34, 50], "rgb": [31, 33, 34, 41, 50, 96, 202, 208, 209, 210, 211, 212, 213, 214, 215, 476, 486, 489, 494, 506], "number_of_fram": [31, 148], "bits_alloc": [31, 148, 215], "bits_stor": [31, 148], "12": [31, 34, 51, 148, 211, 283, 284, 380, 430, 432, 503, 509], "4095": [31, 34, 148], "65535": [31, 148, 503], "pixel_represent": [31, 148], "complement": [31, 34, 37, 148], "photometric_interpret": [31, 148], "color": [31, 33, 34, 41, 44, 148, 202, 208, 215, 476, 489, 491, 506], "ybr_full": [31, 33, 34, 50, 148, 208, 211, 213, 215, 476, 489, 495], "At": [31, 499, 507], "is_avail": [31, 95, 96, 148, 201, 209, 210, 211, 212, 213, 214, 468, 476, 487], "bool": [31, 54, 79, 80, 92, 94, 100, 105, 114, 115, 124, 125, 127, 129, 130, 131, 134, 137, 143, 148, 154, 155, 156, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 191, 198, 201, 206, 208, 209, 210, 211, 212, 213, 214, 215, 218, 409, 435, 436, 437, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 464, 465, 468], "met": [31, 161, 201, 209, 210, 211, 212, 213, 214, 468, 476, 487], "encoder_depend": [31, 148], "rlelossless": [31, 33, 41, 130, 499, 506], "jpeg2000": [31, 42, 140, 476, 487, 489], "pillow": [31, 42, 130, 212, 476, 485, 487, 489, 491, 494, 499], "imagecodec": 31, "gdcm": [31, 33, 41, 42, 130, 147, 209, 476, 479, 485, 488, 492, 494, 495, 497, 506], "add_plugin": [31, 148], "plugin_label": 31, "my_encoder_func": 31, "my_packag": 31, "my_encod": 31, "rle": [32, 34, 41, 42, 50, 130, 137, 138, 140, 147, 149, 213, 214, 215, 366, 476, 487, 488, 494, 495, 505, 506], "lossless": [32, 34, 41, 42, 50, 130, 137, 138, 140, 147, 149, 213, 214, 215, 476, 491, 494, 495, 506], "plugin": [32, 41, 42, 130, 147, 148, 213, 476, 494, 495, 498, 505, 506], "underli": 33, "algorithm": [33, 433], "packbit": 33, "scheme": [33, 155, 456, 457, 463, 466, 467, 507, 509], "explan": 33, "relationship": [33, 167, 500], "glossari": [33, 35], "palett": [33, 34, 44, 104, 165, 167, 202, 215, 476, 489, 491], "intens": [33, 34], "black": [33, 476, 497], "index": [33, 38, 50, 51, 130, 148, 167, 168, 169, 200, 205, 206, 207, 215, 468, 476, 492, 500, 509], "red": [33, 34, 202, 215, 476, 491, 499, 500], "green": [33, 34, 476, 491], "blue": [33, 34, 476, 491], "lookup": [33, 50, 111, 112, 113, 115, 116, 126, 202, 203, 204, 205, 206, 215, 476, 492, 501], "noth": [33, 503], "equal": [33, 34, 139, 141, 476, 486, 487, 488], "ycbcr": [33, 34, 209, 210, 211, 212, 213, 214], "keep": [33, 167, 503, 505], "mind": 33, "lossi": [33, 42, 140, 215], "inclus": [33, 34], "downscal": 33, "accordingli": [33, 130], "made": [33, 47, 130, 139, 140, 167, 476, 478, 479, 491, 499, 500, 503], "might": [33, 43, 148, 509], "ask": [33, 40, 498, 499, 500, 508], "why": [33, 47, 506], "vice": [33, 202, 215], "versa": [33, 202, 215], "answer": [33, 498, 501, 506], "higher": [33, 35, 476, 479, 502, 508], "befor": [33, 42, 47, 89, 127, 130, 157, 168, 175, 200, 206, 207, 215, 476, 479, 482, 483, 485, 488, 499, 500, 501, 503, 506, 508, 509], "decis": [33, 47], "known": [33, 34, 38, 39, 43, 50, 54, 82, 94, 127, 128, 130, 202, 215, 220, 476, 486, 489, 491, 492, 494, 501, 507], "20x": [33, 41, 476, 494], "slower": [33, 41, 215], "pylibjpeg": [33, 41, 42, 130, 147, 148, 213, 476, 492, 494, 497, 506], "place": [33, 34, 41, 42, 130, 178, 476, 485, 501, 503], "samplesperpixel": [33, 211, 213, 214, 215, 476, 482, 487, 506], "bitsalloc": [33, 42, 127, 211, 213, 214, 215, 476, 487], "pixelrepresent": [33, 211, 213, 214, 215, 476, 488], "us1_uncr": 33, "921600": 33, "424152": 33, "pixel_data_handl": [33, 49, 50, 130, 469, 473, 476, 487, 494], "convert_color_spac": [33, 50, 215, 473, 476, 494], "ybr": [33, 50, 476, 494], "187460": 33, "compon": [34, 42, 78, 140, 168, 170, 213, 215, 442, 476, 477, 479, 494], "previous": [34, 159, 476, 487, 491, 494], "constrain": 34, "iod": [34, 215, 503, 509], "remain": [34, 47, 141, 167, 476, 482, 500], "hand": [34, 52, 476, 492], "ybr_rct": [34, 41, 213, 506], "whether": [34, 38, 80, 101, 127, 130, 143, 447, 476, 479, 482, 487, 489, 494, 498, 499, 505], "transform": [34, 50], "prior": [34, 41, 141, 506], "taken": [34, 47, 215], "account": 34, "doesn": [34, 49, 82, 130, 201, 211, 214, 476, 491, 499, 506], "make": [34, 38, 39, 40, 43, 45, 47, 52, 130, 131, 433, 446, 476, 479, 488, 494, 501, 503, 505, 508], "determin": [34, 38, 49, 127, 130, 167, 203, 204, 215, 503, 509], "invers": 34, "ybr_full_422": [34, 50, 208, 211, 213, 215, 476, 489, 495], "ybr_partial_420": 34, "ybr_ict": [34, 213], "restrict": 34, "further": [34, 503, 507], "constraint": [34, 436, 437, 446], "planar": [34, 50, 130, 215, 476, 487], "r1": 34, "g1": 34, "b1": 34, "r2": 34, "g2": 34, "b2": 34, "rn": 34, "gn": 34, "bn": 34, "contigu": 34, "typic": [34, 94, 135, 506], "32": [34, 130, 133, 138, 143, 211, 214, 215, 468, 476, 486, 494, 509], "being": [34, 102, 111, 112, 113, 115, 116, 119, 121, 122, 123, 126, 130, 141, 148, 214, 476, 477, 487, 494, 495, 503, 505, 506], "mean": [34, 42, 214, 433, 499, 501, 503, 506, 507, 508], "chapter": 34, "mani": [34, 39, 48, 50, 137, 138, 476, 478, 482, 483, 498], "most": [34, 38, 39, 42, 47, 48, 52, 83, 476, 479, 482, 483, 501, 503, 506, 507], "signific": [34, 39, 448, 459, 461, 476, 479], "past": [34, 141, 162, 191], "describ": [34, 38, 42, 52, 107, 109, 127, 130, 442, 502, 503], "familiar": [35, 36, 501, 503, 506, 509], "document": [35, 39, 130, 148, 165, 480, 485, 486, 498, 504], "reader": 36, "unfamiliar": 36, "step": [36, 476, 483, 494, 503, 507, 509], "achiev": [36, 139], "advanc": [36, 148], "understand": [36, 38, 499, 509], "aim": [36, 476, 492], "explain": 36, "subject": [36, 502, 507], "fairli": 36, "technic": [36, 37], "api": [36, 148, 476, 486, 499, 502, 506, 507], "learn": [36, 40, 499, 503, 508], "remind": 36, "about": [36, 38, 39, 40, 48, 50, 52, 92, 215, 501, 503, 506, 508, 509], "italic": 36, "lowercas": 36, "uppercas": [36, 127], "capit": [36, 476, 482], "american": 36, "english": 36, "spell": [36, 74, 476, 487], "comma": 36, "ital": 36, "elem": [36, 38, 49, 76, 127, 130, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 201, 217, 218, 220, 476, 479, 501], "seq": [36, 178, 501], "datael": [36, 43, 44, 49, 58, 76, 128, 130, 131, 132, 155, 158, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 209, 476, 477, 485, 486, 487, 488, 491, 495, 501], "gender": 36, "neutral": 36, "pronoun": 36, "hypothet": 36, "tick": 36, "markup": [36, 500], "0xb4": 36, "built": [36, 505], "pass": [36, 38, 41, 49, 50, 90, 103, 104, 106, 130, 132, 137, 138, 200, 476, 479, 499, 500, 503, 506, 508], "fragments_per_fram": [36, 137], "haven": [36, 499, 501], "docstr": [36, 499], "proper": [36, 476, 479], "noun": 36, "wrap": [36, 38, 178], "unless": [36, 161, 168, 476, 480, 491, 503], "good": [36, 47, 52, 499, 500], "reason": [36, 47, 500, 508], "link": [36, 500], "better": [36, 476, 480, 482, 486], "attr": 36, "ndarrai": [36, 38, 42, 49, 50, 51, 78, 80, 95, 96, 102, 130, 148, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 451, 453, 468, 476, 485, 489, 492, 506, 509], "dtype": [36, 38, 49, 50, 51, 130, 148, 213, 215, 506], "chtml": 36, "part05": [36, 500], "sect_6": 36, "html": [36, 500], "nema": 36, "org": [36, 48, 502], "four": [36, 96, 167, 175], "five": [36, 442], "sparingli": 36, "featur": [36, 39, 476, 484, 498, 499], "versionad": 36, "versionchang": 36, "handler": [36, 41, 42, 50, 78, 92, 95, 96, 130, 148, 201, 209, 210, 211, 212, 213, 214, 215, 468, 473, 476, 485, 487, 489, 490, 491, 492, 494, 495, 497, 499, 502, 506], "intermedi": [37, 38], "core": [37, 44], "mostli": [38, 129], "behav": [38, 39, 110, 200, 476, 486, 488, 503], "via": [38, 41, 54, 127, 130, 213, 476, 485, 487, 492, 494, 495, 502, 503, 506], "entir": [38, 130, 157, 160, 209, 213, 499, 501, 506], "collaps": [38, 49], "dcm_qt_tree": [38, 476, 483, 484], "0x10": [38, 127, 130, 219], "squar": [38, 43, 501], "bracket": [38, 43, 501], "conveni": [38, 43, 50, 127, 476, 492, 502], "cannot": [38, 42, 83, 167, 200, 440, 446, 476, 494, 499, 503, 508], "retriev": [38, 111, 112, 113, 116, 117, 118, 119, 121, 122, 123, 126, 127, 130, 476, 489, 501, 502], "member": 38, "numer": [38, 167, 169, 462, 476, 480, 489, 494, 496], "begin": [38, 99, 137, 162], "beam1": 38, "wai": [38, 39, 40, 46, 47, 49, 50, 52, 130, 476, 482, 498, 501, 502, 503, 505, 507], "thing": [38, 47, 49, 500, 501], "much": [38, 47, 446, 476, 479, 482, 483, 491], "harder": 38, "realli": [38, 47, 476, 479, 488], "0x300a": 38, "0xb0": 38, "0xc2": 38, "rememb": [38, 43, 49, 508], "exact": [38, 436, 437, 439, 440], "handi": 38, "dir": [38, 40, 130, 476, 482, 495, 500, 507], "dure": [38, 43, 108, 476, 495, 499, 500], "session": [38, 39, 40, 43, 130, 500], "prompt": [38, 508], "pat": 38, "patientsetupsequ": [38, 40], "patientsex": [38, 130], "anywher": [38, 501], "insensit": [38, 130], "_dicom_dict": 38, "necessari": [38, 39, 48, 139, 141, 442, 503, 508, 509], "add_dict_entri": [38, 110, 476, 485, 488], "similarli": [38, 435, 501], "add_private_dict_entri": [38, 476, 488], "hood": 38, "offici": [38, 111, 112, 113, 114, 115, 116, 117, 124, 125, 126, 127, 409, 476, 482, 483, 501, 509], "reload": 38, "0x0010": [38, 130, 219, 501], "softwarevers": 38, "0x0018": 38, "0x1020": 38, "pixel_byt": 38, "175": 38, "166": 38, "203": 38, "207": 38, "216": 38, "186": 38, "183": 38, "157": 38, "181": 38, "184": 38, "171": 38, "152": 38, "164": 38, "235": 38, "906": 38, "910": 38, "923": 38, "922": 38, "929": 38, "927": 38, "914": 38, "954": 38, "938": 38, "942": [38, 476, 489], "925": [38, 501], "905": [38, 50], "959": 38, "916": [38, 476, 479], "911": 38, "904": 38, "909": 38, "int16": [38, 50, 51, 509], "extens": [38, 76, 131, 476, 487, 494], "effect": [38, 141, 433], "behavior": [38, 39, 54, 82, 83, 94, 130, 476, 483, 487, 491, 492], "enforc": [38, 44, 200, 216, 476, 482], "expect": [38, 47, 201, 209, 211, 214, 215, 476, 486, 488, 492, 496, 499], "t1": 38, "0x00100010": [38, 127, 130], "equival": [38, 130, 215, 476, 486], "t2": 38, "t3": 38, "t4": 38, "portion": 38, "is_priv": [38, 127, 166, 218, 409, 476, 485], "odd": [38, 130, 133, 201, 215, 218, 476, 486, 495, 501], "prettier": 38, "select": [38, 130, 140], "There": [39, 46, 47, 48, 50, 476, 487, 499, 500, 501, 502, 509], "strict": [39, 440, 476, 489, 496], "against": [39, 127, 167, 476, 481, 492], "turn": [39, 92, 158, 476, 492], "enabl": [39, 91, 130], "reading_validation_mod": [39, 54, 74, 75, 77, 93, 128, 130, 476, 495], "writing_validation_mod": [39, 54, 77, 476, 495], "newli": [39, 130, 476, 491], "As": [39, 42, 47, 501, 507], "suggest": [39, 498, 499, 500], "except": [39, 43, 49, 50, 54, 74, 82, 83, 84, 95, 96, 150, 165, 167, 191, 200, 221, 473, 476, 479, 481, 484, 485, 488, 489, 492, 494, 495, 499, 501, 503, 506], "special": [39, 58, 473, 476, 483], "avoid": [39, 102, 158, 175, 435, 476, 488, 489, 492, 503], "invalid": [39, 54, 74, 75, 83, 87, 88, 134, 215, 433, 476, 488, 492, 494, 496], "legaci": 39, "strictli": [39, 48], "adher": 39, "guarante": [39, 42, 43], "predefin": 39, "That": [39, 43], "local": [39, 105, 476, 495, 499, 500, 501, 505, 508], "balanc": 39, "evolut": 39, "break": [39, 47, 476, 492, 503], "sometim": [39, 476, 487], "improv": [39, 476, 483, 486, 487, 494, 496, 498], "protect": 39, "upcom": [39, 94], "compat": [39, 41, 47, 178, 476, 479, 480, 482, 483, 484, 485, 497, 505], "next": [39, 43, 94, 130, 158, 167, 168, 476, 479, 492, 503, 509], "simplest": [39, 503, 505], "pydicom_futur": [39, 476, 492], "temporarili": 39, "future_behavior": [39, 473, 476, 492], "again": [39, 40, 52, 499, 503, 508], "anoth": [39, 208, 215, 476, 492, 501, 506, 508], "txt": [39, 47, 501], "virtual": [39, 499, 500, 504, 505], "brief": 40, "overview": [40, 503], "pure": 40, "report": [40, 476, 489, 498, 504], "radiotherapi": [40, 165], "easi": [40, 50], "complex": [40, 50], "natur": 40, "supin": 40, "prone": 40, "0182": 40, "01b2": 40, "techniqu": 40, "patientposit": 40, "hfp": 40, "rtplan2": 40, "server": [40, 500], "pynetdicom": 40, "primarili": [40, 476, 480], "design": [40, 52, 507], "let": [40, 41, 476, 489, 499, 500, 501, 503, 506, 508], "wherev": 40, "alter": [40, 52], "intellig": 40, "decompress": [40, 41, 42, 130, 212, 476, 485, 489, 505, 506], "onc": [40, 41, 80, 108, 110, 499, 500, 506, 507], "kind": [40, 43], "discuss": [40, 47, 499, 503], "give": [40, 446, 476, 478, 479, 501, 506], "feedback": [40, 476, 483], "tracker": [40, 498, 499], "major": [40, 44, 47, 94, 492], "fix": [40, 45, 158, 484, 498, 499, 501], "announc": [40, 95, 96], "ll": [41, 499, 500, 501, 506, 508, 509], "reli": [41, 42, 78], "separ": [41, 99, 127, 130, 137, 138, 442, 476, 479, 480, 506, 508], "encapsul": [41, 50, 130, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 473, 476, 477, 487, 492], "amount": [41, 130, 209, 506, 509], "too": [41, 130, 133, 178, 465, 476, 486, 488, 489, 498], "extend": [41, 42, 130, 137, 138, 200, 216, 476, 492, 506], "relev": [41, 47, 178, 499], "encap": [41, 165, 473, 476, 485, 487, 506], "encapsulate_extend": [41, 137, 476, 492, 506], "jpeg2000lossless": [41, 506], "third_party_compression_func": [41, 506], "appropri": [41, 49, 50, 130, 162, 178, 200, 213, 467, 506], "ct_small_compressed_bas": [41, 506], "extendedoffsett": [41, 138, 506], "extendedoffsettablelength": [41, 138, 506], "ct_small_compressed_ext": [41, 506], "nativ": [41, 412, 506], "ct_small_rl": [41, 130, 506], "encoding_plugin": [41, 130, 148, 506], "Will": [41, 108], "implicitli": [41, 506], "done": [41, 499, 500, 501, 506, 508], "explicitli": [41, 49, 50, 86, 476, 487, 494, 503, 506], "us1_j2kr": [41, 506], "us1_rl": 41, "j2k": [41, 476, 497], "abl": [42, 43, 47, 476, 491, 502, 503, 506, 509], "ideal": 42, "jpeg_l": [42, 130, 210, 476, 485], "libjpeg": [42, 505], "openjpeg": [42, 505], "capac": 42, "mention": [42, 501, 508], "Be": 42, "verifi": [42, 476, 482], "purpos": 42, "far": [42, 127], "deflat": [42, 211, 409, 476, 491], "57": [42, 140, 215, 224, 315, 317, 476, 487, 492], "sv1": [42, 215, 476, 491], "70": [42, 140, 215, 224, 300, 316, 317, 476, 491, 492], "81": [42, 51, 140, 215, 224, 313, 314, 350, 476, 480], "92": [42, 140, 224, 308, 309, 476, 486, 487], "93": [42, 51, 140, 224, 307, 309, 476, 481, 487], "jpegimageplugin": 42, "jpeg2kimageplugin": 42, "5x": [42, 476, 494], "faster": [42, 476, 479, 491, 494], "adapt": [42, 476, 487], "well": [43, 50, 52, 167, 178, 202, 215, 476, 479, 480, 482, 489, 499, 501, 505], "v1": [43, 45, 476, 486, 487, 488, 509], "easier": [43, 47, 131, 500, 508], "outlin": 43, "ct_filenam": 43, "ial": 43, "preced": 43, "reserv": 43, "thu": [43, 476, 477], "necessarili": [43, 49], "enclos": 43, "clear": [43, 127, 130, 167], "0x00091001": 43, "privateblock": [43, 130, 473], "private_block": [43, 130], "0x0009": 43, "0x01": [43, 130], "compani": 43, "accomplish": 43, "0x000b": 43, "add_new": [43, 130, 133, 501], "000b": 43, "0x02": 43, "lut": [44, 48, 202, 203, 204, 205, 206, 207, 215, 476, 489, 491, 492, 494], "voi": [44, 205, 206, 207, 215, 476, 489, 492], "overlai": [44, 95, 130, 215, 469, 473, 476, 489, 492, 501], "overlay_arrai": [44, 95, 130, 476, 489], "handl": [44, 50, 52, 74, 96, 127, 130, 174, 192, 441, 469, 476, 477, 480, 482, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 497, 501, 502, 505], "precondit": 44, "third": [44, 442, 505, 508], "parti": [44, 442, 505, 508], "pil": [44, 476, 479, 487], "wxpython": [44, 476, 479], "best": 44, "practic": [44, 47, 167], "futur": [44, 94, 130, 148, 476, 482, 492, 507], "proof": [44, 94], "drop": [45, 130, 476, 491, 492], "april": 45, "backport": 45, "seriou": 45, "speak": 45, "encourag": [45, 476, 482], "transit": 45, "earli": 45, "common": [46, 51, 52, 74, 476, 487, 503, 509], "fileread": [46, 47, 68, 198, 473, 500, 501], "fine": 46, "read_parti": [46, 68, 157, 198, 501], "preexist": 46, "v": [47, 476, 488], "often": [47, 48, 50, 108, 502], "previou": [47, 52, 168, 169, 476, 482, 485, 491, 492, 508], "sever": [47, 48, 54, 476, 483, 485], "backward": [47, 476, 479, 485, 508], "incompat": [47, 476, 479, 485, 508], "longer": [47, 54, 80, 127, 211, 476, 486, 487, 489, 492, 494, 503, 508], "renam": [47, 476, 477, 485, 491, 496, 497], "caus": [47, 446, 476, 478, 503], "confus": 47, "sens": [47, 476, 479], "engin": 47, "wasn": 47, "lightli": 47, "great": 47, "leap": 47, "rest": [47, 476, 495, 500], "smooth": 47, "old": [47, 476, 477, 478, 482, 485, 491, 508], "pypi": [47, 476, 485, 487, 505], "co": [47, 130, 509], "alongsid": 47, "uninstal": [47, 508], "becom": [47, 94, 476, 482, 492, 499, 500, 503, 508], "instruct": [47, 499, 500, 501], "hope": 47, "peopl": [47, 503], "page": [47, 476, 485, 488, 498, 499, 500, 505], "welcom": 47, "hopefulli": 47, "quickli": [47, 160, 503], "importerror": [47, 209, 210, 212, 451, 453, 476, 493, 499], "traceback": [47, 83, 221, 501, 503, 506], "recent": [47, 83, 499, 500, 501, 503, 506], "stdin": [47, 83, 501, 503, 506], "choic": 47, "look": [47, 52, 499, 500, 501, 508], "continu": [47, 136, 476, 477, 494, 508], "apart": 47, "dictionaryvm": 47, "dictionary_vm": 47, "dictionaryvr": 47, "dictionary_vr": [47, 501], "private_dictionaryvm": 47, "private_dictionary_vm": 47, "private_dictionaryvr": 47, "private_dictionary_vr": 47, "read_fil": [47, 476, 478, 479, 480, 485, 494], "filewrit": [47, 68, 130, 134, 473, 501], "write_fil": [47, 476, 485, 494], "tagtool": 47, "tag_in_except": [47, 58], "move": [47, 91, 98, 134, 166, 167, 476, 482, 483, 500, 503], "is_valid": [47, 409], "notcompressedpixeltransfersyntax": 47, "uncompressedpixeltransfersyntax": [47, 476, 492], "pydicom_root_uid": 47, "gone": [47, 500], "cleannam": 47, "short_nam": 47, "long_nam": 47, "all_names_for_tag": 47, "not_group2": 47, "pydicom_uid": 47, "mainli": [48, 130, 476, 483], "concern": 48, "desir": [48, 200, 208, 215], "stdlib": 48, "2d": [48, 214, 476, 492], "axesimag": 48, "thank": [48, 476, 479, 482], "roi": 48, "key": 48, "out": [48, 50, 52, 138, 167, 215, 436, 437, 476, 492, 498, 499, 500, 501, 503, 509], "pydicom_tkint": 48, "contrib": [48, 479, 498], "come": [48, 508], "photoimag": 48, "widget": 48, "pydicom_pil": 48, "imview": 48, "60xx": [49, 95, 201, 215, 469, 476, 489, 501], "3000": [49, 95, 130, 201, 203, 204, 215, 469, 476, 489, 501], "6000": 49, "6002": 49, "601e": 49, "siemen": [49, 50], "withoverlai": [49, 50], "0x6000": [49, 201, 501], "0x3000": 49, "29282": 49, "tend": [49, 505], "lazi": 49, "unpack": [49, 215, 462, 476, 487, 495], "uint8": [49, 202, 203, 204, 205, 206, 215], "484": 49, "align": 49, "pack_bit": [49, 215, 476, 487, 492], "numpy_handl": [49, 95, 96, 476, 494], "packed_byt": 49, "temp": [49, 50], "reduc": [49, 50, 208, 215, 476, 487, 492, 503, 506], "512x512": [49, 50], "256x256": [49, 50], "bulk": [50, 127, 130, 473, 476, 489, 490, 493, 502], "although": [50, 167, 503], "almost": 50, "parametr": [50, 499], "floatpixeldata": [50, 215, 476, 494], "doublefloatpixeldata": [50, 215, 476, 494], "interchang": [50, 503], "x89": 50, "x03": 50, "xfb": 50, "xcb": 50, "xeb": 50, "xf9": 50, "x02": 50, "x94": 50, "x7f": 50, "immedi": 50, "varieti": 50, "broken": [50, 508], "fragment": [50, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 476, 489], "1227": 50, "302": 50, "304": 50, "328": 50, "628": 50, "770": 50, "907": 50, "298": 50, "331": 50, "355": 50, "498": [50, 353, 354, 433, 476, 486], "566": 50, "706": 50, "280": 50, "285": 50, "334": 50, "431": 50, "1094": 50, "1068": 50, "1083": 50, "339": 50, "377": 50, "413": 50, "1318": 50, "1346": 50, "1336": 50, "378": 50, "374": 50, "422": 50, "1369": 50, "1129": 50, "862": 50, "straightforward": 50, "particularli": [50, 52], "300": 50, "shrunk": 50, "apply_color_lut": [50, 215, 473, 476, 489], "obxxxx1a": 50, "pet": [50, 202, 215], "possibli": [50, 130], "physic": [50, 503], "quantiti": [50, 468, 509], "hounsfield": 50, "apply_modality_lut": [50, 205, 206, 207, 215, 473, 476, 489, 491], "hu": 50, "apply_voi_lut": [50, 215, 473, 476, 489, 491, 492], "voic": 51, "audio": [51, 509], "lead": [51, 54, 436, 437, 448, 476, 480, 485, 496, 509], "ecg": [51, 509], "5400": [51, 130, 468, 509], "consist": [51, 131, 178, 476, 482, 500, 506, 509], "synchronis": [51, 509], "003a": [51, 130, 468, 509], "001a": 51, "waveformdata": [51, 509], "240000": [51, 509], "multiplex_1": 51, "25": [51, 433], "68": [51, 385, 402, 403], "106": [51, 224, 330, 331], "62": 51, "37": 51, "131": [51, 228], "137": 51, "10000": [51, 509], "multiplex_2": 51, "1200": [51, 476, 492, 509], "multiplex_arrai": [51, 130, 468, 476, 492, 509], "55": [51, 476, 479], "65": [51, 242], "85": 51, "60": [51, 476, 483, 494], "110": [51, 476, 482], "coupl": [52, 503, 508], "truli": 52, "certain": [52, 130, 215, 500, 501], "tool": [52, 476, 497], "approxim": 52, "especi": [52, 499], "tricki": 52, "awar": [52, 503], "524288": 52, "bigger": [52, 476, 491], "potenti": 52, "disadvantag": 52, "sai": [52, 499, 501], "wrote": 52, "quit": [52, 476, 479, 499], "switch": [52, 87, 476, 480, 482, 484, 489, 491, 494, 496, 499, 500, 508], "individu": [52, 208, 215, 442, 476, 482, 492, 494], "code_fil": 52, "certainli": 52, "difficult": [52, 499], "singleton": 54, "infer_sq_for_un_vr": [54, 476, 495], "undefin": [54, 127, 141, 155, 171, 178, 476, 481, 492, 495], "conform": [54, 127, 130, 167, 170, 178, 191, 198, 214, 433, 476, 485, 487, 488, 501, 503, 506], "failur": [54, 476, 491, 499], "bypass": [54, 148], "dataelem": [58, 76, 130, 159, 177, 193, 194, 467, 473, 476, 488, 491, 501], "dataelement_from_raw": [58, 501], "rawdatael": [58, 89, 128, 130, 131, 132, 155, 159, 189, 467], "tupletag": [58, 476, 479], "convert_ae_str": 58, "convert_atvalu": 58, "convert_da_str": 58, "convert_ds_str": 58, "convert_dt_str": 58, "convert_is_str": 58, "convert_numb": [58, 176, 177], "convert_obvalu": 58, "convert_owvalu": 58, "convert_pn": 58, "convert_single_str": 58, "convert_sq": 58, "convert_str": 58, "convert_tag": 58, "convert_text": 58, "convert_tm_str": 58, "convert_ui": 58, "convert_un": 58, "convert_ur_str": 58, "convert_valu": 58, "multiv": [58, 473, 501], "validate_dataset": [58, 501], "is_valid_d": [58, 476, 494], "format_number_as_d": [58, 476, 494], "isfloat": [58, 476, 496], "multistr": 58, "data_element_gener": [68, 158], "data_element_offset_to_valu": 68, "read_deferred_data_el": 68, "read_file_meta_info": [68, 131], "read_preambl": [68, 198, 501], "read_sequ": 68, "read_sequence_item": 68, "correct_ambiguous_vr": 68, "correct_ambiguous_vr_el": 68, "multi_str": 68, "write_atvalu": 68, "write_da": 68, "write_dataset": 68, "write_data_el": 68, "write_dt": 68, "write_file_meta_info": [68, 178, 501], "write_numb": 68, "write_number_str": 68, "write_obvalu": 68, "write_owvalu": 68, "write_pn": [68, 476, 486], "write_sequ": 68, "write_sequence_item": 68, "write_str": 68, "write_text": 68, "write_tm": 68, "write_ui": 68, "write_un": 68, "dicombytesio": 68, "dicomio": [68, 146, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "fileutil": [68, 473], "absorb_delimiter_item": 68, "find_byt": [68, 173, 174, 476, 483], "find_delimit": [68, 174], "length_of_undefined_length": 68, "read_undefined_length_valu": 68, "mistak": 74, "stand": 74, "alon": 74, "respect": [74, 91, 476, 486], "lookuperror": [74, 75], "delimit": [75, 140, 141, 142, 171, 173, 174, 175, 178, 179, 441, 476, 492, 494], "reset": [75, 94, 97], "loss": [75, 77, 436, 437, 446, 476, 492], "unicodedecodeerror": 75, "dicom_character_set": 76, "unicodeencodeerror": 77, "precis": [78, 86, 215, 436, 437, 442, 446, 476, 494], "use_decimal_boolean": 79, "valueerror": [79, 80, 82, 83, 107, 108, 109, 110, 130, 132, 133, 134, 141, 143, 159, 167, 178, 191, 201, 211, 214, 215, 433, 446, 451, 453, 465, 501, 503, 506], "use_ds_numpi": [79, 451, 473, 476, 491], "use_numpi": 80, "__setattr__": 82, "camel": [82, 476, 492], "neither": [82, 83, 167, 203, 204, 206, 215], "nor": [82, 83], "citizen": [82, 127, 130, 501], "patientsnam": [82, 83], "1895": 82, "userwarn": 82, "__contains__": [83, 476, 492], "0x100100010": 83, "494": 83, "msg": [83, 501], "exc": 83, "occur": [84, 85, 476, 489, 499, 503], "digit": [86, 133, 192, 509], "round": [86, 215], "encount": 87, "writer": 87, "elementcallback": 89, "callabl": [89, 127, 130, 155, 158, 161, 165, 200, 441], "everi": [89, 148, 215, 503, 508, 509], "data_element_callback": [90, 97, 473], "queri": [91, 167, 503], "anymor": 91, "manual": 91, "debug_on": 92, "default_handl": 92, "log": [92, 130, 476, 482, 495, 499], "logger": [92, 476, 483], "streamhandl": 92, "deprec": [93, 94, 95, 127, 130, 214, 216, 476, 481, 482, 486, 487, 488, 491, 492, 494, 495, 496], "enable_futur": 94, "imit": 94, "emul": [94, 130], "invalid_keyword_behavior": [94, 473, 476, 492], "invalid_key_behavior": [94, 473, 476, 492], "extract": [95, 96], "get_overlay_arrai": [95, 201], "package_import_nam": 95, "handler_nam": [95, 130], "fail": [95, 96, 476, 479, 480, 485, 499, 500, 503], "gdcm_handler": 96, "pillow_handl": [96, 499], "jpeg_ls_handl": 96, "pylibjpeg_handl": 96, "rle_handl": [96, 476, 495], "convert_pixel_data": [96, 130], "shall": [96, 130, 139, 140, 141, 143, 144, 145, 155, 178, 191], "supports_transfer_syntax": [96, 209, 210, 211, 212, 213, 214], "transfer_syntax": [96, 209, 210, 211, 212, 214], "get_pixeldata": [96, 209, 210, 211, 212, 213, 214], "1d": [96, 201, 211, 212, 213, 214, 215], "reshap": [96, 201, 213, 215], "dimens": [96, 213], "needs_to_convert_to_rgb": [96, 209, 210, 211, 212, 213, 214], "colourspac": [96, 476, 494], "refus": 96, "fact": [96, 501], "notimplementederror": [96, 130, 210, 211, 212, 214, 215], "global": [98, 476, 495], "ds_decim": [100, 473, 476, 491], "ds_numpi": [101, 473], "absolut": [103, 104, 105, 106, 166, 167], "charset": [103, 473, 476, 496], "extern": [105, 476, 492, 494], "new_entries_dict": [107, 109], "0x10021001": [107, 108], "0x10021002": [107, 108], "retir": [108, 115, 127, 176, 177, 224, 409, 476, 492], "perman": 108, "private_cr": [109, 110, 118, 121, 122, 123, 130, 133, 218], "0x00410001": 109, "0x00410002": 109, "acm": 109, "ltd": 109, "whose": [111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 126, 442, 446, 499], "keyerror": [111, 112, 113, 115, 116, 117, 118, 121, 122, 123, 128, 130, 501], "get_private_entri": 117, "get_entri": 118, "grouplength": 119, "mask": 120, "file_value_tel": 127, "is_undefined_length": [127, 130, 178, 476, 489], "already_convert": 127, "validation_mod": [127, 200, 409, 435, 436, 437, 439, 440, 441, 442], "joan": [127, 130], "Its": 127, "descripwidth": 127, "35": [127, 130, 288], "0xffffffffl": 127, "ie": 127, "maxbytestodisplai": [127, 476, 488], "showvr": 127, "backslash": [127, 130, 442, 463, 476, 477, 478, 494], "intern": [127, 130, 155, 483], "0xffffffff": 127, "empty_value_for_vr": 127, "empty_valu": 127, "classmethod": [127, 130, 442], "from_json": [127, 130, 476, 489, 492, 502], "dataset_class": 127, "value_kei": 127, "bulk_data_uri_handl": [127, 130, 476, 492, 502], "json": [127, 130, 218, 476, 488, 489, 493, 494, 504], "inlinebinari": [127, 130], "bulkdatauri": [127, 130, 502], "dicomweb": [127, 130, 502], "wado": [127, 130, 502], "is_empti": 127, "ret": 127, "repval": [127, 130], "to_json": [127, 130, 476, 490, 502], "bulk_data_threshold": [127, 130, 476, 490, 502], "bulk_data_element_handl": [127, 130, 502], "dump_handl": [127, 130], "base64": [127, 130, 502], "dump": [127, 130], "to_json_dict": [127, 130, 476, 490, 496, 502], "18": [127, 130, 405, 476, 485, 502], "validate_valu": 127, "raw_data_el": [128, 467], "resolv": [128, 176, 476, 482, 488], "belong": [128, 130, 166, 167, 178], "value_tel": 129, "is_raw": 129, "undecod": 129, "alia": [129, 443, 476, 492], "mutablemap": [130, 131, 132], "mutabl": 130, "0x00100020": 130, "0x0030": 130, "0x00100030": 130, "linac": 130, "son": 130, "daughter": 130, "0x0041": 130, "john": [130, 442], "0041": 130, "get_private_item": 130, "iteral": [130, 476, 478], "jsonmodel": 130, "ds2": 130, "default_element_format": 130, "default_sequence_element_format": 130, "indent_char": [130, 168], "write_like_origin": [130, 178, 501], "decoding_plugin": [130, 148], "encapsulate_ext": 130, "tri": [130, 148], "placehold": [130, 148], "unabl": [130, 215, 501, 503, 506, 508], "runtimeerror": [130, 213], "shallow": 130, "state": [130, 184, 502], "alphabet": [130, 442, 476, 496], "__getitem__": [130, 501], "unconvert": 130, "increas": [130, 476, 479, 496], "ensure_file_meta": 130, "fix_meta_info": [130, 476, 487], "enforce_standard": [130, 134, 191, 501], "ambigu": [130, 176, 177, 476, 485, 487, 488, 492], "therefor": [130, 200, 215], "incorrect": [130, 140, 148, 476, 480, 486, 488, 489, 497], "validate_file_meta": [130, 473, 501], "formatted_lin": [130, 476, 478], "element_format": 130, "sequence_element_format": 130, "indent_format": 130, "json_dataset": 130, "bytearrai": [130, 214, 215], "simul": 130, "obj": 130, "get_item": 130, "defer": [130, 159, 476, 478, 482, 489, 495, 501], "element_offset": [130, 133], "analog": 130, "group_dataset": 130, "is_original_encod": 130, "dict_item": 130, "unlik": 130, "flatten": 130, "dict_kei": 130, "referencetyp": [130, 216], "weak": [130, 216], "parent_seq": 130, "weakref": 130, "pop": [130, 476, 488], "tagtyp": 130, "combin": [130, 219, 499, 501, 509], "popitem": 130, "unrealist": 130, "free": 130, "associ": 130, "pathlik": [130, 131, 157, 159, 160, 167, 178, 476, 491], "binaryio": [130, 131, 153, 155, 157, 158, 159, 161, 162, 163, 164, 171, 172, 173, 174, 175, 178], "wrapper": [130, 476, 491], "set_original_encod": 130, "character_encod": 130, "optim": 130, "setdefault": [130, 476, 488, 492], "0x00100040": 130, "suppress_invalid_tag": [130, 476, 496], "threshold": 130, "inlin": [130, 502], "bubbl": 130, "my_json_dump": 130, "sort_kei": 130, "trait_nam": 130, "ipython": [130, 476, 477], "autocomplet": 130, "valuesview": 130, "visit": [130, 499, 500], "0210": [130, 468, 509], "0211": 130, "filename_or_obj": [131, 159], "prepend": 131, "0x0002": [131, 501], "fileobj_typ": [131, 159], "timestamp": [131, 159], "modif": [131, 499, 501, 503], "overrid": [132, 165, 435, 476, 487, 503], "super": [132, 216], "typeerror": [132, 157, 200, 209, 210, 476, 486, 492, 501], "init_valu": 132, "private_creator_el": 133, "helper": 133, "block_start": 133, "low": [133, 502], "get_tag": 133, "concaten": [136, 143], "togeth": [136, 137, 179], "has_bot": [137, 138], "frame1": 137, "frame2": 137, "exce": [137, 138], "31": 137, "circumst": [137, 138], "0x00": [137, 139, 178, 459], "strongli": [137, 167, 503], "nr_fragment": [139, 145], "marker": [139, 140, 162, 175, 476, 489, 494], "null": [139, 201, 215, 459], "bytestream": [140, 142], "nr_frame": [140, 142], "span": 140, "predict": 140, "Near": 140, "attempt": [140, 177, 468, 476, 485, 494, 501], "boundari": 140, "eoi": [140, 476, 489], "eoc": [140, 476, 489], "0xffd9": 140, "hasn": [140, 499, 500], "fp": [141, 143, 146, 155, 157, 158, 162, 163, 164, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "stream": [141, 146, 178, 476, 497, 499], "fffe": [141, 143, 144, 145], "e000": [141, 143, 144, 145], "e0dd": 141, "0x00000000": [141, 143], "presenc": [141, 202, 215, 501], "absenc": 141, "fe": 143, "e0": 143, "08": 143, "measur": [143, 165], "bot": 143, "ffee": 143, "itemis": 145, "factori": [148, 200, 220, 435, 476, 479, 494], "import_path": 148, "encode_pixel_data": 148, "modulenotfounderror": 148, "unavail": 148, "attributeerror": [148, 176, 178, 201, 209, 211, 213, 214, 476, 479, 495], "aren": [148, 167, 501, 503], "idx": [148, 506], "uint16": [148, 202, 203, 204, 205, 206, 215], "iter_encod": [148, 506], "kwargs_from_d": 148, "missing_depend": 148, "nice": [148, 200, 499], "remove_plugin": 148, "appear": [150, 503], "dicm": [150, 162, 178, 191, 198, 501], "mayb": 150, "file_like_obj": 153, "textio": 153, "no_read": 153, "no_seek": 153, "whenc": 153, "no_writ": 153, "bytes_read": 153, "hold": [154, 178, 200, 216], "need_exact_length": 154, "eoferror": [154, 175], "read_beul": 154, "read_beu": 154, "read_be_tag": 154, "read_leul": 154, "read_leu": 154, "read_le_tag": 154, "write_ul": 154, "write_u": 154, "write_beul": 154, "write_beu": 154, "write_leul": 154, "write_leu": 154, "write_tag": 154, "stop_when": [155, 158, 161], "defer_s": [155, 157, 158, 161, 175, 199, 476, 478], "specific_tag": [155, 157, 158, 161, 501], "read_data_el": 155, "stop_before_pixel": [157, 476, 479], "pars": [157, 161, 215, 473, 476, 477, 489, 491, 492], "context": [157, 221, 476, 485, 501], "tell": [157, 476, 478, 500, 503], "caller": [157, 476, 479], "respons": [157, 442, 502], "close": [157, 161, 476, 478, 479], "kb": 157, "stop": [157, 161, 476, 479], "subsequ": 157, "invaliddicomerror": [157, 162, 473, 476, 480, 501], "unsupport": [157, 209, 210, 211, 214], "condit": [157, 161, 476, 485], "bytelength": [158, 163], "parent_encod": [158, 190], "at_top_level": 158, "itemdelitertag": 158, "call_back": 158, "isn": [158, 215, 409, 433, 476, 488, 492, 500, 501], "heurist": [158, 476, 485], "raw_data_elem": 159, "persist": 159, "st_mtime": 159, "oserror": 159, "meant": [160, 198], "fileobj": [161, 501], "reach": [161, 173, 175], "assess": 165, "_define_assess": 165, "doc": [165, 500], "_define_encap_doc": 165, "fiduci": 165, "_define_generic_content_id": 165, "hang": 165, "protocol": 165, "_define_hanging_protocol": 165, "_define_imag": 165, "implant": [165, 167], "_define_impl": 165, "assi": 165, "_define_implant_assi": 165, "_define_implant_group": 165, "_define_key_object_doc": 165, "_define_palett": 165, "_define_pati": 165, "_define_empti": 165, "_define_present": 165, "_define_radiotherapi": 165, "_define_generic_cont": 165, "registr": 165, "_define_rt_dos": [165, 503], "_define_rt_plan": 165, "_define_rt_structure_set": 165, "treat": [165, 503], "_define_rt_treatment_record": 165, "_define_seri": 165, "spectroscopi": 165, "_define_spectroscopi": 165, "sr": [165, 442, 476, 494, 507], "_define_sr_docu": 165, "stereometr": 165, "_define_studi": 165, "surfac": 165, "_define_surface_scan": 165, "tract": 165, "1430": [165, 503], "my_record": 165, "offsetofthenextdirectoryrecord": 165, "recordinuseflag": 165, "0xffff": [165, 476, 486], "offsetofreferencedlowerleveldirectoryent": 165, "directoryrecordtyp": [165, 167], "specificcharacterset": 165, "my_inst": 165, "add_custom": [165, 167, 503], "node": [166, 167, 168, 501], "recordnod": [166, 167, 473], "leaf": [166, 167, 168], "fileid": 166, "file_set": [166, 168], "for_addit": [166, 503], "for_mov": 166, "for_remov": 166, "is_stag": [166, 167, 503], "ds_or_path": 167, "cancel": 167, "directory_record": [167, 473, 503], "definit": [167, 178, 473, 476, 485, 509], "suitabl": [167, 202, 215, 505], "1400": [167, 503], "1410": [167, 503], "1420": [167, 503], "1500": [167, 476, 495], "1510": 167, "1511": [167, 476, 495], "1512": 167, "hierarchi": [167, 503], "privaterecorduid": 167, "leaf_nod": 167, "top_nod": 167, "ancestor": [167, 168], "due": [167, 476, 483, 494, 496, 499, 503], "force_implicit": 167, "1234567": 167, "7654321": 167, "include_orphan": 167, "raise_orphan": 167, "attach": 167, "imposs": [167, 508], "orphan": 167, "use_exist": [167, 503], "backup": 167, "ptxxxxxx": 167, "stxxxxxx": 167, "sexxxxxx": 167, "imxxxxxx": 167, "xxxxxx": 167, "alphanumer": [167, 169], "paxxxxxx": 167, "p0xxxxxx": 167, "p1xxxxxx": 167, "p2xxxxxx": 167, "everyth": [167, 499, 503], "children": 168, "child": 168, "nearest": 168, "furthest": 168, "has_inst": 168, "amongst": 168, "sibl": 168, "is_root": 168, "prettifi": 168, "pretti": [168, 499], "record_typ": [168, 503], "36": 169, "00010": 169, "00000000": 169, "00000001": 169, "00000002": 169, "_": [170, 500], "rel": 170, "bytes_to_find": 172, "read_siz": [172, 173, 174, 175], "found_at": 172, "routin": 174, "delimiter_tag": 175, "eof": 175, "dicond": [176, 177], "henc": 178, "profil": 178, "bytestr": [178, 215], "eeee": 178, "independ": 178, "preserv": [178, 476, 484, 491], "had": [178, 476, 487, 494, 499], "sensibl": 178, "is_undefined_length_sequence_item": 178, "put": 179, "swap": [184, 455], "rule": 189, "0017": 191, "send": [191, 499, 500], "struct_format": [193, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 464], "pare": 198, "fast": [198, 220], "conserv": 198, "approach": 198, "expr": 199, "type_constructor": [200, 216, 501], "_t": [200, 441], "_itemtyp": 200, "constructor": 200, "insert": [200, 216, 500, 501], "overlayrow": 201, "overlaycolumn": 201, "0015": 201, "numberofframesinoverlai": 201, "overlaybitsalloc": 201, "overlaybitposit": 201, "get_expected_length": [201, 215], "NOT": [201, 215], "0x6010": 201, "0x60ff": 201, "reshape_overlay_arrai": 201, "1201": [202, 215], "1203": [202, 215], "1221": [202, 215], "1223": [202, 215], "1204": [202, 215], "1224": [202, 215], "supplement": [202, 215], "hot_iron": [202, 215], "hot_metal_blu": [202, 215], "pet_20_step": [202, 215], "spring": [202, 215], "summer": [202, 215], "fall": [202, 215], "winter": [202, 215], "rgba": [202, 215], "3rd": [202, 203, 204, 205, 206, 215], "colour": [202, 215], "3002": [203, 204, 205, 206, 215, 476, 489], "float64": [203, 204, 206, 207, 215, 451], "3010": [205, 206, 215], "apply_window": [205, 206, 215, 473, 476, 492], "prefer_lut": [206, 215, 476, 492], "apply_voi": [206, 207, 215, 473, 476, 492], "per_fram": [208, 215, 476, 494], "iec": [208, 215, 309, 314, 317], "10918": [208, 215, 317, 476, 494], "2012": [208, 215], "itu": [208, 215], "871": [208, 215], "create_data_el": 209, "create_imag": 209, "volum": 209, "affect": [209, 210, 211, 212, 213, 214, 215, 499, 500], "should_change_photometricinterpretation_to_rgb": [209, 210, 211, 212, 213, 214], "pyjpegl": 210, "planarconfigur": [211, 213, 214, 215, 476, 485], "numberoffram": [211, 213, 214, 215, 476, 497], "read_onli": 211, "resampl": 211, "writeabl": 211, "as_arrai": [213, 215], "generate_fram": 213, "tsyntax": 213, "rle_segment_ord": 214, "suppos": 214, "msb": 214, "lsb": 214, "rle_encode_fram": [214, 476, 494], "dtype_corrected_for_endian": 215, "numpy_dtyp": 215, "expand_ybr422": [215, 476, 495], "subsampl": 215, "halv": 215, "cb": 215, "get_image_pixel_id": 215, "get_j2k_paramet": 215, "codestream": 215, "15444": [215, 309], "is_sign": 215, "get_nr_fram": 215, "conjunct": 215, "uint": 215, "sake": 215, "pixel_dtyp": 215, "as_float": 215, "reshape_pixel_arrai": 215, "unpack_bit": [215, 476, 495], "substitut": 216, "construct": [216, 436, 437, 442, 476, 482, 483, 494], "parent_dataset": 216, "is_private_cr": 218, "json_kei": [218, 476, 496], "ggggeeee": 218, "meaningless": 218, "arg2": [219, 476, 479], "0x00100015": 219, "0x50": 219, "0x0015": 219, "group_elem": 220, "safe": 220, "71": 222, "102": [224, 326, 331, 476, 482], "103": [224, 327, 331, 476, 482], "108": [224, 294, 331, 442], "78": [227, 302, 318, 323, 345, 399, 401, 421, 476, 480], "19": 236, "200": [238, 240, 361, 425, 426], "69": 243, "39": [244, 433], "34": [247, 367, 369], "33": 248, "82": [251, 476, 480], "501": [252, 253, 254, 255, 256, 257, 258], "66": [260, 386, 393, 397, 398, 404, 407], "601": [268, 269], "130": 280, "22": [281, 383], "76": 285, "43": [291, 476, 479], "38": 296, "45": 299, "14495": 314, "59": 319, "mpeg": [331, 476, 492], "79": [334, 476, 480], "826": [353, 354, 433, 476, 489], "3680043": [353, 354, 433], "73": [356, 476, 479], "74": 358, "compil": [363, 364], "regex": [363, 364], "67": [387, 431], "72": [395, 476, 479], "human": [409, 442, 501], "friendli": [409, 501, 503], "subclass": [409, 476, 486], "is_transfer_syntax": 409, "is_compress": 409, "is_defl": 409, "is_encapsul": 409, "encasul": 409, "entropy_src": 433, "uuid": 433, "hash": [433, 476, 488, 494], "uuid4": 433, "sha512": 433, "determinist": 433, "unrecover": 433, "random": 433, "22463838056059845879389038257786771680": 433, "167161297070865690102504091919570542144": 433, "lorem": 433, "ipsum": 433, "87507166259346337659265156363895084463": 433, "immut": [434, 438, 444, 476, 488], "auto_format": [435, 436, 437, 476, 494], "__new__": 435, "carri": [435, 476, 484], "penalti": 435, "clean": [435, 476, 485, 499, 500, 508], "satisfi": [436, 437, 446], "23e2": 436, "123": [436, 502], "rewrit": [439, 440], "uncommon": 440, "valtyp": 441, "original_str": [442, 476, 487], "from_named_compon": [442, 476, 494], "from_named_components_veterinari": [442, 476, 494], "ideograph": 442, "phonet": 442, "absent": [442, 509], "demand": 442, "famili": 442, "family_nam": [442, 476, 494], "format_str": 442, "given_nam": [442, 476, 494], "middle_nam": 442, "name_prefix": 442, "name_suffix": 442, "family_name_ideograph": 442, "given_name_ideograph": 442, "middle_name_ideograph": 442, "name_prefix_ideograph": 442, "name_suffix_ideograph": 442, "family_name_phonet": 442, "given_name_phonet": 442, "middle_name_phonet": 442, "name_prefix_phonet": 442, "name_suffix_phonet": 442, "middl": 442, "addition": 442, "sect": 442, "adam": 442, "robert": 442, "quinci": 442, "rev": 442, "div": 442, "korean": [442, 476, 482], "\u6d2a": 442, "\u5409\u6d1e": 442, "\ud64d": 442, "\uae38\ub3d9": 442, "dr": 442, "chief": 442, "offic": 442, "responsible_party_nam": 442, "patient_nam": 442, "responsible_party_name_ideograph": 442, "patient_name_ideograph": 442, "responsible_party_name_phonet": 442, "patient_name_phonet": 442, "veterinari": 442, "OR": 442, "hors": 442, "abc": 442, "farm": 442, "fourth": 442, "fifth": 442, "truncat": [446, 476, 478], "retain": [446, 476, 494], "scientif": 446, "incur": 446, "furthermor": 446, "finit": 446, "inf": 446, "nan": 446, "fewer": 447, "byte_str": [448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "Not": [448, 449, 450, 451, 452, 453, 458, 459, 461, 464], "int64": 453, "use_is_numpi": [453, 473, 476, 491], "waveformbitsalloc": [468, 509], "waveformsampleinterpret": [468, 509], "sb": 468, "ub": 468, "ab": 468, "dev0": 473, "aug": 473, "01": 473, "convert_encod": 473, "decode_el": 473, "decode_byt": 473, "encode_str": 473, "allow_ds_float": [473, 476, 482], "assume_implicit_vr_switch": [473, 476, 494], "convert_wrong_length_to_un": [473, 476, 494], "data_element_callback_kwarg": 473, "debug": [473, 476, 482, 484], "enforce_valid_valu": [473, 476, 482, 488, 489, 492, 494, 495], "overlay_data_handl": [473, 476, 492], "reset_data_element_callback": 473, "show_file_meta": [473, 476, 491], "apply_j2k_correct": [473, 476, 497], "get_charset_fil": 473, "get_palette_fil": [473, 476, 489], "apply_rescal": [473, 476, 492], "get_encod": 473, "generate_filenam": 473, "is_conformant_file_id": 473, "miscellan": 473, "misc": [473, 476, 485], "is_dicom": [473, 476, 485], "size_in_byt": 473, "gracefulli": [476, 492, 497], "1844": [476, 497], "disagre": [476, 497], "1689": [476, 497], "folder": [476, 479, 497], "refactor": [476, 497], "ci": [476, 497], "dependabot": [476, 497], "commit": [476, 497], "ruff": [476, 497], "eol": [476, 496], "decemb": [476, 496], "1634": [476, 496], "1648": [476, 496], "1414": [476, 496], "cli": [476, 496], "1674": [476, 496], "1658": [476, 496], "1661": [476, 496], "highli": [476, 496], "1728": [476, 496], "1734": [476, 496], "pyproject": [476, 496], "toml": [476, 496], "1792": [476, 496], "2023b": [476, 496], "1803": [476, 496], "1632": [476, 496], "progress": [476, 496, 500], "bar": [476, 496], "1611": [476, 496], "crash": [476, 486, 495, 496], "1638": [476, 496], "extrem": [476, 496], "byteslengthexcept": [476, 496], "1683": [476, 496], "1670": [476, 496], "1693": [476, 496], "1680": [476, 496], "1702": [476, 496], "wrong": [476, 487, 488, 492, 496], "calcul": [476, 494, 496], "1667": [476, 496], "lutdata": [476, 496], "1747": [476, 496], "1738": [476, 496], "teardown": [476, 496], "pytest": [476, 496], "fork": [476, 496, 499, 500, 505], "charpyl": [476, 496, 505], "1788": [476, 496], "favor": [476, 481, 495], "1617": [476, 495], "enum": [476, 495], "1498": [476, 495], "resort": [476, 495], "slowest": [476, 495], "1487": [476, 495], "mitra": [476, 495], "1588": [476, 495], "pr": [476, 495, 499, 500], "1594": [476, 495], "1593": [476, 495], "introduc": [476, 495, 499], "2022a": [476, 495], "holog": [476, 495], "0019xx43": [476, 495], "1565": [476, 495], "deep": [476, 495], "1571": [476, 495], "1581": [476, 495], "maco": [476, 495, 505], "1599": [476, 495], "bad": [476, 485, 495], "1596": [476, 495], "1606": [476, 495], "1609": [476, 495], "__eq__": [476, 486, 494], "operand": [476, 494], "1327": [476, 494], "__str__": [476, 486, 494, 501], "1262": [476, 494], "metadata": [476, 494], "2021b": [476, 494], "inherit": [476, 494], "silent": [476, 494], "highest": [476, 494], "init": [476, 494], "urllib": [476, 494], "1340": [476, 494], "1348": [476, 494], "optimis": [476, 494], "1361": [476, 494], "1372": [476, 494], "1438": [476, 494], "suppress": [476, 494], "1332": [476, 494], "1428": [476, 494], "1434": [476, 494], "pickl": [476, 485, 489, 494], "1278": [476, 494], "1312": [476, 494], "problem": [476, 494, 501, 508], "workflow": [476, 494, 499, 500], "1341": [476, 494], "1338": [476, 494], "878": [476, 494], "deepcopi": [476, 494], "1147": [476, 494], "1412": [476, 494], "expans": [476, 494], "linear": [476, 494], "1415": [476, 494], "1449": [476, 494], "rbg": [476, 494], "jpg": [476, 494], "app14": [476, 494], "1444": [476, 494], "1457": [476, 494], "1251": [476, 493], "1253": [476, 493], "1254": [476, 493], "distribut": [476, 480, 492, 505], "fly": [476, 492], "whenev": [476, 492], "disk": [476, 492], "rg1_unci": [476, 492], "1127": [476, 492], "1234": [476, 492], "1237": [476, 492], "1156": [476, 492], "__next__": [476, 492], "__iter__": [476, 477, 492, 501], "1103": [476, 489, 492], "constant": [476, 492, 509], "1155": [476, 492], "1149": [476, 492], "2020d": [476, 492], "243": [476, 492], "alltransfersyntax": [476, 492], "commun": [476, 492], "1240": [476, 492], "1178": [476, 492], "1161": [476, 492], "_storage_sopclass_uid": [476, 492], "multifram": [476, 492], "dicosquadrupoleresonanceqrstorag": [476, 492], "dicosquadrupoleresonancestorag": [476, 492], "jpegbaselin": [476, 487, 492], "jpegbaseline8bit": [476, 492], "jpegextend": [476, 487, 492], "jpegextended12bit": [476, 492], "jpeglossless": [476, 492], "jpeglosslesssv1": [476, 492], "jpeglslossi": [476, 492], "jpeglsnearlossless": [476, 492], "jpeg2000multicomponentlossless": [476, 487, 492, 499], "jpeg2000mclossless": [476, 492], "jpeg2000multicompon": [476, 487, 492, 499], "jpeg2000mc": [476, 492], "jpeglossycompressedpixeltransfersyntax": [476, 492], "jpegtransfersyntax": [476, 492], "jpeglssupportedcompressedpixeltransfersyntax": [476, 492], "jpeglstransfersyntax": [476, 492], "jpeg2000compressedpixeltransfersyntax": [476, 492], "jpeg2000transfersyntax": [476, 492], "rlecompressedlosslesssyntax": [476, 492], "rletransfersyntax": [476, 492], "uncompressedtransfersyntax": [476, 492], "pilsupportedcompressedpixeltransfersyntax": [476, 492], "1211": [476, 492], "1181": [476, 492], "1146": [476, 492], "optimist": [476, 492], "embed": [476, 492], "1140": [476, 492], "network": [476, 492], "connect": [476, 492], "1153": [476, 492], "1193": [476, 492], "1215": [476, 492], "restor": [476, 491], "personname3": [476, 483, 488, 491], "alias": [476, 478, 491], "ismultivalu": [476, 488, 491], "1086": [476, 491], "replace_un_with_known_vr": [476, 491], "1067": [476, 491], "623": [476, 491], "regress": [476, 490, 491, 499], "1038": [476, 491], "improp": [476, 489, 491], "3006": [476, 491], "1078": [476, 491], "1082": [476, 491], "1097": [476, 491], "915": [476, 489], "887": [476, 489, 501], "prevent": [476, 489], "894": [476, 489], "892": [476, 489], "truthi": [476, 489], "891": [476, 489], "899": [476, 489], "968": [476, 489], "896": [476, 489], "unpickl": [476, 489], "947": [476, 489], "951": [476, 489], "1101": [476, 489], "ir": [476, 489], "917": [476, 489], "propag": [476, 489], "971": [476, 489], "822": [476, 489], "263": [476, 489], "273": [476, 489], "994": [476, 489], "generate_pixel_data": [476, 489], "685": [476, 489], "693": [476, 489], "932": [476, 489], "toler": [476, 478, 489], "940": [476, 489], "205": [476, 489], "unexpect": [476, 489], "848": [476, 489], "981": [476, 489], "537": [476, 489], "452": [476, 489], "2019e": [476, 489], "get_frame_offset": [476, 489], "timelin": [476, 488], "789": [476, 488], "image_handl": [476, 487, 488], "deferreddatael": [476, 487, 488], "760": [476, 488], "isstringorstringlist": [476, 488], "isstr": [476, 488], "666": [476, 488], "799": [476, 488], "gzip": [476, 482, 488], "753": [476, 488], "730": [476, 488], "820": [476, 488], "864": [476, 488], "819": [476, 488], "850": [476, 488], "838": [476, 488], "757": [476, 488], "785": [476, 488], "788": [476, 488], "810": [476, 488], "815": [476, 488], "804": [476, 488], "mix": [476, 488], "835": [476, 488], "excess": [476, 488], "791": [476, 488], "ji": [476, 488], "856": [476, 488], "fallback": [476, 487], "722": [476, 487], "jpegbaselinelossy8bit": [476, 487], "726": [476, 487], "jpegbaselinelossy12bit": [476, 487], "jpeg2000lossi": [476, 487], "inequ": [476, 486, 487], "matter": [476, 487, 501], "291": [476, 487], "numpypi": [476, 487], "2018c": [476, 487], "677": [476, 487], "624": [476, 487], "696": [476, 487], "584": [476, 487], "715": [476, 487], "716": [476, 487], "695": [476, 487], "737": [476, 487], "jpeglosslessp14": [476, 487], "713": [476, 487], "small": [476, 479, 485, 487, 498, 505], "729": [476, 487], "unus": [476, 487], "660": [476, 487], "682": [476, 487], "689": [476, 487], "jpeg2k": [476, 487], "663": [476, 487], "728": [476, 487], "704": [476, 487], "707": [476, 487], "consumpt": [476, 487], "717": [476, 487], "740": [476, 487], "464": [476, 486], "605": [476, 486], "292": [476, 486], "2018b": [476, 486], "649": [476, 486], "256": [476, 486], "0x0006": [476, 486], "489": [476, 486], "599": [476, 486], "unneed": [476, 486], "597": [476, 486], "620": [476, 486], "625": [476, 486], "fit": [476, 486], "640": [476, 486], "__ne__": [476, 486], "comparison": [476, 481, 486], "verif": [476, 486], "2017c": [476, 485], "fixer": [476, 485], "thrown": [476, 485], "143": [476, 485], "197": [476, 485], "212": [476, 485], "dictionary_is_retir": [476, 485], "thai": [476, 485], "japanes": [476, 477, 482, 485], "chines": [476, 477, 485], "353": [476, 485], "172": [476, 485], "clariti": [476, 485], "travisci": [476, 485], "appveyor": [476, 485], "coverag": [476, 485, 499], "pep": [476, 478, 481, 485], "151": [476, 485], "125": [476, 485], "show_dicomdir": [476, 484, 485], "258": [476, 485], "latin5": [476, 485], "turkish": [476, 485], "lot": [476, 485, 501, 508], "read_dicomdir": [476, 484], "subdirectori": [476, 484], "ez_setup": [476, 484], "aid": [476, 484], "pydicom_seri": [476, 480, 483, 484], "nil": [476, 484], "goyett": [476, 484], "ordereddict": [476, 484], "padraig": [476, 483, 484], "loonei": [476, 483, 484], "jonathan": [476, 483, 484], "myself": [476, 484], "rickard": [476, 484], "holmberg": [476, 484], "julien": [476, 484], "lami": [476, 484], "yaroslav": [476, 484], "halchenko": [476, 484], "mark": [476, 484], "matthew": [476, 484], "brett": [476, 484], "dimitri": [476, 484], "papadopoulo": [476, 484], "videan42": [476, 484], "sorri": [476, 484], "ve": [476, 484, 499, 500, 503, 506, 509], "anyon": [476, 484], "consolid": [476, 483], "revert": [476, 483], "prepar": [476, 483], "experiment": [476, 483], "unoffici": [476, 483], "uncom": [476, 483], "114": [476, 483], "slow": [476, 483], "approx": [476, 479, 483], "r78ba350a3eb8": [476, 483], "streamlin": [476, 483], "modern": [476, 483], "decor": [476, 483], "duplic": [476, 483], "gunnar": [476, 483], "schaefer": [476, 483], "774b7a55db33": [476, 483], "6b949a5b925b": [476, 483], "113": [476, 483], "84af4b240add": [476, 483], "f\u00e9lix": [476, 483], "morenc": [476, 483], "0197b5846bb5": [476, 483], "3678b1be6aca": [476, 483], "f1ae573d9de5": [476, 483], "0411bab7c985": [476, 483], "9b92b336e7d4": [476, 483], "e830f30b6781": [476, 483], "pysid": [476, 483], "qt": [476, 483], "acknowledg": [476, 483], "suever": [476, 483], "who": [476, 482, 483], "2011": [476, 481, 482], "ident": [476, 482], "4ed698a7bfb": [476, 482], "c313d2befb08": [476, 482], "promot": [476, 482], "across": [476, 482], "languag": [476, 477, 482], "b6b3658f3b14": [476, 482], "98": [476, 482], "52": [476, 482], "__dir__": [476, 482], "simplifi": [476, 478, 482], "file_metadata": [476, 481], "96": [476, 481], "catch": [476, 479, 481], "97": [476, 481], "write_new": [476, 481], "fc790f01f5": [476, 480], "84": [476, 480], "dicomit": [476, 480], "statement": [476, 480], "1c32791bf0": [476, 480], "e3ee934bbc": [476, 480], "dicom_dao": [476, 480], "mike": [476, 480], "wallac": [476, 480], "couchdb": [476, 480], "almar": [476, 480], "klein": [476, 480], "distinct": [476, 480], "preliminari": [476, 477, 480], "reorgan": [476, 477, 479], "substanti": [476, 479], "partial": [476, 479], "plain": [476, 479], "bullet": [476, 479], "ness": [476, 479], "logic": [476, 479], "daniel": [476, 479], "nanz": [476, 479], "dave": [476, 479], "witten": [476, 479], "adit": [476, 479], "panchal": [476, 479], "cp805": [476, 479], "supp": [476, 479], "117": [476, 479], "119": [476, 479], "122": [476, 479], "patch": [476, 479, 498, 499], "nikitathespid": [476, 479], "58": [476, 479], "pierr": [476, 479], "raybaut": [476, 479], "47": [476, 479], "r102": [476, 478], "r103": [476, 478], "issue36": [476, 478], "r97": [476, 478], "r110": [476, 478], "readfil": [476, 478], "savea": [476, 478], "pixelarrai": [476, 477, 478], "kept": [476, 478, 505], "r105": [476, 478], "r91": [476, 478], "r113": [476, 478], "r95": [476, 478], "issue38": [476, 478], "collis": [476, 478], "r96": [476, 478], "issue40": [476, 478], "notimplementerror": [476, 478], "r100": [476, 478], "issue41": [476, 478], "r104": [476, 478], "r109": [476, 478], "r111": [476, 478], "patientsbirthd": [476, 478], "r98": [476, 478], "deprecationwarn": [476, 477], "issue22": [476, 477], "r72": [476, 477], "r73": [476, 477], "greek": [476, 477], "gui": [476, 477], "r64": [476, 477], "r65": [476, 477], "r69": [476, 477], "r70": [476, 477], "data_elem": [476, 477, 501], "r68": [476, 477], "r55": [476, 477], "uid_dictionari": [476, 477], "r51": [476, 477], "synonym": [476, 477], "issue27": [476, 477], "incorrectli": [476, 477], "read_ow": [476, 477], "undefinedlength": [476, 477], "r50": [476, 477], "dicominfo": [476, 477], "issue33": [476, 477], "issue18": [476, 477], "r45": [476, 477], "r67": [476, 477], "r46": [476, 477], "pixeldataarrai": [476, 477], "distutil": [476, 477], "ones": [498, 501, 503], "typo": 498, "materi": 498, "googl": 498, "django": [499, 500, 502], "cd": [499, 500, 503], "live": [499, 500], "yourusernam": [499, 500], "virtualenv": [499, 500, 508], "pydx": 499, "pythonx": 499, "mkvirtualenv": [499, 508], "accident": [499, 503], "area": 499, "afterward": 499, "our": [499, 500, 503, 509], "dot": [499, 501], "choos": [499, 500], "won": [499, 500, 501, 503], "master": [499, 500], "checkout": [499, 500], "reproduc": 499, "seem": 499, "daunt": 499, "resourc": 499, "captur": 499, "dive": 499, "Into": 499, "unittest": 499, "troubl": 499, "500": [499, 501], "test_uid": 499, "test_new_uid": 499, "newdefineduid": 499, "assert": [499, 502], "380": 499, "editor": [499, 500], "236": 499, "rst": [499, 500], "properli": 499, "happi": [499, 500], "idea": [499, 500], "cach": [499, 505], "scroll": 499, "front": 499, "push": [499, 500], "wip": [499, 500], "real": [499, 500, 509], "mrg": [499, 500], "readi": [499, 500, 508], "merg": [499, 500], "clarif": [499, 500], "approv": [499, 500], "lastli": [499, 500], "remot": [499, 500], "bin": [499, 500, 508], "icon": [499, 500], "pyd": [500, 501], "activ": [500, 505], "venv": [500, 508], "restructuredtext": 500, "navig": 500, "occasion": [500, 501, 503], "_build": 500, "web": 500, "localhost": 500, "tut": 500, "toctre": 500, "visibl": 500, "got": 500, "maxdepth": 500, "contributing_cod": 500, "contributing_doc": 500, "rebuild": 500, "reachabl": 500, "task": 500, "chapter_7": 500, "apr": 500, "46": 500, "gcc": 500, "copyright": 500, "credit": 500, "accessionnumb": 500, "acquisitiondata": 500, "xraytubecurr": 500, "primer": 500, "am": 500, "circleci": 500, "success": 500, "artifact": 500, "tab": 500, "yet": [501, 507], "vari": 501, "home": [501, 503, 508], "env": [501, 503, 508], "lib": [501, 503], "site": [501, 503], "earlier": 501, "__version__": [501, 508], "rb": 501, "infil": 501, "no_meta": 501, "678": 501, "631": 501, "caution": 501, "not_dicom": 501, "1703": 501, "1436": 501, "1079": 501, "833": 501, "character_set": 501, "581": 501, "6854": 501, "7369": 501, "hexadecim": 501, "iso_ir_100": 501, "0x6002": 501, "0x6004": 501, "0x601e": 501, "gggg": 501, "surround": 501, "0x0008": 501, "0x0016": 501, "private_elem": 501, "0x0043": 501, "0x104e": 501, "lack": 501, "stick": 501, "simpler": 501, "imagetyp": 501, "act": 501, "branch": [501, 505], "manner": [501, 506], "0x1002": 501, "saw": 501, "ii": [501, 509], "x00t": 501, "x18": 501, "x08": 501, "chanc": 501, "But": 501, "snip": 501, "hello": 501, "world": 501, "_list": 501, "0x0028": 501, "0x1050": 501, "windowwidth": 501, "notic": [501, 503], "typeofpatientid": 501, "windowcent": 501, "prefer": 501, "wb": 501, "1794": 501, "712": 501, "2372": 501, "habit": 501, "congratul": 501, "beta": 502, "deseri": 502, "00080005": 502, "00080008": 502, "symmetr": 502, "ds_json": 502, "ds1": 502, "smaller": 502, "bulk_data_handl": 502, "store_data_and_return_uri": 502, "bulk_data_read": 502, "bulk_data_uri": 502, "data_retrieved_via_uri": 502, "json_data": 502, "00091002": 502, "data_retrieved_for_tag_and_vr_via_uri": 502, "share": 503, "frequent": 503, "dvd": 503, "procedur": 503, "ultrasound": 503, "despit": 503, "commonli": [503, 506], "usb": 503, "pc": 503, "minor": 503, "recalcul": 503, "1220": 503, "briefli": 503, "directoryrecordsequ": 503, "3126": 503, "di": 503, "510": 503, "complic": [503, 508], "flat": 503, "abstract": 503, "awai": 503, "dig": 503, "cost": 503, "importantli": 503, "though": 503, "tmp0aalrzir": 503, "rtdose": 503, "1858": 503, "_recordifi": 503, "2338": 503, "_check_dataset": 503, "instancenumb": 503, "dosesummationtyp": 503, "2281": 503, "record_gen": 503, "1860": 503, "tmpsqz8rhgb": 503, "rd000000": 503, "shutil": 503, "copytre": 503, "copyfil": 503, "dst": 503, "98892001": 503, "98892003": 503, "tmpu068kdwp": 503, "cr1": 503, "6154": 503, "cr2": 503, "6247": 503, "cr3": 503, "6278": 503, "ct2": 503, "17106": 503, "17136": 503, "17166": 503, "17196": 503, "Then": [504, 505], "isol": [505, 508], "admin": 505, "privileg": 505, "offlin": 505, "whl": 505, "py3": 505, "forg": [505, 506, 509], "fetch_data_fil": 505, "popular": 505, "beforehand": 505, "charl": 505, "latest": 505, "cython": 505, "older": 505, "framework": 505, "snapshot": 505, "stabl": 505, "undocu": 505, "prerequisit": [506, 509], "conda": [506, 509], "hundr": 506, "megabyt": 506, "slide": 506, "microscopi": 506, "gigabyt": 506, "territori": 506, "Being": 506, "significantli": 506, "i2": 506, "1697": 506, "frame_iter": 506, "listcomp": 506, "382": 506, "_encode_arrai": 506, "209": 506, "_preprocess": 506, "533": 506, "recompress": 506, "began": 507, "foundat": 507, "codedict": 507, "cid": 507, "incorrectmodalityworklistentri": 507, "mixedmodality3dcammodel": 507, "modalitytoread": 507, "othermod": 507, "128002": 507, "scheme_design": 507, "scheme_vers": 507, "underscor": 507, "sct": 507, "_1sigmalowervalueofpopul": 507, "371919006": 507, "sigma": 507, "cid270": 507, "121006": 507, "cid_for_nam": 507, "observ": 507, "observationsubjectclass": 507, "observertyp": 507, "echofindingobservationtyp": 507, "270": 507, "ln": 507, "fma": 507, "mdc": 507, "uml": 507, "bari": 507, "ncit": 507, "neu": 507, "ucum": 507, "radlex": 507, "ndc": 507, "itis_tsn": 507, "pubchem_cid": 507, "msh": 507, "capabl": 507, "differenti": 508, "simultan": 508, "maintain": 508, "worri": 508, "fulli": 508, "virtualenvwrapp": 508, "usr": 508, "user_script": 508, "predeactiv": 508, "postdeactiv": 508, "preactiv": 508, "postactiv": 508, "get_env_detail": 508, "workon_hom": 508, "environment": 508, "py37": 508, "rmvirtualenv": 508, "workon": 508, "antigrav": 508, "surpris": 508, "lsvirtualenv": 508, "fresh": 508, "proce": 508, "py35": 508, "condaenvironmenterror": 508, "explanatori": 509, "respiratori": 509, "interv": 509, "rhythm": 509, "khz": 509, "0200": 509, "channelsensit": 509, "einthoven": 509, "microvolt": 509, "iii": 509, "avr": 509, "avl": 509, "avf": 509, "v4": 509, "v5": 509, "v6": 509, "interleav": 509, "ch": 509, "ax1": 509, "ax2": 509, "\u03bcv": 509, "cosin": 509, "sine": 509, "chosen": 509, "pi": 509, "ch1": 509, "astyp": 509, "ch2": 509, "sin": 509, "waveformorigin": 509, "condition": 509, "opt": 509, "obvious": 509, "chdef_seq": 509, "chdef": 509, "curve_typ": 509, "channelsampleskew": 509, "waveformbitsstor": 509, "codevalu": 509, "codingschemedesign": 509, "codingschemevers": 509, "stack": 509, "axi": 509, "my_waveform": 509}, "objects": {"": [[473, 0, 0, "-", "pydicom"]], "pydicom.charset": [[74, 1, 1, "", "convert_encodings"], [75, 1, 1, "", "decode_bytes"], [76, 1, 1, "", "decode_element"], [77, 1, 1, "", "encode_string"]], "pydicom.config": [[78, 2, 1, "", "APPLY_J2K_CORRECTIONS"], [79, 1, 1, "", "DS_decimal"], [80, 1, 1, "", "DS_numpy"], [81, 2, 1, "", "IGNORE"], [82, 2, 1, "", "INVALID_KEYWORD_BEHAVIOR"], [83, 2, 1, "", "INVALID_KEY_BEHAVIOR"], [84, 2, 1, "", "RAISE"], [54, 3, 1, "", "Settings"], [85, 2, 1, "", "WARN"], [86, 2, 1, "", "allow_DS_float"], [87, 2, 1, "", "assume_implicit_vr_switch"], [88, 2, 1, "", "convert_wrong_length_to_UN"], [89, 2, 1, "", "data_element_callback"], [90, 2, 1, "", "data_element_callback_kwargs"], [91, 2, 1, "", "datetime_conversion"], [92, 1, 1, "", "debug"], [93, 2, 1, "", "enforce_valid_values"], [94, 1, 1, "", "future_behavior"], [95, 2, 1, "", "overlay_data_handlers"], [96, 2, 1, "", "pixel_data_handlers"], [97, 1, 1, "", "reset_data_element_callback"], [98, 2, 1, "", "settings"], [99, 2, 1, "", "show_file_meta"], [100, 2, 1, "", "use_DS_decimal"], [101, 2, 1, "", "use_DS_numpy"], [102, 2, 1, "", "use_IS_numpy"]], "pydicom.config.Settings": [[54, 4, 1, "", "infer_sq_for_un_vr"], [54, 4, 1, "", "reading_validation_mode"], [54, 4, 1, "", "writing_validation_mode"]], "pydicom.data": [[103, 1, 1, "", "get_charset_files"], [104, 1, 1, "", "get_palette_files"], [105, 1, 1, "", "get_testdata_file"], [106, 1, 1, "", "get_testdata_files"]], "pydicom.datadict": [[107, 1, 1, "", "add_dict_entries"], [108, 1, 1, "", "add_dict_entry"], [109, 1, 1, "", "add_private_dict_entries"], [110, 1, 1, "", "add_private_dict_entry"], [111, 1, 1, "", "dictionary_VM"], [112, 1, 1, "", "dictionary_VR"], [113, 1, 1, "", "dictionary_description"], [114, 1, 1, "", "dictionary_has_tag"], [115, 1, 1, "", "dictionary_is_retired"], [116, 1, 1, "", "dictionary_keyword"], [117, 1, 1, "", "get_entry"], [118, 1, 1, "", "get_private_entry"], [119, 1, 1, "", "keyword_for_tag"], [120, 1, 1, "", "mask_match"], [121, 1, 1, "", "private_dictionary_VM"], [122, 1, 1, "", "private_dictionary_VR"], [123, 1, 1, "", "private_dictionary_description"], [124, 1, 1, "", "repeater_has_keyword"], [125, 1, 1, "", "repeater_has_tag"], [126, 1, 1, "", "tag_for_keyword"]], "pydicom.dataelem": [[127, 3, 1, "", "DataElement"], [128, 1, 1, "", "DataElement_from_raw"], [129, 3, 1, "", "RawDataElement"]], "pydicom.dataelem.DataElement": [[127, 4, 1, "", "VM"], [127, 5, 1, "", "VR"], [127, 6, 1, "", "__init__"], [127, 6, 1, "", "clear"], [127, 5, 1, "", "descripWidth"], [127, 6, 1, "", "description"], [127, 4, 1, "", "empty_value"], [127, 6, 1, "", "from_json"], [127, 4, 1, "", "is_empty"], [127, 4, 1, "", "is_private"], [127, 4, 1, "", "is_retired"], [127, 5, 1, "", "is_undefined_length"], [127, 4, 1, "", "keyword"], [127, 5, 1, "", "maxBytesToDisplay"], [127, 4, 1, "", "name"], [127, 4, 1, "", "repval"], [127, 5, 1, "", "showVR"], [127, 5, 1, "", "tag"], [127, 6, 1, "", "to_json"], [127, 6, 1, "", "to_json_dict"], [127, 6, 1, "", "validate"], [127, 4, 1, "", "value"]], "pydicom.dataelem.RawDataElement": [[129, 5, 1, "", "VR"], [129, 6, 1, "", "__init__"], [129, 5, 1, "", "is_implicit_VR"], [129, 5, 1, "", "is_little_endian"], [129, 5, 1, "", "is_raw"], [129, 5, 1, "", "length"], [129, 5, 1, "", "tag"], [129, 5, 1, "", "value"], [129, 5, 1, "", "value_tell"]], "pydicom.dataset": [[130, 3, 1, "", "Dataset"], [131, 3, 1, "", "FileDataset"], [132, 3, 1, "", "FileMetaDataset"], [133, 3, 1, "", "PrivateBlock"], [134, 1, 1, "", "validate_file_meta"]], "pydicom.dataset.Dataset": [[130, 6, 1, "", "__init__"], [130, 6, 1, "", "add"], [130, 6, 1, "", "add_new"], [130, 6, 1, "", "clear"], [130, 6, 1, "", "compress"], [130, 6, 1, "", "convert_pixel_data"], [130, 6, 1, "", "copy"], [130, 6, 1, "", "data_element"], [130, 6, 1, "", "decode"], [130, 6, 1, "", "decompress"], [130, 5, 1, "", "default_element_format"], [130, 5, 1, "", "default_sequence_element_format"], [130, 6, 1, "", "dir"], [130, 6, 1, "", "elements"], [130, 6, 1, "", "ensure_file_meta"], [130, 6, 1, "", "fix_meta_info"], [130, 6, 1, "", "formatted_lines"], [130, 6, 1, "", "from_json"], [130, 6, 1, "", "get"], [130, 6, 1, "", "get_item"], [130, 6, 1, "", "get_private_item"], [130, 6, 1, "", "group_dataset"], [130, 5, 1, "", "indent_chars"], [130, 5, 1, "", "is_implicit_VR"], [130, 5, 1, "", "is_little_endian"], [130, 4, 1, "", "is_original_encoding"], [130, 6, 1, "", "items"], [130, 6, 1, "", "iterall"], [130, 6, 1, "", "keys"], [130, 6, 1, "", "overlay_array"], [130, 4, 1, "", "parent"], [130, 4, 1, "", "parent_seq"], [130, 4, 1, "", "pixel_array"], [130, 6, 1, "", "pop"], [130, 6, 1, "", "popitem"], [130, 6, 1, "", "private_block"], [130, 6, 1, "", "private_creators"], [130, 6, 1, "", "remove_private_tags"], [130, 6, 1, "", "save_as"], [130, 6, 1, "", "set_original_encoding"], [130, 6, 1, "", "setdefault"], [130, 6, 1, "", "to_json"], [130, 6, 1, "", "to_json_dict"], [130, 6, 1, "", "top"], [130, 6, 1, "", "trait_names"], [130, 6, 1, "", "update"], [130, 6, 1, "", "values"], [130, 6, 1, "", "walk"], [130, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileDataset": [[131, 6, 1, "", "__init__"], [131, 5, 1, "", "file_meta"], [131, 5, 1, "", "filename"], [131, 5, 1, "", "fileobj_type"], [131, 5, 1, "", "is_implicit_VR"], [131, 5, 1, "", "is_little_endian"], [131, 5, 1, "", "preamble"], [131, 5, 1, "", "timestamp"]], "pydicom.dataset.FileMetaDataset": [[132, 6, 1, "", "__init__"], [132, 6, 1, "", "validate"]], "pydicom.dataset.PrivateBlock": [[133, 6, 1, "", "__init__"], [133, 6, 1, "", "add_new"], [133, 5, 1, "", "block_start"], [133, 5, 1, "", "dataset"], [133, 6, 1, "", "get_tag"], [133, 5, 1, "", "group"], [133, 5, 1, "", "private_creator"]], "pydicom.encaps": [[135, 1, 1, "", "decode_data_sequence"], [136, 1, 1, "", "defragment_data"], [137, 1, 1, "", "encapsulate"], [138, 1, 1, "", "encapsulate_extended"], [139, 1, 1, "", "fragment_frame"], [140, 1, 1, "", "generate_pixel_data"], [141, 1, 1, "", "generate_pixel_data_fragment"], [142, 1, 1, "", "generate_pixel_data_frame"], [143, 1, 1, "", "get_frame_offsets"], [144, 1, 1, "", "itemize_fragment"], [145, 1, 1, "", "itemize_frame"], [146, 1, 1, "", "read_item"]], "pydicom": [[66, 0, 0, "-", "encoders"], [470, 0, 0, "-", "overlays"], [471, 0, 0, "-", "pixel_data_handlers"], [472, 0, 0, "-", "waveforms"]], "pydicom.encoders": [[147, 2, 1, "", "RLELosslessEncoder"], [149, 1, 1, "", "get_encoder"]], "pydicom.encoders.base": [[148, 3, 1, "", "Encoder"]], "pydicom.encoders.base.Encoder": [[148, 4, 1, "", "UID"], [148, 6, 1, "", "__init__"], [148, 6, 1, "", "add_plugin"], [148, 6, 1, "", "encode"], [148, 4, 1, "", "is_available"], [148, 6, 1, "", "iter_encode"], [148, 6, 1, "", "kwargs_from_ds"], [148, 4, 1, "", "missing_dependencies"], [148, 4, 1, "", "name"], [148, 6, 1, "", "remove_plugin"]], "pydicom.errors": [[150, 7, 1, "", "InvalidDicomError"]], "pydicom.filebase": [[151, 3, 1, "", "DicomBytesIO"], [152, 1, 1, "", "DicomFile"], [153, 3, 1, "", "DicomFileLike"], [154, 3, 1, "", "DicomIO"]], "pydicom.filebase.DicomBytesIO": [[151, 6, 1, "", "__init__"]], "pydicom.filebase.DicomFileLike": [[153, 6, 1, "", "__init__"], [153, 6, 1, "", "no_read"], [153, 6, 1, "", "no_seek"], [153, 6, 1, "", "no_write"]], "pydicom.filebase.DicomIO": [[154, 6, 1, "", "__init__"], [154, 6, 1, "", "read"], [154, 6, 1, "", "read_beUL"], [154, 6, 1, "", "read_beUS"], [154, 6, 1, "", "read_be_tag"], [154, 6, 1, "", "read_leUL"], [154, 6, 1, "", "read_leUS"], [154, 6, 1, "", "read_le_tag"], [154, 6, 1, "", "write_UL"], [154, 6, 1, "", "write_US"], [154, 6, 1, "", "write_beUL"], [154, 6, 1, "", "write_beUS"], [154, 6, 1, "", "write_leUL"], [154, 6, 1, "", "write_leUS"], [154, 6, 1, "", "write_tag"]], "pydicom.filereader": [[155, 1, 1, "", "data_element_generator"], [156, 1, 1, "", "data_element_offset_to_value"], [157, 1, 1, "", "dcmread"], [158, 1, 1, "", "read_dataset"], [159, 1, 1, "", "read_deferred_data_element"], [160, 1, 1, "", "read_file_meta_info"], [161, 1, 1, "", "read_partial"], [162, 1, 1, "", "read_preamble"], [163, 1, 1, "", "read_sequence"], [164, 1, 1, "", "read_sequence_item"]], "pydicom.fileset": [[165, 2, 1, "", "DIRECTORY_RECORDERS"], [166, 3, 1, "", "FileInstance"], [167, 3, 1, "", "FileSet"], [168, 3, 1, "", "RecordNode"], [169, 1, 1, "", "generate_filename"], [170, 1, 1, "", "is_conformant_file_id"]], "pydicom.fileset.FileInstance": [[166, 4, 1, "", "FileID"], [166, 4, 1, "", "SOPClassUID"], [166, 4, 1, "", "SOPInstanceUID"], [166, 4, 1, "", "TransferSyntaxUID"], [166, 6, 1, "", "__init__"], [166, 4, 1, "", "file_set"], [166, 4, 1, "", "for_addition"], [166, 4, 1, "", "for_moving"], [166, 4, 1, "", "for_removal"], [166, 4, 1, "", "is_private"], [166, 4, 1, "", "is_staged"], [166, 6, 1, "", "load"], [166, 5, 1, "", "node"], [166, 4, 1, "", "path"]], "pydicom.fileset.FileSet": [[167, 4, 1, "", "ID"], [167, 4, 1, "", "UID"], [167, 6, 1, "", "__init__"], [167, 6, 1, "", "add"], [167, 6, 1, "", "add_custom"], [167, 6, 1, "", "clear"], [167, 6, 1, "", "copy"], [167, 4, 1, "", "descriptor_character_set"], [167, 4, 1, "", "descriptor_file_id"], [167, 6, 1, "", "find"], [167, 6, 1, "", "find_values"], [167, 4, 1, "", "is_staged"], [167, 6, 1, "", "load"], [167, 4, 1, "", "path"], [167, 6, 1, "", "remove"], [167, 6, 1, "", "write"]], "pydicom.fileset.RecordNode": [[168, 6, 1, "", "__init__"], [168, 6, 1, "", "add"], [168, 4, 1, "", "ancestors"], [168, 5, 1, "", "children"], [168, 4, 1, "", "component"], [168, 4, 1, "", "depth"], [168, 4, 1, "", "file_set"], [168, 4, 1, "", "has_instance"], [168, 4, 1, "", "index"], [168, 5, 1, "", "instance"], [168, 4, 1, "", "is_root"], [168, 4, 1, "", "key"], [168, 4, 1, "", "next"], [168, 4, 1, "", "parent"], [168, 6, 1, "", "prettify"], [168, 4, 1, "", "previous"], [168, 4, 1, "", "record_type"], [168, 6, 1, "", "remove"], [168, 6, 1, "", "reverse"], [168, 4, 1, "", "root"]], "pydicom.fileutil": [[171, 1, 1, "", "absorb_delimiter_item"], [172, 1, 1, "", "find_bytes"], [173, 1, 1, "", "find_delimiter"], [174, 1, 1, "", "length_of_undefined_length"], [175, 1, 1, "", "read_undefined_length_value"]], "pydicom.filewriter": [[176, 1, 1, "", "correct_ambiguous_vr"], [177, 1, 1, "", "correct_ambiguous_vr_element"], [178, 1, 1, "", "dcmwrite"], [179, 1, 1, "", "multi_string"], [180, 1, 1, "", "write_ATvalue"], [181, 1, 1, "", "write_DA"], [182, 1, 1, "", "write_DT"], [183, 1, 1, "", "write_OBvalue"], [184, 1, 1, "", "write_OWvalue"], [185, 1, 1, "", "write_PN"], [186, 1, 1, "", "write_TM"], [187, 1, 1, "", "write_UI"], [188, 1, 1, "", "write_UN"], [189, 1, 1, "", "write_data_element"], [190, 1, 1, "", "write_dataset"], [191, 1, 1, "", "write_file_meta_info"], [192, 1, 1, "", "write_number_string"], [193, 1, 1, "", "write_numbers"], [194, 1, 1, "", "write_sequence"], [195, 1, 1, "", "write_sequence_item"], [196, 1, 1, "", "write_string"], [197, 1, 1, "", "write_text"]], "pydicom.misc": [[198, 1, 1, "", "is_dicom"], [199, 1, 1, "", "size_in_bytes"]], "pydicom.multival": [[200, 3, 1, "", "MultiValue"]], "pydicom.multival.MultiValue": [[200, 6, 1, "", "__init__"], [200, 6, 1, "", "append"], [200, 6, 1, "", "extend"], [200, 6, 1, "", "insert"]], "pydicom.overlays": [[201, 0, 0, "-", "numpy_handler"]], "pydicom.overlays.numpy_handler": [[201, 1, 1, "", "get_expected_length"], [201, 1, 1, "", "get_overlay_array"], [201, 1, 1, "", "is_available"], [201, 1, 1, "", "reshape_overlay_array"]], "pydicom.pixel_data_handlers": [[202, 1, 1, "", "apply_color_lut"], [203, 1, 1, "", "apply_modality_lut"], [204, 1, 1, "", "apply_rescale"], [205, 1, 1, "", "apply_voi"], [206, 1, 1, "", "apply_voi_lut"], [207, 1, 1, "", "apply_windowing"], [208, 1, 1, "", "convert_color_space"], [209, 0, 0, "-", "gdcm_handler"], [210, 0, 0, "-", "jpeg_ls_handler"], [211, 0, 0, "-", "numpy_handler"], [212, 0, 0, "-", "pillow_handler"], [213, 0, 0, "-", "pylibjpeg_handler"], [214, 0, 0, "-", "rle_handler"], [215, 0, 0, "-", "util"]], "pydicom.pixel_data_handlers.gdcm_handler": [[209, 1, 1, "", "create_data_element"], [209, 1, 1, "", "create_image"], [209, 1, 1, "", "get_pixeldata"], [209, 1, 1, "", "is_available"], [209, 1, 1, "", "needs_to_convert_to_RGB"], [209, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [209, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[210, 1, 1, "", "get_pixeldata"], [210, 1, 1, "", "is_available"], [210, 1, 1, "", "needs_to_convert_to_RGB"], [210, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [210, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.numpy_handler": [[211, 1, 1, "", "get_pixeldata"], [211, 1, 1, "", "is_available"], [211, 1, 1, "", "needs_to_convert_to_RGB"], [211, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [211, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pillow_handler": [[212, 1, 1, "", "get_pixeldata"], [212, 1, 1, "", "is_available"], [212, 1, 1, "", "needs_to_convert_to_RGB"], [212, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [212, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[213, 1, 1, "", "as_array"], [213, 1, 1, "", "generate_frames"], [213, 1, 1, "", "get_pixeldata"], [213, 1, 1, "", "is_available"], [213, 1, 1, "", "needs_to_convert_to_RGB"], [213, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [213, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.rle_handler": [[214, 1, 1, "", "get_pixeldata"], [214, 1, 1, "", "is_available"], [214, 1, 1, "", "needs_to_convert_to_RGB"], [214, 1, 1, "", "rle_encode_frame"], [214, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [214, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.util": [[215, 1, 1, "", "apply_color_lut"], [215, 1, 1, "", "apply_modality_lut"], [215, 1, 1, "", "apply_voi"], [215, 1, 1, "", "apply_voi_lut"], [215, 1, 1, "", "apply_windowing"], [215, 1, 1, "", "convert_color_space"], [215, 1, 1, "", "dtype_corrected_for_endianness"], [215, 1, 1, "", "expand_ybr422"], [215, 1, 1, "", "get_expected_length"], [215, 1, 1, "", "get_image_pixel_ids"], [215, 1, 1, "", "get_j2k_parameters"], [215, 1, 1, "", "get_nr_frames"], [215, 1, 1, "", "pack_bits"], [215, 1, 1, "", "pixel_dtype"], [215, 1, 1, "", "reshape_pixel_array"], [215, 1, 1, "", "unpack_bits"]], "pydicom.sequence": [[216, 3, 1, "", "Sequence"], [217, 1, 1, "", "validate_dataset"]], "pydicom.sequence.Sequence": [[216, 6, 1, "", "__init__"], [216, 6, 1, "", "append"], [216, 6, 1, "", "extend"], [216, 6, 1, "", "insert"], [216, 4, 1, "", "parent"], [216, 4, 1, "", "parent_dataset"]], "pydicom.tag": [[218, 3, 1, "", "BaseTag"], [219, 1, 1, "", "Tag"], [220, 1, 1, "", "TupleTag"], [221, 1, 1, "", "tag_in_exception"]], "pydicom.tag.BaseTag": [[218, 6, 1, "", "__init__"], [218, 4, 1, "", "elem"], [218, 4, 1, "", "element"], [218, 4, 1, "", "group"], [218, 4, 1, "", "is_private"], [218, 4, 1, "", "is_private_creator"], [218, 4, 1, "", "json_key"], [218, 4, 1, "", "private_creator"]], "pydicom.uid": [[222, 2, 1, "", "AcquisitionContextSRStorage"], [223, 2, 1, "", "AdvancedBlendingPresentationStateStorage"], [224, 2, 1, "", "AllTransferSyntaxes"], [225, 2, 1, "", "AmbulatoryECGWaveformStorage"], [226, 2, 1, "", "ArterialPulseWaveformStorage"], [227, 2, 1, "", "AutorefractionMeasurementsStorage"], [228, 2, 1, "", "BasicStructuredDisplayStorage"], [229, 2, 1, "", "BasicTextSRStorage"], [230, 2, 1, "", "BasicVoiceAudioWaveformStorage"], [231, 2, 1, "", "BlendingSoftcopyPresentationStateStorage"], [232, 2, 1, "", "BodyPositionWaveformStorage"], [233, 2, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [234, 2, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [235, 2, 1, "", "BreastTomosynthesisImageStorage"], [236, 2, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [237, 2, 1, "", "CArmPhotonElectronRadiationStorage"], [238, 2, 1, "", "CTDefinedProcedureProtocolStorage"], [239, 2, 1, "", "CTImageStorage"], [240, 2, 1, "", "CTPerformedProcedureProtocolStorage"], [241, 2, 1, "", "CardiacElectrophysiologyWaveformStorage"], [242, 2, 1, "", "ChestCADSRStorage"], [243, 2, 1, "", "ColonCADSRStorage"], [244, 2, 1, "", "ColorPaletteStorage"], [245, 2, 1, "", "ColorSoftcopyPresentationStateStorage"], [246, 2, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [247, 2, 1, "", "Comprehensive3DSRStorage"], [248, 2, 1, "", "ComprehensiveSRStorage"], [249, 2, 1, "", "ComputedRadiographyImageStorage"], [250, 2, 1, "", "ContentAssessmentResultsStorage"], [251, 2, 1, "", "CornealTopographyMapStorage"], [252, 2, 1, "", "DICOS2DAITStorage"], [253, 2, 1, "", "DICOS3DAITStorage"], [254, 2, 1, "", "DICOSCTImageStorage"], [255, 2, 1, "", "DICOSDigitalXRayImageStorageForPresentation"], [256, 2, 1, "", "DICOSDigitalXRayImageStorageForProcessing"], [257, 2, 1, "", "DICOSQuadrupoleResonanceStorage"], [258, 2, 1, "", "DICOSThreatDetectionReportStorage"], [259, 2, 1, "", "DeflatedExplicitVRLittleEndian"], [260, 2, 1, "", "DeformableSpatialRegistrationStorage"], [261, 2, 1, "", "DermoscopicPhotographyImageStorage"], [262, 2, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [263, 2, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [264, 2, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [265, 2, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [266, 2, 1, "", "DigitalXRayImageStorageForPresentation"], [267, 2, 1, "", "DigitalXRayImageStorageForProcessing"], [268, 2, 1, "", "EddyCurrentImageStorage"], [269, 2, 1, "", "EddyCurrentMultiFrameImageStorage"], [270, 2, 1, "", "ElectromyogramWaveformStorage"], [271, 2, 1, "", "ElectrooculogramWaveformStorage"], [272, 2, 1, "", "EncapsulatedCDAStorage"], [273, 2, 1, "", "EncapsulatedMTLStorage"], [274, 2, 1, "", "EncapsulatedOBJStorage"], [275, 2, 1, "", "EncapsulatedPDFStorage"], [276, 2, 1, "", "EncapsulatedSTLStorage"], [277, 2, 1, "", "EnhancedCTImageStorage"], [278, 2, 1, "", "EnhancedMRColorImageStorage"], [279, 2, 1, "", "EnhancedMRImageStorage"], [280, 2, 1, "", "EnhancedPETImageStorage"], [281, 2, 1, "", "EnhancedSRStorage"], [282, 2, 1, "", "EnhancedUSVolumeStorage"], [283, 2, 1, "", "EnhancedXAImageStorage"], [284, 2, 1, "", "EnhancedXRFImageStorage"], [285, 2, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [286, 2, 1, "", "ExplicitVRBigEndian"], [287, 2, 1, "", "ExplicitVRLittleEndian"], [288, 2, 1, "", "ExtensibleSRStorage"], [289, 2, 1, "", "GeneralAudioWaveformStorage"], [290, 2, 1, "", "GeneralECGWaveformStorage"], [291, 2, 1, "", "GenericImplantTemplateStorage"], [292, 2, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [293, 2, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [294, 2, 1, "", "HEVCM10P51"], [295, 2, 1, "", "HEVCMP51"], [296, 2, 1, "", "HangingProtocolStorage"], [297, 2, 1, "", "HemodynamicWaveformStorage"], [298, 2, 1, "", "ImplantAssemblyTemplateStorage"], [299, 2, 1, "", "ImplantTemplateGroupStorage"], [300, 2, 1, "", "ImplantationPlanSRStorage"], [301, 2, 1, "", "ImplicitVRLittleEndian"], [302, 2, 1, "", "IntraocularLensCalculationsStorage"], [303, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [304, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [305, 2, 1, "", "JPEG2000"], [306, 2, 1, "", "JPEG2000Lossless"], [307, 2, 1, "", "JPEG2000MC"], [308, 2, 1, "", "JPEG2000MCLossless"], [309, 2, 1, "", "JPEG2000TransferSyntaxes"], [310, 2, 1, "", "JPEGBaseline8Bit"], [311, 2, 1, "", "JPEGExtended12Bit"], [312, 2, 1, "", "JPEGLSLossless"], [313, 2, 1, "", "JPEGLSNearLossless"], [314, 2, 1, "", "JPEGLSTransferSyntaxes"], [315, 2, 1, "", "JPEGLosslessP14"], [316, 2, 1, "", "JPEGLosslessSV1"], [317, 2, 1, "", "JPEGTransferSyntaxes"], [318, 2, 1, "", "KeratometryMeasurementsStorage"], [319, 2, 1, "", "KeyObjectSelectionDocumentStorage"], [320, 2, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [321, 2, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [322, 2, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [323, 2, 1, "", "LensometryMeasurementsStorage"], [324, 2, 1, "", "MPEG2MPHL"], [325, 2, 1, "", "MPEG2MPML"], [326, 2, 1, "", "MPEG4HP41"], [327, 2, 1, "", "MPEG4HP41BD"], [328, 2, 1, "", "MPEG4HP422D"], [329, 2, 1, "", "MPEG4HP423D"], [330, 2, 1, "", "MPEG4HP42STEREO"], [331, 2, 1, "", "MPEGTransferSyntaxes"], [332, 2, 1, "", "MRImageStorage"], [333, 2, 1, "", "MRSpectroscopyStorage"], [334, 2, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [335, 2, 1, "", "MammographyCADSRStorage"], [336, 2, 1, "", "MediaStorageDirectoryStorage"], [337, 2, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [338, 2, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [339, 2, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [340, 2, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [341, 2, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [342, 2, 1, "", "MultichannelRespiratoryWaveformStorage"], [343, 2, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [344, 2, 1, "", "NuclearMedicineImageStorage"], [345, 2, 1, "", "OphthalmicAxialMeasurementsStorage"], [346, 2, 1, "", "OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [347, 2, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [348, 2, 1, "", "OphthalmicPhotography16BitImageStorage"], [349, 2, 1, "", "OphthalmicPhotography8BitImageStorage"], [350, 2, 1, "", "OphthalmicThicknessMapStorage"], [351, 2, 1, "", "OphthalmicTomographyImageStorage"], [352, 2, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [353, 2, 1, "", "PYDICOM_IMPLEMENTATION_UID"], [354, 2, 1, "", "PYDICOM_ROOT_UID"], [355, 2, 1, "", "ParametricMapStorage"], [356, 2, 1, "", "PatientRadiationDoseSRStorage"], [357, 2, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [358, 2, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [359, 2, 1, "", "PositronEmissionTomographyImageStorage"], [360, 2, 1, "", "ProcedureLogStorage"], [361, 2, 1, "", "ProtocolApprovalStorage"], [362, 2, 1, "", "PseudoColorSoftcopyPresentationStateStorage"], [363, 2, 1, "", "RE_VALID_UID"], [364, 2, 1, "", "RE_VALID_UID_PREFIX"], [365, 2, 1, "", "RLELossless"], [366, 2, 1, "", "RLETransferSyntaxes"], [367, 2, 1, "", "RTBeamsDeliveryInstructionStorage"], [368, 2, 1, "", "RTBeamsTreatmentRecordStorage"], [369, 2, 1, "", "RTBrachyApplicationSetupDeliveryInstructionStorage"], [370, 2, 1, "", "RTBrachyTreatmentRecordStorage"], [371, 2, 1, "", "RTDoseStorage"], [372, 2, 1, "", "RTImageStorage"], [373, 2, 1, "", "RTIonBeamsTreatmentRecordStorage"], [374, 2, 1, "", "RTIonPlanStorage"], [375, 2, 1, "", "RTPhysicianIntentStorage"], [376, 2, 1, "", "RTPlanStorage"], [377, 2, 1, "", "RTRadiationRecordSetStorage"], [378, 2, 1, "", "RTRadiationSalvageRecordStorage"], [379, 2, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [380, 2, 1, "", "RTRadiationSetStorage"], [381, 2, 1, "", "RTSegmentAnnotationStorage"], [382, 2, 1, "", "RTStructureSetStorage"], [383, 2, 1, "", "RTTreatmentPreparationStorage"], [384, 2, 1, "", "RTTreatmentSummaryRecordStorage"], [385, 2, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [386, 2, 1, "", "RawDataStorage"], [387, 2, 1, "", "RealWorldValueMappingStorage"], [388, 2, 1, "", "RespiratoryWaveformStorage"], [389, 2, 1, "", "RoboticArmRadiationStorage"], [390, 2, 1, "", "RoboticRadiationRecordStorage"], [391, 2, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [392, 2, 1, "", "SecondaryCaptureImageStorage"], [393, 2, 1, "", "SegmentationStorage"], [394, 2, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [395, 2, 1, "", "SimplifiedAdultEchoSRStorage"], [396, 2, 1, "", "SleepElectroencephalogramWaveformStorage"], [397, 2, 1, "", "SpatialFiducialsStorage"], [398, 2, 1, "", "SpatialRegistrationStorage"], [399, 2, 1, "", "SpectaclePrescriptionReportStorage"], [400, 2, 1, "", "StereometricRelationshipStorage"], [401, 2, 1, "", "SubjectiveRefractionMeasurementsStorage"], [402, 2, 1, "", "SurfaceScanMeshStorage"], [403, 2, 1, "", "SurfaceScanPointCloudStorage"], [404, 2, 1, "", "SurfaceSegmentationStorage"], [405, 2, 1, "", "TomotherapeuticRadiationRecordStorage"], [406, 2, 1, "", "TomotherapeuticRadiationStorage"], [407, 2, 1, "", "TractographyResultsStorage"], [408, 2, 1, "", "TwelveLeadECGWaveformStorage"], [409, 3, 1, "", "UID"], [410, 2, 1, "", "UltrasoundImageStorage"], [411, 2, 1, "", "UltrasoundMultiFrameImageStorage"], [412, 2, 1, "", "UncompressedTransferSyntaxes"], [413, 2, 1, "", "VLEndoscopicImageStorage"], [414, 2, 1, "", "VLMicroscopicImageStorage"], [415, 2, 1, "", "VLPhotographicImageStorage"], [416, 2, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [417, 2, 1, "", "VLWholeSlideMicroscopyImageStorage"], [418, 2, 1, "", "VideoEndoscopicImageStorage"], [419, 2, 1, "", "VideoMicroscopicImageStorage"], [420, 2, 1, "", "VideoPhotographicImageStorage"], [421, 2, 1, "", "VisualAcuityMeasurementsStorage"], [422, 2, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [423, 2, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [424, 2, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [425, 2, 1, "", "XADefinedProcedureProtocolStorage"], [426, 2, 1, "", "XAPerformedProcedureProtocolStorage"], [427, 2, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [428, 2, 1, "", "XRay3DAngiographicImageStorage"], [429, 2, 1, "", "XRay3DCraniofacialImageStorage"], [430, 2, 1, "", "XRayAngiographicImageStorage"], [431, 2, 1, "", "XRayRadiationDoseSRStorage"], [432, 2, 1, "", "XRayRadiofluoroscopicImageStorage"], [433, 1, 1, "", "generate_uid"]], "pydicom.uid.UID": [[409, 6, 1, "", "__init__"], [409, 4, 1, "", "info"], [409, 4, 1, "", "is_compressed"], [409, 4, 1, "", "is_deflated"], [409, 4, 1, "", "is_encapsulated"], [409, 4, 1, "", "is_implicit_VR"], [409, 4, 1, "", "is_little_endian"], [409, 4, 1, "", "is_private"], [409, 4, 1, "", "is_retired"], [409, 4, 1, "", "is_transfer_syntax"], [409, 4, 1, "", "is_valid"], [409, 4, 1, "", "keyword"], [409, 4, 1, "", "name"], [409, 4, 1, "", "type"]], "pydicom.valuerep": [[434, 3, 1, "", "DA"], [435, 1, 1, "", "DS"], [436, 3, 1, "", "DSdecimal"], [437, 3, 1, "", "DSfloat"], [438, 3, 1, "", "DT"], [439, 3, 1, "", "IS"], [440, 3, 1, "", "ISfloat"], [441, 1, 1, "", "MultiString"], [442, 3, 1, "", "PersonName"], [443, 5, 1, "", "PersonNameUnicode"], [444, 3, 1, "", "TM"], [445, 3, 1, "", "VR"], [446, 1, 1, "", "format_number_as_ds"], [447, 1, 1, "", "is_valid_ds"]], "pydicom.valuerep.DA": [[434, 6, 1, "", "__init__"]], "pydicom.valuerep.DSdecimal": [[436, 6, 1, "", "__init__"]], "pydicom.valuerep.DSfloat": [[437, 6, 1, "", "__init__"]], "pydicom.valuerep.DT": [[438, 6, 1, "", "__init__"]], "pydicom.valuerep.IS": [[439, 6, 1, "", "__init__"]], "pydicom.valuerep.ISfloat": [[440, 6, 1, "", "__init__"]], "pydicom.valuerep.PersonName": [[442, 6, 1, "", "__init__"], [442, 4, 1, "", "alphabetic"], [442, 4, 1, "", "components"], [442, 6, 1, "", "decode"], [442, 6, 1, "", "encode"], [442, 6, 1, "", "family_comma_given"], [442, 4, 1, "", "family_name"], [442, 6, 1, "", "formatted"], [442, 6, 1, "", "from_named_components"], [442, 6, 1, "", "from_named_components_veterinary"], [442, 4, 1, "", "given_name"], [442, 4, 1, "", "ideographic"], [442, 4, 1, "", "middle_name"], [442, 4, 1, "", "name_prefix"], [442, 4, 1, "", "name_suffix"], [442, 4, 1, "", "phonetic"]], "pydicom.valuerep.TM": [[444, 6, 1, "", "__init__"]], "pydicom.valuerep.VR": [[445, 6, 1, "", "__init__"]], "pydicom.values": [[448, 1, 1, "", "convert_AE_string"], [449, 1, 1, "", "convert_ATvalue"], [450, 1, 1, "", "convert_DA_string"], [451, 1, 1, "", "convert_DS_string"], [452, 1, 1, "", "convert_DT_string"], [453, 1, 1, "", "convert_IS_string"], [454, 1, 1, "", "convert_OBvalue"], [455, 1, 1, "", "convert_OWvalue"], [456, 1, 1, "", "convert_PN"], [457, 1, 1, "", "convert_SQ"], [458, 1, 1, "", "convert_TM_string"], [459, 1, 1, "", "convert_UI"], [460, 1, 1, "", "convert_UN"], [461, 1, 1, "", "convert_UR_string"], [462, 1, 1, "", "convert_numbers"], [463, 1, 1, "", "convert_single_string"], [464, 1, 1, "", "convert_string"], [465, 1, 1, "", "convert_tag"], [466, 1, 1, "", "convert_text"], [467, 1, 1, "", "convert_value"]], "pydicom.waveforms": [[468, 0, 0, "-", "numpy_handler"]], "pydicom.waveforms.numpy_handler": [[468, 1, 1, "", "generate_multiplex"], [468, 1, 1, "", "is_available"], [468, 1, 1, "", "multiplex_array"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:method", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"show": [0, 14, 26, 28], "dicom": [0, 10, 11, 12, 16, 17, 20, 24, 26, 39, 46, 52, 56, 73, 503, 505, 509], "file": [0, 10, 17, 20, 24, 26, 46, 52, 73, 476, 480, 483, 484, 503, 505], "us": [0, 2, 23, 40, 41, 48, 52, 505, 506, 508], "hierarch": 0, "tree": 0, "imag": [1, 2, 4, 6, 33, 34, 48], "process": [1, 6, 15], "downsiz": 2, "mri": 2, "pydicom": [2, 23, 24, 26, 27, 28, 30, 37, 38, 39, 40, 41, 43, 44, 47, 48, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 474, 475, 476, 496, 497, 498, 505, 506], "decod": [3, 53, 64, 509], "plot": [3, 4, 9], "waveform": [3, 51, 468, 472, 509], "data": [3, 8, 9, 12, 17, 31, 32, 41, 42, 43, 49, 50, 51, 55, 56, 58, 59, 65, 66, 103, 104, 105, 106, 469, 470, 471, 472, 502, 506, 509], "load": [4, 503], "ct": 4, "slice": 4, "axial": 4, "sagitt": 4, "coron": 4, "comput": [5, 13, 19, 21], "time": [5, 13, 19, 21], "gener": [6, 23, 36], "exampl": [6, 24, 26, 33, 37, 501, 505], "input": [6, 7], "output": [6, 7, 8], "metadata": [6, 15], "format": [8, 502], "set": [8, 10, 43, 73, 98, 503], "print": 8, "read": [9, 10, 11, 46, 70, 501], "dataset": [9, 14, 38, 41, 49, 50, 51, 55, 57, 68, 70, 72, 130, 131, 132, 133, 134, 501, 502], "pixel": [9, 31, 32, 33, 34, 41, 42, 50, 66, 469, 471, 506], "rtplan": 11, "list": [11, 475], "inform": 11, "write": [12, 36, 46, 52, 72, 499, 501], "work": [14, 18, 49, 50, 51, 502], "memori": 14, "base": [14, 69, 148], "add": 16, "dictionari": [16, 56], "item": 16, "standard": [16, 501], "anonym": 17, "singl": 17, "sequenc": [18, 38, 61, 216, 217, 501], "analys": 20, "differ": 20, "between": 20, "displai": [22, 43], "unicod": 22, "person": 22, "name": [22, 47], "frequent": 23, "ask": 23, "question": 23, "how": [23, 505], "do": 23, "i": [23, 439], "cite": 23, "instal": [23, 26, 27, 40, 499, 505, 508], "what": [23, 499, 500], "ar": 23, "": 23, "prerequisit": 23, "requir": [23, 31, 47, 499], "option": [23, 24, 26, 30, 54, 499, 505], "version": [23, 39, 47, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 505], "python": [23, 29, 45, 48], "can": 23, "codifi": [24, 26, 52], "command": [24, 26, 28], "A": [24, 26], "simpl": [24, 26], "part": [24, 26], "extend": [25, 26], "cli": [25, 26, 27], "line": 26, "interfac": 26, "guid": [26, 35, 37, 44], "introduct": [26, 27, 39, 40, 43, 47, 48, 49, 50, 51, 52, 502, 506], "combin": [26, 27], "other": [26, 27, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486], "element": [29, 38, 43, 58, 59, 60, 61, 62, 63, 64, 501], "vr": [29, 445], "type": [29, 36], "encod": [30, 31, 32, 33, 53, 66, 147, 148, 149, 509], "plugin": [30, 31, 33], "gdcm": [30, 505], "pylibjpeg": [30, 505], "ad": [31, 501, 503], "an": 31, "rle": 33, "lossless": 33, "valid": [33, 39], "paramet": 33, "avail": 33, "glossari": 34, "modul": [34, 47], "document": [36, 37, 476, 488, 499, 500], "style": 36, "guidelin": 36, "restructuredtext": 36, "get": [37, 55, 501], "start": 37, "user": [37, 44], "api": [37, 47, 473], "refer": [37, 473], "core": 38, "datael": [38, 127], "tag": [38, 62, 218, 219, 220, 221], "best": 39, "practic": 39, "enforc": 39, "futur": 39, "proof": 39, "your": [39, 499, 500], "code": [39, 499], "limit": 39, "major": [39, 476, 477, 478, 479, 480, 481, 482, 483, 485], "packag": [39, 41, 47, 506, 508], "licens": 40, "support": [40, 41, 42, 45, 502], "next": [40, 499, 500, 501], "step": [40, 501, 508], "compress": [41, 42, 506], "third": [41, 506], "parti": [41, 506], "transfer": [41, 42, 475], "syntax": [41, 42, 475], "handl": 42, "precondit": 42, "usag": 42, "privat": [43, 56], "remov": [43, 47, 503], "all": 43, "2": [45, 476, 477, 487, 491, 492, 493, 494, 495, 496], "pars": [46, 65], "transit": 47, "1": [47, 476, 485, 486, 487, 488, 489, 490, 492, 493], "x": 47, "For": 47, "author": 47, "0": [47, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 497], "error": [47, 67, 150], "messag": 47, "relat": 47, "chang": [47, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 488, 489, 490, 492, 494, 495, 496, 497, 499, 500, 503], "function": 47, "variabl": 47, "behavior": 47, "view": [48, 501], "matplotlib": 48, "tkinter": 48, "librari": [48, 499, 505], "pil": 48, "wxpython": 48, "overlai": [49, 201, 470], "overlay_arrai": 49, "pixel_arrai": 50, "color": 50, "space": 50, "palett": 50, "modal": 50, "lut": 50, "rescal": 50, "oper": 50, "voi": 50, "window": 50, "waveform_arrai": 51, "from": [52, 502], "scratch": 52, "charact": 53, "charset": [53, 74, 75, 76, 77], "configur": 54, "config": [54, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "includ": 55, "util": [56, 65, 71, 215, 469, 475], "datadict": [56, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "represent": [57, 58, 60, 61, 63], "dataelem": [59, 127, 128, 129], "multi": 60, "valu": [60, 61, 63, 64, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "multiv": [60, 200], "special": 63, "valuerep": [63, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "bulk": [65, 469], "encapsul": [65, 137, 506], "encap": [65, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "creat": [65, 499, 500, 502, 503, 508], "except": 67, "io": [68, 69, 71], "class": [69, 475], "filebas": [69, 151, 152, 153, 154], "fileread": [70, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "fileutil": [71, 171, 172, 173, 174, 175], "filewrit": [72, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "fileset": [73, 165, 166, 167, 168, 169, 170, 503], "convert_encod": 74, "decode_byt": 75, "decode_el": 76, "encode_str": 77, "apply_j2k_correct": 78, "ds_decim": 79, "ds_numpi": 80, "ignor": 81, "invalid_keyword_behavior": 82, "invalid_key_behavior": 83, "rais": 84, "warn": 85, "allow_ds_float": 86, "assume_implicit_vr_switch": 87, "convert_wrong_length_to_un": 88, "data_element_callback": 89, "data_element_callback_kwarg": 90, "datetime_convers": 91, "debug": 92, "enforce_valid_valu": 93, "future_behavior": 94, "overlay_data_handl": 95, "pixel_data_handl": [96, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 471], "reset_data_element_callback": 97, "show_file_meta": 99, "use_ds_decim": 100, "use_ds_numpi": 101, "use_is_numpi": 102, "get_charset_fil": 103, "get_palette_fil": 104, "get_testdata_fil": [105, 106], "add_dict_entri": [107, 108], "add_private_dict_entri": [109, 110], "dictionary_vm": 111, "dictionary_vr": 112, "dictionary_descript": 113, "dictionary_has_tag": 114, "dictionary_is_retir": 115, "dictionary_keyword": 116, "get_entri": 117, "get_private_entri": 118, "keyword_for_tag": 119, "mask_match": 120, "private_dictionary_vm": 121, "private_dictionary_vr": 122, "private_dictionary_descript": 123, "repeater_has_keyword": 124, "repeater_has_tag": 125, "tag_for_keyword": 126, "dataelement_from_raw": 128, "rawdatael": 129, "filedataset": 131, "filemetadataset": 132, "privateblock": 133, "validate_file_meta": 134, "decode_data_sequ": 135, "defragment_data": 136, "encapsulate_extend": 138, "fragment_fram": 139, "generate_pixel_data": 140, "generate_pixel_data_frag": 141, "generate_pixel_data_fram": 142, "get_frame_offset": 143, "itemize_frag": 144, "itemize_fram": 145, "read_item": 146, "rlelosslessencod": 147, "get_encod": 149, "invaliddicomerror": 150, "dicombytesio": 151, "dicomfil": 152, "dicomfilelik": 153, "dicomio": 154, "data_element_gener": 155, "data_element_offset_to_valu": 156, "dcmread": 157, "read_dataset": 158, "read_deferred_data_el": 159, "read_file_meta_info": 160, "read_parti": 161, "read_preambl": 162, "read_sequ": 163, "read_sequence_item": 164, "directory_record": 165, "fileinst": 166, "recordnod": 168, "generate_filenam": 169, "is_conformant_file_id": 170, "absorb_delimiter_item": 171, "find_byt": 172, "find_delimit": 173, "length_of_undefined_length": 174, "read_undefined_length_valu": 175, "correct_ambiguous_vr": 176, "correct_ambiguous_vr_el": 177, "dcmwrite": 178, "multi_str": 179, "write_atvalu": 180, "write_da": 181, "write_dt": 182, "write_obvalu": 183, "write_owvalu": 184, "write_pn": 185, "write_tm": 186, "write_ui": 187, "write_un": 188, "write_data_el": 189, "write_dataset": 190, "write_file_meta_info": 191, "write_number_str": 192, "write_numb": 193, "write_sequ": 194, "write_sequence_item": 195, "write_str": 196, "write_text": 197, "misc": [198, 199, 474], "is_dicom": 198, "size_in_byt": 199, "multivalu": 200, "numpy_handl": [201, 211, 468], "apply_color_lut": 202, "apply_modality_lut": 203, "apply_rescal": 204, "apply_voi": 205, "apply_voi_lut": 206, "apply_window": 207, "convert_color_spac": 208, "gdcm_handler": 209, "jpeg_ls_handl": 210, "pillow_handl": 212, "pylibjpeg_handl": 213, "rle_handl": 214, "validate_dataset": 217, "basetag": 218, "tupletag": 220, "tag_in_except": 221, "uid": [222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 475], "acquisitioncontextsrstorag": 222, "advancedblendingpresentationstatestorag": 223, "alltransfersyntax": 224, "ambulatoryecgwaveformstorag": 225, "arterialpulsewaveformstorag": 226, "autorefractionmeasurementsstorag": 227, "basicstructureddisplaystorag": 228, "basictextsrstorag": 229, "basicvoiceaudiowaveformstorag": 230, "blendingsoftcopypresentationstatestorag": 231, "bodypositionwaveformstorag": 232, "breastprojectionxrayimagestorageforpresent": 233, "breastprojectionxrayimagestorageforprocess": 234, "breasttomosynthesisimagestorag": 235, "carmphotonelectronradiationrecordstorag": 236, "carmphotonelectronradiationstorag": 237, "ctdefinedprocedureprotocolstorag": 238, "ctimagestorag": 239, "ctperformedprocedureprotocolstorag": 240, "cardiacelectrophysiologywaveformstorag": 241, "chestcadsrstorag": 242, "coloncadsrstorag": 243, "colorpalettestorag": 244, "colorsoftcopypresentationstatestorag": 245, "compositingplanarmprvolumetricpresentationstatestorag": 246, "comprehensive3dsrstorag": 247, "comprehensivesrstorag": 248, "computedradiographyimagestorag": 249, "contentassessmentresultsstorag": 250, "cornealtopographymapstorag": 251, "dicos2daitstorag": 252, "dicos3daitstorag": 253, "dicosctimagestorag": 254, "dicosdigitalxrayimagestorageforpresent": 255, "dicosdigitalxrayimagestorageforprocess": 256, "dicosquadrupoleresonancestorag": 257, "dicosthreatdetectionreportstorag": 258, "deflatedexplicitvrlittleendian": 259, "deformablespatialregistrationstorag": 260, "dermoscopicphotographyimagestorag": 261, "digitalintraoralxrayimagestorageforpresent": 262, "digitalintraoralxrayimagestorageforprocess": 263, "digitalmammographyxrayimagestorageforpresent": 264, "digitalmammographyxrayimagestorageforprocess": 265, "digitalxrayimagestorageforpresent": 266, "digitalxrayimagestorageforprocess": 267, "eddycurrentimagestorag": 268, "eddycurrentmultiframeimagestorag": 269, "electromyogramwaveformstorag": 270, "electrooculogramwaveformstorag": 271, "encapsulatedcdastorag": 272, "encapsulatedmtlstorag": 273, "encapsulatedobjstorag": 274, "encapsulatedpdfstorag": 275, "encapsulatedstlstorag": 276, "enhancedctimagestorag": 277, "enhancedmrcolorimagestorag": 278, "enhancedmrimagestorag": 279, "enhancedpetimagestorag": 280, "enhancedsrstorag": 281, "enhancedusvolumestorag": 282, "enhancedxaimagestorag": 283, "enhancedxrfimagestorag": 284, "enhancedxrayradiationdosesrstorag": 285, "explicitvrbigendian": 286, "explicitvrlittleendian": 287, "extensiblesrstorag": 288, "generalaudiowaveformstorag": 289, "generalecgwaveformstorag": 290, "genericimplanttemplatestorag": 291, "grayscaleplanarmprvolumetricpresentationstatestorag": 292, "grayscalesoftcopypresentationstatestorag": 293, "hevcm10p51": 294, "hevcmp51": 295, "hangingprotocolstorag": 296, "hemodynamicwaveformstorag": 297, "implantassemblytemplatestorag": 298, "implanttemplategroupstorag": 299, "implantationplansrstorag": 300, "implicitvrlittleendian": 301, "intraocularlenscalculationsstorag": 302, "intravascularopticalcoherencetomographyimagestorageforpresent": 303, "intravascularopticalcoherencetomographyimagestorageforprocess": 304, "jpeg2000": 305, "jpeg2000lossless": 306, "jpeg2000mc": 307, "jpeg2000mclossless": 308, "jpeg2000transfersyntax": 309, "jpegbaseline8bit": 310, "jpegextended12bit": 311, "jpeglslossless": 312, "jpeglsnearlossless": 313, "jpeglstransfersyntax": 314, "jpeglosslessp14": 315, "jpeglosslesssv1": 316, "jpegtransfersyntax": 317, "keratometrymeasurementsstorag": 318, "keyobjectselectiondocumentstorag": 319, "legacyconvertedenhancedctimagestorag": 320, "legacyconvertedenhancedmrimagestorag": 321, "legacyconvertedenhancedpetimagestorag": 322, "lensometrymeasurementsstorag": 323, "mpeg2mphl": 324, "mpeg2mpml": 325, "mpeg4hp41": 326, "mpeg4hp41bd": 327, "mpeg4hp422d": 328, "mpeg4hp423d": 329, "mpeg4hp42stereo": 330, "mpegtransfersyntax": 331, "mrimagestorag": 332, "mrspectroscopystorag": 333, "maculargridthicknessandvolumereportstorag": 334, "mammographycadsrstorag": 335, "mediastoragedirectorystorag": 336, "microscopybulksimpleannotationsstorag": 337, "multiframegrayscalebytesecondarycaptureimagestorag": 338, "multiframegrayscalewordsecondarycaptureimagestorag": 339, "multiframesinglebitsecondarycaptureimagestorag": 340, "multiframetruecolorsecondarycaptureimagestorag": 341, "multichannelrespiratorywaveformstorag": 342, "multiplevolumerenderingvolumetricpresentationstatestorag": 343, "nuclearmedicineimagestorag": 344, "ophthalmicaxialmeasurementsstorag": 345, "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorag": 346, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 347, "ophthalmicphotography16bitimagestorag": 348, "ophthalmicphotography8bitimagestorag": 349, "ophthalmicthicknessmapstorag": 350, "ophthalmictomographyimagestorag": 351, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 352, "pydicom_implementation_uid": 353, "pydicom_root_uid": 354, "parametricmapstorag": 355, "patientradiationdosesrstorag": 356, "performedimagingagentadministrationsrstorag": 357, "plannedimagingagentadministrationsrstorag": 358, "positronemissiontomographyimagestorag": 359, "procedurelogstorag": 360, "protocolapprovalstorag": 361, "pseudocolorsoftcopypresentationstatestorag": 362, "re_valid_uid": 363, "re_valid_uid_prefix": 364, "rlelossless": 365, "rletransfersyntax": 366, "rtbeamsdeliveryinstructionstorag": 367, "rtbeamstreatmentrecordstorag": 368, "rtbrachyapplicationsetupdeliveryinstructionstorag": 369, "rtbrachytreatmentrecordstorag": 370, "rtdosestorag": 371, "rtimagestorag": 372, "rtionbeamstreatmentrecordstorag": 373, "rtionplanstorag": 374, "rtphysicianintentstorag": 375, "rtplanstorag": 376, "rtradiationrecordsetstorag": 377, "rtradiationsalvagerecordstorag": 378, "rtradiationsetdeliveryinstructionstorag": 379, "rtradiationsetstorag": 380, "rtsegmentannotationstorag": 381, "rtstructuresetstorag": 382, "rttreatmentpreparationstorag": 383, "rttreatmentsummaryrecordstorag": 384, "radiopharmaceuticalradiationdosesrstorag": 385, "rawdatastorag": 386, "realworldvaluemappingstorag": 387, "respiratorywaveformstorag": 388, "roboticarmradiationstorag": 389, "roboticradiationrecordstorag": 390, "routinescalpelectroencephalogramwaveformstorag": 391, "secondarycaptureimagestorag": 392, "segmentationstorag": 393, "segmentedvolumerenderingvolumetricpresentationstatestorag": 394, "simplifiedadultechosrstorag": 395, "sleepelectroencephalogramwaveformstorag": 396, "spatialfiducialsstorag": 397, "spatialregistrationstorag": 398, "spectacleprescriptionreportstorag": 399, "stereometricrelationshipstorag": 400, "subjectiverefractionmeasurementsstorag": 401, "surfacescanmeshstorag": 402, "surfacescanpointcloudstorag": 403, "surfacesegmentationstorag": 404, "tomotherapeuticradiationrecordstorag": 405, "tomotherapeuticradiationstorag": 406, "tractographyresultsstorag": 407, "twelveleadecgwaveformstorag": 408, "ultrasoundimagestorag": 410, "ultrasoundmultiframeimagestorag": 411, "uncompressedtransfersyntax": 412, "vlendoscopicimagestorag": 413, "vlmicroscopicimagestorag": 414, "vlphotographicimagestorag": 415, "vlslidecoordinatesmicroscopicimagestorag": 416, "vlwholeslidemicroscopyimagestorag": 417, "videoendoscopicimagestorag": 418, "videomicroscopicimagestorag": 419, "videophotographicimagestorag": 420, "visualacuitymeasurementsstorag": 421, "volumerenderingvolumetricpresentationstatestorag": 422, "widefieldophthalmicphotography3dcoordinatesimagestorag": 423, "widefieldophthalmicphotographystereographicprojectionimagestorag": 424, "xadefinedprocedureprotocolstorag": 425, "xaperformedprocedureprotocolstorag": 426, "xaxrfgrayscalesoftcopypresentationstatestorag": 427, "xray3dangiographicimagestorag": 428, "xray3dcraniofacialimagestorag": 429, "xrayangiographicimagestorag": 430, "xrayradiationdosesrstorag": 431, "xrayradiofluoroscopicimagestorag": 432, "generate_uid": 433, "da": 434, "d": 435, "dsdecim": 436, "dsfloat": 437, "dt": 438, "isfloat": 440, "multistr": 441, "personnam": 442, "personnameunicod": 443, "tm": 444, "format_number_as_d": 446, "is_valid_d": 447, "convert_ae_str": 448, "convert_atvalu": 449, "convert_da_str": 450, "convert_ds_str": 451, "convert_dt_str": 452, "convert_is_str": 453, "convert_obvalu": 454, "convert_owvalu": 455, "convert_pn": 456, "convert_sq": 457, "convert_tm_str": 458, "convert_ui": 459, "convert_un": 460, "convert_ur_str": 461, "convert_numb": 462, "convert_single_str": 463, "convert_str": 464, "convert_tag": 465, "convert_text": 466, "convert_valu": 467, "handler": [469, 470, 471, 472], "miscellan": 474, "definit": 475, "storag": 475, "sop": [475, 503], "releas": [476, 480, 505], "note": 476, "3": [476, 478, 488, 495, 497], "enhanc": [476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 497], "fix": [476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497], "intern": [476, 496, 497], "4": [476, 479, 489, 490, 496], "changelog": [476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "infrastructur": [476, 485], "9": [476, 477, 478, 479, 480, 481, 482, 483, 484], "contrib": [476, 480, 483, 484], "contributor": [476, 484], "8": [476, 483], "bug": [476, 477, 478, 479, 481, 482, 483], "7": [476, 482], "6": [476, 481], "5": [476, 480], "thi": [476, 479, 480], "new": [476, 480, 499, 500, 503, 508], "addit": [476, 479], "contribut": [498, 499, 500], "sourc": 499, "download": [499, 500, 505], "current": 499, "pytest": 499, "run": 499, "test": [499, 505], "suit": 499, "branch": [499, 500], "make": [499, 500], "preview": [499, 500], "commit": [499, 500], "pull": [499, 500], "request": [499, 500], "happen": [499, 500], "build": 500, "basic": 501, "access": 501, "modifi": [501, 503], "our": 501, "file_meta": 501, "ani": 501, "categori": 501, "delet": [501, 508], "json": 502, "convert": 502, "larg": 502, "binari": 502, "dicomdir": 503, "The": 503, "exist": 503, "stage": 503, "instanc": 503, "appli": 503, "conclus": 503, "tutori": 504, "offici": 505, "pip": [505, 508], "conda": [505, 508], "pillow": 505, "pyjpegl": 505, "develop": 505, "structur": 507, "report": 507, "manag": 508, "virtual": 508, "environ": 508, "activ": 508, "deactiv": 508, "final": 508}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Show a dicom file using hierarchical tree": [[0, "show-a-dicom-file-using-hierarchical-tree"]], "Image processing": [[1, "image-processing"], [6, "image-processing"]], "Downsize MRI image using pydicom": [[2, "downsize-mri-image-using-pydicom"]], "Decode and plot Waveform Data": [[3, "decode-and-plot-waveform-data"]], "Load CT slices and plot axial, sagittal and coronal images": [[4, "load-ct-slices-and-plot-axial-sagittal-and-coronal-images"]], "Computation times": [[5, "computation-times"], [13, "computation-times"], [19, "computation-times"], [21, "computation-times"]], "General examples": [[6, "general-examples"]], "Input-output": [[6, "input-output"], [7, "input-output"]], "Metadata processing": [[6, "metadata-processing"], [15, "metadata-processing"]], "Format the output of the data set printing": [[8, "format-the-output-of-the-data-set-printing"]], "Read a Dataset and plot Pixel Data": [[9, "read-a-dataset-and-plot-pixel-data"]], "Read a DICOM File-set": [[10, "read-a-dicom-file-set"]], "Read RTPLAN DICOM and list information": [[11, "read-rtplan-dicom-and-list-information"]], "Write DICOM data": [[12, "write-dicom-data"]], "Show working with memory-based dataset": [[14, "show-working-with-memory-based-dataset"]], "Add dictionary items in the standard DICOM dictionary": [[16, "add-dictionary-items-in-the-standard-dicom-dictionary"]], "Anonymize DICOM data": [[17, "anonymize-dicom-data"]], "Anonymize a single file": [[17, "anonymize-a-single-file"]], "Working with sequences": [[18, "working-with-sequences"]], "Analyse differences between DICOM files": [[20, "analyse-differences-between-dicom-files"]], "Display unicode person names": [[22, "display-unicode-person-names"]], "Frequently asked questions": [[23, "frequently-asked-questions"]], "General": [[23, "general"]], "How do I cite pydicom?": [[23, "how-do-i-cite-pydicom"]], "Installation": [[23, "installation"]], "What are pydicom\u2019s prerequisites?": [[23, "what-are-pydicom-s-prerequisites"]], "Required": [[23, "required"]], "Optional": [[23, "optional"]], "What version of Python can I use?": [[23, "what-version-of-python-can-i-use"]], "pydicom codify command": [[24, "pydicom-codify-command"], [26, "pydicom-codify-command"]], "A simple example": [[24, "a-simple-example"], [26, "a-simple-example"]], "Command options": [[24, "command-options"], [26, "command-options"]], "Codifying a part of a DICOM file": [[24, "codifying-a-part-of-a-dicom-file"], [26, "codifying-a-part-of-a-dicom-file"]], "Extending the CLI": [[25, "extending-the-cli"], [26, "extending-the-cli"]], "Command-line Interface Guide": [[26, "command-line-interface-guide"]], "Introduction": [[26, "introduction"], [27, "introduction"], [39, "introduction"], [40, "introduction"], [43, "introduction"], [47, "introduction"], [48, "introduction"], [49, "introduction"], [50, "introduction"], [51, "introduction"], [52, "introduction"], [506, "introduction"]], "Installing the pydicom CLI": [[26, "installing-the-pydicom-cli"], [27, "installing-the-pydicom-cli"]], "Combining with other CLIs": [[26, "combining-with-other-clis"], [27, "combining-with-other-clis"]], "pydicom show command": [[26, "pydicom-show-command"], [28, "pydicom-show-command"]], "Element VRs and Python types": [[29, "element-vrs-and-python-types"]], "Encoder Plugins Options": [[30, "encoder-plugins-options"]], "pydicom": [[30, "pydicom"]], "gdcm": [[30, "gdcm"]], "pylibjpeg": [[30, "pylibjpeg"]], "Pixel Data Encoder Plugins": [[31, "pixel-data-encoder-plugins"]], "Plugin Requirements": [[31, "plugin-requirements"]], "Adding Plugins to an Encoder": [[31, "adding-plugins-to-an-encoder"]], "Pixel Data Encoding": [[32, "pixel-data-encoding"]], "RLE Lossless Encoding": [[33, "rle-lossless-encoding"]], "Valid Image Pixel Parameters": [[33, "valid-image-pixel-parameters"]], "Available Plugins": [[33, "available-plugins"]], "Examples": [[33, "examples"], [37, "examples"]], "Glossary": [[34, "glossary"]], "Image Pixel Module": [[34, "image-pixel-module"]], "Guides": [[35, "guides"]], "Writing documentation": [[36, "writing-documentation"]], "Types of documentation": [[36, "types-of-documentation"]], "General style guidelines": [[36, "general-style-guidelines"]], "Guidelines for reStructuredText": [[36, "guidelines-for-restructuredtext"]], "pydicom documentation": [[37, "pydicom-documentation"]], "Getting Started": [[37, "getting-started"]], "User Guide": [[37, "user-guide"]], "API Reference": [[37, "api-reference"], [473, "api-reference"]], "Core elements in pydicom": [[38, "core-elements-in-pydicom"]], "Dataset": [[38, "dataset"]], "DataElement": [[38, "dataelement"]], "Tag": [[38, "tag"]], "Sequence": [[38, "sequence"]], "Best Practices": [[39, "best-practices"]], "Enforcing Valid DICOM": [[39, "enforcing-valid-dicom"]], "Future-proofing your code": [[39, "future-proofing-your-code"]], "Limiting the pydicom major version in your package": [[39, "limiting-the-pydicom-major-version-in-your-package"]], "Introduction to pydicom": [[40, "introduction-to-pydicom"]], "License": [[40, "license"]], "Installing": [[40, "installing"]], "Using pydicom": [[40, "using-pydicom"]], "Support": [[40, "support"]], "Next Steps": [[40, "next-steps"]], "Compressing Pixel Data": [[41, "compressing-pixel-data"], [506, "compressing-pixel-data"]], "Compressing using third-party packages": [[41, "compressing-using-third-party-packages"]], "Compressing using pydicom": [[41, "compressing-using-pydicom"], [506, "compressing-using-pydicom"]], "Supported Transfer Syntaxes": [[41, "supported-transfer-syntaxes"], [42, "supported-transfer-syntaxes"]], "Compressing with Dataset.compress()": [[41, "compressing-with-dataset-compress"]], "Handling of compressed pixel data": [[42, "handling-of-compressed-pixel-data"]], "Preconditions": [[42, "preconditions"]], "Usage": [[42, "usage"]], "Private Data Elements": [[43, "private-data-elements"]], "Displaying Private Data Elements in pydicom": [[43, "displaying-private-data-elements-in-pydicom"]], "Setting Private Data Elements with pydicom": [[43, "setting-private-data-elements-with-pydicom"]], "Removing All Private Data Elements": [[43, "removing-all-private-data-elements"]], "pydicom User Guide": [[44, "pydicom-user-guide"]], "Python 2 Support": [[45, "python-2-support"]], "Reading and writing DICOM files": [[46, "reading-and-writing-dicom-files"]], "File Reading/Parsing": [[46, "file-reading-parsing"]], "File Writing": [[46, "file-writing"]], "Transition to pydicom 1.x": [[47, "transition-to-pydicom-1-x"]], "For authors of packages requiring pydicom < 1.0": [[47, "for-authors-of-packages-requiring-pydicom-1-0"]], "Error messages relating to the pydicom transition": [[47, "error-messages-relating-to-the-pydicom-transition"]], "API Changes in version 1.0": [[47, "api-changes-in-version-1-0"]], "Changed module names": [[47, "changed-module-names"]], "Changed function and variable names": [[47, "changed-function-and-variable-names"]], "Removed functions and names": [[47, "removed-functions-and-names"]], "Changed behavior": [[47, "changed-behavior"]], "Viewing Images": [[48, "viewing-images"]], "Using pydicom with matplotlib": [[48, "using-pydicom-with-matplotlib"]], "Using pydicom with Tkinter": [[48, "using-pydicom-with-tkinter"]], "Using pydicom with Python Imaging Library (PIL)": [[48, "using-pydicom-with-python-imaging-library-pil"]], "Using pydicom with wxPython": [[48, "using-pydicom-with-wxpython"]], "Working with Overlay Data": [[49, "working-with-overlay-data"]], "Dataset.overlay_array()": [[49, "dataset-overlay-array"]], "Working with Pixel Data": [[50, "working-with-pixel-data"]], "Dataset.pixel_array": [[50, "dataset-pixel-array"]], "Color space": [[50, "color-space"]], "Palette Color": [[50, "palette-color"]], "Modality LUT or Rescale Operation": [[50, "modality-lut-or-rescale-operation"]], "VOI LUT or Windowing Operation": [[50, "voi-lut-or-windowing-operation"]], "Working with Waveform Data": [[51, "working-with-waveform-data"]], "Dataset.waveform_array()": [[51, "dataset-waveform-array"]], "Writing DICOM Files": [[52, "writing-dicom-files"]], "Using Codify": [[52, "using-codify"]], "Writing a file from Scratch": [[52, "writing-a-file-from-scratch"]], "Character Encoding and Decoding (pydicom.charset)": [[53, "character-encoding-and-decoding-pydicom-charset"]], "Configuration Options (pydicom.config)": [[54, "configuration-options-pydicom-config"]], "Getting Included Datasets (pydicom.data)": [[55, "getting-included-datasets-pydicom-data"]], "Data Dictionary Utilities (pydicom.datadict)": [[56, "data-dictionary-utilities-pydicom-datadict"]], "DICOM Data Dictionary": [[56, "dicom-data-dictionary"]], "Private Data Dictionary": [[56, "private-data-dictionary"]], "Representation of Datasets (pydicom.dataset)": [[57, "representation-of-datasets-pydicom-dataset"]], "Representation of Data Elements": [[58, "representation-of-data-elements"]], "Data Elements (pydicom.dataelem)": [[59, "data-elements-pydicom-dataelem"]], "Element Multi-value Representation (pydicom.multival)": [[60, "element-multi-value-representation-pydicom-multival"]], "Sequence Element Value Representation (pydicom.sequence)": [[61, "sequence-element-value-representation-pydicom-sequence"]], "Element Tags (pydicom.tag)": [[62, "element-tags-pydicom-tag"]], "Specialized Element Value Representation (pydicom.valuerep)": [[63, "specialized-element-value-representation-pydicom-valuerep"]], "Element Value Decoding (pydicom.values)": [[64, "element-value-decoding-pydicom-values"]], "Bulk Data Encapsulation Utilities (pydicom.encaps)": [[65, "bulk-data-encapsulation-utilities-pydicom-encaps"]], "Parsing Encapsulated Data": [[65, "parsing-encapsulated-data"]], "Creating Encapsulated Data": [[65, "creating-encapsulated-data"]], "Pixel Data Encoders (pydicom.encoders)": [[66, "pixel-data-encoders-pydicom-encoders"]], "Exceptions (pydicom.errors)": [[67, "exceptions-pydicom-errors"]], "Dataset IO": [[68, "dataset-io"]], "IO Base Classes (pydicom.filebase)": [[69, "io-base-classes-pydicom-filebase"]], "Dataset Reading (pydicom.filereader)": [[70, "dataset-reading-pydicom-filereader"]], "IO Utilities (pydicom.fileutil)": [[71, "io-utilities-pydicom-fileutil"]], "Dataset Writing (pydicom.filewriter)": [[72, "dataset-writing-pydicom-filewriter"]], "DICOM File-sets (pydicom.fileset)": [[73, "dicom-file-sets-pydicom-fileset"]], "pydicom.charset.convert_encodings": [[74, "pydicom-charset-convert-encodings"]], "pydicom.charset.decode_bytes": [[75, "pydicom-charset-decode-bytes"]], "pydicom.charset.decode_element": [[76, "pydicom-charset-decode-element"]], "pydicom.charset.encode_string": [[77, "pydicom-charset-encode-string"]], "pydicom.config.APPLY_J2K_CORRECTIONS": [[78, "pydicom-config-apply-j2k-corrections"]], "pydicom.config.DS_decimal": [[79, "pydicom-config-ds-decimal"]], "pydicom.config.DS_numpy": [[80, "pydicom-config-ds-numpy"]], "pydicom.config.IGNORE": [[81, "pydicom-config-ignore"]], "pydicom.config.INVALID_KEYWORD_BEHAVIOR": [[82, "pydicom-config-invalid-keyword-behavior"]], "pydicom.config.INVALID_KEY_BEHAVIOR": [[83, "pydicom-config-invalid-key-behavior"]], "pydicom.config.RAISE": [[84, "pydicom-config-raise"]], "pydicom.config.WARN": [[85, "pydicom-config-warn"]], "pydicom.config.allow_DS_float": [[86, "pydicom-config-allow-ds-float"]], "pydicom.config.assume_implicit_vr_switch": [[87, "pydicom-config-assume-implicit-vr-switch"]], "pydicom.config.convert_wrong_length_to_UN": [[88, "pydicom-config-convert-wrong-length-to-un"]], "pydicom.config.data_element_callback": [[89, "pydicom-config-data-element-callback"]], "pydicom.config.data_element_callback_kwargs": [[90, "pydicom-config-data-element-callback-kwargs"]], "pydicom.config.datetime_conversion": [[91, "pydicom-config-datetime-conversion"]], "pydicom.config.debug": [[92, "pydicom-config-debug"]], "pydicom.config.enforce_valid_values": [[93, "pydicom-config-enforce-valid-values"]], "pydicom.config.future_behavior": [[94, "pydicom-config-future-behavior"]], "pydicom.config.overlay_data_handlers": [[95, "pydicom-config-overlay-data-handlers"]], "pydicom.config.pixel_data_handlers": [[96, "pydicom-config-pixel-data-handlers"]], "pydicom.config.reset_data_element_callback": [[97, "pydicom-config-reset-data-element-callback"]], "pydicom.config.settings": [[98, "pydicom-config-settings"]], "pydicom.config.show_file_meta": [[99, "pydicom-config-show-file-meta"]], "pydicom.config.use_DS_decimal": [[100, "pydicom-config-use-ds-decimal"]], "pydicom.config.use_DS_numpy": [[101, "pydicom-config-use-ds-numpy"]], "pydicom.config.use_IS_numpy": [[102, "pydicom-config-use-is-numpy"]], "pydicom.data.get_charset_files": [[103, "pydicom-data-get-charset-files"]], "pydicom.data.get_palette_files": [[104, "pydicom-data-get-palette-files"]], "pydicom.data.get_testdata_file": [[105, "pydicom-data-get-testdata-file"]], "pydicom.data.get_testdata_files": [[106, "pydicom-data-get-testdata-files"]], "pydicom.datadict.add_dict_entries": [[107, "pydicom-datadict-add-dict-entries"]], "pydicom.datadict.add_dict_entry": [[108, "pydicom-datadict-add-dict-entry"]], "pydicom.datadict.add_private_dict_entries": [[109, "pydicom-datadict-add-private-dict-entries"]], "pydicom.datadict.add_private_dict_entry": [[110, "pydicom-datadict-add-private-dict-entry"]], "pydicom.datadict.dictionary_VM": [[111, "pydicom-datadict-dictionary-vm"]], "pydicom.datadict.dictionary_VR": [[112, "pydicom-datadict-dictionary-vr"]], "pydicom.datadict.dictionary_description": [[113, "pydicom-datadict-dictionary-description"]], "pydicom.datadict.dictionary_has_tag": [[114, "pydicom-datadict-dictionary-has-tag"]], "pydicom.datadict.dictionary_is_retired": [[115, "pydicom-datadict-dictionary-is-retired"]], "pydicom.datadict.dictionary_keyword": [[116, "pydicom-datadict-dictionary-keyword"]], "pydicom.datadict.get_entry": [[117, "pydicom-datadict-get-entry"]], "pydicom.datadict.get_private_entry": [[118, "pydicom-datadict-get-private-entry"]], "pydicom.datadict.keyword_for_tag": [[119, "pydicom-datadict-keyword-for-tag"]], "pydicom.datadict.mask_match": [[120, "pydicom-datadict-mask-match"]], "pydicom.datadict.private_dictionary_VM": [[121, "pydicom-datadict-private-dictionary-vm"]], "pydicom.datadict.private_dictionary_VR": [[122, "pydicom-datadict-private-dictionary-vr"]], "pydicom.datadict.private_dictionary_description": [[123, "pydicom-datadict-private-dictionary-description"]], "pydicom.datadict.repeater_has_keyword": [[124, "pydicom-datadict-repeater-has-keyword"]], "pydicom.datadict.repeater_has_tag": [[125, "pydicom-datadict-repeater-has-tag"]], "pydicom.datadict.tag_for_keyword": [[126, "pydicom-datadict-tag-for-keyword"]], "pydicom.dataelem.DataElement": [[127, "pydicom-dataelem-dataelement"]], "pydicom.dataelem.DataElement_from_raw": [[128, "pydicom-dataelem-dataelement-from-raw"]], "pydicom.dataelem.RawDataElement": [[129, "pydicom-dataelem-rawdataelement"]], "pydicom.dataset.Dataset": [[130, "pydicom-dataset-dataset"]], "pydicom.dataset.FileDataset": [[131, "pydicom-dataset-filedataset"]], "pydicom.dataset.FileMetaDataset": [[132, "pydicom-dataset-filemetadataset"]], "pydicom.dataset.PrivateBlock": [[133, "pydicom-dataset-privateblock"]], "pydicom.dataset.validate_file_meta": [[134, "pydicom-dataset-validate-file-meta"]], "pydicom.encaps.decode_data_sequence": [[135, "pydicom-encaps-decode-data-sequence"]], "pydicom.encaps.defragment_data": [[136, "pydicom-encaps-defragment-data"]], "pydicom.encaps.encapsulate": [[137, "pydicom-encaps-encapsulate"]], "pydicom.encaps.encapsulate_extended": [[138, "pydicom-encaps-encapsulate-extended"]], "pydicom.encaps.fragment_frame": [[139, "pydicom-encaps-fragment-frame"]], "pydicom.encaps.generate_pixel_data": [[140, "pydicom-encaps-generate-pixel-data"]], "pydicom.encaps.generate_pixel_data_fragment": [[141, "pydicom-encaps-generate-pixel-data-fragment"]], "pydicom.encaps.generate_pixel_data_frame": [[142, "pydicom-encaps-generate-pixel-data-frame"]], "pydicom.encaps.get_frame_offsets": [[143, "pydicom-encaps-get-frame-offsets"]], "pydicom.encaps.itemize_fragment": [[144, "pydicom-encaps-itemize-fragment"]], "pydicom.encaps.itemize_frame": [[145, "pydicom-encaps-itemize-frame"]], "pydicom.encaps.read_item": [[146, "pydicom-encaps-read-item"]], "pydicom.encoders.RLELosslessEncoder": [[147, "pydicom-encoders-rlelosslessencoder"]], "pydicom.encoders.base.Encoder": [[148, "pydicom-encoders-base-encoder"]], "pydicom.encoders.get_encoder": [[149, "pydicom-encoders-get-encoder"]], "pydicom.errors.InvalidDicomError": [[150, "pydicom-errors-invaliddicomerror"]], "pydicom.filebase.DicomBytesIO": [[151, "pydicom-filebase-dicombytesio"]], "pydicom.filebase.DicomFile": [[152, "pydicom-filebase-dicomfile"]], "pydicom.filebase.DicomFileLike": [[153, "pydicom-filebase-dicomfilelike"]], "pydicom.filebase.DicomIO": [[154, "pydicom-filebase-dicomio"]], "pydicom.filereader.data_element_generator": [[155, "pydicom-filereader-data-element-generator"]], "pydicom.filereader.data_element_offset_to_value": [[156, "pydicom-filereader-data-element-offset-to-value"]], "pydicom.filereader.dcmread": [[157, "pydicom-filereader-dcmread"]], "pydicom.filereader.read_dataset": [[158, "pydicom-filereader-read-dataset"]], "pydicom.filereader.read_deferred_data_element": [[159, "pydicom-filereader-read-deferred-data-element"]], "pydicom.filereader.read_file_meta_info": [[160, "pydicom-filereader-read-file-meta-info"]], "pydicom.filereader.read_partial": [[161, "pydicom-filereader-read-partial"]], "pydicom.filereader.read_preamble": [[162, "pydicom-filereader-read-preamble"]], "pydicom.filereader.read_sequence": [[163, "pydicom-filereader-read-sequence"]], "pydicom.filereader.read_sequence_item": [[164, "pydicom-filereader-read-sequence-item"]], "pydicom.fileset.DIRECTORY_RECORDERS": [[165, "pydicom-fileset-directory-recorders"]], "pydicom.fileset.FileInstance": [[166, "pydicom-fileset-fileinstance"]], "pydicom.fileset.FileSet": [[167, "pydicom-fileset-fileset"]], "pydicom.fileset.RecordNode": [[168, "pydicom-fileset-recordnode"]], "pydicom.fileset.generate_filename": [[169, "pydicom-fileset-generate-filename"]], "pydicom.fileset.is_conformant_file_id": [[170, "pydicom-fileset-is-conformant-file-id"]], "pydicom.fileutil.absorb_delimiter_item": [[171, "pydicom-fileutil-absorb-delimiter-item"]], "pydicom.fileutil.find_bytes": [[172, "pydicom-fileutil-find-bytes"]], "pydicom.fileutil.find_delimiter": [[173, "pydicom-fileutil-find-delimiter"]], "pydicom.fileutil.length_of_undefined_length": [[174, "pydicom-fileutil-length-of-undefined-length"]], "pydicom.fileutil.read_undefined_length_value": [[175, "pydicom-fileutil-read-undefined-length-value"]], "pydicom.filewriter.correct_ambiguous_vr": [[176, "pydicom-filewriter-correct-ambiguous-vr"]], "pydicom.filewriter.correct_ambiguous_vr_element": [[177, "pydicom-filewriter-correct-ambiguous-vr-element"]], "pydicom.filewriter.dcmwrite": [[178, "pydicom-filewriter-dcmwrite"]], "pydicom.filewriter.multi_string": [[179, "pydicom-filewriter-multi-string"]], "pydicom.filewriter.write_ATvalue": [[180, "pydicom-filewriter-write-atvalue"]], "pydicom.filewriter.write_DA": [[181, "pydicom-filewriter-write-da"]], "pydicom.filewriter.write_DT": [[182, "pydicom-filewriter-write-dt"]], "pydicom.filewriter.write_OBvalue": [[183, "pydicom-filewriter-write-obvalue"]], "pydicom.filewriter.write_OWvalue": [[184, "pydicom-filewriter-write-owvalue"]], "pydicom.filewriter.write_PN": [[185, "pydicom-filewriter-write-pn"]], "pydicom.filewriter.write_TM": [[186, "pydicom-filewriter-write-tm"]], "pydicom.filewriter.write_UI": [[187, "pydicom-filewriter-write-ui"]], "pydicom.filewriter.write_UN": [[188, "pydicom-filewriter-write-un"]], "pydicom.filewriter.write_data_element": [[189, "pydicom-filewriter-write-data-element"]], "pydicom.filewriter.write_dataset": [[190, "pydicom-filewriter-write-dataset"]], "pydicom.filewriter.write_file_meta_info": [[191, "pydicom-filewriter-write-file-meta-info"]], "pydicom.filewriter.write_number_string": [[192, "pydicom-filewriter-write-number-string"]], "pydicom.filewriter.write_numbers": [[193, "pydicom-filewriter-write-numbers"]], "pydicom.filewriter.write_sequence": [[194, "pydicom-filewriter-write-sequence"]], "pydicom.filewriter.write_sequence_item": [[195, "pydicom-filewriter-write-sequence-item"]], "pydicom.filewriter.write_string": [[196, "pydicom-filewriter-write-string"]], "pydicom.filewriter.write_text": [[197, "pydicom-filewriter-write-text"]], "pydicom.misc.is_dicom": [[198, "pydicom-misc-is-dicom"]], "pydicom.misc.size_in_bytes": [[199, "pydicom-misc-size-in-bytes"]], "pydicom.multival.MultiValue": [[200, "pydicom-multival-multivalue"]], "pydicom.overlays.numpy_handler": [[201, "module-pydicom.overlays.numpy_handler"]], "pydicom.pixel_data_handlers.apply_color_lut": [[202, "pydicom-pixel-data-handlers-apply-color-lut"]], "pydicom.pixel_data_handlers.apply_modality_lut": [[203, "pydicom-pixel-data-handlers-apply-modality-lut"]], "pydicom.pixel_data_handlers.apply_rescale": [[204, "pydicom-pixel-data-handlers-apply-rescale"]], "pydicom.pixel_data_handlers.apply_voi": [[205, "pydicom-pixel-data-handlers-apply-voi"]], "pydicom.pixel_data_handlers.apply_voi_lut": [[206, "pydicom-pixel-data-handlers-apply-voi-lut"]], "pydicom.pixel_data_handlers.apply_windowing": [[207, "pydicom-pixel-data-handlers-apply-windowing"]], "pydicom.pixel_data_handlers.convert_color_space": [[208, "pydicom-pixel-data-handlers-convert-color-space"]], "pydicom.pixel_data_handlers.gdcm_handler": [[209, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[210, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "pydicom.pixel_data_handlers.numpy_handler": [[211, "module-pydicom.pixel_data_handlers.numpy_handler"]], "pydicom.pixel_data_handlers.pillow_handler": [[212, "module-pydicom.pixel_data_handlers.pillow_handler"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[213, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "pydicom.pixel_data_handlers.rle_handler": [[214, "module-pydicom.pixel_data_handlers.rle_handler"]], "pydicom.pixel_data_handlers.util": [[215, "module-pydicom.pixel_data_handlers.util"]], "pydicom.sequence.Sequence": [[216, "pydicom-sequence-sequence"]], "pydicom.sequence.validate_dataset": [[217, "pydicom-sequence-validate-dataset"]], "pydicom.tag.BaseTag": [[218, "pydicom-tag-basetag"]], "pydicom.tag.Tag": [[219, "pydicom-tag-tag"]], "pydicom.tag.TupleTag": [[220, "pydicom-tag-tupletag"]], "pydicom.tag.tag_in_exception": [[221, "pydicom-tag-tag-in-exception"]], "pydicom.uid.AcquisitionContextSRStorage": [[222, "pydicom-uid-acquisitioncontextsrstorage"]], "pydicom.uid.AdvancedBlendingPresentationStateStorage": [[223, "pydicom-uid-advancedblendingpresentationstatestorage"]], "pydicom.uid.AllTransferSyntaxes": [[224, "pydicom-uid-alltransfersyntaxes"]], "pydicom.uid.AmbulatoryECGWaveformStorage": [[225, "pydicom-uid-ambulatoryecgwaveformstorage"]], "pydicom.uid.ArterialPulseWaveformStorage": [[226, "pydicom-uid-arterialpulsewaveformstorage"]], "pydicom.uid.AutorefractionMeasurementsStorage": [[227, "pydicom-uid-autorefractionmeasurementsstorage"]], "pydicom.uid.BasicStructuredDisplayStorage": [[228, "pydicom-uid-basicstructureddisplaystorage"]], "pydicom.uid.BasicTextSRStorage": [[229, "pydicom-uid-basictextsrstorage"]], "pydicom.uid.BasicVoiceAudioWaveformStorage": [[230, "pydicom-uid-basicvoiceaudiowaveformstorage"]], "pydicom.uid.BlendingSoftcopyPresentationStateStorage": [[231, "pydicom-uid-blendingsoftcopypresentationstatestorage"]], "pydicom.uid.BodyPositionWaveformStorage": [[232, "pydicom-uid-bodypositionwaveformstorage"]], "pydicom.uid.BreastProjectionXRayImageStorageForPresentation": [[233, "pydicom-uid-breastprojectionxrayimagestorageforpresentation"]], "pydicom.uid.BreastProjectionXRayImageStorageForProcessing": [[234, "pydicom-uid-breastprojectionxrayimagestorageforprocessing"]], "pydicom.uid.BreastTomosynthesisImageStorage": [[235, "pydicom-uid-breasttomosynthesisimagestorage"]], "pydicom.uid.CArmPhotonElectronRadiationRecordStorage": [[236, "pydicom-uid-carmphotonelectronradiationrecordstorage"]], "pydicom.uid.CArmPhotonElectronRadiationStorage": [[237, "pydicom-uid-carmphotonelectronradiationstorage"]], "pydicom.uid.CTDefinedProcedureProtocolStorage": [[238, "pydicom-uid-ctdefinedprocedureprotocolstorage"]], "pydicom.uid.CTImageStorage": [[239, "pydicom-uid-ctimagestorage"]], "pydicom.uid.CTPerformedProcedureProtocolStorage": [[240, "pydicom-uid-ctperformedprocedureprotocolstorage"]], "pydicom.uid.CardiacElectrophysiologyWaveformStorage": [[241, "pydicom-uid-cardiacelectrophysiologywaveformstorage"]], "pydicom.uid.ChestCADSRStorage": [[242, "pydicom-uid-chestcadsrstorage"]], "pydicom.uid.ColonCADSRStorage": [[243, "pydicom-uid-coloncadsrstorage"]], "pydicom.uid.ColorPaletteStorage": [[244, "pydicom-uid-colorpalettestorage"]], "pydicom.uid.ColorSoftcopyPresentationStateStorage": [[245, "pydicom-uid-colorsoftcopypresentationstatestorage"]], "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage": [[246, "pydicom-uid-compositingplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.Comprehensive3DSRStorage": [[247, "pydicom-uid-comprehensive3dsrstorage"]], "pydicom.uid.ComprehensiveSRStorage": [[248, "pydicom-uid-comprehensivesrstorage"]], "pydicom.uid.ComputedRadiographyImageStorage": [[249, "pydicom-uid-computedradiographyimagestorage"]], "pydicom.uid.ContentAssessmentResultsStorage": [[250, "pydicom-uid-contentassessmentresultsstorage"]], "pydicom.uid.CornealTopographyMapStorage": [[251, "pydicom-uid-cornealtopographymapstorage"]], "pydicom.uid.DICOS2DAITStorage": [[252, "pydicom-uid-dicos2daitstorage"]], "pydicom.uid.DICOS3DAITStorage": [[253, "pydicom-uid-dicos3daitstorage"]], "pydicom.uid.DICOSCTImageStorage": [[254, "pydicom-uid-dicosctimagestorage"]], "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation": [[255, "pydicom-uid-dicosdigitalxrayimagestorageforpresentation"]], "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing": [[256, "pydicom-uid-dicosdigitalxrayimagestorageforprocessing"]], "pydicom.uid.DICOSQuadrupoleResonanceStorage": [[257, "pydicom-uid-dicosquadrupoleresonancestorage"]], "pydicom.uid.DICOSThreatDetectionReportStorage": [[258, "pydicom-uid-dicosthreatdetectionreportstorage"]], "pydicom.uid.DeflatedExplicitVRLittleEndian": [[259, "pydicom-uid-deflatedexplicitvrlittleendian"]], "pydicom.uid.DeformableSpatialRegistrationStorage": [[260, "pydicom-uid-deformablespatialregistrationstorage"]], "pydicom.uid.DermoscopicPhotographyImageStorage": [[261, "pydicom-uid-dermoscopicphotographyimagestorage"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation": [[262, "pydicom-uid-digitalintraoralxrayimagestorageforpresentation"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing": [[263, "pydicom-uid-digitalintraoralxrayimagestorageforprocessing"]], "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation": [[264, "pydicom-uid-digitalmammographyxrayimagestorageforpresentation"]], "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing": [[265, "pydicom-uid-digitalmammographyxrayimagestorageforprocessing"]], "pydicom.uid.DigitalXRayImageStorageForPresentation": [[266, "pydicom-uid-digitalxrayimagestorageforpresentation"]], "pydicom.uid.DigitalXRayImageStorageForProcessing": [[267, "pydicom-uid-digitalxrayimagestorageforprocessing"]], "pydicom.uid.EddyCurrentImageStorage": [[268, "pydicom-uid-eddycurrentimagestorage"]], "pydicom.uid.EddyCurrentMultiFrameImageStorage": [[269, "pydicom-uid-eddycurrentmultiframeimagestorage"]], "pydicom.uid.ElectromyogramWaveformStorage": [[270, "pydicom-uid-electromyogramwaveformstorage"]], "pydicom.uid.ElectrooculogramWaveformStorage": [[271, "pydicom-uid-electrooculogramwaveformstorage"]], "pydicom.uid.EncapsulatedCDAStorage": [[272, "pydicom-uid-encapsulatedcdastorage"]], "pydicom.uid.EncapsulatedMTLStorage": [[273, "pydicom-uid-encapsulatedmtlstorage"]], "pydicom.uid.EncapsulatedOBJStorage": [[274, "pydicom-uid-encapsulatedobjstorage"]], "pydicom.uid.EncapsulatedPDFStorage": [[275, "pydicom-uid-encapsulatedpdfstorage"]], "pydicom.uid.EncapsulatedSTLStorage": [[276, "pydicom-uid-encapsulatedstlstorage"]], "pydicom.uid.EnhancedCTImageStorage": [[277, "pydicom-uid-enhancedctimagestorage"]], "pydicom.uid.EnhancedMRColorImageStorage": [[278, "pydicom-uid-enhancedmrcolorimagestorage"]], "pydicom.uid.EnhancedMRImageStorage": [[279, "pydicom-uid-enhancedmrimagestorage"]], "pydicom.uid.EnhancedPETImageStorage": [[280, "pydicom-uid-enhancedpetimagestorage"]], "pydicom.uid.EnhancedSRStorage": [[281, "pydicom-uid-enhancedsrstorage"]], "pydicom.uid.EnhancedUSVolumeStorage": [[282, "pydicom-uid-enhancedusvolumestorage"]], "pydicom.uid.EnhancedXAImageStorage": [[283, "pydicom-uid-enhancedxaimagestorage"]], "pydicom.uid.EnhancedXRFImageStorage": [[284, "pydicom-uid-enhancedxrfimagestorage"]], "pydicom.uid.EnhancedXRayRadiationDoseSRStorage": [[285, "pydicom-uid-enhancedxrayradiationdosesrstorage"]], "pydicom.uid.ExplicitVRBigEndian": [[286, "pydicom-uid-explicitvrbigendian"]], "pydicom.uid.ExplicitVRLittleEndian": [[287, "pydicom-uid-explicitvrlittleendian"]], "pydicom.uid.ExtensibleSRStorage": [[288, "pydicom-uid-extensiblesrstorage"]], "pydicom.uid.GeneralAudioWaveformStorage": [[289, "pydicom-uid-generalaudiowaveformstorage"]], "pydicom.uid.GeneralECGWaveformStorage": [[290, "pydicom-uid-generalecgwaveformstorage"]], "pydicom.uid.GenericImplantTemplateStorage": [[291, "pydicom-uid-genericimplanttemplatestorage"]], "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage": [[292, "pydicom-uid-grayscaleplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage": [[293, "pydicom-uid-grayscalesoftcopypresentationstatestorage"]], "pydicom.uid.HEVCM10P51": [[294, "pydicom-uid-hevcm10p51"]], "pydicom.uid.HEVCMP51": [[295, "pydicom-uid-hevcmp51"]], "pydicom.uid.HangingProtocolStorage": [[296, "pydicom-uid-hangingprotocolstorage"]], "pydicom.uid.HemodynamicWaveformStorage": [[297, "pydicom-uid-hemodynamicwaveformstorage"]], "pydicom.uid.ImplantAssemblyTemplateStorage": [[298, "pydicom-uid-implantassemblytemplatestorage"]], "pydicom.uid.ImplantTemplateGroupStorage": [[299, "pydicom-uid-implanttemplategroupstorage"]], "pydicom.uid.ImplantationPlanSRStorage": [[300, "pydicom-uid-implantationplansrstorage"]], "pydicom.uid.ImplicitVRLittleEndian": [[301, "pydicom-uid-implicitvrlittleendian"]], "pydicom.uid.IntraocularLensCalculationsStorage": [[302, "pydicom-uid-intraocularlenscalculationsstorage"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation": [[303, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforpresentation"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing": [[304, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforprocessing"]], "pydicom.uid.JPEG2000": [[305, "pydicom-uid-jpeg2000"]], "pydicom.uid.JPEG2000Lossless": [[306, "pydicom-uid-jpeg2000lossless"]], "pydicom.uid.JPEG2000MC": [[307, "pydicom-uid-jpeg2000mc"]], "pydicom.uid.JPEG2000MCLossless": [[308, "pydicom-uid-jpeg2000mclossless"]], "pydicom.uid.JPEG2000TransferSyntaxes": [[309, "pydicom-uid-jpeg2000transfersyntaxes"]], "pydicom.uid.JPEGBaseline8Bit": [[310, "pydicom-uid-jpegbaseline8bit"]], "pydicom.uid.JPEGExtended12Bit": [[311, "pydicom-uid-jpegextended12bit"]], "pydicom.uid.JPEGLSLossless": [[312, "pydicom-uid-jpeglslossless"]], "pydicom.uid.JPEGLSNearLossless": [[313, "pydicom-uid-jpeglsnearlossless"]], "pydicom.uid.JPEGLSTransferSyntaxes": [[314, "pydicom-uid-jpeglstransfersyntaxes"]], "pydicom.uid.JPEGLosslessP14": [[315, "pydicom-uid-jpeglosslessp14"]], "pydicom.uid.JPEGLosslessSV1": [[316, "pydicom-uid-jpeglosslesssv1"]], "pydicom.uid.JPEGTransferSyntaxes": [[317, "pydicom-uid-jpegtransfersyntaxes"]], "pydicom.uid.KeratometryMeasurementsStorage": [[318, "pydicom-uid-keratometrymeasurementsstorage"]], "pydicom.uid.KeyObjectSelectionDocumentStorage": [[319, "pydicom-uid-keyobjectselectiondocumentstorage"]], "pydicom.uid.LegacyConvertedEnhancedCTImageStorage": [[320, "pydicom-uid-legacyconvertedenhancedctimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedMRImageStorage": [[321, "pydicom-uid-legacyconvertedenhancedmrimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedPETImageStorage": [[322, "pydicom-uid-legacyconvertedenhancedpetimagestorage"]], "pydicom.uid.LensometryMeasurementsStorage": [[323, "pydicom-uid-lensometrymeasurementsstorage"]], "pydicom.uid.MPEG2MPHL": [[324, "pydicom-uid-mpeg2mphl"]], "pydicom.uid.MPEG2MPML": [[325, "pydicom-uid-mpeg2mpml"]], "pydicom.uid.MPEG4HP41": [[326, "pydicom-uid-mpeg4hp41"]], "pydicom.uid.MPEG4HP41BD": [[327, "pydicom-uid-mpeg4hp41bd"]], "pydicom.uid.MPEG4HP422D": [[328, "pydicom-uid-mpeg4hp422d"]], "pydicom.uid.MPEG4HP423D": [[329, "pydicom-uid-mpeg4hp423d"]], "pydicom.uid.MPEG4HP42STEREO": [[330, "pydicom-uid-mpeg4hp42stereo"]], "pydicom.uid.MPEGTransferSyntaxes": [[331, "pydicom-uid-mpegtransfersyntaxes"]], "pydicom.uid.MRImageStorage": [[332, "pydicom-uid-mrimagestorage"]], "pydicom.uid.MRSpectroscopyStorage": [[333, "pydicom-uid-mrspectroscopystorage"]], "pydicom.uid.MacularGridThicknessAndVolumeReportStorage": [[334, "pydicom-uid-maculargridthicknessandvolumereportstorage"]], "pydicom.uid.MammographyCADSRStorage": [[335, "pydicom-uid-mammographycadsrstorage"]], "pydicom.uid.MediaStorageDirectoryStorage": [[336, "pydicom-uid-mediastoragedirectorystorage"]], "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage": [[337, "pydicom-uid-microscopybulksimpleannotationsstorage"]], "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage": [[338, "pydicom-uid-multiframegrayscalebytesecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage": [[339, "pydicom-uid-multiframegrayscalewordsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage": [[340, "pydicom-uid-multiframesinglebitsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage": [[341, "pydicom-uid-multiframetruecolorsecondarycaptureimagestorage"]], "pydicom.uid.MultichannelRespiratoryWaveformStorage": [[342, "pydicom-uid-multichannelrespiratorywaveformstorage"]], "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage": [[343, "pydicom-uid-multiplevolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.NuclearMedicineImageStorage": [[344, "pydicom-uid-nuclearmedicineimagestorage"]], "pydicom.uid.OphthalmicAxialMeasurementsStorage": [[345, "pydicom-uid-ophthalmicaxialmeasurementsstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage": [[346, "pydicom-uid-ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage": [[347, "pydicom-uid-ophthalmicopticalcoherencetomographyenfaceimagestorage"]], "pydicom.uid.OphthalmicPhotography16BitImageStorage": [[348, "pydicom-uid-ophthalmicphotography16bitimagestorage"]], "pydicom.uid.OphthalmicPhotography8BitImageStorage": [[349, "pydicom-uid-ophthalmicphotography8bitimagestorage"]], "pydicom.uid.OphthalmicThicknessMapStorage": [[350, "pydicom-uid-ophthalmicthicknessmapstorage"]], "pydicom.uid.OphthalmicTomographyImageStorage": [[351, "pydicom-uid-ophthalmictomographyimagestorage"]], "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage": [[352, "pydicom-uid-ophthalmicvisualfieldstaticperimetrymeasurementsstorage"]], "pydicom.uid.PYDICOM_IMPLEMENTATION_UID": [[353, "pydicom-uid-pydicom-implementation-uid"]], "pydicom.uid.PYDICOM_ROOT_UID": [[354, "pydicom-uid-pydicom-root-uid"]], "pydicom.uid.ParametricMapStorage": [[355, "pydicom-uid-parametricmapstorage"]], "pydicom.uid.PatientRadiationDoseSRStorage": [[356, "pydicom-uid-patientradiationdosesrstorage"]], "pydicom.uid.PerformedImagingAgentAdministrationSRStorage": [[357, "pydicom-uid-performedimagingagentadministrationsrstorage"]], "pydicom.uid.PlannedImagingAgentAdministrationSRStorage": [[358, "pydicom-uid-plannedimagingagentadministrationsrstorage"]], "pydicom.uid.PositronEmissionTomographyImageStorage": [[359, "pydicom-uid-positronemissiontomographyimagestorage"]], "pydicom.uid.ProcedureLogStorage": [[360, "pydicom-uid-procedurelogstorage"]], "pydicom.uid.ProtocolApprovalStorage": [[361, "pydicom-uid-protocolapprovalstorage"]], "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage": [[362, "pydicom-uid-pseudocolorsoftcopypresentationstatestorage"]], "pydicom.uid.RE_VALID_UID": [[363, "pydicom-uid-re-valid-uid"]], "pydicom.uid.RE_VALID_UID_PREFIX": [[364, "pydicom-uid-re-valid-uid-prefix"]], "pydicom.uid.RLELossless": [[365, "pydicom-uid-rlelossless"]], "pydicom.uid.RLETransferSyntaxes": [[366, "pydicom-uid-rletransfersyntaxes"]], "pydicom.uid.RTBeamsDeliveryInstructionStorage": [[367, "pydicom-uid-rtbeamsdeliveryinstructionstorage"]], "pydicom.uid.RTBeamsTreatmentRecordStorage": [[368, "pydicom-uid-rtbeamstreatmentrecordstorage"]], "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage": [[369, "pydicom-uid-rtbrachyapplicationsetupdeliveryinstructionstorage"]], "pydicom.uid.RTBrachyTreatmentRecordStorage": [[370, "pydicom-uid-rtbrachytreatmentrecordstorage"]], "pydicom.uid.RTDoseStorage": [[371, "pydicom-uid-rtdosestorage"]], "pydicom.uid.RTImageStorage": [[372, "pydicom-uid-rtimagestorage"]], "pydicom.uid.RTIonBeamsTreatmentRecordStorage": [[373, "pydicom-uid-rtionbeamstreatmentrecordstorage"]], "pydicom.uid.RTIonPlanStorage": [[374, "pydicom-uid-rtionplanstorage"]], "pydicom.uid.RTPhysicianIntentStorage": [[375, "pydicom-uid-rtphysicianintentstorage"]], "pydicom.uid.RTPlanStorage": [[376, "pydicom-uid-rtplanstorage"]], "pydicom.uid.RTRadiationRecordSetStorage": [[377, "pydicom-uid-rtradiationrecordsetstorage"]], "pydicom.uid.RTRadiationSalvageRecordStorage": [[378, "pydicom-uid-rtradiationsalvagerecordstorage"]], "pydicom.uid.RTRadiationSetDeliveryInstructionStorage": [[379, "pydicom-uid-rtradiationsetdeliveryinstructionstorage"]], "pydicom.uid.RTRadiationSetStorage": [[380, "pydicom-uid-rtradiationsetstorage"]], "pydicom.uid.RTSegmentAnnotationStorage": [[381, "pydicom-uid-rtsegmentannotationstorage"]], "pydicom.uid.RTStructureSetStorage": [[382, "pydicom-uid-rtstructuresetstorage"]], "pydicom.uid.RTTreatmentPreparationStorage": [[383, "pydicom-uid-rttreatmentpreparationstorage"]], "pydicom.uid.RTTreatmentSummaryRecordStorage": [[384, "pydicom-uid-rttreatmentsummaryrecordstorage"]], "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage": [[385, "pydicom-uid-radiopharmaceuticalradiationdosesrstorage"]], "pydicom.uid.RawDataStorage": [[386, "pydicom-uid-rawdatastorage"]], "pydicom.uid.RealWorldValueMappingStorage": [[387, "pydicom-uid-realworldvaluemappingstorage"]], "pydicom.uid.RespiratoryWaveformStorage": [[388, "pydicom-uid-respiratorywaveformstorage"]], "pydicom.uid.RoboticArmRadiationStorage": [[389, "pydicom-uid-roboticarmradiationstorage"]], "pydicom.uid.RoboticRadiationRecordStorage": [[390, "pydicom-uid-roboticradiationrecordstorage"]], "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage": [[391, "pydicom-uid-routinescalpelectroencephalogramwaveformstorage"]], "pydicom.uid.SecondaryCaptureImageStorage": [[392, "pydicom-uid-secondarycaptureimagestorage"]], "pydicom.uid.SegmentationStorage": [[393, "pydicom-uid-segmentationstorage"]], "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage": [[394, "pydicom-uid-segmentedvolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.SimplifiedAdultEchoSRStorage": [[395, "pydicom-uid-simplifiedadultechosrstorage"]], "pydicom.uid.SleepElectroencephalogramWaveformStorage": [[396, "pydicom-uid-sleepelectroencephalogramwaveformstorage"]], "pydicom.uid.SpatialFiducialsStorage": [[397, "pydicom-uid-spatialfiducialsstorage"]], "pydicom.uid.SpatialRegistrationStorage": [[398, "pydicom-uid-spatialregistrationstorage"]], "pydicom.uid.SpectaclePrescriptionReportStorage": [[399, "pydicom-uid-spectacleprescriptionreportstorage"]], "pydicom.uid.StereometricRelationshipStorage": [[400, "pydicom-uid-stereometricrelationshipstorage"]], "pydicom.uid.SubjectiveRefractionMeasurementsStorage": [[401, "pydicom-uid-subjectiverefractionmeasurementsstorage"]], "pydicom.uid.SurfaceScanMeshStorage": [[402, "pydicom-uid-surfacescanmeshstorage"]], "pydicom.uid.SurfaceScanPointCloudStorage": [[403, "pydicom-uid-surfacescanpointcloudstorage"]], "pydicom.uid.SurfaceSegmentationStorage": [[404, "pydicom-uid-surfacesegmentationstorage"]], "pydicom.uid.TomotherapeuticRadiationRecordStorage": [[405, "pydicom-uid-tomotherapeuticradiationrecordstorage"]], "pydicom.uid.TomotherapeuticRadiationStorage": [[406, "pydicom-uid-tomotherapeuticradiationstorage"]], "pydicom.uid.TractographyResultsStorage": [[407, "pydicom-uid-tractographyresultsstorage"]], "pydicom.uid.TwelveLeadECGWaveformStorage": [[408, "pydicom-uid-twelveleadecgwaveformstorage"]], "pydicom.uid.UID": [[409, "pydicom-uid-uid"]], "pydicom.uid.UltrasoundImageStorage": [[410, "pydicom-uid-ultrasoundimagestorage"]], "pydicom.uid.UltrasoundMultiFrameImageStorage": [[411, "pydicom-uid-ultrasoundmultiframeimagestorage"]], "pydicom.uid.UncompressedTransferSyntaxes": [[412, "pydicom-uid-uncompressedtransfersyntaxes"]], "pydicom.uid.VLEndoscopicImageStorage": [[413, "pydicom-uid-vlendoscopicimagestorage"]], "pydicom.uid.VLMicroscopicImageStorage": [[414, "pydicom-uid-vlmicroscopicimagestorage"]], "pydicom.uid.VLPhotographicImageStorage": [[415, "pydicom-uid-vlphotographicimagestorage"]], "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage": [[416, "pydicom-uid-vlslidecoordinatesmicroscopicimagestorage"]], "pydicom.uid.VLWholeSlideMicroscopyImageStorage": [[417, "pydicom-uid-vlwholeslidemicroscopyimagestorage"]], "pydicom.uid.VideoEndoscopicImageStorage": [[418, "pydicom-uid-videoendoscopicimagestorage"]], "pydicom.uid.VideoMicroscopicImageStorage": [[419, "pydicom-uid-videomicroscopicimagestorage"]], "pydicom.uid.VideoPhotographicImageStorage": [[420, "pydicom-uid-videophotographicimagestorage"]], "pydicom.uid.VisualAcuityMeasurementsStorage": [[421, "pydicom-uid-visualacuitymeasurementsstorage"]], "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage": [[422, "pydicom-uid-volumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage": [[423, "pydicom-uid-widefieldophthalmicphotography3dcoordinatesimagestorage"]], "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage": [[424, "pydicom-uid-widefieldophthalmicphotographystereographicprojectionimagestorage"]], "pydicom.uid.XADefinedProcedureProtocolStorage": [[425, "pydicom-uid-xadefinedprocedureprotocolstorage"]], "pydicom.uid.XAPerformedProcedureProtocolStorage": [[426, "pydicom-uid-xaperformedprocedureprotocolstorage"]], "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage": [[427, "pydicom-uid-xaxrfgrayscalesoftcopypresentationstatestorage"]], "pydicom.uid.XRay3DAngiographicImageStorage": [[428, "pydicom-uid-xray3dangiographicimagestorage"]], "pydicom.uid.XRay3DCraniofacialImageStorage": [[429, "pydicom-uid-xray3dcraniofacialimagestorage"]], "pydicom.uid.XRayAngiographicImageStorage": [[430, "pydicom-uid-xrayangiographicimagestorage"]], "pydicom.uid.XRayRadiationDoseSRStorage": [[431, "pydicom-uid-xrayradiationdosesrstorage"]], "pydicom.uid.XRayRadiofluoroscopicImageStorage": [[432, "pydicom-uid-xrayradiofluoroscopicimagestorage"]], "pydicom.uid.generate_uid": [[433, "pydicom-uid-generate-uid"]], "pydicom.valuerep.DA": [[434, "pydicom-valuerep-da"]], "pydicom.valuerep.DS": [[435, "pydicom-valuerep-ds"]], "pydicom.valuerep.DSdecimal": [[436, "pydicom-valuerep-dsdecimal"]], "pydicom.valuerep.DSfloat": [[437, "pydicom-valuerep-dsfloat"]], "pydicom.valuerep.DT": [[438, "pydicom-valuerep-dt"]], "pydicom.valuerep.IS": [[439, "pydicom-valuerep-is"]], "pydicom.valuerep.ISfloat": [[440, "pydicom-valuerep-isfloat"]], "pydicom.valuerep.MultiString": [[441, "pydicom-valuerep-multistring"]], "pydicom.valuerep.PersonName": [[442, "pydicom-valuerep-personname"]], "pydicom.valuerep.PersonNameUnicode": [[443, "pydicom-valuerep-personnameunicode"]], "pydicom.valuerep.TM": [[444, "pydicom-valuerep-tm"]], "pydicom.valuerep.VR": [[445, "pydicom-valuerep-vr"]], "pydicom.valuerep.format_number_as_ds": [[446, "pydicom-valuerep-format-number-as-ds"]], "pydicom.valuerep.is_valid_ds": [[447, "pydicom-valuerep-is-valid-ds"]], "pydicom.values.convert_AE_string": [[448, "pydicom-values-convert-ae-string"]], "pydicom.values.convert_ATvalue": [[449, "pydicom-values-convert-atvalue"]], "pydicom.values.convert_DA_string": [[450, "pydicom-values-convert-da-string"]], "pydicom.values.convert_DS_string": [[451, "pydicom-values-convert-ds-string"]], "pydicom.values.convert_DT_string": [[452, "pydicom-values-convert-dt-string"]], "pydicom.values.convert_IS_string": [[453, "pydicom-values-convert-is-string"]], "pydicom.values.convert_OBvalue": [[454, "pydicom-values-convert-obvalue"]], "pydicom.values.convert_OWvalue": [[455, "pydicom-values-convert-owvalue"]], "pydicom.values.convert_PN": [[456, "pydicom-values-convert-pn"]], "pydicom.values.convert_SQ": [[457, "pydicom-values-convert-sq"]], "pydicom.values.convert_TM_string": [[458, "pydicom-values-convert-tm-string"]], "pydicom.values.convert_UI": [[459, "pydicom-values-convert-ui"]], "pydicom.values.convert_UN": [[460, "pydicom-values-convert-un"]], "pydicom.values.convert_UR_string": [[461, "pydicom-values-convert-ur-string"]], "pydicom.values.convert_numbers": [[462, "pydicom-values-convert-numbers"]], "pydicom.values.convert_single_string": [[463, "pydicom-values-convert-single-string"]], "pydicom.values.convert_string": [[464, "pydicom-values-convert-string"]], "pydicom.values.convert_tag": [[465, "pydicom-values-convert-tag"]], "pydicom.values.convert_text": [[466, "pydicom-values-convert-text"]], "pydicom.values.convert_value": [[467, "pydicom-values-convert-value"]], "pydicom.waveforms.numpy_handler": [[468, "module-pydicom.waveforms.numpy_handler"]], "Bulk Data Handlers": [[469, "bulk-data-handlers"]], "Pixel Data Utilities": [[469, "pixel-data-utilities"]], "Overlay Data Handlers (pydicom.overlays)": [[470, "overlay-data-handlers-pydicom-overlays"]], "Pixel Data Handlers (pydicom.pixel_data_handlers)": [[471, "pixel-data-handlers-pydicom-pixel-data-handlers"]], "Waveform Data Handlers (pydicom.waveforms)": [[472, "waveform-data-handlers-pydicom-waveforms"]], "Miscellaneous (pydicom.misc)": [[474, "miscellaneous-pydicom-misc"]], "UID Definitions and Utilities (pydicom.uid)": [[475, "uid-definitions-and-utilities-pydicom-uid"]], "Transfer Syntax UIDs": [[475, "transfer-syntax-uids"]], "Transfer Syntax Lists": [[475, "transfer-syntax-lists"]], "UID Utilities": [[475, "uid-utilities"]], "Storage SOP Class UIDs": [[475, "storage-sop-class-uids"]], "Release notes": [[476, "release-notes"]], "Version 3.0.0": [[476, "version-3-0-0"], [497, "version-3-0-0"]], "Changes": [[476, "changes"], [476, "id1"], [476, "id5"], [476, "id8"], [476, "id13"], [476, "id20"], [476, "id24"], [476, "id26"], [476, "id30"], [487, "changes"], [488, "changes"], [489, "changes"], [490, "changes"], [492, "changes"], [494, "changes"], [495, "changes"], [496, "changes"], [497, "changes"]], "Enhancements": [[476, "enhancements"], [476, "id2"], [476, "id6"], [476, "id9"], [476, "id12"], [476, "id16"], [476, "id23"], [476, "id27"], [476, "id31"], [476, "id34"], [476, "id39"], [476, "id42"], [483, "enhancements"], [484, "enhancements"], [486, "enhancements"], [487, "enhancements"], [488, "enhancements"], [489, "enhancements"], [491, "enhancements"], [492, "enhancements"], [494, "enhancements"], [495, "enhancements"], [496, "enhancements"], [497, "enhancements"]], "Fixes": [[476, "fixes"], [476, "id3"], [476, "id7"], [476, "id10"], [476, "id11"], [476, "id14"], [476, "id17"], [476, "id19"], [476, "id22"], [476, "id28"], [476, "id32"], [476, "id35"], [476, "id37"], [485, "fixes"], [486, "fixes"], [487, "fixes"], [488, "fixes"], [489, "fixes"], [490, "fixes"], [491, "fixes"], [492, "fixes"], [493, "fixes"], [494, "fixes"], [495, "fixes"], [496, "fixes"], [497, "fixes"]], "Pydicom Internals": [[476, "pydicom-internals"], [476, "id4"], [496, "pydicom-internals"], [497, "pydicom-internals"]], "Version 2.4.0": [[476, "version-2-4-0"], [496, "version-2-4-0"]], "Version 2.3.0": [[476, "version-2-3-0"], [495, "version-2-3-0"]], "Version 2.2.0": [[476, "version-2-2-0"], [494, "version-2-2-0"]], "Version 2.1.1": [[476, "version-2-1-1"], [493, "version-2-1-1"]], "Version 2.1.0": [[476, "version-2-1-0"], [492, "version-2-1-0"]], "Changelog": [[476, "changelog"], [476, "id15"], [476, "id18"], [476, "id21"], [476, "id25"], [476, "id29"], [476, "id33"], [476, "id36"], [476, "id38"], [476, "id40"], [476, "id44"], [476, "id48"], [476, "id52"], [476, "id54"], [476, "id55"], [476, "id60"], [477, "changelog"], [478, "changelog"], [479, "changelog"], [480, "changelog"], [481, "changelog"], [482, "changelog"], [483, "changelog"], [484, "changelog"], [485, "changelog"], [486, "changelog"], [487, "changelog"], [488, "changelog"], [489, "changelog"], [490, "changelog"], [491, "changelog"], [492, "changelog"]], "Version 2.0.0": [[476, "version-2-0-0"], [491, "version-2-0-0"]], "Version 1.4.1": [[476, "version-1-4-1"], [490, "version-1-4-1"]], "Version 1.4.0": [[476, "version-1-4-0"], [489, "version-1-4-0"]], "Version 1.3.0": [[476, "version-1-3-0"], [488, "version-1-3-0"]], "Documentation": [[476, "documentation"], [488, "documentation"]], "Version 1.2.0": [[476, "version-1-2-0"], [487, "version-1-2-0"]], "Version 1.1.0": [[476, "version-1-1-0"], [486, "version-1-1-0"]], "Other": [[476, "other"], [476, "id51"], [476, "id53"], [476, "id59"], [476, "id64"], [477, "other"], [478, "other"], [480, "other"], [481, "other"], [486, "other"]], "Version 1.0.0": [[476, "version-1-0-0"], [485, "version-1-0-0"]], "Major changes": [[476, "major-changes"], [476, "id41"], [476, "id45"], [476, "id49"], [476, "id56"], [476, "id61"], [477, "major-changes"], [478, "major-changes"], [481, "major-changes"], [482, "major-changes"], [483, "major-changes"], [485, "major-changes"]], "Other enhancements": [[476, "other-enhancements"], [485, "other-enhancements"]], "Infrastructure": [[476, "infrastructure"], [485, "infrastructure"]], "Version 0.9.9": [[476, "version-0-9-9"], [484, "version-0-9-9"]], "Contrib file changes": [[476, "contrib-file-changes"], [476, "id43"], [483, "contrib-file-changes"], [484, "contrib-file-changes"]], "Other Contributors": [[476, "other-contributors"], [484, "other-contributors"]], "Version 0.9.8": [[476, "version-0-9-8"], [483, "version-0-9-8"]], "Bug fixes": [[476, "bug-fixes"], [476, "id46"], [476, "id50"], [481, "bug-fixes"], [482, "bug-fixes"], [483, "bug-fixes"]], "Version 0.9.7": [[476, "version-0-9-7"], [482, "version-0-9-7"]], "Other Enhancements": [[476, "id47"], [476, "id57"], [476, "id62"], [477, "other-enhancements"], [478, "other-enhancements"], [482, "other-enhancements"]], "Version 0.9.6": [[476, "version-0-9-6"], [481, "version-0-9-6"]], "Version 0.9.5": [[476, "version-0-9-5"], [480, "version-0-9-5"]], "Major fixes in this release": [[476, "major-fixes-in-this-release"], [480, "major-fixes-in-this-release"]], "Other fixes in this release": [[476, "other-fixes-in-this-release"], [480, "other-fixes-in-this-release"]], "New \u2018Contrib\u2019 files": [[476, "new-contrib-files"], [480, "new-contrib-files"]], "Version 0.9.4": [[476, "version-0-9-4"], [479, "version-0-9-4"]], "Major changes/additions in this version": [[476, "major-changes-additions-in-this-version"], [479, "major-changes-additions-in-this-version"]], "Other changes and bug fixes": [[476, "other-changes-and-bug-fixes"], [479, "other-changes-and-bug-fixes"]], "Version 0.9.3": [[476, "version-0-9-3"], [478, "version-0-9-3"]], "Bug Fixes": [[476, "id58"], [476, "id63"], [477, "bug-fixes"], [478, "bug-fixes"]], "Version 0.9.2": [[476, "version-0-9-2"], [477, "version-0-9-2"]], "Contributing to pydicom": [[498, "contributing-to-pydicom"]], "Contributing a source code change": [[499, "contributing-a-source-code-change"]], "Download the current source code": [[499, "download-the-current-source-code"]], "(Optional) Install required libraries": [[499, "optional-install-required-libraries"]], "Install pytest and run the test suite": [[499, "install-pytest-and-run-the-test-suite"]], "Create a new branch": [[499, "create-a-new-branch"], [500, "create-a-new-branch"]], "Write tests for your changes": [[499, "write-tests-for-your-changes"]], "Make a code change and document it": [[499, "make-a-code-change-and-document-it"]], "Preview your changes": [[499, "preview-your-changes"]], "Commit your changes and make a pull request": [[499, "commit-your-changes-and-make-a-pull-request"], [500, "commit-your-changes-and-make-a-pull-request"]], "What happens next?": [[499, "what-happens-next"], [500, "what-happens-next"]], "Contributing a documentation change": [[500, "contributing-a-documentation-change"]], "Download the documentation": [[500, "download-the-documentation"]], "Build and preview the documentation": [[500, "build-and-preview-the-documentation"]], "Make a change to the documentation": [[500, "make-a-change-to-the-documentation"]], "Dataset basics: read, access, modify, write": [[501, "dataset-basics-read-access-modify-write"]], "Getting our example dataset": [[501, "getting-our-example-dataset"]], "Reading": [[501, "reading"]], "Viewing and accessing": [[501, "viewing-and-accessing"]], "Elements": [[501, "elements"]], "Sequences": [[501, "sequences"], [501, "id1"]], "file_meta": [[501, "file-meta"]], "Modifying": [[501, "modifying"]], "Modifying elements": [[501, "modifying-elements"]], "Adding elements": [[501, "adding-elements"]], "Any category": [[501, "any-category"]], "Standard elements": [[501, "standard-elements"]], "Deleting elements": [[501, "deleting-elements"]], "Writing": [[501, "writing"]], "Next steps": [[501, "next-steps"]], "Introduction to JSON support": [[502, "introduction-to-json-support"]], "Converting a dataset into JSON format": [[502, "converting-a-dataset-into-json-format"]], "Creating a dataset from JSON": [[502, "creating-a-dataset-from-json"]], "Working with large binary data": [[502, "working-with-large-binary-data"]], "DICOM File-sets and DICOMDIR": [[503, "dicom-file-sets-and-dicomdir"]], "The DICOM File-set": [[503, "the-dicom-file-set"]], "The DICOMDIR file": [[503, "the-dicomdir-file"]], "FileSet": [[503, "fileset"]], "Loading existing File-sets": [[503, "loading-existing-file-sets"]], "Creating a new File-set": [[503, "creating-a-new-file-set"]], "Modifying a File-set": [[503, "modifying-a-file-set"]], "FileSet and staging": [[503, "fileset-and-staging"]], "Adding SOP instances": [[503, "adding-sop-instances"]], "Removing instances": [[503, "removing-instances"]], "Applying the changes": [[503, "applying-the-changes"]], "Conclusion": [[503, "conclusion"]], "Tutorials": [[504, "tutorials"]], "How to install pydicom": [[505, "how-to-install-pydicom"]], "Install the official release": [[505, "install-the-official-release"]], "Install using pip": [[505, "install-using-pip"]], "Install using conda": [[505, "install-using-conda"]], "Downloading example/test DICOM files": [[505, "downloading-example-test-dicom-files"]], "Install the optional libraries": [[505, "install-the-optional-libraries"]], "Installing Pillow": [[505, "installing-pillow"]], "Installing pyjpegls": [[505, "installing-pyjpegls"]], "Installing GDCM": [[505, "installing-gdcm"]], "Installing pylibjpeg": [[505, "installing-pylibjpeg"]], "Install the development version": [[505, "install-the-development-version"]], "Encapsulating data compressed by third-party packages": [[506, "encapsulating-data-compressed-by-third-party-packages"]], "Structured Reporting": [[507, "structured-reporting"]], "Creating and managing virtual environments": [[508, "creating-and-managing-virtual-environments"]], "Using pip": [[508, "using-pip"]], "Install packages": [[508, "install-packages"]], "Create new virtual environments": [[508, "create-new-virtual-environments"]], "Deleting environments": [[508, "deleting-environments"], [508, "id1"]], "Activating and deactivating": [[508, "activating-and-deactivating"]], "Managing packages": [[508, "managing-packages"]], "Final steps": [[508, "final-steps"], [508, "id2"]], "Using conda": [[508, "using-conda"]], "Create a new virtual environment": [[508, "create-a-new-virtual-environment"]], "Activating and deactivating environments": [[508, "activating-and-deactivating-environments"]], "Managing installed packages": [[508, "managing-installed-packages"]], "Waveforms": [[509, "waveforms"]], "Waveforms in DICOM": [[509, "waveforms-in-dicom"]], "Decoding Waveform Data": [[509, "decoding-waveform-data"]], "Encoding Waveform Data": [[509, "encoding-waveform-data"]]}, "indexentries": {"settings (class in pydicom.config)": [[54, "pydicom.config.Settings"]], "infer_sq_for_un_vr (pydicom.config.settings property)": [[54, "pydicom.config.Settings.infer_sq_for_un_vr"]], "reading_validation_mode (pydicom.config.settings property)": [[54, "pydicom.config.Settings.reading_validation_mode"]], "writing_validation_mode (pydicom.config.settings property)": [[54, "pydicom.config.Settings.writing_validation_mode"]], "module": [[66, "module-pydicom.encoders"], [201, "module-pydicom.overlays.numpy_handler"], [209, "module-pydicom.pixel_data_handlers.gdcm_handler"], [210, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"], [211, "module-pydicom.pixel_data_handlers.numpy_handler"], [212, "module-pydicom.pixel_data_handlers.pillow_handler"], [213, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"], [214, "module-pydicom.pixel_data_handlers.rle_handler"], [215, "module-pydicom.pixel_data_handlers.util"], [468, "module-pydicom.waveforms.numpy_handler"], [470, "module-pydicom.overlays"], [471, "module-pydicom.pixel_data_handlers"], [472, "module-pydicom.waveforms"], [473, "module-pydicom"]], "pydicom.encoders": [[66, "module-pydicom.encoders"]], "convert_encodings() (in module pydicom.charset)": [[74, "pydicom.charset.convert_encodings"]], "decode_bytes() (in module pydicom.charset)": [[75, "pydicom.charset.decode_bytes"]], "decode_element() (in module pydicom.charset)": [[76, "pydicom.charset.decode_element"]], "encode_string() (in module pydicom.charset)": [[77, "pydicom.charset.encode_string"]], "apply_j2k_corrections (in module pydicom.config)": [[78, "pydicom.config.APPLY_J2K_CORRECTIONS"]], "ds_decimal() (in module pydicom.config)": [[79, "pydicom.config.DS_decimal"]], "ds_numpy() (in module pydicom.config)": [[80, "pydicom.config.DS_numpy"]], "ignore (in module pydicom.config)": [[81, "pydicom.config.IGNORE"]], "invalid_keyword_behavior (in module pydicom.config)": [[82, "pydicom.config.INVALID_KEYWORD_BEHAVIOR"]], "invalid_key_behavior (in module pydicom.config)": [[83, "pydicom.config.INVALID_KEY_BEHAVIOR"]], "raise (in module pydicom.config)": [[84, "pydicom.config.RAISE"]], "warn (in module pydicom.config)": [[85, "pydicom.config.WARN"]], "allow_ds_float (in module pydicom.config)": [[86, "pydicom.config.allow_DS_float"]], "assume_implicit_vr_switch (in module pydicom.config)": [[87, "pydicom.config.assume_implicit_vr_switch"]], "convert_wrong_length_to_un (in module pydicom.config)": [[88, "pydicom.config.convert_wrong_length_to_UN"]], "data_element_callback (in module pydicom.config)": [[89, "pydicom.config.data_element_callback"]], "data_element_callback_kwargs (in module pydicom.config)": [[90, "pydicom.config.data_element_callback_kwargs"]], "datetime_conversion (in module pydicom.config)": [[91, "pydicom.config.datetime_conversion"]], "debug() (in module pydicom.config)": [[92, "pydicom.config.debug"]], "enforce_valid_values (in module pydicom.config)": [[93, "pydicom.config.enforce_valid_values"]], "future_behavior() (in module pydicom.config)": [[94, "pydicom.config.future_behavior"]], "overlay_data_handlers (in module pydicom.config)": [[95, "pydicom.config.overlay_data_handlers"]], "pixel_data_handlers (in module pydicom.config)": [[96, "pydicom.config.pixel_data_handlers"]], "reset_data_element_callback() (in module pydicom.config)": [[97, "pydicom.config.reset_data_element_callback"]], "settings (in module pydicom.config)": [[98, "pydicom.config.settings"]], "show_file_meta (in module pydicom.config)": [[99, "pydicom.config.show_file_meta"]], "use_ds_decimal (in module pydicom.config)": [[100, "pydicom.config.use_DS_decimal"]], "use_ds_numpy (in module pydicom.config)": [[101, "pydicom.config.use_DS_numpy"]], "use_is_numpy (in module pydicom.config)": [[102, "pydicom.config.use_IS_numpy"]], "get_charset_files() (in module pydicom.data)": [[103, "pydicom.data.get_charset_files"]], "get_palette_files() (in module pydicom.data)": [[104, "pydicom.data.get_palette_files"]], "get_testdata_file() (in module pydicom.data)": [[105, "pydicom.data.get_testdata_file"]], "get_testdata_files() (in module pydicom.data)": [[106, "pydicom.data.get_testdata_files"]], "add_dict_entries() (in module pydicom.datadict)": [[107, "pydicom.datadict.add_dict_entries"]], "add_dict_entry() (in module pydicom.datadict)": [[108, "pydicom.datadict.add_dict_entry"]], "add_private_dict_entries() (in module pydicom.datadict)": [[109, "pydicom.datadict.add_private_dict_entries"]], "add_private_dict_entry() (in module pydicom.datadict)": [[110, "pydicom.datadict.add_private_dict_entry"]], "dictionary_vm() (in module pydicom.datadict)": [[111, "pydicom.datadict.dictionary_VM"]], "dictionary_vr() (in module pydicom.datadict)": [[112, "pydicom.datadict.dictionary_VR"]], "dictionary_description() (in module pydicom.datadict)": [[113, "pydicom.datadict.dictionary_description"]], "dictionary_has_tag() (in module pydicom.datadict)": [[114, "pydicom.datadict.dictionary_has_tag"]], "dictionary_is_retired() (in module pydicom.datadict)": [[115, "pydicom.datadict.dictionary_is_retired"]], "dictionary_keyword() (in module pydicom.datadict)": [[116, "pydicom.datadict.dictionary_keyword"]], "get_entry() (in module pydicom.datadict)": [[117, "pydicom.datadict.get_entry"]], "get_private_entry() (in module pydicom.datadict)": [[118, "pydicom.datadict.get_private_entry"]], "keyword_for_tag() (in module pydicom.datadict)": [[119, "pydicom.datadict.keyword_for_tag"]], "mask_match() (in module pydicom.datadict)": [[120, "pydicom.datadict.mask_match"]], "private_dictionary_vm() (in module pydicom.datadict)": [[121, "pydicom.datadict.private_dictionary_VM"]], "private_dictionary_vr() (in module pydicom.datadict)": [[122, "pydicom.datadict.private_dictionary_VR"]], "private_dictionary_description() (in module pydicom.datadict)": [[123, "pydicom.datadict.private_dictionary_description"]], "repeater_has_keyword() (in module pydicom.datadict)": [[124, "pydicom.datadict.repeater_has_keyword"]], "repeater_has_tag() (in module pydicom.datadict)": [[125, "pydicom.datadict.repeater_has_tag"]], "tag_for_keyword() (in module pydicom.datadict)": [[126, "pydicom.datadict.tag_for_keyword"]], "dataelement (class in pydicom.dataelem)": [[127, "pydicom.dataelem.DataElement"]], "vm (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.VM"]], "vr (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.VR"]], "__init__() (pydicom.dataelem.dataelement method)": [[127, "pydicom.dataelem.DataElement.__init__"]], "clear() (pydicom.dataelem.dataelement method)": [[127, "pydicom.dataelem.DataElement.clear"]], "descripwidth (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.descripWidth"]], "description() (pydicom.dataelem.dataelement method)": [[127, "pydicom.dataelem.DataElement.description"]], "empty_value (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.empty_value"]], "from_json() (pydicom.dataelem.dataelement class method)": [[127, "pydicom.dataelem.DataElement.from_json"]], "is_empty (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.is_empty"]], "is_private (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.is_private"]], "is_retired (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.is_retired"]], "is_undefined_length (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.is_undefined_length"]], "keyword (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.keyword"]], "maxbytestodisplay (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.maxBytesToDisplay"]], "name (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.name"]], "repval (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.repval"]], "showvr (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.showVR"]], "tag (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.tag"]], "to_json() (pydicom.dataelem.dataelement method)": [[127, "pydicom.dataelem.DataElement.to_json"]], "to_json_dict() (pydicom.dataelem.dataelement method)": [[127, "pydicom.dataelem.DataElement.to_json_dict"]], "validate() (pydicom.dataelem.dataelement method)": [[127, "pydicom.dataelem.DataElement.validate"]], "value (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.value"]], "dataelement_from_raw() (in module pydicom.dataelem)": [[128, "pydicom.dataelem.DataElement_from_raw"]], "rawdataelement (class in pydicom.dataelem)": [[129, "pydicom.dataelem.RawDataElement"]], "vr (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.VR"]], "__init__() (pydicom.dataelem.rawdataelement method)": [[129, "pydicom.dataelem.RawDataElement.__init__"]], "is_implicit_vr (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.is_implicit_VR"]], "is_little_endian (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.is_little_endian"]], "is_raw (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.is_raw"]], "length (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.length"]], "tag (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.tag"]], "value (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.value"]], "value_tell (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.value_tell"]], "dataset (class in pydicom.dataset)": [[130, "pydicom.dataset.Dataset"]], "__init__() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.__init__"]], "add() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.add"]], "add_new() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.add_new"]], "clear() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.clear"]], "compress() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.compress"]], "convert_pixel_data() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.convert_pixel_data"]], "copy() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.copy"]], "data_element() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.data_element"]], "decode() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.decode"]], "decompress() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.decompress"]], "default_element_format (pydicom.dataset.dataset attribute)": [[130, "pydicom.dataset.Dataset.default_element_format"]], "default_sequence_element_format (pydicom.dataset.dataset attribute)": [[130, "pydicom.dataset.Dataset.default_sequence_element_format"]], "dir() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.dir"]], "elements() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.elements"]], "ensure_file_meta() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.ensure_file_meta"]], "fix_meta_info() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.fix_meta_info"]], "formatted_lines() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.formatted_lines"]], "from_json() (pydicom.dataset.dataset class method)": [[130, "pydicom.dataset.Dataset.from_json"]], "get() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.get"]], "get_item() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.get_item"]], "get_private_item() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.get_private_item"]], "group_dataset() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.group_dataset"]], "indent_chars (pydicom.dataset.dataset attribute)": [[130, "pydicom.dataset.Dataset.indent_chars"]], "is_implicit_vr (pydicom.dataset.dataset attribute)": [[130, "pydicom.dataset.Dataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.dataset attribute)": [[130, "pydicom.dataset.Dataset.is_little_endian"]], "is_original_encoding (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.is_original_encoding"]], "items() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.items"]], "iterall() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.iterall"]], "keys() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.keys"]], "overlay_array() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.overlay_array"]], "parent (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.parent"]], "parent_seq (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.parent_seq"]], "pixel_array (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.pixel_array"]], "pop() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.pop"]], "popitem() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.popitem"]], "private_block() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.private_block"]], "private_creators() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.private_creators"]], "remove_private_tags() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.remove_private_tags"]], "save_as() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.save_as"]], "set_original_encoding() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.set_original_encoding"]], "setdefault() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.setdefault"]], "to_json() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.to_json"]], "to_json_dict() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.to_json_dict"]], "top() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.top"]], "trait_names() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.trait_names"]], "update() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.update"]], "values() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.values"]], "walk() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.walk"]], "waveform_array() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.waveform_array"]], "filedataset (class in pydicom.dataset)": [[131, "pydicom.dataset.FileDataset"]], "__init__() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.__init__"]], "file_meta (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.file_meta"]], "filename (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.filename"]], "fileobj_type (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.fileobj_type"]], "is_implicit_vr (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.is_little_endian"]], "preamble (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.preamble"]], "timestamp (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.timestamp"]], "filemetadataset (class in pydicom.dataset)": [[132, "pydicom.dataset.FileMetaDataset"]], "__init__() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.__init__"]], "validate() (pydicom.dataset.filemetadataset static method)": [[132, "pydicom.dataset.FileMetaDataset.validate"]], "privateblock (class in pydicom.dataset)": [[133, "pydicom.dataset.PrivateBlock"]], "__init__() (pydicom.dataset.privateblock method)": [[133, "pydicom.dataset.PrivateBlock.__init__"]], "add_new() (pydicom.dataset.privateblock method)": [[133, "pydicom.dataset.PrivateBlock.add_new"]], "block_start (pydicom.dataset.privateblock attribute)": [[133, "pydicom.dataset.PrivateBlock.block_start"]], "dataset (pydicom.dataset.privateblock attribute)": [[133, "pydicom.dataset.PrivateBlock.dataset"]], "get_tag() (pydicom.dataset.privateblock method)": [[133, "pydicom.dataset.PrivateBlock.get_tag"]], "group (pydicom.dataset.privateblock attribute)": [[133, "pydicom.dataset.PrivateBlock.group"]], "private_creator (pydicom.dataset.privateblock attribute)": [[133, "pydicom.dataset.PrivateBlock.private_creator"]], "validate_file_meta() (in module pydicom.dataset)": [[134, "pydicom.dataset.validate_file_meta"]], "decode_data_sequence() (in module pydicom.encaps)": [[135, "pydicom.encaps.decode_data_sequence"]], "defragment_data() (in module pydicom.encaps)": [[136, "pydicom.encaps.defragment_data"]], "encapsulate() (in module pydicom.encaps)": [[137, "pydicom.encaps.encapsulate"]], "encapsulate_extended() (in module pydicom.encaps)": [[138, "pydicom.encaps.encapsulate_extended"]], "fragment_frame() (in module pydicom.encaps)": [[139, "pydicom.encaps.fragment_frame"]], "generate_pixel_data() (in module pydicom.encaps)": [[140, "pydicom.encaps.generate_pixel_data"]], "generate_pixel_data_fragment() (in module pydicom.encaps)": [[141, "pydicom.encaps.generate_pixel_data_fragment"]], "generate_pixel_data_frame() (in module pydicom.encaps)": [[142, "pydicom.encaps.generate_pixel_data_frame"]], "get_frame_offsets() (in module pydicom.encaps)": [[143, "pydicom.encaps.get_frame_offsets"]], "itemize_fragment() (in module pydicom.encaps)": [[144, "pydicom.encaps.itemize_fragment"]], "itemize_frame() (in module pydicom.encaps)": [[145, "pydicom.encaps.itemize_frame"]], "read_item() (in module pydicom.encaps)": [[146, "pydicom.encaps.read_item"]], "rlelosslessencoder (in module pydicom.encoders)": [[147, "pydicom.encoders.RLELosslessEncoder"]], "encoder (class in pydicom.encoders.base)": [[148, "pydicom.encoders.base.Encoder"]], "uid (pydicom.encoders.base.encoder property)": [[148, "pydicom.encoders.base.Encoder.UID"]], "__init__() (pydicom.encoders.base.encoder method)": [[148, "pydicom.encoders.base.Encoder.__init__"]], "add_plugin() (pydicom.encoders.base.encoder method)": [[148, "pydicom.encoders.base.Encoder.add_plugin"]], "encode() (pydicom.encoders.base.encoder method)": [[148, "pydicom.encoders.base.Encoder.encode"]], "is_available (pydicom.encoders.base.encoder property)": [[148, "pydicom.encoders.base.Encoder.is_available"]], "iter_encode() (pydicom.encoders.base.encoder method)": [[148, "pydicom.encoders.base.Encoder.iter_encode"]], "kwargs_from_ds() (pydicom.encoders.base.encoder static method)": [[148, "pydicom.encoders.base.Encoder.kwargs_from_ds"]], "missing_dependencies (pydicom.encoders.base.encoder property)": [[148, "pydicom.encoders.base.Encoder.missing_dependencies"]], "name (pydicom.encoders.base.encoder property)": [[148, "pydicom.encoders.base.Encoder.name"]], "remove_plugin() (pydicom.encoders.base.encoder method)": [[148, "pydicom.encoders.base.Encoder.remove_plugin"]], "get_encoder() (in module pydicom.encoders)": [[149, "pydicom.encoders.get_encoder"]], "invaliddicomerror": [[150, "pydicom.errors.InvalidDicomError"]], "dicombytesio (class in pydicom.filebase)": [[151, "pydicom.filebase.DicomBytesIO"]], "__init__() (pydicom.filebase.dicombytesio method)": [[151, "pydicom.filebase.DicomBytesIO.__init__"]], "dicomfile() (in module pydicom.filebase)": [[152, "pydicom.filebase.DicomFile"]], "dicomfilelike (class in pydicom.filebase)": [[153, "pydicom.filebase.DicomFileLike"]], "__init__() (pydicom.filebase.dicomfilelike method)": [[153, "pydicom.filebase.DicomFileLike.__init__"]], "no_read() (pydicom.filebase.dicomfilelike method)": [[153, "pydicom.filebase.DicomFileLike.no_read"]], "no_seek() (pydicom.filebase.dicomfilelike method)": [[153, "pydicom.filebase.DicomFileLike.no_seek"]], "no_write() (pydicom.filebase.dicomfilelike method)": [[153, "pydicom.filebase.DicomFileLike.no_write"]], "dicomio (class in pydicom.filebase)": [[154, "pydicom.filebase.DicomIO"]], "__init__() (pydicom.filebase.dicomio method)": [[154, "pydicom.filebase.DicomIO.__init__"]], "read() (pydicom.filebase.dicomio method)": [[154, "pydicom.filebase.DicomIO.read"]], "read_beul() (pydicom.filebase.dicomio method)": [[154, "pydicom.filebase.DicomIO.read_beUL"]], "read_beus() (pydicom.filebase.dicomio method)": [[154, "pydicom.filebase.DicomIO.read_beUS"]], "read_be_tag() (pydicom.filebase.dicomio method)": [[154, "pydicom.filebase.DicomIO.read_be_tag"]], "read_leul() (pydicom.filebase.dicomio method)": [[154, "pydicom.filebase.DicomIO.read_leUL"]], "read_leus() (pydicom.filebase.dicomio method)": [[154, "pydicom.filebase.DicomIO.read_leUS"]], "read_le_tag() (pydicom.filebase.dicomio method)": [[154, "pydicom.filebase.DicomIO.read_le_tag"]], "write_ul() (pydicom.filebase.dicomio method)": [[154, "pydicom.filebase.DicomIO.write_UL"]], "write_us() (pydicom.filebase.dicomio method)": [[154, "pydicom.filebase.DicomIO.write_US"]], "write_beul() (pydicom.filebase.dicomio method)": [[154, "pydicom.filebase.DicomIO.write_beUL"]], "write_beus() (pydicom.filebase.dicomio method)": [[154, "pydicom.filebase.DicomIO.write_beUS"]], "write_leul() (pydicom.filebase.dicomio method)": [[154, "pydicom.filebase.DicomIO.write_leUL"]], "write_leus() (pydicom.filebase.dicomio method)": [[154, "pydicom.filebase.DicomIO.write_leUS"]], "write_tag() (pydicom.filebase.dicomio method)": [[154, "pydicom.filebase.DicomIO.write_tag"]], "data_element_generator() (in module pydicom.filereader)": [[155, "pydicom.filereader.data_element_generator"]], "data_element_offset_to_value() (in module pydicom.filereader)": [[156, "pydicom.filereader.data_element_offset_to_value"]], "dcmread() (in module pydicom.filereader)": [[157, "pydicom.filereader.dcmread"]], "read_dataset() (in module pydicom.filereader)": [[158, "pydicom.filereader.read_dataset"]], "read_deferred_data_element() (in module pydicom.filereader)": [[159, "pydicom.filereader.read_deferred_data_element"]], "read_file_meta_info() (in module pydicom.filereader)": [[160, "pydicom.filereader.read_file_meta_info"]], "read_partial() (in module pydicom.filereader)": [[161, "pydicom.filereader.read_partial"]], "read_preamble() (in module pydicom.filereader)": [[162, "pydicom.filereader.read_preamble"]], "read_sequence() (in module pydicom.filereader)": [[163, "pydicom.filereader.read_sequence"]], "read_sequence_item() (in module pydicom.filereader)": [[164, "pydicom.filereader.read_sequence_item"]], "directory_recorders (in module pydicom.fileset)": [[165, "pydicom.fileset.DIRECTORY_RECORDERS"]], "fileid (pydicom.fileset.fileinstance property)": [[166, "pydicom.fileset.FileInstance.FileID"]], "fileinstance (class in pydicom.fileset)": [[166, "pydicom.fileset.FileInstance"]], "sopclassuid (pydicom.fileset.fileinstance property)": [[166, "pydicom.fileset.FileInstance.SOPClassUID"]], "sopinstanceuid (pydicom.fileset.fileinstance property)": [[166, "pydicom.fileset.FileInstance.SOPInstanceUID"]], "transfersyntaxuid (pydicom.fileset.fileinstance property)": [[166, "pydicom.fileset.FileInstance.TransferSyntaxUID"]], "__init__() (pydicom.fileset.fileinstance method)": [[166, "pydicom.fileset.FileInstance.__init__"]], "file_set (pydicom.fileset.fileinstance property)": [[166, "pydicom.fileset.FileInstance.file_set"]], "for_addition (pydicom.fileset.fileinstance property)": [[166, "pydicom.fileset.FileInstance.for_addition"]], "for_moving (pydicom.fileset.fileinstance property)": [[166, "pydicom.fileset.FileInstance.for_moving"]], "for_removal (pydicom.fileset.fileinstance property)": [[166, "pydicom.fileset.FileInstance.for_removal"]], "is_private (pydicom.fileset.fileinstance property)": [[166, "pydicom.fileset.FileInstance.is_private"]], "is_staged (pydicom.fileset.fileinstance property)": [[166, "pydicom.fileset.FileInstance.is_staged"]], "load() (pydicom.fileset.fileinstance method)": [[166, "pydicom.fileset.FileInstance.load"]], "node (pydicom.fileset.fileinstance attribute)": [[166, "pydicom.fileset.FileInstance.node"]], "path (pydicom.fileset.fileinstance property)": [[166, "pydicom.fileset.FileInstance.path"]], "fileset (class in pydicom.fileset)": [[167, "pydicom.fileset.FileSet"]], "id (pydicom.fileset.fileset property)": [[167, "pydicom.fileset.FileSet.ID"]], "uid (pydicom.fileset.fileset property)": [[167, "pydicom.fileset.FileSet.UID"]], "__init__() (pydicom.fileset.fileset method)": [[167, "pydicom.fileset.FileSet.__init__"]], "add() (pydicom.fileset.fileset method)": [[167, "pydicom.fileset.FileSet.add"]], "add_custom() (pydicom.fileset.fileset method)": [[167, "pydicom.fileset.FileSet.add_custom"]], "clear() (pydicom.fileset.fileset method)": [[167, "pydicom.fileset.FileSet.clear"]], "copy() (pydicom.fileset.fileset method)": [[167, "pydicom.fileset.FileSet.copy"]], "descriptor_character_set (pydicom.fileset.fileset property)": [[167, "pydicom.fileset.FileSet.descriptor_character_set"]], "descriptor_file_id (pydicom.fileset.fileset property)": [[167, "pydicom.fileset.FileSet.descriptor_file_id"]], "find() (pydicom.fileset.fileset method)": [[167, "pydicom.fileset.FileSet.find"]], "find_values() (pydicom.fileset.fileset method)": [[167, "pydicom.fileset.FileSet.find_values"]], "is_staged (pydicom.fileset.fileset property)": [[167, "pydicom.fileset.FileSet.is_staged"]], "load() (pydicom.fileset.fileset method)": [[167, "pydicom.fileset.FileSet.load"]], "path (pydicom.fileset.fileset property)": [[167, "pydicom.fileset.FileSet.path"]], "remove() (pydicom.fileset.fileset method)": [[167, "pydicom.fileset.FileSet.remove"]], "write() (pydicom.fileset.fileset method)": [[167, "pydicom.fileset.FileSet.write"]], "recordnode (class in pydicom.fileset)": [[168, "pydicom.fileset.RecordNode"]], "__init__() (pydicom.fileset.recordnode method)": [[168, "pydicom.fileset.RecordNode.__init__"]], "add() (pydicom.fileset.recordnode method)": [[168, "pydicom.fileset.RecordNode.add"]], "ancestors (pydicom.fileset.recordnode property)": [[168, "pydicom.fileset.RecordNode.ancestors"]], "children (pydicom.fileset.recordnode attribute)": [[168, "pydicom.fileset.RecordNode.children"]], "component (pydicom.fileset.recordnode property)": [[168, "pydicom.fileset.RecordNode.component"]], "depth (pydicom.fileset.recordnode property)": [[168, "pydicom.fileset.RecordNode.depth"]], "file_set (pydicom.fileset.recordnode property)": [[168, "pydicom.fileset.RecordNode.file_set"]], "has_instance (pydicom.fileset.recordnode property)": [[168, "pydicom.fileset.RecordNode.has_instance"]], "index (pydicom.fileset.recordnode property)": [[168, "pydicom.fileset.RecordNode.index"]], "instance (pydicom.fileset.recordnode attribute)": [[168, "pydicom.fileset.RecordNode.instance"]], "is_root (pydicom.fileset.recordnode property)": [[168, "pydicom.fileset.RecordNode.is_root"]], "key (pydicom.fileset.recordnode property)": [[168, "pydicom.fileset.RecordNode.key"]], "next (pydicom.fileset.recordnode property)": [[168, "pydicom.fileset.RecordNode.next"]], "parent (pydicom.fileset.recordnode property)": [[168, "pydicom.fileset.RecordNode.parent"]], "prettify() (pydicom.fileset.recordnode method)": [[168, "pydicom.fileset.RecordNode.prettify"]], "previous (pydicom.fileset.recordnode property)": [[168, "pydicom.fileset.RecordNode.previous"]], "record_type (pydicom.fileset.recordnode property)": [[168, "pydicom.fileset.RecordNode.record_type"]], "remove() (pydicom.fileset.recordnode method)": [[168, "pydicom.fileset.RecordNode.remove"]], "reverse() (pydicom.fileset.recordnode method)": [[168, "pydicom.fileset.RecordNode.reverse"]], "root (pydicom.fileset.recordnode property)": [[168, "pydicom.fileset.RecordNode.root"]], "generate_filename() (in module pydicom.fileset)": [[169, "pydicom.fileset.generate_filename"]], "is_conformant_file_id() (in module pydicom.fileset)": [[170, "pydicom.fileset.is_conformant_file_id"]], "absorb_delimiter_item() (in module pydicom.fileutil)": [[171, "pydicom.fileutil.absorb_delimiter_item"]], "find_bytes() (in module pydicom.fileutil)": [[172, "pydicom.fileutil.find_bytes"]], "find_delimiter() (in module pydicom.fileutil)": [[173, "pydicom.fileutil.find_delimiter"]], "length_of_undefined_length() (in module pydicom.fileutil)": [[174, "pydicom.fileutil.length_of_undefined_length"]], "read_undefined_length_value() (in module pydicom.fileutil)": [[175, "pydicom.fileutil.read_undefined_length_value"]], "correct_ambiguous_vr() (in module pydicom.filewriter)": [[176, "pydicom.filewriter.correct_ambiguous_vr"]], "correct_ambiguous_vr_element() (in module pydicom.filewriter)": [[177, "pydicom.filewriter.correct_ambiguous_vr_element"]], "dcmwrite() (in module pydicom.filewriter)": [[178, "pydicom.filewriter.dcmwrite"]], "multi_string() (in module pydicom.filewriter)": [[179, "pydicom.filewriter.multi_string"]], "write_atvalue() (in module pydicom.filewriter)": [[180, "pydicom.filewriter.write_ATvalue"]], "write_da() (in module pydicom.filewriter)": [[181, "pydicom.filewriter.write_DA"]], "write_dt() (in module pydicom.filewriter)": [[182, "pydicom.filewriter.write_DT"]], "write_obvalue() (in module pydicom.filewriter)": [[183, "pydicom.filewriter.write_OBvalue"]], "write_owvalue() (in module pydicom.filewriter)": [[184, "pydicom.filewriter.write_OWvalue"]], "write_pn() (in module pydicom.filewriter)": [[185, "pydicom.filewriter.write_PN"]], "write_tm() (in module pydicom.filewriter)": [[186, "pydicom.filewriter.write_TM"]], "write_ui() (in module pydicom.filewriter)": [[187, "pydicom.filewriter.write_UI"]], "write_un() (in module pydicom.filewriter)": [[188, "pydicom.filewriter.write_UN"]], "write_data_element() (in module pydicom.filewriter)": [[189, "pydicom.filewriter.write_data_element"]], "write_dataset() (in module pydicom.filewriter)": [[190, "pydicom.filewriter.write_dataset"]], "write_file_meta_info() (in module pydicom.filewriter)": [[191, "pydicom.filewriter.write_file_meta_info"]], "write_number_string() (in module pydicom.filewriter)": [[192, "pydicom.filewriter.write_number_string"]], "write_numbers() (in module pydicom.filewriter)": [[193, "pydicom.filewriter.write_numbers"]], "write_sequence() (in module pydicom.filewriter)": [[194, "pydicom.filewriter.write_sequence"]], "write_sequence_item() (in module pydicom.filewriter)": [[195, "pydicom.filewriter.write_sequence_item"]], "write_string() (in module pydicom.filewriter)": [[196, "pydicom.filewriter.write_string"]], "write_text() (in module pydicom.filewriter)": [[197, "pydicom.filewriter.write_text"]], "is_dicom() (in module pydicom.misc)": [[198, "pydicom.misc.is_dicom"]], "size_in_bytes() (in module pydicom.misc)": [[199, "pydicom.misc.size_in_bytes"]], "multivalue (class in pydicom.multival)": [[200, "pydicom.multival.MultiValue"]], "__init__() (pydicom.multival.multivalue method)": [[200, "pydicom.multival.MultiValue.__init__"]], "append() (pydicom.multival.multivalue method)": [[200, "pydicom.multival.MultiValue.append"]], "extend() (pydicom.multival.multivalue method)": [[200, "pydicom.multival.MultiValue.extend"]], "insert() (pydicom.multival.multivalue method)": [[200, "pydicom.multival.MultiValue.insert"]], "get_expected_length() (in module pydicom.overlays.numpy_handler)": [[201, "pydicom.overlays.numpy_handler.get_expected_length"]], "get_overlay_array() (in module pydicom.overlays.numpy_handler)": [[201, "pydicom.overlays.numpy_handler.get_overlay_array"]], "is_available() (in module pydicom.overlays.numpy_handler)": [[201, "pydicom.overlays.numpy_handler.is_available"]], "pydicom.overlays.numpy_handler": [[201, "module-pydicom.overlays.numpy_handler"]], "reshape_overlay_array() (in module pydicom.overlays.numpy_handler)": [[201, "pydicom.overlays.numpy_handler.reshape_overlay_array"]], "apply_color_lut() (in module pydicom.pixel_data_handlers)": [[202, "pydicom.pixel_data_handlers.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers)": [[203, "pydicom.pixel_data_handlers.apply_modality_lut"]], "apply_rescale() (in module pydicom.pixel_data_handlers)": [[204, "pydicom.pixel_data_handlers.apply_rescale"]], "apply_voi() (in module pydicom.pixel_data_handlers)": [[205, "pydicom.pixel_data_handlers.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers)": [[206, "pydicom.pixel_data_handlers.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers)": [[207, "pydicom.pixel_data_handlers.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers)": [[208, "pydicom.pixel_data_handlers.convert_color_space"]], "create_data_element() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[209, "pydicom.pixel_data_handlers.gdcm_handler.create_data_element"]], "create_image() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[209, "pydicom.pixel_data_handlers.gdcm_handler.create_image"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[209, "pydicom.pixel_data_handlers.gdcm_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[209, "pydicom.pixel_data_handlers.gdcm_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[209, "pydicom.pixel_data_handlers.gdcm_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.gdcm_handler": [[209, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[209, "pydicom.pixel_data_handlers.gdcm_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[209, "pydicom.pixel_data_handlers.gdcm_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[210, "pydicom.pixel_data_handlers.jpeg_ls_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[210, "pydicom.pixel_data_handlers.jpeg_ls_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[210, "pydicom.pixel_data_handlers.jpeg_ls_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[210, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[210, "pydicom.pixel_data_handlers.jpeg_ls_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[210, "pydicom.pixel_data_handlers.jpeg_ls_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.numpy_handler)": [[211, "pydicom.pixel_data_handlers.numpy_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.numpy_handler)": [[211, "pydicom.pixel_data_handlers.numpy_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[211, "pydicom.pixel_data_handlers.numpy_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.numpy_handler": [[211, "module-pydicom.pixel_data_handlers.numpy_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[211, "pydicom.pixel_data_handlers.numpy_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.numpy_handler)": [[211, "pydicom.pixel_data_handlers.numpy_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pillow_handler)": [[212, "pydicom.pixel_data_handlers.pillow_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pillow_handler)": [[212, "pydicom.pixel_data_handlers.pillow_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[212, "pydicom.pixel_data_handlers.pillow_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pillow_handler": [[212, "module-pydicom.pixel_data_handlers.pillow_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[212, "pydicom.pixel_data_handlers.pillow_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pillow_handler)": [[212, "pydicom.pixel_data_handlers.pillow_handler.supports_transfer_syntax"]], "as_array() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[213, "pydicom.pixel_data_handlers.pylibjpeg_handler.as_array"]], "generate_frames() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[213, "pydicom.pixel_data_handlers.pylibjpeg_handler.generate_frames"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[213, "pydicom.pixel_data_handlers.pylibjpeg_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[213, "pydicom.pixel_data_handlers.pylibjpeg_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[213, "pydicom.pixel_data_handlers.pylibjpeg_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[213, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[213, "pydicom.pixel_data_handlers.pylibjpeg_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[213, "pydicom.pixel_data_handlers.pylibjpeg_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.rle_handler)": [[214, "pydicom.pixel_data_handlers.rle_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.rle_handler)": [[214, "pydicom.pixel_data_handlers.rle_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[214, "pydicom.pixel_data_handlers.rle_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.rle_handler": [[214, "module-pydicom.pixel_data_handlers.rle_handler"]], "rle_encode_frame() (in module pydicom.pixel_data_handlers.rle_handler)": [[214, "pydicom.pixel_data_handlers.rle_handler.rle_encode_frame"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[214, "pydicom.pixel_data_handlers.rle_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.rle_handler)": [[214, "pydicom.pixel_data_handlers.rle_handler.supports_transfer_syntax"]], "apply_color_lut() (in module pydicom.pixel_data_handlers.util)": [[215, "pydicom.pixel_data_handlers.util.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers.util)": [[215, "pydicom.pixel_data_handlers.util.apply_modality_lut"]], "apply_voi() (in module pydicom.pixel_data_handlers.util)": [[215, "pydicom.pixel_data_handlers.util.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers.util)": [[215, "pydicom.pixel_data_handlers.util.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers.util)": [[215, "pydicom.pixel_data_handlers.util.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers.util)": [[215, "pydicom.pixel_data_handlers.util.convert_color_space"]], "dtype_corrected_for_endianness() (in module pydicom.pixel_data_handlers.util)": [[215, "pydicom.pixel_data_handlers.util.dtype_corrected_for_endianness"]], "expand_ybr422() (in module pydicom.pixel_data_handlers.util)": [[215, "pydicom.pixel_data_handlers.util.expand_ybr422"]], "get_expected_length() (in module pydicom.pixel_data_handlers.util)": [[215, "pydicom.pixel_data_handlers.util.get_expected_length"]], "get_image_pixel_ids() (in module pydicom.pixel_data_handlers.util)": [[215, "pydicom.pixel_data_handlers.util.get_image_pixel_ids"]], "get_j2k_parameters() (in module pydicom.pixel_data_handlers.util)": [[215, "pydicom.pixel_data_handlers.util.get_j2k_parameters"]], "get_nr_frames() (in module pydicom.pixel_data_handlers.util)": [[215, "pydicom.pixel_data_handlers.util.get_nr_frames"]], "pack_bits() (in module pydicom.pixel_data_handlers.util)": [[215, "pydicom.pixel_data_handlers.util.pack_bits"]], "pixel_dtype() (in module pydicom.pixel_data_handlers.util)": [[215, "pydicom.pixel_data_handlers.util.pixel_dtype"]], "pydicom.pixel_data_handlers.util": [[215, "module-pydicom.pixel_data_handlers.util"]], "reshape_pixel_array() (in module pydicom.pixel_data_handlers.util)": [[215, "pydicom.pixel_data_handlers.util.reshape_pixel_array"]], "unpack_bits() (in module pydicom.pixel_data_handlers.util)": [[215, "pydicom.pixel_data_handlers.util.unpack_bits"]], "sequence (class in pydicom.sequence)": [[216, "pydicom.sequence.Sequence"]], "__init__() (pydicom.sequence.sequence method)": [[216, "pydicom.sequence.Sequence.__init__"]], "append() (pydicom.sequence.sequence method)": [[216, "pydicom.sequence.Sequence.append"]], "extend() (pydicom.sequence.sequence method)": [[216, "pydicom.sequence.Sequence.extend"]], "insert() (pydicom.sequence.sequence method)": [[216, "pydicom.sequence.Sequence.insert"]], "parent (pydicom.sequence.sequence property)": [[216, "pydicom.sequence.Sequence.parent"]], "parent_dataset (pydicom.sequence.sequence property)": [[216, "pydicom.sequence.Sequence.parent_dataset"]], "validate_dataset() (in module pydicom.sequence)": [[217, "pydicom.sequence.validate_dataset"]], "basetag (class in pydicom.tag)": [[218, "pydicom.tag.BaseTag"]], "__init__() (pydicom.tag.basetag method)": [[218, "pydicom.tag.BaseTag.__init__"]], "elem (pydicom.tag.basetag property)": [[218, "pydicom.tag.BaseTag.elem"]], "element (pydicom.tag.basetag property)": [[218, "pydicom.tag.BaseTag.element"]], "group (pydicom.tag.basetag property)": [[218, "pydicom.tag.BaseTag.group"]], "is_private (pydicom.tag.basetag property)": [[218, "pydicom.tag.BaseTag.is_private"]], "is_private_creator (pydicom.tag.basetag property)": [[218, "pydicom.tag.BaseTag.is_private_creator"]], "json_key (pydicom.tag.basetag property)": [[218, "pydicom.tag.BaseTag.json_key"]], "private_creator (pydicom.tag.basetag property)": [[218, "pydicom.tag.BaseTag.private_creator"]], "tag() (in module pydicom.tag)": [[219, "pydicom.tag.Tag"]], "tupletag() (in module pydicom.tag)": [[220, "pydicom.tag.TupleTag"]], "tag_in_exception() (in module pydicom.tag)": [[221, "pydicom.tag.tag_in_exception"]], "acquisitioncontextsrstorage (in module pydicom.uid)": [[222, "pydicom.uid.AcquisitionContextSRStorage"]], "advancedblendingpresentationstatestorage (in module pydicom.uid)": [[223, "pydicom.uid.AdvancedBlendingPresentationStateStorage"]], "alltransfersyntaxes (in module pydicom.uid)": [[224, "pydicom.uid.AllTransferSyntaxes"]], "ambulatoryecgwaveformstorage (in module pydicom.uid)": [[225, "pydicom.uid.AmbulatoryECGWaveformStorage"]], "arterialpulsewaveformstorage (in module pydicom.uid)": [[226, "pydicom.uid.ArterialPulseWaveformStorage"]], "autorefractionmeasurementsstorage (in module pydicom.uid)": [[227, "pydicom.uid.AutorefractionMeasurementsStorage"]], "basicstructureddisplaystorage (in module pydicom.uid)": [[228, "pydicom.uid.BasicStructuredDisplayStorage"]], "basictextsrstorage (in module pydicom.uid)": [[229, "pydicom.uid.BasicTextSRStorage"]], "basicvoiceaudiowaveformstorage (in module pydicom.uid)": [[230, "pydicom.uid.BasicVoiceAudioWaveformStorage"]], "blendingsoftcopypresentationstatestorage (in module pydicom.uid)": [[231, "pydicom.uid.BlendingSoftcopyPresentationStateStorage"]], "bodypositionwaveformstorage (in module pydicom.uid)": [[232, "pydicom.uid.BodyPositionWaveformStorage"]], "breastprojectionxrayimagestorageforpresentation (in module pydicom.uid)": [[233, "pydicom.uid.BreastProjectionXRayImageStorageForPresentation"]], "breastprojectionxrayimagestorageforprocessing (in module pydicom.uid)": [[234, "pydicom.uid.BreastProjectionXRayImageStorageForProcessing"]], "breasttomosynthesisimagestorage (in module pydicom.uid)": [[235, "pydicom.uid.BreastTomosynthesisImageStorage"]], "carmphotonelectronradiationrecordstorage (in module pydicom.uid)": [[236, "pydicom.uid.CArmPhotonElectronRadiationRecordStorage"]], "carmphotonelectronradiationstorage (in module pydicom.uid)": [[237, "pydicom.uid.CArmPhotonElectronRadiationStorage"]], "ctdefinedprocedureprotocolstorage (in module pydicom.uid)": [[238, "pydicom.uid.CTDefinedProcedureProtocolStorage"]], "ctimagestorage (in module pydicom.uid)": [[239, "pydicom.uid.CTImageStorage"]], "ctperformedprocedureprotocolstorage (in module pydicom.uid)": [[240, "pydicom.uid.CTPerformedProcedureProtocolStorage"]], "cardiacelectrophysiologywaveformstorage (in module pydicom.uid)": [[241, "pydicom.uid.CardiacElectrophysiologyWaveformStorage"]], "chestcadsrstorage (in module pydicom.uid)": [[242, "pydicom.uid.ChestCADSRStorage"]], "coloncadsrstorage (in module pydicom.uid)": [[243, "pydicom.uid.ColonCADSRStorage"]], "colorpalettestorage (in module pydicom.uid)": [[244, "pydicom.uid.ColorPaletteStorage"]], "colorsoftcopypresentationstatestorage (in module pydicom.uid)": [[245, "pydicom.uid.ColorSoftcopyPresentationStateStorage"]], "compositingplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[246, "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage"]], "comprehensive3dsrstorage (in module pydicom.uid)": [[247, "pydicom.uid.Comprehensive3DSRStorage"]], "comprehensivesrstorage (in module pydicom.uid)": [[248, "pydicom.uid.ComprehensiveSRStorage"]], "computedradiographyimagestorage (in module pydicom.uid)": [[249, "pydicom.uid.ComputedRadiographyImageStorage"]], "contentassessmentresultsstorage (in module pydicom.uid)": [[250, "pydicom.uid.ContentAssessmentResultsStorage"]], "cornealtopographymapstorage (in module pydicom.uid)": [[251, "pydicom.uid.CornealTopographyMapStorage"]], "dicos2daitstorage (in module pydicom.uid)": [[252, "pydicom.uid.DICOS2DAITStorage"]], "dicos3daitstorage (in module pydicom.uid)": [[253, "pydicom.uid.DICOS3DAITStorage"]], "dicosctimagestorage (in module pydicom.uid)": [[254, "pydicom.uid.DICOSCTImageStorage"]], "dicosdigitalxrayimagestorageforpresentation (in module pydicom.uid)": [[255, "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation"]], "dicosdigitalxrayimagestorageforprocessing (in module pydicom.uid)": [[256, "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing"]], "dicosquadrupoleresonancestorage (in module pydicom.uid)": [[257, "pydicom.uid.DICOSQuadrupoleResonanceStorage"]], "dicosthreatdetectionreportstorage (in module pydicom.uid)": [[258, "pydicom.uid.DICOSThreatDetectionReportStorage"]], "deflatedexplicitvrlittleendian (in module pydicom.uid)": [[259, "pydicom.uid.DeflatedExplicitVRLittleEndian"]], "deformablespatialregistrationstorage (in module pydicom.uid)": [[260, "pydicom.uid.DeformableSpatialRegistrationStorage"]], "dermoscopicphotographyimagestorage (in module pydicom.uid)": [[261, "pydicom.uid.DermoscopicPhotographyImageStorage"]], "digitalintraoralxrayimagestorageforpresentation (in module pydicom.uid)": [[262, "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation"]], "digitalintraoralxrayimagestorageforprocessing (in module pydicom.uid)": [[263, "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing"]], "digitalmammographyxrayimagestorageforpresentation (in module pydicom.uid)": [[264, "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation"]], "digitalmammographyxrayimagestorageforprocessing (in module pydicom.uid)": [[265, "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing"]], "digitalxrayimagestorageforpresentation (in module pydicom.uid)": [[266, "pydicom.uid.DigitalXRayImageStorageForPresentation"]], "digitalxrayimagestorageforprocessing (in module pydicom.uid)": [[267, "pydicom.uid.DigitalXRayImageStorageForProcessing"]], "eddycurrentimagestorage (in module pydicom.uid)": [[268, "pydicom.uid.EddyCurrentImageStorage"]], "eddycurrentmultiframeimagestorage (in module pydicom.uid)": [[269, "pydicom.uid.EddyCurrentMultiFrameImageStorage"]], "electromyogramwaveformstorage (in module pydicom.uid)": [[270, "pydicom.uid.ElectromyogramWaveformStorage"]], "electrooculogramwaveformstorage (in module pydicom.uid)": [[271, "pydicom.uid.ElectrooculogramWaveformStorage"]], "encapsulatedcdastorage (in module pydicom.uid)": [[272, "pydicom.uid.EncapsulatedCDAStorage"]], "encapsulatedmtlstorage (in module pydicom.uid)": [[273, "pydicom.uid.EncapsulatedMTLStorage"]], "encapsulatedobjstorage (in module pydicom.uid)": [[274, "pydicom.uid.EncapsulatedOBJStorage"]], "encapsulatedpdfstorage (in module pydicom.uid)": [[275, "pydicom.uid.EncapsulatedPDFStorage"]], "encapsulatedstlstorage (in module pydicom.uid)": [[276, "pydicom.uid.EncapsulatedSTLStorage"]], "enhancedctimagestorage (in module pydicom.uid)": [[277, "pydicom.uid.EnhancedCTImageStorage"]], "enhancedmrcolorimagestorage (in module pydicom.uid)": [[278, "pydicom.uid.EnhancedMRColorImageStorage"]], "enhancedmrimagestorage (in module pydicom.uid)": [[279, "pydicom.uid.EnhancedMRImageStorage"]], "enhancedpetimagestorage (in module pydicom.uid)": [[280, "pydicom.uid.EnhancedPETImageStorage"]], "enhancedsrstorage (in module pydicom.uid)": [[281, "pydicom.uid.EnhancedSRStorage"]], "enhancedusvolumestorage (in module pydicom.uid)": [[282, "pydicom.uid.EnhancedUSVolumeStorage"]], "enhancedxaimagestorage (in module pydicom.uid)": [[283, "pydicom.uid.EnhancedXAImageStorage"]], "enhancedxrfimagestorage (in module pydicom.uid)": [[284, "pydicom.uid.EnhancedXRFImageStorage"]], "enhancedxrayradiationdosesrstorage (in module pydicom.uid)": [[285, "pydicom.uid.EnhancedXRayRadiationDoseSRStorage"]], "explicitvrbigendian (in module pydicom.uid)": [[286, "pydicom.uid.ExplicitVRBigEndian"]], "explicitvrlittleendian (in module pydicom.uid)": [[287, "pydicom.uid.ExplicitVRLittleEndian"]], "extensiblesrstorage (in module pydicom.uid)": [[288, "pydicom.uid.ExtensibleSRStorage"]], "generalaudiowaveformstorage (in module pydicom.uid)": [[289, "pydicom.uid.GeneralAudioWaveformStorage"]], "generalecgwaveformstorage (in module pydicom.uid)": [[290, "pydicom.uid.GeneralECGWaveformStorage"]], "genericimplanttemplatestorage (in module pydicom.uid)": [[291, "pydicom.uid.GenericImplantTemplateStorage"]], "grayscaleplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[292, "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage"]], "grayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[293, "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage"]], "hevcm10p51 (in module pydicom.uid)": [[294, "pydicom.uid.HEVCM10P51"]], "hevcmp51 (in module pydicom.uid)": [[295, "pydicom.uid.HEVCMP51"]], "hangingprotocolstorage (in module pydicom.uid)": [[296, "pydicom.uid.HangingProtocolStorage"]], "hemodynamicwaveformstorage (in module pydicom.uid)": [[297, "pydicom.uid.HemodynamicWaveformStorage"]], "implantassemblytemplatestorage (in module pydicom.uid)": [[298, "pydicom.uid.ImplantAssemblyTemplateStorage"]], "implanttemplategroupstorage (in module pydicom.uid)": [[299, "pydicom.uid.ImplantTemplateGroupStorage"]], "implantationplansrstorage (in module pydicom.uid)": [[300, "pydicom.uid.ImplantationPlanSRStorage"]], "implicitvrlittleendian (in module pydicom.uid)": [[301, "pydicom.uid.ImplicitVRLittleEndian"]], "intraocularlenscalculationsstorage (in module pydicom.uid)": [[302, "pydicom.uid.IntraocularLensCalculationsStorage"]], "intravascularopticalcoherencetomographyimagestorageforpresentation (in module pydicom.uid)": [[303, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation"]], "intravascularopticalcoherencetomographyimagestorageforprocessing (in module pydicom.uid)": [[304, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing"]], "jpeg2000 (in module pydicom.uid)": [[305, "pydicom.uid.JPEG2000"]], "jpeg2000lossless (in module pydicom.uid)": [[306, "pydicom.uid.JPEG2000Lossless"]], "jpeg2000mc (in module pydicom.uid)": [[307, "pydicom.uid.JPEG2000MC"]], "jpeg2000mclossless (in module pydicom.uid)": [[308, "pydicom.uid.JPEG2000MCLossless"]], "jpeg2000transfersyntaxes (in module pydicom.uid)": [[309, "pydicom.uid.JPEG2000TransferSyntaxes"]], "jpegbaseline8bit (in module pydicom.uid)": [[310, "pydicom.uid.JPEGBaseline8Bit"]], "jpegextended12bit (in module pydicom.uid)": [[311, "pydicom.uid.JPEGExtended12Bit"]], "jpeglslossless (in module pydicom.uid)": [[312, "pydicom.uid.JPEGLSLossless"]], "jpeglsnearlossless (in module pydicom.uid)": [[313, "pydicom.uid.JPEGLSNearLossless"]], "jpeglstransfersyntaxes (in module pydicom.uid)": [[314, "pydicom.uid.JPEGLSTransferSyntaxes"]], "jpeglosslessp14 (in module pydicom.uid)": [[315, "pydicom.uid.JPEGLosslessP14"]], "jpeglosslesssv1 (in module pydicom.uid)": [[316, "pydicom.uid.JPEGLosslessSV1"]], "jpegtransfersyntaxes (in module pydicom.uid)": [[317, "pydicom.uid.JPEGTransferSyntaxes"]], "keratometrymeasurementsstorage (in module pydicom.uid)": [[318, "pydicom.uid.KeratometryMeasurementsStorage"]], "keyobjectselectiondocumentstorage (in module pydicom.uid)": [[319, "pydicom.uid.KeyObjectSelectionDocumentStorage"]], "legacyconvertedenhancedctimagestorage (in module pydicom.uid)": [[320, "pydicom.uid.LegacyConvertedEnhancedCTImageStorage"]], "legacyconvertedenhancedmrimagestorage (in module pydicom.uid)": [[321, "pydicom.uid.LegacyConvertedEnhancedMRImageStorage"]], "legacyconvertedenhancedpetimagestorage (in module pydicom.uid)": [[322, "pydicom.uid.LegacyConvertedEnhancedPETImageStorage"]], "lensometrymeasurementsstorage (in module pydicom.uid)": [[323, "pydicom.uid.LensometryMeasurementsStorage"]], "mpeg2mphl (in module pydicom.uid)": [[324, "pydicom.uid.MPEG2MPHL"]], "mpeg2mpml (in module pydicom.uid)": [[325, "pydicom.uid.MPEG2MPML"]], "mpeg4hp41 (in module pydicom.uid)": [[326, "pydicom.uid.MPEG4HP41"]], "mpeg4hp41bd (in module pydicom.uid)": [[327, "pydicom.uid.MPEG4HP41BD"]], "mpeg4hp422d (in module pydicom.uid)": [[328, "pydicom.uid.MPEG4HP422D"]], "mpeg4hp423d (in module pydicom.uid)": [[329, "pydicom.uid.MPEG4HP423D"]], "mpeg4hp42stereo (in module pydicom.uid)": [[330, "pydicom.uid.MPEG4HP42STEREO"]], "mpegtransfersyntaxes (in module pydicom.uid)": [[331, "pydicom.uid.MPEGTransferSyntaxes"]], "mrimagestorage (in module pydicom.uid)": [[332, "pydicom.uid.MRImageStorage"]], "mrspectroscopystorage (in module pydicom.uid)": [[333, "pydicom.uid.MRSpectroscopyStorage"]], "maculargridthicknessandvolumereportstorage (in module pydicom.uid)": [[334, "pydicom.uid.MacularGridThicknessAndVolumeReportStorage"]], "mammographycadsrstorage (in module pydicom.uid)": [[335, "pydicom.uid.MammographyCADSRStorage"]], "mediastoragedirectorystorage (in module pydicom.uid)": [[336, "pydicom.uid.MediaStorageDirectoryStorage"]], "microscopybulksimpleannotationsstorage (in module pydicom.uid)": [[337, "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage"]], "multiframegrayscalebytesecondarycaptureimagestorage (in module pydicom.uid)": [[338, "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage"]], "multiframegrayscalewordsecondarycaptureimagestorage (in module pydicom.uid)": [[339, "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage"]], "multiframesinglebitsecondarycaptureimagestorage (in module pydicom.uid)": [[340, "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage"]], "multiframetruecolorsecondarycaptureimagestorage (in module pydicom.uid)": [[341, "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage"]], "multichannelrespiratorywaveformstorage (in module pydicom.uid)": [[342, "pydicom.uid.MultichannelRespiratoryWaveformStorage"]], "multiplevolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[343, "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage"]], "nuclearmedicineimagestorage (in module pydicom.uid)": [[344, "pydicom.uid.NuclearMedicineImageStorage"]], "ophthalmicaxialmeasurementsstorage (in module pydicom.uid)": [[345, "pydicom.uid.OphthalmicAxialMeasurementsStorage"]], "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage (in module pydicom.uid)": [[346, "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"]], "ophthalmicopticalcoherencetomographyenfaceimagestorage (in module pydicom.uid)": [[347, "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"]], "ophthalmicphotography16bitimagestorage (in module pydicom.uid)": [[348, "pydicom.uid.OphthalmicPhotography16BitImageStorage"]], "ophthalmicphotography8bitimagestorage (in module pydicom.uid)": [[349, "pydicom.uid.OphthalmicPhotography8BitImageStorage"]], "ophthalmicthicknessmapstorage (in module pydicom.uid)": [[350, "pydicom.uid.OphthalmicThicknessMapStorage"]], "ophthalmictomographyimagestorage (in module pydicom.uid)": [[351, "pydicom.uid.OphthalmicTomographyImageStorage"]], "ophthalmicvisualfieldstaticperimetrymeasurementsstorage (in module pydicom.uid)": [[352, "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"]], "pydicom_implementation_uid (in module pydicom.uid)": [[353, "pydicom.uid.PYDICOM_IMPLEMENTATION_UID"]], "pydicom_root_uid (in module pydicom.uid)": [[354, "pydicom.uid.PYDICOM_ROOT_UID"]], "parametricmapstorage (in module pydicom.uid)": [[355, "pydicom.uid.ParametricMapStorage"]], "patientradiationdosesrstorage (in module pydicom.uid)": [[356, "pydicom.uid.PatientRadiationDoseSRStorage"]], "performedimagingagentadministrationsrstorage (in module pydicom.uid)": [[357, "pydicom.uid.PerformedImagingAgentAdministrationSRStorage"]], "plannedimagingagentadministrationsrstorage (in module pydicom.uid)": [[358, "pydicom.uid.PlannedImagingAgentAdministrationSRStorage"]], "positronemissiontomographyimagestorage (in module pydicom.uid)": [[359, "pydicom.uid.PositronEmissionTomographyImageStorage"]], "procedurelogstorage (in module pydicom.uid)": [[360, "pydicom.uid.ProcedureLogStorage"]], "protocolapprovalstorage (in module pydicom.uid)": [[361, "pydicom.uid.ProtocolApprovalStorage"]], "pseudocolorsoftcopypresentationstatestorage (in module pydicom.uid)": [[362, "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage"]], "re_valid_uid (in module pydicom.uid)": [[363, "pydicom.uid.RE_VALID_UID"]], "re_valid_uid_prefix (in module pydicom.uid)": [[364, "pydicom.uid.RE_VALID_UID_PREFIX"]], "rlelossless (in module pydicom.uid)": [[365, "pydicom.uid.RLELossless"]], "rletransfersyntaxes (in module pydicom.uid)": [[366, "pydicom.uid.RLETransferSyntaxes"]], "rtbeamsdeliveryinstructionstorage (in module pydicom.uid)": [[367, "pydicom.uid.RTBeamsDeliveryInstructionStorage"]], "rtbeamstreatmentrecordstorage (in module pydicom.uid)": [[368, "pydicom.uid.RTBeamsTreatmentRecordStorage"]], "rtbrachyapplicationsetupdeliveryinstructionstorage (in module pydicom.uid)": [[369, "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage"]], "rtbrachytreatmentrecordstorage (in module pydicom.uid)": [[370, "pydicom.uid.RTBrachyTreatmentRecordStorage"]], "rtdosestorage (in module pydicom.uid)": [[371, "pydicom.uid.RTDoseStorage"]], "rtimagestorage (in module pydicom.uid)": [[372, "pydicom.uid.RTImageStorage"]], "rtionbeamstreatmentrecordstorage (in module pydicom.uid)": [[373, "pydicom.uid.RTIonBeamsTreatmentRecordStorage"]], "rtionplanstorage (in module pydicom.uid)": [[374, "pydicom.uid.RTIonPlanStorage"]], "rtphysicianintentstorage (in module pydicom.uid)": [[375, "pydicom.uid.RTPhysicianIntentStorage"]], "rtplanstorage (in module pydicom.uid)": [[376, "pydicom.uid.RTPlanStorage"]], "rtradiationrecordsetstorage (in module pydicom.uid)": [[377, "pydicom.uid.RTRadiationRecordSetStorage"]], "rtradiationsalvagerecordstorage (in module pydicom.uid)": [[378, "pydicom.uid.RTRadiationSalvageRecordStorage"]], "rtradiationsetdeliveryinstructionstorage (in module pydicom.uid)": [[379, "pydicom.uid.RTRadiationSetDeliveryInstructionStorage"]], "rtradiationsetstorage (in module pydicom.uid)": [[380, "pydicom.uid.RTRadiationSetStorage"]], "rtsegmentannotationstorage (in module pydicom.uid)": [[381, "pydicom.uid.RTSegmentAnnotationStorage"]], "rtstructuresetstorage (in module pydicom.uid)": [[382, "pydicom.uid.RTStructureSetStorage"]], "rttreatmentpreparationstorage (in module pydicom.uid)": [[383, "pydicom.uid.RTTreatmentPreparationStorage"]], "rttreatmentsummaryrecordstorage (in module pydicom.uid)": [[384, "pydicom.uid.RTTreatmentSummaryRecordStorage"]], "radiopharmaceuticalradiationdosesrstorage (in module pydicom.uid)": [[385, "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage"]], "rawdatastorage (in module pydicom.uid)": [[386, "pydicom.uid.RawDataStorage"]], "realworldvaluemappingstorage (in module pydicom.uid)": [[387, "pydicom.uid.RealWorldValueMappingStorage"]], "respiratorywaveformstorage (in module pydicom.uid)": [[388, "pydicom.uid.RespiratoryWaveformStorage"]], "roboticarmradiationstorage (in module pydicom.uid)": [[389, "pydicom.uid.RoboticArmRadiationStorage"]], "roboticradiationrecordstorage (in module pydicom.uid)": [[390, "pydicom.uid.RoboticRadiationRecordStorage"]], "routinescalpelectroencephalogramwaveformstorage (in module pydicom.uid)": [[391, "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage"]], "secondarycaptureimagestorage (in module pydicom.uid)": [[392, "pydicom.uid.SecondaryCaptureImageStorage"]], "segmentationstorage (in module pydicom.uid)": [[393, "pydicom.uid.SegmentationStorage"]], "segmentedvolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[394, "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage"]], "simplifiedadultechosrstorage (in module pydicom.uid)": [[395, "pydicom.uid.SimplifiedAdultEchoSRStorage"]], "sleepelectroencephalogramwaveformstorage (in module pydicom.uid)": [[396, "pydicom.uid.SleepElectroencephalogramWaveformStorage"]], "spatialfiducialsstorage (in module pydicom.uid)": [[397, "pydicom.uid.SpatialFiducialsStorage"]], "spatialregistrationstorage (in module pydicom.uid)": [[398, "pydicom.uid.SpatialRegistrationStorage"]], "spectacleprescriptionreportstorage (in module pydicom.uid)": [[399, "pydicom.uid.SpectaclePrescriptionReportStorage"]], "stereometricrelationshipstorage (in module pydicom.uid)": [[400, "pydicom.uid.StereometricRelationshipStorage"]], "subjectiverefractionmeasurementsstorage (in module pydicom.uid)": [[401, "pydicom.uid.SubjectiveRefractionMeasurementsStorage"]], "surfacescanmeshstorage (in module pydicom.uid)": [[402, "pydicom.uid.SurfaceScanMeshStorage"]], "surfacescanpointcloudstorage (in module pydicom.uid)": [[403, "pydicom.uid.SurfaceScanPointCloudStorage"]], "surfacesegmentationstorage (in module pydicom.uid)": [[404, "pydicom.uid.SurfaceSegmentationStorage"]], "tomotherapeuticradiationrecordstorage (in module pydicom.uid)": [[405, "pydicom.uid.TomotherapeuticRadiationRecordStorage"]], "tomotherapeuticradiationstorage (in module pydicom.uid)": [[406, "pydicom.uid.TomotherapeuticRadiationStorage"]], "tractographyresultsstorage (in module pydicom.uid)": [[407, "pydicom.uid.TractographyResultsStorage"]], "twelveleadecgwaveformstorage (in module pydicom.uid)": [[408, "pydicom.uid.TwelveLeadECGWaveformStorage"]], "uid (class in pydicom.uid)": [[409, "pydicom.uid.UID"]], "__init__() (pydicom.uid.uid method)": [[409, "pydicom.uid.UID.__init__"]], "info (pydicom.uid.uid property)": [[409, "pydicom.uid.UID.info"]], "is_compressed (pydicom.uid.uid property)": [[409, "pydicom.uid.UID.is_compressed"]], "is_deflated (pydicom.uid.uid property)": [[409, "pydicom.uid.UID.is_deflated"]], "is_encapsulated (pydicom.uid.uid property)": [[409, "pydicom.uid.UID.is_encapsulated"]], "is_implicit_vr (pydicom.uid.uid property)": [[409, "pydicom.uid.UID.is_implicit_VR"]], "is_little_endian (pydicom.uid.uid property)": [[409, "pydicom.uid.UID.is_little_endian"]], "is_private (pydicom.uid.uid property)": [[409, "pydicom.uid.UID.is_private"]], "is_retired (pydicom.uid.uid property)": [[409, "pydicom.uid.UID.is_retired"]], "is_transfer_syntax (pydicom.uid.uid property)": [[409, "pydicom.uid.UID.is_transfer_syntax"]], "is_valid (pydicom.uid.uid property)": [[409, "pydicom.uid.UID.is_valid"]], "keyword (pydicom.uid.uid property)": [[409, "pydicom.uid.UID.keyword"]], "name (pydicom.uid.uid property)": [[409, "pydicom.uid.UID.name"]], "type (pydicom.uid.uid property)": [[409, "pydicom.uid.UID.type"]], "ultrasoundimagestorage (in module pydicom.uid)": [[410, "pydicom.uid.UltrasoundImageStorage"]], "ultrasoundmultiframeimagestorage (in module pydicom.uid)": [[411, "pydicom.uid.UltrasoundMultiFrameImageStorage"]], "uncompressedtransfersyntaxes (in module pydicom.uid)": [[412, "pydicom.uid.UncompressedTransferSyntaxes"]], "vlendoscopicimagestorage (in module pydicom.uid)": [[413, "pydicom.uid.VLEndoscopicImageStorage"]], "vlmicroscopicimagestorage (in module pydicom.uid)": [[414, "pydicom.uid.VLMicroscopicImageStorage"]], "vlphotographicimagestorage (in module pydicom.uid)": [[415, "pydicom.uid.VLPhotographicImageStorage"]], "vlslidecoordinatesmicroscopicimagestorage (in module pydicom.uid)": [[416, "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage"]], "vlwholeslidemicroscopyimagestorage (in module pydicom.uid)": [[417, "pydicom.uid.VLWholeSlideMicroscopyImageStorage"]], "videoendoscopicimagestorage (in module pydicom.uid)": [[418, "pydicom.uid.VideoEndoscopicImageStorage"]], "videomicroscopicimagestorage (in module pydicom.uid)": [[419, "pydicom.uid.VideoMicroscopicImageStorage"]], "videophotographicimagestorage (in module pydicom.uid)": [[420, "pydicom.uid.VideoPhotographicImageStorage"]], "visualacuitymeasurementsstorage (in module pydicom.uid)": [[421, "pydicom.uid.VisualAcuityMeasurementsStorage"]], "volumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[422, "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage"]], "widefieldophthalmicphotography3dcoordinatesimagestorage (in module pydicom.uid)": [[423, "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage"]], "widefieldophthalmicphotographystereographicprojectionimagestorage (in module pydicom.uid)": [[424, "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"]], "xadefinedprocedureprotocolstorage (in module pydicom.uid)": [[425, "pydicom.uid.XADefinedProcedureProtocolStorage"]], "xaperformedprocedureprotocolstorage (in module pydicom.uid)": [[426, "pydicom.uid.XAPerformedProcedureProtocolStorage"]], "xaxrfgrayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[427, "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage"]], "xray3dangiographicimagestorage (in module pydicom.uid)": [[428, "pydicom.uid.XRay3DAngiographicImageStorage"]], "xray3dcraniofacialimagestorage (in module pydicom.uid)": [[429, "pydicom.uid.XRay3DCraniofacialImageStorage"]], "xrayangiographicimagestorage (in module pydicom.uid)": [[430, "pydicom.uid.XRayAngiographicImageStorage"]], "xrayradiationdosesrstorage (in module pydicom.uid)": [[431, "pydicom.uid.XRayRadiationDoseSRStorage"]], "xrayradiofluoroscopicimagestorage (in module pydicom.uid)": [[432, "pydicom.uid.XRayRadiofluoroscopicImageStorage"]], "generate_uid() (in module pydicom.uid)": [[433, "pydicom.uid.generate_uid"]], "da (class in pydicom.valuerep)": [[434, "pydicom.valuerep.DA"]], "__init__() (pydicom.valuerep.da method)": [[434, "pydicom.valuerep.DA.__init__"]], "ds() (in module pydicom.valuerep)": [[435, "pydicom.valuerep.DS"]], "dsdecimal (class in pydicom.valuerep)": [[436, "pydicom.valuerep.DSdecimal"]], "__init__() (pydicom.valuerep.dsdecimal method)": [[436, "pydicom.valuerep.DSdecimal.__init__"]], "dsfloat (class in pydicom.valuerep)": [[437, "pydicom.valuerep.DSfloat"]], "__init__() (pydicom.valuerep.dsfloat method)": [[437, "pydicom.valuerep.DSfloat.__init__"]], "dt (class in pydicom.valuerep)": [[438, "pydicom.valuerep.DT"]], "__init__() (pydicom.valuerep.dt method)": [[438, "pydicom.valuerep.DT.__init__"]], "is (class in pydicom.valuerep)": [[439, "pydicom.valuerep.IS"]], "__init__() (pydicom.valuerep.is method)": [[439, "pydicom.valuerep.IS.__init__"]], "isfloat (class in pydicom.valuerep)": [[440, "pydicom.valuerep.ISfloat"]], "__init__() (pydicom.valuerep.isfloat method)": [[440, "pydicom.valuerep.ISfloat.__init__"]], "multistring() (in module pydicom.valuerep)": [[441, "pydicom.valuerep.MultiString"]], "personname (class in pydicom.valuerep)": [[442, "pydicom.valuerep.PersonName"]], "__init__() (pydicom.valuerep.personname method)": [[442, "pydicom.valuerep.PersonName.__init__"]], "alphabetic (pydicom.valuerep.personname property)": [[442, "pydicom.valuerep.PersonName.alphabetic"]], "components (pydicom.valuerep.personname property)": [[442, "pydicom.valuerep.PersonName.components"]], "decode() (pydicom.valuerep.personname method)": [[442, "pydicom.valuerep.PersonName.decode"]], "encode() (pydicom.valuerep.personname method)": [[442, "pydicom.valuerep.PersonName.encode"]], "family_comma_given() (pydicom.valuerep.personname method)": [[442, "pydicom.valuerep.PersonName.family_comma_given"]], "family_name (pydicom.valuerep.personname property)": [[442, "pydicom.valuerep.PersonName.family_name"]], "formatted() (pydicom.valuerep.personname method)": [[442, "pydicom.valuerep.PersonName.formatted"]], "from_named_components() (pydicom.valuerep.personname class method)": [[442, "pydicom.valuerep.PersonName.from_named_components"]], "from_named_components_veterinary() (pydicom.valuerep.personname class method)": [[442, "pydicom.valuerep.PersonName.from_named_components_veterinary"]], "given_name (pydicom.valuerep.personname property)": [[442, "pydicom.valuerep.PersonName.given_name"]], "ideographic (pydicom.valuerep.personname property)": [[442, "pydicom.valuerep.PersonName.ideographic"]], "middle_name (pydicom.valuerep.personname property)": [[442, "pydicom.valuerep.PersonName.middle_name"]], "name_prefix (pydicom.valuerep.personname property)": [[442, "pydicom.valuerep.PersonName.name_prefix"]], "name_suffix (pydicom.valuerep.personname property)": [[442, "pydicom.valuerep.PersonName.name_suffix"]], "phonetic (pydicom.valuerep.personname property)": [[442, "pydicom.valuerep.PersonName.phonetic"]], "personnameunicode (in module pydicom.valuerep)": [[443, "pydicom.valuerep.PersonNameUnicode"]], "tm (class in pydicom.valuerep)": [[444, "pydicom.valuerep.TM"]], "__init__() (pydicom.valuerep.tm method)": [[444, "pydicom.valuerep.TM.__init__"]], "vr (class in pydicom.valuerep)": [[445, "pydicom.valuerep.VR"]], "__init__() (pydicom.valuerep.vr method)": [[445, "pydicom.valuerep.VR.__init__"]], "format_number_as_ds() (in module pydicom.valuerep)": [[446, "pydicom.valuerep.format_number_as_ds"]], "is_valid_ds() (in module pydicom.valuerep)": [[447, "pydicom.valuerep.is_valid_ds"]], "convert_ae_string() (in module pydicom.values)": [[448, "pydicom.values.convert_AE_string"]], "convert_atvalue() (in module pydicom.values)": [[449, "pydicom.values.convert_ATvalue"]], "convert_da_string() (in module pydicom.values)": [[450, "pydicom.values.convert_DA_string"]], "convert_ds_string() (in module pydicom.values)": [[451, "pydicom.values.convert_DS_string"]], "convert_dt_string() (in module pydicom.values)": [[452, "pydicom.values.convert_DT_string"]], "convert_is_string() (in module pydicom.values)": [[453, "pydicom.values.convert_IS_string"]], "convert_obvalue() (in module pydicom.values)": [[454, "pydicom.values.convert_OBvalue"]], "convert_owvalue() (in module pydicom.values)": [[455, "pydicom.values.convert_OWvalue"]], "convert_pn() (in module pydicom.values)": [[456, "pydicom.values.convert_PN"]], "convert_sq() (in module pydicom.values)": [[457, "pydicom.values.convert_SQ"]], "convert_tm_string() (in module pydicom.values)": [[458, "pydicom.values.convert_TM_string"]], "convert_ui() (in module pydicom.values)": [[459, "pydicom.values.convert_UI"]], "convert_un() (in module pydicom.values)": [[460, "pydicom.values.convert_UN"]], "convert_ur_string() (in module pydicom.values)": [[461, "pydicom.values.convert_UR_string"]], "convert_numbers() (in module pydicom.values)": [[462, "pydicom.values.convert_numbers"]], "convert_single_string() (in module pydicom.values)": [[463, "pydicom.values.convert_single_string"]], "convert_string() (in module pydicom.values)": [[464, "pydicom.values.convert_string"]], "convert_tag() (in module pydicom.values)": [[465, "pydicom.values.convert_tag"]], "convert_text() (in module pydicom.values)": [[466, "pydicom.values.convert_text"]], "convert_value() (in module pydicom.values)": [[467, "pydicom.values.convert_value"]], "generate_multiplex() (in module pydicom.waveforms.numpy_handler)": [[468, "pydicom.waveforms.numpy_handler.generate_multiplex"]], "is_available() (in module pydicom.waveforms.numpy_handler)": [[468, "pydicom.waveforms.numpy_handler.is_available"]], "multiplex_array() (in module pydicom.waveforms.numpy_handler)": [[468, "pydicom.waveforms.numpy_handler.multiplex_array"]], "pydicom.waveforms.numpy_handler": [[468, "module-pydicom.waveforms.numpy_handler"]], "pydicom.overlays": [[470, "module-pydicom.overlays"]], "pydicom.pixel_data_handlers": [[471, "module-pydicom.pixel_data_handlers"]], "pydicom.waveforms": [[472, "module-pydicom.waveforms"]], "pydicom": [[473, "module-pydicom"]]}})