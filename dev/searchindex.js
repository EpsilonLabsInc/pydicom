Search.setIndex({"alltitles": {"(Optional) Install required libraries": [[612, "optional-install-required-libraries"]], "A simple example": [[24, "a-simple-example"], [26, "a-simple-example"]], "API Reference": [[54, "api-reference"], [576, null]], "Add items to the private DICOM dictionary": [[16, null]], "Adding Plugins to a Decoder": [[30, "adding-plugins-to-a-decoder"]], "Adding Plugins to an Encoder": [[34, "adding-plugins-to-an-encoder"]], "Adding SOP instances": [[616, "adding-sop-instances"]], "Adding elements": [[614, "adding-elements"]], "Adding new entries to the DICOM dictionary": [[47, "adding-new-entries-to-the-dicom-dictionary"]], "Additional type hints": [[618, "additional-type-hints"]], "Analyse differences between DICOM files": [[20, null]], "Anonymize DICOM data": [[17, null]], "Anonymize a single file": [[17, "anonymize-a-single-file"]], "Any category": [[614, "any-category"]], "Applying the changes": [[616, "applying-the-changes"]], "Available Plugins": [[36, "available-plugins"], [37, "available-plugins"], [38, "available-plugins"]], "Best Practices": [[43, null]], "Bits Stored": [[36, "bits-stored"]], "Bufferable O* VRs": [[32, "bufferable-o-vrs"]], "Bug Fixes": [[587, "id46"], [587, "id50"], [588, "bug-fixes"], [589, "bug-fixes"]], "Bug fixes": [[587, "bug-fixes"], [587, "id38"], [587, "id41"], [592, "bug-fixes"], [593, "bug-fixes"], [594, "bug-fixes"]], "Build and preview the documentation": [[613, "build-and-preview-the-documentation"]], "Bulk Data Encapsulation Utilities (pydicom.encaps)": [[67, null]], "Bulk Data Handlers": [[573, null]], "Changelog": [[587, "changelog"], [602, "changelog"]], "Changes": [[587, "changes"], [587, "id3"], [587, "id7"], [587, "id10"], [587, "id15"], [587, "id20"], [587, "id23"], [587, "id24"], [587, "id27"], [598, "changes"], [599, "changes"], [600, "changes"], [601, "changes"], [603, "changes"], [605, "changes"], [606, "changes"], [607, "changes"], [608, "changes"]], "Character Encoding and Decoding (pydicom.charset)": [[55, null]], "Codifying a part of a DICOM file": [[24, "codifying-a-part-of-a-dicom-file"], [26, "codifying-a-part-of-a-dicom-file"]], "Color space": [[50, "color-space"]], "Combining with other CLIs": [[26, "combining-with-other-clis"], [27, "combining-with-other-clis"]], "Command options": [[24, "command-options"], [26, "command-options"]], "Command-line Interface Guide": [[26, null]], "Commit your changes and make a pull request": [[612, "commit-your-changes-and-make-a-pull-request"], [613, "commit-your-changes-and-make-a-pull-request"]], "Compressed transfer syntaxes": [[622, "compressed-transfer-syntaxes"]], "Compressing Pixel Data": [[44, null]], "Compressing a dataset (with RLE Lossless)": [[619, "compressing-a-dataset-with-rle-lossless"]], "Compressing using pydicom": [[44, "compressing-using-pydicom"]], "Compressing using third-party packages": [[44, "compressing-using-third-party-packages"]], "Compressing with Dataset.compress()": [[44, "compressing-with-dataset-compress"]], "Compressing with JPEG 2000": [[619, "compressing-with-jpeg-2000"]], "Compressing with JPEG-LS": [[619, "compressing-with-jpeg-ls"]], "Compression of Pixel Data": [[619, "compression-of-pixel-data"]], "Computation times": [[5, null], [13, null], [19, null], [21, null], [610, null]], "Concepts and Context Groups (pydicom.sr)": [[584, null]], "Conclusion": [[616, "conclusion"], [619, "conclusion"]], "Conclusion and next steps": [[620, "conclusion-and-next-steps"], [622, "conclusion-and-next-steps"]], "Configuration Options (pydicom.config)": [[56, null]], "Contrib file changes": [[587, "contrib-file-changes"], [587, "id36"], [594, "contrib-file-changes"], [595, "contrib-file-changes"]], "Contributing a documentation change": [[613, null]], "Contributing a source code change": [[612, null]], "Contributing to pydicom": [[611, null]], "Controlling decoding": [[622, "controlling-decoding"]], "Converting a dataset into JSON format": [[615, "converting-a-dataset-into-json-format"]], "Converting to an ndarray": [[622, "converting-to-an-ndarray"]], "Converting to an ndarray with metadata": [[622, "converting-to-an-ndarray-with-metadata"]], "Core elements in pydicom": [[42, null]], "Create a new branch": [[612, "create-a-new-branch"], [613, "create-a-new-branch"]], "Creating Encapsulated Data": [[67, "creating-encapsulated-data"]], "Creating Float Pixel Data and Double Float Pixel Data": [[620, "creating-float-pixel-data-and-double-float-pixel-data"]], "Creating Pixel Data": [[620, "creating-pixel-data"]], "Creating a dataset from JSON": [[615, "creating-a-dataset-from-json"]], "Creating a new File-set": [[616, "creating-a-new-file-set"]], "DICOM Data Dictionary": [[58, "dicom-data-dictionary"]], "DICOM File-sets (pydicom.fileset)": [[75, null]], "DICOM File-sets and DICOMDIR": [[616, null]], "Data Dictionary Utilities (pydicom.datadict)": [[58, null]], "Data Elements (pydicom.dataelem)": [[61, null]], "DataElement": [[42, "dataelement"]], "Dataset": [[42, "dataset"]], "Dataset IO": [[70, null]], "Dataset Reading (pydicom.filereader)": [[72, null]], "Dataset Writing (pydicom.filewriter)": [[74, null]], "Dataset basics: read, access, modify, write": [[614, null]], "Dataset.overlay_array()": [[49, "dataset-overlay-array"]], "Dataset.pixel_array": [[50, "dataset-pixel-array"]], "Dataset.waveform_array()": [[51, "dataset-waveform-array"]], "Decode and plot Waveform Data": [[3, null]], "Decoding Plugin Options": [[29, "decoding-plugin-options"]], "Decoding Waveform Data": [[624, "decoding-waveform-data"]], "Decompression of Pixel Data": [[619, "decompression-of-pixel-data"]], "Deleting elements": [[614, "deleting-elements"]], "Deprecations": [[587, "deprecations"], [608, "deprecations"]], "Display unicode person names": [[22, null]], "Displaying Private Data Elements in pydicom": [[47, "displaying-private-data-elements-in-pydicom"]], "Documentation": [[587, "documentation"], [599, "documentation"]], "Download the current source code": [[612, "download-the-current-source-code"]], "Download the documentation": [[613, "download-the-documentation"]], "Downloading example/test DICOM files": [[618, "downloading-example-test-dicom-files"]], "Downsize MRI image using pydicom": [[2, null]], "Element Multi-value Representation (pydicom.multival)": [[62, null]], "Element Tags (pydicom.tag)": [[64, null]], "Element VRs and Python types": [[32, null]], "Element Value Decoding (pydicom.values)": [[66, null]], "Elements": [[614, "elements"]], "Encapsulating data compressed by third-party packages": [[619, "encapsulating-data-compressed-by-third-party-packages"]], "Encoder Plugins Options": [[33, null]], "Encoding Waveform Data": [[624, "encoding-waveform-data"]], "Enforcing Valid DICOM": [[43, "enforcing-valid-dicom"]], "Enhancements": [[587, "enhancements"], [587, "id1"], [587, "id4"], [587, "id8"], [587, "id11"], [587, "id14"], [587, "id17"], [587, "id22"], [587, "id25"], [587, "id28"], [587, "id30"], [587, "id33"], [587, "id35"], [594, "enhancements"], [595, "enhancements"], [597, "enhancements"], [598, "enhancements"], [599, "enhancements"], [600, "enhancements"], [602, "enhancements"], [603, "enhancements"], [605, "enhancements"], [606, "enhancements"], [607, "enhancements"], [608, "enhancements"], [609, "enhancements"]], "Example Datasets (pydicom.examples)": [[69, null]], "Examples": [[36, "examples"], [37, "examples"], [38, "examples"], [54, "examples"]], "Exceptions (pydicom.errors)": [[68, null]], "Extending the CLI": [[25, null], [26, "extending-the-cli"]], "File Meta Information": [[39, "file-meta-information"]], "FileSet": [[616, "fileset"]], "FileSet and staging": [[616, "fileset-and-staging"]], "Fixes": [[587, "fixes"], [587, "id2"], [587, "id5"], [587, "id9"], [587, "id12"], [587, "id13"], [587, "id16"], [587, "id18"], [587, "id19"], [587, "id21"], [587, "id26"], [587, "id29"], [587, "id31"], [587, "id32"], [596, "fixes"], [597, "fixes"], [598, "fixes"], [599, "fixes"], [600, "fixes"], [601, "fixes"], [602, "fixes"], [603, "fixes"], [604, "fixes"], [605, "fixes"], [606, "fixes"], [607, "fixes"], [608, "fixes"], [609, "fixes"]], "Format the output of the data set printing": [[8, null]], "Frequently asked questions": [[23, null]], "Future-proofing your code": [[43, "future-proofing-your-code"]], "General": [[23, "general"]], "General examples": [[6, null]], "General style guidelines": [[53, "general-style-guidelines"]], "Getting Included Datasets (pydicom.data)": [[57, null]], "Getting Started": [[54, "getting-started"]], "Getting the path to the example dataset": [[614, "getting-the-path-to-the-example-dataset"]], "Glossary": [[39, null]], "Grayscale with 12-bit signed integers": [[620, "grayscale-with-12-bit-signed-integers"]], "Grayscale with 8-bit unsigned integers": [[620, "grayscale-with-8-bit-unsigned-integers"]], "Guidelines for reStructuredText": [[53, "guidelines-for-restructuredtext"]], "Guides": [[40, null]], "Handling of compressed pixel data": [[45, null]], "How do I cite pydicom?": [[23, "how-do-i-cite-pydicom"]], "How to install pydicom": [[618, null]], "IO Base Classes (pydicom.filebase)": [[71, null]], "IO Utilities (pydicom.fileutil)": [[73, null]], "Image Pixel Module": [[39, "image-pixel-module"]], "Image Pixel Options": [[29, "image-pixel-options"]], "Image Processing Options": [[29, "image-processing-options"]], "Image processing": [[1, null], [6, "image-processing"]], "Infrastructure": [[587, "infrastructure"], [596, "infrastructure"]], "Input-output": [[6, "input-output"], [7, null]], "Install pytest and run the test suite": [[612, "install-pytest-and-run-the-test-suite"]], "Install the development version": [[618, "install-the-development-version"]], "Install the official release": [[618, "install-the-official-release"]], "Install the optional libraries": [[618, "install-the-optional-libraries"]], "Install using conda": [[618, "install-using-conda"]], "Install using pip": [[618, "install-using-pip"]], "Installation": [[23, "installation"]], "Installing GDCM": [[618, "installing-gdcm"]], "Installing Pillow": [[618, "installing-pillow"]], "Installing pyjpegls": [[618, "installing-pyjpegls"]], "Installing pylibjpeg": [[618, "installing-pylibjpeg"]], "Installing the pydicom CLI": [[26, "installing-the-pydicom-cli"], [27, "installing-the-pydicom-cli"]], "Introduction": [[26, "introduction"], [27, null], [43, "introduction"], [47, "introduction"], [48, "introduction"], [49, "introduction"], [50, "introduction"], [51, "introduction"], [52, "introduction"], [622, "introduction"]], "Introduction to JSON support": [[615, null]], "JPEG 2000": [[36, "jpeg-2000"]], "JPEG 2000 Encoding": [[36, null]], "JPEG 2000 Lossless": [[36, "jpeg-2000-lossless"]], "JPEG-LS Encoding": [[37, null]], "JPEG-LS Lossless": [[37, "jpeg-ls-lossless"]], "JPEG-LS Near-lossless": [[37, "jpeg-ls-near-lossless"]], "Limiting the pydicom major version in your package": [[43, "limiting-the-pydicom-major-version-in-your-package"]], "Load CT slices and plot axial, sagittal and coronal images": [[4, null]], "Loading existing File-sets": [[616, "loading-existing-file-sets"]], "Major changes": [[587, "major-changes"], [587, "id34"], [587, "id37"], [587, "id40"], [587, "id44"], [587, "id48"], [588, "major-changes"], [589, "major-changes"], [592, "major-changes"], [593, "major-changes"], [594, "major-changes"], [596, "major-changes"]], "Major changes/additions in this version": [[587, "major-changes-additions-in-this-version"], [590, "major-changes-additions-in-this-version"]], "Major fixes in this release": [[587, "major-fixes-in-this-release"], [591, "major-fixes-in-this-release"]], "Make a change to the documentation": [[613, "make-a-change-to-the-documentation"]], "Make a code change and document it": [[612, "make-a-code-change-and-document-it"]], "Metadata processing": [[6, "metadata-processing"], [15, null]], "Minimizing memory usage": [[622, "minimizing-memory-usage"]], "Miscellaneous (pydicom.misc)": [[577, null]], "Miscellaneous Options": [[29, "miscellaneous-options"]], "Modality LUT or Rescale Operation": [[50, "modality-lut-or-rescale-operation"]], "Modifying": [[614, "modifying"]], "Modifying a File-set": [[616, "modifying-a-file-set"]], "Modifying elements": [[614, "modifying-elements"]], "Multi-frame RGB with 8-bit unsigned integers": [[620, "multi-frame-rgb-with-8-bit-unsigned-integers"]], "New \u2018Contrib\u2019 files": [[587, "new-contrib-files"], [591, "new-contrib-files"]], "Next steps": [[614, "next-steps"]], "Optional": [[23, "optional"]], "Other": [[587, "other"], [587, "id42"], [587, "id43"], [587, "id47"], [587, "id51"], [588, "other"], [589, "other"], [591, "other"], [592, "other"], [597, "other"]], "Other Contributors": [[587, "other-contributors"], [595, "other-contributors"]], "Other Enhancements": [[587, "id39"], [587, "id45"], [587, "id49"], [588, "other-enhancements"], [589, "other-enhancements"], [593, "other-enhancements"]], "Other changes and bug fixes": [[587, "other-changes-and-bug-fixes"], [590, "other-changes-and-bug-fixes"]], "Other enhancements": [[587, "other-enhancements"], [596, "other-enhancements"]], "Other fixes in this release": [[587, "other-fixes-in-this-release"], [591, "other-fixes-in-this-release"]], "Overlay Data Handling (pydicom.overlays)": [[578, null]], "Palette Color": [[50, "palette-color"]], "Parsing Encapsulated Data": [[67, "parsing-encapsulated-data"]], "Photometric Interpretation": [[36, "photometric-interpretation"], [37, "photometric-interpretation"]], "Pixel Data": [[621, null]], "Pixel Data (pydicom.pixels)": [[579, null]], "Pixel Data - Part 1: Introduction and accessing": [[622, null]], "Pixel Data - Part 2: Creation of pixel data": [[620, null]], "Pixel Data - Part 3: Compression and decompression": [[619, null]], "Pixel Data Decoder Options": [[29, null]], "Pixel Data Decoder Plugins": [[30, null]], "Pixel Data Decoders (pydicom.pixels.decoders)": [[580, null]], "Pixel Data Decoding": [[31, null]], "Pixel Data Encoder Plugins": [[34, null]], "Pixel Data Encoders (pydicom.pixels.encoders)": [[581, null]], "Pixel Data Encoding": [[35, null]], "Pixel Data Handlers (pydicom.pixel_data_handlers)": [[574, null]], "Pixel Data Processing (pydicom.pixels.processing)": [[582, null]], "Pixel Data Utilities (pydicom.pixels.utils)": [[583, null]], "Pixel Representation": [[37, "pixel-representation"]], "Planar Configuration": [[37, "planar-configuration"]], "Plugin Requirements": [[30, "plugin-requirements"], [34, "plugin-requirements"]], "Plugins": [[41, "plugins"], [41, "id5"]], "Plugins for Compression": [[41, "plugins-for-compression"]], "Plugins for Decompression": [[41, "plugins-for-decompression"]], "Plugins for Pixel Data Compression and Decompression": [[41, null]], "Prerequisites": [[45, "prerequisites"]], "Preview your changes": [[612, "preview-your-changes"]], "Private Data Dictionary": [[58, "private-data-dictionary"]], "Private Data Elements": [[47, null]], "Pydicom Internals": [[587, "pydicom-internals"], [587, "id6"], [607, "pydicom-internals"], [608, "pydicom-internals"]], "RLE Lossless": [[29, "rle-lossless"]], "RLE Lossless Encoding": [[38, null]], "Read RTPLAN DICOM and list information": [[11, null]], "Read a DICOM File-set": [[10, null]], "Read a Dataset and plot Pixel Data": [[9, null]], "Reading": [[614, "reading"]], "Release notes": [[587, null]], "Removals": [[587, "removals"], [608, "removals"]], "Removing All Private Data Elements": [[47, "removing-all-private-data-elements"]], "Removing instances": [[616, "removing-instances"]], "Representation of Data Elements": [[60, null]], "Representation of Datasets (pydicom.dataset)": [[59, null]], "Required": [[23, "required"]], "Sequence": [[42, "sequence"]], "Sequence Element Value Representation (pydicom.sequence)": [[63, null]], "Sequences": [[614, "sequences"], [614, "id1"]], "Setting Private Data Elements with pydicom": [[47, "setting-private-data-elements-with-pydicom"]], "Show a dicom file using hierarchical tree": [[0, null]], "Show working with memory-based dataset": [[14, null]], "Specialized Element Value Representation (pydicom.valuerep)": [[65, null]], "Standard elements": [[614, "standard-elements"]], "Storage SOP Class UIDs": [[585, "storage-sop-class-uids"]], "Structured Reporting": [[623, null]], "Sub-modules": [[579, "sub-modules"]], "Supported Transfer Syntaxes": [[44, "supported-transfer-syntaxes"], [45, "supported-transfer-syntaxes"]], "Tag": [[42, "tag"]], "The DICOM File-set": [[616, "the-dicom-file-set"]], "The DICOMDIR file": [[616, "the-dicomdir-file"]], "Transfer Syntax Lists": [[585, "transfer-syntax-lists"]], "Transfer Syntax UIDs": [[585, "transfer-syntax-uids"]], "Tutorials": [[617, null]], "Types of documentation": [[53, "types-of-documentation"]], "UID Definitions and Utilities (pydicom.uid)": [[585, null]], "UID Utilities": [[585, "uid-utilities"]], "Usage": [[45, "usage"], [69, "usage"], [584, "usage"]], "User Guide": [[54, "user-guide"]], "User Hooks (pydicom.hooks)": [[575, null]], "Using codify": [[52, "using-codify"]], "Using pydicom with matplotlib": [[48, "using-pydicom-with-matplotlib"]], "VOI LUT or Windowing Operation": [[50, "voi-lut-or-windowing-operation"]], "Valid Image Pixel Parameters": [[36, "valid-image-pixel-parameters"], [37, "valid-image-pixel-parameters"], [38, "valid-image-pixel-parameters"]], "Version 0.9.2": [[587, "version-0-9-2"], [588, null]], "Version 0.9.3": [[587, "version-0-9-3"], [589, null]], "Version 0.9.4": [[587, "version-0-9-4"], [590, null]], "Version 0.9.5": [[587, "version-0-9-5"], [591, null]], "Version 0.9.6": [[587, "version-0-9-6"], [592, null]], "Version 0.9.7": [[587, "version-0-9-7"], [593, null]], "Version 0.9.8": [[587, "version-0-9-8"], [594, null]], "Version 0.9.9": [[587, "version-0-9-9"], [595, null]], "Version 1.0.0": [[587, "version-1-0-0"], [596, null]], "Version 1.1.0": [[587, "version-1-1-0"], [597, null]], "Version 1.2.0": [[587, "version-1-2-0"], [598, null]], "Version 1.3.0": [[587, "version-1-3-0"], [599, null]], "Version 1.4.0": [[587, "version-1-4-0"], [600, null]], "Version 1.4.1": [[587, "version-1-4-1"], [601, null]], "Version 2.0.0": [[587, "version-2-0-0"], [602, null]], "Version 2.1.0": [[587, "version-2-1-0"], [603, null]], "Version 2.1.1": [[587, "version-2-1-1"], [604, null]], "Version 2.2.0": [[587, "version-2-2-0"], [605, null]], "Version 2.3.0": [[587, "version-2-3-0"], [606, null]], "Version 2.4.0": [[587, "version-2-4-0"], [607, null]], "Version 3.0.0": [[587, "version-3-0-0"], [608, null]], "Version 3.1.0": [[587, "version-3-1-0"], [609, null]], "Viewing Images": [[48, null]], "Viewing and accessing": [[614, "viewing-and-accessing"]], "Waveform Data Handlers (pydicom.waveforms)": [[586, null]], "Waveforms": [[624, null]], "Waveforms in DICOM": [[624, "waveforms-in-dicom"]], "What are pydicom\u2019s prerequisites?": [[23, "what-are-pydicom-s-prerequisites"]], "What happens next?": [[612, "what-happens-next"], [613, "what-happens-next"]], "What license does pydicom use?": [[23, "what-license-does-pydicom-use"]], "What version of Python can I use?": [[23, "what-version-of-python-can-i-use"]], "Working with Overlay Data": [[49, null]], "Working with Pixel Data": [[50, null]], "Working with Waveform Data": [[51, null]], "Working with large binary data": [[615, "working-with-large-binary-data"]], "Working with sequences": [[18, null]], "Write DICOM data": [[12, null]], "Write tests for your changes": [[612, "write-tests-for-your-changes"]], "Writing": [[614, "writing"]], "Writing DICOM Files": [[52, null]], "Writing a file from scratch": [[52, "writing-a-file-from-scratch"]], "Writing documentation": [[53, null]], "file_meta": [[614, "file-meta"]], "gdcm": [[33, "gdcm"], [41, "gdcm"]], "pillow": [[41, "pillow"]], "pydicom": [[33, "pydicom"], [41, "pydicom"], [41, "id12"]], "pydicom User Guide": [[46, null]], "pydicom codify command": [[24, null], [26, "pydicom-codify-command"]], "pydicom documentation": [[54, null]], "pydicom show command": [[26, "pydicom-show-command"], [28, null]], "pydicom.charset.convert_encodings": [[76, null]], "pydicom.charset.decode_bytes": [[77, null]], "pydicom.charset.decode_element": [[78, null]], "pydicom.charset.encode_string": [[79, null]], "pydicom.config.APPLY_J2K_CORRECTIONS": [[80, null]], "pydicom.config.DS_decimal": [[81, null]], "pydicom.config.DS_numpy": [[82, null]], "pydicom.config.IGNORE": [[83, null]], "pydicom.config.INVALID_KEYWORD_BEHAVIOR": [[84, null]], "pydicom.config.INVALID_KEY_BEHAVIOR": [[85, null]], "pydicom.config.RAISE": [[86, null]], "pydicom.config.WARN": [[87, null]], "pydicom.config.allow_DS_float": [[88, null]], "pydicom.config.assume_implicit_vr_switch": [[89, null]], "pydicom.config.convert_wrong_length_to_UN": [[90, null]], "pydicom.config.data_element_callback": [[91, null]], "pydicom.config.data_element_callback_kwargs": [[92, null]], "pydicom.config.datetime_conversion": [[93, null]], "pydicom.config.debug": [[94, null]], "pydicom.config.enforce_valid_values": [[95, null]], "pydicom.config.future_behavior": [[96, null]], "pydicom.config.pixel_data_handlers": [[97, null]], "pydicom.config.reset_data_element_callback": [[98, null]], "pydicom.config.settings": [[99, null]], "pydicom.config.show_file_meta": [[100, null]], "pydicom.config.use_DS_decimal": [[101, null]], "pydicom.config.use_DS_numpy": [[102, null]], "pydicom.config.use_IS_numpy": [[103, null]], "pydicom.data.get_charset_files": [[104, null]], "pydicom.data.get_palette_files": [[105, null]], "pydicom.data.get_testdata_file": [[106, null]], "pydicom.data.get_testdata_files": [[107, null]], "pydicom.datadict.add_dict_entries": [[108, null]], "pydicom.datadict.add_dict_entry": [[109, null]], "pydicom.datadict.add_private_dict_entries": [[110, null]], "pydicom.datadict.add_private_dict_entry": [[111, null]], "pydicom.datadict.dictionary_VM": [[112, null]], "pydicom.datadict.dictionary_VR": [[113, null]], "pydicom.datadict.dictionary_description": [[114, null]], "pydicom.datadict.dictionary_has_tag": [[115, null]], "pydicom.datadict.dictionary_is_retired": [[116, null]], "pydicom.datadict.dictionary_keyword": [[117, null]], "pydicom.datadict.get_entry": [[118, null]], "pydicom.datadict.get_private_entry": [[119, null]], "pydicom.datadict.keyword_for_tag": [[120, null]], "pydicom.datadict.mask_match": [[121, null]], "pydicom.datadict.private_dictionary_VM": [[122, null]], "pydicom.datadict.private_dictionary_VR": [[123, null]], "pydicom.datadict.private_dictionary_description": [[124, null]], "pydicom.datadict.repeater_has_keyword": [[125, null]], "pydicom.datadict.repeater_has_tag": [[126, null]], "pydicom.datadict.tag_for_keyword": [[127, null]], "pydicom.dataelem.DataElement": [[128, null]], "pydicom.dataelem.DataElement_from_raw": [[129, null]], "pydicom.dataelem.RawDataElement": [[130, null]], "pydicom.dataelem.convert_raw_data_element": [[131, null]], "pydicom.dataset.Dataset": [[132, null]], "pydicom.dataset.FileDataset": [[133, null]], "pydicom.dataset.FileMetaDataset": [[134, null]], "pydicom.dataset.PrivateBlock": [[135, null]], "pydicom.dataset.validate_file_meta": [[136, null]], "pydicom.encaps.decode_data_sequence": [[137, null]], "pydicom.encaps.defragment_data": [[138, null]], "pydicom.encaps.encapsulate": [[139, null]], "pydicom.encaps.encapsulate_buffer": [[140, null]], "pydicom.encaps.encapsulate_extended": [[141, null]], "pydicom.encaps.encapsulate_extended_buffer": [[142, null]], "pydicom.encaps.fragment_frame": [[143, null]], "pydicom.encaps.generate_fragmented_frames": [[144, null]], "pydicom.encaps.generate_fragments": [[145, null]], "pydicom.encaps.generate_frames": [[146, null]], "pydicom.encaps.generate_pixel_data": [[147, null]], "pydicom.encaps.generate_pixel_data_fragment": [[148, null]], "pydicom.encaps.generate_pixel_data_frame": [[149, null]], "pydicom.encaps.get_frame": [[150, null]], "pydicom.encaps.get_frame_offsets": [[151, null]], "pydicom.encaps.itemize_fragment": [[152, null]], "pydicom.encaps.itemize_frame": [[153, null]], "pydicom.encaps.parse_basic_offsets": [[154, null]], "pydicom.encaps.parse_fragments": [[155, null]], "pydicom.encaps.read_item": [[156, null]], "pydicom.errors.InvalidDicomError": [[157, null]], "pydicom.examples.get_path": [[158, null]], "pydicom.filebase.DicomBytesIO": [[159, null]], "pydicom.filebase.DicomFile": [[160, null]], "pydicom.filebase.DicomFileLike": [[161, null]], "pydicom.filebase.DicomIO": [[162, null]], "pydicom.filereader.data_element_generator": [[163, null]], "pydicom.filereader.data_element_offset_to_value": [[164, null]], "pydicom.filereader.dcmread": [[165, null]], "pydicom.filereader.read_dataset": [[166, null]], "pydicom.filereader.read_deferred_data_element": [[167, null]], "pydicom.filereader.read_file_meta_info": [[168, null]], "pydicom.filereader.read_partial": [[169, null]], "pydicom.filereader.read_preamble": [[170, null]], "pydicom.filereader.read_sequence": [[171, null]], "pydicom.filereader.read_sequence_item": [[172, null]], "pydicom.fileset.DIRECTORY_RECORDERS": [[173, null]], "pydicom.fileset.FileInstance": [[174, null]], "pydicom.fileset.FileSet": [[175, null]], "pydicom.fileset.RecordNode": [[176, null]], "pydicom.fileset.generate_filename": [[177, null]], "pydicom.fileset.is_conformant_file_id": [[178, null]], "pydicom.fileutil.absorb_delimiter_item": [[179, null]], "pydicom.fileutil.find_bytes": [[180, null]], "pydicom.fileutil.find_delimiter": [[181, null]], "pydicom.fileutil.length_of_undefined_length": [[182, null]], "pydicom.fileutil.read_undefined_length_value": [[183, null]], "pydicom.filewriter.correct_ambiguous_vr": [[184, null]], "pydicom.filewriter.correct_ambiguous_vr_element": [[185, null]], "pydicom.filewriter.dcmwrite": [[186, null]], "pydicom.filewriter.multi_string": [[187, null]], "pydicom.filewriter.write_ATvalue": [[188, null]], "pydicom.filewriter.write_DA": [[189, null]], "pydicom.filewriter.write_DT": [[190, null]], "pydicom.filewriter.write_OBvalue": [[191, null]], "pydicom.filewriter.write_OWvalue": [[192, null]], "pydicom.filewriter.write_PN": [[193, null]], "pydicom.filewriter.write_TM": [[194, null]], "pydicom.filewriter.write_UI": [[195, null]], "pydicom.filewriter.write_UN": [[196, null]], "pydicom.filewriter.write_data_element": [[197, null]], "pydicom.filewriter.write_dataset": [[198, null]], "pydicom.filewriter.write_file_meta_info": [[199, null]], "pydicom.filewriter.write_number_string": [[200, null]], "pydicom.filewriter.write_numbers": [[201, null]], "pydicom.filewriter.write_sequence": [[202, null]], "pydicom.filewriter.write_sequence_item": [[203, null]], "pydicom.filewriter.write_string": [[204, null]], "pydicom.filewriter.write_text": [[205, null]], "pydicom.hooks.Hooks": [[206, null]], "pydicom.hooks.hooks": [[207, null]], "pydicom.hooks.raw_element_value": [[208, null]], "pydicom.hooks.raw_element_value_fix_separator": [[209, null]], "pydicom.hooks.raw_element_value_retry": [[210, null]], "pydicom.hooks.raw_element_vr": [[211, null]], "pydicom.misc.is_dicom": [[212, null]], "pydicom.misc.size_in_bytes": [[213, null]], "pydicom.multival.MultiValue": [[214, null]], "pydicom.overlays.numpy_handler": [[215, null]], "pydicom.pixel_data_handlers.gdcm_handler": [[216, null]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[217, null]], "pydicom.pixel_data_handlers.numpy_handler": [[218, null]], "pydicom.pixel_data_handlers.pillow_handler": [[219, null]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[220, null]], "pydicom.pixel_data_handlers.rle_handler": [[221, null]], "pydicom.pixels.apply_color_lut": [[222, null]], "pydicom.pixels.apply_icc_profile": [[223, null]], "pydicom.pixels.apply_modality_lut": [[224, null]], "pydicom.pixels.apply_presentation_lut": [[225, null]], "pydicom.pixels.apply_rescale": [[226, null]], "pydicom.pixels.apply_voi": [[227, null]], "pydicom.pixels.apply_voi_lut": [[228, null]], "pydicom.pixels.apply_windowing": [[229, null]], "pydicom.pixels.as_pixel_options": [[230, null]], "pydicom.pixels.compress": [[231, null]], "pydicom.pixels.convert_color_space": [[232, null]], "pydicom.pixels.create_icc_transform": [[233, null]], "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder": [[234, null]], "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder": [[235, null]], "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder": [[236, null]], "pydicom.pixels.decoders.HTJ2KDecoder": [[237, null]], "pydicom.pixels.decoders.HTJ2KLosslessDecoder": [[238, null]], "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder": [[239, null]], "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder": [[240, null]], "pydicom.pixels.decoders.JPEG2000Decoder": [[241, null]], "pydicom.pixels.decoders.JPEG2000LosslessDecoder": [[242, null]], "pydicom.pixels.decoders.JPEGBaseline8BitDecoder": [[243, null]], "pydicom.pixels.decoders.JPEGExtended12BitDecoder": [[244, null]], "pydicom.pixels.decoders.JPEGLSLosslessDecoder": [[245, null]], "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder": [[246, null]], "pydicom.pixels.decoders.JPEGLosslessDecoder": [[247, null]], "pydicom.pixels.decoders.JPEGLosslessSV1Decoder": [[248, null]], "pydicom.pixels.decoders.RLELosslessDecoder": [[249, null]], "pydicom.pixels.decoders.base.DecodeRunner": [[250, null]], "pydicom.pixels.decoders.base.Decoder": [[251, null]], "pydicom.pixels.decompress": [[252, null]], "pydicom.pixels.encoders.JPEG2000Encoder": [[253, null]], "pydicom.pixels.encoders.JPEG2000LosslessEncoder": [[254, null]], "pydicom.pixels.encoders.JPEGLSLosslessEncoder": [[255, null]], "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder": [[256, null]], "pydicom.pixels.encoders.RLELosslessEncoder": [[257, null]], "pydicom.pixels.encoders.base.EncodeRunner": [[258, null]], "pydicom.pixels.encoders.base.Encoder": [[259, null]], "pydicom.pixels.get_decoder": [[260, null]], "pydicom.pixels.get_encoder": [[261, null]], "pydicom.pixels.iter_pixels": [[262, null]], "pydicom.pixels.pack_bits": [[263, null]], "pydicom.pixels.pixel_array": [[264, null]], "pydicom.pixels.processing.apply_color_lut": [[265, null]], "pydicom.pixels.processing.apply_icc_profile": [[266, null]], "pydicom.pixels.processing.apply_modality_lut": [[267, null]], "pydicom.pixels.processing.apply_presentation_lut": [[268, null]], "pydicom.pixels.processing.apply_rescale": [[269, null]], "pydicom.pixels.processing.apply_voi": [[270, null]], "pydicom.pixels.processing.apply_voi_lut": [[271, null]], "pydicom.pixels.processing.apply_windowing": [[272, null]], "pydicom.pixels.processing.convert_color_space": [[273, null]], "pydicom.pixels.processing.create_icc_transform": [[274, null]], "pydicom.pixels.set_pixel_data": [[275, null]], "pydicom.pixels.unpack_bits": [[276, null]], "pydicom.pixels.utils.as_pixel_options": [[277, null]], "pydicom.pixels.utils.compress": [[278, null]], "pydicom.pixels.utils.decompress": [[279, null]], "pydicom.pixels.utils.expand_ybr422": [[280, null]], "pydicom.pixels.utils.get_expected_length": [[281, null]], "pydicom.pixels.utils.get_image_pixel_ids": [[282, null]], "pydicom.pixels.utils.get_j2k_parameters": [[283, null]], "pydicom.pixels.utils.get_nr_frames": [[284, null]], "pydicom.pixels.utils.iter_pixels": [[285, null]], "pydicom.pixels.utils.pack_bits": [[286, null]], "pydicom.pixels.utils.pixel_array": [[287, null]], "pydicom.pixels.utils.pixel_dtype": [[288, null]], "pydicom.pixels.utils.reshape_pixel_array": [[289, null]], "pydicom.pixels.utils.set_pixel_data": [[290, null]], "pydicom.pixels.utils.unpack_bits": [[291, null]], "pydicom.sequence.Sequence": [[292, null]], "pydicom.sr.Code": [[293, null]], "pydicom.sr.Collection": [[294, null]], "pydicom.sr.Concepts": [[295, null]], "pydicom.tag.BaseTag": [[296, null]], "pydicom.tag.Tag": [[297, null]], "pydicom.tag.TupleTag": [[298, null]], "pydicom.tag.tag_in_exception": [[299, null]], "pydicom.uid.AcquisitionContextSRStorage": [[300, null]], "pydicom.uid.AdvancedBlendingPresentationStateStorage": [[301, null]], "pydicom.uid.AllTransferSyntaxes": [[302, null]], "pydicom.uid.AmbulatoryECGWaveformStorage": [[303, null]], "pydicom.uid.ArterialPulseWaveformStorage": [[304, null]], "pydicom.uid.AutorefractionMeasurementsStorage": [[305, null]], "pydicom.uid.BasicStructuredDisplayStorage": [[306, null]], "pydicom.uid.BasicTextSRStorage": [[307, null]], "pydicom.uid.BasicVoiceAudioWaveformStorage": [[308, null]], "pydicom.uid.BlendingSoftcopyPresentationStateStorage": [[309, null]], "pydicom.uid.BodyPositionWaveformStorage": [[310, null]], "pydicom.uid.BreastProjectionXRayImageStorageForPresentation": [[311, null]], "pydicom.uid.BreastProjectionXRayImageStorageForProcessing": [[312, null]], "pydicom.uid.BreastTomosynthesisImageStorage": [[313, null]], "pydicom.uid.CArmPhotonElectronRadiationRecordStorage": [[314, null]], "pydicom.uid.CArmPhotonElectronRadiationStorage": [[315, null]], "pydicom.uid.CTDefinedProcedureProtocolStorage": [[316, null]], "pydicom.uid.CTImageStorage": [[317, null]], "pydicom.uid.CTPerformedProcedureProtocolStorage": [[318, null]], "pydicom.uid.CardiacElectrophysiologyWaveformStorage": [[319, null]], "pydicom.uid.ChestCADSRStorage": [[320, null]], "pydicom.uid.ColonCADSRStorage": [[321, null]], "pydicom.uid.ColorPaletteStorage": [[322, null]], "pydicom.uid.ColorSoftcopyPresentationStateStorage": [[323, null]], "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage": [[324, null]], "pydicom.uid.Comprehensive3DSRStorage": [[325, null]], "pydicom.uid.ComprehensiveSRStorage": [[326, null]], "pydicom.uid.ComputedRadiographyImageStorage": [[327, null]], "pydicom.uid.ConfocalMicroscopyImageStorage": [[328, null]], "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage": [[329, null]], "pydicom.uid.ContentAssessmentResultsStorage": [[330, null]], "pydicom.uid.CornealTopographyMapStorage": [[331, null]], "pydicom.uid.DICOS2DAITStorage": [[332, null]], "pydicom.uid.DICOS3DAITStorage": [[333, null]], "pydicom.uid.DICOSCTImageStorage": [[334, null]], "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation": [[335, null]], "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing": [[336, null]], "pydicom.uid.DICOSQuadrupoleResonanceStorage": [[337, null]], "pydicom.uid.DICOSThreatDetectionReportStorage": [[338, null]], "pydicom.uid.DeflatedExplicitVRLittleEndian": [[339, null]], "pydicom.uid.DeformableSpatialRegistrationStorage": [[340, null]], "pydicom.uid.DermoscopicPhotographyImageStorage": [[341, null]], "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation": [[342, null]], "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing": [[343, null]], "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation": [[344, null]], "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing": [[345, null]], "pydicom.uid.DigitalXRayImageStorageForPresentation": [[346, null]], "pydicom.uid.DigitalXRayImageStorageForProcessing": [[347, null]], "pydicom.uid.EddyCurrentImageStorage": [[348, null]], "pydicom.uid.EddyCurrentMultiFrameImageStorage": [[349, null]], "pydicom.uid.ElectromyogramWaveformStorage": [[350, null]], "pydicom.uid.ElectrooculogramWaveformStorage": [[351, null]], "pydicom.uid.EncapsulatedCDAStorage": [[352, null]], "pydicom.uid.EncapsulatedMTLStorage": [[353, null]], "pydicom.uid.EncapsulatedOBJStorage": [[354, null]], "pydicom.uid.EncapsulatedPDFStorage": [[355, null]], "pydicom.uid.EncapsulatedSTLStorage": [[356, null]], "pydicom.uid.EnhancedCTImageStorage": [[357, null]], "pydicom.uid.EnhancedContinuousRTImageStorage": [[358, null]], "pydicom.uid.EnhancedMRColorImageStorage": [[359, null]], "pydicom.uid.EnhancedMRImageStorage": [[360, null]], "pydicom.uid.EnhancedPETImageStorage": [[361, null]], "pydicom.uid.EnhancedRTImageStorage": [[362, null]], "pydicom.uid.EnhancedSRStorage": [[363, null]], "pydicom.uid.EnhancedUSVolumeStorage": [[364, null]], "pydicom.uid.EnhancedXAImageStorage": [[365, null]], "pydicom.uid.EnhancedXRFImageStorage": [[366, null]], "pydicom.uid.EnhancedXRayRadiationDoseSRStorage": [[367, null]], "pydicom.uid.ExplicitVRBigEndian": [[368, null]], "pydicom.uid.ExplicitVRLittleEndian": [[369, null]], "pydicom.uid.ExtensibleSRStorage": [[370, null]], "pydicom.uid.General32bitECGWaveformStorage": [[371, null]], "pydicom.uid.GeneralAudioWaveformStorage": [[372, null]], "pydicom.uid.GeneralECGWaveformStorage": [[373, null]], "pydicom.uid.GenericImplantTemplateStorage": [[374, null]], "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage": [[375, null]], "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage": [[376, null]], "pydicom.uid.HEVCM10P51": [[377, null]], "pydicom.uid.HEVCMP51": [[378, null]], "pydicom.uid.HTJ2K": [[379, null]], "pydicom.uid.HTJ2KLossless": [[380, null]], "pydicom.uid.HTJ2KLosslessRPCL": [[381, null]], "pydicom.uid.HangingProtocolStorage": [[382, null]], "pydicom.uid.HemodynamicWaveformStorage": [[383, null]], "pydicom.uid.ImplantAssemblyTemplateStorage": [[384, null]], "pydicom.uid.ImplantTemplateGroupStorage": [[385, null]], "pydicom.uid.ImplantationPlanSRStorage": [[386, null]], "pydicom.uid.ImplicitVRLittleEndian": [[387, null]], "pydicom.uid.IntraocularLensCalculationsStorage": [[388, null]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation": [[389, null]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing": [[390, null]], "pydicom.uid.InventoryStorage": [[391, null]], "pydicom.uid.JPEG2000": [[392, null]], "pydicom.uid.JPEG2000Lossless": [[393, null]], "pydicom.uid.JPEG2000MC": [[394, null]], "pydicom.uid.JPEG2000MCLossless": [[395, null]], "pydicom.uid.JPEG2000TransferSyntaxes": [[396, null]], "pydicom.uid.JPEGBaseline8Bit": [[397, null]], "pydicom.uid.JPEGExtended12Bit": [[398, null]], "pydicom.uid.JPEGLSLossless": [[399, null]], "pydicom.uid.JPEGLSNearLossless": [[400, null]], "pydicom.uid.JPEGLSTransferSyntaxes": [[401, null]], "pydicom.uid.JPEGLossless": [[402, null]], "pydicom.uid.JPEGLosslessSV1": [[403, null]], "pydicom.uid.JPEGTransferSyntaxes": [[404, null]], "pydicom.uid.JPIPHTJ2KReferenced": [[405, null]], "pydicom.uid.JPIPHTJ2KReferencedDeflate": [[406, null]], "pydicom.uid.KeratometryMeasurementsStorage": [[407, null]], "pydicom.uid.KeyObjectSelectionDocumentStorage": [[408, null]], "pydicom.uid.LegacyConvertedEnhancedCTImageStorage": [[409, null]], "pydicom.uid.LegacyConvertedEnhancedMRImageStorage": [[410, null]], "pydicom.uid.LegacyConvertedEnhancedPETImageStorage": [[411, null]], "pydicom.uid.LensometryMeasurementsStorage": [[412, null]], "pydicom.uid.MPEG2MPHL": [[413, null]], "pydicom.uid.MPEG2MPHLF": [[414, null]], "pydicom.uid.MPEG2MPML": [[415, null]], "pydicom.uid.MPEG2MPMLF": [[416, null]], "pydicom.uid.MPEG4HP41": [[417, null]], "pydicom.uid.MPEG4HP41BD": [[418, null]], "pydicom.uid.MPEG4HP41BDF": [[419, null]], "pydicom.uid.MPEG4HP41F": [[420, null]], "pydicom.uid.MPEG4HP422D": [[421, null]], "pydicom.uid.MPEG4HP422DF": [[422, null]], "pydicom.uid.MPEG4HP423D": [[423, null]], "pydicom.uid.MPEG4HP423DF": [[424, null]], "pydicom.uid.MPEG4HP42STEREO": [[425, null]], "pydicom.uid.MPEG4HP42STEREOF": [[426, null]], "pydicom.uid.MPEGTransferSyntaxes": [[427, null]], "pydicom.uid.MRImageStorage": [[428, null]], "pydicom.uid.MRSpectroscopyStorage": [[429, null]], "pydicom.uid.MacularGridThicknessAndVolumeReportStorage": [[430, null]], "pydicom.uid.MammographyCADSRStorage": [[431, null]], "pydicom.uid.MediaStorageDirectoryStorage": [[432, null]], "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage": [[433, null]], "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage": [[434, null]], "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage": [[435, null]], "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage": [[436, null]], "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage": [[437, null]], "pydicom.uid.MultichannelRespiratoryWaveformStorage": [[438, null]], "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage": [[439, null]], "pydicom.uid.NuclearMedicineImageStorage": [[440, null]], "pydicom.uid.OphthalmicAxialMeasurementsStorage": [[441, null]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage": [[442, null]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage": [[443, null]], "pydicom.uid.OphthalmicPhotography16BitImageStorage": [[444, null]], "pydicom.uid.OphthalmicPhotography8BitImageStorage": [[445, null]], "pydicom.uid.OphthalmicThicknessMapStorage": [[446, null]], "pydicom.uid.OphthalmicTomographyImageStorage": [[447, null]], "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage": [[448, null]], "pydicom.uid.PYDICOM_IMPLEMENTATION_UID": [[449, null]], "pydicom.uid.PYDICOM_ROOT_UID": [[450, null]], "pydicom.uid.ParametricMapStorage": [[451, null]], "pydicom.uid.PatientRadiationDoseSRStorage": [[452, null]], "pydicom.uid.PerformedImagingAgentAdministrationSRStorage": [[453, null]], "pydicom.uid.PhotoacousticImageStorage": [[454, null]], "pydicom.uid.PlannedImagingAgentAdministrationSRStorage": [[455, null]], "pydicom.uid.PositronEmissionTomographyImageStorage": [[456, null]], "pydicom.uid.PrivateTransferSyntaxes": [[457, null]], "pydicom.uid.ProcedureLogStorage": [[458, null]], "pydicom.uid.ProtocolApprovalStorage": [[459, null]], "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage": [[460, null]], "pydicom.uid.RE_VALID_UID": [[461, null]], "pydicom.uid.RE_VALID_UID_PREFIX": [[462, null]], "pydicom.uid.RLELossless": [[463, null]], "pydicom.uid.RLETransferSyntaxes": [[464, null]], "pydicom.uid.RTBeamsDeliveryInstructionStorage": [[465, null]], "pydicom.uid.RTBeamsTreatmentRecordStorage": [[466, null]], "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage": [[467, null]], "pydicom.uid.RTBrachyTreatmentRecordStorage": [[468, null]], "pydicom.uid.RTDoseStorage": [[469, null]], "pydicom.uid.RTImageStorage": [[470, null]], "pydicom.uid.RTIonBeamsTreatmentRecordStorage": [[471, null]], "pydicom.uid.RTIonPlanStorage": [[472, null]], "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage": [[473, null]], "pydicom.uid.RTPhysicianIntentStorage": [[474, null]], "pydicom.uid.RTPlanStorage": [[475, null]], "pydicom.uid.RTRadiationRecordSetStorage": [[476, null]], "pydicom.uid.RTRadiationSalvageRecordStorage": [[477, null]], "pydicom.uid.RTRadiationSetDeliveryInstructionStorage": [[478, null]], "pydicom.uid.RTRadiationSetStorage": [[479, null]], "pydicom.uid.RTSegmentAnnotationStorage": [[480, null]], "pydicom.uid.RTStructureSetStorage": [[481, null]], "pydicom.uid.RTTreatmentPreparationStorage": [[482, null]], "pydicom.uid.RTTreatmentSummaryRecordStorage": [[483, null]], "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage": [[484, null]], "pydicom.uid.RawDataStorage": [[485, null]], "pydicom.uid.RealWorldValueMappingStorage": [[486, null]], "pydicom.uid.RespiratoryWaveformStorage": [[487, null]], "pydicom.uid.RoboticArmRadiationStorage": [[488, null]], "pydicom.uid.RoboticRadiationRecordStorage": [[489, null]], "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage": [[490, null]], "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo": [[491, null]], "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo": [[492, null]], "pydicom.uid.SMPTEST211030PCMDigitalAudio": [[493, null]], "pydicom.uid.SecondaryCaptureImageStorage": [[494, null]], "pydicom.uid.SegmentationStorage": [[495, null]], "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage": [[496, null]], "pydicom.uid.SimplifiedAdultEchoSRStorage": [[497, null]], "pydicom.uid.SleepElectroencephalogramWaveformStorage": [[498, null]], "pydicom.uid.SpatialFiducialsStorage": [[499, null]], "pydicom.uid.SpatialRegistrationStorage": [[500, null]], "pydicom.uid.SpectaclePrescriptionReportStorage": [[501, null]], "pydicom.uid.StereometricRelationshipStorage": [[502, null]], "pydicom.uid.SubjectiveRefractionMeasurementsStorage": [[503, null]], "pydicom.uid.SurfaceScanMeshStorage": [[504, null]], "pydicom.uid.SurfaceScanPointCloudStorage": [[505, null]], "pydicom.uid.SurfaceSegmentationStorage": [[506, null]], "pydicom.uid.TomotherapeuticRadiationRecordStorage": [[507, null]], "pydicom.uid.TomotherapeuticRadiationStorage": [[508, null]], "pydicom.uid.TractographyResultsStorage": [[509, null]], "pydicom.uid.TwelveLeadECGWaveformStorage": [[510, null]], "pydicom.uid.UID": [[511, null]], "pydicom.uid.UltrasoundImageStorage": [[512, null]], "pydicom.uid.UltrasoundMultiFrameImageStorage": [[513, null]], "pydicom.uid.UncompressedTransferSyntaxes": [[514, null]], "pydicom.uid.VLEndoscopicImageStorage": [[515, null]], "pydicom.uid.VLMicroscopicImageStorage": [[516, null]], "pydicom.uid.VLPhotographicImageStorage": [[517, null]], "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage": [[518, null]], "pydicom.uid.VLWholeSlideMicroscopyImageStorage": [[519, null]], "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage": [[520, null]], "pydicom.uid.VideoEndoscopicImageStorage": [[521, null]], "pydicom.uid.VideoMicroscopicImageStorage": [[522, null]], "pydicom.uid.VideoPhotographicImageStorage": [[523, null]], "pydicom.uid.VisualAcuityMeasurementsStorage": [[524, null]], "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage": [[525, null]], "pydicom.uid.WaveformAnnotationSRStorage": [[526, null]], "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage": [[527, null]], "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage": [[528, null]], "pydicom.uid.XADefinedProcedureProtocolStorage": [[529, null]], "pydicom.uid.XAPerformedProcedureProtocolStorage": [[530, null]], "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage": [[531, null]], "pydicom.uid.XRay3DAngiographicImageStorage": [[532, null]], "pydicom.uid.XRay3DCraniofacialImageStorage": [[533, null]], "pydicom.uid.XRayAngiographicImageStorage": [[534, null]], "pydicom.uid.XRayRadiationDoseSRStorage": [[535, null]], "pydicom.uid.XRayRadiofluoroscopicImageStorage": [[536, null]], "pydicom.uid.generate_uid": [[537, null]], "pydicom.uid.register_transfer_syntax": [[538, null]], "pydicom.valuerep.DA": [[539, null]], "pydicom.valuerep.DS": [[540, null]], "pydicom.valuerep.DSdecimal": [[541, null]], "pydicom.valuerep.DSfloat": [[542, null]], "pydicom.valuerep.DT": [[543, null]], "pydicom.valuerep.IS": [[544, null]], "pydicom.valuerep.ISfloat": [[545, null]], "pydicom.valuerep.PersonName": [[546, null]], "pydicom.valuerep.TM": [[547, null]], "pydicom.valuerep.VR": [[548, null]], "pydicom.valuerep.format_number_as_ds": [[549, null]], "pydicom.valuerep.is_valid_ds": [[550, null]], "pydicom.values.convert_AE_string": [[551, null]], "pydicom.values.convert_ATvalue": [[552, null]], "pydicom.values.convert_DA_string": [[553, null]], "pydicom.values.convert_DS_string": [[554, null]], "pydicom.values.convert_DT_string": [[555, null]], "pydicom.values.convert_IS_string": [[556, null]], "pydicom.values.convert_OBvalue": [[557, null]], "pydicom.values.convert_OWvalue": [[558, null]], "pydicom.values.convert_PN": [[559, null]], "pydicom.values.convert_SQ": [[560, null]], "pydicom.values.convert_TM_string": [[561, null]], "pydicom.values.convert_UI": [[562, null]], "pydicom.values.convert_UN": [[563, null]], "pydicom.values.convert_UR_string": [[564, null]], "pydicom.values.convert_numbers": [[565, null]], "pydicom.values.convert_single_string": [[566, null]], "pydicom.values.convert_string": [[567, null]], "pydicom.values.convert_tag": [[568, null]], "pydicom.values.convert_text": [[569, null]], "pydicom.values.convert_value": [[570, null]], "pydicom.values.multi_string": [[571, null]], "pydicom.waveforms.numpy_handler": [[572, null]], "pyjpegls": [[33, "pyjpegls"], [41, "pyjpegls"], [41, "id6"]], "pylibjpeg": [[33, "pylibjpeg"], [36, "pylibjpeg"], [41, "pylibjpeg"], [41, "id8"]]}, "docnames": ["auto_examples/dicomtree", "auto_examples/image_processing/index", "auto_examples/image_processing/plot_downsize_image", "auto_examples/image_processing/plot_waveforms", "auto_examples/image_processing/reslice", "auto_examples/image_processing/sg_execution_times", "auto_examples/index", "auto_examples/input_output/index", "auto_examples/input_output/plot_printing_dataset", "auto_examples/input_output/plot_read_dicom", "auto_examples/input_output/plot_read_fileset", "auto_examples/input_output/plot_read_rtplan", "auto_examples/input_output/plot_write_dicom", "auto_examples/input_output/sg_execution_times", "auto_examples/memory_dataset", "auto_examples/metadata_processing/index", "auto_examples/metadata_processing/plot_add_dict_entries", "auto_examples/metadata_processing/plot_anonymize", "auto_examples/metadata_processing/plot_sequences", "auto_examples/metadata_processing/sg_execution_times", "auto_examples/plot_dicom_difference", "auto_examples/sg_execution_times", "auto_examples/show_charset_name", "faq/index", "guides/cli/cli_codify", "guides/cli/cli_dev", "guides/cli/cli_guide", "guides/cli/cli_intro", "guides/cli/cli_show", "guides/decoding/decoder_options", "guides/decoding/decoder_plugins", "guides/decoding/index", "guides/element_value_types", "guides/encoding/encoder_plugin_options", "guides/encoding/encoder_plugins", "guides/encoding/index", "guides/encoding/jpeg_2k", "guides/encoding/jpeg_ls", "guides/encoding/rle_lossless", "guides/glossary", "guides/index", "guides/plugin_table", "guides/user/base_element", "guides/user/best_practices", "guides/user/image_data_compression", "guides/user/image_data_handlers", "guides/user/index", "guides/user/private_data_elements", "guides/user/viewing_images", "guides/user/working_with_overlays", "guides/user/working_with_pixel_data", "guides/user/working_with_waveforms", "guides/user/writing_files", "guides/writing_documentation", "index", "reference/charset", "reference/config", "reference/data", "reference/datadict", "reference/dataset", "reference/elem", "reference/elem.dataelem", "reference/elem.multival", "reference/elem.sequence", "reference/elem.tag", "reference/elem.valuerep", "reference/elem.values", "reference/encaps", "reference/errors", "reference/examples", "reference/fileio", "reference/fileio.base", "reference/fileio.read", "reference/fileio.util", "reference/fileio.write", "reference/fileset", "reference/generated/pydicom.charset.convert_encodings", "reference/generated/pydicom.charset.decode_bytes", "reference/generated/pydicom.charset.decode_element", "reference/generated/pydicom.charset.encode_string", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS", "reference/generated/pydicom.config.DS_decimal", "reference/generated/pydicom.config.DS_numpy", "reference/generated/pydicom.config.IGNORE", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR", "reference/generated/pydicom.config.RAISE", "reference/generated/pydicom.config.WARN", "reference/generated/pydicom.config.allow_DS_float", "reference/generated/pydicom.config.assume_implicit_vr_switch", "reference/generated/pydicom.config.convert_wrong_length_to_UN", "reference/generated/pydicom.config.data_element_callback", "reference/generated/pydicom.config.data_element_callback_kwargs", "reference/generated/pydicom.config.datetime_conversion", "reference/generated/pydicom.config.debug", "reference/generated/pydicom.config.enforce_valid_values", "reference/generated/pydicom.config.future_behavior", "reference/generated/pydicom.config.pixel_data_handlers", "reference/generated/pydicom.config.reset_data_element_callback", "reference/generated/pydicom.config.settings", "reference/generated/pydicom.config.show_file_meta", "reference/generated/pydicom.config.use_DS_decimal", "reference/generated/pydicom.config.use_DS_numpy", "reference/generated/pydicom.config.use_IS_numpy", "reference/generated/pydicom.data.get_charset_files", "reference/generated/pydicom.data.get_palette_files", "reference/generated/pydicom.data.get_testdata_file", "reference/generated/pydicom.data.get_testdata_files", "reference/generated/pydicom.datadict.add_dict_entries", "reference/generated/pydicom.datadict.add_dict_entry", "reference/generated/pydicom.datadict.add_private_dict_entries", "reference/generated/pydicom.datadict.add_private_dict_entry", "reference/generated/pydicom.datadict.dictionary_VM", "reference/generated/pydicom.datadict.dictionary_VR", "reference/generated/pydicom.datadict.dictionary_description", "reference/generated/pydicom.datadict.dictionary_has_tag", "reference/generated/pydicom.datadict.dictionary_is_retired", "reference/generated/pydicom.datadict.dictionary_keyword", "reference/generated/pydicom.datadict.get_entry", "reference/generated/pydicom.datadict.get_private_entry", "reference/generated/pydicom.datadict.keyword_for_tag", "reference/generated/pydicom.datadict.mask_match", "reference/generated/pydicom.datadict.private_dictionary_VM", "reference/generated/pydicom.datadict.private_dictionary_VR", "reference/generated/pydicom.datadict.private_dictionary_description", "reference/generated/pydicom.datadict.repeater_has_keyword", "reference/generated/pydicom.datadict.repeater_has_tag", "reference/generated/pydicom.datadict.tag_for_keyword", "reference/generated/pydicom.dataelem.DataElement", "reference/generated/pydicom.dataelem.DataElement_from_raw", "reference/generated/pydicom.dataelem.RawDataElement", "reference/generated/pydicom.dataelem.convert_raw_data_element", "reference/generated/pydicom.dataset.Dataset", "reference/generated/pydicom.dataset.FileDataset", "reference/generated/pydicom.dataset.FileMetaDataset", "reference/generated/pydicom.dataset.PrivateBlock", "reference/generated/pydicom.dataset.validate_file_meta", "reference/generated/pydicom.encaps.decode_data_sequence", "reference/generated/pydicom.encaps.defragment_data", "reference/generated/pydicom.encaps.encapsulate", "reference/generated/pydicom.encaps.encapsulate_buffer", "reference/generated/pydicom.encaps.encapsulate_extended", "reference/generated/pydicom.encaps.encapsulate_extended_buffer", "reference/generated/pydicom.encaps.fragment_frame", "reference/generated/pydicom.encaps.generate_fragmented_frames", "reference/generated/pydicom.encaps.generate_fragments", "reference/generated/pydicom.encaps.generate_frames", "reference/generated/pydicom.encaps.generate_pixel_data", "reference/generated/pydicom.encaps.generate_pixel_data_fragment", "reference/generated/pydicom.encaps.generate_pixel_data_frame", "reference/generated/pydicom.encaps.get_frame", "reference/generated/pydicom.encaps.get_frame_offsets", "reference/generated/pydicom.encaps.itemize_fragment", "reference/generated/pydicom.encaps.itemize_frame", "reference/generated/pydicom.encaps.parse_basic_offsets", "reference/generated/pydicom.encaps.parse_fragments", "reference/generated/pydicom.encaps.read_item", "reference/generated/pydicom.errors.InvalidDicomError", "reference/generated/pydicom.examples.get_path", "reference/generated/pydicom.filebase.DicomBytesIO", "reference/generated/pydicom.filebase.DicomFile", "reference/generated/pydicom.filebase.DicomFileLike", "reference/generated/pydicom.filebase.DicomIO", "reference/generated/pydicom.filereader.data_element_generator", "reference/generated/pydicom.filereader.data_element_offset_to_value", "reference/generated/pydicom.filereader.dcmread", "reference/generated/pydicom.filereader.read_dataset", "reference/generated/pydicom.filereader.read_deferred_data_element", "reference/generated/pydicom.filereader.read_file_meta_info", "reference/generated/pydicom.filereader.read_partial", "reference/generated/pydicom.filereader.read_preamble", "reference/generated/pydicom.filereader.read_sequence", "reference/generated/pydicom.filereader.read_sequence_item", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS", "reference/generated/pydicom.fileset.FileInstance", "reference/generated/pydicom.fileset.FileSet", "reference/generated/pydicom.fileset.RecordNode", "reference/generated/pydicom.fileset.generate_filename", "reference/generated/pydicom.fileset.is_conformant_file_id", "reference/generated/pydicom.fileutil.absorb_delimiter_item", "reference/generated/pydicom.fileutil.find_bytes", "reference/generated/pydicom.fileutil.find_delimiter", "reference/generated/pydicom.fileutil.length_of_undefined_length", "reference/generated/pydicom.fileutil.read_undefined_length_value", "reference/generated/pydicom.filewriter.correct_ambiguous_vr", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element", "reference/generated/pydicom.filewriter.dcmwrite", "reference/generated/pydicom.filewriter.multi_string", "reference/generated/pydicom.filewriter.write_ATvalue", "reference/generated/pydicom.filewriter.write_DA", "reference/generated/pydicom.filewriter.write_DT", "reference/generated/pydicom.filewriter.write_OBvalue", "reference/generated/pydicom.filewriter.write_OWvalue", "reference/generated/pydicom.filewriter.write_PN", "reference/generated/pydicom.filewriter.write_TM", "reference/generated/pydicom.filewriter.write_UI", "reference/generated/pydicom.filewriter.write_UN", "reference/generated/pydicom.filewriter.write_data_element", "reference/generated/pydicom.filewriter.write_dataset", "reference/generated/pydicom.filewriter.write_file_meta_info", "reference/generated/pydicom.filewriter.write_number_string", "reference/generated/pydicom.filewriter.write_numbers", "reference/generated/pydicom.filewriter.write_sequence", "reference/generated/pydicom.filewriter.write_sequence_item", "reference/generated/pydicom.filewriter.write_string", "reference/generated/pydicom.filewriter.write_text", "reference/generated/pydicom.hooks.Hooks", "reference/generated/pydicom.hooks.hooks", "reference/generated/pydicom.hooks.raw_element_value", "reference/generated/pydicom.hooks.raw_element_value_fix_separator", "reference/generated/pydicom.hooks.raw_element_value_retry", "reference/generated/pydicom.hooks.raw_element_vr", "reference/generated/pydicom.misc.is_dicom", "reference/generated/pydicom.misc.size_in_bytes", "reference/generated/pydicom.multival.MultiValue", "reference/generated/pydicom.overlays.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler", "reference/generated/pydicom.pixel_data_handlers.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.pillow_handler", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler", "reference/generated/pydicom.pixel_data_handlers.rle_handler", "reference/generated/pydicom.pixels.apply_color_lut", "reference/generated/pydicom.pixels.apply_icc_profile", "reference/generated/pydicom.pixels.apply_modality_lut", "reference/generated/pydicom.pixels.apply_presentation_lut", "reference/generated/pydicom.pixels.apply_rescale", "reference/generated/pydicom.pixels.apply_voi", "reference/generated/pydicom.pixels.apply_voi_lut", "reference/generated/pydicom.pixels.apply_windowing", "reference/generated/pydicom.pixels.as_pixel_options", "reference/generated/pydicom.pixels.compress", "reference/generated/pydicom.pixels.convert_color_space", "reference/generated/pydicom.pixels.create_icc_transform", "reference/generated/pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", "reference/generated/pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", "reference/generated/pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.JPEG2000Decoder", "reference/generated/pydicom.pixels.decoders.JPEG2000LosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGBaseline8BitDecoder", "reference/generated/pydicom.pixels.decoders.JPEGExtended12BitDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLSLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLosslessSV1Decoder", "reference/generated/pydicom.pixels.decoders.RLELosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner", "reference/generated/pydicom.pixels.decoders.base.Decoder", "reference/generated/pydicom.pixels.decompress", "reference/generated/pydicom.pixels.encoders.JPEG2000Encoder", "reference/generated/pydicom.pixels.encoders.JPEG2000LosslessEncoder", "reference/generated/pydicom.pixels.encoders.JPEGLSLosslessEncoder", "reference/generated/pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", "reference/generated/pydicom.pixels.encoders.RLELosslessEncoder", "reference/generated/pydicom.pixels.encoders.base.EncodeRunner", "reference/generated/pydicom.pixels.encoders.base.Encoder", "reference/generated/pydicom.pixels.get_decoder", "reference/generated/pydicom.pixels.get_encoder", "reference/generated/pydicom.pixels.iter_pixels", "reference/generated/pydicom.pixels.pack_bits", "reference/generated/pydicom.pixels.pixel_array", "reference/generated/pydicom.pixels.processing.apply_color_lut", "reference/generated/pydicom.pixels.processing.apply_icc_profile", "reference/generated/pydicom.pixels.processing.apply_modality_lut", "reference/generated/pydicom.pixels.processing.apply_presentation_lut", "reference/generated/pydicom.pixels.processing.apply_rescale", "reference/generated/pydicom.pixels.processing.apply_voi", "reference/generated/pydicom.pixels.processing.apply_voi_lut", "reference/generated/pydicom.pixels.processing.apply_windowing", "reference/generated/pydicom.pixels.processing.convert_color_space", "reference/generated/pydicom.pixels.processing.create_icc_transform", "reference/generated/pydicom.pixels.set_pixel_data", "reference/generated/pydicom.pixels.unpack_bits", "reference/generated/pydicom.pixels.utils.as_pixel_options", "reference/generated/pydicom.pixels.utils.compress", "reference/generated/pydicom.pixels.utils.decompress", "reference/generated/pydicom.pixels.utils.expand_ybr422", "reference/generated/pydicom.pixels.utils.get_expected_length", "reference/generated/pydicom.pixels.utils.get_image_pixel_ids", "reference/generated/pydicom.pixels.utils.get_j2k_parameters", "reference/generated/pydicom.pixels.utils.get_nr_frames", "reference/generated/pydicom.pixels.utils.iter_pixels", "reference/generated/pydicom.pixels.utils.pack_bits", "reference/generated/pydicom.pixels.utils.pixel_array", "reference/generated/pydicom.pixels.utils.pixel_dtype", "reference/generated/pydicom.pixels.utils.reshape_pixel_array", "reference/generated/pydicom.pixels.utils.set_pixel_data", "reference/generated/pydicom.pixels.utils.unpack_bits", "reference/generated/pydicom.sequence.Sequence", "reference/generated/pydicom.sr.Code", "reference/generated/pydicom.sr.Collection", "reference/generated/pydicom.sr.Concepts", "reference/generated/pydicom.tag.BaseTag", "reference/generated/pydicom.tag.Tag", "reference/generated/pydicom.tag.TupleTag", "reference/generated/pydicom.tag.tag_in_exception", "reference/generated/pydicom.uid.AcquisitionContextSRStorage", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage", "reference/generated/pydicom.uid.AllTransferSyntaxes", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage", "reference/generated/pydicom.uid.BasicTextSRStorage", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.BodyPositionWaveformStorage", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.CTImageStorage", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage", "reference/generated/pydicom.uid.ChestCADSRStorage", "reference/generated/pydicom.uid.ColonCADSRStorage", "reference/generated/pydicom.uid.ColorPaletteStorage", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.Comprehensive3DSRStorage", "reference/generated/pydicom.uid.ComprehensiveSRStorage", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage", "reference/generated/pydicom.uid.CornealTopographyMapStorage", "reference/generated/pydicom.uid.DICOS2DAITStorage", "reference/generated/pydicom.uid.DICOS3DAITStorage", "reference/generated/pydicom.uid.DICOSCTImageStorage", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.EddyCurrentImageStorage", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage", "reference/generated/pydicom.uid.EncapsulatedCDAStorage", "reference/generated/pydicom.uid.EncapsulatedMTLStorage", "reference/generated/pydicom.uid.EncapsulatedOBJStorage", "reference/generated/pydicom.uid.EncapsulatedPDFStorage", "reference/generated/pydicom.uid.EncapsulatedSTLStorage", "reference/generated/pydicom.uid.EnhancedCTImageStorage", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage", "reference/generated/pydicom.uid.EnhancedMRImageStorage", "reference/generated/pydicom.uid.EnhancedPETImageStorage", "reference/generated/pydicom.uid.EnhancedRTImageStorage", "reference/generated/pydicom.uid.EnhancedSRStorage", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage", "reference/generated/pydicom.uid.EnhancedXAImageStorage", "reference/generated/pydicom.uid.EnhancedXRFImageStorage", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.ExplicitVRBigEndian", "reference/generated/pydicom.uid.ExplicitVRLittleEndian", "reference/generated/pydicom.uid.ExtensibleSRStorage", "reference/generated/pydicom.uid.General32bitECGWaveformStorage", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage", "reference/generated/pydicom.uid.GeneralECGWaveformStorage", "reference/generated/pydicom.uid.GenericImplantTemplateStorage", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.HEVCM10P51", "reference/generated/pydicom.uid.HEVCMP51", "reference/generated/pydicom.uid.HTJ2K", "reference/generated/pydicom.uid.HTJ2KLossless", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL", "reference/generated/pydicom.uid.HangingProtocolStorage", "reference/generated/pydicom.uid.HemodynamicWaveformStorage", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage", "reference/generated/pydicom.uid.ImplantationPlanSRStorage", "reference/generated/pydicom.uid.ImplicitVRLittleEndian", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pydicom.uid.InventoryStorage", "reference/generated/pydicom.uid.JPEG2000", "reference/generated/pydicom.uid.JPEG2000Lossless", "reference/generated/pydicom.uid.JPEG2000MC", "reference/generated/pydicom.uid.JPEG2000MCLossless", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes", "reference/generated/pydicom.uid.JPEGBaseline8Bit", "reference/generated/pydicom.uid.JPEGExtended12Bit", "reference/generated/pydicom.uid.JPEGLSLossless", "reference/generated/pydicom.uid.JPEGLSNearLossless", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes", "reference/generated/pydicom.uid.JPEGLossless", "reference/generated/pydicom.uid.JPEGLosslessSV1", "reference/generated/pydicom.uid.JPEGTransferSyntaxes", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pydicom.uid.LensometryMeasurementsStorage", "reference/generated/pydicom.uid.MPEG2MPHL", "reference/generated/pydicom.uid.MPEG2MPHLF", "reference/generated/pydicom.uid.MPEG2MPML", "reference/generated/pydicom.uid.MPEG2MPMLF", "reference/generated/pydicom.uid.MPEG4HP41", "reference/generated/pydicom.uid.MPEG4HP41BD", "reference/generated/pydicom.uid.MPEG4HP41BDF", "reference/generated/pydicom.uid.MPEG4HP41F", "reference/generated/pydicom.uid.MPEG4HP422D", "reference/generated/pydicom.uid.MPEG4HP422DF", "reference/generated/pydicom.uid.MPEG4HP423D", "reference/generated/pydicom.uid.MPEG4HP423DF", "reference/generated/pydicom.uid.MPEG4HP42STEREO", "reference/generated/pydicom.uid.MPEG4HP42STEREOF", "reference/generated/pydicom.uid.MPEGTransferSyntaxes", "reference/generated/pydicom.uid.MRImageStorage", "reference/generated/pydicom.uid.MRSpectroscopyStorage", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pydicom.uid.MammographyCADSRStorage", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.NuclearMedicineImageStorage", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID", "reference/generated/pydicom.uid.ParametricMapStorage", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PhotoacousticImageStorage", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage", "reference/generated/pydicom.uid.PrivateTransferSyntaxes", "reference/generated/pydicom.uid.ProcedureLogStorage", "reference/generated/pydicom.uid.ProtocolApprovalStorage", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.RE_VALID_UID", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX", "reference/generated/pydicom.uid.RLELossless", "reference/generated/pydicom.uid.RLETransferSyntaxes", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage", "reference/generated/pydicom.uid.RTDoseStorage", "reference/generated/pydicom.uid.RTImageStorage", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTIonPlanStorage", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "reference/generated/pydicom.uid.RTPhysicianIntentStorage", "reference/generated/pydicom.uid.RTPlanStorage", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTRadiationSetStorage", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage", "reference/generated/pydicom.uid.RTStructureSetStorage", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pydicom.uid.RawDataStorage", "reference/generated/pydicom.uid.RealWorldValueMappingStorage", "reference/generated/pydicom.uid.RespiratoryWaveformStorage", "reference/generated/pydicom.uid.RoboticArmRadiationStorage", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage", "reference/generated/pydicom.uid.SegmentationStorage", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SpatialFiducialsStorage", "reference/generated/pydicom.uid.SpatialRegistrationStorage", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage", "reference/generated/pydicom.uid.StereometricRelationshipStorage", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage", "reference/generated/pydicom.uid.SurfaceScanMeshStorage", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage", "reference/generated/pydicom.uid.SurfaceSegmentationStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage", "reference/generated/pydicom.uid.TractographyResultsStorage", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage", "reference/generated/pydicom.uid.UID", "reference/generated/pydicom.uid.UltrasoundImageStorage", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes", "reference/generated/pydicom.uid.VLEndoscopicImageStorage", "reference/generated/pydicom.uid.VLMicroscopicImageStorage", "reference/generated/pydicom.uid.VLPhotographicImageStorage", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage", "reference/generated/pydicom.uid.VideoPhotographicImageStorage", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.WaveformAnnotationSRStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage", "reference/generated/pydicom.uid.XRayAngiographicImageStorage", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage", "reference/generated/pydicom.uid.generate_uid", "reference/generated/pydicom.uid.register_transfer_syntax", "reference/generated/pydicom.valuerep.DA", "reference/generated/pydicom.valuerep.DS", "reference/generated/pydicom.valuerep.DSdecimal", "reference/generated/pydicom.valuerep.DSfloat", "reference/generated/pydicom.valuerep.DT", "reference/generated/pydicom.valuerep.IS", "reference/generated/pydicom.valuerep.ISfloat", "reference/generated/pydicom.valuerep.PersonName", "reference/generated/pydicom.valuerep.TM", "reference/generated/pydicom.valuerep.VR", "reference/generated/pydicom.valuerep.format_number_as_ds", "reference/generated/pydicom.valuerep.is_valid_ds", "reference/generated/pydicom.values.convert_AE_string", "reference/generated/pydicom.values.convert_ATvalue", "reference/generated/pydicom.values.convert_DA_string", "reference/generated/pydicom.values.convert_DS_string", "reference/generated/pydicom.values.convert_DT_string", "reference/generated/pydicom.values.convert_IS_string", "reference/generated/pydicom.values.convert_OBvalue", "reference/generated/pydicom.values.convert_OWvalue", "reference/generated/pydicom.values.convert_PN", "reference/generated/pydicom.values.convert_SQ", "reference/generated/pydicom.values.convert_TM_string", "reference/generated/pydicom.values.convert_UI", "reference/generated/pydicom.values.convert_UN", "reference/generated/pydicom.values.convert_UR_string", "reference/generated/pydicom.values.convert_numbers", "reference/generated/pydicom.values.convert_single_string", "reference/generated/pydicom.values.convert_string", "reference/generated/pydicom.values.convert_tag", "reference/generated/pydicom.values.convert_text", "reference/generated/pydicom.values.convert_value", "reference/generated/pydicom.values.multi_string", "reference/generated/pydicom.waveforms.numpy_handler", "reference/handlers", "reference/handlers.pixel_data", "reference/hooks", "reference/index", "reference/misc", "reference/overlays", "reference/pixels", "reference/pixels.decoders", "reference/pixels.encoders", "reference/pixels.processing", "reference/pixels.utils", "reference/sr", "reference/uid", "reference/waveforms", "release_notes/index", "release_notes/v0.9.2", "release_notes/v0.9.3", "release_notes/v0.9.4", "release_notes/v0.9.5", "release_notes/v0.9.6", "release_notes/v0.9.7", "release_notes/v0.9.8", "release_notes/v0.9.9", "release_notes/v1.0.0", "release_notes/v1.1.0", "release_notes/v1.2.0", "release_notes/v1.3.0", "release_notes/v1.4.0", "release_notes/v1.4.1", "release_notes/v2.0.0", "release_notes/v2.1.0", "release_notes/v2.1.1", "release_notes/v2.2.0", "release_notes/v2.3.0", "release_notes/v2.4.0", "release_notes/v3.0.0", "release_notes/v3.1.0", "sg_execution_times", "tutorials/contributing", "tutorials/contributing_code", "tutorials/contributing_docs", "tutorials/dataset_basics", "tutorials/dicom_json", "tutorials/filesets", "tutorials/index", "tutorials/installation", "tutorials/pixel_data/compressing", "tutorials/pixel_data/creation", "tutorials/pixel_data/index", "tutorials/pixel_data/introduction", "tutorials/sr_basics", "tutorials/waveforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["auto_examples/dicomtree.rst", "auto_examples/image_processing/index.rst", "auto_examples/image_processing/plot_downsize_image.rst", "auto_examples/image_processing/plot_waveforms.rst", "auto_examples/image_processing/reslice.rst", "auto_examples/image_processing/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/input_output/index.rst", "auto_examples/input_output/plot_printing_dataset.rst", "auto_examples/input_output/plot_read_dicom.rst", "auto_examples/input_output/plot_read_fileset.rst", "auto_examples/input_output/plot_read_rtplan.rst", "auto_examples/input_output/plot_write_dicom.rst", "auto_examples/input_output/sg_execution_times.rst", "auto_examples/memory_dataset.rst", "auto_examples/metadata_processing/index.rst", "auto_examples/metadata_processing/plot_add_dict_entries.rst", "auto_examples/metadata_processing/plot_anonymize.rst", "auto_examples/metadata_processing/plot_sequences.rst", "auto_examples/metadata_processing/sg_execution_times.rst", "auto_examples/plot_dicom_difference.rst", "auto_examples/sg_execution_times.rst", "auto_examples/show_charset_name.rst", "faq/index.rst", "guides/cli/cli_codify.rst", "guides/cli/cli_dev.rst", "guides/cli/cli_guide.rst", "guides/cli/cli_intro.rst", "guides/cli/cli_show.rst", "guides/decoding/decoder_options.rst", "guides/decoding/decoder_plugins.rst", "guides/decoding/index.rst", "guides/element_value_types.rst", "guides/encoding/encoder_plugin_options.rst", "guides/encoding/encoder_plugins.rst", "guides/encoding/index.rst", "guides/encoding/jpeg_2k.rst", "guides/encoding/jpeg_ls.rst", "guides/encoding/rle_lossless.rst", "guides/glossary.rst", "guides/index.rst", "guides/plugin_table.rst", "guides/user/base_element.rst", "guides/user/best_practices.rst", "guides/user/image_data_compression.rst", "guides/user/image_data_handlers.rst", "guides/user/index.rst", "guides/user/private_data_elements.rst", "guides/user/viewing_images.rst", "guides/user/working_with_overlays.rst", "guides/user/working_with_pixel_data.rst", "guides/user/working_with_waveforms.rst", "guides/user/writing_files.rst", "guides/writing_documentation.rst", "index.rst", "reference/charset.rst", "reference/config.rst", "reference/data.rst", "reference/datadict.rst", "reference/dataset.rst", "reference/elem.rst", "reference/elem.dataelem.rst", "reference/elem.multival.rst", "reference/elem.sequence.rst", "reference/elem.tag.rst", "reference/elem.valuerep.rst", "reference/elem.values.rst", "reference/encaps.rst", "reference/errors.rst", "reference/examples.rst", "reference/fileio.rst", "reference/fileio.base.rst", "reference/fileio.read.rst", "reference/fileio.util.rst", "reference/fileio.write.rst", "reference/fileset.rst", "reference/generated/pydicom.charset.convert_encodings.rst", "reference/generated/pydicom.charset.decode_bytes.rst", "reference/generated/pydicom.charset.decode_element.rst", "reference/generated/pydicom.charset.encode_string.rst", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS.rst", "reference/generated/pydicom.config.DS_decimal.rst", "reference/generated/pydicom.config.DS_numpy.rst", "reference/generated/pydicom.config.IGNORE.rst", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR.rst", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR.rst", "reference/generated/pydicom.config.RAISE.rst", "reference/generated/pydicom.config.WARN.rst", "reference/generated/pydicom.config.allow_DS_float.rst", "reference/generated/pydicom.config.assume_implicit_vr_switch.rst", "reference/generated/pydicom.config.convert_wrong_length_to_UN.rst", "reference/generated/pydicom.config.data_element_callback.rst", "reference/generated/pydicom.config.data_element_callback_kwargs.rst", "reference/generated/pydicom.config.datetime_conversion.rst", "reference/generated/pydicom.config.debug.rst", "reference/generated/pydicom.config.enforce_valid_values.rst", "reference/generated/pydicom.config.future_behavior.rst", "reference/generated/pydicom.config.pixel_data_handlers.rst", "reference/generated/pydicom.config.reset_data_element_callback.rst", "reference/generated/pydicom.config.settings.rst", "reference/generated/pydicom.config.show_file_meta.rst", "reference/generated/pydicom.config.use_DS_decimal.rst", "reference/generated/pydicom.config.use_DS_numpy.rst", "reference/generated/pydicom.config.use_IS_numpy.rst", "reference/generated/pydicom.data.get_charset_files.rst", "reference/generated/pydicom.data.get_palette_files.rst", "reference/generated/pydicom.data.get_testdata_file.rst", "reference/generated/pydicom.data.get_testdata_files.rst", "reference/generated/pydicom.datadict.add_dict_entries.rst", "reference/generated/pydicom.datadict.add_dict_entry.rst", "reference/generated/pydicom.datadict.add_private_dict_entries.rst", "reference/generated/pydicom.datadict.add_private_dict_entry.rst", "reference/generated/pydicom.datadict.dictionary_VM.rst", "reference/generated/pydicom.datadict.dictionary_VR.rst", "reference/generated/pydicom.datadict.dictionary_description.rst", "reference/generated/pydicom.datadict.dictionary_has_tag.rst", "reference/generated/pydicom.datadict.dictionary_is_retired.rst", "reference/generated/pydicom.datadict.dictionary_keyword.rst", "reference/generated/pydicom.datadict.get_entry.rst", "reference/generated/pydicom.datadict.get_private_entry.rst", "reference/generated/pydicom.datadict.keyword_for_tag.rst", "reference/generated/pydicom.datadict.mask_match.rst", "reference/generated/pydicom.datadict.private_dictionary_VM.rst", "reference/generated/pydicom.datadict.private_dictionary_VR.rst", "reference/generated/pydicom.datadict.private_dictionary_description.rst", "reference/generated/pydicom.datadict.repeater_has_keyword.rst", "reference/generated/pydicom.datadict.repeater_has_tag.rst", "reference/generated/pydicom.datadict.tag_for_keyword.rst", "reference/generated/pydicom.dataelem.DataElement.rst", "reference/generated/pydicom.dataelem.DataElement_from_raw.rst", "reference/generated/pydicom.dataelem.RawDataElement.rst", "reference/generated/pydicom.dataelem.convert_raw_data_element.rst", "reference/generated/pydicom.dataset.Dataset.rst", "reference/generated/pydicom.dataset.FileDataset.rst", "reference/generated/pydicom.dataset.FileMetaDataset.rst", "reference/generated/pydicom.dataset.PrivateBlock.rst", "reference/generated/pydicom.dataset.validate_file_meta.rst", "reference/generated/pydicom.encaps.decode_data_sequence.rst", "reference/generated/pydicom.encaps.defragment_data.rst", "reference/generated/pydicom.encaps.encapsulate.rst", "reference/generated/pydicom.encaps.encapsulate_buffer.rst", "reference/generated/pydicom.encaps.encapsulate_extended.rst", "reference/generated/pydicom.encaps.encapsulate_extended_buffer.rst", "reference/generated/pydicom.encaps.fragment_frame.rst", "reference/generated/pydicom.encaps.generate_fragmented_frames.rst", "reference/generated/pydicom.encaps.generate_fragments.rst", "reference/generated/pydicom.encaps.generate_frames.rst", "reference/generated/pydicom.encaps.generate_pixel_data.rst", "reference/generated/pydicom.encaps.generate_pixel_data_fragment.rst", "reference/generated/pydicom.encaps.generate_pixel_data_frame.rst", "reference/generated/pydicom.encaps.get_frame.rst", "reference/generated/pydicom.encaps.get_frame_offsets.rst", "reference/generated/pydicom.encaps.itemize_fragment.rst", "reference/generated/pydicom.encaps.itemize_frame.rst", "reference/generated/pydicom.encaps.parse_basic_offsets.rst", "reference/generated/pydicom.encaps.parse_fragments.rst", "reference/generated/pydicom.encaps.read_item.rst", "reference/generated/pydicom.errors.InvalidDicomError.rst", "reference/generated/pydicom.examples.get_path.rst", "reference/generated/pydicom.filebase.DicomBytesIO.rst", "reference/generated/pydicom.filebase.DicomFile.rst", "reference/generated/pydicom.filebase.DicomFileLike.rst", "reference/generated/pydicom.filebase.DicomIO.rst", "reference/generated/pydicom.filereader.data_element_generator.rst", "reference/generated/pydicom.filereader.data_element_offset_to_value.rst", "reference/generated/pydicom.filereader.dcmread.rst", "reference/generated/pydicom.filereader.read_dataset.rst", "reference/generated/pydicom.filereader.read_deferred_data_element.rst", "reference/generated/pydicom.filereader.read_file_meta_info.rst", "reference/generated/pydicom.filereader.read_partial.rst", "reference/generated/pydicom.filereader.read_preamble.rst", "reference/generated/pydicom.filereader.read_sequence.rst", "reference/generated/pydicom.filereader.read_sequence_item.rst", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS.rst", "reference/generated/pydicom.fileset.FileInstance.rst", "reference/generated/pydicom.fileset.FileSet.rst", "reference/generated/pydicom.fileset.RecordNode.rst", "reference/generated/pydicom.fileset.generate_filename.rst", "reference/generated/pydicom.fileset.is_conformant_file_id.rst", "reference/generated/pydicom.fileutil.absorb_delimiter_item.rst", "reference/generated/pydicom.fileutil.find_bytes.rst", "reference/generated/pydicom.fileutil.find_delimiter.rst", "reference/generated/pydicom.fileutil.length_of_undefined_length.rst", "reference/generated/pydicom.fileutil.read_undefined_length_value.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element.rst", "reference/generated/pydicom.filewriter.dcmwrite.rst", "reference/generated/pydicom.filewriter.multi_string.rst", "reference/generated/pydicom.filewriter.write_ATvalue.rst", "reference/generated/pydicom.filewriter.write_DA.rst", "reference/generated/pydicom.filewriter.write_DT.rst", "reference/generated/pydicom.filewriter.write_OBvalue.rst", "reference/generated/pydicom.filewriter.write_OWvalue.rst", "reference/generated/pydicom.filewriter.write_PN.rst", "reference/generated/pydicom.filewriter.write_TM.rst", "reference/generated/pydicom.filewriter.write_UI.rst", "reference/generated/pydicom.filewriter.write_UN.rst", "reference/generated/pydicom.filewriter.write_data_element.rst", "reference/generated/pydicom.filewriter.write_dataset.rst", "reference/generated/pydicom.filewriter.write_file_meta_info.rst", "reference/generated/pydicom.filewriter.write_number_string.rst", "reference/generated/pydicom.filewriter.write_numbers.rst", "reference/generated/pydicom.filewriter.write_sequence.rst", "reference/generated/pydicom.filewriter.write_sequence_item.rst", "reference/generated/pydicom.filewriter.write_string.rst", "reference/generated/pydicom.filewriter.write_text.rst", "reference/generated/pydicom.hooks.Hooks.rst", "reference/generated/pydicom.hooks.hooks.rst", "reference/generated/pydicom.hooks.raw_element_value.rst", "reference/generated/pydicom.hooks.raw_element_value_fix_separator.rst", "reference/generated/pydicom.hooks.raw_element_value_retry.rst", "reference/generated/pydicom.hooks.raw_element_vr.rst", "reference/generated/pydicom.misc.is_dicom.rst", "reference/generated/pydicom.misc.size_in_bytes.rst", "reference/generated/pydicom.multival.MultiValue.rst", "reference/generated/pydicom.overlays.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler.rst", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler.rst", "reference/generated/pydicom.pixel_data_handlers.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pillow_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler.rst", "reference/generated/pydicom.pixel_data_handlers.rle_handler.rst", "reference/generated/pydicom.pixels.apply_color_lut.rst", "reference/generated/pydicom.pixels.apply_icc_profile.rst", "reference/generated/pydicom.pixels.apply_modality_lut.rst", "reference/generated/pydicom.pixels.apply_presentation_lut.rst", "reference/generated/pydicom.pixels.apply_rescale.rst", "reference/generated/pydicom.pixels.apply_voi.rst", "reference/generated/pydicom.pixels.apply_voi_lut.rst", "reference/generated/pydicom.pixels.apply_windowing.rst", "reference/generated/pydicom.pixels.as_pixel_options.rst", "reference/generated/pydicom.pixels.compress.rst", "reference/generated/pydicom.pixels.convert_color_space.rst", "reference/generated/pydicom.pixels.create_icc_transform.rst", "reference/generated/pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.ExplicitVRBigEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder.rst", "reference/generated/pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEG2000Decoder.rst", "reference/generated/pydicom.pixels.decoders.JPEG2000LosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGBaseline8BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGExtended12BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLSLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLSNearLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLosslessSV1Decoder.rst", "reference/generated/pydicom.pixels.decoders.RLELosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner.rst", "reference/generated/pydicom.pixels.decoders.base.Decoder.rst", "reference/generated/pydicom.pixels.decompress.rst", "reference/generated/pydicom.pixels.encoders.JPEG2000Encoder.rst", "reference/generated/pydicom.pixels.encoders.JPEG2000LosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.JPEGLSLosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.JPEGLSNearLosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.RLELosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.base.EncodeRunner.rst", "reference/generated/pydicom.pixels.encoders.base.Encoder.rst", "reference/generated/pydicom.pixels.get_decoder.rst", "reference/generated/pydicom.pixels.get_encoder.rst", "reference/generated/pydicom.pixels.iter_pixels.rst", "reference/generated/pydicom.pixels.pack_bits.rst", "reference/generated/pydicom.pixels.pixel_array.rst", "reference/generated/pydicom.pixels.processing.apply_color_lut.rst", "reference/generated/pydicom.pixels.processing.apply_icc_profile.rst", "reference/generated/pydicom.pixels.processing.apply_modality_lut.rst", "reference/generated/pydicom.pixels.processing.apply_presentation_lut.rst", "reference/generated/pydicom.pixels.processing.apply_rescale.rst", "reference/generated/pydicom.pixels.processing.apply_voi.rst", "reference/generated/pydicom.pixels.processing.apply_voi_lut.rst", "reference/generated/pydicom.pixels.processing.apply_windowing.rst", "reference/generated/pydicom.pixels.processing.convert_color_space.rst", "reference/generated/pydicom.pixels.processing.create_icc_transform.rst", "reference/generated/pydicom.pixels.set_pixel_data.rst", "reference/generated/pydicom.pixels.unpack_bits.rst", "reference/generated/pydicom.pixels.utils.as_pixel_options.rst", "reference/generated/pydicom.pixels.utils.compress.rst", "reference/generated/pydicom.pixels.utils.decompress.rst", "reference/generated/pydicom.pixels.utils.expand_ybr422.rst", "reference/generated/pydicom.pixels.utils.get_expected_length.rst", "reference/generated/pydicom.pixels.utils.get_image_pixel_ids.rst", "reference/generated/pydicom.pixels.utils.get_j2k_parameters.rst", "reference/generated/pydicom.pixels.utils.get_nr_frames.rst", "reference/generated/pydicom.pixels.utils.iter_pixels.rst", "reference/generated/pydicom.pixels.utils.pack_bits.rst", "reference/generated/pydicom.pixels.utils.pixel_array.rst", "reference/generated/pydicom.pixels.utils.pixel_dtype.rst", "reference/generated/pydicom.pixels.utils.reshape_pixel_array.rst", "reference/generated/pydicom.pixels.utils.set_pixel_data.rst", "reference/generated/pydicom.pixels.utils.unpack_bits.rst", "reference/generated/pydicom.sequence.Sequence.rst", "reference/generated/pydicom.sr.Code.rst", "reference/generated/pydicom.sr.Collection.rst", "reference/generated/pydicom.sr.Concepts.rst", "reference/generated/pydicom.tag.BaseTag.rst", "reference/generated/pydicom.tag.Tag.rst", "reference/generated/pydicom.tag.TupleTag.rst", "reference/generated/pydicom.tag.tag_in_exception.rst", "reference/generated/pydicom.uid.AcquisitionContextSRStorage.rst", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pydicom.uid.AllTransferSyntaxes.rst", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage.rst", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage.rst", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage.rst", "reference/generated/pydicom.uid.BasicTextSRStorage.rst", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.BodyPositionWaveformStorage.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CTImageStorage.rst", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pydicom.uid.ChestCADSRStorage.rst", "reference/generated/pydicom.uid.ColonCADSRStorage.rst", "reference/generated/pydicom.uid.ColorPaletteStorage.rst", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.Comprehensive3DSRStorage.rst", "reference/generated/pydicom.uid.ComprehensiveSRStorage.rst", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage.rst", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage.rst", "reference/generated/pydicom.uid.CornealTopographyMapStorage.rst", "reference/generated/pydicom.uid.DICOS2DAITStorage.rst", "reference/generated/pydicom.uid.DICOS3DAITStorage.rst", "reference/generated/pydicom.uid.DICOSCTImageStorage.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage.rst", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage.rst", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.EddyCurrentImageStorage.rst", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage.rst", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage.rst", "reference/generated/pydicom.uid.EncapsulatedCDAStorage.rst", "reference/generated/pydicom.uid.EncapsulatedMTLStorage.rst", "reference/generated/pydicom.uid.EncapsulatedOBJStorage.rst", "reference/generated/pydicom.uid.EncapsulatedPDFStorage.rst", "reference/generated/pydicom.uid.EncapsulatedSTLStorage.rst", "reference/generated/pydicom.uid.EnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.EnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.EnhancedRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedSRStorage.rst", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage.rst", "reference/generated/pydicom.uid.EnhancedXAImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRFImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.ExplicitVRBigEndian.rst", "reference/generated/pydicom.uid.ExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.ExtensibleSRStorage.rst", "reference/generated/pydicom.uid.General32bitECGWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralECGWaveformStorage.rst", "reference/generated/pydicom.uid.GenericImplantTemplateStorage.rst", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.HEVCM10P51.rst", "reference/generated/pydicom.uid.HEVCMP51.rst", "reference/generated/pydicom.uid.HTJ2K.rst", "reference/generated/pydicom.uid.HTJ2KLossless.rst", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL.rst", "reference/generated/pydicom.uid.HangingProtocolStorage.rst", "reference/generated/pydicom.uid.HemodynamicWaveformStorage.rst", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage.rst", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage.rst", "reference/generated/pydicom.uid.ImplantationPlanSRStorage.rst", "reference/generated/pydicom.uid.ImplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pydicom.uid.InventoryStorage.rst", "reference/generated/pydicom.uid.JPEG2000.rst", "reference/generated/pydicom.uid.JPEG2000Lossless.rst", "reference/generated/pydicom.uid.JPEG2000MC.rst", "reference/generated/pydicom.uid.JPEG2000MCLossless.rst", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGBaseline8Bit.rst", "reference/generated/pydicom.uid.JPEGExtended12Bit.rst", "reference/generated/pydicom.uid.JPEGLSLossless.rst", "reference/generated/pydicom.uid.JPEGLSNearLossless.rst", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGLossless.rst", "reference/generated/pydicom.uid.JPEGLosslessSV1.rst", "reference/generated/pydicom.uid.JPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate.rst", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.LensometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.MPEG2MPHL.rst", "reference/generated/pydicom.uid.MPEG2MPHLF.rst", "reference/generated/pydicom.uid.MPEG2MPML.rst", "reference/generated/pydicom.uid.MPEG2MPMLF.rst", "reference/generated/pydicom.uid.MPEG4HP41.rst", "reference/generated/pydicom.uid.MPEG4HP41BD.rst", "reference/generated/pydicom.uid.MPEG4HP41BDF.rst", "reference/generated/pydicom.uid.MPEG4HP41F.rst", "reference/generated/pydicom.uid.MPEG4HP422D.rst", "reference/generated/pydicom.uid.MPEG4HP422DF.rst", "reference/generated/pydicom.uid.MPEG4HP423D.rst", "reference/generated/pydicom.uid.MPEG4HP423DF.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREO.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREOF.rst", "reference/generated/pydicom.uid.MPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.MRImageStorage.rst", "reference/generated/pydicom.uid.MRSpectroscopyStorage.rst", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pydicom.uid.MammographyCADSRStorage.rst", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage.rst", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.NuclearMedicineImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage.rst", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID.rst", "reference/generated/pydicom.uid.ParametricMapStorage.rst", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PhotoacousticImageStorage.rst", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage.rst", "reference/generated/pydicom.uid.PrivateTransferSyntaxes.rst", "reference/generated/pydicom.uid.ProcedureLogStorage.rst", "reference/generated/pydicom.uid.ProtocolApprovalStorage.rst", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.RE_VALID_UID.rst", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX.rst", "reference/generated/pydicom.uid.RLELossless.rst", "reference/generated/pydicom.uid.RLETransferSyntaxes.rst", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTDoseStorage.rst", "reference/generated/pydicom.uid.RTImageStorage.rst", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTIonPlanStorage.rst", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage.rst", "reference/generated/pydicom.uid.RTPhysicianIntentStorage.rst", "reference/generated/pydicom.uid.RTPlanStorage.rst", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage.rst", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetStorage.rst", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage.rst", "reference/generated/pydicom.uid.RTStructureSetStorage.rst", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage.rst", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.RawDataStorage.rst", "reference/generated/pydicom.uid.RealWorldValueMappingStorage.rst", "reference/generated/pydicom.uid.RespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.RoboticArmRadiationStorage.rst", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio.rst", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.SegmentationStorage.rst", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SpatialFiducialsStorage.rst", "reference/generated/pydicom.uid.SpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage.rst", "reference/generated/pydicom.uid.StereometricRelationshipStorage.rst", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.SurfaceScanMeshStorage.rst", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage.rst", "reference/generated/pydicom.uid.SurfaceSegmentationStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage.rst", "reference/generated/pydicom.uid.TractographyResultsStorage.rst", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage.rst", "reference/generated/pydicom.uid.UID.rst", "reference/generated/pydicom.uid.UltrasoundImageStorage.rst", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes.rst", "reference/generated/pydicom.uid.VLEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VLMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage.rst", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.WaveformAnnotationSRStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage.rst", "reference/generated/pydicom.uid.XRayAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pydicom.uid.generate_uid.rst", "reference/generated/pydicom.uid.register_transfer_syntax.rst", "reference/generated/pydicom.valuerep.DA.rst", "reference/generated/pydicom.valuerep.DS.rst", "reference/generated/pydicom.valuerep.DSdecimal.rst", "reference/generated/pydicom.valuerep.DSfloat.rst", "reference/generated/pydicom.valuerep.DT.rst", "reference/generated/pydicom.valuerep.IS.rst", "reference/generated/pydicom.valuerep.ISfloat.rst", "reference/generated/pydicom.valuerep.PersonName.rst", "reference/generated/pydicom.valuerep.TM.rst", "reference/generated/pydicom.valuerep.VR.rst", "reference/generated/pydicom.valuerep.format_number_as_ds.rst", "reference/generated/pydicom.valuerep.is_valid_ds.rst", "reference/generated/pydicom.values.convert_AE_string.rst", "reference/generated/pydicom.values.convert_ATvalue.rst", "reference/generated/pydicom.values.convert_DA_string.rst", "reference/generated/pydicom.values.convert_DS_string.rst", "reference/generated/pydicom.values.convert_DT_string.rst", "reference/generated/pydicom.values.convert_IS_string.rst", "reference/generated/pydicom.values.convert_OBvalue.rst", "reference/generated/pydicom.values.convert_OWvalue.rst", "reference/generated/pydicom.values.convert_PN.rst", "reference/generated/pydicom.values.convert_SQ.rst", "reference/generated/pydicom.values.convert_TM_string.rst", "reference/generated/pydicom.values.convert_UI.rst", "reference/generated/pydicom.values.convert_UN.rst", "reference/generated/pydicom.values.convert_UR_string.rst", "reference/generated/pydicom.values.convert_numbers.rst", "reference/generated/pydicom.values.convert_single_string.rst", "reference/generated/pydicom.values.convert_string.rst", "reference/generated/pydicom.values.convert_tag.rst", "reference/generated/pydicom.values.convert_text.rst", "reference/generated/pydicom.values.convert_value.rst", "reference/generated/pydicom.values.multi_string.rst", "reference/generated/pydicom.waveforms.numpy_handler.rst", "reference/handlers.rst", "reference/handlers.pixel_data.rst", "reference/hooks.rst", "reference/index.rst", "reference/misc.rst", "reference/overlays.rst", "reference/pixels.rst", "reference/pixels.decoders.rst", "reference/pixels.encoders.rst", "reference/pixels.processing.rst", "reference/pixels.utils.rst", "reference/sr.rst", "reference/uid.rst", "reference/waveforms.rst", "release_notes/index.rst", "release_notes/v0.9.2.rst", "release_notes/v0.9.3.rst", "release_notes/v0.9.4.rst", "release_notes/v0.9.5.rst", "release_notes/v0.9.6.rst", "release_notes/v0.9.7.rst", "release_notes/v0.9.8.rst", "release_notes/v0.9.9.rst", "release_notes/v1.0.0.rst", "release_notes/v1.1.0.rst", "release_notes/v1.2.0.rst", "release_notes/v1.3.0.rst", "release_notes/v1.4.0.rst", "release_notes/v1.4.1.rst", "release_notes/v2.0.0.rst", "release_notes/v2.1.0.rst", "release_notes/v2.1.1.rst", "release_notes/v2.2.0.rst", "release_notes/v2.3.0.rst", "release_notes/v2.4.0.rst", "release_notes/v3.0.0.rst", "release_notes/v3.1.0.rst", "sg_execution_times.rst", "tutorials/contributing.rst", "tutorials/contributing_code.rst", "tutorials/contributing_docs.rst", "tutorials/dataset_basics.rst", "tutorials/dicom_json.rst", "tutorials/filesets.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/pixel_data/compressing.rst", "tutorials/pixel_data/creation.rst", "tutorials/pixel_data/index.rst", "tutorials/pixel_data/introduction.rst", "tutorials/sr_basics.rst", "tutorials/waveforms.rst"], "indexentries": {"__init__() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.__init__", false]], "__init__() (pydicom.dataelem.rawdataelement method)": [[130, "pydicom.dataelem.RawDataElement.__init__", false]], "__init__() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.__init__", false]], "__init__() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.__init__", false]], "__init__() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.__init__", false]], "__init__() (pydicom.dataset.privateblock method)": [[135, "pydicom.dataset.PrivateBlock.__init__", false]], "__init__() (pydicom.filebase.dicombytesio method)": [[159, "pydicom.filebase.DicomBytesIO.__init__", false]], "__init__() (pydicom.filebase.dicomfilelike method)": [[161, "pydicom.filebase.DicomFileLike.__init__", false]], "__init__() (pydicom.filebase.dicomio method)": [[162, "pydicom.filebase.DicomIO.__init__", false]], "__init__() (pydicom.fileset.fileinstance method)": [[174, "pydicom.fileset.FileInstance.__init__", false]], "__init__() (pydicom.fileset.fileset method)": [[175, "pydicom.fileset.FileSet.__init__", false]], "__init__() (pydicom.fileset.recordnode method)": [[176, "pydicom.fileset.RecordNode.__init__", false]], "__init__() (pydicom.hooks.hooks method)": [[206, "pydicom.hooks.Hooks.__init__", false]], "__init__() (pydicom.multival.multivalue method)": [[214, "pydicom.multival.MultiValue.__init__", false]], "__init__() (pydicom.pixels.decoders.base.decoder method)": [[251, "pydicom.pixels.decoders.base.Decoder.__init__", false]], "__init__() (pydicom.pixels.decoders.base.decoderunner method)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.__init__", false]], "__init__() (pydicom.pixels.encoders.base.encoder method)": [[259, "pydicom.pixels.encoders.base.Encoder.__init__", false]], "__init__() (pydicom.pixels.encoders.base.encoderunner method)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.__init__", false]], "__init__() (pydicom.sequence.sequence method)": [[292, "pydicom.sequence.Sequence.__init__", false]], "__init__() (pydicom.sr.code method)": [[293, "pydicom.sr.Code.__init__", false]], "__init__() (pydicom.sr.collection method)": [[294, "pydicom.sr.Collection.__init__", false]], "__init__() (pydicom.sr.concepts method)": [[295, "pydicom.sr.Concepts.__init__", false]], "__init__() (pydicom.tag.basetag method)": [[296, "pydicom.tag.BaseTag.__init__", false]], "__init__() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.__init__", false]], "__init__() (pydicom.valuerep.da method)": [[539, "pydicom.valuerep.DA.__init__", false]], "__init__() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.__init__", false]], "__init__() (pydicom.valuerep.dsfloat method)": [[542, "pydicom.valuerep.DSfloat.__init__", false]], "__init__() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.__init__", false]], "__init__() (pydicom.valuerep.is method)": [[544, "pydicom.valuerep.IS.__init__", false]], "__init__() (pydicom.valuerep.isfloat method)": [[545, "pydicom.valuerep.ISfloat.__init__", false]], "__init__() (pydicom.valuerep.personname method)": [[546, "pydicom.valuerep.PersonName.__init__", false]], "__init__() (pydicom.valuerep.tm method)": [[547, "pydicom.valuerep.TM.__init__", false]], "__init__() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.__init__", false]], "absorb_delimiter_item() (in module pydicom.fileutil)": [[179, "pydicom.fileutil.absorb_delimiter_item", false]], "acquisitioncontextsrstorage (in module pydicom.uid)": [[300, "pydicom.uid.AcquisitionContextSRStorage", false]], "add() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.add", false]], "add() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.add", false]], "add() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.add", false]], "add() (pydicom.fileset.fileset method)": [[175, "pydicom.fileset.FileSet.add", false]], "add() (pydicom.fileset.recordnode method)": [[176, "pydicom.fileset.RecordNode.add", false]], "add_custom() (pydicom.fileset.fileset method)": [[175, "pydicom.fileset.FileSet.add_custom", false]], "add_dict_entries() (in module pydicom.datadict)": [[108, "pydicom.datadict.add_dict_entries", false]], "add_dict_entry() (in module pydicom.datadict)": [[109, "pydicom.datadict.add_dict_entry", false]], "add_new() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.add_new", false]], "add_new() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.add_new", false]], "add_new() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.add_new", false]], "add_new() (pydicom.dataset.privateblock method)": [[135, "pydicom.dataset.PrivateBlock.add_new", false]], "add_new_private() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.add_new_private", false]], "add_new_private() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.add_new_private", false]], "add_new_private() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.add_new_private", false]], "add_plugin() (pydicom.pixels.decoders.base.decoder method)": [[251, "pydicom.pixels.decoders.base.Decoder.add_plugin", false]], "add_plugin() (pydicom.pixels.encoders.base.encoder method)": [[259, "pydicom.pixels.encoders.base.Encoder.add_plugin", false]], "add_plugins() (pydicom.pixels.decoders.base.decoder method)": [[251, "pydicom.pixels.decoders.base.Decoder.add_plugins", false]], "add_plugins() (pydicom.pixels.encoders.base.encoder method)": [[259, "pydicom.pixels.encoders.base.Encoder.add_plugins", false]], "add_private_dict_entries() (in module pydicom.datadict)": [[110, "pydicom.datadict.add_private_dict_entries", false]], "add_private_dict_entry() (in module pydicom.datadict)": [[111, "pydicom.datadict.add_private_dict_entry", false]], "adjusted() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.adjusted", false]], "advancedblendingpresentationstatestorage (in module pydicom.uid)": [[301, "pydicom.uid.AdvancedBlendingPresentationStateStorage", false]], "allow_ds_float (in module pydicom.config)": [[88, "pydicom.config.allow_DS_float", false]], "alltransfersyntaxes (in module pydicom.uid)": [[302, "pydicom.uid.AllTransferSyntaxes", false]], "alphabetic (pydicom.valuerep.personname property)": [[546, "pydicom.valuerep.PersonName.alphabetic", false]], "ambulatoryecgwaveformstorage (in module pydicom.uid)": [[303, "pydicom.uid.AmbulatoryECGWaveformStorage", false]], "ancestors (pydicom.fileset.recordnode property)": [[176, "pydicom.fileset.RecordNode.ancestors", false]], "append() (pydicom.multival.multivalue method)": [[214, "pydicom.multival.MultiValue.append", false]], "append() (pydicom.sequence.sequence method)": [[292, "pydicom.sequence.Sequence.append", false]], "apply_color_lut() (in module pydicom.pixels)": [[222, "pydicom.pixels.apply_color_lut", false]], "apply_color_lut() (in module pydicom.pixels.processing)": [[265, "pydicom.pixels.processing.apply_color_lut", false]], "apply_icc_profile() (in module pydicom.pixels)": [[223, "pydicom.pixels.apply_icc_profile", false]], "apply_icc_profile() (in module pydicom.pixels.processing)": [[266, "pydicom.pixels.processing.apply_icc_profile", false]], "apply_j2k_corrections (in module pydicom.config)": [[80, "pydicom.config.APPLY_J2K_CORRECTIONS", false]], "apply_modality_lut() (in module pydicom.pixels)": [[224, "pydicom.pixels.apply_modality_lut", false]], "apply_modality_lut() (in module pydicom.pixels.processing)": [[267, "pydicom.pixels.processing.apply_modality_lut", false]], "apply_presentation_lut() (in module pydicom.pixels)": [[225, "pydicom.pixels.apply_presentation_lut", false]], "apply_presentation_lut() (in module pydicom.pixels.processing)": [[268, "pydicom.pixels.processing.apply_presentation_lut", false]], "apply_rescale() (in module pydicom.pixels)": [[226, "pydicom.pixels.apply_rescale", false]], "apply_rescale() (in module pydicom.pixels.processing)": [[269, "pydicom.pixels.processing.apply_rescale", false]], "apply_voi() (in module pydicom.pixels)": [[227, "pydicom.pixels.apply_voi", false]], "apply_voi() (in module pydicom.pixels.processing)": [[270, "pydicom.pixels.processing.apply_voi", false]], "apply_voi_lut() (in module pydicom.pixels)": [[228, "pydicom.pixels.apply_voi_lut", false]], "apply_voi_lut() (in module pydicom.pixels.processing)": [[271, "pydicom.pixels.processing.apply_voi_lut", false]], "apply_windowing() (in module pydicom.pixels)": [[229, "pydicom.pixels.apply_windowing", false]], "apply_windowing() (in module pydicom.pixels.processing)": [[272, "pydicom.pixels.processing.apply_windowing", false]], "arterialpulsewaveformstorage (in module pydicom.uid)": [[304, "pydicom.uid.ArterialPulseWaveformStorage", false]], "as_array() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[220, "pydicom.pixel_data_handlers.pylibjpeg_handler.as_array", false]], "as_array() (pydicom.pixels.decoders.base.decoder method)": [[251, "pydicom.pixels.decoders.base.Decoder.as_array", false]], "as_buffer() (pydicom.pixels.decoders.base.decoder method)": [[251, "pydicom.pixels.decoders.base.Decoder.as_buffer", false]], "as_integer_ratio() (pydicom.tag.basetag method)": [[296, "pydicom.tag.BaseTag.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.dsfloat method)": [[542, "pydicom.valuerep.DSfloat.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.is method)": [[544, "pydicom.valuerep.IS.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.isfloat method)": [[545, "pydicom.valuerep.ISfloat.as_integer_ratio", false]], "as_pixel_options() (in module pydicom.pixels)": [[230, "pydicom.pixels.as_pixel_options", false]], "as_pixel_options() (in module pydicom.pixels.utils)": [[277, "pydicom.pixels.utils.as_pixel_options", false]], "as_tuple() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.as_tuple", false]], "assume_implicit_vr_switch (in module pydicom.config)": [[89, "pydicom.config.assume_implicit_vr_switch", false]], "astimezone() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.astimezone", false]], "autorefractionmeasurementsstorage (in module pydicom.uid)": [[305, "pydicom.uid.AutorefractionMeasurementsStorage", false]], "available_plugins (pydicom.pixels.decoders.base.decoder property)": [[251, "pydicom.pixels.decoders.base.Decoder.available_plugins", false]], "available_plugins (pydicom.pixels.encoders.base.encoder property)": [[259, "pydicom.pixels.encoders.base.Encoder.available_plugins", false]], "basetag (class in pydicom.tag)": [[296, "pydicom.tag.BaseTag", false]], "basic_offset_table (pydicom.encaps.encapsulatedbuffer property)": [[67, "pydicom.encaps.EncapsulatedBuffer.basic_offset_table", false]], "basicstructureddisplaystorage (in module pydicom.uid)": [[306, "pydicom.uid.BasicStructuredDisplayStorage", false]], "basictextsrstorage (in module pydicom.uid)": [[307, "pydicom.uid.BasicTextSRStorage", false]], "basicvoiceaudiowaveformstorage (in module pydicom.uid)": [[308, "pydicom.uid.BasicVoiceAudioWaveformStorage", false]], "bit_count() (pydicom.tag.basetag method)": [[296, "pydicom.tag.BaseTag.bit_count", false]], "bit_count() (pydicom.valuerep.is method)": [[544, "pydicom.valuerep.IS.bit_count", false]], "bit_length() (pydicom.tag.basetag method)": [[296, "pydicom.tag.BaseTag.bit_length", false]], "bit_length() (pydicom.valuerep.is method)": [[544, "pydicom.valuerep.IS.bit_length", false]], "bits_allocated (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.bits_allocated", false]], "bits_allocated (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.bits_allocated", false]], "bits_stored (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.bits_stored", false]], "bits_stored (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.bits_stored", false]], "blendingsoftcopypresentationstatestorage (in module pydicom.uid)": [[309, "pydicom.uid.BlendingSoftcopyPresentationStateStorage", false]], "block_start (pydicom.dataset.privateblock attribute)": [[135, "pydicom.dataset.PrivateBlock.block_start", false]], "bodypositionwaveformstorage (in module pydicom.uid)": [[310, "pydicom.uid.BodyPositionWaveformStorage", false]], "breastprojectionxrayimagestorageforpresentation (in module pydicom.uid)": [[311, "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", false]], "breastprojectionxrayimagestorageforprocessing (in module pydicom.uid)": [[312, "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", false]], "breasttomosynthesisimagestorage (in module pydicom.uid)": [[313, "pydicom.uid.BreastTomosynthesisImageStorage", false]], "buffer (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.buffer", false]], "buffered_read_size (pydicom.config.settings property)": [[56, "pydicom.config.Settings.buffered_read_size", false]], "canonical() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.canonical", false]], "capitalize() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.capitalize", false]], "capitalize() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.capitalize", false]], "cardiacelectrophysiologywaveformstorage (in module pydicom.uid)": [[319, "pydicom.uid.CardiacElectrophysiologyWaveformStorage", false]], "carmphotonelectronradiationrecordstorage (in module pydicom.uid)": [[314, "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", false]], "carmphotonelectronradiationstorage (in module pydicom.uid)": [[315, "pydicom.uid.CArmPhotonElectronRadiationStorage", false]], "casefold() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.casefold", false]], "casefold() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.casefold", false]], "center() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.center", false]], "center() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.center", false]], "chestcadsrstorage (in module pydicom.uid)": [[320, "pydicom.uid.ChestCADSRStorage", false]], "children (pydicom.fileset.recordnode attribute)": [[176, "pydicom.fileset.RecordNode.children", false]], "cids() (pydicom.sr.concepts method)": [[295, "pydicom.sr.Concepts.CIDs", false]], "clear() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.clear", false]], "clear() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.clear", false]], "clear() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.clear", false]], "clear() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.clear", false]], "clear() (pydicom.fileset.fileset method)": [[175, "pydicom.fileset.FileSet.clear", false]], "clear() (pydicom.multival.multivalue method)": [[214, "pydicom.multival.MultiValue.clear", false]], "clear() (pydicom.sequence.sequence method)": [[292, "pydicom.sequence.Sequence.clear", false]], "close() (pydicom.filebase.dicombytesio method)": [[159, "pydicom.filebase.DicomBytesIO.close", false]], "close() (pydicom.filebase.dicomfilelike method)": [[161, "pydicom.filebase.DicomFileLike.close", false]], "close() (pydicom.filebase.dicomio method)": [[162, "pydicom.filebase.DicomIO.close", false]], "closed (pydicom.encaps.encapsulatedbuffer property)": [[67, "pydicom.encaps.EncapsulatedBuffer.closed", false]], "code (class in pydicom.sr)": [[293, "pydicom.sr.Code", false]], "collection (class in pydicom.sr)": [[294, "pydicom.sr.Collection", false]], "collections (pydicom.sr.concepts property)": [[295, "pydicom.sr.Concepts.collections", false]], "coloncadsrstorage (in module pydicom.uid)": [[321, "pydicom.uid.ColonCADSRStorage", false]], "colorpalettestorage (in module pydicom.uid)": [[322, "pydicom.uid.ColorPaletteStorage", false]], "colorsoftcopypresentationstatestorage (in module pydicom.uid)": [[323, "pydicom.uid.ColorSoftcopyPresentationStateStorage", false]], "columns (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.columns", false]], "columns (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.columns", false]], "combine() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.combine", false]], "compare() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.compare", false]], "compare_signal() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.compare_signal", false]], "compare_total() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.compare_total", false]], "compare_total_mag() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.compare_total_mag", false]], "component (pydicom.fileset.recordnode property)": [[176, "pydicom.fileset.RecordNode.component", false]], "components (pydicom.valuerep.personname property)": [[546, "pydicom.valuerep.PersonName.components", false]], "compositingplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[324, "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", false]], "comprehensive3dsrstorage (in module pydicom.uid)": [[325, "pydicom.uid.Comprehensive3DSRStorage", false]], "comprehensivesrstorage (in module pydicom.uid)": [[326, "pydicom.uid.ComprehensiveSRStorage", false]], "compress() (in module pydicom.pixels)": [[231, "pydicom.pixels.compress", false]], "compress() (in module pydicom.pixels.utils)": [[278, "pydicom.pixels.utils.compress", false]], "compress() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.compress", false]], "compress() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.compress", false]], "compress() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.compress", false]], "computedradiographyimagestorage (in module pydicom.uid)": [[327, "pydicom.uid.ComputedRadiographyImageStorage", false]], "concepts (class in pydicom.sr)": [[295, "pydicom.sr.Concepts", false]], "concepts (pydicom.sr.collection property)": [[294, "pydicom.sr.Collection.concepts", false]], "confocalmicroscopyimagestorage (in module pydicom.uid)": [[328, "pydicom.uid.ConfocalMicroscopyImageStorage", false]], "confocalmicroscopytiledpyramidalimagestorage (in module pydicom.uid)": [[329, "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", false]], "conjugate() (pydicom.tag.basetag method)": [[296, "pydicom.tag.BaseTag.conjugate", false]], "conjugate() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.conjugate", false]], "conjugate() (pydicom.valuerep.dsfloat method)": [[542, "pydicom.valuerep.DSfloat.conjugate", false]], "conjugate() (pydicom.valuerep.is method)": [[544, "pydicom.valuerep.IS.conjugate", false]], "conjugate() (pydicom.valuerep.isfloat method)": [[545, "pydicom.valuerep.ISfloat.conjugate", false]], "contentassessmentresultsstorage (in module pydicom.uid)": [[330, "pydicom.uid.ContentAssessmentResultsStorage", false]], "convert_ae_string() (in module pydicom.values)": [[551, "pydicom.values.convert_AE_string", false]], "convert_atvalue() (in module pydicom.values)": [[552, "pydicom.values.convert_ATvalue", false]], "convert_color_space() (in module pydicom.pixels)": [[232, "pydicom.pixels.convert_color_space", false]], "convert_color_space() (in module pydicom.pixels.processing)": [[273, "pydicom.pixels.processing.convert_color_space", false]], "convert_da_string() (in module pydicom.values)": [[553, "pydicom.values.convert_DA_string", false]], "convert_ds_string() (in module pydicom.values)": [[554, "pydicom.values.convert_DS_string", false]], "convert_dt_string() (in module pydicom.values)": [[555, "pydicom.values.convert_DT_string", false]], "convert_encodings() (in module pydicom.charset)": [[76, "pydicom.charset.convert_encodings", false]], "convert_is_string() (in module pydicom.values)": [[556, "pydicom.values.convert_IS_string", false]], "convert_numbers() (in module pydicom.values)": [[565, "pydicom.values.convert_numbers", false]], "convert_obvalue() (in module pydicom.values)": [[557, "pydicom.values.convert_OBvalue", false]], "convert_owvalue() (in module pydicom.values)": [[558, "pydicom.values.convert_OWvalue", false]], "convert_pixel_data() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.convert_pixel_data", false]], "convert_pixel_data() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.convert_pixel_data", false]], "convert_pixel_data() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.convert_pixel_data", false]], "convert_pn() (in module pydicom.values)": [[559, "pydicom.values.convert_PN", false]], "convert_raw_data_element() (in module pydicom.dataelem)": [[131, "pydicom.dataelem.convert_raw_data_element", false]], "convert_single_string() (in module pydicom.values)": [[566, "pydicom.values.convert_single_string", false]], "convert_sq() (in module pydicom.values)": [[560, "pydicom.values.convert_SQ", false]], "convert_string() (in module pydicom.values)": [[567, "pydicom.values.convert_string", false]], "convert_tag() (in module pydicom.values)": [[568, "pydicom.values.convert_tag", false]], "convert_text() (in module pydicom.values)": [[569, "pydicom.values.convert_text", false]], "convert_tm_string() (in module pydicom.values)": [[561, "pydicom.values.convert_TM_string", false]], "convert_ui() (in module pydicom.values)": [[562, "pydicom.values.convert_UI", false]], "convert_un() (in module pydicom.values)": [[563, "pydicom.values.convert_UN", false]], "convert_ur_string() (in module pydicom.values)": [[564, "pydicom.values.convert_UR_string", false]], "convert_value() (in module pydicom.values)": [[570, "pydicom.values.convert_value", false]], "convert_wrong_length_to_un (in module pydicom.config)": [[90, "pydicom.config.convert_wrong_length_to_UN", false]], "copy() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.copy", false]], "copy() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.copy", false]], "copy() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.copy", false]], "copy() (pydicom.fileset.fileset method)": [[175, "pydicom.fileset.FileSet.copy", false]], "copy_abs() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.copy_abs", false]], "copy_negate() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.copy_negate", false]], "copy_sign() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.copy_sign", false]], "cornealtopographymapstorage (in module pydicom.uid)": [[331, "pydicom.uid.CornealTopographyMapStorage", false]], "correct_ambiguous_vr() (in module pydicom.filewriter)": [[184, "pydicom.filewriter.correct_ambiguous_vr", false]], "correct_ambiguous_vr_element() (in module pydicom.filewriter)": [[185, "pydicom.filewriter.correct_ambiguous_vr_element", false]], "count() (pydicom.dataelem.rawdataelement method)": [[130, "pydicom.dataelem.RawDataElement.count", false]], "count() (pydicom.multival.multivalue method)": [[214, "pydicom.multival.MultiValue.count", false]], "count() (pydicom.sequence.sequence method)": [[292, "pydicom.sequence.Sequence.count", false]], "count() (pydicom.sr.code method)": [[293, "pydicom.sr.Code.count", false]], "count() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.count", false]], "count() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.count", false]], "create_data_element() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[216, "pydicom.pixel_data_handlers.gdcm_handler.create_data_element", false]], "create_icc_transform() (in module pydicom.pixels)": [[233, "pydicom.pixels.create_icc_transform", false]], "create_icc_transform() (in module pydicom.pixels.processing)": [[274, "pydicom.pixels.processing.create_icc_transform", false]], "create_image() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[216, "pydicom.pixel_data_handlers.gdcm_handler.create_image", false]], "ctdefinedprocedureprotocolstorage (in module pydicom.uid)": [[316, "pydicom.uid.CTDefinedProcedureProtocolStorage", false]], "ctimagestorage (in module pydicom.uid)": [[317, "pydicom.uid.CTImageStorage", false]], "ctime() (pydicom.valuerep.da method)": [[539, "pydicom.valuerep.DA.ctime", false]], "ctime() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.ctime", false]], "ctperformedprocedureprotocolstorage (in module pydicom.uid)": [[318, "pydicom.uid.CTPerformedProcedureProtocolStorage", false]], "da (class in pydicom.valuerep)": [[539, "pydicom.valuerep.DA", false]], "data_element() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.data_element", false]], "data_element() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.data_element", false]], "data_element() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.data_element", false]], "data_element_callback (in module pydicom.config)": [[91, "pydicom.config.data_element_callback", false]], "data_element_callback_kwargs (in module pydicom.config)": [[92, "pydicom.config.data_element_callback_kwargs", false]], "data_element_generator() (in module pydicom.filereader)": [[163, "pydicom.filereader.data_element_generator", false]], "data_element_offset_to_value() (in module pydicom.filereader)": [[164, "pydicom.filereader.data_element_offset_to_value", false]], "dataelement (class in pydicom.dataelem)": [[128, "pydicom.dataelem.DataElement", false]], "dataelement_from_raw() (in module pydicom.dataelem)": [[129, "pydicom.dataelem.DataElement_from_raw", false]], "dataset (class in pydicom.dataset)": [[132, "pydicom.dataset.Dataset", false]], "dataset (pydicom.dataset.privateblock attribute)": [[135, "pydicom.dataset.PrivateBlock.dataset", false]], "date() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.date", false]], "datetime_conversion (in module pydicom.config)": [[93, "pydicom.config.datetime_conversion", false]], "dcmread() (in module pydicom.filereader)": [[165, "pydicom.filereader.dcmread", false]], "dcmwrite() (in module pydicom.filewriter)": [[186, "pydicom.filewriter.dcmwrite", false]], "debug() (in module pydicom.config)": [[94, "pydicom.config.debug", false]], "decode() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.decode", false]], "decode() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.decode", false]], "decode() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.decode", false]], "decode() (pydicom.pixels.decoders.base.decoderunner method)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.decode", false]], "decode() (pydicom.valuerep.personname method)": [[546, "pydicom.valuerep.PersonName.decode", false]], "decode_bytes() (in module pydicom.charset)": [[77, "pydicom.charset.decode_bytes", false]], "decode_data_sequence() (in module pydicom.encaps)": [[137, "pydicom.encaps.decode_data_sequence", false]], "decode_element() (in module pydicom.charset)": [[78, "pydicom.charset.decode_element", false]], "decoder (class in pydicom.pixels.decoders.base)": [[251, "pydicom.pixels.decoders.base.Decoder", false]], "decoderunner (class in pydicom.pixels.decoders.base)": [[250, "pydicom.pixels.decoders.base.DecodeRunner", false]], "decompress() (in module pydicom.pixels)": [[252, "pydicom.pixels.decompress", false]], "decompress() (in module pydicom.pixels.utils)": [[279, "pydicom.pixels.utils.decompress", false]], "decompress() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.decompress", false]], "decompress() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.decompress", false]], "decompress() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.decompress", false]], "default_element_format (pydicom.dataset.dataset attribute)": [[132, "pydicom.dataset.Dataset.default_element_format", false]], "default_sequence_element_format (pydicom.dataset.dataset attribute)": [[132, "pydicom.dataset.Dataset.default_sequence_element_format", false]], "deflatedexplicitvrlittleendian (in module pydicom.uid)": [[339, "pydicom.uid.DeflatedExplicitVRLittleEndian", false]], "deflatedexplicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[234, "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", false]], "deformablespatialregistrationstorage (in module pydicom.uid)": [[340, "pydicom.uid.DeformableSpatialRegistrationStorage", false]], "defragment_data() (in module pydicom.encaps)": [[138, "pydicom.encaps.defragment_data", false]], "del_option() (pydicom.pixels.decoders.base.decoderunner method)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.del_option", false]], "del_option() (pydicom.pixels.encoders.base.encoderunner method)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.del_option", false]], "denominator (pydicom.tag.basetag attribute)": [[296, "pydicom.tag.BaseTag.denominator", false]], "denominator (pydicom.valuerep.is attribute)": [[544, "pydicom.valuerep.IS.denominator", false]], "depth (pydicom.fileset.recordnode property)": [[176, "pydicom.fileset.RecordNode.depth", false]], "dermoscopicphotographyimagestorage (in module pydicom.uid)": [[341, "pydicom.uid.DermoscopicPhotographyImageStorage", false]], "descriptor_character_set (pydicom.fileset.fileset property)": [[175, "pydicom.fileset.FileSet.descriptor_character_set", false]], "descriptor_file_id (pydicom.fileset.fileset property)": [[175, "pydicom.fileset.FileSet.descriptor_file_id", false]], "descripwidth (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.descripWidth", false]], "dicombytesio (class in pydicom.filebase)": [[159, "pydicom.filebase.DicomBytesIO", false]], "dicomfile() (in module pydicom.filebase)": [[160, "pydicom.filebase.DicomFile", false]], "dicomfilelike (class in pydicom.filebase)": [[161, "pydicom.filebase.DicomFileLike", false]], "dicomio (class in pydicom.filebase)": [[162, "pydicom.filebase.DicomIO", false]], "dicos2daitstorage (in module pydicom.uid)": [[332, "pydicom.uid.DICOS2DAITStorage", false]], "dicos3daitstorage (in module pydicom.uid)": [[333, "pydicom.uid.DICOS3DAITStorage", false]], "dicosctimagestorage (in module pydicom.uid)": [[334, "pydicom.uid.DICOSCTImageStorage", false]], "dicosdigitalxrayimagestorageforpresentation (in module pydicom.uid)": [[335, "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", false]], "dicosdigitalxrayimagestorageforprocessing (in module pydicom.uid)": [[336, "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", false]], "dicosquadrupoleresonancestorage (in module pydicom.uid)": [[337, "pydicom.uid.DICOSQuadrupoleResonanceStorage", false]], "dicosthreatdetectionreportstorage (in module pydicom.uid)": [[338, "pydicom.uid.DICOSThreatDetectionReportStorage", false]], "dictionary_description() (in module pydicom.datadict)": [[114, "pydicom.datadict.dictionary_description", false]], "dictionary_has_tag() (in module pydicom.datadict)": [[115, "pydicom.datadict.dictionary_has_tag", false]], "dictionary_is_retired() (in module pydicom.datadict)": [[116, "pydicom.datadict.dictionary_is_retired", false]], "dictionary_keyword() (in module pydicom.datadict)": [[117, "pydicom.datadict.dictionary_keyword", false]], "dictionary_vm() (in module pydicom.datadict)": [[112, "pydicom.datadict.dictionary_VM", false]], "dictionary_vr() (in module pydicom.datadict)": [[113, "pydicom.datadict.dictionary_VR", false]], "digitalintraoralxrayimagestorageforpresentation (in module pydicom.uid)": [[342, "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", false]], "digitalintraoralxrayimagestorageforprocessing (in module pydicom.uid)": [[343, "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", false]], "digitalmammographyxrayimagestorageforpresentation (in module pydicom.uid)": [[344, "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", false]], "digitalmammographyxrayimagestorageforprocessing (in module pydicom.uid)": [[345, "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", false]], "digitalxrayimagestorageforpresentation (in module pydicom.uid)": [[346, "pydicom.uid.DigitalXRayImageStorageForPresentation", false]], "digitalxrayimagestorageforprocessing (in module pydicom.uid)": [[347, "pydicom.uid.DigitalXRayImageStorageForProcessing", false]], "dir() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.dir", false]], "dir() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.dir", false]], "dir() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.dir", false]], "dir() (pydicom.sr.collection method)": [[294, "pydicom.sr.Collection.dir", false]], "directory_recorders (in module pydicom.fileset)": [[173, "pydicom.fileset.DIRECTORY_RECORDERS", false]], "ds() (in module pydicom.valuerep)": [[540, "pydicom.valuerep.DS", false]], "ds_decimal() (in module pydicom.config)": [[81, "pydicom.config.DS_decimal", false]], "ds_numpy() (in module pydicom.config)": [[82, "pydicom.config.DS_numpy", false]], "dsdecimal (class in pydicom.valuerep)": [[541, "pydicom.valuerep.DSdecimal", false]], "dsfloat (class in pydicom.valuerep)": [[542, "pydicom.valuerep.DSfloat", false]], "dst() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.dst", false]], "dst() (pydicom.valuerep.tm method)": [[547, "pydicom.valuerep.TM.dst", false]], "dt (class in pydicom.valuerep)": [[543, "pydicom.valuerep.DT", false]], "eddycurrentimagestorage (in module pydicom.uid)": [[348, "pydicom.uid.EddyCurrentImageStorage", false]], "eddycurrentmultiframeimagestorage (in module pydicom.uid)": [[349, "pydicom.uid.EddyCurrentMultiFrameImageStorage", false]], "electromyogramwaveformstorage (in module pydicom.uid)": [[350, "pydicom.uid.ElectromyogramWaveformStorage", false]], "electrooculogramwaveformstorage (in module pydicom.uid)": [[351, "pydicom.uid.ElectrooculogramWaveformStorage", false]], "elem (pydicom.tag.basetag property)": [[296, "pydicom.tag.BaseTag.elem", false]], "element (pydicom.tag.basetag property)": [[296, "pydicom.tag.BaseTag.element", false]], "elements() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.elements", false]], "elements() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.elements", false]], "elements() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.elements", false]], "empty_value (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.empty_value", false]], "encapsulate() (in module pydicom.encaps)": [[139, "pydicom.encaps.encapsulate", false]], "encapsulate_buffer() (in module pydicom.encaps)": [[140, "pydicom.encaps.encapsulate_buffer", false]], "encapsulate_extended() (in module pydicom.encaps)": [[141, "pydicom.encaps.encapsulate_extended", false]], "encapsulate_extended_buffer() (in module pydicom.encaps)": [[142, "pydicom.encaps.encapsulate_extended_buffer", false]], "encapsulated_length (pydicom.encaps.encapsulatedbuffer property)": [[67, "pydicom.encaps.EncapsulatedBuffer.encapsulated_length", false]], "encapsulatedbuffer (class in pydicom.encaps)": [[67, "pydicom.encaps.EncapsulatedBuffer", false]], "encapsulatedcdastorage (in module pydicom.uid)": [[352, "pydicom.uid.EncapsulatedCDAStorage", false]], "encapsulatedmtlstorage (in module pydicom.uid)": [[353, "pydicom.uid.EncapsulatedMTLStorage", false]], "encapsulatedobjstorage (in module pydicom.uid)": [[354, "pydicom.uid.EncapsulatedOBJStorage", false]], "encapsulatedpdfstorage (in module pydicom.uid)": [[355, "pydicom.uid.EncapsulatedPDFStorage", false]], "encapsulatedstlstorage (in module pydicom.uid)": [[356, "pydicom.uid.EncapsulatedSTLStorage", false]], "encode() (pydicom.pixels.encoders.base.encoder method)": [[259, "pydicom.pixels.encoders.base.Encoder.encode", false]], "encode() (pydicom.pixels.encoders.base.encoderunner method)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.encode", false]], "encode() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.encode", false]], "encode() (pydicom.valuerep.personname method)": [[546, "pydicom.valuerep.PersonName.encode", false]], "encode() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.encode", false]], "encode_string() (in module pydicom.charset)": [[79, "pydicom.charset.encode_string", false]], "encoder (class in pydicom.pixels.encoders.base)": [[259, "pydicom.pixels.encoders.base.Encoder", false]], "encoderunner (class in pydicom.pixels.encoders.base)": [[258, "pydicom.pixels.encoders.base.EncodeRunner", false]], "endswith() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.endswith", false]], "endswith() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.endswith", false]], "enforce_valid_values (in module pydicom.config)": [[95, "pydicom.config.enforce_valid_values", false]], "enhancedcontinuousrtimagestorage (in module pydicom.uid)": [[358, "pydicom.uid.EnhancedContinuousRTImageStorage", false]], "enhancedctimagestorage (in module pydicom.uid)": [[357, "pydicom.uid.EnhancedCTImageStorage", false]], "enhancedmrcolorimagestorage (in module pydicom.uid)": [[359, "pydicom.uid.EnhancedMRColorImageStorage", false]], "enhancedmrimagestorage (in module pydicom.uid)": [[360, "pydicom.uid.EnhancedMRImageStorage", false]], "enhancedpetimagestorage (in module pydicom.uid)": [[361, "pydicom.uid.EnhancedPETImageStorage", false]], "enhancedrtimagestorage (in module pydicom.uid)": [[362, "pydicom.uid.EnhancedRTImageStorage", false]], "enhancedsrstorage (in module pydicom.uid)": [[363, "pydicom.uid.EnhancedSRStorage", false]], "enhancedusvolumestorage (in module pydicom.uid)": [[364, "pydicom.uid.EnhancedUSVolumeStorage", false]], "enhancedxaimagestorage (in module pydicom.uid)": [[365, "pydicom.uid.EnhancedXAImageStorage", false]], "enhancedxrayradiationdosesrstorage (in module pydicom.uid)": [[367, "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", false]], "enhancedxrfimagestorage (in module pydicom.uid)": [[366, "pydicom.uid.EnhancedXRFImageStorage", false]], "ensure_file_meta() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.ensure_file_meta", false]], "ensure_file_meta() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.ensure_file_meta", false]], "ensure_file_meta() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.ensure_file_meta", false]], "exp() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.exp", false]], "expand_ybr422() (in module pydicom.pixels.utils)": [[280, "pydicom.pixels.utils.expand_ybr422", false]], "expandtabs() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.expandtabs", false]], "expandtabs() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.expandtabs", false]], "explicitvrbigendian (in module pydicom.uid)": [[368, "pydicom.uid.ExplicitVRBigEndian", false]], "explicitvrbigendiandecoder (in module pydicom.pixels.decoders)": [[235, "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", false]], "explicitvrlittleendian (in module pydicom.uid)": [[369, "pydicom.uid.ExplicitVRLittleEndian", false]], "explicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[236, "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", false]], "extend() (pydicom.multival.multivalue method)": [[214, "pydicom.multival.MultiValue.extend", false]], "extend() (pydicom.sequence.sequence method)": [[292, "pydicom.sequence.Sequence.extend", false]], "extended_lengths (pydicom.encaps.encapsulatedbuffer property)": [[67, "pydicom.encaps.EncapsulatedBuffer.extended_lengths", false]], "extended_offsets (pydicom.encaps.encapsulatedbuffer property)": [[67, "pydicom.encaps.EncapsulatedBuffer.extended_offsets", false]], "extended_offsets (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.extended_offsets", false]], "extended_offsets (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.extended_offsets", false]], "extensiblesrstorage (in module pydicom.uid)": [[370, "pydicom.uid.ExtensibleSRStorage", false]], "family_comma_given() (pydicom.valuerep.personname method)": [[546, "pydicom.valuerep.PersonName.family_comma_given", false]], "family_name (pydicom.valuerep.personname property)": [[546, "pydicom.valuerep.PersonName.family_name", false]], "file_meta (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.file_meta", false]], "file_set (pydicom.fileset.fileinstance property)": [[174, "pydicom.fileset.FileInstance.file_set", false]], "file_set (pydicom.fileset.recordnode property)": [[176, "pydicom.fileset.RecordNode.file_set", false]], "filedataset (class in pydicom.dataset)": [[133, "pydicom.dataset.FileDataset", false]], "fileid (pydicom.fileset.fileinstance property)": [[174, "pydicom.fileset.FileInstance.FileID", false]], "fileinstance (class in pydicom.fileset)": [[174, "pydicom.fileset.FileInstance", false]], "filemetadataset (class in pydicom.dataset)": [[134, "pydicom.dataset.FileMetaDataset", false]], "filename (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.filename", false]], "fileobj_type (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.fileobj_type", false]], "fileset (class in pydicom.fileset)": [[175, "pydicom.fileset.FileSet", false]], "find() (pydicom.fileset.fileset method)": [[175, "pydicom.fileset.FileSet.find", false]], "find() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.find", false]], "find() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.find", false]], "find_bytes() (in module pydicom.fileutil)": [[180, "pydicom.fileutil.find_bytes", false]], "find_delimiter() (in module pydicom.fileutil)": [[181, "pydicom.fileutil.find_delimiter", false]], "find_values() (pydicom.fileset.fileset method)": [[175, "pydicom.fileset.FileSet.find_values", false]], "fma() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.fma", false]], "for_addition (pydicom.fileset.fileinstance property)": [[174, "pydicom.fileset.FileInstance.for_addition", false]], "for_moving (pydicom.fileset.fileinstance property)": [[174, "pydicom.fileset.FileInstance.for_moving", false]], "for_removal (pydicom.fileset.fileinstance property)": [[174, "pydicom.fileset.FileInstance.for_removal", false]], "format() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.format", false]], "format() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.format", false]], "format_map() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.format_map", false]], "format_map() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.format_map", false]], "format_number_as_ds() (in module pydicom.valuerep)": [[549, "pydicom.valuerep.format_number_as_ds", false]], "formatted() (pydicom.valuerep.personname method)": [[546, "pydicom.valuerep.PersonName.formatted", false]], "formatted_lines() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.formatted_lines", false]], "formatted_lines() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.formatted_lines", false]], "formatted_lines() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.formatted_lines", false]], "fragment_frame() (in module pydicom.encaps)": [[143, "pydicom.encaps.fragment_frame", false]], "frame_length() (pydicom.pixels.decoders.base.decoderunner method)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.frame_length", false]], "frame_length() (pydicom.pixels.encoders.base.encoderunner method)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.frame_length", false]], "from_bytes() (pydicom.tag.basetag method)": [[296, "pydicom.tag.BaseTag.from_bytes", false]], "from_bytes() (pydicom.valuerep.is method)": [[544, "pydicom.valuerep.IS.from_bytes", false]], "from_float() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.from_float", false]], "from_json() (pydicom.dataelem.dataelement class method)": [[128, "pydicom.dataelem.DataElement.from_json", false]], "from_json() (pydicom.dataset.dataset class method)": [[132, "pydicom.dataset.Dataset.from_json", false]], "from_json() (pydicom.dataset.filedataset class method)": [[133, "pydicom.dataset.FileDataset.from_json", false]], "from_json() (pydicom.dataset.filemetadataset class method)": [[134, "pydicom.dataset.FileMetaDataset.from_json", false]], "from_named_components() (pydicom.valuerep.personname class method)": [[546, "pydicom.valuerep.PersonName.from_named_components", false]], "from_named_components_veterinary() (pydicom.valuerep.personname class method)": [[546, "pydicom.valuerep.PersonName.from_named_components_veterinary", false]], "fromhex() (pydicom.valuerep.dsfloat method)": [[542, "pydicom.valuerep.DSfloat.fromhex", false]], "fromhex() (pydicom.valuerep.isfloat method)": [[545, "pydicom.valuerep.ISfloat.fromhex", false]], "fromisocalendar() (pydicom.valuerep.da method)": [[539, "pydicom.valuerep.DA.fromisocalendar", false]], "fromisocalendar() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.fromisocalendar", false]], "fromisoformat() (pydicom.valuerep.da method)": [[539, "pydicom.valuerep.DA.fromisoformat", false]], "fromisoformat() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.fromisoformat", false]], "fromisoformat() (pydicom.valuerep.tm method)": [[547, "pydicom.valuerep.TM.fromisoformat", false]], "fromordinal() (pydicom.valuerep.da method)": [[539, "pydicom.valuerep.DA.fromordinal", false]], "fromordinal() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.fromordinal", false]], "fromtimestamp() (pydicom.valuerep.da method)": [[539, "pydicom.valuerep.DA.fromtimestamp", false]], "fromtimestamp() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.fromtimestamp", false]], "future_behavior() (in module pydicom.config)": [[96, "pydicom.config.future_behavior", false]], "general32bitecgwaveformstorage (in module pydicom.uid)": [[371, "pydicom.uid.General32bitECGWaveformStorage", false]], "generalaudiowaveformstorage (in module pydicom.uid)": [[372, "pydicom.uid.GeneralAudioWaveformStorage", false]], "generalecgwaveformstorage (in module pydicom.uid)": [[373, "pydicom.uid.GeneralECGWaveformStorage", false]], "generate_filename() (in module pydicom.fileset)": [[177, "pydicom.fileset.generate_filename", false]], "generate_fragmented_frames() (in module pydicom.encaps)": [[144, "pydicom.encaps.generate_fragmented_frames", false]], "generate_fragments() (in module pydicom.encaps)": [[145, "pydicom.encaps.generate_fragments", false]], "generate_frames() (in module pydicom.encaps)": [[146, "pydicom.encaps.generate_frames", false]], "generate_frames() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[220, "pydicom.pixel_data_handlers.pylibjpeg_handler.generate_frames", false]], "generate_multiplex() (in module pydicom.waveforms.numpy_handler)": [[572, "pydicom.waveforms.numpy_handler.generate_multiplex", false]], "generate_pixel_data() (in module pydicom.encaps)": [[147, "pydicom.encaps.generate_pixel_data", false]], "generate_pixel_data_fragment() (in module pydicom.encaps)": [[148, "pydicom.encaps.generate_pixel_data_fragment", false]], "generate_pixel_data_frame() (in module pydicom.encaps)": [[149, "pydicom.encaps.generate_pixel_data_frame", false]], "generate_uid() (in module pydicom.uid)": [[537, "pydicom.uid.generate_uid", false]], "genericimplanttemplatestorage (in module pydicom.uid)": [[374, "pydicom.uid.GenericImplantTemplateStorage", false]], "get() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.get", false]], "get() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.get", false]], "get() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.get", false]], "get_charset_files() (in module pydicom.data)": [[104, "pydicom.data.get_charset_files", false]], "get_data() (pydicom.pixels.decoders.base.decoderunner method)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.get_data", false]], "get_decoder() (in module pydicom.pixels)": [[260, "pydicom.pixels.get_decoder", false]], "get_encoder() (in module pydicom.pixels)": [[261, "pydicom.pixels.get_encoder", false]], "get_entry() (in module pydicom.datadict)": [[118, "pydicom.datadict.get_entry", false]], "get_expected_length() (in module pydicom.overlays.numpy_handler)": [[215, "pydicom.overlays.numpy_handler.get_expected_length", false]], "get_expected_length() (in module pydicom.pixels.utils)": [[281, "pydicom.pixels.utils.get_expected_length", false]], "get_frame() (in module pydicom.encaps)": [[150, "pydicom.encaps.get_frame", false]], "get_frame() (pydicom.pixels.encoders.base.encoderunner method)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.get_frame", false]], "get_frame_offsets() (in module pydicom.encaps)": [[151, "pydicom.encaps.get_frame_offsets", false]], "get_image_pixel_ids() (in module pydicom.pixels.utils)": [[282, "pydicom.pixels.utils.get_image_pixel_ids", false]], "get_item() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.get_item", false]], "get_item() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.get_item", false]], "get_item() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.get_item", false]], "get_j2k_parameters() (in module pydicom.pixels.utils)": [[283, "pydicom.pixels.utils.get_j2k_parameters", false]], "get_nr_frames() (in module pydicom.pixels.utils)": [[284, "pydicom.pixels.utils.get_nr_frames", false]], "get_option() (pydicom.pixels.decoders.base.decoderunner method)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.get_option", false]], "get_option() (pydicom.pixels.encoders.base.encoderunner method)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.get_option", false]], "get_overlay_array() (in module pydicom.overlays.numpy_handler)": [[215, "pydicom.overlays.numpy_handler.get_overlay_array", false]], "get_palette_files() (in module pydicom.data)": [[105, "pydicom.data.get_palette_files", false]], "get_path() (in module pydicom.examples)": [[158, "pydicom.examples.get_path", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[216, "pydicom.pixel_data_handlers.gdcm_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[217, "pydicom.pixel_data_handlers.jpeg_ls_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.numpy_handler)": [[218, "pydicom.pixel_data_handlers.numpy_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pillow_handler)": [[219, "pydicom.pixel_data_handlers.pillow_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[220, "pydicom.pixel_data_handlers.pylibjpeg_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.rle_handler)": [[221, "pydicom.pixel_data_handlers.rle_handler.get_pixeldata", false]], "get_private_entry() (in module pydicom.datadict)": [[119, "pydicom.datadict.get_private_entry", false]], "get_private_item() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.get_private_item", false]], "get_private_item() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.get_private_item", false]], "get_private_item() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.get_private_item", false]], "get_tag() (pydicom.dataset.privateblock method)": [[135, "pydicom.dataset.PrivateBlock.get_tag", false]], "get_testdata_file() (in module pydicom.data)": [[106, "pydicom.data.get_testdata_file", false]], "get_testdata_files() (in module pydicom.data)": [[107, "pydicom.data.get_testdata_files", false]], "given_name (pydicom.valuerep.personname property)": [[546, "pydicom.valuerep.PersonName.given_name", false]], "grayscaleplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[375, "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", false]], "grayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[376, "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", false]], "group (pydicom.dataset.privateblock attribute)": [[135, "pydicom.dataset.PrivateBlock.group", false]], "group (pydicom.tag.basetag property)": [[296, "pydicom.tag.BaseTag.group", false]], "group_dataset() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.group_dataset", false]], "group_dataset() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.group_dataset", false]], "group_dataset() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.group_dataset", false]], "hangingprotocolstorage (in module pydicom.uid)": [[382, "pydicom.uid.HangingProtocolStorage", false]], "has_instance (pydicom.fileset.recordnode property)": [[176, "pydicom.fileset.RecordNode.has_instance", false]], "hemodynamicwaveformstorage (in module pydicom.uid)": [[383, "pydicom.uid.HemodynamicWaveformStorage", false]], "hevcm10p51 (in module pydicom.uid)": [[377, "pydicom.uid.HEVCM10P51", false]], "hevcmp51 (in module pydicom.uid)": [[378, "pydicom.uid.HEVCMP51", false]], "hex() (pydicom.valuerep.dsfloat method)": [[542, "pydicom.valuerep.DSfloat.hex", false]], "hex() (pydicom.valuerep.isfloat method)": [[545, "pydicom.valuerep.ISfloat.hex", false]], "hooks (class in pydicom.hooks)": [[206, "pydicom.hooks.Hooks", false]], "hooks (in module pydicom.hooks)": [[207, "pydicom.hooks.hooks", false]], "htj2k (in module pydicom.uid)": [[379, "pydicom.uid.HTJ2K", false]], "htj2kdecoder (in module pydicom.pixels.decoders)": [[237, "pydicom.pixels.decoders.HTJ2KDecoder", false]], "htj2klossless (in module pydicom.uid)": [[380, "pydicom.uid.HTJ2KLossless", false]], "htj2klosslessdecoder (in module pydicom.pixels.decoders)": [[238, "pydicom.pixels.decoders.HTJ2KLosslessDecoder", false]], "htj2klosslessrpcl (in module pydicom.uid)": [[381, "pydicom.uid.HTJ2KLosslessRPCL", false]], "htj2klosslessrpcldecoder (in module pydicom.pixels.decoders)": [[239, "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", false]], "id (pydicom.fileset.fileset property)": [[175, "pydicom.fileset.FileSet.ID", false]], "ideographic (pydicom.valuerep.personname property)": [[546, "pydicom.valuerep.PersonName.ideographic", false]], "ignore (in module pydicom.config)": [[83, "pydicom.config.IGNORE", false]], "imag (pydicom.tag.basetag attribute)": [[296, "pydicom.tag.BaseTag.imag", false]], "imag (pydicom.valuerep.dsfloat attribute)": [[542, "pydicom.valuerep.DSfloat.imag", false]], "imag (pydicom.valuerep.is attribute)": [[544, "pydicom.valuerep.IS.imag", false]], "imag (pydicom.valuerep.isfloat attribute)": [[545, "pydicom.valuerep.ISfloat.imag", false]], "implantassemblytemplatestorage (in module pydicom.uid)": [[384, "pydicom.uid.ImplantAssemblyTemplateStorage", false]], "implantationplansrstorage (in module pydicom.uid)": [[386, "pydicom.uid.ImplantationPlanSRStorage", false]], "implanttemplategroupstorage (in module pydicom.uid)": [[385, "pydicom.uid.ImplantTemplateGroupStorage", false]], "implicitvrlittleendian (in module pydicom.uid)": [[387, "pydicom.uid.ImplicitVRLittleEndian", false]], "implicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[240, "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", false]], "indent_chars (pydicom.dataset.dataset attribute)": [[132, "pydicom.dataset.Dataset.indent_chars", false]], "index (pydicom.fileset.recordnode property)": [[176, "pydicom.fileset.RecordNode.index", false]], "index() (pydicom.dataelem.rawdataelement method)": [[130, "pydicom.dataelem.RawDataElement.index", false]], "index() (pydicom.multival.multivalue method)": [[214, "pydicom.multival.MultiValue.index", false]], "index() (pydicom.sequence.sequence method)": [[292, "pydicom.sequence.Sequence.index", false]], "index() (pydicom.sr.code method)": [[293, "pydicom.sr.Code.index", false]], "index() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.index", false]], "index() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.index", false]], "infer_sq_for_un_vr (pydicom.config.settings property)": [[56, "pydicom.config.Settings.infer_sq_for_un_vr", false]], "info (pydicom.uid.uid property)": [[511, "pydicom.uid.UID.info", false]], "insert() (pydicom.multival.multivalue method)": [[214, "pydicom.multival.MultiValue.insert", false]], "insert() (pydicom.sequence.sequence method)": [[292, "pydicom.sequence.Sequence.insert", false]], "instance (pydicom.fileset.recordnode attribute)": [[176, "pydicom.fileset.RecordNode.instance", false]], "intraocularlenscalculationsstorage (in module pydicom.uid)": [[388, "pydicom.uid.IntraocularLensCalculationsStorage", false]], "intravascularopticalcoherencetomographyimagestorageforpresentation (in module pydicom.uid)": [[389, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", false]], "intravascularopticalcoherencetomographyimagestorageforprocessing (in module pydicom.uid)": [[390, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", false]], "invalid_key_behavior (in module pydicom.config)": [[85, "pydicom.config.INVALID_KEY_BEHAVIOR", false]], "invalid_keyword_behavior (in module pydicom.config)": [[84, "pydicom.config.INVALID_KEYWORD_BEHAVIOR", false]], "invaliddicomerror": [[157, "pydicom.errors.InvalidDicomError", false]], "inventorystorage (in module pydicom.uid)": [[391, "pydicom.uid.InventoryStorage", false]], "is (class in pydicom.valuerep)": [[544, "pydicom.valuerep.IS", false]], "is_array (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.is_array", false]], "is_array (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.is_array", false]], "is_available (pydicom.pixels.decoders.base.decoder property)": [[251, "pydicom.pixels.decoders.base.Decoder.is_available", false]], "is_available (pydicom.pixels.encoders.base.encoder property)": [[259, "pydicom.pixels.encoders.base.Encoder.is_available", false]], "is_available() (in module pydicom.overlays.numpy_handler)": [[215, "pydicom.overlays.numpy_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[216, "pydicom.pixel_data_handlers.gdcm_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[217, "pydicom.pixel_data_handlers.jpeg_ls_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.numpy_handler)": [[218, "pydicom.pixel_data_handlers.numpy_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.pillow_handler)": [[219, "pydicom.pixel_data_handlers.pillow_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[220, "pydicom.pixel_data_handlers.pylibjpeg_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.rle_handler)": [[221, "pydicom.pixel_data_handlers.rle_handler.is_available", false]], "is_available() (in module pydicom.waveforms.numpy_handler)": [[572, "pydicom.waveforms.numpy_handler.is_available", false]], "is_binary (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.is_binary", false]], "is_binary (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.is_binary", false]], "is_buffer (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.is_buffer", false]], "is_buffer (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.is_buffer", false]], "is_buffered (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.is_buffered", false]], "is_buffered (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.is_buffered", false]], "is_canonical() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.is_canonical", false]], "is_cid (pydicom.sr.collection property)": [[294, "pydicom.sr.Collection.is_cid", false]], "is_compressed (pydicom.uid.uid property)": [[511, "pydicom.uid.UID.is_compressed", false]], "is_conformant_file_id() (in module pydicom.fileset)": [[178, "pydicom.fileset.is_conformant_file_id", false]], "is_dataset (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.is_dataset", false]], "is_dataset (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.is_dataset", false]], "is_decompressed (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.is_decompressed", false]], "is_decompressed (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.is_decompressed", false]], "is_decompressed (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.is_decompressed", false]], "is_deflated (pydicom.uid.uid property)": [[511, "pydicom.uid.UID.is_deflated", false]], "is_dicom() (in module pydicom.misc)": [[212, "pydicom.misc.is_dicom", false]], "is_empty (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.is_empty", false]], "is_encapsulated (pydicom.pixels.decoders.base.decoder property)": [[251, "pydicom.pixels.decoders.base.Decoder.is_encapsulated", false]], "is_encapsulated (pydicom.pixels.encoders.base.encoder property)": [[259, "pydicom.pixels.encoders.base.Encoder.is_encapsulated", false]], "is_encapsulated (pydicom.uid.uid property)": [[511, "pydicom.uid.UID.is_encapsulated", false]], "is_finite() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.is_finite", false]], "is_implicit_vr (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicombytesio property)": [[159, "pydicom.filebase.DicomBytesIO.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicomfilelike property)": [[161, "pydicom.filebase.DicomFileLike.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicomio property)": [[162, "pydicom.filebase.DicomIO.is_implicit_VR", false]], "is_implicit_vr (pydicom.uid.uid property)": [[511, "pydicom.uid.UID.is_implicit_VR", false]], "is_infinite() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.is_infinite", false]], "is_integer() (pydicom.valuerep.dsfloat method)": [[542, "pydicom.valuerep.DSfloat.is_integer", false]], "is_integer() (pydicom.valuerep.isfloat method)": [[545, "pydicom.valuerep.ISfloat.is_integer", false]], "is_little_endian (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.is_little_endian", false]], "is_little_endian (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.is_little_endian", false]], "is_little_endian (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.is_little_endian", false]], "is_little_endian (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicombytesio property)": [[159, "pydicom.filebase.DicomBytesIO.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicomfilelike property)": [[161, "pydicom.filebase.DicomFileLike.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicomio property)": [[162, "pydicom.filebase.DicomIO.is_little_endian", false]], "is_little_endian (pydicom.uid.uid property)": [[511, "pydicom.uid.UID.is_little_endian", false]], "is_nan() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.is_nan", false]], "is_native (pydicom.pixels.decoders.base.decoder property)": [[251, "pydicom.pixels.decoders.base.Decoder.is_native", false]], "is_native (pydicom.pixels.encoders.base.encoder property)": [[259, "pydicom.pixels.encoders.base.Encoder.is_native", false]], "is_normal() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.is_normal", false]], "is_original_encoding (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.is_original_encoding", false]], "is_original_encoding (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.is_original_encoding", false]], "is_original_encoding (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.is_original_encoding", false]], "is_private (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.is_private", false]], "is_private (pydicom.fileset.fileinstance property)": [[174, "pydicom.fileset.FileInstance.is_private", false]], "is_private (pydicom.tag.basetag property)": [[296, "pydicom.tag.BaseTag.is_private", false]], "is_private (pydicom.uid.uid property)": [[511, "pydicom.uid.UID.is_private", false]], "is_private_creator (pydicom.tag.basetag property)": [[296, "pydicom.tag.BaseTag.is_private_creator", false]], "is_qnan() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.is_qnan", false]], "is_raw (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.is_raw", false]], "is_retired (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.is_retired", false]], "is_retired (pydicom.uid.uid property)": [[511, "pydicom.uid.UID.is_retired", false]], "is_root (pydicom.fileset.recordnode property)": [[176, "pydicom.fileset.RecordNode.is_root", false]], "is_signed() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.is_signed", false]], "is_snan() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.is_snan", false]], "is_staged (pydicom.fileset.fileinstance property)": [[174, "pydicom.fileset.FileInstance.is_staged", false]], "is_staged (pydicom.fileset.fileset property)": [[175, "pydicom.fileset.FileSet.is_staged", false]], "is_subnormal() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.is_subnormal", false]], "is_transfer_syntax (pydicom.uid.uid property)": [[511, "pydicom.uid.UID.is_transfer_syntax", false]], "is_undefined_length (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.is_undefined_length", false]], "is_valid (pydicom.uid.uid property)": [[511, "pydicom.uid.UID.is_valid", false]], "is_valid_ds() (in module pydicom.valuerep)": [[550, "pydicom.valuerep.is_valid_ds", false]], "is_zero() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.is_zero", false]], "isalnum() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.isalnum", false]], "isalnum() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.isalnum", false]], "isalpha() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.isalpha", false]], "isalpha() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.isalpha", false]], "isascii() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.isascii", false]], "isascii() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.isascii", false]], "isdecimal() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.isdecimal", false]], "isdecimal() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.isdecimal", false]], "isdigit() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.isdigit", false]], "isdigit() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.isdigit", false]], "isfloat (class in pydicom.valuerep)": [[545, "pydicom.valuerep.ISfloat", false]], "isidentifier() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.isidentifier", false]], "isidentifier() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.isidentifier", false]], "islower() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.islower", false]], "islower() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.islower", false]], "isnumeric() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.isnumeric", false]], "isnumeric() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.isnumeric", false]], "isocalendar() (pydicom.valuerep.da method)": [[539, "pydicom.valuerep.DA.isocalendar", false]], "isocalendar() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.isocalendar", false]], "isoformat() (pydicom.valuerep.da method)": [[539, "pydicom.valuerep.DA.isoformat", false]], "isoformat() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.isoformat", false]], "isoformat() (pydicom.valuerep.tm method)": [[547, "pydicom.valuerep.TM.isoformat", false]], "isoweekday() (pydicom.valuerep.da method)": [[539, "pydicom.valuerep.DA.isoweekday", false]], "isoweekday() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.isoweekday", false]], "isprintable() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.isprintable", false]], "isprintable() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.isprintable", false]], "isspace() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.isspace", false]], "isspace() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.isspace", false]], "istitle() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.istitle", false]], "istitle() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.istitle", false]], "isupper() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.isupper", false]], "isupper() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.isupper", false]], "itemize_fragment() (in module pydicom.encaps)": [[152, "pydicom.encaps.itemize_fragment", false]], "itemize_frame() (in module pydicom.encaps)": [[153, "pydicom.encaps.itemize_frame", false]], "items() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.items", false]], "items() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.items", false]], "items() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.items", false]], "iter_array() (pydicom.pixels.decoders.base.decoder method)": [[251, "pydicom.pixels.decoders.base.Decoder.iter_array", false]], "iter_buffer() (pydicom.pixels.decoders.base.decoder method)": [[251, "pydicom.pixels.decoders.base.Decoder.iter_buffer", false]], "iter_decode() (pydicom.pixels.decoders.base.decoderunner method)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.iter_decode", false]], "iter_encode() (pydicom.pixels.encoders.base.encoder method)": [[259, "pydicom.pixels.encoders.base.Encoder.iter_encode", false]], "iter_pixels() (in module pydicom.pixels)": [[262, "pydicom.pixels.iter_pixels", false]], "iter_pixels() (in module pydicom.pixels.utils)": [[285, "pydicom.pixels.utils.iter_pixels", false]], "iterall() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.iterall", false]], "iterall() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.iterall", false]], "iterall() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.iterall", false]], "join() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.join", false]], "join() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.join", false]], "jpeg2000 (in module pydicom.uid)": [[392, "pydicom.uid.JPEG2000", false]], "jpeg2000decoder (in module pydicom.pixels.decoders)": [[241, "pydicom.pixels.decoders.JPEG2000Decoder", false]], "jpeg2000encoder (in module pydicom.pixels.encoders)": [[253, "pydicom.pixels.encoders.JPEG2000Encoder", false]], "jpeg2000lossless (in module pydicom.uid)": [[393, "pydicom.uid.JPEG2000Lossless", false]], "jpeg2000losslessdecoder (in module pydicom.pixels.decoders)": [[242, "pydicom.pixels.decoders.JPEG2000LosslessDecoder", false]], "jpeg2000losslessencoder (in module pydicom.pixels.encoders)": [[254, "pydicom.pixels.encoders.JPEG2000LosslessEncoder", false]], "jpeg2000mc (in module pydicom.uid)": [[394, "pydicom.uid.JPEG2000MC", false]], "jpeg2000mclossless (in module pydicom.uid)": [[395, "pydicom.uid.JPEG2000MCLossless", false]], "jpeg2000transfersyntaxes (in module pydicom.uid)": [[396, "pydicom.uid.JPEG2000TransferSyntaxes", false]], "jpegbaseline8bit (in module pydicom.uid)": [[397, "pydicom.uid.JPEGBaseline8Bit", false]], "jpegbaseline8bitdecoder (in module pydicom.pixels.decoders)": [[243, "pydicom.pixels.decoders.JPEGBaseline8BitDecoder", false]], "jpegextended12bit (in module pydicom.uid)": [[398, "pydicom.uid.JPEGExtended12Bit", false]], "jpegextended12bitdecoder (in module pydicom.pixels.decoders)": [[244, "pydicom.pixels.decoders.JPEGExtended12BitDecoder", false]], "jpeglossless (in module pydicom.uid)": [[402, "pydicom.uid.JPEGLossless", false]], "jpeglosslessdecoder (in module pydicom.pixels.decoders)": [[247, "pydicom.pixels.decoders.JPEGLosslessDecoder", false]], "jpeglosslesssv1 (in module pydicom.uid)": [[403, "pydicom.uid.JPEGLosslessSV1", false]], "jpeglosslesssv1decoder (in module pydicom.pixels.decoders)": [[248, "pydicom.pixels.decoders.JPEGLosslessSV1Decoder", false]], "jpeglslossless (in module pydicom.uid)": [[399, "pydicom.uid.JPEGLSLossless", false]], "jpeglslosslessdecoder (in module pydicom.pixels.decoders)": [[245, "pydicom.pixels.decoders.JPEGLSLosslessDecoder", false]], "jpeglslosslessencoder (in module pydicom.pixels.encoders)": [[255, "pydicom.pixels.encoders.JPEGLSLosslessEncoder", false]], "jpeglsnearlossless (in module pydicom.uid)": [[400, "pydicom.uid.JPEGLSNearLossless", false]], "jpeglsnearlosslessdecoder (in module pydicom.pixels.decoders)": [[246, "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", false]], "jpeglsnearlosslessencoder (in module pydicom.pixels.encoders)": [[256, "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", false]], "jpeglstransfersyntaxes (in module pydicom.uid)": [[401, "pydicom.uid.JPEGLSTransferSyntaxes", false]], "jpegtransfersyntaxes (in module pydicom.uid)": [[404, "pydicom.uid.JPEGTransferSyntaxes", false]], "jpiphtj2kreferenced (in module pydicom.uid)": [[405, "pydicom.uid.JPIPHTJ2KReferenced", false]], "jpiphtj2kreferenceddeflate (in module pydicom.uid)": [[406, "pydicom.uid.JPIPHTJ2KReferencedDeflate", false]], "json_key (pydicom.tag.basetag property)": [[296, "pydicom.tag.BaseTag.json_key", false]], "keratometrymeasurementsstorage (in module pydicom.uid)": [[407, "pydicom.uid.KeratometryMeasurementsStorage", false]], "key (pydicom.fileset.recordnode property)": [[176, "pydicom.fileset.RecordNode.key", false]], "keyobjectselectiondocumentstorage (in module pydicom.uid)": [[408, "pydicom.uid.KeyObjectSelectionDocumentStorage", false]], "keys() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.keys", false]], "keys() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.keys", false]], "keys() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.keys", false]], "keyword (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.keyword", false]], "keyword (pydicom.uid.uid property)": [[511, "pydicom.uid.UID.keyword", false]], "keyword_for_tag() (in module pydicom.datadict)": [[120, "pydicom.datadict.keyword_for_tag", false]], "legacyconvertedenhancedctimagestorage (in module pydicom.uid)": [[409, "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", false]], "legacyconvertedenhancedmrimagestorage (in module pydicom.uid)": [[410, "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", false]], "legacyconvertedenhancedpetimagestorage (in module pydicom.uid)": [[411, "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", false]], "length (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.length", false]], "length_of_undefined_length() (in module pydicom.fileutil)": [[182, "pydicom.fileutil.length_of_undefined_length", false]], "lengths (pydicom.encaps.encapsulatedbuffer property)": [[67, "pydicom.encaps.EncapsulatedBuffer.lengths", false]], "lensometrymeasurementsstorage (in module pydicom.uid)": [[412, "pydicom.uid.LensometryMeasurementsStorage", false]], "ljust() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.ljust", false]], "ljust() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.ljust", false]], "ln() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.ln", false]], "load() (pydicom.fileset.fileinstance method)": [[174, "pydicom.fileset.FileInstance.load", false]], "load() (pydicom.fileset.fileset method)": [[175, "pydicom.fileset.FileSet.load", false]], "log10() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.log10", false]], "logb() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.logb", false]], "logical_and() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.logical_and", false]], "logical_invert() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.logical_invert", false]], "logical_or() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.logical_or", false]], "logical_xor() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.logical_xor", false]], "lower() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.lower", false]], "lower() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.lower", false]], "lstrip() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.lstrip", false]], "lstrip() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.lstrip", false]], "maculargridthicknessandvolumereportstorage (in module pydicom.uid)": [[430, "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", false]], "maketrans() (pydicom.uid.uid static method)": [[511, "pydicom.uid.UID.maketrans", false]], "maketrans() (pydicom.valuerep.vr static method)": [[548, "pydicom.valuerep.VR.maketrans", false]], "mammographycadsrstorage (in module pydicom.uid)": [[431, "pydicom.uid.MammographyCADSRStorage", false]], "mask_match() (in module pydicom.datadict)": [[121, "pydicom.datadict.mask_match", false]], "max() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.max", false]], "max_mag() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.max_mag", false]], "maxbytestodisplay (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.maxBytesToDisplay", false]], "meaning (pydicom.sr.code attribute)": [[293, "pydicom.sr.Code.meaning", false]], "mediastoragedirectorystorage (in module pydicom.uid)": [[432, "pydicom.uid.MediaStorageDirectoryStorage", false]], "microscopybulksimpleannotationsstorage (in module pydicom.uid)": [[433, "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", false]], "middle_name (pydicom.valuerep.personname property)": [[546, "pydicom.valuerep.PersonName.middle_name", false]], "min() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.min", false]], "min_mag() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.min_mag", false]], "missing_dependencies (pydicom.pixels.decoders.base.decoder property)": [[251, "pydicom.pixels.decoders.base.Decoder.missing_dependencies", false]], "missing_dependencies (pydicom.pixels.encoders.base.encoder property)": [[259, "pydicom.pixels.encoders.base.Encoder.missing_dependencies", false]], "module": [[67, "module-pydicom.encaps", false], [69, "module-pydicom.examples", false], [215, "module-pydicom.overlays.numpy_handler", false], [216, "module-pydicom.pixel_data_handlers.gdcm_handler", false], [217, "module-pydicom.pixel_data_handlers.jpeg_ls_handler", false], [218, "module-pydicom.pixel_data_handlers.numpy_handler", false], [219, "module-pydicom.pixel_data_handlers.pillow_handler", false], [220, "module-pydicom.pixel_data_handlers.pylibjpeg_handler", false], [221, "module-pydicom.pixel_data_handlers.rle_handler", false], [572, "module-pydicom.waveforms.numpy_handler", false], [574, "module-pydicom.pixel_data_handlers", false], [575, "module-pydicom.hooks", false], [576, "module-pydicom", false], [578, "module-pydicom.overlays", false], [579, "module-pydicom.pixels", false], [580, "module-pydicom.pixels.decoders", false], [581, "module-pydicom.pixels.encoders", false], [582, "module-pydicom.pixels.processing", false], [583, "module-pydicom.pixels.utils", false], [584, "module-pydicom.sr", false], [585, "module-pydicom.uid", false], [586, "module-pydicom.waveforms", false]], "mpeg2mphl (in module pydicom.uid)": [[413, "pydicom.uid.MPEG2MPHL", false]], "mpeg2mphlf (in module pydicom.uid)": [[414, "pydicom.uid.MPEG2MPHLF", false]], "mpeg2mpml (in module pydicom.uid)": [[415, "pydicom.uid.MPEG2MPML", false]], "mpeg2mpmlf (in module pydicom.uid)": [[416, "pydicom.uid.MPEG2MPMLF", false]], "mpeg4hp41 (in module pydicom.uid)": [[417, "pydicom.uid.MPEG4HP41", false]], "mpeg4hp41bd (in module pydicom.uid)": [[418, "pydicom.uid.MPEG4HP41BD", false]], "mpeg4hp41bdf (in module pydicom.uid)": [[419, "pydicom.uid.MPEG4HP41BDF", false]], "mpeg4hp41f (in module pydicom.uid)": [[420, "pydicom.uid.MPEG4HP41F", false]], "mpeg4hp422d (in module pydicom.uid)": [[421, "pydicom.uid.MPEG4HP422D", false]], "mpeg4hp422df (in module pydicom.uid)": [[422, "pydicom.uid.MPEG4HP422DF", false]], "mpeg4hp423d (in module pydicom.uid)": [[423, "pydicom.uid.MPEG4HP423D", false]], "mpeg4hp423df (in module pydicom.uid)": [[424, "pydicom.uid.MPEG4HP423DF", false]], "mpeg4hp42stereo (in module pydicom.uid)": [[425, "pydicom.uid.MPEG4HP42STEREO", false]], "mpeg4hp42stereof (in module pydicom.uid)": [[426, "pydicom.uid.MPEG4HP42STEREOF", false]], "mpegtransfersyntaxes (in module pydicom.uid)": [[427, "pydicom.uid.MPEGTransferSyntaxes", false]], "mrimagestorage (in module pydicom.uid)": [[428, "pydicom.uid.MRImageStorage", false]], "mrspectroscopystorage (in module pydicom.uid)": [[429, "pydicom.uid.MRSpectroscopyStorage", false]], "multi_string() (in module pydicom.filewriter)": [[187, "pydicom.filewriter.multi_string", false]], "multi_string() (in module pydicom.values)": [[571, "pydicom.values.multi_string", false]], "multichannelrespiratorywaveformstorage (in module pydicom.uid)": [[438, "pydicom.uid.MultichannelRespiratoryWaveformStorage", false]], "multiframegrayscalebytesecondarycaptureimagestorage (in module pydicom.uid)": [[434, "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", false]], "multiframegrayscalewordsecondarycaptureimagestorage (in module pydicom.uid)": [[435, "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", false]], "multiframesinglebitsecondarycaptureimagestorage (in module pydicom.uid)": [[436, "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", false]], "multiframetruecolorsecondarycaptureimagestorage (in module pydicom.uid)": [[437, "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", false]], "multiplevolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[439, "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", false]], "multiplex_array() (in module pydicom.waveforms.numpy_handler)": [[572, "pydicom.waveforms.numpy_handler.multiplex_array", false]], "multivalue (class in pydicom.multival)": [[214, "pydicom.multival.MultiValue", false]], "name (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.name", false]], "name (pydicom.filebase.dicombytesio property)": [[159, "pydicom.filebase.DicomBytesIO.name", false]], "name (pydicom.filebase.dicomfilelike property)": [[161, "pydicom.filebase.DicomFileLike.name", false]], "name (pydicom.filebase.dicomio property)": [[162, "pydicom.filebase.DicomIO.name", false]], "name (pydicom.sr.collection property)": [[294, "pydicom.sr.Collection.name", false]], "name (pydicom.uid.uid property)": [[511, "pydicom.uid.UID.name", false]], "name_prefix (pydicom.valuerep.personname property)": [[546, "pydicom.valuerep.PersonName.name_prefix", false]], "name_suffix (pydicom.valuerep.personname property)": [[546, "pydicom.valuerep.PersonName.name_suffix", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[216, "pydicom.pixel_data_handlers.gdcm_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[217, "pydicom.pixel_data_handlers.jpeg_ls_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[218, "pydicom.pixel_data_handlers.numpy_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[219, "pydicom.pixel_data_handlers.pillow_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[220, "pydicom.pixel_data_handlers.pylibjpeg_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[221, "pydicom.pixel_data_handlers.rle_handler.needs_to_convert_to_RGB", false]], "next (pydicom.fileset.recordnode property)": [[176, "pydicom.fileset.RecordNode.next", false]], "next_minus() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.next_minus", false]], "next_plus() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.next_plus", false]], "next_toward() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.next_toward", false]], "node (pydicom.fileset.fileinstance attribute)": [[174, "pydicom.fileset.FileInstance.node", false]], "normalize() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.normalize", false]], "now() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.now", false]], "nuclearmedicineimagestorage (in module pydicom.uid)": [[440, "pydicom.uid.NuclearMedicineImageStorage", false]], "number_class() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.number_class", false]], "number_of_frames (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.number_of_frames", false]], "number_of_frames (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.number_of_frames", false]], "numerator (pydicom.tag.basetag attribute)": [[296, "pydicom.tag.BaseTag.numerator", false]], "numerator (pydicom.valuerep.is attribute)": [[544, "pydicom.valuerep.IS.numerator", false]], "offsets (pydicom.encaps.encapsulatedbuffer property)": [[67, "pydicom.encaps.EncapsulatedBuffer.offsets", false]], "ophthalmicaxialmeasurementsstorage (in module pydicom.uid)": [[441, "pydicom.uid.OphthalmicAxialMeasurementsStorage", false]], "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage (in module pydicom.uid)": [[442, "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", false]], "ophthalmicopticalcoherencetomographyenfaceimagestorage (in module pydicom.uid)": [[443, "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", false]], "ophthalmicphotography16bitimagestorage (in module pydicom.uid)": [[444, "pydicom.uid.OphthalmicPhotography16BitImageStorage", false]], "ophthalmicphotography8bitimagestorage (in module pydicom.uid)": [[445, "pydicom.uid.OphthalmicPhotography8BitImageStorage", false]], "ophthalmicthicknessmapstorage (in module pydicom.uid)": [[446, "pydicom.uid.OphthalmicThicknessMapStorage", false]], "ophthalmictomographyimagestorage (in module pydicom.uid)": [[447, "pydicom.uid.OphthalmicTomographyImageStorage", false]], "ophthalmicvisualfieldstaticperimetrymeasurementsstorage (in module pydicom.uid)": [[448, "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", false]], "options (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.options", false]], "options (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.options", false]], "original_character_set (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.original_character_set", false]], "original_character_set (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.original_character_set", false]], "original_character_set (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.original_character_set", false]], "original_encoding (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.original_encoding", false]], "original_encoding (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.original_encoding", false]], "original_encoding (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.original_encoding", false]], "overlay_array() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.overlay_array", false]], "overlay_array() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.overlay_array", false]], "overlay_array() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.overlay_array", false]], "pack_bits() (in module pydicom.pixels)": [[263, "pydicom.pixels.pack_bits", false]], "pack_bits() (in module pydicom.pixels.utils)": [[286, "pydicom.pixels.utils.pack_bits", false]], "parametricmapstorage (in module pydicom.uid)": [[451, "pydicom.uid.ParametricMapStorage", false]], "parent (pydicom.filebase.dicombytesio property)": [[159, "pydicom.filebase.DicomBytesIO.parent", false]], "parent (pydicom.filebase.dicomfilelike property)": [[161, "pydicom.filebase.DicomFileLike.parent", false]], "parent (pydicom.filebase.dicomio property)": [[162, "pydicom.filebase.DicomIO.parent", false]], "parent (pydicom.fileset.recordnode property)": [[176, "pydicom.fileset.RecordNode.parent", false]], "parse_basic_offsets() (in module pydicom.encaps)": [[154, "pydicom.encaps.parse_basic_offsets", false]], "parse_fragments() (in module pydicom.encaps)": [[155, "pydicom.encaps.parse_fragments", false]], "partition() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.partition", false]], "partition() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.partition", false]], "path (pydicom.fileset.fileinstance property)": [[174, "pydicom.fileset.FileInstance.path", false]], "path (pydicom.fileset.fileset property)": [[175, "pydicom.fileset.FileSet.path", false]], "patientradiationdosesrstorage (in module pydicom.uid)": [[452, "pydicom.uid.PatientRadiationDoseSRStorage", false]], "performedimagingagentadministrationsrstorage (in module pydicom.uid)": [[453, "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", false]], "personname (class in pydicom.valuerep)": [[546, "pydicom.valuerep.PersonName", false]], "phonetic (pydicom.valuerep.personname property)": [[546, "pydicom.valuerep.PersonName.phonetic", false]], "photoacousticimagestorage (in module pydicom.uid)": [[454, "pydicom.uid.PhotoacousticImageStorage", false]], "photometric_interpretation (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.photometric_interpretation", false]], "photometric_interpretation (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.photometric_interpretation", false]], "pixel_array (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.pixel_array", false]], "pixel_array (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.pixel_array", false]], "pixel_array (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.pixel_array", false]], "pixel_array() (in module pydicom.pixels)": [[264, "pydicom.pixels.pixel_array", false]], "pixel_array() (in module pydicom.pixels.utils)": [[287, "pydicom.pixels.utils.pixel_array", false]], "pixel_array_options() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.pixel_array_options", false]], "pixel_array_options() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.pixel_array_options", false]], "pixel_array_options() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.pixel_array_options", false]], "pixel_data_handlers (in module pydicom.config)": [[97, "pydicom.config.pixel_data_handlers", false]], "pixel_dtype (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.pixel_dtype", false]], "pixel_dtype() (in module pydicom.pixels.utils)": [[288, "pydicom.pixels.utils.pixel_dtype", false]], "pixel_keyword (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.pixel_keyword", false]], "pixel_keyword (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.pixel_keyword", false]], "pixel_properties() (pydicom.pixels.decoders.base.decoderunner method)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.pixel_properties", false]], "pixel_representation (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.pixel_representation", false]], "pixel_representation (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.pixel_representation", false]], "planar_configuration (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.planar_configuration", false]], "planar_configuration (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.planar_configuration", false]], "plannedimagingagentadministrationsrstorage (in module pydicom.uid)": [[455, "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", false]], "pop() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.pop", false]], "pop() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.pop", false]], "pop() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.pop", false]], "pop() (pydicom.multival.multivalue method)": [[214, "pydicom.multival.MultiValue.pop", false]], "pop() (pydicom.sequence.sequence method)": [[292, "pydicom.sequence.Sequence.pop", false]], "popitem() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.popitem", false]], "popitem() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.popitem", false]], "popitem() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.popitem", false]], "positronemissiontomographyimagestorage (in module pydicom.uid)": [[456, "pydicom.uid.PositronEmissionTomographyImageStorage", false]], "preamble (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.preamble", false]], "prettify() (pydicom.fileset.recordnode method)": [[176, "pydicom.fileset.RecordNode.prettify", false]], "previous (pydicom.fileset.recordnode property)": [[176, "pydicom.fileset.RecordNode.previous", false]], "private_block() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.private_block", false]], "private_block() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.private_block", false]], "private_block() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.private_block", false]], "private_creator (pydicom.dataset.privateblock attribute)": [[135, "pydicom.dataset.PrivateBlock.private_creator", false]], "private_creator (pydicom.tag.basetag property)": [[296, "pydicom.tag.BaseTag.private_creator", false]], "private_creators() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.private_creators", false]], "private_creators() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.private_creators", false]], "private_creators() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.private_creators", false]], "private_dictionary_description() (in module pydicom.datadict)": [[124, "pydicom.datadict.private_dictionary_description", false]], "private_dictionary_vm() (in module pydicom.datadict)": [[122, "pydicom.datadict.private_dictionary_VM", false]], "private_dictionary_vr() (in module pydicom.datadict)": [[123, "pydicom.datadict.private_dictionary_VR", false]], "privateblock (class in pydicom.dataset)": [[135, "pydicom.dataset.PrivateBlock", false]], "privatetransfersyntaxes (in module pydicom.uid)": [[457, "pydicom.uid.PrivateTransferSyntaxes", false]], "procedurelogstorage (in module pydicom.uid)": [[458, "pydicom.uid.ProcedureLogStorage", false]], "process() (pydicom.pixels.decoders.base.decoderunner method)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.process", false]], "protocolapprovalstorage (in module pydicom.uid)": [[459, "pydicom.uid.ProtocolApprovalStorage", false]], "pseudocolorsoftcopypresentationstatestorage (in module pydicom.uid)": [[460, "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", false]], "pydicom": [[576, "module-pydicom", false]], "pydicom.encaps": [[67, "module-pydicom.encaps", false]], "pydicom.examples": [[69, "module-pydicom.examples", false]], "pydicom.hooks": [[575, "module-pydicom.hooks", false]], "pydicom.overlays": [[578, "module-pydicom.overlays", false]], "pydicom.overlays.numpy_handler": [[215, "module-pydicom.overlays.numpy_handler", false]], "pydicom.pixel_data_handlers": [[574, "module-pydicom.pixel_data_handlers", false]], "pydicom.pixel_data_handlers.gdcm_handler": [[216, "module-pydicom.pixel_data_handlers.gdcm_handler", false]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[217, "module-pydicom.pixel_data_handlers.jpeg_ls_handler", false]], "pydicom.pixel_data_handlers.numpy_handler": [[218, "module-pydicom.pixel_data_handlers.numpy_handler", false]], "pydicom.pixel_data_handlers.pillow_handler": [[219, "module-pydicom.pixel_data_handlers.pillow_handler", false]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[220, "module-pydicom.pixel_data_handlers.pylibjpeg_handler", false]], "pydicom.pixel_data_handlers.rle_handler": [[221, "module-pydicom.pixel_data_handlers.rle_handler", false]], "pydicom.pixels": [[579, "module-pydicom.pixels", false]], "pydicom.pixels.decoders": [[580, "module-pydicom.pixels.decoders", false]], "pydicom.pixels.encoders": [[581, "module-pydicom.pixels.encoders", false]], "pydicom.pixels.processing": [[582, "module-pydicom.pixels.processing", false]], "pydicom.pixels.utils": [[583, "module-pydicom.pixels.utils", false]], "pydicom.sr": [[584, "module-pydicom.sr", false]], "pydicom.uid": [[585, "module-pydicom.uid", false]], "pydicom.waveforms": [[586, "module-pydicom.waveforms", false]], "pydicom.waveforms.numpy_handler": [[572, "module-pydicom.waveforms.numpy_handler", false]], "pydicom_implementation_uid (in module pydicom.uid)": [[449, "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", false]], "pydicom_root_uid (in module pydicom.uid)": [[450, "pydicom.uid.PYDICOM_ROOT_UID", false]], "quantize() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.quantize", false]], "radiopharmaceuticalradiationdosesrstorage (in module pydicom.uid)": [[484, "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", false]], "radix() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.radix", false]], "raise (in module pydicom.config)": [[86, "pydicom.config.RAISE", false]], "raw_element_value() (in module pydicom.hooks)": [[208, "pydicom.hooks.raw_element_value", false]], "raw_element_value_fix_separator() (in module pydicom.hooks)": [[209, "pydicom.hooks.raw_element_value_fix_separator", false]], "raw_element_value_retry() (in module pydicom.hooks)": [[210, "pydicom.hooks.raw_element_value_retry", false]], "raw_element_vr() (in module pydicom.hooks)": [[211, "pydicom.hooks.raw_element_vr", false]], "rawdataelement (class in pydicom.dataelem)": [[130, "pydicom.dataelem.RawDataElement", false]], "rawdatastorage (in module pydicom.uid)": [[485, "pydicom.uid.RawDataStorage", false]], "re_valid_uid (in module pydicom.uid)": [[461, "pydicom.uid.RE_VALID_UID", false]], "re_valid_uid_prefix (in module pydicom.uid)": [[462, "pydicom.uid.RE_VALID_UID_PREFIX", false]], "read() (pydicom.encaps.encapsulatedbuffer method)": [[67, "pydicom.encaps.EncapsulatedBuffer.read", false]], "read() (pydicom.filebase.dicombytesio method)": [[159, "pydicom.filebase.DicomBytesIO.read", false]], "read() (pydicom.filebase.dicomfilelike method)": [[161, "pydicom.filebase.DicomFileLike.read", false]], "read() (pydicom.filebase.dicomio method)": [[162, "pydicom.filebase.DicomIO.read", false]], "read_dataset() (in module pydicom.filereader)": [[166, "pydicom.filereader.read_dataset", false]], "read_deferred_data_element() (in module pydicom.filereader)": [[167, "pydicom.filereader.read_deferred_data_element", false]], "read_encoding (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.read_encoding", false]], "read_encoding (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.read_encoding", false]], "read_encoding (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.read_encoding", false]], "read_exact() (pydicom.filebase.dicombytesio method)": [[159, "pydicom.filebase.DicomBytesIO.read_exact", false]], "read_exact() (pydicom.filebase.dicomfilelike method)": [[161, "pydicom.filebase.DicomFileLike.read_exact", false]], "read_exact() (pydicom.filebase.dicomio method)": [[162, "pydicom.filebase.DicomIO.read_exact", false]], "read_file_meta_info() (in module pydicom.filereader)": [[168, "pydicom.filereader.read_file_meta_info", false]], "read_implicit_vr (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.read_implicit_vr", false]], "read_implicit_vr (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.read_implicit_vr", false]], "read_implicit_vr (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.read_implicit_vr", false]], "read_item() (in module pydicom.encaps)": [[156, "pydicom.encaps.read_item", false]], "read_little_endian (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.read_little_endian", false]], "read_little_endian (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.read_little_endian", false]], "read_little_endian (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.read_little_endian", false]], "read_partial() (in module pydicom.filereader)": [[169, "pydicom.filereader.read_partial", false]], "read_preamble() (in module pydicom.filereader)": [[170, "pydicom.filereader.read_preamble", false]], "read_sequence() (in module pydicom.filereader)": [[171, "pydicom.filereader.read_sequence", false]], "read_sequence_item() (in module pydicom.filereader)": [[172, "pydicom.filereader.read_sequence_item", false]], "read_tag() (pydicom.filebase.dicombytesio method)": [[159, "pydicom.filebase.DicomBytesIO.read_tag", false]], "read_tag() (pydicom.filebase.dicomfilelike method)": [[161, "pydicom.filebase.DicomFileLike.read_tag", false]], "read_tag() (pydicom.filebase.dicomio method)": [[162, "pydicom.filebase.DicomIO.read_tag", false]], "read_ul() (pydicom.filebase.dicombytesio method)": [[159, "pydicom.filebase.DicomBytesIO.read_UL", false]], "read_ul() (pydicom.filebase.dicomfilelike method)": [[161, "pydicom.filebase.DicomFileLike.read_UL", false]], "read_ul() (pydicom.filebase.dicomio method)": [[162, "pydicom.filebase.DicomIO.read_UL", false]], "read_undefined_length_value() (in module pydicom.fileutil)": [[183, "pydicom.fileutil.read_undefined_length_value", false]], "read_us() (pydicom.filebase.dicombytesio method)": [[159, "pydicom.filebase.DicomBytesIO.read_US", false]], "read_us() (pydicom.filebase.dicomfilelike method)": [[161, "pydicom.filebase.DicomFileLike.read_US", false]], "read_us() (pydicom.filebase.dicomio method)": [[162, "pydicom.filebase.DicomIO.read_US", false]], "readable() (pydicom.encaps.encapsulatedbuffer method)": [[67, "pydicom.encaps.EncapsulatedBuffer.readable", false]], "reading_validation_mode (pydicom.config.settings property)": [[56, "pydicom.config.Settings.reading_validation_mode", false]], "real (pydicom.tag.basetag attribute)": [[296, "pydicom.tag.BaseTag.real", false]], "real (pydicom.valuerep.dsfloat attribute)": [[542, "pydicom.valuerep.DSfloat.real", false]], "real (pydicom.valuerep.is attribute)": [[544, "pydicom.valuerep.IS.real", false]], "real (pydicom.valuerep.isfloat attribute)": [[545, "pydicom.valuerep.ISfloat.real", false]], "realworldvaluemappingstorage (in module pydicom.uid)": [[486, "pydicom.uid.RealWorldValueMappingStorage", false]], "record_type (pydicom.fileset.recordnode property)": [[176, "pydicom.fileset.RecordNode.record_type", false]], "recordnode (class in pydicom.fileset)": [[176, "pydicom.fileset.RecordNode", false]], "register_callback() (pydicom.hooks.hooks method)": [[206, "pydicom.hooks.Hooks.register_callback", false]], "register_kwargs() (pydicom.hooks.hooks method)": [[206, "pydicom.hooks.Hooks.register_kwargs", false]], "register_transfer_syntax() (in module pydicom.uid)": [[538, "pydicom.uid.register_transfer_syntax", false]], "remainder_near() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.remainder_near", false]], "remove() (pydicom.fileset.fileset method)": [[175, "pydicom.fileset.FileSet.remove", false]], "remove() (pydicom.fileset.recordnode method)": [[176, "pydicom.fileset.RecordNode.remove", false]], "remove() (pydicom.multival.multivalue method)": [[214, "pydicom.multival.MultiValue.remove", false]], "remove() (pydicom.sequence.sequence method)": [[292, "pydicom.sequence.Sequence.remove", false]], "remove_plugin() (pydicom.pixels.decoders.base.decoder method)": [[251, "pydicom.pixels.decoders.base.Decoder.remove_plugin", false]], "remove_plugin() (pydicom.pixels.encoders.base.encoder method)": [[259, "pydicom.pixels.encoders.base.Encoder.remove_plugin", false]], "remove_private_tags() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.remove_private_tags", false]], "remove_private_tags() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.remove_private_tags", false]], "remove_private_tags() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.remove_private_tags", false]], "removeprefix() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.removeprefix", false]], "removeprefix() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.removeprefix", false]], "removesuffix() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.removesuffix", false]], "removesuffix() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.removesuffix", false]], "repeater_has_keyword() (in module pydicom.datadict)": [[125, "pydicom.datadict.repeater_has_keyword", false]], "repeater_has_tag() (in module pydicom.datadict)": [[126, "pydicom.datadict.repeater_has_tag", false]], "replace() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.replace", false]], "replace() (pydicom.valuerep.da method)": [[539, "pydicom.valuerep.DA.replace", false]], "replace() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.replace", false]], "replace() (pydicom.valuerep.tm method)": [[547, "pydicom.valuerep.TM.replace", false]], "replace() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.replace", false]], "repval (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.repval", false]], "reset_data_element_callback() (in module pydicom.config)": [[98, "pydicom.config.reset_data_element_callback", false]], "reshape() (pydicom.pixels.decoders.base.decoderunner method)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.reshape", false]], "reshape_overlay_array() (in module pydicom.overlays.numpy_handler)": [[215, "pydicom.overlays.numpy_handler.reshape_overlay_array", false]], "reshape_pixel_array() (in module pydicom.pixels.utils)": [[289, "pydicom.pixels.utils.reshape_pixel_array", false]], "respiratorywaveformstorage (in module pydicom.uid)": [[487, "pydicom.uid.RespiratoryWaveformStorage", false]], "reverse() (pydicom.fileset.recordnode method)": [[176, "pydicom.fileset.RecordNode.reverse", false]], "reverse() (pydicom.multival.multivalue method)": [[214, "pydicom.multival.MultiValue.reverse", false]], "reverse() (pydicom.sequence.sequence method)": [[292, "pydicom.sequence.Sequence.reverse", false]], "rfind() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.rfind", false]], "rfind() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.rfind", false]], "rindex() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.rindex", false]], "rindex() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.rindex", false]], "rjust() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.rjust", false]], "rjust() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.rjust", false]], "rlelossless (in module pydicom.uid)": [[463, "pydicom.uid.RLELossless", false]], "rlelosslessdecoder (in module pydicom.pixels.decoders)": [[249, "pydicom.pixels.decoders.RLELosslessDecoder", false]], "rlelosslessencoder (in module pydicom.pixels.encoders)": [[257, "pydicom.pixels.encoders.RLELosslessEncoder", false]], "rletransfersyntaxes (in module pydicom.uid)": [[464, "pydicom.uid.RLETransferSyntaxes", false]], "roboticarmradiationstorage (in module pydicom.uid)": [[488, "pydicom.uid.RoboticArmRadiationStorage", false]], "roboticradiationrecordstorage (in module pydicom.uid)": [[489, "pydicom.uid.RoboticRadiationRecordStorage", false]], "root (pydicom.fileset.recordnode property)": [[176, "pydicom.fileset.RecordNode.root", false]], "rotate() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.rotate", false]], "routinescalpelectroencephalogramwaveformstorage (in module pydicom.uid)": [[490, "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", false]], "rows (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.rows", false]], "rows (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.rows", false]], "rpartition() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.rpartition", false]], "rpartition() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.rpartition", false]], "rsplit() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.rsplit", false]], "rsplit() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.rsplit", false]], "rstrip() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.rstrip", false]], "rstrip() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.rstrip", false]], "rtbeamsdeliveryinstructionstorage (in module pydicom.uid)": [[465, "pydicom.uid.RTBeamsDeliveryInstructionStorage", false]], "rtbeamstreatmentrecordstorage (in module pydicom.uid)": [[466, "pydicom.uid.RTBeamsTreatmentRecordStorage", false]], "rtbrachyapplicationsetupdeliveryinstructionstorage (in module pydicom.uid)": [[467, "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", false]], "rtbrachytreatmentrecordstorage (in module pydicom.uid)": [[468, "pydicom.uid.RTBrachyTreatmentRecordStorage", false]], "rtdosestorage (in module pydicom.uid)": [[469, "pydicom.uid.RTDoseStorage", false]], "rtimagestorage (in module pydicom.uid)": [[470, "pydicom.uid.RTImageStorage", false]], "rtionbeamstreatmentrecordstorage (in module pydicom.uid)": [[471, "pydicom.uid.RTIonBeamsTreatmentRecordStorage", false]], "rtionplanstorage (in module pydicom.uid)": [[472, "pydicom.uid.RTIonPlanStorage", false]], "rtpatientpositionacquisitioninstructionstorage (in module pydicom.uid)": [[473, "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", false]], "rtphysicianintentstorage (in module pydicom.uid)": [[474, "pydicom.uid.RTPhysicianIntentStorage", false]], "rtplanstorage (in module pydicom.uid)": [[475, "pydicom.uid.RTPlanStorage", false]], "rtradiationrecordsetstorage (in module pydicom.uid)": [[476, "pydicom.uid.RTRadiationRecordSetStorage", false]], "rtradiationsalvagerecordstorage (in module pydicom.uid)": [[477, "pydicom.uid.RTRadiationSalvageRecordStorage", false]], "rtradiationsetdeliveryinstructionstorage (in module pydicom.uid)": [[478, "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", false]], "rtradiationsetstorage (in module pydicom.uid)": [[479, "pydicom.uid.RTRadiationSetStorage", false]], "rtsegmentannotationstorage (in module pydicom.uid)": [[480, "pydicom.uid.RTSegmentAnnotationStorage", false]], "rtstructuresetstorage (in module pydicom.uid)": [[481, "pydicom.uid.RTStructureSetStorage", false]], "rttreatmentpreparationstorage (in module pydicom.uid)": [[482, "pydicom.uid.RTTreatmentPreparationStorage", false]], "rttreatmentsummaryrecordstorage (in module pydicom.uid)": [[483, "pydicom.uid.RTTreatmentSummaryRecordStorage", false]], "same_quantum() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.same_quantum", false]], "samples_per_pixel (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.samples_per_pixel", false]], "samples_per_pixel (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.samples_per_pixel", false]], "save_as() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.save_as", false]], "save_as() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.save_as", false]], "save_as() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.save_as", false]], "scaleb() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.scaleb", false]], "scheme_designator (pydicom.sr.code attribute)": [[293, "pydicom.sr.Code.scheme_designator", false]], "scheme_designator (pydicom.sr.collection property)": [[294, "pydicom.sr.Collection.scheme_designator", false]], "scheme_version (pydicom.sr.code attribute)": [[293, "pydicom.sr.Code.scheme_version", false]], "schemes() (pydicom.sr.concepts method)": [[295, "pydicom.sr.Concepts.schemes", false]], "secondarycaptureimagestorage (in module pydicom.uid)": [[494, "pydicom.uid.SecondaryCaptureImageStorage", false]], "seek() (pydicom.encaps.encapsulatedbuffer method)": [[67, "pydicom.encaps.EncapsulatedBuffer.seek", false]], "seek() (pydicom.filebase.dicombytesio method)": [[159, "pydicom.filebase.DicomBytesIO.seek", false]], "seek() (pydicom.filebase.dicomfilelike method)": [[161, "pydicom.filebase.DicomFileLike.seek", false]], "seek() (pydicom.filebase.dicomio method)": [[162, "pydicom.filebase.DicomIO.seek", false]], "seekable() (pydicom.encaps.encapsulatedbuffer method)": [[67, "pydicom.encaps.EncapsulatedBuffer.seekable", false]], "segmentationstorage (in module pydicom.uid)": [[495, "pydicom.uid.SegmentationStorage", false]], "segmentedvolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[496, "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", false]], "sequence (class in pydicom.sequence)": [[292, "pydicom.sequence.Sequence", false]], "set_decoders() (pydicom.pixels.decoders.base.decoderunner method)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.set_decoders", false]], "set_encoders() (pydicom.pixels.encoders.base.encoderunner method)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.set_encoders", false]], "set_option() (pydicom.pixels.decoders.base.decoderunner method)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.set_option", false]], "set_option() (pydicom.pixels.encoders.base.encoderunner method)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.set_option", false]], "set_options() (pydicom.pixels.decoders.base.decoderunner method)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.set_options", false]], "set_options() (pydicom.pixels.encoders.base.encoderunner method)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.set_options", false]], "set_original_encoding() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.set_original_encoding", false]], "set_original_encoding() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.set_original_encoding", false]], "set_original_encoding() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.set_original_encoding", false]], "set_pixel_data() (in module pydicom.pixels)": [[275, "pydicom.pixels.set_pixel_data", false]], "set_pixel_data() (in module pydicom.pixels.utils)": [[290, "pydicom.pixels.utils.set_pixel_data", false]], "set_pixel_data() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.set_pixel_data", false]], "set_pixel_data() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.set_pixel_data", false]], "set_pixel_data() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.set_pixel_data", false]], "set_private_encoding() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.set_private_encoding", false]], "set_source() (pydicom.pixels.decoders.base.decoderunner method)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.set_source", false]], "set_source() (pydicom.pixels.encoders.base.encoderunner method)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.set_source", false]], "setdefault() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.setdefault", false]], "setdefault() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.setdefault", false]], "setdefault() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.setdefault", false]], "settings (class in pydicom.config)": [[56, "pydicom.config.Settings", false]], "settings (in module pydicom.config)": [[99, "pydicom.config.settings", false]], "shift() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.shift", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[216, "pydicom.pixel_data_handlers.gdcm_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[217, "pydicom.pixel_data_handlers.jpeg_ls_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[218, "pydicom.pixel_data_handlers.numpy_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[219, "pydicom.pixel_data_handlers.pillow_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[220, "pydicom.pixel_data_handlers.pylibjpeg_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[221, "pydicom.pixel_data_handlers.rle_handler.should_change_PhotometricInterpretation_to_RGB", false]], "show_file_meta (in module pydicom.config)": [[100, "pydicom.config.show_file_meta", false]], "showvr (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.showVR", false]], "simplifiedadultechosrstorage (in module pydicom.uid)": [[497, "pydicom.uid.SimplifiedAdultEchoSRStorage", false]], "size_in_bytes() (in module pydicom.misc)": [[213, "pydicom.misc.size_in_bytes", false]], "sleepelectroencephalogramwaveformstorage (in module pydicom.uid)": [[498, "pydicom.uid.SleepElectroencephalogramWaveformStorage", false]], "smptest211020uncompressedinterlacedactivevideo (in module pydicom.uid)": [[491, "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", false]], "smptest211020uncompressedprogressiveactivevideo (in module pydicom.uid)": [[492, "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", false]], "smptest211030pcmdigitalaudio (in module pydicom.uid)": [[493, "pydicom.uid.SMPTEST211030PCMDigitalAudio", false]], "sopclassuid (pydicom.fileset.fileinstance property)": [[174, "pydicom.fileset.FileInstance.SOPClassUID", false]], "sopinstanceuid (pydicom.fileset.fileinstance property)": [[174, "pydicom.fileset.FileInstance.SOPInstanceUID", false]], "spatialfiducialsstorage (in module pydicom.uid)": [[499, "pydicom.uid.SpatialFiducialsStorage", false]], "spatialregistrationstorage (in module pydicom.uid)": [[500, "pydicom.uid.SpatialRegistrationStorage", false]], "spectacleprescriptionreportstorage (in module pydicom.uid)": [[501, "pydicom.uid.SpectaclePrescriptionReportStorage", false]], "split() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.split", false]], "split() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.split", false]], "splitlines() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.splitlines", false]], "splitlines() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.splitlines", false]], "sqrt() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.sqrt", false]], "src (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.src", false]], "src (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.src", false]], "startswith() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.startswith", false]], "startswith() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.startswith", false]], "stereometricrelationshipstorage (in module pydicom.uid)": [[502, "pydicom.uid.StereometricRelationshipStorage", false]], "strftime() (pydicom.valuerep.da method)": [[539, "pydicom.valuerep.DA.strftime", false]], "strftime() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.strftime", false]], "strftime() (pydicom.valuerep.tm method)": [[547, "pydicom.valuerep.TM.strftime", false]], "strip() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.strip", false]], "strip() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.strip", false]], "strptime() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.strptime", false]], "subjectiverefractionmeasurementsstorage (in module pydicom.uid)": [[503, "pydicom.uid.SubjectiveRefractionMeasurementsStorage", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[216, "pydicom.pixel_data_handlers.gdcm_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[217, "pydicom.pixel_data_handlers.jpeg_ls_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.numpy_handler)": [[218, "pydicom.pixel_data_handlers.numpy_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pillow_handler)": [[219, "pydicom.pixel_data_handlers.pillow_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[220, "pydicom.pixel_data_handlers.pylibjpeg_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.rle_handler)": [[221, "pydicom.pixel_data_handlers.rle_handler.supports_transfer_syntax", false]], "surfacescanmeshstorage (in module pydicom.uid)": [[504, "pydicom.uid.SurfaceScanMeshStorage", false]], "surfacescanpointcloudstorage (in module pydicom.uid)": [[505, "pydicom.uid.SurfaceScanPointCloudStorage", false]], "surfacesegmentationstorage (in module pydicom.uid)": [[506, "pydicom.uid.SurfaceSegmentationStorage", false]], "swapcase() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.swapcase", false]], "swapcase() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.swapcase", false]], "tag (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.tag", false]], "tag (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.tag", false]], "tag() (in module pydicom.tag)": [[297, "pydicom.tag.Tag", false]], "tag_for_keyword() (in module pydicom.datadict)": [[127, "pydicom.datadict.tag_for_keyword", false]], "tag_in_exception() (in module pydicom.tag)": [[299, "pydicom.tag.tag_in_exception", false]], "tell() (pydicom.encaps.encapsulatedbuffer method)": [[67, "pydicom.encaps.EncapsulatedBuffer.tell", false]], "tell() (pydicom.filebase.dicombytesio method)": [[159, "pydicom.filebase.DicomBytesIO.tell", false]], "tell() (pydicom.filebase.dicomfilelike method)": [[161, "pydicom.filebase.DicomFileLike.tell", false]], "tell() (pydicom.filebase.dicomio method)": [[162, "pydicom.filebase.DicomIO.tell", false]], "time() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.time", false]], "timestamp (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.timestamp", false]], "timestamp() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.timestamp", false]], "timetuple() (pydicom.valuerep.da method)": [[539, "pydicom.valuerep.DA.timetuple", false]], "timetuple() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.timetuple", false]], "timetz() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.timetz", false]], "title() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.title", false]], "title() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.title", false]], "tm (class in pydicom.valuerep)": [[547, "pydicom.valuerep.TM", false]], "to_bytes() (pydicom.tag.basetag method)": [[296, "pydicom.tag.BaseTag.to_bytes", false]], "to_bytes() (pydicom.valuerep.is method)": [[544, "pydicom.valuerep.IS.to_bytes", false]], "to_eng_string() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.to_eng_string", false]], "to_integral() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.to_integral", false]], "to_integral_exact() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.to_integral_exact", false]], "to_integral_value() (pydicom.valuerep.dsdecimal method)": [[541, "pydicom.valuerep.DSdecimal.to_integral_value", false]], "to_json() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.to_json", false]], "to_json() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.to_json", false]], "to_json() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.to_json", false]], "to_json() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.to_json", false]], "to_json_dict() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.to_json_dict", false]], "to_json_dict() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.to_json_dict", false]], "to_json_dict() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.to_json_dict", false]], "to_json_dict() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.to_json_dict", false]], "today() (pydicom.valuerep.da method)": [[539, "pydicom.valuerep.DA.today", false]], "today() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.today", false]], "tomotherapeuticradiationrecordstorage (in module pydicom.uid)": [[507, "pydicom.uid.TomotherapeuticRadiationRecordStorage", false]], "tomotherapeuticradiationstorage (in module pydicom.uid)": [[508, "pydicom.uid.TomotherapeuticRadiationStorage", false]], "toordinal() (pydicom.valuerep.da method)": [[539, "pydicom.valuerep.DA.toordinal", false]], "toordinal() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.toordinal", false]], "top() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.top", false]], "top() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.top", false]], "top() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.top", false]], "tractographyresultsstorage (in module pydicom.uid)": [[509, "pydicom.uid.TractographyResultsStorage", false]], "trait_names() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.trait_names", false]], "trait_names() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.trait_names", false]], "trait_names() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.trait_names", false]], "trait_names() (pydicom.sr.collection method)": [[294, "pydicom.sr.Collection.trait_names", false]], "transfer_syntax (pydicom.pixels.decoders.base.decoderunner property)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.transfer_syntax", false]], "transfer_syntax (pydicom.pixels.encoders.base.encoderunner property)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.transfer_syntax", false]], "transfersyntaxuid (pydicom.fileset.fileinstance property)": [[174, "pydicom.fileset.FileInstance.TransferSyntaxUID", false]], "translate() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.translate", false]], "translate() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.translate", false]], "tupletag() (in module pydicom.tag)": [[298, "pydicom.tag.TupleTag", false]], "twelveleadecgwaveformstorage (in module pydicom.uid)": [[510, "pydicom.uid.TwelveLeadECGWaveformStorage", false]], "type (pydicom.uid.uid property)": [[511, "pydicom.uid.UID.type", false]], "tzname() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.tzname", false]], "tzname() (pydicom.valuerep.tm method)": [[547, "pydicom.valuerep.TM.tzname", false]], "uid (class in pydicom.uid)": [[511, "pydicom.uid.UID", false]], "uid (pydicom.fileset.fileset property)": [[175, "pydicom.fileset.FileSet.UID", false]], "uid (pydicom.pixels.decoders.base.decoder property)": [[251, "pydicom.pixels.decoders.base.Decoder.UID", false]], "uid (pydicom.pixels.encoders.base.encoder property)": [[259, "pydicom.pixels.encoders.base.Encoder.UID", false]], "ultrasoundimagestorage (in module pydicom.uid)": [[512, "pydicom.uid.UltrasoundImageStorage", false]], "ultrasoundmultiframeimagestorage (in module pydicom.uid)": [[513, "pydicom.uid.UltrasoundMultiFrameImageStorage", false]], "uncompressedtransfersyntaxes (in module pydicom.uid)": [[514, "pydicom.uid.UncompressedTransferSyntaxes", false]], "unpack_bits() (in module pydicom.pixels)": [[276, "pydicom.pixels.unpack_bits", false]], "unpack_bits() (in module pydicom.pixels.utils)": [[291, "pydicom.pixels.utils.unpack_bits", false]], "update() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.update", false]], "update() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.update", false]], "update() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.update", false]], "update_raw_element() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.update_raw_element", false]], "update_raw_element() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.update_raw_element", false]], "update_raw_element() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.update_raw_element", false]], "upper() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.upper", false]], "upper() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.upper", false]], "use_ds_decimal (in module pydicom.config)": [[101, "pydicom.config.use_DS_decimal", false]], "use_ds_numpy (in module pydicom.config)": [[102, "pydicom.config.use_DS_numpy", false]], "use_is_numpy (in module pydicom.config)": [[103, "pydicom.config.use_IS_numpy", false]], "utcfromtimestamp() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.utcfromtimestamp", false]], "utcnow() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.utcnow", false]], "utcoffset() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.utcoffset", false]], "utcoffset() (pydicom.valuerep.tm method)": [[547, "pydicom.valuerep.TM.utcoffset", false]], "utctimetuple() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.utctimetuple", false]], "validate() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.validate", false]], "validate() (pydicom.dataset.filemetadataset static method)": [[134, "pydicom.dataset.FileMetaDataset.validate", false]], "validate() (pydicom.pixels.decoders.base.decoderunner method)": [[250, "pydicom.pixels.decoders.base.DecodeRunner.validate", false]], "validate() (pydicom.pixels.encoders.base.encoderunner method)": [[258, "pydicom.pixels.encoders.base.EncodeRunner.validate", false]], "validate_file_meta() (in module pydicom.dataset)": [[136, "pydicom.dataset.validate_file_meta", false]], "validation_mode (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.validation_mode", false]], "value (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.value", false]], "value (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.value", false]], "value (pydicom.sr.code attribute)": [[293, "pydicom.sr.Code.value", false]], "value_tell (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.value_tell", false]], "values() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.values", false]], "values() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.values", false]], "values() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.values", false]], "variablemodalitylutsoftcopypresentationstatestorage (in module pydicom.uid)": [[520, "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", false]], "videoendoscopicimagestorage (in module pydicom.uid)": [[521, "pydicom.uid.VideoEndoscopicImageStorage", false]], "videomicroscopicimagestorage (in module pydicom.uid)": [[522, "pydicom.uid.VideoMicroscopicImageStorage", false]], "videophotographicimagestorage (in module pydicom.uid)": [[523, "pydicom.uid.VideoPhotographicImageStorage", false]], "visualacuitymeasurementsstorage (in module pydicom.uid)": [[524, "pydicom.uid.VisualAcuityMeasurementsStorage", false]], "vlendoscopicimagestorage (in module pydicom.uid)": [[515, "pydicom.uid.VLEndoscopicImageStorage", false]], "vlmicroscopicimagestorage (in module pydicom.uid)": [[516, "pydicom.uid.VLMicroscopicImageStorage", false]], "vlphotographicimagestorage (in module pydicom.uid)": [[517, "pydicom.uid.VLPhotographicImageStorage", false]], "vlslidecoordinatesmicroscopicimagestorage (in module pydicom.uid)": [[518, "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", false]], "vlwholeslidemicroscopyimagestorage (in module pydicom.uid)": [[519, "pydicom.uid.VLWholeSlideMicroscopyImageStorage", false]], "vm (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.VM", false]], "volumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[525, "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", false]], "vr (class in pydicom.valuerep)": [[548, "pydicom.valuerep.VR", false]], "vr (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.VR", false]], "vr (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.VR", false]], "walk() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.walk", false]], "walk() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.walk", false]], "walk() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.walk", false]], "warn (in module pydicom.config)": [[87, "pydicom.config.WARN", false]], "waveform_array() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.waveform_array", false]], "waveform_array() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.waveform_array", false]], "waveform_array() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.waveform_array", false]], "waveformannotationsrstorage (in module pydicom.uid)": [[526, "pydicom.uid.WaveformAnnotationSRStorage", false]], "weekday() (pydicom.valuerep.da method)": [[539, "pydicom.valuerep.DA.weekday", false]], "weekday() (pydicom.valuerep.dt method)": [[543, "pydicom.valuerep.DT.weekday", false]], "widefieldophthalmicphotography3dcoordinatesimagestorage (in module pydicom.uid)": [[527, "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", false]], "widefieldophthalmicphotographystereographicprojectionimagestorage (in module pydicom.uid)": [[528, "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", false]], "with_traceback() (pydicom.errors.invaliddicomerror method)": [[157, "pydicom.errors.InvalidDicomError.with_traceback", false]], "write() (pydicom.filebase.dicombytesio method)": [[159, "pydicom.filebase.DicomBytesIO.write", false]], "write() (pydicom.filebase.dicomfilelike method)": [[161, "pydicom.filebase.DicomFileLike.write", false]], "write() (pydicom.filebase.dicomio method)": [[162, "pydicom.filebase.DicomIO.write", false]], "write() (pydicom.fileset.fileset method)": [[175, "pydicom.fileset.FileSet.write", false]], "write_atvalue() (in module pydicom.filewriter)": [[188, "pydicom.filewriter.write_ATvalue", false]], "write_da() (in module pydicom.filewriter)": [[189, "pydicom.filewriter.write_DA", false]], "write_data_element() (in module pydicom.filewriter)": [[197, "pydicom.filewriter.write_data_element", false]], "write_dataset() (in module pydicom.filewriter)": [[198, "pydicom.filewriter.write_dataset", false]], "write_dt() (in module pydicom.filewriter)": [[190, "pydicom.filewriter.write_DT", false]], "write_file_meta_info() (in module pydicom.filewriter)": [[199, "pydicom.filewriter.write_file_meta_info", false]], "write_number_string() (in module pydicom.filewriter)": [[200, "pydicom.filewriter.write_number_string", false]], "write_numbers() (in module pydicom.filewriter)": [[201, "pydicom.filewriter.write_numbers", false]], "write_obvalue() (in module pydicom.filewriter)": [[191, "pydicom.filewriter.write_OBvalue", false]], "write_owvalue() (in module pydicom.filewriter)": [[192, "pydicom.filewriter.write_OWvalue", false]], "write_pn() (in module pydicom.filewriter)": [[193, "pydicom.filewriter.write_PN", false]], "write_sequence() (in module pydicom.filewriter)": [[202, "pydicom.filewriter.write_sequence", false]], "write_sequence_item() (in module pydicom.filewriter)": [[203, "pydicom.filewriter.write_sequence_item", false]], "write_string() (in module pydicom.filewriter)": [[204, "pydicom.filewriter.write_string", false]], "write_tag() (pydicom.filebase.dicombytesio method)": [[159, "pydicom.filebase.DicomBytesIO.write_tag", false]], "write_tag() (pydicom.filebase.dicomfilelike method)": [[161, "pydicom.filebase.DicomFileLike.write_tag", false]], "write_tag() (pydicom.filebase.dicomio method)": [[162, "pydicom.filebase.DicomIO.write_tag", false]], "write_text() (in module pydicom.filewriter)": [[205, "pydicom.filewriter.write_text", false]], "write_tm() (in module pydicom.filewriter)": [[194, "pydicom.filewriter.write_TM", false]], "write_ui() (in module pydicom.filewriter)": [[195, "pydicom.filewriter.write_UI", false]], "write_ul() (pydicom.filebase.dicombytesio method)": [[159, "pydicom.filebase.DicomBytesIO.write_UL", false]], "write_ul() (pydicom.filebase.dicomfilelike method)": [[161, "pydicom.filebase.DicomFileLike.write_UL", false]], "write_ul() (pydicom.filebase.dicomio method)": [[162, "pydicom.filebase.DicomIO.write_UL", false]], "write_un() (in module pydicom.filewriter)": [[196, "pydicom.filewriter.write_UN", false]], "write_us() (pydicom.filebase.dicombytesio method)": [[159, "pydicom.filebase.DicomBytesIO.write_US", false]], "write_us() (pydicom.filebase.dicomfilelike method)": [[161, "pydicom.filebase.DicomFileLike.write_US", false]], "write_us() (pydicom.filebase.dicomio method)": [[162, "pydicom.filebase.DicomIO.write_US", false]], "writing_validation_mode (pydicom.config.settings property)": [[56, "pydicom.config.Settings.writing_validation_mode", false]], "xadefinedprocedureprotocolstorage (in module pydicom.uid)": [[529, "pydicom.uid.XADefinedProcedureProtocolStorage", false]], "xaperformedprocedureprotocolstorage (in module pydicom.uid)": [[530, "pydicom.uid.XAPerformedProcedureProtocolStorage", false]], "xaxrfgrayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[531, "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", false]], "xray3dangiographicimagestorage (in module pydicom.uid)": [[532, "pydicom.uid.XRay3DAngiographicImageStorage", false]], "xray3dcraniofacialimagestorage (in module pydicom.uid)": [[533, "pydicom.uid.XRay3DCraniofacialImageStorage", false]], "xrayangiographicimagestorage (in module pydicom.uid)": [[534, "pydicom.uid.XRayAngiographicImageStorage", false]], "xrayradiationdosesrstorage (in module pydicom.uid)": [[535, "pydicom.uid.XRayRadiationDoseSRStorage", false]], "xrayradiofluoroscopicimagestorage (in module pydicom.uid)": [[536, "pydicom.uid.XRayRadiofluoroscopicImageStorage", false]], "zfill() (pydicom.uid.uid method)": [[511, "pydicom.uid.UID.zfill", false]], "zfill() (pydicom.valuerep.vr method)": [[548, "pydicom.valuerep.VR.zfill", false]]}, "objects": {"": [[576, 0, 0, "-", "pydicom"]], "pydicom": [[67, 0, 0, "-", "encaps"], [69, 0, 0, "-", "examples"], [575, 0, 0, "-", "hooks"], [578, 0, 0, "-", "overlays"], [574, 0, 0, "-", "pixel_data_handlers"], [579, 0, 0, "-", "pixels"], [584, 0, 0, "-", "sr"], [585, 0, 0, "-", "uid"], [586, 0, 0, "-", "waveforms"]], "pydicom.charset": [[76, 1, 1, "", "convert_encodings"], [77, 1, 1, "", "decode_bytes"], [78, 1, 1, "", "decode_element"], [79, 1, 1, "", "encode_string"]], "pydicom.config": [[80, 2, 1, "", "APPLY_J2K_CORRECTIONS"], [81, 1, 1, "", "DS_decimal"], [82, 1, 1, "", "DS_numpy"], [83, 2, 1, "", "IGNORE"], [84, 2, 1, "", "INVALID_KEYWORD_BEHAVIOR"], [85, 2, 1, "", "INVALID_KEY_BEHAVIOR"], [86, 2, 1, "", "RAISE"], [56, 3, 1, "", "Settings"], [87, 2, 1, "", "WARN"], [88, 2, 1, "", "allow_DS_float"], [89, 2, 1, "", "assume_implicit_vr_switch"], [90, 2, 1, "", "convert_wrong_length_to_UN"], [91, 2, 1, "", "data_element_callback"], [92, 2, 1, "", "data_element_callback_kwargs"], [93, 2, 1, "", "datetime_conversion"], [94, 1, 1, "", "debug"], [95, 2, 1, "", "enforce_valid_values"], [96, 1, 1, "", "future_behavior"], [97, 2, 1, "", "pixel_data_handlers"], [98, 1, 1, "", "reset_data_element_callback"], [99, 2, 1, "", "settings"], [100, 2, 1, "", "show_file_meta"], [101, 2, 1, "", "use_DS_decimal"], [102, 2, 1, "", "use_DS_numpy"], [103, 2, 1, "", "use_IS_numpy"]], "pydicom.config.Settings": [[56, 4, 1, "", "buffered_read_size"], [56, 4, 1, "", "infer_sq_for_un_vr"], [56, 4, 1, "", "reading_validation_mode"], [56, 4, 1, "", "writing_validation_mode"]], "pydicom.data": [[104, 1, 1, "", "get_charset_files"], [105, 1, 1, "", "get_palette_files"], [106, 1, 1, "", "get_testdata_file"], [107, 1, 1, "", "get_testdata_files"]], "pydicom.datadict": [[108, 1, 1, "", "add_dict_entries"], [109, 1, 1, "", "add_dict_entry"], [110, 1, 1, "", "add_private_dict_entries"], [111, 1, 1, "", "add_private_dict_entry"], [112, 1, 1, "", "dictionary_VM"], [113, 1, 1, "", "dictionary_VR"], [114, 1, 1, "", "dictionary_description"], [115, 1, 1, "", "dictionary_has_tag"], [116, 1, 1, "", "dictionary_is_retired"], [117, 1, 1, "", "dictionary_keyword"], [118, 1, 1, "", "get_entry"], [119, 1, 1, "", "get_private_entry"], [120, 1, 1, "", "keyword_for_tag"], [121, 1, 1, "", "mask_match"], [122, 1, 1, "", "private_dictionary_VM"], [123, 1, 1, "", "private_dictionary_VR"], [124, 1, 1, "", "private_dictionary_description"], [125, 1, 1, "", "repeater_has_keyword"], [126, 1, 1, "", "repeater_has_tag"], [127, 1, 1, "", "tag_for_keyword"]], "pydicom.dataelem": [[128, 3, 1, "", "DataElement"], [129, 1, 1, "", "DataElement_from_raw"], [130, 3, 1, "", "RawDataElement"], [131, 1, 1, "", "convert_raw_data_element"]], "pydicom.dataelem.DataElement": [[128, 4, 1, "", "VM"], [128, 5, 1, "", "VR"], [128, 6, 1, "", "__init__"], [128, 6, 1, "", "clear"], [128, 5, 1, "", "descripWidth"], [128, 4, 1, "", "empty_value"], [128, 6, 1, "", "from_json"], [128, 4, 1, "", "is_buffered"], [128, 4, 1, "", "is_empty"], [128, 4, 1, "", "is_private"], [128, 4, 1, "", "is_retired"], [128, 5, 1, "", "is_undefined_length"], [128, 4, 1, "", "keyword"], [128, 5, 1, "", "maxBytesToDisplay"], [128, 4, 1, "", "name"], [128, 4, 1, "", "repval"], [128, 5, 1, "", "showVR"], [128, 5, 1, "", "tag"], [128, 6, 1, "", "to_json"], [128, 6, 1, "", "to_json_dict"], [128, 6, 1, "", "validate"], [128, 5, 1, "", "validation_mode"], [128, 4, 1, "", "value"]], "pydicom.dataelem.RawDataElement": [[130, 5, 1, "", "VR"], [130, 6, 1, "", "__init__"], [130, 6, 1, "", "count"], [130, 6, 1, "", "index"], [130, 5, 1, "", "is_buffered"], [130, 5, 1, "", "is_implicit_VR"], [130, 5, 1, "", "is_little_endian"], [130, 5, 1, "", "is_raw"], [130, 5, 1, "", "length"], [130, 5, 1, "", "tag"], [130, 5, 1, "", "value"], [130, 5, 1, "", "value_tell"]], "pydicom.dataset": [[132, 3, 1, "", "Dataset"], [133, 3, 1, "", "FileDataset"], [134, 3, 1, "", "FileMetaDataset"], [135, 3, 1, "", "PrivateBlock"], [136, 1, 1, "", "validate_file_meta"]], "pydicom.dataset.Dataset": [[132, 6, 1, "", "__init__"], [132, 6, 1, "", "add"], [132, 6, 1, "", "add_new"], [132, 6, 1, "", "add_new_private"], [132, 6, 1, "", "clear"], [132, 6, 1, "", "compress"], [132, 6, 1, "", "convert_pixel_data"], [132, 6, 1, "", "copy"], [132, 6, 1, "", "data_element"], [132, 6, 1, "", "decode"], [132, 6, 1, "", "decompress"], [132, 5, 1, "", "default_element_format"], [132, 5, 1, "", "default_sequence_element_format"], [132, 6, 1, "", "dir"], [132, 6, 1, "", "elements"], [132, 6, 1, "", "ensure_file_meta"], [132, 6, 1, "", "formatted_lines"], [132, 6, 1, "", "from_json"], [132, 6, 1, "", "get"], [132, 6, 1, "", "get_item"], [132, 6, 1, "", "get_private_item"], [132, 6, 1, "", "group_dataset"], [132, 5, 1, "", "indent_chars"], [132, 4, 1, "", "is_decompressed"], [132, 4, 1, "", "is_implicit_VR"], [132, 4, 1, "", "is_little_endian"], [132, 4, 1, "", "is_original_encoding"], [132, 6, 1, "", "items"], [132, 6, 1, "", "iterall"], [132, 6, 1, "", "keys"], [132, 4, 1, "", "original_character_set"], [132, 4, 1, "", "original_encoding"], [132, 6, 1, "", "overlay_array"], [132, 4, 1, "", "pixel_array"], [132, 6, 1, "", "pixel_array_options"], [132, 6, 1, "", "pop"], [132, 6, 1, "", "popitem"], [132, 6, 1, "", "private_block"], [132, 6, 1, "", "private_creators"], [132, 4, 1, "", "read_encoding"], [132, 4, 1, "", "read_implicit_vr"], [132, 4, 1, "", "read_little_endian"], [132, 6, 1, "", "remove_private_tags"], [132, 6, 1, "", "save_as"], [132, 6, 1, "", "set_original_encoding"], [132, 6, 1, "", "set_pixel_data"], [132, 6, 1, "", "setdefault"], [132, 6, 1, "", "to_json"], [132, 6, 1, "", "to_json_dict"], [132, 6, 1, "", "top"], [132, 6, 1, "", "trait_names"], [132, 6, 1, "", "update"], [132, 6, 1, "", "update_raw_element"], [132, 6, 1, "", "values"], [132, 6, 1, "", "walk"], [132, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileDataset": [[133, 6, 1, "", "__init__"], [133, 6, 1, "", "add"], [133, 6, 1, "", "add_new"], [133, 6, 1, "", "add_new_private"], [133, 5, 1, "", "buffer"], [133, 6, 1, "", "clear"], [133, 6, 1, "", "compress"], [133, 6, 1, "", "convert_pixel_data"], [133, 6, 1, "", "copy"], [133, 6, 1, "", "data_element"], [133, 6, 1, "", "decode"], [133, 6, 1, "", "decompress"], [133, 6, 1, "", "dir"], [133, 6, 1, "", "elements"], [133, 6, 1, "", "ensure_file_meta"], [133, 5, 1, "", "file_meta"], [133, 5, 1, "", "filename"], [133, 5, 1, "", "fileobj_type"], [133, 6, 1, "", "formatted_lines"], [133, 6, 1, "", "from_json"], [133, 6, 1, "", "get"], [133, 6, 1, "", "get_item"], [133, 6, 1, "", "get_private_item"], [133, 6, 1, "", "group_dataset"], [133, 4, 1, "", "is_decompressed"], [133, 4, 1, "", "is_implicit_VR"], [133, 4, 1, "", "is_little_endian"], [133, 4, 1, "", "is_original_encoding"], [133, 6, 1, "", "items"], [133, 6, 1, "", "iterall"], [133, 6, 1, "", "keys"], [133, 4, 1, "", "original_character_set"], [133, 4, 1, "", "original_encoding"], [133, 6, 1, "", "overlay_array"], [133, 4, 1, "", "pixel_array"], [133, 6, 1, "", "pixel_array_options"], [133, 6, 1, "", "pop"], [133, 6, 1, "", "popitem"], [133, 5, 1, "", "preamble"], [133, 6, 1, "", "private_block"], [133, 6, 1, "", "private_creators"], [133, 4, 1, "", "read_encoding"], [133, 4, 1, "", "read_implicit_vr"], [133, 4, 1, "", "read_little_endian"], [133, 6, 1, "", "remove_private_tags"], [133, 6, 1, "", "save_as"], [133, 6, 1, "", "set_original_encoding"], [133, 6, 1, "", "set_pixel_data"], [133, 6, 1, "", "setdefault"], [133, 5, 1, "", "timestamp"], [133, 6, 1, "", "to_json"], [133, 6, 1, "", "to_json_dict"], [133, 6, 1, "", "top"], [133, 6, 1, "", "trait_names"], [133, 6, 1, "", "update"], [133, 6, 1, "", "update_raw_element"], [133, 6, 1, "", "values"], [133, 6, 1, "", "walk"], [133, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileMetaDataset": [[134, 6, 1, "", "__init__"], [134, 6, 1, "", "add"], [134, 6, 1, "", "add_new"], [134, 6, 1, "", "add_new_private"], [134, 6, 1, "", "clear"], [134, 6, 1, "", "compress"], [134, 6, 1, "", "convert_pixel_data"], [134, 6, 1, "", "copy"], [134, 6, 1, "", "data_element"], [134, 6, 1, "", "decode"], [134, 6, 1, "", "decompress"], [134, 6, 1, "", "dir"], [134, 6, 1, "", "elements"], [134, 6, 1, "", "ensure_file_meta"], [134, 6, 1, "", "formatted_lines"], [134, 6, 1, "", "from_json"], [134, 6, 1, "", "get"], [134, 6, 1, "", "get_item"], [134, 6, 1, "", "get_private_item"], [134, 6, 1, "", "group_dataset"], [134, 4, 1, "", "is_decompressed"], [134, 4, 1, "", "is_implicit_VR"], [134, 4, 1, "", "is_little_endian"], [134, 4, 1, "", "is_original_encoding"], [134, 6, 1, "", "items"], [134, 6, 1, "", "iterall"], [134, 6, 1, "", "keys"], [134, 4, 1, "", "original_character_set"], [134, 4, 1, "", "original_encoding"], [134, 6, 1, "", "overlay_array"], [134, 4, 1, "", "pixel_array"], [134, 6, 1, "", "pixel_array_options"], [134, 6, 1, "", "pop"], [134, 6, 1, "", "popitem"], [134, 6, 1, "", "private_block"], [134, 6, 1, "", "private_creators"], [134, 4, 1, "", "read_encoding"], [134, 4, 1, "", "read_implicit_vr"], [134, 4, 1, "", "read_little_endian"], [134, 6, 1, "", "remove_private_tags"], [134, 6, 1, "", "save_as"], [134, 6, 1, "", "set_original_encoding"], [134, 6, 1, "", "set_pixel_data"], [134, 6, 1, "", "setdefault"], [134, 6, 1, "", "to_json"], [134, 6, 1, "", "to_json_dict"], [134, 6, 1, "", "top"], [134, 6, 1, "", "trait_names"], [134, 6, 1, "", "update"], [134, 6, 1, "", "update_raw_element"], [134, 6, 1, "", "validate"], [134, 6, 1, "", "values"], [134, 6, 1, "", "walk"], [134, 6, 1, "", "waveform_array"]], "pydicom.dataset.PrivateBlock": [[135, 6, 1, "", "__init__"], [135, 6, 1, "", "add_new"], [135, 5, 1, "", "block_start"], [135, 5, 1, "", "dataset"], [135, 6, 1, "", "get_tag"], [135, 5, 1, "", "group"], [135, 5, 1, "", "private_creator"]], "pydicom.encaps": [[67, 3, 1, "", "EncapsulatedBuffer"], [137, 1, 1, "", "decode_data_sequence"], [138, 1, 1, "", "defragment_data"], [139, 1, 1, "", "encapsulate"], [140, 1, 1, "", "encapsulate_buffer"], [141, 1, 1, "", "encapsulate_extended"], [142, 1, 1, "", "encapsulate_extended_buffer"], [143, 1, 1, "", "fragment_frame"], [144, 1, 1, "", "generate_fragmented_frames"], [145, 1, 1, "", "generate_fragments"], [146, 1, 1, "", "generate_frames"], [147, 1, 1, "", "generate_pixel_data"], [148, 1, 1, "", "generate_pixel_data_fragment"], [149, 1, 1, "", "generate_pixel_data_frame"], [150, 1, 1, "", "get_frame"], [151, 1, 1, "", "get_frame_offsets"], [152, 1, 1, "", "itemize_fragment"], [153, 1, 1, "", "itemize_frame"], [154, 1, 1, "", "parse_basic_offsets"], [155, 1, 1, "", "parse_fragments"], [156, 1, 1, "", "read_item"]], "pydicom.encaps.EncapsulatedBuffer": [[67, 4, 1, "", "basic_offset_table"], [67, 4, 1, "", "closed"], [67, 4, 1, "", "encapsulated_length"], [67, 4, 1, "", "extended_lengths"], [67, 4, 1, "", "extended_offsets"], [67, 4, 1, "", "lengths"], [67, 4, 1, "", "offsets"], [67, 6, 1, "", "read"], [67, 6, 1, "", "readable"], [67, 6, 1, "", "seek"], [67, 6, 1, "", "seekable"], [67, 6, 1, "", "tell"]], "pydicom.errors": [[157, 7, 1, "", "InvalidDicomError"]], "pydicom.errors.InvalidDicomError": [[157, 6, 1, "", "with_traceback"]], "pydicom.examples": [[158, 1, 1, "", "get_path"]], "pydicom.filebase": [[159, 3, 1, "", "DicomBytesIO"], [160, 1, 1, "", "DicomFile"], [161, 3, 1, "", "DicomFileLike"], [162, 3, 1, "", "DicomIO"]], "pydicom.filebase.DicomBytesIO": [[159, 6, 1, "", "__init__"], [159, 6, 1, "", "close"], [159, 4, 1, "", "is_implicit_VR"], [159, 4, 1, "", "is_little_endian"], [159, 4, 1, "", "name"], [159, 4, 1, "", "parent"], [159, 6, 1, "", "read"], [159, 6, 1, "", "read_UL"], [159, 6, 1, "", "read_US"], [159, 6, 1, "", "read_exact"], [159, 6, 1, "", "read_tag"], [159, 6, 1, "", "seek"], [159, 6, 1, "", "tell"], [159, 6, 1, "", "write"], [159, 6, 1, "", "write_UL"], [159, 6, 1, "", "write_US"], [159, 6, 1, "", "write_tag"]], "pydicom.filebase.DicomFileLike": [[161, 6, 1, "", "__init__"], [161, 6, 1, "", "close"], [161, 4, 1, "", "is_implicit_VR"], [161, 4, 1, "", "is_little_endian"], [161, 4, 1, "", "name"], [161, 4, 1, "", "parent"], [161, 6, 1, "", "read"], [161, 6, 1, "", "read_UL"], [161, 6, 1, "", "read_US"], [161, 6, 1, "", "read_exact"], [161, 6, 1, "", "read_tag"], [161, 6, 1, "", "seek"], [161, 6, 1, "", "tell"], [161, 6, 1, "", "write"], [161, 6, 1, "", "write_UL"], [161, 6, 1, "", "write_US"], [161, 6, 1, "", "write_tag"]], "pydicom.filebase.DicomIO": [[162, 6, 1, "", "__init__"], [162, 6, 1, "", "close"], [162, 4, 1, "", "is_implicit_VR"], [162, 4, 1, "", "is_little_endian"], [162, 4, 1, "", "name"], [162, 4, 1, "", "parent"], [162, 6, 1, "", "read"], [162, 6, 1, "", "read_UL"], [162, 6, 1, "", "read_US"], [162, 6, 1, "", "read_exact"], [162, 6, 1, "", "read_tag"], [162, 6, 1, "", "seek"], [162, 6, 1, "", "tell"], [162, 6, 1, "", "write"], [162, 6, 1, "", "write_UL"], [162, 6, 1, "", "write_US"], [162, 6, 1, "", "write_tag"]], "pydicom.filereader": [[163, 1, 1, "", "data_element_generator"], [164, 1, 1, "", "data_element_offset_to_value"], [165, 1, 1, "", "dcmread"], [166, 1, 1, "", "read_dataset"], [167, 1, 1, "", "read_deferred_data_element"], [168, 1, 1, "", "read_file_meta_info"], [169, 1, 1, "", "read_partial"], [170, 1, 1, "", "read_preamble"], [171, 1, 1, "", "read_sequence"], [172, 1, 1, "", "read_sequence_item"]], "pydicom.fileset": [[173, 2, 1, "", "DIRECTORY_RECORDERS"], [174, 3, 1, "", "FileInstance"], [175, 3, 1, "", "FileSet"], [176, 3, 1, "", "RecordNode"], [177, 1, 1, "", "generate_filename"], [178, 1, 1, "", "is_conformant_file_id"]], "pydicom.fileset.FileInstance": [[174, 4, 1, "", "FileID"], [174, 4, 1, "", "SOPClassUID"], [174, 4, 1, "", "SOPInstanceUID"], [174, 4, 1, "", "TransferSyntaxUID"], [174, 6, 1, "", "__init__"], [174, 4, 1, "", "file_set"], [174, 4, 1, "", "for_addition"], [174, 4, 1, "", "for_moving"], [174, 4, 1, "", "for_removal"], [174, 4, 1, "", "is_private"], [174, 4, 1, "", "is_staged"], [174, 6, 1, "", "load"], [174, 5, 1, "", "node"], [174, 4, 1, "", "path"]], "pydicom.fileset.FileSet": [[175, 4, 1, "", "ID"], [175, 4, 1, "", "UID"], [175, 6, 1, "", "__init__"], [175, 6, 1, "", "add"], [175, 6, 1, "", "add_custom"], [175, 6, 1, "", "clear"], [175, 6, 1, "", "copy"], [175, 4, 1, "", "descriptor_character_set"], [175, 4, 1, "", "descriptor_file_id"], [175, 6, 1, "", "find"], [175, 6, 1, "", "find_values"], [175, 4, 1, "", "is_staged"], [175, 6, 1, "", "load"], [175, 4, 1, "", "path"], [175, 6, 1, "", "remove"], [175, 6, 1, "", "write"]], "pydicom.fileset.RecordNode": [[176, 6, 1, "", "__init__"], [176, 6, 1, "", "add"], [176, 4, 1, "", "ancestors"], [176, 5, 1, "", "children"], [176, 4, 1, "", "component"], [176, 4, 1, "", "depth"], [176, 4, 1, "", "file_set"], [176, 4, 1, "", "has_instance"], [176, 4, 1, "", "index"], [176, 5, 1, "", "instance"], [176, 4, 1, "", "is_root"], [176, 4, 1, "", "key"], [176, 4, 1, "", "next"], [176, 4, 1, "", "parent"], [176, 6, 1, "", "prettify"], [176, 4, 1, "", "previous"], [176, 4, 1, "", "record_type"], [176, 6, 1, "", "remove"], [176, 6, 1, "", "reverse"], [176, 4, 1, "", "root"]], "pydicom.fileutil": [[179, 1, 1, "", "absorb_delimiter_item"], [180, 1, 1, "", "find_bytes"], [181, 1, 1, "", "find_delimiter"], [182, 1, 1, "", "length_of_undefined_length"], [183, 1, 1, "", "read_undefined_length_value"]], "pydicom.filewriter": [[184, 1, 1, "", "correct_ambiguous_vr"], [185, 1, 1, "", "correct_ambiguous_vr_element"], [186, 1, 1, "", "dcmwrite"], [187, 1, 1, "", "multi_string"], [188, 1, 1, "", "write_ATvalue"], [189, 1, 1, "", "write_DA"], [190, 1, 1, "", "write_DT"], [191, 1, 1, "", "write_OBvalue"], [192, 1, 1, "", "write_OWvalue"], [193, 1, 1, "", "write_PN"], [194, 1, 1, "", "write_TM"], [195, 1, 1, "", "write_UI"], [196, 1, 1, "", "write_UN"], [197, 1, 1, "", "write_data_element"], [198, 1, 1, "", "write_dataset"], [199, 1, 1, "", "write_file_meta_info"], [200, 1, 1, "", "write_number_string"], [201, 1, 1, "", "write_numbers"], [202, 1, 1, "", "write_sequence"], [203, 1, 1, "", "write_sequence_item"], [204, 1, 1, "", "write_string"], [205, 1, 1, "", "write_text"]], "pydicom.hooks": [[206, 3, 1, "", "Hooks"], [207, 2, 1, "", "hooks"], [208, 1, 1, "", "raw_element_value"], [209, 1, 1, "", "raw_element_value_fix_separator"], [210, 1, 1, "", "raw_element_value_retry"], [211, 1, 1, "", "raw_element_vr"]], "pydicom.hooks.Hooks": [[206, 6, 1, "", "__init__"], [206, 6, 1, "", "register_callback"], [206, 6, 1, "", "register_kwargs"]], "pydicom.misc": [[212, 1, 1, "", "is_dicom"], [213, 1, 1, "", "size_in_bytes"]], "pydicom.multival": [[214, 3, 1, "", "MultiValue"]], "pydicom.multival.MultiValue": [[214, 6, 1, "", "__init__"], [214, 6, 1, "", "append"], [214, 6, 1, "", "clear"], [214, 6, 1, "", "count"], [214, 6, 1, "", "extend"], [214, 6, 1, "", "index"], [214, 6, 1, "", "insert"], [214, 6, 1, "", "pop"], [214, 6, 1, "", "remove"], [214, 6, 1, "", "reverse"]], "pydicom.overlays": [[215, 0, 0, "-", "numpy_handler"]], "pydicom.overlays.numpy_handler": [[215, 1, 1, "", "get_expected_length"], [215, 1, 1, "", "get_overlay_array"], [215, 1, 1, "", "is_available"], [215, 1, 1, "", "reshape_overlay_array"]], "pydicom.pixel_data_handlers": [[216, 0, 0, "-", "gdcm_handler"], [217, 0, 0, "-", "jpeg_ls_handler"], [218, 0, 0, "-", "numpy_handler"], [219, 0, 0, "-", "pillow_handler"], [220, 0, 0, "-", "pylibjpeg_handler"], [221, 0, 0, "-", "rle_handler"]], "pydicom.pixel_data_handlers.gdcm_handler": [[216, 1, 1, "", "create_data_element"], [216, 1, 1, "", "create_image"], [216, 1, 1, "", "get_pixeldata"], [216, 1, 1, "", "is_available"], [216, 1, 1, "", "needs_to_convert_to_RGB"], [216, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [216, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[217, 1, 1, "", "get_pixeldata"], [217, 1, 1, "", "is_available"], [217, 1, 1, "", "needs_to_convert_to_RGB"], [217, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [217, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.numpy_handler": [[218, 1, 1, "", "get_pixeldata"], [218, 1, 1, "", "is_available"], [218, 1, 1, "", "needs_to_convert_to_RGB"], [218, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [218, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pillow_handler": [[219, 1, 1, "", "get_pixeldata"], [219, 1, 1, "", "is_available"], [219, 1, 1, "", "needs_to_convert_to_RGB"], [219, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [219, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[220, 1, 1, "", "as_array"], [220, 1, 1, "", "generate_frames"], [220, 1, 1, "", "get_pixeldata"], [220, 1, 1, "", "is_available"], [220, 1, 1, "", "needs_to_convert_to_RGB"], [220, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [220, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.rle_handler": [[221, 1, 1, "", "get_pixeldata"], [221, 1, 1, "", "is_available"], [221, 1, 1, "", "needs_to_convert_to_RGB"], [221, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [221, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixels": [[222, 1, 1, "", "apply_color_lut"], [223, 1, 1, "", "apply_icc_profile"], [224, 1, 1, "", "apply_modality_lut"], [225, 1, 1, "", "apply_presentation_lut"], [226, 1, 1, "", "apply_rescale"], [227, 1, 1, "", "apply_voi"], [228, 1, 1, "", "apply_voi_lut"], [229, 1, 1, "", "apply_windowing"], [230, 1, 1, "", "as_pixel_options"], [231, 1, 1, "", "compress"], [232, 1, 1, "", "convert_color_space"], [233, 1, 1, "", "create_icc_transform"], [580, 0, 0, "-", "decoders"], [252, 1, 1, "", "decompress"], [581, 0, 0, "-", "encoders"], [260, 1, 1, "", "get_decoder"], [261, 1, 1, "", "get_encoder"], [262, 1, 1, "", "iter_pixels"], [263, 1, 1, "", "pack_bits"], [264, 1, 1, "", "pixel_array"], [582, 0, 0, "-", "processing"], [275, 1, 1, "", "set_pixel_data"], [276, 1, 1, "", "unpack_bits"], [583, 0, 0, "-", "utils"]], "pydicom.pixels.decoders": [[234, 2, 1, "", "DeflatedExplicitVRLittleEndianDecoder"], [235, 2, 1, "", "ExplicitVRBigEndianDecoder"], [236, 2, 1, "", "ExplicitVRLittleEndianDecoder"], [237, 2, 1, "", "HTJ2KDecoder"], [238, 2, 1, "", "HTJ2KLosslessDecoder"], [239, 2, 1, "", "HTJ2KLosslessRPCLDecoder"], [240, 2, 1, "", "ImplicitVRLittleEndianDecoder"], [241, 2, 1, "", "JPEG2000Decoder"], [242, 2, 1, "", "JPEG2000LosslessDecoder"], [243, 2, 1, "", "JPEGBaseline8BitDecoder"], [244, 2, 1, "", "JPEGExtended12BitDecoder"], [245, 2, 1, "", "JPEGLSLosslessDecoder"], [246, 2, 1, "", "JPEGLSNearLosslessDecoder"], [247, 2, 1, "", "JPEGLosslessDecoder"], [248, 2, 1, "", "JPEGLosslessSV1Decoder"], [249, 2, 1, "", "RLELosslessDecoder"]], "pydicom.pixels.decoders.base": [[250, 3, 1, "", "DecodeRunner"], [251, 3, 1, "", "Decoder"]], "pydicom.pixels.decoders.base.DecodeRunner": [[250, 6, 1, "", "__init__"], [250, 4, 1, "", "bits_allocated"], [250, 4, 1, "", "bits_stored"], [250, 4, 1, "", "columns"], [250, 6, 1, "", "decode"], [250, 6, 1, "", "del_option"], [250, 4, 1, "", "extended_offsets"], [250, 6, 1, "", "frame_length"], [250, 6, 1, "", "get_data"], [250, 6, 1, "", "get_option"], [250, 4, 1, "", "is_array"], [250, 4, 1, "", "is_binary"], [250, 4, 1, "", "is_buffer"], [250, 4, 1, "", "is_dataset"], [250, 6, 1, "", "iter_decode"], [250, 4, 1, "", "number_of_frames"], [250, 4, 1, "", "options"], [250, 4, 1, "", "photometric_interpretation"], [250, 4, 1, "", "pixel_dtype"], [250, 4, 1, "", "pixel_keyword"], [250, 6, 1, "", "pixel_properties"], [250, 4, 1, "", "pixel_representation"], [250, 4, 1, "", "planar_configuration"], [250, 6, 1, "", "process"], [250, 6, 1, "", "reshape"], [250, 4, 1, "", "rows"], [250, 4, 1, "", "samples_per_pixel"], [250, 6, 1, "", "set_decoders"], [250, 6, 1, "", "set_option"], [250, 6, 1, "", "set_options"], [250, 6, 1, "", "set_source"], [250, 4, 1, "", "src"], [250, 4, 1, "", "transfer_syntax"], [250, 6, 1, "", "validate"]], "pydicom.pixels.decoders.base.Decoder": [[251, 4, 1, "", "UID"], [251, 6, 1, "", "__init__"], [251, 6, 1, "", "add_plugin"], [251, 6, 1, "", "add_plugins"], [251, 6, 1, "", "as_array"], [251, 6, 1, "", "as_buffer"], [251, 4, 1, "", "available_plugins"], [251, 4, 1, "", "is_available"], [251, 4, 1, "", "is_encapsulated"], [251, 4, 1, "", "is_native"], [251, 6, 1, "", "iter_array"], [251, 6, 1, "", "iter_buffer"], [251, 4, 1, "", "missing_dependencies"], [251, 6, 1, "", "remove_plugin"]], "pydicom.pixels.encoders": [[253, 2, 1, "", "JPEG2000Encoder"], [254, 2, 1, "", "JPEG2000LosslessEncoder"], [255, 2, 1, "", "JPEGLSLosslessEncoder"], [256, 2, 1, "", "JPEGLSNearLosslessEncoder"], [257, 2, 1, "", "RLELosslessEncoder"]], "pydicom.pixels.encoders.base": [[258, 3, 1, "", "EncodeRunner"], [259, 3, 1, "", "Encoder"]], "pydicom.pixels.encoders.base.EncodeRunner": [[258, 6, 1, "", "__init__"], [258, 4, 1, "", "bits_allocated"], [258, 4, 1, "", "bits_stored"], [258, 4, 1, "", "columns"], [258, 6, 1, "", "del_option"], [258, 6, 1, "", "encode"], [258, 4, 1, "", "extended_offsets"], [258, 6, 1, "", "frame_length"], [258, 6, 1, "", "get_frame"], [258, 6, 1, "", "get_option"], [258, 4, 1, "", "is_array"], [258, 4, 1, "", "is_binary"], [258, 4, 1, "", "is_buffer"], [258, 4, 1, "", "is_dataset"], [258, 4, 1, "", "number_of_frames"], [258, 4, 1, "", "options"], [258, 4, 1, "", "photometric_interpretation"], [258, 4, 1, "", "pixel_keyword"], [258, 4, 1, "", "pixel_representation"], [258, 4, 1, "", "planar_configuration"], [258, 4, 1, "", "rows"], [258, 4, 1, "", "samples_per_pixel"], [258, 6, 1, "", "set_encoders"], [258, 6, 1, "", "set_option"], [258, 6, 1, "", "set_options"], [258, 6, 1, "", "set_source"], [258, 4, 1, "", "src"], [258, 4, 1, "", "transfer_syntax"], [258, 6, 1, "", "validate"]], "pydicom.pixels.encoders.base.Encoder": [[259, 4, 1, "", "UID"], [259, 6, 1, "", "__init__"], [259, 6, 1, "", "add_plugin"], [259, 6, 1, "", "add_plugins"], [259, 4, 1, "", "available_plugins"], [259, 6, 1, "", "encode"], [259, 4, 1, "", "is_available"], [259, 4, 1, "", "is_encapsulated"], [259, 4, 1, "", "is_native"], [259, 6, 1, "", "iter_encode"], [259, 4, 1, "", "missing_dependencies"], [259, 6, 1, "", "remove_plugin"]], "pydicom.pixels.processing": [[265, 1, 1, "", "apply_color_lut"], [266, 1, 1, "", "apply_icc_profile"], [267, 1, 1, "", "apply_modality_lut"], [268, 1, 1, "", "apply_presentation_lut"], [269, 1, 1, "", "apply_rescale"], [270, 1, 1, "", "apply_voi"], [271, 1, 1, "", "apply_voi_lut"], [272, 1, 1, "", "apply_windowing"], [273, 1, 1, "", "convert_color_space"], [274, 1, 1, "", "create_icc_transform"]], "pydicom.pixels.utils": [[277, 1, 1, "", "as_pixel_options"], [278, 1, 1, "", "compress"], [279, 1, 1, "", "decompress"], [280, 1, 1, "", "expand_ybr422"], [281, 1, 1, "", "get_expected_length"], [282, 1, 1, "", "get_image_pixel_ids"], [283, 1, 1, "", "get_j2k_parameters"], [284, 1, 1, "", "get_nr_frames"], [285, 1, 1, "", "iter_pixels"], [286, 1, 1, "", "pack_bits"], [287, 1, 1, "", "pixel_array"], [288, 1, 1, "", "pixel_dtype"], [289, 1, 1, "", "reshape_pixel_array"], [290, 1, 1, "", "set_pixel_data"], [291, 1, 1, "", "unpack_bits"]], "pydicom.sequence": [[292, 3, 1, "", "Sequence"]], "pydicom.sequence.Sequence": [[292, 6, 1, "", "__init__"], [292, 6, 1, "", "append"], [292, 6, 1, "", "clear"], [292, 6, 1, "", "count"], [292, 6, 1, "", "extend"], [292, 6, 1, "", "index"], [292, 6, 1, "", "insert"], [292, 6, 1, "", "pop"], [292, 6, 1, "", "remove"], [292, 6, 1, "", "reverse"]], "pydicom.sr": [[293, 3, 1, "", "Code"], [294, 3, 1, "", "Collection"], [295, 3, 1, "", "Concepts"]], "pydicom.sr.Code": [[293, 6, 1, "", "__init__"], [293, 6, 1, "", "count"], [293, 6, 1, "", "index"], [293, 5, 1, "", "meaning"], [293, 5, 1, "", "scheme_designator"], [293, 5, 1, "", "scheme_version"], [293, 5, 1, "", "value"]], "pydicom.sr.Collection": [[294, 6, 1, "", "__init__"], [294, 4, 1, "", "concepts"], [294, 6, 1, "", "dir"], [294, 4, 1, "", "is_cid"], [294, 4, 1, "", "name"], [294, 4, 1, "", "scheme_designator"], [294, 6, 1, "", "trait_names"]], "pydicom.sr.Concepts": [[295, 6, 1, "", "CIDs"], [295, 6, 1, "", "__init__"], [295, 4, 1, "", "collections"], [295, 6, 1, "", "schemes"]], "pydicom.tag": [[296, 3, 1, "", "BaseTag"], [297, 1, 1, "", "Tag"], [298, 1, 1, "", "TupleTag"], [299, 1, 1, "", "tag_in_exception"]], "pydicom.tag.BaseTag": [[296, 6, 1, "", "__init__"], [296, 6, 1, "", "as_integer_ratio"], [296, 6, 1, "", "bit_count"], [296, 6, 1, "", "bit_length"], [296, 6, 1, "", "conjugate"], [296, 5, 1, "", "denominator"], [296, 4, 1, "", "elem"], [296, 4, 1, "", "element"], [296, 6, 1, "", "from_bytes"], [296, 4, 1, "", "group"], [296, 5, 1, "", "imag"], [296, 4, 1, "", "is_private"], [296, 4, 1, "", "is_private_creator"], [296, 4, 1, "", "json_key"], [296, 5, 1, "", "numerator"], [296, 4, 1, "", "private_creator"], [296, 5, 1, "", "real"], [296, 6, 1, "", "to_bytes"]], "pydicom.uid": [[300, 2, 1, "", "AcquisitionContextSRStorage"], [301, 2, 1, "", "AdvancedBlendingPresentationStateStorage"], [302, 2, 1, "", "AllTransferSyntaxes"], [303, 2, 1, "", "AmbulatoryECGWaveformStorage"], [304, 2, 1, "", "ArterialPulseWaveformStorage"], [305, 2, 1, "", "AutorefractionMeasurementsStorage"], [306, 2, 1, "", "BasicStructuredDisplayStorage"], [307, 2, 1, "", "BasicTextSRStorage"], [308, 2, 1, "", "BasicVoiceAudioWaveformStorage"], [309, 2, 1, "", "BlendingSoftcopyPresentationStateStorage"], [310, 2, 1, "", "BodyPositionWaveformStorage"], [311, 2, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [312, 2, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [313, 2, 1, "", "BreastTomosynthesisImageStorage"], [314, 2, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [315, 2, 1, "", "CArmPhotonElectronRadiationStorage"], [316, 2, 1, "", "CTDefinedProcedureProtocolStorage"], [317, 2, 1, "", "CTImageStorage"], [318, 2, 1, "", "CTPerformedProcedureProtocolStorage"], [319, 2, 1, "", "CardiacElectrophysiologyWaveformStorage"], [320, 2, 1, "", "ChestCADSRStorage"], [321, 2, 1, "", "ColonCADSRStorage"], [322, 2, 1, "", "ColorPaletteStorage"], [323, 2, 1, "", "ColorSoftcopyPresentationStateStorage"], [324, 2, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [325, 2, 1, "", "Comprehensive3DSRStorage"], [326, 2, 1, "", "ComprehensiveSRStorage"], [327, 2, 1, "", "ComputedRadiographyImageStorage"], [328, 2, 1, "", "ConfocalMicroscopyImageStorage"], [329, 2, 1, "", "ConfocalMicroscopyTiledPyramidalImageStorage"], [330, 2, 1, "", "ContentAssessmentResultsStorage"], [331, 2, 1, "", "CornealTopographyMapStorage"], [332, 2, 1, "", "DICOS2DAITStorage"], [333, 2, 1, "", "DICOS3DAITStorage"], [334, 2, 1, "", "DICOSCTImageStorage"], [335, 2, 1, "", "DICOSDigitalXRayImageStorageForPresentation"], [336, 2, 1, "", "DICOSDigitalXRayImageStorageForProcessing"], [337, 2, 1, "", "DICOSQuadrupoleResonanceStorage"], [338, 2, 1, "", "DICOSThreatDetectionReportStorage"], [339, 2, 1, "", "DeflatedExplicitVRLittleEndian"], [340, 2, 1, "", "DeformableSpatialRegistrationStorage"], [341, 2, 1, "", "DermoscopicPhotographyImageStorage"], [342, 2, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [343, 2, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [344, 2, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [345, 2, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [346, 2, 1, "", "DigitalXRayImageStorageForPresentation"], [347, 2, 1, "", "DigitalXRayImageStorageForProcessing"], [348, 2, 1, "", "EddyCurrentImageStorage"], [349, 2, 1, "", "EddyCurrentMultiFrameImageStorage"], [350, 2, 1, "", "ElectromyogramWaveformStorage"], [351, 2, 1, "", "ElectrooculogramWaveformStorage"], [352, 2, 1, "", "EncapsulatedCDAStorage"], [353, 2, 1, "", "EncapsulatedMTLStorage"], [354, 2, 1, "", "EncapsulatedOBJStorage"], [355, 2, 1, "", "EncapsulatedPDFStorage"], [356, 2, 1, "", "EncapsulatedSTLStorage"], [357, 2, 1, "", "EnhancedCTImageStorage"], [358, 2, 1, "", "EnhancedContinuousRTImageStorage"], [359, 2, 1, "", "EnhancedMRColorImageStorage"], [360, 2, 1, "", "EnhancedMRImageStorage"], [361, 2, 1, "", "EnhancedPETImageStorage"], [362, 2, 1, "", "EnhancedRTImageStorage"], [363, 2, 1, "", "EnhancedSRStorage"], [364, 2, 1, "", "EnhancedUSVolumeStorage"], [365, 2, 1, "", "EnhancedXAImageStorage"], [366, 2, 1, "", "EnhancedXRFImageStorage"], [367, 2, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [368, 2, 1, "", "ExplicitVRBigEndian"], [369, 2, 1, "", "ExplicitVRLittleEndian"], [370, 2, 1, "", "ExtensibleSRStorage"], [371, 2, 1, "", "General32bitECGWaveformStorage"], [372, 2, 1, "", "GeneralAudioWaveformStorage"], [373, 2, 1, "", "GeneralECGWaveformStorage"], [374, 2, 1, "", "GenericImplantTemplateStorage"], [375, 2, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [376, 2, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [377, 2, 1, "", "HEVCM10P51"], [378, 2, 1, "", "HEVCMP51"], [379, 2, 1, "", "HTJ2K"], [380, 2, 1, "", "HTJ2KLossless"], [381, 2, 1, "", "HTJ2KLosslessRPCL"], [382, 2, 1, "", "HangingProtocolStorage"], [383, 2, 1, "", "HemodynamicWaveformStorage"], [384, 2, 1, "", "ImplantAssemblyTemplateStorage"], [385, 2, 1, "", "ImplantTemplateGroupStorage"], [386, 2, 1, "", "ImplantationPlanSRStorage"], [387, 2, 1, "", "ImplicitVRLittleEndian"], [388, 2, 1, "", "IntraocularLensCalculationsStorage"], [389, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [390, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [391, 2, 1, "", "InventoryStorage"], [392, 2, 1, "", "JPEG2000"], [393, 2, 1, "", "JPEG2000Lossless"], [394, 2, 1, "", "JPEG2000MC"], [395, 2, 1, "", "JPEG2000MCLossless"], [396, 2, 1, "", "JPEG2000TransferSyntaxes"], [397, 2, 1, "", "JPEGBaseline8Bit"], [398, 2, 1, "", "JPEGExtended12Bit"], [399, 2, 1, "", "JPEGLSLossless"], [400, 2, 1, "", "JPEGLSNearLossless"], [401, 2, 1, "", "JPEGLSTransferSyntaxes"], [402, 2, 1, "", "JPEGLossless"], [403, 2, 1, "", "JPEGLosslessSV1"], [404, 2, 1, "", "JPEGTransferSyntaxes"], [405, 2, 1, "", "JPIPHTJ2KReferenced"], [406, 2, 1, "", "JPIPHTJ2KReferencedDeflate"], [407, 2, 1, "", "KeratometryMeasurementsStorage"], [408, 2, 1, "", "KeyObjectSelectionDocumentStorage"], [409, 2, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [410, 2, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [411, 2, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [412, 2, 1, "", "LensometryMeasurementsStorage"], [413, 2, 1, "", "MPEG2MPHL"], [414, 2, 1, "", "MPEG2MPHLF"], [415, 2, 1, "", "MPEG2MPML"], [416, 2, 1, "", "MPEG2MPMLF"], [417, 2, 1, "", "MPEG4HP41"], [418, 2, 1, "", "MPEG4HP41BD"], [419, 2, 1, "", "MPEG4HP41BDF"], [420, 2, 1, "", "MPEG4HP41F"], [421, 2, 1, "", "MPEG4HP422D"], [422, 2, 1, "", "MPEG4HP422DF"], [423, 2, 1, "", "MPEG4HP423D"], [424, 2, 1, "", "MPEG4HP423DF"], [425, 2, 1, "", "MPEG4HP42STEREO"], [426, 2, 1, "", "MPEG4HP42STEREOF"], [427, 2, 1, "", "MPEGTransferSyntaxes"], [428, 2, 1, "", "MRImageStorage"], [429, 2, 1, "", "MRSpectroscopyStorage"], [430, 2, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [431, 2, 1, "", "MammographyCADSRStorage"], [432, 2, 1, "", "MediaStorageDirectoryStorage"], [433, 2, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [434, 2, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [435, 2, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [436, 2, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [437, 2, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [438, 2, 1, "", "MultichannelRespiratoryWaveformStorage"], [439, 2, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [440, 2, 1, "", "NuclearMedicineImageStorage"], [441, 2, 1, "", "OphthalmicAxialMeasurementsStorage"], [442, 2, 1, "", "OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [443, 2, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [444, 2, 1, "", "OphthalmicPhotography16BitImageStorage"], [445, 2, 1, "", "OphthalmicPhotography8BitImageStorage"], [446, 2, 1, "", "OphthalmicThicknessMapStorage"], [447, 2, 1, "", "OphthalmicTomographyImageStorage"], [448, 2, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [449, 2, 1, "", "PYDICOM_IMPLEMENTATION_UID"], [450, 2, 1, "", "PYDICOM_ROOT_UID"], [451, 2, 1, "", "ParametricMapStorage"], [452, 2, 1, "", "PatientRadiationDoseSRStorage"], [453, 2, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [454, 2, 1, "", "PhotoacousticImageStorage"], [455, 2, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [456, 2, 1, "", "PositronEmissionTomographyImageStorage"], [457, 2, 1, "", "PrivateTransferSyntaxes"], [458, 2, 1, "", "ProcedureLogStorage"], [459, 2, 1, "", "ProtocolApprovalStorage"], [460, 2, 1, "", "PseudoColorSoftcopyPresentationStateStorage"], [461, 2, 1, "", "RE_VALID_UID"], [462, 2, 1, "", "RE_VALID_UID_PREFIX"], [463, 2, 1, "", "RLELossless"], [464, 2, 1, "", "RLETransferSyntaxes"], [465, 2, 1, "", "RTBeamsDeliveryInstructionStorage"], [466, 2, 1, "", "RTBeamsTreatmentRecordStorage"], [467, 2, 1, "", "RTBrachyApplicationSetupDeliveryInstructionStorage"], [468, 2, 1, "", "RTBrachyTreatmentRecordStorage"], [469, 2, 1, "", "RTDoseStorage"], [470, 2, 1, "", "RTImageStorage"], [471, 2, 1, "", "RTIonBeamsTreatmentRecordStorage"], [472, 2, 1, "", "RTIonPlanStorage"], [473, 2, 1, "", "RTPatientPositionAcquisitionInstructionStorage"], [474, 2, 1, "", "RTPhysicianIntentStorage"], [475, 2, 1, "", "RTPlanStorage"], [476, 2, 1, "", "RTRadiationRecordSetStorage"], [477, 2, 1, "", "RTRadiationSalvageRecordStorage"], [478, 2, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [479, 2, 1, "", "RTRadiationSetStorage"], [480, 2, 1, "", "RTSegmentAnnotationStorage"], [481, 2, 1, "", "RTStructureSetStorage"], [482, 2, 1, "", "RTTreatmentPreparationStorage"], [483, 2, 1, "", "RTTreatmentSummaryRecordStorage"], [484, 2, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [485, 2, 1, "", "RawDataStorage"], [486, 2, 1, "", "RealWorldValueMappingStorage"], [487, 2, 1, "", "RespiratoryWaveformStorage"], [488, 2, 1, "", "RoboticArmRadiationStorage"], [489, 2, 1, "", "RoboticRadiationRecordStorage"], [490, 2, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [491, 2, 1, "", "SMPTEST211020UncompressedInterlacedActiveVideo"], [492, 2, 1, "", "SMPTEST211020UncompressedProgressiveActiveVideo"], [493, 2, 1, "", "SMPTEST211030PCMDigitalAudio"], [494, 2, 1, "", "SecondaryCaptureImageStorage"], [495, 2, 1, "", "SegmentationStorage"], [496, 2, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [497, 2, 1, "", "SimplifiedAdultEchoSRStorage"], [498, 2, 1, "", "SleepElectroencephalogramWaveformStorage"], [499, 2, 1, "", "SpatialFiducialsStorage"], [500, 2, 1, "", "SpatialRegistrationStorage"], [501, 2, 1, "", "SpectaclePrescriptionReportStorage"], [502, 2, 1, "", "StereometricRelationshipStorage"], [503, 2, 1, "", "SubjectiveRefractionMeasurementsStorage"], [504, 2, 1, "", "SurfaceScanMeshStorage"], [505, 2, 1, "", "SurfaceScanPointCloudStorage"], [506, 2, 1, "", "SurfaceSegmentationStorage"], [507, 2, 1, "", "TomotherapeuticRadiationRecordStorage"], [508, 2, 1, "", "TomotherapeuticRadiationStorage"], [509, 2, 1, "", "TractographyResultsStorage"], [510, 2, 1, "", "TwelveLeadECGWaveformStorage"], [511, 3, 1, "", "UID"], [512, 2, 1, "", "UltrasoundImageStorage"], [513, 2, 1, "", "UltrasoundMultiFrameImageStorage"], [514, 2, 1, "", "UncompressedTransferSyntaxes"], [515, 2, 1, "", "VLEndoscopicImageStorage"], [516, 2, 1, "", "VLMicroscopicImageStorage"], [517, 2, 1, "", "VLPhotographicImageStorage"], [518, 2, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [519, 2, 1, "", "VLWholeSlideMicroscopyImageStorage"], [520, 2, 1, "", "VariableModalityLUTSoftcopyPresentationStateStorage"], [521, 2, 1, "", "VideoEndoscopicImageStorage"], [522, 2, 1, "", "VideoMicroscopicImageStorage"], [523, 2, 1, "", "VideoPhotographicImageStorage"], [524, 2, 1, "", "VisualAcuityMeasurementsStorage"], [525, 2, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [526, 2, 1, "", "WaveformAnnotationSRStorage"], [527, 2, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [528, 2, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [529, 2, 1, "", "XADefinedProcedureProtocolStorage"], [530, 2, 1, "", "XAPerformedProcedureProtocolStorage"], [531, 2, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [532, 2, 1, "", "XRay3DAngiographicImageStorage"], [533, 2, 1, "", "XRay3DCraniofacialImageStorage"], [534, 2, 1, "", "XRayAngiographicImageStorage"], [535, 2, 1, "", "XRayRadiationDoseSRStorage"], [536, 2, 1, "", "XRayRadiofluoroscopicImageStorage"], [537, 1, 1, "", "generate_uid"], [538, 1, 1, "", "register_transfer_syntax"]], "pydicom.uid.UID": [[511, 6, 1, "", "__init__"], [511, 6, 1, "", "capitalize"], [511, 6, 1, "", "casefold"], [511, 6, 1, "", "center"], [511, 6, 1, "", "count"], [511, 6, 1, "", "encode"], [511, 6, 1, "", "endswith"], [511, 6, 1, "", "expandtabs"], [511, 6, 1, "", "find"], [511, 6, 1, "", "format"], [511, 6, 1, "", "format_map"], [511, 6, 1, "", "index"], [511, 4, 1, "", "info"], [511, 4, 1, "", "is_compressed"], [511, 4, 1, "", "is_deflated"], [511, 4, 1, "", "is_encapsulated"], [511, 4, 1, "", "is_implicit_VR"], [511, 4, 1, "", "is_little_endian"], [511, 4, 1, "", "is_private"], [511, 4, 1, "", "is_retired"], [511, 4, 1, "", "is_transfer_syntax"], [511, 4, 1, "", "is_valid"], [511, 6, 1, "", "isalnum"], [511, 6, 1, "", "isalpha"], [511, 6, 1, "", "isascii"], [511, 6, 1, "", "isdecimal"], [511, 6, 1, "", "isdigit"], [511, 6, 1, "", "isidentifier"], [511, 6, 1, "", "islower"], [511, 6, 1, "", "isnumeric"], [511, 6, 1, "", "isprintable"], [511, 6, 1, "", "isspace"], [511, 6, 1, "", "istitle"], [511, 6, 1, "", "isupper"], [511, 6, 1, "", "join"], [511, 4, 1, "", "keyword"], [511, 6, 1, "", "ljust"], [511, 6, 1, "", "lower"], [511, 6, 1, "", "lstrip"], [511, 6, 1, "", "maketrans"], [511, 4, 1, "", "name"], [511, 6, 1, "", "partition"], [511, 6, 1, "", "removeprefix"], [511, 6, 1, "", "removesuffix"], [511, 6, 1, "", "replace"], [511, 6, 1, "", "rfind"], [511, 6, 1, "", "rindex"], [511, 6, 1, "", "rjust"], [511, 6, 1, "", "rpartition"], [511, 6, 1, "", "rsplit"], [511, 6, 1, "", "rstrip"], [511, 6, 1, "", "set_private_encoding"], [511, 6, 1, "", "split"], [511, 6, 1, "", "splitlines"], [511, 6, 1, "", "startswith"], [511, 6, 1, "", "strip"], [511, 6, 1, "", "swapcase"], [511, 6, 1, "", "title"], [511, 6, 1, "", "translate"], [511, 4, 1, "", "type"], [511, 6, 1, "", "upper"], [511, 6, 1, "", "zfill"]], "pydicom.valuerep": [[539, 3, 1, "", "DA"], [540, 1, 1, "", "DS"], [541, 3, 1, "", "DSdecimal"], [542, 3, 1, "", "DSfloat"], [543, 3, 1, "", "DT"], [544, 3, 1, "", "IS"], [545, 3, 1, "", "ISfloat"], [546, 3, 1, "", "PersonName"], [547, 3, 1, "", "TM"], [548, 3, 1, "", "VR"], [549, 1, 1, "", "format_number_as_ds"], [550, 1, 1, "", "is_valid_ds"]], "pydicom.valuerep.DA": [[539, 6, 1, "", "__init__"], [539, 6, 1, "", "ctime"], [539, 6, 1, "", "fromisocalendar"], [539, 6, 1, "", "fromisoformat"], [539, 6, 1, "", "fromordinal"], [539, 6, 1, "", "fromtimestamp"], [539, 6, 1, "", "isocalendar"], [539, 6, 1, "", "isoformat"], [539, 6, 1, "", "isoweekday"], [539, 6, 1, "", "replace"], [539, 6, 1, "", "strftime"], [539, 6, 1, "", "timetuple"], [539, 6, 1, "", "today"], [539, 6, 1, "", "toordinal"], [539, 6, 1, "", "weekday"]], "pydicom.valuerep.DSdecimal": [[541, 6, 1, "", "__init__"], [541, 6, 1, "", "adjusted"], [541, 6, 1, "", "as_integer_ratio"], [541, 6, 1, "", "as_tuple"], [541, 6, 1, "", "canonical"], [541, 6, 1, "", "compare"], [541, 6, 1, "", "compare_signal"], [541, 6, 1, "", "compare_total"], [541, 6, 1, "", "compare_total_mag"], [541, 6, 1, "", "conjugate"], [541, 6, 1, "", "copy_abs"], [541, 6, 1, "", "copy_negate"], [541, 6, 1, "", "copy_sign"], [541, 6, 1, "", "exp"], [541, 6, 1, "", "fma"], [541, 6, 1, "", "from_float"], [541, 6, 1, "", "is_canonical"], [541, 6, 1, "", "is_finite"], [541, 6, 1, "", "is_infinite"], [541, 6, 1, "", "is_nan"], [541, 6, 1, "", "is_normal"], [541, 6, 1, "", "is_qnan"], [541, 6, 1, "", "is_signed"], [541, 6, 1, "", "is_snan"], [541, 6, 1, "", "is_subnormal"], [541, 6, 1, "", "is_zero"], [541, 6, 1, "", "ln"], [541, 6, 1, "", "log10"], [541, 6, 1, "", "logb"], [541, 6, 1, "", "logical_and"], [541, 6, 1, "", "logical_invert"], [541, 6, 1, "", "logical_or"], [541, 6, 1, "", "logical_xor"], [541, 6, 1, "", "max"], [541, 6, 1, "", "max_mag"], [541, 6, 1, "", "min"], [541, 6, 1, "", "min_mag"], [541, 6, 1, "", "next_minus"], [541, 6, 1, "", "next_plus"], [541, 6, 1, "", "next_toward"], [541, 6, 1, "", "normalize"], [541, 6, 1, "", "number_class"], [541, 6, 1, "", "quantize"], [541, 6, 1, "", "radix"], [541, 6, 1, "", "remainder_near"], [541, 6, 1, "", "rotate"], [541, 6, 1, "", "same_quantum"], [541, 6, 1, "", "scaleb"], [541, 6, 1, "", "shift"], [541, 6, 1, "", "sqrt"], [541, 6, 1, "", "to_eng_string"], [541, 6, 1, "", "to_integral"], [541, 6, 1, "", "to_integral_exact"], [541, 6, 1, "", "to_integral_value"]], "pydicom.valuerep.DSfloat": [[542, 6, 1, "", "__init__"], [542, 6, 1, "", "as_integer_ratio"], [542, 6, 1, "", "conjugate"], [542, 6, 1, "", "fromhex"], [542, 6, 1, "", "hex"], [542, 5, 1, "", "imag"], [542, 6, 1, "", "is_integer"], [542, 5, 1, "", "real"]], "pydicom.valuerep.DT": [[543, 6, 1, "", "__init__"], [543, 6, 1, "", "astimezone"], [543, 6, 1, "", "combine"], [543, 6, 1, "", "ctime"], [543, 6, 1, "", "date"], [543, 6, 1, "", "dst"], [543, 6, 1, "", "fromisocalendar"], [543, 6, 1, "", "fromisoformat"], [543, 6, 1, "", "fromordinal"], [543, 6, 1, "", "fromtimestamp"], [543, 6, 1, "", "isocalendar"], [543, 6, 1, "", "isoformat"], [543, 6, 1, "", "isoweekday"], [543, 6, 1, "", "now"], [543, 6, 1, "", "replace"], [543, 6, 1, "", "strftime"], [543, 6, 1, "", "strptime"], [543, 6, 1, "", "time"], [543, 6, 1, "", "timestamp"], [543, 6, 1, "", "timetuple"], [543, 6, 1, "", "timetz"], [543, 6, 1, "", "today"], [543, 6, 1, "", "toordinal"], [543, 6, 1, "", "tzname"], [543, 6, 1, "", "utcfromtimestamp"], [543, 6, 1, "", "utcnow"], [543, 6, 1, "", "utcoffset"], [543, 6, 1, "", "utctimetuple"], [543, 6, 1, "", "weekday"]], "pydicom.valuerep.IS": [[544, 6, 1, "", "__init__"], [544, 6, 1, "", "as_integer_ratio"], [544, 6, 1, "", "bit_count"], [544, 6, 1, "", "bit_length"], [544, 6, 1, "", "conjugate"], [544, 5, 1, "", "denominator"], [544, 6, 1, "", "from_bytes"], [544, 5, 1, "", "imag"], [544, 5, 1, "", "numerator"], [544, 5, 1, "", "real"], [544, 6, 1, "", "to_bytes"]], "pydicom.valuerep.ISfloat": [[545, 6, 1, "", "__init__"], [545, 6, 1, "", "as_integer_ratio"], [545, 6, 1, "", "conjugate"], [545, 6, 1, "", "fromhex"], [545, 6, 1, "", "hex"], [545, 5, 1, "", "imag"], [545, 6, 1, "", "is_integer"], [545, 5, 1, "", "real"]], "pydicom.valuerep.PersonName": [[546, 6, 1, "", "__init__"], [546, 4, 1, "", "alphabetic"], [546, 4, 1, "", "components"], [546, 6, 1, "", "decode"], [546, 6, 1, "", "encode"], [546, 6, 1, "", "family_comma_given"], [546, 4, 1, "", "family_name"], [546, 6, 1, "", "formatted"], [546, 6, 1, "", "from_named_components"], [546, 6, 1, "", "from_named_components_veterinary"], [546, 4, 1, "", "given_name"], [546, 4, 1, "", "ideographic"], [546, 4, 1, "", "middle_name"], [546, 4, 1, "", "name_prefix"], [546, 4, 1, "", "name_suffix"], [546, 4, 1, "", "phonetic"]], "pydicom.valuerep.TM": [[547, 6, 1, "", "__init__"], [547, 6, 1, "", "dst"], [547, 6, 1, "", "fromisoformat"], [547, 6, 1, "", "isoformat"], [547, 6, 1, "", "replace"], [547, 6, 1, "", "strftime"], [547, 6, 1, "", "tzname"], [547, 6, 1, "", "utcoffset"]], "pydicom.valuerep.VR": [[548, 6, 1, "", "__init__"], [548, 6, 1, "", "capitalize"], [548, 6, 1, "", "casefold"], [548, 6, 1, "", "center"], [548, 6, 1, "", "count"], [548, 6, 1, "", "encode"], [548, 6, 1, "", "endswith"], [548, 6, 1, "", "expandtabs"], [548, 6, 1, "", "find"], [548, 6, 1, "", "format"], [548, 6, 1, "", "format_map"], [548, 6, 1, "", "index"], [548, 6, 1, "", "isalnum"], [548, 6, 1, "", "isalpha"], [548, 6, 1, "", "isascii"], [548, 6, 1, "", "isdecimal"], [548, 6, 1, "", "isdigit"], [548, 6, 1, "", "isidentifier"], [548, 6, 1, "", "islower"], [548, 6, 1, "", "isnumeric"], [548, 6, 1, "", "isprintable"], [548, 6, 1, "", "isspace"], [548, 6, 1, "", "istitle"], [548, 6, 1, "", "isupper"], [548, 6, 1, "", "join"], [548, 6, 1, "", "ljust"], [548, 6, 1, "", "lower"], [548, 6, 1, "", "lstrip"], [548, 6, 1, "", "maketrans"], [548, 6, 1, "", "partition"], [548, 6, 1, "", "removeprefix"], [548, 6, 1, "", "removesuffix"], [548, 6, 1, "", "replace"], [548, 6, 1, "", "rfind"], [548, 6, 1, "", "rindex"], [548, 6, 1, "", "rjust"], [548, 6, 1, "", "rpartition"], [548, 6, 1, "", "rsplit"], [548, 6, 1, "", "rstrip"], [548, 6, 1, "", "split"], [548, 6, 1, "", "splitlines"], [548, 6, 1, "", "startswith"], [548, 6, 1, "", "strip"], [548, 6, 1, "", "swapcase"], [548, 6, 1, "", "title"], [548, 6, 1, "", "translate"], [548, 6, 1, "", "upper"], [548, 6, 1, "", "zfill"]], "pydicom.values": [[551, 1, 1, "", "convert_AE_string"], [552, 1, 1, "", "convert_ATvalue"], [553, 1, 1, "", "convert_DA_string"], [554, 1, 1, "", "convert_DS_string"], [555, 1, 1, "", "convert_DT_string"], [556, 1, 1, "", "convert_IS_string"], [557, 1, 1, "", "convert_OBvalue"], [558, 1, 1, "", "convert_OWvalue"], [559, 1, 1, "", "convert_PN"], [560, 1, 1, "", "convert_SQ"], [561, 1, 1, "", "convert_TM_string"], [562, 1, 1, "", "convert_UI"], [563, 1, 1, "", "convert_UN"], [564, 1, 1, "", "convert_UR_string"], [565, 1, 1, "", "convert_numbers"], [566, 1, 1, "", "convert_single_string"], [567, 1, 1, "", "convert_string"], [568, 1, 1, "", "convert_tag"], [569, 1, 1, "", "convert_text"], [570, 1, 1, "", "convert_value"], [571, 1, 1, "", "multi_string"]], "pydicom.waveforms": [[572, 0, 0, "-", "numpy_handler"]], "pydicom.waveforms.numpy_handler": [[572, 1, 1, "", "generate_multiplex"], [572, 1, 1, "", "is_available"], [572, 1, 1, "", "multiplex_array"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:method", "7": "py:exception"}, "terms": {"": [0, 2, 3, 4, 8, 9, 10, 12, 16, 17, 20, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 41, 42, 44, 47, 48, 49, 50, 52, 53, 54, 84, 93, 94, 97, 110, 116, 120, 127, 128, 131, 132, 133, 134, 139, 144, 147, 150, 151, 154, 156, 159, 161, 162, 165, 175, 176, 184, 185, 186, 206, 214, 232, 250, 251, 252, 258, 259, 262, 263, 264, 273, 275, 279, 282, 285, 286, 287, 290, 292, 296, 297, 449, 450, 511, 541, 543, 544, 548, 549, 550, 552, 559, 560, 567, 569, 570, 584, 587, 589, 590, 592, 597, 598, 600, 603, 605, 608, 611, 612, 613, 614, 616, 618, 619, 620, 622, 624], "0": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 33, 34, 36, 37, 38, 39, 42, 43, 44, 47, 49, 50, 51, 56, 67, 81, 82, 83, 91, 92, 98, 100, 102, 103, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 159, 161, 162, 171, 172, 173, 177, 178, 184, 185, 186, 206, 207, 208, 209, 210, 211, 215, 218, 220, 221, 223, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 270, 271, 272, 274, 275, 277, 278, 279, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 449, 450, 461, 462, 511, 537, 539, 541, 542, 543, 544, 545, 554, 556, 560, 568, 572, 573, 574, 576, 604, 610, 613, 614, 616, 618, 619, 620, 622, 624], "00": [5, 13, 19, 21, 151, 610], "000": [5, 21, 541, 610, 624], "0000": [2, 8, 12, 20, 26, 27, 28, 42, 47, 199, 511, 548, 587, 608, 614], "000000": [10, 20, 616], "00000000": 177, "000000000": [2, 8, 20], "00000000000000": [26, 28], "00000001": 177, "00000002": 177, "0000200": [2, 8, 20], "0001": [2, 12, 20, 26, 27, 28, 42, 47, 132, 133, 134, 136, 144, 146, 150, 199, 231, 278, 614], "00010": 177, "0002": [2, 12, 20, 26, 27, 28, 29, 39, 42, 47, 50, 132, 133, 134, 136, 144, 146, 150, 186, 199, 218, 220, 221, 231, 252, 275, 278, 279, 281, 282, 289, 290, 449, 614, 618, 622], "0003": [2, 12, 20, 26, 27, 28, 42, 47, 136, 199, 614], "0004": [2, 10, 20, 26, 27, 28, 29, 39, 50, 132, 133, 134, 173, 175, 218, 220, 231, 232, 273, 275, 278, 280, 281, 282, 290, 587, 600, 616, 622], "0005": [20, 26, 28, 47, 76, 77, 78, 79, 132, 133, 134, 165, 166, 572, 587, 588, 614, 615, 616], "0006": [26, 27, 28, 29, 39, 132, 133, 134, 218, 220, 221, 231, 275, 278, 282, 289, 290], "0008": [2, 12, 20, 26, 27, 28, 29, 39, 42, 47, 50, 76, 77, 78, 79, 132, 133, 134, 144, 146, 147, 149, 150, 165, 166, 218, 220, 221, 222, 231, 252, 265, 275, 278, 279, 281, 282, 289, 290, 580, 587, 588, 600, 614, 615, 616, 622], "00080005": 615, "00080008": 615, "0009": [20, 47, 50, 132, 133, 134, 218, 282, 580, 587, 600, 622], "00091002": 615, "000b": 47, "000d": [2, 20], "000e": [2, 20], "000y": 20, "001": 47, "0010": [2, 12, 16, 17, 20, 26, 27, 28, 29, 39, 42, 47, 49, 50, 53, 67, 97, 132, 133, 134, 136, 147, 148, 149, 165, 199, 215, 218, 219, 220, 221, 231, 252, 275, 278, 279, 281, 282, 289, 290, 572, 573, 580, 581, 587, 596, 608, 613, 614, 616, 618, 622], "0011": [2, 20, 29, 39, 49, 132, 133, 134, 215, 218, 220, 221, 231, 275, 276, 278, 281, 282, 289, 290, 291, 622], "0012": [2, 12, 20, 26, 27, 28, 42, 47, 136, 199, 449, 614], "0013": [2, 12, 20, 26, 27, 28, 42, 47, 136, 199, 614, 616], "0014": [2, 20, 26, 27, 28, 614], "0015": 215, "0016": [2, 20, 26, 27, 28, 42, 47, 199, 614], "0017": 199, "0018": [2, 20, 26, 27, 28, 42, 132, 133, 134, 199, 222, 231, 252, 265, 275, 278, 279, 290], "0019": 20, "0019xx43": [587, 606], "001a": 51, "002": [18, 19, 610], "0020": [2, 12, 17, 20, 26, 27, 28, 42, 614, 616], "0021": [2, 20], "0022": [2, 20, 614], "0023": [2, 12, 20, 26, 27], "0025": 20, "0026": [26, 27], "0027": 20, "0028": [2, 20, 29, 39, 45, 50, 132, 133, 134, 144, 146, 147, 149, 150, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 259, 263, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 286, 288, 289, 290, 291, 587, 600, 602, 614, 622], "0029": [20, 132, 133, 134], "002c": [26, 27], "003": [11, 13, 610], "0030": [2, 17, 20, 42, 622], "0031": [2, 20], "0032": [2, 20], "0033": [12, 20], "0036697": [26, 27, 28], "003669700000": [26, 28], "0037": [2, 20], "003a": [51, 132, 133, 134, 572, 624], "004": [12, 13, 16, 19, 610], "0040": [2, 20], "0041": 132, "0043": [20, 26, 28, 614], "005": [8, 13, 610], "0050": [2, 20, 26, 27, 42, 49], "0051": [26, 27], "0052": [2, 20], "006": [2, 5, 610], "0060": [2, 20, 26, 27, 42], "007": 14, "0070": [2, 20, 26, 27], "0071": [26, 27, 28], "0078": [26, 27, 28], "007f": [511, 548], "0080": [2, 20, 26, 27, 28], "0081": [2, 20], "0082": [26, 27, 28], "0083": [2, 20], "0084": [2, 20, 26, 27, 28], "0085": [2, 20], "0086": [2, 20, 26, 27, 28], "0088": 20, "0090": [2, 20], "0091": [2, 20], "00a0": [26, 27, 28], "00b0": [26, 27], "00b6": [26, 27], "00f8": 18, "00fe": 18, "0100": [2, 20, 29, 39, 45, 51, 132, 133, 134, 199, 215, 218, 220, 221, 231, 263, 275, 276, 278, 280, 281, 282, 286, 290, 291, 572, 622, 624], "0101": [2, 20, 29, 39, 132, 133, 134, 218, 220, 224, 226, 231, 267, 269, 275, 278, 282, 288, 290, 622], "0102": [2, 20, 39, 132, 133, 134, 199, 215, 275, 290, 622], "0103": [2, 20, 29, 39, 132, 133, 134, 218, 220, 221, 224, 226, 231, 259, 267, 269, 275, 278, 282, 288, 290, 622], "0104": [132, 133, 134], "0106": [2, 20], "0107": [2, 20], "010c": [26, 27], "011": [17, 19, 610], "0111": [26, 27], "0115": [26, 27], "011a": [26, 27], "0120": 20, "016600": 20, "017": 19, "0180": [26, 27], "0197b5846bb5": [587, 594], "0200": 624, "0201": [2, 20, 587, 599], "0210": [132, 133, 134, 572, 624], "0211": [132, 133, 134], "025109": [10, 616], "0275401": [26, 27, 28], "02754010000000": [26, 28], "033": [22, 622], "035797": 20, "03579711914062": 20, "0400": [2, 8, 20], "0411bab7c985": [587, 594], "045357": [10, 616], "05": [20, 613], "0500": 20, "050743": [10, 616], "072132": 12, "072730": [20, 26, 28], "072731": [20, 26, 28, 614], "07992553710938": 20, "079926": 20, "079956": 20, "08": 151, "085000": 20, "095000": 20, "099": [9, 13, 610], "0b00011001": 29, "0b01111111": 37, "0b10000000": 37, "0b100101": [296, 544], "0b1101": [296, 544], "0e0": 541, "0x00": [132, 133, 134, 139, 143, 186, 562], "0x0000": 186, "0x00000000": [148, 151], "0x0002": [133, 186, 262, 264, 285, 287, 614], "0x0006": [587, 597], "0x0008": 614, "0x0009": [47, 132, 133, 134], "0x00091001": 47, "0x000b": 47, "0x0010": [42, 132, 133, 134, 297, 614], "0x00100010": [42, 128, 132, 133, 134], "0x00100015": 297, "0x00100020": 132, "0x00100030": 132, "0x00100040": [132, 133, 134], "0x0015": 297, "0x0016": 614, "0x0018": 42, "0x0028": [250, 258, 262, 264, 285, 287, 614, 622], "0x00291026": [132, 133, 134], "0x0030": 132, "0x0041": [132, 133, 134], "0x004100001": 47, "0x00410001": 110, "0x00410002": 110, "0x0043": 614, "0x01": [16, 47, 132], "0x02": [16, 47], "0x03": 16, "0x1": [542, 545], "0x10": [42, 128, 132, 133, 134, 297], "0x1001": 16, "0x100100010": 85, "0x10011001": 16, "0x10011002": 16, "0x10011003": 16, "0x1002": 614, "0x10021001": [108, 109], "0x10021002": [108, 109], "0x1020": 42, "0x104e": 614, "0x1050": 614, "0x1p": [542, 545], "0x3000": 49, "0x300a": 42, "0x50": 297, "0x5000": 17, "0x5c": 209, "0x6000": [49, 215, 614], "0x6002": 614, "0x6004": 614, "0x6010": 215, "0x601e": 614, "0x60ff": 215, "0x7fe0": 622, "0x888800001": 47, "0xb0": 42, "0xb4": 53, "0xc2": 42, "0xff": [132, 133, 134], "0xff00": 17, "0xffd9": 147, "0xffff": [132, 133, 134, 173, 587, 597], "0xffffffff": 128, "0xffffffffl": 128, "1": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 41, 42, 44, 45, 47, 49, 50, 51, 53, 62, 80, 84, 85, 87, 96, 106, 108, 109, 110, 111, 128, 130, 132, 133, 134, 135, 136, 139, 141, 142, 143, 147, 151, 152, 153, 159, 161, 162, 165, 177, 186, 199, 215, 218, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 296, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 541, 542, 543, 544, 545, 546, 548, 572, 576, 588, 591, 594, 602, 605, 608, 612, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624], "10": [11, 20, 23, 26, 28, 39, 49, 51, 151, 177, 199, 262, 285, 296, 432, 467, 474, 496, 541, 542, 544, 545, 587, 594, 598, 608, 614, 616, 622, 624], "100": [10, 20, 24, 26, 28, 36, 47, 51, 302, 415, 416, 427, 541, 614, 615, 616, 624], "1000": [2, 20, 51, 624], "10000": [51, 624], "1000000000000000055511151231257827021181583404541015625": 541, "10008": [8, 9, 12, 24, 26, 41, 44, 45, 50, 132, 133, 134, 147, 218, 221, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 260, 261, 278, 289, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 587, 597, 598, 600, 602, 603, 608, 612, 614], "1001": [16, 20, 47, 132], "1002": [16, 20, 47, 614], "1003": [16, 20], "1004": [20, 572, 587, 600], "1005": 20, "1006": [20, 572, 587, 600], "1007": 20, "1008": 20, "1009": 20, "100a": 20, "100f": 20, "101": [22, 302, 413, 414, 427], "1010": [2, 20, 51, 624], "1011": 20, "1012": 20, "1013": [20, 587, 600], "1014": [20, 587, 603], "1015": 20, "1016": [20, 587, 600], "1017": 20, "1018": 20, "1019": [20, 50], "101a": 20, "101b": 20, "101c": 20, "101d": 20, "101e": 20, "101f": 20, "102": [302, 417, 420, 427, 587, 593], "1020": [2, 20], "102000": 20, "1021": [20, 587, 608], "1023": 20, "1024": [20, 128, 132, 133, 134, 587, 601, 615, 620, 622], "1025": 20, "1026": [20, 132, 133, 134], "1027": 20, "1028": 20, "1029": [20, 587, 601], "102a": 20, "102b": 20, "102c": 20, "102e": 20, "102f": 20, "103": [302, 418, 419, 427, 587, 593], "1030": [2, 20, 587, 601], "1031": 20, "1034": 20, "1035": 20, "1037": 20, "1038": [587, 602], "1039": [20, 616], "104": [22, 302, 352, 353, 354, 355, 356, 421, 422, 427], "1040": [2, 20], "1041": [2, 20], "1042": [20, 587, 602], "1043": 20, "10431": 20, "1044": 20, "1045": 20, "1046": 20, "1047": [20, 587, 602], "1048": 20, "1049": [20, 587, 602], "104a": 20, "104b": [20, 26, 28], "104c": [20, 26, 28], "104d": [20, 26, 28], "104e": [20, 26, 28, 614], "105": [22, 51, 302, 423, 424, 427], "1050": [2, 20, 228, 229, 271, 272, 614], "1051": [2, 20, 228, 229, 271, 272, 587, 605, 614], "1052": [20, 224, 226, 267, 269], "1053": [20, 224, 226, 267, 269, 587, 602], "1054": 20, "1055": 20, "1057": 20, "1058": 20, "105e": 20, "105f": 20, "106": [51, 302, 425, 426, 427], "1060": [2, 20], "1061": 20, "1062": 20, "1067": [587, 602], "1068": 50, "106a": 20, "106b": 20, "107": [20, 302, 378, 427, 587, 594], "1070": [2, 20], "1071": 20, "1072": 20, "1073": [20, 587, 602], "1074": [20, 542, 545], "1075": [20, 587, 602], "1076": 20, "1078": [587, 602], "1079": 614, "107d": 20, "108": [302, 377, 427, 546], "1082": [587, 602], "1083": 50, "1086": [587, 602], "1090": [2, 20], "1091": 20, "10918": [39, 44, 232, 273, 404, 587, 605], "1092": 20, "1093": [20, 587, 603], "1094": 50, "1097": [587, 602], "1099": 20, "10da": 20, "10db": 20, "10dc": 20, "10dd": 20, "10de": 20, "10e6": 20, "10e7": 20, "10e9": 20, "11": [11, 20, 23, 224, 226, 227, 228, 229, 267, 269, 270, 271, 272, 301, 307, 309, 323, 324, 375, 376, 439, 460, 480, 496, 520, 525, 531, 541, 587, 607, 608, 620, 624], "110": [51, 587, 593], "1100": 20, "1101": [587, 600], "1103": [587, 600, 603], "111": [587, 593], "1110": 20, "111079": 20, "1111": 20, "112": 51, "1120": 20, "1127": [587, 603], "112749": 20, "1129": 50, "112936": 20, "113": [587, 594], "1130": [10, 20], "113008": 20, "1133": [587, 608], "114": [587, 594], "1140": [587, 603], "1141": 10, "1142": 10, "1146": [587, 603], "1147": [587, 605], "1149": [587, 603], "1150": 20, "1151": 20, "1152": 20, "1153": [587, 603], "1155": [587, 603], "1156": [587, 603], "116": [20, 26, 27, 28, 51], "1160": 20, "1161": [587, 603], "117": [587, 590], "1178": [587, 603], "118": 10, "1181": [587, 603], "119": [587, 590], "1190": [20, 587, 603], "1193": [587, 603], "1196533885": 10, "12": [0, 23, 30, 34, 39, 41, 51, 69, 218, 259, 260, 365, 366, 479, 520, 534, 536, 541, 616, 624], "120": [20, 51], "1200": [51, 587, 603, 624], "1200x900": 0, "1201": [222, 265], "1203": [222, 265], "1204": [222, 265], "1210": 20, "121006": 623, "1211": [587, 603], "1215": [587, 603], "122": [587, 590], "1220": 616, "1221": [222, 265], "1223": [222, 265], "1224": [222, 265], "1227": 50, "123": [541, 615], "12322": [20, 26, 28, 47, 614], "1234": [587, 603, 618], "12345": [42, 132], "123456": 12, "1234567": 175, "1234abcd": [20, 614], "1237": [587, 603], "123e": 541, "124": 619, "1240": [587, 603], "1243": [587, 608], "1244": [587, 608], "125": [587, 596, 619], "1251": [587, 604], "1253": [587, 604], "1254": [587, 604], "126": [2, 20, 26, 28, 614, 624], "1262": [587, 605], "1263": [587, 608], "1265": [587, 608], "127": [37, 620], "1273": [587, 608], "1278": [587, 605], "128": [2, 9, 12, 20, 26, 28, 37, 133, 157, 170, 180, 181, 182, 186, 199, 411, 456, 614, 619, 622], "128002": 623, "129": [20, 619], "13": [11, 296, 311, 312, 313, 315, 532, 533, 544], "130": [20, 21, 361, 610], "131": [51, 306], "1311": 614, "1312": [587, 605], "1314": [2, 20], "1318": 50, "1327": [587, 605], "133": [20, 170], "1332": [587, 605], "1336": 50, "1338": [587, 605], "1340": [587, 605], "1341": [587, 605], "1346": 50, "1348": [587, 605], "135803": 20, "1359940846": [10, 616], "1361": [587, 605], "13656": 36, "1369": 50, "137": 51, "1372": [587, 605], "1386": 622, "1388": [587, 608], "14": [20, 45, 147, 247, 248, 389, 390, 508, 587, 602], "1400": [175, 616], "1410": [175, 616], "1412": [587, 605], "1414": [587, 607, 608], "1415": [587, 605], "14159": [542, 545], "14180": 37, "1420": [175, 616], "1428": [587, 605], "143": [587, 596], "1430": [173, 616], "1434": [587, 605], "1436": 614, "1438": [587, 605], "1444": [587, 605], "1449": [587, 605], "14495": [37, 401, 619], "1454": [587, 608], "1457": [587, 605], "1476": 10, "1481": [587, 608], "1485": [587, 608], "1487": [587, 606], "149188": 37, "1498": [587, 606], "15": [2, 8, 20, 488, 576, 610, 614, 622, 624], "150": [20, 51], "1500": [175, 587, 606], "150031": [24, 26, 27, 42], "151": [587, 596], "1510": 175, "1511": [175, 587, 606], "1512": 175, "152": 42, "152294": 622, "152326": 622, "152342": [36, 619], "1529": [587, 608], "153557": [24, 26, 28, 42], "15444": [36, 283, 396, 619], "1556": [587, 608], "156": [26, 27, 42], "1565": [587, 606], "157": 42, "1571": [587, 606], "1576": 20, "158": 20, "1581": [587, 606], "1582": 36, "1588": [587, 606], "159": [20, 587, 600], "1593": [587, 606], "1594": [587, 606], "1596": [587, 606], "1599": [587, 606], "16": [2, 8, 20, 26, 28, 30, 34, 36, 37, 38, 39, 41, 45, 56, 128, 132, 133, 134, 135, 218, 220, 221, 288, 476, 549, 550, 572, 587, 600, 608, 619, 620, 622, 624], "1600": [2, 8, 20], "1601": 20, "1605775145": 20, "1606": [587, 606], "1609": [587, 606], "1611": [587, 607], "1617": [587, 606], "1632": [587, 607], "1634": [587, 607], "1638": [587, 607], "164": 42, "1648": [587, 607], "1658": [587, 607], "166": 42, "1661": [587, 607], "1666": [587, 608], "1667": [587, 607], "1670": [587, 607], "167161297070865690102504091919570542144": 537, "1674": [587, 607], "1680": [587, 607], "1683": [587, 607], "1689": [587, 608], "1693": [587, 607], "17": [20, 51, 477], "170": 20, "1702": [587, 607], "1703": 614, "171": 42, "17106": 616, "17136": 616, "17166": 616, "17196": 616, "172": [587, 596], "1728": [587, 607], "173032": [10, 616], "1734": [587, 607], "1738": [587, 607], "1739": [587, 608], "1743": [587, 608], "1747": [587, 607], "175": 42, "1752": [587, 608], "1773": [587, 608], "1774": [587, 608], "178": 20, "1781": [587, 608], "1788": [587, 607], "179": 20, "1792": [587, 607], "18": [128, 132, 133, 134, 507, 587, 596, 615], "180": [20, 42], "1803": [587, 607], "181": 42, "18148": 10, "1816": [587, 608], "183": 42, "1838265625": [587, 608], "184": 42, "1844": [587, 608], "1848": [587, 608], "185059": [2, 8, 20], "185434": [2, 8, 20], "1858": 616, "186": 42, "1860": 616, "1873": [587, 608], "1874": [587, 608], "187460": 38, "1895": 84, "19": 314, "190": [2, 20, 42], "19000101": 17, "1907": [587, 608], "1909": [587, 608], "1913": [587, 608], "192": [20, 26, 28, 47, 614], "1922": [587, 608], "1937": [587, 608], "1943": [587, 608], "1957": 619, "1968": [587, 608], "1969": 20, "197": [587, 596], "197968": 20, "1983": [587, 608], "1994": [587, 608], "19950903": [10, 616], "1997": [587, 608], "19970430": 20, "19999694824219": 20, "199999809265137": 20, "1c": [3, 186, 199, 218, 220, 221, 281, 282, 289, 624], "1c32791bf0": [587, 591], "1ct1": [9, 20, 26, 28, 616], "1d": [97, 215, 218, 219, 220, 221, 250, 263, 286, 289], "1f": 11, "2": [0, 2, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 50, 51, 53, 56, 80, 82, 84, 85, 86, 89, 96, 99, 100, 102, 103, 106, 108, 109, 110, 111, 128, 130, 132, 133, 134, 135, 136, 139, 141, 142, 143, 147, 148, 151, 152, 153, 165, 173, 199, 215, 218, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 276, 278, 283, 285, 286, 287, 289, 291, 293, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 541, 546, 554, 556, 572, 590, 591, 593, 594, 596, 597, 599, 600, 608, 612, 614, 616, 618, 619, 621, 622, 624], "20": [20, 36, 41, 51, 132, 133, 134, 231, 276, 278, 291, 440, 489, 587, 605], "200": [36, 316, 318, 459, 529, 530], "2000": [2, 8, 20, 29, 32, 35, 39, 41, 44, 45, 80, 132, 133, 134, 147, 231, 237, 238, 239, 241, 242, 251, 253, 254, 261, 262, 264, 278, 283, 285, 287, 289, 396, 587, 600, 603, 608, 618, 622], "200000": 20, "20010101": [10, 132, 616], "2002": [223, 233, 266, 274], "20030505": [10, 616], "20030716": [24, 26, 27, 28, 42], "20030903": [24, 26, 27, 42], "20030903150023": [24, 26, 27, 42], "20040119": [9, 20, 26, 28, 614], "20040119072730": [20, 26, 28, 47, 614], "20040826": [2, 8, 20], "20040826185059": [2, 8, 20], "2006": [132, 133, 134, 587, 608], "2008": [22, 546, 587, 608], "2009": [587, 608], "201": [41, 45, 238, 260, 302, 380, 391, 396], "2010": [587, 608], "2011": [587, 592, 593], "2012": [232, 273], "2013": [587, 608], "2017c": [587, 596], "2018": [23, 613], "2018b": [587, 597], "2018c": [587, 598], "2019": 23, "2019e": [587, 600], "202": [41, 45, 239, 260, 302, 381, 396], "2020": 23, "2020d": [587, 603], "2021": [23, 587, 607], "2021b": [587, 605], "2022": 23, "2022a": [587, 606], "2023": 23, "2023b": [587, 607], "2024": [23, 576, 587, 608], "20241015": 12, "2024c": [587, 608], "2025": [587, 608], "203": [41, 42, 45, 237, 260, 302, 379, 396], "20304870605469": 20, "2035": [587, 608], "204": [302, 405], "2040634155": [9, 20, 26, 28], "20406341552734": 20, "2047": [542, 545, 620], "2048": 620, "205": [302, 406, 587, 600], "2062": [587, 608], "2068": 20, "207": 42, "2073": [587, 608], "2075": [587, 608], "2081": [587, 608], "20x": [38, 44, 132, 133, 134, 231, 278, 587, 605], "21": [20, 51, 478], "2104": [587, 608], "212": [587, 596], "2128": [587, 609], "2131": [587, 609], "2132": [587, 609], "2134": [587, 609], "2135": [587, 609], "2141": [587, 609], "2155": [587, 609], "216": 42, "2191": 619, "219482421875": 20, "21b0": 20, "22": [363, 482], "22463838056059845879389038257786771680": 537, "2281": 616, "23": [362, 587, 608], "230": 622, "2338": 616, "235": 42, "236": 612, "239": [24, 26, 27, 28, 42], "23e": 541, "23e2": 541, "24": [20, 36, 41, 358], "240": [2, 8, 20], "240000": [51, 624], "24078": 20, "243": [587, 603], "2452": 614, "249": 622, "25": [29, 51, 473, 537, 542, 545], "253": 22, "255": [37, 620], "256": [587, 597], "256x256": [49, 50], "258": [587, 596], "261": 22, "261792": 37, "263": [587, 600], "265": 22, "270": 623, "273": [587, 600], "276": [10, 616], "277": [22, 587, 600], "280": 50, "285": 50, "286": [3, 5, 610], "28726007": 584, "291": [587, 598], "292": [5, 587, 597], "29282": 49, "298": 50, "299316": 20, "2d": [587, 603, 622], "3": [2, 4, 5, 8, 10, 12, 16, 17, 19, 20, 22, 23, 26, 28, 29, 30, 32, 34, 36, 37, 38, 39, 41, 42, 43, 45, 47, 50, 51, 56, 67, 91, 92, 98, 99, 106, 108, 109, 110, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 159, 161, 162, 173, 177, 184, 185, 186, 199, 206, 207, 208, 209, 210, 211, 215, 218, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 285, 287, 289, 290, 291, 293, 294, 295, 296, 302, 303, 313, 319, 338, 340, 342, 343, 351, 356, 359, 407, 432, 435, 454, 459, 460, 481, 493, 502, 511, 513, 518, 537, 541, 542, 544, 545, 548, 573, 574, 576, 590, 591, 593, 594, 595, 596, 597, 598, 602, 603, 604, 607, 612, 613, 614, 615, 616, 620, 621, 622, 624], "30": [24, 26, 27, 28, 51, 52, 451, 613], "300": [50, 132, 133, 134, 231, 278], "3000": [49, 132, 133, 134, 215, 224, 226, 267, 269, 587, 600, 614], "3002": [224, 226, 227, 228, 267, 269, 270, 271, 587, 600], "3006": [587, 602], "300a": [18, 26, 27, 28], "300c": [26, 27, 28], "3010": [227, 228, 270, 271], "302": 50, "304": [50, 619], "31": [139, 620], "310": 22, "3100585938": 20, "3125": [2, 8, 20], "3126": 616, "316": 22, "31906": [10, 616], "32": [34, 36, 39, 132, 133, 134, 135, 141, 151, 218, 221, 288, 541, 572, 587, 597, 605, 608, 620, 624], "320": [20, 50, 619, 620], "3204": 614, "321": [10, 13, 22, 610], "321000e": 541, "324": [22, 542, 545], "327": 22, "32767": [587, 608], "32768": [20, 26, 28, 36, 37, 614], "328": 50, "33": 326, "331": 50, "333": 619, "334": 50, "334412": [36, 619], "338": 20, "339": 50, "34": [325, 465, 467], "346": [22, 587, 596], "35": [128, 132, 133, 134, 177, 370], "350": 20, "353": [587, 596], "355": 50, "363": 22, "3678b1be6aca": [587, 594], "3680043": [449, 450, 537], "37": [51, 296, 544], "371919006": 623, "373": [20, 22], "374": 50, "377": 50, "378": 50, "38": [36, 382], "380": 612, "3816": 20, "39": 322, "3994": 20, "3d": [2, 4, 8, 20, 263, 286, 587, 603, 622], "3ed": 22, "3rd": [222, 224, 226, 227, 228, 264, 265, 267, 269, 270, 271, 287], "4": [2, 8, 9, 10, 12, 16, 20, 21, 23, 24, 26, 28, 32, 34, 36, 37, 38, 39, 41, 42, 44, 45, 47, 50, 53, 130, 132, 133, 134, 139, 143, 147, 148, 151, 152, 153, 154, 181, 182, 186, 199, 224, 226, 227, 228, 229, 231, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 253, 254, 255, 256, 259, 260, 261, 267, 269, 270, 271, 272, 278, 289, 293, 296, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 458, 459, 460, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 542, 545, 568, 593, 598, 599, 602, 603, 605, 608, 612, 614, 616, 623, 624], "40": [20, 36, 51, 458, 587, 605], "400": [20, 50], "4000": [2, 8, 20], "4095": [30, 34, 39, 259], "413": 50, "414": 541, "41421356": 541, "42": [16, 587, 590], "422": 50, "424152": 38, "43": [374, 587, 590], "431": 50, "432": 13, "44": [20, 384], "45": 385, "452": [587, 600], "46": 613, "46076": 36, "46100": 36, "464": [587, 597], "46af": 616, "47": [587, 590], "480": [20, 619, 620], "481": [24, 26, 314, 315, 358, 362, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 488, 489, 507, 508], "484": 49, "489": [587, 597], "494": 85, "498": [50, 449, 450, 537, 587, 597], "4ed698a7bfb": [587, 593], "4mr1": [2, 8, 17, 20], "4x": 41, "5": [8, 9, 10, 12, 13, 16, 20, 22, 23, 24, 26, 29, 32, 36, 37, 38, 39, 41, 42, 44, 45, 50, 51, 56, 128, 130, 132, 133, 134, 135, 139, 143, 146, 147, 148, 149, 150, 151, 153, 154, 203, 215, 221, 227, 228, 229, 231, 232, 249, 257, 260, 261, 263, 270, 271, 272, 273, 276, 278, 286, 289, 291, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 382, 383, 384, 385, 386, 388, 389, 390, 391, 407, 408, 409, 410, 411, 412, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 541, 546, 602, 603, 612, 613, 614, 616, 618, 619, 622, 624], "50": [8, 41, 45, 50, 51, 147, 243, 260, 289, 302, 397, 404, 431, 511, 587, 608, 622], "500": [612, 614], "501": [332, 333, 334, 335, 336, 337, 338], "51": [2, 8, 20, 41, 45, 147, 244, 260, 302, 398, 404], "510": 616, "5100": [2, 20], "512": [2, 20, 165, 215, 587, 597], "512x512": [49, 50], "51698a8366f2": 616, "52": [587, 593], "524288": 52, "531250000000": [24, 26, 27, 28], "53579711914062": 20, "537": [587, 600], "54": [537, 587, 608], "5400": [51, 132, 133, 134, 572, 624], "5457": [2, 8, 20], "55": [51, 587, 590], "566": 50, "57": [41, 45, 147, 247, 260, 289, 302, 402, 404, 587, 598, 603, 608], "58": [587, 590, 620], "581": 614, "584": [587, 598], "59": 408, "5962": [2, 8, 10, 20, 26, 28, 47, 614], "597": [587, 597], "599": [587, 597], "5e": [542, 545], "5x": [45, 132, 133, 134, 231, 278, 587, 605], "6": [2, 8, 10, 20, 23, 26, 28, 32, 36, 39, 41, 45, 47, 50, 56, 78, 128, 130, 132, 133, 134, 143, 218, 232, 273, 289, 296, 337, 364, 375, 438, 454, 468, 487, 501, 509, 512, 519, 527, 539, 543, 544, 546, 588, 593, 594, 596, 603, 604, 607, 608, 613, 614, 624], "60": [51, 587, 594, 605], "600": [2, 8, 20], "6000": 49, "6002": 49, "60060977935791": [20, 26, 28, 614], "601": [348, 349], "601e": 49, "605": [587, 597], "60xx": [49, 215, 276, 291, 587, 600, 614], "6154": 616, "62": 51, "620": [587, 597], "623": [587, 602], "624": [587, 598], "6247": 616, "625": [587, 597], "6278": 616, "628": 50, "62824007": 584, "63": [2, 8, 20, 614, 620], "630": 20, "631": 614, "63580322265625": 20, "64": [2, 8, 20, 32, 34, 36, 39, 50, 218, 230, 277, 288, 537, 572, 587, 590, 620, 624], "640": [587, 597], "6406": [2, 8, 20], "649": [587, 597], "65": [51, 320], "650": [26, 27], "65535": [30, 34, 39, 259, 616], "66": [340, 485, 495, 499, 500, 506, 509], "660": [587, 598], "661468": [9, 20, 622], "663": [587, 598], "666": [587, 599], "667": 537, "67": [486, 535], "671600": 20, "677": [587, 598], "678": [614, 619], "68": [51, 484, 504, 505], "682": [587, 598], "685": [587, 600], "6854": 614, "689": [587, 598], "69": 321, "693": [587, 600], "695": [587, 598], "696": [587, 598], "69999694824219": 20, "699997": 20, "699999809265137": 20, "6b949a5b925b": [587, 594], "7": [10, 20, 23, 24, 26, 27, 29, 36, 39, 41, 42, 50, 130, 135, 139, 153, 175, 199, 203, 218, 232, 273, 289, 302, 324, 341, 350, 351, 434, 435, 436, 437, 441, 443, 465, 483, 490, 491, 492, 493, 494, 498, 529, 539, 543, 594, 598, 607, 608, 613, 616, 624], "70": [41, 45, 147, 248, 260, 289, 302, 386, 403, 404, 587, 602, 603, 608], "700": [10, 587, 598, 616], "700000": 20, "704": [587, 598], "706": 50, "707": [587, 598], "71": 300, "713": [587, 598], "715": [587, 598], "716": [587, 598], "717": [587, 598], "718": 20, "72": [497, 587, 590], "722": [587, 598], "7230010": [10, 616], "726": [587, 598], "728": [587, 598], "729": [587, 598], "73": [452, 587, 590], "730": [587, 599], "7369": 614, "737": [587, 598], "74": 455, "740": [587, 598], "7400": 20, "741": [26, 27], "746": [587, 608], "748": 20, "749": 20, "75": [20, 26, 27, 51, 453], "750": 20, "750000": 20, "750675506": 20, "751": [24, 26, 27, 28], "753": [587, 599], "757": [587, 599], "76": 367, "760": [587, 599], "763": 20, "764": 20, "7654321": 175, "77": [9, 20, 24, 26, 27, 28, 42, 328, 329, 341, 442, 443, 444, 445, 447, 502, 515, 516, 517, 518, 519, 521, 522, 523, 526, 527, 528], "770": 50, "774b7a55db33": [587, 594], "77654033": [10, 616], "777": [24, 26, 27, 42], "7777": [24, 26, 27, 42], "78": [305, 388, 407, 412, 441, 501, 503, 524, 587, 591], "78187": [10, 616], "784578": 20, "785": [587, 599], "788": [587, 599], "789": [587, 599], "79": [430, 587, 591], "791": [587, 599], "791870": 20, "799": [587, 599], "799988": 20, "7fe0": [2, 20, 26, 28, 42, 50, 53, 67, 97, 132, 133, 134, 144, 146, 147, 148, 149, 150, 165, 218, 219, 220, 221, 231, 278, 282, 573, 580, 581, 587, 596, 600, 608, 614, 622], "8": [2, 11, 22, 23, 26, 27, 29, 30, 34, 36, 37, 38, 39, 41, 42, 44, 45, 50, 81, 130, 132, 133, 134, 135, 177, 178, 215, 218, 220, 221, 223, 227, 228, 229, 232, 251, 252, 259, 260, 263, 266, 270, 271, 272, 273, 276, 279, 286, 288, 289, 291, 301, 310, 328, 388, 442, 449, 450, 472, 511, 530, 537, 548, 572, 589, 592, 596, 598, 600, 603, 606, 607, 608, 619, 624], "80": [2, 8, 20, 36, 41, 44, 45, 51, 53, 132, 133, 134, 147, 231, 245, 255, 260, 261, 278, 289, 302, 399, 401, 448, 624], "800": [36, 619], "8000": [2, 8, 20], "804": [587, 599], "81": [41, 44, 45, 51, 132, 133, 134, 147, 231, 246, 256, 260, 261, 278, 289, 302, 400, 401, 446, 587, 591], "810": [587, 599], "815": [587, 599], "819": [587, 599], "8192": [20, 56, 67, 183], "82": [331, 587, 591], "820": [587, 599], "822": [587, 600], "826": [449, 450, 537, 587, 600], "826203": [26, 27], "83": [2, 8, 20], "833": 614, "835": [587, 599], "838": [587, 599], "84": [587, 591], "840": [8, 9, 12, 24, 26, 41, 44, 45, 50, 132, 133, 134, 147, 218, 221, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 260, 261, 278, 289, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 587, 597, 598, 600, 602, 603, 608, 612, 614], "848": [587, 600], "84af4b240add": [587, 594], "85": 51, "850": [587, 599], "8508": 37, "852": [20, 587, 599], "856": [587, 599], "8601": [539, 543, 547], "862": 50, "862399669": 20, "862399761": 20, "864": [587, 599], "86e6b75b": 616, "87": [20, 37, 619], "87000000000": [24, 26, 27, 28], "871": [232, 273, 610], "87507166259346337659265156363895084463": 537, "878": [587, 605], "88": [26, 27, 42, 300, 307, 320, 321, 325, 326, 363, 367, 370, 386, 408, 431, 452, 453, 455, 458, 484, 497, 526, 535, 587, 591], "887": [587, 600, 614], "888": [26, 27, 42], "89": 11, "891": [587, 600], "892": [587, 600], "894": [587, 600], "896": [587, 600], "899": [587, 600], "8d": 11, "9": [20, 23, 26, 27, 36, 37, 38, 42, 50, 51, 81, 177, 178, 215, 303, 304, 308, 310, 319, 329, 350, 351, 371, 372, 373, 383, 438, 461, 462, 471, 487, 490, 498, 510, 525, 537, 597, 600, 603, 608, 624], "90": [2, 8, 20, 41, 44, 45, 51, 132, 133, 134, 147, 231, 242, 254, 260, 261, 278, 289, 302, 330, 393, 396, 587, 600], "904": 42, "905": [42, 50], "906": 42, "9063": [2, 8, 20], "907": 50, "909": 42, "91": [2, 8, 20, 41, 44, 45, 132, 133, 134, 147, 231, 241, 253, 260, 261, 278, 289, 302, 392, 396, 433, 587, 592, 600], "910": 42, "911": 42, "912": [20, 587, 600], "914": 42, "915": [587, 600], "916": [42, 587, 590], "917": [587, 600], "92": [147, 302, 395, 396, 587, 597, 598], "921600": [36, 37, 38], "921f9f01b866ep": [542, 545], "922": 42, "9223372036854775807": [130, 293], "923": 42, "92433900": [2, 8, 20], "925": 42, "927": 42, "929": 42, "93": [51, 147, 302, 394, 396, 587, 592, 598], "932": [587, 600], "935288": 12, "938": 42, "940": [587, 600], "942": [42, 587, 600], "947": [587, 600], "95": [20, 587, 593, 596], "951": [587, 600], "954": 42, "955": [20, 42], "959": 42, "96": [587, 592], "968": [587, 600], "97": [587, 592], "971": [587, 600, 622], "973283917": 20, "98": [587, 593], "981": [587, 600], "9834": 537, "984": 20, "984375": [542, 545], "98890234": [10, 616], "98892001": 616, "98892003": 616, "99": [26, 27, 42, 45, 218, 234, 260, 302, 339, 514], "994": [587, 600], "999": [26, 27, 42, 587, 600], "9990268": [26, 27], "9999": [26, 27, 42, 613], "999999999999ap": [542, 545], "9b92b336e7d4": [587, 594], "A": [10, 20, 28, 29, 30, 34, 36, 37, 38, 39, 42, 44, 52, 53, 54, 76, 77, 89, 104, 105, 107, 129, 131, 132, 133, 134, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 161, 162, 163, 165, 166, 173, 175, 176, 177, 178, 184, 185, 186, 206, 208, 209, 210, 211, 214, 215, 216, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 264, 265, 267, 268, 269, 270, 271, 272, 274, 277, 278, 279, 282, 283, 285, 287, 288, 289, 295, 511, 537, 538, 541, 546, 548, 559, 566, 569, 570, 584, 587, 597, 605, 608, 612, 614, 616, 619, 620, 622], "AS": [20, 32, 567], "AT": [32, 552, 587, 600, 605, 607], "And": [25, 26, 27, 28, 30, 587, 603, 612, 613, 614, 622, 624], "As": [43, 45, 47, 69, 541, 614, 619, 623], "At": [30, 34, 612, 623], "Be": 45, "But": 614, "By": [24, 26, 50, 173, 175, 545, 587, 591, 614, 620, 622], "For": [0, 17, 24, 26, 27, 29, 30, 34, 36, 37, 38, 39, 42, 43, 47, 49, 50, 52, 53, 120, 128, 132, 133, 134, 139, 147, 148, 151, 173, 175, 206, 215, 230, 231, 250, 251, 252, 258, 259, 262, 263, 264, 277, 278, 279, 285, 286, 287, 289, 541, 546, 587, 593, 603, 608, 612, 613, 614, 616, 618, 619, 620, 622], "IN": [214, 292], "If": [24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 42, 43, 44, 50, 51, 52, 53, 54, 56, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 94, 97, 100, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 139, 144, 145, 146, 147, 148, 150, 151, 154, 155, 159, 161, 162, 163, 165, 166, 167, 170, 174, 175, 176, 177, 183, 184, 185, 186, 198, 199, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 250, 251, 252, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 284, 285, 286, 287, 288, 290, 291, 292, 294, 296, 297, 511, 537, 538, 541, 542, 543, 544, 546, 548, 549, 553, 554, 555, 556, 561, 565, 568, 572, 587, 593, 605, 608, 611, 612, 613, 614, 615, 616, 618, 619, 620, 622, 623, 624], "In": [24, 25, 26, 27, 30, 34, 37, 39, 42, 44, 47, 50, 52, 53, 76, 132, 133, 134, 175, 275, 290, 511, 541, 548, 587, 595, 601, 603, 607, 608, 612, 613, 614, 616, 619, 620, 622], "Into": 612, "It": [17, 26, 27, 30, 34, 42, 43, 47, 50, 52, 54, 132, 133, 134, 148, 175, 186, 251, 587, 593, 594, 612, 613, 614, 615, 616, 618, 622, 624], "Its": 128, "NEAR": [37, 619], "NOT": [215, 250, 258, 281], "Near": [41, 44, 132, 133, 134, 147, 231, 246, 256, 260, 261, 278, 587, 608, 619], "No": [20, 36, 41, 178, 558, 611, 619, 620], "Not": [541, 551, 552, 553, 554, 555, 556, 561, 562, 564, 567], "OF": [32, 186, 587, 602, 608, 620, 622], "ON": 20, "OR": 546, "Of": 10, "On": [20, 39, 183, 546, 615], "One": [16, 29, 47, 49, 52, 53, 108, 109, 110, 132, 133, 134, 222, 232, 250, 251, 258, 264, 265, 273, 287, 612, 613], "Or": [42, 618], "That": [43, 47], "The": [0, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 56, 67, 69, 76, 77, 78, 79, 97, 99, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 161, 162, 163, 165, 167, 169, 170, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 198, 199, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 250, 251, 252, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 296, 297, 299, 511, 537, 538, 539, 541, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 584, 587, 590, 597, 598, 603, 608, 612, 613, 614, 615, 618, 619, 620, 622, 623, 624], "Then": [617, 618], "There": [36, 43, 48, 50, 132, 133, 134, 231, 278, 587, 598, 612, 613, 614, 615, 619, 624], "These": [1, 6, 7, 15, 40, 42, 43, 587, 603, 608, 614], "To": [10, 24, 26, 28, 32, 36, 37, 38, 42, 43, 45, 49, 51, 52, 132, 133, 134, 157, 163, 251, 262, 264, 285, 287, 296, 544, 587, 593, 598, 603, 612, 613, 614, 616, 618, 619, 620, 622, 624], "Will": [44, 109, 208], "With": [37, 132, 133, 134, 259, 511, 548, 619], "_": [178, 613], "_1sigmalowervalueofpopul": 623, "__class__": [539, 543], "__concepts_version__": [587, 608], "__contains__": [85, 587, 603], "__dir__": [587, 593], "__doc__": [0, 2, 8, 11, 14, 16, 20, 22], "__eq__": [587, 597, 605], "__getitem__": [132, 133, 134, 511, 548, 614], "__init__": [14, 128, 130, 132, 133, 134, 135, 159, 161, 162, 174, 175, 176, 206, 214, 250, 251, 258, 259, 292, 293, 294, 295, 296, 511, 539, 541, 542, 543, 544, 545, 546, 547, 548], "__iter__": [587, 588, 603, 614], "__main__": [0, 14, 25, 26], "__name__": [0, 14, 25, 26], "__ne__": [587, 597], "__new__": 540, "__next__": [587, 603], "__setattr__": 84, "__str__": [587, 597, 605, 614], "__traceback__": 157, "__write_like_origin": 186, "_blob": 14, "_build": 613, "_check_dataset": 616, "_cid_dict": 294, "_concepts_dict": 294, "_dataset__write_like_origin": [132, 133, 134], "_define_assess": 173, "_define_empti": 173, "_define_encap_doc": 173, "_define_generic_cont": 173, "_define_generic_content_id": 173, "_define_hanging_protocol": 173, "_define_imag": 173, "_define_impl": 173, "_define_implant_assi": 173, "_define_implant_group": 173, "_define_key_object_doc": 173, "_define_palett": 173, "_define_pati": 173, "_define_present": 173, "_define_radiotherapi": 173, "_define_rt_dos": [173, 616], "_define_rt_plan": 173, "_define_rt_structure_set": 173, "_define_rt_treatment_record": 173, "_define_seri": 173, "_define_spectroscopi": 173, "_define_sr_docu": 173, "_define_studi": 173, "_define_surface_scan": 173, "_dicom_dict": 42, "_from_codifi": [24, 26], "_list": 614, "_new": 14, "_pretty_str": [8, 614], "_recordifi": 616, "_storage_sopclass_uid": [587, 603, 608], "_t": 571, "_validate_arrai": 619, "_validate_plugin": 622, "a1": 4, "a2": 4, "a3": 4, "a_large_amount_of_data": 32, "a_large_jpeg2000_fil": 32, "ab": [511, 548, 572], "abc": 546, "abcd1234": [20, 614], "abil": [26, 27, 50, 132, 133, 134, 275, 290, 587, 595, 596, 603, 608], "abl": [32, 45, 47, 587, 602, 608, 615, 616, 624], "about": [42, 43, 50, 53, 94, 276, 291, 614, 616, 619, 622, 624], "abov": [18, 24, 25, 26, 27, 28, 42, 47, 49, 52, 128, 132, 133, 134, 215, 251, 262, 264, 285, 287, 587, 597, 613, 616, 622], "absenc": 148, "absent": [36, 37, 546, 624], "absolut": [33, 37, 67, 104, 105, 106, 107, 132, 133, 134, 155, 159, 161, 162, 174, 175, 223, 231, 233, 266, 274, 278, 296, 541, 544, 587, 608, 619], "absorb_delimiter_item": 70, "abstract": [541, 616], "accept": [24, 26, 32, 43, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 132, 133, 134, 151, 587, 602, 603, 605, 607, 612], "access": [2, 8, 20, 23, 26, 27, 30, 34, 36, 37, 42, 45, 47, 49, 54, 56, 69, 82, 99, 132, 133, 134, 165, 584, 587, 589, 596, 602, 603, 607, 608, 613, 615, 616, 617, 618, 619, 620, 621, 623], "accessionnumb": 613, "accident": [612, 616], "accomplish": 47, "accord": [32, 52, 128, 165, 197, 614, 616], "accordingli": [37, 38, 132, 133, 134], "account": [39, 587, 608], "achiev": [53, 143], "acknowledg": [587, 594], "acm": [16, 47, 110], "acq": 20, "acquisit": [2, 8, 20], "acquisitiondata": 613, "across": [587, 593, 608], "act": 614, "activ": 618, "actual": [10, 20, 25, 26, 29, 30, 34, 37, 39, 42, 49, 128, 132, 133, 134, 175, 186, 215, 218, 221, 251, 252, 259, 262, 264, 279, 285, 287, 293, 612, 616, 619, 620, 622], "ad": [20, 25, 26, 27, 36, 37, 38, 42, 46, 53, 56, 67, 80, 82, 84, 85, 89, 91, 96, 99, 100, 102, 103, 106, 128, 131, 132, 133, 134, 135, 136, 139, 140, 142, 143, 144, 145, 146, 150, 152, 153, 154, 155, 173, 175, 176, 184, 185, 186, 199, 206, 207, 208, 209, 210, 211, 214, 220, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 285, 286, 287, 290, 291, 294, 295, 296, 457, 511, 554, 556, 572, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 605, 606, 607, 608, 609, 611, 612, 615, 620, 623], "adam": 546, "adapt": [587, 598], "adapt_dataset_from_byt": 14, "add": [0, 2, 6, 10, 12, 15, 18, 19, 20, 25, 26, 27, 30, 34, 42, 43, 47, 49, 53, 108, 110, 111, 128, 131, 132, 133, 134, 135, 139, 141, 173, 175, 176, 186, 231, 251, 259, 263, 275, 278, 286, 290, 541, 587, 596, 599, 605, 607, 608, 610, 612, 613, 614, 616, 618, 619, 620, 624], "add_argu": [25, 26], "add_custom": [173, 175, 616], "add_dict_entri": [42, 47, 111, 587, 596, 599], "add_new": [16, 47, 132, 133, 134, 135, 614], "add_new_priv": [47, 132, 133, 134, 587, 608], "add_pars": [25, 26], "add_plugin": [30, 34, 251, 259], "add_private_dict_entri": [16, 42, 47, 587, 599], "add_subpars": [25, 26], "addit": [20, 26, 27, 28, 30, 34, 39, 76, 132, 133, 134, 174, 175, 208, 209, 210, 211, 231, 251, 252, 259, 262, 264, 275, 278, 279, 285, 287, 290, 543, 546, 547, 595, 603, 605, 608, 615, 616, 619, 622], "addition": 546, "adher": 43, "adit": [587, 590], "adjust": 541, "admin": 618, "advanc": [30, 34, 53, 251], "advantag": [20, 587, 594], "ae": [2, 20, 26, 28, 32, 47, 199, 551, 567, 587, 596, 608, 614], "affect": [30, 34, 216, 217, 218, 219, 220, 221, 282, 541, 612, 613], "after": [2, 8, 20, 26, 27, 28, 29, 30, 34, 37, 47, 53, 132, 133, 134, 143, 145, 148, 154, 155, 170, 176, 181, 182, 183, 186, 199, 250, 251, 262, 264, 285, 287, 511, 541, 548, 587, 602, 605, 608, 612, 613, 614, 616, 618], "afterward": [155, 612], "ag": [20, 32], "again": [43, 52, 612, 616], "against": [43, 128, 175, 587, 592, 603], "agent": [2, 8, 20], "aid": [587, 595], "aim": [53, 587, 603], "al": 23, "algorithm": [38, 537], "alia": [130, 293, 587, 603], "alias": [587, 589, 602], "align": [49, 587, 609], "all": [4, 6, 8, 10, 12, 17, 20, 24, 26, 27, 28, 37, 39, 42, 43, 44, 46, 52, 54, 67, 69, 97, 110, 131, 132, 133, 134, 137, 138, 139, 143, 148, 151, 159, 161, 162, 165, 175, 177, 184, 185, 186, 214, 231, 251, 252, 259, 262, 264, 278, 279, 285, 287, 292, 294, 302, 511, 541, 548, 580, 581, 587, 588, 589, 590, 593, 595, 598, 600, 603, 605, 606, 607, 608, 609, 610, 612, 613, 614, 618, 619, 620, 622], "alloc": [2, 8, 20, 29, 36, 37, 38, 39, 41, 45, 53, 132, 133, 134, 218, 221, 231, 250, 251, 252, 258, 262, 263, 264, 275, 276, 278, 279, 280, 285, 286, 287, 288, 290, 291, 587, 607, 608, 609, 620, 622, 624], "allow": [16, 17, 24, 26, 27, 32, 36, 37, 39, 43, 47, 49, 56, 88, 128, 132, 133, 134, 173, 175, 206, 231, 263, 278, 286, 545, 587, 589, 590, 599, 602, 603, 605, 606, 607, 608, 618, 619, 620], "allow_ds_float": [576, 587, 593], "allow_excess_fram": [29, 620], "alltransfersyntax": [587, 603], "almar": [587, 591], "almost": 50, "alon": 76, "along": [23, 175, 252, 279, 619], "alpha": [20, 222, 265, 511, 548, 587, 599, 600, 623], "alphabet": [132, 133, 134, 511, 546, 548, 587, 607], "alphanumer": [175, 177, 587, 608], "alreadi": [26, 28, 36, 37, 38, 40, 44, 50, 53, 76, 109, 132, 133, 134, 136, 148, 176, 180, 186, 199, 214, 231, 263, 275, 278, 286, 290, 540, 587, 595, 608, 614, 616, 622, 624], "already_convert": 128, "also": [3, 17, 26, 27, 28, 29, 30, 32, 34, 37, 39, 42, 47, 50, 52, 53, 78, 118, 132, 133, 134, 170, 199, 231, 251, 252, 259, 262, 264, 278, 279, 285, 287, 296, 511, 541, 544, 546, 548, 587, 588, 589, 590, 591, 594, 595, 598, 599, 603, 608, 612, 613, 614, 615, 616, 618, 619, 622, 623, 624], "alter": 52, "altern": [10, 23, 42, 132, 209, 210, 227, 228, 229, 270, 271, 272, 587, 608, 612, 614, 616, 622], "although": [50, 175, 223, 233, 266, 274, 587, 608, 616, 622], "alwai": [26, 28, 45, 47, 50, 120, 128, 132, 133, 134, 135, 165, 218, 230, 250, 251, 258, 262, 264, 277, 285, 287, 289, 541, 587, 599, 603, 605, 608, 619, 620, 622], "am": 613, "ambigu": [184, 185, 587, 596, 598, 599, 603], "american": 53, "amongst": 176, "amount": [32, 44, 67, 132, 133, 134, 216, 231, 250, 278, 541, 619, 620, 622, 624], "an": [2, 10, 11, 16, 23, 24, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 42, 43, 44, 47, 48, 49, 50, 52, 53, 54, 56, 67, 69, 76, 77, 78, 84, 85, 86, 89, 97, 106, 107, 109, 115, 118, 119, 125, 128, 131, 132, 133, 134, 135, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 165, 166, 175, 176, 185, 186, 196, 208, 209, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 250, 251, 252, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 279, 281, 283, 284, 286, 287, 288, 290, 291, 292, 294, 296, 299, 511, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 565, 572, 584, 587, 590, 591, 597, 599, 600, 602, 603, 605, 606, 608, 609, 612, 613, 614, 616, 618, 619, 620, 623, 624], "analog": [47, 132, 133, 134], "analys": [6, 21, 610], "anatom": 20, "ancestor": [175, 176, 184, 185], "angl": [2, 8, 20], "ani": [0, 10, 24, 26, 27, 29, 30, 32, 34, 36, 37, 39, 42, 43, 48, 49, 51, 67, 79, 92, 106, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 131, 132, 133, 134, 136, 139, 141, 143, 157, 159, 160, 161, 162, 167, 175, 176, 186, 199, 206, 208, 209, 210, 211, 214, 215, 228, 229, 230, 231, 250, 251, 252, 258, 259, 262, 263, 264, 271, 272, 277, 278, 279, 283, 285, 286, 287, 294, 296, 297, 511, 539, 541, 542, 543, 544, 545, 546, 547, 548, 560, 564, 570, 571, 587, 589, 590, 599, 605, 608, 612, 613, 616, 618, 619, 620, 622], "annex": [10, 36, 37, 38, 39, 50, 51, 128, 132, 133, 134, 139, 143, 146, 147, 148, 149, 150, 151, 153, 154, 173, 218, 224, 226, 227, 228, 229, 232, 263, 267, 269, 270, 271, 272, 273, 276, 286, 289, 291, 537, 616], "announc": 97, "anonym": [6, 15, 19, 42, 47, 587, 588, 589, 599, 610], "anoth": [43, 232, 273, 587, 603, 614], "answer": [38, 611, 614], "anterior": 20, "anymor": 93, "anyon": [587, 595], "anyth": [32, 47, 49, 50, 263, 286, 619], "anywher": [42, 614], "apertur": 18, "api": [53, 132, 133, 134, 251, 252, 259, 262, 264, 279, 285, 287, 587, 597, 612, 615, 623], "app": 22, "app14": [587, 605], "appear": [157, 616], "append": [4, 11, 18, 20, 42, 143, 214, 292, 537, 614, 624], "appli": [1, 6, 10, 16, 29, 36, 39, 50, 51, 67, 78, 80, 132, 133, 134, 175, 209, 210, 222, 223, 224, 225, 226, 227, 228, 229, 250, 251, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 285, 287, 582, 587, 600, 603, 608, 613, 618, 619, 624], "applic": [2, 20, 26, 27, 28, 32, 43, 44, 47, 199, 614, 619], "apply_color_lut": [50, 576, 587, 600, 608], "apply_icc_profil": [233, 274, 576, 587, 608], "apply_j2k_correct": [576, 587, 608], "apply_j2k_sign_correct": 29, "apply_jls_sign_correct": 29, "apply_modality_lut": [50, 225, 227, 228, 229, 268, 270, 271, 272, 576, 587, 600, 602, 608], "apply_presentation_lut": [576, 587, 608], "apply_rescal": [576, 587, 603, 608, 622], "apply_voi": [228, 229, 271, 272, 576, 587, 603, 608], "apply_voi_lut": [50, 225, 227, 229, 268, 270, 272, 576, 587, 600, 602, 603, 608], "apply_window": [227, 228, 270, 271, 576, 587, 603, 608], "approach": 212, "appropri": [44, 49, 50, 128, 131, 170, 206, 208, 214, 220, 250, 541, 570, 587, 608, 619, 620], "approv": [612, 613], "approx": [587, 590, 594], "approxim": 52, "appveyor": [587, 596], "apr": 613, "ar": [4, 10, 18, 24, 26, 27, 28, 29, 32, 36, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 56, 67, 69, 76, 77, 81, 82, 85, 94, 97, 101, 102, 108, 110, 111, 128, 131, 132, 133, 134, 135, 136, 139, 141, 144, 146, 147, 148, 149, 150, 151, 159, 161, 162, 165, 170, 173, 175, 178, 184, 185, 186, 199, 214, 216, 217, 221, 222, 224, 226, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 259, 262, 264, 265, 267, 269, 271, 272, 275, 277, 280, 283, 285, 287, 288, 290, 294, 296, 511, 541, 543, 544, 546, 547, 548, 549, 564, 567, 569, 571, 587, 593, 598, 599, 600, 602, 603, 605, 606, 608, 609, 611, 612, 613, 614, 616, 618, 619, 620, 622, 623, 624], "arang": [3, 624], "archibald": [10, 616], "archiv": 20, "area": 612, "aren": [175, 250, 251, 259, 587, 608, 614, 616, 620], "arg": [25, 26, 132, 133, 134, 157, 159, 160, 161, 162, 297, 511, 539, 543, 546, 547, 548, 587, 591], "arg2": [297, 587, 590], "argpars": [25, 26], "argument": [24, 25, 26, 27, 28, 42, 44, 53, 92, 131, 132, 133, 134, 184, 185, 186, 206, 208, 209, 210, 211, 213, 214, 292, 294, 296, 511, 541, 543, 544, 547, 548, 587, 589, 590, 598, 599, 600, 601, 602, 603, 608, 615, 616, 619, 622], "argv": [0, 4, 14], "arithmet": 541, "around": [42, 587, 608, 612], "arr": [2, 3, 37, 42, 49, 50, 51, 53, 132, 133, 134, 215, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 250, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 284, 285, 286, 287, 289, 290, 619, 620, 622, 624], "arr_downsampl": 2, "arrai": [2, 4, 14, 20, 26, 28, 29, 37, 42, 49, 50, 51, 52, 53, 82, 97, 102, 128, 132, 133, 134, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 250, 251, 258, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 278, 285, 286, 287, 289, 290, 296, 540, 544, 587, 588, 598, 599, 602, 603, 608, 614, 620, 622], "array_equ": 619, "artifact": 613, "as_arrai": [29, 220, 251, 276, 291, 622], "as_buff": [29, 251], "as_float": 288, "as_fram": 250, "as_integer_ratio": [296, 541, 542, 544, 545], "as_pixel_opt": 576, "as_raw": [3, 51, 572, 587, 607, 624], "as_rgb": [29, 132, 133, 134, 252, 279, 619], "as_tupl": 541, "ascii": [32, 178, 204, 209, 511, 548, 587, 599], "ask": [38, 611, 612, 613], "aspect": 4, "assert": [36, 37, 612, 615, 619, 620, 622], "assess": 173, "assi": 173, "assign": [17, 42, 69, 128, 587, 593, 600, 606, 618], "associ": [132, 133, 134, 250, 258], "assum": [4, 25, 26, 37, 44, 50, 89, 148, 511, 548, 587, 596, 616, 619, 622, 624], "assume_implicit_vr_switch": [576, 587, 605], "astimezon": 543, "astyp": [620, 624], "at_top_level": 166, "attach": 175, "attempt": [29, 30, 34, 147, 185, 186, 572, 587, 596, 605, 608, 614], "attr": 53, "attribut": [32, 39, 47, 69, 84, 128, 130, 132, 133, 134, 158, 159, 161, 162, 174, 175, 176, 186, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 279, 293, 294, 295, 296, 511, 539, 541, 542, 543, 544, 545, 546, 547, 548, 584, 587, 588, 598, 603, 606, 607, 608, 614, 616, 618], "attributeerror": [184, 215, 216, 218, 220, 221, 251, 259, 587, 590, 606, 608, 614], "audio": [51, 624], "august": 23, "author": [2, 8, 9, 11, 12, 16, 17, 20, 22], "auto": [20, 132, 133, 134, 294, 543, 547, 587, 588], "auto_exampl": [5, 13, 19, 21], "auto_examples_jupyt": 6, "auto_examples_python": 6, "auto_format": [540, 541, 542, 587, 605], "autocomplet": [132, 133, 134, 294], "automat": [26, 27, 42, 44, 47, 49, 50, 52, 53, 97, 128, 132, 133, 134, 175, 184, 185, 186, 541, 542, 587, 596, 600, 602, 605, 608, 612, 613, 614, 620], "avail": [1, 6, 10, 15, 24, 26, 27, 28, 30, 33, 34, 41, 42, 47, 48, 50, 51, 52, 106, 131, 132, 133, 134, 139, 141, 144, 146, 150, 159, 161, 162, 175, 206, 216, 217, 219, 231, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 259, 262, 264, 276, 278, 279, 283, 285, 287, 291, 295, 546, 554, 556, 584, 587, 589, 590, 594, 596, 597, 598, 600, 603, 616, 618, 619, 622, 623, 624], "available_plugin": [251, 259], "averag": [2, 8, 20], "averagin": 2, "avf": 624, "avg": 20, "avl": 624, "avoid": [32, 43, 103, 166, 183, 540, 587, 599, 600, 603, 616, 619, 622], "avr": 624, "awai": 616, "awar": [30, 32, 34, 52, 616], "ax": 3, "ax1": 624, "ax2": 624, "ax_aspect": 4, "axesimag": 48, "axi": 624, "axial": [1, 5, 6, 20, 26, 28, 47, 587, 599, 610, 614], "azimuth": 20, "b": [2, 8, 12, 16, 20, 22, 26, 27, 28, 37, 39, 42, 47, 49, 50, 128, 132, 133, 134, 159, 161, 162, 186, 209, 233, 274, 537, 541, 546, 612, 613, 614, 620, 622], "b1": 39, "b2": 39, "b6b3658f3b14": [587, 593], "b764": 616, "back": [2, 14, 16, 20, 38, 49, 50, 52, 53, 612, 613, 614, 616], "backend": [29, 132, 133, 134, 587, 608, 609, 619], "backslash": [132, 133, 134, 209, 546, 566, 587, 588, 589, 605], "backup": 175, "backward": [132, 133, 134, 587, 590, 596], "bad": [587, 596, 606], "balanc": 43, "bar": [587, 607], "bari": 623, "base": [6, 21, 23, 36, 37, 38, 39, 70, 81, 132, 133, 134, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 294, 539, 541, 543, 547, 576, 580, 581, 587, 590, 596, 600, 603, 610, 612, 613, 616, 619, 622, 624], "base64": [128, 132, 133, 134, 615], "baselin": [20, 39, 41, 44, 45, 50, 147, 243, 260, 289, 511, 587, 607, 619, 624], "basetag": [32, 42, 60, 85, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 130, 132, 133, 134, 135, 163, 165, 166, 169, 175, 179, 181, 182, 183, 262, 264, 285, 287, 297, 298, 299, 552, 568, 587, 590, 605], "basic": [11, 26, 27, 28, 44, 51, 52, 54, 67, 71, 132, 133, 134, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 231, 278, 587, 600, 608, 616, 617, 619, 622, 624], "basic_offset_t": 67, "bb": 22, "bbh": 20, "beam": [11, 18, 24, 26, 27, 28, 587, 593], "beam0": 18, "beam1": 42, "beamdosespecificationpoint": [24, 26], "beamnam": [11, 18, 42], "beamnumb": [11, 24, 26, 27, 28], "beamsequ": [11, 18, 24, 26, 27, 28, 42, 132, 587, 593], "bec3": 616, "becaus": [10, 24, 26, 37, 38, 39, 42, 49, 50, 52, 53, 69, 157, 175, 612, 613, 614, 619, 620, 622], "becom": [96, 587, 593, 603, 612, 613, 616], "been": [10, 25, 26, 39, 41, 45, 47, 50, 82, 89, 91, 132, 133, 134, 139, 141, 144, 145, 146, 147, 148, 150, 167, 174, 175, 177, 186, 198, 199, 250, 251, 258, 263, 286, 511, 540, 541, 548, 587, 590, 597, 602, 605, 606, 608, 612, 613, 614, 615, 619, 620, 622], "befor": [38, 45, 47, 91, 128, 132, 133, 134, 165, 176, 183, 225, 228, 229, 250, 251, 268, 271, 272, 511, 548, 587, 590, 593, 594, 596, 599, 612, 613, 614, 616, 622, 624], "beforehand": 618, "began": 623, "begin": [42, 100, 139, 154, 170, 296, 511, 544, 548], "behav": [43, 111, 214, 587, 597, 599, 616], "behavior": [42, 43, 56, 84, 85, 96, 132, 133, 134, 587, 594, 598, 602, 603], "being": [37, 39, 103, 112, 113, 114, 116, 117, 120, 122, 123, 124, 127, 132, 133, 134, 148, 159, 161, 162, 221, 259, 587, 588, 598, 605, 606, 608, 616, 618, 619, 620, 622], "belong": [132, 133, 134, 174, 175, 211], "below": [26, 28, 32, 36, 37, 38, 41, 44, 47, 176, 186, 215, 218, 220, 221, 289, 572, 587, 590, 616, 620, 622, 623], "best": [29, 46, 69], "beta": 615, "better": [37, 53, 587, 591, 593, 597], "between": [6, 21, 37, 38, 49, 50, 53, 109, 215, 511, 548, 587, 608, 610, 612, 613, 614, 619], "beyond": 619, "big": [29, 33, 34, 39, 45, 132, 133, 134, 144, 145, 146, 150, 154, 155, 159, 161, 162, 186, 218, 221, 235, 251, 260, 296, 302, 511, 538, 544, 587, 607, 608, 624], "bigger": [52, 587, 602], "bin": [296, 544, 612, 613], "binari": [24, 26, 128, 132, 133, 134, 263, 286, 296, 541, 544, 587, 591, 599, 600, 608], "binaryio": [132, 133, 134, 163, 165, 166, 167, 169, 170, 171, 172, 179, 180, 181, 182, 183, 186, 250, 251, 258, 262, 264, 285, 287, 587, 608], "biopsi": 20, "birth": [2, 8, 17, 20], "bit": [2, 8, 20, 29, 30, 32, 34, 37, 38, 39, 41, 45, 49, 50, 53, 132, 133, 134, 135, 151, 218, 221, 223, 224, 226, 231, 232, 250, 251, 252, 258, 259, 260, 262, 263, 264, 266, 267, 269, 273, 275, 276, 278, 279, 280, 285, 286, 287, 288, 290, 291, 296, 544, 587, 597, 598, 600, 605, 606, 607, 608, 609, 612, 613, 619, 622, 624], "bit_count": [296, 544], "bit_length": [296, 544], "bits_alloc": [29, 30, 34, 230, 250, 258, 259, 277, 280], "bits_stor": [29, 30, 34, 132, 133, 134, 230, 250, 258, 259, 275, 277, 290], "bitsalloc": [36, 37, 38, 44, 45, 128, 218, 220, 221, 250, 258, 281, 282, 288, 587, 598, 619, 620], "bitsstor": [26, 28, 36, 37, 218, 220, 282, 619, 620], "black": [36, 37, 38, 587, 608], "blank": [16, 17, 109, 214, 540, 587, 589, 614], "blend": 20, "blob": 14, "block": [16, 18, 20, 26, 27, 28, 36, 47, 132, 133, 134, 135, 587, 602, 608, 613], "block1": 18, "block2": 18, "block_ds1": 18, "block_ds2": 18, "block_ds3": 18, "block_start": 135, "blocknam": 18, "blocksequ": 18, "blocktyp": 18, "blue": [36, 37, 38, 39, 587, 602], "bn": 39, "boli": [26, 28], "bolu": [2, 8, 20], "bond": 14, "bone": 20, "bool": [29, 30, 33, 34, 56, 67, 81, 82, 94, 96, 101, 106, 115, 116, 125, 126, 128, 130, 132, 133, 134, 136, 139, 140, 151, 159, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 199, 212, 215, 216, 217, 218, 219, 220, 221, 228, 231, 232, 250, 251, 252, 258, 259, 262, 263, 264, 271, 273, 275, 276, 278, 279, 283, 284, 285, 286, 287, 288, 290, 291, 294, 296, 511, 538, 540, 541, 542, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 572, 587, 609], "boolean": 620, "bot": 151, "both": [29, 37, 38, 43, 76, 81, 82, 97, 151, 175, 228, 271, 541, 587, 589, 596, 599, 602, 608, 615, 619], "bottom": [20, 53, 612, 613], "boundari": [147, 511, 548, 587, 608, 609], "bowti": 20, "box": [23, 53], "brace": [511, 548], "brachi": [26, 27, 28], "bracket": [42, 47, 614], "brain": [10, 616], "branch": [614, 618], "break": [43, 511, 548, 587, 603, 608, 616], "brett": [587, 595], "briefli": [616, 622], "broken": 50, "browser": 613, "bubbl": [132, 133, 134], "buffer": [14, 29, 56, 67, 132, 133, 134, 140, 142, 144, 145, 146, 149, 150, 154, 155, 159, 161, 162, 165, 186, 198, 218, 250, 251, 258, 296, 544, 587, 608], "buffered_dataset": [140, 142], "buffered_read_s": 56, "bufferediobas": [32, 67, 128, 140, 142, 587, 608], "bufferedread": [32, 140, 142], "bug": [591, 595, 599, 602, 605, 611, 612, 618], "build": [0, 4, 184, 185, 587, 596, 607, 612], "build_tre": 0, "built": [32, 53, 296, 544, 618], "bulk": [50, 128, 132, 133, 134, 576, 587, 600, 601, 604, 615, 622], "bulk_data_element_handl": [128, 132, 133, 134, 615], "bulk_data_handl": 615, "bulk_data_read": 615, "bulk_data_threshold": [128, 132, 133, 134, 587, 601, 615], "bulk_data_uri": 615, "bulk_data_uri_handl": [128, 132, 133, 134, 587, 603, 615], "bulkdatauri": [128, 132, 133, 134, 615], "bullet": [587, 590], "button": 20, "bypass": 56, "byte": [14, 24, 26, 29, 30, 32, 33, 34, 37, 39, 42, 44, 49, 50, 51, 52, 67, 77, 78, 79, 89, 90, 111, 128, 130, 131, 132, 133, 134, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 161, 162, 164, 165, 166, 167, 168, 170, 180, 181, 182, 183, 184, 185, 186, 191, 192, 196, 198, 199, 209, 213, 215, 233, 250, 251, 258, 259, 263, 274, 276, 280, 281, 283, 286, 291, 296, 511, 544, 546, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 587, 598, 599, 600, 605, 608, 609, 614, 616, 619, 620, 622, 624], "byte_str": [551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569], "bytearrai": [29, 30, 34, 132, 133, 134, 144, 145, 146, 150, 154, 155, 159, 161, 162, 250, 251, 258, 280, 296, 544], "bytelength": [166, 171], "byteord": [29, 33, 34, 296, 544, 624], "bytes_to_find": 180, "bytesio": [14, 16, 133, 159, 587, 608, 614], "byteslengthexcept": [587, 607], "bytestr": [186, 280], "bytestream": [147, 149], "c": [2, 10, 18, 20, 22, 24, 26, 27, 28, 32, 39, 42, 47, 50, 51, 93, 132, 133, 134, 215, 218, 224, 226, 227, 228, 229, 232, 267, 269, 270, 271, 272, 273, 289, 541, 567, 587, 594, 614, 615, 616, 618, 619, 620, 622, 624], "c313d2befb08": [587, 593], "cach": [612, 618], "cal": 20, "calcul": [587, 605, 607], "calibr": 20, "call": [10, 25, 26, 39, 42, 43, 44, 49, 52, 81, 85, 91, 129, 132, 133, 134, 148, 159, 161, 162, 163, 175, 182, 186, 206, 214, 250, 511, 540, 548, 587, 590, 593, 597, 603, 608, 614, 616, 619, 622], "call_back": 166, "callabl": [91, 128, 132, 133, 134, 163, 166, 169, 173, 206, 214, 250, 258, 571], "callback": [17, 25, 26, 131, 132, 133, 134, 206, 208, 209, 210, 211, 587, 596, 608], "caller": [165, 587, 590], "camel": [84, 587, 603], "can": [1, 6, 10, 14, 17, 24, 25, 26, 27, 28, 30, 32, 34, 37, 39, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 69, 96, 131, 132, 133, 134, 139, 140, 141, 161, 162, 165, 166, 173, 175, 186, 201, 206, 214, 233, 251, 259, 274, 294, 511, 538, 540, 541, 545, 548, 571, 584, 587, 588, 589, 590, 593, 602, 603, 606, 608, 612, 613, 614, 615, 616, 618, 619, 620, 622, 623, 624], "cancel": 175, "cannot": [42, 45, 85, 132, 133, 134, 175, 186, 214, 231, 278, 541, 545, 549, 587, 605, 608, 612, 616], "canon": 541, "capabl": 623, "capac": 45, "capit": [53, 511, 541, 548, 587, 593], "captur": 612, "carotid": [10, 616], "carri": [540, 541, 587, 595], "case": [25, 26, 29, 37, 42, 43, 47, 52, 56, 76, 78, 84, 132, 133, 134, 166, 231, 251, 275, 278, 290, 294, 511, 541, 546, 548, 587, 599, 603, 608, 614, 615, 619, 620, 622, 624], "casefold": [511, 548], "caseless": [511, 548], "catch": [587, 590, 592], "caus": [30, 34, 549, 587, 589, 616], "caution": 614, "cb": 280, "cd": [612, 613, 616], "cell": 20, "center": [2, 8, 20, 227, 228, 229, 270, 271, 272, 511, 548, 614], "central": 2, "certain": [52, 132, 133, 134, 289, 613, 614], "certainli": 52, "ch": [37, 624], "ch1": 624, "ch2": 624, "ch_idx": 3, "ch_item": 3, "ch_sourc": 3, "chain": 20, "chan": 20, "chanc": 614, "chang": [10, 12, 25, 26, 27, 30, 34, 38, 43, 44, 49, 50, 53, 56, 67, 82, 96, 106, 128, 132, 133, 134, 151, 159, 161, 162, 175, 177, 184, 185, 186, 216, 217, 218, 219, 220, 221, 228, 232, 250, 263, 271, 273, 275, 276, 286, 289, 290, 291, 537, 541, 554, 556, 602, 609, 611, 614, 615, 617, 618, 619, 620, 623], "channel": [3, 20, 37, 39, 50, 51, 132, 133, 134, 218, 572, 620, 624], "channeldefinitionsequ": [3, 624], "channelsampleskew": 624, "channelsensit": 624, "channelsensitivityunitssequ": [3, 624], "channelsourcesequ": [3, 624], "chapter": [39, 537], "chapter_7": 613, "char": [511, 548], "charact": [10, 20, 26, 28, 32, 43, 47, 53, 56, 76, 77, 78, 79, 89, 128, 129, 131, 132, 133, 134, 135, 165, 166, 175, 176, 177, 178, 198, 201, 202, 203, 208, 209, 210, 511, 537, 546, 548, 549, 550, 554, 556, 559, 560, 566, 569, 570, 576, 587, 588, 589, 596, 598, 599, 602, 603, 605, 606, 607, 608, 612, 614, 615, 616], "character_encod": [132, 133, 134], "character_set": 614, "charl": 618, "charpyl": [587, 607, 618], "charset": [104, 576, 587, 607], "chdef": 624, "chdef_seq": 624, "check": [3, 12, 42, 43, 115, 116, 118, 119, 121, 125, 126, 132, 133, 134, 136, 178, 186, 199, 540, 550, 587, 593, 596, 598, 599, 602, 603, 605, 608, 609, 612, 613, 618, 620, 624], "checkout": [612, 613], "checksum": 20, "chief": 546, "child": 176, "children": 176, "chines": [587, 588, 596], "choic": [619, 620], "choos": [612, 613, 619], "chosen": [541, 620, 622, 624], "chtml": 53, "chunk": 56, "ci": [587, 608], "cid": [294, 295, 584, 623], "cid1234": 294, "cid270": 623, "cid4": 584, "cid6": 584, "cid_concept": 294, "cid_for_nam": 623, "circl": 620, "circleci": 613, "circumst": [139, 141], "citat": 23, "citizen": [84, 128, 132, 614], "clam": 0, "clarif": [612, 613], "clariti": [587, 596], "class": [2, 8, 9, 12, 14, 20, 26, 27, 28, 29, 30, 34, 42, 47, 50, 51, 53, 54, 56, 67, 69, 70, 81, 128, 130, 132, 133, 134, 135, 136, 159, 161, 162, 165, 174, 175, 176, 186, 199, 206, 214, 250, 251, 258, 259, 292, 293, 294, 295, 296, 449, 511, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 575, 576, 580, 581, 587, 588, 589, 590, 593, 594, 595, 596, 597, 598, 600, 602, 603, 606, 607, 608, 613, 614, 616, 622, 623], "classmethod": [128, 132, 133, 134, 546], "clean": [540, 587, 596, 612, 613], "clear": [47, 128, 132, 133, 134, 175, 214, 292, 587, 608], "cli": [587, 607], "click": [612, 613], "clip": [20, 37], "clone": [26, 27, 612, 613, 618], "close": [67, 140, 142, 159, 161, 162, 165, 169, 587, 589, 590, 619, 620], "closest": [184, 185, 541], "clunie1": [2, 20, 26, 28, 47, 614], "cm": [9, 11, 48], "cmap": [9, 48, 622], "co": [132, 624], "code": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 32, 36, 42, 46, 47, 52, 77, 78, 96, 132, 133, 134, 163, 165, 168, 294, 511, 548, 576, 584, 587, 588, 590, 594, 595, 596, 598, 600, 603, 605, 608, 611, 613, 617, 618, 623, 624], "code_fil": 52, "codec": [511, 548], "codedict": 623, "codemean": [3, 624], "codestream": [29, 132, 133, 134, 231, 278, 283, 619], "codevalu": 624, "codifi": [25, 27, 46, 587, 595, 597, 605, 607, 608], "codingschemedesign": 624, "codingschemevers": 624, "coeffici": [20, 26, 27, 541], "coll": [26, 28], "collect": [20, 47, 56, 134, 166, 295, 576, 616], "collis": [587, 589], "color": [29, 30, 33, 34, 36, 37, 38, 39, 46, 132, 133, 134, 222, 223, 232, 233, 250, 259, 265, 266, 273, 274, 275, 290, 587, 600, 602, 619, 620, 622], "color_spac": [223, 233, 266, 274], "colorimetr": [223, 233, 266, 274], "colour": [222, 265], "colourspac": [97, 587, 605], "column": [0, 2, 8, 9, 20, 26, 28, 29, 30, 34, 37, 39, 49, 50, 132, 133, 134, 215, 218, 220, 221, 223, 230, 231, 232, 250, 251, 258, 259, 262, 263, 264, 266, 273, 275, 277, 278, 281, 282, 285, 286, 287, 289, 290, 619, 620, 622], "columnconfigur": 0, "com": [2, 8, 9, 11, 12, 17, 20, 22, 23, 612, 613, 618], "combin": [132, 133, 134, 297, 543, 614, 624], "comfort": 619, "comma": 53, "command": [25, 27, 40, 52, 132, 133, 134, 186, 294, 587, 595, 605, 607, 608, 612, 613, 618], "command1": [25, 26], "command1modul": [25, 26], "command2": [25, 26], "command2modul": [25, 26], "comment": [2, 8, 20, 612], "commit": [587, 608], "common": [37, 47, 51, 52, 76, 587, 598, 616, 622, 624], "commonli": [45, 132, 133, 134, 251, 262, 264, 285, 287, 616, 622], "commun": [587, 603], "comp": [10, 20, 26, 28, 616], "compani": 47, "compar": [20, 56, 511, 541, 548, 587, 594, 597, 605, 608, 612, 613, 620], "compare_sign": 541, "compare_tot": 541, "compare_total_mag": 541, "comparison": [511, 541, 548, 587, 592, 597], "compat": [43, 44, 132, 133, 134, 539, 541, 543, 587, 590, 591, 593, 594, 595, 596, 608, 618], "compil": [461, 462], "complement": [34, 39, 54, 259, 296, 544], "complet": [20, 24, 26, 34, 52, 132, 133, 134, 146, 149, 183, 294, 587, 588, 612, 616, 618, 620], "complex": [50, 296, 542, 544, 545, 622], "compliant": [12, 52, 587, 596], "complic": [37, 616, 619], "compon": [36, 39, 80, 147, 176, 178, 220, 283, 546, 587, 588, 590, 605, 619], "compress": [20, 23, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 46, 50, 54, 67, 132, 133, 134, 139, 140, 141, 142, 147, 148, 237, 238, 239, 241, 242, 245, 246, 250, 251, 252, 253, 254, 255, 256, 258, 262, 264, 275, 279, 285, 287, 289, 290, 511, 576, 580, 581, 587, 596, 598, 600, 605, 606, 608, 609, 618, 620, 621], "compressedsampl": [2, 8, 9, 20, 26, 28, 69, 613, 614], "compression_ratio": 33, "comput": 20, "concaten": [37, 138, 151, 511, 548, 620], "concept": [293, 294, 576, 587, 608], "concern": 48, "conda": [619, 620, 622, 624], "condit": [165, 169, 541, 587, 596], "condition": [30, 624], "config": [32, 43, 545, 567, 576, 587, 593, 598, 599, 600, 602, 603, 605, 608], "configur": [0, 29, 36, 39, 43, 99, 128, 129, 132, 133, 134, 231, 250, 258, 275, 278, 289, 290, 576, 587, 598, 605, 606, 620], "conform": [56, 128, 132, 133, 134, 175, 178, 186, 199, 212, 221, 587, 596, 598, 599, 608, 614, 616, 619, 620, 622], "confus": [587, 608], "congratul": 614, "conjug": [296, 541, 542, 544, 545], "conjunct": [263, 286], "connect": [587, 603], "conserv": 212, "consid": [10, 25, 26, 52, 132, 133, 134, 511, 548, 612, 613, 615], "consist": [51, 133, 186, 250, 258, 293, 587, 593, 613, 622, 624], "consolid": [587, 594], "constant": [587, 603, 608, 624], "constrain": 39, "constraint": [37, 39, 541, 542, 549], "construct": [539, 541, 542, 543, 546, 587, 593, 594, 605], "constructor": 214, "consumpt": [587, 598], "contain": [0, 10, 24, 26, 29, 30, 32, 34, 39, 40, 42, 43, 47, 49, 50, 51, 52, 53, 54, 56, 67, 69, 76, 78, 128, 130, 132, 133, 134, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 165, 166, 173, 180, 184, 185, 186, 199, 202, 206, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 250, 251, 252, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 297, 511, 539, 543, 546, 548, 550, 554, 556, 572, 584, 587, 595, 598, 605, 608, 612, 614, 616, 619, 620, 622, 624], "content": [10, 12, 14, 20, 42, 56, 132, 133, 134, 144, 147, 215, 218, 219, 220, 221, 230, 231, 251, 277, 278, 289, 613, 614, 616, 619], "contentd": 12, "contenttim": 12, "context": [165, 299, 541, 576, 587, 596, 614], "contigu": 39, "continu": [138, 587, 588, 605], "contrast": [2, 8, 10, 20, 616], "contrib": 590, "contribut": [25, 26, 587, 590, 593, 594, 617], "contributing_cod": 613, "contributing_doc": 613, "contributor": 16, "control": [26, 27, 29, 36, 37, 84, 85, 101, 102, 132, 133, 134, 251, 262, 264, 285, 287, 587, 593, 608, 616, 619], "controlpointsequ": 11, "conveni": [42, 47, 50, 67, 128, 209, 210, 587, 603, 608, 609, 615], "convent": [25, 26, 42, 546], "convers": [29, 30, 34, 36, 37, 38, 39, 93, 128, 131, 132, 133, 134, 206, 208, 209, 210, 215, 218, 220, 221, 572, 587, 589, 599, 600, 602, 608, 615, 619, 622, 624], "convert": [14, 29, 30, 34, 36, 37, 38, 39, 50, 76, 77, 79, 85, 88, 90, 93, 97, 129, 131, 132, 133, 134, 175, 186, 206, 208, 214, 215, 216, 217, 218, 219, 220, 221, 232, 250, 251, 252, 259, 262, 264, 273, 279, 285, 287, 296, 511, 541, 543, 544, 548, 572, 587, 590, 593, 596, 599, 600, 603, 604, 605, 608, 609, 613, 614, 619, 620, 624], "convert_ae_str": 60, "convert_atvalu": 60, "convert_color_spac": [38, 50, 576, 587, 605, 608, 619, 622], "convert_da_str": 60, "convert_ds_str": 60, "convert_dt_str": 60, "convert_encod": 576, "convert_is_str": 60, "convert_numb": [60, 184, 185], "convert_obvalu": 60, "convert_owvalu": 60, "convert_pixel_data": [97, 132, 133, 134, 587, 608], "convert_pn": 60, "convert_raw_data_el": [60, 129, 206, 575, 587, 608], "convert_single_str": 60, "convert_sq": 60, "convert_str": 60, "convert_tag": 60, "convert_text": 60, "convert_tm_str": 60, "convert_ui": 60, "convert_un": 60, "convert_ur_str": 60, "convert_valu": 60, "convert_wrong_length_to_un": [576, 587, 605], "convolut": 20, "coord": 20, "coordin": [20, 26, 27, 42], "copi": [2, 10, 52, 132, 133, 134, 175, 511, 541, 548, 587, 593, 603, 606, 608, 612, 613, 616, 618], "copy_ab": 541, "copy_neg": 541, "copy_sign": 541, "copyfil": 616, "copyright": 613, "copytre": 616, "cor_aspect": 4, "core": [46, 54], "cornea": 584, "corner": 20, "coron": [1, 5, 6, 584, 587, 599, 610], "correct": [4, 16, 20, 24, 26, 29, 36, 37, 38, 39, 43, 45, 49, 51, 76, 80, 97, 132, 133, 134, 165, 180, 184, 185, 214, 220, 231, 263, 278, 286, 587, 597, 598, 600, 605, 606, 608, 612, 614, 624], "correct_ambiguous_vr": 70, "correct_ambiguous_vr_el": 70, "correct_unused_bit": 29, "correctli": [32, 47, 52, 97, 175, 216, 217, 541, 587, 590, 593, 596, 597, 599, 600, 603, 605, 606, 607, 608, 612], "correspond": [10, 17, 29, 30, 34, 36, 37, 38, 41, 42, 44, 49, 50, 51, 53, 76, 106, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 139, 141, 167, 174, 175, 176, 186, 206, 215, 222, 231, 250, 251, 252, 258, 259, 260, 261, 265, 275, 278, 279, 284, 289, 290, 297, 511, 538, 539, 543, 572, 587, 605, 608, 612, 613, 616, 619, 622, 624], "cosin": 624, "cost": 616, "couch": [26, 28], "couchdb": [587, 591], "could": [3, 24, 25, 26, 50, 52, 76, 77, 79, 214, 216, 587, 590, 591, 605, 612, 613], "count": [4, 130, 214, 292, 293, 296, 511, 544, 548], "counter": 20, "coupl": 616, "courier": 0, "cours": [10, 622], "cover": [30, 34, 614, 616, 618, 622, 624], "coverag": [587, 596, 612], "cp0": 11, "cp805": [587, 590], "cr": [10, 280, 616], "cr1": 616, "cr2": 616, "cr3": 616, "crash": [587, 597, 606, 607], "creat": [0, 4, 12, 14, 16, 18, 24, 25, 26, 27, 32, 42, 43, 47, 52, 54, 88, 128, 129, 131, 132, 133, 134, 159, 161, 162, 163, 173, 174, 175, 176, 186, 206, 214, 223, 233, 250, 251, 258, 259, 266, 274, 294, 295, 297, 511, 537, 539, 540, 542, 543, 545, 546, 576, 587, 590, 592, 605, 607, 608, 614, 618, 619, 622, 623, 624], "create_data_el": 216, "create_icc_transform": [223, 266, 576, 587, 608], "create_imag": 216, "creation": [2, 8, 12, 20, 26, 27, 28, 42, 173, 587, 599, 614, 616, 621], "creator": [2, 8, 16, 20, 26, 28, 47, 110, 111, 119, 122, 123, 124, 132, 133, 134, 135, 199, 296, 587, 597, 602, 607, 614, 616], "credit": 613, "ct": [1, 5, 6, 9, 10, 12, 20, 26, 28, 36, 37, 38, 42, 44, 47, 48, 50, 69, 132, 133, 134, 175, 231, 278, 294, 587, 599, 610, 614, 615, 616, 619, 622], "ct01": [20, 47], "ct01_oc0": 20, "ct1": [9, 20, 26, 28, 69, 613, 614], "ct2": 616, "ct_compressed_bas": [44, 619], "ct_compressed_ext": [44, 619], "ct_rle_lossless": [44, 132, 133, 134, 231, 278], "ct_small": [9, 26, 28, 69, 165, 613, 614], "ctime": [539, 543], "cumul": [26, 27], "current": [0, 20, 24, 26, 28, 39, 43, 44, 53, 67, 96, 128, 132, 133, 134, 159, 161, 162, 175, 176, 184, 185, 192, 222, 232, 265, 273, 539, 541, 543, 546, 587, 605, 613, 616, 618], "curv": [17, 624], "curve_typ": 624, "curves_callback": 17, "custom": [8, 26, 28, 131, 132, 133, 134, 173, 175, 587, 588, 589, 596, 599, 603, 619, 622], "cython": 618, "d": [0, 2, 3, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 60, 65, 69, 81, 82, 84, 85, 97, 101, 102, 108, 109, 110, 128, 131, 132, 133, 134, 139, 140, 141, 142, 165, 173, 175, 184, 185, 200, 206, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 541, 542, 546, 549, 554, 572, 587, 593, 594, 602, 605, 607, 612, 613, 614, 615, 616, 618, 619, 620, 622, 624], "da": [2, 12, 17, 20, 26, 27, 28, 32, 42, 47, 60, 65, 93, 132, 553, 567, 587, 596, 605, 614], "dai": [539, 543], "daniel": [587, 590], "darci": [11, 12, 16, 17], "data": [1, 2, 5, 6, 7, 10, 11, 13, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 32, 33, 36, 37, 38, 39, 40, 42, 43, 46, 48, 52, 53, 54, 56, 62, 63, 64, 65, 69, 77, 78, 79, 80, 82, 84, 97, 100, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 167, 169, 173, 175, 182, 198, 201, 202, 203, 206, 208, 209, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 511, 537, 548, 565, 572, 576, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618], "data_el": [17, 132, 133, 134, 188, 191, 192, 195, 197, 202, 203, 216, 614, 615], "data_elem": [587, 588, 614], "data_element_callback": [92, 98, 129, 576, 587, 608], "data_element_callback_kwarg": [576, 587, 608], "data_element_gener": [70, 166], "data_element_offset_to_valu": 70, "data_retrieved_for_tag_and_vr_via_uri": 615, "data_retrieved_via_uri": 615, "databas": 14, "datadict": [16, 576, 587, 596, 599, 614], "datael": [0, 46, 47, 49, 53, 56, 60, 78, 129, 131, 132, 133, 134, 163, 166, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 216, 252, 279, 587, 588, 596, 597, 598, 599, 602, 606, 608, 614], "dataelem": [60, 78, 132, 133, 134, 167, 185, 201, 202, 570, 576, 587, 599, 602, 614], "dataelement_from_raw": [60, 587, 608, 614], "dataset": [0, 2, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 32, 37, 38, 39, 43, 45, 46, 47, 48, 52, 53, 54, 73, 80, 84, 85, 91, 97, 100, 106, 107, 108, 109, 128, 129, 131, 137, 139, 140, 141, 142, 147, 149, 158, 159, 161, 162, 165, 166, 169, 171, 172, 173, 174, 175, 176, 184, 185, 186, 198, 199, 203, 206, 208, 209, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 250, 251, 252, 258, 259, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 282, 284, 285, 287, 288, 289, 290, 292, 511, 538, 572, 576, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 613, 616, 617, 618, 620, 622, 624], "dataset_class": 128, "datastor": 106, "date": [2, 8, 9, 12, 17, 20, 23, 26, 27, 28, 32, 42, 43, 47, 93, 175, 539, 543, 576, 587, 596, 597, 599, 605, 614, 618], "datetim": [12, 93, 539, 543, 547], "datetime_convers": [32, 553, 555, 561, 576], "daughter": 132, "daunt": 612, "dave": [587, 590], "db": [14, 36, 132, 133, 134, 231, 278, 619], "dcm": [9, 11, 12, 24, 26, 27, 28, 32, 42, 44, 49, 50, 53, 69, 132, 133, 134, 140, 142, 165, 173, 206, 209, 210, 231, 262, 264, 278, 285, 287, 587, 603, 613, 614, 619, 623, 624], "dcm_qt_tree": [587, 594, 595], "dcmread": [0, 4, 9, 10, 11, 12, 14, 16, 42, 45, 50, 70, 91, 106, 133, 157, 161, 162, 163, 166, 169, 183, 206, 209, 210, 213, 262, 264, 285, 287, 538, 587, 596, 602, 603, 605, 608, 613, 614, 616, 622, 624], "dcmwrite": [14, 70, 132, 133, 134, 161, 162, 587, 596, 602, 603, 605, 608, 614], "dctool100": [2, 20, 26, 28, 47, 614], "dd": [23, 539], "ddt": 543, "de": 52, "deal": [23, 43, 49, 221, 587, 589, 598, 614], "debug": [576, 587, 593, 595, 609], "debug_on": 94, "decemb": [587, 607], "decid": [587, 608, 619], "decim": [32, 81, 101, 511, 540, 541, 542, 544, 545, 548, 549, 550, 587, 593, 594, 605], "decis": 38, "decod": [1, 5, 6, 37, 39, 40, 45, 50, 54, 60, 77, 78, 128, 132, 133, 134, 144, 146, 150, 151, 159, 161, 162, 165, 198, 216, 217, 219, 220, 221, 252, 259, 260, 262, 264, 279, 285, 287, 546, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 576, 579, 587, 591, 598, 599, 600, 603, 605, 606, 608, 609, 610, 616, 618, 619], "decode_byt": 576, "decode_data_sequ": [587, 608], "decode_el": 576, "decode_pixel_data": [251, 259], "decodefunct": 250, "decodeopt": [250, 251, 258], "decoder_depend": 30, "decoderunn": [30, 251], "decoding_plugin": [132, 133, 134, 251, 252, 262, 264, 279, 285, 287, 619, 622], "decomposit": 36, "decompress": [29, 40, 44, 45, 54, 132, 133, 134, 219, 251, 262, 264, 285, 287, 576, 587, 596, 600, 608, 618, 620, 621, 622], "decon": 20, "decor": [587, 594], "decreas": [36, 132, 133, 134, 231, 278, 619], "deep": [587, 606], "deepcopi": [32, 587, 605, 608], "def": [0, 8, 11, 14, 17, 25, 26, 30, 34, 97, 131, 132, 133, 134, 173, 511, 548, 612, 615, 620], "default": [0, 9, 24, 26, 29, 32, 33, 34, 43, 45, 49, 50, 56, 76, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 128, 132, 133, 134, 136, 139, 143, 144, 145, 146, 150, 153, 154, 155, 159, 161, 162, 163, 165, 166, 175, 177, 184, 185, 186, 198, 199, 206, 208, 211, 214, 215, 218, 220, 221, 223, 227, 228, 229, 231, 232, 233, 250, 251, 252, 258, 259, 262, 263, 264, 266, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 284, 285, 286, 287, 288, 290, 291, 292, 511, 537, 541, 543, 546, 548, 554, 556, 560, 571, 572, 587, 591, 593, 594, 596, 598, 599, 600, 601, 602, 603, 605, 608, 613, 614, 615, 616, 618, 619, 620, 622], "default_element_format": 132, "default_encod": [22, 546], "default_handl": 94, "default_sequence_element_format": 132, "defer": [132, 133, 134, 167, 587, 589, 593, 600, 606, 614], "defer_s": [163, 165, 166, 169, 183, 213, 587, 589], "deferreddatael": [587, 598, 599], "defin": [16, 17, 20, 25, 26, 36, 37, 38, 39, 47, 49, 56, 128, 132, 133, 134, 135, 174, 175, 222, 265, 511, 541, 587, 593, 612, 614, 616, 619, 624], "definit": [175, 186, 576, 587, 596, 624], "deflat": [45, 218, 234, 260, 511, 587, 602, 608], "defragment_data": [587, 608], "degre": 20, "del": [17, 18, 42, 47, 132, 614], "del_opt": [250, 258], "delai": [20, 26, 28], "delattr": 17, "delet": [12, 17, 52, 132, 133, 134, 250, 258, 511, 548, 587, 602, 612, 613], "delimit": [77, 147, 148, 149, 179, 181, 182, 183, 187, 511, 548, 571, 587, 603, 605], "delimiter_tag": 183, "deliveri": [26, 27], "delta": 20, "demand": 546, "demonstr": [16, 587, 588, 620], "denomin": [296, 541, 542, 544, 545], "depend": [20, 30, 34, 39, 44, 45, 50, 52, 97, 128, 132, 133, 134, 144, 145, 146, 175, 186, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 230, 231, 250, 251, 259, 265, 267, 269, 270, 271, 277, 278, 289, 567, 572, 587, 598, 599, 606, 613, 615, 616, 618, 620, 622, 624], "dependabot": [587, 608], "deprec": [91, 92, 95, 96, 98, 129, 132, 133, 134, 137, 138, 147, 148, 149, 151, 156, 186, 573, 574, 592, 593, 597, 598, 599, 602, 603, 605, 606, 607], "deprecationwarn": [587, 588], "depth": [32, 37, 50, 54, 176, 587, 600, 618, 619], "deriv": [2, 8, 20, 42, 81, 97, 128, 134, 587, 593, 614], "describ": [29, 39, 42, 52, 108, 110, 128, 132, 133, 134, 251, 541, 546, 615, 616, 622], "descript": [3, 16, 20, 25, 26, 27, 29, 33, 39, 42, 47, 54, 108, 109, 110, 111, 114, 124, 128, 135, 587, 588, 589, 602, 606, 608, 622], "descriptor": [10, 47, 175, 222, 224, 226, 227, 228, 265, 267, 269, 270, 271, 587, 600, 602, 608, 616], "descriptor_character_set": [10, 175, 616], "descriptor_file_id": [10, 175, 616], "descripwidth": 128, "deseri": 615, "design": [52, 293, 294, 295, 623], "desir": [48, 214, 232, 273], "despit": 616, "destin": [161, 162], "detail": [24, 26, 39, 42, 43, 50, 52, 94, 128, 132, 133, 134, 166, 206, 299, 541, 545, 576, 587, 605, 608, 612, 613], "detector": 20, "determin": [39, 42, 49, 128, 132, 175, 208, 209, 210, 211, 224, 226, 267, 269, 296, 541, 544, 587, 608, 609, 616, 624], "determinist": 537, "dev0": 576, "develop": [25, 26, 27, 43, 587, 596], "devic": [2, 8, 20, 26, 27, 623], "di": 616, "diamet": 20, "dicm": [157, 170, 186, 199, 212, 614], "dicom": [1, 2, 4, 6, 7, 9, 13, 14, 15, 19, 21, 22, 23, 27, 28, 30, 32, 34, 36, 37, 38, 39, 42, 44, 45, 46, 48, 49, 50, 51, 53, 54, 56, 59, 61, 69, 70, 72, 74, 76, 77, 78, 84, 89, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 132, 133, 134, 135, 139, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 161, 162, 163, 165, 166, 168, 169, 170, 175, 186, 197, 199, 201, 203, 212, 214, 215, 218, 222, 224, 226, 227, 228, 229, 232, 251, 259, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 276, 285, 286, 287, 289, 291, 294, 296, 297, 511, 537, 541, 542, 545, 546, 548, 549, 565, 576, 584, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 603, 605, 606, 607, 608, 610, 613, 614, 615, 617, 619, 620, 622, 623], "dicom_character_set": 78, "dicom_dao": [587, 591], "dicom_filenam": 14, "dicombytesio": [70, 161, 587, 608], "dicomdir": [10, 54, 69, 173, 175, 176, 587, 595, 599, 600, 603, 606, 607, 608, 617], "dicomdirtest": [10, 616], "dicomfil": [24, 26, 70], "dicomfilelik": [14, 70, 159, 160, 587, 589], "dicominfo": [587, 588], "dicomio": [70, 148, 151, 156, 159, 161, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 587, 608], "dicomit": [587, 591], "dicomtre": [0, 21, 587, 588, 610], "dicomweb": [128, 132, 133, 134, 615], "dicond": [184, 185], "dicosquadrupoleresonanceqrstorag": [587, 603], "dicosquadrupoleresonancestorag": [587, 603], "dict": [14, 30, 34, 42, 92, 108, 110, 128, 131, 132, 133, 134, 173, 175, 206, 208, 209, 210, 211, 215, 230, 250, 251, 252, 258, 277, 279, 282, 283, 294, 587, 590, 605, 607, 622], "dict_item": [132, 133, 134], "dict_kei": [132, 133, 134], "dictionari": [6, 15, 19, 42, 46, 84, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 134, 166, 230, 250, 258, 277, 511, 548, 576, 587, 589, 590, 592, 595, 596, 597, 598, 599, 600, 603, 605, 606, 608, 609, 610, 615, 623], "dictionary_is_retir": [587, 596], "dictionary_vr": 614, "did": [18, 587, 588, 608], "diff": [20, 612], "differ": [4, 6, 17, 21, 25, 26, 28, 32, 37, 38, 47, 50, 54, 132, 133, 134, 210, 541, 587, 590, 602, 610, 612, 613, 614, 615, 616, 619, 620, 622], "difficult": [52, 612], "difflib": 20, "dig": 616, "digit": [88, 135, 200, 511, 541, 548, 624], "dimens": [97, 132, 133, 134, 220, 251, 262, 264, 285, 287, 622], "dimitri": [587, 595], "dir": [42, 132, 133, 134, 294, 584, 587, 593, 606, 613, 623], "direct": [24, 26, 280, 541, 613, 615, 616], "directli": [10, 30, 34, 37, 42, 128, 250, 251, 258, 259, 540, 587, 608, 615, 616, 619, 620, 622, 623], "directori": [10, 173, 174, 175, 176, 178, 587, 588, 606, 608, 612, 613, 616, 618], "directory_record": [175, 576, 616], "directoryrecordsequ": 616, "directoryrecordtyp": [173, 175], "disabl": 619, "disadvantag": 52, "disagre": [587, 608], "discard": [511, 548], "discuss": [612, 616], "disk": [587, 603], "displai": [6, 20, 21, 26, 27, 28, 36, 37, 38, 42, 46, 48, 100, 128, 132, 587, 588, 594, 599, 605, 610, 612, 620, 622, 624], "distanc": 20, "distinct": [587, 591], "distribut": [587, 591, 603, 618], "distutil": [587, 588], "div": 546, "dive": 612, "divid": 541, "divisionbyzero": 541, "django": [612, 613, 615], "do": [10, 14, 25, 26, 30, 34, 43, 44, 45, 47, 49, 50, 52, 54, 93, 129, 132, 133, 134, 175, 186, 192, 250, 258, 587, 593, 599, 605, 608, 612, 613, 614, 616, 619, 620, 623, 624], "do_command": [25, 26], "doc": [173, 613], "docstr": [53, 612], "document": [40, 43, 132, 133, 134, 173, 206, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 259, 262, 264, 279, 285, 287, 591, 596, 597, 608, 611, 617], "doe": [10, 12, 37, 47, 49, 50, 52, 89, 97, 109, 132, 133, 134, 157, 167, 186, 192, 216, 541, 549, 587, 603, 616], "doesn": [29, 39, 49, 84, 132, 133, 134, 215, 218, 221, 251, 262, 264, 275, 285, 287, 290, 587, 602, 612, 618, 619, 620], "doi": 23, "domain": 622, "don": [8, 10, 18, 26, 27, 28, 32, 36, 42, 45, 47, 52, 250, 612, 613, 615, 616, 619, 620, 622], "done": [30, 34, 44, 511, 541, 548, 612, 613, 614], "dont_print": 8, "dose": [26, 27, 28, 69, 173, 175, 587, 593, 616], "dosesummationtyp": 616, "dot": [612, 614], "doubl": [32, 50, 53, 132, 133, 134, 218, 288, 580, 587, 600, 609, 622], "doublefloatpixeldata": [29, 30, 50, 250, 258, 282, 587, 605, 622], "down": [212, 612, 616], "download": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 106, 587, 603, 605, 606, 607], "downsampl": [2, 38], "downscal": [37, 38], "downsiz": [1, 5, 6, 50, 610], "downstream": 37, "dr": 546, "draw_circl": 620, "drop": [132, 133, 134, 587, 602, 603], "ds1": 615, "ds2": 132, "ds_byte": 14, "ds_decim": [101, 576, 587, 602], "ds_json": 615, "ds_numpi": [102, 576], "ds_or_path": 175, "ds_out": [262, 264, 285, 287, 622], "dsdecim": [32, 60, 88, 540, 554, 587, 605], "dsfloat": [32, 60, 540, 554, 587, 605], "dst": [543, 547, 616], "dt": [12, 32, 60, 65, 93, 555, 567, 587, 596, 605], "dtype": [42, 49, 50, 51, 53, 132, 133, 134, 220, 231, 232, 250, 251, 259, 263, 273, 275, 278, 286, 288, 290, 619, 620, 622], "dtype_corrected_for_endian": [587, 608], "due": [29, 132, 133, 134, 175, 250, 587, 594, 605, 607, 612, 616, 622], "dummi": [24, 26], "dummydatabas": 14, "dump": [128, 132, 133, 134], "dump_handl": [128, 132, 133, 134], "duplic": [587, 594], "durat": [20, 26, 28, 614], "dure": [36, 37, 42, 47, 109, 587, 606, 608, 612, 613, 619], "dvd": 616, "dwt": 36, "dynam": [16, 20], "e": [20, 24, 26, 27, 28, 30, 34, 42, 43, 49, 50, 53, 56, 85, 128, 132, 133, 134, 135, 165, 171, 172, 175, 176, 177, 214, 215, 251, 259, 263, 280, 286, 292, 539, 541, 546, 571, 587, 590, 597, 599, 603, 608, 612, 613, 614, 618], "e0": 151, "e000": [148, 151, 152, 153], "e0dd": 148, "e3ee934bbc": [587, 591], "e830f30b6781": [587, 594], "each": [0, 3, 10, 20, 29, 30, 33, 34, 36, 37, 38, 39, 42, 44, 49, 50, 51, 54, 69, 77, 131, 132, 133, 134, 139, 141, 147, 148, 151, 152, 153, 154, 155, 176, 177, 214, 221, 231, 232, 250, 251, 252, 258, 259, 262, 264, 273, 278, 279, 280, 285, 287, 511, 541, 546, 548, 572, 584, 587, 602, 605, 612, 614, 616, 619, 620, 622, 624], "earlier": 614, "easi": [50, 619], "easier": [47, 133, 587, 608, 613], "easiest": 23, "easili": [17, 587, 588, 590], "ecg": [51, 69, 624], "echo": [2, 8, 20], "echofindingobservationtyp": 623, "edit": [10, 52, 587, 597, 598, 600, 612, 613, 618], "editor": [612, 613], "eeee": [186, 587, 608], "effect": [42, 148, 537, 620], "effici": [10, 163, 175, 263, 286, 549, 619, 624], "effort": 29, "eg": 4, "einthoven": 624, "either": [26, 27, 30, 34, 36, 37, 39, 42, 43, 47, 52, 97, 128, 132, 133, 134, 144, 146, 150, 170, 175, 215, 223, 233, 250, 258, 263, 266, 274, 281, 286, 288, 289, 294, 296, 297, 541, 544, 546, 553, 561, 584, 587, 603, 608, 613, 614, 616, 618, 619, 620, 622], "elem": [0, 8, 17, 42, 49, 53, 78, 128, 132, 133, 134, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 204, 205, 215, 296, 298, 587, 590, 614], "element": [2, 10, 12, 16, 17, 18, 20, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 40, 44, 46, 48, 49, 50, 51, 52, 53, 54, 56, 67, 77, 78, 80, 82, 84, 85, 93, 94, 97, 100, 101, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 147, 148, 149, 163, 164, 165, 166, 167, 175, 182, 183, 184, 185, 186, 199, 201, 202, 206, 208, 209, 210, 211, 215, 216, 218, 220, 221, 223, 225, 230, 231, 233, 250, 251, 252, 258, 262, 264, 266, 268, 274, 275, 277, 278, 279, 281, 282, 285, 287, 288, 289, 290, 294, 296, 297, 539, 541, 542, 543, 544, 545, 546, 547, 548, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 572, 573, 576, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 602, 603, 605, 606, 607, 608, 613, 616, 618, 619, 620, 622, 624], "element_format": [132, 133, 134], "element_offset": [132, 133, 134, 135], "element_v": [25, 26], "element_valu": [25, 26], "elementcallback": 91, "els": [3, 4, 8, 36, 37, 38, 44, 132, 166, 180, 183, 540, 541, 614, 620], "embed": [587, 603], "emin": 541, "emit": 56, "empti": [32, 67, 128, 132, 133, 134, 136, 144, 146, 147, 149, 150, 151, 159, 214, 263, 283, 286, 292, 511, 541, 542, 546, 548, 565, 587, 588, 596, 599, 600, 601, 602, 603, 605, 608, 614, 616, 620, 622, 624], "empty_valu": 128, "empty_value_for_vr": 128, "emul": [42, 96, 132, 133, 134], "enabl": [33, 43, 93, 132, 133, 134, 619], "enable_futur": 96, "encap": [32, 44, 173, 576, 587, 596, 598, 608, 619, 622], "encapsul": [29, 32, 39, 44, 50, 132, 133, 134, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 231, 251, 259, 275, 278, 290, 576, 587, 588, 598, 603, 608, 622], "encapsulate_buff": [32, 139, 141, 142, 587, 608], "encapsulate_ext": [132, 133, 134, 231, 278], "encapsulate_extend": [44, 139, 140, 142, 587, 603, 608, 619], "encapsulate_extended_buff": [32, 139, 140, 141, 587, 608], "encapsulated_length": 67, "encapsulatedbuff": [67, 140, 142, 587, 608], "encapul": 67, "encasul": 511, "enclos": 47, "encod": [29, 30, 32, 39, 40, 41, 44, 45, 50, 51, 54, 56, 67, 76, 77, 78, 79, 128, 129, 131, 132, 133, 134, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 159, 161, 162, 163, 166, 171, 172, 175, 186, 193, 197, 198, 199, 201, 202, 203, 205, 208, 209, 210, 211, 221, 231, 233, 250, 251, 261, 262, 264, 274, 275, 278, 285, 287, 290, 511, 538, 541, 546, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 576, 579, 587, 593, 596, 597, 598, 599, 600, 605, 606, 607, 608, 614, 615, 619, 620, 622], "encode_pixel_data": [251, 259], "encode_str": 576, "encodefunct": 258, "encodeopt": [250, 258], "encoder_depend": 34, "encoderunn": 34, "encoding_plugin": [44, 132, 133, 134, 231, 259, 278, 619], "encount": [47, 89], "encourag": [587, 593], "end": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 143, 145, 154, 155, 166, 181, 183, 250, 251, 263, 286, 296, 511, 544, 548, 587, 593, 600, 619], "endian": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 39, 42, 44, 45, 47, 132, 133, 134, 144, 145, 146, 148, 150, 152, 153, 154, 155, 159, 161, 162, 163, 166, 175, 180, 181, 182, 183, 186, 192, 199, 218, 221, 234, 235, 236, 240, 251, 252, 259, 260, 275, 279, 290, 302, 511, 538, 551, 552, 553, 554, 555, 556, 560, 561, 562, 564, 565, 567, 568, 587, 590, 598, 602, 607, 608, 614, 619, 620, 622, 624], "endswith": [511, 548], "energi": [26, 28], "enforc": [42, 46, 214, 587, 593], "enforce_file_format": [12, 132, 133, 134, 186, 587, 608, 614], "enforce_standard": [136, 199, 614], "enforce_valid_valu": [576, 587, 593, 599, 600, 603, 605, 606], "engin": 541, "english": 53, "enhanc": [20, 222, 265, 590], "ensur": [4, 32, 36, 37, 38, 43, 47, 96, 132, 133, 134, 136, 165, 175, 186, 214, 263, 286, 541, 542, 587, 593, 596, 605, 607, 608, 612, 622], "ensure_file_meta": [132, 133, 134], "enter": 23, "entir": [42, 132, 165, 168, 216, 220, 251, 262, 264, 285, 287, 612, 614, 619, 622], "entireti": [132, 133, 134, 252, 279], "entiti": [2, 20, 26, 28, 32, 47, 175, 199, 614], "entri": [16, 25, 26, 27, 42, 46, 50, 108, 109, 110, 111, 118, 119, 587, 589, 606, 612, 613], "entropy_src": [537, 587, 608], "entry_point": [25, 26], "enum": [587, 606, 608], "enumer": [0, 4, 624], "env": 616, "environ": [26, 27, 43, 587, 588, 603, 618], "eoc": [147, 587, 600], "eof": [159, 161, 162, 183], "eoferror": [159, 161, 162, 183], "eoi": [147, 587, 600], "eol": [587, 607], "equal": [29, 37, 38, 39, 143, 148, 296, 511, 541, 542, 544, 545, 548, 587, 597, 598, 599], "equival": [42, 132, 133, 134, 144, 146, 150, 250, 258, 263, 286, 541, 587, 597], "error": [24, 26, 33, 37, 52, 56, 76, 86, 87, 96, 128, 132, 133, 134, 231, 278, 511, 541, 548, 549, 576, 587, 590, 591, 594, 596, 597, 598, 599, 600, 602, 603, 607, 608, 612, 614, 618, 619], "escap": [587, 608], "especi": [39, 52, 612, 619, 622], "estim": 20, "et": 23, "etc": [17, 18, 42, 50, 53, 128, 132, 133, 134, 215, 587, 588, 594, 605, 612, 616, 619], "euc_kr": [22, 546], "even": [32, 37, 47, 49, 132, 133, 134, 139, 143, 148, 165, 170, 251, 252, 262, 263, 279, 285, 286, 541, 587, 603, 614, 616, 620, 622], "everi": [67, 91, 251, 259, 280, 616, 624], "everyth": [175, 612, 616], "evolut": 43, "exact": [42, 541, 542, 544, 545], "exactli": [26, 27, 49, 51, 296, 541, 542, 544, 545, 614], "exam": 20, "exampl": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 29, 30, 34, 39, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 84, 85, 108, 109, 110, 128, 132, 133, 134, 140, 141, 142, 165, 173, 175, 206, 209, 210, 230, 231, 250, 259, 262, 264, 277, 278, 285, 287, 296, 511, 537, 541, 544, 546, 548, 576, 587, 588, 589, 590, 592, 593, 595, 599, 603, 605, 608, 609, 610, 611, 612, 613, 615, 616, 619, 620, 622, 624], "examples_jpeg2k": 69, "examples_overlai": 69, "examples_rgb_color": 69, "examples_ybr_color": 69, "exc": 85, "exce": [139, 141], "except": [43, 47, 49, 50, 56, 76, 84, 85, 86, 97, 132, 133, 134, 157, 173, 175, 186, 199, 214, 251, 259, 299, 541, 576, 587, 590, 592, 595, 596, 599, 600, 603, 605, 606, 608, 612, 614, 616, 619, 622], "excess": [144, 146, 150, 587, 599, 608], "exclud": [24, 26, 27, 28, 52, 132, 215, 250, 258, 281], "exclude_s": [24, 26], "exclus": 541, "execut": [5, 13, 19, 21, 131, 546, 610], "exist": [9, 16, 30, 34, 38, 42, 43, 52, 53, 109, 132, 133, 134, 167, 175, 186, 199, 223, 231, 266, 275, 278, 290, 587, 607, 608, 611, 612, 613, 619], "exit": [0, 14, 24, 26, 27, 28], "exp": 541, "expand": [10, 26, 28, 280, 511, 548, 587, 606, 613, 616], "expand_ybr422": [587, 606, 608], "expandtab": [511, 548], "expans": [587, 605], "expect": [37, 42, 132, 133, 134, 144, 146, 150, 215, 216, 218, 221, 250, 251, 258, 262, 264, 281, 285, 287, 587, 597, 599, 603, 607, 612, 619], "experiment": [587, 594, 620], "explain": 53, "explan": [36, 37, 38, 622], "explanatori": 624, "explicit": [2, 12, 20, 26, 28, 39, 44, 45, 47, 56, 89, 132, 133, 134, 148, 159, 161, 162, 166, 186, 199, 218, 234, 235, 236, 251, 252, 260, 275, 279, 290, 302, 511, 538, 546, 587, 590, 591, 599, 600, 602, 605, 608, 614, 619, 622], "explicitli": [49, 50, 88, 587, 598, 605, 616], "explicitvrlittleendian": [12, 32, 620], "explor": [26, 27, 47], "expon": 541, "exponenti": 541, "export": [24, 26, 43, 587, 605], "exposur": 20, "expr": 213, "express": [26, 27, 511, 548, 618], "extend": [41, 44, 45, 67, 132, 133, 134, 139, 141, 142, 144, 146, 150, 214, 231, 244, 250, 258, 260, 278, 292, 587, 603, 608, 619], "extended_length": 67, "extended_offset": [67, 144, 146, 150, 250, 258], "extendedoffsett": [44, 141, 142, 619], "extendedoffsettablelength": [44, 141, 142, 619], "extens": [42, 78, 133, 587, 598, 605], "extern": [106, 587, 603, 605], "extra": [26, 28, 29, 42, 251, 587, 608, 618, 620], "extract": 97, "extrem": [587, 607], "ez_setup": [587, 595], "f": [0, 2, 3, 4, 8, 9, 10, 11, 12, 18, 20, 32, 128, 132, 133, 134, 173, 175, 262, 264, 285, 287, 511, 548, 612, 616, 619, 624], "f1ae573d9de5": [587, 594], "facilit": 251, "fact": [97, 614], "factor": [20, 51, 587, 594, 624], "factori": [214, 251, 259, 298, 540, 587, 590, 605, 608], "fail": [30, 34, 97, 132, 133, 134, 587, 590, 591, 596, 612, 613, 616], "failur": [56, 511, 548, 587, 602, 608, 612], "fairli": [53, 619], "fall": [222, 265], "fallback": [227, 270, 587, 598], "fals": [3, 4, 10, 14, 29, 30, 32, 34, 43, 47, 53, 56, 67, 69, 80, 81, 82, 85, 88, 90, 93, 94, 95, 96, 97, 101, 102, 103, 106, 115, 116, 125, 126, 128, 130, 132, 133, 134, 136, 139, 141, 159, 161, 162, 163, 165, 169, 170, 175, 177, 178, 181, 182, 183, 186, 199, 212, 218, 220, 231, 232, 250, 251, 252, 259, 262, 264, 273, 276, 278, 279, 285, 287, 288, 291, 296, 511, 538, 540, 541, 542, 544, 548, 550, 551, 552, 553, 554, 555, 556, 560, 561, 562, 564, 565, 567, 568, 572, 587, 593, 597, 602, 605, 607, 614, 616, 619, 620, 622, 624], "famili": [546, 619], "familiar": [40, 53, 614, 616, 622, 624], "family_comma_given": [9, 546], "family_nam": [546, 587, 605], "family_name_ideograph": 546, "family_name_phonet": 546, "far": [45, 128, 619], "farm": 546, "fast": [212, 298], "faster": [45, 587, 590, 602, 605], "fatq": 20, "favor": [587, 592, 606], "fc790f01f5": [587, 591], "fd": [20, 32], "fe": 151, "featur": [43, 53, 587, 595, 611, 612], "feedback": [587, 594], "fetch": [44, 50, 619], "fetch_data_fil": 618, "fewer": [159, 161, 162, 250, 550], "ff": [20, 151], "ffee": 151, "fffc": [2, 20, 26, 28, 614], "fffe": [148, 151, 152, 153], "ffffp10": [542, 545], "fidel": [20, 47], "fiduci": 173, "field": [11, 20, 26, 28, 42, 90, 128, 130, 148, 293, 511, 539, 543, 547, 548, 587, 605], "fifth": 546, "fig": [3, 622, 624], "fil": 20, "file": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 21, 25, 27, 28, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 69, 72, 74, 85, 89, 94, 100, 104, 105, 106, 107, 109, 132, 133, 134, 136, 140, 142, 156, 157, 160, 161, 163, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 188, 197, 198, 199, 201, 202, 203, 212, 231, 250, 251, 262, 264, 278, 285, 287, 576, 588, 589, 590, 592, 593, 596, 599, 600, 602, 603, 605, 606, 607, 608, 610, 612, 613, 614, 617, 619, 620, 622], "file_meta": [2, 12, 20, 26, 27, 28, 32, 42, 44, 45, 47, 132, 133, 134, 136, 140, 141, 142, 186, 199, 252, 279, 587, 590, 602, 608, 616, 619, 620, 622], "file_metadata": [587, 592], "file_path": [14, 212], "file_set": [174, 176], "file_value_tel": 128, "filebas": [14, 70, 148, 151, 156, 198, 576], "filedataset": [69, 106, 165, 169, 186, 576, 587, 590, 592, 605, 606, 608, 614, 616, 622], "fileexistserror": [132, 133, 134, 186, 587, 608], "fileid": 174, "fileinst": [10, 175, 176, 576, 587, 608, 616], "filemetadataset": [12, 24, 26, 32, 133, 136, 140, 141, 142, 168, 186, 199, 576, 587, 602, 614, 620], "filenam": [24, 26, 27, 28, 104, 105, 106, 107, 132, 133, 134, 167, 168, 175, 177, 186, 587, 602, 608, 612, 616], "filename_or_obj": [133, 167], "fileobj": [169, 614], "fileobj_typ": [133, 167], "fileread": [70, 212, 576, 613, 614], "fileset": [10, 576, 587, 603, 605, 606, 608], "filespec": [24, 25, 26, 27, 28], "filespec_help": [25, 26], "filespec_pars": [25, 26], "filetyp": [25, 26], "fileutil": [70, 576], "filewrit": [70, 132, 133, 134, 576, 614], "fill": [4, 29, 511, 548, 612, 613], "fillchar": [511, 548], "filter": [20, 26, 27, 132, 133, 134, 294], "final": [2, 17, 106, 139, 144, 145, 146, 186, 614, 619, 620, 624], "find": [10, 17, 20, 23, 25, 26, 44, 93, 132, 133, 134, 168, 175, 180, 181, 182, 184, 185, 511, 548, 612, 613, 614, 616, 620, 623, 624], "find_byt": [70, 181, 182, 587, 594], "find_delimit": [70, 182], "find_valu": [10, 175, 616], "finit": [541, 549], "first": [3, 20, 26, 28, 36, 37, 38, 39, 42, 43, 47, 50, 52, 53, 67, 76, 77, 79, 97, 106, 130, 132, 133, 134, 144, 145, 146, 147, 148, 150, 151, 154, 155, 170, 175, 183, 214, 248, 251, 252, 262, 264, 279, 283, 285, 287, 292, 293, 511, 541, 546, 548, 587, 598, 599, 600, 608, 611, 612, 613, 616, 619, 620, 622, 624], "firstnam": 12, "fit": [587, 597], "five": [53, 546], "fivechamb": 584, "fix": [132, 133, 134, 166, 209, 210, 595, 611, 612, 614], "fix_meta_info": [587, 598, 608], "fixer": [587, 596, 608], "fixm": 2, "fl": [20, 26, 28, 32, 614], "flag": [16, 20, 43, 96, 132, 133, 134, 170, 175, 180, 181, 182, 541, 587, 602, 605, 616], "flat": 616, "flatten": [132, 133, 134], "flexibl": [587, 608], "flip": [2, 8, 20], "float": [11, 32, 33, 36, 42, 50, 53, 81, 88, 128, 132, 133, 134, 163, 165, 166, 167, 169, 183, 213, 218, 231, 250, 258, 278, 288, 540, 541, 542, 543, 544, 545, 549, 565, 580, 587, 593, 594, 600, 603, 605, 607, 609, 614, 619, 622], "float32": 620, "float64": [224, 226, 228, 229, 267, 269, 271, 272, 554, 620], "floatpixeldata": [29, 30, 50, 250, 258, 282, 587, 605, 620, 622], "fly": [587, 603], "fma": [541, 623], "fname": 4, "focal": 20, "folder": [587, 590, 608], "follow": [10, 25, 26, 27, 28, 29, 30, 34, 36, 39, 42, 43, 44, 45, 50, 53, 67, 69, 132, 133, 134, 136, 147, 148, 151, 175, 183, 186, 199, 230, 231, 251, 259, 262, 264, 275, 277, 278, 285, 287, 290, 511, 541, 546, 548, 587, 600, 603, 605, 608, 612, 613, 614, 616, 619, 620, 623, 624], "font": 0, "foo": [34, 618], "for_addit": [174, 616], "for_mov": 174, "for_remov": 174, "forc": [16, 29, 132, 133, 134, 157, 165, 169, 170, 175, 186, 231, 278, 587, 591, 593, 595, 614], "force_encod": [186, 587, 608], "force_implicit": 175, "force_rgb": 29, "force_ybr": 29, "foreign": [20, 587, 588], "forg": [618, 619, 620, 622, 624], "forget": [18, 52], "fork": [587, 607, 612, 613, 618], "form": [20, 39, 49, 50, 51, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 132, 133, 134, 251, 262, 264, 285, 287, 297, 537, 546, 622], "format": [6, 7, 12, 13, 20, 24, 26, 27, 28, 32, 34, 42, 43, 45, 128, 132, 133, 134, 139, 141, 143, 148, 165, 186, 201, 218, 221, 511, 539, 541, 542, 543, 546, 547, 548, 565, 587, 588, 589, 590, 596, 599, 605, 606, 608, 610, 614, 616, 618, 619, 622], "format_map": [511, 548], "format_number_as_d": [60, 587, 605], "format_str": 546, "formatted_lin": [132, 133, 134, 587, 589], "found": [10, 47, 49, 50, 51, 106, 132, 133, 134, 165, 170, 175, 180, 183, 251, 259, 294, 511, 548, 614, 616, 618, 619, 622], "found_at": 180, "foundat": 623, "four": [53, 97, 175, 183], "fourchamb": 584, "fourth": 546, "fp": [16, 148, 151, 156, 163, 165, 166, 170, 171, 172, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "fpa": 20, "fraction": [26, 27, 28], "fractiongroupnumb": [24, 26], "fractiongroupsequ": [24, 26, 27, 28], "fragment": [50, 67, 137, 138, 139, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 587, 600, 608], "fragments_per_fram": [53, 139], "frame": [2, 8, 20, 29, 30, 32, 34, 37, 39, 44, 50, 67, 69, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 215, 220, 223, 231, 232, 250, 251, 258, 259, 262, 263, 264, 266, 273, 275, 278, 285, 286, 287, 289, 290, 587, 596, 598, 600, 605, 608, 609, 619, 622], "frame1": [139, 140, 142], "frame2": [139, 140, 142], "frame3": [140, 142], "frame_iter": 619, "frame_length": [250, 258], "framework": 618, "free": [36, 37, 132, 133, 134], "frequenc": [2, 8, 20, 51, 624], "frequent": 616, "friendli": [511, 614, 616], "from": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 67, 69, 72, 76, 77, 79, 81, 84, 85, 91, 97, 108, 109, 118, 119, 128, 129, 130, 131, 132, 133, 134, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 156, 159, 160, 161, 162, 163, 164, 167, 170, 173, 174, 175, 176, 177, 184, 185, 186, 198, 199, 201, 206, 209, 210, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 230, 231, 232, 233, 250, 251, 252, 258, 262, 264, 266, 267, 268, 269, 273, 274, 275, 277, 278, 279, 285, 287, 290, 292, 511, 537, 539, 541, 542, 543, 545, 546, 547, 548, 550, 568, 584, 587, 590, 591, 592, 593, 594, 595, 598, 599, 602, 603, 604, 605, 608, 610, 612, 613, 614, 616, 618, 619, 620, 622, 623, 624], "from_byt": [296, 544], "from_float": 541, "from_json": [128, 132, 133, 134, 587, 600, 603, 615], "from_named_compon": [546, 587, 605], "from_named_components_veterinari": [546, 587, 605], "fromhex": [542, 545], "fromisocalendar": [539, 543], "fromisoformat": [539, 543, 547], "fromordin": [539, 543], "fromtimestamp": [539, 543], "front": [511, 548, 612], "full": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 37, 47, 106, 133, 165, 250, 541, 587, 596, 597, 598, 603, 616], "func": [25, 26, 131, 206, 613], "function": [17, 20, 25, 26, 27, 29, 30, 32, 34, 36, 37, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 55, 58, 59, 67, 69, 70, 72, 74, 81, 91, 98, 102, 109, 110, 128, 131, 132, 133, 134, 137, 138, 148, 149, 151, 156, 163, 166, 168, 169, 173, 175, 184, 185, 186, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 233, 250, 251, 252, 258, 259, 262, 264, 265, 266, 274, 279, 280, 285, 287, 294, 297, 457, 539, 540, 541, 543, 549, 572, 573, 576, 577, 579, 582, 583, 587, 588, 589, 590, 595, 596, 598, 599, 600, 603, 605, 608, 613, 614, 615, 616, 619, 620, 622, 624], "further": [39, 616, 619, 622, 623], "furthermor": 549, "furthest": [176, 184, 185], "fuse": 541, "futur": [46, 96, 132, 133, 134, 587, 593, 603, 623], "future_behavior": [43, 576, 587, 603], "f\u00e9lix": [587, 594], "g": [2, 8, 9, 11, 12, 17, 20, 22, 24, 26, 27, 30, 34, 38, 39, 42, 43, 49, 50, 53, 56, 85, 128, 132, 133, 134, 135, 165, 214, 215, 251, 259, 292, 539, 541, 546, 571, 587, 590, 597, 599, 603, 608, 614, 620], "g1": 39, "g2": 39, "gain": 20, "galleri": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 610], "gantri": [11, 20, 26, 28], "gantryangl": 11, "gb18030": 22, "gcc": 613, "gdcm": [30, 34, 38, 44, 45, 132, 133, 134, 216, 231, 241, 242, 243, 244, 245, 246, 247, 248, 257, 278, 587, 590, 596, 599, 603, 605, 606, 608, 622], "gdcm_handler": 97, "ge": 20, "ge_genesis_ff": [20, 47], "gems_acqu_01": 20, "gems_iden_01": [20, 47], "gems_imag_01": 20, "gems_imps_01": 20, "gems_parm_01": 20, "gems_pati_01": 20, "gems_rela_01": 20, "gems_sers_01": 20, "gems_stdy_01": 20, "gender": 53, "gener": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 25, 26, 27, 34, 38, 42, 43, 45, 52, 132, 133, 134, 137, 138, 147, 153, 163, 169, 177, 231, 252, 275, 278, 279, 290, 292, 297, 511, 537, 545, 572, 587, 589, 590, 594, 596, 608, 611, 613, 619], "generate_filenam": [576, 587, 608], "generate_frag": [137, 138, 148, 156, 587, 608], "generate_fragmented_fram": [147, 587, 608], "generate_fram": [137, 138, 149, 220, 587, 608, 622], "generate_instance_uid": [132, 133, 134, 231, 252, 275, 278, 279, 290, 619], "generate_multiplex": [3, 132, 133, 134, 572, 587, 603, 624], "generate_pixel_data": [587, 600, 608], "generate_pixel_data_frag": [587, 608], "generate_pixel_data_fram": [587, 608], "generate_uid": [10, 38, 132, 133, 134, 175, 231, 252, 275, 278, 279, 290, 587, 599, 608], "genesi": 20, "geometri": 0, "get": [2, 9, 10, 14, 26, 27, 32, 42, 43, 45, 47, 48, 49, 50, 51, 53, 56, 93, 97, 128, 132, 133, 134, 159, 161, 162, 173, 288, 576, 587, 590, 591, 599, 603, 605, 612, 613, 617, 618, 619, 622], "get_charset_fil": 576, "get_data": 250, "get_decod": [576, 622], "get_encod": 576, "get_entri": 119, "get_expected_length": [215, 587, 608], "get_fram": [258, 587, 608, 622], "get_frame_offset": [587, 600, 608], "get_image_pixel_id": [587, 608], "get_item": [132, 133, 134, 587, 608], "get_j2k_paramet": [587, 608], "get_nr_fram": [587, 608], "get_opt": [30, 34, 250, 258], "get_overlay_arrai": 215, "get_palette_fil": [576, 587, 600], "get_path": [42, 50, 69, 576, 614, 616, 622], "get_pixeldata": [97, 216, 217, 218, 219, 220, 221], "get_private_entri": 118, "get_private_item": [132, 133, 134], "get_tag": 135, "get_testdata_fil": [9, 10, 11, 576, 587, 603, 605, 606, 608, 613], "gggg": 614, "ggggeeee": 296, "gildong": [22, 546], "git": [24, 26, 27, 612, 613, 618], "github": [23, 587, 596, 611, 612, 613, 618], "give": [541, 549, 587, 589, 590, 614], "given": [2, 11, 24, 26, 27, 28, 29, 32, 36, 37, 45, 50, 51, 67, 77, 79, 128, 129, 131, 132, 133, 134, 135, 136, 144, 146, 159, 161, 162, 165, 167, 173, 175, 186, 215, 218, 220, 221, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 280, 296, 511, 541, 542, 544, 546, 548, 565, 572, 587, 602, 605, 614, 616, 618, 619, 622, 624], "given_nam": [546, 587, 605], "given_name_ideograph": 546, "given_name_phonet": 546, "glob": [4, 10, 104, 105, 107, 616], "global": [99, 207, 587, 606], "glossari": [36, 37, 38, 40, 622], "glow": 20, "gmail": [2, 8, 9, 11, 12, 17, 20, 22], "gn": 39, "go": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 168, 612, 613, 614, 616, 618, 620], "gone": 613, "good": [52, 53, 612, 613, 619], "googl": 611, "got": 613, "goyett": [587, 595], "gracefulli": [587, 603, 608], "grai": [9, 48, 622], "graphic": [0, 50], "grayscal": [30, 34, 36, 37, 38, 39, 50, 132, 133, 134, 275, 290, 622], "greater": [32, 39, 56, 132, 133, 134, 143, 148, 231, 275, 278, 289, 290, 537, 541, 587, 596, 608, 615], "greek": [587, 588], "green": [36, 37, 38, 39, 587, 602], "gregorian": [539, 543], "grep": [26, 27], "greyscal": [36, 37], "grid": 0, "group": [2, 12, 17, 20, 26, 27, 28, 39, 42, 47, 49, 51, 118, 120, 128, 132, 133, 134, 135, 136, 165, 173, 175, 186, 199, 215, 250, 258, 262, 264, 285, 287, 296, 297, 298, 546, 572, 576, 587, 590, 593, 597, 602, 603, 611, 612, 614, 622, 624], "group_dataset": [132, 133, 134, 622], "group_elem": 298, "grouplength": 120, "guarante": [43, 45, 47, 541], "gui": [587, 588], "guid": [30, 34, 41, 44, 53, 132, 133, 134, 231, 278, 576, 587, 599, 605, 608, 611, 613, 614, 619], "guillaum": [2, 8, 9, 11, 12, 17, 20, 22], "gunnar": [587, 594], "gzip": [587, 593, 599], "h": [2, 8, 12, 20, 22, 24, 26, 27, 28], "ha": [2, 10, 14, 20, 23, 24, 25, 26, 27, 30, 32, 34, 36, 37, 38, 39, 43, 44, 47, 50, 52, 53, 82, 89, 91, 128, 132, 133, 134, 143, 144, 146, 148, 150, 151, 166, 167, 174, 175, 176, 186, 187, 198, 214, 215, 216, 217, 218, 219, 220, 221, 250, 258, 263, 284, 286, 296, 511, 537, 538, 540, 541, 548, 572, 587, 589, 590, 592, 597, 598, 600, 601, 602, 607, 608, 612, 613, 614, 615, 616, 618, 619, 620, 622, 624], "habit": 614, "had": [538, 587, 598, 605, 612], "halchenko": [587, 595], "halv": 280, "hand": [39, 52, 541, 587, 603], "handi": 42, "handl": [46, 47, 50, 52, 76, 97, 128, 132, 133, 134, 182, 200, 511, 548, 573, 576, 587, 588, 591, 593, 595, 596, 597, 598, 599, 600, 602, 603, 605, 606, 607, 608, 614, 615, 618, 622], "handler": [44, 53, 80, 94, 97, 132, 133, 134, 215, 216, 217, 218, 219, 220, 221, 572, 576, 587, 596, 598, 600, 601, 602, 603, 605, 606, 608, 612, 615], "handler_nam": [132, 133, 134], "hang": 173, "happi": [612, 613], "harder": 42, "has_bot": [139, 140, 141], "has_inst": 176, "hasattr": 4, "hash": [537, 587, 599, 605], "hasn": [147, 612, 613], "have": [12, 14, 25, 26, 27, 28, 32, 36, 37, 38, 39, 42, 43, 44, 45, 47, 49, 50, 52, 53, 97, 128, 132, 133, 134, 136, 139, 141, 144, 145, 148, 151, 165, 168, 175, 177, 186, 199, 215, 218, 220, 221, 230, 231, 250, 251, 258, 259, 262, 263, 264, 277, 278, 285, 286, 287, 511, 538, 541, 548, 551, 562, 572, 587, 593, 596, 598, 599, 602, 606, 608, 611, 612, 613, 614, 615, 616, 618, 619, 620, 622, 624], "haven": [53, 587, 608, 612, 614], "hdr": 20, "head": [10, 53, 616], "header": [20, 36, 157, 165, 170, 587, 589, 608, 614], "health": [24, 26, 52], "height": 20, "helic": 20, "hello": [16, 614], "help": [14, 24, 25, 26, 27, 28, 43, 44, 47, 166, 587, 590, 598, 605, 607, 611, 612, 613], "helper": 135, "henc": [39, 186], "here": [10, 24, 26, 28, 30, 34, 47, 54, 99, 132, 133, 134, 182, 251, 259, 613, 614, 615, 616, 623], "heurist": [166, 587, 596], "hex": [49, 53, 128, 132, 133, 134, 135, 542, 545, 587, 590], "hexadecim": [542, 545, 614], "hf": [2, 8, 20], "hh": [543, 547], "hierarch": [6, 21, 147, 247, 248, 289, 587, 600, 610], "hierarchi": [175, 616], "high": [2, 8, 20, 37, 38, 39, 45, 53, 111, 132, 133, 134, 237, 238, 239, 275, 290, 587, 600, 622], "highbit": [619, 620], "higher": [36, 38, 40, 132, 133, 134, 150, 541, 587, 590, 615], "highest": [511, 548, 587, 605], "highli": [587, 607], "hint": 32, "hispe": 20, "histogram": 20, "histori": 20, "hold": [214, 292, 296, 544], "holmberg": [587, 595], "holog": [587, 606], "home": [69, 616], "hong": [22, 546], "hood": 42, "hook": [98, 131, 576, 587, 608], "horiz": 20, "horizont": 280, "hors": 546, "host": [20, 296, 544], "hot_iron": [222, 265], "hot_metal_blu": [222, 265], "hounsfield": [50, 622], "hour": [543, 547], "how": [2, 3, 8, 9, 10, 12, 14, 16, 17, 18, 20, 24, 26, 30, 34, 39, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 109, 128, 144, 145, 175, 587, 588, 592, 612, 613, 614, 615, 616, 617, 619, 620, 622, 624], "howev": [10, 25, 26, 29, 32, 36, 37, 38, 39, 41, 42, 44, 45, 132, 133, 134, 147, 148, 151, 214, 275, 290, 545, 612, 613, 614, 616, 619, 622], "htj2k": [41, 260, 587, 608], "htj2klossless": [587, 608], "htj2klosslessrpcl": [587, 608], "html": [53, 613], "http": [23, 53, 612, 613, 615, 618], "hu": [50, 622], "human": [511, 546, 614], "hypothet": 53, "hz": [3, 51, 624], "i": [0, 2, 3, 4, 10, 17, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 60, 65, 69, 71, 73, 76, 77, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 96, 97, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 157, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 198, 199, 200, 203, 206, 209, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 250, 251, 252, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 299, 511, 537, 539, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 560, 561, 562, 564, 565, 567, 568, 573, 574, 584, 587, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 611, 612, 613, 614, 615, 616, 618, 619, 620, 622, 623, 624], "i2": 619, "ibh": 20, "icc": [223, 233, 266, 274, 587, 608], "icc_profil": [233, 274], "icon": [612, 613], "id": [0, 2, 8, 9, 10, 12, 17, 20, 47, 132, 133, 134, 135, 174, 175, 176, 177, 178, 282, 587, 589, 606, 614, 616], "id00001": [26, 28], "idea": [612, 613], "ideal": 45, "iden": 20, "ident": [541, 587, 593, 622], "identif": 10, "identifi": [32, 39, 43, 47, 52, 195, 294, 511, 548, 587, 608], "ideograph": 546, "idx": 0, "ie": 128, "iec": [36, 37, 39, 44, 232, 273, 283, 396, 401, 404, 537, 619], "ignor": [43, 56, 76, 84, 85, 111, 128, 132, 133, 134, 179, 511, 541, 548, 566, 576, 587, 601, 605, 608, 613], "ii": [614, 624], "iii": 624, "illustr": [1, 3, 4, 6, 7, 8, 9, 15, 16, 18, 20, 36, 37, 42, 54, 619], "im": [2, 620, 622], "im000000": [10, 616], "im000001": [10, 616], "im000002": [10, 616], "im000003": [10, 616], "im000004": 10, "im000005": 10, "im000006": 10, "im1": 622, "im2": 622, "imag": [5, 8, 9, 10, 12, 17, 20, 26, 28, 30, 33, 34, 44, 45, 46, 47, 49, 50, 69, 132, 133, 134, 140, 141, 142, 143, 147, 148, 151, 173, 175, 216, 218, 219, 220, 221, 222, 230, 231, 232, 237, 238, 239, 241, 242, 245, 246, 250, 251, 252, 253, 254, 255, 256, 258, 262, 264, 265, 273, 275, 277, 278, 279, 281, 284, 285, 287, 288, 289, 290, 296, 542, 544, 545, 579, 582, 587, 590, 597, 599, 603, 605, 608, 609, 610, 614, 616, 618, 619, 620, 622], "image_handl": [587, 598, 599], "image_process": [5, 610], "imagecm": [223, 233, 266, 274], "imagecmstransform": [223, 233, 266, 274], "imagecodec": [30, 34], "imageri": 622, "imagetyp": 614, "imaginari": [296, 542, 544, 545], "img2d": 4, "img3d": 4, "img_shap": 4, "imit": 96, "immedi": 50, "immut": [29, 251, 539, 543, 547, 587, 599], "implant": [173, 175], "implement": [2, 12, 20, 26, 27, 28, 30, 34, 42, 47, 52, 136, 161, 162, 199, 449, 511, 548, 587, 603, 614], "implementationclassuid": 12, "implicit": [16, 26, 27, 39, 42, 45, 89, 132, 133, 134, 159, 161, 162, 163, 166, 175, 186, 218, 240, 260, 511, 538, 560, 587, 590, 597, 599, 605, 608], "implicit_vr": [132, 133, 134, 186, 511, 538, 587, 608], "implicitli": 44, "import": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 30, 32, 34, 36, 37, 38, 39, 42, 43, 44, 45, 47, 48, 49, 50, 51, 69, 84, 85, 108, 109, 128, 132, 133, 134, 140, 141, 142, 173, 175, 206, 209, 210, 231, 251, 259, 262, 264, 278, 285, 287, 511, 537, 584, 587, 593, 596, 608, 609, 612, 613, 614, 615, 616, 618, 619, 620, 622, 623, 624], "import_path": [251, 259], "importantli": [616, 622], "importerror": [216, 217, 219, 554, 556, 587, 604, 612], "imposs": 175, "improp": [587, 600, 602], "improv": [43, 587, 594, 597, 598, 605, 607, 608, 611, 619], "imshow": [4, 9, 48, 620, 622], "imxxxxxx": 175, "includ": [24, 25, 26, 29, 43, 49, 52, 128, 132, 133, 134, 139, 173, 175, 186, 215, 250, 258, 281, 299, 511, 541, 543, 547, 548, 576, 587, 589, 591, 593, 595, 596, 608, 609, 612, 613, 614, 616, 619, 624], "include_orphan": 175, "inclus": [37, 38, 39], "incompat": [587, 590, 596, 618], "incorrect": [147, 251, 259, 587, 591, 597, 599, 600, 608], "incorrectli": [587, 588], "incorrectmodalityworklistentri": 623, "increas": [36, 132, 133, 134, 231, 278, 587, 590, 607, 619], "increment": [20, 177], "incur": 549, "indent": [8, 132, 133, 134, 176, 614], "indent_char": [132, 176], "indent_format": [132, 133, 134], "indent_str": 8, "independ": 186, "index": [36, 37, 38, 42, 50, 51, 130, 132, 133, 134, 150, 175, 176, 177, 214, 227, 228, 229, 250, 251, 258, 259, 264, 270, 271, 272, 287, 292, 293, 511, 548, 572, 587, 603, 608, 613, 622, 624], "indexerror": [214, 292], "indic": [2, 8, 20, 39, 47, 49, 67, 97, 128, 132, 133, 134, 159, 161, 162, 251, 262, 285, 296, 541, 544, 587, 594, 612, 613, 614, 622], "indirectli": [30, 34], "individu": [52, 232, 273, 546, 584, 587, 593, 603, 605], "inequ": [587, 597, 598], "inexact": 541, "inf": [541, 549], "infer_sq_for_un_vr": [56, 587, 606], "infil": 614, "infin": [541, 542, 545], "infinit": 541, "info": [11, 20, 163, 166, 169, 181, 182, 183, 511, 587, 590, 591, 593, 595], "inform": [2, 6, 7, 8, 9, 12, 13, 20, 24, 26, 27, 28, 31, 35, 40, 42, 44, 47, 50, 52, 53, 80, 100, 128, 132, 133, 134, 136, 165, 168, 170, 186, 199, 231, 251, 252, 259, 262, 264, 278, 279, 285, 287, 546, 587, 588, 590, 593, 596, 600, 602, 603, 608, 610, 612, 613, 614, 619, 622, 624], "inherit": [32, 140, 142, 587, 605, 608], "init": [587, 605], "init_valu": 134, "initi": [53, 133, 134, 135, 181, 182, 206, 214, 292, 546, 612, 622], "initial_byt": 159, "initialis": [587, 608], "inlin": [132, 133, 134, 587, 608, 615], "inlinebinari": [128, 132, 133, 134], "input": [20, 24, 26, 50, 214, 223, 232, 250, 263, 266, 273, 286, 546, 587, 603], "input_output": [13, 610], "insensit": [42, 132, 133, 134, 294], "insert": [0, 214, 292, 511, 548, 613, 614], "insid": [17, 587, 589, 620], "instal": [43, 45, 54, 97, 132, 133, 134, 220, 251, 252, 259, 262, 264, 279, 285, 287, 587, 588, 595, 605, 613, 614, 617, 619, 620, 622, 624], "instanc": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 38, 42, 45, 47, 50, 52, 69, 78, 88, 128, 129, 131, 132, 133, 134, 136, 140, 142, 159, 161, 162, 165, 166, 173, 174, 175, 176, 186, 199, 206, 214, 222, 223, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 264, 265, 266, 275, 278, 279, 285, 287, 290, 292, 295, 511, 540, 541, 542, 548, 575, 580, 581, 587, 599, 605, 608, 614, 619, 620, 622, 623], "instancecreationd": [24, 26], "instancecreationtim": [24, 26], "instancenumb": 616, "instead": [2, 29, 34, 37, 42, 50, 51, 52, 56, 91, 92, 95, 98, 129, 132, 133, 134, 147, 148, 149, 151, 156, 163, 173, 175, 186, 206, 231, 251, 278, 511, 545, 546, 548, 573, 574, 587, 590, 593, 597, 598, 599, 602, 603, 605, 606, 608, 612, 613, 614, 615, 616, 618, 620, 622, 624], "institut": [2, 8, 20], "instruct": [612, 613, 614], "int": [29, 30, 32, 33, 34, 42, 56, 67, 77, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 139, 143, 144, 146, 147, 149, 150, 151, 153, 154, 155, 159, 161, 162, 163, 164, 165, 166, 169, 171, 172, 175, 176, 177, 180, 181, 182, 183, 198, 213, 214, 215, 223, 227, 228, 229, 231, 233, 250, 251, 258, 259, 262, 263, 264, 266, 270, 271, 272, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 290, 292, 296, 297, 298, 511, 539, 540, 541, 542, 543, 544, 545, 546, 548, 560, 565, 568, 572, 614, 618, 620], "int16": [42, 50, 51, 132, 133, 134, 275, 290, 620, 622, 624], "int64": 556, "int8": [132, 133, 134, 275, 290], "integ": [29, 30, 32, 34, 37, 39, 50, 151, 214, 250, 258, 263, 284, 286, 288, 292, 296, 511, 537, 541, 542, 544, 545, 548, 587, 591, 593, 603, 619, 622, 624], "integr": 20, "intend": [30, 34, 38, 39, 132, 133, 134, 250, 258, 259, 612], "intens": [33, 36, 37, 38, 39, 619], "intent": [223, 233, 266, 274], "intention": [511, 548], "interact": [10, 42, 47, 132, 133, 134, 616], "intercept": [20, 42, 224, 226, 267, 269], "interchang": [50, 616], "interest": [14, 49, 611, 614, 622], "interfac": [27, 40, 294, 584, 587, 605, 608, 618], "interleav": [33, 37, 624], "interleave_mod": 33, "intermedi": [42, 54, 541], "intern": [128, 132, 133, 134, 163, 594], "interpret": [2, 8, 20, 29, 38, 39, 49, 50, 132, 133, 134, 216, 217, 218, 219, 220, 221, 231, 232, 250, 251, 252, 258, 262, 264, 273, 275, 278, 279, 280, 285, 287, 290, 511, 539, 548, 587, 600, 608, 619, 620, 622, 624], "interscan": 20, "interv": [619, 620, 624], "intricaci": 251, "introduc": [587, 606, 612, 622], "introduct": [28, 34, 46, 54, 612, 613, 616, 617, 621, 624], "intuit": 619, "invalid": [43, 56, 76, 77, 85, 89, 90, 136, 209, 284, 537, 587, 599, 603, 605, 607, 608, 609], "invalid_key_behavior": [96, 576, 587, 603], "invalid_keyword_behavior": [96, 576, 587, 603], "invaliddicomerror": [165, 170, 576, 587, 591, 614], "invalidoper": 541, "invers": [39, 539, 541, 543], "io": [14, 16, 32, 128, 133, 140, 142, 159, 161, 162, 576, 587, 608, 614], "iobas": [161, 162], "iod": [39, 186, 288, 616, 620, 624], "ipsum": 537, "ipynb": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "ipython": [132, 133, 134, 294, 587, 588], "ir": [587, 600], "irrevers": 36, "is_arrai": [250, 258], "is_avail": [30, 34, 97, 215, 216, 217, 218, 219, 220, 221, 251, 259, 572, 587, 598], "is_binari": [250, 258], "is_buff": [128, 130, 250, 258], "is_canon": 541, "is_cid": 294, "is_compress": [511, 619, 622], "is_conformant_file_id": 576, "is_dataset": [250, 258], "is_decompress": [132, 133, 134, 587, 609], "is_defl": 511, "is_dicom": [576, 587, 596], "is_empti": 128, "is_encapsul": [251, 259, 511], "is_fil": [10, 616], "is_finit": 541, "is_implicit_vr": [16, 44, 130, 132, 133, 134, 159, 161, 162, 163, 164, 166, 171, 172, 186, 198, 511, 560, 587, 599, 608], "is_infinit": 541, "is_integ": [542, 545], "is_little_endian": [14, 16, 44, 130, 132, 133, 134, 148, 151, 159, 161, 162, 163, 166, 171, 172, 179, 181, 182, 183, 184, 185, 186, 198, 511, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 587, 608], "is_n": [251, 259], "is_nan": 541, "is_norm": 541, "is_original_encod": [132, 133, 134], "is_priv": [42, 128, 174, 296, 511, 587, 596], "is_private_cr": 296, "is_qnan": 541, "is_raw": 130, "is_retir": [16, 108, 109, 110, 118, 119, 128, 511, 587, 596], "is_root": 176, "is_sign": [283, 541], "is_snan": 541, "is_stag": [174, 175, 616], "is_subnorm": 541, "is_transfer_syntax": 511, "is_undefined_length": [44, 128, 132, 133, 134, 252, 279, 587, 600], "is_valid": 511, "is_valid_d": [60, 587, 605], "is_zero": 541, "isalnum": [511, 548], "isalpha": [511, 548], "isascii": [511, 548], "isdecim": [511, 548], "isdigit": [511, 548], "isfloat": [60, 587, 607], "isidentifi": [511, 548], "isinst": 619, "iskeyword": [511, 548], "islow": [511, 548], "ismultivalu": [587, 599, 602], "isn": [37, 132, 133, 134, 144, 146, 150, 166, 186, 288, 511, 537, 587, 599, 603, 608, 613, 614, 622], "isnumer": [511, 548], "iso": [26, 27, 36, 37, 39, 44, 232, 273, 283, 396, 401, 404, 537, 539, 543, 547, 587, 600, 619], "iso2022_jp": 22, "iso8859": [22, 132, 133, 134, 163, 166, 198, 560], "iso_ir": [10, 20, 26, 28, 47, 78, 614, 615, 616], "iso_ir_100": 614, "isocalendar": [539, 543], "isoformat": [539, 543, 547], "isol": 618, "isovue300": 20, "isoweekdai": [539, 543], "isprint": [511, 548], "isspac": [511, 548], "isstr": [587, 599], "isstringorstringlist": [587, 599], "issu": [24, 26, 28, 30, 34, 37, 52, 76, 77, 79, 87, 132, 133, 134, 284, 587, 590, 591, 592, 593, 594, 599, 608, 611, 612, 618], "issue18": [587, 588], "issue22": [587, 588], "issue27": [587, 588], "issue33": [587, 588], "issue36": [587, 589], "issue38": [587, 589], "issue40": [587, 589], "issue41": [587, 589], "istitl": [511, 548], "isupp": [511, 548], "ital": 53, "italic": 53, "item": [0, 6, 8, 9, 15, 19, 20, 24, 26, 27, 28, 32, 42, 51, 52, 53, 67, 128, 132, 133, 134, 139, 141, 143, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 172, 179, 203, 214, 292, 587, 588, 589, 590, 593, 596, 599, 600, 605, 606, 610, 614, 616, 624], "itemdelimitertag": 166, "itemis": 153, "items": [132, 133, 134, 251, 275, 290], "iter": [10, 17, 42, 132, 133, 134, 143, 144, 145, 146, 147, 148, 149, 153, 163, 176, 177, 184, 187, 214, 220, 250, 251, 259, 262, 285, 292, 296, 299, 511, 544, 548, 587, 589, 597, 608, 616, 622], "iter_arrai": [29, 251, 622], "iter_buff": [29, 251], "iter_decod": 250, "iter_encod": [259, 619], "iter_pixel": [29, 45, 132, 133, 134, 576, 587, 608, 620, 622], "iteral": [132, 133, 134, 587, 589], "itis_tsn": 623, "its": [10, 24, 25, 26, 27, 29, 30, 32, 34, 36, 37, 38, 39, 42, 43, 82, 128, 132, 133, 134, 151, 175, 176, 183, 214, 215, 216, 217, 218, 219, 220, 221, 223, 233, 252, 266, 274, 279, 511, 541, 548, 572, 587, 598, 603, 608, 614, 616, 619, 622], "itself": [10, 38, 42, 47, 53, 106, 161, 162, 184, 185, 511, 548, 587, 603, 612, 613, 616], "itu": [36, 37, 232, 273, 537, 619], "iv": 20, "j": 22, "j2k": [32, 140, 142, 587, 608], "j2k_cr": [36, 132, 133, 134, 231, 278, 619], "j2k_psnr": [36, 132, 133, 134, 231, 278, 619], "jame": 14, "jan": [84, 614], "januari": [23, 539, 543], "japanes": [587, 588, 593, 596], "jfk": 20, "ji": [587, 599], "jls_error": [37, 132, 133, 134, 231, 278, 619], "joan": [128, 132], "john": [132, 546], "join": [11, 511, 548, 620], "jonathan": [587, 594, 595], "jp2": [36, 587, 608], "jpe2000lossless": 36, "jpeg": [29, 32, 35, 39, 41, 44, 45, 50, 80, 132, 133, 134, 139, 141, 147, 216, 217, 218, 219, 220, 221, 231, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 251, 253, 254, 255, 256, 260, 261, 262, 264, 278, 283, 285, 287, 289, 396, 401, 404, 511, 587, 598, 600, 602, 603, 605, 608, 618, 622], "jpeg2000": [30, 34, 36, 45, 147, 260, 587, 598, 600, 619], "jpeg2000compressedpixeltransfersyntax": [587, 603, 608], "jpeg2000encod": [33, 36, 587, 608], "jpeg2000lossi": [587, 598], "jpeg2000lossless": [32, 140, 141, 142, 619], "jpeg2000losslessencod": [33, 36, 587, 608], "jpeg2000mc": [587, 603, 608], "jpeg2000mclossless": [587, 603, 608], "jpeg2000multicompon": [587, 598, 603, 608, 612], "jpeg2000multicomponentlossless": [587, 598, 603, 608, 612], "jpeg2000transfersyntax": [587, 603, 608], "jpeg2k": [44, 69, 587, 598, 619, 622], "jpeg2kimageplugin": [41, 45], "jpeg_l": [45, 132, 133, 134, 217, 587, 596, 608], "jpeg_ls_handl": 97, "jpegbaselin": [587, 598, 603, 608], "jpegbaseline8bit": [44, 511, 587, 603, 608, 619], "jpegbaselinelossy12bit": [587, 598], "jpegbaselinelossy8bit": [587, 598], "jpegextend": [587, 598, 603, 608], "jpegextended12bit": [587, 603, 608], "jpegimageplugin": 45, "jpeglossless": [587, 603, 608], "jpeglosslessp14": [587, 598], "jpeglosslesssv1": [587, 603, 608], "jpeglossycompressedpixeltransfersyntax": [587, 603, 608], "jpeglslossi": [587, 603, 608], "jpeglslossless": [37, 619], "jpeglslosslessencod": [33, 37, 587, 608], "jpeglsnearlossless": [37, 587, 603, 608, 619], "jpeglsnearlosslessencod": [33, 37, 587, 608], "jpeglssupportedcompressedpixeltransfersyntax": [587, 603, 608], "jpeglstransfersyntax": [587, 603, 608], "jpegtransfersyntax": [587, 603, 608], "jpg": [587, 605], "jpiphtj2kreferenc": [587, 608], "jpiphtj2kreferenceddefl": [587, 608], "json": [128, 132, 133, 134, 296, 587, 599, 600, 604, 605, 608, 617], "json_data": 615, "json_dataset": [132, 133, 134], "json_kei": [296, 587, 607], "jsonmodel": 132, "juli": 23, "julien": [587, 595], "june": 23, "jupyt": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "just": [10, 12, 14, 25, 26, 27, 28, 42, 47, 52, 89, 128, 132, 133, 134, 163, 231, 278, 587, 599, 603, 612, 613, 614, 616, 622], "justifi": [511, 548], "k": [177, 587, 608], "kb": 165, "keep": [36, 37, 38, 132, 133, 134, 175, 231, 252, 278, 279, 616, 618, 619, 620, 622], "keep_def": [132, 133, 134, 587, 608], "keepend": [511, 548], "kei": [4, 33, 42, 85, 128, 132, 133, 134, 135, 173, 176, 215, 230, 277, 294, 296, 511, 548, 587, 603, 612], "kept": [132, 133, 134, 541, 587, 589, 618], "kernel": 20, "keyerror": [112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 132, 133, 134, 587, 608, 614], "keysview": 295, "keyword": [17, 26, 27, 28, 29, 42, 47, 50, 51, 53, 84, 85, 92, 106, 108, 109, 117, 118, 120, 125, 127, 128, 131, 132, 133, 134, 165, 175, 184, 185, 186, 206, 208, 209, 210, 211, 215, 218, 220, 221, 228, 231, 232, 250, 251, 252, 258, 259, 262, 263, 264, 271, 273, 276, 278, 279, 281, 282, 285, 286, 287, 288, 289, 291, 294, 297, 511, 548, 572, 584, 587, 591, 593, 596, 598, 599, 603, 607, 608, 613, 614, 616, 618, 622, 623], "khz": 624, "kind": 47, "klein": [587, 591], "know": [10, 39, 42, 47, 614, 615, 616], "knowledg": 622, "known": [38, 39, 41, 42, 43, 47, 50, 56, 84, 96, 128, 129, 132, 133, 134, 222, 265, 296, 298, 544, 587, 597, 600, 602, 603, 605, 614, 623], "korean": [546, 587, 593], "kvp": 20, "kwarg": [131, 132, 133, 134, 159, 160, 161, 162, 175, 186, 206, 208, 209, 210, 211, 230, 231, 250, 251, 252, 258, 259, 262, 264, 277, 278, 279, 285, 287, 511, 539, 543, 546, 547, 548], "l": [20, 23, 29, 35, 41, 44, 45, 132, 133, 134, 147, 231, 245, 246, 251, 255, 256, 260, 261, 262, 264, 278, 285, 287, 289, 401, 587, 598, 608, 618], "label": [22, 26, 28, 30, 34, 251, 259], "lack": 614, "lambda": 4, "lami": [587, 595], "landmark": 20, "languag": [587, 588, 593], "larg": [20, 32, 44, 47, 52, 132, 133, 134, 135, 139, 141, 166, 183, 231, 278, 540, 587, 589, 590, 597, 599, 600, 603, 605, 619, 622, 624], "large_compressed_dataset": 32, "large_dataset": 32, "larger": [24, 26, 165, 541, 618], "largest": [2, 8, 20, 541], "last": [20, 26, 28, 42, 47, 53, 85, 97, 143, 148, 214, 292, 587, 593, 606, 614, 616, 619, 622], "lastli": [612, 613], "later": [2, 8, 20, 30, 99, 541, 542, 587, 594, 612, 614], "latest": [47, 618], "latin5": [587, 596], "latter": [144, 145, 146, 150, 154, 155, 620], "layer": [33, 36, 132, 133, 134, 231, 278, 619], "layout": [10, 175], "lazi": 49, "lead": [51, 56, 69, 511, 541, 542, 548, 551, 587, 591, 596, 607, 624], "leaf": [174, 175, 176], "leaf_nod": 175, "learn": [53, 612, 616, 619, 620, 622], "least": [30, 34, 36, 39, 41, 132, 133, 134, 231, 251, 264, 278, 287, 511, 548, 568, 616, 619, 620], "leav": [10, 16, 26, 27, 109, 614], "left": [20, 36, 49, 132, 133, 134, 231, 278, 511, 541, 548, 613, 619], "legaci": 43, "lemaitr": [2, 8, 9, 11, 12, 17, 20, 22], "lemaitre58": [2, 8, 9, 11, 12, 17, 20, 22], "len": [0, 3, 4, 8, 10, 14, 36, 37, 38, 511, 548, 614, 616, 619, 622, 624], "length": [2, 8, 12, 20, 26, 27, 28, 42, 43, 44, 47, 51, 56, 67, 90, 120, 128, 130, 132, 133, 134, 139, 141, 142, 143, 144, 146, 148, 150, 151, 152, 153, 159, 161, 162, 163, 179, 182, 199, 215, 218, 221, 231, 250, 252, 258, 263, 278, 279, 281, 286, 296, 511, 537, 541, 544, 548, 587, 592, 593, 597, 599, 603, 605, 606, 607, 608, 614, 620], "length_of_undefined_length": 70, "less": [10, 37, 38, 39, 159, 161, 162, 541, 587, 608, 619, 620, 624], "let": [44, 587, 600, 612, 613, 614, 616, 619], "letter": [20, 42, 132, 133, 134], "level": [20, 26, 27, 28, 36, 40, 53, 132, 133, 134, 166, 175, 176, 587, 593, 605, 608, 613, 614, 615, 616, 622], "lib": 616, "libjpeg": [41, 45, 587, 608, 618], "librari": [2, 23, 25, 26, 42, 43, 50, 276, 291, 587, 590, 593, 613], "licens": [2, 8, 9, 11, 12, 16, 17, 20, 22, 587, 589, 590, 613], "like": [18, 25, 26, 29, 37, 42, 43, 47, 49, 52, 72, 74, 85, 111, 132, 133, 134, 156, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 180, 182, 183, 186, 198, 199, 201, 202, 203, 223, 233, 250, 251, 258, 262, 264, 266, 274, 285, 287, 543, 587, 590, 600, 603, 606, 608, 613, 614, 615, 616, 619, 620, 622], "limit": [10, 26, 27, 37, 38, 41, 46, 50, 175, 511, 548, 549, 550, 587, 593, 599, 603, 623], "linac": 132, "line": [11, 20, 23, 24, 25, 27, 28, 40, 43, 47, 49, 52, 85, 132, 133, 134, 175, 294, 511, 548, 587, 594, 605, 612, 613, 614, 616, 619, 622], "linear": [587, 605], "link": [36, 37, 53, 613], "linspac": 620, "linux": [43, 587, 596, 613, 618], "list": [4, 6, 7, 8, 10, 13, 20, 26, 28, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 44, 67, 76, 77, 78, 79, 97, 104, 105, 107, 128, 129, 132, 133, 134, 137, 139, 140, 141, 142, 144, 146, 150, 151, 154, 155, 163, 165, 166, 169, 171, 175, 176, 184, 185, 193, 197, 198, 202, 203, 205, 214, 215, 231, 250, 251, 258, 259, 262, 264, 278, 285, 287, 292, 294, 295, 511, 537, 546, 548, 553, 554, 555, 556, 559, 560, 561, 562, 565, 566, 569, 570, 576, 584, 587, 590, 593, 594, 600, 603, 605, 606, 608, 610, 613, 614, 616, 618, 619, 622], "list_beam": 11, "liter": [25, 26], "littl": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 39, 42, 44, 45, 47, 132, 133, 134, 144, 145, 146, 148, 150, 152, 153, 154, 155, 159, 161, 162, 163, 166, 175, 181, 182, 183, 186, 199, 218, 221, 234, 236, 240, 252, 259, 260, 275, 279, 290, 296, 511, 538, 544, 551, 552, 553, 554, 555, 556, 560, 561, 562, 564, 565, 567, 568, 587, 590, 602, 608, 614, 619, 620, 622, 624], "little_endian": [132, 133, 134, 186, 511, 538, 587, 608], "live": [612, 613], "ljust": [511, 548], "ll": [42, 44, 612, 613, 614, 619, 620, 622, 624], "ln": [541, 623], "lo": [2, 12, 16, 17, 18, 20, 26, 27, 32, 47, 132, 569, 614, 616], "load": [1, 5, 6, 10, 12, 14, 16, 166, 174, 175, 183, 587, 599, 603, 604, 605, 610, 622], "loc": 20, "local": [43, 69, 106, 539, 543, 587, 606, 612, 613, 614, 618], "localhost": 613, "localtim": [539, 543], "locat": [2, 4, 8, 9, 20, 94, 132, 133, 134, 135, 147, 174, 181, 613, 616], "log": [94, 132, 133, 134, 587, 593, 606, 608, 609, 612], "log10": 541, "logarithm": 541, "logb": 541, "logger": [94, 587, 594, 608], "logic": [541, 587, 590], "logical_and": 541, "logical_invert": 541, "logical_or": 541, "logical_xor": 541, "long": [12, 32, 37, 182, 186, 568, 587, 607, 614, 620], "longer": [56, 82, 128, 218, 587, 597, 598, 600, 603, 605, 608, 616], "look": [52, 184, 185, 612, 613, 614], "lookup": [36, 37, 38, 50, 112, 113, 114, 116, 117, 127, 131, 206, 211, 222, 224, 226, 227, 228, 265, 267, 269, 270, 271, 511, 548, 587, 603, 614], "lookuperror": [76, 77, 511, 548], "loonei": [587, 594, 595], "loop": [24, 26, 52], "lorem": 537, "loss": [77, 79, 541, 542, 549, 587, 603, 619], "lossi": [36, 37, 38, 41, 44, 45, 147, 246, 256, 289, 619, 622], "lossl": 32, "lossless": [35, 39, 41, 44, 45, 50, 132, 133, 134, 139, 141, 147, 220, 221, 231, 238, 239, 242, 245, 246, 247, 248, 249, 254, 255, 256, 257, 259, 260, 261, 278, 289, 587, 602, 605, 606, 608, 622], "losslessli": [36, 37], "lossy_error": 33, "lot": [587, 596, 614, 622], "low": [135, 615], "lower": [20, 132, 133, 134, 135, 175, 511, 541, 548, 587, 608, 616, 623], "lowercas": [53, 511, 548], "lowest": [296, 511, 541, 544, 548], "lrcp": 36, "lsb": 221, "lstrip": [511, 548], "lt": [2, 20, 32], "ltd": 110, "lut": [46, 222, 224, 225, 226, 227, 228, 229, 265, 267, 268, 269, 270, 271, 272, 587, 600, 602, 603, 605, 608], "lutdata": [587, 607], "m": [12, 22, 546, 612, 613, 616, 618, 619, 620, 622, 624], "maco": [587, 606, 618], "made": [38, 132, 133, 134, 143, 147, 175, 186, 587, 589, 590, 602, 608, 612, 613, 616, 619], "mai": [23, 24, 26, 27, 29, 30, 33, 34, 36, 37, 39, 43, 47, 49, 50, 52, 78, 96, 99, 132, 133, 134, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 159, 161, 162, 175, 186, 199, 221, 230, 231, 250, 251, 252, 259, 262, 264, 277, 278, 279, 285, 287, 511, 538, 541, 546, 548, 562, 564, 587, 600, 608, 612, 613, 614, 616, 618, 620, 622, 624], "main": [24, 25, 26, 42, 52, 54, 118, 587, 590, 612, 613, 614, 618, 620], "mainli": [48, 132, 133, 134, 511, 548, 587, 594], "mainloop": [0, 22], "major": [46, 96, 603, 608], "make": [29, 30, 34, 36, 37, 39, 42, 43, 47, 52, 132, 133, 134, 511, 537, 548, 549, 587, 590, 599, 605, 608, 614, 616, 618, 619, 620], "maketran": [511, 548], "mamp": 20, "manag": [10, 30, 34, 47, 67, 162, 165, 175, 206, 250, 258, 295, 575, 587, 596, 603, 614, 616], "mani": [39, 43, 48, 50, 139, 141, 144, 145, 587, 589, 593, 594, 608, 611, 620, 622], "manipul": [2, 23, 128, 618], "manner": [614, 619], "manual": [93, 186, 620], "manufactur": [2, 8, 20, 132], "map": [50, 128, 132, 173, 511, 548, 587, 608, 613], "march": 23, "mark": [587, 595], "marker": [143, 147, 170, 183, 587, 600, 605], "markup": [53, 613], "mask": 121, "mason": [11, 12, 16, 17, 23], "massag": 20, "match": [10, 29, 39, 44, 50, 84, 93, 104, 105, 106, 107, 132, 133, 134, 167, 173, 175, 215, 216, 218, 221, 231, 250, 251, 252, 262, 264, 278, 279, 285, 287, 294, 546, 587, 593, 596, 603, 608, 616, 619, 620, 622, 624], "materi": 611, "matplotlib": [3, 4, 9, 46, 620, 622, 624], "matter": [587, 598, 614, 622], "matthew": [587, 595], "max": [20, 37, 224, 226, 267, 269, 541, 619], "max_mag": 541, "maxbytestodisplai": [128, 587, 599], "maxdepth": 613, "maximum": [26, 27, 36, 37, 39, 41, 52, 128, 139, 141, 177, 259, 511, 537, 541, 548, 587, 607, 608, 619, 620], "maxsplit": [511, 548], "mayb": 157, "mb": [5, 13, 19, 21, 165, 572, 610], "mct": [33, 36, 619], "mdc": 623, "mean": [39, 45, 221, 293, 511, 537, 548, 584, 612, 614, 616, 619, 620, 622, 623], "meaningless": 296, "meant": [168, 212], "measur": [67, 151, 154, 173], "mechan": [30, 34, 251, 259, 619], "media": [2, 12, 20, 26, 27, 28, 42, 47, 69, 136, 197, 199, 614, 616], "mediastoragesopclassuid": [12, 616], "mediastoragesopinstanceuid": 12, "medic": [20, 53, 616, 622], "meet": [10, 34, 143, 259, 587, 593, 619, 620], "mem": [5, 13, 19, 21, 610], "member": [42, 541], "memori": [6, 16, 21, 30, 32, 45, 132, 133, 134, 165, 166, 167, 183, 218, 232, 262, 264, 273, 285, 287, 587, 590, 598, 599, 600, 608, 610, 616, 620], "memory_dataset": [14, 21, 610], "memoryview": [29, 159, 161, 162, 250, 251, 258], "mention": [45, 614], "merg": [612, 613], "messag": [24, 26, 27, 28, 94, 299, 587, 590, 599, 607, 608, 612, 614, 616], "met": [30, 34, 50, 169, 215, 216, 217, 218, 219, 220, 221, 572, 587, 598], "meta": [2, 8, 12, 20, 26, 27, 28, 42, 47, 52, 100, 132, 133, 134, 136, 165, 168, 186, 199, 231, 262, 264, 278, 285, 287, 587, 590, 593, 596, 602, 614, 622], "metadata": [587, 605], "metadata_process": [19, 610], "meterset": [26, 27, 28], "method": [17, 23, 29, 30, 34, 36, 37, 39, 42, 44, 47, 49, 51, 97, 100, 128, 130, 132, 133, 134, 135, 139, 141, 144, 145, 146, 150, 154, 155, 159, 161, 162, 165, 173, 174, 175, 176, 186, 206, 214, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 278, 292, 293, 294, 295, 296, 511, 539, 541, 542, 543, 544, 545, 546, 547, 548, 587, 590, 593, 596, 598, 605, 607, 608, 614, 615, 616, 619, 622, 623], "micro": 12, "microsecond": [543, 547], "microvolt": 624, "mid": [20, 26, 28, 42, 622], "middl": 546, "middle_nam": 546, "middle_name_ideograph": 546, "middle_name_phonet": 546, "might": [38, 47, 259, 624], "mike": [587, 591], "millisecond": [543, 547], "min": [10, 37, 224, 226, 267, 269, 541, 616, 619, 620], "min_mag": 541, "mind": [37, 38, 619, 622], "minim": [26, 28, 30, 45, 132, 133, 134, 186, 199, 251, 262, 264, 285, 287, 541, 587, 608, 620], "minimum": [30, 34, 36, 37, 38, 132, 133, 134, 199, 231, 278, 541, 619, 620, 622], "minor": 616, "minut": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 543, 547], "misc": [576, 587, 596], "miscellan": 576, "misinterpret": 29, "mismatch": 619, "miss": [9, 34, 106, 132, 133, 134, 136, 165, 170, 184, 186, 199, 215, 218, 220, 221, 222, 251, 259, 265, 587, 595, 596, 599, 600, 606, 608, 609, 612, 614, 616, 618, 622], "missing_depend": [251, 259], "mistak": 76, "mit": [2, 8, 9, 11, 12, 16, 17, 20, 22, 23, 587, 589, 590], "mitig": [587, 608], "mitra": [587, 606], "mix": [587, 599], "mixedmodality3dcammodel": 623, "mm": [20, 23, 539, 543, 547], "mmap": [587, 608], "mmm": [543, 547], "mobil": 20, "mod": 20, "modal": [2, 8, 9, 10, 20, 26, 28, 42, 46, 224, 225, 226, 228, 229, 267, 268, 269, 271, 272, 587, 600, 616, 623], "modalitytoread": 623, "mode": [9, 20, 26, 28, 32, 33, 37, 83, 86, 87, 128, 133, 159, 161, 162, 262, 264, 285, 287, 541, 587, 600, 612, 618], "model": [2, 8, 20, 24, 26, 42, 52, 128, 132, 133, 134, 615, 624], "modern": [587, 594], "modif": [133, 612, 614, 616], "modifi": [6, 15, 30, 34, 45, 49, 50, 52, 54, 106, 132, 133, 134, 175, 231, 252, 275, 278, 279, 290, 587, 600, 603, 608, 617, 620], "modul": [10, 25, 26, 30, 34, 36, 37, 38, 43, 48, 50, 51, 69, 85, 94, 97, 132, 133, 134, 201, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 250, 251, 252, 259, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 281, 284, 285, 287, 288, 289, 290, 511, 538, 548, 572, 573, 574, 576, 584, 587, 588, 594, 595, 598, 603, 605, 606, 608, 609, 614, 616, 619, 622, 624], "modulenotfounderror": [251, 259], "mondai": [539, 543], "monochrome1": [10, 36, 37, 38, 39, 132, 133, 134, 218, 220, 275, 290, 616], "monochrome2": [2, 8, 20, 36, 37, 38, 39, 132, 133, 134, 218, 220, 275, 290, 616, 619, 620, 622], "monospac": 0, "month": 543, "more": [0, 24, 26, 27, 29, 32, 34, 36, 37, 39, 42, 43, 44, 45, 47, 49, 50, 51, 53, 67, 99, 128, 132, 133, 134, 139, 143, 144, 146, 147, 148, 151, 166, 169, 175, 178, 183, 186, 187, 201, 231, 250, 251, 252, 259, 262, 264, 278, 279, 285, 287, 289, 294, 511, 541, 546, 548, 549, 587, 588, 589, 590, 592, 593, 600, 608, 612, 613, 614, 615, 616, 618, 619, 622, 624], "morenc": [587, 594], "most": [29, 39, 43, 45, 52, 85, 132, 133, 134, 251, 262, 264, 285, 287, 296, 544, 587, 590, 593, 594, 614, 616, 619, 622, 623], "mostli": 130, "move": [0, 93, 99, 174, 175, 587, 593, 594, 608, 613, 616], "mpeg": [427, 587, 603], "mpeg2mphlf": [587, 608], "mpeg2mpmlf": [587, 608], "mpeg4hp41bdf": [587, 608], "mpeg4hp41f": [587, 608], "mpeg4hp422df": [587, 608], "mpeg4hp423df": [587, 608], "mpeg4hp42stereof": [587, 608], "mplx": 3, "mplx_label": 3, "mr": [2, 8, 10, 17, 20, 50, 69, 546, 616], "mr1": [2, 8, 20], "mr_small": 69, "mra": [10, 616], "mrg": [612, 613], "mri": [1, 5, 6, 50, 610], "mrt50h1": [2, 8, 20], "msb": 221, "msec": 20, "msg": [85, 614], "msh": 623, "much": [37, 41, 42, 549, 587, 590, 593, 594, 602], "multi": [34, 39, 50, 60, 69, 82, 132, 133, 134, 139, 147, 148, 149, 150, 151, 175, 214, 215, 250, 251, 259, 262, 264, 275, 285, 287, 289, 290, 564, 576, 587, 596, 598, 600, 602, 608, 614, 622, 624], "multi_str": [60, 70], "multifram": [587, 603], "multipl": [4, 30, 32, 34, 36, 39, 42, 47, 49, 50, 78, 109, 111, 112, 122, 128, 132, 133, 134, 147, 149, 150, 151, 223, 227, 228, 229, 231, 232, 250, 251, 258, 259, 263, 266, 270, 271, 272, 273, 278, 286, 292, 541, 546, 565, 587, 600, 606, 608, 614, 619, 620, 622], "multiplex": [3, 51, 132, 133, 134, 572, 587, 603, 624], "multiplex_1": 51, "multiplex_2": 51, "multiplex_arrai": [51, 132, 133, 134, 572, 587, 603, 624], "multiplexgrouplabel": [3, 624], "multipli": 541, "multiv": [60, 576, 614], "multivalu": [32, 60, 82, 204, 205, 209, 552, 553, 554, 555, 556, 559, 567, 570, 571, 587, 593], "must": [25, 26, 30, 34, 36, 37, 38, 39, 42, 43, 44, 49, 50, 56, 85, 88, 132, 133, 134, 135, 139, 141, 151, 165, 173, 175, 178, 180, 182, 186, 214, 215, 222, 223, 225, 228, 229, 231, 233, 263, 265, 266, 268, 271, 272, 274, 275, 278, 286, 290, 296, 511, 541, 544, 548, 550, 568, 587, 605, 614, 615, 616, 619, 620, 624], "mutabl": 132, "mutablemap": [132, 133, 134], "mutablesequ": [32, 76, 129, 131, 132, 133, 134, 163, 166, 171, 172, 208, 209, 210, 211, 551, 552, 553, 554, 555, 556, 559, 561, 562, 565, 567, 569, 570, 571], "my": [10, 47, 132, 133, 134, 175, 615], "my_decod": 30, "my_decoder_func": 30, "my_encod": 34, "my_encoder_func": 34, "my_inst": 173, "my_json_dump": [132, 133, 134], "my_packag": [30, 34], "my_record": 173, "my_waveform": 624, "mypi": 618, "myprint": [8, 587, 588], "myself": [587, 595], "n": [2, 8, 11, 14, 20, 26, 28, 199, 215, 218, 220, 221, 224, 226, 227, 228, 229, 267, 269, 270, 271, 272, 289, 511, 541, 548, 572, 616], "naiv": 543, "name": [0, 2, 6, 8, 9, 10, 11, 12, 14, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 41, 42, 43, 44, 45, 47, 52, 53, 106, 109, 111, 118, 119, 122, 123, 124, 128, 132, 133, 134, 136, 158, 159, 161, 162, 165, 199, 206, 222, 231, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 278, 279, 285, 287, 289, 294, 295, 511, 539, 541, 543, 546, 548, 587, 588, 589, 590, 593, 596, 597, 598, 603, 605, 606, 607, 608, 610, 612, 613, 614, 616, 619, 622, 623, 624], "name_prefix": 546, "name_prefix_ideograph": 546, "name_prefix_phonet": 546, "name_suffix": 546, "name_suffix_ideograph": 546, "name_suffix_phonet": 546, "namedtemporaryfil": [12, 17], "namedtupl": 293, "nan": [541, 542, 545, 549], "nanz": [587, 590], "nativ": [29, 39, 44, 129, 132, 133, 134, 251, 259, 262, 264, 285, 287, 296, 514, 544, 580, 587, 608], "natur": [511, 541, 548], "navig": 613, "ncit": 623, "ndarrai": [29, 37, 42, 45, 48, 49, 50, 51, 53, 80, 82, 97, 103, 132, 133, 134, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 250, 251, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 285, 286, 287, 289, 290, 291, 554, 556, 572, 587, 596, 600, 603, 608, 609, 619, 620, 624], "ndc": 623, "nearest": [176, 541], "necessari": [29, 37, 42, 43, 132, 133, 134, 143, 148, 275, 290, 296, 541, 544, 546, 616, 624], "necessarili": [47, 49, 587, 608], "need": [25, 26, 27, 30, 34, 37, 38, 39, 42, 43, 44, 45, 47, 49, 51, 52, 53, 77, 79, 93, 97, 132, 133, 134, 163, 169, 231, 250, 251, 278, 566, 569, 587, 590, 605, 608, 612, 613, 614, 615, 616, 618, 619, 620, 622, 624], "needs_to_convert_to_rgb": [97, 216, 217, 218, 219, 220, 221], "neg": [296, 541, 544], "negat": 541, "neither": [84, 85, 175, 224, 226, 228, 267, 269, 271, 541], "nema": 53, "ness": [587, 590], "nest": [26, 28, 42, 132, 587, 594, 607], "network": [587, 603], "neu": 623, "neutral": 53, "never": [32, 81, 132, 133, 134, 511, 541, 548, 612, 622], "new": [10, 16, 17, 18, 26, 27, 38, 46, 52, 53, 54, 67, 69, 108, 109, 110, 111, 128, 132, 133, 134, 159, 161, 162, 174, 175, 176, 206, 214, 231, 232, 250, 251, 252, 258, 259, 273, 278, 279, 294, 295, 511, 539, 543, 546, 547, 548, 588, 589, 590, 593, 594, 595, 598, 599, 600, 602, 603, 605, 608, 611, 614, 617, 619, 624], "new_dict_item": [16, 108, 110], "new_entries_dict": [16, 108, 110], "new_fileset": 10, "newdefineduid": 612, "newer": 47, "newli": [43, 132, 133, 134, 587, 602], "newlin": 20, "next": [43, 47, 96, 132, 133, 134, 166, 175, 176, 587, 590, 603, 616, 624], "next_indent_str": 8, "next_minu": 541, "next_plu": 541, "next_toward": 541, "nfound": 10, "nice": [214, 251, 259, 612], "nikitathespid": [587, 590], "nil": [587, 595], "no_meta": 614, "no_meta_path": 614, "node": [174, 175, 176, 614], "nois": [33, 36, 132, 133, 134, 231, 278, 619], "non": [24, 26, 32, 42, 43, 108, 109, 110, 111, 126, 128, 132, 133, 134, 136, 147, 173, 175, 186, 199, 221, 247, 248, 262, 264, 285, 287, 289, 302, 511, 541, 545, 548, 549, 551, 554, 556, 562, 564, 587, 591, 592, 596, 597, 598, 599, 600, 603, 607, 608, 614, 622], "none": [0, 2, 8, 10, 14, 20, 32, 33, 53, 67, 76, 78, 81, 82, 91, 94, 96, 97, 98, 106, 108, 109, 110, 111, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 144, 146, 147, 149, 150, 156, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 222, 223, 231, 233, 250, 251, 258, 259, 262, 264, 265, 266, 274, 275, 278, 284, 285, 287, 290, 292, 293, 294, 295, 297, 299, 511, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 571, 572, 584, 587, 596, 599, 600, 603, 612, 614, 618, 620, 623], "nor": [84, 85], "norigin": 10, "normal": [9, 16, 20, 25, 26, 27, 32, 42, 69, 541, 587, 608], "not_dicom": 614, "notat": [26, 27, 28, 511, 541, 548, 549, 614], "note": [10, 18, 24, 26, 27, 28, 29, 32, 43, 47, 53, 82, 93, 109, 111, 132, 133, 134, 135, 143, 147, 152, 153, 165, 169, 170, 182, 192, 214, 224, 225, 226, 228, 229, 267, 268, 269, 271, 272, 511, 539, 541, 542, 543, 545, 546, 547, 548, 549, 590, 613, 614, 615, 622, 623, 624], "notebook": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "noth": [36, 37, 38, 616], "notic": [614, 616], "notimplementederror": [97, 132, 133, 134, 217, 218, 219, 221, 288], "notimplementerror": [587, 589], "noun": 53, "noutput": 16, "novemb": 23, "now": [12, 20, 128, 132, 133, 134, 537, 543, 587, 589, 590, 593, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 612, 613, 614, 616, 619, 624], "np": [3, 4, 37, 215, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 250, 251, 258, 259, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 278, 285, 287, 288, 289, 290, 572, 619, 620, 622, 624], "nr_channel": 3, "nr_fragment": [143, 153], "nr_frame": [147, 149], "nr_retri": [159, 161, 162], "nr_sampl": 3, "nsew": 0, "nucleu": [2, 8, 20], "null": [143, 215, 250, 258, 263, 281, 286, 562], "number": [2, 8, 11, 18, 20, 24, 26, 27, 28, 29, 30, 34, 39, 42, 45, 47, 49, 53, 109, 111, 130, 132, 133, 134, 135, 139, 143, 144, 146, 147, 148, 149, 150, 153, 155, 159, 161, 162, 164, 165, 166, 175, 176, 177, 180, 183, 198, 200, 201, 213, 214, 215, 231, 250, 251, 258, 259, 275, 278, 280, 281, 289, 290, 292, 293, 296, 297, 511, 537, 539, 541, 542, 543, 544, 545, 547, 548, 549, 587, 588, 592, 595, 599, 605, 606, 608, 613, 614, 616, 618, 620, 622, 623, 624], "number_class": 541, "number_of_fram": [29, 30, 34, 144, 146, 150, 230, 250, 258, 259, 277, 622], "numberofbeam": [24, 26], "numberofblock": 18, "numberofbrachyapplicationsetup": [24, 26], "numberoffractionsplan": [24, 26], "numberoffram": [218, 220, 221, 281, 282, 284, 289, 620, 622], "numberofframesinoverlai": 215, "numberofwaveformchannel": [3, 51, 572, 624], "numberofwaveformsampl": [3, 572, 624], "numer": [42, 175, 177, 296, 511, 541, 544, 548, 565, 587, 591, 600, 605, 607], "numpi": [2, 3, 4, 23, 29, 30, 34, 36, 37, 38, 42, 44, 45, 48, 49, 50, 51, 53, 82, 97, 102, 103, 132, 133, 134, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 250, 251, 252, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 285, 286, 287, 288, 289, 291, 554, 556, 572, 587, 588, 596, 598, 599, 600, 602, 606, 608, 612, 618, 619, 620, 622, 624], "numpy_handl": [97, 576, 587, 605], "numpypi": [587, 598], "o": [20, 22, 71, 73, 262, 264, 285, 287, 587, 608, 622], "ob": [2, 12, 20, 26, 27, 28, 32, 42, 44, 47, 132, 133, 134, 143, 191, 199, 252, 279, 557, 587, 591, 606, 608, 614, 615, 619, 620, 622], "obj": [132, 133, 134], "object": [0, 10, 14, 29, 30, 32, 34, 42, 47, 48, 53, 85, 99, 103, 128, 131, 132, 133, 134, 135, 140, 142, 144, 145, 146, 150, 154, 155, 159, 161, 162, 165, 166, 167, 169, 170, 173, 175, 186, 207, 214, 223, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 262, 264, 266, 274, 285, 287, 292, 296, 298, 543, 544, 546, 576, 587, 589, 590, 599, 600, 602, 605, 606, 608, 614, 616, 624], "observ": 623, "observationsubjectclass": 623, "observertyp": 623, "obviou": 620, "obvious": 624, "obxxxx1a": 69, "occasion": [613, 614, 616], "occur": [86, 87, 132, 133, 134, 541, 587, 600, 612, 616], "occurr": [130, 214, 292, 293, 511, 548], "oct": 576, "octob": 23, "od": [32, 186, 587, 596, 597, 605, 608, 620, 622], "odd": [42, 132, 133, 134, 135, 215, 250, 251, 258, 281, 296, 587, 597, 606, 608, 614, 620], "off": [20, 26, 27, 43, 94, 166, 587, 594, 602, 613], "offer": [26, 27, 50, 132, 133, 134, 294, 622], "offic": 546, "offici": [42, 112, 113, 114, 115, 116, 117, 118, 125, 126, 127, 128, 511, 587, 593, 594, 614, 624], "offlin": 618, "offset": [2, 8, 20, 44, 47, 49, 67, 128, 132, 133, 134, 135, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 159, 161, 162, 170, 171, 172, 175, 181, 182, 231, 250, 251, 258, 278, 560, 568, 587, 600, 603, 606, 608, 616, 619], "offsetofreferencedlowerleveldirectoryent": 173, "offsetofthenextdirectoryrecord": 173, "often": [48, 50, 109, 615], "ok": [37, 84, 85, 175, 612], "ol": [32, 186, 587, 596, 597, 605, 608], "old": [132, 133, 134, 511, 548, 587, 588, 589, 593, 596, 602], "older": [541, 618], "onc": [44, 47, 82, 109, 111, 612, 613, 623], "one": [10, 24, 26, 30, 34, 36, 39, 41, 42, 45, 50, 51, 52, 67, 83, 86, 87, 108, 110, 128, 131, 132, 133, 134, 138, 139, 141, 143, 146, 147, 148, 151, 167, 168, 173, 175, 176, 177, 183, 187, 201, 206, 222, 223, 231, 232, 233, 251, 252, 258, 259, 262, 264, 265, 266, 273, 274, 275, 278, 279, 285, 287, 290, 294, 511, 541, 542, 548, 587, 593, 596, 606, 608, 612, 614, 616, 618, 619, 620, 622, 623, 624], "ones": [296, 511, 544, 548, 611, 614, 616, 619], "onli": [10, 24, 26, 27, 28, 29, 30, 34, 36, 37, 39, 41, 42, 43, 45, 49, 50, 52, 53, 56, 80, 97, 109, 111, 112, 113, 114, 116, 117, 118, 119, 127, 128, 131, 132, 133, 134, 136, 147, 151, 165, 168, 175, 177, 184, 185, 186, 199, 206, 218, 223, 231, 233, 238, 239, 242, 250, 251, 254, 258, 259, 262, 263, 264, 266, 274, 275, 276, 278, 285, 286, 287, 288, 290, 291, 297, 511, 545, 548, 550, 587, 593, 595, 596, 597, 598, 599, 600, 602, 603, 605, 608, 612, 614, 615, 616, 619, 622], "onlin": 23, "open": [9, 23, 25, 26, 32, 140, 142, 160, 166, 262, 264, 285, 287, 587, 590, 612, 613, 614], "openjpeg": [36, 41, 44, 45, 618, 619, 622], "oper": [2, 8, 20, 29, 36, 37, 38, 42, 43, 45, 46, 47, 85, 132, 133, 134, 159, 161, 162, 224, 225, 226, 228, 229, 250, 251, 262, 264, 267, 268, 269, 271, 272, 285, 287, 511, 541, 548, 587, 590, 598, 600, 603, 614, 618, 622], "operand": [541, 587, 605], "opt": 624, "optim": [132, 133, 134], "optimis": [587, 605], "optimist": [587, 603], "option": [2, 8, 17, 20, 25, 27, 28, 30, 31, 34, 35, 43, 45, 48, 67, 81, 82, 94, 104, 105, 106, 107, 109, 111, 128, 132, 133, 134, 136, 139, 143, 144, 145, 146, 147, 149, 150, 153, 154, 155, 159, 161, 162, 163, 165, 166, 169, 175, 176, 177, 183, 186, 198, 209, 210, 214, 215, 218, 220, 221, 222, 223, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 259, 262, 263, 264, 265, 266, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 297, 511, 537, 538, 543, 546, 547, 548, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 564, 566, 567, 568, 569, 570, 571, 572, 576, 587, 589, 590, 596, 600, 603, 605, 608, 609, 616, 619, 622, 624], "order": [4, 29, 30, 33, 34, 36, 37, 39, 50, 97, 131, 132, 133, 134, 135, 147, 176, 180, 184, 185, 186, 198, 221, 231, 248, 259, 263, 278, 286, 296, 511, 541, 544, 587, 588, 595, 598, 600, 612, 619, 620, 622, 624], "ordereddict": [587, 595], "ordin": [511, 539, 543, 548], "org": [53, 615], "organ": [26, 27, 546], "organ_at_risk": [26, 27], "orient": [2, 8, 20], "origin": [2, 10, 20, 24, 26, 28, 29, 39, 44, 47, 49, 52, 89, 132, 133, 134, 167, 175, 218, 225, 231, 250, 251, 252, 268, 278, 279, 296, 511, 537, 541, 542, 544, 545, 546, 548, 587, 608, 612, 613, 614, 619, 622, 624], "original_character_set": [132, 133, 134, 587, 608], "original_encod": [132, 133, 134, 186, 198, 587, 608], "original_str": [546, 587, 598], "orphan": 175, "orthogon": 4, "oserror": 167, "other": [2, 8, 17, 20, 24, 30, 32, 34, 39, 41, 43, 44, 45, 47, 48, 49, 50, 52, 169, 186, 191, 192, 199, 263, 286, 511, 541, 546, 548, 608, 612, 614, 616, 619, 620, 622], "othermod": 623, "otherpatientid": [17, 587, 589], "otherpatientidssequ": [17, 614], "otherwis": [24, 26, 29, 30, 34, 39, 42, 88, 97, 115, 116, 120, 121, 125, 126, 127, 128, 132, 133, 134, 139, 144, 145, 146, 150, 154, 155, 163, 175, 177, 178, 181, 182, 186, 212, 223, 225, 227, 228, 229, 231, 232, 233, 250, 251, 252, 258, 259, 262, 263, 264, 266, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 285, 286, 287, 288, 290, 291, 511, 538, 541, 546, 548, 550, 551, 552, 553, 554, 555, 556, 560, 561, 562, 564, 565, 567, 568], "our": [37, 612, 613, 614, 616, 619, 620, 624], "out": [0, 50, 52, 141, 142, 175, 214, 263, 286, 292, 541, 542, 587, 603, 611, 612, 613, 614, 616, 620, 624], "outfil": [24, 26, 614], "outlin": 47, "output": [13, 16, 20, 24, 26, 27, 45, 50, 52, 53, 132, 133, 134, 223, 224, 226, 233, 251, 262, 264, 266, 267, 269, 274, 280, 285, 287, 539, 543, 547, 587, 600, 602, 610, 612, 613, 614, 616], "ov": [32, 186, 587, 600, 605, 608], "over": [10, 20, 26, 27, 49, 587, 608, 614, 616], "overflow": 20, "overflowerror": [296, 541, 542, 544, 545], "overlai": [46, 50, 69, 132, 133, 134, 276, 291, 576, 587, 600, 603, 608, 614], "overlap": [511, 548], "overlay_arrai": [46, 132, 133, 134, 587, 600], "overlay_data_handl": [587, 603, 608], "overlaybitposit": 215, "overlaybitsalloc": 215, "overlaycolumn": 215, "overlayrow": 215, "overrang": 20, "overrid": [29, 134, 173, 223, 230, 233, 266, 274, 277, 540, 587, 598, 616], "overview": 616, "overwrit": [10, 132, 133, 134, 186, 571, 587, 608], "ow": [2, 20, 26, 28, 32, 44, 49, 51, 132, 133, 134, 186, 192, 251, 252, 279, 558, 587, 591, 602, 607, 608, 614, 620, 622], "own": [8, 24, 25, 26, 27, 42, 47, 52, 132, 133, 134, 175, 186, 587, 597, 607, 614, 616, 622, 624], "p": [4, 10, 22, 24, 26, 56, 225, 268, 546, 587, 593, 616], "p0xxxxxx": 175, "p14": [41, 260], "p1xxxxxx": 175, "p25": [2, 8, 20], "p2xxxxxx": 175, "p98": 22, "pack": [22, 39, 49, 132, 133, 134, 251, 262, 263, 264, 275, 276, 285, 286, 287, 290, 291, 587, 597, 598, 603, 606, 609], "pack_bit": [49, 132, 133, 134, 275, 290, 576, 587, 598, 603, 608], "packag": [25, 26, 27, 45, 46, 48, 132, 133, 134, 215, 216, 217, 218, 219, 220, 221, 251, 252, 259, 262, 264, 279, 285, 287, 572, 587, 588, 591, 596, 603, 605, 608, 609, 616, 618, 622], "packbit": [38, 619], "packed_byt": 49, "pad": [2, 3, 8, 20, 26, 28, 132, 133, 134, 139, 143, 148, 204, 215, 250, 252, 258, 263, 279, 281, 286, 511, 541, 548, 587, 597, 599, 600, 603, 605, 606, 614, 620], "padraig": [587, 594, 595], "page": [37, 587, 596, 599, 611, 612, 613, 618], "pair": [25, 26, 134, 175, 230, 277, 296, 541, 542, 544, 545], "palett": [36, 37, 38, 39, 46, 105, 132, 133, 134, 173, 175, 222, 265, 275, 290, 587, 600, 602], "palette_color": [50, 69], "panchal": [587, 590], "papadopoulo": [587, 595], "paramet": [0, 10, 20, 24, 26, 50, 51, 52, 53, 56, 67, 76, 77, 78, 79, 81, 82, 94, 96, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 161, 162, 163, 165, 166, 167, 169, 170, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 198, 199, 201, 202, 203, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 250, 251, 252, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 297, 299, 511, 537, 538, 541, 542, 545, 546, 549, 550, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 587, 593, 595, 597, 603, 605, 606, 614, 616, 619, 622], "parametr": [50, 612], "pare": 212, "parent": [0, 26, 27, 131, 135, 159, 161, 162, 175, 176, 587, 597, 608, 616], "parent_dataset": [587, 608], "parent_encod": [166, 198], "parent_seq": [587, 608], "pars": [165, 169, 283, 543, 576, 587, 588, 600, 602, 603, 608], "parse_basic_offset": [151, 587, 608], "parse_frag": [587, 608], "parser": [25, 26], "part": [10, 27, 28, 32, 36, 37, 38, 39, 43, 47, 50, 51, 53, 111, 128, 132, 133, 134, 135, 139, 143, 146, 147, 148, 149, 150, 151, 153, 154, 165, 178, 184, 185, 186, 199, 203, 215, 218, 224, 226, 227, 228, 229, 232, 263, 267, 269, 270, 271, 272, 273, 276, 286, 289, 291, 294, 296, 511, 537, 542, 544, 545, 546, 548, 587, 590, 593, 605, 612, 613, 614, 615, 616, 621, 624], "part05": [53, 613], "parti": [46, 546, 618], "partial": [294, 587, 590], "particular": [26, 27, 42, 49, 50, 89, 132, 133, 134, 168, 587, 590, 600, 614, 622, 623], "particularli": [50, 52], "partit": [511, 548], "pass": [36, 37, 42, 44, 49, 50, 53, 92, 104, 105, 107, 131, 132, 133, 134, 139, 141, 206, 214, 587, 590, 609, 612, 613, 616, 619, 620, 622], "past": [39, 148, 170, 199], "pat": 42, "pat_nam": 9, "patch": [587, 590, 611, 612], "path": [0, 9, 10, 11, 12, 17, 24, 26, 27, 28, 30, 34, 42, 45, 50, 53, 69, 104, 105, 106, 107, 132, 133, 134, 158, 165, 174, 175, 178, 186, 206, 209, 210, 212, 251, 259, 262, 264, 285, 287, 587, 603, 608, 613, 616, 622], "pathlib": [0, 10, 12, 69, 158, 178, 614, 616, 622], "pathlik": [132, 133, 134, 165, 167, 168, 175, 186, 262, 264, 285, 287, 587, 602], "patient": [2, 8, 9, 10, 12, 17, 20, 26, 27, 28, 132, 133, 134, 173, 175, 546, 587, 589, 596, 606, 613, 614, 616], "patient_id": 10, "patient_nam": 546, "patient_name_ideograph": 546, "patient_name_phonet": 546, "patientbirthd": [17, 42], "patientid": [9, 10, 12, 14, 17, 26, 28, 42, 132, 173, 175, 614, 616], "patientnam": [9, 10, 12, 14, 26, 28, 42, 69, 84, 85, 128, 132, 165, 173, 175, 297, 587, 599, 613, 614, 616, 618], "patientsbirthd": [587, 589], "patientsetupsequ": 42, "patientsex": [42, 132, 133, 134], "patientsnam": [84, 85], "pattern": [20, 26, 28, 104, 105, 107, 587, 608], "paus": [620, 622], "paxxxxxx": 175, "pc": 616, "peak": [33, 36, 132, 133, 134, 231, 278, 619], "penalti": 540, "peopl": 616, "pep": [587, 589, 592, 596], "per": [2, 8, 20, 29, 30, 34, 36, 37, 38, 39, 41, 42, 50, 56, 131, 132, 133, 134, 139, 141, 147, 178, 206, 218, 231, 250, 258, 259, 275, 278, 289, 290, 587, 593, 600, 603, 614, 619, 620, 622], "per_fram": [232, 273, 587, 605], "perceptu": [223, 233, 266, 274], "perform": [2, 30, 34, 36, 37, 39, 43, 44, 45, 83, 112, 113, 114, 116, 117, 127, 131, 132, 133, 134, 136, 175, 206, 220, 251, 252, 259, 262, 264, 279, 285, 287, 541, 558, 587, 594, 597, 598, 618, 619, 622, 624], "perman": 109, "persist": [131, 167], "person": [6, 17, 21, 32, 53, 546, 587, 598, 605, 610, 623], "person_nam": 22, "person_names_callback": 17, "personnam": [22, 32, 60, 128, 559, 587, 588, 599, 602, 603, 605, 608, 618], "personname3": [587, 594, 599, 602], "personnameunicod": [587, 602, 608], "pet": [50, 222, 265], "pet_20_step": [222, 265], "peter": [10, 616], "phase": 20, "phonet": 546, "photometr": [2, 8, 20, 29, 38, 39, 50, 132, 133, 134, 216, 217, 218, 219, 220, 221, 231, 232, 250, 251, 252, 258, 262, 264, 273, 275, 278, 279, 280, 285, 287, 290, 587, 600, 619, 620, 622], "photometric_interpret": [29, 30, 34, 132, 133, 134, 230, 250, 258, 259, 275, 277, 290, 622], "photometricinterpret": [10, 36, 37, 38, 218, 220, 281, 282, 616, 619, 620, 622], "photon": [26, 28], "physic": [50, 616], "physician": [2, 8, 20], "pi": 624, "pickl": [32, 587, 596, 600, 605], "pierr": [587, 590], "pil": [223, 233, 266, 274, 587, 590, 598], "pillow": [30, 34, 45, 48, 132, 133, 134, 219, 223, 233, 241, 242, 243, 244, 266, 274, 587, 596, 598, 600, 602, 605, 608, 612, 622], "pillow_handl": [97, 612], "pilsupportedcompressedpixeltransfersyntax": [587, 603, 608], "pip": [26, 27, 612, 613, 619, 620, 622, 624], "pipe": [26, 27], "pitch": 20, "pixel": [2, 4, 6, 7, 8, 13, 20, 23, 24, 26, 28, 32, 33, 40, 42, 46, 48, 49, 52, 53, 54, 67, 80, 97, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 165, 169, 215, 216, 217, 218, 219, 220, 221, 573, 576, 587, 588, 590, 591, 596, 597, 598, 599, 600, 602, 603, 605, 606, 608, 609, 610, 612, 614, 617, 618], "pixel_arrai": [2, 4, 9, 29, 37, 38, 42, 45, 46, 48, 53, 132, 133, 134, 576, 587, 589, 600, 608, 619, 620, 622], "pixel_array_opt": [29, 132, 133, 134, 587, 608], "pixel_byt": 42, "pixel_data_handl": [132, 133, 134, 573, 576, 587, 598, 605, 608], "pixel_dtyp": [250, 587, 608], "pixel_keyword": [29, 30, 250, 258], "pixel_properti": [250, 251], "pixel_represent": [29, 30, 34, 230, 250, 258, 259, 277], "pixelarrai": [587, 588, 589], "pixeldata": [2, 29, 30, 32, 36, 37, 38, 42, 44, 50, 52, 137, 139, 140, 141, 142, 250, 258, 282, 587, 599, 600, 619, 620, 622], "pixeldataarrai": [587, 588], "pixelrepresent": [36, 37, 38, 218, 220, 221, 282, 288, 587, 599, 619, 620], "pixels1": 20, "pixelspac": [4, 9], "place": [36, 37, 38, 39, 44, 45, 132, 133, 134, 214, 223, 231, 232, 252, 266, 273, 278, 279, 292, 541, 587, 596, 614, 616, 619, 620], "placehold": [132, 133, 134], "plain": [587, 590], "plan": [26, 27, 28, 42, 69, 173], "plan1": [26, 28], "plan_d": 18, "planar": [29, 36, 39, 50, 132, 133, 134, 231, 250, 258, 275, 278, 289, 290, 587, 598, 620], "planar_configur": [29, 30, 230, 250, 258, 277], "planarconfigur": [218, 220, 221, 282, 289, 587, 596, 620], "plane": [4, 20, 30, 33, 37, 39, 50, 215, 259], "pleas": [0, 14, 25, 26, 28, 42, 132, 133, 134, 137, 138, 147, 148, 149, 151, 156, 186, 206, 251, 262, 264, 285, 287, 587, 594, 605, 608, 612, 613], "plot": [1, 5, 6, 7, 13, 587, 599, 610, 624], "plot_add_dict_entri": [16, 19, 610], "plot_anonym": [17, 19, 610], "plot_dicom_differ": [20, 21, 610], "plot_downsize_imag": [2, 5, 610], "plot_printing_dataset": [8, 13, 610], "plot_read_dicom": [9, 13, 610], "plot_read_fileset": [10, 13, 610], "plot_read_rtplan": [11, 13, 610], "plot_sequ": [18, 19, 610], "plot_waveform": [3, 5, 610], "plot_write_dicom": [12, 13, 610], "plt": [3, 4, 9, 48, 620, 622, 624], "plugin": [31, 35, 40, 44, 45, 54, 132, 133, 134, 220, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 262, 264, 278, 279, 285, 287, 587, 605, 606, 609, 618, 619, 622], "plugin_label": [30, 34], "plural": 10, "pn": [2, 12, 17, 20, 32, 42, 65, 128, 132, 133, 134, 546, 559, 587, 600, 605, 613, 614, 616], "point": [17, 24, 25, 26, 27, 28, 32, 52, 183, 218, 288, 511, 541, 542, 545, 548, 549, 587, 589, 594, 605, 612, 614, 623], "poor": 41, "pop": [132, 133, 134, 214, 292, 587, 599], "popitem": [132, 133, 134], "popul": [0, 12, 52, 296, 544, 623], "popular": 618, "portion": 42, "posit": [2, 8, 20, 24, 26, 27, 28, 67, 144, 145, 146, 148, 150, 151, 154, 155, 157, 159, 161, 162, 170, 180, 181, 182, 199, 214, 250, 251, 292, 296, 511, 541, 542, 544, 545, 548], "posix": [539, 543], "posixpath": [42, 69, 614], "possibl": [17, 30, 37, 39, 42, 43, 50, 93, 128, 132, 133, 134, 150, 159, 161, 162, 173, 184, 185, 186, 221, 251, 276, 291, 511, 548, 549, 587, 596, 598, 599, 600, 605, 608, 615, 616, 622, 623], "possibli": [50, 132, 133, 134, 251], "post": [20, 129, 587, 602], "posterior": 20, "potenti": [52, 619], "ppscan": 20, "pq": [511, 548], "pr": [587, 606, 612, 613], "practic": [37, 46, 69, 175, 223, 233, 266, 274], "pre": [26, 28, 42, 129, 587, 608, 612], "preambl": [132, 133, 134, 165, 170, 186, 199, 212, 587, 596, 614], "preced": [47, 587, 608], "precis": [80, 88, 283, 541, 542, 546, 549, 587, 605], "predefin": 43, "predict": [147, 248], "prefer": 614, "prefer_lut": [228, 271, 587, 603], "prefix": [24, 26, 27, 28, 53, 157, 165, 170, 177, 186, 199, 462, 511, 537, 546, 548, 587, 599, 608, 612, 613, 614, 623], "preliminari": [587, 588, 591], "prepar": [587, 594], "prepend": 133, "prerequisit": [46, 619, 620, 622, 624], "prescrib": 20, "prescript": [26, 27], "presenc": [148, 222, 265, 614], "present": [16, 26, 28, 39, 49, 79, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 130, 132, 133, 134, 136, 147, 148, 149, 151, 157, 165, 170, 173, 175, 176, 186, 199, 214, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 252, 259, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 278, 279, 292, 293, 511, 548, 587, 589, 597, 599, 600, 608, 614, 620, 622, 624], "preserv": [132, 133, 134, 186, 587, 595, 602], "pretti": [176, 612], "prettier": 42, "prettifi": 176, "prevent": [587, 600], "previou": [52, 176, 177, 587, 593, 596, 602, 603, 608], "previous": [39, 132, 133, 134, 167, 587, 598, 602, 605], "primari": [20, 26, 28, 47, 614], "primarili": [587, 591], "primer": 613, "print": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 36, 37, 42, 49, 109, 111, 132, 133, 134, 262, 285, 587, 589, 600, 610, 613, 614, 616, 622, 624], "printabl": [511, 548], "prior": [39, 44, 132, 133, 134, 148, 186, 251, 259, 587, 608, 619, 622], "prioriti": [186, 198, 587, 608], "privat": [6, 15, 17, 19, 20, 24, 26, 27, 28, 39, 42, 46, 52, 108, 109, 110, 111, 118, 119, 122, 123, 124, 126, 128, 129, 132, 133, 134, 135, 173, 174, 175, 199, 296, 457, 511, 538, 576, 587, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 602, 603, 605, 606, 607, 608, 609, 610, 614, 616], "private_block": [16, 47, 132, 133, 134], "private_cr": [16, 47, 110, 111, 119, 122, 123, 124, 132, 133, 134, 135, 296], "private_creator_el": 135, "private_elem": 614, "privateblock": [47, 132, 133, 134, 576], "privaterecorduid": 175, "privileg": 618, "probabl": [23, 52, 616], "problem": [587, 605, 614], "proc": 20, "procedur": 616, "process": [20, 25, 26, 30, 34, 36, 37, 39, 45, 129, 132, 133, 134, 147, 232, 243, 244, 247, 248, 250, 251, 258, 262, 264, 285, 287, 511, 540, 579, 587, 590, 602, 605, 607, 608, 612, 613, 619, 622, 624], "produc": [12, 24, 26, 29, 50, 52, 53, 296, 541, 544, 587, 595, 600, 605, 608], "product": [20, 541], "profil": [223, 233, 266, 274, 587, 608], "program": [26, 27, 48, 587, 588, 593], "progress": [36, 587, 607, 613], "project": [9, 10, 20, 97, 612, 613, 618], "projector": 20, "prolept": [539, 543], "promot": [587, 593], "prompt": 42, "pronoun": 53, "proof": [46, 96], "propag": [587, 600], "proper": [53, 587, 590], "properli": [612, 622], "properti": [10, 14, 29, 30, 34, 42, 45, 56, 67, 128, 132, 133, 134, 159, 161, 162, 174, 175, 176, 250, 251, 258, 259, 294, 295, 296, 511, 546, 587, 588, 590, 593, 596, 597, 603, 608, 609, 616, 619, 620], "protect": 43, "protocol": [173, 296, 544], "provid": [30, 34, 39, 42, 47, 50, 54, 97, 128, 132, 133, 134, 144, 146, 150, 215, 218, 220, 221, 251, 259, 572, 587, 594, 615, 618, 619, 622, 623], "ps3": [22, 546], "psnr": [132, 133, 134, 231, 278], "pt000000": [10, 616], "pt000001": [10, 616], "pt000002": [10, 616], "pt000003": 10, "ptv": [26, 27], "ptxxxxxx": 175, "pubchem_cid": 623, "public": [39, 132, 133, 134, 186], "pull": [25, 26, 28, 611, 618], "puls": 20, "punctuat": [511, 548], "purpos": [36, 37, 619], "push": [612, 613], "put": 187, "px": 37, "py": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 42, 52, 84, 85, 97, 587, 588, 591, 592, 593, 594, 595, 596, 604, 610, 612, 614, 616, 618, 619, 622], "py3": 618, "pydicom": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 25, 29, 30, 32, 34, 36, 37, 38, 40, 45, 49, 50, 51, 52, 53, 60, 70, 573, 576, 588, 590, 591, 592, 593, 594, 595, 596, 597, 600, 602, 603, 605, 610, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 624], "pydicom_futur": [43, 587, 603], "pydicom_seri": [587, 591, 594, 595], "pydicom_subcommand": [25, 26], "pydicom_test": [10, 616], "pyjpegl": [37, 44, 132, 133, 134, 217, 231, 245, 246, 255, 256, 278, 587, 608, 619], "pylibjpeg": [29, 38, 44, 45, 132, 133, 134, 220, 231, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 257, 259, 278, 587, 603, 605, 608, 619, 620, 622], "pylibjpeg_handl": 97, "pypi": [587, 596, 598, 618], "pyplot": [3, 4, 9, 48, 620, 622, 624], "pyproject": [43, 587, 607], "pysid": [587, 594], "pytest": [587, 607], "python": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 40, 41, 42, 43, 47, 48, 52, 53, 54, 76, 77, 79, 94, 132, 133, 134, 216, 217, 219, 511, 548, 587, 588, 590, 591, 593, 594, 595, 596, 597, 598, 599, 602, 603, 604, 605, 607, 608, 612, 613, 614, 615, 618, 619, 620, 622, 624], "python3": 616, "pythoncod": [24, 26], "q": [26, 27, 28, 612, 619], "qt": [587, 594], "qualiti": [33, 36, 37, 132, 133, 134, 231, 278, 619], "quantiti": [50, 572, 624], "quantiz": 541, "queri": [10, 93, 175, 616], "question": 611, "quickli": [168, 616], "quiet": [26, 27, 28, 541], "quinci": 546, "quit": [52, 587, 590, 612], "r": [20, 39, 128, 132, 133, 134, 511, 548, 615, 619, 620], "r1": 39, "r100": [587, 589], "r102": [587, 589], "r103": [587, 589], "r104": [587, 589], "r105": [587, 589], "r109": [587, 589], "r110": [587, 589], "r111": [587, 589], "r113": [587, 589], "r2": 39, "r45": [587, 588], "r46": [587, 588], "r50": [587, 588], "r51": [587, 588], "r55": [587, 588], "r64": [587, 588], "r65": [587, 588], "r67": [587, 588], "r68": [587, 588], "r69": [587, 588], "r70": [587, 588], "r72": [587, 588], "r73": [587, 588], "r78ba350a3eb8": [587, 594], "r91": [587, 589], "r95": [587, 589], "r96": [587, 589], "r97": [587, 589], "r98": [587, 589], "ra": 20, "radiotherapi": 173, "radiu": 620, "radix": 541, "radlex": 623, "rai": [20, 26, 28, 614], "rais": [43, 56, 76, 77, 79, 81, 82, 84, 85, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 130, 132, 133, 134, 135, 136, 148, 151, 157, 159, 161, 162, 165, 167, 170, 175, 183, 184, 186, 199, 214, 215, 216, 217, 218, 219, 220, 221, 251, 259, 263, 276, 286, 288, 291, 292, 293, 296, 299, 511, 537, 541, 542, 544, 545, 548, 549, 554, 556, 568, 576, 587, 591, 592, 597, 599, 600, 603, 605, 606, 608, 614, 616, 619, 622], "raise_orphan": 175, "randbelow": [537, 587, 608], "random": [537, 587, 608], "rang": [20, 30, 34, 37, 39, 49, 93, 214, 224, 226, 259, 262, 267, 269, 285, 292, 511, 541, 548, 587, 598, 600, 614, 619], "rare": [587, 608], "rate": [26, 27], "rather": [24, 26, 27, 28, 49, 52, 128, 132, 133, 134, 175, 214, 230, 277, 541, 587, 588, 589, 596, 600, 602, 605, 608, 614], "ratio": [20, 33, 36, 37, 38, 132, 133, 134, 231, 278, 296, 541, 542, 544, 545, 619], "ration": [296, 544], "raw": [29, 30, 34, 37, 42, 49, 50, 51, 128, 129, 130, 131, 132, 133, 134, 144, 146, 150, 156, 163, 167, 173, 206, 208, 209, 210, 211, 251, 259, 262, 264, 285, 287, 572, 587, 593, 599, 602, 608, 619, 620, 622, 624], "raw_data_el": [129, 570], "raw_data_elem": 167, "raw_el": [209, 210], "raw_element_kwarg": [131, 206], "raw_element_valu": [131, 206, 209, 210, 576], "raw_element_value_fix_separ": [206, 576], "raw_element_value_retri": 576, "raw_element_vr": [131, 206, 576], "rawdatael": [60, 91, 129, 131, 132, 133, 134, 163, 167, 185, 197, 208, 209, 210, 211, 570, 587, 608], "rawiobas": [161, 162], "raybaut": [587, 590], "rb": [32, 133, 140, 142, 262, 264, 285, 287, 614], "rbg": [587, 605], "rd000000": 616, "re": [10, 16, 49, 54, 136, 223, 266, 461, 462, 611, 612, 613, 614, 616, 618, 619, 620, 622, 624], "reach": [169, 181, 183, 250], "reachabl": 613, "read": [0, 2, 6, 7, 8, 13, 14, 16, 17, 18, 20, 24, 26, 27, 28, 29, 32, 42, 43, 47, 49, 50, 52, 54, 56, 67, 70, 76, 82, 89, 94, 106, 132, 133, 134, 137, 138, 144, 145, 146, 148, 150, 154, 155, 156, 157, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 179, 180, 182, 183, 212, 216, 218, 250, 251, 262, 264, 285, 287, 538, 544, 545, 576, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 602, 603, 605, 606, 607, 608, 610, 613, 615, 616, 617, 622, 623], "read_byt": 14, "read_data_el": 163, "read_dataset": [14, 70, 169], "read_deferred_data_el": 70, "read_dicomdir": [587, 595], "read_encod": [132, 133, 134, 587, 608], "read_exact": [159, 161, 162], "read_fil": [587, 589, 590, 591, 596, 605, 608], "read_file_meta_info": [70, 133], "read_implicit_vr": [132, 133, 134, 587, 608], "read_item": [587, 608], "read_little_endian": [132, 133, 134, 587, 608], "read_onli": 218, "read_ow": [587, 588], "read_parti": [70, 165, 212, 614], "read_preambl": [70, 212, 614], "read_sequ": 70, "read_sequence_item": 70, "read_siz": [180, 181, 182, 183], "read_tag": [159, 161, 162], "read_u": [159, 161, 162], "read_ul": [159, 161, 162], "read_undefined_length_valu": 70, "readabl": [67, 132, 133, 134, 144, 145, 146, 150, 154, 155, 165, 587, 608], "readablebuff": [133, 144, 145, 146, 150, 154, 155, 159, 161, 162, 165], "reader": 53, "readfil": [587, 589], "readi": [612, 613], "reading_validation_mod": [43, 56, 76, 77, 79, 95, 132, 133, 134, 587, 606], "readm": 10, "real": [296, 542, 544, 545, 612, 613, 624], "realli": [42, 587, 590, 599], "reason": [53, 613, 622], "rebuild": 613, "recalcul": 616, "receiv": [20, 199], "recent": [85, 612, 613, 614, 616, 619, 622], "recommend": [23, 25, 26, 30, 36, 37, 42, 43, 44, 45, 93, 132, 133, 134, 139, 141, 175, 214, 223, 263, 266, 286, 292, 614, 616, 618, 619], "recon": 20, "reconstruct": [20, 36], "record": [10, 20, 173, 174, 175, 176, 587, 600, 606, 616], "record_gen": 616, "record_typ": [176, 616], "recordinuseflag": 173, "recordnod": [174, 175, 576], "recreat": [24, 26, 587, 595], "recurs": [0, 4, 47, 132, 133, 134, 587, 589, 591], "recursionerror": [587, 608], "red": [36, 37, 38, 39, 222, 265, 587, 602, 612, 613], "reduc": [49, 50, 177, 232, 273, 587, 598, 603, 608, 616], "ref": 20, "refactor": [587, 608], "refd_beam1": [24, 26], "refd_beam_sequ": [24, 26], "refer": [2, 8, 20, 26, 27, 39, 42, 50, 53, 93, 139, 143, 146, 147, 148, 149, 150, 151, 153, 154, 174, 215, 222, 224, 226, 227, 228, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 263, 265, 267, 269, 270, 271, 272, 273, 276, 286, 289, 291, 537, 587, 590, 612, 616, 619, 624], "referenc": [24, 26, 27, 28, 42, 53, 168, 174, 175, 616], "referencedbeamsequ": [24, 26], "reflect": 250, "refus": 97, "reg": 20, "regard": 2, "regex": [461, 462], "regist": [16, 25, 26, 47, 128, 206, 511, 538, 548, 587, 603, 608, 614], "register_callback": [91, 131, 206, 209, 210], "register_error": [511, 548], "register_kwarg": [92, 131, 206, 209, 210], "register_transfer_syntax": [457, 587, 608], "registr": 173, "regress": [587, 601, 602, 612], "regular": [26, 27, 42, 511, 548, 587, 607], "reinstal": [26, 27], "rel": [67, 159, 161, 162, 178, 223, 233, 266, 274, 587, 608], "relat": [25, 26, 27, 37, 39, 43, 49, 51, 59, 132, 133, 134, 135, 186, 215, 218, 220, 221, 250, 275, 290, 572, 583, 587, 588, 608, 612, 616, 619, 624], "relationship": [36, 37, 38, 175, 613], "relative_to": 10, "releas": [23, 47, 576, 596, 600, 603, 608], "relev": [44, 129, 184, 185, 186, 612], "reli": [45, 80], "reload": 42, "remain": [39, 148, 175, 511, 548, 587, 593, 613], "remaind": 541, "remainder_near": 541, "rememb": [42, 47, 49], "remind": 53, "remot": [612, 613], "remov": [10, 12, 17, 42, 43, 46, 91, 92, 98, 129, 132, 133, 134, 137, 138, 148, 149, 151, 156, 174, 175, 176, 186, 214, 251, 259, 262, 264, 275, 280, 285, 287, 290, 292, 511, 548, 573, 574, 596, 597, 598, 599, 602, 603, 604, 605, 606, 607, 612, 614], "remove_plugin": [251, 259], "remove_private_tag": [17, 47, 132, 133, 134], "removeprefix": [511, 548], "removesuffix": [511, 548], "renam": [587, 588, 596, 602, 607, 608], "render": [223, 233, 266, 274], "reopen": 12, "reorgan": [587, 588, 590], "rep": 20, "repeat": [26, 27, 49, 118, 121, 125, 126, 175, 587, 598, 607, 614], "repetit": [2, 8, 20, 52], "replac": [17, 76, 77, 79, 109, 209, 511, 539, 543, 547, 548, 587, 599, 606], "replace_un_with_known_vr": [587, 602], "replic": [26, 27], "report": [587, 600, 611, 617], "repositori": [26, 27, 106, 587, 608, 618], "repr": [8, 100, 511, 548, 587, 602], "repr_valu": 8, "repres": [10, 34, 42, 50, 101, 128, 132, 133, 134, 148, 165, 186, 296, 539, 543, 544, 545, 546, 549, 612, 619, 622, 624], "represent": [2, 8, 20, 26, 28, 29, 32, 36, 38, 39, 41, 42, 61, 64, 75, 109, 111, 113, 123, 128, 132, 133, 134, 135, 143, 174, 175, 176, 224, 226, 231, 250, 251, 258, 262, 264, 267, 269, 275, 278, 285, 287, 290, 293, 296, 541, 542, 544, 545, 546, 548, 549, 566, 569, 576, 587, 603, 605, 608, 614, 615, 620, 622, 624], "reproduc": 612, "repval": [128, 132, 133, 134], "request": [25, 26, 28, 42, 296, 544, 587, 603, 605, 611], "requir": [2, 10, 12, 20, 26, 27, 29, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 128, 131, 132, 133, 134, 139, 143, 144, 146, 147, 148, 149, 150, 165, 175, 184, 186, 199, 206, 214, 215, 216, 217, 218, 220, 221, 222, 223, 228, 229, 231, 233, 250, 251, 252, 259, 262, 264, 265, 266, 271, 272, 274, 276, 278, 279, 281, 285, 287, 289, 291, 297, 538, 549, 587, 590, 594, 598, 602, 603, 608, 613, 614, 616, 618, 619, 620, 622, 624], "resampl": 218, "rescal": [20, 37, 46, 224, 226, 228, 229, 267, 269, 271, 272, 619, 622], "rescaleintercept": 622, "rescaleslop": 622, "reserv": [47, 511, 548], "reset": [77, 96, 98, 132, 133, 134, 150, 155], "reset_data_element_callback": 576, "reshap": [97, 132, 133, 134, 215, 220, 250, 251, 262, 264, 285, 287, 289], "reshape_overlay_arrai": 215, "reshape_pixel_arrai": [587, 608], "resiz": 49, "reslic": [4, 5, 610], "resolut": 36, "resolv": [0, 129, 184, 587, 593, 599, 608], "resort": [587, 606], "resourc": 612, "respect": [76, 93, 587, 597], "respiratori": 624, "respons": [165, 546, 615], "responsible_party_nam": 546, "responsible_party_name_ideograph": 546, "responsible_party_name_phonet": 546, "rest": [511, 548, 587, 606, 613], "restor": [587, 602], "restrict": [37, 39, 620], "restructuredtext": 613, "result": [10, 17, 24, 25, 26, 27, 36, 37, 38, 41, 43, 44, 52, 77, 79, 131, 132, 133, 134, 186, 208, 209, 210, 211, 231, 251, 252, 262, 264, 278, 279, 285, 287, 296, 511, 537, 541, 548, 587, 605, 608, 612, 613, 619, 620, 622], "result_load": 10, "ret": 128, "retain": [549, 587, 605], "retir": [39, 109, 116, 128, 132, 133, 134, 184, 185, 262, 264, 285, 287, 302, 511, 587, 603], "retri": 210, "retriev": [42, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 127, 128, 132, 133, 134, 587, 600, 608, 614, 615], "return": [10, 11, 14, 29, 30, 32, 34, 39, 42, 47, 49, 50, 51, 53, 67, 69, 76, 77, 79, 80, 90, 91, 97, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 198, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 250, 251, 252, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 511, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 587, 588, 589, 590, 591, 597, 598, 599, 600, 602, 603, 605, 606, 608, 614, 615, 616, 620, 622, 624], "rev": 546, "revers": [36, 45, 176, 214, 292, 587, 600], "revert": [132, 133, 134, 587, 594], "review": [24, 26, 611, 612, 613], "revis": [20, 587, 591, 593, 594], "rewind": [14, 170, 180, 181, 182, 587, 594], "rewrit": [544, 545], "rfind": [511, 548], "rg1_unci": [587, 603], "rgb": [29, 30, 33, 34, 36, 37, 38, 39, 50, 97, 132, 133, 134, 216, 217, 218, 219, 220, 221, 222, 223, 232, 250, 251, 252, 262, 264, 265, 266, 273, 275, 279, 285, 287, 290, 587, 597, 600, 605, 608, 619, 622], "rgb_color": [36, 37, 38, 69, 619], "rgba": [222, 265], "rhapsod": 20, "rhythm": 624, "rickard": [587, 595], "right": [20, 36, 132, 133, 134, 231, 278, 511, 541, 548, 619], "rightmost": 541, "rindex": [511, 548], "risk": [26, 27], "rjust": [511, 548], "rle": [35, 39, 41, 44, 45, 50, 132, 133, 134, 139, 141, 147, 220, 221, 231, 249, 257, 259, 260, 261, 278, 289, 464, 587, 598, 599, 605, 606, 608, 618], "rle_encode_fram": [587, 605, 608], "rle_handl": [97, 587, 606, 608], "rle_segment_ord": [29, 221], "rlecompressedlosslesssyntax": [587, 603, 608], "rlelossless": [30, 34, 38, 44, 132, 133, 134, 231, 278, 612, 619], "rlelosslessdecod": 30, "rlelosslessencod": [33, 34, 38, 587, 605, 608], "rletransfersyntax": [587, 603, 608], "rn": 39, "robert": 546, "root": [0, 9, 10, 22, 26, 27, 97, 175, 176, 178, 450, 537, 541, 614, 616], "rotat": [20, 541], "roughli": 620, "round": [88, 263, 286, 541], "round_half_even": 541, "rout": 20, "routin": 182, "row": [0, 2, 8, 9, 20, 26, 28, 29, 30, 34, 37, 39, 49, 50, 132, 133, 134, 215, 218, 220, 221, 223, 230, 231, 232, 250, 251, 258, 259, 262, 263, 264, 266, 273, 275, 277, 278, 281, 282, 285, 286, 287, 289, 290, 619, 620, 622], "rowconfigur": 0, "rpartit": [511, 548], "rpcl": [41, 45, 239, 260], "rsplit": [511, 548], "rst": [612, 613], "rstrip": [511, 548], "rt": [26, 27, 28, 42, 69, 173, 175, 616], "rt_dose": [69, 616, 622], "rt_plan": [42, 69], "rt_ss": 69, "rtdose": 69, "rtplan": [6, 7, 13, 24, 26, 27, 28, 42, 69, 165, 610], "rtstruct": 69, "ruff": [587, 608], "rule": 197, "run": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 42, 43, 52, 109, 132, 133, 134, 546, 587, 590, 593, 603, 608, 613, 614, 617, 618], "runner": [30, 34, 250, 258, 619], "runtimeerror": [132, 133, 134, 220, 622], "safe": [251, 259, 298], "sag_aspect": 4, "sagitt": [1, 5, 6, 587, 599, 610], "sai": [52, 612, 614], "sake": [263, 286], "same": [4, 30, 34, 42, 43, 49, 109, 132, 133, 134, 161, 162, 175, 214, 223, 251, 266, 511, 539, 541, 542, 543, 548, 587, 591, 593, 613, 614, 616, 619, 622], "same_quantum": 541, "sampl": [2, 8, 20, 29, 30, 34, 36, 37, 38, 39, 41, 50, 51, 132, 133, 134, 223, 231, 250, 251, 258, 259, 262, 264, 266, 275, 278, 283, 285, 287, 289, 290, 572, 587, 608, 619, 620, 622, 624], "samples_per_pixel": [29, 30, 34, 230, 250, 258, 259, 277, 622], "samplesperpixel": [36, 37, 38, 218, 220, 221, 281, 282, 289, 587, 593, 598, 619, 620], "sampling_fq": 3, "samplingfrequ": [3, 51, 624], "satisfi": [541, 542, 549], "satur": [223, 233, 266, 274], "save": [14, 16, 24, 26, 44, 49, 50, 587, 590, 593, 608, 613, 614, 615, 624], "save_a": [12, 16, 17, 24, 26, 32, 44, 49, 50, 132, 133, 134, 140, 142, 186, 231, 278, 587, 589, 602, 608, 614, 619, 624], "save_filenam": [24, 26], "savea": [587, 589], "savenam": [24, 26], "saw": 614, "sb": 572, "scale": 20, "scaleb": 541, "scan": [2, 8, 20, 26, 28, 173], "schaefer": [587, 594], "scheme": [36, 37, 38, 163, 293, 294, 295, 511, 548, 559, 560, 566, 569, 570, 584, 619, 622, 623, 624], "scheme_design": [293, 294, 584, 587, 608, 623], "scheme_vers": [293, 584, 623], "scientif": 549, "scope": 619, "scout": [4, 20], "scratch": [12, 18, 46, 132, 133, 134, 186, 587, 591, 592, 605, 612, 620, 622], "screen": [20, 24, 26], "script": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 52, 587, 597], "scroll": 612, "sct": [584, 587, 608, 623], "se": [2, 8, 20], "se000000": [10, 616], "se000001": [10, 616], "se000002": [10, 616], "search": [10, 106, 147, 175, 180, 181, 182, 511, 548, 587, 605, 614, 616], "sec": 20, "second": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 36, 37, 39, 43, 541, 543, 546, 547, 619, 620, 624], "secondari": [2, 8, 20], "secret": 537, "sect": 546, "sect_6": 53, "section": [2, 24, 25, 26, 27, 36, 37, 38, 39, 42, 44, 47, 50, 52, 53, 56, 100, 128, 132, 133, 134, 135, 139, 143, 153, 199, 203, 215, 232, 251, 262, 263, 264, 273, 276, 285, 286, 287, 289, 291, 546, 612, 613], "secur": [587, 608], "see": [23, 24, 26, 27, 28, 32, 34, 36, 37, 38, 42, 43, 44, 50, 52, 56, 128, 132, 133, 134, 135, 163, 166, 169, 173, 181, 182, 183, 186, 199, 203, 206, 227, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 262, 264, 270, 278, 279, 285, 287, 541, 545, 546, 587, 590, 600, 601, 602, 605, 608, 612, 613, 614, 616, 618, 620, 623], "seek": [14, 67, 132, 133, 134, 144, 145, 146, 150, 154, 155, 159, 161, 162, 165, 186, 587, 589, 599, 608], "seekabl": 67, "seem": 612, "seen": [10, 25, 26, 89, 613, 624], "segment": [20, 29, 221, 222, 265, 587, 598, 605], "select": [42, 132, 133, 134, 147, 248, 619], "self": [14, 157, 296, 511, 539, 541, 542, 543, 544, 545, 547, 614, 619, 622], "semant": [10, 53, 175, 546, 616], "send": [199, 612, 613], "sens": [587, 590], "sensit": [24, 26, 51, 52, 132, 133, 134, 572, 624], "sent": [587, 608], "sep": [511, 543, 548], "separ": [37, 44, 100, 132, 133, 134, 139, 141, 209, 511, 543, 546, 548, 587, 590, 591, 619, 620, 622], "septemb": 23, "seq": [53, 614], "seq_idx": 0, "seq_item": 0, "sequenc": [0, 2, 3, 6, 8, 15, 19, 20, 24, 26, 27, 28, 32, 46, 51, 52, 53, 60, 77, 79, 89, 132, 133, 134, 143, 147, 148, 149, 166, 171, 172, 176, 179, 180, 202, 203, 224, 226, 227, 228, 267, 269, 270, 271, 546, 560, 572, 576, 587, 588, 589, 593, 594, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 610, 616, 624], "sequence_element_format": [132, 133, 134], "sequence_item": 8, "seri": [2, 8, 10, 20, 53, 168, 173, 175, 587, 591, 613, 616], "serial": [2, 8, 20, 128, 132, 133, 134, 615], "series_uid": 10, "seriesinstanceuid": 10, "seriesnumb": [10, 42, 616], "server": 613, "servic": [20, 616], "session": [42, 43, 47, 132, 133, 134, 613], "set": [2, 6, 7, 12, 13, 18, 20, 25, 26, 27, 28, 32, 36, 39, 42, 43, 44, 46, 49, 50, 52, 54, 56, 69, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 91, 92, 93, 95, 96, 101, 102, 103, 109, 128, 131, 132, 133, 134, 148, 151, 157, 159, 161, 162, 165, 166, 167, 173, 174, 175, 177, 178, 183, 186, 198, 208, 209, 210, 231, 250, 252, 258, 275, 278, 279, 290, 511, 538, 541, 545, 546, 548, 549, 550, 576, 587, 588, 593, 596, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 610, 614, 615, 617, 618, 619, 620, 622, 624], "set_aspect": 4, "set_data": [620, 622], "set_decod": 250, "set_default": [25, 26], "set_encod": 258, "set_opt": [30, 34, 250, 258], "set_original_encod": [132, 133, 134], "set_pixel_data": [132, 133, 134, 576, 587, 608, 609], "set_private_encod": [511, 538, 587, 608], "set_sourc": [250, 258], "set_titl": [3, 622], "set_xlabel": 3, "set_ylabel": [3, 624], "setdefault": [132, 133, 134, 587, 599, 603], "setup": [25, 26, 27, 28, 587, 594, 595, 607], "setuptool": [25, 26, 587, 588, 595, 605], "sever": [48, 56, 587, 594, 596], "sex": [2, 8, 20], "sexxxxxx": 175, "sfov": 20, "sh": [2, 12, 16, 20, 26, 28, 32, 42, 47, 199, 569, 614], "sha512": 537, "shall": [97, 143, 147, 148, 151, 152, 153, 163, 186, 199], "shallow": [132, 133, 134], "shape": [2, 4, 37, 49, 50, 51, 132, 133, 134, 215, 216, 217, 220, 223, 231, 232, 251, 259, 262, 263, 264, 266, 273, 275, 278, 285, 286, 287, 289, 290, 572, 619, 620, 622, 624], "share": 616, "shift": [29, 541], "short": [32, 568, 612, 614], "should": [18, 25, 26, 27, 30, 32, 34, 36, 37, 38, 39, 42, 43, 47, 49, 50, 52, 53, 128, 132, 133, 134, 144, 146, 147, 148, 149, 150, 151, 165, 170, 173, 175, 177, 184, 185, 199, 206, 208, 209, 210, 211, 214, 216, 217, 218, 219, 220, 221, 231, 232, 251, 259, 262, 263, 264, 273, 278, 285, 286, 287, 294, 537, 565, 587, 589, 590, 597, 598, 603, 612, 613, 614, 616, 617, 619, 620, 622, 624], "should_change_photometricinterpretation_to_rgb": [216, 217, 218, 219, 220, 221], "shouldn": 29, "show": [2, 3, 4, 6, 9, 10, 12, 17, 21, 24, 25, 27, 47, 52, 53, 109, 128, 587, 588, 592, 594, 605, 607, 610, 613, 614, 620, 622, 624], "show_charset_nam": [21, 22, 610], "show_dicomdir": [587, 595, 596], "show_file_meta": [576, 587, 602], "shown": [25, 26, 28, 42, 47, 52, 56, 289, 587, 588, 589, 602, 614, 616], "showvr": 128, "shrunk": 50, "shutil": 616, "sibl": 176, "side": 20, "sigma": 623, "sign": [29, 30, 32, 34, 36, 37, 39, 50, 80, 259, 296, 541, 544, 587, 603, 612, 613, 619, 622, 624], "signal": [30, 33, 34, 36, 132, 133, 134, 231, 278, 541, 619], "signal_to_noise_ratio": 33, "signatur": [30, 34, 131, 161, 162, 206, 587, 603], "signed": [29, 37, 132, 133, 134, 251, 262, 264, 285, 287], "signific": [29, 39, 43, 296, 544, 551, 562, 564, 587, 590], "silent": [587, 605], "similar": [26, 27, 53, 132, 133, 134, 203, 541, 587, 589, 593, 615, 620, 623], "similarli": [42, 540, 614], "simpl": [22, 42, 587, 588], "simpler": 614, "simplest": [43, 616, 618], "simpli": [26, 27], "simplifi": [159, 161, 587, 589, 593, 608, 619], "simul": [16, 132, 133, 134], "sin": 624, "sinc": [18, 39, 47, 91, 92, 98, 129, 132, 133, 134, 137, 138, 147, 148, 149, 151, 156, 186, 541, 573, 574, 587, 607, 612, 616, 624], "sine": 624, "singl": [25, 26, 30, 32, 34, 36, 37, 38, 39, 53, 78, 108, 110, 128, 132, 133, 134, 139, 143, 148, 150, 151, 156, 172, 173, 175, 204, 205, 214, 215, 220, 250, 251, 258, 259, 262, 264, 275, 285, 287, 289, 290, 556, 565, 587, 588, 598, 606, 612, 615, 616, 620, 622], "singleton": [56, 207, 587, 608], "site": 616, "size": [2, 8, 9, 20, 24, 26, 34, 36, 50, 52, 56, 67, 97, 128, 159, 161, 162, 166, 183, 216, 217, 511, 548, 587, 597, 603, 607, 618, 620], "size_in_byt": 576, "skip": [4, 18, 587, 606, 612, 622], "skipcount": 4, "sl": [20, 26, 28, 32, 572], "slice": [1, 2, 5, 6, 8, 9, 20, 26, 28, 132, 133, 134, 511, 548, 587, 596, 597, 599, 610, 622], "sliceloc": [4, 9, 26, 28], "slicethick": 4, "slight": 622, "slope": [20, 224, 226, 267, 269], "slow": [587, 594], "slower": [38, 41, 44, 276, 291], "slowest": [587, 606], "small": [587, 590, 596, 598, 611, 618], "smaller": [541, 615], "smallest": [2, 8, 20, 541], "smart": 20, "smptest211020uncompressedinterlacedactivevideo": [587, 608], "smptest211020uncompressedprogressiveactivevideo": [587, 608], "smptest211030pcmdigitalaudio": [587, 608], "sn": 20, "snan": 541, "snapshot": 618, "snip": 614, "snippet": [25, 26, 47], "snome": 294, "so": [3, 16, 26, 27, 30, 32, 34, 37, 39, 42, 43, 44, 49, 50, 52, 53, 93, 132, 133, 134, 175, 177, 186, 212, 294, 538, 540, 541, 587, 588, 591, 608, 612, 614, 615, 616, 619, 620, 624], "softwar": [2, 8, 20, 43, 618], "softwarevers": 42, "some": [9, 14, 16, 17, 26, 28, 42, 43, 47, 49, 50, 51, 52, 53, 56, 76, 89, 99, 132, 133, 169, 186, 541, 542, 549, 587, 588, 589, 591, 593, 596, 597, 607, 613, 614, 615, 616, 618, 623], "somenewtag": 47, "someth": [10, 14, 23, 25, 26, 30, 34, 49, 53, 132, 587, 608, 612, 620], "sometim": [43, 47, 587, 598, 608, 622], "somewher": 6, "son": 132, "sop": [2, 8, 9, 10, 12, 20, 26, 27, 28, 38, 42, 47, 50, 51, 69, 132, 133, 134, 136, 168, 173, 174, 175, 176, 186, 199, 222, 231, 252, 265, 275, 278, 279, 290, 576, 587, 596, 597, 603, 606, 607, 614, 619, 620, 622], "sopclassuid": [9, 24, 26, 28, 174, 614, 624], "sopinstanceuid": [24, 26, 38, 174], "sorri": [587, 595], "sort": [4, 10, 132, 133, 134, 294, 616], "sort_kei": [132, 133, 134], "sourc": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 23, 26, 28, 29, 30, 34, 47, 52, 56, 67, 76, 77, 78, 79, 81, 82, 94, 96, 98, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 587, 595, 603, 605, 608, 611, 614, 617, 618, 624], "sourcetosurfacedist": 11, "space": [2, 8, 9, 20, 29, 30, 34, 36, 37, 38, 39, 46, 53, 109, 132, 133, 134, 223, 232, 233, 250, 259, 266, 273, 274, 511, 546, 548, 551, 562, 564, 566, 587, 596, 608, 614, 616, 619, 622], "span": 147, "sparingli": 53, "special": [43, 60, 576, 587, 594], "specif": [10, 20, 24, 26, 27, 28, 29, 34, 35, 42, 44, 47, 49, 50, 52, 53, 76, 77, 78, 79, 132, 133, 134, 165, 166, 175, 180, 203, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 511, 541, 548, 571, 587, 588, 590, 596, 598, 599, 602, 603, 608, 612, 613, 614, 615, 616, 619, 620, 622], "specifi": [24, 25, 26, 27, 28, 36, 37, 39, 42, 109, 111, 128, 132, 133, 134, 150, 165, 166, 186, 198, 223, 231, 233, 251, 252, 259, 262, 264, 266, 274, 278, 279, 285, 287, 511, 539, 541, 543, 546, 547, 548, 572, 587, 600, 605, 614, 616, 618, 619, 622], "specific_tag": [163, 165, 166, 169, 262, 264, 285, 287, 614], "specificcharacterset": 173, "spectroscopi": 173, "sped": 619, "speed": [20, 587, 590, 594, 598, 605, 607], "spell": [53, 76, 587, 598], "sphinx": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 53, 587, 591, 613], "spine": [10, 616], "split": [20, 511, 548, 571, 587, 588, 589], "splitlin": [511, 548], "spot": 20, "spread": [587, 608], "spring": [222, 265], "sq": [0, 8, 32, 56, 128, 132, 133, 134, 163, 560, 587, 593, 603, 606, 608, 614], "sqrt": 541, "squar": [42, 47, 541, 614], "sr": [173, 546, 576, 587, 605, 608, 623], "src": [9, 10, 29, 30, 33, 34, 37, 69, 97, 250, 251, 258, 259, 262, 264, 276, 280, 285, 287, 291, 616, 619], "srgb": [223, 233, 266, 274], "srt": [587, 608], "ss": [2, 4, 20, 26, 28, 32, 184, 185, 210, 543, 547, 572, 587, 589, 608, 624], "ssd": 11, "st": 32, "st000000": [10, 616], "st000001": [10, 616], "st000002": 10, "st000003": 10, "st_mtime": 167, "stabl": 618, "stack": 624, "stackoverflow": 611, "stage": [10, 174, 175, 612, 613], "stamp": 20, "stand": 76, "standard": [12, 20, 22, 32, 36, 37, 38, 39, 43, 44, 47, 50, 51, 53, 56, 128, 132, 133, 134, 135, 139, 143, 146, 147, 148, 149, 150, 151, 153, 154, 175, 186, 199, 203, 215, 218, 222, 224, 226, 227, 228, 229, 232, 263, 265, 267, 269, 270, 271, 272, 273, 276, 286, 289, 291, 297, 537, 541, 542, 545, 546, 587, 589, 592, 593, 595, 596, 603, 605, 608, 615, 616, 618, 619, 620, 624], "start": [0, 6, 17, 18, 20, 24, 26, 27, 28, 37, 49, 52, 67, 128, 130, 132, 133, 134, 135, 145, 146, 148, 150, 151, 154, 155, 164, 170, 176, 177, 182, 184, 185, 214, 250, 251, 264, 287, 292, 293, 511, 537, 548, 560, 568, 587, 597, 607, 608, 612, 613, 614, 615, 619, 623], "startswith": [511, 548], "stat": [20, 167], "state": [192, 587, 608, 615], "statement": [587, 591], "static": [26, 28, 134, 511, 548], "station": [2, 8, 20], "statu": [20, 116, 128], "stdin": [85, 614, 616, 619, 622], "stdlib": 48, "stdout": [24, 26], "step": [53, 587, 594, 605, 616, 623, 624], "stereometr": 173, "stick": 614, "sticki": 0, "still": [10, 44, 47, 587, 593, 594, 596, 597, 598, 600, 612, 614, 615, 616, 622], "stop": [130, 165, 169, 214, 292, 293, 511, 548, 587, 590], "stop_before_pixel": [165, 587, 590, 622], "stop_when": [163, 166, 169], "storag": [2, 9, 12, 14, 20, 26, 27, 28, 42, 47, 50, 69, 136, 197, 199, 576, 587, 590, 591, 596, 606, 614, 616, 624], "store": [2, 8, 10, 17, 20, 29, 32, 34, 37, 38, 39, 41, 42, 47, 50, 106, 128, 131, 132, 133, 134, 165, 200, 208, 209, 210, 211, 224, 226, 231, 250, 258, 259, 267, 269, 275, 278, 280, 290, 539, 541, 542, 543, 544, 545, 547, 587, 590, 605, 608, 609, 614, 615, 616, 619, 620, 622, 624], "store_data_and_return_uri": 615, "str": [0, 11, 14, 20, 29, 30, 32, 34, 42, 76, 77, 78, 79, 88, 92, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 144, 145, 146, 150, 154, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 186, 187, 193, 197, 198, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 221, 222, 223, 230, 231, 232, 233, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 273, 274, 275, 277, 278, 279, 281, 282, 283, 285, 287, 290, 293, 294, 295, 296, 297, 511, 537, 538, 539, 540, 541, 542, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 587, 597, 602, 605, 614, 618, 620, 622], "straightforward": [50, 619], "stream": [67, 148, 156, 159, 161, 162, 587, 608, 612, 619, 622], "streamhandl": 94, "streamlin": [587, 594], "strftime": [12, 539, 543, 547], "strict": [0, 43, 511, 545, 548, 587, 600, 607], "strictli": 43, "string": [16, 17, 20, 25, 26, 32, 42, 56, 77, 78, 79, 109, 128, 132, 133, 134, 135, 165, 176, 187, 196, 198, 200, 204, 205, 214, 251, 259, 294, 296, 511, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 556, 565, 566, 567, 571, 587, 590, 592, 593, 597, 598, 603, 605, 615], "strip": [511, 541, 548, 620], "strongli": [139, 175, 616], "strptime": 543, "struct": [20, 201, 565], "struct_format": [201, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 563, 564, 565, 567], "structur": [10, 26, 27, 42, 69, 173, 175, 176, 587, 600, 607, 608, 614, 616, 617], "studi": [2, 8, 9, 10, 20, 26, 27, 28, 42, 173, 175, 616], "study1": [26, 28], "study_uid": 10, "studyd": [9, 10, 24, 26, 27, 28, 616], "studydescript": [10, 26, 28, 175, 616], "studyid": [26, 28], "studyinstanceuid": 10, "studytim": [10, 24, 26, 28, 616], "stuff": 14, "stxxxxxx": 175, "style": [0, 23, 539, 543, 547, 587, 589, 592], "sub": [25, 26, 36, 132, 133, 134, 251, 262, 264, 285, 287, 511, 548, 576], "subclass": [511, 587, 597, 608], "subcommand": [25, 26, 27, 587, 605], "subcommandnam": [25, 26], "subdirectori": [587, 595], "subject": [53, 615, 623], "submit": [26, 28, 587, 593, 611, 612, 613], "submodul": [587, 608], "subnorm": 541, "subpars": [25, 26], "subplot": [3, 4, 622, 624], "subsampl": 280, "subsequ": 165, "subset": [10, 24, 26], "substanti": [587, 590], "substitut": [511, 548], "substr": [511, 548], "success": [132, 133, 134, 251, 252, 262, 264, 279, 285, 287, 613, 618, 622], "successfulli": [30, 34, 150], "suever": [587, 594], "suffici": [144, 146, 150, 251, 259, 620], "suffix": [12, 177, 511, 537, 546, 548, 587, 608], "suggest": [43, 611, 612, 613], "suit": [20, 47, 587, 607, 619], "suitabl": [175, 222, 250, 252, 265, 276, 279, 288, 291, 511, 548, 618, 620], "summar": [11, 616], "summari": [10, 25, 26, 612], "summer": [222, 265], "sundai": [539, 543], "super": 134, "supp": [587, 590], "supplement": [222, 265], "suppli": [0, 14, 52, 79, 144, 146, 150, 165, 175, 222, 223, 233, 251, 259, 265, 266, 274, 537, 546, 614, 616, 622], "support": [30, 34, 36, 41, 43, 46, 70, 71, 80, 97, 132, 133, 134, 161, 162, 175, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 231, 233, 251, 259, 260, 265, 266, 274, 276, 278, 288, 289, 291, 292, 296, 544, 572, 587, 588, 596, 597, 598, 599, 600, 602, 603, 605, 606, 607, 608, 616, 617, 618, 619, 623], "supports_transfer_syntax": [97, 216, 217, 218, 219, 220, 221], "suppos": 221, "suppress": [587, 605], "suppress_invalid_tag": [132, 133, 134, 587, 607], "sure": [9, 37, 45, 52, 612, 614, 618], "surfac": 173, "surround": 614, "sv": [32, 572, 587, 600], "sv1": [41, 45, 260, 289, 587, 602], "swap": [192, 251, 558], "swapcas": [511, 548], "switch": [52, 89, 587, 591, 593, 595, 600, 602, 605, 607, 612, 613], "sy": [0, 4, 14, 296, 544, 624], "symmetr": 615, "synchronis": [51, 624], "synonym": [587, 588], "syntax": [2, 12, 16, 20, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 41, 42, 46, 47, 52, 97, 132, 133, 134, 136, 139, 141, 147, 148, 166, 174, 175, 183, 186, 199, 216, 217, 218, 219, 220, 221, 231, 250, 251, 252, 258, 259, 260, 261, 262, 264, 275, 278, 279, 285, 287, 289, 290, 302, 396, 401, 404, 427, 457, 464, 511, 514, 538, 576, 587, 590, 591, 596, 598, 599, 600, 602, 603, 607, 608, 609, 614, 618, 619, 624], "system": [20, 24, 26, 27, 28, 43, 159, 161, 162, 175, 296, 544, 587, 608, 614, 616, 618, 624], "t": [4, 8, 10, 18, 20, 26, 27, 28, 29, 32, 36, 37, 39, 42, 45, 47, 49, 52, 53, 84, 132, 133, 134, 144, 146, 147, 150, 166, 175, 186, 214, 215, 218, 221, 232, 250, 251, 259, 262, 264, 273, 275, 285, 287, 288, 290, 292, 511, 537, 543, 548, 587, 599, 602, 603, 608, 612, 613, 614, 615, 616, 618, 619, 620, 622], "t1": 42, "t2": 42, "t3": 42, "t4": 42, "tab": [511, 548, 613], "tabl": [20, 23, 32, 36, 37, 38, 41, 44, 50, 67, 128, 132, 133, 134, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 186, 199, 215, 218, 220, 221, 222, 224, 226, 227, 228, 231, 250, 258, 265, 267, 269, 270, 271, 278, 289, 511, 548, 572, 587, 600, 603, 608, 613, 614, 616, 618, 619, 622], "tabsiz": [511, 548], "tag": [16, 17, 26, 28, 29, 32, 46, 47, 49, 50, 56, 60, 67, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 145, 148, 151, 152, 153, 154, 155, 159, 161, 162, 163, 165, 167, 175, 183, 184, 188, 203, 215, 218, 220, 221, 262, 264, 281, 282, 285, 287, 288, 289, 568, 572, 576, 587, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 602, 603, 605, 606, 608, 614, 615, 622], "tag_in_except": 60, "tagtyp": [132, 133, 134], "take": [2, 24, 25, 26, 30, 34, 39, 52, 53, 132, 133, 134, 163, 173, 214, 587, 594, 608, 612, 613, 614, 616], "taken": [39, 132, 133, 134, 144, 146, 150, 230, 277, 289], "target": [26, 27, 53], "target_vr": [206, 209, 210], "tarou": 22, "task": [613, 619], "tb": 157, "tdir": 10, "teardown": [587, 607], "technic": [53, 54], "techniqu": 39, "tell": [67, 132, 133, 134, 144, 145, 146, 150, 154, 155, 159, 161, 162, 165, 186, 587, 589, 608, 613, 616], "temp": [49, 50], "tempfil": [10, 12, 17, 616], "temporari": [174, 587, 608, 616], "temporarili": 43, "temporarydirectori": [10, 616], "ten": 541, "tend": [49, 618], "term": [20, 50, 215, 250, 258, 281, 296, 541, 543, 544, 547, 619], "termin": [20, 26, 27, 28, 43, 148, 166, 179], "test": [2, 12, 16, 24, 26, 27, 28, 42, 89, 108, 109, 110, 132, 133, 134, 511, 541, 548, 550, 587, 588, 594, 596, 600, 603, 605, 607, 619], "test_fil": [9, 10, 24, 26, 42, 69, 613, 614, 616], "test_new_uid": 612, "test_uid": 612, "teston": [108, 109], "testtwo": [108, 109], "text": [0, 20, 22, 32, 42, 47, 128, 165, 202, 203, 205, 208, 209, 210, 511, 548, 560, 566, 567, 569, 570, 587, 589, 598, 612, 613, 614], "tggc": [20, 26, 28], "thai": [587, 596], "than": [24, 25, 26, 27, 28, 29, 32, 37, 38, 39, 41, 44, 45, 49, 52, 53, 56, 128, 132, 133, 134, 143, 144, 145, 146, 147, 148, 150, 151, 159, 161, 162, 165, 169, 175, 178, 187, 201, 214, 230, 231, 263, 275, 277, 278, 286, 289, 290, 537, 541, 587, 588, 589, 590, 595, 596, 597, 600, 602, 605, 608, 614, 615, 619, 620], "thank": [587, 590, 593], "thei": [4, 29, 36, 42, 47, 49, 50, 53, 76, 88, 97, 132, 133, 134, 136, 186, 199, 225, 231, 268, 278, 511, 548, 587, 605, 608, 612, 613, 614, 616, 618, 619, 620, 622], "them": [4, 8, 24, 26, 27, 28, 30, 34, 42, 45, 47, 49, 52, 53, 54, 132, 133, 134, 159, 161, 162, 554, 556, 587, 595, 599, 603, 613, 614, 616, 622], "theme_us": 0, "theoret": [587, 608], "therefor": [29, 37, 214, 280, 619], "theta": 20, "thi": [2, 3, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 39, 42, 43, 47, 49, 50, 52, 53, 54, 69, 76, 81, 82, 83, 86, 87, 89, 96, 97, 109, 128, 131, 132, 133, 134, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 156, 163, 165, 168, 174, 175, 186, 192, 203, 206, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 231, 233, 250, 251, 252, 258, 259, 262, 264, 265, 266, 270, 271, 272, 274, 278, 279, 280, 285, 287, 296, 511, 539, 540, 541, 542, 543, 545, 546, 548, 549, 550, 576, 594, 596, 599, 600, 605, 608, 612, 613, 614, 615, 616, 618, 619, 620, 622, 623, 624], "thick": [2, 8, 20], "thing": [42, 49, 613, 614, 622], "think": [25, 26], "third": [37, 46, 511, 541, 546, 548, 618], "third_party_compression_func": [44, 619], "thoroughli": 619, "those": [26, 28, 29, 30, 34, 40, 43, 47, 587, 590, 593, 603, 614, 616, 622], "though": [37, 616, 619], "thread": [251, 259, 541], "three": [16, 30, 34, 37, 53, 110, 511, 546, 548, 614, 616, 622], "threshold": [132, 133, 134], "through": [8, 17, 30, 34, 42, 47, 50, 53, 132, 133, 134, 168, 182, 184, 185, 251, 262, 285, 541, 587, 588, 589, 608, 612, 613, 614, 618, 622, 623], "throughput": [45, 237, 238, 239], "thrown": [587, 596], "thu": [47, 587, 588], "tick": 53, "tight_layout": 3, "tile": 36, "tilt": 20, "time": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 26, 27, 28, 32, 42, 43, 47, 52, 69, 91, 93, 109, 133, 146, 167, 180, 183, 276, 291, 539, 540, 543, 547, 587, 590, 596, 605, 611, 612, 613, 614, 616, 624], "timelin": [587, 599], "timespec": [543, 547], "timestamp": [133, 167, 539, 543], "timetupl": [539, 543], "timetz": 543, "timezon": [2, 8, 20, 543], "titl": [0, 2, 20, 26, 28, 47, 53, 199, 511, 546, 548, 612, 613, 614], "titlecas": [511, 548], "tix": [587, 588], "tk": [0, 22], "tkinter": [0, 22, 48, 587, 588, 590], "tm": [2, 12, 20, 26, 27, 28, 32, 42, 60, 65, 93, 561, 567, 587, 596, 605, 614], "tmp": [10, 12, 616], "tmp0aalrzir": 616, "tmp2_1rq_n7": 10, "tmpsqz8rhgb": 616, "tmpu068kdwp": 616, "tmpyx13n9yt": 12, "to_byt": [296, 544], "to_eng_str": 541, "to_integr": 541, "to_integral_exact": 541, "to_integral_valu": 541, "to_json": [128, 132, 133, 134, 587, 601, 615], "to_json_dict": [128, 132, 133, 134, 587, 601, 607, 608, 615], "tobyt": [2, 50, 620, 624], "toctre": 613, "todai": [539, 543], "togeth": [138, 139, 187, 620], "toi": 18, "toler": [587, 589, 600], "toml": [43, 587, 607], "too": [44, 132, 133, 134, 135, 231, 278, 511, 548, 568, 587, 597, 599, 600, 611], "tool": [52, 587, 608], "toordin": [539, 543], "top": [20, 26, 27, 28, 49, 53, 132, 133, 134, 166, 175, 587, 608, 613, 614], "top_nod": 175, "toshiba": [2, 8, 20], "toshiba_mec": [2, 8, 20], "total": [2, 3, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 37, 67, 139, 141, 215, 250, 258, 281, 541, 610], "toward": [24, 26], "traceback": [85, 299, 614, 616, 619, 622], "track": 37, "tracker": [611, 612], "tract": 173, "trail": [2, 8, 20, 26, 28, 143, 215, 250, 258, 281, 511, 541, 548, 551, 562, 564, 566, 587, 596, 614, 620], "train": [2, 8, 20], "trait_nam": [132, 133, 134, 294], "transfer": [2, 12, 16, 20, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 41, 42, 46, 47, 97, 132, 133, 134, 136, 139, 141, 147, 148, 166, 174, 175, 183, 186, 199, 216, 217, 218, 219, 220, 221, 231, 250, 251, 252, 258, 259, 260, 261, 262, 264, 275, 278, 279, 285, 287, 289, 290, 302, 396, 401, 404, 427, 457, 464, 511, 514, 538, 576, 587, 591, 596, 598, 599, 600, 602, 603, 607, 608, 609, 614, 618, 619, 624], "transfer_syntax": [97, 216, 217, 218, 219, 221, 250, 258], "transfer_syntax_uid": [30, 34, 132, 133, 134, 231, 278], "transfersyntaxuid": [12, 32, 44, 45, 140, 141, 142, 174, 587, 589, 596, 614, 619, 620, 622], "transform": [36, 39, 50, 223, 233, 266, 274, 619], "translat": [24, 26, 42, 511, 548, 587, 596], "transvers": 584, "travisci": [587, 596], "treat": [173, 250, 616, 619], "treatment": [26, 28], "tree": [6, 21, 176, 587, 594, 610, 614], "tree_item": 0, "tree_seq_item": 0, "treeview": 0, "tri": [132, 133, 134, 159, 161, 162, 231, 251, 252, 259, 262, 264, 278, 279, 285, 287, 587, 608, 622], "tricki": 52, "trigger": [20, 26, 28], "troubl": 612, "true": [0, 10, 12, 16, 29, 30, 32, 33, 34, 42, 43, 44, 47, 51, 53, 56, 67, 69, 80, 81, 82, 88, 89, 93, 94, 96, 97, 100, 106, 115, 116, 125, 126, 128, 130, 132, 133, 134, 136, 139, 140, 148, 151, 157, 159, 161, 162, 163, 165, 166, 170, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 199, 212, 215, 216, 217, 218, 219, 220, 221, 228, 231, 232, 250, 251, 252, 258, 259, 262, 263, 264, 271, 273, 275, 276, 278, 279, 284, 285, 286, 287, 288, 290, 291, 294, 296, 511, 538, 541, 542, 545, 548, 550, 551, 552, 553, 554, 555, 556, 560, 561, 562, 564, 565, 567, 568, 572, 587, 591, 593, 603, 605, 607, 608, 614, 616, 619, 620, 622, 624], "truli": 52, "truncat": [511, 548, 549, 587, 589], "truthi": [587, 600], "try": [53, 97, 132, 133, 134, 184, 185, 210, 250, 511, 548, 587, 591, 599, 608, 614, 616, 620], "tsyntax": [220, 250, 258, 622], "ttk": 0, "tube": 20, "tupl": [30, 34, 42, 44, 47, 85, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 132, 133, 134, 135, 141, 142, 144, 146, 147, 150, 151, 155, 159, 161, 162, 165, 209, 210, 214, 250, 251, 258, 259, 292, 297, 298, 511, 539, 541, 543, 546, 548, 587, 590, 599, 619, 620, 622], "tupletag": [60, 587, 590], "turkish": [587, 596], "turn": [43, 94, 166, 587, 603], "tut": 613, "tutori": [34, 52, 53, 587, 600, 611, 612, 613, 614, 616, 619, 620, 622, 624], "two": [16, 20, 25, 26, 28, 39, 42, 43, 47, 53, 89, 108, 109, 110, 132, 133, 134, 143, 175, 280, 296, 511, 541, 544, 546, 548, 587, 594, 608, 614, 615, 619, 620, 624], "txt": [43, 614], "type": [2, 3, 8, 17, 18, 20, 25, 26, 27, 28, 29, 30, 34, 39, 40, 42, 44, 47, 50, 54, 67, 69, 76, 77, 79, 82, 99, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 150, 151, 152, 154, 155, 156, 159, 161, 162, 165, 166, 167, 169, 170, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 198, 199, 201, 206, 208, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 250, 251, 252, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 291, 294, 297, 511, 537, 538, 541, 546, 549, 550, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 564, 566, 567, 568, 569, 570, 571, 572, 587, 590, 591, 593, 604, 605, 607, 608, 613, 614, 616, 620, 624], "type_constructor": [214, 614], "typeerror": [134, 165, 214, 216, 217, 587, 597, 603, 614], "typeofpatientid": 614, "typic": [29, 39, 96, 137, 622], "typo": 611, "tz": 543, "tzinfo": [543, 547], "tzname": [543, 547], "u": [2, 20, 26, 28, 32, 69, 110, 131, 132, 133, 134, 159, 161, 162, 184, 185, 210, 511, 548, 572, 587, 589, 615, 616, 618, 619, 620, 622, 624], "u1": 622, "ub": 572, "uc": [32, 569, 587, 596], "ucum": 623, "ui": [2, 12, 16, 20, 26, 27, 28, 32, 42, 47, 195, 199, 562, 587, 590, 600, 614], "uid": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 50, 52, 97, 132, 133, 134, 136, 139, 140, 141, 142, 174, 175, 186, 199, 216, 217, 218, 219, 220, 221, 222, 231, 250, 251, 252, 258, 259, 260, 261, 265, 275, 278, 279, 289, 290, 562, 571, 576, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 602, 603, 605, 606, 607, 608, 612, 614, 616, 618, 619, 620, 622], "uid_dictionari": [587, 588], "uint": [263, 286], "uint16": [132, 133, 134, 222, 224, 226, 227, 228, 259, 265, 267, 269, 270, 271, 275, 290, 620], "uint8": [49, 132, 133, 134, 222, 224, 226, 227, 228, 232, 265, 267, 269, 270, 271, 273, 275, 290, 619, 620], "ul": [2, 12, 16, 20, 26, 27, 28, 32, 42, 47, 108, 109, 110, 159, 161, 162, 199, 572, 614, 616], "ultrasound": 616, "uml": 623, "un": [16, 32, 56, 90, 163, 186, 196, 208, 563, 587, 588, 600, 602, 605, 606, 608, 614], "unabl": [132, 133, 134, 159, 161, 162, 186, 208, 283, 587, 608, 614, 616, 622], "unaffect": 541, "unavail": [251, 259], "uncas": [511, 548], "unchang": [10, 76, 184, 185, 224, 225, 226, 227, 228, 229, 267, 268, 269, 270, 271, 272, 541, 619], "uncom": [587, 594], "uncommon": 545, "uncompress": [2, 8, 20, 29, 34, 36, 37, 38, 41, 44, 45, 50, 132, 133, 134, 231, 252, 258, 259, 278, 279, 280, 514, 587, 598, 600, 605, 606, 619, 620, 622], "uncompressedpixeltransfersyntax": [587, 603, 608], "uncompressedtransfersyntax": [587, 603, 608], "unconvert": [132, 133, 134], "undecod": 130, "undefin": [44, 56, 128, 148, 163, 179, 587, 592, 603, 606], "undefinedlength": [587, 588], "under": [25, 26, 42, 139, 141, 587, 588, 590, 596, 612, 613, 618], "underflow": [20, 541], "undergon": 622, "underli": 38, "underscor": 623, "understand": [42, 53, 251, 612, 619, 624], "undesir": 45, "undocu": 618, "unencapsul": 39, "unencod": [30, 34, 259], "unequ": 541, "unexpect": [587, 600], "unfamiliar": 53, "unicod": [6, 21, 32, 77, 79, 511, 546, 548, 587, 588, 590, 591, 607, 610], "unicodedecodeerror": 77, "unicodeencodeerror": [79, 511, 548], "uniqu": [20, 30, 32, 34, 39, 47, 175, 176, 177, 195, 251, 259, 587, 596, 607, 608, 614, 616], "unit": [33, 37, 50, 132, 133, 134, 165, 215, 250, 258, 281, 572, 612, 619, 622, 624], "unitless": [3, 50, 572, 624], "unittest": 612, "unknown": [16, 20, 32, 47, 85, 128, 132, 133, 134, 148, 196, 587, 592, 597, 599, 603, 605, 614, 623], "unless": [53, 169, 176, 511, 541, 548, 587, 591, 602, 616], "unlik": [132, 133, 134, 541], "unlimit": 32, "unlink": 12, "unneed": [587, 597], "unoffici": [587, 594], "unpack": [49, 132, 133, 134, 251, 262, 264, 276, 285, 287, 291, 565, 587, 598, 606], "unpack_bit": [576, 587, 606, 608], "unpickl": [587, 600], "unrealist": [132, 133, 134], "unrecover": 537, "unsign": [29, 30, 32, 34, 36, 37, 39, 50, 151, 232, 259, 273, 587, 603, 619, 624], "unspecifi": [159, 161, 162], "unsupport": [165, 216, 217, 218, 221], "until": [10, 159, 161, 162, 165, 166, 169, 180, 183, 587, 588, 593, 605, 608, 616], "untouch": [511, 548], "unus": [29, 587, 598, 608, 620], "up": [37, 49, 50, 67, 132, 133, 134, 159, 161, 162, 175, 176, 183, 186, 220, 537, 541, 546, 571, 587, 590, 594, 596, 612, 613, 614, 617, 618, 619], "upcom": [43, 96], "updat": [2, 10, 18, 20, 26, 27, 37, 38, 49, 108, 109, 110, 111, 132, 133, 134, 173, 175, 184, 185, 199, 231, 232, 250, 252, 262, 264, 273, 275, 278, 279, 285, 287, 290, 587, 589, 590, 592, 593, 595, 596, 597, 598, 600, 602, 603, 605, 606, 607, 608, 612, 613, 616, 618, 619, 622], "update_raw_el": [132, 133, 134, 587, 608], "upon": [132, 133, 134], "upper": [511, 541, 548, 587, 608], "uppercas": [53, 128, 511, 548], "ur": [32, 564], "uri": [32, 132, 133, 134, 587, 603, 615], "url": [32, 53], "urllib": [587, 605], "us": [1, 3, 5, 6, 7, 9, 10, 12, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 56, 69, 77, 78, 79, 80, 84, 85, 88, 91, 92, 94, 95, 96, 97, 98, 101, 102, 106, 109, 111, 128, 129, 131, 132, 133, 134, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 161, 162, 163, 165, 166, 168, 169, 173, 175, 176, 177, 183, 184, 185, 186, 198, 201, 202, 203, 206, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 230, 231, 233, 250, 251, 252, 258, 259, 262, 263, 264, 265, 266, 267, 269, 274, 275, 276, 277, 278, 279, 280, 285, 286, 287, 288, 290, 291, 292, 294, 296, 299, 457, 511, 537, 538, 541, 543, 544, 545, 546, 548, 549, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 572, 573, 574, 580, 581, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 619, 620, 622, 623, 624], "us1_rl": 44, "usabl": [251, 511, 548], "usag": [14, 24, 26, 27, 28, 30, 38, 42, 46, 232, 262, 264, 273, 285, 287, 511, 546, 576, 587, 600, 608, 616, 619, 620], "usb": 616, "use_bot": 67, "use_decimal_boolean": 81, "use_ds_decim": [32, 82, 554, 576, 587, 602], "use_ds_numpi": [81, 554, 576, 587, 602], "use_exist": [175, 616], "use_is_numpi": [556, 576, 587, 602], "use_mct": 33, "use_numpi": 82, "use_v2_backend": [132, 133, 134], "user": [20, 30, 34, 40, 42, 69, 79, 88, 132, 133, 134, 163, 168, 186, 231, 251, 278, 576, 587, 590, 593, 599, 600, 603, 608, 612, 614, 616], "userwarn": [10, 84], "usual": [25, 26, 27, 28, 38, 42, 47, 50, 109, 133, 145, 157, 163, 587, 590, 612, 614, 618, 619], "ut": 32, "utc": [2, 8, 20, 543], "utcfromtimestamp": 543, "utcnow": 543, "utcoffset": [543, 547], "utctimetupl": 543, "utf": [22, 511, 548], "util": [24, 26, 52, 63, 64, 65, 69, 70, 576, 579, 587, 588, 595, 596, 608, 622], "uuid": 537, "uuid4": 537, "uuu": [543, 547], "uv": [32, 572, 587, 600], "v": [587, 599], "v1": [587, 597, 598, 599, 624], "v2": [26, 27, 38, 587, 603, 608, 618, 624], "v3": [2, 8, 20, 36, 37, 47, 587, 603, 605, 606, 608, 624], "v4": [91, 92, 98, 129, 132, 133, 134, 137, 138, 148, 149, 151, 156, 186, 573, 574, 587, 608, 624], "v5": 624, "v6": 624, "val": [128, 159, 161, 162, 187, 214, 292, 511, 540, 541, 542, 544, 545, 546, 549, 571, 614], "valid": [12, 46, 52, 56, 83, 86, 87, 89, 124, 128, 132, 133, 134, 136, 165, 178, 186, 199, 232, 250, 251, 258, 259, 273, 275, 290, 294, 461, 462, 511, 543, 547, 548, 549, 550, 554, 556, 565, 566, 569, 587, 605, 606, 607, 608, 619], "validate_dataset": 614, "validate_file_meta": [576, 587, 608, 614], "validate_valu": 128, "validation_mod": [128, 511, 540, 541, 542, 544, 545, 546], "valtyp": 571, "valu": [0, 2, 8, 9, 10, 12, 17, 20, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 42, 43, 47, 49, 50, 52, 53, 56, 60, 67, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 93, 96, 103, 109, 111, 112, 113, 122, 123, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 159, 161, 162, 164, 165, 167, 173, 175, 183, 184, 185, 186, 187, 196, 201, 202, 203, 206, 208, 209, 210, 214, 215, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 248, 250, 251, 252, 258, 259, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 282, 284, 286, 288, 289, 290, 292, 293, 296, 511, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 572, 576, 584, 587, 588, 589, 592, 593, 594, 596, 597, 598, 599, 600, 602, 603, 605, 606, 607, 608, 609, 612, 613, 614, 615, 616, 618, 619, 620, 622, 623, 624], "value_kei": 128, "value_tel": 130, "valueerror": [81, 82, 84, 85, 106, 107, 108, 109, 110, 111, 130, 132, 133, 134, 135, 136, 148, 151, 167, 175, 186, 199, 214, 215, 218, 221, 263, 276, 286, 291, 292, 293, 511, 537, 541, 542, 545, 548, 549, 554, 556, 568, 587, 608, 616, 619], "valuerep": [16, 22, 60, 553, 555, 559, 561, 576], "valuesview": [132, 133, 134], "vari": 614, "variabl": [26, 27, 42, 43, 53, 54, 69, 587, 599, 603, 607, 618], "variant": [2, 8, 20], "variat": 622, "varieti": [50, 619, 620], "variou": [25, 26, 47, 587, 588, 622], "ve": [44, 587, 595, 612, 613, 616, 619, 620, 622, 624], "verbos": [587, 608], "veri": [22, 32, 37, 41, 587, 590, 612, 616, 619, 620, 622], "verif": [587, 597], "verifi": [45, 587, 593], "versa": [38, 186, 222, 265], "version": [2, 8, 12, 20, 24, 26, 27, 28, 39, 42, 46, 47, 53, 56, 67, 80, 82, 84, 85, 89, 91, 92, 96, 98, 99, 100, 102, 103, 106, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 177, 184, 185, 186, 199, 206, 207, 208, 209, 210, 211, 212, 220, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 511, 537, 541, 548, 554, 556, 572, 573, 574, 612, 613, 614, 615, 623], "versionad": [53, 293], "versionchang": 53, "veterinari": 546, "via": [29, 41, 44, 56, 128, 131, 132, 133, 134, 220, 511, 539, 548, 584, 587, 596, 598, 603, 605, 606, 608, 615, 616, 619, 622], "vice": [38, 186, 222, 265], "videan42": [587, 595], "view": [4, 10, 20, 29, 38, 42, 46, 50, 132, 133, 134, 227, 228, 229, 250, 270, 271, 272, 587, 588, 590, 608, 613, 616, 624], "view_onli": [29, 132, 133, 134, 251, 262, 264, 285, 287], "viewer": [0, 48], "virtual": [43, 618], "virtualenv": 613, "visibl": 613, "visit": [132, 133, 134, 612, 613], "vm": [16, 32, 42, 62, 108, 109, 110, 111, 112, 118, 119, 122, 128, 587, 591, 599, 602, 608, 614], "vma": 20, "voi": [46, 225, 227, 228, 229, 268, 270, 271, 272, 587, 600, 603], "voic": 51, "volum": [216, 622], "voxel": 2, "vr": [0, 2, 8, 12, 16, 17, 20, 26, 27, 28, 39, 40, 42, 44, 45, 47, 54, 56, 60, 65, 82, 89, 90, 93, 101, 102, 108, 109, 110, 111, 113, 118, 119, 123, 128, 129, 130, 131, 132, 133, 134, 135, 143, 159, 161, 162, 163, 164, 166, 167, 175, 184, 185, 186, 191, 192, 195, 199, 200, 206, 208, 209, 210, 211, 218, 234, 235, 236, 240, 251, 252, 260, 275, 279, 290, 302, 511, 538, 539, 541, 542, 543, 544, 545, 546, 547, 551, 560, 562, 564, 565, 566, 567, 569, 570, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599, 600, 602, 603, 605, 606, 607, 608, 609, 614, 615, 619, 620, 622], "w": 614, "wa": [24, 25, 26, 39, 53, 128, 132, 133, 134, 150, 175, 180, 184, 185, 554, 556, 587, 590, 597, 600, 605, 608, 612, 613, 616], "wado": [128, 132, 133, 134, 615], "wai": [37, 42, 43, 49, 50, 132, 133, 134, 587, 593, 608, 611, 614, 615, 616, 618, 623], "walk": [17, 132, 133, 134], "wallac": [587, 591], "wang": 22, "want": [9, 10, 14, 24, 25, 26, 37, 43, 52, 177, 612, 613, 614, 615, 616, 618, 619, 622], "warn": [43, 52, 53, 56, 76, 77, 79, 84, 85, 284, 576, 587, 589, 593, 597, 598, 599, 600, 602, 605, 606, 608, 612, 613], "warn_and_log": 10, "water": [20, 546], "waveform": [1, 5, 6, 46, 54, 69, 132, 133, 134, 173, 576, 587, 603, 607, 610, 617], "waveform_arrai": [3, 46, 132, 133, 134, 587, 603, 624], "waveform_ecg": 69, "waveformbitsalloc": [572, 624], "waveformbitsstor": 624, "waveformdata": [51, 624], "waveformorigin": 624, "waveformsampleinterpret": [572, 624], "waveformsequ": [3, 51, 624], "wavelet": 36, "wb": 614, "we": [3, 10, 16, 17, 18, 24, 26, 28, 37, 38, 45, 93, 132, 133, 134, 611, 612, 613, 614, 616, 618, 619, 620, 624], "web": 613, "wedg": [26, 28], "week": [539, 543], "weekdai": [539, 543], "weight": [0, 2, 8, 20], "well": [41, 47, 50, 52, 69, 142, 175, 222, 265, 511, 548, 587, 590, 591, 593, 600, 608, 611, 612, 614, 618, 619], "were": [20, 26, 28, 132, 133, 134, 587, 593, 595, 612, 613, 620, 624], "weren": 619, "what": [10, 32, 39, 47, 49, 54, 175, 614, 616, 620, 622], "whatev": [230, 277, 619], "whatsoev": 251, "wheel": 618, "when": [10, 16, 23, 24, 25, 26, 27, 29, 30, 32, 34, 36, 37, 38, 39, 41, 42, 44, 47, 49, 50, 52, 53, 56, 80, 84, 85, 89, 93, 94, 97, 132, 133, 134, 139, 141, 144, 146, 147, 149, 150, 151, 157, 159, 161, 162, 169, 175, 177, 184, 185, 186, 221, 223, 224, 226, 227, 228, 229, 231, 251, 252, 259, 262, 264, 266, 267, 269, 270, 271, 272, 276, 278, 279, 285, 287, 288, 289, 291, 297, 299, 511, 537, 538, 546, 548, 587, 589, 590, 591, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609, 612, 613, 614, 616, 618, 619, 620, 622, 624], "whenc": [67, 159, 161, 162], "whenev": [587, 603], "where": [10, 30, 34, 36, 37, 39, 42, 43, 49, 50, 51, 56, 108, 110, 131, 132, 133, 134, 135, 139, 167, 173, 175, 180, 181, 224, 226, 250, 251, 258, 259, 267, 269, 511, 541, 548, 587, 589, 598, 599, 600, 608, 612, 613, 614, 616, 619, 620, 622], "whether": [29, 39, 42, 82, 102, 128, 132, 133, 134, 151, 250, 296, 511, 541, 544, 548, 550, 587, 590, 593, 598, 600, 605, 609, 611, 612, 618, 622], "which": [1, 6, 20, 23, 24, 25, 26, 30, 34, 36, 37, 39, 42, 45, 47, 50, 51, 52, 53, 77, 78, 84, 109, 128, 132, 133, 134, 163, 166, 168, 173, 175, 186, 199, 208, 209, 210, 211, 221, 230, 231, 251, 259, 264, 276, 277, 278, 287, 291, 511, 537, 538, 540, 541, 548, 587, 588, 591, 593, 595, 603, 608, 612, 613, 614, 615, 616, 618, 619, 620, 622, 624], "whichev": 259, "while": [10, 26, 27, 37, 38, 39, 45, 50, 56, 128, 132, 133, 134, 186, 221, 251, 259, 262, 264, 285, 287, 549, 587, 599, 600, 605, 608, 612, 616, 618, 619, 622], "white": [36, 37, 38, 587, 595], "whitespac": [511, 548], "whl": 618, "who": [30, 34, 251, 587, 593, 594], "whole": [24, 26, 163, 215, 250, 258, 281, 587, 608], "whose": [42, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 132, 133, 134, 250, 251, 258, 262, 264, 285, 287, 296, 511, 541, 542, 544, 545, 546, 548, 549, 612], "why": 38, "wide": 619, "widget": 0, "width": [2, 8, 20, 128, 227, 228, 229, 270, 271, 272, 511, 548, 614], "window": [0, 2, 8, 20, 26, 27, 43, 46, 227, 228, 229, 270, 271, 272, 587, 588, 596, 600, 606, 612, 613, 614, 618, 622], "windowcent": 614, "windowwidth": 614, "winter": [222, 265], "wip": [612, 613], "wise": 541, "wish": [25, 26, 36, 43, 288], "with_traceback": 157, "within": [24, 26, 27, 28, 30, 34, 37, 80, 89, 132, 133, 134, 165, 166, 174, 175, 186, 299, 511, 548, 560, 587, 603, 616, 618, 619, 624], "without": [10, 36, 42, 45, 47, 51, 106, 132, 133, 134, 157, 168, 181, 276, 291, 541, 551, 562, 564, 565, 587, 589, 597, 599, 603, 606, 607, 608, 614, 616, 618, 619], "witten": [587, 590], "wo": [10, 616], "won": [612, 613, 614, 616], "word": [32, 52, 53, 109, 192, 511, 546, 548, 614], "work": [6, 15, 19, 21, 25, 26, 27, 30, 32, 34, 37, 42, 43, 46, 47, 52, 53, 175, 511, 548, 587, 588, 590, 591, 593, 594, 595, 597, 599, 603, 608, 610, 612, 613, 614, 618, 620, 623, 624], "workflow": [587, 605, 612, 613], "world": [16, 614], "worri": 619, "worth": [30, 250, 258], "would": [10, 24, 25, 26, 27, 29, 38, 43, 52, 56, 541, 612, 613, 616, 620, 624], "wrap": [42, 53, 159, 161, 162, 186], "wrapper": [159, 161, 162, 587, 602], "write": [6, 7, 10, 13, 14, 16, 17, 24, 26, 40, 43, 46, 47, 54, 56, 70, 94, 132, 133, 134, 140, 142, 159, 161, 162, 175, 186, 188, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 541, 542, 576, 587, 589, 591, 596, 597, 599, 601, 602, 603, 605, 606, 608, 610, 613, 615, 616, 617, 620], "write_atvalu": 70, "write_da": 70, "write_data_el": 70, "write_dataset": [70, 587, 608], "write_dataset_to_byt": 14, "write_dt": 70, "write_fil": [587, 596, 605, 608], "write_file_meta_info": [70, 186], "write_like_origin": [132, 133, 134, 186, 587, 608], "write_new": [587, 592], "write_numb": 70, "write_number_str": 70, "write_obvalu": 70, "write_owvalu": 70, "write_pn": [70, 587, 597], "write_sequ": 70, "write_sequence_item": 70, "write_str": 70, "write_tag": [159, 161, 162], "write_text": 70, "write_tm": 70, "write_u": [159, 161, 162], "write_ui": 70, "write_ul": [159, 161, 162], "write_un": 70, "writeabl": [132, 133, 134, 186, 218, 251, 262, 264, 285, 287, 587, 608], "writeablebuff": [132, 133, 134, 159, 161, 162, 186], "writer": 89, "writing_validation_mod": [43, 56, 79, 128, 587, 606], "written": [12, 24, 26, 32, 43, 49, 50, 132, 133, 134, 159, 161, 162, 175, 186, 198, 199, 587, 599, 600, 608, 612, 614, 616, 622], "wrong": [587, 598, 599, 603, 607], "wrote": 52, "wxpython": [48, 587, 590], "x": [2, 3, 8, 9, 20, 26, 27, 28, 36, 53, 511, 537, 541, 548, 587, 599, 612, 614, 620, 622, 624], "x0": 620, "x00": [2, 8, 12, 16, 20, 26, 27, 28, 37, 42, 47, 49, 614, 620, 622], "x00t": 614, "x01": [2, 8, 12, 20, 26, 27, 28, 42, 47, 50, 614, 622], "x02": 50, "x03": 50, "x04": [8, 50], "x08": 614, "x18": 614, "x5e": 22, "x7f": 50, "x89": 50, "x8b": 22, "x8e": 22, "x8f": 22, "x94": 50, "x9d": 22, "x_unit": 3, "xa1": 22, "xab": 22, "xb0": 22, "xb1": 22, "xb6": 22, "xcb": 50, "xcd": 22, "xd0": 22, "xe0": 622, "xe5": 22, "xe6": 22, "xe7": 22, "xeb": 50, "xf5": 22, "xf9": 50, "xfb": 50, "xfe": [8, 622], "xff": [37, 622], "xffo": 622, "xffq": 622, "xiaodong": 22, "xm": [20, 26, 28], "xmlcharrefreplac": [511, 548], "xr": [10, 616], "xraytubecurr": 613, "xxx": 52, "xxxxxx": 175, "y": [12, 53, 280, 511, 541, 548, 620], "y0": 620, "y_unit": 3, "yamada": 22, "yaroslav": [587, 595], "ybr": [38, 50, 587, 605, 619, 622], "ybr_color": [69, 622], "ybr_full": [30, 34, 36, 37, 38, 39, 50, 132, 133, 134, 218, 220, 232, 251, 259, 262, 264, 273, 275, 280, 285, 287, 290, 587, 600, 606, 619], "ybr_full_422": [29, 39, 50, 132, 133, 134, 218, 220, 232, 251, 252, 262, 264, 273, 275, 279, 280, 285, 287, 290, 587, 600, 606, 622], "ybr_ict": [36, 39, 220, 619], "ybr_partial_420": 39, "ybr_rct": [36, 39, 220, 619], "ycbcr": [29, 36, 37, 38, 39, 132, 133, 134, 216, 217, 218, 219, 220, 221, 250, 251, 252, 262, 264, 279, 285, 287, 587, 608, 619, 622], "year": [539, 543], "yet": [614, 623], "yield": [10, 42, 132, 133, 134, 143, 144, 145, 146, 147, 148, 149, 153, 163, 176, 177, 220, 250, 251, 252, 259, 262, 279, 285, 572, 587, 608, 614, 616, 622, 624], "you": [10, 12, 14, 16, 18, 23, 24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 93, 139, 141, 165, 169, 173, 175, 177, 288, 511, 587, 600, 603, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 624], "your": [8, 10, 14, 23, 25, 26, 27, 30, 34, 36, 37, 38, 39, 42, 45, 46, 47, 52, 96, 139, 141, 175, 611, 614, 615, 616, 618, 622, 624], "your_fil": [24, 26, 27, 28], "yourarg": [25, 26], "yourpackag": [25, 26], "yourplan": [24, 26, 27, 28], "yourself": [25, 26, 49, 50], "yourusernam": [612, 613], "yyyi": [23, 539, 543], "z": [20, 89, 177, 178, 587, 608], "zenodo": 23, "zero": [4, 20, 32, 50, 132, 133, 134, 183, 250, 294, 511, 541, 548, 587, 607, 614, 619, 620, 622], "zfill": [511, 548], "zip": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 587, 599, 624], "\u03bcv": 624, "\u5409\u6d1e": 546, "\u6d2a": 546, "\uae38\ub3d9": 546, "\ud64d": 546}, "titles": ["Show a dicom file using hierarchical tree", "Image processing", "Downsize MRI image using pydicom", "Decode and plot Waveform Data", "Load CT slices and plot axial, sagittal and coronal images", "Computation times", "General examples", "Input-output", "Format the output of the data set printing", "Read a Dataset and plot Pixel Data", "Read a DICOM File-set", "Read RTPLAN DICOM and list information", "Write DICOM data", "Computation times", "Show working with memory-based dataset", "Metadata processing", "Add items to the private DICOM dictionary", "Anonymize DICOM data", "Working with sequences", "Computation times", "Analyse differences between DICOM files", "Computation times", "Display unicode person names", "Frequently asked questions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">codify</span></code> command", "Extending the CLI", "Command-line Interface Guide", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">show</span></code> command", "Pixel Data Decoder Options", "Pixel Data Decoder Plugins", "Pixel Data Decoding", "Element VRs and Python types", "Encoder Plugins Options", "Pixel Data Encoder Plugins", "Pixel Data Encoding", "JPEG 2000 Encoding", "JPEG-LS Encoding", "RLE Lossless Encoding", "Glossary", "Guides", "Plugins for Pixel Data Compression and Decompression", "Core elements in pydicom", "Best Practices", "Compressing <em>Pixel Data</em>", "Handling of compressed pixel data", "pydicom User Guide", "Private Data Elements", "Viewing Images", "Working with Overlay Data", "Working with Pixel Data", "Working with Waveform Data", "Writing DICOM Files", "Writing documentation", "pydicom documentation", "Character Encoding and Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.charset</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.config</span></code>)", "Getting Included Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.data</span></code>)", "Data Dictionary Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.datadict</span></code>)", "Representation of Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataset</span></code>)", "Representation of Data Elements", "Data Elements (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataelem</span></code>)", "Element Multi-value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.multival</span></code>)", "Sequence Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sequence</span></code>)", "Element Tags (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.tag</span></code>)", "Specialized Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.valuerep</span></code>)", "Element Value Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.values</span></code>)", "Bulk Data Encapsulation Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encaps</span></code>)", "Exceptions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.errors</span></code>)", "Example Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.examples</span></code>)", "Dataset IO", "IO Base Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filebase</span></code>)", "Dataset Reading (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filereader</span></code>)", "IO Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileutil</span></code>)", "Dataset Writing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filewriter</span></code>)", "DICOM File-sets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileset</span></code>)", "pydicom.charset.convert_encodings", "pydicom.charset.decode_bytes", "pydicom.charset.decode_element", "pydicom.charset.encode_string", "pydicom.config.APPLY_J2K_CORRECTIONS", "pydicom.config.DS_decimal", "pydicom.config.DS_numpy", "pydicom.config.IGNORE", "pydicom.config.INVALID_KEYWORD_BEHAVIOR", "pydicom.config.INVALID_KEY_BEHAVIOR", "pydicom.config.RAISE", "pydicom.config.WARN", "pydicom.config.allow_DS_float", "pydicom.config.assume_implicit_vr_switch", "pydicom.config.convert_wrong_length_to_UN", "pydicom.config.data_element_callback", "pydicom.config.data_element_callback_kwargs", "pydicom.config.datetime_conversion", "pydicom.config.debug", "pydicom.config.enforce_valid_values", "pydicom.config.future_behavior", "pydicom.config.pixel_data_handlers", "pydicom.config.reset_data_element_callback", "pydicom.config.settings", "pydicom.config.show_file_meta", "pydicom.config.use_DS_decimal", "pydicom.config.use_DS_numpy", "pydicom.config.use_IS_numpy", "pydicom.data.get_charset_files", "pydicom.data.get_palette_files", "pydicom.data.get_testdata_file", "pydicom.data.get_testdata_files", "pydicom.datadict.add_dict_entries", "pydicom.datadict.add_dict_entry", "pydicom.datadict.add_private_dict_entries", "pydicom.datadict.add_private_dict_entry", "pydicom.datadict.dictionary_VM", "pydicom.datadict.dictionary_VR", "pydicom.datadict.dictionary_description", "pydicom.datadict.dictionary_has_tag", "pydicom.datadict.dictionary_is_retired", "pydicom.datadict.dictionary_keyword", "pydicom.datadict.get_entry", "pydicom.datadict.get_private_entry", "pydicom.datadict.keyword_for_tag", "pydicom.datadict.mask_match", "pydicom.datadict.private_dictionary_VM", "pydicom.datadict.private_dictionary_VR", "pydicom.datadict.private_dictionary_description", "pydicom.datadict.repeater_has_keyword", "pydicom.datadict.repeater_has_tag", "pydicom.datadict.tag_for_keyword", "pydicom.dataelem.DataElement", "pydicom.dataelem.DataElement_from_raw", "pydicom.dataelem.RawDataElement", "pydicom.dataelem.convert_raw_data_element", "pydicom.dataset.Dataset", "pydicom.dataset.FileDataset", "pydicom.dataset.FileMetaDataset", "pydicom.dataset.PrivateBlock", "pydicom.dataset.validate_file_meta", "pydicom.encaps.decode_data_sequence", "pydicom.encaps.defragment_data", "pydicom.encaps.encapsulate", "pydicom.encaps.encapsulate_buffer", "pydicom.encaps.encapsulate_extended", "pydicom.encaps.encapsulate_extended_buffer", "pydicom.encaps.fragment_frame", "pydicom.encaps.generate_fragmented_frames", "pydicom.encaps.generate_fragments", "pydicom.encaps.generate_frames", "pydicom.encaps.generate_pixel_data", "pydicom.encaps.generate_pixel_data_fragment", "pydicom.encaps.generate_pixel_data_frame", "pydicom.encaps.get_frame", "pydicom.encaps.get_frame_offsets", "pydicom.encaps.itemize_fragment", "pydicom.encaps.itemize_frame", "pydicom.encaps.parse_basic_offsets", "pydicom.encaps.parse_fragments", "pydicom.encaps.read_item", "pydicom.errors.InvalidDicomError", "pydicom.examples.get_path", "pydicom.filebase.DicomBytesIO", "pydicom.filebase.DicomFile", "pydicom.filebase.DicomFileLike", "pydicom.filebase.DicomIO", "pydicom.filereader.data_element_generator", "pydicom.filereader.data_element_offset_to_value", "pydicom.filereader.dcmread", "pydicom.filereader.read_dataset", "pydicom.filereader.read_deferred_data_element", "pydicom.filereader.read_file_meta_info", "pydicom.filereader.read_partial", "pydicom.filereader.read_preamble", "pydicom.filereader.read_sequence", "pydicom.filereader.read_sequence_item", "pydicom.fileset.DIRECTORY_RECORDERS", "pydicom.fileset.FileInstance", "pydicom.fileset.FileSet", "pydicom.fileset.RecordNode", "pydicom.fileset.generate_filename", "pydicom.fileset.is_conformant_file_id", "pydicom.fileutil.absorb_delimiter_item", "pydicom.fileutil.find_bytes", "pydicom.fileutil.find_delimiter", "pydicom.fileutil.length_of_undefined_length", "pydicom.fileutil.read_undefined_length_value", "pydicom.filewriter.correct_ambiguous_vr", "pydicom.filewriter.correct_ambiguous_vr_element", "pydicom.filewriter.dcmwrite", "pydicom.filewriter.multi_string", "pydicom.filewriter.write_ATvalue", "pydicom.filewriter.write_DA", "pydicom.filewriter.write_DT", "pydicom.filewriter.write_OBvalue", "pydicom.filewriter.write_OWvalue", "pydicom.filewriter.write_PN", "pydicom.filewriter.write_TM", "pydicom.filewriter.write_UI", "pydicom.filewriter.write_UN", "pydicom.filewriter.write_data_element", "pydicom.filewriter.write_dataset", "pydicom.filewriter.write_file_meta_info", "pydicom.filewriter.write_number_string", "pydicom.filewriter.write_numbers", "pydicom.filewriter.write_sequence", "pydicom.filewriter.write_sequence_item", "pydicom.filewriter.write_string", "pydicom.filewriter.write_text", "pydicom.hooks.Hooks", "pydicom.hooks.hooks", "pydicom.hooks.raw_element_value", "pydicom.hooks.raw_element_value_fix_separator", "pydicom.hooks.raw_element_value_retry", "pydicom.hooks.raw_element_vr", "pydicom.misc.is_dicom", "pydicom.misc.size_in_bytes", "pydicom.multival.MultiValue", "pydicom.overlays.numpy_handler", "pydicom.pixel_data_handlers.gdcm_handler", "pydicom.pixel_data_handlers.jpeg_ls_handler", "pydicom.pixel_data_handlers.numpy_handler", "pydicom.pixel_data_handlers.pillow_handler", "pydicom.pixel_data_handlers.pylibjpeg_handler", "pydicom.pixel_data_handlers.rle_handler", "pydicom.pixels.apply_color_lut", "pydicom.pixels.apply_icc_profile", "pydicom.pixels.apply_modality_lut", "pydicom.pixels.apply_presentation_lut", "pydicom.pixels.apply_rescale", "pydicom.pixels.apply_voi", "pydicom.pixels.apply_voi_lut", "pydicom.pixels.apply_windowing", "pydicom.pixels.as_pixel_options", "pydicom.pixels.compress", "pydicom.pixels.convert_color_space", "pydicom.pixels.create_icc_transform", "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.HTJ2KDecoder", "pydicom.pixels.decoders.HTJ2KLosslessDecoder", "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.JPEG2000Decoder", "pydicom.pixels.decoders.JPEG2000LosslessDecoder", "pydicom.pixels.decoders.JPEGBaseline8BitDecoder", "pydicom.pixels.decoders.JPEGExtended12BitDecoder", "pydicom.pixels.decoders.JPEGLSLosslessDecoder", "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", "pydicom.pixels.decoders.JPEGLosslessDecoder", "pydicom.pixels.decoders.JPEGLosslessSV1Decoder", "pydicom.pixels.decoders.RLELosslessDecoder", "pydicom.pixels.decoders.base.DecodeRunner", "pydicom.pixels.decoders.base.Decoder", "pydicom.pixels.decompress", "pydicom.pixels.encoders.JPEG2000Encoder", "pydicom.pixels.encoders.JPEG2000LosslessEncoder", "pydicom.pixels.encoders.JPEGLSLosslessEncoder", "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", "pydicom.pixels.encoders.RLELosslessEncoder", "pydicom.pixels.encoders.base.EncodeRunner", "pydicom.pixels.encoders.base.Encoder", "pydicom.pixels.get_decoder", "pydicom.pixels.get_encoder", "pydicom.pixels.iter_pixels", "pydicom.pixels.pack_bits", "pydicom.pixels.pixel_array", "pydicom.pixels.processing.apply_color_lut", "pydicom.pixels.processing.apply_icc_profile", "pydicom.pixels.processing.apply_modality_lut", "pydicom.pixels.processing.apply_presentation_lut", "pydicom.pixels.processing.apply_rescale", "pydicom.pixels.processing.apply_voi", "pydicom.pixels.processing.apply_voi_lut", "pydicom.pixels.processing.apply_windowing", "pydicom.pixels.processing.convert_color_space", "pydicom.pixels.processing.create_icc_transform", "pydicom.pixels.set_pixel_data", "pydicom.pixels.unpack_bits", "pydicom.pixels.utils.as_pixel_options", "pydicom.pixels.utils.compress", "pydicom.pixels.utils.decompress", "pydicom.pixels.utils.expand_ybr422", "pydicom.pixels.utils.get_expected_length", "pydicom.pixels.utils.get_image_pixel_ids", "pydicom.pixels.utils.get_j2k_parameters", "pydicom.pixels.utils.get_nr_frames", "pydicom.pixels.utils.iter_pixels", "pydicom.pixels.utils.pack_bits", "pydicom.pixels.utils.pixel_array", "pydicom.pixels.utils.pixel_dtype", "pydicom.pixels.utils.reshape_pixel_array", "pydicom.pixels.utils.set_pixel_data", "pydicom.pixels.utils.unpack_bits", "pydicom.sequence.Sequence", "pydicom.sr.Code", "pydicom.sr.Collection", "pydicom.sr.Concepts", "pydicom.tag.BaseTag", "pydicom.tag.Tag", "pydicom.tag.TupleTag", "pydicom.tag.tag_in_exception", "pydicom.uid.AcquisitionContextSRStorage", "pydicom.uid.AdvancedBlendingPresentationStateStorage", "pydicom.uid.AllTransferSyntaxes", "pydicom.uid.AmbulatoryECGWaveformStorage", "pydicom.uid.ArterialPulseWaveformStorage", "pydicom.uid.AutorefractionMeasurementsStorage", "pydicom.uid.BasicStructuredDisplayStorage", "pydicom.uid.BasicTextSRStorage", "pydicom.uid.BasicVoiceAudioWaveformStorage", "pydicom.uid.BlendingSoftcopyPresentationStateStorage", "pydicom.uid.BodyPositionWaveformStorage", "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "pydicom.uid.BreastTomosynthesisImageStorage", "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "pydicom.uid.CArmPhotonElectronRadiationStorage", "pydicom.uid.CTDefinedProcedureProtocolStorage", "pydicom.uid.CTImageStorage", "pydicom.uid.CTPerformedProcedureProtocolStorage", "pydicom.uid.CardiacElectrophysiologyWaveformStorage", "pydicom.uid.ChestCADSRStorage", "pydicom.uid.ColonCADSRStorage", "pydicom.uid.ColorPaletteStorage", "pydicom.uid.ColorSoftcopyPresentationStateStorage", "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.Comprehensive3DSRStorage", "pydicom.uid.ComprehensiveSRStorage", "pydicom.uid.ComputedRadiographyImageStorage", "pydicom.uid.ConfocalMicroscopyImageStorage", "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "pydicom.uid.ContentAssessmentResultsStorage", "pydicom.uid.CornealTopographyMapStorage", "pydicom.uid.DICOS2DAITStorage", "pydicom.uid.DICOS3DAITStorage", "pydicom.uid.DICOSCTImageStorage", "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "pydicom.uid.DICOSQuadrupoleResonanceStorage", "pydicom.uid.DICOSThreatDetectionReportStorage", "pydicom.uid.DeflatedExplicitVRLittleEndian", "pydicom.uid.DeformableSpatialRegistrationStorage", "pydicom.uid.DermoscopicPhotographyImageStorage", "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "pydicom.uid.DigitalXRayImageStorageForPresentation", "pydicom.uid.DigitalXRayImageStorageForProcessing", "pydicom.uid.EddyCurrentImageStorage", "pydicom.uid.EddyCurrentMultiFrameImageStorage", "pydicom.uid.ElectromyogramWaveformStorage", "pydicom.uid.ElectrooculogramWaveformStorage", "pydicom.uid.EncapsulatedCDAStorage", "pydicom.uid.EncapsulatedMTLStorage", "pydicom.uid.EncapsulatedOBJStorage", "pydicom.uid.EncapsulatedPDFStorage", "pydicom.uid.EncapsulatedSTLStorage", "pydicom.uid.EnhancedCTImageStorage", "pydicom.uid.EnhancedContinuousRTImageStorage", "pydicom.uid.EnhancedMRColorImageStorage", "pydicom.uid.EnhancedMRImageStorage", "pydicom.uid.EnhancedPETImageStorage", "pydicom.uid.EnhancedRTImageStorage", "pydicom.uid.EnhancedSRStorage", "pydicom.uid.EnhancedUSVolumeStorage", "pydicom.uid.EnhancedXAImageStorage", "pydicom.uid.EnhancedXRFImageStorage", "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "pydicom.uid.ExplicitVRBigEndian", "pydicom.uid.ExplicitVRLittleEndian", "pydicom.uid.ExtensibleSRStorage", "pydicom.uid.General32bitECGWaveformStorage", "pydicom.uid.GeneralAudioWaveformStorage", "pydicom.uid.GeneralECGWaveformStorage", "pydicom.uid.GenericImplantTemplateStorage", "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.HEVCM10P51", "pydicom.uid.HEVCMP51", "pydicom.uid.HTJ2K", "pydicom.uid.HTJ2KLossless", "pydicom.uid.HTJ2KLosslessRPCL", "pydicom.uid.HangingProtocolStorage", "pydicom.uid.HemodynamicWaveformStorage", "pydicom.uid.ImplantAssemblyTemplateStorage", "pydicom.uid.ImplantTemplateGroupStorage", "pydicom.uid.ImplantationPlanSRStorage", "pydicom.uid.ImplicitVRLittleEndian", "pydicom.uid.IntraocularLensCalculationsStorage", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pydicom.uid.InventoryStorage", "pydicom.uid.JPEG2000", "pydicom.uid.JPEG2000Lossless", "pydicom.uid.JPEG2000MC", "pydicom.uid.JPEG2000MCLossless", "pydicom.uid.JPEG2000TransferSyntaxes", "pydicom.uid.JPEGBaseline8Bit", "pydicom.uid.JPEGExtended12Bit", "pydicom.uid.JPEGLSLossless", "pydicom.uid.JPEGLSNearLossless", "pydicom.uid.JPEGLSTransferSyntaxes", "pydicom.uid.JPEGLossless", "pydicom.uid.JPEGLosslessSV1", "pydicom.uid.JPEGTransferSyntaxes", "pydicom.uid.JPIPHTJ2KReferenced", "pydicom.uid.JPIPHTJ2KReferencedDeflate", "pydicom.uid.KeratometryMeasurementsStorage", "pydicom.uid.KeyObjectSelectionDocumentStorage", "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "pydicom.uid.LensometryMeasurementsStorage", "pydicom.uid.MPEG2MPHL", "pydicom.uid.MPEG2MPHLF", "pydicom.uid.MPEG2MPML", "pydicom.uid.MPEG2MPMLF", "pydicom.uid.MPEG4HP41", "pydicom.uid.MPEG4HP41BD", "pydicom.uid.MPEG4HP41BDF", "pydicom.uid.MPEG4HP41F", "pydicom.uid.MPEG4HP422D", "pydicom.uid.MPEG4HP422DF", "pydicom.uid.MPEG4HP423D", "pydicom.uid.MPEG4HP423DF", "pydicom.uid.MPEG4HP42STEREO", "pydicom.uid.MPEG4HP42STEREOF", "pydicom.uid.MPEGTransferSyntaxes", "pydicom.uid.MRImageStorage", "pydicom.uid.MRSpectroscopyStorage", "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "pydicom.uid.MammographyCADSRStorage", "pydicom.uid.MediaStorageDirectoryStorage", "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "pydicom.uid.MultichannelRespiratoryWaveformStorage", "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.NuclearMedicineImageStorage", "pydicom.uid.OphthalmicAxialMeasurementsStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pydicom.uid.OphthalmicPhotography16BitImageStorage", "pydicom.uid.OphthalmicPhotography8BitImageStorage", "pydicom.uid.OphthalmicThicknessMapStorage", "pydicom.uid.OphthalmicTomographyImageStorage", "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "pydicom.uid.PYDICOM_ROOT_UID", "pydicom.uid.ParametricMapStorage", "pydicom.uid.PatientRadiationDoseSRStorage", "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "pydicom.uid.PhotoacousticImageStorage", "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "pydicom.uid.PositronEmissionTomographyImageStorage", "pydicom.uid.PrivateTransferSyntaxes", "pydicom.uid.ProcedureLogStorage", "pydicom.uid.ProtocolApprovalStorage", "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "pydicom.uid.RE_VALID_UID", "pydicom.uid.RE_VALID_UID_PREFIX", "pydicom.uid.RLELossless", "pydicom.uid.RLETransferSyntaxes", "pydicom.uid.RTBeamsDeliveryInstructionStorage", "pydicom.uid.RTBeamsTreatmentRecordStorage", "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "pydicom.uid.RTBrachyTreatmentRecordStorage", "pydicom.uid.RTDoseStorage", "pydicom.uid.RTImageStorage", "pydicom.uid.RTIonBeamsTreatmentRecordStorage", "pydicom.uid.RTIonPlanStorage", "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "pydicom.uid.RTPhysicianIntentStorage", "pydicom.uid.RTPlanStorage", "pydicom.uid.RTRadiationRecordSetStorage", "pydicom.uid.RTRadiationSalvageRecordStorage", "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "pydicom.uid.RTRadiationSetStorage", "pydicom.uid.RTSegmentAnnotationStorage", "pydicom.uid.RTStructureSetStorage", "pydicom.uid.RTTreatmentPreparationStorage", "pydicom.uid.RTTreatmentSummaryRecordStorage", "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "pydicom.uid.RawDataStorage", "pydicom.uid.RealWorldValueMappingStorage", "pydicom.uid.RespiratoryWaveformStorage", "pydicom.uid.RoboticArmRadiationStorage", "pydicom.uid.RoboticRadiationRecordStorage", "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "pydicom.uid.SMPTEST211030PCMDigitalAudio", "pydicom.uid.SecondaryCaptureImageStorage", "pydicom.uid.SegmentationStorage", "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.SimplifiedAdultEchoSRStorage", "pydicom.uid.SleepElectroencephalogramWaveformStorage", "pydicom.uid.SpatialFiducialsStorage", "pydicom.uid.SpatialRegistrationStorage", "pydicom.uid.SpectaclePrescriptionReportStorage", "pydicom.uid.StereometricRelationshipStorage", "pydicom.uid.SubjectiveRefractionMeasurementsStorage", "pydicom.uid.SurfaceScanMeshStorage", "pydicom.uid.SurfaceScanPointCloudStorage", "pydicom.uid.SurfaceSegmentationStorage", "pydicom.uid.TomotherapeuticRadiationRecordStorage", "pydicom.uid.TomotherapeuticRadiationStorage", "pydicom.uid.TractographyResultsStorage", "pydicom.uid.TwelveLeadECGWaveformStorage", "pydicom.uid.UID", "pydicom.uid.UltrasoundImageStorage", "pydicom.uid.UltrasoundMultiFrameImageStorage", "pydicom.uid.UncompressedTransferSyntaxes", "pydicom.uid.VLEndoscopicImageStorage", "pydicom.uid.VLMicroscopicImageStorage", "pydicom.uid.VLPhotographicImageStorage", "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "pydicom.uid.VLWholeSlideMicroscopyImageStorage", "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "pydicom.uid.VideoEndoscopicImageStorage", "pydicom.uid.VideoMicroscopicImageStorage", "pydicom.uid.VideoPhotographicImageStorage", "pydicom.uid.VisualAcuityMeasurementsStorage", "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.WaveformAnnotationSRStorage", "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pydicom.uid.XADefinedProcedureProtocolStorage", "pydicom.uid.XAPerformedProcedureProtocolStorage", "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.XRay3DAngiographicImageStorage", "pydicom.uid.XRay3DCraniofacialImageStorage", "pydicom.uid.XRayAngiographicImageStorage", "pydicom.uid.XRayRadiationDoseSRStorage", "pydicom.uid.XRayRadiofluoroscopicImageStorage", "pydicom.uid.generate_uid", "pydicom.uid.register_transfer_syntax", "pydicom.valuerep.DA", "pydicom.valuerep.DS", "pydicom.valuerep.DSdecimal", "pydicom.valuerep.DSfloat", "pydicom.valuerep.DT", "pydicom.valuerep.IS", "pydicom.valuerep.ISfloat", "pydicom.valuerep.PersonName", "pydicom.valuerep.TM", "pydicom.valuerep.VR", "pydicom.valuerep.format_number_as_ds", "pydicom.valuerep.is_valid_ds", "pydicom.values.convert_AE_string", "pydicom.values.convert_ATvalue", "pydicom.values.convert_DA_string", "pydicom.values.convert_DS_string", "pydicom.values.convert_DT_string", "pydicom.values.convert_IS_string", "pydicom.values.convert_OBvalue", "pydicom.values.convert_OWvalue", "pydicom.values.convert_PN", "pydicom.values.convert_SQ", "pydicom.values.convert_TM_string", "pydicom.values.convert_UI", "pydicom.values.convert_UN", "pydicom.values.convert_UR_string", "pydicom.values.convert_numbers", "pydicom.values.convert_single_string", "pydicom.values.convert_string", "pydicom.values.convert_tag", "pydicom.values.convert_text", "pydicom.values.convert_value", "pydicom.values.multi_string", "pydicom.waveforms.numpy_handler", "Bulk Data Handlers", "Pixel Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixel_data_handlers</span></code>)", "User Hooks (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.hooks</span></code>)", "API Reference", "Miscellaneous (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.misc</span></code>)", "Overlay Data Handling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.overlays</span></code>)", "Pixel Data (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels</span></code>)", "Pixel Data Decoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.decoders</span></code>)", "Pixel Data Encoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.encoders</span></code>)", "Pixel Data Processing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.processing</span></code>)", "Pixel Data Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.utils</span></code>)", "Concepts and Context Groups (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sr</span></code>)", "UID Definitions and Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.uid</span></code>)", "Waveform Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.waveforms</span></code>)", "Release notes", "Version 0.9.2", "Version 0.9.3", "Version 0.9.4", "Version 0.9.5", "Version 0.9.6", "Version 0.9.7", "Version 0.9.8", "Version 0.9.9", "Version 1.0.0", "Version 1.1.0", "Version 1.2.0", "Version 1.3.0", "Version 1.4.0", "Version 1.4.1", "Version 2.0.0", "Version 2.1.0", "Version 2.1.1", "Version 2.2.0", "Version 2.3.0", "Version 2.4.0", "Version 3.0.0", "Version 3.1.0", "Computation times", "Contributing to pydicom", "Contributing a source code change", "Contributing a documentation change", "Dataset basics: read, access, modify, write", "Introduction to JSON support", "DICOM File-sets and DICOMDIR", "Tutorials", "How to install pydicom", "<em>Pixel Data</em> - Part 3: Compression and decompression", "<em>Pixel Data</em> - Part 2: Creation of pixel data", "<em>Pixel Data</em>", "<em>Pixel Data</em> - Part 1: Introduction and accessing", "Structured Reporting", "Waveforms"], "titleterms": {"": 23, "0": [587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 605, 606, 607, 608, 609], "1": [587, 596, 597, 598, 599, 600, 601, 603, 604, 609, 622], "12": 620, "2": [587, 588, 598, 602, 603, 604, 605, 606, 607, 620], "2000": [36, 619], "3": [587, 589, 599, 606, 608, 609, 619], "4": [587, 590, 600, 601, 607], "5": [587, 591], "6": [587, 592], "7": [587, 593], "8": [587, 594, 620], "9": [587, 588, 589, 590, 591, 592, 593, 594, 595], "A": [24, 26], "Near": 37, "The": 616, "absorb_delimiter_item": 179, "access": [614, 622], "acquisitioncontextsrstorag": 300, "ad": [30, 34, 47, 614, 616], "add": 16, "add_dict_entri": [108, 109], "add_private_dict_entri": [110, 111], "addit": [587, 590, 618], "advancedblendingpresentationstatestorag": 301, "all": 47, "allow_ds_float": 88, "alltransfersyntax": 302, "ambulatoryecgwaveformstorag": 303, "an": [34, 622], "analys": 20, "ani": 614, "anonym": 17, "api": [54, 576], "appli": 616, "apply_color_lut": [222, 265], "apply_icc_profil": [223, 266], "apply_j2k_correct": 80, "apply_modality_lut": [224, 267], "apply_presentation_lut": [225, 268], "apply_rescal": [226, 269], "apply_voi": [227, 270], "apply_voi_lut": [228, 271], "apply_window": [229, 272], "ar": 23, "arterialpulsewaveformstorag": 304, "as_pixel_opt": [230, 277], "ask": 23, "assume_implicit_vr_switch": 89, "autorefractionmeasurementsstorag": 305, "avail": [36, 37, 38], "axial": 4, "base": [14, 71, 250, 251, 258, 259], "basetag": 296, "basic": 614, "basicstructureddisplaystorag": 306, "basictextsrstorag": 307, "basicvoiceaudiowaveformstorag": 308, "best": 43, "between": 20, "binari": 615, "bit": [36, 620], "blendingsoftcopypresentationstatestorag": 309, "bodypositionwaveformstorag": 310, "branch": [612, 613], "breastprojectionxrayimagestorageforpresent": 311, "breastprojectionxrayimagestorageforprocess": 312, "breasttomosynthesisimagestorag": 313, "buffer": 32, "bug": [587, 588, 589, 590, 592, 593, 594], "build": 613, "bulk": [67, 573], "can": 23, "cardiacelectrophysiologywaveformstorag": 319, "carmphotonelectronradiationrecordstorag": 314, "carmphotonelectronradiationstorag": 315, "categori": 614, "chang": [587, 588, 589, 590, 592, 593, 594, 595, 596, 598, 599, 600, 601, 603, 605, 606, 607, 608, 612, 613, 616], "changelog": [587, 602], "charact": 55, "charset": [55, 76, 77, 78, 79], "chestcadsrstorag": 320, "cite": 23, "class": [71, 585], "cli": [25, 26, 27], "code": [43, 293, 612], "codifi": [24, 26, 52], "collect": 294, "coloncadsrstorag": 321, "color": 50, "colorpalettestorag": 322, "colorsoftcopypresentationstatestorag": 323, "combin": [26, 27], "command": [24, 26, 28], "commit": [612, 613], "compositingplanarmprvolumetricpresentationstatestorag": 324, "comprehensive3dsrstorag": 325, "comprehensivesrstorag": 326, "compress": [41, 44, 45, 231, 278, 619, 622], "comput": [5, 13, 19, 21, 610], "computedradiographyimagestorag": 327, "concept": [295, 584], "conclus": [616, 619, 620, 622], "conda": 618, "config": [56, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "configur": [37, 56], "confocalmicroscopyimagestorag": 328, "confocalmicroscopytiledpyramidalimagestorag": 329, "contentassessmentresultsstorag": 330, "context": 584, "contrib": [587, 591, 594, 595], "contribut": [611, 612, 613], "contributor": [587, 595], "control": 622, "convert": [615, 622], "convert_ae_str": 551, "convert_atvalu": 552, "convert_color_spac": [232, 273], "convert_da_str": 553, "convert_ds_str": 554, "convert_dt_str": 555, "convert_encod": 76, "convert_is_str": 556, "convert_numb": 565, "convert_obvalu": 557, "convert_owvalu": 558, "convert_pn": 559, "convert_raw_data_el": 131, "convert_single_str": 566, "convert_sq": 560, "convert_str": 567, "convert_tag": 568, "convert_text": 569, "convert_tm_str": 561, "convert_ui": 562, "convert_un": 563, "convert_ur_str": 564, "convert_valu": 570, "convert_wrong_length_to_un": 90, "core": 42, "cornealtopographymapstorag": 331, "coron": 4, "correct_ambiguous_vr": 184, "correct_ambiguous_vr_el": 185, "creat": [67, 612, 613, 615, 616, 620], "create_icc_transform": [233, 274], "creation": 620, "ct": 4, "ctdefinedprocedureprotocolstorag": 316, "ctimagestorag": 317, "ctperformedprocedureprotocolstorag": 318, "current": 612, "d": 540, "da": 539, "data": [3, 8, 9, 12, 17, 29, 30, 31, 34, 35, 41, 44, 45, 47, 49, 50, 51, 57, 58, 60, 61, 67, 104, 105, 106, 107, 573, 574, 578, 579, 580, 581, 582, 583, 586, 615, 619, 620, 621, 622, 624], "data_element_callback": 91, "data_element_callback_kwarg": 92, "data_element_gener": 163, "data_element_offset_to_valu": 164, "datadict": [58, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "datael": [42, 128], "dataelem": [61, 128, 129, 130, 131], "dataelement_from_raw": 129, "dataset": [9, 14, 42, 44, 49, 50, 51, 57, 59, 69, 70, 72, 74, 132, 133, 134, 135, 136, 614, 615, 619], "datetime_convers": 93, "dcmread": 165, "dcmwrite": 186, "debug": 94, "decod": [3, 29, 30, 31, 55, 66, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 580, 622, 624], "decode_byt": 77, "decode_data_sequ": 137, "decode_el": 78, "decoderunn": 250, "decompress": [41, 252, 279, 619], "definit": 585, "deflatedexplicitvrlittleendian": 339, "deflatedexplicitvrlittleendiandecod": 234, "deformablespatialregistrationstorag": 340, "defragment_data": 138, "delet": 614, "deprec": [587, 608], "dermoscopicphotographyimagestorag": 341, "develop": 618, "dicom": [0, 10, 11, 12, 16, 17, 20, 24, 26, 43, 47, 52, 58, 75, 616, 618, 624], "dicombytesio": 159, "dicomdir": 616, "dicomfil": 160, "dicomfilelik": 161, "dicomio": 162, "dicos2daitstorag": 332, "dicos3daitstorag": 333, "dicosctimagestorag": 334, "dicosdigitalxrayimagestorageforpresent": 335, "dicosdigitalxrayimagestorageforprocess": 336, "dicosquadrupoleresonancestorag": 337, "dicosthreatdetectionreportstorag": 338, "dictionari": [16, 47, 58], "dictionary_descript": 114, "dictionary_has_tag": 115, "dictionary_is_retir": 116, "dictionary_keyword": 117, "dictionary_vm": 112, "dictionary_vr": 113, "differ": 20, "digitalintraoralxrayimagestorageforpresent": 342, "digitalintraoralxrayimagestorageforprocess": 343, "digitalmammographyxrayimagestorageforpresent": 344, "digitalmammographyxrayimagestorageforprocess": 345, "digitalxrayimagestorageforpresent": 346, "digitalxrayimagestorageforprocess": 347, "directory_record": 173, "displai": [22, 47], "do": 23, "document": [53, 54, 587, 599, 612, 613], "doe": 23, "doubl": 620, "download": [612, 613, 618], "downsiz": 2, "ds_decim": 81, "ds_numpi": 82, "dsdecim": 541, "dsfloat": 542, "dt": 543, "eddycurrentimagestorag": 348, "eddycurrentmultiframeimagestorag": 349, "electromyogramwaveformstorag": 350, "electrooculogramwaveformstorag": 351, "element": [32, 42, 47, 60, 61, 62, 63, 64, 65, 66, 614], "encap": [67, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "encapsul": [67, 139, 619], "encapsulate_buff": 140, "encapsulate_extend": 141, "encapsulate_extended_buff": 142, "encapsulatedcdastorag": 352, "encapsulatedmtlstorag": 353, "encapsulatedobjstorag": 354, "encapsulatedpdfstorag": 355, "encapsulatedstlstorag": 356, "encod": [33, 34, 35, 36, 37, 38, 55, 253, 254, 255, 256, 257, 258, 259, 581, 624], "encode_str": 79, "encoderunn": 258, "enforc": 43, "enforce_valid_valu": 95, "enhanc": [587, 588, 589, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 605, 606, 607, 608, 609], "enhancedcontinuousrtimagestorag": 358, "enhancedctimagestorag": 357, "enhancedmrcolorimagestorag": 359, "enhancedmrimagestorag": 360, "enhancedpetimagestorag": 361, "enhancedrtimagestorag": 362, "enhancedsrstorag": 363, "enhancedusvolumestorag": 364, "enhancedxaimagestorag": 365, "enhancedxrayradiationdosesrstorag": 367, "enhancedxrfimagestorag": 366, "entri": 47, "error": [68, 157], "exampl": [6, 24, 26, 36, 37, 38, 54, 69, 158, 614, 618], "except": 68, "exist": 616, "expand_ybr422": 280, "explicitvrbigendian": 368, "explicitvrbigendiandecod": 235, "explicitvrlittleendian": 369, "explicitvrlittleendiandecod": 236, "extend": [25, 26], "extensiblesrstorag": 370, "file": [0, 10, 17, 20, 24, 26, 39, 52, 75, 587, 591, 594, 595, 616, 618], "file_meta": 614, "filebas": [71, 159, 160, 161, 162], "filedataset": 133, "fileinst": 174, "filemetadataset": 134, "fileread": [72, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "fileset": [75, 173, 174, 175, 176, 177, 178, 616], "fileutil": [73, 179, 180, 181, 182, 183], "filewrit": [74, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "find_byt": 180, "find_delimit": 181, "fix": [587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609], "float": 620, "format": [8, 615], "format_number_as_d": 549, "fragment_fram": 143, "frame": 620, "frequent": 23, "from": [52, 615], "futur": 43, "future_behavior": 96, "gdcm": [33, 41, 618], "gdcm_handler": 216, "gener": [6, 23, 53], "general32bitecgwaveformstorag": 371, "generalaudiowaveformstorag": 372, "generalecgwaveformstorag": 373, "generate_filenam": 177, "generate_frag": 145, "generate_fragmented_fram": 144, "generate_fram": 146, "generate_pixel_data": 147, "generate_pixel_data_frag": 148, "generate_pixel_data_fram": 149, "generate_uid": 537, "genericimplanttemplatestorag": 374, "get": [54, 57, 614], "get_charset_fil": 104, "get_decod": 260, "get_encod": 261, "get_entri": 118, "get_expected_length": 281, "get_fram": 150, "get_frame_offset": 151, "get_image_pixel_id": 282, "get_j2k_paramet": 283, "get_nr_fram": 284, "get_palette_fil": 105, "get_path": 158, "get_private_entri": 119, "get_testdata_fil": [106, 107], "glossari": 39, "grayscal": 620, "grayscaleplanarmprvolumetricpresentationstatestorag": 375, "grayscalesoftcopypresentationstatestorag": 376, "group": 584, "guid": [26, 40, 46, 54], "guidelin": 53, "handl": [45, 578], "handler": [573, 574, 586], "hangingprotocolstorag": 382, "happen": [612, 613], "hemodynamicwaveformstorag": 383, "hevcm10p51": 377, "hevcmp51": 378, "hierarch": 0, "hint": 618, "hook": [206, 207, 208, 209, 210, 211, 575], "how": [23, 618], "htj2k": 379, "htj2kdecod": 237, "htj2klossless": 380, "htj2klosslessdecod": 238, "htj2klosslessrpcl": 381, "htj2klosslessrpcldecod": 239, "i": [23, 544], "ignor": 83, "imag": [1, 2, 4, 6, 29, 36, 37, 38, 39, 48], "implantassemblytemplatestorag": 384, "implantationplansrstorag": 386, "implanttemplategroupstorag": 385, "implicitvrlittleendian": 387, "implicitvrlittleendiandecod": 240, "includ": 57, "inform": [11, 39], "infrastructur": [587, 596], "input": [6, 7], "instal": [23, 26, 27, 612, 618], "instanc": 616, "integ": 620, "interfac": 26, "intern": [587, 607, 608], "interpret": [36, 37], "intraocularlenscalculationsstorag": 388, "intravascularopticalcoherencetomographyimagestorageforpresent": 389, "intravascularopticalcoherencetomographyimagestorageforprocess": 390, "introduct": [26, 27, 43, 47, 48, 49, 50, 51, 52, 615, 622], "invalid_key_behavior": 85, "invalid_keyword_behavior": 84, "invaliddicomerror": 157, "inventorystorag": 391, "io": [70, 71, 73], "is_conformant_file_id": 178, "is_dicom": 212, "is_valid_d": 550, "isfloat": 545, "item": 16, "itemize_frag": 152, "itemize_fram": 153, "iter_pixel": [262, 285], "jpeg": [36, 37, 619], "jpeg2000": 392, "jpeg2000decod": 241, "jpeg2000encod": 253, "jpeg2000lossless": 393, "jpeg2000losslessdecod": 242, "jpeg2000losslessencod": 254, "jpeg2000mc": 394, "jpeg2000mclossless": 395, "jpeg2000transfersyntax": 396, "jpeg_ls_handl": 217, "jpegbaseline8bit": 397, "jpegbaseline8bitdecod": 243, "jpegextended12bit": 398, "jpegextended12bitdecod": 244, "jpeglossless": 402, "jpeglosslessdecod": 247, "jpeglosslesssv1": 403, "jpeglosslesssv1decod": 248, "jpeglslossless": 399, "jpeglslosslessdecod": 245, "jpeglslosslessencod": 255, "jpeglsnearlossless": 400, "jpeglsnearlosslessdecod": 246, "jpeglsnearlosslessencod": 256, "jpeglstransfersyntax": 401, "jpegtransfersyntax": 404, "jpiphtj2kreferenc": 405, "jpiphtj2kreferenceddefl": 406, "json": 615, "keratometrymeasurementsstorag": 407, "keyobjectselectiondocumentstorag": 408, "keyword_for_tag": 120, "l": [37, 619], "larg": 615, "legacyconvertedenhancedctimagestorag": 409, "legacyconvertedenhancedmrimagestorag": 410, "legacyconvertedenhancedpetimagestorag": 411, "length_of_undefined_length": 182, "lensometrymeasurementsstorag": 412, "librari": [612, 618], "licens": 23, "limit": 43, "line": 26, "list": [11, 585], "load": [4, 616], "lossless": [29, 36, 37, 38, 619], "lut": 50, "maculargridthicknessandvolumereportstorag": 430, "major": [43, 587, 588, 589, 590, 591, 592, 593, 594, 596], "make": [612, 613], "mammographycadsrstorag": 431, "mask_match": 121, "matplotlib": 48, "mediastoragedirectorystorag": 432, "memori": [14, 622], "meta": 39, "metadata": [6, 15, 622], "microscopybulksimpleannotationsstorag": 433, "minim": 622, "misc": [212, 213, 577], "miscellan": [29, 577], "modal": 50, "modifi": [614, 616], "modul": [39, 579], "mpeg2mphl": 413, "mpeg2mphlf": 414, "mpeg2mpml": 415, "mpeg2mpmlf": 416, "mpeg4hp41": 417, "mpeg4hp41bd": 418, "mpeg4hp41bdf": 419, "mpeg4hp41f": 420, "mpeg4hp422d": 421, "mpeg4hp422df": 422, "mpeg4hp423d": 423, "mpeg4hp423df": 424, "mpeg4hp42stereo": 425, "mpeg4hp42stereof": 426, "mpegtransfersyntax": 427, "mri": 2, "mrimagestorag": 428, "mrspectroscopystorag": 429, "multi": [62, 620], "multi_str": [187, 571], "multichannelrespiratorywaveformstorag": 438, "multiframegrayscalebytesecondarycaptureimagestorag": 434, "multiframegrayscalewordsecondarycaptureimagestorag": 435, "multiframesinglebitsecondarycaptureimagestorag": 436, "multiframetruecolorsecondarycaptureimagestorag": 437, "multiplevolumerenderingvolumetricpresentationstatestorag": 439, "multiv": [62, 214], "multivalu": 214, "name": 22, "ndarrai": 622, "new": [47, 587, 591, 612, 613, 616], "next": [612, 613, 614, 620, 622], "note": 587, "nuclearmedicineimagestorag": 440, "numpy_handl": [215, 218, 572], "o": 32, "offici": 618, "oper": 50, "ophthalmicaxialmeasurementsstorag": 441, "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorag": 442, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 443, "ophthalmicphotography16bitimagestorag": 444, "ophthalmicphotography8bitimagestorag": 445, "ophthalmicthicknessmapstorag": 446, "ophthalmictomographyimagestorag": 447, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 448, "option": [23, 24, 26, 29, 33, 56, 612, 618], "other": [26, 27, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597], "output": [6, 7, 8], "overlai": [49, 215, 578], "overlay_arrai": 49, "pack_bit": [263, 286], "packag": [43, 44, 619], "palett": 50, "paramet": [36, 37, 38], "parametricmapstorag": 451, "pars": 67, "parse_basic_offset": 154, "parse_frag": 155, "part": [24, 26, 619, 620, 622], "parti": [44, 619], "path": 614, "patientradiationdosesrstorag": 452, "performedimagingagentadministrationsrstorag": 453, "person": 22, "personnam": 546, "photoacousticimagestorag": 454, "photometr": [36, 37], "pillow": [41, 618], "pillow_handl": 219, "pip": 618, "pixel": [9, 29, 30, 31, 34, 35, 36, 37, 38, 39, 41, 44, 45, 50, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 574, 579, 580, 581, 582, 583, 619, 620, 621, 622], "pixel_arrai": [50, 264, 287], "pixel_data_handl": [97, 216, 217, 218, 219, 220, 221, 574], "pixel_dtyp": 288, "planar": 37, "plannedimagingagentadministrationsrstorag": 455, "plot": [3, 4, 9], "plugin": [29, 30, 33, 34, 36, 37, 38, 41], "positronemissiontomographyimagestorag": 456, "practic": 43, "prerequisit": [23, 45], "preview": [612, 613], "print": 8, "privat": [16, 47, 58], "private_dictionary_descript": 124, "private_dictionary_vm": 122, "private_dictionary_vr": 123, "privateblock": 135, "privatetransfersyntax": 457, "procedurelogstorag": 458, "process": [1, 6, 15, 29, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 582], "proof": 43, "protocolapprovalstorag": 459, "pseudocolorsoftcopypresentationstatestorag": 460, "pull": [612, 613], "pydicom": [2, 23, 24, 26, 27, 28, 33, 41, 42, 43, 44, 46, 47, 48, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 607, 608, 611, 618], "pydicom_implementation_uid": 449, "pydicom_root_uid": 450, "pyjpegl": [33, 41, 618], "pylibjpeg": [33, 36, 41, 618], "pylibjpeg_handl": 220, "pytest": 612, "python": [23, 32], "question": 23, "radiopharmaceuticalradiationdosesrstorag": 484, "rais": 86, "raw_element_valu": 208, "raw_element_value_fix_separ": 209, "raw_element_value_retri": 210, "raw_element_vr": 211, "rawdatael": 130, "rawdatastorag": 485, "re_valid_uid": 461, "re_valid_uid_prefix": 462, "read": [9, 10, 11, 72, 614], "read_dataset": 166, "read_deferred_data_el": 167, "read_file_meta_info": 168, "read_item": 156, "read_parti": 169, "read_preambl": 170, "read_sequ": 171, "read_sequence_item": 172, "read_undefined_length_valu": 183, "realworldvaluemappingstorag": 486, "recordnod": 176, "refer": [54, 576], "register_transfer_syntax": 538, "releas": [587, 591, 618], "remov": [47, 587, 608, 616], "repeater_has_keyword": 125, "repeater_has_tag": 126, "report": 623, "represent": [37, 59, 60, 62, 63, 65], "request": [612, 613], "requir": [23, 30, 34, 612], "rescal": 50, "reset_data_element_callback": 98, "reshape_pixel_arrai": 289, "respiratorywaveformstorag": 487, "restructuredtext": 53, "rgb": 620, "rle": [29, 38, 619], "rle_handl": 221, "rlelossless": 463, "rlelosslessdecod": 249, "rlelosslessencod": 257, "rletransfersyntax": 464, "roboticarmradiationstorag": 488, "roboticradiationrecordstorag": 489, "routinescalpelectroencephalogramwaveformstorag": 490, "rtbeamsdeliveryinstructionstorag": 465, "rtbeamstreatmentrecordstorag": 466, "rtbrachyapplicationsetupdeliveryinstructionstorag": 467, "rtbrachytreatmentrecordstorag": 468, "rtdosestorag": 469, "rtimagestorag": 470, "rtionbeamstreatmentrecordstorag": 471, "rtionplanstorag": 472, "rtpatientpositionacquisitioninstructionstorag": 473, "rtphysicianintentstorag": 474, "rtplan": 11, "rtplanstorag": 475, "rtradiationrecordsetstorag": 476, "rtradiationsalvagerecordstorag": 477, "rtradiationsetdeliveryinstructionstorag": 478, "rtradiationsetstorag": 479, "rtsegmentannotationstorag": 480, "rtstructuresetstorag": 481, "rttreatmentpreparationstorag": 482, "rttreatmentsummaryrecordstorag": 483, "run": 612, "sagitt": 4, "scratch": 52, "secondarycaptureimagestorag": 494, "segmentationstorag": 495, "segmentedvolumerenderingvolumetricpresentationstatestorag": 496, "sequenc": [18, 42, 63, 292, 614], "set": [8, 10, 47, 75, 99, 616], "set_pixel_data": [275, 290], "show": [0, 14, 26, 28], "show_file_meta": 100, "sign": 620, "simpl": [24, 26], "simplifiedadultechosrstorag": 497, "singl": 17, "size_in_byt": 213, "sleepelectroencephalogramwaveformstorag": 498, "slice": 4, "smptest211020uncompressedinterlacedactivevideo": 491, "smptest211020uncompressedprogressiveactivevideo": 492, "smptest211030pcmdigitalaudio": 493, "sop": [585, 616], "sourc": 612, "space": 50, "spatialfiducialsstorag": 499, "spatialregistrationstorag": 500, "special": 65, "spectacleprescriptionreportstorag": 501, "sr": [293, 294, 295, 584], "stage": 616, "standard": 614, "start": 54, "step": [614, 620, 622], "stereometricrelationshipstorag": 502, "storag": 585, "store": 36, "structur": 623, "style": 53, "sub": 579, "subjectiverefractionmeasurementsstorag": 503, "suit": 612, "support": [44, 45, 615], "surfacescanmeshstorag": 504, "surfacescanpointcloudstorag": 505, "surfacesegmentationstorag": 506, "syntax": [44, 45, 585, 622], "tag": [42, 64, 296, 297, 298, 299], "tag_for_keyword": 127, "tag_in_except": 299, "test": [612, 618], "thi": [587, 590, 591], "third": [44, 619], "time": [5, 13, 19, 21, 610], "tm": 547, "tomotherapeuticradiationrecordstorag": 507, "tomotherapeuticradiationstorag": 508, "tractographyresultsstorag": 509, "transfer": [44, 45, 585, 622], "tree": 0, "tupletag": 298, "tutori": 617, "twelveleadecgwaveformstorag": 510, "type": [32, 53, 618], "uid": [300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 585], "ultrasoundimagestorag": 512, "ultrasoundmultiframeimagestorag": 513, "uncompressedtransfersyntax": 514, "unicod": 22, "unpack_bit": [276, 291], "unsign": 620, "us": [0, 2, 23, 44, 48, 52, 618], "usag": [45, 69, 584, 622], "use_ds_decim": 101, "use_ds_numpi": 102, "use_is_numpi": 103, "user": [46, 54, 575], "util": [58, 67, 73, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 583, 585], "valid": [36, 37, 38, 43], "validate_file_meta": 136, "valu": [62, 63, 65, 66, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571], "valuerep": [65, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550], "variablemodalitylutsoftcopypresentationstatestorag": 520, "version": [23, 43, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 618], "videoendoscopicimagestorag": 521, "videomicroscopicimagestorag": 522, "videophotographicimagestorag": 523, "view": [48, 614], "visualacuitymeasurementsstorag": 524, "vlendoscopicimagestorag": 515, "vlmicroscopicimagestorag": 516, "vlphotographicimagestorag": 517, "vlslidecoordinatesmicroscopicimagestorag": 518, "vlwholeslidemicroscopyimagestorag": 519, "voi": 50, "volumerenderingvolumetricpresentationstatestorag": 525, "vr": [32, 548], "warn": 87, "waveform": [3, 51, 572, 586, 624], "waveform_arrai": 51, "waveformannotationsrstorag": 526, "what": [23, 612, 613], "widefieldophthalmicphotography3dcoordinatesimagestorag": 527, "widefieldophthalmicphotographystereographicprojectionimagestorag": 528, "window": 50, "work": [14, 18, 49, 50, 51, 615], "write": [12, 52, 53, 74, 612, 614], "write_atvalu": 188, "write_da": 189, "write_data_el": 197, "write_dataset": 198, "write_dt": 190, "write_file_meta_info": 199, "write_numb": 201, "write_number_str": 200, "write_obvalu": 191, "write_owvalu": 192, "write_pn": 193, "write_sequ": 202, "write_sequence_item": 203, "write_str": 204, "write_text": 205, "write_tm": 194, "write_ui": 195, "write_un": 196, "xadefinedprocedureprotocolstorag": 529, "xaperformedprocedureprotocolstorag": 530, "xaxrfgrayscalesoftcopypresentationstatestorag": 531, "xray3dangiographicimagestorag": 532, "xray3dcraniofacialimagestorag": 533, "xrayangiographicimagestorag": 534, "xrayradiationdosesrstorag": 535, "xrayradiofluoroscopicimagestorag": 536, "your": [43, 612, 613]}})