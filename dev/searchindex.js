Search.setIndex({"docnames": ["auto_examples/dicomtree", "auto_examples/image_processing/index", "auto_examples/image_processing/plot_downsize_image", "auto_examples/image_processing/plot_waveforms", "auto_examples/image_processing/reslice", "auto_examples/image_processing/sg_execution_times", "auto_examples/index", "auto_examples/input_output/index", "auto_examples/input_output/plot_printing_dataset", "auto_examples/input_output/plot_read_dicom", "auto_examples/input_output/plot_read_fileset", "auto_examples/input_output/plot_read_rtplan", "auto_examples/input_output/plot_write_dicom", "auto_examples/input_output/sg_execution_times", "auto_examples/memory_dataset", "auto_examples/metadata_processing/index", "auto_examples/metadata_processing/plot_add_dict_entries", "auto_examples/metadata_processing/plot_anonymize", "auto_examples/metadata_processing/plot_sequences", "auto_examples/metadata_processing/sg_execution_times", "auto_examples/plot_dicom_difference", "auto_examples/sg_execution_times", "auto_examples/show_charset_name", "faq/index", "guides/cli/cli_codify", "guides/cli/cli_dev", "guides/cli/cli_guide", "guides/cli/cli_intro", "guides/cli/cli_show", "guides/element_value_types", "guides/encoding/encoder_plugin_options", "guides/encoding/encoder_plugins", "guides/encoding/index", "guides/encoding/rle_lossless", "guides/glossary", "guides/index", "guides/writing_documentation", "index", "old/base_element", "old/best_practices", "old/getting_started", "old/image_data_compression", "old/image_data_handlers", "old/private_data_elements", "old/pydicom_user_guide", "old/python2_support", "old/ref_guide", "old/viewing_images", "old/working_with_overlays", "old/working_with_pixel_data", "old/working_with_waveforms", "old/writing_files", "reference/charset", "reference/config", "reference/data", "reference/datadict", "reference/dataset", "reference/elem", "reference/elem.dataelem", "reference/elem.multival", "reference/elem.sequence", "reference/elem.tag", "reference/elem.valuerep", "reference/elem.values", "reference/encaps", "reference/encoders", "reference/errors", "reference/fileio", "reference/fileio.base", "reference/fileio.read", "reference/fileio.util", "reference/fileio.write", "reference/fileset", "reference/generated/pydicom.charset.convert_encodings", "reference/generated/pydicom.charset.decode_bytes", "reference/generated/pydicom.charset.decode_element", "reference/generated/pydicom.charset.encode_string", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS", "reference/generated/pydicom.config.DS_decimal", "reference/generated/pydicom.config.DS_numpy", "reference/generated/pydicom.config.IGNORE", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR", "reference/generated/pydicom.config.RAISE", "reference/generated/pydicom.config.WARN", "reference/generated/pydicom.config.allow_DS_float", "reference/generated/pydicom.config.assume_implicit_vr_switch", "reference/generated/pydicom.config.convert_wrong_length_to_UN", "reference/generated/pydicom.config.data_element_callback", "reference/generated/pydicom.config.data_element_callback_kwargs", "reference/generated/pydicom.config.datetime_conversion", "reference/generated/pydicom.config.debug", "reference/generated/pydicom.config.enforce_valid_values", "reference/generated/pydicom.config.future_behavior", "reference/generated/pydicom.config.overlay_data_handlers", "reference/generated/pydicom.config.pixel_data_handlers", "reference/generated/pydicom.config.reset_data_element_callback", "reference/generated/pydicom.config.settings", "reference/generated/pydicom.config.show_file_meta", "reference/generated/pydicom.config.use_DS_decimal", "reference/generated/pydicom.config.use_DS_numpy", "reference/generated/pydicom.config.use_IS_numpy", "reference/generated/pydicom.data.get_charset_files", "reference/generated/pydicom.data.get_palette_files", "reference/generated/pydicom.data.get_testdata_file", "reference/generated/pydicom.data.get_testdata_files", "reference/generated/pydicom.datadict.add_dict_entries", "reference/generated/pydicom.datadict.add_dict_entry", "reference/generated/pydicom.datadict.add_private_dict_entries", "reference/generated/pydicom.datadict.add_private_dict_entry", "reference/generated/pydicom.datadict.dictionary_VM", "reference/generated/pydicom.datadict.dictionary_VR", "reference/generated/pydicom.datadict.dictionary_description", "reference/generated/pydicom.datadict.dictionary_has_tag", "reference/generated/pydicom.datadict.dictionary_is_retired", "reference/generated/pydicom.datadict.dictionary_keyword", "reference/generated/pydicom.datadict.get_entry", "reference/generated/pydicom.datadict.get_private_entry", "reference/generated/pydicom.datadict.keyword_for_tag", "reference/generated/pydicom.datadict.mask_match", "reference/generated/pydicom.datadict.private_dictionary_VM", "reference/generated/pydicom.datadict.private_dictionary_VR", "reference/generated/pydicom.datadict.private_dictionary_description", "reference/generated/pydicom.datadict.repeater_has_keyword", "reference/generated/pydicom.datadict.repeater_has_tag", "reference/generated/pydicom.datadict.tag_for_keyword", "reference/generated/pydicom.dataelem.DataElement", "reference/generated/pydicom.dataelem.DataElement_from_raw", "reference/generated/pydicom.dataelem.RawDataElement", "reference/generated/pydicom.dataset.Dataset", "reference/generated/pydicom.dataset.FileDataset", "reference/generated/pydicom.dataset.FileMetaDataset", "reference/generated/pydicom.dataset.PrivateBlock", "reference/generated/pydicom.dataset.validate_file_meta", "reference/generated/pydicom.encaps.decode_data_sequence", "reference/generated/pydicom.encaps.defragment_data", "reference/generated/pydicom.encaps.encapsulate", "reference/generated/pydicom.encaps.encapsulate_extended", "reference/generated/pydicom.encaps.fragment_frame", "reference/generated/pydicom.encaps.generate_pixel_data", "reference/generated/pydicom.encaps.generate_pixel_data_fragment", "reference/generated/pydicom.encaps.generate_pixel_data_frame", "reference/generated/pydicom.encaps.get_frame_offsets", "reference/generated/pydicom.encaps.itemize_fragment", "reference/generated/pydicom.encaps.itemize_frame", "reference/generated/pydicom.encaps.read_item", "reference/generated/pydicom.encoders.RLELosslessEncoder", "reference/generated/pydicom.encoders.base.Encoder", "reference/generated/pydicom.encoders.get_encoder", "reference/generated/pydicom.errors.InvalidDicomError", "reference/generated/pydicom.filebase.DicomBytesIO", "reference/generated/pydicom.filebase.DicomFile", "reference/generated/pydicom.filebase.DicomFileLike", "reference/generated/pydicom.filebase.DicomIO", "reference/generated/pydicom.filereader.data_element_generator", "reference/generated/pydicom.filereader.data_element_offset_to_value", "reference/generated/pydicom.filereader.dcmread", "reference/generated/pydicom.filereader.read_dataset", "reference/generated/pydicom.filereader.read_deferred_data_element", "reference/generated/pydicom.filereader.read_file_meta_info", "reference/generated/pydicom.filereader.read_partial", "reference/generated/pydicom.filereader.read_preamble", "reference/generated/pydicom.filereader.read_sequence", "reference/generated/pydicom.filereader.read_sequence_item", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS", "reference/generated/pydicom.fileset.FileInstance", "reference/generated/pydicom.fileset.FileSet", "reference/generated/pydicom.fileset.RecordNode", "reference/generated/pydicom.fileset.generate_filename", "reference/generated/pydicom.fileset.is_conformant_file_id", "reference/generated/pydicom.fileutil.absorb_delimiter_item", "reference/generated/pydicom.fileutil.find_bytes", "reference/generated/pydicom.fileutil.find_delimiter", "reference/generated/pydicom.fileutil.length_of_undefined_length", "reference/generated/pydicom.fileutil.read_undefined_length_value", "reference/generated/pydicom.filewriter.correct_ambiguous_vr", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element", "reference/generated/pydicom.filewriter.dcmwrite", "reference/generated/pydicom.filewriter.multi_string", "reference/generated/pydicom.filewriter.write_ATvalue", "reference/generated/pydicom.filewriter.write_DA", "reference/generated/pydicom.filewriter.write_DT", "reference/generated/pydicom.filewriter.write_OBvalue", "reference/generated/pydicom.filewriter.write_OWvalue", "reference/generated/pydicom.filewriter.write_PN", "reference/generated/pydicom.filewriter.write_TM", "reference/generated/pydicom.filewriter.write_UI", "reference/generated/pydicom.filewriter.write_UN", "reference/generated/pydicom.filewriter.write_data_element", "reference/generated/pydicom.filewriter.write_dataset", "reference/generated/pydicom.filewriter.write_file_meta_info", "reference/generated/pydicom.filewriter.write_number_string", "reference/generated/pydicom.filewriter.write_numbers", "reference/generated/pydicom.filewriter.write_sequence", "reference/generated/pydicom.filewriter.write_sequence_item", "reference/generated/pydicom.filewriter.write_string", "reference/generated/pydicom.filewriter.write_text", "reference/generated/pydicom.misc.is_dicom", "reference/generated/pydicom.misc.size_in_bytes", "reference/generated/pydicom.multival.MultiValue", "reference/generated/pydicom.overlays.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut", "reference/generated/pydicom.pixel_data_handlers.apply_rescale", "reference/generated/pydicom.pixel_data_handlers.apply_voi", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut", "reference/generated/pydicom.pixel_data_handlers.apply_windowing", "reference/generated/pydicom.pixel_data_handlers.convert_color_space", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler", "reference/generated/pydicom.pixel_data_handlers.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.pillow_handler", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler", "reference/generated/pydicom.pixel_data_handlers.rle_handler", "reference/generated/pydicom.pixel_data_handlers.util", "reference/generated/pydicom.sequence.Sequence", "reference/generated/pydicom.sequence.validate_dataset", "reference/generated/pydicom.tag.BaseTag", "reference/generated/pydicom.tag.Tag", "reference/generated/pydicom.tag.TupleTag", "reference/generated/pydicom.tag.tag_in_exception", "reference/generated/pydicom.uid.AcquisitionContextSRStorage", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage", "reference/generated/pydicom.uid.AllTransferSyntaxes", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage", "reference/generated/pydicom.uid.BasicTextSRStorage", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.BodyPositionWaveformStorage", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.CTImageStorage", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage", "reference/generated/pydicom.uid.ChestCADSRStorage", "reference/generated/pydicom.uid.ColonCADSRStorage", "reference/generated/pydicom.uid.ColorPaletteStorage", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.Comprehensive3DSRStorage", "reference/generated/pydicom.uid.ComprehensiveSRStorage", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage", "reference/generated/pydicom.uid.CornealTopographyMapStorage", "reference/generated/pydicom.uid.DICOS2DAITStorage", "reference/generated/pydicom.uid.DICOS3DAITStorage", "reference/generated/pydicom.uid.DICOSCTImageStorage", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.EddyCurrentImageStorage", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage", "reference/generated/pydicom.uid.EncapsulatedCDAStorage", "reference/generated/pydicom.uid.EncapsulatedMTLStorage", "reference/generated/pydicom.uid.EncapsulatedOBJStorage", "reference/generated/pydicom.uid.EncapsulatedPDFStorage", "reference/generated/pydicom.uid.EncapsulatedSTLStorage", "reference/generated/pydicom.uid.EnhancedCTImageStorage", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage", "reference/generated/pydicom.uid.EnhancedMRImageStorage", "reference/generated/pydicom.uid.EnhancedPETImageStorage", "reference/generated/pydicom.uid.EnhancedSRStorage", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage", "reference/generated/pydicom.uid.EnhancedXAImageStorage", "reference/generated/pydicom.uid.EnhancedXRFImageStorage", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.ExplicitVRBigEndian", "reference/generated/pydicom.uid.ExplicitVRLittleEndian", "reference/generated/pydicom.uid.ExtensibleSRStorage", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage", "reference/generated/pydicom.uid.GeneralECGWaveformStorage", "reference/generated/pydicom.uid.GenericImplantTemplateStorage", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.HEVCM10P51", "reference/generated/pydicom.uid.HEVCMP51", "reference/generated/pydicom.uid.HangingProtocolStorage", "reference/generated/pydicom.uid.HemodynamicWaveformStorage", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage", "reference/generated/pydicom.uid.ImplantationPlanSRStorage", "reference/generated/pydicom.uid.ImplicitVRLittleEndian", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pydicom.uid.JPEG2000", "reference/generated/pydicom.uid.JPEG2000Lossless", "reference/generated/pydicom.uid.JPEG2000MC", "reference/generated/pydicom.uid.JPEG2000MCLossless", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes", "reference/generated/pydicom.uid.JPEGBaseline8Bit", "reference/generated/pydicom.uid.JPEGExtended12Bit", "reference/generated/pydicom.uid.JPEGLSLossless", "reference/generated/pydicom.uid.JPEGLSNearLossless", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes", "reference/generated/pydicom.uid.JPEGLossless", "reference/generated/pydicom.uid.JPEGLosslessSV1", "reference/generated/pydicom.uid.JPEGTransferSyntaxes", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pydicom.uid.LensometryMeasurementsStorage", "reference/generated/pydicom.uid.MPEG2MPHL", "reference/generated/pydicom.uid.MPEG2MPHLF", "reference/generated/pydicom.uid.MPEG2MPML", "reference/generated/pydicom.uid.MPEG2MPMLF", "reference/generated/pydicom.uid.MPEG4HP41", "reference/generated/pydicom.uid.MPEG4HP41BD", "reference/generated/pydicom.uid.MPEG4HP41BDF", "reference/generated/pydicom.uid.MPEG4HP41F", "reference/generated/pydicom.uid.MPEG4HP422D", "reference/generated/pydicom.uid.MPEG4HP422DF", "reference/generated/pydicom.uid.MPEG4HP423D", "reference/generated/pydicom.uid.MPEG4HP423DF", "reference/generated/pydicom.uid.MPEG4HP42STEREO", "reference/generated/pydicom.uid.MPEG4HP42STEREOF", "reference/generated/pydicom.uid.MPEGTransferSyntaxes", "reference/generated/pydicom.uid.MRImageStorage", "reference/generated/pydicom.uid.MRSpectroscopyStorage", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pydicom.uid.MammographyCADSRStorage", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.NuclearMedicineImageStorage", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID", "reference/generated/pydicom.uid.ParametricMapStorage", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage", "reference/generated/pydicom.uid.ProcedureLogStorage", "reference/generated/pydicom.uid.ProtocolApprovalStorage", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.RE_VALID_UID", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX", "reference/generated/pydicom.uid.RLELossless", "reference/generated/pydicom.uid.RLETransferSyntaxes", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage", "reference/generated/pydicom.uid.RTDoseStorage", "reference/generated/pydicom.uid.RTImageStorage", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTIonPlanStorage", "reference/generated/pydicom.uid.RTPhysicianIntentStorage", "reference/generated/pydicom.uid.RTPlanStorage", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTRadiationSetStorage", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage", "reference/generated/pydicom.uid.RTStructureSetStorage", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pydicom.uid.RawDataStorage", "reference/generated/pydicom.uid.RealWorldValueMappingStorage", "reference/generated/pydicom.uid.RespiratoryWaveformStorage", "reference/generated/pydicom.uid.RoboticArmRadiationStorage", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage", "reference/generated/pydicom.uid.SegmentationStorage", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SpatialFiducialsStorage", "reference/generated/pydicom.uid.SpatialRegistrationStorage", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage", "reference/generated/pydicom.uid.StereometricRelationshipStorage", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage", "reference/generated/pydicom.uid.SurfaceScanMeshStorage", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage", "reference/generated/pydicom.uid.SurfaceSegmentationStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage", "reference/generated/pydicom.uid.TractographyResultsStorage", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage", "reference/generated/pydicom.uid.UID", "reference/generated/pydicom.uid.UltrasoundImageStorage", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes", "reference/generated/pydicom.uid.VLEndoscopicImageStorage", "reference/generated/pydicom.uid.VLMicroscopicImageStorage", "reference/generated/pydicom.uid.VLPhotographicImageStorage", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage", "reference/generated/pydicom.uid.VideoPhotographicImageStorage", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage", "reference/generated/pydicom.uid.XRayAngiographicImageStorage", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage", "reference/generated/pydicom.uid.generate_uid", "reference/generated/pydicom.valuerep.DA", "reference/generated/pydicom.valuerep.DS", "reference/generated/pydicom.valuerep.DSdecimal", "reference/generated/pydicom.valuerep.DSfloat", "reference/generated/pydicom.valuerep.DT", "reference/generated/pydicom.valuerep.IS", "reference/generated/pydicom.valuerep.ISfloat", "reference/generated/pydicom.valuerep.MultiString", "reference/generated/pydicom.valuerep.PersonName", "reference/generated/pydicom.valuerep.TM", "reference/generated/pydicom.valuerep.VR", "reference/generated/pydicom.valuerep.format_number_as_ds", "reference/generated/pydicom.valuerep.is_valid_ds", "reference/generated/pydicom.values.convert_AE_string", "reference/generated/pydicom.values.convert_ATvalue", "reference/generated/pydicom.values.convert_DA_string", "reference/generated/pydicom.values.convert_DS_string", "reference/generated/pydicom.values.convert_DT_string", "reference/generated/pydicom.values.convert_IS_string", "reference/generated/pydicom.values.convert_OBvalue", "reference/generated/pydicom.values.convert_OWvalue", "reference/generated/pydicom.values.convert_PN", "reference/generated/pydicom.values.convert_SQ", "reference/generated/pydicom.values.convert_TM_string", "reference/generated/pydicom.values.convert_UI", "reference/generated/pydicom.values.convert_UN", "reference/generated/pydicom.values.convert_UR_string", "reference/generated/pydicom.values.convert_numbers", "reference/generated/pydicom.values.convert_single_string", "reference/generated/pydicom.values.convert_string", "reference/generated/pydicom.values.convert_tag", "reference/generated/pydicom.values.convert_text", "reference/generated/pydicom.values.convert_value", "reference/generated/pydicom.waveforms.numpy_handler", "reference/handlers", "reference/handlers.overlay_data", "reference/handlers.pixel_data", "reference/handlers.waveform_data", "reference/index", "reference/misc", "reference/uid", "release_notes/index", "release_notes/v0.9.2", "release_notes/v0.9.3", "release_notes/v0.9.4", "release_notes/v0.9.5", "release_notes/v0.9.6", "release_notes/v0.9.7", "release_notes/v0.9.8", "release_notes/v0.9.9", "release_notes/v1.0.0", "release_notes/v1.1.0", "release_notes/v1.2.0", "release_notes/v1.3.0", "release_notes/v1.4.0", "release_notes/v1.4.1", "release_notes/v2.0.0", "release_notes/v2.1.0", "release_notes/v2.1.1", "release_notes/v2.2.0", "release_notes/v2.3.0", "release_notes/v2.4.0", "release_notes/v3.0.0", "tutorials/contributing", "tutorials/contributing_code", "tutorials/contributing_docs", "tutorials/dataset_basics", "tutorials/dicom_json", "tutorials/filesets", "tutorials/index", "tutorials/installation", "tutorials/pixel_data/compressing", "tutorials/sr_basics", "tutorials/waveforms"], "filenames": ["auto_examples/dicomtree.rst", "auto_examples/image_processing/index.rst", "auto_examples/image_processing/plot_downsize_image.rst", "auto_examples/image_processing/plot_waveforms.rst", "auto_examples/image_processing/reslice.rst", "auto_examples/image_processing/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/input_output/index.rst", "auto_examples/input_output/plot_printing_dataset.rst", "auto_examples/input_output/plot_read_dicom.rst", "auto_examples/input_output/plot_read_fileset.rst", "auto_examples/input_output/plot_read_rtplan.rst", "auto_examples/input_output/plot_write_dicom.rst", "auto_examples/input_output/sg_execution_times.rst", "auto_examples/memory_dataset.rst", "auto_examples/metadata_processing/index.rst", "auto_examples/metadata_processing/plot_add_dict_entries.rst", "auto_examples/metadata_processing/plot_anonymize.rst", "auto_examples/metadata_processing/plot_sequences.rst", "auto_examples/metadata_processing/sg_execution_times.rst", "auto_examples/plot_dicom_difference.rst", "auto_examples/sg_execution_times.rst", "auto_examples/show_charset_name.rst", "faq/index.rst", "guides/cli/cli_codify.rst", "guides/cli/cli_dev.rst", "guides/cli/cli_guide.rst", "guides/cli/cli_intro.rst", "guides/cli/cli_show.rst", "guides/element_value_types.rst", "guides/encoding/encoder_plugin_options.rst", "guides/encoding/encoder_plugins.rst", "guides/encoding/index.rst", "guides/encoding/rle_lossless.rst", "guides/glossary.rst", "guides/index.rst", "guides/writing_documentation.rst", "index.rst", "old/base_element.rst", "old/best_practices.rst", "old/getting_started.rst", "old/image_data_compression.rst", "old/image_data_handlers.rst", "old/private_data_elements.rst", "old/pydicom_user_guide.rst", "old/python2_support.rst", "old/ref_guide.rst", "old/viewing_images.rst", "old/working_with_overlays.rst", "old/working_with_pixel_data.rst", "old/working_with_waveforms.rst", "old/writing_files.rst", "reference/charset.rst", "reference/config.rst", "reference/data.rst", "reference/datadict.rst", "reference/dataset.rst", "reference/elem.rst", "reference/elem.dataelem.rst", "reference/elem.multival.rst", "reference/elem.sequence.rst", "reference/elem.tag.rst", "reference/elem.valuerep.rst", "reference/elem.values.rst", "reference/encaps.rst", "reference/encoders.rst", "reference/errors.rst", "reference/fileio.rst", "reference/fileio.base.rst", "reference/fileio.read.rst", "reference/fileio.util.rst", "reference/fileio.write.rst", "reference/fileset.rst", "reference/generated/pydicom.charset.convert_encodings.rst", "reference/generated/pydicom.charset.decode_bytes.rst", "reference/generated/pydicom.charset.decode_element.rst", "reference/generated/pydicom.charset.encode_string.rst", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS.rst", "reference/generated/pydicom.config.DS_decimal.rst", "reference/generated/pydicom.config.DS_numpy.rst", "reference/generated/pydicom.config.IGNORE.rst", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR.rst", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR.rst", "reference/generated/pydicom.config.RAISE.rst", "reference/generated/pydicom.config.WARN.rst", "reference/generated/pydicom.config.allow_DS_float.rst", "reference/generated/pydicom.config.assume_implicit_vr_switch.rst", "reference/generated/pydicom.config.convert_wrong_length_to_UN.rst", "reference/generated/pydicom.config.data_element_callback.rst", "reference/generated/pydicom.config.data_element_callback_kwargs.rst", "reference/generated/pydicom.config.datetime_conversion.rst", "reference/generated/pydicom.config.debug.rst", "reference/generated/pydicom.config.enforce_valid_values.rst", "reference/generated/pydicom.config.future_behavior.rst", "reference/generated/pydicom.config.overlay_data_handlers.rst", "reference/generated/pydicom.config.pixel_data_handlers.rst", "reference/generated/pydicom.config.reset_data_element_callback.rst", "reference/generated/pydicom.config.settings.rst", "reference/generated/pydicom.config.show_file_meta.rst", "reference/generated/pydicom.config.use_DS_decimal.rst", "reference/generated/pydicom.config.use_DS_numpy.rst", "reference/generated/pydicom.config.use_IS_numpy.rst", "reference/generated/pydicom.data.get_charset_files.rst", "reference/generated/pydicom.data.get_palette_files.rst", "reference/generated/pydicom.data.get_testdata_file.rst", "reference/generated/pydicom.data.get_testdata_files.rst", "reference/generated/pydicom.datadict.add_dict_entries.rst", "reference/generated/pydicom.datadict.add_dict_entry.rst", "reference/generated/pydicom.datadict.add_private_dict_entries.rst", "reference/generated/pydicom.datadict.add_private_dict_entry.rst", "reference/generated/pydicom.datadict.dictionary_VM.rst", "reference/generated/pydicom.datadict.dictionary_VR.rst", "reference/generated/pydicom.datadict.dictionary_description.rst", "reference/generated/pydicom.datadict.dictionary_has_tag.rst", "reference/generated/pydicom.datadict.dictionary_is_retired.rst", "reference/generated/pydicom.datadict.dictionary_keyword.rst", "reference/generated/pydicom.datadict.get_entry.rst", "reference/generated/pydicom.datadict.get_private_entry.rst", "reference/generated/pydicom.datadict.keyword_for_tag.rst", "reference/generated/pydicom.datadict.mask_match.rst", "reference/generated/pydicom.datadict.private_dictionary_VM.rst", "reference/generated/pydicom.datadict.private_dictionary_VR.rst", "reference/generated/pydicom.datadict.private_dictionary_description.rst", "reference/generated/pydicom.datadict.repeater_has_keyword.rst", "reference/generated/pydicom.datadict.repeater_has_tag.rst", "reference/generated/pydicom.datadict.tag_for_keyword.rst", "reference/generated/pydicom.dataelem.DataElement.rst", "reference/generated/pydicom.dataelem.DataElement_from_raw.rst", "reference/generated/pydicom.dataelem.RawDataElement.rst", "reference/generated/pydicom.dataset.Dataset.rst", "reference/generated/pydicom.dataset.FileDataset.rst", "reference/generated/pydicom.dataset.FileMetaDataset.rst", "reference/generated/pydicom.dataset.PrivateBlock.rst", "reference/generated/pydicom.dataset.validate_file_meta.rst", "reference/generated/pydicom.encaps.decode_data_sequence.rst", "reference/generated/pydicom.encaps.defragment_data.rst", "reference/generated/pydicom.encaps.encapsulate.rst", "reference/generated/pydicom.encaps.encapsulate_extended.rst", "reference/generated/pydicom.encaps.fragment_frame.rst", "reference/generated/pydicom.encaps.generate_pixel_data.rst", "reference/generated/pydicom.encaps.generate_pixel_data_fragment.rst", "reference/generated/pydicom.encaps.generate_pixel_data_frame.rst", "reference/generated/pydicom.encaps.get_frame_offsets.rst", "reference/generated/pydicom.encaps.itemize_fragment.rst", "reference/generated/pydicom.encaps.itemize_frame.rst", "reference/generated/pydicom.encaps.read_item.rst", "reference/generated/pydicom.encoders.RLELosslessEncoder.rst", "reference/generated/pydicom.encoders.base.Encoder.rst", "reference/generated/pydicom.encoders.get_encoder.rst", "reference/generated/pydicom.errors.InvalidDicomError.rst", "reference/generated/pydicom.filebase.DicomBytesIO.rst", "reference/generated/pydicom.filebase.DicomFile.rst", "reference/generated/pydicom.filebase.DicomFileLike.rst", "reference/generated/pydicom.filebase.DicomIO.rst", "reference/generated/pydicom.filereader.data_element_generator.rst", "reference/generated/pydicom.filereader.data_element_offset_to_value.rst", "reference/generated/pydicom.filereader.dcmread.rst", "reference/generated/pydicom.filereader.read_dataset.rst", "reference/generated/pydicom.filereader.read_deferred_data_element.rst", "reference/generated/pydicom.filereader.read_file_meta_info.rst", "reference/generated/pydicom.filereader.read_partial.rst", "reference/generated/pydicom.filereader.read_preamble.rst", "reference/generated/pydicom.filereader.read_sequence.rst", "reference/generated/pydicom.filereader.read_sequence_item.rst", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS.rst", "reference/generated/pydicom.fileset.FileInstance.rst", "reference/generated/pydicom.fileset.FileSet.rst", "reference/generated/pydicom.fileset.RecordNode.rst", "reference/generated/pydicom.fileset.generate_filename.rst", "reference/generated/pydicom.fileset.is_conformant_file_id.rst", "reference/generated/pydicom.fileutil.absorb_delimiter_item.rst", "reference/generated/pydicom.fileutil.find_bytes.rst", "reference/generated/pydicom.fileutil.find_delimiter.rst", "reference/generated/pydicom.fileutil.length_of_undefined_length.rst", "reference/generated/pydicom.fileutil.read_undefined_length_value.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element.rst", "reference/generated/pydicom.filewriter.dcmwrite.rst", "reference/generated/pydicom.filewriter.multi_string.rst", "reference/generated/pydicom.filewriter.write_ATvalue.rst", "reference/generated/pydicom.filewriter.write_DA.rst", "reference/generated/pydicom.filewriter.write_DT.rst", "reference/generated/pydicom.filewriter.write_OBvalue.rst", "reference/generated/pydicom.filewriter.write_OWvalue.rst", "reference/generated/pydicom.filewriter.write_PN.rst", "reference/generated/pydicom.filewriter.write_TM.rst", "reference/generated/pydicom.filewriter.write_UI.rst", "reference/generated/pydicom.filewriter.write_UN.rst", "reference/generated/pydicom.filewriter.write_data_element.rst", "reference/generated/pydicom.filewriter.write_dataset.rst", "reference/generated/pydicom.filewriter.write_file_meta_info.rst", "reference/generated/pydicom.filewriter.write_number_string.rst", "reference/generated/pydicom.filewriter.write_numbers.rst", "reference/generated/pydicom.filewriter.write_sequence.rst", "reference/generated/pydicom.filewriter.write_sequence_item.rst", "reference/generated/pydicom.filewriter.write_string.rst", "reference/generated/pydicom.filewriter.write_text.rst", "reference/generated/pydicom.misc.is_dicom.rst", "reference/generated/pydicom.misc.size_in_bytes.rst", "reference/generated/pydicom.multival.MultiValue.rst", "reference/generated/pydicom.overlays.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_rescale.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_windowing.rst", "reference/generated/pydicom.pixel_data_handlers.convert_color_space.rst", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler.rst", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler.rst", "reference/generated/pydicom.pixel_data_handlers.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pillow_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler.rst", "reference/generated/pydicom.pixel_data_handlers.rle_handler.rst", "reference/generated/pydicom.pixel_data_handlers.util.rst", "reference/generated/pydicom.sequence.Sequence.rst", "reference/generated/pydicom.sequence.validate_dataset.rst", "reference/generated/pydicom.tag.BaseTag.rst", "reference/generated/pydicom.tag.Tag.rst", "reference/generated/pydicom.tag.TupleTag.rst", "reference/generated/pydicom.tag.tag_in_exception.rst", "reference/generated/pydicom.uid.AcquisitionContextSRStorage.rst", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pydicom.uid.AllTransferSyntaxes.rst", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage.rst", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage.rst", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage.rst", "reference/generated/pydicom.uid.BasicTextSRStorage.rst", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.BodyPositionWaveformStorage.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CTImageStorage.rst", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pydicom.uid.ChestCADSRStorage.rst", "reference/generated/pydicom.uid.ColonCADSRStorage.rst", "reference/generated/pydicom.uid.ColorPaletteStorage.rst", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.Comprehensive3DSRStorage.rst", "reference/generated/pydicom.uid.ComprehensiveSRStorage.rst", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage.rst", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage.rst", "reference/generated/pydicom.uid.CornealTopographyMapStorage.rst", "reference/generated/pydicom.uid.DICOS2DAITStorage.rst", "reference/generated/pydicom.uid.DICOS3DAITStorage.rst", "reference/generated/pydicom.uid.DICOSCTImageStorage.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage.rst", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage.rst", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.EddyCurrentImageStorage.rst", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage.rst", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage.rst", "reference/generated/pydicom.uid.EncapsulatedCDAStorage.rst", "reference/generated/pydicom.uid.EncapsulatedMTLStorage.rst", "reference/generated/pydicom.uid.EncapsulatedOBJStorage.rst", "reference/generated/pydicom.uid.EncapsulatedPDFStorage.rst", "reference/generated/pydicom.uid.EncapsulatedSTLStorage.rst", "reference/generated/pydicom.uid.EnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.EnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.EnhancedSRStorage.rst", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage.rst", "reference/generated/pydicom.uid.EnhancedXAImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRFImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.ExplicitVRBigEndian.rst", "reference/generated/pydicom.uid.ExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.ExtensibleSRStorage.rst", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralECGWaveformStorage.rst", "reference/generated/pydicom.uid.GenericImplantTemplateStorage.rst", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.HEVCM10P51.rst", "reference/generated/pydicom.uid.HEVCMP51.rst", "reference/generated/pydicom.uid.HangingProtocolStorage.rst", "reference/generated/pydicom.uid.HemodynamicWaveformStorage.rst", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage.rst", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage.rst", "reference/generated/pydicom.uid.ImplantationPlanSRStorage.rst", "reference/generated/pydicom.uid.ImplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pydicom.uid.JPEG2000.rst", "reference/generated/pydicom.uid.JPEG2000Lossless.rst", "reference/generated/pydicom.uid.JPEG2000MC.rst", "reference/generated/pydicom.uid.JPEG2000MCLossless.rst", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGBaseline8Bit.rst", "reference/generated/pydicom.uid.JPEGExtended12Bit.rst", "reference/generated/pydicom.uid.JPEGLSLossless.rst", "reference/generated/pydicom.uid.JPEGLSNearLossless.rst", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGLossless.rst", "reference/generated/pydicom.uid.JPEGLosslessSV1.rst", "reference/generated/pydicom.uid.JPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.LensometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.MPEG2MPHL.rst", "reference/generated/pydicom.uid.MPEG2MPHLF.rst", "reference/generated/pydicom.uid.MPEG2MPML.rst", "reference/generated/pydicom.uid.MPEG2MPMLF.rst", "reference/generated/pydicom.uid.MPEG4HP41.rst", "reference/generated/pydicom.uid.MPEG4HP41BD.rst", "reference/generated/pydicom.uid.MPEG4HP41BDF.rst", "reference/generated/pydicom.uid.MPEG4HP41F.rst", "reference/generated/pydicom.uid.MPEG4HP422D.rst", "reference/generated/pydicom.uid.MPEG4HP422DF.rst", "reference/generated/pydicom.uid.MPEG4HP423D.rst", "reference/generated/pydicom.uid.MPEG4HP423DF.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREO.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREOF.rst", "reference/generated/pydicom.uid.MPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.MRImageStorage.rst", "reference/generated/pydicom.uid.MRSpectroscopyStorage.rst", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pydicom.uid.MammographyCADSRStorage.rst", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage.rst", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.NuclearMedicineImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage.rst", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID.rst", "reference/generated/pydicom.uid.ParametricMapStorage.rst", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage.rst", "reference/generated/pydicom.uid.ProcedureLogStorage.rst", "reference/generated/pydicom.uid.ProtocolApprovalStorage.rst", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.RE_VALID_UID.rst", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX.rst", "reference/generated/pydicom.uid.RLELossless.rst", "reference/generated/pydicom.uid.RLETransferSyntaxes.rst", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTDoseStorage.rst", "reference/generated/pydicom.uid.RTImageStorage.rst", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTIonPlanStorage.rst", "reference/generated/pydicom.uid.RTPhysicianIntentStorage.rst", "reference/generated/pydicom.uid.RTPlanStorage.rst", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage.rst", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetStorage.rst", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage.rst", "reference/generated/pydicom.uid.RTStructureSetStorage.rst", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage.rst", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.RawDataStorage.rst", "reference/generated/pydicom.uid.RealWorldValueMappingStorage.rst", "reference/generated/pydicom.uid.RespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.RoboticArmRadiationStorage.rst", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio.rst", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.SegmentationStorage.rst", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SpatialFiducialsStorage.rst", "reference/generated/pydicom.uid.SpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage.rst", "reference/generated/pydicom.uid.StereometricRelationshipStorage.rst", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.SurfaceScanMeshStorage.rst", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage.rst", "reference/generated/pydicom.uid.SurfaceSegmentationStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage.rst", "reference/generated/pydicom.uid.TractographyResultsStorage.rst", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage.rst", "reference/generated/pydicom.uid.UID.rst", "reference/generated/pydicom.uid.UltrasoundImageStorage.rst", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes.rst", "reference/generated/pydicom.uid.VLEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VLMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage.rst", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage.rst", "reference/generated/pydicom.uid.XRayAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pydicom.uid.generate_uid.rst", "reference/generated/pydicom.valuerep.DA.rst", "reference/generated/pydicom.valuerep.DS.rst", "reference/generated/pydicom.valuerep.DSdecimal.rst", "reference/generated/pydicom.valuerep.DSfloat.rst", "reference/generated/pydicom.valuerep.DT.rst", "reference/generated/pydicom.valuerep.IS.rst", "reference/generated/pydicom.valuerep.ISfloat.rst", "reference/generated/pydicom.valuerep.MultiString.rst", "reference/generated/pydicom.valuerep.PersonName.rst", "reference/generated/pydicom.valuerep.TM.rst", "reference/generated/pydicom.valuerep.VR.rst", "reference/generated/pydicom.valuerep.format_number_as_ds.rst", "reference/generated/pydicom.valuerep.is_valid_ds.rst", "reference/generated/pydicom.values.convert_AE_string.rst", "reference/generated/pydicom.values.convert_ATvalue.rst", "reference/generated/pydicom.values.convert_DA_string.rst", "reference/generated/pydicom.values.convert_DS_string.rst", "reference/generated/pydicom.values.convert_DT_string.rst", "reference/generated/pydicom.values.convert_IS_string.rst", "reference/generated/pydicom.values.convert_OBvalue.rst", "reference/generated/pydicom.values.convert_OWvalue.rst", "reference/generated/pydicom.values.convert_PN.rst", "reference/generated/pydicom.values.convert_SQ.rst", "reference/generated/pydicom.values.convert_TM_string.rst", "reference/generated/pydicom.values.convert_UI.rst", "reference/generated/pydicom.values.convert_UN.rst", "reference/generated/pydicom.values.convert_UR_string.rst", "reference/generated/pydicom.values.convert_numbers.rst", "reference/generated/pydicom.values.convert_single_string.rst", "reference/generated/pydicom.values.convert_string.rst", "reference/generated/pydicom.values.convert_tag.rst", "reference/generated/pydicom.values.convert_text.rst", "reference/generated/pydicom.values.convert_value.rst", "reference/generated/pydicom.waveforms.numpy_handler.rst", "reference/handlers.rst", "reference/handlers.overlay_data.rst", "reference/handlers.pixel_data.rst", "reference/handlers.waveform_data.rst", "reference/index.rst", "reference/misc.rst", "reference/uid.rst", "release_notes/index.rst", "release_notes/v0.9.2.rst", "release_notes/v0.9.3.rst", "release_notes/v0.9.4.rst", "release_notes/v0.9.5.rst", "release_notes/v0.9.6.rst", "release_notes/v0.9.7.rst", "release_notes/v0.9.8.rst", "release_notes/v0.9.9.rst", "release_notes/v1.0.0.rst", "release_notes/v1.1.0.rst", "release_notes/v1.2.0.rst", "release_notes/v1.3.0.rst", "release_notes/v1.4.0.rst", "release_notes/v1.4.1.rst", "release_notes/v2.0.0.rst", "release_notes/v2.1.0.rst", "release_notes/v2.1.1.rst", "release_notes/v2.2.0.rst", "release_notes/v2.3.0.rst", "release_notes/v2.4.0.rst", "release_notes/v3.0.0.rst", "tutorials/contributing.rst", "tutorials/contributing_code.rst", "tutorials/contributing_docs.rst", "tutorials/dataset_basics.rst", "tutorials/dicom_json.rst", "tutorials/filesets.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/pixel_data/compressing.rst", "tutorials/sr_basics.rst", "tutorials/waveforms.rst"], "titles": ["Show a dicom file using hierarchical tree", "Image processing", "Downsize MRI image using pydicom", "Decode and plot Waveform Data", "Load CT slices and plot axial, sagittal and coronal images", "Computation times", "General examples", "Input-output", "Format the output of the data set printing", "Read a Dataset and plot Pixel Data", "Read a DICOM File-set", "Read RTPLAN DICOM and list information", "Write DICOM data", "Computation times", "Show working with memory-based dataset", "Metadata processing", "Add dictionary items in the standard DICOM dictionary", "Anonymize DICOM data", "Working with sequences", "Computation times", "Analyse differences between DICOM files", "Computation times", "Display unicode person names", "Frequently asked questions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">codify</span></code> command", "Extending the CLI", "Command-line Interface Guide", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">show</span></code> command", "Element VRs and Python types", "Encoder Plugins Options", "Pixel Data Encoder Plugins", "Pixel Data Encoding", "RLE Lossless Encoding", "Glossary", "Guides", "Writing documentation", "pydicom documentation", "Core elements in pydicom", "Best Practices", "Introduction to pydicom", "Compressing <em>Pixel Data</em>", "Handling of compressed pixel data", "Private Data Elements", "pydicom User Guide", "Python 2 Support", "Reading and writing DICOM files", "Viewing Images", "Working with Overlay Data", "Working with Pixel Data", "Working with Waveform Data", "Writing DICOM Files", "Character Encoding and Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.charset</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.config</span></code>)", "Getting Included Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.data</span></code>)", "Data Dictionary Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.datadict</span></code>)", "Representation of Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataset</span></code>)", "Representation of Data Elements", "Data Elements (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataelem</span></code>)", "Element Multi-value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.multival</span></code>)", "Sequence Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sequence</span></code>)", "Element Tags (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.tag</span></code>)", "Specialized Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.valuerep</span></code>)", "Element Value Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.values</span></code>)", "Bulk Data Encapsulation Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encaps</span></code>)", "Pixel Data Encoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encoders</span></code>)", "Exceptions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.errors</span></code>)", "Dataset IO", "IO Base Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filebase</span></code>)", "Dataset Reading (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filereader</span></code>)", "IO Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileutil</span></code>)", "Dataset Writing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filewriter</span></code>)", "DICOM File-sets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileset</span></code>)", "pydicom.charset.convert_encodings", "pydicom.charset.decode_bytes", "pydicom.charset.decode_element", "pydicom.charset.encode_string", "pydicom.config.APPLY_J2K_CORRECTIONS", "pydicom.config.DS_decimal", "pydicom.config.DS_numpy", "pydicom.config.IGNORE", "pydicom.config.INVALID_KEYWORD_BEHAVIOR", "pydicom.config.INVALID_KEY_BEHAVIOR", "pydicom.config.RAISE", "pydicom.config.WARN", "pydicom.config.allow_DS_float", "pydicom.config.assume_implicit_vr_switch", "pydicom.config.convert_wrong_length_to_UN", "pydicom.config.data_element_callback", "pydicom.config.data_element_callback_kwargs", "pydicom.config.datetime_conversion", "pydicom.config.debug", "pydicom.config.enforce_valid_values", "pydicom.config.future_behavior", "pydicom.config.overlay_data_handlers", "pydicom.config.pixel_data_handlers", "pydicom.config.reset_data_element_callback", "pydicom.config.settings", "pydicom.config.show_file_meta", "pydicom.config.use_DS_decimal", "pydicom.config.use_DS_numpy", "pydicom.config.use_IS_numpy", "pydicom.data.get_charset_files", "pydicom.data.get_palette_files", "pydicom.data.get_testdata_file", "pydicom.data.get_testdata_files", "pydicom.datadict.add_dict_entries", "pydicom.datadict.add_dict_entry", "pydicom.datadict.add_private_dict_entries", "pydicom.datadict.add_private_dict_entry", "pydicom.datadict.dictionary_VM", "pydicom.datadict.dictionary_VR", "pydicom.datadict.dictionary_description", "pydicom.datadict.dictionary_has_tag", "pydicom.datadict.dictionary_is_retired", "pydicom.datadict.dictionary_keyword", "pydicom.datadict.get_entry", "pydicom.datadict.get_private_entry", "pydicom.datadict.keyword_for_tag", "pydicom.datadict.mask_match", "pydicom.datadict.private_dictionary_VM", "pydicom.datadict.private_dictionary_VR", "pydicom.datadict.private_dictionary_description", "pydicom.datadict.repeater_has_keyword", "pydicom.datadict.repeater_has_tag", "pydicom.datadict.tag_for_keyword", "pydicom.dataelem.DataElement", "pydicom.dataelem.DataElement_from_raw", "pydicom.dataelem.RawDataElement", "pydicom.dataset.Dataset", "pydicom.dataset.FileDataset", "pydicom.dataset.FileMetaDataset", "pydicom.dataset.PrivateBlock", "pydicom.dataset.validate_file_meta", "pydicom.encaps.decode_data_sequence", "pydicom.encaps.defragment_data", "pydicom.encaps.encapsulate", "pydicom.encaps.encapsulate_extended", "pydicom.encaps.fragment_frame", "pydicom.encaps.generate_pixel_data", "pydicom.encaps.generate_pixel_data_fragment", "pydicom.encaps.generate_pixel_data_frame", "pydicom.encaps.get_frame_offsets", "pydicom.encaps.itemize_fragment", "pydicom.encaps.itemize_frame", "pydicom.encaps.read_item", "pydicom.encoders.RLELosslessEncoder", "pydicom.encoders.base.Encoder", "pydicom.encoders.get_encoder", "pydicom.errors.InvalidDicomError", "pydicom.filebase.DicomBytesIO", "pydicom.filebase.DicomFile", "pydicom.filebase.DicomFileLike", "pydicom.filebase.DicomIO", "pydicom.filereader.data_element_generator", "pydicom.filereader.data_element_offset_to_value", "pydicom.filereader.dcmread", "pydicom.filereader.read_dataset", "pydicom.filereader.read_deferred_data_element", "pydicom.filereader.read_file_meta_info", "pydicom.filereader.read_partial", "pydicom.filereader.read_preamble", "pydicom.filereader.read_sequence", "pydicom.filereader.read_sequence_item", "pydicom.fileset.DIRECTORY_RECORDERS", "pydicom.fileset.FileInstance", "pydicom.fileset.FileSet", "pydicom.fileset.RecordNode", "pydicom.fileset.generate_filename", "pydicom.fileset.is_conformant_file_id", "pydicom.fileutil.absorb_delimiter_item", "pydicom.fileutil.find_bytes", "pydicom.fileutil.find_delimiter", "pydicom.fileutil.length_of_undefined_length", "pydicom.fileutil.read_undefined_length_value", "pydicom.filewriter.correct_ambiguous_vr", "pydicom.filewriter.correct_ambiguous_vr_element", "pydicom.filewriter.dcmwrite", "pydicom.filewriter.multi_string", "pydicom.filewriter.write_ATvalue", "pydicom.filewriter.write_DA", "pydicom.filewriter.write_DT", "pydicom.filewriter.write_OBvalue", "pydicom.filewriter.write_OWvalue", "pydicom.filewriter.write_PN", "pydicom.filewriter.write_TM", "pydicom.filewriter.write_UI", "pydicom.filewriter.write_UN", "pydicom.filewriter.write_data_element", "pydicom.filewriter.write_dataset", "pydicom.filewriter.write_file_meta_info", "pydicom.filewriter.write_number_string", "pydicom.filewriter.write_numbers", "pydicom.filewriter.write_sequence", "pydicom.filewriter.write_sequence_item", "pydicom.filewriter.write_string", "pydicom.filewriter.write_text", "pydicom.misc.is_dicom", "pydicom.misc.size_in_bytes", "pydicom.multival.MultiValue", "pydicom.overlays.numpy_handler", "pydicom.pixel_data_handlers.apply_color_lut", "pydicom.pixel_data_handlers.apply_modality_lut", "pydicom.pixel_data_handlers.apply_rescale", "pydicom.pixel_data_handlers.apply_voi", "pydicom.pixel_data_handlers.apply_voi_lut", "pydicom.pixel_data_handlers.apply_windowing", "pydicom.pixel_data_handlers.convert_color_space", "pydicom.pixel_data_handlers.gdcm_handler", "pydicom.pixel_data_handlers.jpeg_ls_handler", "pydicom.pixel_data_handlers.numpy_handler", "pydicom.pixel_data_handlers.pillow_handler", "pydicom.pixel_data_handlers.pylibjpeg_handler", "pydicom.pixel_data_handlers.rle_handler", "pydicom.pixel_data_handlers.util", "pydicom.sequence.Sequence", "pydicom.sequence.validate_dataset", "pydicom.tag.BaseTag", "pydicom.tag.Tag", "pydicom.tag.TupleTag", "pydicom.tag.tag_in_exception", "pydicom.uid.AcquisitionContextSRStorage", "pydicom.uid.AdvancedBlendingPresentationStateStorage", "pydicom.uid.AllTransferSyntaxes", "pydicom.uid.AmbulatoryECGWaveformStorage", "pydicom.uid.ArterialPulseWaveformStorage", "pydicom.uid.AutorefractionMeasurementsStorage", "pydicom.uid.BasicStructuredDisplayStorage", "pydicom.uid.BasicTextSRStorage", "pydicom.uid.BasicVoiceAudioWaveformStorage", "pydicom.uid.BlendingSoftcopyPresentationStateStorage", "pydicom.uid.BodyPositionWaveformStorage", "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "pydicom.uid.BreastTomosynthesisImageStorage", "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "pydicom.uid.CArmPhotonElectronRadiationStorage", "pydicom.uid.CTDefinedProcedureProtocolStorage", "pydicom.uid.CTImageStorage", "pydicom.uid.CTPerformedProcedureProtocolStorage", "pydicom.uid.CardiacElectrophysiologyWaveformStorage", "pydicom.uid.ChestCADSRStorage", "pydicom.uid.ColonCADSRStorage", "pydicom.uid.ColorPaletteStorage", "pydicom.uid.ColorSoftcopyPresentationStateStorage", "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.Comprehensive3DSRStorage", "pydicom.uid.ComprehensiveSRStorage", "pydicom.uid.ComputedRadiographyImageStorage", "pydicom.uid.ContentAssessmentResultsStorage", "pydicom.uid.CornealTopographyMapStorage", "pydicom.uid.DICOS2DAITStorage", "pydicom.uid.DICOS3DAITStorage", "pydicom.uid.DICOSCTImageStorage", "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "pydicom.uid.DICOSQuadrupoleResonanceStorage", "pydicom.uid.DICOSThreatDetectionReportStorage", "pydicom.uid.DeflatedExplicitVRLittleEndian", "pydicom.uid.DeformableSpatialRegistrationStorage", "pydicom.uid.DermoscopicPhotographyImageStorage", "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "pydicom.uid.DigitalXRayImageStorageForPresentation", "pydicom.uid.DigitalXRayImageStorageForProcessing", "pydicom.uid.EddyCurrentImageStorage", "pydicom.uid.EddyCurrentMultiFrameImageStorage", "pydicom.uid.ElectromyogramWaveformStorage", "pydicom.uid.ElectrooculogramWaveformStorage", "pydicom.uid.EncapsulatedCDAStorage", "pydicom.uid.EncapsulatedMTLStorage", "pydicom.uid.EncapsulatedOBJStorage", "pydicom.uid.EncapsulatedPDFStorage", "pydicom.uid.EncapsulatedSTLStorage", "pydicom.uid.EnhancedCTImageStorage", "pydicom.uid.EnhancedMRColorImageStorage", "pydicom.uid.EnhancedMRImageStorage", "pydicom.uid.EnhancedPETImageStorage", "pydicom.uid.EnhancedSRStorage", "pydicom.uid.EnhancedUSVolumeStorage", "pydicom.uid.EnhancedXAImageStorage", "pydicom.uid.EnhancedXRFImageStorage", "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "pydicom.uid.ExplicitVRBigEndian", "pydicom.uid.ExplicitVRLittleEndian", "pydicom.uid.ExtensibleSRStorage", "pydicom.uid.GeneralAudioWaveformStorage", "pydicom.uid.GeneralECGWaveformStorage", "pydicom.uid.GenericImplantTemplateStorage", "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.HEVCM10P51", "pydicom.uid.HEVCMP51", "pydicom.uid.HangingProtocolStorage", "pydicom.uid.HemodynamicWaveformStorage", "pydicom.uid.ImplantAssemblyTemplateStorage", "pydicom.uid.ImplantTemplateGroupStorage", "pydicom.uid.ImplantationPlanSRStorage", "pydicom.uid.ImplicitVRLittleEndian", "pydicom.uid.IntraocularLensCalculationsStorage", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pydicom.uid.JPEG2000", "pydicom.uid.JPEG2000Lossless", "pydicom.uid.JPEG2000MC", "pydicom.uid.JPEG2000MCLossless", "pydicom.uid.JPEG2000TransferSyntaxes", "pydicom.uid.JPEGBaseline8Bit", "pydicom.uid.JPEGExtended12Bit", "pydicom.uid.JPEGLSLossless", "pydicom.uid.JPEGLSNearLossless", "pydicom.uid.JPEGLSTransferSyntaxes", "pydicom.uid.JPEGLossless", "pydicom.uid.JPEGLosslessSV1", "pydicom.uid.JPEGTransferSyntaxes", "pydicom.uid.KeratometryMeasurementsStorage", "pydicom.uid.KeyObjectSelectionDocumentStorage", "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "pydicom.uid.LensometryMeasurementsStorage", "pydicom.uid.MPEG2MPHL", "pydicom.uid.MPEG2MPHLF", "pydicom.uid.MPEG2MPML", "pydicom.uid.MPEG2MPMLF", "pydicom.uid.MPEG4HP41", "pydicom.uid.MPEG4HP41BD", "pydicom.uid.MPEG4HP41BDF", "pydicom.uid.MPEG4HP41F", "pydicom.uid.MPEG4HP422D", "pydicom.uid.MPEG4HP422DF", "pydicom.uid.MPEG4HP423D", "pydicom.uid.MPEG4HP423DF", "pydicom.uid.MPEG4HP42STEREO", "pydicom.uid.MPEG4HP42STEREOF", "pydicom.uid.MPEGTransferSyntaxes", "pydicom.uid.MRImageStorage", "pydicom.uid.MRSpectroscopyStorage", "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "pydicom.uid.MammographyCADSRStorage", "pydicom.uid.MediaStorageDirectoryStorage", "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "pydicom.uid.MultichannelRespiratoryWaveformStorage", "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.NuclearMedicineImageStorage", "pydicom.uid.OphthalmicAxialMeasurementsStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pydicom.uid.OphthalmicPhotography16BitImageStorage", "pydicom.uid.OphthalmicPhotography8BitImageStorage", "pydicom.uid.OphthalmicThicknessMapStorage", "pydicom.uid.OphthalmicTomographyImageStorage", "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "pydicom.uid.PYDICOM_ROOT_UID", "pydicom.uid.ParametricMapStorage", "pydicom.uid.PatientRadiationDoseSRStorage", "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "pydicom.uid.PositronEmissionTomographyImageStorage", "pydicom.uid.ProcedureLogStorage", "pydicom.uid.ProtocolApprovalStorage", "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "pydicom.uid.RE_VALID_UID", "pydicom.uid.RE_VALID_UID_PREFIX", "pydicom.uid.RLELossless", "pydicom.uid.RLETransferSyntaxes", "pydicom.uid.RTBeamsDeliveryInstructionStorage", "pydicom.uid.RTBeamsTreatmentRecordStorage", "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "pydicom.uid.RTBrachyTreatmentRecordStorage", "pydicom.uid.RTDoseStorage", "pydicom.uid.RTImageStorage", "pydicom.uid.RTIonBeamsTreatmentRecordStorage", "pydicom.uid.RTIonPlanStorage", "pydicom.uid.RTPhysicianIntentStorage", "pydicom.uid.RTPlanStorage", "pydicom.uid.RTRadiationRecordSetStorage", "pydicom.uid.RTRadiationSalvageRecordStorage", "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "pydicom.uid.RTRadiationSetStorage", "pydicom.uid.RTSegmentAnnotationStorage", "pydicom.uid.RTStructureSetStorage", "pydicom.uid.RTTreatmentPreparationStorage", "pydicom.uid.RTTreatmentSummaryRecordStorage", "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "pydicom.uid.RawDataStorage", "pydicom.uid.RealWorldValueMappingStorage", "pydicom.uid.RespiratoryWaveformStorage", "pydicom.uid.RoboticArmRadiationStorage", "pydicom.uid.RoboticRadiationRecordStorage", "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "pydicom.uid.SMPTEST211030PCMDigitalAudio", "pydicom.uid.SecondaryCaptureImageStorage", "pydicom.uid.SegmentationStorage", "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.SimplifiedAdultEchoSRStorage", "pydicom.uid.SleepElectroencephalogramWaveformStorage", "pydicom.uid.SpatialFiducialsStorage", "pydicom.uid.SpatialRegistrationStorage", "pydicom.uid.SpectaclePrescriptionReportStorage", "pydicom.uid.StereometricRelationshipStorage", "pydicom.uid.SubjectiveRefractionMeasurementsStorage", "pydicom.uid.SurfaceScanMeshStorage", "pydicom.uid.SurfaceScanPointCloudStorage", "pydicom.uid.SurfaceSegmentationStorage", "pydicom.uid.TomotherapeuticRadiationRecordStorage", "pydicom.uid.TomotherapeuticRadiationStorage", "pydicom.uid.TractographyResultsStorage", "pydicom.uid.TwelveLeadECGWaveformStorage", "pydicom.uid.UID", "pydicom.uid.UltrasoundImageStorage", "pydicom.uid.UltrasoundMultiFrameImageStorage", "pydicom.uid.UncompressedTransferSyntaxes", "pydicom.uid.VLEndoscopicImageStorage", "pydicom.uid.VLMicroscopicImageStorage", "pydicom.uid.VLPhotographicImageStorage", "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "pydicom.uid.VLWholeSlideMicroscopyImageStorage", "pydicom.uid.VideoEndoscopicImageStorage", "pydicom.uid.VideoMicroscopicImageStorage", "pydicom.uid.VideoPhotographicImageStorage", "pydicom.uid.VisualAcuityMeasurementsStorage", "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pydicom.uid.XADefinedProcedureProtocolStorage", "pydicom.uid.XAPerformedProcedureProtocolStorage", "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.XRay3DAngiographicImageStorage", "pydicom.uid.XRay3DCraniofacialImageStorage", "pydicom.uid.XRayAngiographicImageStorage", "pydicom.uid.XRayRadiationDoseSRStorage", "pydicom.uid.XRayRadiofluoroscopicImageStorage", "pydicom.uid.generate_uid", "pydicom.valuerep.DA", "pydicom.valuerep.DS", "pydicom.valuerep.DSdecimal", "pydicom.valuerep.DSfloat", "pydicom.valuerep.DT", "pydicom.valuerep.IS", "pydicom.valuerep.ISfloat", "pydicom.valuerep.MultiString", "pydicom.valuerep.PersonName", "pydicom.valuerep.TM", "pydicom.valuerep.VR", "pydicom.valuerep.format_number_as_ds", "pydicom.valuerep.is_valid_ds", "pydicom.values.convert_AE_string", "pydicom.values.convert_ATvalue", "pydicom.values.convert_DA_string", "pydicom.values.convert_DS_string", "pydicom.values.convert_DT_string", "pydicom.values.convert_IS_string", "pydicom.values.convert_OBvalue", "pydicom.values.convert_OWvalue", "pydicom.values.convert_PN", "pydicom.values.convert_SQ", "pydicom.values.convert_TM_string", "pydicom.values.convert_UI", "pydicom.values.convert_UN", "pydicom.values.convert_UR_string", "pydicom.values.convert_numbers", "pydicom.values.convert_single_string", "pydicom.values.convert_string", "pydicom.values.convert_tag", "pydicom.values.convert_text", "pydicom.values.convert_value", "pydicom.waveforms.numpy_handler", "Bulk Data Handlers", "Overlay Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.overlays</span></code>)", "Pixel Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixel_data_handlers</span></code>)", "Waveform Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.waveforms</span></code>)", "API Reference", "Miscellaneous (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.misc</span></code>)", "UID Definitions and Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.uid</span></code>)", "Release notes", "Version 0.9.2", "Version 0.9.3", "Version 0.9.4", "Version 0.9.5", "Version 0.9.6", "Version 0.9.7", "Version 0.9.8", "Version 0.9.9", "Version 1.0.0", "Version 1.1.0", "Version 1.2.0", "Version 1.3.0", "Version 1.4.0", "Version 1.4.1", "Version 2.0.0", "Version 2.1.0", "Version 2.1.1", "Version 2.2.0", "Version 2.3.0", "Version 2.4.0", "Version 3.0.0", "Contributing to pydicom", "Contributing a source code change", "Contributing a documentation change", "Dataset basics: read, access, modify, write", "Introduction to JSON support", "DICOM File-sets and DICOMDIR", "Tutorials", "How to install pydicom", "Compressing <em>Pixel Data</em>", "Structured Reporting", "Waveforms"], "terms": {"go": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 51, 159, 507, 508, 509, 511, 513], "end": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 138, 157, 172, 174, 199, 214, 484, 490, 497], "download": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 104, 484, 500, 502, 503, 504], "full": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 43, 104, 130, 156, 484, 493, 494, 495, 500, 511, 514], "exampl": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 25, 27, 28, 31, 34, 36, 38, 39, 40, 41, 43, 47, 48, 49, 51, 81, 82, 106, 107, 108, 126, 129, 137, 147, 156, 164, 166, 177, 418, 442, 451, 484, 485, 486, 487, 489, 490, 492, 496, 500, 502, 506, 507, 508, 511, 514, 516], "code": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 29, 38, 40, 44, 46, 51, 74, 75, 93, 129, 154, 156, 159, 484, 485, 487, 491, 492, 493, 495, 497, 500, 502, 506, 508, 512, 513, 515, 516], "graphic": [0, 47, 49], "window": [0, 2, 8, 20, 26, 27, 39, 44, 205, 206, 214, 484, 485, 493, 497, 503, 507, 508, 509, 513], "sudo": 0, "apt": 0, "instal": [0, 37, 39, 42, 47, 94, 95, 212, 484, 485, 492, 502, 508, 509, 512, 514, 516], "tix": [0, 484, 485], "dev": 0, "pip": [0, 26, 27, 507, 508, 514, 516], "u": [0, 2, 20, 26, 28, 29, 108, 175, 176, 476, 484, 486, 510, 511, 513, 514, 516], "pydicom": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 25, 29, 31, 33, 35, 36, 42, 45, 46, 48, 49, 50, 51, 57, 67, 477, 481, 485, 487, 488, 489, 490, 491, 492, 493, 494, 497, 499, 500, 502, 507, 508, 509, 510, 511, 512, 515, 516], "python3": [0, 509, 511], "dicomtre": [0, 21, 484, 485], "py": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 38, 47, 51, 81, 82, 94, 95, 484, 485, 488, 489, 490, 491, 492, 493, 501, 507, 509, 511, 514], "dcm": [0, 2, 3, 8, 9, 10, 11, 12, 17, 20, 24, 26, 27, 28, 33, 36, 38, 40, 41, 43, 47, 48, 49, 50, 129, 156, 164, 166, 484, 500, 508, 509, 510, 511, 514, 515, 516], "Or": [0, 38, 513], "browser": [0, 508], "right": [0, 20], "click": [0, 507, 508], "open": [0, 9, 23, 25, 26, 157, 484, 487, 507, 508, 509], "custom": [0, 8, 26, 28, 31, 164, 166, 484, 485, 486, 493, 496, 500], "command": [0, 25, 27, 35, 40, 51, 129, 484, 492, 502, 504, 507, 508, 513], "import": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 31, 33, 34, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 81, 82, 106, 107, 126, 129, 137, 147, 164, 166, 418, 442, 484, 490, 493, 505, 507, 508, 509, 510, 511, 513, 514, 515, 516], "tkinter": [0, 22, 44, 484, 485, 487], "tkinter_tix": 0, "print": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 38, 48, 107, 109, 129, 484, 486, 497, 508, 509, 511, 516], "__doc__": [0, 2, 8, 11, 14, 16, 17, 20, 22], "usag": [0, 14, 24, 26, 27, 28, 33, 38, 44, 207, 214, 451, 484, 497, 511], "python": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 43, 44, 51, 73, 74, 76, 91, 129, 208, 209, 211, 418, 484, 485, 487, 488, 490, 491, 492, 493, 494, 495, 496, 499, 500, 501, 502, 504, 505, 507, 508, 509, 510, 513, 514, 516], "dicom_filenam": [0, 14], "def": [0, 8, 11, 14, 17, 25, 26, 31, 94, 95, 129, 164, 507, 510], "runtre": 0, "w": [0, 509], "filenam": [0, 2, 8, 11, 12, 17, 20, 24, 26, 27, 28, 38, 40, 47, 49, 102, 103, 104, 105, 129, 130, 158, 159, 166, 168, 177, 484, 499, 507, 509, 510, 511], "top": [0, 16, 20, 26, 27, 28, 36, 48, 129, 157, 166, 484, 505, 508, 509], "frame": [0, 2, 8, 20, 31, 41, 49, 129, 136, 137, 138, 139, 140, 141, 142, 144, 147, 200, 207, 212, 214, 484, 493, 495, 497, 502, 505, 514], "relief": 0, "rais": [0, 39, 53, 73, 74, 76, 78, 79, 81, 82, 94, 95, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 127, 129, 131, 132, 133, 140, 142, 147, 149, 156, 158, 161, 166, 174, 175, 177, 190, 199, 200, 208, 209, 210, 211, 212, 213, 214, 220, 442, 454, 459, 461, 473, 481, 484, 488, 489, 494, 496, 497, 500, 502, 503, 509, 511, 514], "bd": 0, "1": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 38, 40, 41, 42, 43, 45, 48, 49, 50, 59, 74, 76, 77, 81, 82, 84, 93, 94, 95, 103, 104, 106, 107, 108, 109, 126, 128, 129, 132, 133, 136, 137, 138, 139, 142, 143, 144, 146, 147, 148, 152, 156, 168, 177, 190, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 213, 214, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 451, 476, 485, 488, 491, 499, 502, 505, 507, 508, 509, 510, 511, 513, 514, 515, 516], "option": [0, 2, 8, 17, 20, 25, 27, 28, 29, 31, 32, 39, 42, 47, 78, 79, 91, 102, 103, 104, 105, 107, 109, 126, 127, 129, 130, 133, 136, 138, 139, 141, 144, 147, 154, 156, 157, 160, 166, 167, 168, 174, 177, 200, 201, 204, 205, 206, 207, 210, 212, 213, 214, 215, 218, 442, 450, 451, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 469, 471, 472, 473, 474, 475, 476, 481, 484, 486, 487, 493, 497, 500, 502, 511, 516], "hlist": 0, "column": [0, 2, 8, 9, 20, 26, 28, 31, 48, 49, 129, 147, 200, 207, 210, 212, 213, 214, 514], "2": [0, 2, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 38, 39, 41, 42, 43, 44, 49, 50, 53, 74, 76, 77, 79, 81, 82, 83, 86, 93, 94, 95, 97, 98, 100, 101, 104, 106, 107, 108, 109, 126, 128, 129, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 156, 164, 177, 190, 200, 202, 203, 204, 205, 206, 207, 210, 212, 213, 214, 215, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 451, 459, 461, 476, 487, 488, 490, 491, 493, 494, 496, 497, 505, 507, 509, 511, 513, 514, 516], "pack": [0, 22, 34, 48, 214, 484, 494, 495, 500, 503], "expand": [0, 26, 28, 214, 484, 503, 508, 511], "fill": [0, 4, 507, 508], "both": [0, 33, 39, 40, 73, 78, 79, 94, 95, 142, 166, 177, 205, 214, 484, 486, 493, 496, 499, 510], "padx": 0, "10": [0, 11, 20, 23, 26, 28, 48, 50, 142, 168, 177, 190, 342, 375, 381, 403, 484, 491, 495, 509, 511, 516], "padi": 0, "side": [0, 20], "left": [0, 20, 48, 508], "kei": [0, 4, 30, 31, 38, 82, 126, 129, 132, 147, 164, 167, 200, 217, 484, 500, 507], "see": [0, 23, 24, 26, 27, 28, 31, 33, 38, 39, 40, 41, 49, 51, 53, 126, 129, 132, 146, 147, 154, 157, 160, 164, 172, 173, 174, 177, 190, 194, 449, 451, 484, 487, 497, 498, 499, 502, 507, 508, 509, 511, 513, 514, 515], "avail": [0, 1, 6, 10, 15, 24, 26, 27, 28, 30, 31, 38, 43, 47, 49, 50, 51, 104, 129, 130, 136, 137, 147, 152, 166, 177, 208, 209, 211, 214, 451, 459, 461, 484, 486, 487, 491, 493, 494, 495, 497, 500, 511, 513, 514, 515, 516], "configur": [0, 34, 39, 97, 126, 129, 214, 481, 484, 495, 502, 503], "bg": 0, "white": [0, 33, 484, 492], "font": 0, "courier": 0, "indent": [0, 8, 129, 167, 509], "30": [0, 24, 26, 27, 28, 50, 51, 361, 508], "selectbackground": 0, "light": 0, "yellow": 0, "gap": 0, "150": [0, 20, 50], "box": [0, 23, 36], "buttonbox": 0, "orient": [0, 2, 8, 20], "horizont": [0, 214], "add": [0, 2, 6, 10, 12, 15, 18, 19, 20, 25, 26, 27, 31, 36, 38, 39, 41, 48, 106, 108, 109, 126, 129, 132, 136, 137, 147, 164, 166, 167, 214, 484, 493, 496, 502, 504, 507, 508, 509, 511, 514, 516], "ok": [0, 81, 82, 166, 507], "text": [0, 20, 22, 29, 38, 43, 126, 156, 193, 194, 196, 465, 471, 472, 474, 475, 484, 486, 495, 507, 508, 509], "underlin": 0, "0": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 31, 33, 34, 38, 39, 40, 41, 45, 47, 48, 49, 50, 78, 79, 80, 98, 100, 101, 126, 128, 129, 131, 132, 137, 147, 152, 162, 163, 164, 168, 169, 200, 204, 205, 206, 210, 212, 213, 214, 359, 360, 369, 370, 442, 459, 461, 465, 473, 476, 481, 501, 508, 509, 511, 513, 514, 516], "destroi": 0, "width": [0, 2, 8, 20, 126, 205, 206, 214, 509], "6": [0, 2, 8, 10, 20, 23, 26, 28, 29, 34, 42, 43, 45, 49, 53, 75, 126, 128, 129, 138, 207, 210, 214, 256, 281, 291, 348, 376, 394, 408, 416, 419, 426, 432, 451, 485, 490, 491, 493, 500, 501, 504, 508, 509, 511, 516], "exit": [0, 14, 24, 26, 27, 28], "bottom": [0, 20, 36, 507, 508], "x": [0, 2, 3, 8, 9, 20, 26, 27, 28, 36, 45, 484, 496, 507, 509, 514, 516], "http": [0, 23, 36, 47, 94, 507, 508, 510, 513], "stackoverflow": [0, 506], "com": [0, 2, 8, 9, 11, 12, 16, 17, 20, 22, 23, 94, 507, 508, 513], "question": [0, 40, 506], "17355902": 0, "bind": 0, "mousewheel": 0, "scrollbar": 0, "bind_al": 0, "lambda": [0, 4], "event": 0, "yview_scrol": 0, "wheel": [0, 513], "int": [0, 29, 31, 38, 53, 74, 82, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 132, 136, 138, 139, 141, 142, 144, 147, 152, 153, 154, 155, 156, 157, 160, 162, 163, 166, 167, 168, 171, 172, 173, 174, 189, 198, 199, 200, 204, 205, 206, 214, 215, 217, 218, 219, 418, 444, 445, 446, 448, 449, 450, 451, 465, 470, 473, 476, 509], "delta": [0, 20], "120": [0, 20, 50], "unit": [0, 49, 129, 156, 200, 214, 476, 507, 516], "button": [0, 20], "4": [0, 2, 8, 9, 10, 12, 16, 20, 23, 24, 26, 28, 33, 34, 36, 38, 42, 43, 45, 49, 94, 103, 104, 126, 128, 129, 136, 138, 139, 140, 142, 143, 144, 172, 173, 177, 190, 200, 201, 202, 203, 204, 205, 206, 207, 210, 214, 215, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 473, 490, 495, 496, 499, 500, 502, 505, 507, 509, 511, 515, 516], "up": [0, 41, 48, 49, 129, 166, 167, 174, 177, 212, 442, 450, 451, 484, 487, 491, 493, 507, 508, 509, 512, 513, 514], "linux": [0, 39, 484, 493, 508, 513], "5": [0, 8, 9, 10, 12, 16, 20, 22, 23, 24, 26, 29, 33, 34, 38, 41, 42, 45, 49, 50, 53, 126, 128, 129, 132, 136, 138, 139, 140, 141, 142, 144, 146, 148, 177, 194, 200, 204, 205, 206, 207, 213, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 301, 302, 303, 317, 318, 319, 320, 321, 322, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 451, 499, 500, 507, 508, 509, 511, 514, 516], "down": [0, 197, 507, 511], "show_fil": 0, "root": [0, 9, 10, 22, 26, 27, 94, 95, 166, 167, 169, 360, 442, 509, 511], "d": [0, 2, 3, 8, 9, 10, 12, 16, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 38, 40, 41, 42, 43, 47, 48, 49, 50, 51, 53, 57, 62, 78, 79, 81, 82, 94, 95, 99, 100, 106, 107, 108, 126, 129, 136, 137, 147, 156, 164, 166, 175, 176, 191, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 445, 446, 451, 454, 459, 476, 484, 490, 491, 499, 502, 504, 507, 508, 509, 510, 511, 514, 516], "dcmread": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 20, 38, 40, 41, 42, 43, 46, 47, 48, 49, 50, 67, 88, 104, 130, 149, 154, 157, 160, 166, 174, 177, 198, 484, 493, 499, 500, 502, 505, 508, 509, 510, 511, 514, 516], "decod": [0, 1, 5, 6, 34, 37, 57, 74, 75, 126, 129, 142, 147, 156, 208, 209, 211, 212, 213, 451, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 481, 484, 488, 495, 496, 497, 500, 502, 503, 511, 513], "chang": [0, 10, 12, 25, 26, 27, 33, 36, 39, 40, 41, 42, 48, 49, 53, 79, 93, 104, 129, 133, 142, 166, 168, 205, 207, 208, 209, 210, 211, 212, 213, 214, 218, 442, 459, 461, 499, 506, 509, 510, 512, 513, 514, 515], "string": [0, 17, 20, 25, 26, 29, 38, 53, 74, 75, 76, 107, 126, 129, 132, 147, 156, 167, 178, 187, 191, 195, 196, 199, 217, 444, 445, 446, 448, 449, 450, 451, 454, 455, 459, 461, 470, 471, 472, 484, 487, 489, 490, 494, 495, 500, 502, 510], "unicod": [0, 6, 21, 29, 74, 76, 451, 484, 485, 487, 488, 504], "recurse_tre": 0, "fals": [0, 3, 4, 10, 12, 14, 29, 31, 36, 39, 41, 43, 53, 77, 78, 79, 82, 85, 87, 90, 91, 92, 93, 94, 95, 99, 100, 101, 104, 113, 114, 123, 124, 126, 129, 130, 133, 136, 137, 147, 153, 154, 156, 160, 161, 166, 168, 169, 172, 173, 174, 177, 190, 197, 207, 210, 212, 214, 418, 444, 445, 446, 455, 456, 457, 458, 459, 460, 461, 465, 466, 467, 469, 470, 472, 473, 476, 484, 490, 494, 499, 502, 504, 509, 511, 516], "autosetmod": 0, "dataset": [0, 2, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 33, 34, 36, 39, 40, 42, 43, 44, 46, 47, 51, 70, 77, 81, 82, 88, 94, 95, 98, 104, 105, 106, 107, 126, 127, 134, 136, 137, 139, 141, 147, 156, 157, 160, 162, 163, 164, 165, 166, 167, 175, 176, 177, 189, 190, 194, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 476, 481, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 508, 511, 512, 513, 514, 516], "parent": [0, 26, 27, 129, 132, 166, 167, 215, 484, 494, 511], "hide": 0, "order": [0, 4, 30, 31, 34, 49, 94, 95, 129, 130, 132, 139, 147, 153, 167, 171, 175, 176, 213, 214, 215, 484, 485, 492, 495, 497, 507, 516], "tag": [0, 16, 17, 26, 28, 29, 40, 43, 44, 48, 49, 53, 57, 82, 94, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 140, 142, 143, 144, 153, 154, 156, 158, 166, 174, 175, 179, 194, 200, 210, 212, 213, 214, 473, 476, 481, 484, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 499, 500, 502, 503, 505, 509, 510], "data_el": [0, 8, 17, 129, 179, 182, 183, 186, 188, 193, 194, 208, 509, 510], "node_id": 0, "hex": [0, 36, 48, 126, 129, 132, 484, 487], "id": [0, 2, 8, 9, 10, 12, 17, 20, 43, 132, 165, 166, 167, 168, 169, 214, 484, 486, 503, 509, 511], "isinst": 0, "valu": [0, 2, 8, 9, 10, 12, 17, 20, 26, 28, 29, 30, 31, 33, 34, 36, 38, 39, 41, 43, 48, 49, 51, 53, 57, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 90, 93, 101, 107, 109, 110, 111, 120, 121, 126, 128, 129, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 147, 155, 156, 158, 164, 166, 174, 175, 176, 177, 178, 187, 192, 193, 194, 199, 200, 201, 202, 203, 204, 205, 207, 210, 212, 213, 214, 215, 217, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 476, 481, 484, 485, 486, 489, 490, 491, 493, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511, 513, 514, 515, 516], "str": [0, 20, 29, 31, 38, 73, 74, 75, 76, 85, 89, 94, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 177, 178, 184, 188, 189, 192, 193, 194, 195, 196, 197, 198, 200, 201, 207, 213, 214, 217, 218, 418, 442, 444, 445, 446, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 484, 494, 499, 502, 509], "els": [0, 3, 4, 8, 33, 129, 153, 157, 171, 174, 444, 509], "hide_entri": 0, "vr": [0, 2, 8, 12, 16, 17, 20, 26, 27, 28, 35, 37, 38, 41, 42, 43, 53, 57, 62, 79, 86, 87, 90, 99, 100, 106, 107, 108, 109, 111, 116, 117, 121, 126, 127, 128, 129, 130, 132, 138, 154, 155, 157, 158, 166, 175, 176, 177, 182, 183, 186, 190, 191, 210, 223, 418, 443, 445, 446, 447, 448, 449, 451, 452, 456, 465, 467, 469, 470, 471, 472, 474, 475, 484, 485, 486, 487, 488, 490, 491, 493, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 509, 510, 514], "sq": [0, 8, 29, 53, 126, 129, 154, 465, 484, 490, 500, 503, 509], "sequenc": [0, 2, 3, 6, 8, 15, 19, 20, 24, 26, 27, 28, 29, 36, 44, 50, 51, 57, 74, 76, 86, 129, 138, 139, 140, 141, 157, 162, 163, 167, 170, 171, 177, 193, 194, 199, 202, 203, 204, 205, 214, 451, 465, 476, 481, 484, 485, 486, 490, 491, 494, 496, 497, 498, 500, 501, 502, 503, 504, 511, 516], "i": [0, 2, 3, 4, 10, 16, 17, 20, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 53, 57, 62, 68, 70, 73, 74, 76, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 93, 94, 95, 101, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 147, 149, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 190, 191, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 418, 442, 443, 447, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 465, 466, 467, 469, 470, 472, 473, 484, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516], "enumer": [0, 4, 516], "item_id": 0, "sq_item_descript": 0, "name": [0, 2, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 31, 33, 36, 38, 39, 40, 41, 42, 43, 51, 94, 104, 107, 109, 116, 117, 120, 121, 122, 126, 129, 133, 147, 148, 156, 177, 190, 201, 214, 418, 451, 484, 485, 486, 487, 490, 493, 494, 495, 500, 502, 503, 504, 505, 507, 508, 509, 511, 514, 515, 516], "replac": [0, 17, 73, 74, 76, 107, 484, 496, 503], "xxx": [0, 12, 51], "i18n": 0, "item_text": 0, "f": [0, 2, 3, 4, 8, 9, 10, 11, 12, 18, 20, 126, 129, 164, 166, 507, 511, 514, 516], "": [0, 2, 3, 4, 8, 9, 10, 12, 16, 17, 20, 24, 25, 26, 27, 28, 31, 34, 36, 37, 38, 41, 43, 46, 47, 48, 49, 51, 81, 90, 91, 94, 95, 108, 114, 118, 125, 126, 129, 130, 136, 139, 142, 145, 147, 156, 166, 167, 175, 176, 177, 199, 207, 214, 217, 218, 359, 360, 453, 454, 455, 457, 464, 465, 472, 474, 475, 484, 486, 487, 489, 494, 495, 497, 500, 502, 506, 507, 508, 509, 511, 513, 514, 516], "true": [0, 10, 12, 20, 29, 31, 33, 36, 38, 39, 41, 43, 50, 53, 77, 78, 79, 85, 86, 90, 91, 93, 94, 95, 98, 104, 113, 114, 123, 124, 126, 128, 129, 130, 133, 136, 140, 142, 147, 149, 154, 156, 157, 161, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 190, 197, 200, 205, 207, 208, 209, 210, 211, 212, 213, 214, 217, 418, 445, 446, 455, 456, 457, 458, 459, 460, 461, 465, 466, 467, 469, 470, 472, 473, 476, 484, 488, 490, 500, 502, 504, 505, 509, 511, 514, 516], "__name__": [0, 14, 25, 26], "__main__": [0, 14, 25, 26], "sy": [0, 4, 14, 516], "len": [0, 3, 4, 8, 10, 14, 33, 509, 511, 516], "argv": [0, 4, 14], "pleas": [0, 14, 25, 26, 28, 38, 40, 484, 491, 502, 507, 508], "suppli": [0, 12, 14, 47, 51, 76, 156, 166, 201, 214, 442, 451, 509, 511], "n": [0, 2, 8, 11, 14, 20, 26, 28, 190, 200, 202, 203, 204, 205, 206, 210, 212, 213, 214, 476, 511], "tk": [0, 22], "geometri": 0, "1200x900": 0, "titl": [0, 2, 20, 26, 28, 36, 43, 190, 451, 507, 508, 509], "viewer": [0, 47], "mainloop": [0, 22], "total": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 136, 137, 189, 200, 214, 514], "run": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 38, 39, 40, 51, 107, 129, 451, 484, 487, 490, 500, 508, 509, 512, 513], "time": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 26, 27, 28, 29, 38, 39, 51, 88, 90, 107, 130, 158, 171, 174, 214, 444, 452, 484, 487, 493, 502, 506, 507, 508, 509, 511, 516], "script": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 51, 484, 494, 506], "minut": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "000": [0, 4, 5, 14, 21, 22, 516], "second": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 34, 39, 46, 451, 516], "sourc": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 23, 26, 28, 31, 43, 51, 53, 73, 74, 75, 76, 78, 79, 91, 93, 96, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 484, 492, 500, 502, 505, 506, 509, 512, 513, 516], "jupyt": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "notebook": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "ipynb": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "galleri": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "gener": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 25, 26, 27, 31, 33, 38, 39, 42, 45, 51, 138, 139, 140, 141, 144, 154, 160, 168, 215, 218, 442, 449, 476, 484, 486, 487, 491, 493, 508, 514], "sphinx": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 36, 484, 488, 508], "These": [1, 6, 7, 15, 35, 38, 39, 484, 500, 509], "illustr": [1, 3, 4, 6, 7, 8, 9, 15, 16, 18, 20, 37, 38], "which": [1, 6, 20, 23, 24, 25, 26, 31, 34, 36, 38, 41, 43, 47, 49, 50, 51, 74, 75, 81, 107, 126, 129, 153, 154, 157, 159, 164, 166, 177, 190, 213, 214, 442, 444, 484, 485, 488, 490, 492, 500, 507, 508, 509, 510, 511, 513, 514, 516], "can": [1, 6, 10, 14, 17, 24, 25, 26, 27, 28, 29, 31, 36, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 53, 93, 129, 136, 137, 147, 156, 157, 164, 166, 192, 199, 444, 449, 450, 484, 485, 486, 487, 490, 499, 500, 503, 507, 508, 509, 510, 511, 513, 514, 515, 516], "appli": [1, 6, 10, 34, 49, 50, 64, 75, 77, 129, 166, 201, 202, 203, 204, 205, 206, 214, 484, 497, 500, 508, 513, 516], "dicom": [1, 2, 4, 6, 7, 9, 13, 14, 15, 19, 21, 22, 23, 27, 28, 29, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 50, 53, 56, 58, 67, 69, 71, 73, 74, 75, 81, 86, 91, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 129, 130, 131, 132, 136, 138, 139, 140, 141, 142, 143, 144, 147, 149, 153, 154, 156, 157, 159, 160, 161, 166, 177, 188, 190, 192, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 214, 217, 218, 418, 442, 445, 446, 449, 451, 453, 454, 470, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 502, 503, 504, 505, 508, 509, 510, 512, 514, 515], "downsiz": [1, 5, 6, 49], "mri": [1, 5, 6, 49], "us": [1, 3, 5, 6, 7, 9, 10, 12, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 46, 48, 49, 50, 65, 74, 75, 76, 77, 81, 82, 85, 91, 92, 93, 94, 95, 99, 100, 104, 107, 109, 126, 127, 129, 130, 136, 137, 139, 147, 149, 152, 154, 156, 157, 159, 160, 164, 166, 167, 168, 174, 175, 176, 177, 192, 193, 194, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 442, 445, 449, 451, 454, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 515, 516], "plot": [1, 5, 6, 7, 13, 484, 496, 516], "waveform": [1, 5, 6, 37, 44, 129, 164, 477, 481, 484, 500, 504, 512], "data": [1, 2, 5, 6, 7, 10, 11, 13, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 44, 47, 51, 53, 59, 60, 61, 62, 74, 75, 76, 77, 79, 81, 94, 95, 98, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 154, 155, 156, 158, 160, 164, 166, 173, 177, 192, 193, 194, 200, 201, 208, 209, 210, 211, 212, 213, 214, 442, 453, 470, 476, 481, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 511, 512, 513], "load": [1, 5, 6, 10, 12, 14, 157, 165, 166, 174, 484, 496, 500, 501, 502], "ct": [1, 5, 6, 9, 10, 12, 20, 26, 28, 43, 49, 484, 496, 509, 511, 514], "slice": [1, 2, 5, 6, 8, 9, 20, 26, 28, 129, 484, 493, 494, 496], "axial": [1, 5, 6, 20, 26, 28, 484, 496, 509], "sagitt": [1, 5, 6, 484, 496], "coron": [1, 5, 6, 484, 496], "thi": [2, 3, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 31, 34, 36, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 51, 53, 73, 78, 79, 80, 83, 84, 86, 93, 94, 95, 107, 126, 129, 131, 136, 139, 140, 141, 147, 154, 156, 159, 165, 166, 183, 194, 197, 199, 201, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 444, 445, 446, 449, 451, 454, 455, 481, 491, 493, 496, 497, 502, 507, 508, 509, 510, 511, 513, 514, 515, 516], "show": [2, 3, 4, 6, 9, 10, 12, 17, 21, 24, 25, 27, 36, 43, 47, 51, 107, 126, 484, 485, 489, 491, 502, 504, 508, 509, 516], "how": [2, 3, 8, 9, 10, 12, 14, 16, 17, 18, 20, 24, 26, 31, 36, 37, 40, 41, 42, 47, 48, 49, 50, 51, 107, 126, 166, 450, 484, 485, 489, 507, 508, 509, 510, 511, 512, 516], "an": [2, 10, 11, 23, 24, 26, 27, 28, 29, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 53, 73, 74, 75, 81, 82, 83, 86, 94, 95, 104, 107, 113, 116, 117, 123, 126, 127, 129, 130, 132, 138, 139, 140, 141, 142, 143, 144, 147, 153, 156, 157, 166, 167, 176, 177, 187, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 217, 218, 220, 418, 443, 445, 446, 447, 448, 449, 451, 452, 454, 470, 476, 484, 487, 488, 494, 496, 497, 499, 500, 502, 503, 505, 507, 508, 509, 511, 513, 514, 515, 516], "mr": [2, 8, 10, 20, 48, 49, 451, 511], "from": [2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 28, 29, 31, 33, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 69, 73, 74, 76, 78, 81, 82, 88, 94, 95, 106, 107, 116, 117, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138, 139, 141, 142, 144, 145, 147, 153, 154, 155, 158, 161, 164, 165, 166, 167, 168, 177, 190, 192, 199, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 418, 442, 445, 446, 451, 455, 473, 484, 487, 488, 489, 490, 491, 492, 495, 496, 499, 500, 501, 502, 505, 507, 508, 509, 511, 513, 514, 515, 516], "512": [2, 20, 156, 200, 484, 494], "im": 2, "64": [2, 8, 20, 29, 34, 49, 210, 214, 442, 476, 484, 487, 516], "The": [2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 53, 73, 74, 75, 76, 94, 95, 97, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 154, 156, 158, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 190, 192, 193, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 442, 450, 451, 454, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 484, 487, 494, 495, 500, 505, 507, 508, 509, 510, 513, 514, 515, 516], "perform": [2, 31, 34, 39, 41, 80, 110, 111, 112, 114, 115, 125, 129, 133, 166, 212, 463, 484, 491, 494, 495, 513, 516], "take": [2, 24, 25, 26, 31, 34, 36, 41, 47, 51, 129, 154, 164, 199, 484, 491, 507, 508, 509, 511], "central": 2, "section": [2, 24, 25, 26, 27, 33, 36, 38, 41, 43, 49, 51, 53, 98, 126, 129, 132, 136, 138, 144, 177, 190, 194, 200, 207, 214, 451, 507, 508], "instead": [2, 31, 38, 40, 49, 50, 51, 92, 129, 154, 164, 166, 177, 442, 449, 451, 484, 487, 490, 494, 495, 496, 499, 500, 502, 503, 505, 507, 508, 509, 510, 511, 513, 514, 516], "averagin": 2, "pixel": [2, 4, 6, 7, 8, 13, 20, 23, 24, 26, 28, 35, 36, 37, 38, 40, 44, 47, 48, 51, 64, 77, 95, 129, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 156, 160, 177, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 481, 484, 485, 487, 488, 493, 494, 495, 496, 497, 499, 500, 502, 503, 505, 507, 509, 512, 513], "final": [2, 17, 104, 136, 509, 516], "store": [2, 8, 10, 17, 20, 29, 33, 34, 38, 43, 49, 104, 126, 129, 156, 177, 191, 202, 203, 214, 443, 445, 446, 447, 448, 449, 452, 484, 487, 502, 509, 510, 511, 516], "requir": [2, 10, 12, 20, 26, 27, 33, 34, 38, 39, 41, 43, 48, 49, 50, 51, 94, 126, 129, 136, 138, 139, 140, 141, 147, 153, 156, 166, 175, 177, 190, 199, 200, 201, 205, 206, 208, 209, 210, 212, 213, 214, 218, 454, 484, 487, 491, 495, 499, 500, 505, 508, 509, 511, 513, 514, 516], "numpi": [2, 3, 4, 23, 31, 33, 36, 38, 41, 42, 48, 49, 50, 79, 94, 95, 100, 101, 129, 147, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 459, 461, 476, 484, 485, 493, 495, 496, 497, 499, 503, 507, 513, 514, 516], "librari": [2, 23, 25, 26, 38, 39, 44, 49, 214, 484, 487, 490, 508, 514], "manipul": [2, 23, 40, 126, 477, 513], "ha": [2, 10, 14, 20, 24, 25, 26, 27, 31, 33, 34, 36, 39, 40, 41, 43, 49, 51, 79, 86, 88, 126, 129, 138, 140, 142, 147, 157, 158, 165, 166, 167, 177, 178, 199, 200, 208, 209, 210, 211, 212, 213, 214, 217, 442, 444, 476, 484, 486, 487, 489, 494, 495, 497, 498, 499, 504, 505, 507, 508, 509, 510, 511, 514, 516], "voxel": 2, "downsampl": [2, 33], "8": [2, 8, 11, 20, 22, 23, 26, 27, 31, 33, 34, 38, 42, 49, 78, 132, 147, 168, 169, 200, 204, 205, 206, 210, 212, 213, 214, 222, 231, 301, 352, 359, 360, 380, 435, 442, 476, 486, 489, 493, 495, 497, 500, 503, 504, 516], "inform": [2, 6, 7, 8, 9, 12, 13, 20, 24, 26, 27, 28, 32, 34, 35, 36, 38, 41, 43, 47, 49, 51, 77, 98, 126, 129, 130, 131, 133, 147, 156, 159, 161, 177, 190, 451, 484, 485, 487, 490, 493, 497, 499, 500, 505, 507, 508, 509, 514, 516], "set": [2, 6, 7, 12, 13, 18, 20, 25, 26, 27, 28, 29, 34, 37, 38, 39, 41, 42, 44, 45, 48, 49, 51, 53, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 92, 93, 99, 100, 101, 107, 126, 127, 129, 140, 142, 156, 157, 158, 164, 165, 166, 168, 169, 174, 177, 445, 449, 451, 454, 455, 481, 484, 485, 490, 493, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 509, 510, 512, 513, 514, 516], "after": [2, 8, 20, 26, 27, 28, 36, 47, 138, 140, 161, 167, 172, 173, 174, 177, 190, 484, 499, 502, 507, 508, 509, 511, 513, 514], "file_meta": [2, 12, 20, 26, 27, 28, 38, 41, 42, 43, 129, 130, 131, 133, 177, 190, 484, 487, 499, 511, 514], "0002": [2, 12, 20, 26, 27, 28, 34, 38, 43, 49, 129, 133, 177, 190, 210, 212, 213, 214, 359, 509, 513], "0000": [2, 8, 20, 26, 27, 28, 38, 43, 177, 190, 509], "file": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 18, 19, 21, 25, 27, 28, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 69, 71, 82, 86, 91, 98, 102, 103, 104, 105, 107, 129, 130, 131, 133, 145, 149, 152, 153, 154, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 179, 188, 189, 190, 192, 193, 194, 197, 481, 485, 486, 487, 489, 490, 493, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 512, 514], "meta": [2, 8, 12, 20, 26, 27, 28, 38, 43, 51, 98, 129, 130, 131, 133, 156, 159, 177, 190, 484, 487, 490, 493, 499, 509], "group": [2, 17, 20, 26, 27, 28, 38, 40, 43, 48, 50, 94, 116, 118, 126, 129, 130, 131, 132, 133, 156, 164, 166, 177, 190, 200, 217, 218, 219, 451, 476, 484, 487, 490, 494, 499, 500, 506, 507, 509, 516], "length": [2, 8, 20, 26, 27, 28, 38, 39, 43, 50, 53, 87, 118, 126, 128, 129, 136, 137, 138, 140, 142, 143, 144, 153, 154, 170, 173, 177, 189, 190, 200, 210, 213, 214, 484, 489, 490, 494, 496, 500, 502, 503, 504, 505, 509], "ul": [2, 16, 20, 26, 27, 28, 29, 38, 43, 106, 107, 108, 190, 476, 509, 511], "190": [2, 20, 38], "0001": [2, 20, 26, 27, 28, 38, 43, 129, 133, 190, 509], "version": [2, 8, 20, 24, 26, 27, 28, 34, 36, 38, 40, 43, 44, 45, 53, 74, 76, 77, 79, 81, 82, 86, 93, 94, 95, 97, 98, 100, 101, 103, 104, 108, 109, 126, 129, 131, 132, 133, 136, 138, 142, 143, 144, 146, 147, 148, 168, 190, 197, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 214, 215, 217, 218, 442, 451, 459, 461, 476, 507, 508, 509, 510, 515], "ob": [2, 16, 20, 26, 27, 28, 29, 38, 43, 138, 182, 190, 462, 484, 488, 503, 509, 510], "b": [2, 8, 12, 20, 22, 26, 27, 28, 34, 38, 43, 48, 49, 126, 129, 177, 451, 507, 508, 509], "x00": [2, 8, 20, 26, 27, 28, 38, 43, 48, 509], "x01": [2, 8, 20, 26, 27, 28, 38, 43, 49, 509], "media": [2, 12, 20, 26, 27, 28, 38, 43, 129, 133, 188, 190, 509, 511], "storag": [2, 9, 12, 14, 20, 26, 27, 28, 38, 43, 49, 129, 133, 188, 190, 481, 484, 487, 488, 493, 503, 509, 511, 516], "sop": [2, 8, 9, 10, 12, 20, 26, 27, 28, 33, 38, 43, 49, 50, 133, 159, 164, 165, 166, 167, 177, 190, 201, 214, 481, 484, 493, 494, 500, 503, 504, 509, 514], "class": [2, 8, 9, 12, 14, 20, 26, 27, 28, 36, 37, 38, 43, 49, 50, 53, 65, 67, 78, 126, 128, 129, 130, 131, 132, 133, 147, 150, 152, 153, 156, 165, 166, 167, 177, 190, 199, 215, 217, 359, 418, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 481, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 497, 499, 500, 503, 504, 505, 508, 509, 511, 514, 515], "uid": [2, 8, 10, 12, 20, 26, 27, 28, 29, 31, 32, 33, 34, 38, 41, 42, 43, 49, 51, 95, 129, 133, 136, 137, 147, 148, 165, 166, 177, 190, 201, 208, 209, 210, 211, 212, 213, 214, 450, 467, 481, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 509, 511, 513, 514], "ui": [2, 12, 16, 20, 26, 27, 28, 29, 38, 43, 186, 190, 467, 484, 487, 497, 509], "0003": [2, 12, 20, 26, 27, 28, 38, 43, 133, 190, 509], "instanc": [2, 8, 10, 12, 20, 26, 27, 28, 29, 31, 33, 38, 43, 46, 47, 49, 65, 75, 85, 129, 133, 146, 147, 156, 157, 164, 165, 166, 167, 177, 190, 199, 201, 214, 215, 216, 444, 445, 446, 484, 496, 502, 505, 509, 514, 515], "3": [2, 4, 8, 10, 12, 16, 17, 20, 22, 23, 26, 28, 29, 31, 33, 34, 38, 39, 42, 43, 45, 49, 50, 53, 97, 104, 106, 107, 108, 109, 126, 128, 129, 132, 147, 164, 168, 177, 190, 200, 202, 203, 204, 205, 206, 207, 210, 212, 214, 218, 223, 224, 234, 240, 257, 259, 261, 262, 270, 275, 277, 317, 342, 345, 367, 368, 388, 400, 409, 420, 425, 442, 481, 487, 488, 490, 491, 492, 493, 494, 495, 499, 500, 501, 504, 507, 508, 509, 510, 511, 514, 516], "5962": [2, 8, 10, 20, 26, 28, 43, 509, 511], "20040826185059": [2, 8, 20], "5457": [2, 8, 20], "0010": [2, 12, 17, 20, 26, 27, 28, 36, 38, 43, 48, 49, 64, 65, 95, 129, 133, 139, 140, 141, 156, 177, 190, 200, 210, 211, 212, 213, 214, 476, 477, 484, 493, 505, 508, 509, 511, 513], "transfer": [2, 12, 20, 26, 27, 28, 31, 32, 34, 38, 43, 44, 94, 95, 129, 130, 133, 136, 137, 139, 140, 147, 148, 153, 157, 165, 166, 174, 177, 190, 208, 209, 210, 211, 212, 213, 214, 223, 308, 313, 316, 337, 372, 418, 421, 481, 484, 488, 493, 495, 496, 497, 499, 500, 504, 509, 513, 514, 516], "syntax": [2, 12, 20, 24, 26, 27, 28, 31, 32, 34, 38, 43, 44, 51, 94, 95, 129, 130, 133, 136, 137, 139, 140, 147, 148, 153, 157, 165, 166, 174, 177, 190, 208, 209, 210, 211, 212, 213, 214, 223, 308, 313, 316, 337, 372, 418, 421, 481, 484, 487, 488, 493, 495, 496, 497, 499, 500, 504, 509, 513, 514, 516], "explicit": [2, 12, 20, 26, 28, 41, 42, 43, 53, 86, 129, 130, 140, 157, 177, 190, 210, 223, 451, 484, 487, 488, 496, 497, 499, 502, 509], "littl": [2, 20, 26, 27, 28, 30, 31, 38, 41, 42, 43, 129, 130, 140, 143, 144, 147, 153, 154, 157, 166, 172, 173, 174, 177, 190, 210, 213, 418, 456, 457, 458, 459, 460, 461, 465, 466, 467, 469, 470, 472, 473, 484, 487, 499, 509, 514, 516], "endian": [2, 12, 20, 26, 27, 28, 30, 31, 38, 41, 42, 43, 129, 130, 140, 143, 144, 147, 153, 154, 157, 166, 171, 172, 173, 174, 177, 183, 190, 210, 213, 214, 223, 418, 456, 457, 458, 459, 460, 461, 465, 466, 467, 469, 470, 472, 473, 484, 487, 495, 499, 504, 509, 514, 516], "0012": [2, 12, 20, 26, 27, 28, 38, 43, 133, 190, 359, 509], "implement": [2, 12, 20, 26, 27, 28, 31, 38, 43, 51, 133, 177, 190, 359, 484, 500, 509], "0013": [2, 20, 26, 27, 28, 38, 43, 133, 190, 509, 511], "sh": [2, 20, 26, 28, 29, 38, 43, 190, 474, 509], "dctool100": [2, 20, 26, 28, 43, 509], "0016": [2, 20, 26, 27, 28, 38, 43, 190, 509], "applic": [2, 20, 26, 27, 28, 29, 39, 43, 177, 190, 509, 514], "entiti": [2, 20, 26, 28, 29, 43, 166, 190, 509], "ae": [2, 20, 26, 28, 29, 43, 190, 456, 472, 484, 493, 505, 509], "clunie1": [2, 20, 26, 28, 43, 509], "0008": [2, 12, 20, 26, 27, 28, 38, 43, 49, 73, 74, 75, 76, 129, 139, 141, 156, 157, 201, 210, 212, 213, 214, 484, 485, 497, 509, 510, 511], "type": [2, 3, 8, 17, 18, 20, 25, 26, 27, 28, 31, 34, 35, 37, 38, 41, 43, 49, 73, 74, 76, 79, 97, 102, 103, 104, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 142, 143, 145, 147, 156, 157, 158, 160, 161, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 190, 192, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 418, 442, 450, 451, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 469, 471, 472, 473, 474, 475, 476, 484, 487, 488, 490, 501, 502, 504, 508, 509, 511, 514, 516], "c": [2, 10, 18, 20, 22, 24, 26, 27, 28, 29, 34, 38, 40, 43, 49, 50, 90, 129, 200, 202, 203, 204, 205, 206, 207, 210, 214, 472, 484, 491, 509, 510, 511, 513, 514, 516], "deriv": [2, 8, 20, 38, 46, 78, 94, 95, 126, 131, 215, 484, 490, 509], "secondari": [2, 8, 20], "other": [2, 8, 17, 20, 24, 29, 34, 39, 41, 42, 43, 47, 48, 49, 51, 160, 177, 182, 183, 190, 214, 451, 507, 509, 511, 514], "creation": [2, 8, 12, 20, 26, 27, 28, 38, 164, 484, 496, 509, 511], "date": [2, 8, 9, 12, 17, 20, 23, 26, 27, 28, 29, 38, 39, 45, 90, 166, 443, 481, 484, 493, 494, 496, 502, 509, 513], "da": [2, 12, 17, 20, 26, 27, 28, 29, 38, 57, 62, 90, 129, 458, 472, 484, 493, 502, 509], "20040826": [2, 8, 20], "tm": [2, 12, 20, 26, 27, 28, 29, 38, 57, 62, 90, 466, 472, 484, 493, 502, 509], "185434": [2, 8, 20], "0014": [2, 20, 26, 27, 28, 509], "creator": [2, 8, 20, 26, 28, 43, 108, 109, 117, 120, 121, 122, 129, 132, 190, 217, 484, 494, 499, 504, 509, 511], "0018": [2, 20, 26, 27, 28, 38, 40, 190, 201, 214], "0020": [2, 12, 17, 20, 26, 27, 28, 38, 509, 511], "studi": [2, 8, 9, 10, 20, 26, 27, 28, 38, 164, 166, 511], "0021": [2, 20], "seri": [2, 8, 10, 20, 36, 159, 164, 166, 484, 488, 508, 511, 514], "0022": [2, 20, 509], "acquisit": [2, 8, 20], "0030": [2, 17, 20, 38], "185059": [2, 8, 20], "0031": [2, 20], "0032": [2, 20], "0050": [2, 20, 26, 27, 38, 48], "access": [2, 8, 20, 23, 26, 27, 37, 38, 43, 48, 53, 79, 97, 129, 156, 484, 486, 493, 499, 500, 504, 508, 510, 511, 512, 515], "number": [2, 8, 11, 18, 20, 24, 26, 27, 28, 31, 34, 36, 38, 40, 43, 48, 107, 109, 126, 128, 129, 132, 136, 138, 139, 140, 141, 144, 147, 155, 156, 157, 166, 167, 168, 171, 174, 191, 192, 198, 200, 214, 217, 218, 445, 446, 454, 484, 485, 489, 492, 496, 502, 503, 505, 508, 509, 511, 513, 515, 516], "0060": [2, 20, 26, 27, 38], "modal": [2, 8, 9, 10, 20, 26, 28, 38, 44, 202, 203, 205, 206, 214, 484, 497, 511, 515], "0070": [2, 20, 26, 27], "manufactur": [2, 8, 20, 129], "lo": [2, 12, 17, 18, 20, 26, 27, 29, 43, 129, 474, 509, 511], "toshiba_mec": [2, 8, 20], "0080": [2, 20, 26, 27, 28], "institut": [2, 8, 20], "toshiba": [2, 8, 20], "0090": [2, 20], "refer": [2, 8, 20, 26, 27, 34, 36, 38, 49, 90, 129, 136, 138, 139, 140, 141, 142, 144, 146, 165, 200, 201, 202, 203, 204, 205, 206, 207, 214, 215, 484, 487, 507, 511, 514, 516], "physician": [2, 8, 20], "pn": [2, 12, 17, 20, 29, 38, 62, 126, 129, 451, 464, 484, 497, 502, 508, 509, 511], "0201": [2, 20, 484, 496], "timezon": [2, 8, 20], "offset": [2, 8, 20, 41, 48, 126, 129, 132, 136, 137, 139, 140, 141, 142, 152, 161, 162, 163, 166, 172, 173, 465, 473, 484, 497, 500, 503, 511, 514], "utc": [2, 8, 20], "0400": [2, 8, 20], "1010": [2, 20, 50, 516], "station": [2, 8, 20], "000000000": [2, 8, 20], "1060": [2, 20], "read": [2, 6, 7, 8, 13, 14, 17, 18, 20, 24, 26, 27, 28, 33, 37, 38, 39, 40, 41, 43, 48, 49, 51, 53, 67, 73, 79, 86, 91, 104, 129, 130, 134, 135, 140, 145, 149, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 170, 171, 173, 174, 177, 197, 208, 210, 448, 449, 481, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 508, 510, 511, 512, 514, 515], "1070": [2, 20], "oper": [2, 8, 20, 33, 38, 39, 43, 44, 82, 129, 202, 203, 205, 206, 214, 484, 487, 495, 497, 500, 509, 513], "1090": [2, 20], "model": [2, 8, 20, 24, 26, 38, 51, 126, 129, 510, 516], "mrt50h1": [2, 8, 20], "patient": [2, 8, 9, 10, 12, 17, 20, 26, 27, 28, 40, 129, 164, 166, 451, 484, 486, 493, 503, 508, 509, 511], "compressedsampl": [2, 8, 9, 20, 26, 28, 508, 509], "mr1": [2, 8, 20], "4mr1": [2, 8, 17, 20], "birth": [2, 8, 17, 20], "0040": [2, 20], "sex": [2, 8, 20], "1020": [2, 20], "size": [2, 8, 9, 20, 24, 26, 49, 51, 94, 95, 126, 152, 157, 174, 208, 209, 484, 494, 500, 504, 513, 514], "none": [2, 8, 20, 29, 30, 36, 73, 75, 78, 79, 88, 91, 93, 95, 96, 104, 106, 107, 108, 109, 119, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 141, 144, 145, 147, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 170, 171, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201, 214, 215, 218, 220, 418, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 474, 475, 476, 484, 493, 496, 497, 500, 507, 509, 513, 515], "1030": [2, 20, 484, 498], "weight": [2, 8, 20], "80": [2, 8, 20, 36, 42, 50, 139, 214, 223, 311, 313, 358, 516], "contrast": [2, 8, 10, 20, 511], "bolu": [2, 8, 20], "agent": [2, 8, 20], "scan": [2, 8, 20, 26, 28, 164, 514], "se": [2, 8, 20], "variant": [2, 8, 20], "0023": [2, 12, 20, 26, 27], "3d": [2, 4, 8, 20, 214, 484, 500], "thick": [2, 8, 20], "repetit": [2, 8, 20, 51], "4000": [2, 8, 20], "0081": [2, 20], "echo": [2, 8, 20], "240": [2, 8, 20], "0083": [2, 20], "averag": [2, 8, 20], "0084": [2, 20, 26, 27, 28], "frequenc": [2, 8, 20, 50, 516], "63": [2, 8, 20, 442, 509], "924339": [2, 8, 20], "0085": [2, 20], "nucleu": [2, 8, 20], "h": [2, 8, 12, 20, 22, 24, 26, 27, 28], "0086": [2, 20, 26, 27, 28], "0091": [2, 20], "train": [2, 8, 20], "1000": [2, 20, 50, 516], "devic": [2, 8, 20, 26, 27, 515], "serial": [2, 8, 20, 126, 129, 510], "0000200": [2, 8, 20], "softwar": [2, 8, 20, 39, 513], "v3": [2, 8, 20, 484, 500, 502, 503, 516], "51": [2, 8, 20, 42, 139, 223, 310, 316], "p25": [2, 8, 20], "1314": [2, 20], "flip": [2, 8, 20], "angl": [2, 8, 20], "90": [2, 8, 20, 42, 50, 139, 214, 223, 249, 305, 308, 484, 497], "5100": [2, 20, 40], "posit": [2, 8, 20, 24, 26, 27, 28, 40, 140, 142, 149, 161, 171, 172, 173, 190, 199, 215], "hf": [2, 8, 20, 40], "000d": [2, 20], "000e": [2, 20], "0011": [2, 20, 48, 129, 200, 210, 212, 213, 214], "83": [2, 8, 20], "9063": [2, 8, 20], "91": [2, 8, 20, 42, 139, 214, 223, 304, 308, 343, 484, 489, 497], "2000": [2, 8, 20, 34, 41, 77, 139, 214, 308, 484, 497, 500, 513, 514], "6406": [2, 8, 20], "0037": [2, 20], "0052": [2, 20], "later": [2, 8, 20, 97, 445, 446, 484, 491, 507, 509], "1040": [2, 20], "indic": [2, 8, 20, 34, 43, 48, 95, 126, 129, 484, 491, 507, 508, 509], "1041": [2, 20], "locat": [2, 4, 8, 9, 20, 91, 129, 132, 139, 165, 172, 508, 511], "comment": [2, 8, 20, 507], "lt": [2, 20, 29], "uncompress": [2, 8, 20, 31, 33, 40, 41, 42, 49, 129, 147, 210, 214, 421, 484, 495, 497, 502, 503, 514], "0028": [2, 20, 34, 42, 49, 129, 139, 141, 201, 202, 203, 204, 205, 206, 207, 210, 212, 213, 214, 484, 497, 499, 509], "sampl": [2, 8, 20, 31, 33, 34, 41, 49, 50, 129, 147, 214, 476, 514, 516], "per": [2, 8, 20, 31, 33, 34, 38, 41, 49, 53, 129, 131, 136, 137, 139, 147, 169, 210, 214, 484, 490, 497, 500, 509, 514], "0004": [2, 10, 20, 26, 27, 28, 34, 49, 129, 164, 166, 207, 210, 212, 214, 484, 497, 511], "photometr": [2, 8, 20, 33, 34, 41, 42, 49, 129, 207, 208, 209, 210, 211, 212, 213, 214, 484, 497, 514], "interpret": [2, 8, 20, 33, 34, 41, 42, 48, 49, 129, 207, 208, 209, 210, 211, 212, 213, 214, 484, 497, 514, 516], "monochrome2": [2, 8, 20, 33, 34, 210, 212, 511], "row": [2, 8, 9, 20, 26, 28, 31, 48, 49, 129, 147, 200, 207, 210, 212, 213, 214, 514], "space": [2, 8, 9, 20, 31, 33, 34, 36, 41, 44, 107, 147, 207, 214, 451, 456, 467, 469, 471, 484, 493, 505, 509, 511], "3125": [2, 8, 20], "0100": [2, 20, 34, 42, 50, 129, 190, 200, 210, 212, 213, 214, 476, 516], "bit": [2, 8, 20, 29, 31, 33, 34, 36, 42, 47, 48, 49, 129, 132, 142, 147, 202, 203, 210, 213, 214, 484, 494, 495, 497, 502, 503, 504, 505, 507, 508, 514, 516], "alloc": [2, 8, 20, 33, 34, 36, 42, 129, 210, 213, 214, 484, 504, 516], "16": [2, 8, 20, 26, 28, 31, 33, 34, 42, 53, 126, 129, 132, 210, 212, 213, 214, 383, 454, 455, 476, 484, 497, 514, 516], "0101": [2, 20, 34, 129, 202, 203, 210, 212, 214], "0102": [2, 20, 34, 190, 200], "high": [2, 8, 20, 33, 34, 36, 109, 484, 497], "15": [2, 8, 20, 395, 509, 516], "0103": [2, 20, 34, 129, 202, 203, 210, 212, 213, 214], "represent": [2, 8, 20, 26, 28, 29, 33, 34, 38, 58, 61, 72, 107, 109, 111, 121, 126, 129, 132, 138, 165, 166, 167, 202, 203, 214, 445, 446, 451, 453, 454, 471, 474, 481, 484, 500, 502, 505, 509, 510, 516], "0106": [2, 20], "smallest": [2, 8, 20], "ss": [2, 4, 20, 26, 28, 29, 175, 176, 476, 484, 486, 516], "0107": [2, 20], "largest": [2, 8, 20], "1050": [2, 20, 205, 206, 214, 509], "center": [2, 8, 20, 205, 206, 214, 509], "600": [2, 8, 20], "1051": [2, 20, 205, 206, 214, 484, 502, 509], "1600": [2, 8, 20], "7fe0": [2, 20, 26, 28, 36, 38, 49, 64, 65, 95, 129, 139, 140, 141, 156, 210, 211, 212, 213, 214, 477, 484, 493, 497, 505, 509], "ow": [2, 20, 26, 28, 29, 48, 50, 183, 463, 484, 488, 499, 504, 509], "arrai": [2, 4, 14, 20, 26, 28, 36, 38, 48, 49, 50, 51, 79, 94, 95, 100, 126, 129, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 444, 484, 485, 495, 496, 499, 500, 509], "128": [2, 9, 12, 20, 26, 28, 130, 149, 161, 171, 172, 173, 177, 190, 321, 365, 509, 514], "element": [2, 10, 12, 16, 17, 18, 20, 24, 25, 26, 27, 28, 33, 35, 36, 37, 40, 44, 47, 48, 49, 50, 51, 53, 64, 74, 75, 77, 79, 81, 82, 90, 91, 94, 95, 98, 99, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 147, 154, 155, 156, 157, 158, 166, 173, 174, 175, 176, 177, 190, 192, 193, 200, 208, 210, 212, 213, 214, 217, 218, 443, 445, 446, 447, 448, 449, 451, 452, 453, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 481, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 499, 500, 502, 503, 504, 508, 511, 514, 516], "fffc": [2, 20, 26, 28, 509], "trail": [2, 8, 20, 26, 28, 138, 200, 214, 456, 467, 469, 471, 484, 493, 509], "pad": [2, 3, 8, 20, 26, 28, 136, 138, 140, 195, 200, 214, 484, 494, 496, 497, 500, 502, 503, 509], "126": [2, 20, 26, 28, 509, 516], "author": [2, 8, 9, 11, 12, 16, 17, 20, 22], "guillaum": [2, 8, 9, 11, 12, 16, 17, 20, 22], "lemaitr": [2, 8, 9, 11, 12, 16, 17, 20, 22], "g": [2, 8, 9, 11, 12, 16, 17, 20, 22, 24, 26, 27, 31, 33, 34, 36, 38, 39, 40, 48, 49, 53, 82, 94, 126, 129, 132, 147, 156, 177, 199, 200, 214, 215, 445, 450, 451, 484, 487, 494, 496, 500, 505, 509], "lemaitre58": [2, 8, 9, 11, 12, 16, 17, 20, 22], "gmail": [2, 8, 9, 11, 12, 16, 17, 20, 22], "licens": [2, 8, 9, 11, 12, 16, 17, 20, 22, 484, 486, 487, 508], "mit": [2, 8, 9, 11, 12, 16, 17, 20, 22, 40, 484, 486, 487], "get_testdata_fil": [2, 3, 8, 9, 10, 11, 17, 20, 33, 38, 40, 41, 43, 47, 48, 49, 50, 129, 166, 481, 484, 500, 502, 503, 508, 509, 510, 511, 514, 516], "fixm": 2, "test": [2, 12, 16, 24, 26, 27, 28, 38, 43, 86, 106, 107, 108, 129, 455, 484, 485, 491, 493, 497, 500, 502, 504], "mr_small": [2, 8, 10, 17, 20, 49, 511], "get": [2, 9, 10, 14, 16, 26, 27, 29, 36, 38, 39, 40, 42, 43, 47, 48, 49, 50, 90, 95, 129, 153, 164, 214, 481, 484, 487, 488, 496, 500, 502, 507, 508, 512, 513, 514], "pixel_arrai": [2, 4, 9, 33, 36, 38, 41, 42, 44, 47, 129, 484, 486, 497], "shape": [2, 4, 48, 49, 50, 94, 129, 147, 200, 207, 208, 209, 212, 214, 476, 514, 516], "data_downsampl": 2, "copi": [2, 10, 42, 51, 129, 166, 484, 490, 500, 503, 507, 508, 511, 513], "back": [2, 14, 20, 33, 36, 40, 48, 49, 51, 507, 508, 509, 511], "origin": [2, 10, 20, 24, 26, 28, 34, 41, 42, 43, 48, 51, 86, 129, 158, 166, 177, 210, 442, 445, 446, 448, 449, 451, 507, 508, 509, 514, 516], "pixeldata": [2, 33, 38, 41, 49, 51, 134, 136, 137, 214, 484, 496, 497, 514], "tobyt": [2, 49, 516], "updat": [2, 10, 16, 18, 20, 26, 27, 33, 48, 106, 107, 108, 109, 129, 164, 166, 175, 176, 177, 190, 484, 486, 487, 489, 490, 492, 493, 494, 495, 497, 499, 500, 502, 503, 504, 507, 508, 511, 513, 514], "regard": 2, "given": [2, 11, 24, 26, 27, 28, 29, 42, 49, 50, 74, 76, 126, 127, 129, 132, 156, 158, 164, 166, 177, 200, 210, 212, 213, 214, 217, 445, 446, 451, 470, 476, 484, 499, 502, 509, 511, 513, 514, 516], "006": [2, 5], "plot_downsize_imag": [2, 5], "matplotlib": [3, 4, 9, 44, 516], "np": [3, 4, 200, 201, 202, 203, 204, 205, 206, 210, 212, 213, 214, 476, 514, 516], "pyplot": [3, 4, 9, 47, 516], "plt": [3, 4, 9, 47, 516], "generate_multiplex": [3, 129, 476, 484, 500, 516], "fpath": [3, 9, 48, 50, 508, 509, 516], "waveform_ecg": [3, 50, 516], "first": [3, 20, 26, 28, 33, 34, 36, 38, 39, 40, 43, 46, 49, 51, 73, 74, 76, 94, 95, 104, 129, 139, 140, 142, 161, 166, 174, 214, 451, 484, 495, 496, 497, 506, 507, 508, 511, 516], "channel": [3, 20, 34, 49, 50, 129, 210, 476, 516], "each": [3, 10, 20, 31, 33, 34, 37, 38, 41, 48, 49, 50, 74, 129, 136, 137, 139, 140, 142, 143, 144, 147, 167, 168, 199, 207, 213, 214, 451, 476, 484, 499, 502, 507, 509, 511, 514, 516], "multiplex": [3, 50, 129, 476, 484, 500, 516], "ch_idx": 3, "we": [3, 10, 17, 18, 24, 26, 28, 33, 42, 45, 90, 129, 153, 506, 507, 508, 509, 511, 513, 514, 516], "could": [3, 16, 24, 25, 26, 38, 49, 51, 73, 74, 76, 199, 208, 484, 487, 488, 502, 507, 508], "also": [3, 17, 26, 27, 28, 29, 31, 36, 38, 40, 43, 46, 47, 49, 51, 75, 116, 129, 147, 161, 190, 451, 484, 485, 486, 487, 488, 491, 492, 495, 496, 500, 507, 508, 509, 510, 511, 513, 514, 515, 516], "waveform_arrai": [3, 44, 129, 484, 500, 516], "fig": [3, 516], "ax": [3, 43], "subplot": [3, 4, 516], "waveformsequ": [3, 50, 516], "as_raw": [3, 50, 476, 484, 504, 516], "mplx": 3, "arr": [3, 36, 38, 41, 48, 49, 50, 129, 200, 201, 202, 203, 204, 205, 206, 207, 214, 514, 516], "zip": [3, 6, 484, 496, 516], "nr_channel": 3, "numberofwaveformchannel": [3, 50, 476, 516], "nr_sampl": 3, "numberofwaveformsampl": [3, 476, 516], "sampling_fq": 3, "samplingfrequ": [3, 50, 516], "hz": [3, 50, 516], "mplx_label": 3, "multiplexgrouplabel": [3, 516], "ch_item": 3, "channeldefinitionsequ": [3, 516], "arang": [3, 516], "x_unit": 3, "channelsensitivityunitssequ": [3, 516], "1c": [3, 177, 190, 210, 212, 213, 214, 516], "so": [3, 26, 27, 29, 31, 36, 38, 39, 48, 49, 51, 90, 129, 166, 168, 177, 197, 444, 484, 485, 488, 507, 509, 510, 511, 514, 516], "check": [3, 12, 38, 39, 113, 114, 116, 117, 119, 123, 124, 129, 131, 133, 147, 169, 177, 190, 216, 444, 455, 484, 490, 493, 495, 496, 499, 500, 502, 507, 508, 513, 516], "y_unit": 3, "codemean": [3, 516], "unitless": [3, 49, 476, 516], "descript": [3, 16, 20, 25, 26, 27, 30, 37, 38, 40, 43, 106, 107, 108, 109, 112, 122, 126, 132, 484, 485, 486, 499, 503, 505], "ch_sourc": 3, "channelsourcesequ": [3, 516], "set_titl": 3, "set_xlabel": 3, "set_ylabel": [3, 516], "tight_layout": 3, "224": [3, 5], "plot_waveform": [3, 5], "multipl": [4, 29, 31, 34, 38, 48, 49, 75, 107, 109, 110, 120, 126, 129, 139, 141, 142, 147, 204, 205, 206, 207, 214, 215, 451, 470, 484, 497, 503, 509], "sort": [4, 10, 129, 511], "them": [4, 8, 24, 26, 27, 28, 31, 36, 37, 38, 42, 43, 48, 51, 129, 177, 459, 461, 484, 492, 496, 500, 508, 509, 511], "build": [4, 484, 493, 504, 507], "reslic": [4, 5], "differ": [4, 6, 12, 17, 21, 25, 26, 28, 29, 33, 37, 43, 49, 484, 487, 499, 507, 508, 509, 510, 511], "plane": [4, 20, 34, 49, 200, 214], "glob": [4, 10, 102, 103, 105, 511], "fname": [4, 49], "recurs": [4, 43, 129, 484, 486, 488], "append": [4, 11, 18, 20, 38, 138, 199, 215, 442, 509, 516], "count": 4, "skip": [4, 18, 484, 503, 507], "sliceloc": [4, 9, 26, 28], "eg": 4, "scout": [4, 20], "view": [4, 10, 20, 33, 38, 40, 44, 49, 204, 205, 206, 214, 484, 485, 487, 508, 511, 516], "skipcount": 4, "hasattr": 4, "ensur": [4, 29, 33, 39, 41, 43, 93, 129, 156, 166, 177, 199, 214, 445, 446, 484, 490, 493, 502, 504, 505, 507], "thei": [4, 36, 38, 43, 48, 49, 73, 85, 95, 177, 190, 484, 502, 507, 508, 509, 511, 513, 514], "ar": [4, 10, 18, 24, 26, 27, 28, 33, 34, 38, 39, 41, 42, 43, 46, 47, 48, 49, 51, 53, 73, 74, 78, 79, 82, 91, 94, 95, 99, 100, 106, 108, 109, 126, 129, 131, 132, 133, 136, 137, 139, 140, 141, 142, 147, 156, 161, 164, 166, 169, 175, 176, 177, 190, 199, 201, 202, 203, 205, 206, 208, 209, 213, 214, 215, 217, 450, 451, 454, 469, 472, 474, 484, 490, 495, 496, 497, 499, 500, 502, 503, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516], "correct": [4, 20, 24, 26, 33, 34, 39, 41, 42, 48, 50, 73, 77, 95, 129, 156, 171, 175, 176, 199, 212, 214, 484, 494, 495, 497, 502, 503, 507, 509, 514, 516], "aspect": 4, "assum": [4, 25, 26, 41, 49, 86, 140, 484, 493, 511, 514, 516], "all": [4, 6, 8, 12, 17, 20, 24, 26, 27, 28, 34, 37, 38, 39, 41, 44, 45, 51, 65, 94, 95, 108, 126, 129, 131, 134, 135, 136, 138, 140, 142, 147, 153, 156, 166, 168, 175, 176, 177, 199, 215, 223, 484, 485, 486, 487, 490, 492, 495, 497, 500, 502, 503, 504, 505, 507, 508, 509, 513, 514], "same": [4, 31, 38, 39, 40, 48, 107, 129, 166, 199, 445, 446, 484, 488, 490, 508, 509, 511], "p": [4, 10, 22, 24, 26, 53, 451, 484, 490, 511], "pixelspac": [4, 9], "slicethick": 4, "ax_aspect": 4, "sag_aspect": 4, "cor_aspect": 4, "creat": [4, 12, 14, 18, 24, 25, 26, 27, 38, 39, 43, 47, 51, 85, 126, 127, 129, 147, 154, 164, 165, 166, 167, 199, 218, 442, 443, 444, 447, 449, 451, 481, 484, 487, 489, 502, 504, 509, 513, 514, 515, 516], "img_shap": 4, "list": [4, 6, 7, 8, 10, 13, 20, 26, 28, 29, 31, 33, 38, 40, 41, 73, 74, 75, 76, 94, 95, 102, 103, 105, 126, 127, 129, 134, 136, 137, 142, 147, 154, 156, 157, 160, 162, 166, 167, 184, 188, 189, 193, 194, 196, 199, 200, 215, 442, 450, 451, 458, 459, 460, 461, 464, 465, 466, 467, 470, 471, 474, 475, 481, 484, 487, 490, 491, 497, 500, 502, 503, 505, 508, 509, 511, 513, 514], "img3d": 4, "zero": [4, 20, 29, 49, 129, 174, 484, 504, 509, 514], "img2d": 4, "orthogon": 4, "a1": 4, "imshow": [4, 9, 47], "set_aspect": 4, "a2": 4, "a3": 4, "t": [4, 8, 10, 12, 18, 20, 26, 27, 28, 29, 34, 36, 38, 48, 51, 81, 129, 139, 147, 157, 166, 200, 207, 210, 213, 214, 418, 442, 484, 496, 499, 500, 507, 508, 509, 510, 511, 514], "00": [5, 13, 19, 21, 142], "229": 5, "execut": [5, 13, 19, 21, 451], "auto_examples_image_process": 5, "mb": [5, 13, 19, 21, 156, 476], "imag": [5, 8, 9, 10, 12, 17, 20, 26, 28, 31, 40, 41, 43, 44, 48, 49, 129, 137, 138, 139, 140, 142, 164, 166, 201, 207, 208, 210, 211, 212, 213, 214, 484, 487, 494, 496, 500, 502, 509, 511, 513, 514], "somewher": [6, 40], "start": [6, 17, 18, 20, 24, 26, 27, 28, 40, 48, 51, 126, 132, 140, 142, 155, 161, 167, 168, 173, 442, 465, 473, 484, 494, 504, 507, 508, 509, 510, 515], "analys": [6, 21], "between": [6, 21, 33, 36, 48, 49, 107, 200, 507, 508, 509], "displai": [6, 20, 21, 26, 27, 28, 33, 38, 44, 47, 98, 126, 129, 484, 485, 491, 496, 502, 507, 516], "person": [6, 17, 21, 29, 36, 451, 484, 495, 502, 515], "work": [6, 15, 16, 19, 21, 25, 26, 27, 31, 36, 38, 39, 40, 42, 43, 44, 51, 166, 484, 485, 487, 488, 490, 491, 492, 494, 496, 500, 507, 508, 509, 513, 515, 516], "memori": [6, 21, 130, 156, 157, 158, 174, 207, 210, 214, 484, 487, 495, 496, 497, 511], "base": [6, 21, 33, 34, 40, 65, 67, 78, 129, 146, 443, 447, 452, 481, 484, 487, 493, 497, 500, 507, 508, 511, 514, 516], "hierarch": [6, 21, 139, 214, 484, 497], "tree": [6, 21, 38, 167, 484, 491, 509], "rtplan": [6, 7, 13, 24, 26, 27, 28, 38, 40, 156], "format": [6, 7, 11, 12, 13, 20, 24, 26, 27, 28, 29, 31, 38, 39, 40, 42, 126, 129, 136, 137, 138, 140, 156, 177, 192, 210, 213, 445, 446, 451, 470, 484, 485, 486, 487, 493, 496, 502, 503, 505, 509, 511, 513], "write": [6, 7, 10, 13, 14, 17, 24, 26, 35, 37, 39, 43, 44, 53, 67, 91, 129, 130, 152, 153, 166, 177, 179, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 445, 446, 481, 484, 486, 488, 493, 494, 496, 498, 499, 500, 502, 503, 508, 510, 511, 512], "modifi": [6, 15, 37, 40, 48, 49, 51, 104, 129, 166, 484, 497, 500, 512], "dictionari": [6, 15, 19, 38, 81, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 157, 189, 418, 481, 484, 486, 487, 489, 492, 493, 494, 495, 496, 497, 500, 502, 503, 510, 515], "item": [6, 8, 9, 15, 19, 20, 24, 26, 27, 28, 29, 36, 38, 50, 51, 126, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 163, 170, 194, 199, 215, 484, 485, 486, 487, 490, 493, 496, 497, 502, 503, 509, 511, 516], "standard": [6, 12, 15, 19, 20, 22, 29, 33, 34, 36, 39, 41, 43, 49, 50, 53, 126, 129, 132, 136, 138, 139, 140, 141, 142, 144, 166, 177, 190, 194, 200, 201, 202, 203, 204, 205, 206, 207, 210, 214, 218, 445, 446, 449, 451, 484, 486, 489, 490, 492, 493, 500, 502, 510, 511, 514, 516], "anonym": [6, 15, 19, 38, 43, 484, 485, 486, 496], "auto_examples_python": 6, "auto_examples_jupyt": 6, "your": [8, 10, 14, 23, 25, 26, 27, 31, 33, 34, 38, 40, 43, 44, 51, 93, 136, 137, 166, 506, 509, 510, 511, 513, 516], "own": [8, 24, 25, 26, 27, 38, 40, 43, 51, 129, 166, 177, 484, 494, 504, 509, 511, 514, 516], "840": [8, 9, 12, 24, 26, 41, 42, 49, 129, 139, 146, 148, 177, 210, 213, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 484, 494, 495, 497, 499, 500, 505, 507, 509], "10008": [8, 9, 12, 24, 26, 41, 42, 49, 129, 139, 146, 148, 177, 210, 213, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 484, 494, 495, 497, 499, 500, 505, 507, 509], "don": [8, 10, 18, 26, 27, 28, 38, 51, 507, 508, 510, 511, 514], "xfe": 8, "x04": [8, 49], "myprint": [8, 484, 485], "through": [8, 17, 36, 38, 40, 43, 49, 129, 159, 173, 175, 484, 485, 486, 507, 508, 509, 513, 515], "_pretty_str": [8, 509], "dont_print": 8, "indent_str": 8, "next_indent_str": 8, "sequence_item": 8, "repr_valu": 8, "repr": [8, 38, 98, 484, 499], "50": [8, 42, 49, 50, 139, 214, 223, 309, 316, 341, 418], "005": [8, 12, 13], "plot_printing_dataset": [8, 13], "some": [9, 12, 14, 17, 26, 28, 36, 38, 39, 43, 45, 47, 48, 49, 50, 51, 53, 73, 86, 97, 129, 130, 147, 160, 177, 445, 446, 454, 484, 485, 486, 488, 490, 493, 494, 504, 508, 509, 510, 511, 513, 515], "path": [9, 10, 24, 26, 27, 28, 31, 36, 41, 42, 46, 102, 103, 104, 105, 130, 147, 156, 165, 166, 169, 197, 484, 500, 505, 508, 509, 511, 514], "project": [9, 10, 20, 94, 95, 506, 507, 508, 513], "src": [9, 10, 30, 31, 94, 95, 147, 214, 511, 514], "test_fil": [9, 10, 24, 26, 508, 509, 511], "ct_small": [9, 10, 20, 26, 28, 33, 38, 41, 43, 47, 49, 129, 156, 166, 508, 509, 510, 511, 514], "ct1": [9, 20, 26, 28, 508, 509], "1ct1": [9, 20, 26, 28, 511], "20040119": [9, 20, 26, 28, 509], "661468": [9, 20], "77": [9, 20, 24, 26, 27, 28, 38, 260, 352, 353, 354, 355, 357, 409, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433], "2040634155": [9, 20, 26, 28], "normal": [9, 20, 25, 26, 27, 38, 484, 505], "mode": [9, 20, 26, 28, 80, 83, 84, 484, 497, 507, 513], "sopclassuid": [9, 24, 26, 28, 165, 509, 516], "pat_nam": 9, "patientnam": [9, 10, 12, 14, 26, 28, 38, 40, 81, 82, 126, 129, 156, 164, 166, 218, 484, 496, 508, 509, 511], "family_comma_given": [9, 451], "patientid": [9, 10, 12, 14, 17, 26, 28, 38, 129, 164, 166, 509, 511], "studyd": [9, 10, 24, 26, 27, 28, 511], "sure": [9, 42, 51, 507, 509, 513], "exist": [9, 31, 33, 36, 38, 39, 51, 107, 129, 158, 166, 177, 190, 484, 504, 505, 506, 507, 508, 514], "want": [9, 10, 14, 24, 25, 26, 39, 51, 168, 507, 508, 509, 510, 511, 513], "default": [9, 24, 26, 29, 31, 39, 42, 47, 48, 49, 53, 73, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 91, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 126, 129, 130, 133, 136, 138, 144, 147, 154, 156, 157, 166, 168, 177, 190, 200, 204, 205, 206, 207, 210, 212, 213, 214, 442, 450, 451, 459, 461, 465, 476, 484, 488, 490, 491, 493, 495, 496, 497, 498, 499, 500, 502, 508, 509, 510, 511, 514], "miss": [9, 16, 31, 104, 129, 133, 147, 156, 161, 175, 177, 190, 200, 201, 210, 212, 213, 214, 484, 492, 493, 496, 497, 503, 505, 507, 509, 511, 513], "cmap": [9, 47], "cm": [9, 11, 47], "grai": 9, "095": [9, 13, 20], "plot_read_dicom": [9, 13], "interact": [10, 38, 40, 43, 129, 511], "directori": [10, 40, 164, 165, 166, 167, 169, 484, 485, 503, 507, 508, 511, 513], "dicomdirtest": [10, 511], "pydicom_test": [10, 511], "276": [10, 511], "7230010": [10, 511], "31906": [10, 511], "1359940846": [10, 511], "78187": [10, 511], "descriptor": [10, 43, 166, 201, 202, 203, 204, 205, 214, 484, 497, 499, 511], "charact": [10, 20, 26, 28, 29, 36, 39, 43, 53, 73, 74, 75, 76, 86, 126, 127, 129, 132, 156, 157, 166, 167, 168, 169, 177, 192, 193, 194, 442, 451, 454, 455, 459, 461, 464, 465, 471, 474, 475, 481, 484, 485, 486, 493, 495, 496, 499, 500, 502, 503, 504, 505, 507, 509, 510, 511], "stage": [10, 165, 166, 507, 508], "dicomdir": [10, 37, 164, 166, 167, 484, 492, 496, 497, 500, 503, 504, 505, 512], "structur": [10, 26, 27, 38, 40, 164, 166, 167, 484, 497, 504, 505, 509, 511, 512], "manag": [10, 31, 43, 156, 166, 484, 493, 500, 509, 511], "77654033": [10, 511], "doe": [10, 12, 43, 48, 49, 51, 86, 94, 95, 107, 129, 149, 158, 183, 208, 454, 484, 500, 511], "archibald": [10, 511], "20010101": [10, 129, 511], "studytim": [10, 24, 26, 28, 511], "000000": [10, 20, 511], "studydescript": [10, 26, 28, 166, 511], "xr": [10, 511], "spine": [10, 511], "comp": [10, 20, 26, 28, 511], "min": [10, 202, 203, 214, 511], "cr": [10, 214, 511], "seriesnumb": [10, 38, 511], "19950903": [10, 511], "173032": [10, 511], "head": [10, 36, 40, 511], "brain": [10, 511], "wo": [10, 511], "98890234": [10, 511], "peter": [10, 511], "20030505": [10, 511], "050743": [10, 511], "carotid": [10, 511], "025109": [10, 511], "045357": [10, 511], "mra": [10, 511], "700": [10, 484, 495, 511], "7": [10, 20, 23, 24, 26, 27, 34, 38, 49, 128, 132, 136, 144, 166, 190, 194, 207, 210, 214, 223, 245, 260, 269, 270, 344, 345, 346, 347, 351, 353, 373, 390, 397, 398, 399, 400, 401, 405, 434, 491, 495, 504, 508, 509, 511, 516], "found": [10, 48, 49, 50, 104, 129, 147, 156, 161, 166, 171, 174, 509, 511, 514], "seriesinstanceuid": 10, "1196533885": 10, "18148": 10, "118": 10, "photometricinterpret": [10, 33, 41, 210, 212, 214, 511, 514], "monochrome1": [10, 33, 34, 210, 212, 511], "without": [10, 38, 42, 50, 104, 129, 149, 159, 172, 214, 456, 467, 469, 470, 484, 486, 494, 496, 500, 503, 504, 509, 511, 513], "still": [10, 41, 43, 484, 490, 491, 493, 494, 495, 497, 507, 509, 510, 511, 514], "tmp": [10, 12, 511], "tmpjfmsbqgh": 10, "contain": [10, 24, 26, 29, 31, 34, 35, 36, 37, 38, 39, 43, 48, 49, 50, 51, 53, 73, 75, 94, 126, 128, 129, 131, 138, 139, 140, 141, 142, 147, 156, 157, 164, 171, 175, 176, 177, 190, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 218, 451, 455, 459, 461, 476, 484, 492, 495, 502, 507, 509, 511, 516], "follow": [10, 25, 26, 27, 28, 31, 34, 36, 38, 39, 41, 42, 45, 49, 126, 129, 133, 139, 140, 142, 147, 166, 174, 177, 190, 451, 484, 497, 500, 502, 505, 507, 508, 509, 511, 515, 516], "pt000000": [10, 511], "st000000": [10, 511], "se000000": [10, 511], "im000000": [10, 511], "se000001": [10, 511], "se000002": [10, 511], "st000001": [10, 511], "im000001": [10, 511], "im000002": [10, 511], "im000003": [10, 511], "pt000001": [10, 511], "im000004": 10, "st000002": 10, "st000003": 10, "im000005": 10, "im000006": 10, "pt000002": [10, 511], "pt000003": 10, "pathlib": [10, 169, 511], "tempfil": [10, 12, 17, 511], "temporarydirectori": [10, 511], "warn": [10, 36, 39, 51, 53, 73, 74, 76, 81, 82, 214, 481, 484, 486, 490, 494, 495, 496, 497, 499, 502, 503, 505, 507, 508], "fileset": [10, 481, 484, 500, 502, 503, 505], "generate_uid": [10, 33, 166, 484, 496], "filterwarn": 10, "ignor": [10, 39, 53, 73, 81, 82, 109, 126, 129, 170, 471, 481, 484, 498, 502, 505, 508], "A": [10, 20, 28, 31, 33, 34, 36, 37, 38, 41, 51, 73, 74, 86, 94, 102, 103, 105, 129, 136, 138, 139, 140, 141, 142, 144, 146, 147, 154, 157, 164, 166, 167, 168, 169, 177, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 442, 451, 464, 471, 474, 475, 484, 494, 502, 505, 507, 509, 511, 514], "its": [10, 24, 25, 26, 27, 29, 31, 33, 34, 38, 39, 79, 126, 129, 142, 166, 167, 174, 177, 199, 200, 208, 209, 210, 211, 212, 213, 476, 484, 495, 500, 505, 509, 511], "itself": [10, 16, 33, 36, 38, 43, 104, 484, 500, 507, 508, 511], "summari": [10, 25, 26, 507], "content": [10, 12, 14, 20, 38, 53, 129, 139, 200, 210, 211, 212, 213, 214, 508, 509, 511, 514], "seen": [10, 25, 26, 86, 508, 516], "when": [10, 23, 24, 25, 26, 27, 29, 31, 33, 34, 36, 38, 41, 43, 46, 48, 49, 51, 77, 81, 82, 86, 90, 91, 95, 129, 136, 137, 139, 141, 142, 147, 149, 160, 166, 168, 175, 176, 202, 203, 204, 205, 206, 213, 214, 215, 218, 220, 442, 451, 484, 486, 487, 488, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 511, 513, 514, 516], "iter": [10, 17, 38, 129, 147, 154, 167, 168, 175, 178, 199, 212, 215, 220, 484, 486, 494, 511], "over": [10, 20, 26, 27, 46, 48, 509, 511], "yield": [10, 38, 129, 138, 139, 140, 141, 144, 147, 154, 167, 168, 212, 476, 509, 511, 514, 516], "fileinst": [10, 166, 167, 481, 511], "object": [10, 14, 31, 36, 38, 40, 43, 47, 82, 97, 101, 126, 129, 130, 132, 146, 152, 153, 156, 157, 158, 160, 161, 164, 166, 177, 199, 214, 215, 216, 219, 451, 481, 484, 486, 487, 496, 497, 499, 502, 503, 509, 511, 516], "correspond": [10, 17, 31, 33, 36, 38, 48, 49, 50, 73, 104, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 132, 136, 137, 147, 148, 158, 165, 166, 167, 200, 201, 214, 218, 476, 484, 502, 507, 508, 511, 514, 516], "do": [10, 14, 25, 26, 31, 37, 39, 42, 46, 47, 48, 49, 51, 90, 129, 166, 177, 183, 215, 484, 490, 496, 502, 507, 508, 509, 511, 514, 515, 516], "someth": [10, 14, 23, 25, 26, 36, 48, 129, 507], "search": [10, 104, 139, 166, 171, 172, 173, 484, 502, 509, 511], "patient_id": 10, "find_valu": [10, 166, 511], "return": [10, 11, 14, 31, 34, 36, 38, 43, 48, 49, 50, 73, 74, 76, 77, 87, 88, 94, 95, 100, 101, 102, 103, 104, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 140, 142, 143, 145, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 189, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 418, 442, 444, 445, 446, 449, 450, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 484, 485, 486, 487, 488, 494, 495, 496, 497, 499, 500, 502, 503, 505, 509, 510, 511, 516], "where": [10, 31, 34, 38, 39, 48, 49, 50, 53, 106, 108, 129, 132, 136, 152, 158, 164, 166, 171, 172, 202, 203, 214, 484, 486, 495, 496, 497, 507, 508, 509, 511], "one": [10, 16, 24, 26, 31, 34, 38, 42, 49, 50, 51, 80, 83, 84, 106, 108, 126, 129, 130, 135, 136, 137, 138, 139, 140, 142, 147, 158, 159, 164, 166, 167, 168, 174, 178, 192, 201, 207, 214, 445, 446, 484, 490, 493, 503, 507, 509, 511, 513, 515, 516], "repres": [10, 31, 38, 49, 99, 126, 129, 140, 156, 177, 217, 449, 451, 454, 507, 516], "match": [10, 41, 42, 49, 81, 90, 102, 103, 104, 105, 129, 158, 164, 166, 200, 208, 210, 213, 451, 484, 490, 493, 500, 505, 509, 511, 514, 516], "result": [10, 17, 24, 25, 26, 27, 33, 39, 41, 51, 74, 76, 129, 177, 217, 442, 484, 502, 507, 508, 514], "find": [10, 17, 20, 23, 25, 26, 90, 129, 159, 166, 171, 172, 173, 507, 508, 509, 511, 515, 516], "study_uid": 10, "studyinstanceuid": 10, "series_uid": 10, "plural": 10, "Of": 10, "cours": [10, 514], "you": [10, 12, 14, 18, 23, 24, 25, 26, 27, 28, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 49, 50, 51, 90, 136, 137, 156, 160, 164, 166, 168, 214, 484, 497, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516], "just": [10, 12, 14, 25, 26, 27, 28, 38, 43, 51, 86, 126, 129, 154, 484, 496, 500, 507, 508, 509, 511], "directli": [10, 31, 38, 51, 126, 147, 444, 510, 511, 515], "know": [10, 34, 38, 43, 509, 510, 511], "what": [10, 29, 34, 37, 43, 48, 166, 177, 509, 511, 514], "nfound": 10, "actual": [10, 20, 25, 26, 31, 34, 38, 41, 48, 126, 129, 147, 166, 177, 200, 210, 213, 507, 511], "record": [10, 20, 164, 165, 166, 167, 484, 497, 503, 511], "onli": [10, 16, 24, 26, 27, 28, 36, 38, 39, 40, 42, 45, 48, 49, 51, 53, 77, 94, 95, 107, 109, 110, 111, 112, 114, 115, 116, 117, 125, 129, 131, 133, 139, 142, 147, 156, 159, 166, 168, 175, 176, 177, 190, 210, 214, 218, 449, 455, 484, 490, 492, 493, 494, 495, 496, 497, 499, 500, 502, 507, 509, 510, 511, 514], "limit": [10, 26, 27, 33, 40, 41, 44, 49, 166, 454, 455, 484, 490, 496, 500, 515], "subset": [10, 24, 26], "howev": [10, 25, 26, 29, 31, 33, 34, 38, 41, 45, 139, 140, 142, 199, 449, 507, 508, 509, 511, 514], "less": [10, 33, 34, 153, 516], "effici": [10, 154, 166, 214, 454, 516], "result_load": 10, "remov": [10, 12, 17, 38, 39, 44, 129, 147, 165, 166, 167, 214, 484, 493, 494, 495, 496, 499, 500, 501, 502, 503, 504, 505, 507, 509], "To": [10, 24, 26, 28, 33, 38, 39, 40, 42, 48, 50, 51, 149, 154, 177, 484, 490, 495, 500, 507, 508, 509, 511, 513, 516], "edit": [10, 51, 484, 494, 495, 497, 507, 508, 513], "identif": 10, "modul": [10, 25, 26, 31, 33, 39, 46, 47, 49, 50, 82, 91, 94, 95, 129, 147, 192, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 476, 481, 484, 485, 491, 492, 495, 500, 502, 503, 505, 509, 511, 514, 516], "part": [10, 27, 28, 29, 33, 34, 36, 39, 43, 46, 49, 50, 109, 126, 129, 132, 136, 138, 139, 140, 141, 142, 144, 156, 169, 175, 176, 177, 190, 194, 200, 202, 203, 204, 205, 206, 207, 210, 214, 451, 484, 487, 490, 502, 507, 508, 509, 510, 511, 514, 516], "annex": [10, 33, 34, 49, 50, 126, 129, 136, 138, 139, 140, 141, 142, 144, 164, 202, 203, 204, 205, 206, 207, 210, 214, 511], "properti": [10, 14, 38, 53, 126, 129, 147, 165, 166, 167, 215, 217, 418, 451, 484, 485, 487, 490, 493, 494, 500, 511], "1130": [10, 20], "my": [10, 43, 129, 166, 510], "1141": 10, "descriptor_file_id": [10, 166, 511], "readm": 10, "1142": 10, "specif": [10, 20, 24, 26, 27, 28, 31, 32, 36, 38, 41, 43, 48, 49, 51, 73, 74, 75, 76, 129, 156, 157, 166, 171, 177, 194, 450, 484, 485, 487, 493, 495, 496, 499, 500, 507, 508, 509, 510, 511, 514], "descriptor_character_set": [10, 166, 511], "iso_ir": [10, 20, 26, 28, 43, 75, 509, 510, 511], "100": [10, 20, 24, 26, 28, 43, 50, 223, 325, 326, 337, 509, 510, 511, 516], "until": [10, 156, 157, 160, 171, 174, 484, 485, 490, 502, 511], "call": [10, 25, 26, 38, 39, 41, 46, 48, 51, 78, 82, 88, 129, 140, 154, 166, 173, 199, 444, 484, 487, 490, 494, 500, 509, 511, 514], "meet": [10, 31, 138, 147, 484, 490], "semant": [10, 36, 166, 451, 511], "re": [10, 37, 48, 369, 370, 506, 507, 508, 509, 511, 513, 514, 516], "here": [10, 12, 24, 26, 28, 31, 37, 40, 43, 47, 97, 147, 173, 508, 509, 510, 511, 515], "becaus": [10, 24, 26, 33, 36, 38, 40, 41, 48, 49, 51, 149, 166, 507, 508, 509], "would": [10, 24, 25, 26, 27, 33, 39, 51, 53, 445, 507, 508, 511, 516], "overwrit": [10, 450], "altern": [10, 23, 38, 129, 204, 205, 206, 214, 507, 509, 511], "new": [10, 17, 18, 26, 27, 33, 36, 37, 40, 53, 74, 76, 77, 79, 81, 82, 86, 93, 94, 95, 97, 98, 100, 101, 103, 104, 106, 107, 108, 109, 126, 129, 131, 132, 136, 138, 143, 144, 146, 147, 148, 165, 166, 167, 177, 199, 200, 201, 202, 203, 204, 205, 206, 212, 214, 215, 217, 443, 447, 451, 476, 485, 486, 487, 490, 491, 492, 495, 496, 497, 499, 500, 502, 505, 506, 509, 510, 512, 515, 516], "ani": [10, 24, 26, 27, 29, 31, 34, 38, 39, 47, 48, 50, 76, 89, 104, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 126, 129, 131, 133, 136, 137, 138, 147, 149, 150, 151, 152, 153, 158, 166, 167, 177, 190, 199, 200, 205, 206, 214, 218, 443, 447, 450, 451, 452, 465, 469, 475, 484, 486, 487, 496, 502, 507, 508, 511, 513, 514], "while": [10, 26, 27, 33, 34, 49, 53, 126, 129, 177, 213, 454, 484, 496, 497, 502, 507, 511, 513], "leav": [10, 16, 26, 27, 107, 509], "unchang": [10, 41, 73, 175, 176, 202, 203, 204, 205, 206, 214, 514], "tdir": 10, "new_fileset": 10, "norigin": 10, "note": [10, 16, 18, 24, 26, 27, 28, 36, 39, 41, 42, 47, 79, 90, 107, 109, 129, 132, 138, 139, 143, 144, 156, 160, 161, 173, 183, 199, 202, 203, 205, 206, 214, 443, 445, 446, 447, 449, 451, 452, 454, 487, 508, 509, 510, 514, 515, 516], "layout": [10, 166], "been": [10, 25, 26, 34, 41, 42, 43, 49, 79, 86, 88, 129, 136, 137, 139, 140, 158, 165, 166, 168, 177, 190, 214, 444, 484, 487, 494, 499, 502, 503, 505, 507, 508, 509, 510], "is_fil": [10, 511], "relative_to": 10, "202": [10, 13], "plot_read_fileset": [10, 13], "basic": [11, 26, 27, 28, 37, 41, 47, 50, 51, 68, 129, 136, 137, 139, 140, 141, 142, 484, 497, 511, 512, 514, 516], "info": [11, 20, 129, 153, 154, 157, 160, 172, 173, 174, 418, 484, 487, 488, 490, 492], "beam": [11, 18, 24, 26, 27, 28, 484, 490], "gantri": [11, 20, 26, 28], "ssd": 11, "field": [11, 20, 26, 28, 38, 87, 126, 128, 140, 484, 502], "89": 11, "darci": [11, 12, 16, 17], "mason": [11, 12, 16, 17, 23], "list_beam": 11, "plan_dataset": 11, "summar": [11, 511], "line": [11, 20, 23, 24, 25, 27, 28, 35, 39, 40, 43, 48, 51, 82, 129, 166, 484, 491, 502, 507, 508, 509, 511, 514], "13": [11, 232, 233, 234, 236, 437, 438], "num": 11, "11": [11, 20, 23, 202, 203, 204, 205, 206, 214, 222, 228, 230, 244, 245, 291, 292, 349, 368, 387, 403, 431, 436, 484, 504, 516], "beamsequ": [11, 18, 24, 26, 27, 28, 38, 129, 484, 490], "cp0": 11, "controlpointsequ": 11, "float": [11, 29, 36, 38, 49, 78, 85, 126, 129, 130, 154, 156, 157, 158, 160, 174, 198, 210, 214, 444, 445, 446, 448, 449, 454, 470, 484, 490, 491, 497, 500, 502, 504, 509], "sourcetosurfacedist": 11, "beamnam": [11, 18, 38], "beamnumb": [11, 24, 26, 27, 28], "8d": 11, "gantryangl": 11, "1f": 11, "join": [11, 40], "003": [11, 13], "plot_read_rtplan": [11, 13], "scratch": [12, 18, 44, 484, 488, 489, 502, 507, 514], "produc": [12, 24, 26, 36, 49, 51, 177, 484, 492, 497, 502], "compliant": [12, 51, 484, 493], "written": [12, 24, 26, 29, 39, 40, 46, 48, 49, 129, 166, 177, 189, 190, 484, 496, 497, 507, 509, 511], "have": [12, 14, 25, 26, 27, 28, 29, 33, 34, 36, 38, 39, 41, 42, 43, 48, 51, 94, 95, 126, 129, 136, 137, 140, 142, 147, 156, 159, 166, 168, 177, 190, 200, 210, 212, 213, 214, 456, 467, 476, 484, 490, 493, 495, 496, 499, 503, 505, 506, 507, 508, 509, 510, 511, 513, 514, 516], "valid": [12, 44, 51, 53, 80, 83, 84, 86, 122, 126, 129, 131, 133, 147, 156, 169, 177, 190, 207, 214, 215, 369, 370, 418, 450, 454, 455, 459, 461, 470, 471, 474, 484, 502, 503, 504], "tmpolx1bmht": 12, "save": [12, 14, 24, 26, 40, 41, 48, 49, 484, 487, 490, 508, 509, 510, 514, 516], "big": [12, 30, 31, 42, 129, 130, 153, 210, 213, 223, 484, 504, 516], "tmpjc25y3ym": 12, "20231001": 12, "0033": [12, 20], "193207": 12, "012015": 12, "firstnam": 12, "123456": 12, "datetim": [12, 90, 443, 447, 452], "o": [12, 20, 22, 68, 70], "filedataset": [12, 46, 104, 129, 156, 160, 177, 481, 484, 487, 489, 502, 503, 505, 509, 511], "filemetadataset": [12, 24, 26, 130, 133, 159, 190, 481, 484, 499, 509], "temporari": [12, 165, 511], "suffix": [12, 168, 442, 451], "filename_little_endian": 12, "namedtemporaryfil": [12, 17], "filename_big_endian": 12, "popul": [12, 51, 515], "mediastoragesopclassuid": [12, 511], "mediastoragesopinstanceuid": 12, "implementationclassuid": 12, "initi": [12, 36, 40, 130, 131, 132, 172, 173, 199, 214, 215, 451, 507], "preambl": [12, 130, 156, 161, 177, 190, 197, 484, 493, 509], "try": [12, 36, 94, 95, 484, 488, 496, 509, 511], "is_little_endian": [12, 14, 41, 128, 129, 130, 140, 142, 154, 157, 162, 163, 170, 172, 173, 174, 175, 176, 177, 214, 418, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 472, 473], "is_implicit_vr": [12, 41, 128, 129, 130, 154, 155, 157, 162, 163, 177, 418, 465, 484, 496], "dt": [12, 29, 57, 62, 90, 460, 472, 484, 493, 502], "now": [12, 20, 177, 484, 486, 487, 490, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 511, 516], "contentd": 12, "strftime": 12, "y": [12, 36, 214], "m": [12, 22, 451, 507, 508, 511, 513, 514, 516], "timestr": 12, "long": [12, 29, 153, 173, 177, 473, 484, 504, 509], "micro": 12, "contenttim": 12, "save_a": [12, 17, 24, 26, 40, 41, 46, 48, 49, 129, 177, 484, 486, 499, 509, 514, 516], "shouldn": 12, "need": [12, 25, 26, 27, 33, 34, 36, 38, 39, 42, 43, 46, 50, 51, 74, 76, 90, 95, 129, 153, 154, 160, 471, 474, 484, 487, 502, 507, 508, 509, 510, 511, 513, 514, 516], "9": [12, 20, 23, 26, 27, 33, 38, 49, 50, 78, 168, 169, 200, 224, 225, 229, 231, 240, 269, 270, 288, 289, 296, 348, 369, 370, 379, 394, 397, 405, 417, 431, 494, 497, 500, 505, 516], "bug": [12, 40, 488, 492, 496, 499, 502, 506, 507, 513], "recogn": 12, "transfersyntaxuid": [12, 41, 42, 129, 165, 177, 484, 486, 493, 509, 514], "explicitvrbigendian": 12, "reopen": 12, "plot_write_dicom": [12, 13], "310": [13, 22], "auto_examples_input_output": 13, "output": [13, 20, 24, 26, 27, 36, 42, 49, 51, 202, 203, 214, 484, 497, 499, 507, 508, 509, 511], "byte": [14, 24, 26, 29, 30, 31, 38, 41, 48, 49, 50, 51, 74, 75, 76, 86, 87, 109, 126, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 152, 153, 155, 156, 157, 158, 159, 161, 171, 172, 173, 174, 175, 176, 177, 182, 183, 187, 190, 198, 200, 214, 451, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 484, 495, 496, 497, 502, 505, 509, 511, 514, 516], "help": [14, 24, 25, 26, 27, 28, 39, 43, 157, 484, 487, 495, 502, 504, 506, 507, 508], "blob": 14, "databas": 14, "io": [14, 130, 481, 509], "bytesio": [14, 130, 152, 509], "dcmwrite": [14, 46, 67, 129, 484, 493, 499, 500, 502, 505, 509], "filebas": [14, 67, 140, 142, 145, 481], "dicomfilelik": [14, 67, 130, 140, 142, 145, 151, 156, 484, 486], "memory_dataset": [14, 21], "write_dataset_to_byt": 14, "buffer": [14, 130, 210], "rewind": [14, 161, 171, 172, 173, 484, 491], "seek": [14, 152, 156, 484, 486, 496], "adapt_dataset_from_byt": 14, "interest": [14, 48, 506, 509], "stuff": 14, "bond": 14, "jame": 14, "007": 14, "dummydatabas": 14, "__init__": [14, 126, 128, 129, 130, 131, 132, 147, 150, 152, 153, 165, 166, 167, 199, 215, 217, 418, 443, 445, 446, 447, 448, 449, 451, 452, 453], "self": [14, 418, 509, 514], "_blob": 14, "file_path": [14, 197], "db": 14, "convert": [14, 31, 33, 34, 42, 49, 73, 74, 76, 82, 85, 87, 90, 94, 95, 127, 129, 147, 166, 199, 200, 207, 208, 209, 210, 211, 212, 213, 214, 476, 484, 487, 490, 493, 496, 497, 500, 501, 502, 508, 509, 516], "ds_byte": 14, "read_byt": 14, "read_dataset": [14, 67, 160], "_new": 14, "dynam": [16, 20], "recommend": [16, 23, 25, 26, 38, 39, 41, 90, 136, 137, 147, 166, 214, 509, 511, 513, 514], "solut": 16, "demonstr": [16, 47, 484, 485], "hous": 16, "program": [16, 26, 27, 38, 40, 47, 484, 485, 490], "around": [16, 38, 507], "1001": [16, 20, 43, 129], "privat": [16, 17, 20, 24, 26, 27, 28, 38, 44, 51, 106, 107, 108, 109, 116, 117, 120, 121, 122, 124, 126, 127, 129, 132, 164, 165, 166, 190, 217, 418, 481, 484, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 499, 500, 502, 503, 504, 509, 511], "42": [16, 484, 487], "1002": [16, 20, 43, 509], "12345": [16, 38, 129], "1003": [16, 20], "datadict": [16, 481, 484, 493, 496, 509], "dicomdictionari": 16, "keyword_dict": 16, "defin": [16, 17, 20, 25, 26, 33, 34, 43, 48, 53, 126, 129, 132, 165, 166, 177, 201, 214, 450, 484, 490, 507, 509, 511, 516], "vm": [16, 29, 38, 59, 106, 107, 108, 109, 110, 116, 117, 120, 126, 484, 488, 496, 499, 509], "is_retir": [16, 106, 107, 108, 116, 117, 126, 418, 484, 493], "flag": [16, 20, 39, 93, 129, 161, 166, 171, 172, 173, 484, 499, 502, 511], "keyword": [16, 26, 27, 28, 36, 38, 49, 50, 81, 82, 89, 104, 106, 107, 115, 116, 118, 123, 125, 126, 129, 147, 156, 166, 200, 205, 207, 210, 212, 213, 214, 218, 418, 476, 484, 488, 490, 493, 495, 496, 500, 504, 505, 508, 509, 511, 515], "blank": [16, 17, 107, 199, 444, 484, 486, 509], "new_dict_item": [16, 106, 108], "0x10011001": 16, "One": [16, 36, 40, 43, 48, 51, 106, 107, 108, 126, 129, 201, 207, 214, 507, 508], "teston": [16, 106, 107], "0x10011002": 16, "two": [16, 20, 25, 26, 28, 36, 38, 39, 42, 43, 46, 86, 94, 106, 107, 108, 129, 138, 153, 166, 214, 451, 484, 491, 509, 510, 516], "testtwo": [16, 106, 107], "0x10011003": 16, "three": [16, 31, 36, 108, 451, 509, 511], "testthre": 16, "revers": [16, 167, 484, 497], "map": [16, 49, 126, 129, 164, 508], "new_names_dict": 16, "dict": [16, 31, 38, 89, 94, 106, 108, 126, 129, 130, 131, 147, 164, 166, 200, 214, 484, 487, 502, 504], "val": [16, 153, 178, 199, 215, 418, 444, 445, 446, 448, 449, 450, 451, 454, 509], "etc": [16, 17, 18, 36, 38, 40, 47, 49, 126, 129, 200, 484, 485, 491, 502, 507, 511, 514], "001": [16, 18, 19, 43], "plot_add_dict_entri": [16, 19], "point": [17, 24, 25, 26, 27, 28, 29, 47, 51, 174, 210, 214, 454, 484, 486, 491, 502, 507, 509, 515], "It": [17, 26, 27, 37, 38, 39, 40, 41, 46, 47, 49, 51, 129, 140, 166, 177, 484, 490, 491, 507, 508, 509, 510, 511, 513, 514, 516], "curv": [17, 516], "patientbirthd": [17, 38], "de": [17, 51], "callback": [17, 25, 26, 129, 484, 493], "function": [17, 20, 25, 26, 27, 31, 36, 37, 38, 39, 43, 46, 49, 50, 51, 52, 55, 56, 64, 67, 69, 71, 78, 88, 96, 100, 107, 108, 126, 129, 140, 147, 154, 157, 159, 160, 164, 166, 175, 176, 197, 199, 200, 201, 208, 209, 210, 211, 212, 213, 214, 218, 444, 454, 476, 477, 481, 482, 484, 485, 486, 487, 492, 493, 495, 496, 497, 500, 502, 505, 508, 509, 510, 511, 514, 516], "insid": [17, 484, 486], "person_names_callback": 17, "curves_callback": 17, "0xff00": 17, "0x5000": 17, "del": [17, 18, 38, 43, 129, 509], "walk": [17, 129], "allow": [17, 24, 26, 27, 31, 34, 38, 39, 43, 48, 53, 85, 129, 131, 164, 166, 214, 449, 484, 486, 487, 496, 499, 500, 502, 503, 504, 513], "remove_private_tag": [17, 43, 129], "method": [17, 23, 31, 34, 38, 41, 42, 46, 47, 48, 50, 94, 95, 98, 126, 128, 129, 130, 131, 132, 136, 137, 146, 147, 150, 152, 153, 156, 164, 165, 166, 167, 199, 215, 217, 418, 443, 445, 446, 447, 448, 449, 451, 452, 484, 487, 490, 493, 495, 502, 504, 509, 510, 511, 514, 515], "easili": [17, 484, 485, 487], "delet": [17, 51, 129, 484, 499, 507, 508], "delattr": 17, "otherpatientid": [17, 484, 486], "otherpatientidssequ": [17, 509], "For": [17, 24, 26, 27, 31, 33, 34, 36, 38, 39, 41, 48, 49, 51, 118, 126, 129, 136, 139, 140, 142, 147, 164, 166, 177, 200, 214, 451, 484, 490, 500, 505, 507, 508, 509, 511, 513, 514], "possibl": [17, 34, 38, 39, 45, 49, 90, 126, 129, 164, 175, 176, 213, 214, 454, 484, 493, 495, 496, 497, 502, 510, 511, 515], "assign": [17, 38, 126, 484, 490, 497, 503], "19000101": 17, "output_filenam": 17, "008": [17, 19], "plot_anonym": [17, 19], "block": [18, 20, 26, 27, 28, 43, 129, 132, 484, 499, 508], "300a": [18, 26, 27, 28, 40], "00f8": 18, "apertur": 18, "00fe": 18, "block1": 18, "block2": 18, "toi": 18, "block_ds1": 18, "blocktyp": 18, "blocknam": 18, "block_ds2": 18, "should": [18, 25, 26, 27, 29, 31, 33, 34, 36, 38, 39, 40, 43, 48, 49, 51, 126, 129, 139, 140, 141, 142, 147, 156, 161, 164, 166, 168, 177, 190, 199, 207, 208, 209, 210, 211, 212, 213, 214, 442, 470, 484, 486, 487, 494, 495, 500, 507, 508, 509, 511, 512, 514, 516], "like": [18, 25, 26, 38, 39, 43, 48, 51, 69, 71, 82, 109, 130, 145, 152, 154, 156, 157, 158, 160, 161, 171, 173, 174, 177, 190, 192, 193, 194, 215, 484, 487, 497, 500, 503, 508, 509, 510, 511], "plan_d": 18, "sinc": [18, 34, 43, 94, 129, 215, 484, 504, 507, 511, 516], "did": [18, 484, 485, 505], "blocksequ": 18, "numberofblock": 18, "beam0": 18, "block_ds3": 18, "abov": [18, 24, 25, 26, 27, 28, 38, 43, 48, 51, 126, 129, 200, 484, 494, 508, 511], "forget": [18, 51], "plot_sequ": [18, 19], "010": 19, "auto_examples_metadata_process": 19, "192": [20, 26, 28, 43, 509], "20040119072730": [20, 26, 28, 43, 509, 511], "12322": [20, 26, 28, 43, 509, 511], "0005": [20, 26, 28, 43, 73, 74, 75, 76, 129, 156, 157, 476, 484, 485, 509, 510, 511], "primari": [20, 26, 28, 43, 509], "072731": [20, 26, 28, 509], "19970430": 20, "072730": [20, 26, 28], "112749": 20, "112936": 20, "113008": 20, "ge": 20, "medic": [20, 36, 40, 42, 511], "system": [20, 24, 26, 27, 28, 39, 47, 166, 214, 484, 505, 509, 511, 513, 516], "jfk": 20, "0500": 20, "ct01_oc0": 20, "e": [20, 24, 26, 27, 28, 31, 36, 38, 39, 40, 48, 49, 53, 82, 94, 126, 129, 132, 147, 156, 162, 163, 166, 167, 168, 177, 199, 200, 214, 215, 445, 450, 451, 484, 487, 494, 496, 500, 505, 507, 508, 509, 513], "rhapsod": 20, "0009": [20, 43, 49, 129, 210, 214, 484, 497], "gems_iden_01": [20, 43], "fidel": [20, 43], "ge_genesis_ff": [20, 43], "suit": [20, 43, 484, 504], "ct01": [20, 43], "1004": [20, 476, 484, 497], "product": 20, "hispe": 20, "1027": 20, "sl": [20, 26, 28, 29, 476], "862399669": 20, "servic": [20, 511], "1031": 20, "mobil": 20, "10e6": 20, "genesi": 20, "05": [20, 508], "10e7": 20, "exam": 20, "checksum": 20, "973283917": 20, "10e9": 20, "stamp": 20, "abcd1234": [20, 509], "1234abcd": [20, 509], "ag": [20, 29], "AS": [20, 29, 472], "000y": 20, "21b0": 20, "addit": [20, 26, 27, 28, 31, 73, 129, 165, 166, 451, 492, 500, 502, 510, 511, 513, 514], "histori": 20, "gems_pati_01": 20, "statu": [20, 114, 126], "isovue300": 20, "helic": 20, "kvp": 20, "0088": 20, "collect": [20, 53, 131, 157, 511], "diamet": 20, "480": 20, "rout": 20, "iv": 20, "1100": 20, "reconstruct": 20, "338": 20, "6716": 20, "1110": 20, "distanc": 20, "detector": 20, "1099": 20, "3100585938": 20, "1111": 20, "630": 20, "1120": 20, "tilt": 20, "tabl": [20, 23, 29, 33, 41, 49, 126, 129, 136, 137, 139, 140, 141, 142, 177, 190, 200, 201, 202, 203, 204, 205, 210, 212, 213, 214, 476, 484, 497, 500, 508, 509, 511, 513, 514], "height": 20, "133": [20, 161], "699997": 20, "1150": 20, "exposur": 20, "1601": 20, "1151": 20, "rai": [20, 26, 28, 509], "tube": 20, "current": [20, 24, 26, 28, 34, 36, 39, 41, 93, 126, 129, 166, 167, 175, 176, 183, 201, 207, 214, 451, 484, 502, 508, 511, 513, 514], "170": 20, "1152": 20, "1160": 20, "filter": [20, 26, 27, 129], "larg": [20, 41, 43, 51, 129, 132, 136, 137, 157, 174, 444, 484, 486, 487, 494, 496, 497, 500, 502, 514, 516], "bowti": 20, "fil": 20, "1190": [20, 484, 500], "focal": 20, "spot": 20, "1210": 20, "convolut": 20, "kernel": 20, "ff": [20, 142], "0019": 20, "gems_acqu_01": 20, "912": [20, 484, 497], "cell": 20, "theta": 20, "373": [20, 22], "75": [20, 26, 27, 50, 363], "0166": 20, "100f": 20, "horiz": 20, "ref": 20, "955": [20, 38], "799988": 20, "1011": 20, "1013": [20, 484, 497], "baselin": [20, 42, 49, 139, 214, 418, 484, 504, 516], "1014": [20, 484, 500], "1015": 20, "enhanc": [20, 201, 214, 487], "1016": [20, 484, 497], "1017": 20, "1018": 20, "ra": 20, "1019": [20, 49], "79187": 20, "101a": 20, "last": [20, 26, 28, 36, 38, 40, 43, 82, 94, 95, 138, 140, 484, 490, 503, 509, 511, 514], "101b": 20, "loc": 20, "320": [20, 49], "197968": 20, "101e": 20, "1023": 20, "speed": [20, 484, 487, 491, 495, 502, 504], "mm": [20, 23], "rotat": 20, "1024": [20, 126, 129, 484, 498, 510, 514], "mid": [20, 26, 28, 38, 40], "sec": 20, "17": [20, 50, 384], "784578": 20, "1025": 20, "1026": 20, "azimuth": 20, "degre": 20, "msec": 20, "102a": 20, "On": [20, 34, 174, 451, 510], "178": 20, "079926": 20, "102b": 20, "off": [20, 26, 27, 39, 91, 157, 484, 491, 499, 508], "3994": 20, "299316": 20, "102c": 20, "trigger": [20, 26, 28], "10431": 20, "102e": 20, "718": 20, "079956": 20, "102f": 20, "984": 20, "1039": [20, 511], "sfov": 20, "stat": [20, 158], "recon": 20, "comput": 20, "1042": [20, 484, 499], "segment": [20, 201, 213, 214, 484, 495, 502], "1043": 20, "1044": 20, "interscan": 20, "delai": [20, 26, 28], "1047": [20, 484, 499], "compress": [20, 23, 31, 33, 34, 37, 40, 44, 49, 65, 129, 136, 137, 139, 140, 147, 177, 214, 418, 484, 493, 495, 497, 502, 503, 505, 512, 513], "factor": [20, 50, 484, 491, 514, 516], "104a": 20, "104b": [20, 26, 28], "1052": [20, 202, 203, 214], "post": [20, 484, 499], "proc": 20, "1057": 20, "water": [20, 451], "95": [20, 484, 490, 493], "1058": 20, "bone": [20, 47], "105e": 20, "763": 20, "105f": 20, "increment": [20, 168], "1969": 20, "1061": 20, "1576": 20, "1062": 20, "106a": 20, "depend": [20, 31, 34, 41, 42, 49, 51, 94, 95, 126, 129, 147, 166, 177, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 472, 476, 484, 495, 496, 503, 508, 510, 511, 513, 516], "process": [20, 25, 26, 31, 42, 139, 207, 214, 418, 444, 484, 487, 499, 502, 504, 507, 508, 516], "106b": 20, "852": [20, 484, 496], "1071": 20, "fatq": 20, "estim": 20, "were": [20, 26, 28, 129, 484, 490, 492, 507, 508, 516], "1072": 20, "z": [20, 86, 168, 169, 484, 505], "chan": 20, "avg": 20, "1073": [20, 484, 499], "1074": 20, "max": [20, 202, 203, 214], "1075": [20, 484, 499], "1076": 20, "10da": 20, "10db": 20, "projector": 20, "coeffici": [20, 26, 27], "10dc": 20, "10dd": 20, "overrang": 20, "10de": 20, "alpha": [20, 201, 214, 484, 496, 497, 515], "158": 20, "135803": 20, "179": 20, "035797": 20, "sn": 20, "gems_rela_01": 20, "prescrib": 20, "1005": 20, "1007": 20, "1605775145": 20, "unknown": [20, 29, 82, 126, 127, 129, 140, 187, 484, 489, 494, 496, 500, 502, 509, 515], "24078": 20, "acq": 20, "750675506": 20, "1037": 20, "screen": [20, 24, 26], "anatom": 20, "7400": 20, "1091": 20, "biopsi": 20, "1092": 20, "fl": [20, 26, 28, 29, 509], "1093": [20, 484, 500], "gems_stdy_01": 20, "fd": [20, 29], "862399761": 20, "111079": 20, "No": [20, 169, 463, 506], "header": [20, 149, 156, 161, 484, 486, 509], "107d": 20, "complet": [20, 24, 26, 31, 51, 129, 174, 484, 485, 507, 511, 513], "0025": 20, "gems_sers_01": 20, "1006": [20, 476, 484, 497], "puls": 20, "44": [20, 297], "landmark": 20, "counter": 20, "archiv": 20, "receiv": [20, 190], "host": 20, "0027": 20, "gems_imag_01": 20, "101c": 20, "vma": 20, "mamp": 20, "101d": 20, "phase": 20, "mod": 20, "24": 20, "101f": 20, "clip": 20, "129": [20, 514], "smart": 20, "ON": 20, "foreign": [20, 484, 485], "revis": [20, 484, 488, 490, 491], "1035": 20, "letter": [20, 38], "20406341552734": 20, "r": [20, 34, 126, 129, 510], "coord": 20, "199999809265137": 20, "699999809265137": 20, "69999694824219": 20, "1045": 20, "1046": 20, "1048": 20, "corner": 20, "180": [20, 38], "53579711914062": 20, "1049": [20, 484, 499], "03579711914062": 20, "104c": [20, 26, 28], "159": [20, 484, 497], "63580322265625": 20, "104d": [20, 26, 28], "19999694824219": 20, "116": [20, 26, 27, 28, 50], "20304870605469": 20, "l": [20, 23, 42, 139, 214, 313, 484, 495, 513], "1053": [20, 202, 203, 214, 484, 499], "anterior": 20, "posterior": 20, "1054": 20, "1055": 20, "0120": 20, "rescal": [20, 44, 202, 203, 205, 206, 214], "intercept": [20, 38, 202, 203, 214], "slope": [20, 202, 203, 214], "0029": 20, "gems_imps_01": 20, "lower": [20, 129, 132, 166, 511, 515], "rang": [20, 31, 34, 48, 90, 147, 202, 203, 214, 484, 495, 497, 509], "pixels1": 20, "87": 20, "1008": 20, "1009": 20, "100a": 20, "764": 20, "hdr": 20, "struct": [20, 192, 470], "1034": 20, "advantag": [20, 484, 491], "overflow": 20, "underflow": 20, "0043": [20, 26, 28, 509], "gems_parm_01": 20, "400": [20, 49], "input": [20, 24, 26, 49, 199, 207, 214, 451, 484, 500], "1012": 20, "chain": 20, "14": [20, 42, 139, 302, 303, 415, 484, 499], "decon": 20, "paramet": [20, 24, 26, 31, 36, 49, 50, 51, 73, 74, 75, 76, 78, 79, 91, 93, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 154, 156, 157, 158, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 190, 192, 193, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 442, 445, 446, 449, 450, 451, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 484, 490, 492, 494, 500, 502, 503, 509, 511], "107": [20, 223, 294, 337, 484, 491], "21": [20, 50, 385], "20": [20, 50, 214, 350, 396, 484, 502], "calibr": 20, "ibh": 20, "scale": 20, "bbh": 20, "085000": 20, "102000": 20, "095000": 20, "blend": 20, "350": 20, "ppscan": 20, "integr": 20, "level": [20, 26, 27, 28, 35, 36, 129, 157, 166, 167, 484, 490, 502, 505, 508, 509, 510, 511], "40": [20, 50, 366, 484, 502], "1021": 20, "glow": 20, "term": [20, 49, 200, 214], "748": 20, "749": 20, "750": 20, "pitch": 20, "ratio": [20, 33], "1028": 20, "uniqu": [20, 29, 31, 43, 147, 166, 167, 168, 186, 484, 493, 504, 509, 511], "iden": 20, "1029": [20, 484, 498], "histogram": 20, "2068": 20, "user": [20, 31, 38, 40, 45, 46, 47, 76, 85, 129, 147, 154, 159, 177, 484, 487, 490, 496, 497, 500, 505, 507, 509, 511], "coordin": [20, 26, 27, 38], "200000": 20, "700000": 20, "07992553710938": 20, "3816": 20, "219482421875": 20, "fpa": 20, "gain": 20, "ad": [20, 25, 26, 27, 33, 36, 38, 88, 104, 129, 132, 133, 148, 164, 166, 167, 177, 190, 199, 205, 207, 210, 212, 214, 215, 218, 459, 461, 484, 485, 486, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 510, 515], "cal": 20, "reg": 20, "xm": [20, 26, 28], "auto": [20, 129, 484, 485], "pattern": [20, 26, 28, 102, 103, 105], "tggc": [20, 26, 28], "104e": [20, 26, 28, 509], "durat": [20, 26, 28, 509], "60060977935791": [20, 26, 28, 509], "8192": [20, 174], "32768": [20, 26, 28, 509], "difflib": 20, "filename_mr": 20, "filename_ct": 20, "tupl": [20, 31, 38, 41, 82, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 126, 129, 132, 137, 139, 142, 147, 153, 156, 199, 215, 218, 219, 451, 484, 487, 496, 514], "forc": [20, 129, 149, 156, 160, 161, 166, 484, 488, 490, 492, 509], "compar": [20, 53, 484, 491, 494, 502, 507, 508], "termin": [20, 26, 27, 28, 39, 140, 157, 170], "newlin": [20, 509], "massag": 20, "form": [20, 34, 48, 49, 50, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 126, 129, 130, 218, 442, 451], "rep": 20, "split": [20, 450, 484, 485, 486], "diff": [20, 507], "097": [20, 21], "plot_dicom_differ": [20, 21], "auto_exampl": 21, "show_charset_nam": [21, 22], "veri": [22, 29, 45, 484, 487, 507, 511, 514], "simpl": [22, 38, 40, 47, 484, 485], "app": 22, "valuerep": [22, 57, 458, 460, 464, 466, 481], "personnam": [22, 29, 57, 126, 464, 484, 485, 496, 499, 500, 502, 505], "default_encod": [22, 451], "iso8859": [22, 154, 157, 189, 465], "person_nam": 22, "2008": [22, 451], "ps3": [22, 451], "p98": 22, "yamada": 22, "tarou": 22, "033": 22, "3ed": 22, "bb": 22, "iso2022_jp": 22, "j": 22, "105": [22, 50, 223, 333, 334, 337], "wang": 22, "xiaodong": 22, "xcd": 22, "xf5": 22, "x5e": 22, "xd0": 22, "xa1": 22, "xb6": 22, "xab": 22, "gb18030": 22, "104": [22, 223, 271, 272, 273, 274, 275, 331, 332, 337], "xe7": 22, "x8e": 22, "x8b": 22, "xe5": 22, "xb0": 22, "x8f": 22, "xe6": 22, "x9d": 22, "xb1": 22, "utf": 22, "101": [22, 223, 323, 324, 337], "hong": [22, 451], "gildong": [22, 451], "363": 22, "321": 22, "316": 22, "324": 22, "327": 22, "253": 22, "261": 22, "346": [22, 484, 493], "265": 22, "277": [22, 484, 497], "euc_kr": [22, 451], "label": [22, 26, 28, 31, 47, 147], "easiest": [23, 514], "probabl": [23, 51, 511], "zenodo": 23, "doi": 23, "enter": 23, "citat": 23, "style": [23, 484, 486, 489], "along": [23, 166], "et": 23, "al": 23, "github": [23, 484, 493, 506, 507, 508, 513], "onlin": 23, "yyyi": 23, "dd": 23, "deal": [23, 39, 48, 213, 484, 486, 495, 509], "jpeg": [23, 34, 40, 41, 42, 49, 77, 136, 137, 139, 208, 209, 210, 211, 212, 213, 214, 308, 313, 316, 418, 484, 495, 497, 499, 500, 502, 513, 514], "releas": [23, 481, 493, 497, 500], "march": 23, "2018": [23, 508], "june": 23, "octob": 23, "juli": 23, "2019": 23, "januari": 23, "2020": [23, 45], "mai": [23, 24, 26, 27, 30, 31, 34, 39, 42, 43, 45, 47, 48, 49, 51, 75, 93, 97, 129, 136, 137, 138, 139, 140, 141, 142, 147, 166, 177, 190, 213, 451, 467, 469, 484, 497, 507, 508, 509, 511, 513, 514, 516], "novemb": 23, "august": 23, "2021": [23, 484, 504], "2022": 23, "2023": [23, 481], "jan": [23, 81, 509], "2024": 23, "recreat": [24, 26, 484, 492], "within": [24, 26, 27, 28, 31, 77, 86, 129, 156, 157, 165, 166, 177, 220, 465, 484, 500, 511, 513, 516], "detail": [24, 26, 34, 38, 39, 40, 49, 51, 91, 126, 129, 157, 220, 449, 481, 484, 502, 505, 507, 508], "review": [24, 26, 506, 507, 508], "more": [24, 26, 27, 29, 31, 34, 36, 38, 39, 40, 41, 42, 43, 48, 49, 50, 97, 126, 129, 136, 138, 139, 140, 142, 147, 157, 160, 166, 169, 174, 177, 178, 192, 214, 451, 454, 484, 485, 486, 487, 489, 490, 497, 507, 508, 509, 510, 511, 513, 514, 516], "than": [24, 25, 26, 27, 28, 29, 33, 34, 36, 41, 42, 48, 51, 53, 126, 129, 138, 139, 140, 142, 156, 160, 166, 169, 177, 178, 192, 199, 214, 442, 484, 485, 486, 487, 492, 493, 494, 497, 499, 502, 505, 509, 510], "export": [24, 26, 39, 484, 502], "includ": [24, 25, 26, 39, 48, 51, 126, 129, 136, 164, 166, 177, 200, 214, 220, 481, 484, 486, 488, 490, 492, 493, 507, 508, 509, 511, 514, 516], "health": [24, 26, 51], "sensit": [24, 26, 50, 51, 129, 476, 516], "git": [24, 26, 27, 507, 508, 513], "util": [24, 26, 49, 51, 60, 61, 62, 65, 67, 481, 484, 485, 492, 493, 505], "main": [24, 25, 26, 37, 38, 46, 51, 116, 484, 487, 507, 508, 509, 513], "instancecreationd": [24, 26], "20030903": [24, 26, 27, 38], "instancecreationtim": [24, 26], "150031": [24, 26, 27, 38], "481": [24, 26, 235, 236, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 395, 396, 414, 415], "sopinstanceuid": [24, 26, 33, 165], "777": [24, 26, 27, 38], "7777": [24, 26, 27, 38], "20030903150023": [24, 26, 27, 38], "20030716": [24, 26, 27, 28, 38], "153557": [24, 26, 28, 38], "prefix": [24, 26, 27, 28, 36, 149, 156, 161, 168, 177, 190, 370, 442, 451, 484, 496, 507, 508, 509, 515], "rather": [24, 26, 27, 28, 48, 51, 126, 129, 166, 177, 199, 484, 485, 486, 493, 497, 499, 502, 505, 509], "In": [24, 25, 26, 27, 31, 36, 38, 41, 49, 51, 73, 166, 215, 484, 492, 498, 500, 504, 507, 508, 509, 511, 514], "wa": [24, 25, 26, 34, 36, 126, 129, 130, 166, 171, 177, 459, 461, 484, 487, 494, 497, 502, 507, 508, 511, 514], "direct": [24, 26, 38, 214, 508, 510, 511], "specifi": [24, 25, 26, 27, 28, 38, 107, 109, 126, 129, 147, 156, 157, 177, 451, 476, 484, 497, 502, 509, 511, 513], "exclude_s": [24, 26], "filespec": [24, 25, 26, 27, 28], "outfil": [24, 26, 509], "argument": [24, 25, 26, 27, 28, 36, 38, 41, 89, 129, 131, 198, 484, 486, 487, 495, 496, 497, 498, 499, 500, 510, 511, 514], "If": [24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 46, 49, 50, 51, 53, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 91, 94, 95, 98, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 129, 131, 132, 133, 136, 139, 140, 142, 147, 153, 154, 156, 157, 158, 161, 165, 166, 167, 168, 174, 175, 176, 177, 190, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 442, 445, 446, 451, 454, 458, 459, 460, 461, 466, 470, 473, 476, 484, 490, 502, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516], "your_fil": [24, 26, 27, 28], "yourplan": [24, 26, 27, 28], "stdout": [24, 26], "messag": [24, 26, 27, 28, 91, 220, 484, 487, 496, 504, 507, 509, 511], "exclud": [24, 26, 27, 28, 51, 129, 200, 214], "binari": [24, 26, 126, 129, 214, 484, 488, 496, 497], "larger": [24, 26, 156, 513, 514], "save_filenam": [24, 26], "otherwis": [24, 26, 31, 34, 38, 85, 94, 95, 113, 114, 118, 119, 123, 124, 125, 126, 129, 130, 136, 147, 154, 166, 168, 169, 172, 173, 197, 204, 205, 206, 214, 418, 451, 455, 456, 457, 458, 459, 460, 461, 465, 466, 467, 469, 470, 472, 473], "_from_codifi": [24, 26], "dummi": [24, 26], "error": [24, 26, 51, 53, 73, 83, 84, 93, 126, 129, 131, 450, 454, 481, 484, 487, 488, 491, 493, 494, 495, 496, 497, 499, 500, 504, 505, 507, 509], "savenam": [24, 26], "dicomfil": [24, 26, 67], "pythoncod": [24, 26], "By": [24, 26, 49, 164, 166, 449, 484, 488, 509], "translat": [24, 26, 38, 484, 493], "whole": [24, 26, 154, 200, 214, 514], "fractiongroupsequ": [24, 26, 27, 28], "non": [24, 26, 29, 38, 39, 106, 107, 108, 109, 124, 126, 127, 129, 133, 139, 164, 166, 177, 190, 213, 214, 223, 449, 454, 456, 459, 461, 467, 469, 484, 488, 489, 493, 494, 495, 496, 497, 500, 504, 509], "fractiongroupnumb": [24, 26], "numberoffractionsplan": [24, 26], "numberofbeam": [24, 26], "numberofbrachyapplicationsetup": [24, 26], "referenc": [24, 26, 27, 28, 36, 38, 159, 165, 166, 511], "refd_beam_sequ": [24, 26], "referencedbeamsequ": [24, 26], "refd_beam1": [24, 26], "beamdosespecificationpoint": [24, 26], "239": [24, 26, 27, 28, 38], "531250000000": [24, 26, 27, 28], "751": [24, 26, 27, 28], "87000000000": [24, 26, 27, 28], "accept": [24, 26, 29, 39, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 126, 129, 131, 142, 484, 499, 500, 502, 504, 507], "issu": [24, 26, 28, 40, 45, 51, 53, 73, 74, 76, 84, 214, 484, 487, 488, 489, 490, 491, 496, 505, 506, 507], "toward": [24, 26], "loop": [24, 26, 51], "develop": [25, 26, 27, 39, 484, 493], "subcommand": [25, 26, 27, 484, 502], "entri": [25, 26, 27, 38, 49, 106, 107, 108, 109, 116, 117, 484, 486, 503, 507, 508], "packag": [25, 26, 27, 40, 42, 44, 46, 47, 94, 200, 208, 209, 210, 211, 212, 213, 476, 484, 485, 488, 493, 500, 502, 509, 511, 513], "setup": [25, 26, 27, 28, 40, 484, 491, 492, 504], "regist": [25, 26, 126, 418, 484, 500, 509], "command1": [25, 26], "command2": [25, 26], "setuptool": [25, 26, 484, 485, 492, 502], "yourpackag": [25, 26], "variou": [25, 26, 484, 485], "entry_point": [25, 26], "pydicom_subcommand": [25, 26], "command1modul": [25, 26], "add_subpars": [25, 26], "command2modul": [25, 26], "liter": [25, 26], "must": [25, 26, 31, 33, 34, 38, 39, 41, 48, 49, 82, 85, 129, 132, 136, 137, 142, 156, 164, 166, 169, 171, 173, 177, 199, 200, 201, 205, 206, 214, 455, 473, 484, 502, 509, 510, 511, 514, 516], "wish": [25, 26, 39, 214], "usual": [25, 26, 27, 28, 33, 38, 43, 49, 107, 130, 149, 154, 484, 487, 507, 509, 513, 514], "convent": [25, 26, 38, 451], "singl": [25, 26, 29, 31, 33, 36, 75, 106, 108, 126, 129, 136, 138, 140, 142, 145, 147, 163, 164, 166, 195, 196, 199, 200, 212, 214, 461, 470, 484, 485, 495, 503, 507, 510, 511], "subpars": [25, 26], "do_command": [25, 26], "filespec_help": [25, 26], "filespec_pars": [25, 26], "sub": [25, 26], "parser": [25, 26], "add_pars": [25, 26], "subcommandnam": [25, 26], "add_argu": [25, 26], "set_default": [25, 26], "func": [25, 26, 508], "And": [25, 26, 27, 28, 94, 484, 500, 507, 508, 509, 516], "arg": [25, 26, 129, 131, 149, 150, 151, 152, 153, 218, 443, 447, 451, 452, 484, 488], "element_v": [25, 26], "yourarg": [25, 26], "argpars": [25, 26], "snippet": [25, 26], "element_valu": [25, 26], "pair": [25, 26, 131, 166], "codifi": [25, 27, 44, 484, 492, 494, 502, 504, 505], "filetyp": [25, 26], "yourself": [25, 26, 48, 49], "shown": [25, 26, 28, 38, 43, 51, 53, 214, 484, 485, 486, 499, 509, 511], "relat": [25, 26, 27, 34, 39, 48, 50, 56, 129, 132, 177, 200, 210, 212, 213, 476, 484, 485, 507, 511, 516], "think": [25, 26], "consid": [25, 26, 45, 51, 129, 214, 507, 508, 510], "contribut": [25, 26, 484, 487, 490, 491, 512], "case": [25, 26, 38, 39, 41, 45, 51, 53, 73, 75, 81, 129, 157, 451, 484, 496, 500, 505, 509, 510, 514, 516], "under": [25, 26, 38, 136, 137, 484, 485, 487, 493, 507, 508, 513], "pull": [25, 26, 28, 506, 513], "request": [25, 26, 28, 38, 484, 500, 502, 506], "v2": [26, 27, 33, 45, 484, 500, 513, 516], "offer": [26, 27, 41, 49, 129, 514], "explor": [26, 27, 43], "156": [26, 27, 38], "rt": [26, 27, 28, 38, 164, 166, 511], "plan": [26, 27, 28, 38, 40, 45, 164], "999": [26, 27, 38, 484, 497], "99": [26, 27, 38, 42, 210, 223, 258, 421], "9999": [26, 27, 38, 508], "implicit": [26, 27, 38, 42, 86, 129, 130, 154, 157, 166, 177, 210, 418, 465, 484, 487, 494, 496, 502, 514], "888": [26, 27, 38], "88": [26, 27, 38, 221, 228, 241, 242, 246, 247, 280, 284, 287, 299, 318, 341, 362, 363, 364, 366, 391, 404, 440, 484, 488], "replic": [26, 27], "exactli": [26, 27, 48, 50, 509], "notat": [26, 27, 28, 454, 509], "0071": [26, 27, 28], "fraction": [26, 27, 28], "0078": [26, 27, 28], "00a0": [26, 27, 28], "brachi": [26, 27, 28], "300c": [26, 27, 28], "0082": [26, 27, 28], "dose": [26, 27, 28, 164, 166, 484, 490, 511], "0275401": [26, 27, 28], "meterset": [26, 27, 28], "0036697": [26, 27, 28], "0006": [26, 27, 28, 34, 129, 210, 212, 213, 214], "simpli": [26, 27, 38, 48], "particular": [26, 27, 38, 41, 48, 49, 86, 159, 484, 487, 497, 509, 515], "q": [26, 27, 28, 507], "quiet": [26, 27, 28], "automat": [26, 27, 36, 38, 41, 43, 48, 49, 51, 95, 126, 166, 445, 446, 484, 493, 497, 499, 502, 507, 508, 509], "environ": [26, 27, 39, 484, 485, 500, 513], "variabl": [26, 27, 36, 37, 38, 39, 484, 496, 500, 504], "clone": [26, 27, 507, 508, 513], "repositori": [26, 27, 47, 104, 484, 505, 513], "repeat": [26, 27, 48, 116, 119, 123, 124, 166, 484, 495, 504, 509], "reinstal": [26, 27], "similar": [26, 27, 36, 130, 194, 484, 486, 490, 510, 515], "pipe": [26, 27], "grep": [26, 27], "either": [26, 27, 34, 38, 39, 46, 95, 126, 129, 156, 161, 166, 177, 200, 214, 218, 451, 458, 466, 484, 500, 508, 509, 511, 513, 514], "iso": [26, 27, 207, 214, 308, 313, 316, 484, 497], "741": [26, 27], "organ_at_risk": [26, 27], "deliveri": [26, 27], "maximum": [26, 27, 34, 51, 126, 136, 137, 147, 168, 484, 504, 505], "002c": [26, 27], "organ": [26, 27, 451], "risk": [26, 27], "ptv": [26, 27], "target": [26, 27, 36], "0026": [26, 27], "prescript": [26, 27], "826203": [26, 27], "00b0": [26, 27], "00b6": [26, 27], "0111": [26, 27], "control": [26, 27, 46, 81, 82, 99, 100, 484, 490, 511], "0115": [26, 27], "rate": [26, 27], "650": [26, 27], "011a": [26, 27], "010c": [26, 27], "cumul": [26, 27], "0051": [26, 27], "9990268": [26, 27], "0180": [26, 27], "regular": [26, 27, 38, 484, 504], "express": [26, 27], "abil": [26, 27, 49, 484, 492, 493, 500], "alreadi": [26, 28, 33, 35, 36, 41, 49, 73, 107, 129, 133, 140, 167, 171, 190, 199, 214, 444, 484, 492, 509, 511, 514, 516], "present": [26, 28, 48, 76, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 129, 130, 133, 139, 140, 141, 142, 147, 149, 156, 161, 164, 166, 167, 177, 190, 201, 202, 203, 204, 205, 206, 214, 484, 486, 494, 496, 497, 509, 516], "nest": [26, 28, 38, 129, 484, 491, 504], "minim": [26, 28, 177, 190], "below": [26, 28, 29, 33, 38, 41, 43, 167, 177, 200, 210, 212, 213, 214, 476, 484, 487, 511, 514, 515], "studyid": [26, 28], "bitsstor": [26, 28, 210, 212, 214], "pre": [26, 28, 38, 40, 484, 505, 507], "id00001": [26, 28], "study1": [26, 28], "plan1": [26, 28], "02754010000000": [26, 28], "003669700000": [26, 28], "treatment": [26, 28], "static": [26, 28, 131, 147], "photon": [26, 28], "energi": [26, 28], "00000000000000": [26, 28], "coll": [26, 28], "couch": [26, 28], "wedg": [26, 28], "boli": [26, 28], "alwai": [26, 28, 42, 49, 118, 126, 132, 156, 210, 214, 484, 496, 500, 502], "those": [26, 28, 31, 35, 39, 43, 484, 487, 490, 500, 509, 511], "extra": [26, 28, 38, 484, 505], "submit": [26, 28, 40, 484, 490, 506, 507, 508], "interfac": [27, 35, 484, 502, 513], "introduct": [28, 31, 37, 44, 507, 508, 511, 512, 516], "anyth": [29, 43, 48, 49, 153, 214], "ascii": [29, 169, 195, 484, 496], "decim": [29, 78, 99, 444, 445, 446, 448, 449, 454, 455, 484, 490, 491, 502], "sign": [29, 31, 34, 49, 77, 147, 484, 500, 507, 508, 516], "unsign": [29, 31, 34, 49, 142, 147, 153, 484, 500, 516], "integ": [29, 31, 34, 49, 142, 214, 442, 448, 449, 484, 488, 490, 500, 516], "depth": [29, 37, 47, 49, 167, 484, 497, 513], "even": [29, 43, 48, 136, 138, 140, 156, 161, 214, 484, 500, 509, 511, 514], "encod": [29, 34, 35, 37, 41, 42, 49, 50, 53, 73, 74, 75, 76, 126, 127, 129, 130, 136, 137, 138, 139, 140, 143, 144, 154, 157, 162, 163, 166, 177, 184, 188, 190, 192, 193, 194, 196, 213, 451, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 481, 484, 490, 493, 494, 495, 496, 497, 502, 503, 504, 509, 510, 514], "correctli": [29, 51, 94, 95, 166, 177, 208, 209, 484, 487, 490, 493, 494, 496, 497, 500, 502, 503, 504, 507], "empti": [29, 126, 129, 130, 139, 141, 142, 214, 215, 445, 446, 451, 470, 484, 485, 493, 496, 497, 498, 499, 500, 502, 509, 511, 516], "multivalu": [29, 57, 79, 195, 196, 215, 450, 457, 458, 459, 460, 461, 464, 472, 475, 484, 490], "accord": [29, 51, 156, 188, 509, 511], "od": [29, 484, 493, 494, 502], "OF": [29, 484, 499], "ol": [29, 484, 493, 494, 502], "st": [29, 40], "un": [29, 53, 87, 154, 187, 468, 484, 485, 497, 499, 502, 503, 509], "ur": [29, 469], "ut": 29, "never": [29, 78, 129, 507], "greater": [29, 34, 129, 138, 140, 214, 442, 484, 493, 510], "hint": 29, "union": 29, "mutablesequ": [29, 73, 127, 129, 154, 157, 162, 163, 450, 456, 457, 458, 459, 460, 461, 464, 466, 467, 470, 472, 474, 475], "AT": [29, 457, 484, 497, 502, 504], "attribut": [29, 43, 81, 94, 126, 128, 129, 130, 131, 146, 147, 150, 152, 153, 165, 166, 167, 177, 215, 217, 418, 443, 445, 446, 447, 448, 449, 451, 452, 453, 484, 485, 495, 500, 503, 504, 505, 509, 511], "basetag": [29, 38, 57, 82, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 126, 128, 129, 130, 131, 132, 153, 154, 156, 157, 160, 166, 170, 172, 173, 174, 218, 219, 220, 457, 473, 484, 487, 502], "dsfloat": [29, 57, 444, 459, 484, 502], "dsdecim": [29, 57, 85, 444, 459, 484, 502], "doubl": [29, 36, 49, 129, 210, 214, 484, 497], "ov": [29, 484, 497, 502], "word": [29, 36, 51, 107, 183, 451, 509], "short": [29, 153, 473, 507, 509], "sv": [29, 476, 484, 497], "uc": [29, 474, 484, 493], "unlimit": 29, "identifi": [29, 39, 43, 51, 186], "uri": [29, 129, 484, 500, 510], "url": [29, 36, 94], "uv": [29, 476, 484, 497], "config": [29, 39, 449, 472, 481, 484, 490, 495, 496, 497, 499, 500, 502], "datetime_convers": [29, 458, 460, 466, 481], "use_ds_decim": [29, 79, 459, 481, 484, 499], "rlelosslessencod": [30, 31, 33, 481, 484, 502, 505], "byteord": [30, 31, 516], "guid": [31, 36, 40, 129, 481, 484, 496, 502, 508, 509, 514], "cover": [31, 509, 511, 514, 516], "tutori": [31, 36, 484, 497, 506, 507, 508, 509, 511, 514, 516], "intend": [31, 33, 34, 129, 147, 507], "provid": [31, 37, 38, 43, 49, 94, 95, 126, 129, 147, 200, 210, 212, 213, 476, 484, 491, 510, 513, 514, 515], "mechan": [31, 147], "raw": [31, 38, 48, 49, 50, 127, 128, 129, 145, 147, 154, 158, 164, 476, 484, 490, 496, 499, 516], "unencod": [31, 147], "least": [31, 34, 473, 511], "convers": [31, 33, 34, 90, 126, 200, 210, 212, 213, 476, 484, 486, 496, 497, 499, 510, 516], "signatur": [31, 484, 500], "foo": 31, "kwarg": [31, 129, 131, 147, 150, 151, 152, 153, 166, 443, 447, 451, 452, 514], "multi": [31, 42, 49, 57, 79, 126, 129, 136, 139, 140, 141, 142, 147, 166, 199, 200, 214, 469, 481, 484, 493, 495, 497, 499, 509, 516], "support": [31, 39, 44, 67, 68, 77, 94, 95, 129, 147, 166, 200, 201, 207, 208, 209, 210, 211, 212, 213, 214, 218, 476, 484, 485, 493, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 511, 512, 513, 514, 515], "minimum": [31, 33, 190], "transfer_syntax_uid": [31, 129], "samples_per_pixel": [31, 147], "grayscal": [31, 33, 34, 49], "rgb": [31, 33, 34, 41, 49, 95, 201, 207, 208, 209, 210, 211, 212, 213, 214, 484, 494, 497, 502, 514], "number_of_fram": [31, 147], "bits_alloc": [31, 147, 214], "bits_stor": [31, 147], "12": [31, 34, 50, 147, 210, 282, 283, 386, 439, 441, 511, 516], "4095": [31, 34, 147], "65535": [31, 147, 511], "pixel_represent": [31, 147], "complement": [31, 34, 37, 147], "photometric_interpret": [31, 147], "color": [31, 33, 34, 41, 44, 147, 201, 207, 214, 484, 497, 499, 514], "ybr_full": [31, 33, 34, 49, 147, 207, 210, 212, 214, 484, 497, 503], "At": [31, 507, 515], "is_avail": [31, 94, 95, 147, 200, 208, 209, 210, 211, 212, 213, 476, 484, 495], "bool": [31, 53, 78, 79, 91, 93, 99, 104, 113, 114, 123, 124, 126, 128, 129, 130, 133, 136, 142, 147, 153, 154, 155, 156, 157, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 190, 197, 200, 205, 207, 208, 209, 210, 211, 212, 213, 214, 217, 418, 444, 445, 446, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 472, 473, 476], "met": [31, 160, 200, 208, 209, 210, 211, 212, 213, 476, 484, 495], "encoder_depend": [31, 147], "rlelossless": [31, 33, 41, 129, 507, 514], "jpeg2000": [31, 42, 139, 484, 495, 497], "pillow": [31, 42, 129, 211, 484, 493, 495, 497, 499, 502, 507], "imagecodec": 31, "gdcm": [31, 33, 41, 42, 129, 146, 208, 484, 487, 493, 496, 500, 502, 503, 505, 514], "add_plugin": [31, 147], "plugin_label": 31, "my_encoder_func": 31, "my_packag": 31, "my_encod": 31, "rle": [32, 34, 41, 42, 49, 129, 136, 137, 139, 146, 148, 212, 213, 214, 372, 484, 495, 496, 502, 503, 513, 514], "lossless": [32, 34, 41, 42, 49, 129, 136, 137, 139, 146, 148, 212, 213, 214, 484, 499, 502, 503, 514], "plugin": [32, 41, 42, 129, 146, 147, 212, 484, 502, 503, 506, 513, 514], "underli": 33, "algorithm": [33, 442], "packbit": 33, "scheme": [33, 154, 464, 465, 471, 474, 475, 515, 516], "explan": 33, "relationship": [33, 166, 508], "glossari": [33, 35], "palett": [33, 34, 44, 103, 164, 166, 201, 214, 484, 497, 499], "intens": [33, 34], "black": [33, 484, 505], "index": [33, 38, 49, 50, 129, 147, 166, 167, 168, 199, 204, 205, 206, 214, 476, 484, 500, 508, 516], "red": [33, 34, 201, 214, 484, 499, 507, 508], "green": [33, 34, 484, 499], "blue": [33, 34, 484, 499], "lookup": [33, 49, 110, 111, 112, 114, 115, 125, 201, 202, 203, 204, 205, 214, 484, 500, 509], "noth": [33, 511], "equal": [33, 34, 138, 140, 484, 494, 495, 496], "ycbcr": [33, 34, 208, 209, 210, 211, 212, 213], "keep": [33, 166, 511, 513], "mind": 33, "lossi": [33, 42, 139, 214], "inclus": [33, 34], "downscal": 33, "accordingli": [33, 129], "made": [33, 129, 138, 139, 166, 484, 486, 487, 499, 507, 508, 511], "might": [33, 43, 147, 516], "ask": [33, 40, 506, 507, 508], "why": [33, 514], "vice": [33, 201, 214], "versa": [33, 201, 214], "answer": [33, 506, 509, 514], "higher": [33, 35, 484, 487, 510], "befor": [33, 42, 88, 126, 129, 156, 167, 174, 199, 205, 206, 214, 484, 487, 490, 491, 493, 496, 507, 508, 509, 511, 514, 516], "decis": 33, "known": [33, 34, 38, 39, 43, 49, 53, 81, 93, 126, 127, 129, 201, 214, 219, 484, 494, 497, 499, 500, 502, 509, 515], "20x": [33, 41, 484, 502], "slower": [33, 41, 214], "pylibjpeg": [33, 41, 42, 129, 146, 147, 212, 484, 500, 502, 505, 514], "place": [33, 34, 41, 42, 129, 177, 484, 493, 509, 511], "samplesperpixel": [33, 210, 212, 213, 214, 484, 490, 495, 514], "bitsalloc": [33, 42, 126, 210, 212, 213, 214, 484, 495], "pixelrepresent": [33, 210, 212, 213, 214, 484, 496], "us1_uncr": 33, "921600": 33, "424152": 33, "pixel_data_handl": [33, 48, 49, 129, 477, 481, 484, 495, 502, 505], "convert_color_spac": [33, 49, 214, 481, 484, 502], "ybr": [33, 49, 484, 502], "187460": 33, "compon": [34, 42, 77, 139, 167, 169, 212, 214, 451, 484, 485, 487, 502], "previous": [34, 158, 484, 495, 499, 502], "constrain": 34, "iod": [34, 214, 511, 516], "remain": [34, 140, 166, 484, 490, 508], "hand": [34, 51, 484, 500], "ybr_rct": [34, 41, 212, 514], "whether": [34, 38, 79, 100, 126, 129, 142, 455, 484, 487, 490, 495, 497, 502, 506, 507, 513], "transform": [34, 49], "prior": [34, 41, 140, 514], "taken": [34, 214], "account": 34, "doesn": [34, 48, 81, 129, 200, 210, 213, 484, 499, 507, 514], "make": [34, 38, 39, 40, 43, 45, 51, 129, 130, 442, 454, 484, 487, 496, 502, 509, 511, 513], "determin": [34, 38, 48, 126, 129, 166, 202, 203, 214, 511, 516], "invers": 34, "ybr_full_422": [34, 49, 207, 210, 212, 214, 484, 497, 503], "ybr_partial_420": 34, "ybr_ict": [34, 212], "restrict": 34, "further": [34, 511, 515], "constraint": [34, 445, 446, 454], "planar": [34, 49, 129, 214, 484, 495], "r1": 34, "g1": 34, "b1": 34, "r2": 34, "g2": 34, "b2": 34, "rn": 34, "gn": 34, "bn": 34, "contigu": 34, "typic": [34, 93, 134, 514], "32": [34, 129, 132, 137, 142, 210, 213, 214, 476, 484, 494, 502, 505, 516], "being": [34, 101, 110, 111, 112, 114, 115, 118, 120, 121, 122, 125, 129, 140, 147, 213, 484, 485, 495, 502, 503, 511, 513, 514], "mean": [34, 42, 213, 442, 507, 509, 511, 514, 515], "chapter": 34, "mani": [34, 39, 47, 49, 136, 137, 484, 486, 490, 491, 506], "most": [34, 38, 39, 42, 47, 51, 82, 484, 487, 490, 491, 509, 511, 514, 515], "signific": [34, 39, 456, 467, 469, 484, 487], "past": [34, 140, 161, 190], "describ": [34, 38, 42, 51, 106, 108, 126, 129, 451, 510, 511], "familiar": [35, 36, 509, 511, 514, 516], "document": [35, 39, 129, 147, 164, 488, 493, 494, 506, 512], "reader": 36, "unfamiliar": 36, "step": [36, 484, 491, 502, 511, 515, 516], "achiev": [36, 138], "advanc": [36, 147], "understand": [36, 38, 507, 516], "aim": [36, 484, 500], "explain": 36, "subject": [36, 510, 515], "fairli": 36, "technic": [36, 37], "api": [36, 147, 484, 494, 507, 510, 514, 515], "learn": [36, 40, 507, 511], "remind": 36, "about": [36, 38, 39, 40, 47, 49, 51, 91, 214, 509, 511, 514, 516], "italic": 36, "lowercas": 36, "uppercas": [36, 126], "capit": [36, 484, 490], "american": 36, "english": 36, "spell": [36, 73, 484, 495], "comma": 36, "ital": 36, "elem": [36, 38, 48, 75, 126, 129, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 200, 216, 217, 219, 484, 487, 509], "seq": [36, 177, 509], "datael": [36, 43, 44, 48, 57, 75, 127, 129, 130, 131, 154, 157, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 208, 484, 485, 493, 494, 495, 496, 499, 503, 505, 509], "gender": 36, "neutral": 36, "pronoun": 36, "hypothet": 36, "tick": 36, "markup": [36, 508], "0xb4": 36, "built": [36, 513], "pass": [36, 38, 41, 48, 49, 89, 102, 103, 105, 129, 131, 136, 137, 199, 484, 487, 507, 508, 511, 514], "fragments_per_fram": [36, 136], "haven": [36, 507, 509], "docstr": [36, 507], "proper": [36, 484, 487], "noun": 36, "wrap": [36, 38, 177], "unless": [36, 160, 167, 484, 488, 499, 511], "good": [36, 51, 507, 508], "reason": [36, 508], "link": [36, 508], "better": [36, 484, 488, 490, 494], "attr": 36, "ndarrai": [36, 38, 42, 48, 49, 50, 77, 79, 94, 95, 101, 129, 147, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 459, 461, 476, 484, 493, 497, 500, 514, 516], "dtype": [36, 38, 48, 49, 50, 129, 147, 212, 214, 514], "chtml": 36, "part05": [36, 508], "sect_6": 36, "html": [36, 508], "nema": 36, "org": [36, 47, 510], "four": [36, 95, 166, 174], "five": [36, 451], "sparingli": 36, "featur": [36, 39, 484, 492, 506, 507], "versionad": 36, "versionchang": 36, "handler": [36, 41, 42, 49, 77, 91, 94, 95, 129, 147, 200, 208, 209, 210, 211, 212, 213, 214, 476, 481, 484, 493, 495, 497, 498, 499, 500, 502, 503, 505, 507, 510, 514], "intermedi": [37, 38], "core": [37, 44], "mostli": [38, 128], "behav": [38, 39, 109, 199, 484, 494, 496, 511], "via": [38, 41, 53, 126, 129, 212, 484, 493, 495, 500, 502, 503, 510, 511, 514], "entir": [38, 129, 156, 159, 208, 212, 507, 509, 514], "collaps": [38, 48], "dcm_qt_tree": [38, 484, 491, 492], "0x10": [38, 126, 129, 218], "squar": [38, 43, 509], "bracket": [38, 43, 509], "conveni": [38, 43, 49, 126, 484, 500, 510], "cannot": [38, 42, 82, 166, 199, 449, 454, 484, 502, 507, 511], "retriev": [38, 110, 111, 112, 115, 116, 117, 118, 120, 121, 122, 125, 126, 129, 484, 497, 509, 510], "member": 38, "numer": [38, 166, 168, 470, 484, 488, 497, 502, 504], "begin": [38, 98, 136, 161], "beam1": 38, "wai": [38, 39, 40, 46, 48, 49, 51, 129, 484, 490, 506, 509, 510, 511, 513, 515], "thing": [38, 48, 508, 509], "much": [38, 454, 484, 487, 490, 491, 499], "harder": 38, "realli": [38, 484, 487, 496], "0x300a": 38, "0xb0": 38, "0xc2": 38, "rememb": [38, 43, 48], "exact": [38, 445, 446, 448, 449], "handi": 38, "dir": [38, 40, 129, 484, 490, 503, 508, 515], "dure": [38, 43, 107, 484, 503, 507, 508], "session": [38, 39, 40, 43, 129, 508], "prompt": 38, "pat": 38, "patientsetupsequ": [38, 40], "patientsex": [38, 129], "anywher": [38, 509], "insensit": [38, 129], "_dicom_dict": 38, "necessari": [38, 39, 47, 138, 140, 451, 511, 516], "add_dict_entri": [38, 109, 484, 493, 496], "similarli": [38, 444, 509], "add_private_dict_entri": [38, 484, 496], "hood": 38, "offici": [38, 110, 111, 112, 113, 114, 115, 116, 123, 124, 125, 126, 418, 484, 490, 491, 509, 516], "reload": 38, "0x0010": [38, 129, 218, 509], "softwarevers": 38, "0x0018": 38, "0x1020": 38, "pixel_byt": 38, "175": 38, "166": 38, "203": 38, "207": 38, "216": 38, "186": 38, "183": 38, "157": 38, "181": 38, "184": 38, "171": 38, "152": 38, "164": 38, "235": 38, "906": 38, "910": 38, "923": 38, "922": 38, "929": 38, "927": 38, "914": 38, "954": 38, "938": 38, "942": [38, 484, 497], "925": [38, 509], "905": [38, 49], "959": 38, "916": [38, 484, 487], "911": 38, "904": 38, "909": 38, "int16": [38, 49, 50, 516], "extens": [38, 75, 130, 484, 495, 502], "effect": [38, 140, 442], "behavior": [38, 39, 53, 81, 82, 93, 129, 484, 491, 495, 499, 500], "enforc": [38, 44, 199, 215, 484, 490], "expect": [38, 200, 208, 210, 213, 214, 484, 494, 496, 500, 504, 507], "t1": 38, "0x00100010": [38, 126, 129], "equival": [38, 129, 214, 484, 494], "t2": 38, "t3": 38, "t4": 38, "portion": 38, "is_priv": [38, 126, 165, 217, 418, 484, 493], "odd": [38, 129, 132, 200, 214, 217, 484, 494, 503, 509], "prettier": 38, "select": [38, 129, 139], "There": [39, 46, 47, 49, 484, 495, 507, 508, 509, 510, 516], "strict": [39, 449, 484, 497, 504], "against": [39, 126, 166, 484, 489, 500], "turn": [39, 91, 157, 484, 500], "enabl": [39, 90, 129], "reading_validation_mod": [39, 53, 73, 74, 76, 92, 127, 129, 484, 503], "writing_validation_mod": [39, 53, 76, 484, 503], "newli": [39, 129, 484, 499], "As": [39, 42, 509, 515], "suggest": [39, 506, 507, 508], "except": [39, 43, 48, 49, 53, 73, 81, 82, 83, 94, 95, 149, 164, 166, 190, 199, 220, 481, 484, 487, 489, 492, 493, 496, 497, 500, 502, 503, 507, 509, 511, 514], "special": [39, 57, 481, 484, 491], "avoid": [39, 101, 157, 174, 444, 484, 496, 497, 500, 511], "invalid": [39, 53, 73, 74, 82, 86, 87, 133, 214, 442, 484, 496, 500, 502, 504], "legaci": 39, "strictli": [39, 47], "adher": 39, "guarante": [39, 42, 43], "predefin": 39, "That": [39, 43], "local": [39, 104, 484, 503, 507, 508, 509, 513], "balanc": 39, "evolut": 39, "break": [39, 484, 500, 511], "sometim": [39, 484, 495], "improv": [39, 484, 491, 494, 495, 502, 504, 506], "protect": 39, "upcom": [39, 93], "compat": [39, 41, 177, 484, 487, 488, 490, 491, 492, 493, 505, 513], "next": [39, 43, 93, 129, 157, 166, 167, 484, 487, 500, 511, 516], "simplest": [39, 511, 513], "pydicom_futur": [39, 484, 500], "temporarili": 39, "future_behavior": [39, 481, 484, 500], "again": [39, 40, 51, 507, 511], "anoth": [39, 207, 214, 484, 500, 509, 514], "txt": [39, 509], "virtual": [39, 513], "brief": 40, "overview": [40, 511], "pure": 40, "report": [40, 484, 497, 506, 512], "radiotherapi": [40, 164], "easi": [40, 49], "complex": [40, 49], "natur": 40, "supin": 40, "prone": 40, "0182": 40, "01b2": 40, "techniqu": 40, "patientposit": 40, "hfp": 40, "rtplan2": 40, "server": [40, 508], "pynetdicom": 40, "primarili": [40, 484, 488], "design": [40, 51, 515], "let": [40, 41, 484, 497, 507, 508, 509, 511, 514], "wherev": 40, "alter": [40, 51], "intellig": 40, "decompress": [40, 41, 42, 129, 211, 484, 493, 497, 513, 514], "onc": [40, 41, 79, 107, 109, 507, 508, 514, 515], "kind": [40, 43], "discuss": [40, 507, 511], "give": [40, 454, 484, 486, 487, 509, 514], "feedback": [40, 484, 491], "tracker": [40, 506, 507], "major": [40, 44, 93, 500], "fix": [40, 45, 157, 492, 506, 507, 509], "announc": [40, 94, 95], "ll": [41, 507, 508, 509, 514, 516], "reli": [41, 42, 77], "separ": [41, 98, 126, 129, 136, 137, 451, 484, 487, 488, 514], "encapsul": [41, 49, 129, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 481, 484, 485, 495, 500], "amount": [41, 129, 208, 514, 516], "too": [41, 129, 132, 177, 473, 484, 494, 496, 497, 506], "extend": [41, 42, 129, 136, 137, 199, 215, 484, 500, 514], "relev": [41, 177, 507], "encap": [41, 164, 481, 484, 493, 495, 514], "encapsulate_extend": [41, 136, 484, 500, 514], "jpeg2000lossless": [41, 514], "third_party_compression_func": [41, 514], "appropri": [41, 48, 49, 129, 161, 177, 199, 212, 475, 514], "ct_small_compressed_bas": [41, 514], "extendedoffsett": [41, 137, 514], "extendedoffsettablelength": [41, 137, 514], "ct_small_compressed_ext": [41, 514], "nativ": [41, 421, 514], "ct_small_rl": [41, 129, 514], "encoding_plugin": [41, 129, 147, 514], "Will": [41, 107], "implicitli": [41, 514], "done": [41, 507, 508, 509, 514], "explicitli": [41, 48, 49, 85, 484, 495, 502, 511, 514], "us1_j2kr": [41, 514], "us1_rl": 41, "j2k": [41, 484, 505], "abl": [42, 43, 484, 499, 510, 511, 514, 516], "ideal": 42, "jpeg_l": [42, 129, 209, 484, 493], "libjpeg": [42, 513], "openjpeg": [42, 513], "capac": 42, "mention": [42, 509], "Be": 42, "verifi": [42, 484, 490], "purpos": 42, "far": [42, 126], "deflat": [42, 210, 418, 484, 499], "57": [42, 139, 214, 223, 314, 316, 484, 495, 500, 505], "sv1": [42, 214, 484, 499], "70": [42, 139, 214, 223, 299, 315, 316, 484, 499, 500, 505], "81": [42, 50, 139, 214, 223, 312, 313, 356, 484, 488], "92": [42, 139, 223, 307, 308, 484, 494, 495], "93": [42, 50, 139, 223, 306, 308, 484, 489, 495], "jpegimageplugin": 42, "jpeg2kimageplugin": 42, "5x": [42, 484, 502], "faster": [42, 484, 487, 499, 502], "adapt": [42, 484, 495], "well": [43, 49, 51, 166, 177, 201, 214, 484, 487, 488, 490, 497, 507, 509, 513], "v1": [43, 45, 484, 494, 495, 496, 516], "easier": [43, 130, 508], "outlin": 43, "ct_filenam": 43, "ial": 43, "preced": 43, "reserv": 43, "thu": [43, 484, 485], "necessarili": [43, 48], "enclos": 43, "clear": [43, 126, 129, 166], "0x00091001": 43, "privateblock": [43, 129, 481], "private_block": [43, 129], "0x0009": 43, "0x01": [43, 129], "compani": 43, "accomplish": 43, "0x000b": 43, "add_new": [43, 129, 132, 509], "000b": 43, "0x02": 43, "lut": [44, 47, 201, 202, 203, 204, 205, 206, 214, 484, 497, 499, 500, 502], "voi": [44, 204, 205, 206, 214, 484, 497, 500], "overlai": [44, 94, 129, 214, 477, 481, 484, 497, 500, 509], "overlay_arrai": [44, 94, 129, 484, 497], "handl": [44, 49, 51, 73, 95, 126, 129, 173, 191, 450, 477, 484, 485, 488, 490, 492, 493, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 509, 510, 513], "precondit": 44, "third": [44, 451, 513], "parti": [44, 451, 513], "pil": [44, 484, 487, 495], "wxpython": [44, 484, 487], "best": 44, "practic": [44, 166], "futur": [44, 93, 129, 147, 484, 490, 500, 515], "proof": [44, 93], "drop": [45, 129, 484, 499, 500], "april": 45, "backport": 45, "seriou": 45, "speak": 45, "encourag": [45, 484, 490], "transit": 45, "earli": 45, "common": [46, 50, 51, 73, 484, 495, 511, 516], "fileread": [46, 67, 197, 481, 508, 509], "fine": 46, "read_parti": [46, 67, 156, 197, 509], "preexist": 46, "mainli": [47, 129, 484, 491], "concern": 47, "often": [47, 49, 107, 510], "desir": [47, 199, 207, 214], "sever": [47, 53, 484, 491, 493], "stdlib": 47, "2d": [47, 484, 500], "axesimag": 47, "thank": [47, 484, 487, 490], "roi": 47, "key": 47, "out": [47, 49, 51, 137, 166, 214, 445, 446, 484, 500, 506, 507, 508, 509, 511, 516], "pydicom_tkint": 47, "contrib": [47, 487, 506], "come": 47, "photoimag": 47, "widget": 47, "pydicom_pil": 47, "imview": 47, "60xx": [48, 94, 200, 214, 477, 484, 497, 509], "3000": [48, 94, 129, 200, 202, 203, 214, 477, 484, 497, 509], "6000": 48, "6002": 48, "601e": 48, "siemen": [48, 49], "withoverlai": [48, 49], "0x6000": [48, 200, 509], "0x3000": 48, "29282": 48, "tend": [48, 513], "lazi": 48, "unpack": [48, 214, 470, 484, 495, 503], "uint8": [48, 201, 202, 203, 204, 205, 214], "484": 48, "align": 48, "pack_bit": [48, 214, 484, 495, 500], "numpy_handl": [48, 94, 95, 484, 502], "packed_byt": 48, "temp": [48, 49], "reduc": [48, 49, 168, 207, 214, 484, 495, 500, 505, 511, 514], "512x512": [48, 49], "256x256": [48, 49], "bulk": [49, 126, 129, 481, 484, 497, 498, 501, 510], "although": [49, 166, 511], "almost": 49, "parametr": [49, 507], "floatpixeldata": [49, 214, 484, 502], "doublefloatpixeldata": [49, 214, 484, 502], "interchang": [49, 511], "x89": 49, "x03": 49, "xfb": 49, "xcb": 49, "xeb": 49, "xf9": 49, "x02": 49, "x94": 49, "x7f": 49, "immedi": 49, "varieti": 49, "broken": 49, "fragment": [49, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 484, 497], "1227": 49, "302": 49, "304": 49, "328": 49, "628": 49, "770": 49, "907": 49, "298": 49, "331": 49, "355": 49, "498": [49, 359, 360, 442, 484, 494], "566": 49, "706": 49, "280": 49, "285": 49, "334": 49, "431": 49, "1094": 49, "1068": 49, "1083": 49, "339": 49, "377": 49, "413": 49, "1318": 49, "1346": 49, "1336": 49, "378": 49, "374": 49, "422": 49, "1369": 49, "1129": 49, "862": 49, "straightforward": 49, "particularli": [49, 51], "300": 49, "shrunk": 49, "apply_color_lut": [49, 214, 481, 484, 497], "obxxxx1a": 49, "pet": [49, 201, 214], "possibli": [49, 129], "physic": [49, 511], "quantiti": [49, 476, 516], "hounsfield": 49, "apply_modality_lut": [49, 204, 205, 206, 214, 481, 484, 497, 499], "hu": 49, "apply_voi_lut": [49, 214, 481, 484, 497, 499, 500], "voic": 50, "audio": [50, 516], "lead": [50, 53, 445, 446, 456, 484, 488, 493, 504, 516], "ecg": [50, 516], "5400": [50, 129, 476, 516], "consist": [50, 130, 177, 484, 490, 508, 514, 516], "synchronis": [50, 516], "003a": [50, 129, 476, 516], "001a": 50, "waveformdata": [50, 516], "240000": [50, 516], "multiplex_1": 50, "112": 50, "25": [50, 442], "68": [50, 391, 411, 412], "106": [50, 223, 335, 336, 337], "62": 50, "37": 50, "131": [50, 227], "137": 50, "10000": [50, 516], "multiplex_2": 50, "1200": [50, 484, 500, 516], "multiplex_arrai": [50, 129, 476, 484, 500, 516], "55": [50, 484, 487], "65": [50, 241], "85": 50, "60": [50, 484, 491, 502], "110": [50, 484, 490], "coupl": [51, 511], "truli": 51, "certain": [51, 129, 214, 508, 509], "tool": [51, 484, 505], "look": [51, 507, 508, 509], "approxim": 51, "especi": [51, 507], "tricki": 51, "awar": [51, 511], "524288": 51, "bigger": [51, 484, 499], "potenti": 51, "disadvantag": 51, "sai": [51, 507, 509], "wrote": 51, "quit": [51, 484, 487, 507], "switch": [51, 86, 484, 488, 490, 492, 497, 499, 502, 504, 507, 508], "individu": [51, 207, 214, 451, 484, 490, 500, 502], "code_fil": 51, "previou": [51, 167, 168, 484, 490, 493, 499, 500], "certainli": 51, "difficult": [51, 507], "singleton": 53, "infer_sq_for_un_vr": [53, 484, 503], "undefin": [53, 126, 140, 154, 170, 177, 484, 489, 500, 503], "conform": [53, 126, 129, 166, 169, 177, 190, 197, 213, 442, 484, 493, 495, 496, 509, 511, 514], "failur": [53, 484, 499, 507], "longer": [53, 79, 126, 210, 484, 494, 495, 497, 500, 502, 511], "bypass": [53, 147], "dataelem": [57, 75, 129, 158, 176, 192, 193, 475, 481, 484, 496, 499, 509], "dataelement_from_raw": [57, 509], "rawdatael": [57, 88, 127, 129, 130, 131, 154, 158, 188, 475], "tag_in_except": 57, "tupletag": [57, 484, 487], "convert_ae_str": 57, "convert_atvalu": 57, "convert_da_str": 57, "convert_ds_str": 57, "convert_dt_str": 57, "convert_is_str": 57, "convert_numb": [57, 175, 176], "convert_obvalu": 57, "convert_owvalu": 57, "convert_pn": 57, "convert_single_str": 57, "convert_sq": 57, "convert_str": 57, "convert_tag": 57, "convert_text": 57, "convert_tm_str": 57, "convert_ui": 57, "convert_un": 57, "convert_ur_str": 57, "convert_valu": 57, "multiv": [57, 481, 509], "validate_dataset": [57, 509], "is_valid_d": [57, 484, 502], "format_number_as_d": [57, 484, 502], "isfloat": [57, 484, 504], "multistr": 57, "data_element_gener": [67, 157], "data_element_offset_to_valu": 67, "read_deferred_data_el": 67, "read_file_meta_info": [67, 130], "read_preambl": [67, 197, 509], "read_sequ": 67, "read_sequence_item": 67, "filewrit": [67, 129, 133, 481, 509], "correct_ambiguous_vr": 67, "correct_ambiguous_vr_el": 67, "multi_str": 67, "write_atvalu": 67, "write_da": 67, "write_dataset": 67, "write_data_el": 67, "write_dt": 67, "write_file_meta_info": [67, 177, 509], "write_numb": 67, "write_number_str": 67, "write_obvalu": 67, "write_owvalu": 67, "write_pn": [67, 484, 494], "write_sequ": 67, "write_sequence_item": 67, "write_str": 67, "write_text": 67, "write_tm": 67, "write_ui": 67, "write_un": 67, "dicombytesio": 67, "dicomio": [67, 145, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "fileutil": [67, 481], "absorb_delimiter_item": 67, "find_byt": [67, 172, 173, 484, 491], "find_delimit": [67, 173], "length_of_undefined_length": 67, "read_undefined_length_valu": 67, "mistak": 73, "stand": 73, "alon": 73, "respect": [73, 90, 484, 494], "lookuperror": [73, 74], "delimit": [74, 139, 140, 141, 170, 172, 173, 174, 177, 178, 450, 484, 500, 502], "reset": [74, 93, 96], "loss": [74, 76, 445, 446, 454, 484, 500], "unicodedecodeerror": 74, "dicom_character_set": 75, "unicodeencodeerror": 76, "precis": [77, 85, 214, 445, 446, 451, 454, 484, 502], "use_decimal_boolean": 78, "valueerror": [78, 79, 81, 82, 106, 107, 108, 109, 129, 131, 132, 133, 140, 142, 158, 166, 177, 190, 200, 210, 213, 214, 442, 454, 459, 461, 473, 509, 511, 514], "use_ds_numpi": [78, 459, 481, 484, 499], "use_numpi": 79, "__setattr__": 81, "camel": [81, 484, 500], "neither": [81, 82, 166, 202, 203, 205, 214], "nor": [81, 82], "citizen": [81, 126, 129, 509], "patientsnam": [81, 82], "1895": 81, "userwarn": 81, "__contains__": [82, 484, 500], "0x100100010": 82, "traceback": [82, 220, 509, 511, 514], "recent": [82, 507, 508, 509, 511, 514], "stdin": [82, 509, 511, 514], "494": 82, "msg": [82, 509], "exc": 82, "occur": [83, 84, 484, 497, 507, 511], "digit": [85, 132, 191, 516], "round": [85, 214], "encount": 86, "writer": 86, "elementcallback": 88, "callabl": [88, 126, 129, 154, 157, 160, 164, 199, 450], "everi": [88, 147, 214, 511, 516], "data_element_callback": [89, 96, 481], "move": [90, 97, 133, 165, 166, 484, 490, 491, 508, 511], "queri": [90, 166, 511], "anymor": 90, "manual": 90, "debug_on": 91, "default_handl": 91, "log": [91, 129, 484, 490, 503, 507], "logger": [91, 484, 491], "streamhandl": 91, "deprec": [92, 93, 94, 129, 215, 484, 489, 490, 494, 495, 496, 499, 500, 502, 503, 504], "enable_futur": 93, "imit": 93, "becom": [93, 484, 490, 500, 507, 508, 511], "emul": [93, 129], "invalid_keyword_behavior": [93, 481, 484, 500], "invalid_key_behavior": [93, 481, 484, 500], "extract": [94, 95], "get_overlay_arrai": [94, 200], "package_import_nam": 94, "handler_nam": [94, 129], "fail": [94, 95, 484, 487, 488, 493, 507, 508, 511], "gdcm_handler": 95, "pillow_handl": [95, 507], "jpeg_ls_handl": 95, "pylibjpeg_handl": 95, "rle_handl": [95, 484, 503, 505], "convert_pixel_data": [95, 129], "shall": [95, 129, 138, 139, 140, 142, 143, 144, 154, 177, 190], "supports_transfer_syntax": [95, 208, 209, 210, 211, 212, 213], "transfer_syntax": [95, 208, 209, 210, 211, 213], "get_pixeldata": [95, 208, 209, 210, 211, 212, 213], "1d": [95, 200, 210, 211, 212, 213, 214], "reshap": [95, 200, 212, 214], "dimens": [95, 212], "needs_to_convert_to_rgb": [95, 208, 209, 210, 211, 212, 213], "colourspac": [95, 484, 502], "refus": 95, "fact": [95, 509], "notimplementederror": [95, 129, 209, 210, 211, 213, 214], "global": [97, 484, 503], "ds_decim": [99, 481, 484, 499], "ds_numpi": [100, 481], "absolut": [102, 103, 104, 105, 165, 166], "charset": [102, 481, 484, 504], "extern": [104, 484, 500, 502], "new_entries_dict": [106, 108], "0x10021001": [106, 107], "0x10021002": [106, 107], "retir": [107, 114, 126, 175, 176, 223, 418, 484, 500], "perman": 107, "private_cr": [108, 109, 117, 120, 121, 122, 129, 132, 217], "0x00410001": 108, "0x00410002": 108, "acm": 108, "ltd": 108, "whose": [110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 125, 451, 454, 507], "keyerror": [110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 127, 129, 509], "get_private_entri": 116, "get_entri": 117, "grouplength": 118, "mask": 119, "file_value_tel": 126, "is_undefined_length": [126, 129, 177, 484, 497], "already_convert": 126, "validation_mod": [126, 199, 418, 444, 445, 446, 448, 449, 450, 451], "joan": [126, 129], "Its": 126, "descripwidth": 126, "35": [126, 129, 168, 287], "0xffffffffl": 126, "ie": 126, "maxbytestodisplai": [126, 484, 496], "showvr": 126, "backslash": [126, 129, 451, 471, 484, 485, 486, 502], "intern": [126, 129, 154, 491], "0xffffffff": 126, "empty_value_for_vr": 126, "empty_valu": 126, "classmethod": [126, 129, 451], "from_json": [126, 129, 484, 497, 500, 510], "dataset_class": 126, "value_kei": 126, "bulk_data_uri_handl": [126, 129, 484, 500, 510], "json": [126, 129, 217, 484, 496, 497, 501, 502, 512], "inlinebinari": [126, 129], "bulkdatauri": [126, 129, 510], "dicomweb": [126, 129, 510], "wado": [126, 129, 510], "is_empti": 126, "ret": 126, "repval": [126, 129], "to_json": [126, 129, 484, 498, 510], "bulk_data_threshold": [126, 129, 484, 498, 510], "bulk_data_element_handl": [126, 129, 510], "dump_handl": [126, 129], "base64": [126, 129, 510], "dump": [126, 129], "to_json_dict": [126, 129, 484, 498, 504, 510], "18": [126, 129, 414, 484, 493, 510], "validate_valu": 126, "raw_data_el": [127, 475], "resolv": [127, 175, 484, 490, 496], "belong": [127, 129, 165, 166, 177], "value_tel": 128, "is_raw": 128, "undecod": 128, "alia": [128, 484, 500], "mutablemap": [129, 130, 131], "mutabl": 129, "0x00100020": 129, "0x0030": 129, "0x00100030": 129, "linac": 129, "co": [129, 516], "son": 129, "daughter": 129, "0x0041": 129, "john": [129, 451], "0041": 129, "get_private_item": 129, "iteral": [129, 484, 486], "jsonmodel": 129, "ds2": 129, "default_element_format": 129, "default_sequence_element_format": 129, "indent_char": [129, 167], "write_like_origin": [129, 177, 509], "decoding_plugin": [129, 147], "encapsulate_ext": 129, "tri": [129, 147], "placehold": [129, 147], "unabl": [129, 214, 509, 511, 514], "runtimeerror": [129, 212], "shallow": 129, "state": [129, 183, 510], "alphabet": [129, 451, 484, 504], "__getitem__": [129, 509], "unconvert": 129, "increas": [129, 484, 487, 504], "ensure_file_meta": 129, "fix_meta_info": [129, 484, 495], "enforce_standard": [129, 133, 190, 509], "ambigu": [129, 175, 176, 484, 493, 495, 496, 500], "therefor": [129, 199, 214], "incorrect": [129, 139, 147, 484, 488, 494, 496, 497, 505], "validate_file_meta": [129, 481, 509], "formatted_lin": [129, 484, 486], "element_format": 129, "sequence_element_format": 129, "indent_format": 129, "json_dataset": 129, "bytearrai": [129, 214], "simul": 129, "obj": 129, "get_item": 129, "defer": [129, 158, 484, 486, 490, 497, 503, 509], "element_offset": [129, 132], "analog": 129, "group_dataset": 129, "is_original_encod": 129, "dict_item": 129, "unlik": 129, "flatten": 129, "dict_kei": 129, "referencetyp": [129, 215], "weak": [129, 215], "parent_seq": 129, "weakref": 129, "pop": [129, 484, 496], "tagtyp": 129, "combin": [129, 218, 509, 516], "popitem": 129, "unrealist": 129, "free": 129, "associ": 129, "pathlik": [129, 130, 156, 158, 159, 166, 177, 484, 499], "binaryio": [129, 130, 152, 154, 156, 157, 158, 160, 161, 162, 163, 170, 171, 172, 173, 174, 177], "wrapper": [129, 484, 499], "set_original_encod": 129, "character_encod": 129, "optim": 129, "setdefault": [129, 484, 496, 500], "0x00100040": 129, "suppress_invalid_tag": [129, 484, 504], "threshold": 129, "inlin": [129, 510], "bubbl": 129, "my_json_dump": 129, "sort_kei": 129, "trait_nam": 129, "ipython": [129, 484, 485], "autocomplet": 129, "valuesview": 129, "visit": [129, 507, 508], "0210": [129, 476, 516], "0211": 129, "filename_or_obj": [130, 158], "prepend": 130, "0x0002": [130, 509], "fileobj_typ": [130, 158], "timestamp": [130, 158], "modif": [130, 507, 509, 511], "overrid": [131, 164, 444, 484, 495, 511], "super": [131, 215], "typeerror": [131, 156, 199, 208, 209, 484, 494, 500, 509], "init_valu": 131, "private_creator_el": 132, "helper": 132, "block_start": 132, "low": [132, 510], "get_tag": 132, "continu": [135, 484, 485, 502], "concaten": [135, 142], "togeth": [135, 136, 178], "has_bot": [136, 137], "frame1": 136, "frame2": 136, "exce": [136, 137], "31": 136, "circumst": [136, 137], "0x00": [136, 138, 177, 467], "strongli": [136, 166, 511], "nr_fragment": [138, 144], "marker": [138, 139, 161, 174, 484, 497, 502], "null": [138, 200, 214, 467], "bytestream": [139, 141], "nr_frame": [139, 141], "span": 139, "predict": 139, "Near": 139, "attempt": [139, 176, 476, 484, 493, 502, 509], "boundari": 139, "eoi": [139, 484, 497], "eoc": [139, 484, 497], "0xffd9": 139, "hasn": [139, 507, 508], "fp": [140, 142, 145, 154, 156, 157, 161, 162, 163, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "stream": [140, 145, 177, 484, 505, 507], "fffe": [140, 142, 143, 144], "e000": [140, 142, 143, 144], "e0dd": 140, "0x00000000": [140, 142], "presenc": [140, 201, 214, 509], "absenc": 140, "fe": 142, "e0": 142, "08": 142, "measur": [142, 164], "bot": 142, "ffee": 142, "itemis": 144, "factori": [147, 199, 219, 444, 484, 487, 502], "import_path": 147, "encode_pixel_data": 147, "modulenotfounderror": 147, "unavail": 147, "attributeerror": [147, 175, 177, 200, 208, 210, 212, 213, 484, 487, 503], "aren": [147, 166, 509, 511], "idx": [147, 514], "uint16": [147, 201, 202, 203, 204, 205, 214], "iter_encod": [147, 514], "kwargs_from_d": 147, "missing_depend": 147, "nice": [147, 199, 507], "remove_plugin": 147, "appear": [149, 511], "dicm": [149, 161, 177, 190, 197, 509], "mayb": 149, "file_like_obj": 152, "textio": 152, "no_read": 152, "no_seek": 152, "whenc": 152, "no_writ": 152, "bytes_read": 152, "hold": [153, 177, 199, 215], "need_exact_length": 153, "eoferror": [153, 174], "read_beul": 153, "read_beu": 153, "read_be_tag": 153, "read_leul": 153, "read_leu": 153, "read_le_tag": 153, "write_ul": 153, "write_u": 153, "write_beul": 153, "write_beu": 153, "write_leul": 153, "write_leu": 153, "write_tag": 153, "stop_when": [154, 157, 160], "defer_s": [154, 156, 157, 160, 174, 198, 484, 486], "specific_tag": [154, 156, 157, 160, 509], "read_data_el": 154, "stop_before_pixel": [156, 484, 487], "pars": [156, 160, 214, 481, 484, 485, 497, 499, 500], "context": [156, 220, 484, 493, 509], "tell": [156, 484, 486, 508, 511], "caller": [156, 484, 487], "respons": [156, 451, 510], "close": [156, 160, 484, 486, 487], "kb": 156, "stop": [156, 160, 484, 487], "subsequ": 156, "invaliddicomerror": [156, 161, 481, 484, 488, 509], "unsupport": [156, 208, 209, 210, 213], "condit": [156, 160, 484, 493], "bytelength": [157, 162], "parent_encod": [157, 189], "at_top_level": 157, "itemdelitertag": 157, "call_back": 157, "isn": [157, 214, 418, 442, 484, 496, 500, 508, 509], "heurist": [157, 484, 493], "raw_data_elem": 158, "persist": 158, "st_mtime": 158, "oserror": 158, "meant": [159, 197], "quickli": [159, 511], "fileobj": [160, 509], "reach": [160, 172, 174], "assess": 164, "_define_assess": 164, "doc": [164, 508], "_define_encap_doc": 164, "fiduci": 164, "_define_generic_content_id": 164, "hang": 164, "protocol": 164, "_define_hanging_protocol": 164, "_define_imag": 164, "implant": [164, 166], "_define_impl": 164, "assi": 164, "_define_implant_assi": 164, "_define_implant_group": 164, "_define_key_object_doc": 164, "_define_palett": 164, "_define_pati": 164, "_define_empti": 164, "_define_present": 164, "_define_radiotherapi": 164, "_define_generic_cont": 164, "registr": 164, "_define_rt_dos": [164, 511], "_define_rt_plan": 164, "_define_rt_structure_set": 164, "treat": [164, 511], "_define_rt_treatment_record": 164, "_define_seri": 164, "spectroscopi": 164, "_define_spectroscopi": 164, "sr": [164, 451, 484, 502, 515], "_define_sr_docu": 164, "stereometr": 164, "_define_studi": 164, "surfac": 164, "_define_surface_scan": 164, "tract": 164, "1430": [164, 511], "my_record": 164, "offsetofthenextdirectoryrecord": 164, "recordinuseflag": 164, "0xffff": [164, 484, 494], "offsetofreferencedlowerleveldirectoryent": 164, "directoryrecordtyp": [164, 166], "specificcharacterset": 164, "my_inst": 164, "add_custom": [164, 166, 511], "node": [165, 166, 167, 509], "recordnod": [165, 166, 481], "leaf": [165, 166, 167], "fileid": 165, "file_set": [165, 167], "for_addit": [165, 511], "for_mov": 165, "for_remov": 165, "is_stag": [165, 166, 511], "ds_or_path": 166, "cancel": 166, "directory_record": [166, 481, 511], "definit": [166, 177, 481, 484, 493, 516], "suitabl": [166, 201, 214, 513], "1400": [166, 511], "1410": [166, 511], "1420": [166, 511], "1500": [166, 484, 503], "1510": 166, "1511": [166, 484, 503], "1512": 166, "hierarchi": [166, 511], "privaterecorduid": 166, "leaf_nod": 166, "top_nod": 166, "ancestor": [166, 167], "due": [166, 484, 491, 502, 504, 507, 511], "force_implicit": 166, "1234567": 166, "7654321": 166, "include_orphan": 166, "raise_orphan": 166, "attach": 166, "imposs": 166, "orphan": 166, "use_exist": [166, 511], "backup": 166, "ptxxxxxx": 166, "stxxxxxx": 166, "sexxxxxx": 166, "imxxxxxx": 166, "xxxxxx": 166, "alphanumer": [166, 168, 484, 505], "paxxxxxx": 166, "p0xxxxxx": 166, "p1xxxxxx": 166, "p2xxxxxx": 166, "everyth": [166, 507, 511], "children": 167, "child": 167, "nearest": 167, "furthest": 167, "has_inst": 167, "amongst": 167, "sibl": 167, "is_root": 167, "prettifi": 167, "pretti": [167, 507], "record_typ": [167, 511], "k": [168, 484, 505], "00010": 168, "00000000": 168, "00000001": 168, "00000002": 168, "_": [169, 508], "rel": [169, 484, 505], "bytes_to_find": 171, "read_siz": [171, 172, 173, 174], "found_at": 171, "routin": 173, "delimiter_tag": 174, "eof": 174, "dicond": [175, 176], "henc": 177, "profil": 177, "bytestr": [177, 214], "eeee": 177, "independ": 177, "preserv": [177, 484, 492, 499], "had": [177, 484, 495, 502, 507], "sensibl": 177, "is_undefined_length_sequence_item": 177, "put": 178, "swap": [183, 463], "rule": 188, "0017": 190, "send": [190, 507, 508], "struct_format": [192, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467, 468, 469, 470, 472], "pare": 197, "fast": [197, 219], "conserv": 197, "approach": 197, "expr": 198, "type_constructor": [199, 215, 509], "_t": [199, 450], "_itemtyp": 199, "constructor": 199, "insert": [199, 215, 508, 509], "overlayrow": 200, "overlaycolumn": 200, "0015": 200, "numberofframesinoverlai": 200, "overlaybitsalloc": 200, "overlaybitposit": 200, "get_expected_length": [200, 214], "NOT": [200, 214], "0x6010": 200, "0x60ff": 200, "reshape_overlay_arrai": 200, "1201": [201, 214], "1203": [201, 214], "1221": [201, 214], "1223": [201, 214], "1204": [201, 214], "1224": [201, 214], "supplement": [201, 214], "hot_iron": [201, 214], "hot_metal_blu": [201, 214], "pet_20_step": [201, 214], "spring": [201, 214], "summer": [201, 214], "fall": [201, 214], "winter": [201, 214], "rgba": [201, 214], "3rd": [201, 202, 203, 204, 205, 214], "colour": [201, 214], "3002": [202, 203, 204, 205, 214, 484, 497], "float64": [202, 203, 205, 206, 214, 459], "3010": [204, 205, 214], "apply_window": [204, 205, 214, 481, 484, 500], "prefer_lut": [205, 214, 484, 500], "apply_voi": [205, 206, 214, 481, 484, 500], "per_fram": [207, 214, 484, 502], "iec": [207, 214, 308, 313, 316], "10918": [207, 214, 316, 484, 502], "2012": [207, 214], "itu": [207, 214], "871": [207, 214], "create_data_el": 208, "create_imag": 208, "volum": 208, "importerror": [208, 209, 211, 459, 461, 484, 501, 507], "affect": [208, 209, 210, 211, 212, 213, 214, 507, 508], "should_change_photometricinterpretation_to_rgb": [208, 209, 210, 211, 212, 213], "pyjpegl": 209, "planarconfigur": [210, 212, 213, 214, 484, 493], "numberoffram": [210, 212, 213, 214, 484, 505], "read_onli": 210, "resampl": 210, "writeabl": 210, "as_arrai": [212, 214], "generate_fram": 212, "tsyntax": 212, "rle_segment_ord": 213, "suppos": 213, "msb": 213, "lsb": 213, "dtype_corrected_for_endian": 214, "numpy_dtyp": 214, "expand_ybr422": [214, 484, 503], "subsampl": 214, "halv": 214, "cb": 214, "get_image_pixel_id": 214, "get_j2k_paramet": 214, "codestream": 214, "15444": [214, 308], "is_sign": 214, "get_nr_fram": 214, "conjunct": 214, "uint": 214, "sake": 214, "pixel_dtyp": 214, "as_float": 214, "reshape_pixel_arrai": 214, "unpack_bit": [214, 484, 503], "substitut": 215, "construct": [215, 445, 446, 451, 484, 490, 491, 502], "parent_dataset": 215, "is_private_cr": 217, "json_kei": [217, 484, 504], "ggggeeee": 217, "meaningless": 217, "arg2": [218, 484, 487], "0x00100015": 218, "0x50": 218, "0x0015": 218, "group_elem": 219, "safe": 219, "71": 221, "102": [223, 327, 330, 337, 484, 490], "103": [223, 328, 329, 337, 484, 490], "108": [223, 293, 337, 451], "78": [226, 301, 317, 322, 351, 408, 410, 430, 484, 488], "19": 235, "200": [237, 239, 367, 434, 435], "69": 242, "39": [243, 442], "34": [246, 373, 375], "33": 247, "82": [250, 484, 488], "501": [251, 252, 253, 254, 255, 256, 257], "66": [259, 392, 402, 406, 407, 413, 416], "601": [267, 268], "130": 279, "22": [280, 389], "76": 284, "43": [290, 484, 487], "38": 295, "45": 298, "14495": 313, "59": 318, "mpeg": [337, 484, 500], "79": [340, 484, 488], "826": [359, 360, 442, 484, 497], "3680043": [359, 360, 442], "73": [362, 484, 487], "74": 364, "compil": [369, 370], "regex": [369, 370], "67": [393, 440], "72": [404, 484, 487], "human": [418, 451, 509], "friendli": [418, 509, 511], "subclass": [418, 484, 494], "is_transfer_syntax": 418, "is_compress": 418, "is_defl": 418, "is_encapsul": 418, "encasul": 418, "is_valid": 418, "entropy_src": 442, "uuid": 442, "hash": [442, 484, 496, 502], "uuid4": 442, "sha512": 442, "determinist": 442, "unrecover": 442, "random": 442, "22463838056059845879389038257786771680": 442, "167161297070865690102504091919570542144": 442, "lorem": 442, "ipsum": 442, "87507166259346337659265156363895084463": 442, "immut": [443, 447, 452, 484, 496], "auto_format": [444, 445, 446, 484, 502], "__new__": 444, "carri": [444, 484, 492], "penalti": 444, "clean": [444, 484, 493, 507, 508], "satisfi": [445, 446, 454], "23e2": 445, "123": [445, 510], "rewrit": [448, 449], "uncommon": 449, "valtyp": 450, "original_str": [451, 484, 495], "from_named_compon": [451, 484, 502], "from_named_components_veterinari": [451, 484, 502], "ideograph": 451, "phonet": 451, "absent": [451, 516], "demand": 451, "famili": 451, "family_nam": [451, 484, 502], "format_str": 451, "given_nam": [451, 484, 502], "middle_nam": 451, "name_prefix": 451, "name_suffix": 451, "family_name_ideograph": 451, "given_name_ideograph": 451, "middle_name_ideograph": 451, "name_prefix_ideograph": 451, "name_suffix_ideograph": 451, "family_name_phonet": 451, "given_name_phonet": 451, "middle_name_phonet": 451, "name_prefix_phonet": 451, "name_suffix_phonet": 451, "middl": 451, "addition": 451, "sect": 451, "adam": 451, "robert": 451, "quinci": 451, "rev": 451, "div": 451, "korean": [451, 484, 490], "\u6d2a": 451, "\u5409\u6d1e": 451, "\ud64d": 451, "\uae38\ub3d9": 451, "dr": 451, "chief": 451, "offic": 451, "responsible_party_nam": 451, "patient_nam": 451, "responsible_party_name_ideograph": 451, "patient_name_ideograph": 451, "responsible_party_name_phonet": 451, "patient_name_phonet": 451, "veterinari": 451, "OR": 451, "hors": 451, "abc": 451, "farm": 451, "fourth": 451, "fifth": 451, "truncat": [454, 484, 486], "retain": [454, 484, 502], "scientif": 454, "incur": 454, "furthermor": 454, "finit": 454, "inf": 454, "nan": 454, "caus": [454, 484, 486, 511], "fewer": 455, "byte_str": [456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474], "Not": [456, 457, 458, 459, 460, 461, 466, 467, 469, 472], "int64": 461, "use_is_numpi": [461, 481, 484, 499], "waveformbitsalloc": [476, 516], "waveformsampleinterpret": [476, 516], "sb": 476, "ub": 476, "ab": 476, "dev0": 481, "oct": 481, "01": 481, "convert_encod": 481, "decode_el": 481, "decode_byt": 481, "encode_str": 481, "allow_ds_float": [481, 484, 490], "assume_implicit_vr_switch": [481, 484, 502], "convert_wrong_length_to_un": [481, 484, 502], "data_element_callback_kwarg": 481, "debug": [481, 484, 490, 492], "enforce_valid_valu": [481, 484, 490, 496, 497, 500, 502, 503], "overlay_data_handl": [481, 484, 500], "reset_data_element_callback": 481, "show_file_meta": [481, 484, 499], "apply_j2k_correct": [481, 484, 505], "get_charset_fil": 481, "get_palette_fil": [481, 484, 497], "apply_rescal": [481, 484, 500], "get_encod": 481, "generate_filenam": [481, 484, 505], "is_conformant_file_id": 481, "miscellan": 481, "misc": [481, 484, 493], "is_dicom": [481, 484, 493], "size_in_byt": 481, "upper": [484, 505], "gracefulli": [484, 500, 505], "1844": [484, 505], "read_fil": [484, 486, 487, 488, 493, 502, 505], "write_fil": [484, 493, 502, 505], "jpeglossless": [484, 500, 505], "jpeglosslesssv1": [484, 500, 505], "constant": [484, 500, 505, 516], "jpegbaselin": [484, 495, 500, 505], "jpegbaseline8bit": [484, 500, 505], "jpegextend": [484, 495, 500, 505], "jpegextended12bit": [484, 500, 505], "jpeglslossi": [484, 500, 505], "jpeglsnearlossless": [484, 500, 505], "jpeg2000multicomponentlossless": [484, 495, 500, 505, 507], "jpeg2000mclossless": [484, 500, 505], "jpeg2000multicompon": [484, 495, 500, 505, 507], "jpeg2000mc": [484, 500, 505], "jpeglossycompressedpixeltransfersyntax": [484, 500, 505], "jpegtransfersyntax": [484, 500, 505], "jpeglssupportedcompressedpixeltransfersyntax": [484, 500, 505], "jpeglstransfersyntax": [484, 500, 505], "jpeg2000compressedpixeltransfersyntax": [484, 500, 505], "jpeg2000transfersyntax": [484, 500, 505], "rlecompressedlosslesssyntax": [484, 500, 505], "rletransfersyntax": [484, 500, 505], "uncompressedpixeltransfersyntax": [484, 500, 505], "uncompressedtransfersyntax": [484, 500, 505], "pilsupportedcompressedpixeltransfersyntax": [484, 500, 505], "personnameunicod": [484, 499, 505], "rle_encode_fram": [484, 502, 505], "_storage_sopclass_uid": [484, 500, 505], "theoret": [484, 505], "1838265625": [484, 505], "1743": [484, 505], "1752": [484, 505], "mpeg2mpmlf": [484, 505], "mpeg2mphlf": [484, 505], "mpeg4hp41f": [484, 505], "mpeg4hp41bdf": [484, 505], "mpeg4hp422df": [484, 505], "mpeg4hp423df": [484, 505], "mpeg4hp42stereof": [484, 505], "smptest211020uncompressedprogressiveactivevideo": [484, 505], "smptest211020uncompressedinterlacedactivevideo": [484, 505], "smptest211030pcmdigitalaudio": [484, 505], "disagre": [484, 505], "1689": [484, 505], "folder": [484, 487, 505], "refactor": [484, 505], "renam": [484, 485, 493, 499, 504, 505], "ci": [484, 505], "dependabot": [484, 505], "commit": [484, 505], "ruff": [484, 505], "eol": [484, 504], "decemb": [484, 504], "1634": [484, 504], "1648": [484, 504], "1414": [484, 504], "cli": [484, 504], "1674": [484, 504], "1658": [484, 504], "1661": [484, 504], "highli": [484, 504], "1728": [484, 504], "1734": [484, 504], "pyproject": [484, 504], "toml": [484, 504], "1792": [484, 504], "2023b": [484, 504], "1803": [484, 504], "1632": [484, 504], "progress": [484, 504, 508], "bar": [484, 504], "1611": [484, 504], "crash": [484, 494, 503, 504], "1638": [484, 504], "extrem": [484, 504], "byteslengthexcept": [484, 504], "1683": [484, 504], "1670": [484, 504], "1693": [484, 504], "1680": [484, 504], "1702": [484, 504], "wrong": [484, 495, 496, 500, 504], "calcul": [484, 502, 504], "1667": [484, 504], "lutdata": [484, 504], "1747": [484, 504], "1738": [484, 504], "teardown": [484, 504], "pytest": [484, 504], "fork": [484, 504, 507, 508, 513], "charpyl": [484, 504, 513], "1788": [484, 504], "favor": [484, 489, 503], "1617": [484, 503], "enum": [484, 503], "1498": [484, 503], "resort": [484, 503], "slowest": [484, 503], "1487": [484, 503], "mitra": [484, 503], "1588": [484, 503], "pr": [484, 503, 507, 508], "1594": [484, 503], "1593": [484, 503], "introduc": [484, 503, 507], "2022a": [484, 503], "holog": [484, 503], "0019xx43": [484, 503], "rest": [484, 503, 508], "1565": [484, 503], "deep": [484, 503], "1571": [484, 503], "1581": [484, 503], "maco": [484, 503, 513], "1599": [484, 503], "bad": [484, 493, 503], "1596": [484, 503], "1606": [484, 503], "1609": [484, 503], "__eq__": [484, 494, 502], "operand": [484, 502], "1327": [484, 502], "__str__": [484, 494, 502, 509], "1262": [484, 502], "metadata": [484, 502], "2021b": [484, 502], "inherit": [484, 502], "silent": [484, 502], "highest": [484, 502], "init": [484, 502], "urllib": [484, 502], "1340": [484, 502], "1348": [484, 502], "optimis": [484, 502], "1361": [484, 502], "1372": [484, 502], "1438": [484, 502], "suppress": [484, 502], "1332": [484, 502], "1428": [484, 502], "1434": [484, 502], "pickl": [484, 493, 497, 502], "1278": [484, 502], "1312": [484, 502], "problem": [484, 502, 509], "workflow": [484, 502, 507, 508], "1341": [484, 502], "1338": [484, 502], "878": [484, 502], "deepcopi": [484, 502], "1147": [484, 502], "1412": [484, 502], "expans": [484, 502], "linear": [484, 502], "1415": [484, 502], "1449": [484, 502], "rbg": [484, 502], "jpg": [484, 502], "app14": [484, 502], "1444": [484, 502], "1457": [484, 502], "1251": [484, 501], "1253": [484, 501], "1254": [484, 501], "distribut": [484, 488, 500, 513], "fly": [484, 500], "whenev": [484, 500], "disk": [484, 500], "rg1_unci": [484, 500], "1127": [484, 500], "1234": [484, 500], "1237": [484, 500], "1156": [484, 500], "__next__": [484, 500], "__iter__": [484, 485, 500, 509], "1103": [484, 497, 500], "1155": [484, 500], "1149": [484, 500], "2020d": [484, 500], "243": [484, 500], "alltransfersyntax": [484, 500], "commun": [484, 500], "1240": [484, 500], "1178": [484, 500], "1161": [484, 500], "multifram": [484, 500], "dicosquadrupoleresonanceqrstorag": [484, 500], "dicosquadrupoleresonancestorag": [484, 500], "1211": [484, 500], "1181": [484, 500], "1146": [484, 500], "optimist": [484, 500], "embed": [484, 500], "1140": [484, 500], "network": [484, 500], "connect": [484, 500], "1153": [484, 500], "1193": [484, 500], "1215": [484, 500], "restor": [484, 499], "old": [484, 485, 486, 490, 493, 499], "personname3": [484, 491, 496, 499], "alias": [484, 486, 499], "ismultivalu": [484, 496, 499], "1086": [484, 499], "replace_un_with_known_vr": [484, 499], "1067": [484, 499], "623": [484, 499], "regress": [484, 498, 499, 507], "1038": [484, 499], "improp": [484, 497, 499], "3006": [484, 499], "1078": [484, 499], "1082": [484, 499], "1097": [484, 499], "915": [484, 497], "887": [484, 497, 509], "prevent": [484, 497], "894": [484, 497], "892": [484, 497], "truthi": [484, 497], "891": [484, 497], "899": [484, 497], "968": [484, 497], "896": [484, 497], "unpickl": [484, 497], "947": [484, 497], "951": [484, 497], "1101": [484, 497], "ir": [484, 497], "917": [484, 497], "propag": [484, 497], "971": [484, 497], "822": [484, 497], "263": [484, 497], "273": [484, 497], "994": [484, 497], "generate_pixel_data": [484, 497], "685": [484, 497], "693": [484, 497], "932": [484, 497], "toler": [484, 486, 497], "940": [484, 497], "205": [484, 497], "unexpect": [484, 497], "848": [484, 497], "981": [484, 497], "537": [484, 497], "452": [484, 497], "2019e": [484, 497], "get_frame_offset": [484, 497], "page": [484, 493, 496, 506, 507, 508, 513], "timelin": [484, 496], "789": [484, 496], "image_handl": [484, 495, 496], "deferreddatael": [484, 495, 496], "760": [484, 496], "isstringorstringlist": [484, 496], "isstr": [484, 496], "666": [484, 496], "799": [484, 496], "gzip": [484, 490, 496], "753": [484, 496], "730": [484, 496], "v": [484, 496], "820": [484, 496], "864": [484, 496], "819": [484, 496], "850": [484, 496], "838": [484, 496], "757": [484, 496], "785": [484, 496], "788": [484, 496], "810": [484, 496], "815": [484, 496], "804": [484, 496], "mix": [484, 496], "835": [484, 496], "excess": [484, 496], "791": [484, 496], "ji": [484, 496], "856": [484, 496], "fallback": [484, 495], "722": [484, 495], "jpegbaselinelossy8bit": [484, 495], "726": [484, 495], "jpegbaselinelossy12bit": [484, 495], "jpeg2000lossi": [484, 495], "inequ": [484, 494, 495], "matter": [484, 495, 509], "291": [484, 495], "numpypi": [484, 495], "pypi": [484, 493, 495, 513], "2018c": [484, 495], "677": [484, 495], "624": [484, 495], "696": [484, 495], "584": [484, 495], "715": [484, 495], "716": [484, 495], "695": [484, 495], "737": [484, 495], "jpeglosslessp14": [484, 495], "713": [484, 495], "small": [484, 487, 493, 495, 506, 513], "729": [484, 495], "unus": [484, 495], "660": [484, 495], "682": [484, 495], "689": [484, 495], "jpeg2k": [484, 495], "663": [484, 495], "728": [484, 495], "704": [484, 495], "707": [484, 495], "consumpt": [484, 495], "717": [484, 495], "740": [484, 495], "464": [484, 494], "605": [484, 494], "292": [484, 494], "2018b": [484, 494], "649": [484, 494], "256": [484, 494], "0x0006": [484, 494], "489": [484, 494], "599": [484, 494], "unneed": [484, 494], "597": [484, 494], "620": [484, 494], "625": [484, 494], "fit": [484, 494], "640": [484, 494], "__ne__": [484, 494], "comparison": [484, 489, 494], "verif": [484, 494], "backward": [484, 487, 493], "incompat": [484, 487, 493], "2017c": [484, 493], "fixer": [484, 493], "thrown": [484, 493], "143": [484, 493], "197": [484, 493], "212": [484, 493], "dictionary_is_retir": [484, 493], "thai": [484, 493], "japanes": [484, 485, 490, 493], "chines": [484, 485, 493], "353": [484, 493], "172": [484, 493], "clariti": [484, 493], "travisci": [484, 493], "appveyor": [484, 493], "coverag": [484, 493, 507], "pep": [484, 486, 489, 493], "151": [484, 493], "125": [484, 493], "show_dicomdir": [484, 492, 493], "258": [484, 493], "latin5": [484, 493], "turkish": [484, 493], "lot": [484, 493, 509], "read_dicomdir": [484, 492], "subdirectori": [484, 492], "ez_setup": [484, 492], "aid": [484, 492], "pydicom_seri": [484, 488, 491, 492], "nil": [484, 492], "goyett": [484, 492], "ordereddict": [484, 492], "padraig": [484, 491, 492], "loonei": [484, 491, 492], "jonathan": [484, 491, 492], "myself": [484, 492], "rickard": [484, 492], "holmberg": [484, 492], "julien": [484, 492], "lami": [484, 492], "yaroslav": [484, 492], "halchenko": [484, 492], "mark": [484, 492], "matthew": [484, 492], "brett": [484, 492], "dimitri": [484, 492], "papadopoulo": [484, 492], "videan42": [484, 492], "sorri": [484, 492], "ve": [484, 492, 507, 508, 511, 514, 516], "anyon": [484, 492], "consolid": [484, 491], "revert": [484, 491], "prepar": [484, 491], "experiment": [484, 491], "unoffici": [484, 491], "uncom": [484, 491], "114": [484, 491], "slow": [484, 491], "approx": [484, 487, 491], "r78ba350a3eb8": [484, 491], "streamlin": [484, 491], "modern": [484, 491], "decor": [484, 491], "duplic": [484, 491], "gunnar": [484, 491], "schaefer": [484, 491], "774b7a55db33": [484, 491], "6b949a5b925b": [484, 491], "113": [484, 491], "84af4b240add": [484, 491], "f\u00e9lix": [484, 491], "morenc": [484, 491], "0197b5846bb5": [484, 491], "3678b1be6aca": [484, 491], "f1ae573d9de5": [484, 491], "0411bab7c985": [484, 491], "9b92b336e7d4": [484, 491], "e830f30b6781": [484, 491], "pysid": [484, 491], "qt": [484, 491], "acknowledg": [484, 491], "suever": [484, 491], "who": [484, 490, 491], "2011": [484, 489, 490], "ident": [484, 490], "4ed698a7bfb": [484, 490], "c313d2befb08": [484, 490], "promot": [484, 490], "across": [484, 490], "languag": [484, 485, 490], "b6b3658f3b14": [484, 490], "98": [484, 490], "52": [484, 490], "111": [484, 490], "__dir__": [484, 490], "simplifi": [484, 486, 490], "file_metadata": [484, 489], "96": [484, 489], "catch": [484, 487, 489], "97": [484, 489], "write_new": [484, 489], "fc790f01f5": [484, 488], "84": [484, 488], "dicomit": [484, 488], "statement": [484, 488], "1c32791bf0": [484, 488], "e3ee934bbc": [484, 488], "dicom_dao": [484, 488], "mike": [484, 488], "wallac": [484, 488], "couchdb": [484, 488], "almar": [484, 488], "klein": [484, 488], "distinct": [484, 488], "preliminari": [484, 485, 488], "reorgan": [484, 485, 487], "substanti": [484, 487], "partial": [484, 487], "plain": [484, 487], "bullet": [484, 487], "ness": [484, 487], "logic": [484, 487], "sens": [484, 487], "daniel": [484, 487], "nanz": [484, 487], "dave": [484, 487], "witten": [484, 487], "adit": [484, 487], "panchal": [484, 487], "cp805": [484, 487], "supp": [484, 487], "117": [484, 487], "119": [484, 487], "122": [484, 487], "patch": [484, 487, 506, 507], "nikitathespid": [484, 487], "58": [484, 487], "pierr": [484, 487], "raybaut": [484, 487], "47": [484, 487], "r102": [484, 486], "r103": [484, 486], "issue36": [484, 486], "r97": [484, 486], "r110": [484, 486], "readfil": [484, 486], "savea": [484, 486], "pixelarrai": [484, 485, 486], "kept": [484, 486, 513], "r105": [484, 486], "r91": [484, 486], "r113": [484, 486], "r95": [484, 486], "issue38": [484, 486], "collis": [484, 486], "r96": [484, 486], "issue40": [484, 486], "notimplementerror": [484, 486], "r100": [484, 486], "issue41": [484, 486], "r104": [484, 486], "r109": [484, 486], "r111": [484, 486], "patientsbirthd": [484, 486], "r98": [484, 486], "deprecationwarn": [484, 485], "issue22": [484, 485], "r72": [484, 485], "r73": [484, 485], "greek": [484, 485], "gui": [484, 485], "r64": [484, 485], "r65": [484, 485], "r69": [484, 485], "r70": [484, 485], "data_elem": [484, 485, 509], "r68": [484, 485], "r55": [484, 485], "uid_dictionari": [484, 485], "r51": [484, 485], "synonym": [484, 485], "issue27": [484, 485], "incorrectli": [484, 485], "read_ow": [484, 485], "undefinedlength": [484, 485], "r50": [484, 485], "dicominfo": [484, 485], "issue33": [484, 485], "issue18": [484, 485], "r45": [484, 485], "r67": [484, 485], "r46": [484, 485], "pixeldataarrai": [484, 485], "distutil": [484, 485], "ones": [506, 509, 511], "typo": 506, "materi": 506, "googl": 506, "django": [507, 508, 510], "cd": [507, 508, 511], "live": [507, 508], "yourusernam": [507, 508], "accident": [507, 511], "area": 507, "afterward": 507, "our": [507, 508, 511, 516], "dot": [507, 509], "choos": [507, 508], "won": [507, 508, 509, 511], "master": [507, 508], "checkout": [507, 508], "reproduc": 507, "seem": 507, "daunt": 507, "resourc": 507, "captur": 507, "dive": 507, "Into": 507, "unittest": 507, "troubl": 507, "500": [507, 509], "test_uid": 507, "test_new_uid": 507, "newdefineduid": 507, "assert": [507, 510], "380": 507, "editor": [507, 508], "236": 507, "rst": [507, 508], "properli": 507, "happi": [507, 508], "idea": [507, 508], "cach": [507, 513], "scroll": 507, "front": 507, "push": [507, 508], "wip": [507, 508], "instruct": [507, 508, 509], "real": [507, 508, 516], "mrg": [507, 508], "readi": [507, 508], "merg": [507, 508], "clarif": [507, 508], "approv": [507, 508], "lastli": [507, 508], "remot": [507, 508], "bin": [507, 508], "icon": [507, 508], "restructuredtext": 508, "navig": 508, "occasion": [508, 509, 511], "_build": 508, "web": 508, "localhost": 508, "tut": 508, "toctre": 508, "visibl": 508, "got": 508, "maxdepth": 508, "virtualenv": 508, "contributing_cod": 508, "contributing_doc": 508, "rebuild": 508, "gone": 508, "reachabl": 508, "task": 508, "chapter_7": 508, "apr": 508, "46": 508, "gcc": 508, "copyright": 508, "credit": 508, "accessionnumb": 508, "acquisitiondata": 508, "xraytubecurr": 508, "primer": 508, "am": 508, "circleci": 508, "success": 508, "artifact": 508, "tab": 508, "yet": [509, 515], "vari": 509, "home": [509, 511], "env": [509, 511], "pyd": 509, "lib": [509, 511], "site": [509, 511], "earlier": 509, "__version__": 509, "rb": 509, "infil": 509, "no_meta": 509, "678": 509, "631": 509, "caution": 509, "not_dicom": 509, "1703": 509, "1436": 509, "1079": 509, "833": 509, "character_set": 509, "581": 509, "6854": 509, "7369": 509, "hexadecim": 509, "iso_ir_100": 509, "0x6002": 509, "0x6004": 509, "0x601e": 509, "gggg": 509, "surround": 509, "0x0008": 509, "0x0016": 509, "private_elem": 509, "0x0043": 509, "0x104e": 509, "lack": 509, "stick": 509, "simpler": 509, "imagetyp": 509, "act": 509, "branch": [509, 513], "manner": [509, 514], "0x1002": 509, "saw": 509, "ii": [509, 516], "x00t": 509, "x18": 509, "x08": 509, "chanc": 509, "But": 509, "snip": 509, "hello": 509, "world": 509, "_list": 509, "dictionary_vr": 509, "0x0028": 509, "0x1050": 509, "windowwidth": 509, "notic": [509, 511], "typeofpatientid": 509, "windowcent": 509, "prefer": 509, "wb": 509, "1794": 509, "712": 509, "2372": 509, "habit": 509, "congratul": 509, "beta": 510, "deseri": 510, "00080005": 510, "00080008": 510, "symmetr": 510, "ds_json": 510, "ds1": 510, "smaller": 510, "bulk_data_handl": 510, "store_data_and_return_uri": 510, "bulk_data_read": 510, "bulk_data_uri": 510, "data_retrieved_via_uri": 510, "json_data": 510, "00091002": 510, "data_retrieved_for_tag_and_vr_via_uri": 510, "share": 511, "peopl": 511, "frequent": 511, "dvd": 511, "procedur": 511, "ultrasound": 511, "despit": 511, "commonli": [511, 514], "usb": 511, "pc": 511, "minor": 511, "recalcul": 511, "1220": 511, "briefli": 511, "directoryrecordsequ": 511, "3126": 511, "di": 511, "510": 511, "complic": 511, "flat": 511, "abstract": 511, "awai": 511, "dig": 511, "cost": 511, "importantli": 511, "though": 511, "tmp0aalrzir": 511, "rtdose": 511, "1858": 511, "_recordifi": 511, "2338": 511, "_check_dataset": 511, "instancenumb": 511, "dosesummationtyp": 511, "2281": 511, "record_gen": 511, "1860": 511, "tmpsqz8rhgb": 511, "rd000000": 511, "shutil": 511, "copytre": 511, "copyfil": 511, "dst": 511, "98892001": 511, "98892003": 511, "tmpu068kdwp": 511, "cr1": 511, "6154": 511, "cr2": 511, "6247": 511, "cr3": 511, "6278": 511, "ct2": 511, "17106": 511, "17136": 511, "17166": 511, "17196": 511, "Then": [512, 513], "isol": 513, "admin": 513, "privileg": 513, "offlin": 513, "whl": 513, "py3": 513, "forg": [513, 514, 516], "fetch_data_fil": 513, "popular": 513, "beforehand": 513, "charl": 513, "latest": 513, "cython": 513, "older": 513, "framework": 513, "snapshot": 513, "activ": 513, "stabl": 513, "undocu": 513, "prerequisit": [514, 516], "conda": [514, 516], "hundr": 514, "megabyt": 514, "slide": 514, "microscopi": 514, "gigabyt": 514, "territori": 514, "Being": 514, "significantli": 514, "i2": 514, "1697": 514, "frame_iter": 514, "listcomp": 514, "382": 514, "_encode_arrai": 514, "209": 514, "_preprocess": 514, "533": 514, "recompress": 514, "began": 515, "foundat": 515, "codedict": 515, "cid": 515, "incorrectmodalityworklistentri": 515, "mixedmodality3dcammodel": 515, "modalitytoread": 515, "othermod": 515, "128002": 515, "scheme_design": 515, "scheme_vers": 515, "underscor": 515, "sct": 515, "_1sigmalowervalueofpopul": 515, "371919006": 515, "sigma": 515, "cid270": 515, "121006": 515, "cid_for_nam": 515, "observ": 515, "observationsubjectclass": 515, "observertyp": 515, "echofindingobservationtyp": 515, "270": 515, "ln": 515, "fma": 515, "mdc": 515, "uml": 515, "bari": 515, "ncit": 515, "neu": 515, "ucum": 515, "radlex": 515, "ndc": 515, "itis_tsn": 515, "pubchem_cid": 515, "msh": 515, "capabl": 515, "explanatori": 516, "respiratori": 516, "interv": 516, "rhythm": 516, "khz": 516, "0200": 516, "channelsensit": 516, "einthoven": 516, "microvolt": 516, "iii": 516, "avr": 516, "avl": 516, "avf": 516, "v4": 516, "v5": 516, "v6": 516, "interleav": 516, "ch": 516, "ax1": 516, "ax2": 516, "\u03bcv": 516, "cosin": 516, "sine": 516, "chosen": 516, "pi": 516, "ch1": 516, "astyp": 516, "ch2": 516, "sin": 516, "waveformorigin": 516, "condition": 516, "opt": 516, "obvious": 516, "chdef_seq": 516, "chdef": 516, "curve_typ": 516, "channelsampleskew": 516, "waveformbitsstor": 516, "codevalu": 516, "codingschemedesign": 516, "codingschemevers": 516, "stack": 516, "axi": 516, "my_waveform": 516}, "objects": {"": [[481, 0, 0, "-", "pydicom"]], "pydicom.charset": [[73, 1, 1, "", "convert_encodings"], [74, 1, 1, "", "decode_bytes"], [75, 1, 1, "", "decode_element"], [76, 1, 1, "", "encode_string"]], "pydicom.config": [[77, 2, 1, "", "APPLY_J2K_CORRECTIONS"], [78, 1, 1, "", "DS_decimal"], [79, 1, 1, "", "DS_numpy"], [80, 2, 1, "", "IGNORE"], [81, 2, 1, "", "INVALID_KEYWORD_BEHAVIOR"], [82, 2, 1, "", "INVALID_KEY_BEHAVIOR"], [83, 2, 1, "", "RAISE"], [53, 3, 1, "", "Settings"], [84, 2, 1, "", "WARN"], [85, 2, 1, "", "allow_DS_float"], [86, 2, 1, "", "assume_implicit_vr_switch"], [87, 2, 1, "", "convert_wrong_length_to_UN"], [88, 2, 1, "", "data_element_callback"], [89, 2, 1, "", "data_element_callback_kwargs"], [90, 2, 1, "", "datetime_conversion"], [91, 1, 1, "", "debug"], [92, 2, 1, "", "enforce_valid_values"], [93, 1, 1, "", "future_behavior"], [94, 2, 1, "", "overlay_data_handlers"], [95, 2, 1, "", "pixel_data_handlers"], [96, 1, 1, "", "reset_data_element_callback"], [97, 2, 1, "", "settings"], [98, 2, 1, "", "show_file_meta"], [99, 2, 1, "", "use_DS_decimal"], [100, 2, 1, "", "use_DS_numpy"], [101, 2, 1, "", "use_IS_numpy"]], "pydicom.config.Settings": [[53, 4, 1, "", "infer_sq_for_un_vr"], [53, 4, 1, "", "reading_validation_mode"], [53, 4, 1, "", "writing_validation_mode"]], "pydicom.data": [[102, 1, 1, "", "get_charset_files"], [103, 1, 1, "", "get_palette_files"], [104, 1, 1, "", "get_testdata_file"], [105, 1, 1, "", "get_testdata_files"]], "pydicom.datadict": [[106, 1, 1, "", "add_dict_entries"], [107, 1, 1, "", "add_dict_entry"], [108, 1, 1, "", "add_private_dict_entries"], [109, 1, 1, "", "add_private_dict_entry"], [110, 1, 1, "", "dictionary_VM"], [111, 1, 1, "", "dictionary_VR"], [112, 1, 1, "", "dictionary_description"], [113, 1, 1, "", "dictionary_has_tag"], [114, 1, 1, "", "dictionary_is_retired"], [115, 1, 1, "", "dictionary_keyword"], [116, 1, 1, "", "get_entry"], [117, 1, 1, "", "get_private_entry"], [118, 1, 1, "", "keyword_for_tag"], [119, 1, 1, "", "mask_match"], [120, 1, 1, "", "private_dictionary_VM"], [121, 1, 1, "", "private_dictionary_VR"], [122, 1, 1, "", "private_dictionary_description"], [123, 1, 1, "", "repeater_has_keyword"], [124, 1, 1, "", "repeater_has_tag"], [125, 1, 1, "", "tag_for_keyword"]], "pydicom.dataelem": [[126, 3, 1, "", "DataElement"], [127, 1, 1, "", "DataElement_from_raw"], [128, 3, 1, "", "RawDataElement"]], "pydicom.dataelem.DataElement": [[126, 4, 1, "", "VM"], [126, 5, 1, "", "VR"], [126, 6, 1, "", "__init__"], [126, 6, 1, "", "clear"], [126, 5, 1, "", "descripWidth"], [126, 4, 1, "", "empty_value"], [126, 6, 1, "", "from_json"], [126, 4, 1, "", "is_empty"], [126, 4, 1, "", "is_private"], [126, 4, 1, "", "is_retired"], [126, 5, 1, "", "is_undefined_length"], [126, 4, 1, "", "keyword"], [126, 5, 1, "", "maxBytesToDisplay"], [126, 4, 1, "", "name"], [126, 4, 1, "", "repval"], [126, 5, 1, "", "showVR"], [126, 5, 1, "", "tag"], [126, 6, 1, "", "to_json"], [126, 6, 1, "", "to_json_dict"], [126, 6, 1, "", "validate"], [126, 4, 1, "", "value"]], "pydicom.dataelem.RawDataElement": [[128, 5, 1, "", "VR"], [128, 6, 1, "", "__init__"], [128, 5, 1, "", "is_implicit_VR"], [128, 5, 1, "", "is_little_endian"], [128, 5, 1, "", "is_raw"], [128, 5, 1, "", "length"], [128, 5, 1, "", "tag"], [128, 5, 1, "", "value"], [128, 5, 1, "", "value_tell"]], "pydicom.dataset": [[129, 3, 1, "", "Dataset"], [130, 3, 1, "", "FileDataset"], [131, 3, 1, "", "FileMetaDataset"], [132, 3, 1, "", "PrivateBlock"], [133, 1, 1, "", "validate_file_meta"]], "pydicom.dataset.Dataset": [[129, 6, 1, "", "__init__"], [129, 6, 1, "", "add"], [129, 6, 1, "", "add_new"], [129, 6, 1, "", "clear"], [129, 6, 1, "", "compress"], [129, 6, 1, "", "convert_pixel_data"], [129, 6, 1, "", "copy"], [129, 6, 1, "", "data_element"], [129, 6, 1, "", "decode"], [129, 6, 1, "", "decompress"], [129, 5, 1, "", "default_element_format"], [129, 5, 1, "", "default_sequence_element_format"], [129, 6, 1, "", "dir"], [129, 6, 1, "", "elements"], [129, 6, 1, "", "ensure_file_meta"], [129, 6, 1, "", "fix_meta_info"], [129, 6, 1, "", "formatted_lines"], [129, 6, 1, "", "from_json"], [129, 6, 1, "", "get"], [129, 6, 1, "", "get_item"], [129, 6, 1, "", "get_private_item"], [129, 6, 1, "", "group_dataset"], [129, 5, 1, "", "indent_chars"], [129, 5, 1, "", "is_implicit_VR"], [129, 5, 1, "", "is_little_endian"], [129, 4, 1, "", "is_original_encoding"], [129, 6, 1, "", "items"], [129, 6, 1, "", "iterall"], [129, 6, 1, "", "keys"], [129, 6, 1, "", "overlay_array"], [129, 4, 1, "", "parent"], [129, 4, 1, "", "parent_seq"], [129, 4, 1, "", "pixel_array"], [129, 6, 1, "", "pop"], [129, 6, 1, "", "popitem"], [129, 6, 1, "", "private_block"], [129, 6, 1, "", "private_creators"], [129, 6, 1, "", "remove_private_tags"], [129, 6, 1, "", "save_as"], [129, 6, 1, "", "set_original_encoding"], [129, 6, 1, "", "setdefault"], [129, 6, 1, "", "to_json"], [129, 6, 1, "", "to_json_dict"], [129, 6, 1, "", "top"], [129, 6, 1, "", "trait_names"], [129, 6, 1, "", "update"], [129, 6, 1, "", "values"], [129, 6, 1, "", "walk"], [129, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileDataset": [[130, 6, 1, "", "__init__"], [130, 5, 1, "", "file_meta"], [130, 5, 1, "", "filename"], [130, 5, 1, "", "fileobj_type"], [130, 5, 1, "", "is_implicit_VR"], [130, 5, 1, "", "is_little_endian"], [130, 5, 1, "", "preamble"], [130, 5, 1, "", "timestamp"]], "pydicom.dataset.FileMetaDataset": [[131, 6, 1, "", "__init__"], [131, 6, 1, "", "validate"]], "pydicom.dataset.PrivateBlock": [[132, 6, 1, "", "__init__"], [132, 6, 1, "", "add_new"], [132, 5, 1, "", "block_start"], [132, 5, 1, "", "dataset"], [132, 6, 1, "", "get_tag"], [132, 5, 1, "", "group"], [132, 5, 1, "", "private_creator"]], "pydicom.encaps": [[134, 1, 1, "", "decode_data_sequence"], [135, 1, 1, "", "defragment_data"], [136, 1, 1, "", "encapsulate"], [137, 1, 1, "", "encapsulate_extended"], [138, 1, 1, "", "fragment_frame"], [139, 1, 1, "", "generate_pixel_data"], [140, 1, 1, "", "generate_pixel_data_fragment"], [141, 1, 1, "", "generate_pixel_data_frame"], [142, 1, 1, "", "get_frame_offsets"], [143, 1, 1, "", "itemize_fragment"], [144, 1, 1, "", "itemize_frame"], [145, 1, 1, "", "read_item"]], "pydicom": [[65, 0, 0, "-", "encoders"], [478, 0, 0, "-", "overlays"], [479, 0, 0, "-", "pixel_data_handlers"], [480, 0, 0, "-", "waveforms"]], "pydicom.encoders": [[146, 2, 1, "", "RLELosslessEncoder"], [148, 1, 1, "", "get_encoder"]], "pydicom.encoders.base": [[147, 3, 1, "", "Encoder"]], "pydicom.encoders.base.Encoder": [[147, 4, 1, "", "UID"], [147, 6, 1, "", "__init__"], [147, 6, 1, "", "add_plugin"], [147, 6, 1, "", "encode"], [147, 4, 1, "", "is_available"], [147, 6, 1, "", "iter_encode"], [147, 6, 1, "", "kwargs_from_ds"], [147, 4, 1, "", "missing_dependencies"], [147, 4, 1, "", "name"], [147, 6, 1, "", "remove_plugin"]], "pydicom.errors": [[149, 7, 1, "", "InvalidDicomError"]], "pydicom.filebase": [[150, 3, 1, "", "DicomBytesIO"], [151, 1, 1, "", "DicomFile"], [152, 3, 1, "", "DicomFileLike"], [153, 3, 1, "", "DicomIO"]], "pydicom.filebase.DicomBytesIO": [[150, 6, 1, "", "__init__"]], "pydicom.filebase.DicomFileLike": [[152, 6, 1, "", "__init__"], [152, 6, 1, "", "no_read"], [152, 6, 1, "", "no_seek"], [152, 6, 1, "", "no_write"]], "pydicom.filebase.DicomIO": [[153, 6, 1, "", "__init__"], [153, 6, 1, "", "read"], [153, 6, 1, "", "read_beUL"], [153, 6, 1, "", "read_beUS"], [153, 6, 1, "", "read_be_tag"], [153, 6, 1, "", "read_leUL"], [153, 6, 1, "", "read_leUS"], [153, 6, 1, "", "read_le_tag"], [153, 6, 1, "", "write_UL"], [153, 6, 1, "", "write_US"], [153, 6, 1, "", "write_beUL"], [153, 6, 1, "", "write_beUS"], [153, 6, 1, "", "write_leUL"], [153, 6, 1, "", "write_leUS"], [153, 6, 1, "", "write_tag"]], "pydicom.filereader": [[154, 1, 1, "", "data_element_generator"], [155, 1, 1, "", "data_element_offset_to_value"], [156, 1, 1, "", "dcmread"], [157, 1, 1, "", "read_dataset"], [158, 1, 1, "", "read_deferred_data_element"], [159, 1, 1, "", "read_file_meta_info"], [160, 1, 1, "", "read_partial"], [161, 1, 1, "", "read_preamble"], [162, 1, 1, "", "read_sequence"], [163, 1, 1, "", "read_sequence_item"]], "pydicom.fileset": [[164, 2, 1, "", "DIRECTORY_RECORDERS"], [165, 3, 1, "", "FileInstance"], [166, 3, 1, "", "FileSet"], [167, 3, 1, "", "RecordNode"], [168, 1, 1, "", "generate_filename"], [169, 1, 1, "", "is_conformant_file_id"]], "pydicom.fileset.FileInstance": [[165, 4, 1, "", "FileID"], [165, 4, 1, "", "SOPClassUID"], [165, 4, 1, "", "SOPInstanceUID"], [165, 4, 1, "", "TransferSyntaxUID"], [165, 6, 1, "", "__init__"], [165, 4, 1, "", "file_set"], [165, 4, 1, "", "for_addition"], [165, 4, 1, "", "for_moving"], [165, 4, 1, "", "for_removal"], [165, 4, 1, "", "is_private"], [165, 4, 1, "", "is_staged"], [165, 6, 1, "", "load"], [165, 5, 1, "", "node"], [165, 4, 1, "", "path"]], "pydicom.fileset.FileSet": [[166, 4, 1, "", "ID"], [166, 4, 1, "", "UID"], [166, 6, 1, "", "__init__"], [166, 6, 1, "", "add"], [166, 6, 1, "", "add_custom"], [166, 6, 1, "", "clear"], [166, 6, 1, "", "copy"], [166, 4, 1, "", "descriptor_character_set"], [166, 4, 1, "", "descriptor_file_id"], [166, 6, 1, "", "find"], [166, 6, 1, "", "find_values"], [166, 4, 1, "", "is_staged"], [166, 6, 1, "", "load"], [166, 4, 1, "", "path"], [166, 6, 1, "", "remove"], [166, 6, 1, "", "write"]], "pydicom.fileset.RecordNode": [[167, 6, 1, "", "__init__"], [167, 6, 1, "", "add"], [167, 4, 1, "", "ancestors"], [167, 5, 1, "", "children"], [167, 4, 1, "", "component"], [167, 4, 1, "", "depth"], [167, 4, 1, "", "file_set"], [167, 4, 1, "", "has_instance"], [167, 4, 1, "", "index"], [167, 5, 1, "", "instance"], [167, 4, 1, "", "is_root"], [167, 4, 1, "", "key"], [167, 4, 1, "", "next"], [167, 4, 1, "", "parent"], [167, 6, 1, "", "prettify"], [167, 4, 1, "", "previous"], [167, 4, 1, "", "record_type"], [167, 6, 1, "", "remove"], [167, 6, 1, "", "reverse"], [167, 4, 1, "", "root"]], "pydicom.fileutil": [[170, 1, 1, "", "absorb_delimiter_item"], [171, 1, 1, "", "find_bytes"], [172, 1, 1, "", "find_delimiter"], [173, 1, 1, "", "length_of_undefined_length"], [174, 1, 1, "", "read_undefined_length_value"]], "pydicom.filewriter": [[175, 1, 1, "", "correct_ambiguous_vr"], [176, 1, 1, "", "correct_ambiguous_vr_element"], [177, 1, 1, "", "dcmwrite"], [178, 1, 1, "", "multi_string"], [179, 1, 1, "", "write_ATvalue"], [180, 1, 1, "", "write_DA"], [181, 1, 1, "", "write_DT"], [182, 1, 1, "", "write_OBvalue"], [183, 1, 1, "", "write_OWvalue"], [184, 1, 1, "", "write_PN"], [185, 1, 1, "", "write_TM"], [186, 1, 1, "", "write_UI"], [187, 1, 1, "", "write_UN"], [188, 1, 1, "", "write_data_element"], [189, 1, 1, "", "write_dataset"], [190, 1, 1, "", "write_file_meta_info"], [191, 1, 1, "", "write_number_string"], [192, 1, 1, "", "write_numbers"], [193, 1, 1, "", "write_sequence"], [194, 1, 1, "", "write_sequence_item"], [195, 1, 1, "", "write_string"], [196, 1, 1, "", "write_text"]], "pydicom.misc": [[197, 1, 1, "", "is_dicom"], [198, 1, 1, "", "size_in_bytes"]], "pydicom.multival": [[199, 3, 1, "", "MultiValue"]], "pydicom.multival.MultiValue": [[199, 6, 1, "", "__init__"], [199, 6, 1, "", "append"], [199, 6, 1, "", "extend"], [199, 6, 1, "", "insert"]], "pydicom.overlays": [[200, 0, 0, "-", "numpy_handler"]], "pydicom.overlays.numpy_handler": [[200, 1, 1, "", "get_expected_length"], [200, 1, 1, "", "get_overlay_array"], [200, 1, 1, "", "is_available"], [200, 1, 1, "", "reshape_overlay_array"]], "pydicom.pixel_data_handlers": [[201, 1, 1, "", "apply_color_lut"], [202, 1, 1, "", "apply_modality_lut"], [203, 1, 1, "", "apply_rescale"], [204, 1, 1, "", "apply_voi"], [205, 1, 1, "", "apply_voi_lut"], [206, 1, 1, "", "apply_windowing"], [207, 1, 1, "", "convert_color_space"], [208, 0, 0, "-", "gdcm_handler"], [209, 0, 0, "-", "jpeg_ls_handler"], [210, 0, 0, "-", "numpy_handler"], [211, 0, 0, "-", "pillow_handler"], [212, 0, 0, "-", "pylibjpeg_handler"], [213, 0, 0, "-", "rle_handler"], [214, 0, 0, "-", "util"]], "pydicom.pixel_data_handlers.gdcm_handler": [[208, 1, 1, "", "create_data_element"], [208, 1, 1, "", "create_image"], [208, 1, 1, "", "get_pixeldata"], [208, 1, 1, "", "is_available"], [208, 1, 1, "", "needs_to_convert_to_RGB"], [208, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [208, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[209, 1, 1, "", "get_pixeldata"], [209, 1, 1, "", "is_available"], [209, 1, 1, "", "needs_to_convert_to_RGB"], [209, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [209, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.numpy_handler": [[210, 1, 1, "", "get_pixeldata"], [210, 1, 1, "", "is_available"], [210, 1, 1, "", "needs_to_convert_to_RGB"], [210, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [210, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pillow_handler": [[211, 1, 1, "", "get_pixeldata"], [211, 1, 1, "", "is_available"], [211, 1, 1, "", "needs_to_convert_to_RGB"], [211, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [211, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[212, 1, 1, "", "as_array"], [212, 1, 1, "", "generate_frames"], [212, 1, 1, "", "get_pixeldata"], [212, 1, 1, "", "is_available"], [212, 1, 1, "", "needs_to_convert_to_RGB"], [212, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [212, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.rle_handler": [[213, 1, 1, "", "get_pixeldata"], [213, 1, 1, "", "is_available"], [213, 1, 1, "", "needs_to_convert_to_RGB"], [213, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [213, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.util": [[214, 1, 1, "", "apply_color_lut"], [214, 1, 1, "", "apply_modality_lut"], [214, 1, 1, "", "apply_voi"], [214, 1, 1, "", "apply_voi_lut"], [214, 1, 1, "", "apply_windowing"], [214, 1, 1, "", "convert_color_space"], [214, 1, 1, "", "dtype_corrected_for_endianness"], [214, 1, 1, "", "expand_ybr422"], [214, 1, 1, "", "get_expected_length"], [214, 1, 1, "", "get_image_pixel_ids"], [214, 1, 1, "", "get_j2k_parameters"], [214, 1, 1, "", "get_nr_frames"], [214, 1, 1, "", "pack_bits"], [214, 1, 1, "", "pixel_dtype"], [214, 1, 1, "", "reshape_pixel_array"], [214, 1, 1, "", "unpack_bits"]], "pydicom.sequence": [[215, 3, 1, "", "Sequence"], [216, 1, 1, "", "validate_dataset"]], "pydicom.sequence.Sequence": [[215, 6, 1, "", "__init__"], [215, 6, 1, "", "append"], [215, 6, 1, "", "extend"], [215, 6, 1, "", "insert"], [215, 4, 1, "", "parent"], [215, 4, 1, "", "parent_dataset"]], "pydicom.tag": [[217, 3, 1, "", "BaseTag"], [218, 1, 1, "", "Tag"], [219, 1, 1, "", "TupleTag"], [220, 1, 1, "", "tag_in_exception"]], "pydicom.tag.BaseTag": [[217, 6, 1, "", "__init__"], [217, 4, 1, "", "elem"], [217, 4, 1, "", "element"], [217, 4, 1, "", "group"], [217, 4, 1, "", "is_private"], [217, 4, 1, "", "is_private_creator"], [217, 4, 1, "", "json_key"], [217, 4, 1, "", "private_creator"]], "pydicom.uid": [[221, 2, 1, "", "AcquisitionContextSRStorage"], [222, 2, 1, "", "AdvancedBlendingPresentationStateStorage"], [223, 2, 1, "", "AllTransferSyntaxes"], [224, 2, 1, "", "AmbulatoryECGWaveformStorage"], [225, 2, 1, "", "ArterialPulseWaveformStorage"], [226, 2, 1, "", "AutorefractionMeasurementsStorage"], [227, 2, 1, "", "BasicStructuredDisplayStorage"], [228, 2, 1, "", "BasicTextSRStorage"], [229, 2, 1, "", "BasicVoiceAudioWaveformStorage"], [230, 2, 1, "", "BlendingSoftcopyPresentationStateStorage"], [231, 2, 1, "", "BodyPositionWaveformStorage"], [232, 2, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [233, 2, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [234, 2, 1, "", "BreastTomosynthesisImageStorage"], [235, 2, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [236, 2, 1, "", "CArmPhotonElectronRadiationStorage"], [237, 2, 1, "", "CTDefinedProcedureProtocolStorage"], [238, 2, 1, "", "CTImageStorage"], [239, 2, 1, "", "CTPerformedProcedureProtocolStorage"], [240, 2, 1, "", "CardiacElectrophysiologyWaveformStorage"], [241, 2, 1, "", "ChestCADSRStorage"], [242, 2, 1, "", "ColonCADSRStorage"], [243, 2, 1, "", "ColorPaletteStorage"], [244, 2, 1, "", "ColorSoftcopyPresentationStateStorage"], [245, 2, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [246, 2, 1, "", "Comprehensive3DSRStorage"], [247, 2, 1, "", "ComprehensiveSRStorage"], [248, 2, 1, "", "ComputedRadiographyImageStorage"], [249, 2, 1, "", "ContentAssessmentResultsStorage"], [250, 2, 1, "", "CornealTopographyMapStorage"], [251, 2, 1, "", "DICOS2DAITStorage"], [252, 2, 1, "", "DICOS3DAITStorage"], [253, 2, 1, "", "DICOSCTImageStorage"], [254, 2, 1, "", "DICOSDigitalXRayImageStorageForPresentation"], [255, 2, 1, "", "DICOSDigitalXRayImageStorageForProcessing"], [256, 2, 1, "", "DICOSQuadrupoleResonanceStorage"], [257, 2, 1, "", "DICOSThreatDetectionReportStorage"], [258, 2, 1, "", "DeflatedExplicitVRLittleEndian"], [259, 2, 1, "", "DeformableSpatialRegistrationStorage"], [260, 2, 1, "", "DermoscopicPhotographyImageStorage"], [261, 2, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [262, 2, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [263, 2, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [264, 2, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [265, 2, 1, "", "DigitalXRayImageStorageForPresentation"], [266, 2, 1, "", "DigitalXRayImageStorageForProcessing"], [267, 2, 1, "", "EddyCurrentImageStorage"], [268, 2, 1, "", "EddyCurrentMultiFrameImageStorage"], [269, 2, 1, "", "ElectromyogramWaveformStorage"], [270, 2, 1, "", "ElectrooculogramWaveformStorage"], [271, 2, 1, "", "EncapsulatedCDAStorage"], [272, 2, 1, "", "EncapsulatedMTLStorage"], [273, 2, 1, "", "EncapsulatedOBJStorage"], [274, 2, 1, "", "EncapsulatedPDFStorage"], [275, 2, 1, "", "EncapsulatedSTLStorage"], [276, 2, 1, "", "EnhancedCTImageStorage"], [277, 2, 1, "", "EnhancedMRColorImageStorage"], [278, 2, 1, "", "EnhancedMRImageStorage"], [279, 2, 1, "", "EnhancedPETImageStorage"], [280, 2, 1, "", "EnhancedSRStorage"], [281, 2, 1, "", "EnhancedUSVolumeStorage"], [282, 2, 1, "", "EnhancedXAImageStorage"], [283, 2, 1, "", "EnhancedXRFImageStorage"], [284, 2, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [285, 2, 1, "", "ExplicitVRBigEndian"], [286, 2, 1, "", "ExplicitVRLittleEndian"], [287, 2, 1, "", "ExtensibleSRStorage"], [288, 2, 1, "", "GeneralAudioWaveformStorage"], [289, 2, 1, "", "GeneralECGWaveformStorage"], [290, 2, 1, "", "GenericImplantTemplateStorage"], [291, 2, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [292, 2, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [293, 2, 1, "", "HEVCM10P51"], [294, 2, 1, "", "HEVCMP51"], [295, 2, 1, "", "HangingProtocolStorage"], [296, 2, 1, "", "HemodynamicWaveformStorage"], [297, 2, 1, "", "ImplantAssemblyTemplateStorage"], [298, 2, 1, "", "ImplantTemplateGroupStorage"], [299, 2, 1, "", "ImplantationPlanSRStorage"], [300, 2, 1, "", "ImplicitVRLittleEndian"], [301, 2, 1, "", "IntraocularLensCalculationsStorage"], [302, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [303, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [304, 2, 1, "", "JPEG2000"], [305, 2, 1, "", "JPEG2000Lossless"], [306, 2, 1, "", "JPEG2000MC"], [307, 2, 1, "", "JPEG2000MCLossless"], [308, 2, 1, "", "JPEG2000TransferSyntaxes"], [309, 2, 1, "", "JPEGBaseline8Bit"], [310, 2, 1, "", "JPEGExtended12Bit"], [311, 2, 1, "", "JPEGLSLossless"], [312, 2, 1, "", "JPEGLSNearLossless"], [313, 2, 1, "", "JPEGLSTransferSyntaxes"], [314, 2, 1, "", "JPEGLossless"], [315, 2, 1, "", "JPEGLosslessSV1"], [316, 2, 1, "", "JPEGTransferSyntaxes"], [317, 2, 1, "", "KeratometryMeasurementsStorage"], [318, 2, 1, "", "KeyObjectSelectionDocumentStorage"], [319, 2, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [320, 2, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [321, 2, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [322, 2, 1, "", "LensometryMeasurementsStorage"], [323, 2, 1, "", "MPEG2MPHL"], [324, 2, 1, "", "MPEG2MPHLF"], [325, 2, 1, "", "MPEG2MPML"], [326, 2, 1, "", "MPEG2MPMLF"], [327, 2, 1, "", "MPEG4HP41"], [328, 2, 1, "", "MPEG4HP41BD"], [329, 2, 1, "", "MPEG4HP41BDF"], [330, 2, 1, "", "MPEG4HP41F"], [331, 2, 1, "", "MPEG4HP422D"], [332, 2, 1, "", "MPEG4HP422DF"], [333, 2, 1, "", "MPEG4HP423D"], [334, 2, 1, "", "MPEG4HP423DF"], [335, 2, 1, "", "MPEG4HP42STEREO"], [336, 2, 1, "", "MPEG4HP42STEREOF"], [337, 2, 1, "", "MPEGTransferSyntaxes"], [338, 2, 1, "", "MRImageStorage"], [339, 2, 1, "", "MRSpectroscopyStorage"], [340, 2, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [341, 2, 1, "", "MammographyCADSRStorage"], [342, 2, 1, "", "MediaStorageDirectoryStorage"], [343, 2, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [344, 2, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [345, 2, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [346, 2, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [347, 2, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [348, 2, 1, "", "MultichannelRespiratoryWaveformStorage"], [349, 2, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [350, 2, 1, "", "NuclearMedicineImageStorage"], [351, 2, 1, "", "OphthalmicAxialMeasurementsStorage"], [352, 2, 1, "", "OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [353, 2, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [354, 2, 1, "", "OphthalmicPhotography16BitImageStorage"], [355, 2, 1, "", "OphthalmicPhotography8BitImageStorage"], [356, 2, 1, "", "OphthalmicThicknessMapStorage"], [357, 2, 1, "", "OphthalmicTomographyImageStorage"], [358, 2, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [359, 2, 1, "", "PYDICOM_IMPLEMENTATION_UID"], [360, 2, 1, "", "PYDICOM_ROOT_UID"], [361, 2, 1, "", "ParametricMapStorage"], [362, 2, 1, "", "PatientRadiationDoseSRStorage"], [363, 2, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [364, 2, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [365, 2, 1, "", "PositronEmissionTomographyImageStorage"], [366, 2, 1, "", "ProcedureLogStorage"], [367, 2, 1, "", "ProtocolApprovalStorage"], [368, 2, 1, "", "PseudoColorSoftcopyPresentationStateStorage"], [369, 2, 1, "", "RE_VALID_UID"], [370, 2, 1, "", "RE_VALID_UID_PREFIX"], [371, 2, 1, "", "RLELossless"], [372, 2, 1, "", "RLETransferSyntaxes"], [373, 2, 1, "", "RTBeamsDeliveryInstructionStorage"], [374, 2, 1, "", "RTBeamsTreatmentRecordStorage"], [375, 2, 1, "", "RTBrachyApplicationSetupDeliveryInstructionStorage"], [376, 2, 1, "", "RTBrachyTreatmentRecordStorage"], [377, 2, 1, "", "RTDoseStorage"], [378, 2, 1, "", "RTImageStorage"], [379, 2, 1, "", "RTIonBeamsTreatmentRecordStorage"], [380, 2, 1, "", "RTIonPlanStorage"], [381, 2, 1, "", "RTPhysicianIntentStorage"], [382, 2, 1, "", "RTPlanStorage"], [383, 2, 1, "", "RTRadiationRecordSetStorage"], [384, 2, 1, "", "RTRadiationSalvageRecordStorage"], [385, 2, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [386, 2, 1, "", "RTRadiationSetStorage"], [387, 2, 1, "", "RTSegmentAnnotationStorage"], [388, 2, 1, "", "RTStructureSetStorage"], [389, 2, 1, "", "RTTreatmentPreparationStorage"], [390, 2, 1, "", "RTTreatmentSummaryRecordStorage"], [391, 2, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [392, 2, 1, "", "RawDataStorage"], [393, 2, 1, "", "RealWorldValueMappingStorage"], [394, 2, 1, "", "RespiratoryWaveformStorage"], [395, 2, 1, "", "RoboticArmRadiationStorage"], [396, 2, 1, "", "RoboticRadiationRecordStorage"], [397, 2, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [398, 2, 1, "", "SMPTEST211020UncompressedInterlacedActiveVideo"], [399, 2, 1, "", "SMPTEST211020UncompressedProgressiveActiveVideo"], [400, 2, 1, "", "SMPTEST211030PCMDigitalAudio"], [401, 2, 1, "", "SecondaryCaptureImageStorage"], [402, 2, 1, "", "SegmentationStorage"], [403, 2, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [404, 2, 1, "", "SimplifiedAdultEchoSRStorage"], [405, 2, 1, "", "SleepElectroencephalogramWaveformStorage"], [406, 2, 1, "", "SpatialFiducialsStorage"], [407, 2, 1, "", "SpatialRegistrationStorage"], [408, 2, 1, "", "SpectaclePrescriptionReportStorage"], [409, 2, 1, "", "StereometricRelationshipStorage"], [410, 2, 1, "", "SubjectiveRefractionMeasurementsStorage"], [411, 2, 1, "", "SurfaceScanMeshStorage"], [412, 2, 1, "", "SurfaceScanPointCloudStorage"], [413, 2, 1, "", "SurfaceSegmentationStorage"], [414, 2, 1, "", "TomotherapeuticRadiationRecordStorage"], [415, 2, 1, "", "TomotherapeuticRadiationStorage"], [416, 2, 1, "", "TractographyResultsStorage"], [417, 2, 1, "", "TwelveLeadECGWaveformStorage"], [418, 3, 1, "", "UID"], [419, 2, 1, "", "UltrasoundImageStorage"], [420, 2, 1, "", "UltrasoundMultiFrameImageStorage"], [421, 2, 1, "", "UncompressedTransferSyntaxes"], [422, 2, 1, "", "VLEndoscopicImageStorage"], [423, 2, 1, "", "VLMicroscopicImageStorage"], [424, 2, 1, "", "VLPhotographicImageStorage"], [425, 2, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [426, 2, 1, "", "VLWholeSlideMicroscopyImageStorage"], [427, 2, 1, "", "VideoEndoscopicImageStorage"], [428, 2, 1, "", "VideoMicroscopicImageStorage"], [429, 2, 1, "", "VideoPhotographicImageStorage"], [430, 2, 1, "", "VisualAcuityMeasurementsStorage"], [431, 2, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [432, 2, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [433, 2, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [434, 2, 1, "", "XADefinedProcedureProtocolStorage"], [435, 2, 1, "", "XAPerformedProcedureProtocolStorage"], [436, 2, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [437, 2, 1, "", "XRay3DAngiographicImageStorage"], [438, 2, 1, "", "XRay3DCraniofacialImageStorage"], [439, 2, 1, "", "XRayAngiographicImageStorage"], [440, 2, 1, "", "XRayRadiationDoseSRStorage"], [441, 2, 1, "", "XRayRadiofluoroscopicImageStorage"], [442, 1, 1, "", "generate_uid"]], "pydicom.uid.UID": [[418, 6, 1, "", "__init__"], [418, 4, 1, "", "info"], [418, 4, 1, "", "is_compressed"], [418, 4, 1, "", "is_deflated"], [418, 4, 1, "", "is_encapsulated"], [418, 4, 1, "", "is_implicit_VR"], [418, 4, 1, "", "is_little_endian"], [418, 4, 1, "", "is_private"], [418, 4, 1, "", "is_retired"], [418, 4, 1, "", "is_transfer_syntax"], [418, 4, 1, "", "is_valid"], [418, 4, 1, "", "keyword"], [418, 4, 1, "", "name"], [418, 4, 1, "", "type"]], "pydicom.valuerep": [[443, 3, 1, "", "DA"], [444, 1, 1, "", "DS"], [445, 3, 1, "", "DSdecimal"], [446, 3, 1, "", "DSfloat"], [447, 3, 1, "", "DT"], [448, 3, 1, "", "IS"], [449, 3, 1, "", "ISfloat"], [450, 1, 1, "", "MultiString"], [451, 3, 1, "", "PersonName"], [452, 3, 1, "", "TM"], [453, 3, 1, "", "VR"], [454, 1, 1, "", "format_number_as_ds"], [455, 1, 1, "", "is_valid_ds"]], "pydicom.valuerep.DA": [[443, 6, 1, "", "__init__"]], "pydicom.valuerep.DSdecimal": [[445, 6, 1, "", "__init__"]], "pydicom.valuerep.DSfloat": [[446, 6, 1, "", "__init__"]], "pydicom.valuerep.DT": [[447, 6, 1, "", "__init__"]], "pydicom.valuerep.IS": [[448, 6, 1, "", "__init__"]], "pydicom.valuerep.ISfloat": [[449, 6, 1, "", "__init__"]], "pydicom.valuerep.PersonName": [[451, 6, 1, "", "__init__"], [451, 4, 1, "", "alphabetic"], [451, 4, 1, "", "components"], [451, 6, 1, "", "decode"], [451, 6, 1, "", "encode"], [451, 6, 1, "", "family_comma_given"], [451, 4, 1, "", "family_name"], [451, 6, 1, "", "formatted"], [451, 6, 1, "", "from_named_components"], [451, 6, 1, "", "from_named_components_veterinary"], [451, 4, 1, "", "given_name"], [451, 4, 1, "", "ideographic"], [451, 4, 1, "", "middle_name"], [451, 4, 1, "", "name_prefix"], [451, 4, 1, "", "name_suffix"], [451, 4, 1, "", "phonetic"]], "pydicom.valuerep.TM": [[452, 6, 1, "", "__init__"]], "pydicom.valuerep.VR": [[453, 6, 1, "", "__init__"]], "pydicom.values": [[456, 1, 1, "", "convert_AE_string"], [457, 1, 1, "", "convert_ATvalue"], [458, 1, 1, "", "convert_DA_string"], [459, 1, 1, "", "convert_DS_string"], [460, 1, 1, "", "convert_DT_string"], [461, 1, 1, "", "convert_IS_string"], [462, 1, 1, "", "convert_OBvalue"], [463, 1, 1, "", "convert_OWvalue"], [464, 1, 1, "", "convert_PN"], [465, 1, 1, "", "convert_SQ"], [466, 1, 1, "", "convert_TM_string"], [467, 1, 1, "", "convert_UI"], [468, 1, 1, "", "convert_UN"], [469, 1, 1, "", "convert_UR_string"], [470, 1, 1, "", "convert_numbers"], [471, 1, 1, "", "convert_single_string"], [472, 1, 1, "", "convert_string"], [473, 1, 1, "", "convert_tag"], [474, 1, 1, "", "convert_text"], [475, 1, 1, "", "convert_value"]], "pydicom.waveforms": [[476, 0, 0, "-", "numpy_handler"]], "pydicom.waveforms.numpy_handler": [[476, 1, 1, "", "generate_multiplex"], [476, 1, 1, "", "is_available"], [476, 1, 1, "", "multiplex_array"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:method", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"show": [0, 14, 26, 28], "dicom": [0, 10, 11, 12, 16, 17, 20, 24, 26, 39, 46, 51, 55, 72, 511, 513, 516], "file": [0, 10, 17, 20, 24, 26, 46, 51, 72, 484, 488, 491, 492, 511, 513], "us": [0, 2, 23, 40, 41, 47, 51, 513, 514], "hierarch": 0, "tree": 0, "imag": [1, 2, 4, 6, 33, 34, 47], "process": [1, 6, 15], "downsiz": 2, "mri": 2, "pydicom": [2, 23, 24, 26, 27, 28, 30, 37, 38, 39, 40, 41, 43, 44, 47, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 482, 483, 484, 504, 505, 506, 513, 514], "decod": [3, 52, 63, 516], "plot": [3, 4, 9], "waveform": [3, 50, 476, 480, 516], "data": [3, 8, 9, 12, 17, 31, 32, 41, 42, 43, 48, 49, 50, 54, 55, 57, 58, 64, 65, 102, 103, 104, 105, 477, 478, 479, 480, 510, 514, 516], "load": [4, 511], "ct": 4, "slice": 4, "axial": 4, "sagitt": 4, "coron": 4, "comput": [5, 13, 19, 21], "time": [5, 13, 19, 21], "gener": [6, 23, 36], "exampl": [6, 24, 26, 33, 37, 509, 513], "input": [6, 7], "output": [6, 7, 8], "metadata": [6, 15], "format": [8, 510], "set": [8, 10, 43, 72, 97, 511], "print": 8, "read": [9, 10, 11, 46, 69, 509], "dataset": [9, 14, 38, 41, 48, 49, 50, 54, 56, 67, 69, 71, 129, 130, 131, 132, 133, 509, 510], "pixel": [9, 31, 32, 33, 34, 41, 42, 49, 65, 477, 479, 514], "rtplan": 11, "list": [11, 483], "inform": 11, "write": [12, 36, 46, 51, 71, 507, 509], "work": [14, 18, 48, 49, 50, 510], "memori": 14, "base": [14, 68, 147], "add": 16, "dictionari": [16, 55], "item": 16, "standard": [16, 509], "anonym": 17, "singl": 17, "sequenc": [18, 38, 60, 215, 216, 509], "analys": 20, "differ": 20, "between": 20, "displai": [22, 43], "unicod": 22, "person": 22, "name": 22, "frequent": 23, "ask": 23, "question": 23, "how": [23, 513], "do": 23, "i": [23, 448], "cite": 23, "instal": [23, 26, 27, 40, 507, 513], "what": [23, 507, 508], "ar": 23, "": 23, "prerequisit": 23, "requir": [23, 31, 507], "option": [23, 24, 26, 30, 53, 507, 513], "version": [23, 39, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 513], "python": [23, 29, 45, 47], "can": 23, "codifi": [24, 26, 51], "command": [24, 26, 28], "A": [24, 26], "simpl": [24, 26], "part": [24, 26], "extend": [25, 26], "cli": [25, 26, 27], "line": 26, "interfac": 26, "guid": [26, 35, 37, 44], "introduct": [26, 27, 39, 40, 43, 47, 48, 49, 50, 51, 510, 514], "combin": [26, 27], "other": [26, 27, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494], "element": [29, 38, 43, 57, 58, 59, 60, 61, 62, 63, 509], "vr": [29, 453], "type": [29, 36], "encod": [30, 31, 32, 33, 52, 65, 146, 147, 148, 516], "plugin": [30, 31, 33], "gdcm": [30, 513], "pylibjpeg": [30, 513], "ad": [31, 509, 511], "an": 31, "rle": 33, "lossless": 33, "valid": [33, 39], "paramet": 33, "avail": 33, "glossari": 34, "modul": 34, "document": [36, 37, 484, 496, 507, 508], "style": 36, "guidelin": 36, "restructuredtext": 36, "get": [37, 54, 509], "start": 37, "user": [37, 44], "api": [37, 481], "refer": [37, 481], "core": 38, "datael": [38, 126], "tag": [38, 61, 217, 218, 219, 220], "best": 39, "practic": 39, "enforc": 39, "futur": 39, "proof": 39, "your": [39, 507, 508], "code": [39, 507], "limit": 39, "major": [39, 484, 485, 486, 487, 488, 489, 490, 491, 493], "packag": [39, 41, 514], "licens": 40, "support": [40, 41, 42, 45, 510], "next": [40, 507, 508, 509], "step": [40, 509], "compress": [41, 42, 514], "third": [41, 514], "parti": [41, 514], "transfer": [41, 42, 483], "syntax": [41, 42, 483], "handl": 42, "precondit": 42, "usag": 42, "privat": [43, 55], "remov": [43, 511], "all": 43, "2": [45, 484, 485, 495, 499, 500, 501, 502, 503, 504], "pars": [46, 64], "view": [47, 509], "matplotlib": 47, "tkinter": 47, "librari": [47, 507, 513], "pil": 47, "wxpython": 47, "overlai": [48, 200, 478], "overlay_arrai": 48, "pixel_arrai": 49, "color": 49, "space": 49, "palett": 49, "modal": 49, "lut": 49, "rescal": 49, "oper": 49, "voi": 49, "window": 49, "waveform_arrai": 50, "from": [51, 510], "scratch": 51, "charact": 52, "charset": [52, 73, 74, 75, 76], "configur": 53, "config": [53, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101], "includ": 54, "util": [55, 64, 70, 214, 477, 483], "datadict": [55, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "represent": [56, 57, 59, 60, 62], "dataelem": [58, 126, 127, 128], "multi": 59, "valu": [59, 60, 62, 63, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], "multiv": [59, 199], "special": 62, "valuerep": [62, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "bulk": [64, 477], "encapsul": [64, 136, 514], "encap": [64, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "creat": [64, 507, 508, 510, 511], "except": 66, "error": [66, 149], "io": [67, 68, 70], "class": [68, 483], "filebas": [68, 150, 151, 152, 153], "fileread": [69, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "fileutil": [70, 170, 171, 172, 173, 174], "filewrit": [71, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "fileset": [72, 164, 165, 166, 167, 168, 169, 511], "convert_encod": 73, "decode_byt": 74, "decode_el": 75, "encode_str": 76, "apply_j2k_correct": 77, "ds_decim": 78, "ds_numpi": 79, "ignor": 80, "invalid_keyword_behavior": 81, "invalid_key_behavior": 82, "rais": 83, "warn": 84, "allow_ds_float": 85, "assume_implicit_vr_switch": 86, "convert_wrong_length_to_un": 87, "data_element_callback": 88, "data_element_callback_kwarg": 89, "datetime_convers": 90, "debug": 91, "enforce_valid_valu": 92, "future_behavior": 93, "overlay_data_handl": 94, "pixel_data_handl": [95, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 479], "reset_data_element_callback": 96, "show_file_meta": 98, "use_ds_decim": 99, "use_ds_numpi": 100, "use_is_numpi": 101, "get_charset_fil": 102, "get_palette_fil": 103, "get_testdata_fil": [104, 105], "add_dict_entri": [106, 107], "add_private_dict_entri": [108, 109], "dictionary_vm": 110, "dictionary_vr": 111, "dictionary_descript": 112, "dictionary_has_tag": 113, "dictionary_is_retir": 114, "dictionary_keyword": 115, "get_entri": 116, "get_private_entri": 117, "keyword_for_tag": 118, "mask_match": 119, "private_dictionary_vm": 120, "private_dictionary_vr": 121, "private_dictionary_descript": 122, "repeater_has_keyword": 123, "repeater_has_tag": 124, "tag_for_keyword": 125, "dataelement_from_raw": 127, "rawdatael": 128, "filedataset": 130, "filemetadataset": 131, "privateblock": 132, "validate_file_meta": 133, "decode_data_sequ": 134, "defragment_data": 135, "encapsulate_extend": 137, "fragment_fram": 138, "generate_pixel_data": 139, "generate_pixel_data_frag": 140, "generate_pixel_data_fram": 141, "get_frame_offset": 142, "itemize_frag": 143, "itemize_fram": 144, "read_item": 145, "rlelosslessencod": 146, "get_encod": 148, "invaliddicomerror": 149, "dicombytesio": 150, "dicomfil": 151, "dicomfilelik": 152, "dicomio": 153, "data_element_gener": 154, "data_element_offset_to_valu": 155, "dcmread": 156, "read_dataset": 157, "read_deferred_data_el": 158, "read_file_meta_info": 159, "read_parti": 160, "read_preambl": 161, "read_sequ": 162, "read_sequence_item": 163, "directory_record": 164, "fileinst": 165, "recordnod": 167, "generate_filenam": 168, "is_conformant_file_id": 169, "absorb_delimiter_item": 170, "find_byt": 171, "find_delimit": 172, "length_of_undefined_length": 173, "read_undefined_length_valu": 174, "correct_ambiguous_vr": 175, "correct_ambiguous_vr_el": 176, "dcmwrite": 177, "multi_str": 178, "write_atvalu": 179, "write_da": 180, "write_dt": 181, "write_obvalu": 182, "write_owvalu": 183, "write_pn": 184, "write_tm": 185, "write_ui": 186, "write_un": 187, "write_data_el": 188, "write_dataset": 189, "write_file_meta_info": 190, "write_number_str": 191, "write_numb": 192, "write_sequ": 193, "write_sequence_item": 194, "write_str": 195, "write_text": 196, "misc": [197, 198, 482], "is_dicom": 197, "size_in_byt": 198, "multivalu": 199, "numpy_handl": [200, 210, 476], "apply_color_lut": 201, "apply_modality_lut": 202, "apply_rescal": 203, "apply_voi": 204, "apply_voi_lut": 205, "apply_window": 206, "convert_color_spac": 207, "gdcm_handler": 208, "jpeg_ls_handl": 209, "pillow_handl": 211, "pylibjpeg_handl": 212, "rle_handl": 213, "validate_dataset": 216, "basetag": 217, "tupletag": 219, "tag_in_except": 220, "uid": [221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 483], "acquisitioncontextsrstorag": 221, "advancedblendingpresentationstatestorag": 222, "alltransfersyntax": 223, "ambulatoryecgwaveformstorag": 224, "arterialpulsewaveformstorag": 225, "autorefractionmeasurementsstorag": 226, "basicstructureddisplaystorag": 227, "basictextsrstorag": 228, "basicvoiceaudiowaveformstorag": 229, "blendingsoftcopypresentationstatestorag": 230, "bodypositionwaveformstorag": 231, "breastprojectionxrayimagestorageforpresent": 232, "breastprojectionxrayimagestorageforprocess": 233, "breasttomosynthesisimagestorag": 234, "carmphotonelectronradiationrecordstorag": 235, "carmphotonelectronradiationstorag": 236, "ctdefinedprocedureprotocolstorag": 237, "ctimagestorag": 238, "ctperformedprocedureprotocolstorag": 239, "cardiacelectrophysiologywaveformstorag": 240, "chestcadsrstorag": 241, "coloncadsrstorag": 242, "colorpalettestorag": 243, "colorsoftcopypresentationstatestorag": 244, "compositingplanarmprvolumetricpresentationstatestorag": 245, "comprehensive3dsrstorag": 246, "comprehensivesrstorag": 247, "computedradiographyimagestorag": 248, "contentassessmentresultsstorag": 249, "cornealtopographymapstorag": 250, "dicos2daitstorag": 251, "dicos3daitstorag": 252, "dicosctimagestorag": 253, "dicosdigitalxrayimagestorageforpresent": 254, "dicosdigitalxrayimagestorageforprocess": 255, "dicosquadrupoleresonancestorag": 256, "dicosthreatdetectionreportstorag": 257, "deflatedexplicitvrlittleendian": 258, "deformablespatialregistrationstorag": 259, "dermoscopicphotographyimagestorag": 260, "digitalintraoralxrayimagestorageforpresent": 261, "digitalintraoralxrayimagestorageforprocess": 262, "digitalmammographyxrayimagestorageforpresent": 263, "digitalmammographyxrayimagestorageforprocess": 264, "digitalxrayimagestorageforpresent": 265, "digitalxrayimagestorageforprocess": 266, "eddycurrentimagestorag": 267, "eddycurrentmultiframeimagestorag": 268, "electromyogramwaveformstorag": 269, "electrooculogramwaveformstorag": 270, "encapsulatedcdastorag": 271, "encapsulatedmtlstorag": 272, "encapsulatedobjstorag": 273, "encapsulatedpdfstorag": 274, "encapsulatedstlstorag": 275, "enhancedctimagestorag": 276, "enhancedmrcolorimagestorag": 277, "enhancedmrimagestorag": 278, "enhancedpetimagestorag": 279, "enhancedsrstorag": 280, "enhancedusvolumestorag": 281, "enhancedxaimagestorag": 282, "enhancedxrfimagestorag": 283, "enhancedxrayradiationdosesrstorag": 284, "explicitvrbigendian": 285, "explicitvrlittleendian": 286, "extensiblesrstorag": 287, "generalaudiowaveformstorag": 288, "generalecgwaveformstorag": 289, "genericimplanttemplatestorag": 290, "grayscaleplanarmprvolumetricpresentationstatestorag": 291, "grayscalesoftcopypresentationstatestorag": 292, "hevcm10p51": 293, "hevcmp51": 294, "hangingprotocolstorag": 295, "hemodynamicwaveformstorag": 296, "implantassemblytemplatestorag": 297, "implanttemplategroupstorag": 298, "implantationplansrstorag": 299, "implicitvrlittleendian": 300, "intraocularlenscalculationsstorag": 301, "intravascularopticalcoherencetomographyimagestorageforpresent": 302, "intravascularopticalcoherencetomographyimagestorageforprocess": 303, "jpeg2000": 304, "jpeg2000lossless": 305, "jpeg2000mc": 306, "jpeg2000mclossless": 307, "jpeg2000transfersyntax": 308, "jpegbaseline8bit": 309, "jpegextended12bit": 310, "jpeglslossless": 311, "jpeglsnearlossless": 312, "jpeglstransfersyntax": 313, "jpeglossless": 314, "jpeglosslesssv1": 315, "jpegtransfersyntax": 316, "keratometrymeasurementsstorag": 317, "keyobjectselectiondocumentstorag": 318, "legacyconvertedenhancedctimagestorag": 319, "legacyconvertedenhancedmrimagestorag": 320, "legacyconvertedenhancedpetimagestorag": 321, "lensometrymeasurementsstorag": 322, "mpeg2mphl": 323, "mpeg2mphlf": 324, "mpeg2mpml": 325, "mpeg2mpmlf": 326, "mpeg4hp41": 327, "mpeg4hp41bd": 328, "mpeg4hp41bdf": 329, "mpeg4hp41f": 330, "mpeg4hp422d": 331, "mpeg4hp422df": 332, "mpeg4hp423d": 333, "mpeg4hp423df": 334, "mpeg4hp42stereo": 335, "mpeg4hp42stereof": 336, "mpegtransfersyntax": 337, "mrimagestorag": 338, "mrspectroscopystorag": 339, "maculargridthicknessandvolumereportstorag": 340, "mammographycadsrstorag": 341, "mediastoragedirectorystorag": 342, "microscopybulksimpleannotationsstorag": 343, "multiframegrayscalebytesecondarycaptureimagestorag": 344, "multiframegrayscalewordsecondarycaptureimagestorag": 345, "multiframesinglebitsecondarycaptureimagestorag": 346, "multiframetruecolorsecondarycaptureimagestorag": 347, "multichannelrespiratorywaveformstorag": 348, "multiplevolumerenderingvolumetricpresentationstatestorag": 349, "nuclearmedicineimagestorag": 350, "ophthalmicaxialmeasurementsstorag": 351, "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorag": 352, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 353, "ophthalmicphotography16bitimagestorag": 354, "ophthalmicphotography8bitimagestorag": 355, "ophthalmicthicknessmapstorag": 356, "ophthalmictomographyimagestorag": 357, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 358, "pydicom_implementation_uid": 359, "pydicom_root_uid": 360, "parametricmapstorag": 361, "patientradiationdosesrstorag": 362, "performedimagingagentadministrationsrstorag": 363, "plannedimagingagentadministrationsrstorag": 364, "positronemissiontomographyimagestorag": 365, "procedurelogstorag": 366, "protocolapprovalstorag": 367, "pseudocolorsoftcopypresentationstatestorag": 368, "re_valid_uid": 369, "re_valid_uid_prefix": 370, "rlelossless": 371, "rletransfersyntax": 372, "rtbeamsdeliveryinstructionstorag": 373, "rtbeamstreatmentrecordstorag": 374, "rtbrachyapplicationsetupdeliveryinstructionstorag": 375, "rtbrachytreatmentrecordstorag": 376, "rtdosestorag": 377, "rtimagestorag": 378, "rtionbeamstreatmentrecordstorag": 379, "rtionplanstorag": 380, "rtphysicianintentstorag": 381, "rtplanstorag": 382, "rtradiationrecordsetstorag": 383, "rtradiationsalvagerecordstorag": 384, "rtradiationsetdeliveryinstructionstorag": 385, "rtradiationsetstorag": 386, "rtsegmentannotationstorag": 387, "rtstructuresetstorag": 388, "rttreatmentpreparationstorag": 389, "rttreatmentsummaryrecordstorag": 390, "radiopharmaceuticalradiationdosesrstorag": 391, "rawdatastorag": 392, "realworldvaluemappingstorag": 393, "respiratorywaveformstorag": 394, "roboticarmradiationstorag": 395, "roboticradiationrecordstorag": 396, "routinescalpelectroencephalogramwaveformstorag": 397, "smptest211020uncompressedinterlacedactivevideo": 398, "smptest211020uncompressedprogressiveactivevideo": 399, "smptest211030pcmdigitalaudio": 400, "secondarycaptureimagestorag": 401, "segmentationstorag": 402, "segmentedvolumerenderingvolumetricpresentationstatestorag": 403, "simplifiedadultechosrstorag": 404, "sleepelectroencephalogramwaveformstorag": 405, "spatialfiducialsstorag": 406, "spatialregistrationstorag": 407, "spectacleprescriptionreportstorag": 408, "stereometricrelationshipstorag": 409, "subjectiverefractionmeasurementsstorag": 410, "surfacescanmeshstorag": 411, "surfacescanpointcloudstorag": 412, "surfacesegmentationstorag": 413, "tomotherapeuticradiationrecordstorag": 414, "tomotherapeuticradiationstorag": 415, "tractographyresultsstorag": 416, "twelveleadecgwaveformstorag": 417, "ultrasoundimagestorag": 419, "ultrasoundmultiframeimagestorag": 420, "uncompressedtransfersyntax": 421, "vlendoscopicimagestorag": 422, "vlmicroscopicimagestorag": 423, "vlphotographicimagestorag": 424, "vlslidecoordinatesmicroscopicimagestorag": 425, "vlwholeslidemicroscopyimagestorag": 426, "videoendoscopicimagestorag": 427, "videomicroscopicimagestorag": 428, "videophotographicimagestorag": 429, "visualacuitymeasurementsstorag": 430, "volumerenderingvolumetricpresentationstatestorag": 431, "widefieldophthalmicphotography3dcoordinatesimagestorag": 432, "widefieldophthalmicphotographystereographicprojectionimagestorag": 433, "xadefinedprocedureprotocolstorag": 434, "xaperformedprocedureprotocolstorag": 435, "xaxrfgrayscalesoftcopypresentationstatestorag": 436, "xray3dangiographicimagestorag": 437, "xray3dcraniofacialimagestorag": 438, "xrayangiographicimagestorag": 439, "xrayradiationdosesrstorag": 440, "xrayradiofluoroscopicimagestorag": 441, "generate_uid": 442, "da": 443, "d": 444, "dsdecim": 445, "dsfloat": 446, "dt": 447, "isfloat": 449, "multistr": 450, "personnam": 451, "tm": 452, "format_number_as_d": 454, "is_valid_d": 455, "convert_ae_str": 456, "convert_atvalu": 457, "convert_da_str": 458, "convert_ds_str": 459, "convert_dt_str": 460, "convert_is_str": 461, "convert_obvalu": 462, "convert_owvalu": 463, "convert_pn": 464, "convert_sq": 465, "convert_tm_str": 466, "convert_ui": 467, "convert_un": 468, "convert_ur_str": 469, "convert_numb": 470, "convert_single_str": 471, "convert_str": 472, "convert_tag": 473, "convert_text": 474, "convert_valu": 475, "handler": [477, 478, 479, 480], "miscellan": 482, "definit": 483, "storag": 483, "sop": [483, 511], "releas": [484, 488, 513], "note": 484, "3": [484, 486, 496, 503, 505], "0": [484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505], "chang": [484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 498, 500, 502, 503, 504, 505, 507, 508, 511], "enhanc": [484, 485, 486, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505], "fix": [484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505], "intern": [484, 504, 505], "4": [484, 487, 497, 498, 504], "1": [484, 493, 494, 495, 496, 497, 498, 500, 501], "changelog": [484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "infrastructur": [484, 493], "9": [484, 485, 486, 487, 488, 489, 490, 491, 492], "contrib": [484, 488, 491, 492], "contributor": [484, 492], "8": [484, 491], "bug": [484, 485, 486, 487, 489, 490, 491], "7": [484, 490], "6": [484, 489], "5": [484, 488], "thi": [484, 487, 488], "new": [484, 488, 507, 508, 511], "addit": [484, 487], "contribut": [506, 507, 508], "sourc": 507, "download": [507, 508, 513], "current": 507, "pytest": 507, "run": 507, "test": [507, 513], "suit": 507, "branch": [507, 508], "make": [507, 508], "preview": [507, 508], "commit": [507, 508], "pull": [507, 508], "request": [507, 508], "happen": [507, 508], "build": 508, "basic": 509, "access": 509, "modifi": [509, 511], "our": 509, "file_meta": 509, "ani": 509, "categori": 509, "delet": 509, "json": 510, "convert": 510, "larg": 510, "binari": 510, "dicomdir": 511, "The": 511, "exist": 511, "stage": 511, "instanc": 511, "appli": 511, "conclus": 511, "tutori": 512, "offici": 513, "pip": 513, "conda": 513, "pillow": 513, "pyjpegl": 513, "develop": 513, "structur": 515, "report": 515}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Show a dicom file using hierarchical tree": [[0, "show-a-dicom-file-using-hierarchical-tree"]], "Image processing": [[1, "image-processing"], [6, "image-processing"]], "Downsize MRI image using pydicom": [[2, "downsize-mri-image-using-pydicom"]], "Decode and plot Waveform Data": [[3, "decode-and-plot-waveform-data"]], "Load CT slices and plot axial, sagittal and coronal images": [[4, "load-ct-slices-and-plot-axial-sagittal-and-coronal-images"]], "Computation times": [[5, "computation-times"], [13, "computation-times"], [19, "computation-times"], [21, "computation-times"]], "General examples": [[6, "general-examples"]], "Input-output": [[6, "input-output"], [7, "input-output"]], "Metadata processing": [[6, "metadata-processing"], [15, "metadata-processing"]], "Format the output of the data set printing": [[8, "format-the-output-of-the-data-set-printing"]], "Read a Dataset and plot Pixel Data": [[9, "read-a-dataset-and-plot-pixel-data"]], "Read a DICOM File-set": [[10, "read-a-dicom-file-set"]], "Read RTPLAN DICOM and list information": [[11, "read-rtplan-dicom-and-list-information"]], "Write DICOM data": [[12, "write-dicom-data"]], "Show working with memory-based dataset": [[14, "show-working-with-memory-based-dataset"]], "Add dictionary items in the standard DICOM dictionary": [[16, "add-dictionary-items-in-the-standard-dicom-dictionary"]], "Anonymize DICOM data": [[17, "anonymize-dicom-data"]], "Anonymize a single file": [[17, "anonymize-a-single-file"]], "Working with sequences": [[18, "working-with-sequences"]], "Analyse differences between DICOM files": [[20, "analyse-differences-between-dicom-files"]], "Display unicode person names": [[22, "display-unicode-person-names"]], "Frequently asked questions": [[23, "frequently-asked-questions"]], "General": [[23, "general"]], "How do I cite pydicom?": [[23, "how-do-i-cite-pydicom"]], "Installation": [[23, "installation"]], "What are pydicom\u2019s prerequisites?": [[23, "what-are-pydicom-s-prerequisites"]], "Required": [[23, "required"]], "Optional": [[23, "optional"]], "What version of Python can I use?": [[23, "what-version-of-python-can-i-use"]], "pydicom codify command": [[24, "pydicom-codify-command"], [26, "pydicom-codify-command"]], "A simple example": [[24, "a-simple-example"], [26, "a-simple-example"]], "Command options": [[24, "command-options"], [26, "command-options"]], "Codifying a part of a DICOM file": [[24, "codifying-a-part-of-a-dicom-file"], [26, "codifying-a-part-of-a-dicom-file"]], "Extending the CLI": [[25, "extending-the-cli"], [26, "extending-the-cli"]], "Command-line Interface Guide": [[26, "command-line-interface-guide"]], "Introduction": [[26, "introduction"], [27, "introduction"], [39, "introduction"], [40, "introduction"], [43, "introduction"], [47, "introduction"], [48, "introduction"], [49, "introduction"], [50, "introduction"], [51, "introduction"], [514, "introduction"]], "Installing the pydicom CLI": [[26, "installing-the-pydicom-cli"], [27, "installing-the-pydicom-cli"]], "Combining with other CLIs": [[26, "combining-with-other-clis"], [27, "combining-with-other-clis"]], "pydicom show command": [[26, "pydicom-show-command"], [28, "pydicom-show-command"]], "Element VRs and Python types": [[29, "element-vrs-and-python-types"]], "Encoder Plugins Options": [[30, "encoder-plugins-options"]], "pydicom": [[30, "pydicom"]], "gdcm": [[30, "gdcm"]], "pylibjpeg": [[30, "pylibjpeg"]], "Pixel Data Encoder Plugins": [[31, "pixel-data-encoder-plugins"]], "Plugin Requirements": [[31, "plugin-requirements"]], "Adding Plugins to an Encoder": [[31, "adding-plugins-to-an-encoder"]], "Pixel Data Encoding": [[32, "pixel-data-encoding"]], "RLE Lossless Encoding": [[33, "rle-lossless-encoding"]], "Valid Image Pixel Parameters": [[33, "valid-image-pixel-parameters"]], "Available Plugins": [[33, "available-plugins"]], "Examples": [[33, "examples"], [37, "examples"]], "Glossary": [[34, "glossary"]], "Image Pixel Module": [[34, "image-pixel-module"]], "Guides": [[35, "guides"]], "Writing documentation": [[36, "writing-documentation"]], "Types of documentation": [[36, "types-of-documentation"]], "General style guidelines": [[36, "general-style-guidelines"]], "Guidelines for reStructuredText": [[36, "guidelines-for-restructuredtext"]], "pydicom documentation": [[37, "pydicom-documentation"]], "Getting Started": [[37, "getting-started"]], "User Guide": [[37, "user-guide"]], "API Reference": [[37, "api-reference"], [481, "api-reference"]], "Core elements in pydicom": [[38, "core-elements-in-pydicom"]], "Dataset": [[38, "dataset"]], "DataElement": [[38, "dataelement"]], "Tag": [[38, "tag"]], "Sequence": [[38, "sequence"]], "Best Practices": [[39, "best-practices"]], "Enforcing Valid DICOM": [[39, "enforcing-valid-dicom"]], "Future-proofing your code": [[39, "future-proofing-your-code"]], "Limiting the pydicom major version in your package": [[39, "limiting-the-pydicom-major-version-in-your-package"]], "Introduction to pydicom": [[40, "introduction-to-pydicom"]], "License": [[40, "license"]], "Installing": [[40, "installing"]], "Using pydicom": [[40, "using-pydicom"]], "Support": [[40, "support"]], "Next Steps": [[40, "next-steps"]], "Compressing Pixel Data": [[41, "compressing-pixel-data"], [514, "compressing-pixel-data"]], "Compressing using third-party packages": [[41, "compressing-using-third-party-packages"]], "Compressing using pydicom": [[41, "compressing-using-pydicom"], [514, "compressing-using-pydicom"]], "Supported Transfer Syntaxes": [[41, "supported-transfer-syntaxes"], [42, "supported-transfer-syntaxes"]], "Compressing with Dataset.compress()": [[41, "compressing-with-dataset-compress"]], "Handling of compressed pixel data": [[42, "handling-of-compressed-pixel-data"]], "Preconditions": [[42, "preconditions"]], "Usage": [[42, "usage"]], "Private Data Elements": [[43, "private-data-elements"]], "Displaying Private Data Elements in pydicom": [[43, "displaying-private-data-elements-in-pydicom"]], "Setting Private Data Elements with pydicom": [[43, "setting-private-data-elements-with-pydicom"]], "Removing All Private Data Elements": [[43, "removing-all-private-data-elements"]], "pydicom User Guide": [[44, "pydicom-user-guide"]], "Python 2 Support": [[45, "python-2-support"]], "Reading and writing DICOM files": [[46, "reading-and-writing-dicom-files"]], "File Reading/Parsing": [[46, "file-reading-parsing"]], "File Writing": [[46, "file-writing"]], "Viewing Images": [[47, "viewing-images"]], "Using pydicom with matplotlib": [[47, "using-pydicom-with-matplotlib"]], "Using pydicom with Tkinter": [[47, "using-pydicom-with-tkinter"]], "Using pydicom with Python Imaging Library (PIL)": [[47, "using-pydicom-with-python-imaging-library-pil"]], "Using pydicom with wxPython": [[47, "using-pydicom-with-wxpython"]], "Working with Overlay Data": [[48, "working-with-overlay-data"]], "Dataset.overlay_array()": [[48, "dataset-overlay-array"]], "Working with Pixel Data": [[49, "working-with-pixel-data"]], "Dataset.pixel_array": [[49, "dataset-pixel-array"]], "Color space": [[49, "color-space"]], "Palette Color": [[49, "palette-color"]], "Modality LUT or Rescale Operation": [[49, "modality-lut-or-rescale-operation"]], "VOI LUT or Windowing Operation": [[49, "voi-lut-or-windowing-operation"]], "Working with Waveform Data": [[50, "working-with-waveform-data"]], "Dataset.waveform_array()": [[50, "dataset-waveform-array"]], "Writing DICOM Files": [[51, "writing-dicom-files"]], "Using Codify": [[51, "using-codify"]], "Writing a file from Scratch": [[51, "writing-a-file-from-scratch"]], "Character Encoding and Decoding (pydicom.charset)": [[52, "character-encoding-and-decoding-pydicom-charset"]], "Configuration Options (pydicom.config)": [[53, "configuration-options-pydicom-config"]], "Getting Included Datasets (pydicom.data)": [[54, "getting-included-datasets-pydicom-data"]], "Data Dictionary Utilities (pydicom.datadict)": [[55, "data-dictionary-utilities-pydicom-datadict"]], "DICOM Data Dictionary": [[55, "dicom-data-dictionary"]], "Private Data Dictionary": [[55, "private-data-dictionary"]], "Representation of Datasets (pydicom.dataset)": [[56, "representation-of-datasets-pydicom-dataset"]], "Representation of Data Elements": [[57, "representation-of-data-elements"]], "Data Elements (pydicom.dataelem)": [[58, "data-elements-pydicom-dataelem"]], "Element Multi-value Representation (pydicom.multival)": [[59, "element-multi-value-representation-pydicom-multival"]], "Sequence Element Value Representation (pydicom.sequence)": [[60, "sequence-element-value-representation-pydicom-sequence"]], "Element Tags (pydicom.tag)": [[61, "element-tags-pydicom-tag"]], "Specialized Element Value Representation (pydicom.valuerep)": [[62, "specialized-element-value-representation-pydicom-valuerep"]], "Element Value Decoding (pydicom.values)": [[63, "element-value-decoding-pydicom-values"]], "Bulk Data Encapsulation Utilities (pydicom.encaps)": [[64, "bulk-data-encapsulation-utilities-pydicom-encaps"]], "Parsing Encapsulated Data": [[64, "parsing-encapsulated-data"]], "Creating Encapsulated Data": [[64, "creating-encapsulated-data"]], "Pixel Data Encoders (pydicom.encoders)": [[65, "pixel-data-encoders-pydicom-encoders"]], "Exceptions (pydicom.errors)": [[66, "exceptions-pydicom-errors"]], "Dataset IO": [[67, "dataset-io"]], "IO Base Classes (pydicom.filebase)": [[68, "io-base-classes-pydicom-filebase"]], "Dataset Reading (pydicom.filereader)": [[69, "dataset-reading-pydicom-filereader"]], "IO Utilities (pydicom.fileutil)": [[70, "io-utilities-pydicom-fileutil"]], "Dataset Writing (pydicom.filewriter)": [[71, "dataset-writing-pydicom-filewriter"]], "DICOM File-sets (pydicom.fileset)": [[72, "dicom-file-sets-pydicom-fileset"]], "pydicom.charset.convert_encodings": [[73, "pydicom-charset-convert-encodings"]], "pydicom.charset.decode_bytes": [[74, "pydicom-charset-decode-bytes"]], "pydicom.charset.decode_element": [[75, "pydicom-charset-decode-element"]], "pydicom.charset.encode_string": [[76, "pydicom-charset-encode-string"]], "pydicom.config.APPLY_J2K_CORRECTIONS": [[77, "pydicom-config-apply-j2k-corrections"]], "pydicom.config.DS_decimal": [[78, "pydicom-config-ds-decimal"]], "pydicom.config.DS_numpy": [[79, "pydicom-config-ds-numpy"]], "pydicom.config.IGNORE": [[80, "pydicom-config-ignore"]], "pydicom.config.INVALID_KEYWORD_BEHAVIOR": [[81, "pydicom-config-invalid-keyword-behavior"]], "pydicom.config.INVALID_KEY_BEHAVIOR": [[82, "pydicom-config-invalid-key-behavior"]], "pydicom.config.RAISE": [[83, "pydicom-config-raise"]], "pydicom.config.WARN": [[84, "pydicom-config-warn"]], "pydicom.config.allow_DS_float": [[85, "pydicom-config-allow-ds-float"]], "pydicom.config.assume_implicit_vr_switch": [[86, "pydicom-config-assume-implicit-vr-switch"]], "pydicom.config.convert_wrong_length_to_UN": [[87, "pydicom-config-convert-wrong-length-to-un"]], "pydicom.config.data_element_callback": [[88, "pydicom-config-data-element-callback"]], "pydicom.config.data_element_callback_kwargs": [[89, "pydicom-config-data-element-callback-kwargs"]], "pydicom.config.datetime_conversion": [[90, "pydicom-config-datetime-conversion"]], "pydicom.config.debug": [[91, "pydicom-config-debug"]], "pydicom.config.enforce_valid_values": [[92, "pydicom-config-enforce-valid-values"]], "pydicom.config.future_behavior": [[93, "pydicom-config-future-behavior"]], "pydicom.config.overlay_data_handlers": [[94, "pydicom-config-overlay-data-handlers"]], "pydicom.config.pixel_data_handlers": [[95, "pydicom-config-pixel-data-handlers"]], "pydicom.config.reset_data_element_callback": [[96, "pydicom-config-reset-data-element-callback"]], "pydicom.config.settings": [[97, "pydicom-config-settings"]], "pydicom.config.show_file_meta": [[98, "pydicom-config-show-file-meta"]], "pydicom.config.use_DS_decimal": [[99, "pydicom-config-use-ds-decimal"]], "pydicom.config.use_DS_numpy": [[100, "pydicom-config-use-ds-numpy"]], "pydicom.config.use_IS_numpy": [[101, "pydicom-config-use-is-numpy"]], "pydicom.data.get_charset_files": [[102, "pydicom-data-get-charset-files"]], "pydicom.data.get_palette_files": [[103, "pydicom-data-get-palette-files"]], "pydicom.data.get_testdata_file": [[104, "pydicom-data-get-testdata-file"]], "pydicom.data.get_testdata_files": [[105, "pydicom-data-get-testdata-files"]], "pydicom.datadict.add_dict_entries": [[106, "pydicom-datadict-add-dict-entries"]], "pydicom.datadict.add_dict_entry": [[107, "pydicom-datadict-add-dict-entry"]], "pydicom.datadict.add_private_dict_entries": [[108, "pydicom-datadict-add-private-dict-entries"]], "pydicom.datadict.add_private_dict_entry": [[109, "pydicom-datadict-add-private-dict-entry"]], "pydicom.datadict.dictionary_VM": [[110, "pydicom-datadict-dictionary-vm"]], "pydicom.datadict.dictionary_VR": [[111, "pydicom-datadict-dictionary-vr"]], "pydicom.datadict.dictionary_description": [[112, "pydicom-datadict-dictionary-description"]], "pydicom.datadict.dictionary_has_tag": [[113, "pydicom-datadict-dictionary-has-tag"]], "pydicom.datadict.dictionary_is_retired": [[114, "pydicom-datadict-dictionary-is-retired"]], "pydicom.datadict.dictionary_keyword": [[115, "pydicom-datadict-dictionary-keyword"]], "pydicom.datadict.get_entry": [[116, "pydicom-datadict-get-entry"]], "pydicom.datadict.get_private_entry": [[117, "pydicom-datadict-get-private-entry"]], "pydicom.datadict.keyword_for_tag": [[118, "pydicom-datadict-keyword-for-tag"]], "pydicom.datadict.mask_match": [[119, "pydicom-datadict-mask-match"]], "pydicom.datadict.private_dictionary_VM": [[120, "pydicom-datadict-private-dictionary-vm"]], "pydicom.datadict.private_dictionary_VR": [[121, "pydicom-datadict-private-dictionary-vr"]], "pydicom.datadict.private_dictionary_description": [[122, "pydicom-datadict-private-dictionary-description"]], "pydicom.datadict.repeater_has_keyword": [[123, "pydicom-datadict-repeater-has-keyword"]], "pydicom.datadict.repeater_has_tag": [[124, "pydicom-datadict-repeater-has-tag"]], "pydicom.datadict.tag_for_keyword": [[125, "pydicom-datadict-tag-for-keyword"]], "pydicom.dataelem.DataElement": [[126, "pydicom-dataelem-dataelement"]], "pydicom.dataelem.DataElement_from_raw": [[127, "pydicom-dataelem-dataelement-from-raw"]], "pydicom.dataelem.RawDataElement": [[128, "pydicom-dataelem-rawdataelement"]], "pydicom.dataset.Dataset": [[129, "pydicom-dataset-dataset"]], "pydicom.dataset.FileDataset": [[130, "pydicom-dataset-filedataset"]], "pydicom.dataset.FileMetaDataset": [[131, "pydicom-dataset-filemetadataset"]], "pydicom.dataset.PrivateBlock": [[132, "pydicom-dataset-privateblock"]], "pydicom.dataset.validate_file_meta": [[133, "pydicom-dataset-validate-file-meta"]], "pydicom.encaps.decode_data_sequence": [[134, "pydicom-encaps-decode-data-sequence"]], "pydicom.encaps.defragment_data": [[135, "pydicom-encaps-defragment-data"]], "pydicom.encaps.encapsulate": [[136, "pydicom-encaps-encapsulate"]], "pydicom.encaps.encapsulate_extended": [[137, "pydicom-encaps-encapsulate-extended"]], "pydicom.encaps.fragment_frame": [[138, "pydicom-encaps-fragment-frame"]], "pydicom.encaps.generate_pixel_data": [[139, "pydicom-encaps-generate-pixel-data"]], "pydicom.encaps.generate_pixel_data_fragment": [[140, "pydicom-encaps-generate-pixel-data-fragment"]], "pydicom.encaps.generate_pixel_data_frame": [[141, "pydicom-encaps-generate-pixel-data-frame"]], "pydicom.encaps.get_frame_offsets": [[142, "pydicom-encaps-get-frame-offsets"]], "pydicom.encaps.itemize_fragment": [[143, "pydicom-encaps-itemize-fragment"]], "pydicom.encaps.itemize_frame": [[144, "pydicom-encaps-itemize-frame"]], "pydicom.encaps.read_item": [[145, "pydicom-encaps-read-item"]], "pydicom.encoders.RLELosslessEncoder": [[146, "pydicom-encoders-rlelosslessencoder"]], "pydicom.encoders.base.Encoder": [[147, "pydicom-encoders-base-encoder"]], "pydicom.encoders.get_encoder": [[148, "pydicom-encoders-get-encoder"]], "pydicom.errors.InvalidDicomError": [[149, "pydicom-errors-invaliddicomerror"]], "pydicom.filebase.DicomBytesIO": [[150, "pydicom-filebase-dicombytesio"]], "pydicom.filebase.DicomFile": [[151, "pydicom-filebase-dicomfile"]], "pydicom.filebase.DicomFileLike": [[152, "pydicom-filebase-dicomfilelike"]], "pydicom.filebase.DicomIO": [[153, "pydicom-filebase-dicomio"]], "pydicom.filereader.data_element_generator": [[154, "pydicom-filereader-data-element-generator"]], "pydicom.filereader.data_element_offset_to_value": [[155, "pydicom-filereader-data-element-offset-to-value"]], "pydicom.filereader.dcmread": [[156, "pydicom-filereader-dcmread"]], "pydicom.filereader.read_dataset": [[157, "pydicom-filereader-read-dataset"]], "pydicom.filereader.read_deferred_data_element": [[158, "pydicom-filereader-read-deferred-data-element"]], "pydicom.filereader.read_file_meta_info": [[159, "pydicom-filereader-read-file-meta-info"]], "pydicom.filereader.read_partial": [[160, "pydicom-filereader-read-partial"]], "pydicom.filereader.read_preamble": [[161, "pydicom-filereader-read-preamble"]], "pydicom.filereader.read_sequence": [[162, "pydicom-filereader-read-sequence"]], "pydicom.filereader.read_sequence_item": [[163, "pydicom-filereader-read-sequence-item"]], "pydicom.fileset.DIRECTORY_RECORDERS": [[164, "pydicom-fileset-directory-recorders"]], "pydicom.fileset.FileInstance": [[165, "pydicom-fileset-fileinstance"]], "pydicom.fileset.FileSet": [[166, "pydicom-fileset-fileset"]], "pydicom.fileset.RecordNode": [[167, "pydicom-fileset-recordnode"]], "pydicom.fileset.generate_filename": [[168, "pydicom-fileset-generate-filename"]], "pydicom.fileset.is_conformant_file_id": [[169, "pydicom-fileset-is-conformant-file-id"]], "pydicom.fileutil.absorb_delimiter_item": [[170, "pydicom-fileutil-absorb-delimiter-item"]], "pydicom.fileutil.find_bytes": [[171, "pydicom-fileutil-find-bytes"]], "pydicom.fileutil.find_delimiter": [[172, "pydicom-fileutil-find-delimiter"]], "pydicom.fileutil.length_of_undefined_length": [[173, "pydicom-fileutil-length-of-undefined-length"]], "pydicom.fileutil.read_undefined_length_value": [[174, "pydicom-fileutil-read-undefined-length-value"]], "pydicom.filewriter.correct_ambiguous_vr": [[175, "pydicom-filewriter-correct-ambiguous-vr"]], "pydicom.filewriter.correct_ambiguous_vr_element": [[176, "pydicom-filewriter-correct-ambiguous-vr-element"]], "pydicom.filewriter.dcmwrite": [[177, "pydicom-filewriter-dcmwrite"]], "pydicom.filewriter.multi_string": [[178, "pydicom-filewriter-multi-string"]], "pydicom.filewriter.write_ATvalue": [[179, "pydicom-filewriter-write-atvalue"]], "pydicom.filewriter.write_DA": [[180, "pydicom-filewriter-write-da"]], "pydicom.filewriter.write_DT": [[181, "pydicom-filewriter-write-dt"]], "pydicom.filewriter.write_OBvalue": [[182, "pydicom-filewriter-write-obvalue"]], "pydicom.filewriter.write_OWvalue": [[183, "pydicom-filewriter-write-owvalue"]], "pydicom.filewriter.write_PN": [[184, "pydicom-filewriter-write-pn"]], "pydicom.filewriter.write_TM": [[185, "pydicom-filewriter-write-tm"]], "pydicom.filewriter.write_UI": [[186, "pydicom-filewriter-write-ui"]], "pydicom.filewriter.write_UN": [[187, "pydicom-filewriter-write-un"]], "pydicom.filewriter.write_data_element": [[188, "pydicom-filewriter-write-data-element"]], "pydicom.filewriter.write_dataset": [[189, "pydicom-filewriter-write-dataset"]], "pydicom.filewriter.write_file_meta_info": [[190, "pydicom-filewriter-write-file-meta-info"]], "pydicom.filewriter.write_number_string": [[191, "pydicom-filewriter-write-number-string"]], "pydicom.filewriter.write_numbers": [[192, "pydicom-filewriter-write-numbers"]], "pydicom.filewriter.write_sequence": [[193, "pydicom-filewriter-write-sequence"]], "pydicom.filewriter.write_sequence_item": [[194, "pydicom-filewriter-write-sequence-item"]], "pydicom.filewriter.write_string": [[195, "pydicom-filewriter-write-string"]], "pydicom.filewriter.write_text": [[196, "pydicom-filewriter-write-text"]], "pydicom.misc.is_dicom": [[197, "pydicom-misc-is-dicom"]], "pydicom.misc.size_in_bytes": [[198, "pydicom-misc-size-in-bytes"]], "pydicom.multival.MultiValue": [[199, "pydicom-multival-multivalue"]], "pydicom.overlays.numpy_handler": [[200, "module-pydicom.overlays.numpy_handler"]], "pydicom.pixel_data_handlers.apply_color_lut": [[201, "pydicom-pixel-data-handlers-apply-color-lut"]], "pydicom.pixel_data_handlers.apply_modality_lut": [[202, "pydicom-pixel-data-handlers-apply-modality-lut"]], "pydicom.pixel_data_handlers.apply_rescale": [[203, "pydicom-pixel-data-handlers-apply-rescale"]], "pydicom.pixel_data_handlers.apply_voi": [[204, "pydicom-pixel-data-handlers-apply-voi"]], "pydicom.pixel_data_handlers.apply_voi_lut": [[205, "pydicom-pixel-data-handlers-apply-voi-lut"]], "pydicom.pixel_data_handlers.apply_windowing": [[206, "pydicom-pixel-data-handlers-apply-windowing"]], "pydicom.pixel_data_handlers.convert_color_space": [[207, "pydicom-pixel-data-handlers-convert-color-space"]], "pydicom.pixel_data_handlers.gdcm_handler": [[208, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[209, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "pydicom.pixel_data_handlers.numpy_handler": [[210, "module-pydicom.pixel_data_handlers.numpy_handler"]], "pydicom.pixel_data_handlers.pillow_handler": [[211, "module-pydicom.pixel_data_handlers.pillow_handler"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[212, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "pydicom.pixel_data_handlers.rle_handler": [[213, "module-pydicom.pixel_data_handlers.rle_handler"]], "pydicom.pixel_data_handlers.util": [[214, "module-pydicom.pixel_data_handlers.util"]], "pydicom.sequence.Sequence": [[215, "pydicom-sequence-sequence"]], "pydicom.sequence.validate_dataset": [[216, "pydicom-sequence-validate-dataset"]], "pydicom.tag.BaseTag": [[217, "pydicom-tag-basetag"]], "pydicom.tag.Tag": [[218, "pydicom-tag-tag"]], "pydicom.tag.TupleTag": [[219, "pydicom-tag-tupletag"]], "pydicom.tag.tag_in_exception": [[220, "pydicom-tag-tag-in-exception"]], "pydicom.uid.AcquisitionContextSRStorage": [[221, "pydicom-uid-acquisitioncontextsrstorage"]], "pydicom.uid.AdvancedBlendingPresentationStateStorage": [[222, "pydicom-uid-advancedblendingpresentationstatestorage"]], "pydicom.uid.AllTransferSyntaxes": [[223, "pydicom-uid-alltransfersyntaxes"]], "pydicom.uid.AmbulatoryECGWaveformStorage": [[224, "pydicom-uid-ambulatoryecgwaveformstorage"]], "pydicom.uid.ArterialPulseWaveformStorage": [[225, "pydicom-uid-arterialpulsewaveformstorage"]], "pydicom.uid.AutorefractionMeasurementsStorage": [[226, "pydicom-uid-autorefractionmeasurementsstorage"]], "pydicom.uid.BasicStructuredDisplayStorage": [[227, "pydicom-uid-basicstructureddisplaystorage"]], "pydicom.uid.BasicTextSRStorage": [[228, "pydicom-uid-basictextsrstorage"]], "pydicom.uid.BasicVoiceAudioWaveformStorage": [[229, "pydicom-uid-basicvoiceaudiowaveformstorage"]], "pydicom.uid.BlendingSoftcopyPresentationStateStorage": [[230, "pydicom-uid-blendingsoftcopypresentationstatestorage"]], "pydicom.uid.BodyPositionWaveformStorage": [[231, "pydicom-uid-bodypositionwaveformstorage"]], "pydicom.uid.BreastProjectionXRayImageStorageForPresentation": [[232, "pydicom-uid-breastprojectionxrayimagestorageforpresentation"]], "pydicom.uid.BreastProjectionXRayImageStorageForProcessing": [[233, "pydicom-uid-breastprojectionxrayimagestorageforprocessing"]], "pydicom.uid.BreastTomosynthesisImageStorage": [[234, "pydicom-uid-breasttomosynthesisimagestorage"]], "pydicom.uid.CArmPhotonElectronRadiationRecordStorage": [[235, "pydicom-uid-carmphotonelectronradiationrecordstorage"]], "pydicom.uid.CArmPhotonElectronRadiationStorage": [[236, "pydicom-uid-carmphotonelectronradiationstorage"]], "pydicom.uid.CTDefinedProcedureProtocolStorage": [[237, "pydicom-uid-ctdefinedprocedureprotocolstorage"]], "pydicom.uid.CTImageStorage": [[238, "pydicom-uid-ctimagestorage"]], "pydicom.uid.CTPerformedProcedureProtocolStorage": [[239, "pydicom-uid-ctperformedprocedureprotocolstorage"]], "pydicom.uid.CardiacElectrophysiologyWaveformStorage": [[240, "pydicom-uid-cardiacelectrophysiologywaveformstorage"]], "pydicom.uid.ChestCADSRStorage": [[241, "pydicom-uid-chestcadsrstorage"]], "pydicom.uid.ColonCADSRStorage": [[242, "pydicom-uid-coloncadsrstorage"]], "pydicom.uid.ColorPaletteStorage": [[243, "pydicom-uid-colorpalettestorage"]], "pydicom.uid.ColorSoftcopyPresentationStateStorage": [[244, "pydicom-uid-colorsoftcopypresentationstatestorage"]], "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage": [[245, "pydicom-uid-compositingplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.Comprehensive3DSRStorage": [[246, "pydicom-uid-comprehensive3dsrstorage"]], "pydicom.uid.ComprehensiveSRStorage": [[247, "pydicom-uid-comprehensivesrstorage"]], "pydicom.uid.ComputedRadiographyImageStorage": [[248, "pydicom-uid-computedradiographyimagestorage"]], "pydicom.uid.ContentAssessmentResultsStorage": [[249, "pydicom-uid-contentassessmentresultsstorage"]], "pydicom.uid.CornealTopographyMapStorage": [[250, "pydicom-uid-cornealtopographymapstorage"]], "pydicom.uid.DICOS2DAITStorage": [[251, "pydicom-uid-dicos2daitstorage"]], "pydicom.uid.DICOS3DAITStorage": [[252, "pydicom-uid-dicos3daitstorage"]], "pydicom.uid.DICOSCTImageStorage": [[253, "pydicom-uid-dicosctimagestorage"]], "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation": [[254, "pydicom-uid-dicosdigitalxrayimagestorageforpresentation"]], "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing": [[255, "pydicom-uid-dicosdigitalxrayimagestorageforprocessing"]], "pydicom.uid.DICOSQuadrupoleResonanceStorage": [[256, "pydicom-uid-dicosquadrupoleresonancestorage"]], "pydicom.uid.DICOSThreatDetectionReportStorage": [[257, "pydicom-uid-dicosthreatdetectionreportstorage"]], "pydicom.uid.DeflatedExplicitVRLittleEndian": [[258, "pydicom-uid-deflatedexplicitvrlittleendian"]], "pydicom.uid.DeformableSpatialRegistrationStorage": [[259, "pydicom-uid-deformablespatialregistrationstorage"]], "pydicom.uid.DermoscopicPhotographyImageStorage": [[260, "pydicom-uid-dermoscopicphotographyimagestorage"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation": [[261, "pydicom-uid-digitalintraoralxrayimagestorageforpresentation"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing": [[262, "pydicom-uid-digitalintraoralxrayimagestorageforprocessing"]], "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation": [[263, "pydicom-uid-digitalmammographyxrayimagestorageforpresentation"]], "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing": [[264, "pydicom-uid-digitalmammographyxrayimagestorageforprocessing"]], "pydicom.uid.DigitalXRayImageStorageForPresentation": [[265, "pydicom-uid-digitalxrayimagestorageforpresentation"]], "pydicom.uid.DigitalXRayImageStorageForProcessing": [[266, "pydicom-uid-digitalxrayimagestorageforprocessing"]], "pydicom.uid.EddyCurrentImageStorage": [[267, "pydicom-uid-eddycurrentimagestorage"]], "pydicom.uid.EddyCurrentMultiFrameImageStorage": [[268, "pydicom-uid-eddycurrentmultiframeimagestorage"]], "pydicom.uid.ElectromyogramWaveformStorage": [[269, "pydicom-uid-electromyogramwaveformstorage"]], "pydicom.uid.ElectrooculogramWaveformStorage": [[270, "pydicom-uid-electrooculogramwaveformstorage"]], "pydicom.uid.EncapsulatedCDAStorage": [[271, "pydicom-uid-encapsulatedcdastorage"]], "pydicom.uid.EncapsulatedMTLStorage": [[272, "pydicom-uid-encapsulatedmtlstorage"]], "pydicom.uid.EncapsulatedOBJStorage": [[273, "pydicom-uid-encapsulatedobjstorage"]], "pydicom.uid.EncapsulatedPDFStorage": [[274, "pydicom-uid-encapsulatedpdfstorage"]], "pydicom.uid.EncapsulatedSTLStorage": [[275, "pydicom-uid-encapsulatedstlstorage"]], "pydicom.uid.EnhancedCTImageStorage": [[276, "pydicom-uid-enhancedctimagestorage"]], "pydicom.uid.EnhancedMRColorImageStorage": [[277, "pydicom-uid-enhancedmrcolorimagestorage"]], "pydicom.uid.EnhancedMRImageStorage": [[278, "pydicom-uid-enhancedmrimagestorage"]], "pydicom.uid.EnhancedPETImageStorage": [[279, "pydicom-uid-enhancedpetimagestorage"]], "pydicom.uid.EnhancedSRStorage": [[280, "pydicom-uid-enhancedsrstorage"]], "pydicom.uid.EnhancedUSVolumeStorage": [[281, "pydicom-uid-enhancedusvolumestorage"]], "pydicom.uid.EnhancedXAImageStorage": [[282, "pydicom-uid-enhancedxaimagestorage"]], "pydicom.uid.EnhancedXRFImageStorage": [[283, "pydicom-uid-enhancedxrfimagestorage"]], "pydicom.uid.EnhancedXRayRadiationDoseSRStorage": [[284, "pydicom-uid-enhancedxrayradiationdosesrstorage"]], "pydicom.uid.ExplicitVRBigEndian": [[285, "pydicom-uid-explicitvrbigendian"]], "pydicom.uid.ExplicitVRLittleEndian": [[286, "pydicom-uid-explicitvrlittleendian"]], "pydicom.uid.ExtensibleSRStorage": [[287, "pydicom-uid-extensiblesrstorage"]], "pydicom.uid.GeneralAudioWaveformStorage": [[288, "pydicom-uid-generalaudiowaveformstorage"]], "pydicom.uid.GeneralECGWaveformStorage": [[289, "pydicom-uid-generalecgwaveformstorage"]], "pydicom.uid.GenericImplantTemplateStorage": [[290, "pydicom-uid-genericimplanttemplatestorage"]], "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage": [[291, "pydicom-uid-grayscaleplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage": [[292, "pydicom-uid-grayscalesoftcopypresentationstatestorage"]], "pydicom.uid.HEVCM10P51": [[293, "pydicom-uid-hevcm10p51"]], "pydicom.uid.HEVCMP51": [[294, "pydicom-uid-hevcmp51"]], "pydicom.uid.HangingProtocolStorage": [[295, "pydicom-uid-hangingprotocolstorage"]], "pydicom.uid.HemodynamicWaveformStorage": [[296, "pydicom-uid-hemodynamicwaveformstorage"]], "pydicom.uid.ImplantAssemblyTemplateStorage": [[297, "pydicom-uid-implantassemblytemplatestorage"]], "pydicom.uid.ImplantTemplateGroupStorage": [[298, "pydicom-uid-implanttemplategroupstorage"]], "pydicom.uid.ImplantationPlanSRStorage": [[299, "pydicom-uid-implantationplansrstorage"]], "pydicom.uid.ImplicitVRLittleEndian": [[300, "pydicom-uid-implicitvrlittleendian"]], "pydicom.uid.IntraocularLensCalculationsStorage": [[301, "pydicom-uid-intraocularlenscalculationsstorage"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation": [[302, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforpresentation"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing": [[303, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforprocessing"]], "pydicom.uid.JPEG2000": [[304, "pydicom-uid-jpeg2000"]], "pydicom.uid.JPEG2000Lossless": [[305, "pydicom-uid-jpeg2000lossless"]], "pydicom.uid.JPEG2000MC": [[306, "pydicom-uid-jpeg2000mc"]], "pydicom.uid.JPEG2000MCLossless": [[307, "pydicom-uid-jpeg2000mclossless"]], "pydicom.uid.JPEG2000TransferSyntaxes": [[308, "pydicom-uid-jpeg2000transfersyntaxes"]], "pydicom.uid.JPEGBaseline8Bit": [[309, "pydicom-uid-jpegbaseline8bit"]], "pydicom.uid.JPEGExtended12Bit": [[310, "pydicom-uid-jpegextended12bit"]], "pydicom.uid.JPEGLSLossless": [[311, "pydicom-uid-jpeglslossless"]], "pydicom.uid.JPEGLSNearLossless": [[312, "pydicom-uid-jpeglsnearlossless"]], "pydicom.uid.JPEGLSTransferSyntaxes": [[313, "pydicom-uid-jpeglstransfersyntaxes"]], "pydicom.uid.JPEGLossless": [[314, "pydicom-uid-jpeglossless"]], "pydicom.uid.JPEGLosslessSV1": [[315, "pydicom-uid-jpeglosslesssv1"]], "pydicom.uid.JPEGTransferSyntaxes": [[316, "pydicom-uid-jpegtransfersyntaxes"]], "pydicom.uid.KeratometryMeasurementsStorage": [[317, "pydicom-uid-keratometrymeasurementsstorage"]], "pydicom.uid.KeyObjectSelectionDocumentStorage": [[318, "pydicom-uid-keyobjectselectiondocumentstorage"]], "pydicom.uid.LegacyConvertedEnhancedCTImageStorage": [[319, "pydicom-uid-legacyconvertedenhancedctimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedMRImageStorage": [[320, "pydicom-uid-legacyconvertedenhancedmrimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedPETImageStorage": [[321, "pydicom-uid-legacyconvertedenhancedpetimagestorage"]], "pydicom.uid.LensometryMeasurementsStorage": [[322, "pydicom-uid-lensometrymeasurementsstorage"]], "pydicom.uid.MPEG2MPHL": [[323, "pydicom-uid-mpeg2mphl"]], "pydicom.uid.MPEG2MPHLF": [[324, "pydicom-uid-mpeg2mphlf"]], "pydicom.uid.MPEG2MPML": [[325, "pydicom-uid-mpeg2mpml"]], "pydicom.uid.MPEG2MPMLF": [[326, "pydicom-uid-mpeg2mpmlf"]], "pydicom.uid.MPEG4HP41": [[327, "pydicom-uid-mpeg4hp41"]], "pydicom.uid.MPEG4HP41BD": [[328, "pydicom-uid-mpeg4hp41bd"]], "pydicom.uid.MPEG4HP41BDF": [[329, "pydicom-uid-mpeg4hp41bdf"]], "pydicom.uid.MPEG4HP41F": [[330, "pydicom-uid-mpeg4hp41f"]], "pydicom.uid.MPEG4HP422D": [[331, "pydicom-uid-mpeg4hp422d"]], "pydicom.uid.MPEG4HP422DF": [[332, "pydicom-uid-mpeg4hp422df"]], "pydicom.uid.MPEG4HP423D": [[333, "pydicom-uid-mpeg4hp423d"]], "pydicom.uid.MPEG4HP423DF": [[334, "pydicom-uid-mpeg4hp423df"]], "pydicom.uid.MPEG4HP42STEREO": [[335, "pydicom-uid-mpeg4hp42stereo"]], "pydicom.uid.MPEG4HP42STEREOF": [[336, "pydicom-uid-mpeg4hp42stereof"]], "pydicom.uid.MPEGTransferSyntaxes": [[337, "pydicom-uid-mpegtransfersyntaxes"]], "pydicom.uid.MRImageStorage": [[338, "pydicom-uid-mrimagestorage"]], "pydicom.uid.MRSpectroscopyStorage": [[339, "pydicom-uid-mrspectroscopystorage"]], "pydicom.uid.MacularGridThicknessAndVolumeReportStorage": [[340, "pydicom-uid-maculargridthicknessandvolumereportstorage"]], "pydicom.uid.MammographyCADSRStorage": [[341, "pydicom-uid-mammographycadsrstorage"]], "pydicom.uid.MediaStorageDirectoryStorage": [[342, "pydicom-uid-mediastoragedirectorystorage"]], "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage": [[343, "pydicom-uid-microscopybulksimpleannotationsstorage"]], "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage": [[344, "pydicom-uid-multiframegrayscalebytesecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage": [[345, "pydicom-uid-multiframegrayscalewordsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage": [[346, "pydicom-uid-multiframesinglebitsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage": [[347, "pydicom-uid-multiframetruecolorsecondarycaptureimagestorage"]], "pydicom.uid.MultichannelRespiratoryWaveformStorage": [[348, "pydicom-uid-multichannelrespiratorywaveformstorage"]], "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage": [[349, "pydicom-uid-multiplevolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.NuclearMedicineImageStorage": [[350, "pydicom-uid-nuclearmedicineimagestorage"]], "pydicom.uid.OphthalmicAxialMeasurementsStorage": [[351, "pydicom-uid-ophthalmicaxialmeasurementsstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage": [[352, "pydicom-uid-ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage": [[353, "pydicom-uid-ophthalmicopticalcoherencetomographyenfaceimagestorage"]], "pydicom.uid.OphthalmicPhotography16BitImageStorage": [[354, "pydicom-uid-ophthalmicphotography16bitimagestorage"]], "pydicom.uid.OphthalmicPhotography8BitImageStorage": [[355, "pydicom-uid-ophthalmicphotography8bitimagestorage"]], "pydicom.uid.OphthalmicThicknessMapStorage": [[356, "pydicom-uid-ophthalmicthicknessmapstorage"]], "pydicom.uid.OphthalmicTomographyImageStorage": [[357, "pydicom-uid-ophthalmictomographyimagestorage"]], "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage": [[358, "pydicom-uid-ophthalmicvisualfieldstaticperimetrymeasurementsstorage"]], "pydicom.uid.PYDICOM_IMPLEMENTATION_UID": [[359, "pydicom-uid-pydicom-implementation-uid"]], "pydicom.uid.PYDICOM_ROOT_UID": [[360, "pydicom-uid-pydicom-root-uid"]], "pydicom.uid.ParametricMapStorage": [[361, "pydicom-uid-parametricmapstorage"]], "pydicom.uid.PatientRadiationDoseSRStorage": [[362, "pydicom-uid-patientradiationdosesrstorage"]], "pydicom.uid.PerformedImagingAgentAdministrationSRStorage": [[363, "pydicom-uid-performedimagingagentadministrationsrstorage"]], "pydicom.uid.PlannedImagingAgentAdministrationSRStorage": [[364, "pydicom-uid-plannedimagingagentadministrationsrstorage"]], "pydicom.uid.PositronEmissionTomographyImageStorage": [[365, "pydicom-uid-positronemissiontomographyimagestorage"]], "pydicom.uid.ProcedureLogStorage": [[366, "pydicom-uid-procedurelogstorage"]], "pydicom.uid.ProtocolApprovalStorage": [[367, "pydicom-uid-protocolapprovalstorage"]], "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage": [[368, "pydicom-uid-pseudocolorsoftcopypresentationstatestorage"]], "pydicom.uid.RE_VALID_UID": [[369, "pydicom-uid-re-valid-uid"]], "pydicom.uid.RE_VALID_UID_PREFIX": [[370, "pydicom-uid-re-valid-uid-prefix"]], "pydicom.uid.RLELossless": [[371, "pydicom-uid-rlelossless"]], "pydicom.uid.RLETransferSyntaxes": [[372, "pydicom-uid-rletransfersyntaxes"]], "pydicom.uid.RTBeamsDeliveryInstructionStorage": [[373, "pydicom-uid-rtbeamsdeliveryinstructionstorage"]], "pydicom.uid.RTBeamsTreatmentRecordStorage": [[374, "pydicom-uid-rtbeamstreatmentrecordstorage"]], "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage": [[375, "pydicom-uid-rtbrachyapplicationsetupdeliveryinstructionstorage"]], "pydicom.uid.RTBrachyTreatmentRecordStorage": [[376, "pydicom-uid-rtbrachytreatmentrecordstorage"]], "pydicom.uid.RTDoseStorage": [[377, "pydicom-uid-rtdosestorage"]], "pydicom.uid.RTImageStorage": [[378, "pydicom-uid-rtimagestorage"]], "pydicom.uid.RTIonBeamsTreatmentRecordStorage": [[379, "pydicom-uid-rtionbeamstreatmentrecordstorage"]], "pydicom.uid.RTIonPlanStorage": [[380, "pydicom-uid-rtionplanstorage"]], "pydicom.uid.RTPhysicianIntentStorage": [[381, "pydicom-uid-rtphysicianintentstorage"]], "pydicom.uid.RTPlanStorage": [[382, "pydicom-uid-rtplanstorage"]], "pydicom.uid.RTRadiationRecordSetStorage": [[383, "pydicom-uid-rtradiationrecordsetstorage"]], "pydicom.uid.RTRadiationSalvageRecordStorage": [[384, "pydicom-uid-rtradiationsalvagerecordstorage"]], "pydicom.uid.RTRadiationSetDeliveryInstructionStorage": [[385, "pydicom-uid-rtradiationsetdeliveryinstructionstorage"]], "pydicom.uid.RTRadiationSetStorage": [[386, "pydicom-uid-rtradiationsetstorage"]], "pydicom.uid.RTSegmentAnnotationStorage": [[387, "pydicom-uid-rtsegmentannotationstorage"]], "pydicom.uid.RTStructureSetStorage": [[388, "pydicom-uid-rtstructuresetstorage"]], "pydicom.uid.RTTreatmentPreparationStorage": [[389, "pydicom-uid-rttreatmentpreparationstorage"]], "pydicom.uid.RTTreatmentSummaryRecordStorage": [[390, "pydicom-uid-rttreatmentsummaryrecordstorage"]], "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage": [[391, "pydicom-uid-radiopharmaceuticalradiationdosesrstorage"]], "pydicom.uid.RawDataStorage": [[392, "pydicom-uid-rawdatastorage"]], "pydicom.uid.RealWorldValueMappingStorage": [[393, "pydicom-uid-realworldvaluemappingstorage"]], "pydicom.uid.RespiratoryWaveformStorage": [[394, "pydicom-uid-respiratorywaveformstorage"]], "pydicom.uid.RoboticArmRadiationStorage": [[395, "pydicom-uid-roboticarmradiationstorage"]], "pydicom.uid.RoboticRadiationRecordStorage": [[396, "pydicom-uid-roboticradiationrecordstorage"]], "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage": [[397, "pydicom-uid-routinescalpelectroencephalogramwaveformstorage"]], "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo": [[398, "pydicom-uid-smptest211020uncompressedinterlacedactivevideo"]], "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo": [[399, "pydicom-uid-smptest211020uncompressedprogressiveactivevideo"]], "pydicom.uid.SMPTEST211030PCMDigitalAudio": [[400, "pydicom-uid-smptest211030pcmdigitalaudio"]], "pydicom.uid.SecondaryCaptureImageStorage": [[401, "pydicom-uid-secondarycaptureimagestorage"]], "pydicom.uid.SegmentationStorage": [[402, "pydicom-uid-segmentationstorage"]], "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage": [[403, "pydicom-uid-segmentedvolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.SimplifiedAdultEchoSRStorage": [[404, "pydicom-uid-simplifiedadultechosrstorage"]], "pydicom.uid.SleepElectroencephalogramWaveformStorage": [[405, "pydicom-uid-sleepelectroencephalogramwaveformstorage"]], "pydicom.uid.SpatialFiducialsStorage": [[406, "pydicom-uid-spatialfiducialsstorage"]], "pydicom.uid.SpatialRegistrationStorage": [[407, "pydicom-uid-spatialregistrationstorage"]], "pydicom.uid.SpectaclePrescriptionReportStorage": [[408, "pydicom-uid-spectacleprescriptionreportstorage"]], "pydicom.uid.StereometricRelationshipStorage": [[409, "pydicom-uid-stereometricrelationshipstorage"]], "pydicom.uid.SubjectiveRefractionMeasurementsStorage": [[410, "pydicom-uid-subjectiverefractionmeasurementsstorage"]], "pydicom.uid.SurfaceScanMeshStorage": [[411, "pydicom-uid-surfacescanmeshstorage"]], "pydicom.uid.SurfaceScanPointCloudStorage": [[412, "pydicom-uid-surfacescanpointcloudstorage"]], "pydicom.uid.SurfaceSegmentationStorage": [[413, "pydicom-uid-surfacesegmentationstorage"]], "pydicom.uid.TomotherapeuticRadiationRecordStorage": [[414, "pydicom-uid-tomotherapeuticradiationrecordstorage"]], "pydicom.uid.TomotherapeuticRadiationStorage": [[415, "pydicom-uid-tomotherapeuticradiationstorage"]], "pydicom.uid.TractographyResultsStorage": [[416, "pydicom-uid-tractographyresultsstorage"]], "pydicom.uid.TwelveLeadECGWaveformStorage": [[417, "pydicom-uid-twelveleadecgwaveformstorage"]], "pydicom.uid.UID": [[418, "pydicom-uid-uid"]], "pydicom.uid.UltrasoundImageStorage": [[419, "pydicom-uid-ultrasoundimagestorage"]], "pydicom.uid.UltrasoundMultiFrameImageStorage": [[420, "pydicom-uid-ultrasoundmultiframeimagestorage"]], "pydicom.uid.UncompressedTransferSyntaxes": [[421, "pydicom-uid-uncompressedtransfersyntaxes"]], "pydicom.uid.VLEndoscopicImageStorage": [[422, "pydicom-uid-vlendoscopicimagestorage"]], "pydicom.uid.VLMicroscopicImageStorage": [[423, "pydicom-uid-vlmicroscopicimagestorage"]], "pydicom.uid.VLPhotographicImageStorage": [[424, "pydicom-uid-vlphotographicimagestorage"]], "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage": [[425, "pydicom-uid-vlslidecoordinatesmicroscopicimagestorage"]], "pydicom.uid.VLWholeSlideMicroscopyImageStorage": [[426, "pydicom-uid-vlwholeslidemicroscopyimagestorage"]], "pydicom.uid.VideoEndoscopicImageStorage": [[427, "pydicom-uid-videoendoscopicimagestorage"]], "pydicom.uid.VideoMicroscopicImageStorage": [[428, "pydicom-uid-videomicroscopicimagestorage"]], "pydicom.uid.VideoPhotographicImageStorage": [[429, "pydicom-uid-videophotographicimagestorage"]], "pydicom.uid.VisualAcuityMeasurementsStorage": [[430, "pydicom-uid-visualacuitymeasurementsstorage"]], "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage": [[431, "pydicom-uid-volumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage": [[432, "pydicom-uid-widefieldophthalmicphotography3dcoordinatesimagestorage"]], "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage": [[433, "pydicom-uid-widefieldophthalmicphotographystereographicprojectionimagestorage"]], "pydicom.uid.XADefinedProcedureProtocolStorage": [[434, "pydicom-uid-xadefinedprocedureprotocolstorage"]], "pydicom.uid.XAPerformedProcedureProtocolStorage": [[435, "pydicom-uid-xaperformedprocedureprotocolstorage"]], "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage": [[436, "pydicom-uid-xaxrfgrayscalesoftcopypresentationstatestorage"]], "pydicom.uid.XRay3DAngiographicImageStorage": [[437, "pydicom-uid-xray3dangiographicimagestorage"]], "pydicom.uid.XRay3DCraniofacialImageStorage": [[438, "pydicom-uid-xray3dcraniofacialimagestorage"]], "pydicom.uid.XRayAngiographicImageStorage": [[439, "pydicom-uid-xrayangiographicimagestorage"]], "pydicom.uid.XRayRadiationDoseSRStorage": [[440, "pydicom-uid-xrayradiationdosesrstorage"]], "pydicom.uid.XRayRadiofluoroscopicImageStorage": [[441, "pydicom-uid-xrayradiofluoroscopicimagestorage"]], "pydicom.uid.generate_uid": [[442, "pydicom-uid-generate-uid"]], "pydicom.valuerep.DA": [[443, "pydicom-valuerep-da"]], "pydicom.valuerep.DS": [[444, "pydicom-valuerep-ds"]], "pydicom.valuerep.DSdecimal": [[445, "pydicom-valuerep-dsdecimal"]], "pydicom.valuerep.DSfloat": [[446, "pydicom-valuerep-dsfloat"]], "pydicom.valuerep.DT": [[447, "pydicom-valuerep-dt"]], "pydicom.valuerep.IS": [[448, "pydicom-valuerep-is"]], "pydicom.valuerep.ISfloat": [[449, "pydicom-valuerep-isfloat"]], "pydicom.valuerep.MultiString": [[450, "pydicom-valuerep-multistring"]], "pydicom.valuerep.PersonName": [[451, "pydicom-valuerep-personname"]], "pydicom.valuerep.TM": [[452, "pydicom-valuerep-tm"]], "pydicom.valuerep.VR": [[453, "pydicom-valuerep-vr"]], "pydicom.valuerep.format_number_as_ds": [[454, "pydicom-valuerep-format-number-as-ds"]], "pydicom.valuerep.is_valid_ds": [[455, "pydicom-valuerep-is-valid-ds"]], "pydicom.values.convert_AE_string": [[456, "pydicom-values-convert-ae-string"]], "pydicom.values.convert_ATvalue": [[457, "pydicom-values-convert-atvalue"]], "pydicom.values.convert_DA_string": [[458, "pydicom-values-convert-da-string"]], "pydicom.values.convert_DS_string": [[459, "pydicom-values-convert-ds-string"]], "pydicom.values.convert_DT_string": [[460, "pydicom-values-convert-dt-string"]], "pydicom.values.convert_IS_string": [[461, "pydicom-values-convert-is-string"]], "pydicom.values.convert_OBvalue": [[462, "pydicom-values-convert-obvalue"]], "pydicom.values.convert_OWvalue": [[463, "pydicom-values-convert-owvalue"]], "pydicom.values.convert_PN": [[464, "pydicom-values-convert-pn"]], "pydicom.values.convert_SQ": [[465, "pydicom-values-convert-sq"]], "pydicom.values.convert_TM_string": [[466, "pydicom-values-convert-tm-string"]], "pydicom.values.convert_UI": [[467, "pydicom-values-convert-ui"]], "pydicom.values.convert_UN": [[468, "pydicom-values-convert-un"]], "pydicom.values.convert_UR_string": [[469, "pydicom-values-convert-ur-string"]], "pydicom.values.convert_numbers": [[470, "pydicom-values-convert-numbers"]], "pydicom.values.convert_single_string": [[471, "pydicom-values-convert-single-string"]], "pydicom.values.convert_string": [[472, "pydicom-values-convert-string"]], "pydicom.values.convert_tag": [[473, "pydicom-values-convert-tag"]], "pydicom.values.convert_text": [[474, "pydicom-values-convert-text"]], "pydicom.values.convert_value": [[475, "pydicom-values-convert-value"]], "pydicom.waveforms.numpy_handler": [[476, "module-pydicom.waveforms.numpy_handler"]], "Bulk Data Handlers": [[477, "bulk-data-handlers"]], "Pixel Data Utilities": [[477, "pixel-data-utilities"]], "Overlay Data Handlers (pydicom.overlays)": [[478, "overlay-data-handlers-pydicom-overlays"]], "Pixel Data Handlers (pydicom.pixel_data_handlers)": [[479, "pixel-data-handlers-pydicom-pixel-data-handlers"]], "Waveform Data Handlers (pydicom.waveforms)": [[480, "waveform-data-handlers-pydicom-waveforms"]], "Miscellaneous (pydicom.misc)": [[482, "miscellaneous-pydicom-misc"]], "UID Definitions and Utilities (pydicom.uid)": [[483, "uid-definitions-and-utilities-pydicom-uid"]], "Transfer Syntax UIDs": [[483, "transfer-syntax-uids"]], "Transfer Syntax Lists": [[483, "transfer-syntax-lists"]], "UID Utilities": [[483, "uid-utilities"]], "Storage SOP Class UIDs": [[483, "storage-sop-class-uids"]], "Release notes": [[484, "release-notes"]], "Version 3.0.0": [[484, "version-3-0-0"], [505, "version-3-0-0"]], "Changes": [[484, "changes"], [484, "id1"], [484, "id5"], [484, "id8"], [484, "id13"], [484, "id20"], [484, "id24"], [484, "id26"], [484, "id30"], [495, "changes"], [496, "changes"], [497, "changes"], [498, "changes"], [500, "changes"], [502, "changes"], [503, "changes"], [504, "changes"], [505, "changes"]], "Enhancements": [[484, "enhancements"], [484, "id2"], [484, "id6"], [484, "id9"], [484, "id12"], [484, "id16"], [484, "id23"], [484, "id27"], [484, "id31"], [484, "id34"], [484, "id39"], [484, "id42"], [491, "enhancements"], [492, "enhancements"], [494, "enhancements"], [495, "enhancements"], [496, "enhancements"], [497, "enhancements"], [499, "enhancements"], [500, "enhancements"], [502, "enhancements"], [503, "enhancements"], [504, "enhancements"], [505, "enhancements"]], "Fixes": [[484, "fixes"], [484, "id3"], [484, "id7"], [484, "id10"], [484, "id11"], [484, "id14"], [484, "id17"], [484, "id19"], [484, "id22"], [484, "id28"], [484, "id32"], [484, "id35"], [484, "id37"], [493, "fixes"], [494, "fixes"], [495, "fixes"], [496, "fixes"], [497, "fixes"], [498, "fixes"], [499, "fixes"], [500, "fixes"], [501, "fixes"], [502, "fixes"], [503, "fixes"], [504, "fixes"], [505, "fixes"]], "Pydicom Internals": [[484, "pydicom-internals"], [484, "id4"], [504, "pydicom-internals"], [505, "pydicom-internals"]], "Version 2.4.0": [[484, "version-2-4-0"], [504, "version-2-4-0"]], "Version 2.3.0": [[484, "version-2-3-0"], [503, "version-2-3-0"]], "Version 2.2.0": [[484, "version-2-2-0"], [502, "version-2-2-0"]], "Version 2.1.1": [[484, "version-2-1-1"], [501, "version-2-1-1"]], "Version 2.1.0": [[484, "version-2-1-0"], [500, "version-2-1-0"]], "Changelog": [[484, "changelog"], [484, "id15"], [484, "id18"], [484, "id21"], [484, "id25"], [484, "id29"], [484, "id33"], [484, "id36"], [484, "id38"], [484, "id40"], [484, "id44"], [484, "id48"], [484, "id52"], [484, "id54"], [484, "id55"], [484, "id60"], [485, "changelog"], [486, "changelog"], [487, "changelog"], [488, "changelog"], [489, "changelog"], [490, "changelog"], [491, "changelog"], [492, "changelog"], [493, "changelog"], [494, "changelog"], [495, "changelog"], [496, "changelog"], [497, "changelog"], [498, "changelog"], [499, "changelog"], [500, "changelog"]], "Version 2.0.0": [[484, "version-2-0-0"], [499, "version-2-0-0"]], "Version 1.4.1": [[484, "version-1-4-1"], [498, "version-1-4-1"]], "Version 1.4.0": [[484, "version-1-4-0"], [497, "version-1-4-0"]], "Version 1.3.0": [[484, "version-1-3-0"], [496, "version-1-3-0"]], "Documentation": [[484, "documentation"], [496, "documentation"]], "Version 1.2.0": [[484, "version-1-2-0"], [495, "version-1-2-0"]], "Version 1.1.0": [[484, "version-1-1-0"], [494, "version-1-1-0"]], "Other": [[484, "other"], [484, "id51"], [484, "id53"], [484, "id59"], [484, "id64"], [485, "other"], [486, "other"], [488, "other"], [489, "other"], [494, "other"]], "Version 1.0.0": [[484, "version-1-0-0"], [493, "version-1-0-0"]], "Major changes": [[484, "major-changes"], [484, "id41"], [484, "id45"], [484, "id49"], [484, "id56"], [484, "id61"], [485, "major-changes"], [486, "major-changes"], [489, "major-changes"], [490, "major-changes"], [491, "major-changes"], [493, "major-changes"]], "Other enhancements": [[484, "other-enhancements"], [493, "other-enhancements"]], "Infrastructure": [[484, "infrastructure"], [493, "infrastructure"]], "Version 0.9.9": [[484, "version-0-9-9"], [492, "version-0-9-9"]], "Contrib file changes": [[484, "contrib-file-changes"], [484, "id43"], [491, "contrib-file-changes"], [492, "contrib-file-changes"]], "Other Contributors": [[484, "other-contributors"], [492, "other-contributors"]], "Version 0.9.8": [[484, "version-0-9-8"], [491, "version-0-9-8"]], "Bug fixes": [[484, "bug-fixes"], [484, "id46"], [484, "id50"], [489, "bug-fixes"], [490, "bug-fixes"], [491, "bug-fixes"]], "Version 0.9.7": [[484, "version-0-9-7"], [490, "version-0-9-7"]], "Other Enhancements": [[484, "id47"], [484, "id57"], [484, "id62"], [485, "other-enhancements"], [486, "other-enhancements"], [490, "other-enhancements"]], "Version 0.9.6": [[484, "version-0-9-6"], [489, "version-0-9-6"]], "Version 0.9.5": [[484, "version-0-9-5"], [488, "version-0-9-5"]], "Major fixes in this release": [[484, "major-fixes-in-this-release"], [488, "major-fixes-in-this-release"]], "Other fixes in this release": [[484, "other-fixes-in-this-release"], [488, "other-fixes-in-this-release"]], "New \u2018Contrib\u2019 files": [[484, "new-contrib-files"], [488, "new-contrib-files"]], "Version 0.9.4": [[484, "version-0-9-4"], [487, "version-0-9-4"]], "Major changes/additions in this version": [[484, "major-changes-additions-in-this-version"], [487, "major-changes-additions-in-this-version"]], "Other changes and bug fixes": [[484, "other-changes-and-bug-fixes"], [487, "other-changes-and-bug-fixes"]], "Version 0.9.3": [[484, "version-0-9-3"], [486, "version-0-9-3"]], "Bug Fixes": [[484, "id58"], [484, "id63"], [485, "bug-fixes"], [486, "bug-fixes"]], "Version 0.9.2": [[484, "version-0-9-2"], [485, "version-0-9-2"]], "Contributing to pydicom": [[506, "contributing-to-pydicom"]], "Contributing a source code change": [[507, "contributing-a-source-code-change"]], "Download the current source code": [[507, "download-the-current-source-code"]], "(Optional) Install required libraries": [[507, "optional-install-required-libraries"]], "Install pytest and run the test suite": [[507, "install-pytest-and-run-the-test-suite"]], "Create a new branch": [[507, "create-a-new-branch"], [508, "create-a-new-branch"]], "Write tests for your changes": [[507, "write-tests-for-your-changes"]], "Make a code change and document it": [[507, "make-a-code-change-and-document-it"]], "Preview your changes": [[507, "preview-your-changes"]], "Commit your changes and make a pull request": [[507, "commit-your-changes-and-make-a-pull-request"], [508, "commit-your-changes-and-make-a-pull-request"]], "What happens next?": [[507, "what-happens-next"], [508, "what-happens-next"]], "Contributing a documentation change": [[508, "contributing-a-documentation-change"]], "Download the documentation": [[508, "download-the-documentation"]], "Build and preview the documentation": [[508, "build-and-preview-the-documentation"]], "Make a change to the documentation": [[508, "make-a-change-to-the-documentation"]], "Dataset basics: read, access, modify, write": [[509, "dataset-basics-read-access-modify-write"]], "Getting our example dataset": [[509, "getting-our-example-dataset"]], "Reading": [[509, "reading"]], "Viewing and accessing": [[509, "viewing-and-accessing"]], "Elements": [[509, "elements"]], "Sequences": [[509, "sequences"], [509, "id1"]], "file_meta": [[509, "file-meta"]], "Modifying": [[509, "modifying"]], "Modifying elements": [[509, "modifying-elements"]], "Adding elements": [[509, "adding-elements"]], "Any category": [[509, "any-category"]], "Standard elements": [[509, "standard-elements"]], "Deleting elements": [[509, "deleting-elements"]], "Writing": [[509, "writing"]], "Next steps": [[509, "next-steps"]], "Introduction to JSON support": [[510, "introduction-to-json-support"]], "Converting a dataset into JSON format": [[510, "converting-a-dataset-into-json-format"]], "Creating a dataset from JSON": [[510, "creating-a-dataset-from-json"]], "Working with large binary data": [[510, "working-with-large-binary-data"]], "DICOM File-sets and DICOMDIR": [[511, "dicom-file-sets-and-dicomdir"]], "The DICOM File-set": [[511, "the-dicom-file-set"]], "The DICOMDIR file": [[511, "the-dicomdir-file"]], "FileSet": [[511, "fileset"]], "Loading existing File-sets": [[511, "loading-existing-file-sets"]], "Creating a new File-set": [[511, "creating-a-new-file-set"]], "Modifying a File-set": [[511, "modifying-a-file-set"]], "FileSet and staging": [[511, "fileset-and-staging"]], "Adding SOP instances": [[511, "adding-sop-instances"]], "Removing instances": [[511, "removing-instances"]], "Applying the changes": [[511, "applying-the-changes"]], "Conclusion": [[511, "conclusion"]], "Tutorials": [[512, "tutorials"]], "How to install pydicom": [[513, "how-to-install-pydicom"]], "Install the official release": [[513, "install-the-official-release"]], "Install using pip": [[513, "install-using-pip"]], "Install using conda": [[513, "install-using-conda"]], "Downloading example/test DICOM files": [[513, "downloading-example-test-dicom-files"]], "Install the optional libraries": [[513, "install-the-optional-libraries"]], "Installing Pillow": [[513, "installing-pillow"]], "Installing pyjpegls": [[513, "installing-pyjpegls"]], "Installing GDCM": [[513, "installing-gdcm"]], "Installing pylibjpeg": [[513, "installing-pylibjpeg"]], "Install the development version": [[513, "install-the-development-version"]], "Encapsulating data compressed by third-party packages": [[514, "encapsulating-data-compressed-by-third-party-packages"]], "Structured Reporting": [[515, "structured-reporting"]], "Waveforms": [[516, "waveforms"]], "Waveforms in DICOM": [[516, "waveforms-in-dicom"]], "Decoding Waveform Data": [[516, "decoding-waveform-data"]], "Encoding Waveform Data": [[516, "encoding-waveform-data"]]}, "indexentries": {"settings (class in pydicom.config)": [[53, "pydicom.config.Settings"]], "infer_sq_for_un_vr (pydicom.config.settings property)": [[53, "pydicom.config.Settings.infer_sq_for_un_vr"]], "reading_validation_mode (pydicom.config.settings property)": [[53, "pydicom.config.Settings.reading_validation_mode"]], "writing_validation_mode (pydicom.config.settings property)": [[53, "pydicom.config.Settings.writing_validation_mode"]], "module": [[65, "module-pydicom.encoders"], [200, "module-pydicom.overlays.numpy_handler"], [208, "module-pydicom.pixel_data_handlers.gdcm_handler"], [209, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"], [210, "module-pydicom.pixel_data_handlers.numpy_handler"], [211, "module-pydicom.pixel_data_handlers.pillow_handler"], [212, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"], [213, "module-pydicom.pixel_data_handlers.rle_handler"], [214, "module-pydicom.pixel_data_handlers.util"], [476, "module-pydicom.waveforms.numpy_handler"], [478, "module-pydicom.overlays"], [479, "module-pydicom.pixel_data_handlers"], [480, "module-pydicom.waveforms"], [481, "module-pydicom"]], "pydicom.encoders": [[65, "module-pydicom.encoders"]], "convert_encodings() (in module pydicom.charset)": [[73, "pydicom.charset.convert_encodings"]], "decode_bytes() (in module pydicom.charset)": [[74, "pydicom.charset.decode_bytes"]], "decode_element() (in module pydicom.charset)": [[75, "pydicom.charset.decode_element"]], "encode_string() (in module pydicom.charset)": [[76, "pydicom.charset.encode_string"]], "apply_j2k_corrections (in module pydicom.config)": [[77, "pydicom.config.APPLY_J2K_CORRECTIONS"]], "ds_decimal() (in module pydicom.config)": [[78, "pydicom.config.DS_decimal"]], "ds_numpy() (in module pydicom.config)": [[79, "pydicom.config.DS_numpy"]], "ignore (in module pydicom.config)": [[80, "pydicom.config.IGNORE"]], "invalid_keyword_behavior (in module pydicom.config)": [[81, "pydicom.config.INVALID_KEYWORD_BEHAVIOR"]], "invalid_key_behavior (in module pydicom.config)": [[82, "pydicom.config.INVALID_KEY_BEHAVIOR"]], "raise (in module pydicom.config)": [[83, "pydicom.config.RAISE"]], "warn (in module pydicom.config)": [[84, "pydicom.config.WARN"]], "allow_ds_float (in module pydicom.config)": [[85, "pydicom.config.allow_DS_float"]], "assume_implicit_vr_switch (in module pydicom.config)": [[86, "pydicom.config.assume_implicit_vr_switch"]], "convert_wrong_length_to_un (in module pydicom.config)": [[87, "pydicom.config.convert_wrong_length_to_UN"]], "data_element_callback (in module pydicom.config)": [[88, "pydicom.config.data_element_callback"]], "data_element_callback_kwargs (in module pydicom.config)": [[89, "pydicom.config.data_element_callback_kwargs"]], "datetime_conversion (in module pydicom.config)": [[90, "pydicom.config.datetime_conversion"]], "debug() (in module pydicom.config)": [[91, "pydicom.config.debug"]], "enforce_valid_values (in module pydicom.config)": [[92, "pydicom.config.enforce_valid_values"]], "future_behavior() (in module pydicom.config)": [[93, "pydicom.config.future_behavior"]], "overlay_data_handlers (in module pydicom.config)": [[94, "pydicom.config.overlay_data_handlers"]], "pixel_data_handlers (in module pydicom.config)": [[95, "pydicom.config.pixel_data_handlers"]], "reset_data_element_callback() (in module pydicom.config)": [[96, "pydicom.config.reset_data_element_callback"]], "settings (in module pydicom.config)": [[97, "pydicom.config.settings"]], "show_file_meta (in module pydicom.config)": [[98, "pydicom.config.show_file_meta"]], "use_ds_decimal (in module pydicom.config)": [[99, "pydicom.config.use_DS_decimal"]], "use_ds_numpy (in module pydicom.config)": [[100, "pydicom.config.use_DS_numpy"]], "use_is_numpy (in module pydicom.config)": [[101, "pydicom.config.use_IS_numpy"]], "get_charset_files() (in module pydicom.data)": [[102, "pydicom.data.get_charset_files"]], "get_palette_files() (in module pydicom.data)": [[103, "pydicom.data.get_palette_files"]], "get_testdata_file() (in module pydicom.data)": [[104, "pydicom.data.get_testdata_file"]], "get_testdata_files() (in module pydicom.data)": [[105, "pydicom.data.get_testdata_files"]], "add_dict_entries() (in module pydicom.datadict)": [[106, "pydicom.datadict.add_dict_entries"]], "add_dict_entry() (in module pydicom.datadict)": [[107, "pydicom.datadict.add_dict_entry"]], "add_private_dict_entries() (in module pydicom.datadict)": [[108, "pydicom.datadict.add_private_dict_entries"]], "add_private_dict_entry() (in module pydicom.datadict)": [[109, "pydicom.datadict.add_private_dict_entry"]], "dictionary_vm() (in module pydicom.datadict)": [[110, "pydicom.datadict.dictionary_VM"]], "dictionary_vr() (in module pydicom.datadict)": [[111, "pydicom.datadict.dictionary_VR"]], "dictionary_description() (in module pydicom.datadict)": [[112, "pydicom.datadict.dictionary_description"]], "dictionary_has_tag() (in module pydicom.datadict)": [[113, "pydicom.datadict.dictionary_has_tag"]], "dictionary_is_retired() (in module pydicom.datadict)": [[114, "pydicom.datadict.dictionary_is_retired"]], "dictionary_keyword() (in module pydicom.datadict)": [[115, "pydicom.datadict.dictionary_keyword"]], "get_entry() (in module pydicom.datadict)": [[116, "pydicom.datadict.get_entry"]], "get_private_entry() (in module pydicom.datadict)": [[117, "pydicom.datadict.get_private_entry"]], "keyword_for_tag() (in module pydicom.datadict)": [[118, "pydicom.datadict.keyword_for_tag"]], "mask_match() (in module pydicom.datadict)": [[119, "pydicom.datadict.mask_match"]], "private_dictionary_vm() (in module pydicom.datadict)": [[120, "pydicom.datadict.private_dictionary_VM"]], "private_dictionary_vr() (in module pydicom.datadict)": [[121, "pydicom.datadict.private_dictionary_VR"]], "private_dictionary_description() (in module pydicom.datadict)": [[122, "pydicom.datadict.private_dictionary_description"]], "repeater_has_keyword() (in module pydicom.datadict)": [[123, "pydicom.datadict.repeater_has_keyword"]], "repeater_has_tag() (in module pydicom.datadict)": [[124, "pydicom.datadict.repeater_has_tag"]], "tag_for_keyword() (in module pydicom.datadict)": [[125, "pydicom.datadict.tag_for_keyword"]], "dataelement (class in pydicom.dataelem)": [[126, "pydicom.dataelem.DataElement"]], "vm (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.VM"]], "vr (pydicom.dataelem.dataelement attribute)": [[126, "pydicom.dataelem.DataElement.VR"]], "__init__() (pydicom.dataelem.dataelement method)": [[126, "pydicom.dataelem.DataElement.__init__"]], "clear() (pydicom.dataelem.dataelement method)": [[126, "pydicom.dataelem.DataElement.clear"]], "descripwidth (pydicom.dataelem.dataelement attribute)": [[126, "pydicom.dataelem.DataElement.descripWidth"]], "empty_value (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.empty_value"]], "from_json() (pydicom.dataelem.dataelement class method)": [[126, "pydicom.dataelem.DataElement.from_json"]], "is_empty (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.is_empty"]], "is_private (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.is_private"]], "is_retired (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.is_retired"]], "is_undefined_length (pydicom.dataelem.dataelement attribute)": [[126, "pydicom.dataelem.DataElement.is_undefined_length"]], "keyword (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.keyword"]], "maxbytestodisplay (pydicom.dataelem.dataelement attribute)": [[126, "pydicom.dataelem.DataElement.maxBytesToDisplay"]], "name (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.name"]], "repval (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.repval"]], "showvr (pydicom.dataelem.dataelement attribute)": [[126, "pydicom.dataelem.DataElement.showVR"]], "tag (pydicom.dataelem.dataelement attribute)": [[126, "pydicom.dataelem.DataElement.tag"]], "to_json() (pydicom.dataelem.dataelement method)": [[126, "pydicom.dataelem.DataElement.to_json"]], "to_json_dict() (pydicom.dataelem.dataelement method)": [[126, "pydicom.dataelem.DataElement.to_json_dict"]], "validate() (pydicom.dataelem.dataelement method)": [[126, "pydicom.dataelem.DataElement.validate"]], "value (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.value"]], "dataelement_from_raw() (in module pydicom.dataelem)": [[127, "pydicom.dataelem.DataElement_from_raw"]], "rawdataelement (class in pydicom.dataelem)": [[128, "pydicom.dataelem.RawDataElement"]], "vr (pydicom.dataelem.rawdataelement attribute)": [[128, "pydicom.dataelem.RawDataElement.VR"]], "__init__() (pydicom.dataelem.rawdataelement method)": [[128, "pydicom.dataelem.RawDataElement.__init__"]], "is_implicit_vr (pydicom.dataelem.rawdataelement attribute)": [[128, "pydicom.dataelem.RawDataElement.is_implicit_VR"]], "is_little_endian (pydicom.dataelem.rawdataelement attribute)": [[128, "pydicom.dataelem.RawDataElement.is_little_endian"]], "is_raw (pydicom.dataelem.rawdataelement attribute)": [[128, "pydicom.dataelem.RawDataElement.is_raw"]], "length (pydicom.dataelem.rawdataelement attribute)": [[128, "pydicom.dataelem.RawDataElement.length"]], "tag (pydicom.dataelem.rawdataelement attribute)": [[128, "pydicom.dataelem.RawDataElement.tag"]], "value (pydicom.dataelem.rawdataelement attribute)": [[128, "pydicom.dataelem.RawDataElement.value"]], "value_tell (pydicom.dataelem.rawdataelement attribute)": [[128, "pydicom.dataelem.RawDataElement.value_tell"]], "dataset (class in pydicom.dataset)": [[129, "pydicom.dataset.Dataset"]], "__init__() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.__init__"]], "add() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.add"]], "add_new() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.add_new"]], "clear() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.clear"]], "compress() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.compress"]], "convert_pixel_data() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.convert_pixel_data"]], "copy() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.copy"]], "data_element() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.data_element"]], "decode() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.decode"]], "decompress() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.decompress"]], "default_element_format (pydicom.dataset.dataset attribute)": [[129, "pydicom.dataset.Dataset.default_element_format"]], "default_sequence_element_format (pydicom.dataset.dataset attribute)": [[129, "pydicom.dataset.Dataset.default_sequence_element_format"]], "dir() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.dir"]], "elements() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.elements"]], "ensure_file_meta() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.ensure_file_meta"]], "fix_meta_info() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.fix_meta_info"]], "formatted_lines() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.formatted_lines"]], "from_json() (pydicom.dataset.dataset class method)": [[129, "pydicom.dataset.Dataset.from_json"]], "get() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.get"]], "get_item() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.get_item"]], "get_private_item() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.get_private_item"]], "group_dataset() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.group_dataset"]], "indent_chars (pydicom.dataset.dataset attribute)": [[129, "pydicom.dataset.Dataset.indent_chars"]], "is_implicit_vr (pydicom.dataset.dataset attribute)": [[129, "pydicom.dataset.Dataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.dataset attribute)": [[129, "pydicom.dataset.Dataset.is_little_endian"]], "is_original_encoding (pydicom.dataset.dataset property)": [[129, "pydicom.dataset.Dataset.is_original_encoding"]], "items() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.items"]], "iterall() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.iterall"]], "keys() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.keys"]], "overlay_array() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.overlay_array"]], "parent (pydicom.dataset.dataset property)": [[129, "pydicom.dataset.Dataset.parent"]], "parent_seq (pydicom.dataset.dataset property)": [[129, "pydicom.dataset.Dataset.parent_seq"]], "pixel_array (pydicom.dataset.dataset property)": [[129, "pydicom.dataset.Dataset.pixel_array"]], "pop() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.pop"]], "popitem() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.popitem"]], "private_block() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.private_block"]], "private_creators() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.private_creators"]], "remove_private_tags() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.remove_private_tags"]], "save_as() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.save_as"]], "set_original_encoding() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.set_original_encoding"]], "setdefault() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.setdefault"]], "to_json() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.to_json"]], "to_json_dict() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.to_json_dict"]], "top() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.top"]], "trait_names() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.trait_names"]], "update() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.update"]], "values() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.values"]], "walk() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.walk"]], "waveform_array() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.waveform_array"]], "filedataset (class in pydicom.dataset)": [[130, "pydicom.dataset.FileDataset"]], "__init__() (pydicom.dataset.filedataset method)": [[130, "pydicom.dataset.FileDataset.__init__"]], "file_meta (pydicom.dataset.filedataset attribute)": [[130, "pydicom.dataset.FileDataset.file_meta"]], "filename (pydicom.dataset.filedataset attribute)": [[130, "pydicom.dataset.FileDataset.filename"]], "fileobj_type (pydicom.dataset.filedataset attribute)": [[130, "pydicom.dataset.FileDataset.fileobj_type"]], "is_implicit_vr (pydicom.dataset.filedataset attribute)": [[130, "pydicom.dataset.FileDataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.filedataset attribute)": [[130, "pydicom.dataset.FileDataset.is_little_endian"]], "preamble (pydicom.dataset.filedataset attribute)": [[130, "pydicom.dataset.FileDataset.preamble"]], "timestamp (pydicom.dataset.filedataset attribute)": [[130, "pydicom.dataset.FileDataset.timestamp"]], "filemetadataset (class in pydicom.dataset)": [[131, "pydicom.dataset.FileMetaDataset"]], "__init__() (pydicom.dataset.filemetadataset method)": [[131, "pydicom.dataset.FileMetaDataset.__init__"]], "validate() (pydicom.dataset.filemetadataset static method)": [[131, "pydicom.dataset.FileMetaDataset.validate"]], "privateblock (class in pydicom.dataset)": [[132, "pydicom.dataset.PrivateBlock"]], "__init__() (pydicom.dataset.privateblock method)": [[132, "pydicom.dataset.PrivateBlock.__init__"]], "add_new() (pydicom.dataset.privateblock method)": [[132, "pydicom.dataset.PrivateBlock.add_new"]], "block_start (pydicom.dataset.privateblock attribute)": [[132, "pydicom.dataset.PrivateBlock.block_start"]], "dataset (pydicom.dataset.privateblock attribute)": [[132, "pydicom.dataset.PrivateBlock.dataset"]], "get_tag() (pydicom.dataset.privateblock method)": [[132, "pydicom.dataset.PrivateBlock.get_tag"]], "group (pydicom.dataset.privateblock attribute)": [[132, "pydicom.dataset.PrivateBlock.group"]], "private_creator (pydicom.dataset.privateblock attribute)": [[132, "pydicom.dataset.PrivateBlock.private_creator"]], "validate_file_meta() (in module pydicom.dataset)": [[133, "pydicom.dataset.validate_file_meta"]], "decode_data_sequence() (in module pydicom.encaps)": [[134, "pydicom.encaps.decode_data_sequence"]], "defragment_data() (in module pydicom.encaps)": [[135, "pydicom.encaps.defragment_data"]], "encapsulate() (in module pydicom.encaps)": [[136, "pydicom.encaps.encapsulate"]], "encapsulate_extended() (in module pydicom.encaps)": [[137, "pydicom.encaps.encapsulate_extended"]], "fragment_frame() (in module pydicom.encaps)": [[138, "pydicom.encaps.fragment_frame"]], "generate_pixel_data() (in module pydicom.encaps)": [[139, "pydicom.encaps.generate_pixel_data"]], "generate_pixel_data_fragment() (in module pydicom.encaps)": [[140, "pydicom.encaps.generate_pixel_data_fragment"]], "generate_pixel_data_frame() (in module pydicom.encaps)": [[141, "pydicom.encaps.generate_pixel_data_frame"]], "get_frame_offsets() (in module pydicom.encaps)": [[142, "pydicom.encaps.get_frame_offsets"]], "itemize_fragment() (in module pydicom.encaps)": [[143, "pydicom.encaps.itemize_fragment"]], "itemize_frame() (in module pydicom.encaps)": [[144, "pydicom.encaps.itemize_frame"]], "read_item() (in module pydicom.encaps)": [[145, "pydicom.encaps.read_item"]], "rlelosslessencoder (in module pydicom.encoders)": [[146, "pydicom.encoders.RLELosslessEncoder"]], "encoder (class in pydicom.encoders.base)": [[147, "pydicom.encoders.base.Encoder"]], "uid (pydicom.encoders.base.encoder property)": [[147, "pydicom.encoders.base.Encoder.UID"]], "__init__() (pydicom.encoders.base.encoder method)": [[147, "pydicom.encoders.base.Encoder.__init__"]], "add_plugin() (pydicom.encoders.base.encoder method)": [[147, "pydicom.encoders.base.Encoder.add_plugin"]], "encode() (pydicom.encoders.base.encoder method)": [[147, "pydicom.encoders.base.Encoder.encode"]], "is_available (pydicom.encoders.base.encoder property)": [[147, "pydicom.encoders.base.Encoder.is_available"]], "iter_encode() (pydicom.encoders.base.encoder method)": [[147, "pydicom.encoders.base.Encoder.iter_encode"]], "kwargs_from_ds() (pydicom.encoders.base.encoder static method)": [[147, "pydicom.encoders.base.Encoder.kwargs_from_ds"]], "missing_dependencies (pydicom.encoders.base.encoder property)": [[147, "pydicom.encoders.base.Encoder.missing_dependencies"]], "name (pydicom.encoders.base.encoder property)": [[147, "pydicom.encoders.base.Encoder.name"]], "remove_plugin() (pydicom.encoders.base.encoder method)": [[147, "pydicom.encoders.base.Encoder.remove_plugin"]], "get_encoder() (in module pydicom.encoders)": [[148, "pydicom.encoders.get_encoder"]], "invaliddicomerror": [[149, "pydicom.errors.InvalidDicomError"]], "dicombytesio (class in pydicom.filebase)": [[150, "pydicom.filebase.DicomBytesIO"]], "__init__() (pydicom.filebase.dicombytesio method)": [[150, "pydicom.filebase.DicomBytesIO.__init__"]], "dicomfile() (in module pydicom.filebase)": [[151, "pydicom.filebase.DicomFile"]], "dicomfilelike (class in pydicom.filebase)": [[152, "pydicom.filebase.DicomFileLike"]], "__init__() (pydicom.filebase.dicomfilelike method)": [[152, "pydicom.filebase.DicomFileLike.__init__"]], "no_read() (pydicom.filebase.dicomfilelike method)": [[152, "pydicom.filebase.DicomFileLike.no_read"]], "no_seek() (pydicom.filebase.dicomfilelike method)": [[152, "pydicom.filebase.DicomFileLike.no_seek"]], "no_write() (pydicom.filebase.dicomfilelike method)": [[152, "pydicom.filebase.DicomFileLike.no_write"]], "dicomio (class in pydicom.filebase)": [[153, "pydicom.filebase.DicomIO"]], "__init__() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.__init__"]], "read() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.read"]], "read_beul() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.read_beUL"]], "read_beus() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.read_beUS"]], "read_be_tag() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.read_be_tag"]], "read_leul() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.read_leUL"]], "read_leus() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.read_leUS"]], "read_le_tag() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.read_le_tag"]], "write_ul() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.write_UL"]], "write_us() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.write_US"]], "write_beul() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.write_beUL"]], "write_beus() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.write_beUS"]], "write_leul() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.write_leUL"]], "write_leus() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.write_leUS"]], "write_tag() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.write_tag"]], "data_element_generator() (in module pydicom.filereader)": [[154, "pydicom.filereader.data_element_generator"]], "data_element_offset_to_value() (in module pydicom.filereader)": [[155, "pydicom.filereader.data_element_offset_to_value"]], "dcmread() (in module pydicom.filereader)": [[156, "pydicom.filereader.dcmread"]], "read_dataset() (in module pydicom.filereader)": [[157, "pydicom.filereader.read_dataset"]], "read_deferred_data_element() (in module pydicom.filereader)": [[158, "pydicom.filereader.read_deferred_data_element"]], "read_file_meta_info() (in module pydicom.filereader)": [[159, "pydicom.filereader.read_file_meta_info"]], "read_partial() (in module pydicom.filereader)": [[160, "pydicom.filereader.read_partial"]], "read_preamble() (in module pydicom.filereader)": [[161, "pydicom.filereader.read_preamble"]], "read_sequence() (in module pydicom.filereader)": [[162, "pydicom.filereader.read_sequence"]], "read_sequence_item() (in module pydicom.filereader)": [[163, "pydicom.filereader.read_sequence_item"]], "directory_recorders (in module pydicom.fileset)": [[164, "pydicom.fileset.DIRECTORY_RECORDERS"]], "fileid (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.FileID"]], "fileinstance (class in pydicom.fileset)": [[165, "pydicom.fileset.FileInstance"]], "sopclassuid (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.SOPClassUID"]], "sopinstanceuid (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.SOPInstanceUID"]], "transfersyntaxuid (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.TransferSyntaxUID"]], "__init__() (pydicom.fileset.fileinstance method)": [[165, "pydicom.fileset.FileInstance.__init__"]], "file_set (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.file_set"]], "for_addition (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.for_addition"]], "for_moving (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.for_moving"]], "for_removal (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.for_removal"]], "is_private (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.is_private"]], "is_staged (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.is_staged"]], "load() (pydicom.fileset.fileinstance method)": [[165, "pydicom.fileset.FileInstance.load"]], "node (pydicom.fileset.fileinstance attribute)": [[165, "pydicom.fileset.FileInstance.node"]], "path (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.path"]], "fileset (class in pydicom.fileset)": [[166, "pydicom.fileset.FileSet"]], "id (pydicom.fileset.fileset property)": [[166, "pydicom.fileset.FileSet.ID"]], "uid (pydicom.fileset.fileset property)": [[166, "pydicom.fileset.FileSet.UID"]], "__init__() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.__init__"]], "add() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.add"]], "add_custom() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.add_custom"]], "clear() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.clear"]], "copy() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.copy"]], "descriptor_character_set (pydicom.fileset.fileset property)": [[166, "pydicom.fileset.FileSet.descriptor_character_set"]], "descriptor_file_id (pydicom.fileset.fileset property)": [[166, "pydicom.fileset.FileSet.descriptor_file_id"]], "find() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.find"]], "find_values() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.find_values"]], "is_staged (pydicom.fileset.fileset property)": [[166, "pydicom.fileset.FileSet.is_staged"]], "load() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.load"]], "path (pydicom.fileset.fileset property)": [[166, "pydicom.fileset.FileSet.path"]], "remove() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.remove"]], "write() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.write"]], "recordnode (class in pydicom.fileset)": [[167, "pydicom.fileset.RecordNode"]], "__init__() (pydicom.fileset.recordnode method)": [[167, "pydicom.fileset.RecordNode.__init__"]], "add() (pydicom.fileset.recordnode method)": [[167, "pydicom.fileset.RecordNode.add"]], "ancestors (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.ancestors"]], "children (pydicom.fileset.recordnode attribute)": [[167, "pydicom.fileset.RecordNode.children"]], "component (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.component"]], "depth (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.depth"]], "file_set (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.file_set"]], "has_instance (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.has_instance"]], "index (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.index"]], "instance (pydicom.fileset.recordnode attribute)": [[167, "pydicom.fileset.RecordNode.instance"]], "is_root (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.is_root"]], "key (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.key"]], "next (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.next"]], "parent (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.parent"]], "prettify() (pydicom.fileset.recordnode method)": [[167, "pydicom.fileset.RecordNode.prettify"]], "previous (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.previous"]], "record_type (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.record_type"]], "remove() (pydicom.fileset.recordnode method)": [[167, "pydicom.fileset.RecordNode.remove"]], "reverse() (pydicom.fileset.recordnode method)": [[167, "pydicom.fileset.RecordNode.reverse"]], "root (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.root"]], "generate_filename() (in module pydicom.fileset)": [[168, "pydicom.fileset.generate_filename"]], "is_conformant_file_id() (in module pydicom.fileset)": [[169, "pydicom.fileset.is_conformant_file_id"]], "absorb_delimiter_item() (in module pydicom.fileutil)": [[170, "pydicom.fileutil.absorb_delimiter_item"]], "find_bytes() (in module pydicom.fileutil)": [[171, "pydicom.fileutil.find_bytes"]], "find_delimiter() (in module pydicom.fileutil)": [[172, "pydicom.fileutil.find_delimiter"]], "length_of_undefined_length() (in module pydicom.fileutil)": [[173, "pydicom.fileutil.length_of_undefined_length"]], "read_undefined_length_value() (in module pydicom.fileutil)": [[174, "pydicom.fileutil.read_undefined_length_value"]], "correct_ambiguous_vr() (in module pydicom.filewriter)": [[175, "pydicom.filewriter.correct_ambiguous_vr"]], "correct_ambiguous_vr_element() (in module pydicom.filewriter)": [[176, "pydicom.filewriter.correct_ambiguous_vr_element"]], "dcmwrite() (in module pydicom.filewriter)": [[177, "pydicom.filewriter.dcmwrite"]], "multi_string() (in module pydicom.filewriter)": [[178, "pydicom.filewriter.multi_string"]], "write_atvalue() (in module pydicom.filewriter)": [[179, "pydicom.filewriter.write_ATvalue"]], "write_da() (in module pydicom.filewriter)": [[180, "pydicom.filewriter.write_DA"]], "write_dt() (in module pydicom.filewriter)": [[181, "pydicom.filewriter.write_DT"]], "write_obvalue() (in module pydicom.filewriter)": [[182, "pydicom.filewriter.write_OBvalue"]], "write_owvalue() (in module pydicom.filewriter)": [[183, "pydicom.filewriter.write_OWvalue"]], "write_pn() (in module pydicom.filewriter)": [[184, "pydicom.filewriter.write_PN"]], "write_tm() (in module pydicom.filewriter)": [[185, "pydicom.filewriter.write_TM"]], "write_ui() (in module pydicom.filewriter)": [[186, "pydicom.filewriter.write_UI"]], "write_un() (in module pydicom.filewriter)": [[187, "pydicom.filewriter.write_UN"]], "write_data_element() (in module pydicom.filewriter)": [[188, "pydicom.filewriter.write_data_element"]], "write_dataset() (in module pydicom.filewriter)": [[189, "pydicom.filewriter.write_dataset"]], "write_file_meta_info() (in module pydicom.filewriter)": [[190, "pydicom.filewriter.write_file_meta_info"]], "write_number_string() (in module pydicom.filewriter)": [[191, "pydicom.filewriter.write_number_string"]], "write_numbers() (in module pydicom.filewriter)": [[192, "pydicom.filewriter.write_numbers"]], "write_sequence() (in module pydicom.filewriter)": [[193, "pydicom.filewriter.write_sequence"]], "write_sequence_item() (in module pydicom.filewriter)": [[194, "pydicom.filewriter.write_sequence_item"]], "write_string() (in module pydicom.filewriter)": [[195, "pydicom.filewriter.write_string"]], "write_text() (in module pydicom.filewriter)": [[196, "pydicom.filewriter.write_text"]], "is_dicom() (in module pydicom.misc)": [[197, "pydicom.misc.is_dicom"]], "size_in_bytes() (in module pydicom.misc)": [[198, "pydicom.misc.size_in_bytes"]], "multivalue (class in pydicom.multival)": [[199, "pydicom.multival.MultiValue"]], "__init__() (pydicom.multival.multivalue method)": [[199, "pydicom.multival.MultiValue.__init__"]], "append() (pydicom.multival.multivalue method)": [[199, "pydicom.multival.MultiValue.append"]], "extend() (pydicom.multival.multivalue method)": [[199, "pydicom.multival.MultiValue.extend"]], "insert() (pydicom.multival.multivalue method)": [[199, "pydicom.multival.MultiValue.insert"]], "get_expected_length() (in module pydicom.overlays.numpy_handler)": [[200, "pydicom.overlays.numpy_handler.get_expected_length"]], "get_overlay_array() (in module pydicom.overlays.numpy_handler)": [[200, "pydicom.overlays.numpy_handler.get_overlay_array"]], "is_available() (in module pydicom.overlays.numpy_handler)": [[200, "pydicom.overlays.numpy_handler.is_available"]], "pydicom.overlays.numpy_handler": [[200, "module-pydicom.overlays.numpy_handler"]], "reshape_overlay_array() (in module pydicom.overlays.numpy_handler)": [[200, "pydicom.overlays.numpy_handler.reshape_overlay_array"]], "apply_color_lut() (in module pydicom.pixel_data_handlers)": [[201, "pydicom.pixel_data_handlers.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers)": [[202, "pydicom.pixel_data_handlers.apply_modality_lut"]], "apply_rescale() (in module pydicom.pixel_data_handlers)": [[203, "pydicom.pixel_data_handlers.apply_rescale"]], "apply_voi() (in module pydicom.pixel_data_handlers)": [[204, "pydicom.pixel_data_handlers.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers)": [[205, "pydicom.pixel_data_handlers.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers)": [[206, "pydicom.pixel_data_handlers.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers)": [[207, "pydicom.pixel_data_handlers.convert_color_space"]], "create_data_element() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[208, "pydicom.pixel_data_handlers.gdcm_handler.create_data_element"]], "create_image() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[208, "pydicom.pixel_data_handlers.gdcm_handler.create_image"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[208, "pydicom.pixel_data_handlers.gdcm_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[208, "pydicom.pixel_data_handlers.gdcm_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[208, "pydicom.pixel_data_handlers.gdcm_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.gdcm_handler": [[208, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[208, "pydicom.pixel_data_handlers.gdcm_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[208, "pydicom.pixel_data_handlers.gdcm_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[209, "pydicom.pixel_data_handlers.jpeg_ls_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[209, "pydicom.pixel_data_handlers.jpeg_ls_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[209, "pydicom.pixel_data_handlers.jpeg_ls_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[209, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[209, "pydicom.pixel_data_handlers.jpeg_ls_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[209, "pydicom.pixel_data_handlers.jpeg_ls_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.numpy_handler)": [[210, "pydicom.pixel_data_handlers.numpy_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.numpy_handler)": [[210, "pydicom.pixel_data_handlers.numpy_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[210, "pydicom.pixel_data_handlers.numpy_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.numpy_handler": [[210, "module-pydicom.pixel_data_handlers.numpy_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[210, "pydicom.pixel_data_handlers.numpy_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.numpy_handler)": [[210, "pydicom.pixel_data_handlers.numpy_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pillow_handler)": [[211, "pydicom.pixel_data_handlers.pillow_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pillow_handler)": [[211, "pydicom.pixel_data_handlers.pillow_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[211, "pydicom.pixel_data_handlers.pillow_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pillow_handler": [[211, "module-pydicom.pixel_data_handlers.pillow_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[211, "pydicom.pixel_data_handlers.pillow_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pillow_handler)": [[211, "pydicom.pixel_data_handlers.pillow_handler.supports_transfer_syntax"]], "as_array() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[212, "pydicom.pixel_data_handlers.pylibjpeg_handler.as_array"]], "generate_frames() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[212, "pydicom.pixel_data_handlers.pylibjpeg_handler.generate_frames"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[212, "pydicom.pixel_data_handlers.pylibjpeg_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[212, "pydicom.pixel_data_handlers.pylibjpeg_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[212, "pydicom.pixel_data_handlers.pylibjpeg_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[212, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[212, "pydicom.pixel_data_handlers.pylibjpeg_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[212, "pydicom.pixel_data_handlers.pylibjpeg_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.rle_handler)": [[213, "pydicom.pixel_data_handlers.rle_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.rle_handler)": [[213, "pydicom.pixel_data_handlers.rle_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[213, "pydicom.pixel_data_handlers.rle_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.rle_handler": [[213, "module-pydicom.pixel_data_handlers.rle_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[213, "pydicom.pixel_data_handlers.rle_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.rle_handler)": [[213, "pydicom.pixel_data_handlers.rle_handler.supports_transfer_syntax"]], "apply_color_lut() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.apply_modality_lut"]], "apply_voi() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.convert_color_space"]], "dtype_corrected_for_endianness() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.dtype_corrected_for_endianness"]], "expand_ybr422() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.expand_ybr422"]], "get_expected_length() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.get_expected_length"]], "get_image_pixel_ids() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.get_image_pixel_ids"]], "get_j2k_parameters() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.get_j2k_parameters"]], "get_nr_frames() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.get_nr_frames"]], "pack_bits() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.pack_bits"]], "pixel_dtype() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.pixel_dtype"]], "pydicom.pixel_data_handlers.util": [[214, "module-pydicom.pixel_data_handlers.util"]], "reshape_pixel_array() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.reshape_pixel_array"]], "unpack_bits() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.unpack_bits"]], "sequence (class in pydicom.sequence)": [[215, "pydicom.sequence.Sequence"]], "__init__() (pydicom.sequence.sequence method)": [[215, "pydicom.sequence.Sequence.__init__"]], "append() (pydicom.sequence.sequence method)": [[215, "pydicom.sequence.Sequence.append"]], "extend() (pydicom.sequence.sequence method)": [[215, "pydicom.sequence.Sequence.extend"]], "insert() (pydicom.sequence.sequence method)": [[215, "pydicom.sequence.Sequence.insert"]], "parent (pydicom.sequence.sequence property)": [[215, "pydicom.sequence.Sequence.parent"]], "parent_dataset (pydicom.sequence.sequence property)": [[215, "pydicom.sequence.Sequence.parent_dataset"]], "validate_dataset() (in module pydicom.sequence)": [[216, "pydicom.sequence.validate_dataset"]], "basetag (class in pydicom.tag)": [[217, "pydicom.tag.BaseTag"]], "__init__() (pydicom.tag.basetag method)": [[217, "pydicom.tag.BaseTag.__init__"]], "elem (pydicom.tag.basetag property)": [[217, "pydicom.tag.BaseTag.elem"]], "element (pydicom.tag.basetag property)": [[217, "pydicom.tag.BaseTag.element"]], "group (pydicom.tag.basetag property)": [[217, "pydicom.tag.BaseTag.group"]], "is_private (pydicom.tag.basetag property)": [[217, "pydicom.tag.BaseTag.is_private"]], "is_private_creator (pydicom.tag.basetag property)": [[217, "pydicom.tag.BaseTag.is_private_creator"]], "json_key (pydicom.tag.basetag property)": [[217, "pydicom.tag.BaseTag.json_key"]], "private_creator (pydicom.tag.basetag property)": [[217, "pydicom.tag.BaseTag.private_creator"]], "tag() (in module pydicom.tag)": [[218, "pydicom.tag.Tag"]], "tupletag() (in module pydicom.tag)": [[219, "pydicom.tag.TupleTag"]], "tag_in_exception() (in module pydicom.tag)": [[220, "pydicom.tag.tag_in_exception"]], "acquisitioncontextsrstorage (in module pydicom.uid)": [[221, "pydicom.uid.AcquisitionContextSRStorage"]], "advancedblendingpresentationstatestorage (in module pydicom.uid)": [[222, "pydicom.uid.AdvancedBlendingPresentationStateStorage"]], "alltransfersyntaxes (in module pydicom.uid)": [[223, "pydicom.uid.AllTransferSyntaxes"]], "ambulatoryecgwaveformstorage (in module pydicom.uid)": [[224, "pydicom.uid.AmbulatoryECGWaveformStorage"]], "arterialpulsewaveformstorage (in module pydicom.uid)": [[225, "pydicom.uid.ArterialPulseWaveformStorage"]], "autorefractionmeasurementsstorage (in module pydicom.uid)": [[226, "pydicom.uid.AutorefractionMeasurementsStorage"]], "basicstructureddisplaystorage (in module pydicom.uid)": [[227, "pydicom.uid.BasicStructuredDisplayStorage"]], "basictextsrstorage (in module pydicom.uid)": [[228, "pydicom.uid.BasicTextSRStorage"]], "basicvoiceaudiowaveformstorage (in module pydicom.uid)": [[229, "pydicom.uid.BasicVoiceAudioWaveformStorage"]], "blendingsoftcopypresentationstatestorage (in module pydicom.uid)": [[230, "pydicom.uid.BlendingSoftcopyPresentationStateStorage"]], "bodypositionwaveformstorage (in module pydicom.uid)": [[231, "pydicom.uid.BodyPositionWaveformStorage"]], "breastprojectionxrayimagestorageforpresentation (in module pydicom.uid)": [[232, "pydicom.uid.BreastProjectionXRayImageStorageForPresentation"]], "breastprojectionxrayimagestorageforprocessing (in module pydicom.uid)": [[233, "pydicom.uid.BreastProjectionXRayImageStorageForProcessing"]], "breasttomosynthesisimagestorage (in module pydicom.uid)": [[234, "pydicom.uid.BreastTomosynthesisImageStorage"]], "carmphotonelectronradiationrecordstorage (in module pydicom.uid)": [[235, "pydicom.uid.CArmPhotonElectronRadiationRecordStorage"]], "carmphotonelectronradiationstorage (in module pydicom.uid)": [[236, "pydicom.uid.CArmPhotonElectronRadiationStorage"]], "ctdefinedprocedureprotocolstorage (in module pydicom.uid)": [[237, "pydicom.uid.CTDefinedProcedureProtocolStorage"]], "ctimagestorage (in module pydicom.uid)": [[238, "pydicom.uid.CTImageStorage"]], "ctperformedprocedureprotocolstorage (in module pydicom.uid)": [[239, "pydicom.uid.CTPerformedProcedureProtocolStorage"]], "cardiacelectrophysiologywaveformstorage (in module pydicom.uid)": [[240, "pydicom.uid.CardiacElectrophysiologyWaveformStorage"]], "chestcadsrstorage (in module pydicom.uid)": [[241, "pydicom.uid.ChestCADSRStorage"]], "coloncadsrstorage (in module pydicom.uid)": [[242, "pydicom.uid.ColonCADSRStorage"]], "colorpalettestorage (in module pydicom.uid)": [[243, "pydicom.uid.ColorPaletteStorage"]], "colorsoftcopypresentationstatestorage (in module pydicom.uid)": [[244, "pydicom.uid.ColorSoftcopyPresentationStateStorage"]], "compositingplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[245, "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage"]], "comprehensive3dsrstorage (in module pydicom.uid)": [[246, "pydicom.uid.Comprehensive3DSRStorage"]], "comprehensivesrstorage (in module pydicom.uid)": [[247, "pydicom.uid.ComprehensiveSRStorage"]], "computedradiographyimagestorage (in module pydicom.uid)": [[248, "pydicom.uid.ComputedRadiographyImageStorage"]], "contentassessmentresultsstorage (in module pydicom.uid)": [[249, "pydicom.uid.ContentAssessmentResultsStorage"]], "cornealtopographymapstorage (in module pydicom.uid)": [[250, "pydicom.uid.CornealTopographyMapStorage"]], "dicos2daitstorage (in module pydicom.uid)": [[251, "pydicom.uid.DICOS2DAITStorage"]], "dicos3daitstorage (in module pydicom.uid)": [[252, "pydicom.uid.DICOS3DAITStorage"]], "dicosctimagestorage (in module pydicom.uid)": [[253, "pydicom.uid.DICOSCTImageStorage"]], "dicosdigitalxrayimagestorageforpresentation (in module pydicom.uid)": [[254, "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation"]], "dicosdigitalxrayimagestorageforprocessing (in module pydicom.uid)": [[255, "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing"]], "dicosquadrupoleresonancestorage (in module pydicom.uid)": [[256, "pydicom.uid.DICOSQuadrupoleResonanceStorage"]], "dicosthreatdetectionreportstorage (in module pydicom.uid)": [[257, "pydicom.uid.DICOSThreatDetectionReportStorage"]], "deflatedexplicitvrlittleendian (in module pydicom.uid)": [[258, "pydicom.uid.DeflatedExplicitVRLittleEndian"]], "deformablespatialregistrationstorage (in module pydicom.uid)": [[259, "pydicom.uid.DeformableSpatialRegistrationStorage"]], "dermoscopicphotographyimagestorage (in module pydicom.uid)": [[260, "pydicom.uid.DermoscopicPhotographyImageStorage"]], "digitalintraoralxrayimagestorageforpresentation (in module pydicom.uid)": [[261, "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation"]], "digitalintraoralxrayimagestorageforprocessing (in module pydicom.uid)": [[262, "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing"]], "digitalmammographyxrayimagestorageforpresentation (in module pydicom.uid)": [[263, "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation"]], "digitalmammographyxrayimagestorageforprocessing (in module pydicom.uid)": [[264, "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing"]], "digitalxrayimagestorageforpresentation (in module pydicom.uid)": [[265, "pydicom.uid.DigitalXRayImageStorageForPresentation"]], "digitalxrayimagestorageforprocessing (in module pydicom.uid)": [[266, "pydicom.uid.DigitalXRayImageStorageForProcessing"]], "eddycurrentimagestorage (in module pydicom.uid)": [[267, "pydicom.uid.EddyCurrentImageStorage"]], "eddycurrentmultiframeimagestorage (in module pydicom.uid)": [[268, "pydicom.uid.EddyCurrentMultiFrameImageStorage"]], "electromyogramwaveformstorage (in module pydicom.uid)": [[269, "pydicom.uid.ElectromyogramWaveformStorage"]], "electrooculogramwaveformstorage (in module pydicom.uid)": [[270, "pydicom.uid.ElectrooculogramWaveformStorage"]], "encapsulatedcdastorage (in module pydicom.uid)": [[271, "pydicom.uid.EncapsulatedCDAStorage"]], "encapsulatedmtlstorage (in module pydicom.uid)": [[272, "pydicom.uid.EncapsulatedMTLStorage"]], "encapsulatedobjstorage (in module pydicom.uid)": [[273, "pydicom.uid.EncapsulatedOBJStorage"]], "encapsulatedpdfstorage (in module pydicom.uid)": [[274, "pydicom.uid.EncapsulatedPDFStorage"]], "encapsulatedstlstorage (in module pydicom.uid)": [[275, "pydicom.uid.EncapsulatedSTLStorage"]], "enhancedctimagestorage (in module pydicom.uid)": [[276, "pydicom.uid.EnhancedCTImageStorage"]], "enhancedmrcolorimagestorage (in module pydicom.uid)": [[277, "pydicom.uid.EnhancedMRColorImageStorage"]], "enhancedmrimagestorage (in module pydicom.uid)": [[278, "pydicom.uid.EnhancedMRImageStorage"]], "enhancedpetimagestorage (in module pydicom.uid)": [[279, "pydicom.uid.EnhancedPETImageStorage"]], "enhancedsrstorage (in module pydicom.uid)": [[280, "pydicom.uid.EnhancedSRStorage"]], "enhancedusvolumestorage (in module pydicom.uid)": [[281, "pydicom.uid.EnhancedUSVolumeStorage"]], "enhancedxaimagestorage (in module pydicom.uid)": [[282, "pydicom.uid.EnhancedXAImageStorage"]], "enhancedxrfimagestorage (in module pydicom.uid)": [[283, "pydicom.uid.EnhancedXRFImageStorage"]], "enhancedxrayradiationdosesrstorage (in module pydicom.uid)": [[284, "pydicom.uid.EnhancedXRayRadiationDoseSRStorage"]], "explicitvrbigendian (in module pydicom.uid)": [[285, "pydicom.uid.ExplicitVRBigEndian"]], "explicitvrlittleendian (in module pydicom.uid)": [[286, "pydicom.uid.ExplicitVRLittleEndian"]], "extensiblesrstorage (in module pydicom.uid)": [[287, "pydicom.uid.ExtensibleSRStorage"]], "generalaudiowaveformstorage (in module pydicom.uid)": [[288, "pydicom.uid.GeneralAudioWaveformStorage"]], "generalecgwaveformstorage (in module pydicom.uid)": [[289, "pydicom.uid.GeneralECGWaveformStorage"]], "genericimplanttemplatestorage (in module pydicom.uid)": [[290, "pydicom.uid.GenericImplantTemplateStorage"]], "grayscaleplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[291, "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage"]], "grayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[292, "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage"]], "hevcm10p51 (in module pydicom.uid)": [[293, "pydicom.uid.HEVCM10P51"]], "hevcmp51 (in module pydicom.uid)": [[294, "pydicom.uid.HEVCMP51"]], "hangingprotocolstorage (in module pydicom.uid)": [[295, "pydicom.uid.HangingProtocolStorage"]], "hemodynamicwaveformstorage (in module pydicom.uid)": [[296, "pydicom.uid.HemodynamicWaveformStorage"]], "implantassemblytemplatestorage (in module pydicom.uid)": [[297, "pydicom.uid.ImplantAssemblyTemplateStorage"]], "implanttemplategroupstorage (in module pydicom.uid)": [[298, "pydicom.uid.ImplantTemplateGroupStorage"]], "implantationplansrstorage (in module pydicom.uid)": [[299, "pydicom.uid.ImplantationPlanSRStorage"]], "implicitvrlittleendian (in module pydicom.uid)": [[300, "pydicom.uid.ImplicitVRLittleEndian"]], "intraocularlenscalculationsstorage (in module pydicom.uid)": [[301, "pydicom.uid.IntraocularLensCalculationsStorage"]], "intravascularopticalcoherencetomographyimagestorageforpresentation (in module pydicom.uid)": [[302, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation"]], "intravascularopticalcoherencetomographyimagestorageforprocessing (in module pydicom.uid)": [[303, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing"]], "jpeg2000 (in module pydicom.uid)": [[304, "pydicom.uid.JPEG2000"]], "jpeg2000lossless (in module pydicom.uid)": [[305, "pydicom.uid.JPEG2000Lossless"]], "jpeg2000mc (in module pydicom.uid)": [[306, "pydicom.uid.JPEG2000MC"]], "jpeg2000mclossless (in module pydicom.uid)": [[307, "pydicom.uid.JPEG2000MCLossless"]], "jpeg2000transfersyntaxes (in module pydicom.uid)": [[308, "pydicom.uid.JPEG2000TransferSyntaxes"]], "jpegbaseline8bit (in module pydicom.uid)": [[309, "pydicom.uid.JPEGBaseline8Bit"]], "jpegextended12bit (in module pydicom.uid)": [[310, "pydicom.uid.JPEGExtended12Bit"]], "jpeglslossless (in module pydicom.uid)": [[311, "pydicom.uid.JPEGLSLossless"]], "jpeglsnearlossless (in module pydicom.uid)": [[312, "pydicom.uid.JPEGLSNearLossless"]], "jpeglstransfersyntaxes (in module pydicom.uid)": [[313, "pydicom.uid.JPEGLSTransferSyntaxes"]], "jpeglossless (in module pydicom.uid)": [[314, "pydicom.uid.JPEGLossless"]], "jpeglosslesssv1 (in module pydicom.uid)": [[315, "pydicom.uid.JPEGLosslessSV1"]], "jpegtransfersyntaxes (in module pydicom.uid)": [[316, "pydicom.uid.JPEGTransferSyntaxes"]], "keratometrymeasurementsstorage (in module pydicom.uid)": [[317, "pydicom.uid.KeratometryMeasurementsStorage"]], "keyobjectselectiondocumentstorage (in module pydicom.uid)": [[318, "pydicom.uid.KeyObjectSelectionDocumentStorage"]], "legacyconvertedenhancedctimagestorage (in module pydicom.uid)": [[319, "pydicom.uid.LegacyConvertedEnhancedCTImageStorage"]], "legacyconvertedenhancedmrimagestorage (in module pydicom.uid)": [[320, "pydicom.uid.LegacyConvertedEnhancedMRImageStorage"]], "legacyconvertedenhancedpetimagestorage (in module pydicom.uid)": [[321, "pydicom.uid.LegacyConvertedEnhancedPETImageStorage"]], "lensometrymeasurementsstorage (in module pydicom.uid)": [[322, "pydicom.uid.LensometryMeasurementsStorage"]], "mpeg2mphl (in module pydicom.uid)": [[323, "pydicom.uid.MPEG2MPHL"]], "mpeg2mphlf (in module pydicom.uid)": [[324, "pydicom.uid.MPEG2MPHLF"]], "mpeg2mpml (in module pydicom.uid)": [[325, "pydicom.uid.MPEG2MPML"]], "mpeg2mpmlf (in module pydicom.uid)": [[326, "pydicom.uid.MPEG2MPMLF"]], "mpeg4hp41 (in module pydicom.uid)": [[327, "pydicom.uid.MPEG4HP41"]], "mpeg4hp41bd (in module pydicom.uid)": [[328, "pydicom.uid.MPEG4HP41BD"]], "mpeg4hp41bdf (in module pydicom.uid)": [[329, "pydicom.uid.MPEG4HP41BDF"]], "mpeg4hp41f (in module pydicom.uid)": [[330, "pydicom.uid.MPEG4HP41F"]], "mpeg4hp422d (in module pydicom.uid)": [[331, "pydicom.uid.MPEG4HP422D"]], "mpeg4hp422df (in module pydicom.uid)": [[332, "pydicom.uid.MPEG4HP422DF"]], "mpeg4hp423d (in module pydicom.uid)": [[333, "pydicom.uid.MPEG4HP423D"]], "mpeg4hp423df (in module pydicom.uid)": [[334, "pydicom.uid.MPEG4HP423DF"]], "mpeg4hp42stereo (in module pydicom.uid)": [[335, "pydicom.uid.MPEG4HP42STEREO"]], "mpeg4hp42stereof (in module pydicom.uid)": [[336, "pydicom.uid.MPEG4HP42STEREOF"]], "mpegtransfersyntaxes (in module pydicom.uid)": [[337, "pydicom.uid.MPEGTransferSyntaxes"]], "mrimagestorage (in module pydicom.uid)": [[338, "pydicom.uid.MRImageStorage"]], "mrspectroscopystorage (in module pydicom.uid)": [[339, "pydicom.uid.MRSpectroscopyStorage"]], "maculargridthicknessandvolumereportstorage (in module pydicom.uid)": [[340, "pydicom.uid.MacularGridThicknessAndVolumeReportStorage"]], "mammographycadsrstorage (in module pydicom.uid)": [[341, "pydicom.uid.MammographyCADSRStorage"]], "mediastoragedirectorystorage (in module pydicom.uid)": [[342, "pydicom.uid.MediaStorageDirectoryStorage"]], "microscopybulksimpleannotationsstorage (in module pydicom.uid)": [[343, "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage"]], "multiframegrayscalebytesecondarycaptureimagestorage (in module pydicom.uid)": [[344, "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage"]], "multiframegrayscalewordsecondarycaptureimagestorage (in module pydicom.uid)": [[345, "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage"]], "multiframesinglebitsecondarycaptureimagestorage (in module pydicom.uid)": [[346, "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage"]], "multiframetruecolorsecondarycaptureimagestorage (in module pydicom.uid)": [[347, "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage"]], "multichannelrespiratorywaveformstorage (in module pydicom.uid)": [[348, "pydicom.uid.MultichannelRespiratoryWaveformStorage"]], "multiplevolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[349, "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage"]], "nuclearmedicineimagestorage (in module pydicom.uid)": [[350, "pydicom.uid.NuclearMedicineImageStorage"]], "ophthalmicaxialmeasurementsstorage (in module pydicom.uid)": [[351, "pydicom.uid.OphthalmicAxialMeasurementsStorage"]], "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage (in module pydicom.uid)": [[352, "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"]], "ophthalmicopticalcoherencetomographyenfaceimagestorage (in module pydicom.uid)": [[353, "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"]], "ophthalmicphotography16bitimagestorage (in module pydicom.uid)": [[354, "pydicom.uid.OphthalmicPhotography16BitImageStorage"]], "ophthalmicphotography8bitimagestorage (in module pydicom.uid)": [[355, "pydicom.uid.OphthalmicPhotography8BitImageStorage"]], "ophthalmicthicknessmapstorage (in module pydicom.uid)": [[356, "pydicom.uid.OphthalmicThicknessMapStorage"]], "ophthalmictomographyimagestorage (in module pydicom.uid)": [[357, "pydicom.uid.OphthalmicTomographyImageStorage"]], "ophthalmicvisualfieldstaticperimetrymeasurementsstorage (in module pydicom.uid)": [[358, "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"]], "pydicom_implementation_uid (in module pydicom.uid)": [[359, "pydicom.uid.PYDICOM_IMPLEMENTATION_UID"]], "pydicom_root_uid (in module pydicom.uid)": [[360, "pydicom.uid.PYDICOM_ROOT_UID"]], "parametricmapstorage (in module pydicom.uid)": [[361, "pydicom.uid.ParametricMapStorage"]], "patientradiationdosesrstorage (in module pydicom.uid)": [[362, "pydicom.uid.PatientRadiationDoseSRStorage"]], "performedimagingagentadministrationsrstorage (in module pydicom.uid)": [[363, "pydicom.uid.PerformedImagingAgentAdministrationSRStorage"]], "plannedimagingagentadministrationsrstorage (in module pydicom.uid)": [[364, "pydicom.uid.PlannedImagingAgentAdministrationSRStorage"]], "positronemissiontomographyimagestorage (in module pydicom.uid)": [[365, "pydicom.uid.PositronEmissionTomographyImageStorage"]], "procedurelogstorage (in module pydicom.uid)": [[366, "pydicom.uid.ProcedureLogStorage"]], "protocolapprovalstorage (in module pydicom.uid)": [[367, "pydicom.uid.ProtocolApprovalStorage"]], "pseudocolorsoftcopypresentationstatestorage (in module pydicom.uid)": [[368, "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage"]], "re_valid_uid (in module pydicom.uid)": [[369, "pydicom.uid.RE_VALID_UID"]], "re_valid_uid_prefix (in module pydicom.uid)": [[370, "pydicom.uid.RE_VALID_UID_PREFIX"]], "rlelossless (in module pydicom.uid)": [[371, "pydicom.uid.RLELossless"]], "rletransfersyntaxes (in module pydicom.uid)": [[372, "pydicom.uid.RLETransferSyntaxes"]], "rtbeamsdeliveryinstructionstorage (in module pydicom.uid)": [[373, "pydicom.uid.RTBeamsDeliveryInstructionStorage"]], "rtbeamstreatmentrecordstorage (in module pydicom.uid)": [[374, "pydicom.uid.RTBeamsTreatmentRecordStorage"]], "rtbrachyapplicationsetupdeliveryinstructionstorage (in module pydicom.uid)": [[375, "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage"]], "rtbrachytreatmentrecordstorage (in module pydicom.uid)": [[376, "pydicom.uid.RTBrachyTreatmentRecordStorage"]], "rtdosestorage (in module pydicom.uid)": [[377, "pydicom.uid.RTDoseStorage"]], "rtimagestorage (in module pydicom.uid)": [[378, "pydicom.uid.RTImageStorage"]], "rtionbeamstreatmentrecordstorage (in module pydicom.uid)": [[379, "pydicom.uid.RTIonBeamsTreatmentRecordStorage"]], "rtionplanstorage (in module pydicom.uid)": [[380, "pydicom.uid.RTIonPlanStorage"]], "rtphysicianintentstorage (in module pydicom.uid)": [[381, "pydicom.uid.RTPhysicianIntentStorage"]], "rtplanstorage (in module pydicom.uid)": [[382, "pydicom.uid.RTPlanStorage"]], "rtradiationrecordsetstorage (in module pydicom.uid)": [[383, "pydicom.uid.RTRadiationRecordSetStorage"]], "rtradiationsalvagerecordstorage (in module pydicom.uid)": [[384, "pydicom.uid.RTRadiationSalvageRecordStorage"]], "rtradiationsetdeliveryinstructionstorage (in module pydicom.uid)": [[385, "pydicom.uid.RTRadiationSetDeliveryInstructionStorage"]], "rtradiationsetstorage (in module pydicom.uid)": [[386, "pydicom.uid.RTRadiationSetStorage"]], "rtsegmentannotationstorage (in module pydicom.uid)": [[387, "pydicom.uid.RTSegmentAnnotationStorage"]], "rtstructuresetstorage (in module pydicom.uid)": [[388, "pydicom.uid.RTStructureSetStorage"]], "rttreatmentpreparationstorage (in module pydicom.uid)": [[389, "pydicom.uid.RTTreatmentPreparationStorage"]], "rttreatmentsummaryrecordstorage (in module pydicom.uid)": [[390, "pydicom.uid.RTTreatmentSummaryRecordStorage"]], "radiopharmaceuticalradiationdosesrstorage (in module pydicom.uid)": [[391, "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage"]], "rawdatastorage (in module pydicom.uid)": [[392, "pydicom.uid.RawDataStorage"]], "realworldvaluemappingstorage (in module pydicom.uid)": [[393, "pydicom.uid.RealWorldValueMappingStorage"]], "respiratorywaveformstorage (in module pydicom.uid)": [[394, "pydicom.uid.RespiratoryWaveformStorage"]], "roboticarmradiationstorage (in module pydicom.uid)": [[395, "pydicom.uid.RoboticArmRadiationStorage"]], "roboticradiationrecordstorage (in module pydicom.uid)": [[396, "pydicom.uid.RoboticRadiationRecordStorage"]], "routinescalpelectroencephalogramwaveformstorage (in module pydicom.uid)": [[397, "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage"]], "smptest211020uncompressedinterlacedactivevideo (in module pydicom.uid)": [[398, "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo"]], "smptest211020uncompressedprogressiveactivevideo (in module pydicom.uid)": [[399, "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo"]], "smptest211030pcmdigitalaudio (in module pydicom.uid)": [[400, "pydicom.uid.SMPTEST211030PCMDigitalAudio"]], "secondarycaptureimagestorage (in module pydicom.uid)": [[401, "pydicom.uid.SecondaryCaptureImageStorage"]], "segmentationstorage (in module pydicom.uid)": [[402, "pydicom.uid.SegmentationStorage"]], "segmentedvolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[403, "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage"]], "simplifiedadultechosrstorage (in module pydicom.uid)": [[404, "pydicom.uid.SimplifiedAdultEchoSRStorage"]], "sleepelectroencephalogramwaveformstorage (in module pydicom.uid)": [[405, "pydicom.uid.SleepElectroencephalogramWaveformStorage"]], "spatialfiducialsstorage (in module pydicom.uid)": [[406, "pydicom.uid.SpatialFiducialsStorage"]], "spatialregistrationstorage (in module pydicom.uid)": [[407, "pydicom.uid.SpatialRegistrationStorage"]], "spectacleprescriptionreportstorage (in module pydicom.uid)": [[408, "pydicom.uid.SpectaclePrescriptionReportStorage"]], "stereometricrelationshipstorage (in module pydicom.uid)": [[409, "pydicom.uid.StereometricRelationshipStorage"]], "subjectiverefractionmeasurementsstorage (in module pydicom.uid)": [[410, "pydicom.uid.SubjectiveRefractionMeasurementsStorage"]], "surfacescanmeshstorage (in module pydicom.uid)": [[411, "pydicom.uid.SurfaceScanMeshStorage"]], "surfacescanpointcloudstorage (in module pydicom.uid)": [[412, "pydicom.uid.SurfaceScanPointCloudStorage"]], "surfacesegmentationstorage (in module pydicom.uid)": [[413, "pydicom.uid.SurfaceSegmentationStorage"]], "tomotherapeuticradiationrecordstorage (in module pydicom.uid)": [[414, "pydicom.uid.TomotherapeuticRadiationRecordStorage"]], "tomotherapeuticradiationstorage (in module pydicom.uid)": [[415, "pydicom.uid.TomotherapeuticRadiationStorage"]], "tractographyresultsstorage (in module pydicom.uid)": [[416, "pydicom.uid.TractographyResultsStorage"]], "twelveleadecgwaveformstorage (in module pydicom.uid)": [[417, "pydicom.uid.TwelveLeadECGWaveformStorage"]], "uid (class in pydicom.uid)": [[418, "pydicom.uid.UID"]], "__init__() (pydicom.uid.uid method)": [[418, "pydicom.uid.UID.__init__"]], "info (pydicom.uid.uid property)": [[418, "pydicom.uid.UID.info"]], "is_compressed (pydicom.uid.uid property)": [[418, "pydicom.uid.UID.is_compressed"]], "is_deflated (pydicom.uid.uid property)": [[418, "pydicom.uid.UID.is_deflated"]], "is_encapsulated (pydicom.uid.uid property)": [[418, "pydicom.uid.UID.is_encapsulated"]], "is_implicit_vr (pydicom.uid.uid property)": [[418, "pydicom.uid.UID.is_implicit_VR"]], "is_little_endian (pydicom.uid.uid property)": [[418, "pydicom.uid.UID.is_little_endian"]], "is_private (pydicom.uid.uid property)": [[418, "pydicom.uid.UID.is_private"]], "is_retired (pydicom.uid.uid property)": [[418, "pydicom.uid.UID.is_retired"]], "is_transfer_syntax (pydicom.uid.uid property)": [[418, "pydicom.uid.UID.is_transfer_syntax"]], "is_valid (pydicom.uid.uid property)": [[418, "pydicom.uid.UID.is_valid"]], "keyword (pydicom.uid.uid property)": [[418, "pydicom.uid.UID.keyword"]], "name (pydicom.uid.uid property)": [[418, "pydicom.uid.UID.name"]], "type (pydicom.uid.uid property)": [[418, "pydicom.uid.UID.type"]], "ultrasoundimagestorage (in module pydicom.uid)": [[419, "pydicom.uid.UltrasoundImageStorage"]], "ultrasoundmultiframeimagestorage (in module pydicom.uid)": [[420, "pydicom.uid.UltrasoundMultiFrameImageStorage"]], "uncompressedtransfersyntaxes (in module pydicom.uid)": [[421, "pydicom.uid.UncompressedTransferSyntaxes"]], "vlendoscopicimagestorage (in module pydicom.uid)": [[422, "pydicom.uid.VLEndoscopicImageStorage"]], "vlmicroscopicimagestorage (in module pydicom.uid)": [[423, "pydicom.uid.VLMicroscopicImageStorage"]], "vlphotographicimagestorage (in module pydicom.uid)": [[424, "pydicom.uid.VLPhotographicImageStorage"]], "vlslidecoordinatesmicroscopicimagestorage (in module pydicom.uid)": [[425, "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage"]], "vlwholeslidemicroscopyimagestorage (in module pydicom.uid)": [[426, "pydicom.uid.VLWholeSlideMicroscopyImageStorage"]], "videoendoscopicimagestorage (in module pydicom.uid)": [[427, "pydicom.uid.VideoEndoscopicImageStorage"]], "videomicroscopicimagestorage (in module pydicom.uid)": [[428, "pydicom.uid.VideoMicroscopicImageStorage"]], "videophotographicimagestorage (in module pydicom.uid)": [[429, "pydicom.uid.VideoPhotographicImageStorage"]], "visualacuitymeasurementsstorage (in module pydicom.uid)": [[430, "pydicom.uid.VisualAcuityMeasurementsStorage"]], "volumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[431, "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage"]], "widefieldophthalmicphotography3dcoordinatesimagestorage (in module pydicom.uid)": [[432, "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage"]], "widefieldophthalmicphotographystereographicprojectionimagestorage (in module pydicom.uid)": [[433, "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"]], "xadefinedprocedureprotocolstorage (in module pydicom.uid)": [[434, "pydicom.uid.XADefinedProcedureProtocolStorage"]], "xaperformedprocedureprotocolstorage (in module pydicom.uid)": [[435, "pydicom.uid.XAPerformedProcedureProtocolStorage"]], "xaxrfgrayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[436, "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage"]], "xray3dangiographicimagestorage (in module pydicom.uid)": [[437, "pydicom.uid.XRay3DAngiographicImageStorage"]], "xray3dcraniofacialimagestorage (in module pydicom.uid)": [[438, "pydicom.uid.XRay3DCraniofacialImageStorage"]], "xrayangiographicimagestorage (in module pydicom.uid)": [[439, "pydicom.uid.XRayAngiographicImageStorage"]], "xrayradiationdosesrstorage (in module pydicom.uid)": [[440, "pydicom.uid.XRayRadiationDoseSRStorage"]], "xrayradiofluoroscopicimagestorage (in module pydicom.uid)": [[441, "pydicom.uid.XRayRadiofluoroscopicImageStorage"]], "generate_uid() (in module pydicom.uid)": [[442, "pydicom.uid.generate_uid"]], "da (class in pydicom.valuerep)": [[443, "pydicom.valuerep.DA"]], "__init__() (pydicom.valuerep.da method)": [[443, "pydicom.valuerep.DA.__init__"]], "ds() (in module pydicom.valuerep)": [[444, "pydicom.valuerep.DS"]], "dsdecimal (class in pydicom.valuerep)": [[445, "pydicom.valuerep.DSdecimal"]], "__init__() (pydicom.valuerep.dsdecimal method)": [[445, "pydicom.valuerep.DSdecimal.__init__"]], "dsfloat (class in pydicom.valuerep)": [[446, "pydicom.valuerep.DSfloat"]], "__init__() (pydicom.valuerep.dsfloat method)": [[446, "pydicom.valuerep.DSfloat.__init__"]], "dt (class in pydicom.valuerep)": [[447, "pydicom.valuerep.DT"]], "__init__() (pydicom.valuerep.dt method)": [[447, "pydicom.valuerep.DT.__init__"]], "is (class in pydicom.valuerep)": [[448, "pydicom.valuerep.IS"]], "__init__() (pydicom.valuerep.is method)": [[448, "pydicom.valuerep.IS.__init__"]], "isfloat (class in pydicom.valuerep)": [[449, "pydicom.valuerep.ISfloat"]], "__init__() (pydicom.valuerep.isfloat method)": [[449, "pydicom.valuerep.ISfloat.__init__"]], "multistring() (in module pydicom.valuerep)": [[450, "pydicom.valuerep.MultiString"]], "personname (class in pydicom.valuerep)": [[451, "pydicom.valuerep.PersonName"]], "__init__() (pydicom.valuerep.personname method)": [[451, "pydicom.valuerep.PersonName.__init__"]], "alphabetic (pydicom.valuerep.personname property)": [[451, "pydicom.valuerep.PersonName.alphabetic"]], "components (pydicom.valuerep.personname property)": [[451, "pydicom.valuerep.PersonName.components"]], "decode() (pydicom.valuerep.personname method)": [[451, "pydicom.valuerep.PersonName.decode"]], "encode() (pydicom.valuerep.personname method)": [[451, "pydicom.valuerep.PersonName.encode"]], "family_comma_given() (pydicom.valuerep.personname method)": [[451, "pydicom.valuerep.PersonName.family_comma_given"]], "family_name (pydicom.valuerep.personname property)": [[451, "pydicom.valuerep.PersonName.family_name"]], "formatted() (pydicom.valuerep.personname method)": [[451, "pydicom.valuerep.PersonName.formatted"]], "from_named_components() (pydicom.valuerep.personname class method)": [[451, "pydicom.valuerep.PersonName.from_named_components"]], "from_named_components_veterinary() (pydicom.valuerep.personname class method)": [[451, "pydicom.valuerep.PersonName.from_named_components_veterinary"]], "given_name (pydicom.valuerep.personname property)": [[451, "pydicom.valuerep.PersonName.given_name"]], "ideographic (pydicom.valuerep.personname property)": [[451, "pydicom.valuerep.PersonName.ideographic"]], "middle_name (pydicom.valuerep.personname property)": [[451, "pydicom.valuerep.PersonName.middle_name"]], "name_prefix (pydicom.valuerep.personname property)": [[451, "pydicom.valuerep.PersonName.name_prefix"]], "name_suffix (pydicom.valuerep.personname property)": [[451, "pydicom.valuerep.PersonName.name_suffix"]], "phonetic (pydicom.valuerep.personname property)": [[451, "pydicom.valuerep.PersonName.phonetic"]], "tm (class in pydicom.valuerep)": [[452, "pydicom.valuerep.TM"]], "__init__() (pydicom.valuerep.tm method)": [[452, "pydicom.valuerep.TM.__init__"]], "vr (class in pydicom.valuerep)": [[453, "pydicom.valuerep.VR"]], "__init__() (pydicom.valuerep.vr method)": [[453, "pydicom.valuerep.VR.__init__"]], "format_number_as_ds() (in module pydicom.valuerep)": [[454, "pydicom.valuerep.format_number_as_ds"]], "is_valid_ds() (in module pydicom.valuerep)": [[455, "pydicom.valuerep.is_valid_ds"]], "convert_ae_string() (in module pydicom.values)": [[456, "pydicom.values.convert_AE_string"]], "convert_atvalue() (in module pydicom.values)": [[457, "pydicom.values.convert_ATvalue"]], "convert_da_string() (in module pydicom.values)": [[458, "pydicom.values.convert_DA_string"]], "convert_ds_string() (in module pydicom.values)": [[459, "pydicom.values.convert_DS_string"]], "convert_dt_string() (in module pydicom.values)": [[460, "pydicom.values.convert_DT_string"]], "convert_is_string() (in module pydicom.values)": [[461, "pydicom.values.convert_IS_string"]], "convert_obvalue() (in module pydicom.values)": [[462, "pydicom.values.convert_OBvalue"]], "convert_owvalue() (in module pydicom.values)": [[463, "pydicom.values.convert_OWvalue"]], "convert_pn() (in module pydicom.values)": [[464, "pydicom.values.convert_PN"]], "convert_sq() (in module pydicom.values)": [[465, "pydicom.values.convert_SQ"]], "convert_tm_string() (in module pydicom.values)": [[466, "pydicom.values.convert_TM_string"]], "convert_ui() (in module pydicom.values)": [[467, "pydicom.values.convert_UI"]], "convert_un() (in module pydicom.values)": [[468, "pydicom.values.convert_UN"]], "convert_ur_string() (in module pydicom.values)": [[469, "pydicom.values.convert_UR_string"]], "convert_numbers() (in module pydicom.values)": [[470, "pydicom.values.convert_numbers"]], "convert_single_string() (in module pydicom.values)": [[471, "pydicom.values.convert_single_string"]], "convert_string() (in module pydicom.values)": [[472, "pydicom.values.convert_string"]], "convert_tag() (in module pydicom.values)": [[473, "pydicom.values.convert_tag"]], "convert_text() (in module pydicom.values)": [[474, "pydicom.values.convert_text"]], "convert_value() (in module pydicom.values)": [[475, "pydicom.values.convert_value"]], "generate_multiplex() (in module pydicom.waveforms.numpy_handler)": [[476, "pydicom.waveforms.numpy_handler.generate_multiplex"]], "is_available() (in module pydicom.waveforms.numpy_handler)": [[476, "pydicom.waveforms.numpy_handler.is_available"]], "multiplex_array() (in module pydicom.waveforms.numpy_handler)": [[476, "pydicom.waveforms.numpy_handler.multiplex_array"]], "pydicom.waveforms.numpy_handler": [[476, "module-pydicom.waveforms.numpy_handler"]], "pydicom.overlays": [[478, "module-pydicom.overlays"]], "pydicom.pixel_data_handlers": [[479, "module-pydicom.pixel_data_handlers"]], "pydicom.waveforms": [[480, "module-pydicom.waveforms"]], "pydicom": [[481, "module-pydicom"]]}})