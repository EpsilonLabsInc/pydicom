Search.setIndex({"docnames": ["auto_examples/dicomtree", "auto_examples/image_processing/index", "auto_examples/image_processing/plot_downsize_image", "auto_examples/image_processing/plot_waveforms", "auto_examples/image_processing/reslice", "auto_examples/image_processing/sg_execution_times", "auto_examples/index", "auto_examples/input_output/index", "auto_examples/input_output/plot_printing_dataset", "auto_examples/input_output/plot_read_dicom", "auto_examples/input_output/plot_read_fileset", "auto_examples/input_output/plot_read_rtplan", "auto_examples/input_output/plot_write_dicom", "auto_examples/input_output/sg_execution_times", "auto_examples/memory_dataset", "auto_examples/metadata_processing/index", "auto_examples/metadata_processing/plot_add_dict_entries", "auto_examples/metadata_processing/plot_anonymize", "auto_examples/metadata_processing/plot_sequences", "auto_examples/metadata_processing/sg_execution_times", "auto_examples/plot_dicom_difference", "auto_examples/sg_execution_times", "auto_examples/show_charset_name", "faq/index", "guides/cli/cli_codify", "guides/cli/cli_dev", "guides/cli/cli_guide", "guides/cli/cli_intro", "guides/cli/cli_show", "guides/decoding/decoder_options", "guides/decoding/decoder_plugins", "guides/decoding/index", "guides/element_value_types", "guides/encoding/encoder_plugin_options", "guides/encoding/encoder_plugins", "guides/encoding/index", "guides/encoding/rle_lossless", "guides/glossary", "guides/index", "guides/writing_documentation", "index", "old/base_element", "old/best_practices", "old/getting_started", "old/image_data_compression", "old/image_data_handlers", "old/private_data_elements", "old/pydicom_user_guide", "old/ref_guide", "old/viewing_images", "old/working_with_overlays", "old/working_with_pixel_data", "old/working_with_waveforms", "old/writing_files", "reference/charset", "reference/config", "reference/data", "reference/datadict", "reference/dataset", "reference/elem", "reference/elem.dataelem", "reference/elem.multival", "reference/elem.sequence", "reference/elem.tag", "reference/elem.valuerep", "reference/elem.values", "reference/encaps", "reference/errors", "reference/examples", "reference/fileio", "reference/fileio.base", "reference/fileio.read", "reference/fileio.util", "reference/fileio.write", "reference/fileset", "reference/generated/pydicom.charset.convert_encodings", "reference/generated/pydicom.charset.decode_bytes", "reference/generated/pydicom.charset.decode_element", "reference/generated/pydicom.charset.encode_string", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS", "reference/generated/pydicom.config.DS_decimal", "reference/generated/pydicom.config.DS_numpy", "reference/generated/pydicom.config.IGNORE", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR", "reference/generated/pydicom.config.RAISE", "reference/generated/pydicom.config.WARN", "reference/generated/pydicom.config.allow_DS_float", "reference/generated/pydicom.config.assume_implicit_vr_switch", "reference/generated/pydicom.config.convert_wrong_length_to_UN", "reference/generated/pydicom.config.data_element_callback", "reference/generated/pydicom.config.data_element_callback_kwargs", "reference/generated/pydicom.config.datetime_conversion", "reference/generated/pydicom.config.debug", "reference/generated/pydicom.config.enforce_valid_values", "reference/generated/pydicom.config.future_behavior", "reference/generated/pydicom.config.pixel_data_handlers", "reference/generated/pydicom.config.reset_data_element_callback", "reference/generated/pydicom.config.settings", "reference/generated/pydicom.config.show_file_meta", "reference/generated/pydicom.config.use_DS_decimal", "reference/generated/pydicom.config.use_DS_numpy", "reference/generated/pydicom.config.use_IS_numpy", "reference/generated/pydicom.data.get_charset_files", "reference/generated/pydicom.data.get_palette_files", "reference/generated/pydicom.data.get_testdata_file", "reference/generated/pydicom.data.get_testdata_files", "reference/generated/pydicom.datadict.add_dict_entries", "reference/generated/pydicom.datadict.add_dict_entry", "reference/generated/pydicom.datadict.add_private_dict_entries", "reference/generated/pydicom.datadict.add_private_dict_entry", "reference/generated/pydicom.datadict.dictionary_VM", "reference/generated/pydicom.datadict.dictionary_VR", "reference/generated/pydicom.datadict.dictionary_description", "reference/generated/pydicom.datadict.dictionary_has_tag", "reference/generated/pydicom.datadict.dictionary_is_retired", "reference/generated/pydicom.datadict.dictionary_keyword", "reference/generated/pydicom.datadict.get_entry", "reference/generated/pydicom.datadict.get_private_entry", "reference/generated/pydicom.datadict.keyword_for_tag", "reference/generated/pydicom.datadict.mask_match", "reference/generated/pydicom.datadict.private_dictionary_VM", "reference/generated/pydicom.datadict.private_dictionary_VR", "reference/generated/pydicom.datadict.private_dictionary_description", "reference/generated/pydicom.datadict.repeater_has_keyword", "reference/generated/pydicom.datadict.repeater_has_tag", "reference/generated/pydicom.datadict.tag_for_keyword", "reference/generated/pydicom.dataelem.DataElement", "reference/generated/pydicom.dataelem.DataElement_from_raw", "reference/generated/pydicom.dataelem.RawDataElement", "reference/generated/pydicom.dataset.Dataset", "reference/generated/pydicom.dataset.FileDataset", "reference/generated/pydicom.dataset.FileMetaDataset", "reference/generated/pydicom.dataset.PrivateBlock", "reference/generated/pydicom.dataset.validate_file_meta", "reference/generated/pydicom.encaps.decode_data_sequence", "reference/generated/pydicom.encaps.defragment_data", "reference/generated/pydicom.encaps.encapsulate", "reference/generated/pydicom.encaps.encapsulate_extended", "reference/generated/pydicom.encaps.fragment_frame", "reference/generated/pydicom.encaps.generate_fragmented_frames", "reference/generated/pydicom.encaps.generate_fragments", "reference/generated/pydicom.encaps.generate_frames", "reference/generated/pydicom.encaps.generate_pixel_data", "reference/generated/pydicom.encaps.generate_pixel_data_fragment", "reference/generated/pydicom.encaps.generate_pixel_data_frame", "reference/generated/pydicom.encaps.get_frame", "reference/generated/pydicom.encaps.get_frame_offsets", "reference/generated/pydicom.encaps.itemize_fragment", "reference/generated/pydicom.encaps.itemize_frame", "reference/generated/pydicom.encaps.parse_basic_offsets", "reference/generated/pydicom.encaps.parse_fragments", "reference/generated/pydicom.encaps.read_item", "reference/generated/pydicom.errors.InvalidDicomError", "reference/generated/pydicom.filebase.DicomBytesIO", "reference/generated/pydicom.filebase.DicomFile", "reference/generated/pydicom.filebase.DicomFileLike", "reference/generated/pydicom.filebase.DicomIO", "reference/generated/pydicom.filereader.data_element_generator", "reference/generated/pydicom.filereader.data_element_offset_to_value", "reference/generated/pydicom.filereader.dcmread", "reference/generated/pydicom.filereader.read_dataset", "reference/generated/pydicom.filereader.read_deferred_data_element", "reference/generated/pydicom.filereader.read_file_meta_info", "reference/generated/pydicom.filereader.read_partial", "reference/generated/pydicom.filereader.read_preamble", "reference/generated/pydicom.filereader.read_sequence", "reference/generated/pydicom.filereader.read_sequence_item", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS", "reference/generated/pydicom.fileset.FileInstance", "reference/generated/pydicom.fileset.FileSet", "reference/generated/pydicom.fileset.RecordNode", "reference/generated/pydicom.fileset.generate_filename", "reference/generated/pydicom.fileset.is_conformant_file_id", "reference/generated/pydicom.fileutil.absorb_delimiter_item", "reference/generated/pydicom.fileutil.find_bytes", "reference/generated/pydicom.fileutil.find_delimiter", "reference/generated/pydicom.fileutil.length_of_undefined_length", "reference/generated/pydicom.fileutil.read_undefined_length_value", "reference/generated/pydicom.filewriter.correct_ambiguous_vr", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element", "reference/generated/pydicom.filewriter.dcmwrite", "reference/generated/pydicom.filewriter.multi_string", "reference/generated/pydicom.filewriter.write_ATvalue", "reference/generated/pydicom.filewriter.write_DA", "reference/generated/pydicom.filewriter.write_DT", "reference/generated/pydicom.filewriter.write_OBvalue", "reference/generated/pydicom.filewriter.write_OWvalue", "reference/generated/pydicom.filewriter.write_PN", "reference/generated/pydicom.filewriter.write_TM", "reference/generated/pydicom.filewriter.write_UI", "reference/generated/pydicom.filewriter.write_UN", "reference/generated/pydicom.filewriter.write_data_element", "reference/generated/pydicom.filewriter.write_dataset", "reference/generated/pydicom.filewriter.write_file_meta_info", "reference/generated/pydicom.filewriter.write_number_string", "reference/generated/pydicom.filewriter.write_numbers", "reference/generated/pydicom.filewriter.write_sequence", "reference/generated/pydicom.filewriter.write_sequence_item", "reference/generated/pydicom.filewriter.write_string", "reference/generated/pydicom.filewriter.write_text", "reference/generated/pydicom.misc.is_dicom", "reference/generated/pydicom.misc.size_in_bytes", "reference/generated/pydicom.multival.MultiValue", "reference/generated/pydicom.overlays.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut", "reference/generated/pydicom.pixel_data_handlers.apply_rescale", "reference/generated/pydicom.pixel_data_handlers.apply_voi", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut", "reference/generated/pydicom.pixel_data_handlers.apply_windowing", "reference/generated/pydicom.pixel_data_handlers.convert_color_space", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler", "reference/generated/pydicom.pixel_data_handlers.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.pillow_handler", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler", "reference/generated/pydicom.pixel_data_handlers.rle_handler", "reference/generated/pydicom.pixel_data_handlers.util", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner", "reference/generated/pydicom.pixels.decoders.base.Decoder", "reference/generated/pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder", "reference/generated/pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.base.HTJ2KDecoder", "reference/generated/pydicom.pixels.decoders.base.HTJ2KLosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.HTJ2KLosslessRPCLDecoder", "reference/generated/pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEG2000Decoder", "reference/generated/pydicom.pixels.decoders.base.JPEG2000LosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGBaseline8BitDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGExtended12BitDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGLSLosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGLSNearLosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGLosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGLosslessSV1Decoder", "reference/generated/pydicom.pixels.decoders.base.RLELosslessDecoder", "reference/generated/pydicom.pixels.encoders.base.Encoder", "reference/generated/pydicom.pixels.encoders.base.RLELosslessEncoder", "reference/generated/pydicom.pixels.get_decoder", "reference/generated/pydicom.pixels.get_encoder", "reference/generated/pydicom.pixels.iter_pixels", "reference/generated/pydicom.pixels.pixel_array", "reference/generated/pydicom.sequence.Sequence", "reference/generated/pydicom.tag.BaseTag", "reference/generated/pydicom.tag.Tag", "reference/generated/pydicom.tag.TupleTag", "reference/generated/pydicom.tag.tag_in_exception", "reference/generated/pydicom.uid.AcquisitionContextSRStorage", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage", "reference/generated/pydicom.uid.AllTransferSyntaxes", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage", "reference/generated/pydicom.uid.BasicTextSRStorage", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.BodyPositionWaveformStorage", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.CTImageStorage", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage", "reference/generated/pydicom.uid.ChestCADSRStorage", "reference/generated/pydicom.uid.ColonCADSRStorage", "reference/generated/pydicom.uid.ColorPaletteStorage", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.Comprehensive3DSRStorage", "reference/generated/pydicom.uid.ComprehensiveSRStorage", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage", "reference/generated/pydicom.uid.CornealTopographyMapStorage", "reference/generated/pydicom.uid.DICOS2DAITStorage", "reference/generated/pydicom.uid.DICOS3DAITStorage", "reference/generated/pydicom.uid.DICOSCTImageStorage", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.EddyCurrentImageStorage", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage", "reference/generated/pydicom.uid.EncapsulatedCDAStorage", "reference/generated/pydicom.uid.EncapsulatedMTLStorage", "reference/generated/pydicom.uid.EncapsulatedOBJStorage", "reference/generated/pydicom.uid.EncapsulatedPDFStorage", "reference/generated/pydicom.uid.EncapsulatedSTLStorage", "reference/generated/pydicom.uid.EnhancedCTImageStorage", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage", "reference/generated/pydicom.uid.EnhancedMRImageStorage", "reference/generated/pydicom.uid.EnhancedPETImageStorage", "reference/generated/pydicom.uid.EnhancedRTImageStorage", "reference/generated/pydicom.uid.EnhancedSRStorage", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage", "reference/generated/pydicom.uid.EnhancedXAImageStorage", "reference/generated/pydicom.uid.EnhancedXRFImageStorage", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.ExplicitVRBigEndian", "reference/generated/pydicom.uid.ExplicitVRLittleEndian", "reference/generated/pydicom.uid.ExtensibleSRStorage", "reference/generated/pydicom.uid.General32bitECGWaveformStorage", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage", "reference/generated/pydicom.uid.GeneralECGWaveformStorage", "reference/generated/pydicom.uid.GenericImplantTemplateStorage", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.HEVCM10P51", "reference/generated/pydicom.uid.HEVCMP51", "reference/generated/pydicom.uid.HTJ2K", "reference/generated/pydicom.uid.HTJ2KLossless", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL", "reference/generated/pydicom.uid.HangingProtocolStorage", "reference/generated/pydicom.uid.HemodynamicWaveformStorage", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage", "reference/generated/pydicom.uid.ImplantationPlanSRStorage", "reference/generated/pydicom.uid.ImplicitVRLittleEndian", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pydicom.uid.InventoryStorage", "reference/generated/pydicom.uid.JPEG2000", "reference/generated/pydicom.uid.JPEG2000Lossless", "reference/generated/pydicom.uid.JPEG2000MC", "reference/generated/pydicom.uid.JPEG2000MCLossless", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes", "reference/generated/pydicom.uid.JPEGBaseline8Bit", "reference/generated/pydicom.uid.JPEGExtended12Bit", "reference/generated/pydicom.uid.JPEGLSLossless", "reference/generated/pydicom.uid.JPEGLSNearLossless", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes", "reference/generated/pydicom.uid.JPEGLossless", "reference/generated/pydicom.uid.JPEGLosslessSV1", "reference/generated/pydicom.uid.JPEGTransferSyntaxes", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pydicom.uid.LensometryMeasurementsStorage", "reference/generated/pydicom.uid.MPEG2MPHL", "reference/generated/pydicom.uid.MPEG2MPHLF", "reference/generated/pydicom.uid.MPEG2MPML", "reference/generated/pydicom.uid.MPEG2MPMLF", "reference/generated/pydicom.uid.MPEG4HP41", "reference/generated/pydicom.uid.MPEG4HP41BD", "reference/generated/pydicom.uid.MPEG4HP41BDF", "reference/generated/pydicom.uid.MPEG4HP41F", "reference/generated/pydicom.uid.MPEG4HP422D", "reference/generated/pydicom.uid.MPEG4HP422DF", "reference/generated/pydicom.uid.MPEG4HP423D", "reference/generated/pydicom.uid.MPEG4HP423DF", "reference/generated/pydicom.uid.MPEG4HP42STEREO", "reference/generated/pydicom.uid.MPEG4HP42STEREOF", "reference/generated/pydicom.uid.MPEGTransferSyntaxes", "reference/generated/pydicom.uid.MRImageStorage", "reference/generated/pydicom.uid.MRSpectroscopyStorage", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pydicom.uid.MammographyCADSRStorage", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.NuclearMedicineImageStorage", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID", "reference/generated/pydicom.uid.ParametricMapStorage", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PhotoacousticImageStorage", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage", "reference/generated/pydicom.uid.PrivateTransferSyntaxes", "reference/generated/pydicom.uid.ProcedureLogStorage", "reference/generated/pydicom.uid.ProtocolApprovalStorage", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.RE_VALID_UID", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX", "reference/generated/pydicom.uid.RLELossless", "reference/generated/pydicom.uid.RLETransferSyntaxes", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage", "reference/generated/pydicom.uid.RTDoseStorage", "reference/generated/pydicom.uid.RTImageStorage", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTIonPlanStorage", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "reference/generated/pydicom.uid.RTPhysicianIntentStorage", "reference/generated/pydicom.uid.RTPlanStorage", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTRadiationSetStorage", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage", "reference/generated/pydicom.uid.RTStructureSetStorage", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pydicom.uid.RawDataStorage", "reference/generated/pydicom.uid.RealWorldValueMappingStorage", "reference/generated/pydicom.uid.RespiratoryWaveformStorage", "reference/generated/pydicom.uid.RoboticArmRadiationStorage", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage", "reference/generated/pydicom.uid.SegmentationStorage", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SpatialFiducialsStorage", "reference/generated/pydicom.uid.SpatialRegistrationStorage", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage", "reference/generated/pydicom.uid.StereometricRelationshipStorage", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage", "reference/generated/pydicom.uid.SurfaceScanMeshStorage", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage", "reference/generated/pydicom.uid.SurfaceSegmentationStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage", "reference/generated/pydicom.uid.TractographyResultsStorage", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage", "reference/generated/pydicom.uid.UID", "reference/generated/pydicom.uid.UltrasoundImageStorage", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes", "reference/generated/pydicom.uid.VLEndoscopicImageStorage", "reference/generated/pydicom.uid.VLMicroscopicImageStorage", "reference/generated/pydicom.uid.VLPhotographicImageStorage", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage", "reference/generated/pydicom.uid.VideoPhotographicImageStorage", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage", "reference/generated/pydicom.uid.XRayAngiographicImageStorage", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage", "reference/generated/pydicom.uid.generate_uid", "reference/generated/pydicom.uid.register_transfer_syntax", "reference/generated/pydicom.valuerep.DA", "reference/generated/pydicom.valuerep.DS", "reference/generated/pydicom.valuerep.DSdecimal", "reference/generated/pydicom.valuerep.DSfloat", "reference/generated/pydicom.valuerep.DT", "reference/generated/pydicom.valuerep.IS", "reference/generated/pydicom.valuerep.ISfloat", "reference/generated/pydicom.valuerep.PersonName", "reference/generated/pydicom.valuerep.TM", "reference/generated/pydicom.valuerep.VR", "reference/generated/pydicom.valuerep.format_number_as_ds", "reference/generated/pydicom.valuerep.is_valid_ds", "reference/generated/pydicom.values.convert_AE_string", "reference/generated/pydicom.values.convert_ATvalue", "reference/generated/pydicom.values.convert_DA_string", "reference/generated/pydicom.values.convert_DS_string", "reference/generated/pydicom.values.convert_DT_string", "reference/generated/pydicom.values.convert_IS_string", "reference/generated/pydicom.values.convert_OBvalue", "reference/generated/pydicom.values.convert_OWvalue", "reference/generated/pydicom.values.convert_PN", "reference/generated/pydicom.values.convert_SQ", "reference/generated/pydicom.values.convert_TM_string", "reference/generated/pydicom.values.convert_UI", "reference/generated/pydicom.values.convert_UN", "reference/generated/pydicom.values.convert_UR_string", "reference/generated/pydicom.values.convert_numbers", "reference/generated/pydicom.values.convert_single_string", "reference/generated/pydicom.values.convert_string", "reference/generated/pydicom.values.convert_tag", "reference/generated/pydicom.values.convert_text", "reference/generated/pydicom.values.convert_value", "reference/generated/pydicom.values.multi_string", "reference/generated/pydicom.waveforms.numpy_handler", "reference/handlers", "reference/handlers.pixel_data", "reference/index", "reference/misc", "reference/overlays", "reference/pixels", "reference/pixels.decoders", "reference/pixels.encoders", "reference/uid", "reference/waveforms", "release_notes/index", "release_notes/v0.9.2", "release_notes/v0.9.3", "release_notes/v0.9.4", "release_notes/v0.9.5", "release_notes/v0.9.6", "release_notes/v0.9.7", "release_notes/v0.9.8", "release_notes/v0.9.9", "release_notes/v1.0.0", "release_notes/v1.1.0", "release_notes/v1.2.0", "release_notes/v1.3.0", "release_notes/v1.4.0", "release_notes/v1.4.1", "release_notes/v2.0.0", "release_notes/v2.1.0", "release_notes/v2.1.1", "release_notes/v2.2.0", "release_notes/v2.3.0", "release_notes/v2.4.0", "release_notes/v3.0.0", "sg_execution_times", "tutorials/contributing", "tutorials/contributing_code", "tutorials/contributing_docs", "tutorials/dataset_basics", "tutorials/dicom_json", "tutorials/filesets", "tutorials/index", "tutorials/installation", "tutorials/pixel_data/compressing", "tutorials/sr_basics", "tutorials/waveforms"], "filenames": ["auto_examples/dicomtree.rst", "auto_examples/image_processing/index.rst", "auto_examples/image_processing/plot_downsize_image.rst", "auto_examples/image_processing/plot_waveforms.rst", "auto_examples/image_processing/reslice.rst", "auto_examples/image_processing/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/input_output/index.rst", "auto_examples/input_output/plot_printing_dataset.rst", "auto_examples/input_output/plot_read_dicom.rst", "auto_examples/input_output/plot_read_fileset.rst", "auto_examples/input_output/plot_read_rtplan.rst", "auto_examples/input_output/plot_write_dicom.rst", "auto_examples/input_output/sg_execution_times.rst", "auto_examples/memory_dataset.rst", "auto_examples/metadata_processing/index.rst", "auto_examples/metadata_processing/plot_add_dict_entries.rst", "auto_examples/metadata_processing/plot_anonymize.rst", "auto_examples/metadata_processing/plot_sequences.rst", "auto_examples/metadata_processing/sg_execution_times.rst", "auto_examples/plot_dicom_difference.rst", "auto_examples/sg_execution_times.rst", "auto_examples/show_charset_name.rst", "faq/index.rst", "guides/cli/cli_codify.rst", "guides/cli/cli_dev.rst", "guides/cli/cli_guide.rst", "guides/cli/cli_intro.rst", "guides/cli/cli_show.rst", "guides/decoding/decoder_options.rst", "guides/decoding/decoder_plugins.rst", "guides/decoding/index.rst", "guides/element_value_types.rst", "guides/encoding/encoder_plugin_options.rst", "guides/encoding/encoder_plugins.rst", "guides/encoding/index.rst", "guides/encoding/rle_lossless.rst", "guides/glossary.rst", "guides/index.rst", "guides/writing_documentation.rst", "index.rst", "old/base_element.rst", "old/best_practices.rst", "old/getting_started.rst", "old/image_data_compression.rst", "old/image_data_handlers.rst", "old/private_data_elements.rst", "old/pydicom_user_guide.rst", "old/ref_guide.rst", "old/viewing_images.rst", "old/working_with_overlays.rst", "old/working_with_pixel_data.rst", "old/working_with_waveforms.rst", "old/writing_files.rst", "reference/charset.rst", "reference/config.rst", "reference/data.rst", "reference/datadict.rst", "reference/dataset.rst", "reference/elem.rst", "reference/elem.dataelem.rst", "reference/elem.multival.rst", "reference/elem.sequence.rst", "reference/elem.tag.rst", "reference/elem.valuerep.rst", "reference/elem.values.rst", "reference/encaps.rst", "reference/errors.rst", "reference/examples.rst", "reference/fileio.rst", "reference/fileio.base.rst", "reference/fileio.read.rst", "reference/fileio.util.rst", "reference/fileio.write.rst", "reference/fileset.rst", "reference/generated/pydicom.charset.convert_encodings.rst", "reference/generated/pydicom.charset.decode_bytes.rst", "reference/generated/pydicom.charset.decode_element.rst", "reference/generated/pydicom.charset.encode_string.rst", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS.rst", "reference/generated/pydicom.config.DS_decimal.rst", "reference/generated/pydicom.config.DS_numpy.rst", "reference/generated/pydicom.config.IGNORE.rst", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR.rst", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR.rst", "reference/generated/pydicom.config.RAISE.rst", "reference/generated/pydicom.config.WARN.rst", "reference/generated/pydicom.config.allow_DS_float.rst", "reference/generated/pydicom.config.assume_implicit_vr_switch.rst", "reference/generated/pydicom.config.convert_wrong_length_to_UN.rst", "reference/generated/pydicom.config.data_element_callback.rst", "reference/generated/pydicom.config.data_element_callback_kwargs.rst", "reference/generated/pydicom.config.datetime_conversion.rst", "reference/generated/pydicom.config.debug.rst", "reference/generated/pydicom.config.enforce_valid_values.rst", "reference/generated/pydicom.config.future_behavior.rst", "reference/generated/pydicom.config.pixel_data_handlers.rst", "reference/generated/pydicom.config.reset_data_element_callback.rst", "reference/generated/pydicom.config.settings.rst", "reference/generated/pydicom.config.show_file_meta.rst", "reference/generated/pydicom.config.use_DS_decimal.rst", "reference/generated/pydicom.config.use_DS_numpy.rst", "reference/generated/pydicom.config.use_IS_numpy.rst", "reference/generated/pydicom.data.get_charset_files.rst", "reference/generated/pydicom.data.get_palette_files.rst", "reference/generated/pydicom.data.get_testdata_file.rst", "reference/generated/pydicom.data.get_testdata_files.rst", "reference/generated/pydicom.datadict.add_dict_entries.rst", "reference/generated/pydicom.datadict.add_dict_entry.rst", "reference/generated/pydicom.datadict.add_private_dict_entries.rst", "reference/generated/pydicom.datadict.add_private_dict_entry.rst", "reference/generated/pydicom.datadict.dictionary_VM.rst", "reference/generated/pydicom.datadict.dictionary_VR.rst", "reference/generated/pydicom.datadict.dictionary_description.rst", "reference/generated/pydicom.datadict.dictionary_has_tag.rst", "reference/generated/pydicom.datadict.dictionary_is_retired.rst", "reference/generated/pydicom.datadict.dictionary_keyword.rst", "reference/generated/pydicom.datadict.get_entry.rst", "reference/generated/pydicom.datadict.get_private_entry.rst", "reference/generated/pydicom.datadict.keyword_for_tag.rst", "reference/generated/pydicom.datadict.mask_match.rst", "reference/generated/pydicom.datadict.private_dictionary_VM.rst", "reference/generated/pydicom.datadict.private_dictionary_VR.rst", "reference/generated/pydicom.datadict.private_dictionary_description.rst", "reference/generated/pydicom.datadict.repeater_has_keyword.rst", "reference/generated/pydicom.datadict.repeater_has_tag.rst", "reference/generated/pydicom.datadict.tag_for_keyword.rst", "reference/generated/pydicom.dataelem.DataElement.rst", "reference/generated/pydicom.dataelem.DataElement_from_raw.rst", "reference/generated/pydicom.dataelem.RawDataElement.rst", "reference/generated/pydicom.dataset.Dataset.rst", "reference/generated/pydicom.dataset.FileDataset.rst", "reference/generated/pydicom.dataset.FileMetaDataset.rst", "reference/generated/pydicom.dataset.PrivateBlock.rst", "reference/generated/pydicom.dataset.validate_file_meta.rst", "reference/generated/pydicom.encaps.decode_data_sequence.rst", "reference/generated/pydicom.encaps.defragment_data.rst", "reference/generated/pydicom.encaps.encapsulate.rst", "reference/generated/pydicom.encaps.encapsulate_extended.rst", "reference/generated/pydicom.encaps.fragment_frame.rst", "reference/generated/pydicom.encaps.generate_fragmented_frames.rst", "reference/generated/pydicom.encaps.generate_fragments.rst", "reference/generated/pydicom.encaps.generate_frames.rst", "reference/generated/pydicom.encaps.generate_pixel_data.rst", "reference/generated/pydicom.encaps.generate_pixel_data_fragment.rst", "reference/generated/pydicom.encaps.generate_pixel_data_frame.rst", "reference/generated/pydicom.encaps.get_frame.rst", "reference/generated/pydicom.encaps.get_frame_offsets.rst", "reference/generated/pydicom.encaps.itemize_fragment.rst", "reference/generated/pydicom.encaps.itemize_frame.rst", "reference/generated/pydicom.encaps.parse_basic_offsets.rst", "reference/generated/pydicom.encaps.parse_fragments.rst", "reference/generated/pydicom.encaps.read_item.rst", "reference/generated/pydicom.errors.InvalidDicomError.rst", "reference/generated/pydicom.filebase.DicomBytesIO.rst", "reference/generated/pydicom.filebase.DicomFile.rst", "reference/generated/pydicom.filebase.DicomFileLike.rst", "reference/generated/pydicom.filebase.DicomIO.rst", "reference/generated/pydicom.filereader.data_element_generator.rst", "reference/generated/pydicom.filereader.data_element_offset_to_value.rst", "reference/generated/pydicom.filereader.dcmread.rst", "reference/generated/pydicom.filereader.read_dataset.rst", "reference/generated/pydicom.filereader.read_deferred_data_element.rst", "reference/generated/pydicom.filereader.read_file_meta_info.rst", "reference/generated/pydicom.filereader.read_partial.rst", "reference/generated/pydicom.filereader.read_preamble.rst", "reference/generated/pydicom.filereader.read_sequence.rst", "reference/generated/pydicom.filereader.read_sequence_item.rst", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS.rst", "reference/generated/pydicom.fileset.FileInstance.rst", "reference/generated/pydicom.fileset.FileSet.rst", "reference/generated/pydicom.fileset.RecordNode.rst", "reference/generated/pydicom.fileset.generate_filename.rst", "reference/generated/pydicom.fileset.is_conformant_file_id.rst", "reference/generated/pydicom.fileutil.absorb_delimiter_item.rst", "reference/generated/pydicom.fileutil.find_bytes.rst", "reference/generated/pydicom.fileutil.find_delimiter.rst", "reference/generated/pydicom.fileutil.length_of_undefined_length.rst", "reference/generated/pydicom.fileutil.read_undefined_length_value.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element.rst", "reference/generated/pydicom.filewriter.dcmwrite.rst", "reference/generated/pydicom.filewriter.multi_string.rst", "reference/generated/pydicom.filewriter.write_ATvalue.rst", "reference/generated/pydicom.filewriter.write_DA.rst", "reference/generated/pydicom.filewriter.write_DT.rst", "reference/generated/pydicom.filewriter.write_OBvalue.rst", "reference/generated/pydicom.filewriter.write_OWvalue.rst", "reference/generated/pydicom.filewriter.write_PN.rst", "reference/generated/pydicom.filewriter.write_TM.rst", "reference/generated/pydicom.filewriter.write_UI.rst", "reference/generated/pydicom.filewriter.write_UN.rst", "reference/generated/pydicom.filewriter.write_data_element.rst", "reference/generated/pydicom.filewriter.write_dataset.rst", "reference/generated/pydicom.filewriter.write_file_meta_info.rst", "reference/generated/pydicom.filewriter.write_number_string.rst", "reference/generated/pydicom.filewriter.write_numbers.rst", "reference/generated/pydicom.filewriter.write_sequence.rst", "reference/generated/pydicom.filewriter.write_sequence_item.rst", "reference/generated/pydicom.filewriter.write_string.rst", "reference/generated/pydicom.filewriter.write_text.rst", "reference/generated/pydicom.misc.is_dicom.rst", "reference/generated/pydicom.misc.size_in_bytes.rst", "reference/generated/pydicom.multival.MultiValue.rst", "reference/generated/pydicom.overlays.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_rescale.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_windowing.rst", "reference/generated/pydicom.pixel_data_handlers.convert_color_space.rst", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler.rst", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler.rst", "reference/generated/pydicom.pixel_data_handlers.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pillow_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler.rst", "reference/generated/pydicom.pixel_data_handlers.rle_handler.rst", "reference/generated/pydicom.pixel_data_handlers.util.rst", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner.rst", "reference/generated/pydicom.pixels.decoders.base.Decoder.rst", "reference/generated/pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.HTJ2KDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.HTJ2KLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.HTJ2KLosslessRPCLDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEG2000Decoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEG2000LosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGBaseline8BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGExtended12BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGLSLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGLSNearLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGLosslessSV1Decoder.rst", "reference/generated/pydicom.pixels.decoders.base.RLELosslessDecoder.rst", "reference/generated/pydicom.pixels.encoders.base.Encoder.rst", "reference/generated/pydicom.pixels.encoders.base.RLELosslessEncoder.rst", "reference/generated/pydicom.pixels.get_decoder.rst", "reference/generated/pydicom.pixels.get_encoder.rst", "reference/generated/pydicom.pixels.iter_pixels.rst", "reference/generated/pydicom.pixels.pixel_array.rst", "reference/generated/pydicom.sequence.Sequence.rst", "reference/generated/pydicom.tag.BaseTag.rst", "reference/generated/pydicom.tag.Tag.rst", "reference/generated/pydicom.tag.TupleTag.rst", "reference/generated/pydicom.tag.tag_in_exception.rst", "reference/generated/pydicom.uid.AcquisitionContextSRStorage.rst", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pydicom.uid.AllTransferSyntaxes.rst", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage.rst", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage.rst", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage.rst", "reference/generated/pydicom.uid.BasicTextSRStorage.rst", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.BodyPositionWaveformStorage.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CTImageStorage.rst", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pydicom.uid.ChestCADSRStorage.rst", "reference/generated/pydicom.uid.ColonCADSRStorage.rst", "reference/generated/pydicom.uid.ColorPaletteStorage.rst", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.Comprehensive3DSRStorage.rst", "reference/generated/pydicom.uid.ComprehensiveSRStorage.rst", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage.rst", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage.rst", "reference/generated/pydicom.uid.CornealTopographyMapStorage.rst", "reference/generated/pydicom.uid.DICOS2DAITStorage.rst", "reference/generated/pydicom.uid.DICOS3DAITStorage.rst", "reference/generated/pydicom.uid.DICOSCTImageStorage.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage.rst", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage.rst", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.EddyCurrentImageStorage.rst", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage.rst", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage.rst", "reference/generated/pydicom.uid.EncapsulatedCDAStorage.rst", "reference/generated/pydicom.uid.EncapsulatedMTLStorage.rst", "reference/generated/pydicom.uid.EncapsulatedOBJStorage.rst", "reference/generated/pydicom.uid.EncapsulatedPDFStorage.rst", "reference/generated/pydicom.uid.EncapsulatedSTLStorage.rst", "reference/generated/pydicom.uid.EnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.EnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.EnhancedRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedSRStorage.rst", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage.rst", "reference/generated/pydicom.uid.EnhancedXAImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRFImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.ExplicitVRBigEndian.rst", "reference/generated/pydicom.uid.ExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.ExtensibleSRStorage.rst", "reference/generated/pydicom.uid.General32bitECGWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralECGWaveformStorage.rst", "reference/generated/pydicom.uid.GenericImplantTemplateStorage.rst", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.HEVCM10P51.rst", "reference/generated/pydicom.uid.HEVCMP51.rst", "reference/generated/pydicom.uid.HTJ2K.rst", "reference/generated/pydicom.uid.HTJ2KLossless.rst", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL.rst", "reference/generated/pydicom.uid.HangingProtocolStorage.rst", "reference/generated/pydicom.uid.HemodynamicWaveformStorage.rst", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage.rst", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage.rst", "reference/generated/pydicom.uid.ImplantationPlanSRStorage.rst", "reference/generated/pydicom.uid.ImplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pydicom.uid.InventoryStorage.rst", "reference/generated/pydicom.uid.JPEG2000.rst", "reference/generated/pydicom.uid.JPEG2000Lossless.rst", "reference/generated/pydicom.uid.JPEG2000MC.rst", "reference/generated/pydicom.uid.JPEG2000MCLossless.rst", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGBaseline8Bit.rst", "reference/generated/pydicom.uid.JPEGExtended12Bit.rst", "reference/generated/pydicom.uid.JPEGLSLossless.rst", "reference/generated/pydicom.uid.JPEGLSNearLossless.rst", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGLossless.rst", "reference/generated/pydicom.uid.JPEGLosslessSV1.rst", "reference/generated/pydicom.uid.JPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate.rst", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.LensometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.MPEG2MPHL.rst", "reference/generated/pydicom.uid.MPEG2MPHLF.rst", "reference/generated/pydicom.uid.MPEG2MPML.rst", "reference/generated/pydicom.uid.MPEG2MPMLF.rst", "reference/generated/pydicom.uid.MPEG4HP41.rst", "reference/generated/pydicom.uid.MPEG4HP41BD.rst", "reference/generated/pydicom.uid.MPEG4HP41BDF.rst", "reference/generated/pydicom.uid.MPEG4HP41F.rst", "reference/generated/pydicom.uid.MPEG4HP422D.rst", "reference/generated/pydicom.uid.MPEG4HP422DF.rst", "reference/generated/pydicom.uid.MPEG4HP423D.rst", "reference/generated/pydicom.uid.MPEG4HP423DF.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREO.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREOF.rst", "reference/generated/pydicom.uid.MPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.MRImageStorage.rst", "reference/generated/pydicom.uid.MRSpectroscopyStorage.rst", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pydicom.uid.MammographyCADSRStorage.rst", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage.rst", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.NuclearMedicineImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage.rst", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID.rst", "reference/generated/pydicom.uid.ParametricMapStorage.rst", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PhotoacousticImageStorage.rst", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage.rst", "reference/generated/pydicom.uid.PrivateTransferSyntaxes.rst", "reference/generated/pydicom.uid.ProcedureLogStorage.rst", "reference/generated/pydicom.uid.ProtocolApprovalStorage.rst", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.RE_VALID_UID.rst", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX.rst", "reference/generated/pydicom.uid.RLELossless.rst", "reference/generated/pydicom.uid.RLETransferSyntaxes.rst", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTDoseStorage.rst", "reference/generated/pydicom.uid.RTImageStorage.rst", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTIonPlanStorage.rst", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage.rst", "reference/generated/pydicom.uid.RTPhysicianIntentStorage.rst", "reference/generated/pydicom.uid.RTPlanStorage.rst", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage.rst", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetStorage.rst", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage.rst", "reference/generated/pydicom.uid.RTStructureSetStorage.rst", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage.rst", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.RawDataStorage.rst", "reference/generated/pydicom.uid.RealWorldValueMappingStorage.rst", "reference/generated/pydicom.uid.RespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.RoboticArmRadiationStorage.rst", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio.rst", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.SegmentationStorage.rst", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SpatialFiducialsStorage.rst", "reference/generated/pydicom.uid.SpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage.rst", "reference/generated/pydicom.uid.StereometricRelationshipStorage.rst", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.SurfaceScanMeshStorage.rst", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage.rst", "reference/generated/pydicom.uid.SurfaceSegmentationStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage.rst", "reference/generated/pydicom.uid.TractographyResultsStorage.rst", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage.rst", "reference/generated/pydicom.uid.UID.rst", "reference/generated/pydicom.uid.UltrasoundImageStorage.rst", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes.rst", "reference/generated/pydicom.uid.VLEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VLMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage.rst", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage.rst", "reference/generated/pydicom.uid.XRayAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pydicom.uid.generate_uid.rst", "reference/generated/pydicom.uid.register_transfer_syntax.rst", "reference/generated/pydicom.valuerep.DA.rst", "reference/generated/pydicom.valuerep.DS.rst", "reference/generated/pydicom.valuerep.DSdecimal.rst", "reference/generated/pydicom.valuerep.DSfloat.rst", "reference/generated/pydicom.valuerep.DT.rst", "reference/generated/pydicom.valuerep.IS.rst", "reference/generated/pydicom.valuerep.ISfloat.rst", "reference/generated/pydicom.valuerep.PersonName.rst", "reference/generated/pydicom.valuerep.TM.rst", "reference/generated/pydicom.valuerep.VR.rst", "reference/generated/pydicom.valuerep.format_number_as_ds.rst", "reference/generated/pydicom.valuerep.is_valid_ds.rst", "reference/generated/pydicom.values.convert_AE_string.rst", "reference/generated/pydicom.values.convert_ATvalue.rst", "reference/generated/pydicom.values.convert_DA_string.rst", "reference/generated/pydicom.values.convert_DS_string.rst", "reference/generated/pydicom.values.convert_DT_string.rst", "reference/generated/pydicom.values.convert_IS_string.rst", "reference/generated/pydicom.values.convert_OBvalue.rst", "reference/generated/pydicom.values.convert_OWvalue.rst", "reference/generated/pydicom.values.convert_PN.rst", "reference/generated/pydicom.values.convert_SQ.rst", "reference/generated/pydicom.values.convert_TM_string.rst", "reference/generated/pydicom.values.convert_UI.rst", "reference/generated/pydicom.values.convert_UN.rst", "reference/generated/pydicom.values.convert_UR_string.rst", "reference/generated/pydicom.values.convert_numbers.rst", "reference/generated/pydicom.values.convert_single_string.rst", "reference/generated/pydicom.values.convert_string.rst", "reference/generated/pydicom.values.convert_tag.rst", "reference/generated/pydicom.values.convert_text.rst", "reference/generated/pydicom.values.convert_value.rst", "reference/generated/pydicom.values.multi_string.rst", "reference/generated/pydicom.waveforms.numpy_handler.rst", "reference/handlers.rst", "reference/handlers.pixel_data.rst", "reference/index.rst", "reference/misc.rst", "reference/overlays.rst", "reference/pixels.rst", "reference/pixels.decoders.rst", "reference/pixels.encoders.rst", "reference/uid.rst", "reference/waveforms.rst", "release_notes/index.rst", "release_notes/v0.9.2.rst", "release_notes/v0.9.3.rst", "release_notes/v0.9.4.rst", "release_notes/v0.9.5.rst", "release_notes/v0.9.6.rst", "release_notes/v0.9.7.rst", "release_notes/v0.9.8.rst", "release_notes/v0.9.9.rst", "release_notes/v1.0.0.rst", "release_notes/v1.1.0.rst", "release_notes/v1.2.0.rst", "release_notes/v1.3.0.rst", "release_notes/v1.4.0.rst", "release_notes/v1.4.1.rst", "release_notes/v2.0.0.rst", "release_notes/v2.1.0.rst", "release_notes/v2.1.1.rst", "release_notes/v2.2.0.rst", "release_notes/v2.3.0.rst", "release_notes/v2.4.0.rst", "release_notes/v3.0.0.rst", "sg_execution_times.rst", "tutorials/contributing.rst", "tutorials/contributing_code.rst", "tutorials/contributing_docs.rst", "tutorials/dataset_basics.rst", "tutorials/dicom_json.rst", "tutorials/filesets.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/pixel_data/compressing.rst", "tutorials/sr_basics.rst", "tutorials/waveforms.rst"], "titles": ["Show a dicom file using hierarchical tree", "Image processing", "Downsize MRI image using pydicom", "Decode and plot Waveform Data", "Load CT slices and plot axial, sagittal and coronal images", "Computation times", "General examples", "Input-output", "Format the output of the data set printing", "Read a Dataset and plot Pixel Data", "Read a DICOM File-set", "Read RTPLAN DICOM and list information", "Write DICOM data", "Computation times", "Show working with memory-based dataset", "Metadata processing", "Add items to the private DICOM dictionary", "Anonymize DICOM data", "Working with sequences", "Computation times", "Analyse differences between DICOM files", "Computation times", "Display unicode person names", "Frequently asked questions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">codify</span></code> command", "Extending the CLI", "Command-line Interface Guide", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">show</span></code> command", "Pixel Data Decoder Options", "Pixel Data Decoder Plugins", "Pixel Data Decoding", "Element VRs and Python types", "Encoder Plugins Options", "Pixel Data Encoder Plugins", "Pixel Data Encoding", "RLE Lossless Encoding", "Glossary", "Guides", "Writing documentation", "pydicom documentation", "Core elements in pydicom", "Best Practices", "Introduction to pydicom", "Compressing <em>Pixel Data</em>", "Handling of compressed pixel data", "Private Data Elements", "pydicom User Guide", "Reading and writing DICOM files", "Viewing Images", "Working with Overlay Data", "Working with Pixel Data", "Working with Waveform Data", "Writing DICOM Files", "Character Encoding and Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.charset</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.config</span></code>)", "Getting Included Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.data</span></code>)", "Data Dictionary Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.datadict</span></code>)", "Representation of Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataset</span></code>)", "Representation of Data Elements", "Data Elements (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataelem</span></code>)", "Element Multi-value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.multival</span></code>)", "Sequence Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sequence</span></code>)", "Element Tags (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.tag</span></code>)", "Specialized Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.valuerep</span></code>)", "Element Value Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.values</span></code>)", "Bulk Data Encapsulation Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encaps</span></code>)", "Exceptions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.errors</span></code>)", "Example Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.examples</span></code>)", "Dataset IO", "IO Base Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filebase</span></code>)", "Dataset Reading (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filereader</span></code>)", "IO Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileutil</span></code>)", "Dataset Writing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filewriter</span></code>)", "DICOM File-sets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileset</span></code>)", "pydicom.charset.convert_encodings", "pydicom.charset.decode_bytes", "pydicom.charset.decode_element", "pydicom.charset.encode_string", "pydicom.config.APPLY_J2K_CORRECTIONS", "pydicom.config.DS_decimal", "pydicom.config.DS_numpy", "pydicom.config.IGNORE", "pydicom.config.INVALID_KEYWORD_BEHAVIOR", "pydicom.config.INVALID_KEY_BEHAVIOR", "pydicom.config.RAISE", "pydicom.config.WARN", "pydicom.config.allow_DS_float", "pydicom.config.assume_implicit_vr_switch", "pydicom.config.convert_wrong_length_to_UN", "pydicom.config.data_element_callback", "pydicom.config.data_element_callback_kwargs", "pydicom.config.datetime_conversion", "pydicom.config.debug", "pydicom.config.enforce_valid_values", "pydicom.config.future_behavior", "pydicom.config.pixel_data_handlers", "pydicom.config.reset_data_element_callback", "pydicom.config.settings", "pydicom.config.show_file_meta", "pydicom.config.use_DS_decimal", "pydicom.config.use_DS_numpy", "pydicom.config.use_IS_numpy", "pydicom.data.get_charset_files", "pydicom.data.get_palette_files", "pydicom.data.get_testdata_file", "pydicom.data.get_testdata_files", "pydicom.datadict.add_dict_entries", "pydicom.datadict.add_dict_entry", "pydicom.datadict.add_private_dict_entries", "pydicom.datadict.add_private_dict_entry", "pydicom.datadict.dictionary_VM", "pydicom.datadict.dictionary_VR", "pydicom.datadict.dictionary_description", "pydicom.datadict.dictionary_has_tag", "pydicom.datadict.dictionary_is_retired", "pydicom.datadict.dictionary_keyword", "pydicom.datadict.get_entry", "pydicom.datadict.get_private_entry", "pydicom.datadict.keyword_for_tag", "pydicom.datadict.mask_match", "pydicom.datadict.private_dictionary_VM", "pydicom.datadict.private_dictionary_VR", "pydicom.datadict.private_dictionary_description", "pydicom.datadict.repeater_has_keyword", "pydicom.datadict.repeater_has_tag", "pydicom.datadict.tag_for_keyword", "pydicom.dataelem.DataElement", "pydicom.dataelem.DataElement_from_raw", "pydicom.dataelem.RawDataElement", "pydicom.dataset.Dataset", "pydicom.dataset.FileDataset", "pydicom.dataset.FileMetaDataset", "pydicom.dataset.PrivateBlock", "pydicom.dataset.validate_file_meta", "pydicom.encaps.decode_data_sequence", "pydicom.encaps.defragment_data", "pydicom.encaps.encapsulate", "pydicom.encaps.encapsulate_extended", "pydicom.encaps.fragment_frame", "pydicom.encaps.generate_fragmented_frames", "pydicom.encaps.generate_fragments", "pydicom.encaps.generate_frames", "pydicom.encaps.generate_pixel_data", "pydicom.encaps.generate_pixel_data_fragment", "pydicom.encaps.generate_pixel_data_frame", "pydicom.encaps.get_frame", "pydicom.encaps.get_frame_offsets", "pydicom.encaps.itemize_fragment", "pydicom.encaps.itemize_frame", "pydicom.encaps.parse_basic_offsets", "pydicom.encaps.parse_fragments", "pydicom.encaps.read_item", "pydicom.errors.InvalidDicomError", "pydicom.filebase.DicomBytesIO", "pydicom.filebase.DicomFile", "pydicom.filebase.DicomFileLike", "pydicom.filebase.DicomIO", "pydicom.filereader.data_element_generator", "pydicom.filereader.data_element_offset_to_value", "pydicom.filereader.dcmread", "pydicom.filereader.read_dataset", "pydicom.filereader.read_deferred_data_element", "pydicom.filereader.read_file_meta_info", "pydicom.filereader.read_partial", "pydicom.filereader.read_preamble", "pydicom.filereader.read_sequence", "pydicom.filereader.read_sequence_item", "pydicom.fileset.DIRECTORY_RECORDERS", "pydicom.fileset.FileInstance", "pydicom.fileset.FileSet", "pydicom.fileset.RecordNode", "pydicom.fileset.generate_filename", "pydicom.fileset.is_conformant_file_id", "pydicom.fileutil.absorb_delimiter_item", "pydicom.fileutil.find_bytes", "pydicom.fileutil.find_delimiter", "pydicom.fileutil.length_of_undefined_length", "pydicom.fileutil.read_undefined_length_value", "pydicom.filewriter.correct_ambiguous_vr", "pydicom.filewriter.correct_ambiguous_vr_element", "pydicom.filewriter.dcmwrite", "pydicom.filewriter.multi_string", "pydicom.filewriter.write_ATvalue", "pydicom.filewriter.write_DA", "pydicom.filewriter.write_DT", "pydicom.filewriter.write_OBvalue", "pydicom.filewriter.write_OWvalue", "pydicom.filewriter.write_PN", "pydicom.filewriter.write_TM", "pydicom.filewriter.write_UI", "pydicom.filewriter.write_UN", "pydicom.filewriter.write_data_element", "pydicom.filewriter.write_dataset", "pydicom.filewriter.write_file_meta_info", "pydicom.filewriter.write_number_string", "pydicom.filewriter.write_numbers", "pydicom.filewriter.write_sequence", "pydicom.filewriter.write_sequence_item", "pydicom.filewriter.write_string", "pydicom.filewriter.write_text", "pydicom.misc.is_dicom", "pydicom.misc.size_in_bytes", "pydicom.multival.MultiValue", "pydicom.overlays.numpy_handler", "pydicom.pixel_data_handlers.apply_color_lut", "pydicom.pixel_data_handlers.apply_modality_lut", "pydicom.pixel_data_handlers.apply_rescale", "pydicom.pixel_data_handlers.apply_voi", "pydicom.pixel_data_handlers.apply_voi_lut", "pydicom.pixel_data_handlers.apply_windowing", "pydicom.pixel_data_handlers.convert_color_space", "pydicom.pixel_data_handlers.gdcm_handler", "pydicom.pixel_data_handlers.jpeg_ls_handler", "pydicom.pixel_data_handlers.numpy_handler", "pydicom.pixel_data_handlers.pillow_handler", "pydicom.pixel_data_handlers.pylibjpeg_handler", "pydicom.pixel_data_handlers.rle_handler", "pydicom.pixel_data_handlers.util", "pydicom.pixels.decoders.base.DecodeRunner", "pydicom.pixels.decoders.base.Decoder", "pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder", "pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.base.HTJ2KDecoder", "pydicom.pixels.decoders.base.HTJ2KLosslessDecoder", "pydicom.pixels.decoders.base.HTJ2KLosslessRPCLDecoder", "pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.base.JPEG2000Decoder", "pydicom.pixels.decoders.base.JPEG2000LosslessDecoder", "pydicom.pixels.decoders.base.JPEGBaseline8BitDecoder", "pydicom.pixels.decoders.base.JPEGExtended12BitDecoder", "pydicom.pixels.decoders.base.JPEGLSLosslessDecoder", "pydicom.pixels.decoders.base.JPEGLSNearLosslessDecoder", "pydicom.pixels.decoders.base.JPEGLosslessDecoder", "pydicom.pixels.decoders.base.JPEGLosslessSV1Decoder", "pydicom.pixels.decoders.base.RLELosslessDecoder", "pydicom.pixels.encoders.base.Encoder", "pydicom.pixels.encoders.base.RLELosslessEncoder", "pydicom.pixels.get_decoder", "pydicom.pixels.get_encoder", "pydicom.pixels.iter_pixels", "pydicom.pixels.pixel_array", "pydicom.sequence.Sequence", "pydicom.tag.BaseTag", "pydicom.tag.Tag", "pydicom.tag.TupleTag", "pydicom.tag.tag_in_exception", "pydicom.uid.AcquisitionContextSRStorage", "pydicom.uid.AdvancedBlendingPresentationStateStorage", "pydicom.uid.AllTransferSyntaxes", "pydicom.uid.AmbulatoryECGWaveformStorage", "pydicom.uid.ArterialPulseWaveformStorage", "pydicom.uid.AutorefractionMeasurementsStorage", "pydicom.uid.BasicStructuredDisplayStorage", "pydicom.uid.BasicTextSRStorage", "pydicom.uid.BasicVoiceAudioWaveformStorage", "pydicom.uid.BlendingSoftcopyPresentationStateStorage", "pydicom.uid.BodyPositionWaveformStorage", "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "pydicom.uid.BreastTomosynthesisImageStorage", "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "pydicom.uid.CArmPhotonElectronRadiationStorage", "pydicom.uid.CTDefinedProcedureProtocolStorage", "pydicom.uid.CTImageStorage", "pydicom.uid.CTPerformedProcedureProtocolStorage", "pydicom.uid.CardiacElectrophysiologyWaveformStorage", "pydicom.uid.ChestCADSRStorage", "pydicom.uid.ColonCADSRStorage", "pydicom.uid.ColorPaletteStorage", "pydicom.uid.ColorSoftcopyPresentationStateStorage", "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.Comprehensive3DSRStorage", "pydicom.uid.ComprehensiveSRStorage", "pydicom.uid.ComputedRadiographyImageStorage", "pydicom.uid.ConfocalMicroscopyImageStorage", "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "pydicom.uid.ContentAssessmentResultsStorage", "pydicom.uid.CornealTopographyMapStorage", "pydicom.uid.DICOS2DAITStorage", "pydicom.uid.DICOS3DAITStorage", "pydicom.uid.DICOSCTImageStorage", "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "pydicom.uid.DICOSQuadrupoleResonanceStorage", "pydicom.uid.DICOSThreatDetectionReportStorage", "pydicom.uid.DeflatedExplicitVRLittleEndian", "pydicom.uid.DeformableSpatialRegistrationStorage", "pydicom.uid.DermoscopicPhotographyImageStorage", "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "pydicom.uid.DigitalXRayImageStorageForPresentation", "pydicom.uid.DigitalXRayImageStorageForProcessing", "pydicom.uid.EddyCurrentImageStorage", "pydicom.uid.EddyCurrentMultiFrameImageStorage", "pydicom.uid.ElectromyogramWaveformStorage", "pydicom.uid.ElectrooculogramWaveformStorage", "pydicom.uid.EncapsulatedCDAStorage", "pydicom.uid.EncapsulatedMTLStorage", "pydicom.uid.EncapsulatedOBJStorage", "pydicom.uid.EncapsulatedPDFStorage", "pydicom.uid.EncapsulatedSTLStorage", "pydicom.uid.EnhancedCTImageStorage", "pydicom.uid.EnhancedContinuousRTImageStorage", "pydicom.uid.EnhancedMRColorImageStorage", "pydicom.uid.EnhancedMRImageStorage", "pydicom.uid.EnhancedPETImageStorage", "pydicom.uid.EnhancedRTImageStorage", "pydicom.uid.EnhancedSRStorage", "pydicom.uid.EnhancedUSVolumeStorage", "pydicom.uid.EnhancedXAImageStorage", "pydicom.uid.EnhancedXRFImageStorage", "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "pydicom.uid.ExplicitVRBigEndian", "pydicom.uid.ExplicitVRLittleEndian", "pydicom.uid.ExtensibleSRStorage", "pydicom.uid.General32bitECGWaveformStorage", "pydicom.uid.GeneralAudioWaveformStorage", "pydicom.uid.GeneralECGWaveformStorage", "pydicom.uid.GenericImplantTemplateStorage", "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.HEVCM10P51", "pydicom.uid.HEVCMP51", "pydicom.uid.HTJ2K", "pydicom.uid.HTJ2KLossless", "pydicom.uid.HTJ2KLosslessRPCL", "pydicom.uid.HangingProtocolStorage", "pydicom.uid.HemodynamicWaveformStorage", "pydicom.uid.ImplantAssemblyTemplateStorage", "pydicom.uid.ImplantTemplateGroupStorage", "pydicom.uid.ImplantationPlanSRStorage", "pydicom.uid.ImplicitVRLittleEndian", "pydicom.uid.IntraocularLensCalculationsStorage", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pydicom.uid.InventoryStorage", "pydicom.uid.JPEG2000", "pydicom.uid.JPEG2000Lossless", "pydicom.uid.JPEG2000MC", "pydicom.uid.JPEG2000MCLossless", "pydicom.uid.JPEG2000TransferSyntaxes", "pydicom.uid.JPEGBaseline8Bit", "pydicom.uid.JPEGExtended12Bit", "pydicom.uid.JPEGLSLossless", "pydicom.uid.JPEGLSNearLossless", "pydicom.uid.JPEGLSTransferSyntaxes", "pydicom.uid.JPEGLossless", "pydicom.uid.JPEGLosslessSV1", "pydicom.uid.JPEGTransferSyntaxes", "pydicom.uid.JPIPHTJ2KReferenced", "pydicom.uid.JPIPHTJ2KReferencedDeflate", "pydicom.uid.KeratometryMeasurementsStorage", "pydicom.uid.KeyObjectSelectionDocumentStorage", "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "pydicom.uid.LensometryMeasurementsStorage", "pydicom.uid.MPEG2MPHL", "pydicom.uid.MPEG2MPHLF", "pydicom.uid.MPEG2MPML", "pydicom.uid.MPEG2MPMLF", "pydicom.uid.MPEG4HP41", "pydicom.uid.MPEG4HP41BD", "pydicom.uid.MPEG4HP41BDF", "pydicom.uid.MPEG4HP41F", "pydicom.uid.MPEG4HP422D", "pydicom.uid.MPEG4HP422DF", "pydicom.uid.MPEG4HP423D", "pydicom.uid.MPEG4HP423DF", "pydicom.uid.MPEG4HP42STEREO", "pydicom.uid.MPEG4HP42STEREOF", "pydicom.uid.MPEGTransferSyntaxes", "pydicom.uid.MRImageStorage", "pydicom.uid.MRSpectroscopyStorage", "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "pydicom.uid.MammographyCADSRStorage", "pydicom.uid.MediaStorageDirectoryStorage", "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "pydicom.uid.MultichannelRespiratoryWaveformStorage", "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.NuclearMedicineImageStorage", "pydicom.uid.OphthalmicAxialMeasurementsStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pydicom.uid.OphthalmicPhotography16BitImageStorage", "pydicom.uid.OphthalmicPhotography8BitImageStorage", "pydicom.uid.OphthalmicThicknessMapStorage", "pydicom.uid.OphthalmicTomographyImageStorage", "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "pydicom.uid.PYDICOM_ROOT_UID", "pydicom.uid.ParametricMapStorage", "pydicom.uid.PatientRadiationDoseSRStorage", "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "pydicom.uid.PhotoacousticImageStorage", "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "pydicom.uid.PositronEmissionTomographyImageStorage", "pydicom.uid.PrivateTransferSyntaxes", "pydicom.uid.ProcedureLogStorage", "pydicom.uid.ProtocolApprovalStorage", "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "pydicom.uid.RE_VALID_UID", "pydicom.uid.RE_VALID_UID_PREFIX", "pydicom.uid.RLELossless", "pydicom.uid.RLETransferSyntaxes", "pydicom.uid.RTBeamsDeliveryInstructionStorage", "pydicom.uid.RTBeamsTreatmentRecordStorage", "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "pydicom.uid.RTBrachyTreatmentRecordStorage", "pydicom.uid.RTDoseStorage", "pydicom.uid.RTImageStorage", "pydicom.uid.RTIonBeamsTreatmentRecordStorage", "pydicom.uid.RTIonPlanStorage", "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "pydicom.uid.RTPhysicianIntentStorage", "pydicom.uid.RTPlanStorage", "pydicom.uid.RTRadiationRecordSetStorage", "pydicom.uid.RTRadiationSalvageRecordStorage", "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "pydicom.uid.RTRadiationSetStorage", "pydicom.uid.RTSegmentAnnotationStorage", "pydicom.uid.RTStructureSetStorage", "pydicom.uid.RTTreatmentPreparationStorage", "pydicom.uid.RTTreatmentSummaryRecordStorage", "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "pydicom.uid.RawDataStorage", "pydicom.uid.RealWorldValueMappingStorage", "pydicom.uid.RespiratoryWaveformStorage", "pydicom.uid.RoboticArmRadiationStorage", "pydicom.uid.RoboticRadiationRecordStorage", "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "pydicom.uid.SMPTEST211030PCMDigitalAudio", "pydicom.uid.SecondaryCaptureImageStorage", "pydicom.uid.SegmentationStorage", "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.SimplifiedAdultEchoSRStorage", "pydicom.uid.SleepElectroencephalogramWaveformStorage", "pydicom.uid.SpatialFiducialsStorage", "pydicom.uid.SpatialRegistrationStorage", "pydicom.uid.SpectaclePrescriptionReportStorage", "pydicom.uid.StereometricRelationshipStorage", "pydicom.uid.SubjectiveRefractionMeasurementsStorage", "pydicom.uid.SurfaceScanMeshStorage", "pydicom.uid.SurfaceScanPointCloudStorage", "pydicom.uid.SurfaceSegmentationStorage", "pydicom.uid.TomotherapeuticRadiationRecordStorage", "pydicom.uid.TomotherapeuticRadiationStorage", "pydicom.uid.TractographyResultsStorage", "pydicom.uid.TwelveLeadECGWaveformStorage", "pydicom.uid.UID", "pydicom.uid.UltrasoundImageStorage", "pydicom.uid.UltrasoundMultiFrameImageStorage", "pydicom.uid.UncompressedTransferSyntaxes", "pydicom.uid.VLEndoscopicImageStorage", "pydicom.uid.VLMicroscopicImageStorage", "pydicom.uid.VLPhotographicImageStorage", "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "pydicom.uid.VLWholeSlideMicroscopyImageStorage", "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "pydicom.uid.VideoEndoscopicImageStorage", "pydicom.uid.VideoMicroscopicImageStorage", "pydicom.uid.VideoPhotographicImageStorage", "pydicom.uid.VisualAcuityMeasurementsStorage", "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pydicom.uid.XADefinedProcedureProtocolStorage", "pydicom.uid.XAPerformedProcedureProtocolStorage", "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.XRay3DAngiographicImageStorage", "pydicom.uid.XRay3DCraniofacialImageStorage", "pydicom.uid.XRayAngiographicImageStorage", "pydicom.uid.XRayRadiationDoseSRStorage", "pydicom.uid.XRayRadiofluoroscopicImageStorage", "pydicom.uid.generate_uid", "pydicom.uid.register_transfer_syntax", "pydicom.valuerep.DA", "pydicom.valuerep.DS", "pydicom.valuerep.DSdecimal", "pydicom.valuerep.DSfloat", "pydicom.valuerep.DT", "pydicom.valuerep.IS", "pydicom.valuerep.ISfloat", "pydicom.valuerep.PersonName", "pydicom.valuerep.TM", "pydicom.valuerep.VR", "pydicom.valuerep.format_number_as_ds", "pydicom.valuerep.is_valid_ds", "pydicom.values.convert_AE_string", "pydicom.values.convert_ATvalue", "pydicom.values.convert_DA_string", "pydicom.values.convert_DS_string", "pydicom.values.convert_DT_string", "pydicom.values.convert_IS_string", "pydicom.values.convert_OBvalue", "pydicom.values.convert_OWvalue", "pydicom.values.convert_PN", "pydicom.values.convert_SQ", "pydicom.values.convert_TM_string", "pydicom.values.convert_UI", "pydicom.values.convert_UN", "pydicom.values.convert_UR_string", "pydicom.values.convert_numbers", "pydicom.values.convert_single_string", "pydicom.values.convert_string", "pydicom.values.convert_tag", "pydicom.values.convert_text", "pydicom.values.convert_value", "pydicom.values.multi_string", "pydicom.waveforms.numpy_handler", "Bulk Data Handlers", "Pixel Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixel_data_handlers</span></code>)", "API Reference", "Miscellaneous (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.misc</span></code>)", "Overlay Data Handling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.overlays</span></code>)", "Pixel Data (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels</span></code>)", "Pixel Data Decoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.decoders</span></code>)", "Pixel Data Encoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.encoders</span></code>)", "UID Definitions and Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.uid</span></code>)", "Waveform Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.waveforms</span></code>)", "Release notes", "Version 0.9.2", "Version 0.9.3", "Version 0.9.4", "Version 0.9.5", "Version 0.9.6", "Version 0.9.7", "Version 0.9.8", "Version 0.9.9", "Version 1.0.0", "Version 1.1.0", "Version 1.2.0", "Version 1.3.0", "Version 1.4.0", "Version 1.4.1", "Version 2.0.0", "Version 2.1.0", "Version 2.1.1", "Version 2.2.0", "Version 2.3.0", "Version 2.4.0", "Version 3.0.0", "Computation times", "Contributing to pydicom", "Contributing a source code change", "Contributing a documentation change", "Dataset basics: read, access, modify, write", "Introduction to JSON support", "DICOM File-sets and DICOMDIR", "Tutorials", "How to install pydicom", "Compressing <em>Pixel Data</em>", "Structured Reporting", "Waveforms"], "terms": {"go": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 53, 163, 554, 555, 556, 558, 560], "end": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 139, 141, 150, 151, 161, 176, 178, 218, 219, 220, 530, 536, 543], "download": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 105, 530, 546, 548, 549, 550], "full": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 46, 105, 131, 160, 219, 530, 539, 540, 541, 546, 558, 561], "exampl": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 30, 34, 37, 39, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 83, 84, 107, 108, 109, 127, 130, 138, 160, 168, 170, 237, 241, 242, 459, 484, 493, 522, 530, 531, 532, 533, 535, 536, 538, 542, 546, 548, 551, 552, 553, 554, 555, 557, 558, 561, 563], "code": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 32, 41, 43, 46, 47, 48, 53, 76, 77, 95, 130, 158, 160, 163, 530, 531, 533, 537, 538, 539, 541, 543, 546, 548, 551, 553, 555, 559, 560, 562, 563], "graphic": [0, 49, 51], "window": [0, 2, 8, 20, 26, 27, 42, 47, 209, 210, 218, 530, 531, 539, 543, 549, 554, 555, 556, 560], "from": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 68, 71, 75, 76, 78, 80, 83, 84, 90, 96, 107, 108, 117, 118, 127, 128, 129, 130, 131, 132, 134, 135, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 159, 162, 165, 168, 169, 170, 171, 172, 179, 180, 181, 193, 194, 196, 203, 206, 207, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 241, 242, 459, 484, 488, 489, 493, 497, 515, 530, 533, 534, 535, 536, 537, 538, 541, 542, 545, 546, 547, 548, 551, 552, 554, 555, 556, 558, 560, 561, 562, 563], "pathlib": [0, 10, 12, 173, 558], "import": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 30, 34, 36, 37, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 68, 83, 84, 107, 108, 127, 130, 138, 168, 170, 220, 237, 459, 484, 530, 536, 539, 551, 554, 555, 556, 557, 558, 560, 561, 562, 563], "path": [0, 9, 10, 11, 12, 17, 24, 26, 27, 28, 30, 34, 39, 41, 43, 45, 48, 51, 103, 104, 105, 106, 130, 131, 160, 169, 170, 173, 181, 201, 220, 237, 241, 242, 530, 546, 551, 555, 558], "sy": [0, 4, 14, 563], "tkinter": [0, 22, 47, 530, 531, 533], "tk": [0, 22], "ttk": 0, "pydicom": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 25, 29, 30, 32, 34, 36, 38, 39, 45, 48, 50, 51, 52, 53, 59, 69, 520, 522, 531, 533, 534, 535, 536, 537, 538, 539, 540, 543, 545, 546, 548, 552, 554, 555, 556, 557, 558, 559, 562, 563], "print": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 41, 43, 50, 108, 110, 130, 241, 530, 532, 543, 552, 555, 556, 558, 563], "__doc__": [0, 2, 8, 11, 14, 16, 20, 22], "def": [0, 8, 11, 14, 17, 25, 26, 30, 34, 96, 130, 168, 554, 557], "build_tre": 0, "treeview": 0, "d": [0, 2, 3, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 39, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 55, 59, 64, 68, 80, 81, 83, 84, 96, 100, 101, 107, 108, 109, 127, 130, 137, 138, 160, 168, 170, 179, 180, 195, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 237, 488, 489, 493, 496, 501, 519, 530, 536, 537, 545, 548, 550, 554, 555, 556, 557, 558, 561, 563], "dataset": [0, 2, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 32, 36, 37, 39, 42, 43, 45, 46, 47, 48, 49, 53, 72, 79, 83, 84, 90, 96, 99, 105, 106, 107, 108, 127, 128, 135, 137, 138, 143, 145, 154, 156, 157, 160, 161, 164, 166, 167, 168, 169, 170, 171, 179, 180, 181, 193, 194, 198, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 241, 242, 243, 459, 485, 519, 522, 530, 531, 532, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 555, 558, 559, 560, 561, 563], "parent": [0, 26, 27, 133, 157, 170, 171, 530, 540, 551, 558], "str": [0, 11, 14, 20, 29, 30, 32, 34, 41, 75, 76, 77, 78, 87, 91, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 140, 141, 142, 146, 150, 151, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 181, 182, 188, 192, 193, 196, 197, 198, 199, 200, 201, 202, 204, 205, 211, 217, 218, 219, 220, 237, 239, 240, 241, 242, 244, 245, 459, 484, 485, 487, 488, 489, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 530, 540, 545, 548, 556], "none": [0, 2, 8, 10, 14, 20, 32, 33, 39, 75, 77, 80, 81, 90, 93, 95, 96, 97, 105, 107, 108, 109, 110, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 140, 142, 143, 145, 146, 152, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205, 218, 219, 220, 237, 241, 242, 243, 245, 247, 459, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 516, 517, 518, 519, 530, 539, 542, 543, 546, 554, 556, 560, 562], "build": [0, 4, 179, 180, 530, 539, 550, 554], "out": [0, 49, 51, 53, 138, 170, 218, 488, 489, 530, 546, 553, 554, 555, 556, 558, 563], "paramet": [0, 10, 20, 24, 26, 34, 39, 51, 52, 53, 75, 76, 77, 78, 80, 81, 93, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 160, 161, 162, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 193, 194, 196, 197, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 241, 242, 243, 245, 247, 459, 484, 485, 488, 489, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 530, 536, 538, 540, 546, 548, 549, 556, 558], "The": [0, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 68, 75, 76, 77, 78, 96, 98, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 157, 158, 160, 162, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 193, 194, 196, 197, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 241, 242, 244, 245, 247, 484, 485, 493, 496, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 530, 533, 540, 541, 546, 551, 554, 555, 556, 557, 560, 561, 562, 563], "object": [0, 10, 14, 30, 34, 39, 41, 43, 46, 49, 84, 98, 102, 127, 130, 131, 133, 140, 141, 142, 146, 150, 151, 156, 157, 160, 161, 162, 164, 165, 168, 170, 181, 203, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 246, 493, 522, 530, 532, 533, 542, 543, 545, 548, 549, 551, 556, 558, 563], "add": [0, 2, 6, 10, 12, 15, 18, 19, 20, 25, 26, 27, 30, 34, 39, 41, 42, 44, 46, 50, 107, 109, 110, 127, 130, 133, 137, 138, 168, 170, 171, 181, 218, 220, 237, 530, 539, 542, 548, 550, 551, 552, 554, 555, 556, 558, 561, 563], "item": [0, 6, 8, 9, 15, 19, 20, 24, 26, 27, 28, 32, 39, 41, 52, 53, 127, 130, 137, 138, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 167, 174, 198, 203, 530, 531, 532, 533, 536, 539, 542, 543, 548, 549, 552, 556, 558, 563], "id": [0, 2, 8, 9, 10, 12, 17, 20, 46, 130, 133, 169, 170, 171, 172, 173, 218, 530, 532, 549, 556, 558], "ani": [0, 10, 24, 26, 27, 29, 30, 32, 34, 37, 41, 42, 49, 50, 52, 78, 91, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 130, 132, 134, 137, 138, 139, 153, 155, 157, 162, 170, 171, 181, 194, 203, 204, 209, 210, 218, 219, 220, 237, 241, 242, 245, 486, 490, 493, 494, 507, 511, 517, 518, 530, 532, 533, 542, 548, 551, 554, 555, 558, 560, 561], "default": [0, 9, 24, 26, 29, 32, 34, 42, 45, 49, 50, 51, 55, 75, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 127, 130, 131, 134, 137, 139, 140, 141, 142, 146, 149, 150, 151, 154, 157, 158, 160, 161, 170, 172, 179, 180, 181, 193, 194, 204, 208, 209, 210, 211, 214, 216, 217, 218, 219, 220, 237, 241, 242, 484, 493, 501, 503, 507, 518, 519, 530, 534, 536, 537, 539, 541, 542, 543, 544, 545, 546, 548, 551, 555, 556, 557, 558, 561], "For": [0, 17, 24, 26, 27, 30, 34, 36, 37, 39, 41, 42, 44, 46, 50, 51, 53, 119, 127, 130, 137, 143, 144, 147, 168, 170, 204, 218, 219, 220, 237, 241, 242, 493, 530, 536, 546, 551, 554, 555, 556, 558, 560, 561], "each": [0, 3, 10, 20, 29, 30, 34, 36, 37, 40, 41, 44, 50, 51, 52, 68, 76, 130, 137, 138, 143, 144, 147, 148, 149, 150, 151, 171, 172, 203, 211, 217, 218, 219, 220, 237, 241, 242, 493, 519, 530, 545, 548, 554, 556, 558, 561, 563], "datael": [0, 39, 46, 47, 50, 59, 77, 128, 130, 131, 132, 158, 161, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 200, 212, 530, 531, 539, 540, 541, 542, 545, 549, 551, 556], "current": [0, 20, 24, 26, 28, 37, 39, 42, 44, 95, 127, 130, 157, 170, 171, 179, 180, 187, 205, 211, 218, 493, 530, 548, 555, 558, 560, 561], "idx": [0, 237, 561], "elem": [0, 8, 17, 39, 41, 50, 77, 127, 130, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 200, 204, 244, 246, 530, 533, 556], "enumer": [0, 4, 563], "tree_item": 0, "insert": [0, 555, 556], "text": [0, 20, 22, 32, 41, 46, 127, 160, 197, 198, 200, 507, 513, 514, 516, 517, 530, 532, 541, 554, 555, 556], "move": [0, 92, 98, 169, 170, 530, 536, 537, 551, 555, 558], "vr": [0, 2, 8, 12, 16, 17, 20, 26, 27, 28, 37, 38, 40, 41, 44, 45, 46, 55, 59, 64, 81, 88, 89, 92, 100, 101, 107, 108, 109, 110, 112, 117, 118, 122, 127, 128, 129, 130, 131, 133, 139, 157, 158, 159, 161, 162, 170, 179, 180, 181, 186, 187, 190, 194, 195, 214, 220, 221, 222, 223, 227, 239, 250, 459, 485, 486, 488, 489, 490, 491, 492, 493, 494, 498, 507, 509, 511, 512, 513, 514, 516, 517, 530, 531, 532, 533, 534, 536, 537, 539, 540, 541, 542, 543, 545, 546, 548, 549, 550, 551, 556, 557, 561], "sq": [0, 8, 32, 55, 127, 130, 158, 507, 530, 536, 546, 549, 551, 556], "i": [0, 2, 3, 4, 10, 17, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 59, 64, 68, 70, 72, 75, 76, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 95, 96, 102, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 193, 194, 195, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 241, 242, 243, 244, 247, 459, 484, 486, 490, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 507, 508, 509, 511, 512, 514, 515, 530, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563], "sequenc": [0, 2, 3, 6, 8, 15, 19, 20, 24, 26, 27, 28, 32, 39, 47, 52, 53, 59, 76, 78, 88, 130, 139, 143, 144, 145, 161, 166, 167, 171, 174, 175, 197, 198, 206, 207, 208, 209, 218, 493, 507, 519, 522, 530, 531, 532, 536, 537, 540, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 558, 563], "contain": [0, 10, 24, 26, 29, 30, 32, 34, 37, 38, 39, 40, 41, 42, 46, 50, 51, 52, 53, 55, 68, 75, 77, 127, 129, 130, 132, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 160, 161, 168, 175, 179, 180, 181, 194, 197, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 237, 241, 242, 243, 245, 493, 497, 501, 503, 519, 530, 538, 541, 548, 551, 554, 556, 558, 563], "0": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 34, 36, 37, 41, 42, 43, 44, 46, 50, 51, 52, 80, 81, 82, 99, 101, 102, 127, 129, 130, 132, 133, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 157, 166, 167, 168, 172, 173, 179, 180, 181, 204, 208, 209, 210, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 397, 398, 409, 410, 459, 484, 501, 503, 507, 515, 519, 522, 547, 552, 555, 556, 558, 560, 561, 563], "more": [0, 24, 26, 27, 32, 34, 37, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 98, 127, 130, 137, 139, 140, 142, 143, 144, 147, 161, 164, 170, 173, 178, 181, 182, 196, 218, 219, 220, 237, 241, 242, 493, 496, 530, 531, 532, 533, 535, 536, 543, 551, 554, 555, 556, 557, 558, 560, 561, 563], "seq_idx": 0, "seq_item": 0, "valu": [0, 2, 8, 9, 10, 12, 17, 20, 26, 28, 29, 30, 32, 33, 34, 36, 37, 39, 41, 42, 44, 46, 50, 51, 53, 55, 59, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 92, 95, 102, 108, 110, 111, 112, 121, 122, 127, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 157, 159, 160, 162, 168, 170, 178, 179, 180, 181, 182, 191, 196, 197, 198, 203, 204, 205, 206, 207, 208, 209, 211, 214, 216, 217, 218, 219, 220, 235, 237, 244, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 519, 522, 530, 531, 532, 535, 536, 537, 539, 540, 541, 542, 543, 545, 546, 548, 549, 550, 551, 554, 555, 556, 557, 558, 560, 561, 562, 563], "tree_seq_item": 0, "f": [0, 2, 3, 4, 8, 9, 10, 11, 12, 18, 20, 127, 130, 168, 170, 241, 242, 554, 558, 561, 563], "name": [0, 2, 6, 8, 9, 10, 11, 12, 14, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 39, 41, 42, 43, 44, 45, 46, 53, 105, 108, 110, 117, 118, 121, 122, 123, 127, 130, 134, 157, 160, 194, 205, 218, 219, 220, 237, 239, 240, 241, 242, 459, 493, 530, 531, 532, 533, 536, 539, 540, 541, 546, 548, 549, 550, 551, 552, 554, 555, 556, 558, 561, 562, 563], "1": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 36, 37, 39, 41, 43, 44, 45, 46, 50, 51, 52, 61, 79, 83, 84, 86, 95, 105, 107, 108, 109, 110, 127, 129, 130, 133, 134, 137, 138, 139, 143, 147, 148, 149, 157, 160, 172, 181, 194, 204, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 488, 493, 519, 531, 534, 537, 545, 548, 551, 554, 555, 556, 557, 558, 560, 561, 562, 563], "recurs": [0, 4, 46, 130, 530, 532, 534], "": [0, 2, 3, 4, 8, 9, 10, 12, 16, 17, 20, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 40, 41, 44, 46, 48, 49, 50, 51, 53, 83, 92, 93, 96, 109, 115, 119, 126, 127, 130, 131, 137, 140, 143, 146, 147, 150, 152, 157, 160, 170, 171, 179, 180, 181, 211, 218, 219, 220, 237, 241, 242, 244, 245, 397, 398, 495, 496, 497, 499, 506, 507, 514, 516, 517, 530, 532, 533, 535, 540, 541, 543, 546, 548, 553, 554, 555, 556, 558, 560, 561, 563], "__name__": [0, 14, 25, 26], "__main__": [0, 14, 25, 26], "len": [0, 3, 4, 8, 10, 14, 36, 556, 558, 563], "argv": [0, 4, 14], "2": [0, 2, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 32, 34, 36, 37, 39, 41, 42, 44, 45, 46, 51, 52, 55, 79, 81, 83, 84, 85, 88, 95, 98, 99, 101, 102, 105, 107, 108, 109, 110, 127, 129, 130, 132, 133, 134, 137, 138, 139, 143, 144, 147, 148, 149, 160, 168, 194, 204, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 493, 501, 503, 519, 533, 534, 536, 537, 539, 540, 542, 543, 551, 554, 556, 558, 560, 561, 563], "pleas": [0, 14, 25, 26, 28, 41, 43, 130, 135, 136, 143, 144, 145, 147, 152, 181, 220, 241, 242, 530, 537, 548, 554, 555], "suppli": [0, 14, 49, 53, 78, 140, 142, 146, 160, 170, 205, 218, 220, 484, 493, 556, 558], "python": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 38, 39, 40, 41, 42, 43, 46, 47, 53, 75, 76, 78, 93, 130, 212, 213, 215, 459, 530, 531, 533, 534, 536, 537, 538, 539, 540, 541, 542, 545, 546, 547, 548, 550, 551, 554, 555, 556, 557, 560, 561, 563], "dicomtre": [0, 21, 530, 531, 552], "py": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 41, 49, 53, 83, 84, 96, 530, 531, 534, 535, 536, 537, 538, 539, 547, 552, 554, 556, 558, 561], "exit": [0, 14, 24, 26, 27, 28], "read": [0, 2, 6, 7, 8, 13, 14, 16, 17, 18, 20, 24, 26, 27, 28, 29, 40, 41, 42, 43, 46, 50, 51, 53, 55, 69, 75, 81, 88, 93, 105, 130, 131, 135, 136, 140, 141, 142, 144, 146, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 174, 175, 177, 178, 201, 212, 214, 219, 220, 241, 242, 485, 491, 492, 522, 530, 531, 532, 533, 534, 535, 536, 539, 540, 541, 542, 543, 545, 546, 548, 549, 550, 551, 552, 555, 557, 558, 559, 562], "resolv": [0, 128, 179, 530, 536, 542], "strict": [0, 42, 492, 530, 543, 550], "true": [0, 10, 12, 16, 29, 30, 32, 34, 39, 41, 42, 44, 46, 52, 55, 68, 79, 80, 81, 87, 88, 92, 93, 95, 96, 99, 105, 114, 115, 124, 125, 127, 129, 130, 131, 134, 137, 144, 147, 153, 157, 158, 160, 161, 165, 169, 170, 171, 172, 173, 175, 176, 177, 178, 181, 194, 201, 204, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 241, 242, 244, 459, 485, 488, 489, 497, 498, 499, 500, 501, 502, 503, 507, 508, 509, 511, 512, 514, 515, 519, 530, 534, 536, 546, 548, 550, 551, 556, 558, 563], "dcmread": [0, 4, 9, 10, 11, 12, 14, 16, 41, 43, 45, 48, 51, 69, 90, 105, 131, 153, 156, 157, 158, 161, 164, 178, 202, 485, 530, 539, 545, 546, 548, 551, 555, 556, 558, 563], "creat": [0, 4, 12, 14, 16, 18, 24, 25, 26, 27, 41, 42, 46, 49, 53, 87, 127, 128, 130, 154, 156, 157, 158, 168, 169, 170, 171, 181, 203, 219, 220, 237, 245, 459, 484, 486, 487, 490, 492, 493, 522, 530, 533, 535, 548, 550, 551, 556, 560, 561, 562, 563], "root": [0, 9, 10, 22, 26, 27, 96, 170, 171, 173, 398, 484, 556, 558], "widget": [0, 49], "geometri": 0, "1200x900": 0, "titl": [0, 2, 20, 26, 28, 39, 46, 194, 493, 554, 555, 556], "viewer": [0, 49], "rowconfigur": 0, "weight": [0, 2, 8, 20], "columnconfigur": 0, "monospac": 0, "font": 0, "style": [0, 23, 530, 532, 535], "theme_us": 0, "clam": 0, "configur": [0, 29, 37, 42, 98, 127, 130, 218, 219, 522, 530, 541, 548, 549], "courier": 0, "12": [0, 30, 34, 37, 52, 68, 214, 237, 239, 313, 314, 427, 468, 481, 483, 558, 563], "popul": [0, 12, 53, 562], "grid": 0, "row": [0, 2, 8, 9, 20, 26, 28, 29, 30, 34, 37, 50, 51, 130, 204, 211, 214, 216, 217, 218, 219, 220, 237, 241, 242, 561], "column": [0, 2, 8, 9, 20, 26, 28, 29, 30, 34, 37, 50, 51, 130, 204, 211, 214, 216, 217, 218, 219, 220, 237, 241, 242, 561], "sticki": 0, "nsew": 0, "start": [0, 6, 17, 18, 20, 24, 26, 27, 28, 43, 50, 53, 127, 133, 141, 142, 144, 146, 147, 150, 151, 159, 165, 171, 172, 177, 179, 180, 219, 220, 242, 484, 507, 515, 530, 540, 550, 554, 555, 556, 557, 562], "mainloop": [0, 22], "jupyt": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "notebook": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "ipynb": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "sourc": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 23, 26, 28, 29, 30, 34, 46, 53, 55, 75, 76, 77, 78, 80, 81, 93, 95, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 530, 538, 546, 548, 551, 553, 556, 559, 560, 563], "galleri": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 552], "gener": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 25, 26, 27, 34, 36, 41, 42, 45, 53, 135, 136, 143, 149, 158, 164, 172, 243, 245, 459, 484, 492, 519, 530, 532, 533, 537, 539, 551, 555, 561], "sphinx": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 39, 530, 534, 555], "These": [1, 6, 7, 15, 38, 41, 42, 530, 546, 551, 556], "illustr": [1, 3, 4, 6, 7, 8, 9, 15, 16, 18, 20, 40, 41], "avail": [1, 6, 10, 15, 24, 26, 27, 28, 30, 33, 34, 41, 46, 49, 51, 52, 53, 105, 130, 131, 137, 138, 140, 142, 146, 157, 170, 212, 213, 215, 218, 220, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 493, 501, 503, 530, 532, 533, 537, 539, 540, 541, 543, 546, 558, 560, 561, 562, 563], "which": [1, 6, 20, 23, 24, 25, 26, 30, 34, 37, 39, 41, 43, 44, 46, 49, 51, 52, 53, 76, 77, 83, 108, 127, 130, 158, 161, 163, 168, 170, 181, 194, 217, 218, 220, 242, 484, 485, 487, 530, 531, 534, 536, 538, 546, 551, 554, 555, 556, 557, 558, 560, 561, 563], "can": [1, 6, 10, 14, 17, 24, 25, 26, 27, 28, 30, 32, 34, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 95, 130, 137, 138, 156, 157, 160, 161, 168, 170, 181, 196, 203, 220, 237, 485, 487, 492, 518, 530, 531, 532, 533, 536, 545, 546, 549, 551, 554, 555, 556, 557, 558, 560, 561, 562, 563], "appli": [1, 6, 10, 16, 29, 37, 51, 52, 66, 77, 79, 130, 170, 205, 206, 207, 208, 209, 210, 218, 219, 220, 241, 242, 530, 543, 546, 555, 560, 563], "dicom": [1, 2, 4, 6, 7, 9, 13, 14, 15, 19, 21, 22, 23, 27, 28, 30, 32, 34, 36, 37, 39, 40, 41, 43, 44, 45, 47, 49, 50, 51, 52, 55, 58, 60, 68, 69, 71, 73, 75, 76, 77, 83, 88, 93, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 130, 131, 132, 133, 137, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 160, 161, 163, 164, 165, 170, 181, 192, 194, 196, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 218, 220, 237, 241, 242, 244, 245, 459, 484, 488, 489, 492, 493, 495, 496, 512, 522, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 548, 549, 550, 551, 552, 555, 556, 557, 559, 561, 562], "downsiz": [1, 5, 6, 51, 552], "mri": [1, 5, 6, 51, 552], "us": [1, 3, 5, 6, 7, 9, 10, 12, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 50, 51, 52, 76, 77, 78, 79, 83, 84, 87, 93, 94, 95, 96, 100, 101, 105, 108, 110, 127, 128, 130, 131, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 160, 161, 163, 164, 168, 170, 171, 172, 178, 179, 180, 181, 193, 196, 197, 198, 204, 205, 206, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 241, 242, 243, 247, 405, 459, 484, 485, 488, 492, 493, 496, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 519, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 562, 563], "decod": [1, 5, 6, 37, 38, 40, 59, 76, 77, 127, 130, 140, 142, 146, 147, 154, 156, 157, 160, 193, 212, 213, 215, 216, 217, 237, 239, 241, 242, 493, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 522, 530, 534, 541, 542, 543, 546, 548, 549, 551, 552, 558, 560], "plot": [1, 5, 6, 7, 13, 530, 542, 552, 563], "waveform": [1, 5, 6, 40, 47, 68, 130, 168, 522, 530, 546, 550, 552, 559], "data": [1, 2, 5, 6, 7, 10, 11, 13, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 32, 36, 37, 38, 39, 40, 41, 42, 43, 47, 49, 53, 55, 61, 62, 63, 64, 76, 77, 78, 79, 81, 83, 96, 99, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 156, 157, 158, 159, 160, 162, 164, 168, 170, 177, 193, 196, 197, 198, 204, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 484, 495, 512, 519, 522, 530, 531, 532, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 558, 559, 560], "load": [1, 5, 6, 10, 12, 14, 16, 161, 169, 170, 178, 530, 542, 546, 547, 548, 552], "ct": [1, 5, 6, 9, 10, 12, 20, 26, 28, 36, 41, 44, 46, 49, 51, 68, 130, 170, 530, 542, 552, 556, 557, 558, 561], "slice": [1, 2, 5, 6, 8, 9, 20, 26, 28, 130, 530, 539, 540, 542, 552], "axial": [1, 5, 6, 20, 26, 28, 46, 530, 542, 552, 556], "sagitt": [1, 5, 6, 530, 542, 552], "coron": [1, 5, 6, 530, 542, 552], "thi": [2, 3, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 68, 75, 80, 81, 82, 85, 86, 88, 95, 96, 108, 127, 130, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 152, 158, 160, 163, 169, 170, 181, 187, 198, 201, 203, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 241, 242, 244, 487, 488, 489, 492, 493, 496, 497, 522, 537, 539, 542, 543, 548, 551, 554, 555, 556, 557, 558, 560, 561, 562, 563], "show": [2, 3, 4, 6, 9, 10, 12, 17, 21, 24, 25, 27, 39, 46, 49, 53, 108, 127, 530, 531, 535, 537, 548, 550, 552, 555, 556, 563], "how": [2, 3, 8, 9, 10, 12, 14, 16, 17, 18, 20, 24, 26, 30, 34, 37, 39, 40, 43, 44, 45, 46, 49, 50, 51, 52, 53, 108, 127, 140, 141, 170, 530, 531, 535, 554, 555, 556, 557, 558, 559, 563], "an": [2, 10, 11, 16, 23, 24, 26, 27, 28, 29, 30, 32, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 53, 55, 75, 76, 77, 83, 84, 85, 88, 96, 105, 106, 108, 114, 117, 118, 124, 127, 128, 130, 131, 133, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 160, 161, 170, 171, 180, 181, 191, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 220, 237, 242, 243, 244, 247, 459, 486, 488, 489, 490, 491, 492, 493, 494, 496, 512, 519, 530, 533, 534, 540, 542, 543, 545, 546, 548, 549, 551, 554, 555, 556, 558, 560, 561, 562, 563], "mr": [2, 8, 10, 17, 20, 68, 493, 558], "512": [2, 20, 160, 204, 530, 540], "im": 2, "64": [2, 8, 20, 32, 37, 51, 214, 218, 484, 519, 530, 533, 563], "perform": [2, 30, 34, 37, 42, 44, 82, 111, 112, 113, 115, 116, 126, 130, 134, 170, 216, 220, 241, 242, 505, 530, 537, 540, 541, 560, 563], "take": [2, 24, 25, 26, 30, 34, 37, 39, 44, 49, 53, 130, 158, 168, 203, 530, 537, 554, 555, 556, 558], "central": 2, "section": [2, 24, 25, 26, 27, 36, 37, 39, 41, 44, 46, 51, 53, 55, 99, 127, 130, 133, 137, 139, 149, 194, 198, 204, 211, 218, 220, 241, 242, 493, 554, 555], "instead": [2, 34, 41, 43, 51, 52, 53, 94, 130, 143, 144, 145, 147, 152, 158, 168, 170, 181, 220, 492, 493, 530, 533, 536, 540, 541, 542, 545, 546, 548, 549, 551, 554, 555, 556, 557, 558, 560, 561, 563], "averagin": 2, "pixel": [2, 4, 6, 7, 8, 13, 20, 23, 24, 26, 28, 38, 39, 40, 41, 43, 47, 49, 50, 53, 66, 79, 96, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 160, 164, 204, 205, 206, 207, 212, 213, 214, 215, 216, 217, 218, 522, 530, 531, 533, 534, 539, 540, 541, 542, 543, 545, 546, 548, 549, 551, 552, 554, 556, 559, 560], "final": [2, 17, 43, 105, 137, 140, 141, 142, 181, 556, 563], "store": [2, 8, 10, 17, 20, 29, 32, 36, 37, 41, 46, 51, 105, 127, 130, 160, 195, 206, 207, 218, 219, 486, 488, 489, 490, 491, 492, 494, 530, 533, 548, 551, 556, 557, 558, 563], "requir": [2, 10, 12, 20, 26, 27, 29, 36, 37, 41, 42, 44, 46, 50, 51, 52, 53, 127, 130, 137, 139, 140, 142, 143, 144, 145, 146, 160, 170, 179, 181, 194, 203, 204, 205, 209, 210, 212, 213, 214, 216, 217, 218, 220, 237, 241, 242, 245, 485, 496, 530, 533, 537, 541, 545, 546, 551, 555, 556, 558, 560, 561, 563], "numpi": [2, 3, 4, 23, 29, 30, 34, 36, 39, 41, 44, 45, 50, 51, 52, 81, 96, 101, 102, 130, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 241, 242, 501, 503, 519, 530, 531, 539, 541, 542, 543, 545, 549, 551, 554, 560, 561, 563], "librari": [2, 23, 25, 26, 41, 42, 47, 51, 218, 530, 533, 536, 555, 561], "manipul": [2, 23, 43, 127, 520, 560], "ha": [2, 10, 14, 20, 24, 25, 26, 27, 30, 34, 36, 37, 39, 42, 43, 44, 46, 51, 53, 81, 88, 90, 127, 130, 139, 140, 142, 144, 146, 147, 161, 162, 169, 170, 171, 181, 182, 193, 203, 204, 212, 213, 214, 215, 216, 217, 218, 220, 237, 244, 484, 485, 487, 519, 530, 532, 533, 535, 540, 541, 543, 544, 545, 550, 551, 554, 555, 556, 557, 558, 561, 563], "x": [2, 3, 8, 9, 20, 26, 27, 28, 39, 484, 530, 542, 554, 556, 561, 563], "voxel": 2, "downsampl": [2, 36], "8": [2, 8, 11, 20, 22, 23, 26, 27, 30, 34, 36, 37, 41, 45, 51, 80, 133, 172, 173, 204, 208, 209, 210, 214, 216, 217, 218, 220, 237, 239, 249, 258, 276, 336, 390, 397, 398, 420, 477, 484, 519, 532, 535, 539, 541, 543, 546, 549, 550, 551, 563], "inform": [2, 6, 7, 8, 9, 12, 13, 20, 24, 26, 27, 28, 31, 35, 38, 39, 41, 44, 46, 49, 51, 53, 79, 99, 127, 130, 131, 132, 134, 160, 163, 165, 181, 194, 220, 237, 241, 242, 493, 530, 531, 533, 536, 539, 543, 545, 546, 551, 552, 554, 555, 556, 561, 563], "set": [2, 6, 7, 12, 13, 18, 20, 25, 26, 27, 28, 32, 37, 40, 41, 42, 44, 45, 47, 50, 51, 53, 55, 68, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 90, 91, 92, 94, 95, 100, 101, 102, 108, 127, 128, 130, 144, 147, 157, 160, 161, 162, 168, 169, 170, 172, 173, 178, 181, 193, 219, 459, 485, 488, 492, 493, 496, 497, 522, 530, 531, 536, 539, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 556, 557, 559, 560, 561, 563], "after": [2, 8, 20, 26, 27, 28, 29, 30, 39, 46, 49, 139, 141, 144, 150, 151, 165, 171, 176, 177, 178, 181, 194, 219, 220, 241, 242, 530, 545, 548, 551, 554, 555, 556, 558, 560, 561], "file_meta": [2, 12, 20, 26, 27, 28, 41, 44, 45, 46, 130, 131, 132, 134, 181, 194, 530, 533, 545, 551, 558, 561], "0002": [2, 12, 20, 26, 27, 28, 29, 37, 41, 46, 51, 130, 134, 140, 142, 146, 181, 194, 214, 216, 217, 218, 397, 556, 560], "0000": [2, 8, 12, 20, 26, 27, 28, 41, 46, 194, 530, 551, 556], "file": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 21, 25, 27, 28, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 68, 71, 73, 84, 88, 93, 99, 103, 104, 105, 106, 108, 130, 131, 132, 134, 152, 153, 155, 156, 158, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 181, 183, 192, 193, 194, 196, 197, 198, 201, 219, 220, 241, 242, 522, 531, 532, 533, 535, 536, 539, 542, 543, 545, 546, 548, 549, 550, 551, 552, 554, 555, 556, 559, 561], "meta": [2, 8, 12, 20, 26, 27, 28, 41, 46, 53, 99, 130, 131, 132, 134, 160, 163, 181, 194, 241, 242, 530, 533, 536, 539, 545, 556], "group": [2, 12, 17, 20, 26, 27, 28, 37, 41, 43, 46, 50, 52, 117, 119, 127, 130, 131, 132, 133, 134, 160, 168, 170, 181, 194, 204, 219, 241, 242, 244, 245, 246, 493, 519, 530, 533, 536, 540, 545, 546, 553, 554, 556, 563], "length": [2, 8, 12, 20, 26, 27, 28, 41, 42, 46, 52, 55, 89, 119, 127, 129, 130, 137, 138, 139, 140, 142, 144, 146, 147, 148, 149, 157, 158, 174, 177, 194, 204, 214, 217, 218, 219, 484, 530, 535, 536, 540, 542, 546, 548, 549, 550, 551, 556], "ul": [2, 12, 16, 20, 26, 27, 28, 32, 41, 46, 107, 108, 109, 157, 194, 519, 556, 558], "190": [2, 20, 41], "0001": [2, 12, 20, 26, 27, 28, 41, 46, 130, 134, 140, 142, 146, 194, 556], "version": [2, 8, 12, 20, 24, 26, 27, 28, 37, 39, 41, 43, 46, 47, 55, 79, 81, 83, 84, 88, 95, 98, 99, 101, 102, 105, 127, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 172, 179, 180, 181, 194, 201, 208, 209, 210, 211, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 459, 484, 501, 503, 519, 554, 555, 556, 557, 562], "ob": [2, 12, 20, 26, 27, 28, 32, 41, 46, 139, 186, 194, 504, 530, 534, 549, 556, 557], "b": [2, 8, 12, 16, 20, 22, 26, 27, 28, 37, 41, 46, 50, 51, 127, 130, 154, 157, 181, 484, 493, 554, 555, 556], "x00": [2, 8, 12, 16, 20, 26, 27, 28, 41, 46, 50, 556], "x01": [2, 8, 12, 20, 26, 27, 28, 41, 46, 51, 556], "media": [2, 12, 20, 26, 27, 28, 41, 46, 68, 134, 192, 194, 556, 558], "storag": [2, 9, 12, 14, 20, 26, 27, 28, 41, 46, 51, 68, 134, 192, 194, 522, 530, 533, 534, 539, 549, 556, 558, 563], "sop": [2, 8, 9, 10, 12, 20, 26, 27, 28, 36, 41, 46, 51, 52, 68, 134, 163, 168, 169, 170, 171, 181, 194, 205, 218, 522, 530, 539, 540, 546, 549, 550, 556, 561], "class": [2, 8, 9, 12, 14, 20, 26, 27, 28, 29, 30, 39, 40, 41, 46, 51, 52, 55, 68, 69, 80, 127, 129, 130, 131, 132, 133, 134, 154, 156, 157, 160, 169, 170, 171, 181, 194, 203, 219, 220, 237, 243, 244, 397, 459, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 522, 526, 527, 530, 531, 532, 533, 536, 537, 538, 539, 540, 541, 543, 545, 546, 549, 550, 551, 555, 556, 558, 561, 562], "uid": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 35, 36, 37, 41, 44, 45, 46, 51, 53, 96, 130, 134, 137, 138, 169, 170, 181, 194, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 239, 240, 509, 518, 522, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 545, 546, 548, 549, 550, 551, 554, 556, 558, 560, 561], "ui": [2, 12, 16, 20, 26, 27, 28, 32, 41, 46, 190, 194, 509, 530, 533, 543, 556], "0003": [2, 12, 20, 26, 27, 28, 41, 46, 134, 194, 556], "instanc": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 36, 41, 43, 46, 48, 49, 51, 68, 77, 87, 130, 134, 154, 156, 157, 160, 161, 168, 169, 170, 171, 181, 194, 203, 205, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 243, 487, 488, 489, 526, 527, 530, 542, 548, 551, 556, 561, 562], "3": [2, 4, 5, 8, 10, 12, 16, 17, 19, 20, 22, 23, 26, 28, 30, 32, 34, 36, 37, 41, 42, 45, 46, 51, 52, 55, 98, 105, 107, 108, 109, 127, 129, 130, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 157, 168, 172, 179, 180, 181, 194, 204, 206, 207, 208, 209, 210, 211, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 250, 251, 261, 267, 286, 288, 290, 291, 299, 304, 307, 355, 380, 383, 402, 407, 408, 429, 441, 450, 459, 461, 466, 484, 522, 533, 534, 536, 537, 538, 539, 540, 541, 545, 546, 547, 550, 554, 555, 556, 557, 558, 561, 563], "6": [2, 8, 10, 20, 23, 26, 28, 32, 37, 45, 46, 51, 55, 77, 127, 129, 130, 139, 211, 214, 218, 285, 312, 323, 386, 402, 416, 435, 449, 457, 460, 467, 474, 493, 531, 536, 537, 539, 546, 547, 550, 551, 555, 556, 563], "4": [2, 8, 9, 10, 12, 16, 20, 21, 23, 24, 26, 28, 36, 37, 39, 41, 45, 46, 51, 129, 130, 137, 139, 143, 144, 147, 148, 149, 150, 176, 177, 181, 194, 206, 207, 208, 209, 210, 218, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 239, 244, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 406, 407, 408, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 515, 536, 541, 542, 545, 546, 548, 551, 554, 556, 558, 562, 563], "5962": [2, 8, 10, 20, 26, 28, 46, 556], "20040826185059": [2, 8, 20], "5457": [2, 8, 20], "0010": [2, 12, 16, 17, 20, 26, 27, 28, 29, 37, 39, 41, 46, 50, 51, 66, 96, 130, 134, 143, 144, 145, 160, 194, 204, 214, 215, 216, 217, 218, 519, 520, 525, 526, 527, 530, 539, 551, 555, 556, 558, 560], "transfer": [2, 12, 16, 20, 26, 27, 28, 29, 30, 34, 35, 37, 41, 46, 47, 96, 130, 131, 134, 137, 138, 143, 144, 161, 169, 170, 178, 181, 194, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 239, 240, 241, 242, 250, 344, 349, 352, 375, 405, 412, 459, 462, 485, 522, 530, 534, 539, 541, 542, 543, 545, 546, 550, 551, 556, 560, 561, 563], "syntax": [2, 12, 16, 20, 24, 26, 27, 28, 29, 30, 34, 35, 37, 41, 46, 47, 53, 96, 130, 131, 134, 137, 138, 143, 144, 161, 169, 170, 178, 181, 194, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 239, 240, 241, 242, 250, 344, 349, 352, 375, 405, 412, 459, 462, 485, 522, 530, 533, 534, 539, 541, 542, 543, 545, 546, 550, 551, 556, 560, 561, 563], "explicit": [2, 12, 20, 26, 28, 37, 44, 45, 46, 55, 88, 130, 131, 144, 157, 161, 181, 194, 214, 220, 221, 222, 223, 239, 250, 459, 485, 493, 530, 533, 534, 542, 543, 545, 548, 551, 556], "littl": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 37, 41, 44, 45, 46, 130, 131, 140, 141, 142, 144, 146, 148, 149, 150, 151, 157, 158, 161, 170, 176, 177, 178, 181, 194, 214, 217, 221, 223, 227, 237, 239, 459, 485, 498, 499, 500, 501, 502, 503, 507, 508, 509, 511, 512, 514, 515, 530, 533, 545, 551, 556, 561, 563], "endian": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 37, 41, 44, 45, 46, 130, 131, 140, 141, 142, 144, 146, 148, 149, 150, 151, 157, 158, 161, 170, 175, 176, 177, 178, 181, 187, 194, 214, 217, 218, 220, 221, 222, 223, 227, 237, 239, 250, 459, 485, 498, 499, 500, 501, 502, 503, 507, 508, 509, 511, 512, 514, 515, 530, 533, 541, 545, 550, 551, 556, 561, 563], "0012": [2, 12, 20, 26, 27, 28, 41, 46, 134, 194, 397, 556], "implement": [2, 12, 20, 26, 27, 28, 30, 34, 41, 46, 53, 134, 156, 157, 194, 397, 530, 546, 556], "0013": [2, 12, 20, 26, 27, 28, 41, 46, 134, 194, 556, 558], "sh": [2, 12, 16, 20, 26, 28, 32, 41, 46, 194, 516, 556], "dctool100": [2, 20, 26, 28, 46, 556], "0016": [2, 20, 26, 27, 28, 41, 46, 194, 556], "applic": [2, 20, 26, 27, 28, 32, 42, 46, 194, 556, 561], "entiti": [2, 20, 26, 28, 32, 46, 170, 194, 556], "ae": [2, 20, 26, 28, 32, 46, 194, 498, 514, 530, 539, 551, 556], "clunie1": [2, 20, 26, 28, 46, 556], "0008": [2, 12, 20, 26, 27, 28, 29, 37, 41, 46, 51, 75, 76, 77, 78, 130, 140, 142, 143, 145, 146, 160, 161, 205, 214, 216, 217, 218, 525, 526, 530, 531, 543, 556, 557, 558], "type": [2, 3, 8, 17, 18, 20, 25, 26, 27, 28, 29, 30, 34, 37, 38, 40, 41, 44, 46, 51, 68, 75, 76, 78, 81, 98, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 146, 147, 148, 150, 151, 152, 157, 160, 161, 162, 164, 165, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 193, 194, 196, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 242, 245, 459, 484, 485, 493, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 518, 519, 530, 533, 534, 536, 547, 548, 550, 551, 555, 556, 558, 561, 563], "c": [2, 10, 18, 20, 22, 24, 26, 27, 28, 32, 37, 41, 43, 46, 51, 52, 92, 130, 204, 206, 207, 208, 209, 210, 211, 214, 218, 514, 530, 537, 556, 557, 558, 560, 561, 563], "deriv": [2, 8, 20, 41, 48, 80, 96, 127, 132, 530, 536, 556], "secondari": [2, 8, 20], "other": [2, 8, 17, 20, 24, 30, 32, 37, 42, 44, 45, 46, 49, 50, 51, 53, 164, 181, 186, 187, 194, 218, 493, 551, 554, 556, 558, 561], "creation": [2, 8, 12, 20, 26, 27, 28, 41, 168, 530, 542, 556, 558], "date": [2, 8, 9, 12, 17, 20, 23, 26, 27, 28, 32, 41, 42, 46, 92, 170, 486, 522, 530, 539, 540, 542, 548, 556, 560], "da": [2, 12, 17, 20, 26, 27, 28, 32, 41, 46, 59, 64, 92, 130, 500, 514, 530, 539, 548, 556], "20040826": [2, 8, 20], "time": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 26, 27, 28, 32, 41, 42, 46, 53, 68, 90, 92, 108, 131, 142, 162, 175, 178, 218, 487, 494, 530, 533, 539, 548, 553, 554, 555, 556, 558, 563], "tm": [2, 12, 20, 26, 27, 28, 32, 41, 59, 64, 92, 508, 514, 530, 539, 548, 556], "185434": [2, 8, 20], "0014": [2, 20, 26, 27, 28, 556], "creator": [2, 8, 16, 20, 26, 28, 46, 109, 110, 118, 121, 122, 123, 130, 133, 194, 244, 530, 540, 545, 550, 556, 558], "0018": [2, 20, 26, 27, 28, 41, 43, 194, 205, 218], "0020": [2, 12, 17, 20, 26, 27, 28, 41, 556, 558], "studi": [2, 8, 9, 10, 20, 26, 27, 28, 41, 168, 170, 558], "0021": [2, 20], "seri": [2, 8, 10, 20, 39, 163, 168, 170, 530, 534, 555, 558, 561], "0022": [2, 20, 556], "acquisit": [2, 8, 20], "0030": [2, 17, 20, 41], "185059": [2, 8, 20], "0031": [2, 20], "0032": [2, 20], "0050": [2, 20, 26, 27, 41, 50], "access": [2, 8, 20, 23, 26, 27, 30, 40, 41, 46, 50, 55, 68, 81, 98, 130, 160, 530, 532, 539, 545, 546, 550, 551, 555, 557, 558, 559, 562], "number": [2, 8, 11, 18, 20, 24, 26, 27, 28, 29, 30, 34, 37, 39, 41, 43, 46, 50, 108, 110, 127, 129, 130, 133, 137, 139, 140, 142, 143, 144, 145, 146, 149, 151, 157, 159, 160, 161, 170, 171, 172, 175, 178, 193, 195, 196, 202, 204, 218, 219, 220, 237, 244, 245, 484, 488, 489, 496, 530, 531, 535, 538, 542, 548, 549, 551, 555, 556, 558, 560, 562, 563], "0060": [2, 20, 26, 27, 41], "modal": [2, 8, 9, 10, 20, 26, 28, 41, 47, 206, 207, 209, 210, 218, 530, 543, 558, 562], "0070": [2, 20, 26, 27], "manufactur": [2, 8, 20, 130], "lo": [2, 12, 16, 17, 18, 20, 26, 27, 32, 46, 130, 516, 556, 558], "toshiba_mec": [2, 8, 20], "0080": [2, 20, 26, 27, 28], "institut": [2, 8, 20], "toshiba": [2, 8, 20], "0090": [2, 20], "refer": [2, 8, 20, 26, 27, 37, 39, 41, 51, 92, 137, 139, 142, 143, 144, 145, 146, 147, 149, 150, 169, 204, 205, 206, 207, 208, 209, 210, 211, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 484, 530, 533, 554, 558, 561, 563], "physician": [2, 8, 20], "pn": [2, 12, 17, 20, 32, 41, 64, 127, 130, 493, 506, 530, 543, 548, 555, 556, 558], "0201": [2, 20, 530, 542], "timezon": [2, 8, 20], "offset": [2, 8, 20, 44, 46, 50, 127, 130, 133, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 157, 165, 166, 167, 170, 176, 177, 219, 220, 507, 515, 530, 543, 546, 549, 551, 558, 561], "utc": [2, 8, 20], "0400": [2, 8, 20], "1010": [2, 20, 52, 563], "station": [2, 8, 20], "000000000": [2, 8, 20], "1060": [2, 20], "1070": [2, 20], "oper": [2, 8, 20, 36, 41, 42, 46, 47, 84, 130, 157, 206, 207, 209, 210, 218, 219, 220, 241, 242, 530, 533, 541, 543, 546, 556, 560], "1090": [2, 20], "model": [2, 8, 20, 24, 26, 41, 53, 127, 130, 557, 563], "mrt50h1": [2, 8, 20], "patient": [2, 8, 9, 10, 12, 17, 20, 26, 27, 28, 43, 130, 168, 170, 493, 530, 532, 539, 549, 555, 556, 558], "compressedsampl": [2, 8, 9, 20, 26, 28, 68, 555, 556], "mr1": [2, 8, 20], "4mr1": [2, 8, 17, 20], "birth": [2, 8, 17, 20], "0040": [2, 20], "sex": [2, 8, 20], "1020": [2, 20], "size": [2, 8, 9, 20, 24, 26, 51, 53, 96, 127, 157, 161, 178, 212, 213, 530, 540, 546, 550, 560, 561], "1030": [2, 20, 530, 544], "80": [2, 8, 20, 39, 45, 52, 143, 218, 232, 239, 250, 347, 349, 396, 563], "contrast": [2, 8, 10, 20, 558], "bolu": [2, 8, 20], "agent": [2, 8, 20], "scan": [2, 8, 20, 26, 28, 168, 561], "se": [2, 8, 20], "variant": [2, 8, 20], "option": [2, 8, 17, 20, 25, 27, 28, 30, 31, 32, 34, 35, 42, 45, 49, 80, 81, 93, 103, 104, 105, 106, 108, 110, 127, 128, 130, 131, 134, 137, 139, 140, 141, 142, 143, 145, 146, 149, 150, 151, 154, 157, 158, 160, 161, 164, 170, 171, 172, 178, 181, 193, 204, 205, 208, 209, 210, 211, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 245, 484, 485, 493, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 518, 519, 522, 530, 532, 533, 539, 543, 546, 548, 551, 558, 563], "0023": [2, 12, 20, 26, 27], "3d": [2, 4, 8, 20, 218, 530, 546], "thick": [2, 8, 20], "repetit": [2, 8, 20, 53], "4000": [2, 8, 20], "0081": [2, 20], "echo": [2, 8, 20], "240": [2, 8, 20], "0083": [2, 20], "averag": [2, 8, 20], "0084": [2, 20, 26, 27, 28], "frequenc": [2, 8, 20, 52, 563], "63": [2, 8, 20, 556], "924339": [2, 8, 20], "0085": [2, 20], "nucleu": [2, 8, 20], "h": [2, 8, 12, 20, 22, 24, 26, 27, 28], "0086": [2, 20, 26, 27, 28], "0091": [2, 20], "train": [2, 8, 20], "1000": [2, 20, 52, 563], "devic": [2, 8, 20, 26, 27, 562], "serial": [2, 8, 20, 127, 130, 557], "0000200": [2, 8, 20], "softwar": [2, 8, 20, 42, 560], "v3": [2, 8, 20, 530, 546, 548, 549, 551, 563], "51": [2, 8, 20, 45, 143, 231, 239, 250, 346, 352], "p25": [2, 8, 20], "1314": [2, 20], "flip": [2, 8, 20], "angl": [2, 8, 20], "90": [2, 8, 20, 45, 52, 143, 218, 229, 239, 250, 278, 341, 344, 530, 543], "5100": [2, 20, 43], "posit": [2, 8, 20, 24, 26, 27, 28, 43, 140, 141, 142, 144, 146, 147, 150, 151, 153, 157, 165, 175, 176, 177, 194, 219, 220], "hf": [2, 8, 20, 43], "000d": [2, 20], "000e": [2, 20], "0011": [2, 20, 29, 37, 50, 130, 204, 214, 216, 217, 218], "83": [2, 8, 20], "9063": [2, 8, 20], "91": [2, 8, 20, 45, 143, 218, 228, 239, 250, 340, 344, 381, 530, 535, 543], "2000": [2, 8, 20, 29, 37, 44, 79, 143, 218, 220, 224, 225, 226, 228, 229, 241, 242, 344, 530, 543, 546, 560, 561], "6406": [2, 8, 20], "0037": [2, 20], "orient": [2, 8, 20], "0052": [2, 20], "frame": [2, 8, 20, 29, 30, 34, 37, 44, 51, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 204, 211, 216, 218, 219, 220, 237, 241, 242, 530, 539, 541, 543, 548, 551, 561], "later": [2, 8, 20, 30, 98, 488, 489, 530, 537, 554, 556], "1040": [2, 20], "indic": [2, 8, 20, 37, 46, 50, 96, 127, 130, 157, 220, 241, 530, 537, 554, 555, 556], "1041": [2, 20], "locat": [2, 4, 8, 9, 20, 93, 130, 133, 143, 169, 176, 555, 558], "comment": [2, 8, 20, 554], "lt": [2, 20, 32], "uncompress": [2, 8, 20, 29, 34, 36, 43, 44, 45, 51, 130, 218, 237, 462, 530, 541, 543, 548, 549, 561], "0028": [2, 20, 29, 37, 45, 51, 130, 140, 142, 143, 145, 146, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 530, 543, 545, 556], "sampl": [2, 8, 20, 29, 30, 34, 36, 37, 44, 51, 52, 130, 218, 219, 220, 237, 241, 242, 519, 561, 563], "per": [2, 8, 20, 29, 30, 34, 36, 37, 41, 44, 51, 55, 130, 132, 137, 138, 143, 173, 214, 218, 219, 237, 530, 536, 543, 546, 556, 561], "u": [2, 20, 26, 28, 32, 68, 109, 157, 179, 180, 519, 530, 532, 557, 558, 560, 561, 563], "0004": [2, 10, 20, 26, 27, 28, 29, 37, 51, 130, 168, 170, 211, 214, 216, 218, 530, 543, 558], "photometr": [2, 8, 20, 29, 36, 37, 44, 45, 51, 130, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 241, 242, 530, 543, 561], "interpret": [2, 8, 20, 29, 36, 37, 44, 45, 50, 51, 130, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 241, 242, 530, 543, 561, 563], "monochrome2": [2, 8, 20, 36, 37, 214, 216, 558], "space": [2, 8, 9, 20, 29, 30, 34, 36, 37, 39, 44, 47, 108, 211, 218, 237, 493, 498, 509, 511, 513, 530, 539, 551, 556, 558], "3125": [2, 8, 20], "0100": [2, 20, 29, 37, 45, 52, 130, 194, 204, 214, 216, 217, 218, 519, 563], "bit": [2, 8, 20, 29, 30, 32, 34, 36, 37, 39, 45, 49, 50, 51, 130, 133, 147, 206, 207, 214, 217, 218, 219, 220, 237, 239, 241, 242, 530, 540, 541, 543, 548, 549, 550, 551, 554, 555, 561, 563], "alloc": [2, 8, 20, 29, 36, 37, 39, 45, 130, 214, 217, 218, 219, 220, 241, 242, 530, 550, 551, 563], "16": [2, 8, 20, 26, 28, 30, 34, 36, 37, 45, 55, 127, 130, 133, 214, 216, 217, 218, 424, 496, 497, 519, 530, 543, 551, 561, 563], "0101": [2, 20, 29, 37, 130, 206, 207, 214, 216, 218], "0102": [2, 20, 37, 194, 204], "high": [2, 8, 20, 36, 37, 39, 110, 224, 225, 226, 530, 543], "15": [2, 8, 20, 436, 552, 556, 563], "0103": [2, 20, 29, 37, 130, 206, 207, 214, 216, 217, 218], "represent": [2, 8, 20, 26, 28, 29, 32, 36, 37, 41, 60, 63, 74, 108, 110, 112, 122, 127, 130, 133, 139, 169, 170, 171, 206, 207, 218, 219, 220, 241, 242, 488, 489, 493, 495, 496, 513, 516, 522, 530, 546, 548, 551, 556, 557, 563], "0106": [2, 20], "smallest": [2, 8, 20], "ss": [2, 4, 20, 26, 28, 32, 179, 180, 519, 530, 532, 563], "0107": [2, 20], "largest": [2, 8, 20], "1050": [2, 20, 209, 210, 218, 556], "center": [2, 8, 20, 209, 210, 218, 556], "600": [2, 8, 20], "1051": [2, 20, 209, 210, 218, 530, 548, 556], "width": [2, 8, 20, 127, 209, 210, 218, 556], "1600": [2, 8, 20], "7fe0": [2, 20, 26, 28, 39, 41, 51, 66, 96, 130, 140, 142, 143, 144, 145, 146, 160, 214, 215, 216, 217, 218, 520, 525, 526, 527, 530, 539, 543, 551, 556], "ow": [2, 20, 26, 28, 32, 50, 52, 181, 187, 220, 505, 530, 534, 545, 550, 556], "arrai": [2, 4, 14, 20, 26, 28, 29, 39, 41, 50, 51, 52, 53, 81, 96, 101, 127, 130, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 241, 242, 487, 530, 531, 541, 542, 545, 546, 551, 556], "128": [2, 9, 12, 20, 26, 28, 131, 153, 165, 175, 176, 177, 181, 194, 359, 404, 556, 561], "element": [2, 10, 12, 16, 17, 18, 20, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 40, 43, 47, 49, 50, 51, 52, 53, 55, 66, 76, 77, 79, 81, 83, 84, 92, 93, 96, 99, 100, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 138, 143, 144, 145, 158, 159, 160, 161, 162, 170, 177, 178, 179, 180, 181, 194, 196, 197, 204, 212, 214, 216, 217, 218, 219, 220, 237, 241, 242, 244, 245, 486, 488, 489, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 519, 520, 522, 525, 530, 531, 532, 533, 534, 535, 536, 539, 540, 541, 542, 543, 545, 546, 548, 549, 550, 551, 555, 558, 561, 563], "fffc": [2, 20, 26, 28, 556], "trail": [2, 8, 20, 26, 28, 139, 204, 218, 219, 498, 509, 511, 513, 530, 539, 556], "pad": [2, 3, 8, 20, 26, 28, 137, 139, 144, 199, 204, 218, 219, 530, 540, 542, 543, 546, 548, 549, 556], "126": [2, 20, 26, 28, 556, 563], "author": [2, 8, 9, 11, 12, 16, 17, 20, 22], "guillaum": [2, 8, 9, 11, 12, 17, 20, 22], "lemaitr": [2, 8, 9, 11, 12, 17, 20, 22], "g": [2, 8, 9, 11, 12, 17, 20, 22, 24, 26, 27, 30, 34, 36, 37, 39, 41, 42, 43, 50, 51, 55, 84, 127, 130, 133, 160, 203, 204, 218, 220, 237, 243, 488, 493, 518, 530, 533, 540, 542, 546, 551, 556], "lemaitre58": [2, 8, 9, 11, 12, 17, 20, 22], "gmail": [2, 8, 9, 11, 12, 17, 20, 22], "com": [2, 8, 9, 11, 12, 17, 20, 22, 23, 554, 555, 560], "licens": [2, 8, 9, 11, 12, 16, 17, 20, 22, 530, 532, 533, 555], "mit": [2, 8, 9, 11, 12, 16, 17, 20, 22, 43, 530, 532, 533], "fixm": 2, "test": [2, 12, 16, 24, 26, 27, 28, 41, 43, 88, 107, 108, 109, 130, 497, 530, 531, 537, 539, 543, 546, 548, 550], "get": [2, 9, 10, 14, 26, 27, 32, 39, 41, 42, 43, 45, 46, 49, 50, 51, 52, 92, 96, 130, 157, 168, 218, 522, 530, 533, 534, 542, 546, 548, 554, 555, 559, 560, 561], "arr": [2, 3, 39, 41, 44, 50, 51, 52, 130, 204, 205, 206, 207, 208, 209, 210, 211, 218, 219, 241, 242, 561, 563], "pixel_arrai": [2, 4, 9, 29, 36, 39, 41, 44, 45, 47, 49, 130, 530, 532, 543, 551], "shape": [2, 4, 50, 51, 52, 130, 204, 211, 212, 213, 216, 218, 220, 237, 241, 242, 519, 561, 563], "arr_downsampl": 2, "copi": [2, 10, 45, 53, 130, 170, 530, 536, 546, 549, 554, 555, 558, 560], "back": [2, 14, 16, 20, 36, 39, 43, 50, 51, 53, 554, 555, 556, 558], "origin": [2, 10, 20, 24, 26, 28, 29, 37, 44, 45, 46, 50, 53, 88, 130, 162, 170, 214, 219, 220, 484, 488, 489, 491, 492, 493, 530, 551, 554, 555, 556, 561, 563], "pixeldata": [2, 29, 30, 36, 41, 44, 51, 53, 135, 137, 138, 218, 219, 530, 542, 543, 561], "tobyt": [2, 51, 563], "updat": [2, 10, 18, 20, 26, 27, 36, 50, 107, 108, 109, 110, 130, 168, 170, 179, 180, 194, 241, 242, 530, 532, 533, 535, 536, 538, 539, 540, 541, 543, 545, 546, 548, 549, 550, 551, 554, 555, 558, 560, 561], "regard": 2, "given": [2, 11, 24, 26, 27, 28, 29, 32, 45, 51, 52, 76, 78, 127, 128, 130, 133, 134, 140, 142, 157, 160, 162, 168, 170, 204, 214, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 244, 488, 489, 493, 512, 519, 530, 545, 548, 556, 558, 560, 561, 563], "n": [2, 8, 11, 14, 20, 26, 28, 194, 204, 206, 207, 208, 209, 210, 214, 216, 217, 218, 519, 558], "total": [2, 3, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 137, 138, 204, 218, 219, 552, 561], "run": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 41, 42, 43, 53, 108, 130, 493, 530, 533, 536, 546, 551, 555, 556, 559, 560], "script": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 53, 530, 540, 551, 553], "minut": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20], "005": [2, 5, 8, 13, 552], "second": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 37, 42, 48, 493, 563], "plot_downsize_imag": [2, 5, 552], "matplotlib": [3, 4, 9, 47, 563], "np": [3, 4, 204, 205, 206, 207, 208, 209, 210, 214, 216, 217, 218, 219, 220, 241, 519, 561, 563], "pyplot": [3, 4, 9, 49, 563], "plt": [3, 4, 9, 49, 563], "generate_multiplex": [3, 130, 519, 530, 546, 563], "first": [3, 20, 26, 28, 36, 37, 39, 41, 42, 43, 46, 48, 51, 53, 75, 76, 78, 96, 105, 130, 140, 141, 142, 143, 144, 146, 147, 150, 151, 165, 170, 178, 218, 220, 235, 241, 242, 493, 530, 541, 542, 543, 553, 554, 555, 558, 563], "channel": [3, 20, 37, 51, 52, 130, 214, 519, 563], "multiplex": [3, 52, 130, 519, 530, 546, 563], "ch_idx": 3, "we": [3, 10, 16, 17, 18, 24, 26, 28, 36, 43, 45, 92, 130, 553, 554, 555, 556, 558, 560, 561, 563], "could": [3, 24, 25, 26, 41, 51, 53, 75, 76, 78, 203, 212, 530, 533, 534, 548, 554, 555], "also": [3, 17, 26, 27, 28, 29, 30, 32, 34, 37, 39, 41, 43, 46, 48, 49, 51, 53, 77, 117, 130, 165, 194, 220, 237, 241, 242, 459, 493, 530, 531, 532, 533, 534, 537, 538, 541, 542, 546, 551, 554, 555, 556, 557, 558, 560, 561, 562, 563], "waveform_arrai": [3, 47, 130, 530, 546, 563], "fig": [3, 563], "ax": 3, "subplot": [3, 4, 563], "waveformsequ": [3, 52, 563], "as_raw": [3, 52, 519, 530, 550, 563], "fals": [3, 4, 10, 14, 29, 30, 32, 34, 39, 42, 44, 46, 55, 68, 79, 80, 81, 84, 87, 89, 92, 93, 94, 95, 96, 100, 101, 102, 105, 114, 115, 124, 125, 127, 130, 131, 134, 137, 138, 157, 158, 160, 164, 165, 170, 172, 173, 176, 177, 178, 181, 194, 201, 211, 214, 216, 218, 219, 220, 237, 241, 242, 459, 485, 487, 488, 489, 497, 498, 499, 500, 501, 502, 503, 507, 508, 509, 511, 512, 514, 515, 519, 530, 536, 540, 545, 548, 550, 556, 558, 563], "mplx": 3, "zip": [3, 6, 530, 542, 563], "nr_channel": 3, "numberofwaveformchannel": [3, 52, 519, 563], "nr_sampl": 3, "numberofwaveformsampl": [3, 519, 563], "sampling_fq": 3, "samplingfrequ": [3, 52, 563], "hz": [3, 52, 563], "mplx_label": 3, "multiplexgrouplabel": [3, 563], "ch_item": 3, "channeldefinitionsequ": [3, 563], "arang": [3, 563], "x_unit": 3, "channelsensitivityunitssequ": [3, 563], "1c": [3, 181, 194, 214, 216, 217, 218, 563], "so": [3, 16, 26, 27, 30, 32, 34, 37, 39, 41, 42, 50, 51, 53, 92, 130, 170, 172, 181, 201, 485, 487, 530, 531, 534, 551, 554, 556, 557, 558, 561, 563], "check": [3, 12, 41, 42, 114, 115, 117, 118, 120, 124, 125, 130, 132, 134, 173, 181, 194, 237, 487, 497, 530, 536, 539, 541, 542, 545, 546, 548, 551, 554, 555, 560, 563], "y_unit": 3, "codemean": [3, 563], "els": [3, 4, 8, 36, 130, 161, 175, 178, 487, 556], "unitless": [3, 51, 519, 563], "descript": [3, 16, 20, 25, 26, 27, 29, 33, 37, 40, 41, 43, 46, 107, 108, 109, 110, 113, 123, 127, 133, 530, 531, 532, 545, 549, 551], "ch_sourc": 3, "channelsourcesequ": [3, 563], "set_titl": 3, "set_xlabel": 3, "set_ylabel": [3, 563], "tight_layout": 3, "193": [3, 5, 552], "plot_waveform": [3, 5, 552], "multipl": [4, 30, 32, 34, 37, 41, 46, 50, 51, 77, 108, 110, 111, 121, 127, 130, 140, 142, 143, 145, 146, 147, 208, 209, 210, 211, 218, 220, 237, 243, 493, 512, 530, 543, 549, 551, 556], "sort": [4, 10, 130, 558], "them": [4, 8, 24, 26, 27, 28, 30, 34, 39, 40, 41, 45, 46, 50, 53, 130, 157, 501, 503, 530, 538, 542, 546, 555, 556, 558], "reslic": [4, 5, 552], "differ": [4, 6, 17, 21, 25, 26, 28, 32, 36, 40, 46, 51, 130, 530, 533, 545, 552, 554, 555, 556, 557, 558], "plane": [4, 20, 30, 37, 51, 204, 218, 219, 220, 241, 242], "glob": [4, 10, 103, 104, 106, 558], "fname": 4, "append": [4, 11, 18, 20, 41, 139, 484, 556, 563], "count": 4, "skip": [4, 18, 530, 549, 554], "sliceloc": [4, 9, 26, 28], "eg": 4, "scout": [4, 20], "view": [4, 10, 20, 29, 36, 41, 43, 47, 51, 208, 209, 210, 218, 219, 530, 531, 533, 551, 555, 558, 563], "skipcount": 4, "hasattr": 4, "ensur": [4, 32, 36, 42, 44, 46, 95, 130, 134, 160, 170, 181, 203, 218, 488, 489, 530, 536, 539, 548, 550, 551, 554], "thei": [4, 29, 39, 41, 46, 50, 51, 75, 87, 96, 130, 134, 181, 194, 530, 548, 551, 554, 555, 556, 558, 560, 561], "ar": [4, 10, 18, 24, 26, 27, 28, 29, 36, 37, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 68, 75, 76, 80, 81, 84, 93, 96, 100, 101, 107, 109, 110, 127, 130, 132, 133, 134, 137, 138, 140, 142, 143, 144, 145, 146, 147, 157, 160, 165, 168, 170, 173, 179, 180, 181, 194, 203, 205, 206, 207, 209, 210, 212, 213, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 244, 493, 496, 511, 514, 516, 518, 530, 536, 541, 542, 543, 545, 546, 548, 549, 551, 553, 554, 555, 556, 558, 560, 561, 562, 563], "correct": [4, 16, 20, 24, 26, 36, 37, 42, 44, 45, 50, 52, 75, 79, 96, 130, 160, 175, 179, 180, 203, 216, 218, 530, 540, 541, 543, 548, 549, 551, 554, 556, 561, 563], "order": [4, 29, 30, 33, 34, 37, 51, 96, 130, 131, 133, 143, 171, 175, 179, 180, 181, 193, 217, 218, 235, 237, 459, 530, 531, 538, 541, 543, 554, 563], "kei": [4, 33, 34, 41, 84, 127, 130, 133, 168, 171, 204, 237, 244, 530, 546, 554], "lambda": 4, "aspect": 4, "assum": [4, 25, 26, 44, 51, 88, 144, 530, 539, 558, 561, 563], "all": [4, 6, 8, 10, 12, 17, 20, 24, 26, 27, 28, 37, 40, 41, 42, 44, 47, 53, 68, 96, 109, 127, 130, 132, 135, 136, 137, 139, 144, 147, 157, 160, 170, 172, 179, 180, 181, 203, 220, 237, 241, 242, 250, 526, 527, 530, 531, 532, 533, 536, 538, 541, 543, 546, 548, 549, 550, 551, 552, 554, 555, 556, 560, 561], "same": [4, 30, 34, 41, 42, 43, 50, 108, 130, 156, 157, 170, 203, 220, 488, 489, 530, 534, 536, 555, 556, 558], "p": [4, 10, 22, 24, 26, 55, 493, 530, 536, 558], "pixelspac": [4, 9], "slicethick": 4, "ax_aspect": 4, "sag_aspect": 4, "cor_aspect": 4, "img_shap": 4, "list": [4, 6, 7, 8, 10, 13, 20, 26, 28, 30, 32, 34, 36, 37, 41, 43, 44, 75, 76, 77, 78, 96, 103, 104, 106, 127, 128, 130, 135, 137, 138, 140, 142, 146, 147, 150, 151, 158, 160, 161, 164, 166, 170, 171, 179, 180, 188, 192, 193, 197, 198, 200, 203, 204, 219, 220, 237, 241, 242, 243, 484, 493, 500, 501, 502, 503, 506, 507, 508, 509, 512, 513, 516, 517, 522, 530, 533, 536, 537, 543, 546, 548, 549, 551, 552, 555, 556, 558, 560, 561], "img3d": 4, "zero": [4, 20, 32, 51, 130, 178, 219, 530, 550, 556, 561], "fill": [4, 554, 555], "img2d": 4, "orthogon": 4, "a1": 4, "imshow": [4, 9, 49], "set_aspect": 4, "a2": 4, "a3": 4, "t": [4, 8, 10, 18, 20, 26, 27, 28, 29, 32, 37, 39, 41, 46, 50, 53, 83, 130, 140, 142, 143, 146, 161, 170, 181, 203, 204, 211, 214, 217, 218, 220, 237, 241, 242, 459, 484, 530, 542, 545, 546, 551, 554, 555, 556, 557, 558, 561], "00": [5, 13, 19, 21, 147, 552], "199": 5, "execut": [5, 13, 19, 21, 493, 552], "auto_exampl": [5, 13, 19, 21], "image_process": [5, 552], "mem": [5, 13, 19, 21, 552], "mb": [5, 13, 19, 21, 160, 519, 552], "imag": [5, 8, 9, 10, 12, 17, 20, 26, 28, 30, 34, 43, 44, 46, 47, 50, 51, 68, 130, 138, 139, 143, 144, 147, 168, 170, 205, 211, 212, 214, 215, 216, 217, 218, 220, 224, 225, 226, 228, 229, 232, 233, 241, 242, 530, 533, 540, 542, 546, 548, 551, 552, 556, 558, 560, 561], "000": [5, 21, 552, 563], "somewher": [6, 43], "analys": [6, 21, 552], "between": [6, 21, 36, 39, 50, 51, 108, 204, 530, 551, 552, 554, 555, 556], "displai": [6, 20, 21, 26, 27, 28, 36, 41, 47, 49, 99, 127, 130, 530, 531, 537, 542, 548, 552, 554, 563], "unicod": [6, 21, 32, 76, 78, 493, 530, 531, 533, 534, 550, 552], "person": [6, 17, 21, 32, 39, 493, 530, 541, 548, 552, 562], "hierarch": [6, 21, 143, 218, 234, 235, 530, 543, 552], "tree": [6, 21, 41, 171, 530, 537, 552, 556], "work": [6, 15, 19, 21, 25, 26, 27, 30, 34, 39, 41, 42, 43, 45, 46, 47, 53, 170, 530, 531, 533, 534, 536, 537, 538, 540, 542, 546, 551, 552, 554, 555, 556, 560, 562, 563], "memori": [6, 16, 21, 30, 160, 161, 162, 178, 211, 214, 218, 241, 242, 530, 533, 541, 542, 543, 551, 552, 558], "base": [6, 21, 36, 37, 43, 69, 80, 130, 486, 490, 494, 522, 526, 527, 530, 533, 539, 543, 546, 552, 554, 555, 558, 561, 563], "rtplan": [6, 7, 13, 24, 26, 27, 28, 41, 43, 68, 160, 552], "format": [6, 7, 12, 13, 20, 24, 26, 27, 28, 32, 34, 41, 42, 43, 45, 127, 130, 137, 138, 139, 144, 160, 181, 196, 214, 217, 488, 489, 493, 512, 530, 531, 532, 533, 539, 542, 548, 549, 551, 552, 556, 558, 560], "write": [6, 7, 10, 13, 14, 16, 17, 24, 26, 38, 40, 42, 46, 47, 55, 69, 93, 130, 131, 154, 156, 157, 170, 181, 183, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 488, 489, 522, 530, 532, 534, 539, 540, 542, 544, 545, 546, 548, 549, 551, 552, 555, 557, 558, 559], "modifi": [6, 15, 30, 40, 43, 50, 51, 53, 105, 130, 170, 530, 543, 546, 551, 559], "anonym": [6, 15, 19, 41, 46, 530, 531, 532, 542, 552], "privat": [6, 15, 17, 19, 20, 24, 26, 27, 28, 37, 41, 47, 53, 107, 108, 109, 110, 117, 118, 121, 122, 123, 125, 127, 128, 130, 133, 168, 169, 170, 194, 244, 405, 459, 485, 522, 530, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 545, 546, 548, 549, 550, 551, 552, 556, 558], "dictionari": [6, 15, 19, 41, 47, 83, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 161, 219, 459, 522, 530, 532, 533, 535, 538, 539, 540, 541, 542, 543, 546, 548, 549, 551, 552, 557, 562], "auto_examples_python": 6, "auto_examples_jupyt": 6, "your": [8, 10, 14, 23, 25, 26, 27, 30, 34, 36, 37, 41, 43, 46, 47, 53, 95, 137, 138, 170, 553, 556, 557, 558, 560, 563], "own": [8, 24, 25, 26, 27, 41, 43, 46, 53, 130, 170, 181, 530, 540, 550, 556, 558, 561, 563], "840": [8, 9, 12, 24, 26, 44, 45, 51, 130, 143, 214, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 530, 540, 541, 543, 545, 546, 551, 554, 556], "10008": [8, 9, 12, 24, 26, 44, 45, 51, 130, 143, 214, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 530, 540, 541, 543, 545, 546, 551, 554, 556], "5": [8, 9, 10, 12, 13, 16, 20, 22, 23, 24, 26, 32, 36, 37, 41, 44, 45, 51, 52, 55, 127, 129, 130, 133, 137, 139, 142, 143, 144, 145, 146, 147, 149, 150, 198, 204, 208, 209, 210, 211, 217, 218, 236, 238, 239, 240, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 330, 331, 332, 333, 334, 336, 337, 338, 339, 355, 356, 357, 358, 359, 360, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 493, 545, 546, 554, 555, 556, 558, 561, 563], "don": [8, 10, 18, 26, 27, 28, 41, 46, 53, 554, 555, 557, 558, 561], "xfe": 8, "x04": [8, 51], "myprint": [8, 530, 531], "indent": [8, 130, 171, 556], "through": [8, 17, 30, 39, 41, 43, 46, 51, 130, 163, 177, 179, 180, 220, 241, 530, 531, 532, 551, 554, 555, 556, 560, 562], "custom": [8, 26, 28, 34, 168, 170, 530, 531, 532, 539, 542, 546], "_pretty_str": [8, 556], "dont_print": 8, "indent_str": 8, "next_indent_str": 8, "sequence_item": 8, "repr_valu": 8, "repr": [8, 41, 99, 530, 545], "50": [8, 45, 51, 52, 143, 218, 230, 239, 250, 345, 352, 379, 459], "plot_printing_dataset": [8, 13, 552], "open": [9, 23, 25, 26, 155, 161, 241, 242, 530, 533, 554, 555, 556], "some": [9, 14, 16, 17, 26, 28, 39, 41, 42, 46, 49, 50, 51, 52, 53, 55, 75, 88, 98, 130, 131, 164, 181, 237, 488, 489, 496, 530, 531, 532, 534, 536, 539, 540, 550, 555, 556, 557, 558, 560, 562], "project": [9, 10, 20, 96, 553, 554, 555, 560], "src": [9, 10, 29, 30, 33, 34, 96, 218, 219, 220, 237, 241, 242, 558, 561], "test_fil": [9, 10, 24, 26, 41, 43, 555, 556, 558], "ct_small": [9, 26, 28, 68, 160, 555, 556], "dcm": [9, 11, 12, 24, 26, 27, 28, 39, 41, 43, 44, 50, 51, 68, 130, 160, 168, 241, 242, 530, 546, 555, 556, 561, 562, 563], "ct1": [9, 20, 26, 28, 68, 555, 556], "1ct1": [9, 20, 26, 28, 558], "20040119": [9, 20, 26, 28, 556], "661468": [9, 20], "77": [9, 20, 24, 26, 27, 28, 41, 276, 277, 289, 390, 391, 392, 393, 395, 450, 463, 464, 465, 466, 467, 469, 470, 471, 474, 475], "2040634155": [9, 20, 26, 28], "get_testdata_fil": [9, 10, 11, 41, 43, 51, 522, 530, 546, 548, 549, 551, 555, 556, 558], "normal": [9, 16, 20, 25, 26, 27, 41, 68, 530, 551], "mode": [9, 20, 26, 28, 82, 85, 86, 131, 157, 241, 242, 530, 543, 554, 560], "sopclassuid": [9, 24, 26, 28, 169, 556, 563], "pat_nam": 9, "patientnam": [9, 10, 12, 14, 26, 28, 41, 43, 68, 83, 84, 127, 130, 160, 168, 170, 245, 530, 542, 555, 556, 558], "family_comma_given": [9, 493], "patientid": [9, 10, 12, 14, 17, 26, 28, 41, 130, 168, 170, 556, 558], "studyd": [9, 10, 24, 26, 27, 28, 558], "sure": [9, 45, 53, 554, 556, 560], "exist": [9, 16, 30, 34, 36, 39, 41, 42, 53, 108, 130, 162, 170, 181, 194, 530, 550, 551, 553, 554, 555, 561], "want": [9, 10, 14, 24, 25, 26, 42, 53, 172, 554, 555, 556, 557, 558, 560], "miss": [9, 34, 105, 130, 134, 160, 165, 179, 181, 194, 204, 205, 214, 216, 217, 218, 220, 237, 530, 538, 539, 542, 543, 549, 551, 554, 556, 558, 560], "cmap": [9, 49], "cm": [9, 11, 49], "grai": 9, "085": [9, 13, 552], "plot_read_dicom": [9, 13, 552], "interact": [10, 41, 43, 46, 130, 558], "directori": [10, 43, 168, 169, 170, 171, 173, 530, 531, 549, 551, 554, 555, 558, 560], "dicomdirtest": [10, 558], "pydicom_test": [10, 558], "276": [10, 558], "7230010": [10, 558], "31906": [10, 558], "1359940846": [10, 558], "78187": [10, 558], "descriptor": [10, 46, 170, 205, 206, 207, 208, 209, 218, 530, 543, 545, 558], "charact": [10, 20, 26, 28, 32, 39, 42, 46, 55, 75, 76, 77, 78, 88, 127, 128, 130, 133, 160, 161, 170, 171, 172, 173, 193, 196, 197, 198, 484, 493, 496, 497, 501, 503, 506, 507, 513, 516, 517, 522, 530, 531, 532, 539, 541, 542, 545, 546, 548, 549, 550, 551, 554, 556, 557, 558], "chang": [10, 12, 25, 26, 27, 30, 36, 39, 42, 43, 44, 45, 50, 51, 55, 81, 95, 105, 127, 130, 147, 157, 170, 172, 179, 180, 181, 209, 211, 212, 213, 214, 215, 216, 217, 218, 484, 501, 503, 545, 553, 556, 557, 559, 560, 561, 562], "stage": [10, 169, 170, 554, 555], "dicomdir": [10, 40, 68, 168, 170, 171, 530, 538, 542, 543, 546, 549, 550, 551, 559], "structur": [10, 26, 27, 41, 43, 68, 168, 170, 171, 530, 543, 550, 551, 556, 558, 559], "manag": [10, 30, 34, 46, 157, 160, 170, 219, 530, 539, 546, 556, 558], "77654033": [10, 558], "doe": [10, 12, 46, 50, 51, 53, 88, 96, 108, 130, 153, 162, 181, 187, 212, 496, 530, 546, 558], "archibald": [10, 558], "20010101": [10, 130, 558], "studytim": [10, 24, 26, 28, 558], "000000": [10, 20, 558], "studydescript": [10, 26, 28, 170, 558], "xr": [10, 558], "spine": [10, 558], "comp": [10, 20, 26, 28, 558], "min": [10, 206, 207, 218, 558], "cr": [10, 218, 558], "seriesnumb": [10, 41, 558], "19950903": [10, 558], "173032": [10, 558], "head": [10, 39, 43, 558], "brain": [10, 558], "wo": [10, 558], "98890234": [10, 558], "peter": [10, 558], "20030505": [10, 558], "050743": [10, 558], "carotid": [10, 558], "025109": [10, 558], "045357": [10, 558], "mra": [10, 558], "700": [10, 530, 541, 558], "7": [10, 20, 23, 24, 26, 27, 37, 41, 51, 129, 133, 137, 149, 170, 194, 198, 211, 214, 218, 250, 272, 289, 298, 299, 382, 383, 384, 385, 389, 391, 413, 431, 438, 439, 440, 441, 442, 446, 476, 537, 541, 550, 551, 555, 558, 563], "found": [10, 43, 46, 50, 51, 52, 105, 130, 160, 165, 170, 175, 178, 220, 237, 556, 558, 561], "seriesinstanceuid": 10, "1196533885": 10, "18148": 10, "118": 10, "fileset": [10, 522, 530, 546, 548, 549, 551], "1479": 10, "userwarn": [10, 83], "record": [10, 20, 168, 169, 170, 171, 530, 543, 549, 558], "queri": [10, 92, 170, 558], "consid": [10, 25, 26, 53, 130, 218, 554, 555, 557], "expand": [10, 26, 28, 218, 530, 549, 555, 558], "search": [10, 105, 143, 170, 175, 176, 177, 530, 548, 551, 556, 558], "correspond": [10, 17, 29, 30, 34, 36, 39, 41, 50, 51, 52, 75, 105, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 130, 133, 137, 138, 162, 169, 170, 171, 181, 204, 205, 218, 219, 220, 237, 239, 240, 245, 459, 485, 519, 530, 548, 551, 554, 555, 558, 561, 563], "warn_and_log": 10, "photometricinterpret": [10, 36, 44, 214, 216, 218, 558, 561], "monochrome1": [10, 36, 37, 214, 216, 558], "without": [10, 41, 45, 46, 52, 105, 130, 153, 163, 176, 218, 498, 509, 511, 512, 530, 532, 540, 542, 546, 549, 550, 551, 556, 558, 560], "still": [10, 44, 46, 530, 536, 537, 539, 540, 541, 543, 554, 556, 557, 558, 561], "tmp": [10, 12, 558], "tmp0y05n2m": 10, "follow": [10, 25, 26, 27, 28, 29, 30, 34, 37, 39, 41, 42, 44, 45, 51, 68, 127, 130, 134, 143, 144, 147, 170, 178, 181, 194, 220, 237, 241, 242, 493, 530, 543, 546, 548, 551, 554, 555, 556, 558, 562, 563], "pt000000": [10, 558], "st000000": [10, 558], "se000000": [10, 558], "im000000": [10, 558], "se000001": [10, 558], "se000002": [10, 558], "st000001": [10, 558], "im000001": [10, 558], "im000002": [10, 558], "im000003": [10, 558], "pt000001": [10, 558], "im000004": 10, "st000002": 10, "st000003": 10, "im000005": 10, "im000006": 10, "pt000002": [10, 558], "pt000003": 10, "tempfil": [10, 12, 17, 558], "temporarydirectori": [10, 558], "generate_uid": [10, 36, 170, 530, 542, 551], "A": [10, 20, 28, 30, 34, 36, 37, 39, 40, 41, 43, 44, 53, 75, 76, 88, 103, 104, 106, 130, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 156, 157, 158, 160, 161, 168, 170, 171, 172, 173, 179, 180, 181, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 484, 485, 493, 506, 513, 516, 517, 530, 540, 548, 551, 554, 556, 558, 561], "its": [10, 24, 25, 26, 27, 30, 32, 34, 36, 37, 41, 42, 81, 127, 130, 147, 170, 171, 178, 203, 204, 212, 213, 214, 215, 216, 217, 519, 530, 541, 546, 551, 556, 558], "itself": [10, 36, 39, 41, 46, 105, 156, 157, 179, 180, 530, 546, 554, 555, 558], "summari": [10, 25, 26, 554], "content": [10, 12, 14, 20, 41, 55, 130, 140, 143, 204, 214, 215, 216, 217, 218, 555, 556, 558, 561], "seen": [10, 25, 26, 88, 555, 563], "when": [10, 16, 23, 24, 25, 26, 27, 29, 30, 32, 34, 36, 37, 39, 41, 44, 46, 48, 50, 51, 53, 79, 83, 84, 88, 92, 93, 96, 130, 137, 138, 140, 142, 143, 145, 146, 147, 153, 157, 164, 170, 172, 179, 180, 181, 206, 207, 208, 209, 210, 217, 218, 220, 237, 241, 242, 245, 247, 484, 485, 493, 530, 532, 533, 534, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 554, 555, 556, 558, 560, 561, 563], "iter": [10, 17, 41, 130, 139, 140, 141, 142, 143, 144, 145, 149, 158, 171, 172, 179, 182, 203, 216, 219, 220, 237, 241, 243, 247, 530, 532, 540, 551, 558], "over": [10, 20, 26, 27, 48, 50, 530, 551, 556, 558], "yield": [10, 41, 130, 139, 140, 141, 142, 143, 144, 145, 149, 158, 171, 172, 216, 219, 220, 237, 241, 519, 530, 551, 556, 558, 561, 563], "fileinst": [10, 170, 171, 522, 530, 551, 558], "do": [10, 14, 25, 26, 30, 34, 40, 42, 45, 46, 48, 49, 50, 51, 53, 92, 130, 170, 181, 187, 530, 536, 542, 548, 551, 554, 555, 556, 558, 561, 562, 563], "someth": [10, 14, 23, 25, 26, 30, 39, 50, 130, 530, 551, 554], "patient_id": 10, "find_valu": [10, 170, 558], "return": [10, 11, 14, 29, 30, 34, 37, 39, 41, 43, 46, 50, 51, 52, 68, 75, 76, 78, 79, 89, 90, 96, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 136, 137, 138, 144, 146, 147, 148, 150, 151, 152, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 193, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 239, 240, 242, 244, 245, 459, 484, 485, 487, 488, 489, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 530, 531, 532, 533, 534, 540, 541, 542, 543, 545, 546, 548, 549, 551, 556, 557, 558, 563], "where": [10, 30, 34, 37, 41, 42, 50, 51, 52, 55, 107, 109, 130, 133, 137, 162, 168, 170, 175, 176, 206, 207, 218, 219, 220, 530, 532, 541, 542, 543, 551, 554, 555, 556, 558], "one": [10, 24, 26, 30, 34, 37, 41, 43, 45, 51, 52, 53, 82, 85, 86, 107, 109, 127, 130, 131, 136, 137, 138, 139, 142, 143, 144, 147, 162, 163, 168, 170, 171, 172, 178, 182, 196, 205, 211, 218, 220, 237, 241, 242, 488, 489, 530, 536, 539, 549, 551, 554, 556, 558, 560, 562, 563], "repres": [10, 34, 41, 51, 100, 127, 130, 144, 160, 181, 244, 492, 493, 496, 554, 563], "match": [10, 29, 37, 44, 45, 51, 83, 92, 103, 104, 105, 106, 130, 162, 168, 170, 204, 212, 214, 217, 220, 241, 242, 493, 530, 536, 539, 546, 551, 558, 561, 563], "result": [10, 17, 24, 25, 26, 27, 36, 42, 44, 53, 76, 78, 130, 181, 220, 241, 242, 244, 484, 530, 548, 551, 554, 555, 561], "find": [10, 17, 20, 23, 25, 26, 92, 130, 163, 170, 175, 176, 177, 179, 180, 554, 555, 556, 558, 562, 563], "study_uid": 10, "studyinstanceuid": 10, "series_uid": 10, "plural": 10, "Of": 10, "cours": [10, 561], "you": [10, 12, 14, 16, 18, 23, 24, 25, 26, 27, 28, 30, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 92, 137, 138, 160, 164, 168, 170, 172, 218, 459, 530, 543, 546, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563], "just": [10, 12, 14, 25, 26, 27, 28, 41, 46, 53, 88, 127, 130, 158, 530, 542, 546, 554, 555, 556, 558], "directli": [10, 30, 34, 41, 53, 127, 219, 220, 237, 487, 530, 551, 557, 558, 562], "know": [10, 37, 41, 46, 556, 557, 558], "what": [10, 32, 37, 40, 46, 50, 170, 556, 558, 561], "nfound": 10, "actual": [10, 20, 25, 26, 29, 30, 34, 37, 41, 44, 50, 127, 130, 170, 181, 204, 214, 217, 237, 554, 558], "onli": [10, 24, 26, 27, 28, 29, 30, 37, 39, 41, 42, 43, 45, 50, 51, 53, 55, 79, 96, 108, 110, 111, 112, 113, 115, 116, 117, 118, 126, 130, 132, 134, 143, 147, 160, 163, 170, 172, 179, 180, 181, 194, 214, 218, 219, 220, 225, 226, 229, 237, 241, 242, 245, 492, 497, 530, 536, 538, 539, 540, 541, 542, 543, 545, 546, 548, 551, 554, 556, 557, 558, 561], "limit": [10, 26, 27, 36, 43, 44, 47, 51, 170, 496, 497, 530, 536, 542, 546, 562], "subset": [10, 24, 26], "howev": [10, 25, 26, 32, 34, 36, 37, 41, 44, 130, 143, 144, 147, 203, 492, 554, 555, 556, 558, 561], "less": [10, 36, 37, 157, 530, 551, 563], "effici": [10, 158, 170, 218, 496, 563], "result_load": 10, "remov": [10, 12, 17, 41, 42, 47, 130, 135, 136, 144, 145, 147, 152, 169, 170, 171, 181, 218, 220, 237, 241, 242, 539, 540, 541, 542, 545, 546, 547, 548, 549, 550, 554, 556], "To": [10, 24, 26, 28, 36, 41, 42, 43, 45, 50, 52, 53, 153, 158, 220, 530, 536, 541, 546, 554, 555, 556, 558, 560, 563], "edit": [10, 53, 530, 540, 541, 543, 554, 555, 560], "identif": 10, "modul": [10, 25, 26, 30, 34, 36, 42, 48, 49, 51, 52, 68, 84, 93, 96, 130, 196, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 237, 241, 242, 485, 519, 522, 530, 531, 537, 538, 541, 546, 548, 549, 551, 556, 558, 561, 563], "part": [10, 27, 28, 32, 36, 37, 39, 42, 46, 48, 51, 52, 110, 127, 130, 133, 137, 139, 142, 143, 144, 145, 146, 147, 149, 150, 160, 173, 179, 180, 181, 194, 198, 204, 206, 207, 208, 209, 210, 211, 214, 218, 484, 493, 530, 533, 536, 548, 554, 555, 556, 557, 558, 561, 563], "annex": [10, 36, 37, 51, 52, 127, 130, 137, 139, 142, 143, 144, 145, 146, 147, 149, 150, 168, 206, 207, 208, 209, 210, 211, 214, 218, 484, 558], "properti": [10, 14, 30, 41, 55, 127, 130, 157, 169, 170, 171, 219, 220, 237, 244, 459, 493, 530, 531, 533, 536, 539, 540, 546, 551, 558], "1130": [10, 20], "my": [10, 46, 130, 170, 557], "1141": 10, "descriptor_file_id": [10, 170, 558], "readm": 10, "1142": 10, "specif": [10, 20, 24, 26, 27, 28, 29, 34, 35, 39, 41, 44, 46, 50, 51, 53, 75, 76, 77, 78, 130, 160, 161, 170, 175, 198, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 518, 530, 531, 533, 539, 541, 542, 545, 546, 551, 554, 555, 556, 557, 558, 561], "descriptor_character_set": [10, 170, 558], "iso_ir": [10, 20, 26, 28, 46, 77, 556, 557, 558], "100": [10, 20, 24, 26, 28, 46, 52, 250, 363, 364, 375, 556, 557, 558, 563], "until": [10, 157, 160, 161, 164, 175, 178, 530, 531, 536, 548, 558], "call": [10, 25, 26, 37, 41, 42, 44, 48, 50, 53, 80, 84, 90, 130, 144, 157, 158, 170, 177, 181, 203, 487, 530, 533, 536, 540, 546, 551, 556, 558, 561], "meet": [10, 34, 139, 237, 530, 536], "semant": [10, 39, 170, 493, 558], "re": [10, 16, 40, 50, 134, 409, 410, 553, 554, 555, 556, 558, 560, 561, 563], "here": [10, 24, 26, 28, 30, 34, 40, 46, 49, 98, 177, 220, 237, 555, 556, 557, 558, 562], "becaus": [10, 24, 26, 36, 37, 39, 41, 43, 44, 50, 51, 53, 68, 153, 170, 554, 555, 556], "would": [10, 24, 25, 26, 27, 36, 42, 53, 55, 488, 554, 555, 558, 563], "overwrit": [10, 518], "altern": [10, 23, 41, 130, 208, 209, 210, 218, 554, 556, 558], "new": [10, 16, 17, 18, 26, 27, 36, 39, 40, 43, 47, 55, 68, 79, 81, 83, 84, 88, 95, 98, 99, 101, 102, 107, 108, 109, 110, 127, 130, 132, 137, 139, 140, 141, 142, 146, 148, 149, 150, 151, 154, 156, 157, 169, 170, 171, 203, 208, 210, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 459, 486, 490, 493, 519, 531, 532, 533, 536, 537, 538, 541, 542, 543, 545, 546, 548, 551, 553, 556, 559, 563], "while": [10, 26, 27, 36, 37, 51, 55, 127, 130, 181, 217, 241, 242, 496, 530, 542, 543, 548, 551, 554, 558, 560], "leav": [10, 16, 26, 27, 108, 556], "unchang": [10, 44, 75, 179, 180, 206, 207, 208, 209, 210, 218, 561], "tdir": 10, "new_fileset": 10, "norigin": 10, "note": [10, 18, 24, 26, 27, 28, 29, 39, 42, 44, 45, 46, 49, 81, 92, 108, 110, 130, 133, 139, 143, 148, 149, 160, 164, 165, 177, 187, 203, 206, 207, 209, 210, 218, 486, 488, 489, 490, 492, 493, 494, 496, 533, 555, 556, 557, 561, 562, 563], "layout": [10, 170], "been": [10, 25, 26, 37, 44, 45, 46, 51, 81, 88, 90, 130, 137, 138, 140, 141, 142, 143, 144, 146, 162, 169, 170, 172, 181, 193, 194, 218, 219, 220, 487, 530, 533, 540, 545, 548, 549, 551, 554, 555, 556, 557], "is_fil": [10, 558], "relative_to": 10, "189": [10, 13, 552], "plot_read_fileset": [10, 13, 552], "basic": [11, 26, 27, 28, 40, 43, 44, 49, 52, 53, 70, 130, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 530, 543, 551, 558, 559, 561, 563], "info": [11, 20, 158, 161, 164, 176, 177, 178, 459, 530, 533, 534, 536, 538], "beam": [11, 18, 24, 26, 27, 28, 530, 536], "gantri": [11, 20, 26, 28], "ssd": 11, "field": [11, 20, 26, 28, 41, 89, 127, 129, 144, 530, 548], "89": 11, "darci": [11, 12, 16, 17], "mason": [11, 12, 16, 17, 23], "list_beam": 11, "summar": [11, 558], "line": [11, 20, 23, 24, 25, 27, 28, 38, 42, 43, 46, 50, 53, 84, 130, 170, 530, 537, 548, 554, 555, 556, 558, 561], "13": [11, 259, 260, 261, 263, 479, 480], "11": [11, 20, 23, 206, 207, 208, 209, 210, 218, 249, 255, 257, 271, 272, 323, 324, 387, 408, 428, 444, 468, 473, 478, 530, 550, 551, 563], "beamsequ": [11, 18, 24, 26, 27, 28, 41, 130, 530, 536], "cp0": 11, "controlpointsequ": 11, "float": [11, 32, 39, 41, 51, 80, 87, 127, 130, 131, 158, 160, 161, 162, 164, 178, 202, 214, 218, 487, 488, 489, 491, 492, 496, 512, 525, 526, 530, 536, 537, 543, 546, 548, 550, 556], "sourcetosurfacedist": 11, "10": [11, 20, 23, 26, 28, 37, 50, 52, 147, 172, 194, 241, 380, 415, 422, 444, 530, 537, 541, 551, 556, 558, 563], "beamnam": [11, 18, 41], "beamnumb": [11, 24, 26, 27, 28], "8d": 11, "gantryangl": 11, "1f": 11, "join": [11, 43], "002": [11, 13, 552], "plot_read_rtplan": [11, 13, 552], "scratch": [12, 18, 47, 130, 181, 530, 534, 535, 548, 554, 561], "produc": [12, 24, 26, 39, 51, 53, 530, 538, 543, 548, 551], "standard": [12, 20, 22, 32, 36, 37, 39, 42, 44, 46, 51, 52, 55, 127, 130, 133, 137, 139, 142, 143, 144, 145, 146, 147, 149, 150, 170, 181, 194, 198, 204, 205, 206, 207, 208, 209, 210, 211, 214, 218, 245, 484, 488, 489, 492, 493, 530, 532, 535, 536, 538, 539, 546, 548, 557, 558, 561, 563], "compliant": [12, 53, 530, 539], "written": [12, 24, 26, 32, 42, 43, 48, 50, 51, 130, 157, 170, 181, 193, 194, 530, 542, 543, 551, 554, 556, 558], "have": [12, 14, 25, 26, 27, 28, 32, 36, 37, 39, 41, 42, 44, 45, 46, 50, 53, 96, 127, 130, 134, 137, 138, 140, 141, 144, 147, 160, 163, 170, 172, 181, 194, 204, 214, 216, 217, 218, 219, 220, 237, 241, 242, 485, 498, 509, 519, 530, 536, 539, 541, 542, 545, 549, 551, 553, 554, 555, 556, 557, 558, 560, 561, 563], "valid": [12, 47, 53, 55, 82, 85, 86, 88, 123, 127, 130, 132, 134, 160, 173, 181, 194, 211, 218, 219, 220, 237, 409, 410, 459, 496, 497, 501, 503, 512, 513, 516, 530, 548, 549, 550], "tmp_9i5_wii": 12, "20240217": 12, "0033": [12, 20], "002025": 12, "398288": 12, "firstnam": 12, "123456": 12, "delet": [12, 17, 53, 130, 219, 530, 545, 554, 555], "datetim": [12, 92, 486, 490, 494], "filemetadataset": [12, 24, 26, 131, 134, 163, 181, 194, 522, 530, 545, 556], "explicitvrlittleendian": 12, "dt": [12, 32, 59, 64, 92, 502, 514, 530, 539, 548], "now": [12, 20, 127, 130, 484, 530, 532, 533, 536, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 554, 555, 556, 558, 563], "contentd": 12, "strftime": 12, "y": [12, 39, 218], "m": [12, 22, 493, 554, 555, 558, 560, 561, 563], "contenttim": 12, "long": [12, 32, 177, 181, 515, 530, 550, 556], "micro": 12, "mediastoragesopclassuid": [12, 558], "mediastoragesopinstanceuid": 12, "implementationclassuid": 12, "transfersyntaxuid": [12, 44, 45, 130, 169, 530, 532, 539, 556, 561], "namedtemporaryfil": [12, 17], "suffix": [12, 172, 484, 493, 530, 551], "save_a": [12, 16, 17, 24, 26, 43, 44, 48, 50, 51, 130, 181, 530, 532, 545, 551, 556, 561, 563], "enforce_file_format": [12, 130, 181, 530, 551, 556], "reopen": 12, "unlink": 12, "004": [12, 13, 552], "plot_write_dicom": [12, 13, 552], "285": [13, 51], "input_output": [13, 552], "output": [13, 16, 20, 24, 26, 27, 39, 45, 51, 53, 206, 207, 218, 220, 241, 242, 530, 543, 545, 552, 554, 555, 556, 558], "byte": [14, 24, 26, 30, 32, 33, 34, 37, 41, 44, 50, 51, 52, 53, 76, 77, 78, 88, 89, 110, 127, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157, 159, 160, 161, 162, 163, 165, 175, 176, 177, 178, 179, 180, 181, 186, 187, 191, 193, 194, 202, 204, 218, 219, 220, 237, 459, 493, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 530, 541, 542, 543, 548, 551, 556, 558, 561, 563], "help": [14, 24, 25, 26, 27, 28, 42, 46, 161, 530, 533, 541, 548, 550, 553, 554, 555], "save": [14, 16, 24, 26, 43, 44, 50, 51, 530, 533, 536, 555, 556, 557, 561, 563], "blob": 14, "databas": 14, "io": [14, 16, 131, 154, 156, 157, 522, 530, 551, 556], "bytesio": [14, 16, 131, 154, 530, 551, 556], "dcmwrite": [14, 48, 69, 130, 156, 157, 530, 539, 545, 546, 548, 551, 556], "filebas": [14, 69, 144, 147, 152, 193, 522], "dicomfilelik": [14, 69, 154, 155, 530, 532], "usag": [14, 24, 26, 27, 28, 30, 36, 41, 47, 211, 218, 241, 242, 459, 493, 522, 530, 543, 551, 558], "memory_dataset": [14, 21, 552], "dicom_filenam": 14, "write_dataset_to_byt": 14, "buffer": [14, 29, 130, 131, 140, 141, 142, 145, 146, 150, 151, 154, 156, 157, 160, 181, 193, 214, 219, 220, 530, 551], "rewind": [14, 165, 175, 176, 177, 530, 537], "seek": [14, 130, 131, 140, 141, 142, 146, 150, 151, 156, 157, 160, 181, 530, 532, 542, 551], "adapt_dataset_from_byt": 14, "interest": [14, 50, 553, 556], "stuff": 14, "is_little_endian": [14, 16, 44, 129, 130, 131, 144, 147, 157, 158, 161, 166, 167, 174, 176, 177, 178, 179, 180, 181, 193, 218, 459, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 530, 551], "bond": 14, "jame": 14, "007": [14, 17, 19, 552], "dummydatabas": 14, "__init__": [14, 127, 129, 130, 131, 132, 133, 154, 156, 157, 169, 170, 171, 203, 219, 220, 237, 243, 244, 459, 486, 488, 489, 490, 491, 492, 493, 494, 495], "self": [14, 459, 556, 561], "_blob": 14, "dict": [14, 30, 34, 41, 91, 107, 109, 127, 130, 131, 132, 168, 170, 204, 218, 219, 237, 530, 533, 548, 550], "file_path": [14, 201], "db": 14, "convert": [14, 29, 30, 34, 36, 37, 45, 51, 75, 76, 78, 84, 87, 89, 92, 96, 128, 130, 170, 181, 203, 204, 211, 212, 213, 214, 215, 216, 217, 218, 220, 237, 241, 242, 519, 530, 533, 536, 539, 542, 543, 546, 547, 548, 551, 555, 556, 563], "ds_byte": 14, "read_byt": 14, "read_dataset": [14, 69, 164], "_new": 14, "dynam": [16, 20], "allow": [16, 17, 24, 26, 27, 34, 37, 41, 42, 46, 50, 55, 87, 130, 132, 168, 170, 218, 492, 530, 532, 533, 542, 545, 546, 548, 549, 550, 551, 560], "tag": [16, 17, 26, 28, 29, 32, 43, 46, 47, 50, 51, 55, 59, 84, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 141, 144, 147, 148, 149, 150, 151, 157, 158, 160, 162, 170, 178, 179, 183, 198, 204, 214, 216, 217, 218, 241, 242, 515, 519, 522, 530, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 545, 546, 548, 549, 551, 556, 557], "present": [16, 26, 28, 37, 50, 78, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 130, 131, 134, 143, 144, 145, 147, 153, 160, 165, 168, 170, 171, 181, 194, 205, 206, 207, 208, 209, 210, 218, 237, 530, 532, 540, 542, 543, 556, 563], "unknown": [16, 20, 32, 46, 84, 127, 128, 130, 144, 191, 530, 535, 540, 542, 546, 548, 556, 562], "1001": [16, 20, 46, 130], "acm": [16, 46, 109], "un": [16, 32, 55, 89, 158, 181, 191, 510, 530, 531, 543, 545, 548, 549, 556], "1002": [16, 20, 46, 556], "hello": [16, 556], "world": [16, 556], "1003": [16, 20], "regist": [16, 25, 26, 46, 127, 459, 485, 530, 546, 551, 556], "One": [16, 29, 39, 43, 46, 50, 53, 107, 108, 109, 127, 130, 205, 211, 218, 219, 554, 555], "42": [16, 530, 533], "two": [16, 20, 25, 26, 28, 37, 39, 41, 42, 45, 46, 48, 88, 107, 108, 109, 130, 139, 170, 218, 493, 530, 537, 551, 556, 557, 563], "three": [16, 30, 34, 39, 109, 493, 556, 558], "contributor": 16, "datadict": [16, 46, 522, 530, 539, 542, 556], "add_private_dict_entri": [16, 41, 46, 530, 542], "valuerep": [16, 22, 59, 500, 502, 506, 508, 522], "demonstr": [16, 49, 530, 531], "implicit": [16, 26, 27, 37, 41, 45, 88, 130, 131, 157, 158, 161, 170, 181, 214, 227, 239, 459, 485, 507, 530, 533, 540, 542, 548, 551, 561], "is_implicit_vr": [16, 44, 129, 130, 131, 157, 158, 159, 161, 166, 167, 181, 193, 459, 507, 530, 542, 551], "block": [16, 18, 20, 26, 27, 28, 46, 130, 133, 530, 545, 555], "private_block": [16, 46, 130], "0x1001": 16, "add_new": [16, 46, 130, 133, 556], "0x01": [16, 46, 130], "0x02": [16, 46], "0x03": 16, "simul": [16, 130], "fp": [16, 144, 147, 152, 158, 160, 161, 165, 166, 167, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "forc": [16, 29, 130, 153, 160, 164, 165, 170, 181, 530, 534, 536, 538, 556], "defin": [16, 17, 20, 25, 26, 36, 37, 46, 50, 55, 127, 130, 133, 169, 170, 205, 218, 459, 530, 536, 554, 556, 558, 563], "vm": [16, 32, 41, 61, 107, 108, 109, 110, 111, 117, 118, 121, 127, 530, 534, 542, 545, 551, 556], "is_retir": [16, 107, 108, 109, 117, 118, 127, 459, 530, 539], "flag": [16, 20, 42, 95, 130, 165, 170, 175, 176, 177, 530, 545, 548, 558], "blank": [16, 17, 108, 203, 487, 530, 532, 556], "new_dict_item": [16, 107, 109], "0x10011001": 16, "0x10011002": 16, "0x10011003": 16, "entri": [16, 25, 26, 27, 41, 47, 51, 107, 108, 109, 110, 117, 118, 530, 532, 549, 554, 555], "string": [16, 17, 20, 25, 26, 32, 41, 55, 76, 77, 78, 108, 127, 130, 133, 160, 171, 182, 191, 193, 195, 199, 200, 203, 220, 237, 244, 487, 488, 489, 491, 492, 493, 496, 497, 501, 503, 512, 513, 514, 518, 530, 533, 535, 536, 540, 541, 546, 548, 557], "private_cr": [16, 46, 109, 110, 118, 121, 122, 123, 130, 133, 244], "new_entries_dict": [16, 107, 109], "noutput": 16, "003": [16, 19, 552], "plot_add_dict_entri": [16, 19, 552], "point": [17, 24, 25, 26, 27, 28, 32, 49, 53, 178, 214, 218, 496, 530, 532, 537, 548, 554, 556, 562], "It": [17, 26, 27, 30, 40, 41, 42, 43, 44, 46, 48, 49, 51, 53, 130, 144, 170, 181, 530, 536, 537, 554, 555, 556, 557, 558, 560, 561, 563], "replac": [17, 75, 76, 78, 108, 530, 542, 549], "curv": [17, 563], "keyword": [17, 26, 27, 28, 29, 39, 41, 46, 51, 52, 83, 84, 91, 105, 107, 108, 116, 117, 119, 124, 126, 127, 130, 160, 170, 179, 180, 181, 204, 209, 211, 214, 216, 217, 218, 219, 220, 237, 241, 242, 245, 459, 519, 530, 534, 536, 539, 541, 542, 546, 550, 551, 555, 556, 558, 562], "patientbirthd": [17, 41], "data_el": [17, 130, 183, 186, 187, 190, 192, 197, 198, 212, 556, 557], "callback": [17, 25, 26, 130, 530, 539], "function": [17, 20, 25, 26, 27, 29, 30, 34, 39, 40, 41, 42, 43, 46, 48, 51, 52, 53, 54, 57, 58, 66, 69, 71, 73, 80, 90, 97, 101, 108, 109, 127, 130, 135, 136, 144, 145, 147, 152, 158, 161, 163, 164, 168, 170, 179, 180, 181, 201, 203, 204, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 241, 242, 245, 405, 487, 496, 519, 520, 522, 523, 525, 530, 531, 532, 533, 538, 539, 541, 542, 543, 546, 548, 551, 555, 556, 557, 558, 561, 563], "insid": [17, 530, 532], "person_names_callback": 17, "curves_callback": 17, "0xff00": 17, "0x5000": 17, "del": [17, 18, 41, 46, 130, 556], "etc": [17, 18, 39, 41, 43, 49, 51, 127, 130, 204, 530, 531, 537, 548, 554, 558, 561], "walk": [17, 130], "remove_private_tag": [17, 46, 130], "method": [17, 23, 29, 30, 34, 37, 41, 44, 45, 46, 48, 49, 50, 52, 96, 99, 127, 129, 130, 131, 132, 133, 137, 138, 140, 141, 142, 146, 150, 151, 154, 156, 157, 160, 168, 169, 170, 171, 181, 203, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 243, 244, 459, 486, 488, 489, 490, 491, 492, 493, 494, 530, 533, 536, 539, 541, 548, 550, 551, 556, 557, 558, 561, 562], "easili": [17, 530, 531, 533], "delattr": 17, "otherpatientid": [17, 530, 532], "otherpatientidssequ": [17, 556], "possibl": [17, 30, 37, 41, 42, 51, 92, 127, 130, 146, 157, 168, 179, 180, 181, 217, 218, 496, 530, 539, 541, 542, 543, 548, 551, 557, 558, 562], "assign": [17, 41, 68, 127, 530, 536, 543, 549], "19000101": 17, "plot_anonym": [17, 19, 552], "300a": [18, 26, 27, 28, 43], "00f8": 18, "apertur": 18, "00fe": 18, "block1": 18, "block2": 18, "toi": 18, "block_ds1": 18, "blocktyp": 18, "blocknam": 18, "block_ds2": 18, "should": [18, 25, 26, 27, 30, 32, 34, 36, 37, 39, 41, 42, 43, 46, 50, 51, 53, 127, 130, 140, 142, 143, 144, 145, 146, 147, 160, 165, 168, 170, 172, 179, 180, 194, 203, 211, 212, 213, 214, 215, 216, 217, 218, 220, 237, 484, 512, 530, 532, 533, 540, 541, 546, 554, 555, 556, 558, 559, 561, 563], "like": [18, 25, 26, 29, 41, 42, 46, 50, 53, 71, 73, 84, 110, 130, 131, 152, 155, 156, 157, 158, 160, 161, 162, 164, 165, 175, 177, 178, 181, 193, 194, 196, 197, 198, 219, 220, 241, 242, 530, 533, 543, 546, 549, 551, 555, 556, 557, 558], "plan_d": 18, "sinc": [18, 37, 46, 130, 135, 136, 143, 144, 145, 147, 152, 181, 530, 550, 554, 558, 563], "did": [18, 530, 531, 551], "blocksequ": 18, "numberofblock": 18, "beam0": 18, "block_ds3": 18, "abov": [18, 24, 25, 26, 27, 28, 41, 46, 50, 53, 127, 130, 204, 220, 241, 242, 530, 540, 555, 558], "forget": [18, 53], "001": [18, 19, 46, 552], "plot_sequ": [18, 19, 552], "011": 19, "metadata_process": [19, 552], "192": [20, 26, 28, 46, 556], "20040119072730": [20, 26, 28, 46, 556], "12322": [20, 26, 28, 46, 556], "0005": [20, 26, 28, 46, 75, 76, 77, 78, 130, 160, 161, 519, 530, 531, 556, 557, 558], "primari": [20, 26, 28, 46, 556], "072731": [20, 26, 28, 556], "19970430": 20, "072730": [20, 26, 28], "112749": 20, "112936": 20, "113008": 20, "ge": 20, "medic": [20, 39, 43, 45, 558], "system": [20, 24, 26, 27, 28, 42, 49, 157, 170, 218, 530, 551, 556, 558, 560, 563], "jfk": 20, "0500": 20, "ct01_oc0": 20, "e": [20, 24, 26, 27, 28, 30, 34, 39, 41, 42, 43, 50, 51, 55, 84, 127, 130, 133, 160, 166, 167, 170, 171, 172, 203, 204, 218, 220, 237, 243, 488, 493, 518, 530, 533, 540, 542, 546, 551, 554, 555, 556, 560], "rhapsod": 20, "0009": [20, 46, 51, 130, 214, 218, 525, 526, 530, 543], "gems_iden_01": [20, 46], "fidel": [20, 46], "ge_genesis_ff": [20, 46], "suit": [20, 46, 530, 550], "ct01": [20, 46], "1004": [20, 519, 530, 543], "product": 20, "hispe": 20, "1027": 20, "sl": [20, 26, 28, 32, 519], "862399669": 20, "servic": [20, 558], "1031": 20, "mobil": 20, "10e6": 20, "genesi": 20, "05": [20, 555], "10e7": 20, "exam": 20, "checksum": 20, "973283917": 20, "10e9": 20, "stamp": 20, "o": [20, 22, 70, 72, 241, 242], "abcd1234": [20, 556], "1234abcd": [20, 556], "ag": [20, 32], "AS": [20, 32, 514], "000y": 20, "21b0": 20, "addit": [20, 26, 27, 28, 30, 34, 37, 75, 130, 169, 170, 220, 241, 242, 493, 538, 546, 548, 551, 557, 558, 560, 561], "histori": 20, "gems_pati_01": 20, "statu": [20, 115, 127], "isovue300": 20, "helic": 20, "kvp": 20, "120": [20, 52], "0088": 20, "collect": [20, 46, 55, 132, 161, 558], "diamet": 20, "480": 20, "rout": 20, "iv": 20, "1100": 20, "reconstruct": 20, "338": 20, "6716": 20, "1110": 20, "distanc": 20, "detector": 20, "1099": 20, "3100585938": 20, "1111": 20, "630": 20, "1120": 20, "tilt": 20, "tabl": [20, 23, 32, 36, 44, 51, 127, 130, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 181, 194, 204, 205, 206, 207, 208, 209, 214, 216, 217, 218, 219, 519, 530, 543, 546, 551, 555, 556, 558, 560, 561], "height": 20, "133": [20, 165], "699997": 20, "1150": 20, "exposur": 20, "1601": 20, "1151": 20, "rai": [20, 26, 28, 556], "tube": 20, "170": 20, "1152": 20, "1160": 20, "filter": [20, 26, 27, 130], "larg": [20, 44, 46, 53, 130, 133, 137, 138, 161, 178, 487, 530, 532, 533, 540, 542, 543, 546, 548, 561, 563], "bowti": 20, "fil": 20, "1190": [20, 530, 546], "focal": 20, "spot": 20, "1210": 20, "convolut": 20, "kernel": 20, "ff": [20, 147], "0019": 20, "gems_acqu_01": 20, "912": [20, 530, 543], "cell": 20, "theta": 20, "373": [20, 22], "75": [20, 26, 27, 52, 401], "0166": 20, "100f": 20, "horiz": 20, "ref": 20, "955": [20, 41], "799988": 20, "1011": 20, "1013": [20, 530, 543], "baselin": [20, 37, 45, 51, 143, 218, 230, 239, 459, 530, 550, 563], "1014": [20, 530, 546], "1015": 20, "enhanc": [20, 205, 218, 533], "1016": [20, 530, 543], "1017": 20, "1018": 20, "ra": 20, "1019": [20, 51], "79187": 20, "101a": 20, "last": [20, 26, 28, 39, 41, 43, 46, 84, 96, 139, 144, 530, 536, 549, 556, 558, 561], "101b": 20, "loc": 20, "320": [20, 51], "197968": 20, "101e": 20, "1023": 20, "speed": [20, 530, 533, 537, 541, 548, 550], "mm": [20, 23], "rotat": 20, "1024": [20, 127, 130, 530, 544, 557, 561], "mid": [20, 26, 28, 41, 43], "sec": 20, "17": [20, 52, 425, 522], "784578": 20, "1025": 20, "1026": 20, "azimuth": 20, "degre": 20, "msec": 20, "102a": 20, "On": [20, 37, 178, 493, 557], "178": 20, "079926": 20, "102b": 20, "off": [20, 26, 27, 42, 93, 161, 530, 537, 545, 555], "3994": 20, "299316": 20, "102c": 20, "trigger": [20, 26, 28], "10431": 20, "102e": 20, "718": 20, "079956": 20, "102f": 20, "984": 20, "1039": [20, 558], "sfov": 20, "stat": [20, 162], "recon": 20, "comput": 20, "1042": [20, 530, 545], "segment": [20, 29, 205, 217, 218, 530, 541, 548], "1043": 20, "1044": 20, "interscan": 20, "delai": [20, 26, 28], "1047": [20, 530, 545], "compress": [20, 23, 29, 30, 34, 36, 37, 40, 43, 47, 51, 130, 137, 138, 143, 144, 218, 219, 220, 224, 225, 226, 228, 229, 232, 233, 237, 241, 242, 459, 526, 527, 530, 539, 541, 543, 548, 549, 551, 559, 560], "factor": [20, 52, 530, 537, 561, 563], "104a": 20, "104b": [20, 26, 28], "1052": [20, 206, 207, 218], "post": [20, 530, 545], "proc": 20, "1057": 20, "water": [20, 493], "95": [20, 530, 536, 539], "1058": 20, "bone": [20, 49], "105e": 20, "763": 20, "105f": 20, "increment": [20, 172], "1969": 20, "1061": 20, "1576": 20, "1062": 20, "106a": 20, "depend": [20, 30, 34, 37, 44, 45, 51, 53, 96, 127, 130, 140, 141, 142, 170, 181, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 220, 237, 514, 519, 530, 541, 542, 549, 555, 557, 558, 560, 563], "process": [20, 25, 26, 30, 34, 37, 45, 130, 143, 211, 218, 219, 220, 230, 231, 234, 235, 241, 242, 459, 487, 530, 533, 545, 548, 550, 554, 555, 563], "106b": 20, "852": [20, 530, 542], "button": 20, "1071": 20, "fatq": 20, "estim": 20, "were": [20, 26, 28, 130, 530, 536, 538, 554, 555, 563], "1072": 20, "z": [20, 88, 172, 173, 530, 551], "chan": 20, "avg": 20, "1073": [20, 530, 545], "left": [20, 50, 555], "1074": 20, "max": [20, 206, 207, 218], "1075": [20, 530, 545], "right": 20, "1076": 20, "10da": 20, "10db": 20, "projector": 20, "coeffici": [20, 26, 27], "10dc": 20, "10dd": 20, "overrang": 20, "10de": 20, "alpha": [20, 205, 218, 530, 542, 543, 562], "158": 20, "135803": 20, "179": 20, "035797": 20, "sn": 20, "gems_rela_01": 20, "prescrib": 20, "1005": 20, "1007": 20, "1605775145": 20, "24078": 20, "acq": 20, "750675506": 20, "1037": 20, "screen": [20, 24, 26], "anatom": 20, "7400": 20, "1091": 20, "biopsi": 20, "1092": 20, "fl": [20, 26, 28, 32, 556], "1093": [20, 530, 546], "gems_stdy_01": 20, "fd": [20, 32], "862399761": 20, "111079": 20, "No": [20, 173, 505, 553], "header": [20, 153, 160, 165, 530, 532, 556], "107d": 20, "complet": [20, 24, 26, 34, 53, 130, 142, 145, 178, 530, 531, 554, 558, 560], "0025": 20, "gems_sers_01": 20, "1006": [20, 519, 530, 543], "puls": 20, "44": [20, 332], "landmark": 20, "counter": 20, "archiv": 20, "receiv": [20, 194], "host": 20, "0027": 20, "gems_imag_01": 20, "101c": 20, "vma": 20, "mamp": 20, "150": [20, 52], "101d": 20, "phase": 20, "mod": 20, "24": [20, 306], "101f": 20, "clip": 20, "129": [20, 561], "smart": 20, "ON": 20, "foreign": [20, 530, 531], "revis": [20, 530, 534, 536, 537], "1035": 20, "letter": [20, 41, 130], "20406341552734": 20, "r": [20, 37, 127, 130, 557], "coord": 20, "199999809265137": 20, "9": [20, 23, 26, 27, 36, 41, 51, 52, 80, 172, 173, 204, 251, 252, 256, 258, 267, 277, 298, 299, 319, 320, 321, 331, 386, 409, 410, 419, 435, 438, 446, 458, 473, 484, 540, 543, 546, 551, 563], "699999809265137": 20, "69999694824219": 20, "1045": 20, "1046": 20, "1048": 20, "top": [20, 26, 27, 28, 39, 50, 130, 161, 170, 530, 551, 555, 556], "corner": 20, "180": [20, 41], "53579711914062": 20, "1049": [20, 530, 545], "03579711914062": 20, "bottom": [20, 39, 554, 555], "104c": [20, 26, 28], "159": [20, 530, 543], "63580322265625": 20, "104d": [20, 26, 28], "19999694824219": 20, "116": [20, 26, 27, 28, 52], "20304870605469": 20, "side": 20, "l": [20, 23, 29, 45, 143, 218, 220, 232, 233, 239, 241, 242, 349, 530, 541, 551, 560], "1053": [20, 206, 207, 218, 530, 545], "anterior": 20, "posterior": 20, "1054": 20, "1055": 20, "0120": 20, "rescal": [20, 47, 206, 207, 209, 210, 218], "intercept": [20, 41, 206, 207, 218], "slope": [20, 206, 207, 218], "0029": 20, "gems_imps_01": 20, "lower": [20, 130, 133, 170, 530, 551, 558, 562], "rang": [20, 30, 34, 37, 50, 92, 206, 207, 218, 237, 241, 530, 541, 543, 556], "pixels1": 20, "87": 20, "1008": 20, "1009": 20, "100a": 20, "764": 20, "hdr": 20, "struct": [20, 196, 512], "1034": 20, "advantag": [20, 530, 537], "overflow": 20, "underflow": 20, "0043": [20, 26, 28, 556], "gems_parm_01": 20, "400": [20, 51], "input": [20, 24, 26, 51, 203, 211, 218, 219, 493, 530, 546], "1012": 20, "chain": 20, "14": [20, 45, 143, 234, 235, 337, 338, 456, 530, 545], "decon": 20, "107": [20, 250, 326, 375, 530, 537], "21": [20, 52, 426], "20": [20, 52, 218, 388, 437, 530, 548], "calibr": 20, "ibh": 20, "scale": 20, "095": 20, "bbh": 20, "085000": 20, "102000": 20, "095000": 20, "blend": 20, "350": 20, "ppscan": 20, "integr": 20, "level": [20, 26, 27, 28, 38, 39, 130, 161, 170, 171, 530, 536, 548, 551, 555, 556, 557, 558], "40": [20, 52, 406, 530, 548], "delta": 20, "1021": 20, "glow": 20, "term": [20, 51, 204, 218, 219], "748": 20, "749": 20, "750": 20, "pitch": 20, "ratio": [20, 36], "1028": 20, "uniqu": [20, 30, 32, 34, 37, 46, 170, 171, 172, 190, 220, 237, 530, 539, 550, 556, 558], "iden": 20, "1029": [20, 530, 544], "histogram": 20, "2068": 20, "user": [20, 30, 34, 41, 43, 48, 49, 78, 87, 130, 158, 163, 181, 237, 530, 533, 536, 542, 543, 546, 551, 554, 556, 558], "coordin": [20, 26, 27, 41], "200000": 20, "700000": 20, "07992553710938": 20, "3816": 20, "219482421875": 20, "fpa": 20, "gain": 20, "ad": [20, 25, 26, 27, 36, 39, 41, 47, 90, 105, 130, 133, 134, 168, 170, 171, 179, 180, 181, 194, 203, 209, 211, 216, 218, 239, 240, 241, 242, 405, 501, 503, 530, 531, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 548, 549, 550, 551, 553, 554, 557, 562], "cal": 20, "reg": 20, "xm": [20, 26, 28], "auto": [20, 130, 530, 531], "pattern": [20, 26, 28, 103, 104, 106, 530, 551], "tggc": [20, 26, 28], "104e": [20, 26, 28, 556], "durat": [20, 26, 28, 556], "60060977935791": [20, 26, 28, 556], "8192": [20, 178], "32768": [20, 26, 28, 556], "difflib": 20, "compar": [20, 55, 530, 537, 540, 548, 551, 554, 555], "termin": [20, 26, 27, 28, 42, 144, 161, 174], "newlin": 20, "massag": 20, "form": [20, 37, 50, 51, 52, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 130, 131, 220, 241, 242, 245, 484, 493], "rep": 20, "split": [20, 518, 530, 531, 532], "diff": [20, 554], "093": [20, 21, 552], "plot_dicom_differ": [20, 21, 552], "show_charset_nam": [21, 22, 552], "veri": [22, 32, 530, 533, 554, 558, 561], "simpl": [22, 41, 43, 49, 530, 531], "app": 22, "personnam": [22, 32, 59, 127, 506, 530, 531, 542, 545, 546, 548, 551], "default_encod": [22, 493], "iso8859": [22, 130, 158, 161, 193, 507], "person_nam": 22, "2008": [22, 493, 530, 551], "ps3": [22, 493], "p98": 22, "yamada": 22, "tarou": 22, "033": 22, "3ed": 22, "bb": 22, "iso2022_jp": 22, "j": 22, "105": [22, 52, 250, 371, 372, 375], "wang": 22, "xiaodong": 22, "xcd": 22, "xf5": 22, "x5e": 22, "xd0": 22, "xa1": 22, "xb6": 22, "xab": 22, "gb18030": 22, "104": [22, 250, 300, 301, 302, 303, 304, 369, 370, 375], "xe7": 22, "x8e": 22, "x8b": 22, "xe5": 22, "xb0": 22, "x8f": 22, "xe6": 22, "x9d": 22, "xb1": 22, "utf": 22, "101": [22, 250, 361, 362, 375], "hong": [22, 493], "gildong": [22, 493], "363": 22, "321": 22, "316": 22, "324": 22, "327": 22, "310": 22, "253": 22, "261": 22, "346": [22, 530, 539], "265": 22, "277": [22, 530, 543], "euc_kr": [22, 493], "label": [22, 26, 28, 30, 34, 49, 220, 237], "pack": [22, 37, 50, 218, 220, 241, 242, 530, 540, 541, 546, 549], "easiest": [23, 561], "probabl": [23, 53, 558], "zenodo": 23, "doi": 23, "enter": 23, "citat": 23, "box": [23, 39], "along": [23, 170], "et": 23, "al": 23, "http": [23, 39, 49, 554, 555, 557, 560], "github": [23, 530, 539, 553, 554, 555, 560], "onlin": 23, "yyyi": 23, "dd": 23, "recommend": [23, 25, 26, 30, 41, 42, 44, 92, 130, 137, 138, 170, 218, 237, 556, 558, 560, 561], "deal": [23, 42, 50, 217, 530, 532, 541, 556], "jpeg": [23, 29, 37, 43, 44, 45, 51, 79, 137, 138, 143, 212, 213, 214, 215, 216, 217, 218, 220, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 239, 241, 242, 344, 349, 352, 459, 530, 541, 543, 545, 546, 548, 551, 560, 561], "see": [23, 24, 26, 27, 28, 34, 36, 41, 42, 43, 44, 51, 53, 55, 127, 130, 133, 158, 161, 164, 168, 176, 177, 178, 181, 194, 198, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 492, 493, 530, 533, 543, 544, 545, 548, 554, 555, 556, 558, 560, 561, 562], "releas": [23, 46, 522, 539, 543, 546], "march": 23, "2018": [23, 555], "june": 23, "octob": 23, "juli": 23, "2019": 23, "januari": 23, "2020": 23, "mai": [23, 24, 26, 27, 29, 30, 33, 34, 37, 42, 45, 46, 49, 50, 51, 53, 77, 95, 98, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 157, 170, 181, 194, 217, 219, 220, 237, 241, 242, 485, 493, 509, 511, 530, 543, 551, 554, 555, 556, 558, 560, 561, 563], "novemb": 23, "august": 23, "2021": [23, 530, 550], "2022": 23, "2023": 23, "jan": [23, 83, 556], "2024": [23, 522], "recreat": [24, 26, 530, 538], "within": [24, 26, 27, 28, 30, 34, 79, 88, 130, 160, 161, 169, 170, 181, 247, 507, 530, 546, 558, 560, 563], "detail": [24, 26, 37, 41, 42, 43, 51, 53, 93, 127, 130, 161, 247, 492, 522, 530, 548, 551, 554, 555], "review": [24, 26, 553, 554, 555], "than": [24, 25, 26, 27, 28, 32, 36, 37, 39, 44, 45, 50, 53, 55, 127, 130, 139, 140, 141, 142, 143, 144, 146, 147, 157, 160, 164, 170, 173, 182, 196, 203, 218, 484, 530, 531, 532, 533, 538, 539, 540, 543, 545, 548, 551, 556, 557], "export": [24, 26, 42, 530, 548], "includ": [24, 25, 26, 29, 42, 50, 53, 127, 130, 137, 168, 170, 181, 204, 218, 219, 247, 522, 530, 532, 534, 536, 538, 539, 551, 554, 555, 556, 558, 561, 563], "health": [24, 26, 53], "sensit": [24, 26, 52, 53, 130, 519, 563], "git": [24, 26, 27, 554, 555, 560], "util": [24, 26, 51, 53, 62, 63, 64, 69, 522, 530, 531, 538, 539, 551], "main": [24, 25, 26, 40, 41, 48, 53, 117, 530, 533, 554, 555, 556, 560], "instancecreationd": [24, 26], "20030903": [24, 26, 27, 41], "instancecreationtim": [24, 26], "150031": [24, 26, 27, 41], "481": [24, 26, 262, 263, 306, 310, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 436, 437, 455, 456], "sopinstanceuid": [24, 26, 36, 169], "777": [24, 26, 27, 41], "7777": [24, 26, 27, 41], "20030903150023": [24, 26, 27, 41], "20030716": [24, 26, 27, 28, 41], "153557": [24, 26, 28, 41], "prefix": [24, 26, 27, 28, 39, 153, 160, 165, 172, 181, 194, 410, 484, 493, 530, 542, 551, 554, 555, 556, 562], "rather": [24, 26, 27, 28, 50, 53, 127, 130, 170, 203, 530, 531, 532, 539, 543, 545, 548, 551, 556], "In": [24, 25, 26, 27, 30, 34, 37, 39, 41, 43, 44, 46, 51, 53, 75, 170, 530, 538, 544, 546, 550, 551, 554, 555, 556, 558, 561], "wa": [24, 25, 26, 37, 39, 127, 130, 131, 146, 170, 175, 179, 180, 501, 503, 530, 533, 540, 543, 548, 551, 554, 555, 558, 561], "direct": [24, 26, 41, 218, 555, 557, 558], "specifi": [24, 25, 26, 27, 28, 37, 41, 108, 110, 127, 130, 146, 160, 161, 181, 193, 220, 237, 241, 242, 493, 519, 530, 543, 548, 556, 558, 560], "exclude_s": [24, 26], "filespec": [24, 25, 26, 27, 28], "outfil": [24, 26, 556], "argument": [24, 25, 26, 27, 28, 39, 41, 44, 91, 130, 132, 179, 180, 181, 202, 530, 532, 533, 541, 542, 543, 544, 545, 546, 551, 557, 558, 561], "filenam": [24, 26, 27, 28, 103, 104, 105, 106, 130, 131, 157, 162, 163, 170, 172, 181, 530, 545, 554, 558], "If": [24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 39, 40, 41, 42, 48, 51, 52, 53, 55, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 93, 96, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 130, 132, 133, 134, 137, 140, 141, 142, 143, 144, 146, 147, 150, 151, 156, 157, 158, 160, 161, 162, 165, 169, 170, 171, 172, 178, 179, 180, 181, 193, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 241, 242, 243, 245, 459, 484, 485, 488, 489, 493, 496, 500, 501, 502, 503, 508, 512, 515, 519, 530, 536, 548, 551, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563], "your_fil": [24, 26, 27, 28], "yourplan": [24, 26, 27, 28], "stdout": [24, 26], "messag": [24, 26, 27, 28, 93, 247, 530, 533, 542, 550, 551, 554, 556, 558], "exclud": [24, 26, 27, 28, 53, 130, 204, 218, 219], "binari": [24, 26, 127, 130, 218, 530, 534, 542, 543], "larger": [24, 26, 160, 560, 561], "save_filenam": [24, 26], "otherwis": [24, 26, 30, 34, 37, 41, 87, 96, 114, 115, 119, 120, 124, 125, 126, 127, 130, 131, 137, 140, 141, 142, 146, 150, 151, 158, 170, 172, 173, 176, 177, 181, 201, 208, 209, 210, 218, 219, 220, 237, 241, 242, 459, 485, 493, 497, 498, 499, 500, 501, 502, 503, 507, 508, 509, 511, 512, 514, 515], "_from_codifi": [24, 26], "dummi": [24, 26], "error": [24, 26, 53, 55, 75, 85, 86, 95, 127, 130, 132, 496, 522, 530, 533, 534, 537, 539, 540, 541, 542, 543, 545, 546, 550, 551, 554, 556], "savenam": [24, 26], "dicomfil": [24, 26, 69], "pythoncod": [24, 26], "By": [24, 26, 51, 168, 170, 492, 530, 534, 556], "translat": [24, 26, 41, 530, 539], "whole": [24, 26, 158, 204, 218, 219, 530, 551, 561], "fractiongroupsequ": [24, 26, 27, 28], "non": [24, 26, 32, 41, 42, 107, 108, 109, 110, 125, 127, 128, 130, 134, 143, 168, 170, 181, 194, 217, 218, 234, 235, 241, 242, 250, 492, 496, 498, 501, 503, 509, 511, 530, 534, 535, 539, 540, 541, 542, 543, 546, 550, 556], "fractiongroupnumb": [24, 26], "numberoffractionsplan": [24, 26], "30": [24, 26, 27, 28, 52, 53, 399, 555], "numberofbeam": [24, 26], "numberofbrachyapplicationsetup": [24, 26], "referenc": [24, 26, 27, 28, 39, 41, 163, 169, 170, 558], "refd_beam_sequ": [24, 26], "referencedbeamsequ": [24, 26], "refd_beam1": [24, 26], "beamdosespecificationpoint": [24, 26], "239": [24, 26, 27, 28, 41], "531250000000": [24, 26, 27, 28], "751": [24, 26, 27, 28], "87000000000": [24, 26, 27, 28], "accept": [24, 26, 32, 42, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 130, 132, 147, 530, 545, 546, 548, 550, 554], "issu": [24, 26, 28, 30, 43, 53, 55, 75, 76, 78, 86, 218, 530, 533, 534, 535, 536, 537, 542, 551, 553, 554], "toward": [24, 26], "loop": [24, 26, 53], "develop": [25, 26, 27, 42, 530, 539], "subcommand": [25, 26, 27, 530, 548], "command": [25, 27, 38, 43, 53, 130, 181, 530, 538, 548, 550, 551, 554, 555, 560], "packag": [25, 26, 27, 43, 45, 47, 48, 49, 204, 212, 213, 214, 215, 216, 217, 519, 530, 531, 534, 539, 546, 548, 558, 560], "setup": [25, 26, 27, 28, 43, 530, 537, 538, 550], "command1": [25, 26], "command2": [25, 26], "setuptool": [25, 26, 530, 531, 538, 548], "yourpackag": [25, 26], "variou": [25, 26, 46, 530, 531], "entry_point": [25, 26], "pydicom_subcommand": [25, 26], "command1modul": [25, 26], "add_subpars": [25, 26], "command2modul": [25, 26], "liter": [25, 26], "must": [25, 26, 30, 34, 36, 37, 41, 42, 44, 50, 51, 84, 87, 130, 133, 137, 138, 147, 160, 168, 170, 173, 175, 177, 181, 203, 204, 205, 209, 210, 218, 459, 497, 515, 530, 548, 556, 557, 558, 561, 563], "wish": [25, 26, 42, 218], "usual": [25, 26, 27, 28, 36, 41, 46, 51, 108, 131, 141, 153, 158, 530, 533, 554, 556, 560, 561], "convent": [25, 26, 41, 493], "singl": [25, 26, 30, 32, 34, 36, 37, 39, 77, 107, 109, 127, 130, 137, 139, 144, 146, 147, 152, 167, 168, 170, 199, 200, 203, 204, 216, 218, 219, 220, 237, 241, 242, 503, 512, 530, 531, 541, 549, 554, 557, 558], "subpars": [25, 26], "do_command": [25, 26], "filespec_help": [25, 26], "filespec_pars": [25, 26], "sub": [25, 26, 220, 241, 242], "parser": [25, 26], "add_pars": [25, 26], "subcommandnam": [25, 26], "add_argu": [25, 26], "set_default": [25, 26], "func": [25, 26, 555], "And": [25, 26, 27, 28, 30, 530, 546, 554, 555, 556, 563], "arg": [25, 26, 130, 132, 153, 155, 157, 245, 486, 490, 493, 494, 530, 534], "element_v": [25, 26], "yourarg": [25, 26], "need": [25, 26, 27, 30, 36, 37, 39, 41, 42, 45, 46, 48, 52, 53, 76, 78, 92, 96, 130, 158, 164, 220, 513, 516, 530, 533, 548, 551, 554, 555, 556, 557, 558, 560, 561, 563], "argpars": [25, 26], "snippet": [25, 26, 46], "element_valu": [25, 26], "pair": [25, 26, 132, 170], "codifi": [25, 27, 47, 530, 538, 540, 548, 550, 551], "filetyp": [25, 26], "yourself": [25, 26, 50, 51], "shown": [25, 26, 28, 41, 46, 53, 55, 218, 530, 531, 532, 545, 556, 558], "relat": [25, 26, 27, 37, 42, 50, 52, 58, 130, 133, 181, 204, 214, 216, 217, 519, 530, 531, 554, 558, 563], "think": [25, 26], "contribut": [25, 26, 530, 533, 536, 537, 559], "case": [25, 26, 41, 42, 43, 44, 46, 53, 55, 75, 77, 83, 130, 161, 220, 493, 530, 542, 546, 551, 556, 557, 561, 563], "under": [25, 26, 41, 137, 138, 530, 531, 533, 539, 554, 555, 560], "pull": [25, 26, 28, 553, 560], "request": [25, 26, 28, 41, 530, 546, 548, 553], "v2": [26, 27, 36, 530, 546, 560, 563], "offer": [26, 27, 44, 51, 130, 561], "explor": [26, 27, 46], "156": [26, 27, 41], "rt": [26, 27, 28, 41, 68, 168, 170, 558], "plan": [26, 27, 28, 41, 43, 68, 168], "999": [26, 27, 41, 530, 543], "99": [26, 27, 41, 45, 214, 221, 239, 250, 287, 462], "9999": [26, 27, 41, 555], "888": [26, 27, 41], "88": [26, 27, 41, 248, 255, 268, 269, 273, 274, 311, 315, 318, 334, 356, 379, 400, 401, 403, 406, 432, 445, 482, 530, 534], "replic": [26, 27], "exactli": [26, 27, 50, 52, 556], "notat": [26, 27, 28, 496, 556], "0071": [26, 27, 28], "fraction": [26, 27, 28], "0078": [26, 27, 28], "00a0": [26, 27, 28], "brachi": [26, 27, 28], "300c": [26, 27, 28], "0082": [26, 27, 28], "dose": [26, 27, 28, 68, 168, 170, 530, 536, 558], "0275401": [26, 27, 28], "meterset": [26, 27, 28], "0036697": [26, 27, 28], "0006": [26, 27, 28, 29, 37, 130, 214, 216, 217, 218], "simpli": [26, 27, 41, 50], "particular": [26, 27, 41, 44, 50, 51, 88, 163, 530, 533, 543, 556, 562], "q": [26, 27, 28, 554], "quiet": [26, 27, 28], "automat": [26, 27, 39, 41, 44, 46, 50, 51, 53, 96, 127, 130, 170, 179, 180, 181, 488, 489, 530, 539, 543, 545, 548, 554, 555, 556], "pip": [26, 27, 554, 555, 561, 563], "environ": [26, 27, 42, 530, 531, 546, 560], "variabl": [26, 27, 39, 40, 41, 42, 68, 530, 542, 546, 550], "clone": [26, 27, 554, 555, 560], "repositori": [26, 27, 49, 105, 530, 551, 560], "repeat": [26, 27, 50, 117, 120, 124, 125, 170, 530, 541, 550, 556], "reinstal": [26, 27], "similar": [26, 27, 39, 131, 198, 530, 532, 536, 557, 562], "program": [26, 27, 41, 43, 49, 530, 531, 536], "pipe": [26, 27], "grep": [26, 27], "either": [26, 27, 30, 37, 41, 42, 46, 48, 96, 127, 130, 140, 142, 146, 165, 170, 204, 218, 219, 245, 493, 500, 508, 530, 546, 551, 555, 556, 558, 560, 561], "iso": [26, 27, 37, 211, 218, 344, 349, 352, 484, 530, 543], "741": [26, 27], "organ_at_risk": [26, 27], "deliveri": [26, 27], "maximum": [26, 27, 37, 53, 127, 137, 138, 172, 237, 484, 530, 550, 551], "002c": [26, 27], "organ": [26, 27, 493], "risk": [26, 27], "ptv": [26, 27], "target": [26, 27, 39], "0026": [26, 27], "prescript": [26, 27], "826203": [26, 27], "00b0": [26, 27], "00b6": [26, 27], "0111": [26, 27], "control": [26, 27, 29, 48, 83, 84, 100, 101, 220, 241, 242, 530, 536, 558], "0115": [26, 27], "rate": [26, 27], "650": [26, 27], "011a": [26, 27], "010c": [26, 27], "cumul": [26, 27], "0051": [26, 27], "9990268": [26, 27], "0180": [26, 27], "regular": [26, 27, 41, 530, 550], "express": [26, 27], "abil": [26, 27, 51, 530, 538, 539, 546, 551], "alreadi": [26, 28, 36, 38, 39, 44, 51, 75, 108, 130, 134, 144, 171, 175, 194, 203, 218, 487, 530, 538, 556, 558, 561, 563], "nest": [26, 28, 41, 130, 530, 537, 550], "minim": [26, 28, 30, 181, 194, 220, 241, 242, 530, 551], "below": [26, 28, 32, 36, 41, 43, 44, 46, 171, 181, 204, 214, 216, 217, 218, 519, 530, 533, 558, 561, 562], "studyid": [26, 28], "bitsstor": [26, 28, 214, 216, 218], "pre": [26, 28, 41, 43, 530, 551, 554], "id00001": [26, 28], "study1": [26, 28], "plan1": [26, 28], "02754010000000": [26, 28], "003669700000": [26, 28], "treatment": [26, 28], "static": [26, 28, 132, 237], "photon": [26, 28], "energi": [26, 28], "00000000000000": [26, 28], "coll": [26, 28], "couch": [26, 28], "wedg": [26, 28], "boli": [26, 28], "alwai": [26, 28, 45, 46, 51, 119, 127, 133, 160, 214, 218, 220, 241, 242, 530, 542, 546, 548, 551], "those": [26, 28, 30, 34, 38, 42, 46, 530, 533, 536, 546, 556, 558], "extra": [26, 28, 41, 220, 530, 551], "submit": [26, 28, 43, 530, 536, 553, 554, 555], "interfac": [27, 38, 530, 548, 560], "introduct": [28, 34, 40, 47, 554, 555, 558, 559, 563], "backend": [29, 530, 551], "iter_pixel": [29, 530, 551], "well": [29, 46, 51, 53, 170, 205, 218, 530, 533, 534, 536, 543, 554, 556, 560], "as_arrai": [29, 216, 218, 220], "as_buff": [29, 220], "iter_arrai": [29, 220], "iter_buff": [29, 220], "describ": [29, 37, 41, 45, 53, 107, 109, 127, 130, 493, 557, 558], "encod": [29, 30, 32, 37, 38, 40, 44, 45, 51, 52, 55, 75, 76, 77, 78, 127, 128, 130, 131, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 154, 156, 157, 158, 161, 166, 167, 170, 181, 188, 192, 193, 194, 196, 197, 198, 200, 217, 219, 220, 240, 241, 242, 459, 485, 493, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 522, 530, 536, 539, 540, 541, 542, 543, 548, 549, 550, 551, 556, 557, 561], "overrid": [29, 132, 168, 487, 530, 541, 558], "int": [29, 30, 32, 34, 41, 55, 76, 84, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 133, 137, 139, 140, 142, 143, 145, 146, 147, 149, 150, 151, 157, 158, 159, 160, 161, 164, 166, 167, 170, 171, 172, 175, 176, 177, 178, 193, 202, 204, 208, 209, 210, 218, 219, 220, 237, 241, 242, 244, 245, 246, 459, 487, 488, 489, 491, 492, 493, 507, 512, 515, 519, 556], "number_of_fram": [29, 30, 34, 140, 142, 146, 219, 237], "samples_per_pixel": [29, 30, 34, 219, 237], "bits_alloc": [29, 30, 34, 218, 219, 237], "bits_stor": [29, 30, 34, 219, 237], "photometric_interpret": [29, 30, 34, 219, 237], "color": [29, 30, 34, 36, 37, 44, 47, 205, 211, 218, 237, 530, 543, 545, 561], "pixel_represent": [29, 30, 34, 219, 237], "pixel_keyword": [29, 30, 219], "whether": [29, 37, 41, 81, 101, 127, 130, 147, 497, 530, 533, 536, 541, 543, 548, 553, 554, 560], "sign": [29, 30, 32, 34, 37, 51, 79, 237, 530, 546, 554, 555, 563], "unsign": [29, 30, 32, 34, 37, 51, 147, 237, 530, 546, 563], "planar_configur": [29, 30, 219], "planar": [29, 37, 51, 130, 218, 219, 530, 541], "nativ": [29, 37, 44, 220, 241, 242, 462, 526, 561], "floatpixeldata": [29, 30, 51, 218, 219, 530, 548], "doublefloatpixeldata": [29, 30, 51, 218, 219, 530, 548], "ndarrai": [29, 39, 41, 45, 50, 51, 52, 79, 81, 96, 102, 130, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 241, 242, 501, 503, 519, 530, 539, 543, 546, 551, 561, 563], "as_rgb": 29, "bool": [29, 30, 34, 55, 80, 81, 93, 95, 100, 105, 114, 115, 124, 125, 127, 129, 130, 131, 134, 137, 147, 157, 158, 159, 160, 161, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 194, 201, 204, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 237, 241, 242, 244, 459, 485, 487, 488, 489, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 519], "ycbcr": [29, 36, 37, 212, 213, 214, 215, 216, 217, 220, 241, 242], "ybr_full_422": [29, 37, 51, 211, 214, 216, 218, 220, 241, 242, 530, 543, 549], "rgb": [29, 30, 34, 36, 37, 44, 51, 96, 205, 211, 212, 213, 214, 215, 216, 217, 218, 220, 241, 242, 530, 540, 543, 548, 551, 561], "force_rgb": 29, "convers": [29, 30, 34, 36, 37, 92, 127, 204, 214, 216, 217, 519, 530, 532, 542, 543, 545, 557, 563], "force_ybr": 29, "view_onli": [29, 220, 241, 242], "make": [29, 30, 37, 41, 42, 43, 46, 53, 130, 131, 484, 496, 530, 533, 542, 548, 551, 556, 558, 560], "best": [29, 47, 68], "effort": 29, "attempt": [29, 30, 143, 180, 181, 519, 530, 539, 548, 551, 556], "immut": [29, 220, 486, 490, 494, 530, 542], "encapsul": [29, 37, 44, 51, 130, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 220, 522, 530, 531, 541, 546, 551], "apply_jls_sign_correct": 29, "raw": [29, 30, 34, 41, 50, 51, 52, 128, 129, 130, 140, 142, 146, 152, 158, 162, 168, 220, 237, 241, 242, 519, 530, 536, 542, 545, 563], "integ": [29, 30, 32, 34, 37, 51, 147, 218, 484, 491, 492, 530, 534, 536, 546, 563], "apply_j2k_sign_correct": 29, "doesn": [29, 37, 50, 83, 130, 204, 214, 217, 220, 241, 242, 530, 545, 554, 561], "signed": [29, 220, 241, 242], "codestream": [29, 218], "rle_segment_ord": [29, 217], "big": [29, 33, 34, 37, 45, 130, 131, 140, 141, 142, 146, 150, 151, 157, 181, 214, 217, 220, 222, 239, 250, 459, 485, 530, 550, 551, 563], "pylibjpeg": [29, 36, 44, 45, 130, 216, 220, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 530, 546, 548, 551, 561], "byteord": [29, 33, 34, 563], "guid": [30, 34, 39, 43, 130, 522, 530, 542, 548, 555, 556, 561], "intend": [30, 34, 36, 37, 130, 219, 237, 554], "advanc": [30, 39, 237], "who": [30, 530, 536, 537], "support": [30, 34, 42, 47, 69, 70, 79, 96, 130, 156, 157, 170, 204, 205, 212, 213, 214, 215, 216, 217, 218, 220, 237, 239, 519, 530, 531, 539, 540, 541, 542, 543, 545, 546, 548, 549, 550, 551, 558, 559, 560, 561, 562], "provid": [30, 34, 37, 40, 41, 46, 51, 96, 127, 130, 140, 142, 146, 204, 214, 216, 217, 220, 237, 519, 530, 537, 557, 560, 561, 562], "cover": [30, 34, 556, 558, 561, 563], "mechan": [30, 34, 220, 237], "unencod": [30, 34, 237], "least": [30, 34, 37, 242, 515, 558], "is_avail": [30, 34, 96, 204, 212, 213, 214, 215, 216, 217, 220, 237, 519, 530, 541], "signatur": [30, 34, 156, 157, 530, 546], "met": [30, 34, 164, 204, 212, 213, 214, 215, 216, 217, 519, 530, 541], "decoder_depend": [30, 220], "tupl": [30, 34, 41, 44, 46, 84, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 130, 133, 138, 140, 142, 143, 146, 147, 151, 157, 160, 203, 219, 220, 237, 243, 245, 246, 493, 530, 533, 542, 561], "rlelossless": [30, 34, 36, 44, 130, 554, 561], "jpeg2000": [30, 34, 45, 143, 239, 530, 541, 543], "pillow": [30, 34, 45, 49, 130, 215, 228, 229, 230, 231, 530, 539, 541, 543, 545, 548, 551, 554], "imagecodec": [30, 34], "gdcm": [30, 34, 36, 44, 45, 130, 212, 228, 229, 230, 231, 232, 233, 234, 235, 238, 530, 533, 539, 542, 546, 548, 549, 551, 561], "runner": [30, 219], "decoderunn": 30, "bytearrai": [30, 130, 154, 157, 218, 219, 220], "worth": [30, 219], "indirectli": 30, "get_opt": [30, 219], "At": [30, 34, 554, 562], "minimum": [30, 34, 36, 194], "transfer_syntax_uid": [30, 34, 130], "grayscal": [30, 34, 36, 37, 51], "4095": [30, 34, 37, 237], "65535": [30, 34, 37, 237, 558], "ybr_full": [30, 34, 36, 37, 51, 211, 214, 216, 218, 220, 237, 241, 242, 530, 543, 549], "condition": [30, 563], "signal": 30, "done": [30, 44, 554, 555, 556, 561], "set_opt": [30, 219], "successfulli": [30, 146], "fail": [30, 96, 530, 533, 534, 539, 554, 555, 558], "caus": [30, 496, 530, 532, 558], "awar": [30, 53, 558], "affect": [30, 212, 213, 214, 215, 216, 217, 218, 554, 555], "add_plugin": [30, 34, 220, 237], "plugin_label": [30, 34], "my_decoder_func": 30, "my_packag": [30, 34], "rlelosslessdecod": 30, "my_decod": 30, "plugin": [31, 35, 44, 45, 130, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 530, 548, 549, 553, 560, 561], "anyth": [32, 46, 50, 51, 218], "ascii": [32, 173, 199, 530, 542], "decim": [32, 80, 100, 487, 488, 489, 491, 492, 496, 497, 530, 536, 537, 548], "depth": [32, 40, 49, 51, 171, 530, 543, 560], "even": [32, 46, 50, 137, 139, 144, 160, 165, 218, 220, 241, 530, 546, 556, 558, 561], "correctli": [32, 46, 53, 96, 170, 212, 213, 530, 533, 536, 539, 540, 542, 543, 546, 548, 549, 550, 551, 554], "empti": [32, 127, 130, 131, 134, 140, 142, 143, 145, 146, 147, 154, 218, 243, 488, 489, 493, 512, 530, 531, 539, 542, 543, 544, 545, 546, 548, 551, 556, 558, 563], "multivalu": [32, 59, 81, 199, 200, 499, 500, 501, 502, 503, 506, 514, 517, 518, 530, 536], "accord": [32, 53, 160, 192, 556, 558], "od": [32, 181, 530, 539, 540, 548], "OF": [32, 181, 530, 545], "ol": [32, 181, 530, 539, 540, 548], "st": [32, 43], "ur": [32, 511], "ut": 32, "never": [32, 80, 130, 554], "greater": [32, 37, 130, 139, 144, 218, 484, 530, 539, 557], "hint": 32, "union": 32, "mutablesequ": [32, 75, 128, 130, 158, 161, 166, 167, 498, 499, 500, 501, 502, 503, 506, 508, 509, 512, 514, 516, 517, 518], "AT": [32, 499, 530, 543, 548, 550], "attribut": [32, 37, 46, 68, 83, 127, 129, 130, 131, 132, 154, 156, 157, 169, 170, 171, 181, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 244, 459, 486, 488, 489, 490, 491, 492, 493, 494, 495, 530, 531, 541, 546, 549, 550, 551, 556, 558], "basetag": [32, 41, 59, 84, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 129, 130, 131, 132, 133, 158, 160, 161, 164, 170, 174, 176, 177, 178, 241, 242, 245, 246, 247, 499, 515, 530, 533, 548], "dsfloat": [32, 59, 487, 501, 530, 548], "dsdecim": [32, 59, 87, 487, 501, 530, 548], "doubl": [32, 39, 51, 130, 214, 218, 525, 526, 530, 543], "ov": [32, 181, 530, 543, 548], "word": [32, 39, 53, 108, 187, 493, 556], "short": [32, 515, 554, 556], "sv": [32, 519, 530, 543], "uc": [32, 516, 530, 539], "unlimit": 32, "identifi": [32, 37, 42, 46, 53, 190], "uri": [32, 130, 530, 546, 557], "url": [32, 39], "uv": [32, 519, 530, 543], "config": [32, 42, 492, 514, 522, 530, 536, 541, 542, 543, 545, 546, 548, 551], "datetime_convers": [32, 500, 502, 508, 522], "use_ds_decim": [32, 81, 501, 522, 530, 545], "rlelosslessencod": [33, 34, 36, 530, 548, 551], "tutori": [34, 39, 43, 530, 543, 553, 554, 555, 556, 558, 561, 563], "foo": 34, "kwarg": [34, 130, 132, 155, 157, 170, 181, 219, 220, 237, 241, 242, 486, 490, 493, 494, 561], "multi": [34, 37, 45, 51, 59, 81, 127, 130, 137, 140, 142, 143, 144, 145, 146, 147, 170, 203, 204, 218, 219, 220, 237, 241, 242, 511, 522, 530, 539, 541, 543, 545, 556, 563], "complement": [34, 37, 40, 237], "encoder_depend": [34, 237], "my_encoder_func": 34, "my_encod": 34, "rle": [35, 37, 44, 45, 51, 130, 137, 138, 143, 216, 217, 218, 236, 238, 239, 240, 412, 530, 541, 542, 548, 549, 551, 560, 561], "lossless": [35, 37, 44, 45, 51, 130, 137, 138, 143, 216, 217, 218, 225, 226, 229, 232, 233, 234, 235, 236, 238, 239, 240, 530, 545, 548, 549, 561], "underli": 36, "algorithm": [36, 484], "packbit": 36, "scheme": [36, 158, 506, 507, 513, 516, 517, 562, 563], "explan": 36, "relationship": [36, 170, 555], "glossari": [36, 38], "palett": [36, 37, 47, 104, 168, 170, 205, 218, 530, 543, 545], "intens": [36, 37], "white": [36, 530, 538], "black": [36, 530, 551], "index": [36, 41, 51, 52, 130, 146, 170, 171, 172, 208, 209, 210, 218, 219, 220, 237, 242, 519, 530, 546, 551, 555, 563], "red": [36, 37, 205, 218, 530, 545, 554, 555], "green": [36, 37, 530, 545], "blue": [36, 37, 530, 545], "lookup": [36, 51, 111, 112, 113, 115, 116, 126, 205, 206, 207, 208, 209, 218, 530, 546, 556], "noth": [36, 558], "equal": [36, 37, 139, 144, 530, 540, 541, 542], "keep": [36, 170, 558, 560], "mind": 36, "lossi": [36, 45, 143, 218, 233], "inclus": [36, 37], "downscal": 36, "accordingli": [36, 130], "both": [36, 42, 43, 75, 80, 81, 96, 147, 170, 209, 218, 530, 532, 539, 542, 545, 551, 557], "made": [36, 130, 139, 143, 170, 181, 530, 532, 533, 545, 554, 555, 558], "might": [36, 46, 237, 563], "ask": [36, 43, 553, 554, 555], "why": [36, 561], "vice": [36, 181, 205, 218], "versa": [36, 181, 205, 218], "answer": [36, 553, 556, 561], "higher": [36, 38, 130, 146, 530, 533, 557], "befor": [36, 45, 46, 90, 127, 130, 160, 171, 178, 209, 210, 218, 219, 220, 530, 533, 536, 537, 539, 542, 554, 555, 556, 558, 561, 563], "decis": 36, "known": [36, 37, 41, 42, 46, 51, 55, 83, 95, 127, 128, 130, 205, 218, 246, 530, 540, 543, 545, 546, 548, 556, 562], "20x": [36, 44, 530, 548], "slower": [36, 44, 218], "place": [36, 37, 44, 45, 130, 530, 539, 556, 558], "samplesperpixel": [36, 214, 216, 217, 218, 530, 536, 541, 561], "bitsalloc": [36, 45, 127, 214, 216, 217, 218, 530, 541], "pixelrepresent": [36, 214, 216, 217, 218, 530, 542], "rgb_color": [36, 68], "921600": 36, "424152": 36, "pixel_data_handl": [36, 50, 51, 130, 520, 522, 530, 541, 548, 551], "convert_color_spac": [36, 51, 218, 522, 530, 548], "ybr": [36, 51, 530, 548], "187460": 36, "retir": [37, 108, 115, 127, 130, 179, 180, 241, 242, 250, 459, 530, 546], "techniqu": [37, 43], "iec": [37, 211, 218, 344, 349, 352, 484], "10918": [37, 211, 218, 352, 530, 548], "unencapsul": 37, "henc": [37, 181], "public": [37, 130, 181], "compon": [37, 45, 79, 143, 171, 173, 216, 218, 493, 530, 531, 533, 548], "previous": [37, 162, 530, 541, 545, 548], "constrain": 37, "iod": [37, 181, 218, 558, 563], "remain": [37, 144, 170, 530, 536, 555], "hand": [37, 53, 530, 546], "ybr_rct": [37, 44, 216, 561], "transform": [37, 51], "prior": [37, 44, 144, 181, 220, 530, 551, 561], "taken": [37, 130, 140, 142, 146, 218], "account": 37, "especi": [37, 53, 554], "determin": [37, 41, 50, 127, 130, 170, 206, 207, 218, 530, 551, 558, 563], "invers": 37, "ybr_partial_420": 37, "ybr_ict": [37, 216], "restrict": 37, "further": [37, 558, 562], "constraint": [37, 488, 489, 496], "r1": 37, "g1": 37, "b1": 37, "r2": 37, "g2": 37, "b2": 37, "rn": 37, "gn": 37, "bn": 37, "contigu": 37, "typic": [37, 95, 135, 561], "32": [37, 130, 133, 138, 147, 214, 217, 218, 519, 530, 540, 548, 551, 563], "being": [37, 102, 111, 112, 113, 115, 116, 119, 121, 122, 123, 126, 130, 144, 157, 217, 237, 530, 531, 541, 548, 549, 551, 558, 560, 561], "mean": [37, 45, 217, 484, 554, 556, 558, 561, 562], "chapter": [37, 484], "mani": [37, 42, 49, 51, 137, 138, 140, 141, 530, 532, 536, 537, 551, 553], "most": [37, 41, 42, 45, 49, 53, 84, 220, 241, 242, 530, 533, 536, 537, 556, 558, 561, 562], "signific": [37, 42, 498, 509, 511, 530, 533], "past": [37, 144, 165, 194], "familiar": [38, 39, 556, 558, 561, 563], "document": [38, 42, 130, 168, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 534, 539, 540, 551, 553, 559], "reader": 39, "unfamiliar": 39, "step": [39, 530, 537, 548, 558, 562, 563], "achiev": [39, 139], "understand": [39, 41, 554, 563], "aim": [39, 530, 546], "explain": 39, "subject": [39, 557, 562], "fairli": 39, "technic": [39, 40], "api": [39, 220, 237, 241, 242, 530, 540, 554, 557, 561, 562], "learn": [39, 43, 554, 558], "remind": 39, "about": [39, 41, 42, 43, 49, 51, 53, 93, 218, 556, 558, 561, 563], "italic": 39, "lowercas": 39, "uppercas": [39, 127], "capit": [39, 530, 536], "american": 39, "english": 39, "spell": [39, 75, 530, 541], "hex": [39, 50, 127, 130, 133, 530, 533], "comma": 39, "ital": 39, "seq": [39, 556], "try": [39, 96, 179, 180, 219, 530, 534, 542, 556, 558], "gender": 39, "neutral": 39, "pronoun": 39, "hypothet": 39, "tick": 39, "markup": [39, 555], "0xb4": 39, "built": [39, 560], "pass": [39, 41, 44, 50, 51, 91, 103, 104, 106, 132, 137, 138, 203, 530, 533, 554, 555, 558, 561], "fragments_per_fram": [39, 137], "haven": [39, 554, 556], "docstr": [39, 554], "initi": [39, 43, 131, 132, 133, 176, 177, 203, 218, 243, 493, 554], "proper": [39, 530, 533], "noun": 39, "wrap": [39, 41, 157, 181], "unless": [39, 164, 171, 530, 534, 545, 558], "good": [39, 53, 554, 555], "reason": [39, 555], "link": [39, 555], "better": [39, 530, 534, 536, 540], "attr": 39, "dtype": [39, 41, 50, 51, 52, 130, 216, 218, 219, 237, 561], "chtml": 39, "part05": [39, 555], "sect_6": 39, "html": [39, 555], "nema": 39, "org": [39, 49, 557], "four": [39, 96, 170, 178], "five": [39, 493], "warn": [39, 42, 53, 55, 75, 76, 78, 83, 84, 218, 522, 530, 532, 536, 540, 541, 542, 543, 545, 548, 549, 551, 554, 555], "sparingli": 39, "featur": [39, 42, 530, 538, 553, 554], "versionad": 39, "versionchang": 39, "handler": [39, 44, 45, 51, 79, 93, 96, 130, 204, 212, 213, 214, 215, 216, 217, 218, 237, 519, 522, 530, 539, 541, 543, 544, 545, 546, 548, 549, 551, 554, 557, 561], "instal": [40, 42, 45, 49, 96, 216, 530, 531, 538, 548, 555, 556, 559, 561, 563], "intermedi": [40, 41], "core": [40, 47], "mostli": [41, 129], "behav": [41, 42, 110, 203, 530, 540, 542, 558], "via": [41, 44, 55, 127, 130, 216, 530, 539, 541, 546, 548, 549, 551, 557, 558, 561], "entir": [41, 130, 160, 163, 212, 216, 220, 241, 242, 554, 556, 561], "collaps": [41, 50], "dcm_qt_tree": [41, 530, 537, 538], "0x10": [41, 127, 130, 245], "squar": [41, 46, 556], "bracket": [41, 46, 556], "around": [41, 530, 551, 554], "conveni": [41, 46, 51, 127, 530, 546, 551, 557], "cannot": [41, 45, 84, 130, 170, 181, 203, 492, 496, 530, 548, 554, 558], "retriev": [41, 111, 112, 113, 116, 117, 118, 119, 121, 122, 123, 126, 127, 130, 530, 543, 551, 556, 557], "12345": [41, 130], "member": 41, "numer": [41, 170, 172, 512, 530, 534, 543, 548, 550], "begin": [41, 99, 137, 150, 165], "Or": [41, 560], "beam1": 41, "wai": [41, 42, 43, 48, 50, 51, 53, 130, 530, 536, 551, 553, 556, 557, 558, 560, 562], "thing": [41, 50, 555, 556], "much": [41, 496, 530, 533, 536, 537, 545], "harder": 41, "realli": [41, 530, 533, 542], "0x300a": 41, "0xb0": 41, "0xc2": 41, "rememb": [41, 46, 50], "exact": [41, 488, 489, 491, 492], "handi": 41, "dir": [41, 43, 130, 530, 536, 549, 555, 562], "dure": [41, 46, 108, 530, 549, 551, 554, 555], "session": [41, 42, 43, 46, 130, 555], "prompt": 41, "pat": 41, "patientsetupsequ": [41, 43], "patientsex": [41, 130], "anywher": [41, 556], "insensit": [41, 130], "_dicom_dict": 41, "necessari": [41, 42, 49, 139, 144, 493, 558, 563], "add_dict_entri": [41, 46, 110, 530, 539, 542], "similarli": [41, 487, 556], "hood": 41, "offici": [41, 111, 112, 113, 114, 115, 116, 117, 124, 125, 126, 127, 459, 530, 536, 537, 556, 563], "reload": 41, "0x0010": [41, 130, 245, 556], "softwarevers": 41, "0x0018": 41, "0x1020": 41, "pixel_byt": 41, "175": 41, "166": 41, "203": [41, 224, 239, 250, 327, 344], "207": 41, "216": 41, "186": 41, "183": 41, "157": 41, "181": 41, "184": 41, "171": 41, "152": 41, "164": 41, "235": 41, "906": 41, "910": 41, "923": 41, "922": 41, "929": 41, "927": 41, "914": 41, "954": 41, "938": 41, "942": [41, 530, 543], "925": 41, "905": [41, 51], "959": 41, "916": [41, 530, 533], "911": 41, "904": 41, "909": 41, "int16": [41, 51, 52, 563], "extens": [41, 77, 131, 530, 541, 548], "effect": [41, 144, 484], "behavior": [41, 42, 55, 83, 84, 95, 130, 530, 537, 541, 545, 546], "enforc": [41, 47, 203, 530, 536], "expect": [41, 140, 142, 146, 204, 212, 214, 217, 218, 219, 220, 241, 242, 530, 540, 542, 546, 550, 554], "t1": 41, "0x00100010": [41, 127, 130], "equival": [41, 130, 140, 142, 146, 218, 219, 530, 540], "t2": 41, "t3": 41, "t4": 41, "portion": 41, "is_priv": [41, 127, 169, 244, 459, 530, 539], "odd": [41, 130, 133, 204, 218, 219, 220, 244, 530, 540, 549, 551, 556], "prettier": 41, "select": [41, 130, 143, 235], "There": [42, 48, 49, 51, 530, 541, 554, 555, 556, 557, 563], "against": [42, 127, 170, 530, 535, 546], "turn": [42, 93, 161, 530, 546], "enabl": [42, 92, 130], "reading_validation_mod": [42, 55, 75, 76, 78, 94, 128, 130, 530, 549], "writing_validation_mod": [42, 55, 78, 530, 549], "newli": [42, 130, 530, 545], "ignor": [42, 55, 75, 83, 84, 110, 127, 130, 174, 513, 522, 530, 544, 548, 551, 555], "rais": [42, 55, 75, 76, 78, 80, 81, 83, 84, 96, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 121, 122, 123, 128, 130, 132, 133, 134, 144, 147, 153, 157, 160, 162, 165, 170, 178, 179, 181, 194, 203, 204, 212, 213, 214, 215, 216, 217, 218, 220, 237, 247, 484, 496, 501, 503, 515, 522, 530, 534, 535, 540, 542, 543, 546, 548, 549, 551, 556, 558, 561], "As": [42, 45, 46, 556, 562], "suggest": [42, 553, 554, 555], "except": [42, 46, 50, 51, 55, 75, 83, 84, 85, 96, 130, 153, 168, 170, 181, 194, 203, 220, 247, 522, 530, 533, 535, 538, 539, 542, 543, 546, 548, 549, 551, 554, 556, 558, 561], "special": [42, 59, 522, 530, 537], "avoid": [42, 102, 161, 178, 487, 530, 542, 543, 546, 558], "invalid": [42, 55, 75, 76, 84, 88, 89, 134, 218, 484, 530, 542, 546, 548, 550, 551], "legaci": 42, "strictli": [42, 49], "adher": 42, "guarante": [42, 45, 46], "predefin": 42, "That": [42, 46], "local": [42, 68, 105, 530, 549, 554, 555, 556, 560], "balanc": 42, "evolut": 42, "break": [42, 530, 546, 558], "sometim": [42, 46, 530, 541, 551], "improv": [42, 530, 537, 540, 541, 548, 550, 553], "protect": 42, "upcom": [42, 95], "compat": [42, 44, 530, 533, 534, 536, 537, 538, 539, 551, 560], "next": [42, 46, 95, 130, 161, 170, 171, 530, 533, 546, 558, 563], "simplest": [42, 558, 560], "pydicom_futur": [42, 530, 546], "temporarili": 42, "linux": [42, 530, 539, 555, 560], "future_behavior": [42, 522, 530, 546], "again": [42, 43, 53, 554, 558], "anoth": [42, 211, 218, 530, 546, 556, 561], "txt": [42, 556], "virtual": [42, 560], "brief": 43, "overview": [43, 558], "pure": 43, "report": [43, 530, 543, 553, 559], "radiotherapi": [43, 168], "easi": [43, 51], "complex": [43, 51], "natur": 43, "helper": [43, 133], "filedataset": [43, 48, 68, 105, 160, 164, 181, 522, 530, 533, 535, 548, 549, 551, 556, 558], "supin": 43, "prone": 43, "hfp": 43, "rtplan2": 43, "fetch": [43, 44, 51, 561], "0182": 43, "01b2": 43, "patientposit": 43, "thorough": 43, "server": [43, 555], "pynetdicom": 43, "primarili": [43, 530, 534], "design": [43, 53, 562], "let": [43, 44, 530, 543, 554, 555, 556, 558, 561], "wherev": 43, "alter": [43, 53], "intellig": 43, "decompress": [43, 44, 45, 130, 215, 530, 539, 543, 560, 561], "onc": [43, 44, 46, 81, 108, 110, 554, 555, 561, 562], "kind": [43, 46], "discuss": [43, 554, 558], "question": [43, 553], "give": [43, 496, 530, 532, 533, 556, 561], "feedback": [43, 530, 537], "bug": [43, 534, 538, 542, 545, 548, 553, 554, 560], "tracker": [43, 553, 554], "major": [43, 47, 95, 546], "fix": [43, 161, 538, 553, 554, 556], "announc": [43, 96], "ll": [44, 554, 555, 556, 561, 563], "reli": [44, 45, 79], "separ": [44, 99, 127, 130, 137, 138, 493, 530, 533, 534, 561], "amount": [44, 130, 212, 219, 561, 563], "too": [44, 130, 133, 515, 530, 540, 542, 543, 553], "extend": [44, 45, 130, 137, 138, 140, 142, 146, 219, 231, 239, 243, 530, 546, 551, 561], "relev": [44, 179, 180, 181, 554], "encap": [44, 168, 522, 530, 539, 541, 551, 561], "encapsulate_extend": [44, 137, 530, 546, 551, 561], "jpeg2000lossless": [44, 561], "third_party_compression_func": [44, 561], "appropri": [44, 50, 51, 130, 165, 203, 216, 517, 561], "ct_compressed_bas": [44, 561], "extendedoffsett": [44, 138, 561], "extendedoffsettablelength": [44, 138, 561], "ct_compressed_ext": [44, 561], "ct_rle_lossless": [44, 130, 561], "encoding_plugin": [44, 130, 237, 561], "Will": [44, 108], "implicitli": [44, 561], "explicitli": [44, 50, 51, 87, 530, 541, 548, 558, 561], "jpeg2k": [44, 68, 530, 541, 561], "us1_rl": 44, "j2k": [44, 530, 551], "up": [44, 50, 51, 130, 157, 170, 171, 178, 181, 216, 484, 493, 518, 530, 533, 537, 539, 554, 555, 556, 559, 560, 561], "abl": [45, 46, 530, 545, 551, 557, 558, 561, 563], "ideal": 45, "jpeg_l": [45, 130, 213, 530, 539, 551], "libjpeg": [45, 530, 551, 560], "openjpeg": [45, 560], "capac": 45, "mention": [45, 556], "Be": 45, "verifi": [45, 530, 536], "purpos": 45, "far": [45, 127], "deflat": [45, 214, 221, 239, 459, 530, 545], "57": [45, 143, 218, 234, 239, 250, 350, 352, 530, 541, 546, 551], "sv1": [45, 218, 239, 530, 545], "70": [45, 143, 218, 235, 239, 250, 334, 351, 352, 530, 545, 546, 551], "81": [45, 52, 143, 218, 233, 239, 250, 348, 349, 394, 530, 534], "92": [45, 143, 250, 343, 344, 530, 540, 541], "93": [45, 52, 143, 250, 342, 344, 530, 535, 541], "jpegimageplugin": 45, "jpeg2kimageplugin": 45, "5x": [45, 530, 548], "faster": [45, 530, 533, 545, 548], "adapt": [45, 530, 541], "v1": [46, 530, 540, 541, 542, 563], "easier": [46, 131, 530, 551, 555], "outlin": 46, "preced": [46, 530, 551], "reserv": 46, "thu": [46, 530, 531], "necessarili": [46, 50, 530, 551], "enclos": 46, "clear": [46, 127, 130, 170, 530, 551], "0x00091001": 46, "privateblock": [46, 130, 522], "0x0009": [46, 130], "compani": 46, "accomplish": 46, "0x000b": 46, "000b": 46, "add_new_priv": [46, 130, 530, 551], "latest": [46, 560], "encount": [46, 88], "newer": 46, "common": [46, 48, 52, 53, 75, 530, 541, 558, 563], "handl": [46, 47, 51, 53, 75, 96, 127, 130, 177, 195, 520, 522, 525, 530, 531, 534, 536, 538, 539, 540, 541, 542, 543, 545, 546, 548, 549, 550, 551, 556, 557, 560], "0x888800001": 46, "somenewtag": 46, "analog": [46, 130], "0x004100001": 46, "lut": [47, 49, 205, 206, 207, 208, 209, 210, 218, 530, 543, 545, 546, 548], "voi": [47, 208, 209, 210, 218, 530, 543, 546], "overlai": [47, 51, 68, 130, 218, 522, 530, 543, 546, 551, 556], "overlay_arrai": [47, 130, 530, 543], "precondit": 47, "third": [47, 493, 560], "parti": [47, 493, 560], "pil": [47, 530, 533, 541], "wxpython": [47, 530, 533], "practic": [47, 68, 170], "futur": [47, 95, 130, 237, 530, 536, 546, 562], "proof": [47, 95], "fileread": [48, 69, 201, 522, 555, 556], "fine": 48, "read_parti": [48, 69, 160, 201, 556], "preexist": 48, "mainli": [49, 130, 530, 537], "concern": 49, "often": [49, 51, 108, 557], "desir": [49, 203, 211, 218], "sever": [49, 55, 530, 537, 539], "stdlib": 49, "2d": [49, 530, 546], "axesimag": 49, "thank": [49, 530, 533, 536], "roi": 49, "key": 49, "pydicom_tkint": 49, "contrib": [49, 533, 553], "come": 49, "photoimag": 49, "pydicom_pil": 49, "imview": 49, "60xx": [50, 204, 218, 530, 543, 556], "3000": [50, 130, 204, 206, 207, 218, 530, 543, 556], "6000": 50, "6002": 50, "601e": 50, "0x6000": [50, 204, 556], "0x3000": 50, "29282": 50, "tend": [50, 560], "lazi": 50, "unpack": [50, 218, 220, 241, 242, 512, 530, 541, 549], "uint8": [50, 205, 206, 207, 208, 209, 218], "484": 50, "align": 50, "pack_bit": [50, 218, 530, 541, 546], "numpy_handl": [50, 96, 522, 530, 548], "packed_byt": 50, "temp": [50, 51], "reduc": [50, 51, 172, 211, 218, 530, 541, 546, 551, 558, 561], "512x512": [50, 51], "256x256": [50, 51], "bulk": [51, 127, 130, 522, 525, 530, 543, 544, 547, 557], "although": [51, 170, 558], "almost": 51, "parametr": [51, 554], "map": [51, 127, 130, 168, 530, 551, 555], "interchang": [51, 558], "mr_small": [51, 68], "x89": 51, "x03": 51, "xfb": 51, "xcb": 51, "xeb": 51, "xf9": 51, "x02": 51, "x94": 51, "x7f": 51, "immedi": 51, "varieti": 51, "broken": 51, "fragment": [51, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 530, 543, 551], "1227": 51, "302": 51, "304": 51, "328": 51, "628": 51, "770": 51, "907": 51, "298": 51, "331": 51, "355": 51, "498": [51, 397, 398, 484, 530, 540], "566": 51, "706": 51, "280": 51, "334": 51, "431": 51, "1094": 51, "1068": 51, "1083": 51, "339": 51, "377": 51, "413": 51, "1318": 51, "1346": 51, "1336": 51, "378": 51, "374": 51, "422": 51, "1369": 51, "1129": 51, "862": 51, "straightforward": 51, "particularli": [51, 53], "300": 51, "shrunk": 51, "apply_color_lut": [51, 218, 522, 530, 543], "palette_color": [51, 68], "pet": [51, 205, 218], "possibli": [51, 130, 220], "physic": [51, 558], "quantiti": [51, 519, 563], "hounsfield": 51, "unit": [51, 130, 160, 204, 218, 219, 519, 554, 563], "apply_modality_lut": [51, 208, 209, 210, 218, 522, 530, 543, 545], "hu": 51, "apply_voi_lut": [51, 218, 522, 530, 543, 545, 546], "voic": 52, "audio": [52, 563], "lead": [52, 55, 68, 488, 489, 498, 530, 534, 539, 550, 563], "ecg": [52, 68, 563], "5400": [52, 130, 519, 563], "consist": [52, 131, 181, 530, 536, 555, 561, 563], "synchronis": [52, 563], "003a": [52, 130, 519, 563], "001a": 52, "waveformdata": [52, 563], "240000": [52, 563], "multiplex_1": 52, "112": 52, "25": [52, 421, 484], "68": [52, 432, 452, 453], "106": [52, 250, 373, 374, 375], "62": 52, "37": 52, "131": [52, 254], "137": 52, "10000": [52, 563], "multiplex_2": 52, "1200": [52, 530, 546, 563], "multiplex_arrai": [52, 130, 519, 530, 546, 563], "55": [52, 530, 533], "65": [52, 268], "85": 52, "60": [52, 530, 537, 548], "110": [52, 530, 536], "coupl": [53, 558], "truli": 53, "certain": [53, 130, 218, 555, 556], "tool": [53, 530, 551], "look": [53, 179, 180, 554, 555, 556], "approxim": 53, "tricki": 53, "de": 53, "xxx": 53, "524288": 53, "bigger": [53, 530, 545], "potenti": 53, "disadvantag": 53, "sai": [53, 554, 556], "wrote": 53, "quit": [53, 530, 533, 554], "switch": [53, 88, 530, 534, 536, 538, 543, 545, 548, 550, 554, 555], "individu": [53, 211, 218, 493, 530, 536, 546, 548], "code_fil": 53, "previou": [53, 171, 172, 530, 536, 539, 545, 546, 551], "certainli": 53, "difficult": [53, 554], "singleton": 55, "infer_sq_for_un_vr": [55, 530, 549], "undefin": [55, 127, 144, 158, 174, 530, 535, 546, 549], "conform": [55, 127, 130, 170, 173, 181, 194, 201, 217, 530, 539, 541, 542, 556, 558, 561], "failur": [55, 530, 545, 551, 554], "longer": [55, 81, 127, 214, 530, 540, 541, 543, 546, 548, 551, 558], "bypass": [55, 237], "dataelem": [59, 77, 130, 162, 180, 196, 197, 517, 522, 530, 542, 545, 556], "dataelement_from_raw": [59, 556], "rawdatael": [59, 90, 128, 130, 131, 132, 158, 162, 192, 517], "tag_in_except": 59, "tupletag": [59, 530, 533], "convert_ae_str": 59, "convert_atvalu": 59, "convert_da_str": 59, "convert_ds_str": 59, "convert_dt_str": 59, "convert_is_str": 59, "convert_numb": [59, 179, 180], "convert_obvalu": 59, "convert_owvalu": 59, "convert_pn": 59, "convert_single_str": 59, "convert_sq": 59, "convert_str": 59, "convert_tag": 59, "convert_text": 59, "convert_tm_str": 59, "convert_ui": 59, "convert_un": 59, "convert_ur_str": 59, "convert_valu": 59, "multi_str": [59, 69], "multiv": [59, 522, 556], "is_valid_d": [59, 530, 548], "format_number_as_d": [59, 530, 548], "isfloat": [59, 530, 550], "rt_plan": 68, "rt_dose": [68, 558], "rtdose": 68, "rt_ss": 68, "rtstruct": 68, "siemen": 68, "withoverlai": 68, "waveform_ecg": 68, "us1_uncr": 68, "obxxxx1a": 68, "us1_j2kr": 68, "data_element_gener": [69, 161], "data_element_offset_to_valu": 69, "read_deferred_data_el": 69, "read_file_meta_info": [69, 131], "read_preambl": [69, 201, 556], "read_sequ": 69, "read_sequence_item": 69, "filewrit": [69, 130, 522, 556], "correct_ambiguous_vr": 69, "correct_ambiguous_vr_el": 69, "write_atvalu": 69, "write_da": 69, "write_dataset": [69, 530, 551], "write_data_el": 69, "write_dt": 69, "write_file_meta_info": [69, 181], "write_numb": 69, "write_number_str": 69, "write_obvalu": 69, "write_owvalu": 69, "write_pn": [69, 530, 540], "write_sequ": 69, "write_sequence_item": 69, "write_str": 69, "write_text": 69, "write_tm": 69, "write_ui": 69, "write_un": 69, "dicombytesio": [69, 156, 530, 551], "dicomio": [69, 144, 147, 152, 154, 156, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 530, 551], "fileutil": [69, 522], "absorb_delimiter_item": 69, "find_byt": [69, 176, 177, 530, 537], "find_delimit": [69, 177], "length_of_undefined_length": 69, "read_undefined_length_valu": 69, "mistak": 75, "stand": 75, "alon": 75, "respect": [75, 92, 530, 540], "lookuperror": [75, 76], "delimit": [76, 143, 144, 145, 174, 176, 177, 178, 182, 518, 530, 546, 548], "reset": [76, 95, 97, 130, 146, 151], "loss": [76, 78, 488, 489, 496, 530, 546], "unicodedecodeerror": 76, "dicom_character_set": 77, "unicodeencodeerror": 78, "precis": [79, 87, 218, 488, 489, 493, 496, 530, 548], "use_decimal_boolean": 80, "valueerror": [80, 81, 83, 84, 105, 106, 107, 108, 109, 110, 130, 132, 133, 134, 144, 147, 162, 170, 181, 194, 204, 214, 217, 218, 220, 484, 496, 501, 503, 515, 530, 551, 558, 561], "use_ds_numpi": [80, 501, 522, 530, 545], "use_numpi": 81, "__setattr__": 83, "camel": [83, 530, 546], "neither": [83, 84, 170, 206, 207, 209, 218], "nor": [83, 84], "citizen": [83, 127, 130, 556], "ok": [83, 84, 170, 554], "patientsnam": [83, 84], "1895": 83, "__contains__": [84, 530, 546], "0x100100010": 84, "traceback": [84, 247, 556, 558, 561], "recent": [84, 554, 555, 556, 558, 561], "stdin": [84, 556, 558, 561], "494": 84, "msg": [84, 556], "exc": 84, "occur": [85, 86, 530, 543, 554, 558], "digit": [87, 133, 195, 563], "round": [87, 218], "writer": 88, "elementcallback": 90, "callabl": [90, 127, 130, 158, 161, 164, 168, 203, 219, 518], "everi": [90, 218, 220, 237, 558, 563], "data_element_callback": [91, 97, 522], "anymor": 92, "manual": [92, 181], "debug_on": 93, "default_handl": 93, "log": [93, 130, 530, 536, 549, 554], "logger": [93, 530, 537, 551], "streamhandl": 93, "deprec": [94, 95, 130, 135, 136, 143, 144, 145, 147, 152, 181, 535, 536, 540, 541, 542, 545, 546, 548, 549, 550], "enable_futur": 95, "imit": 95, "becom": [95, 530, 536, 546, 554, 555, 558], "emul": [95, 130], "invalid_keyword_behavior": [95, 522, 530, 546], "invalid_key_behavior": [95, 522, 530, 546], "gdcm_handler": 96, "pillow_handl": [96, 554], "jpeg_ls_handl": 96, "pylibjpeg_handl": 96, "rle_handl": [96, 530, 549, 551], "convert_pixel_data": [96, 130], "extract": 96, "shall": [96, 130, 139, 143, 144, 147, 148, 149, 158, 181, 194], "supports_transfer_syntax": [96, 212, 213, 214, 215, 216, 217], "transfer_syntax": [96, 212, 213, 214, 215, 217, 219], "get_pixeldata": [96, 212, 213, 214, 215, 216, 217], "1d": [96, 204, 214, 215, 216, 217, 218, 219], "reshap": [96, 204, 216, 218, 219, 220, 241, 242], "dimens": [96, 216, 220, 241, 242], "needs_to_convert_to_rgb": [96, 212, 213, 214, 215, 216, 217], "colourspac": [96, 530, 548], "refus": 96, "fact": [96, 556], "notimplementederror": [96, 130, 213, 214, 215, 217, 218], "global": [98, 530, 549], "ds_decim": [100, 522, 530, 545], "ds_numpi": [101, 522], "absolut": [103, 104, 105, 106, 151, 157, 169, 170, 530, 551], "charset": [103, 522, 530, 550], "extern": [105, 530, 546, 548], "datastor": 105, "0x10021001": [107, 108], "teston": [107, 108], "0x10021002": [107, 108], "testtwo": [107, 108], "perman": 108, "0x00410001": 109, "0x00410002": 109, "ltd": 109, "whose": [111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 126, 220, 241, 242, 493, 496, 554], "keyerror": [111, 112, 113, 115, 116, 117, 118, 121, 122, 123, 128, 130, 530, 551, 556], "get_private_entri": 117, "get_entri": 118, "grouplength": 119, "mask": 120, "file_value_tel": 127, "is_undefined_length": [127, 130, 530, 543], "already_convert": 127, "validation_mod": [127, 459, 487, 488, 489, 491, 492, 493], "joan": [127, 130], "Its": 127, "descripwidth": 127, "35": [127, 130, 172, 318], "0xffffffffl": 127, "ie": 127, "maxbytestodisplai": [127, 530, 542], "showvr": 127, "backslash": [127, 130, 493, 513, 530, 531, 532, 548], "intern": [127, 130, 158, 537], "0xffffffff": 127, "empty_value_for_vr": 127, "empty_valu": 127, "classmethod": [127, 130, 493], "from_json": [127, 130, 530, 543, 546, 557], "dataset_class": 127, "value_kei": 127, "bulk_data_uri_handl": [127, 130, 530, 546, 557], "json": [127, 130, 244, 530, 542, 543, 547, 548, 559], "inlinebinari": [127, 130], "bulkdatauri": [127, 130, 557], "dicomweb": [127, 130, 557], "wado": [127, 130, 557], "is_empti": 127, "ret": 127, "repval": [127, 130], "to_json": [127, 130, 530, 544, 557], "bulk_data_threshold": [127, 130, 530, 544, 557], "bulk_data_element_handl": [127, 130, 557], "dump_handl": [127, 130], "base64": [127, 130, 557], "dump": [127, 130], "to_json_dict": [127, 130, 530, 544, 550, 557], "18": [127, 130, 455, 530, 539, 557], "validate_valu": 127, "raw_data_el": [128, 517], "belong": [128, 130, 169, 170], "value_tel": 129, "is_raw": 129, "undecod": 129, "alia": [129, 530, 546], "mutablemap": [130, 131, 132], "mutabl": 130, "0x00100020": 130, "0x0030": 130, "0x00100030": 130, "linac": 130, "co": [130, 563], "son": 130, "daughter": 130, "0x0041": 130, "john": [130, 493], "0041": 130, "get_private_item": 130, "iteral": [130, 530, 532], "jsonmodel": 130, "ds2": 130, "default_element_format": 130, "default_sequence_element_format": 130, "indent_char": [130, 171], "element_offset": [130, 133], "0xffff": [130, 168, 530, 540], "0x00": [130, 137, 139, 181, 509], "0xff": 130, "decoding_plugin": [130, 220, 237, 241, 242], "encapsulate_ext": 130, "tri": [130, 157, 220, 237, 241, 242, 530, 551], "placehold": [130, 237], "handler_nam": 130, "unabl": [130, 157, 181, 218, 556, 558, 561], "runtimeerror": [130, 216], "shallow": 130, "state": [130, 187, 530, 551, 557], "alphabet": [130, 493, 530, 550], "__getitem__": [130, 556], "unconvert": 130, "increas": [130, 530, 533, 550], "ensure_file_meta": 130, "formatted_lin": [130, 530, 532], "element_format": 130, "sequence_element_format": 130, "indent_format": 130, "json_dataset": 130, "obj": 130, "get_item": [130, 530, 551], "keep_def": [130, 530, 551], "defer": [130, 162, 530, 532, 536, 543, 549, 556], "group_dataset": 130, "v4": [130, 135, 136, 144, 145, 147, 152, 181, 530, 551, 563], "implicit_vr": [130, 181, 459, 485, 530, 551], "little_endian": [130, 181, 459, 485, 530, 551], "is_original_encod": 130, "dict_item": 130, "unlik": 130, "flatten": 130, "dict_kei": 130, "original_character_set": [130, 530, 551], "original_encod": [130, 181, 193, 530, 551], "pop": [130, 530, 542], "tagtyp": 130, "combin": [130, 245, 556, 563], "popitem": 130, "unrealist": 130, "free": 130, "associ": [130, 219], "read_encod": [130, 530, 551], "read_implicit_vr": [130, 530, 551], "read_little_endian": [130, 530, 551], "pathlik": [130, 131, 160, 162, 163, 170, 181, 241, 242, 530, 545], "binaryio": [130, 131, 158, 160, 161, 162, 164, 165, 166, 167, 174, 175, 176, 177, 178, 181, 219, 220, 241, 242, 530, 551], "writeablebuff": [130, 156, 157, 181], "_dataset__write_like_origin": 130, "2006": 130, "write_like_origin": [130, 181, 530, 551], "writeabl": [130, 181, 214, 220, 241, 242, 530, 551], "tell": [130, 131, 140, 141, 142, 146, 150, 151, 156, 157, 160, 181, 530, 532, 551, 555, 558], "isn": [130, 140, 142, 146, 161, 181, 218, 459, 484, 530, 542, 546, 551, 555, 556], "preserv": [130, 181, 530, 538, 545], "preambl": [130, 131, 160, 165, 181, 194, 201, 530, 539, 556], "set_original_encod": 130, "character_encod": 130, "optim": 130, "setdefault": [130, 530, 542, 546], "0x00100040": 130, "suppress_invalid_tag": [130, 530, 550], "threshold": 130, "inlin": [130, 557], "drop": [130, 530, 545, 546], "bubbl": 130, "my_json_dump": 130, "sort_kei": 130, "trait_nam": 130, "ipython": [130, 530, 531], "autocomplet": 130, "valuesview": 130, "visit": [130, 554, 555], "0210": [130, 519, 563], "0211": 130, "filename_or_obj": [131, 162], "readablebuff": [131, 140, 141, 142, 146, 150, 151, 156, 157, 160], "prepend": 131, "0x0002": [131, 181, 241, 242, 556], "fileobj_typ": [131, 162], "timestamp": [131, 162], "modif": [131, 554, 556, 558], "readabl": [131, 140, 141, 142, 146, 150, 151, 160, 530, 551], "rb": [131, 241, 242, 556], "super": 132, "typeerror": [132, 160, 203, 212, 213, 530, 540, 546, 556], "init_valu": 132, "private_creator_el": 133, "block_start": 133, "low": [133, 557], "get_tag": 133, "enforce_standard": [134, 194, 556], "generate_fram": [135, 136, 145, 216, 530, 551], "generate_frag": [135, 136, 144, 152, 530, 551], "continu": [136, 530, 531, 548], "concaten": [136, 147], "togeth": [136, 137, 182], "has_bot": [137, 138], "frame1": 137, "frame2": 137, "exce": [137, 138], "31": 137, "circumst": [137, 138], "strongli": [137, 170, 558], "nr_fragment": [139, 149], "marker": [139, 143, 165, 178, 530, 543, 548], "null": [139, 204, 218, 219, 509], "extended_offset": [140, 142, 146, 219], "suffici": [140, 142, 146], "excess": [140, 142, 146, 530, 542, 551], "latter": [140, 141, 142, 146, 150, 151], "bytestream": [143, 145], "nr_frame": [143, 145], "generate_fragmented_fram": [143, 530, 551], "span": 143, "predict": [143, 235], "Near": [143, 233, 239], "boundari": [143, 530, 551], "eoi": [143, 530, 543], "eoc": [143, 530, 543], "0xffd9": 143, "hasn": [143, 554, 555], "incorrect": [143, 220, 237, 530, 534, 540, 542, 543, 551], "stream": [144, 152, 157, 530, 551, 554], "fffe": [144, 147, 148, 149], "e000": [144, 147, 148, 149], "e0dd": 144, "0x00000000": [144, 147], "presenc": [144, 205, 218, 556], "absenc": 144, "parse_basic_offset": [147, 530, 551], "fe": 147, "e0": 147, "08": 147, "measur": [147, 150, 168], "bot": 147, "ffee": 147, "itemis": 149, "afterward": [151, 554], "appear": [153, 558], "dicm": [153, 165, 181, 194, 201, 556], "mayb": 153, "initial_byt": 154, "memoryview": [154, 157, 219, 220], "wrapper": [154, 156, 157, 530, 545], "simplifi": [154, 156, 530, 532, 536], "iobas": [156, 157], "rawiobas": [156, 157], "destin": [156, 157], "close": [157, 160, 164, 530, 532, 533], "unspecifi": 157, "eof": [157, 178], "fewer": [157, 219, 497], "read_ul": 157, "read_u": 157, "read_exact": 157, "nr_retri": 157, "eoferror": [157, 178], "read_tag": 157, "whenc": 157, "rel": [157, 173, 530, 551], "write_ul": 157, "val": [157, 182, 243, 459, 487, 488, 489, 491, 492, 493, 496, 518, 556], "write_u": 157, "write_tag": 157, "stop_when": [158, 161, 164], "defer_s": [158, 160, 161, 164, 178, 202, 530, 532], "specific_tag": [158, 160, 161, 164, 241, 242, 556], "read_data_el": 158, "stop_before_pixel": [160, 530, 533], "pars": [160, 164, 218, 522, 530, 531, 543, 545, 546, 551], "context": [160, 247, 530, 539, 556], "caller": [160, 530, 533], "respons": [160, 493, 557], "kb": 160, "stop": [160, 164, 530, 533], "subsequ": 160, "invaliddicomerror": [160, 165, 522, 530, 534, 556], "unsupport": [160, 212, 213, 214, 217], "condit": [160, 164, 530, 539], "bytelength": [161, 166], "parent_encod": [161, 193], "at_top_level": 161, "itemdelimitertag": 161, "call_back": 161, "heurist": [161, 530, 539], "raw_data_elem": 162, "persist": 162, "st_mtime": 162, "oserror": 162, "meant": [163, 201], "quickli": [163, 558], "fileobj": [164, 556], "reach": [164, 176, 178, 219], "assess": 168, "_define_assess": 168, "doc": [168, 555], "_define_encap_doc": 168, "fiduci": 168, "_define_generic_content_id": 168, "hang": 168, "protocol": 168, "_define_hanging_protocol": 168, "_define_imag": 168, "implant": [168, 170], "_define_impl": 168, "assi": 168, "_define_implant_assi": 168, "_define_implant_group": 168, "_define_key_object_doc": 168, "_define_palett": 168, "_define_pati": 168, "_define_empti": 168, "_define_present": 168, "_define_radiotherapi": 168, "_define_generic_cont": 168, "registr": 168, "_define_rt_dos": [168, 558], "_define_rt_plan": 168, "_define_rt_structure_set": 168, "treat": [168, 219, 558], "_define_rt_treatment_record": 168, "_define_seri": 168, "spectroscopi": 168, "_define_spectroscopi": 168, "sr": [168, 493, 530, 548, 562], "_define_sr_docu": 168, "stereometr": 168, "_define_studi": 168, "surfac": 168, "_define_surface_scan": 168, "tract": 168, "1430": [168, 558], "my_record": 168, "offsetofthenextdirectoryrecord": 168, "recordinuseflag": 168, "offsetofreferencedlowerleveldirectoryent": 168, "directoryrecordtyp": [168, 170], "specificcharacterset": 168, "my_inst": 168, "add_custom": [168, 170, 558], "node": [169, 170, 171, 556], "recordnod": [169, 170, 522], "leaf": [169, 170, 171], "fileid": 169, "file_set": [169, 171], "for_addit": [169, 558], "for_mov": 169, "for_remov": 169, "is_stag": [169, 170, 558], "temporari": [169, 530, 551, 558], "ds_or_path": 170, "cancel": 170, "directory_record": [170, 522, 558], "definit": [170, 181, 522, 530, 539, 563], "aren": [170, 220, 237, 530, 551, 556, 558], "suitabl": [170, 205, 218, 219, 560], "1400": [170, 558], "1410": [170, 558], "1420": [170, 558], "1500": [170, 530, 549], "1510": 170, "1511": [170, 530, 549], "1512": 170, "hierarchi": [170, 558], "privaterecorduid": 170, "leaf_nod": 170, "top_nod": 170, "ancestor": [170, 171, 179, 180], "due": [170, 530, 537, 548, 550, 554, 558], "force_implicit": 170, "1234567": 170, "7654321": 170, "include_orphan": 170, "raise_orphan": 170, "attach": 170, "imposs": 170, "orphan": 170, "use_exist": [170, 558], "backup": 170, "ptxxxxxx": 170, "stxxxxxx": 170, "sexxxxxx": 170, "imxxxxxx": 170, "xxxxxx": 170, "alphanumer": [170, 172, 530, 551], "paxxxxxx": 170, "p0xxxxxx": 170, "p1xxxxxx": 170, "p2xxxxxx": 170, "everyth": [170, 554, 558], "children": 171, "child": 171, "nearest": 171, "furthest": [171, 179, 180], "has_inst": 171, "amongst": 171, "sibl": 171, "is_root": 171, "prettifi": 171, "pretti": [171, 554], "record_typ": [171, 558], "revers": [171, 530, 543], "k": [172, 530, 551], "00010": 172, "00000000": 172, "00000001": 172, "00000002": 172, "_": [173, 555], "bytes_to_find": 175, "read_siz": [175, 176, 177, 178], "found_at": 175, "routin": 177, "delimiter_tag": 178, "ambigu": [179, 180, 530, 539, 541, 542, 546], "dicond": [179, 180], "closest": [179, 180], "attributeerror": [179, 204, 212, 214, 216, 217, 220, 237, 530, 533, 549, 551, 556], "__write_like_origin": 181, "force_encod": [181, 530, 551], "bytestr": [181, 218], "eeee": [181, 530, 551], "independ": 181, "prioriti": [181, 193, 530, 551], "0x0000": 181, "put": 182, "swap": [187, 220, 505], "rule": 192, "0017": 194, "send": [194, 554, 555], "struct_format": [196, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 514], "pare": 201, "down": [201, 554, 558], "fast": [201, 246], "conserv": 201, "approach": 201, "expr": 202, "type_constructor": [203, 556], "hold": [203, 243], "constructor": 203, "therefor": [203, 218], "nice": [203, 220, 237, 554], "factori": [203, 220, 237, 246, 487, 530, 533, 548, 551], "overlayrow": 204, "overlaycolumn": 204, "0015": 204, "numberofframesinoverlai": 204, "overlaybitsalloc": 204, "overlaybitposit": 204, "get_expected_length": [204, 218], "NOT": [204, 218, 219], "get_overlay_arrai": 204, "0x6010": 204, "0x60ff": 204, "reshape_overlay_arrai": 204, "1201": [205, 218], "1203": [205, 218], "1221": [205, 218], "1223": [205, 218], "1204": [205, 218], "1224": [205, 218], "supplement": [205, 218], "hot_iron": [205, 218], "hot_metal_blu": [205, 218], "pet_20_step": [205, 218], "spring": [205, 218], "summer": [205, 218], "fall": [205, 218], "winter": [205, 218], "rgba": [205, 218], "uint16": [205, 206, 207, 208, 209, 218, 237], "3rd": [205, 206, 207, 208, 209, 218, 242], "colour": [205, 218], "3002": [206, 207, 208, 209, 218, 530, 543], "float64": [206, 207, 209, 210, 218, 501], "3010": [208, 209, 218], "apply_window": [208, 209, 218, 522, 530, 546], "prefer_lut": [209, 218, 530, 546], "apply_voi": [209, 210, 218, 522, 530, 546], "per_fram": [211, 218, 530, 548], "2012": [211, 218], "itu": [211, 218, 484], "871": [211, 218], "create_data_el": 212, "create_imag": 212, "volum": 212, "importerror": [212, 213, 215, 501, 503, 530, 547, 554], "should_change_photometricinterpretation_to_rgb": [212, 213, 214, 215, 216, 217], "pyjpegl": [213, 232, 233, 530, 551], "planarconfigur": [214, 216, 217, 218, 530, 539], "numberoffram": [214, 216, 217, 218, 530, 551], "read_onli": 214, "resampl": 214, "tsyntax": [216, 219], "suppos": 217, "msb": 217, "lsb": 217, "dtype_corrected_for_endian": 218, "numpy_dtyp": 218, "expand_ybr422": [218, 530, 549], "subsampl": 218, "horizont": 218, "halv": 218, "cb": 218, "get_image_pixel_id": 218, "get_j2k_paramet": 218, "15444": [218, 344], "is_sign": 218, "get_nr_fram": 218, "conjunct": 218, "uint": 218, "sake": 218, "pixel_dtyp": [218, 219], "as_float": 218, "reshape_pixel_arrai": 218, "unpack_bit": [218, 530, 549], "del_opt": 219, "frame_length": 219, "get_data": 219, "is_buff": 219, "iter_decod": 219, "decodeopt": [219, 220], "as_fram": 219, "set_decod": 219, "decodefunct": 219, "set_sourc": 219, "0x0028": [219, 241, 242, 556], "import_path": [220, 237], "thread": 220, "safe": [220, 246], "_decode_fram": 220, "modulenotfounderror": [220, 237], "unavail": [220, 237], "commonli": [220, 241, 242, 558, 561], "whatsoev": 220, "success": [220, 241, 242, 555], "facilit": 220, "is_encapsul": [220, 459], "is_n": 220, "missing_depend": [220, 237], "remove_plugin": [220, 237], "throughput": [224, 225, 226], "201": [225, 239, 250, 328, 339, 344], "rpcl": [226, 239], "202": [226, 239, 250, 329, 344], "encode_pixel_data": 237, "iter_encod": [237, 561], "kwargs_from_d": 237, "p14": 239, "htj2k": [239, 530, 551], "ds_out": [241, 242], "is_private_cr": 244, "json_kei": [244, 530, 550], "ggggeeee": 244, "meaningless": 244, "arg2": [245, 530, 533], "0x00100015": 245, "0x50": 245, "0x0015": 245, "group_elem": 246, "71": 248, "102": [250, 365, 368, 375, 530, 536], "103": [250, 366, 367, 375, 530, 536], "108": [250, 325, 375, 493], "204": [250, 353], "205": [250, 354, 530, 543], "78": [253, 336, 355, 360, 389, 449, 451, 472, 530, 534], "19": 262, "200": [264, 266, 407, 476, 477], "69": 269, "39": 270, "34": [273, 413, 415], "33": 274, "82": [279, 530, 534], "501": [280, 281, 282, 283, 284, 285, 286], "66": [288, 433, 443, 447, 448, 454, 457], "601": [296, 297], "130": 309, "23": [310, 530, 551], "22": [311, 430], "76": 315, "43": [322, 530, 533], "38": 330, "45": 333, "14495": 349, "59": 356, "mpeg": [375, 530, 546], "79": [378, 530, 534], "826": [397, 398, 484, 530, 543], "3680043": [397, 398, 484], "73": [400, 530, 533], "74": 403, "register_transfer_syntax": [405, 530, 551], "compil": [409, 410], "regex": [409, 410], "67": [434, 482], "72": [445, 530, 533], "human": [459, 493, 556], "friendli": [459, 556, 558], "subclass": [459, 530, 540], "set_private_encod": [459, 485, 530, 551], "is_transfer_syntax": 459, "jpegbaseline8bit": [459, 530, 546, 551], "is_compress": 459, "is_defl": 459, "encasul": 459, "is_valid": 459, "entropy_src": [484, 530, 551], "randbelow": [484, 530, 551], "54": [484, 530, 551], "uuid": 484, "uuid4": 484, "sha512": 484, "hash": [484, 530, 542, 548], "determinist": 484, "unrecover": 484, "random": [484, 530, 551], "secret": 484, "22463838056059845879389038257786771680": 484, "167161297070865690102504091919570542144": 484, "lorem": 484, "ipsum": 484, "87507166259346337659265156363895084463": 484, "9834": 484, "667": 484, "had": [485, 530, 541, 548, 554], "auto_format": [487, 488, 489, 530, 548], "__new__": 487, "carri": [487, 530, 538], "penalti": 487, "clean": [487, 530, 539, 554, 555], "satisfi": [488, 489, 496], "construct": [488, 489, 493, 530, 536, 537, 548], "23e2": 488, "123": [488, 557], "rewrit": [491, 492], "uncommon": 492, "original_str": [493, 530, 541], "from_named_compon": [493, 530, 548], "from_named_components_veterinari": [493, 530, 548], "ideograph": 493, "phonet": 493, "absent": [493, 563], "demand": 493, "famili": 493, "family_nam": [493, 530, 548], "format_str": 493, "given_nam": [493, 530, 548], "middle_nam": 493, "name_prefix": 493, "name_suffix": 493, "family_name_ideograph": 493, "given_name_ideograph": 493, "middle_name_ideograph": 493, "name_prefix_ideograph": 493, "name_suffix_ideograph": 493, "family_name_phonet": 493, "given_name_phonet": 493, "middle_name_phonet": 493, "name_prefix_phonet": 493, "name_suffix_phonet": 493, "middl": 493, "addition": 493, "sect": 493, "adam": 493, "robert": 493, "quinci": 493, "rev": 493, "div": 493, "korean": [493, 530, 536], "\u6d2a": 493, "\u5409\u6d1e": 493, "\ud64d": 493, "\uae38\ub3d9": 493, "dr": 493, "chief": 493, "offic": 493, "responsible_party_nam": 493, "patient_nam": 493, "responsible_party_name_ideograph": 493, "patient_name_ideograph": 493, "responsible_party_name_phonet": 493, "patient_name_phonet": 493, "veterinari": 493, "OR": 493, "hors": 493, "abc": 493, "farm": 493, "fourth": 493, "fifth": 493, "truncat": [496, 530, 532], "retain": [496, 530, 548], "scientif": 496, "incur": 496, "furthermor": 496, "finit": 496, "inf": 496, "nan": 496, "byte_str": [498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516], "Not": [498, 499, 500, 501, 502, 503, 508, 509, 511, 514], "int64": 503, "use_is_numpi": [503, 522, 530, 545], "valtyp": 518, "_t": 518, "waveformbitsalloc": [519, 563], "waveformsampleinterpret": [519, 563], "sb": 519, "ub": 519, "ab": 519, "dev0": 522, "feb": 522, "convert_encod": 522, "decode_el": 522, "decode_byt": 522, "encode_str": 522, "allow_ds_float": [522, 530, 536], "assume_implicit_vr_switch": [522, 530, 548], "convert_wrong_length_to_un": [522, 530, 548], "data_element_callback_kwarg": 522, "debug": [522, 530, 536, 538], "enforce_valid_valu": [522, 530, 536, 542, 543, 546, 548, 549], "reset_data_element_callback": 522, "show_file_meta": [522, 530, 545], "apply_j2k_correct": [522, 530, 551], "get_charset_fil": 522, "get_palette_fil": [522, 530, 543], "validate_file_meta": [522, 530, 551, 556], "generate_filenam": [522, 530, 551], "is_conformant_file_id": 522, "apply_rescal": [522, 530, 546], "miscellan": 522, "misc": [522, 530, 539], "is_dicom": [522, 530, 539], "size_in_byt": 522, "upper": [530, 551], "gracefulli": [530, 546, 551], "1844": [530, 551], "jpeglossless": [530, 546, 551], "jpeglosslesssv1": [530, 546, 551], "theoret": [530, 551], "1838265625": [530, 551], "1743": [530, 551], "1773": [530, 551], "1481": [530, 551], "2023d": [530, 551], "decid": [530, 551], "initialis": [530, 551], "inherit": [530, 548, 551], "read_fil": [530, 532, 533, 534, 539, 548, 551], "write_fil": [530, 539, 548, 551], "constant": [530, 546, 551, 563], "jpegbaselin": [530, 541, 546, 551], "jpegextend": [530, 541, 546, 551], "jpegextended12bit": [530, 546, 551], "jpeglslossi": [530, 546, 551], "jpeglsnearlossless": [530, 546, 551], "jpeg2000multicomponentlossless": [530, 541, 546, 551, 554], "jpeg2000mclossless": [530, 546, 551], "jpeg2000multicompon": [530, 541, 546, 551, 554], "jpeg2000mc": [530, 546, 551], "jpeglossycompressedpixeltransfersyntax": [530, 546, 551], "jpegtransfersyntax": [530, 546, 551], "jpeglssupportedcompressedpixeltransfersyntax": [530, 546, 551], "jpeglstransfersyntax": [530, 546, 551], "jpeg2000compressedpixeltransfersyntax": [530, 546, 551], "jpeg2000transfersyntax": [530, 546, 551], "rlecompressedlosslesssyntax": [530, 546, 551], "rletransfersyntax": [530, 546, 551], "uncompressedpixeltransfersyntax": [530, 546, 551], "uncompressedtransfersyntax": [530, 546, 551], "pilsupportedcompressedpixeltransfersyntax": [530, 546, 551], "personnameunicod": [530, 545, 551], "rle_encode_fram": [530, 548, 551], "_storage_sopclass_uid": [530, 546, 551], "parent_seq": [530, 551], "parent_dataset": [530, 551], "overlay_data_handl": [530, 546, 551], "fix_meta_info": [530, 541, 551], "1752": [530, 551], "mpeg2mpmlf": [530, 551], "mpeg2mphlf": [530, 551], "mpeg4hp41f": [530, 551], "mpeg4hp41bdf": [530, 551], "mpeg4hp422df": [530, 551], "mpeg4hp423df": [530, 551], "mpeg4hp42stereof": [530, 551], "htj2klossless": [530, 551], "htj2klosslessrpcl": [530, 551], "jpiphtj2kreferenc": [530, 551], "jpiphtj2kreferenceddefl": [530, 551], "smptest211020uncompressedprogressiveactivevideo": [530, 551], "smptest211020uncompressedinterlacedactivevideo": [530, 551], "smptest211030pcmdigitalaudio": [530, 551], "confus": [530, 551], "sent": [530, 551], "1529": [530, 551], "parse_frag": [530, 551], "get_fram": [530, 551], "mmap": [530, 551], "1873": [530, 551], "flexibl": [530, 551], "746": [530, 551], "1263": [530, 551], "1243": [530, 551], "1781": [530, 551], "1133": [530, 551], "1666": [530, 551], "1848": [530, 551], "disagre": [530, 551], "1689": [530, 551], "enum": [530, 549, 551], "1874": [530, 551], "1907": [530, 551], "secur": [530, 551], "escap": [530, 551], "1922": [530, 551], "deepcopi": [530, 548, 551], "1816": [530, 551], "1968": [530, 551], "1943": [530, 551], "spread": [530, 551], "across": [530, 536, 551], "1774": [530, 551], "mitig": [530, 551], "rare": [530, 551], "1983": [530, 551], "scheme_design": [530, 551, 562], "srt": [530, 551], "sct": [530, 551, 562], "1994": [530, 551], "2009": [530, 551], "2010": [530, 551], "get_frame_offset": [530, 543, 551], "generate_pixel_data_frag": [530, 551], "generate_pixel_data_fram": [530, 551], "generate_pixel_data": [530, 543, 551], "decode_data_sequ": [530, 551], "defragment_data": [530, 551], "read_item": [530, 551], "folder": [530, 533, 551], "refactor": [530, 551], "renam": [530, 531, 539, 545, 550, 551], "ci": [530, 551], "dependabot": [530, 551], "commit": [530, 551], "ruff": [530, 551], "hotfix": [530, 551], "1965": [530, 551], "eol": [530, 550], "decemb": [530, 550], "1634": [530, 550], "1648": [530, 550], "1414": [530, 550], "cli": [530, 550], "1674": [530, 550], "1658": [530, 550], "1661": [530, 550], "highli": [530, 550], "1728": [530, 550], "1734": [530, 550], "pyproject": [530, 550], "toml": [530, 550], "1792": [530, 550], "2023b": [530, 550], "1803": [530, 550], "1632": [530, 550], "progress": [530, 550, 555], "bar": [530, 550], "1611": [530, 550], "crash": [530, 540, 549, 550], "1638": [530, 550], "extrem": [530, 550], "byteslengthexcept": [530, 550], "1683": [530, 550], "1670": [530, 550], "1693": [530, 550], "1680": [530, 550], "1702": [530, 550], "wrong": [530, 541, 542, 546, 550], "calcul": [530, 548, 550], "1667": [530, 550], "lutdata": [530, 550], "1747": [530, 550], "1738": [530, 550], "teardown": [530, 550], "pytest": [530, 550], "fork": [530, 550, 554, 555, 560], "charpyl": [530, 550, 560], "1788": [530, 550], "favor": [530, 535, 549], "1617": [530, 549], "1498": [530, 549], "resort": [530, 549], "slowest": [530, 549], "1487": [530, 549], "mitra": [530, 549], "1588": [530, 549], "pr": [530, 549, 554, 555], "1594": [530, 549], "1593": [530, 549], "introduc": [530, 549, 554], "2022a": [530, 549], "holog": [530, 549], "0019xx43": [530, 549], "rest": [530, 549, 555], "1565": [530, 549], "deep": [530, 549], "1571": [530, 549], "1581": [530, 549], "maco": [530, 549, 560], "1599": [530, 549], "bad": [530, 539, 549], "1596": [530, 549], "1606": [530, 549], "1609": [530, 549], "__eq__": [530, 540, 548], "operand": [530, 548], "1327": [530, 548], "__str__": [530, 540, 548, 556], "1262": [530, 548], "metadata": [530, 548], "2021b": [530, 548], "silent": [530, 548], "highest": [530, 548], "init": [530, 548], "urllib": [530, 548], "1340": [530, 548], "1348": [530, 548], "optimis": [530, 548], "1361": [530, 548], "1372": [530, 548], "1438": [530, 548], "suppress": [530, 548], "1332": [530, 548], "1428": [530, 548], "1434": [530, 548], "pickl": [530, 539, 543, 548], "1278": [530, 548], "1312": [530, 548], "problem": [530, 548, 556], "workflow": [530, 548, 554, 555], "1341": [530, 548], "1338": [530, 548], "878": [530, 548], "1147": [530, 548], "1412": [530, 548], "expans": [530, 548], "linear": [530, 548], "1415": [530, 548], "1449": [530, 548], "rbg": [530, 548], "jpg": [530, 548], "app14": [530, 548], "1444": [530, 548], "1457": [530, 548], "1251": [530, 547], "1253": [530, 547], "1254": [530, 547], "distribut": [530, 534, 546, 560], "fly": [530, 546], "whenev": [530, 546], "disk": [530, 546], "rg1_unci": [530, 546], "1127": [530, 546], "1234": [530, 546], "1237": [530, 546], "1156": [530, 546], "__next__": [530, 546], "__iter__": [530, 531, 546, 556], "1103": [530, 543, 546], "1155": [530, 546], "1149": [530, 546], "2020d": [530, 546], "243": [530, 546], "alltransfersyntax": [530, 546], "commun": [530, 546], "1240": [530, 546], "1178": [530, 546], "1161": [530, 546], "multifram": [530, 546], "dicosquadrupoleresonanceqrstorag": [530, 546], "dicosquadrupoleresonancestorag": [530, 546], "1211": [530, 546], "1181": [530, 546], "1146": [530, 546], "optimist": [530, 546], "embed": [530, 546], "1140": [530, 546], "network": [530, 546], "connect": [530, 546], "1153": [530, 546], "1193": [530, 546], "1215": [530, 546], "restor": [530, 545], "old": [530, 531, 532, 536, 539, 545], "personname3": [530, 537, 542, 545], "alias": [530, 532, 545], "ismultivalu": [530, 542, 545], "1086": [530, 545], "replace_un_with_known_vr": [530, 545], "1067": [530, 545], "623": [530, 545], "regress": [530, 544, 545, 554], "1038": [530, 545], "improp": [530, 543, 545], "3006": [530, 545], "1078": [530, 545], "1082": [530, 545], "1097": [530, 545], "915": [530, 543], "887": [530, 543, 556], "prevent": [530, 543], "894": [530, 543], "892": [530, 543], "truthi": [530, 543], "891": [530, 543], "899": [530, 543], "968": [530, 543], "896": [530, 543], "unpickl": [530, 543], "947": [530, 543], "951": [530, 543], "1101": [530, 543], "ir": [530, 543], "917": [530, 543], "propag": [530, 543], "971": [530, 543], "822": [530, 543], "263": [530, 543], "273": [530, 543], "994": [530, 543], "685": [530, 543], "693": [530, 543], "932": [530, 543], "toler": [530, 532, 543], "940": [530, 543], "unexpect": [530, 543], "848": [530, 543], "981": [530, 543], "537": [530, 543], "452": [530, 543], "2019e": [530, 543], "page": [530, 539, 542, 553, 554, 555, 560], "timelin": [530, 542], "789": [530, 542], "image_handl": [530, 541, 542], "deferreddatael": [530, 541, 542], "760": [530, 542], "isstringorstringlist": [530, 542], "isstr": [530, 542], "666": [530, 542], "799": [530, 542], "gzip": [530, 536, 542], "753": [530, 542], "730": [530, 542], "v": [530, 542], "820": [530, 542], "864": [530, 542], "819": [530, 542], "850": [530, 542], "838": [530, 542], "757": [530, 542], "785": [530, 542], "788": [530, 542], "810": [530, 542], "815": [530, 542], "804": [530, 542], "mix": [530, 542], "835": [530, 542], "791": [530, 542], "ji": [530, 542], "856": [530, 542], "fallback": [530, 541], "722": [530, 541], "jpegbaselinelossy8bit": [530, 541], "726": [530, 541], "jpegbaselinelossy12bit": [530, 541], "jpeg2000lossi": [530, 541], "inequ": [530, 540, 541], "matter": [530, 541, 556], "291": [530, 541], "numpypi": [530, 541], "pypi": [530, 539, 541, 560], "2018c": [530, 541], "677": [530, 541], "624": [530, 541], "696": [530, 541], "584": [530, 541], "715": [530, 541], "716": [530, 541], "695": [530, 541], "737": [530, 541], "jpeglosslessp14": [530, 541], "713": [530, 541], "small": [530, 533, 539, 541, 553, 560], "729": [530, 541], "unus": [530, 541], "660": [530, 541], "682": [530, 541], "689": [530, 541], "663": [530, 541], "728": [530, 541], "704": [530, 541], "707": [530, 541], "consumpt": [530, 541], "717": [530, 541], "740": [530, 541], "464": [530, 540], "605": [530, 540], "292": [530, 540], "2018b": [530, 540], "649": [530, 540], "256": [530, 540], "0x0006": [530, 540], "489": [530, 540], "599": [530, 540], "unneed": [530, 540], "597": [530, 540], "620": [530, 540], "625": [530, 540], "fit": [530, 540], "640": [530, 540], "__ne__": [530, 540], "comparison": [530, 535, 540], "verif": [530, 540], "backward": [530, 533, 539], "incompat": [530, 533, 539], "2017c": [530, 539], "fixer": [530, 539], "thrown": [530, 539], "143": [530, 539], "197": [530, 539], "212": [530, 539], "dictionary_is_retir": [530, 539], "thai": [530, 539], "japanes": [530, 531, 536, 539], "chines": [530, 531, 539], "353": [530, 539], "172": [530, 539], "clariti": [530, 539], "travisci": [530, 539], "appveyor": [530, 539], "coverag": [530, 539, 554], "pep": [530, 532, 535, 539], "151": [530, 539], "125": [530, 539], "show_dicomdir": [530, 538, 539], "258": [530, 539], "latin5": [530, 539], "turkish": [530, 539], "lot": [530, 539, 556], "read_dicomdir": [530, 538], "subdirectori": [530, 538], "ez_setup": [530, 538], "aid": [530, 538], "pydicom_seri": [530, 534, 537, 538], "nil": [530, 538], "goyett": [530, 538], "ordereddict": [530, 538], "padraig": [530, 537, 538], "loonei": [530, 537, 538], "jonathan": [530, 537, 538], "myself": [530, 538], "rickard": [530, 538], "holmberg": [530, 538], "julien": [530, 538], "lami": [530, 538], "yaroslav": [530, 538], "halchenko": [530, 538], "mark": [530, 538], "matthew": [530, 538], "brett": [530, 538], "dimitri": [530, 538], "papadopoulo": [530, 538], "videan42": [530, 538], "sorri": [530, 538], "ve": [530, 538, 554, 555, 558, 561, 563], "anyon": [530, 538], "consolid": [530, 537], "revert": [530, 537], "prepar": [530, 537], "experiment": [530, 537], "unoffici": [530, 537], "uncom": [530, 537], "114": [530, 537], "slow": [530, 537], "approx": [530, 533, 537], "r78ba350a3eb8": [530, 537], "streamlin": [530, 537], "modern": [530, 537], "decor": [530, 537], "duplic": [530, 537], "gunnar": [530, 537], "schaefer": [530, 537], "774b7a55db33": [530, 537], "6b949a5b925b": [530, 537], "113": [530, 537], "84af4b240add": [530, 537], "f\u00e9lix": [530, 537], "morenc": [530, 537], "0197b5846bb5": [530, 537], "3678b1be6aca": [530, 537], "f1ae573d9de5": [530, 537], "0411bab7c985": [530, 537], "9b92b336e7d4": [530, 537], "e830f30b6781": [530, 537], "pysid": [530, 537], "qt": [530, 537], "acknowledg": [530, 537], "suever": [530, 537], "2011": [530, 535, 536], "ident": [530, 536], "4ed698a7bfb": [530, 536], "c313d2befb08": [530, 536], "encourag": [530, 536], "promot": [530, 536], "languag": [530, 531, 536], "b6b3658f3b14": [530, 536], "98": [530, 536], "52": [530, 536], "111": [530, 536], "__dir__": [530, 536], "file_metadata": [530, 535], "96": [530, 535], "catch": [530, 533, 535], "97": [530, 535], "write_new": [530, 535], "fc790f01f5": [530, 534], "84": [530, 534], "dicomit": [530, 534], "statement": [530, 534], "1c32791bf0": [530, 534], "e3ee934bbc": [530, 534], "dicom_dao": [530, 534], "mike": [530, 534], "wallac": [530, 534], "couchdb": [530, 534], "almar": [530, 534], "klein": [530, 534], "distinct": [530, 534], "preliminari": [530, 531, 534], "reorgan": [530, 531, 533], "substanti": [530, 533], "partial": [530, 533], "plain": [530, 533], "bullet": [530, 533], "ness": [530, 533], "logic": [530, 533], "sens": [530, 533], "daniel": [530, 533], "nanz": [530, 533], "dave": [530, 533], "witten": [530, 533], "adit": [530, 533], "panchal": [530, 533], "cp805": [530, 533], "supp": [530, 533], "117": [530, 533], "119": [530, 533], "122": [530, 533], "patch": [530, 533, 553, 554], "nikitathespid": [530, 533], "58": [530, 533], "pierr": [530, 533], "raybaut": [530, 533], "47": [530, 533], "r102": [530, 532], "r103": [530, 532], "issue36": [530, 532], "r97": [530, 532], "r110": [530, 532], "readfil": [530, 532], "savea": [530, 532], "pixelarrai": [530, 531, 532], "kept": [530, 532, 560], "r105": [530, 532], "r91": [530, 532], "r113": [530, 532], "r95": [530, 532], "issue38": [530, 532], "collis": [530, 532], "r96": [530, 532], "issue40": [530, 532], "notimplementerror": [530, 532], "r100": [530, 532], "issue41": [530, 532], "r104": [530, 532], "r109": [530, 532], "r111": [530, 532], "patientsbirthd": [530, 532], "r98": [530, 532], "deprecationwarn": [530, 531], "issue22": [530, 531], "r72": [530, 531], "r73": [530, 531], "greek": [530, 531], "gui": [530, 531], "r64": [530, 531], "r65": [530, 531], "r69": [530, 531], "r70": [530, 531], "data_elem": [530, 531, 556], "r68": [530, 531], "tix": [530, 531], "r55": [530, 531], "uid_dictionari": [530, 531], "r51": [530, 531], "synonym": [530, 531], "issue27": [530, 531], "incorrectli": [530, 531], "read_ow": [530, 531], "undefinedlength": [530, 531], "r50": [530, 531], "dicominfo": [530, 531], "issue33": [530, 531], "issue18": [530, 531], "r45": [530, 531], "r67": [530, 531], "r46": [530, 531], "pixeldataarrai": [530, 531], "distutil": [530, 531], "587": 552, "ones": [553, 556, 558], "typo": 553, "materi": 553, "stackoverflow": 553, "googl": 553, "django": [554, 555, 557], "cd": [554, 555, 558], "live": [554, 555], "yourusernam": [554, 555], "accident": [554, 558], "area": 554, "our": [554, 555, 556, 558, 563], "dot": [554, 556], "choos": [554, 555], "won": [554, 555, 556, 558], "checkout": [554, 555], "reproduc": 554, "seem": 554, "daunt": 554, "resourc": 554, "captur": 554, "dive": 554, "Into": 554, "unittest": 554, "troubl": 554, "500": [554, 556], "test_uid": 554, "test_new_uid": 554, "newdefineduid": 554, "assert": [554, 557], "380": 554, "editor": [554, 555], "236": 554, "rst": [554, 555], "properli": 554, "happi": [554, 555], "idea": [554, 555], "cach": [554, 560], "scroll": 554, "front": 554, "push": [554, 555], "click": [554, 555], "wip": [554, 555], "instruct": [554, 555, 556], "real": [554, 555, 563], "mrg": [554, 555], "readi": [554, 555], "merg": [554, 555], "clarif": [554, 555], "approv": [554, 555], "lastli": [554, 555], "remot": [554, 555], "bin": [554, 555], "icon": [554, 555], "restructuredtext": 555, "navig": 555, "occasion": [555, 556, 558], "_build": 555, "web": 555, "browser": 555, "localhost": 555, "tut": 555, "toctre": 555, "visibl": 555, "got": 555, "maxdepth": 555, "virtualenv": 555, "contributing_cod": 555, "contributing_doc": 555, "rebuild": 555, "gone": 555, "reachabl": 555, "task": 555, "chapter_7": 555, "apr": 555, "46": 555, "gcc": 555, "copyright": 555, "credit": 555, "accessionnumb": 555, "acquisitiondata": 555, "xraytubecurr": 555, "primer": 555, "am": 555, "circleci": 555, "artifact": 555, "tab": 555, "yet": [556, 562], "vari": 556, "infil": 556, "no_meta_path": 556, "no_meta": 556, "678": 556, "631": 556, "caution": 556, "not_dicom": 556, "w": 556, "1703": 556, "1436": 556, "1079": 556, "833": 556, "character_set": 556, "581": 556, "6854": 556, "7369": 556, "hexadecim": 556, "iso_ir_100": 556, "0x6002": 556, "0x6004": 556, "0x601e": 556, "gggg": 556, "surround": 556, "0x0008": 556, "0x0016": 556, "private_elem": 556, "0x0043": 556, "0x104e": 556, "lack": 556, "stick": 556, "simpler": 556, "imagetyp": 556, "act": 556, "branch": [556, 560], "manner": [556, 561], "0x1002": 556, "earlier": 556, "saw": 556, "ii": [556, 563], "x00t": 556, "x18": 556, "x08": 556, "chanc": 556, "But": 556, "snip": 556, "_list": 556, "validate_dataset": 556, "dictionary_vr": 556, "0x1050": 556, "windowwidth": 556, "notic": [556, 558], "typeofpatientid": 556, "windowcent": 556, "prefer": 556, "wb": 556, "2452": 556, "1311": 556, "3204": 556, "habit": 556, "congratul": 556, "beta": 557, "deseri": 557, "00080005": 557, "00080008": 557, "symmetr": 557, "ds_json": 557, "ds1": 557, "smaller": 557, "bulk_data_handl": 557, "store_data_and_return_uri": 557, "bulk_data_read": 557, "bulk_data_uri": 557, "data_retrieved_via_uri": 557, "json_data": 557, "00091002": 557, "data_retrieved_for_tag_and_vr_via_uri": 557, "share": 558, "peopl": 558, "frequent": 558, "dvd": 558, "procedur": 558, "ultrasound": 558, "despit": 558, "usb": 558, "pc": 558, "minor": 558, "recalcul": 558, "1220": 558, "briefli": 558, "directoryrecordsequ": 558, "3126": 558, "di": 558, "510": 558, "complic": 558, "home": 558, "env": 558, "lib": 558, "python3": 558, "site": 558, "flat": 558, "abstract": 558, "awai": 558, "dig": 558, "cost": 558, "importantli": 558, "though": 558, "tmp0aalrzir": 558, "86e6b75b": 558, "b764": 558, "46af": 558, "bec3": 558, "51698a8366f2": 558, "1858": 558, "_recordifi": 558, "2338": 558, "_check_dataset": 558, "instancenumb": 558, "dosesummationtyp": 558, "2281": 558, "record_gen": 558, "1860": 558, "tmpsqz8rhgb": 558, "rd000000": 558, "shutil": 558, "copytre": 558, "copyfil": 558, "dst": 558, "98892001": 558, "98892003": 558, "tmpu068kdwp": 558, "cr1": 558, "6154": 558, "cr2": 558, "6247": 558, "cr3": 558, "6278": 558, "ct2": 558, "17106": 558, "17136": 558, "17166": 558, "17196": 558, "Then": [559, 560], "isol": 560, "admin": 560, "privileg": 560, "offlin": 560, "whl": 560, "py3": 560, "forg": [560, 561, 563], "fetch_data_fil": 560, "popular": 560, "beforehand": 560, "charl": 560, "cython": 560, "wheel": 560, "older": 560, "framework": 560, "snapshot": 560, "activ": 560, "stabl": 560, "undocu": 560, "prerequisit": [561, 563], "conda": [561, 563], "hundr": 561, "megabyt": 561, "slide": 561, "microscopi": 561, "gigabyt": 561, "territori": 561, "Being": 561, "significantli": 561, "i2": 561, "1697": 561, "frame_iter": 561, "listcomp": 561, "382": 561, "_encode_arrai": 561, "209": 561, "_preprocess": 561, "533": 561, "recompress": 561, "began": 562, "foundat": 562, "codedict": 562, "cid": 562, "incorrectmodalityworklistentri": 562, "mixedmodality3dcammodel": 562, "modalitytoread": 562, "othermod": 562, "128002": 562, "scheme_vers": 562, "underscor": 562, "_1sigmalowervalueofpopul": 562, "371919006": 562, "sigma": 562, "cid270": 562, "121006": 562, "cid_for_nam": 562, "observ": 562, "observationsubjectclass": 562, "observertyp": 562, "echofindingobservationtyp": 562, "270": 562, "ln": 562, "fma": 562, "mdc": 562, "uml": 562, "bari": 562, "ncit": 562, "neu": 562, "ucum": 562, "radlex": 562, "ndc": 562, "itis_tsn": 562, "pubchem_cid": 562, "msh": 562, "capabl": 562, "explanatori": 563, "respiratori": 563, "interv": 563, "rhythm": 563, "khz": 563, "0200": 563, "channelsensit": 563, "einthoven": 563, "microvolt": 563, "iii": 563, "avr": 563, "avl": 563, "avf": 563, "v5": 563, "v6": 563, "interleav": 563, "ch": 563, "ax1": 563, "ax2": 563, "\u03bcv": 563, "cosin": 563, "sine": 563, "chosen": 563, "pi": 563, "ch1": 563, "astyp": 563, "ch2": 563, "sin": 563, "waveformorigin": 563, "opt": 563, "obvious": 563, "chdef_seq": 563, "chdef": 563, "curve_typ": 563, "channelsampleskew": 563, "waveformbitsstor": 563, "codevalu": 563, "codingschemedesign": 563, "codingschemevers": 563, "stack": 563, "axi": 563, "my_waveform": 563}, "objects": {"": [[522, 0, 0, "-", "pydicom"]], "pydicom.charset": [[75, 1, 1, "", "convert_encodings"], [76, 1, 1, "", "decode_bytes"], [77, 1, 1, "", "decode_element"], [78, 1, 1, "", "encode_string"]], "pydicom.config": [[79, 2, 1, "", "APPLY_J2K_CORRECTIONS"], [80, 1, 1, "", "DS_decimal"], [81, 1, 1, "", "DS_numpy"], [82, 2, 1, "", "IGNORE"], [83, 2, 1, "", "INVALID_KEYWORD_BEHAVIOR"], [84, 2, 1, "", "INVALID_KEY_BEHAVIOR"], [85, 2, 1, "", "RAISE"], [55, 3, 1, "", "Settings"], [86, 2, 1, "", "WARN"], [87, 2, 1, "", "allow_DS_float"], [88, 2, 1, "", "assume_implicit_vr_switch"], [89, 2, 1, "", "convert_wrong_length_to_UN"], [90, 2, 1, "", "data_element_callback"], [91, 2, 1, "", "data_element_callback_kwargs"], [92, 2, 1, "", "datetime_conversion"], [93, 1, 1, "", "debug"], [94, 2, 1, "", "enforce_valid_values"], [95, 1, 1, "", "future_behavior"], [96, 2, 1, "", "pixel_data_handlers"], [97, 1, 1, "", "reset_data_element_callback"], [98, 2, 1, "", "settings"], [99, 2, 1, "", "show_file_meta"], [100, 2, 1, "", "use_DS_decimal"], [101, 2, 1, "", "use_DS_numpy"], [102, 2, 1, "", "use_IS_numpy"]], "pydicom.config.Settings": [[55, 4, 1, "", "infer_sq_for_un_vr"], [55, 4, 1, "", "reading_validation_mode"], [55, 4, 1, "", "writing_validation_mode"]], "pydicom.data": [[103, 1, 1, "", "get_charset_files"], [104, 1, 1, "", "get_palette_files"], [105, 1, 1, "", "get_testdata_file"], [106, 1, 1, "", "get_testdata_files"]], "pydicom.datadict": [[107, 1, 1, "", "add_dict_entries"], [108, 1, 1, "", "add_dict_entry"], [109, 1, 1, "", "add_private_dict_entries"], [110, 1, 1, "", "add_private_dict_entry"], [111, 1, 1, "", "dictionary_VM"], [112, 1, 1, "", "dictionary_VR"], [113, 1, 1, "", "dictionary_description"], [114, 1, 1, "", "dictionary_has_tag"], [115, 1, 1, "", "dictionary_is_retired"], [116, 1, 1, "", "dictionary_keyword"], [117, 1, 1, "", "get_entry"], [118, 1, 1, "", "get_private_entry"], [119, 1, 1, "", "keyword_for_tag"], [120, 1, 1, "", "mask_match"], [121, 1, 1, "", "private_dictionary_VM"], [122, 1, 1, "", "private_dictionary_VR"], [123, 1, 1, "", "private_dictionary_description"], [124, 1, 1, "", "repeater_has_keyword"], [125, 1, 1, "", "repeater_has_tag"], [126, 1, 1, "", "tag_for_keyword"]], "pydicom.dataelem": [[127, 3, 1, "", "DataElement"], [128, 1, 1, "", "DataElement_from_raw"], [129, 3, 1, "", "RawDataElement"]], "pydicom.dataelem.DataElement": [[127, 4, 1, "", "VM"], [127, 5, 1, "", "VR"], [127, 6, 1, "", "__init__"], [127, 6, 1, "", "clear"], [127, 5, 1, "", "descripWidth"], [127, 4, 1, "", "empty_value"], [127, 6, 1, "", "from_json"], [127, 4, 1, "", "is_empty"], [127, 4, 1, "", "is_private"], [127, 4, 1, "", "is_retired"], [127, 5, 1, "", "is_undefined_length"], [127, 4, 1, "", "keyword"], [127, 5, 1, "", "maxBytesToDisplay"], [127, 4, 1, "", "name"], [127, 4, 1, "", "repval"], [127, 5, 1, "", "showVR"], [127, 5, 1, "", "tag"], [127, 6, 1, "", "to_json"], [127, 6, 1, "", "to_json_dict"], [127, 6, 1, "", "validate"], [127, 4, 1, "", "value"]], "pydicom.dataelem.RawDataElement": [[129, 5, 1, "", "VR"], [129, 6, 1, "", "__init__"], [129, 5, 1, "", "is_implicit_VR"], [129, 5, 1, "", "is_little_endian"], [129, 5, 1, "", "is_raw"], [129, 5, 1, "", "length"], [129, 5, 1, "", "tag"], [129, 5, 1, "", "value"], [129, 5, 1, "", "value_tell"]], "pydicom.dataset": [[130, 3, 1, "", "Dataset"], [131, 3, 1, "", "FileDataset"], [132, 3, 1, "", "FileMetaDataset"], [133, 3, 1, "", "PrivateBlock"], [134, 1, 1, "", "validate_file_meta"]], "pydicom.dataset.Dataset": [[130, 6, 1, "", "__init__"], [130, 6, 1, "", "add"], [130, 6, 1, "", "add_new"], [130, 6, 1, "", "add_new_private"], [130, 6, 1, "", "clear"], [130, 6, 1, "", "compress"], [130, 6, 1, "", "convert_pixel_data"], [130, 6, 1, "", "copy"], [130, 6, 1, "", "data_element"], [130, 6, 1, "", "decode"], [130, 6, 1, "", "decompress"], [130, 5, 1, "", "default_element_format"], [130, 5, 1, "", "default_sequence_element_format"], [130, 6, 1, "", "dir"], [130, 6, 1, "", "elements"], [130, 6, 1, "", "ensure_file_meta"], [130, 6, 1, "", "formatted_lines"], [130, 6, 1, "", "from_json"], [130, 6, 1, "", "get"], [130, 6, 1, "", "get_item"], [130, 6, 1, "", "get_private_item"], [130, 6, 1, "", "group_dataset"], [130, 5, 1, "", "indent_chars"], [130, 4, 1, "", "is_implicit_VR"], [130, 4, 1, "", "is_little_endian"], [130, 4, 1, "", "is_original_encoding"], [130, 6, 1, "", "items"], [130, 6, 1, "", "iterall"], [130, 6, 1, "", "keys"], [130, 4, 1, "", "original_character_set"], [130, 4, 1, "", "original_encoding"], [130, 6, 1, "", "overlay_array"], [130, 4, 1, "", "pixel_array"], [130, 6, 1, "", "pop"], [130, 6, 1, "", "popitem"], [130, 6, 1, "", "private_block"], [130, 6, 1, "", "private_creators"], [130, 4, 1, "", "read_encoding"], [130, 4, 1, "", "read_implicit_vr"], [130, 4, 1, "", "read_little_endian"], [130, 6, 1, "", "remove_private_tags"], [130, 6, 1, "", "save_as"], [130, 6, 1, "", "set_original_encoding"], [130, 6, 1, "", "setdefault"], [130, 6, 1, "", "to_json"], [130, 6, 1, "", "to_json_dict"], [130, 6, 1, "", "top"], [130, 6, 1, "", "trait_names"], [130, 6, 1, "", "update"], [130, 6, 1, "", "values"], [130, 6, 1, "", "walk"], [130, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileDataset": [[131, 6, 1, "", "__init__"], [131, 5, 1, "", "file_meta"], [131, 5, 1, "", "filename"], [131, 5, 1, "", "fileobj_type"], [131, 5, 1, "", "is_implicit_VR"], [131, 5, 1, "", "is_little_endian"], [131, 5, 1, "", "preamble"], [131, 5, 1, "", "timestamp"]], "pydicom.dataset.FileMetaDataset": [[132, 6, 1, "", "__init__"], [132, 6, 1, "", "validate"]], "pydicom.dataset.PrivateBlock": [[133, 6, 1, "", "__init__"], [133, 6, 1, "", "add_new"], [133, 5, 1, "", "block_start"], [133, 5, 1, "", "dataset"], [133, 6, 1, "", "get_tag"], [133, 5, 1, "", "group"], [133, 5, 1, "", "private_creator"]], "pydicom.encaps": [[135, 1, 1, "", "decode_data_sequence"], [136, 1, 1, "", "defragment_data"], [137, 1, 1, "", "encapsulate"], [138, 1, 1, "", "encapsulate_extended"], [139, 1, 1, "", "fragment_frame"], [140, 1, 1, "", "generate_fragmented_frames"], [141, 1, 1, "", "generate_fragments"], [142, 1, 1, "", "generate_frames"], [143, 1, 1, "", "generate_pixel_data"], [144, 1, 1, "", "generate_pixel_data_fragment"], [145, 1, 1, "", "generate_pixel_data_frame"], [146, 1, 1, "", "get_frame"], [147, 1, 1, "", "get_frame_offsets"], [148, 1, 1, "", "itemize_fragment"], [149, 1, 1, "", "itemize_frame"], [150, 1, 1, "", "parse_basic_offsets"], [151, 1, 1, "", "parse_fragments"], [152, 1, 1, "", "read_item"]], "pydicom.errors": [[153, 7, 1, "", "InvalidDicomError"]], "pydicom.filebase": [[154, 3, 1, "", "DicomBytesIO"], [155, 1, 1, "", "DicomFile"], [156, 3, 1, "", "DicomFileLike"], [157, 3, 1, "", "DicomIO"]], "pydicom.filebase.DicomBytesIO": [[154, 6, 1, "", "__init__"]], "pydicom.filebase.DicomFileLike": [[156, 6, 1, "", "__init__"]], "pydicom.filebase.DicomIO": [[157, 6, 1, "", "__init__"], [157, 6, 1, "", "close"], [157, 4, 1, "", "is_implicit_VR"], [157, 4, 1, "", "is_little_endian"], [157, 4, 1, "", "name"], [157, 4, 1, "", "parent"], [157, 6, 1, "", "read"], [157, 6, 1, "", "read_UL"], [157, 6, 1, "", "read_US"], [157, 6, 1, "", "read_exact"], [157, 6, 1, "", "read_tag"], [157, 6, 1, "", "seek"], [157, 6, 1, "", "tell"], [157, 6, 1, "", "write"], [157, 6, 1, "", "write_UL"], [157, 6, 1, "", "write_US"], [157, 6, 1, "", "write_tag"]], "pydicom.filereader": [[158, 1, 1, "", "data_element_generator"], [159, 1, 1, "", "data_element_offset_to_value"], [160, 1, 1, "", "dcmread"], [161, 1, 1, "", "read_dataset"], [162, 1, 1, "", "read_deferred_data_element"], [163, 1, 1, "", "read_file_meta_info"], [164, 1, 1, "", "read_partial"], [165, 1, 1, "", "read_preamble"], [166, 1, 1, "", "read_sequence"], [167, 1, 1, "", "read_sequence_item"]], "pydicom.fileset": [[168, 2, 1, "", "DIRECTORY_RECORDERS"], [169, 3, 1, "", "FileInstance"], [170, 3, 1, "", "FileSet"], [171, 3, 1, "", "RecordNode"], [172, 1, 1, "", "generate_filename"], [173, 1, 1, "", "is_conformant_file_id"]], "pydicom.fileset.FileInstance": [[169, 4, 1, "", "FileID"], [169, 4, 1, "", "SOPClassUID"], [169, 4, 1, "", "SOPInstanceUID"], [169, 4, 1, "", "TransferSyntaxUID"], [169, 6, 1, "", "__init__"], [169, 4, 1, "", "file_set"], [169, 4, 1, "", "for_addition"], [169, 4, 1, "", "for_moving"], [169, 4, 1, "", "for_removal"], [169, 4, 1, "", "is_private"], [169, 4, 1, "", "is_staged"], [169, 6, 1, "", "load"], [169, 5, 1, "", "node"], [169, 4, 1, "", "path"]], "pydicom.fileset.FileSet": [[170, 4, 1, "", "ID"], [170, 4, 1, "", "UID"], [170, 6, 1, "", "__init__"], [170, 6, 1, "", "add"], [170, 6, 1, "", "add_custom"], [170, 6, 1, "", "clear"], [170, 6, 1, "", "copy"], [170, 4, 1, "", "descriptor_character_set"], [170, 4, 1, "", "descriptor_file_id"], [170, 6, 1, "", "find"], [170, 6, 1, "", "find_values"], [170, 4, 1, "", "is_staged"], [170, 6, 1, "", "load"], [170, 4, 1, "", "path"], [170, 6, 1, "", "remove"], [170, 6, 1, "", "write"]], "pydicom.fileset.RecordNode": [[171, 6, 1, "", "__init__"], [171, 6, 1, "", "add"], [171, 4, 1, "", "ancestors"], [171, 5, 1, "", "children"], [171, 4, 1, "", "component"], [171, 4, 1, "", "depth"], [171, 4, 1, "", "file_set"], [171, 4, 1, "", "has_instance"], [171, 4, 1, "", "index"], [171, 5, 1, "", "instance"], [171, 4, 1, "", "is_root"], [171, 4, 1, "", "key"], [171, 4, 1, "", "next"], [171, 4, 1, "", "parent"], [171, 6, 1, "", "prettify"], [171, 4, 1, "", "previous"], [171, 4, 1, "", "record_type"], [171, 6, 1, "", "remove"], [171, 6, 1, "", "reverse"], [171, 4, 1, "", "root"]], "pydicom.fileutil": [[174, 1, 1, "", "absorb_delimiter_item"], [175, 1, 1, "", "find_bytes"], [176, 1, 1, "", "find_delimiter"], [177, 1, 1, "", "length_of_undefined_length"], [178, 1, 1, "", "read_undefined_length_value"]], "pydicom.filewriter": [[179, 1, 1, "", "correct_ambiguous_vr"], [180, 1, 1, "", "correct_ambiguous_vr_element"], [181, 1, 1, "", "dcmwrite"], [182, 1, 1, "", "multi_string"], [183, 1, 1, "", "write_ATvalue"], [184, 1, 1, "", "write_DA"], [185, 1, 1, "", "write_DT"], [186, 1, 1, "", "write_OBvalue"], [187, 1, 1, "", "write_OWvalue"], [188, 1, 1, "", "write_PN"], [189, 1, 1, "", "write_TM"], [190, 1, 1, "", "write_UI"], [191, 1, 1, "", "write_UN"], [192, 1, 1, "", "write_data_element"], [193, 1, 1, "", "write_dataset"], [194, 1, 1, "", "write_file_meta_info"], [195, 1, 1, "", "write_number_string"], [196, 1, 1, "", "write_numbers"], [197, 1, 1, "", "write_sequence"], [198, 1, 1, "", "write_sequence_item"], [199, 1, 1, "", "write_string"], [200, 1, 1, "", "write_text"]], "pydicom.misc": [[201, 1, 1, "", "is_dicom"], [202, 1, 1, "", "size_in_bytes"]], "pydicom.multival": [[203, 3, 1, "", "MultiValue"]], "pydicom.multival.MultiValue": [[203, 6, 1, "", "__init__"]], "pydicom": [[524, 0, 0, "-", "overlays"], [521, 0, 0, "-", "pixel_data_handlers"], [529, 0, 0, "-", "waveforms"]], "pydicom.overlays": [[204, 0, 0, "-", "numpy_handler"]], "pydicom.overlays.numpy_handler": [[204, 1, 1, "", "get_expected_length"], [204, 1, 1, "", "get_overlay_array"], [204, 1, 1, "", "is_available"], [204, 1, 1, "", "reshape_overlay_array"]], "pydicom.pixel_data_handlers": [[205, 1, 1, "", "apply_color_lut"], [206, 1, 1, "", "apply_modality_lut"], [207, 1, 1, "", "apply_rescale"], [208, 1, 1, "", "apply_voi"], [209, 1, 1, "", "apply_voi_lut"], [210, 1, 1, "", "apply_windowing"], [211, 1, 1, "", "convert_color_space"], [212, 0, 0, "-", "gdcm_handler"], [213, 0, 0, "-", "jpeg_ls_handler"], [214, 0, 0, "-", "numpy_handler"], [215, 0, 0, "-", "pillow_handler"], [216, 0, 0, "-", "pylibjpeg_handler"], [217, 0, 0, "-", "rle_handler"], [218, 0, 0, "-", "util"]], "pydicom.pixel_data_handlers.gdcm_handler": [[212, 1, 1, "", "create_data_element"], [212, 1, 1, "", "create_image"], [212, 1, 1, "", "get_pixeldata"], [212, 1, 1, "", "is_available"], [212, 1, 1, "", "needs_to_convert_to_RGB"], [212, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [212, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[213, 1, 1, "", "get_pixeldata"], [213, 1, 1, "", "is_available"], [213, 1, 1, "", "needs_to_convert_to_RGB"], [213, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [213, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.numpy_handler": [[214, 1, 1, "", "get_pixeldata"], [214, 1, 1, "", "is_available"], [214, 1, 1, "", "needs_to_convert_to_RGB"], [214, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [214, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pillow_handler": [[215, 1, 1, "", "get_pixeldata"], [215, 1, 1, "", "is_available"], [215, 1, 1, "", "needs_to_convert_to_RGB"], [215, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [215, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[216, 1, 1, "", "as_array"], [216, 1, 1, "", "generate_frames"], [216, 1, 1, "", "get_pixeldata"], [216, 1, 1, "", "is_available"], [216, 1, 1, "", "needs_to_convert_to_RGB"], [216, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [216, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.rle_handler": [[217, 1, 1, "", "get_pixeldata"], [217, 1, 1, "", "is_available"], [217, 1, 1, "", "needs_to_convert_to_RGB"], [217, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [217, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.util": [[218, 1, 1, "", "apply_color_lut"], [218, 1, 1, "", "apply_modality_lut"], [218, 1, 1, "", "apply_voi"], [218, 1, 1, "", "apply_voi_lut"], [218, 1, 1, "", "apply_windowing"], [218, 1, 1, "", "convert_color_space"], [218, 1, 1, "", "dtype_corrected_for_endianness"], [218, 1, 1, "", "expand_ybr422"], [218, 1, 1, "", "get_expected_length"], [218, 1, 1, "", "get_image_pixel_ids"], [218, 1, 1, "", "get_j2k_parameters"], [218, 1, 1, "", "get_nr_frames"], [218, 1, 1, "", "pack_bits"], [218, 1, 1, "", "pixel_dtype"], [218, 1, 1, "", "reshape_pixel_array"], [218, 1, 1, "", "unpack_bits"]], "pydicom.pixels.decoders.base": [[219, 3, 1, "", "DecodeRunner"], [220, 3, 1, "", "Decoder"], [221, 2, 1, "", "DeflatedExplicitVRLittleEndianDecoder"], [222, 2, 1, "", "ExplicitVRBigEndianDecoder"], [223, 2, 1, "", "ExplicitVRLittleEndianDecoder"], [224, 2, 1, "", "HTJ2KDecoder"], [225, 2, 1, "", "HTJ2KLosslessDecoder"], [226, 2, 1, "", "HTJ2KLosslessRPCLDecoder"], [227, 2, 1, "", "ImplicitVRLittleEndianDecoder"], [228, 2, 1, "", "JPEG2000Decoder"], [229, 2, 1, "", "JPEG2000LosslessDecoder"], [230, 2, 1, "", "JPEGBaseline8BitDecoder"], [231, 2, 1, "", "JPEGExtended12BitDecoder"], [232, 2, 1, "", "JPEGLSLosslessDecoder"], [233, 2, 1, "", "JPEGLSNearLosslessDecoder"], [234, 2, 1, "", "JPEGLosslessDecoder"], [235, 2, 1, "", "JPEGLosslessSV1Decoder"], [236, 2, 1, "", "RLELosslessDecoder"]], "pydicom.pixels.decoders.base.DecodeRunner": [[219, 6, 1, "", "__init__"], [219, 4, 1, "", "bits_allocated"], [219, 4, 1, "", "bits_stored"], [219, 4, 1, "", "columns"], [219, 6, 1, "", "decode"], [219, 6, 1, "", "del_option"], [219, 4, 1, "", "extended_offsets"], [219, 6, 1, "", "frame_length"], [219, 6, 1, "", "get_data"], [219, 6, 1, "", "get_option"], [219, 4, 1, "", "is_buffer"], [219, 6, 1, "", "iter_decode"], [219, 4, 1, "", "number_of_frames"], [219, 4, 1, "", "options"], [219, 4, 1, "", "photometric_interpretation"], [219, 4, 1, "", "pixel_dtype"], [219, 4, 1, "", "pixel_keyword"], [219, 4, 1, "", "pixel_representation"], [219, 4, 1, "", "planar_configuration"], [219, 6, 1, "", "process"], [219, 6, 1, "", "reshape"], [219, 4, 1, "", "rows"], [219, 4, 1, "", "samples_per_pixel"], [219, 6, 1, "", "set_decoders"], [219, 6, 1, "", "set_option"], [219, 6, 1, "", "set_options"], [219, 6, 1, "", "set_source"], [219, 4, 1, "", "src"], [219, 4, 1, "", "transfer_syntax"], [219, 6, 1, "", "validate"]], "pydicom.pixels.decoders.base.Decoder": [[220, 4, 1, "", "UID"], [220, 6, 1, "", "__init__"], [220, 6, 1, "", "add_plugin"], [220, 6, 1, "", "add_plugins"], [220, 6, 1, "", "as_array"], [220, 6, 1, "", "as_buffer"], [220, 4, 1, "", "is_available"], [220, 4, 1, "", "is_encapsulated"], [220, 4, 1, "", "is_native"], [220, 6, 1, "", "iter_array"], [220, 6, 1, "", "iter_buffer"], [220, 4, 1, "", "missing_dependencies"], [220, 4, 1, "", "name"], [220, 6, 1, "", "remove_plugin"]], "pydicom.pixels": [[527, 0, 0, "-", "encoders"], [239, 1, 1, "", "get_decoder"], [240, 1, 1, "", "get_encoder"], [241, 1, 1, "", "iter_pixels"], [242, 1, 1, "", "pixel_array"]], "pydicom.pixels.encoders.base": [[237, 3, 1, "", "Encoder"], [238, 2, 1, "", "RLELosslessEncoder"]], "pydicom.pixels.encoders.base.Encoder": [[237, 4, 1, "", "UID"], [237, 6, 1, "", "__init__"], [237, 6, 1, "", "add_plugin"], [237, 6, 1, "", "encode"], [237, 4, 1, "", "is_available"], [237, 6, 1, "", "iter_encode"], [237, 6, 1, "", "kwargs_from_ds"], [237, 4, 1, "", "missing_dependencies"], [237, 4, 1, "", "name"], [237, 6, 1, "", "remove_plugin"]], "pydicom.sequence": [[243, 3, 1, "", "Sequence"]], "pydicom.sequence.Sequence": [[243, 6, 1, "", "__init__"], [243, 6, 1, "", "extend"]], "pydicom.tag": [[244, 3, 1, "", "BaseTag"], [245, 1, 1, "", "Tag"], [246, 1, 1, "", "TupleTag"], [247, 1, 1, "", "tag_in_exception"]], "pydicom.tag.BaseTag": [[244, 6, 1, "", "__init__"], [244, 4, 1, "", "elem"], [244, 4, 1, "", "element"], [244, 4, 1, "", "group"], [244, 4, 1, "", "is_private"], [244, 4, 1, "", "is_private_creator"], [244, 4, 1, "", "json_key"], [244, 4, 1, "", "private_creator"]], "pydicom.uid": [[248, 2, 1, "", "AcquisitionContextSRStorage"], [249, 2, 1, "", "AdvancedBlendingPresentationStateStorage"], [250, 2, 1, "", "AllTransferSyntaxes"], [251, 2, 1, "", "AmbulatoryECGWaveformStorage"], [252, 2, 1, "", "ArterialPulseWaveformStorage"], [253, 2, 1, "", "AutorefractionMeasurementsStorage"], [254, 2, 1, "", "BasicStructuredDisplayStorage"], [255, 2, 1, "", "BasicTextSRStorage"], [256, 2, 1, "", "BasicVoiceAudioWaveformStorage"], [257, 2, 1, "", "BlendingSoftcopyPresentationStateStorage"], [258, 2, 1, "", "BodyPositionWaveformStorage"], [259, 2, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [260, 2, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [261, 2, 1, "", "BreastTomosynthesisImageStorage"], [262, 2, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [263, 2, 1, "", "CArmPhotonElectronRadiationStorage"], [264, 2, 1, "", "CTDefinedProcedureProtocolStorage"], [265, 2, 1, "", "CTImageStorage"], [266, 2, 1, "", "CTPerformedProcedureProtocolStorage"], [267, 2, 1, "", "CardiacElectrophysiologyWaveformStorage"], [268, 2, 1, "", "ChestCADSRStorage"], [269, 2, 1, "", "ColonCADSRStorage"], [270, 2, 1, "", "ColorPaletteStorage"], [271, 2, 1, "", "ColorSoftcopyPresentationStateStorage"], [272, 2, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [273, 2, 1, "", "Comprehensive3DSRStorage"], [274, 2, 1, "", "ComprehensiveSRStorage"], [275, 2, 1, "", "ComputedRadiographyImageStorage"], [276, 2, 1, "", "ConfocalMicroscopyImageStorage"], [277, 2, 1, "", "ConfocalMicroscopyTiledPyramidalImageStorage"], [278, 2, 1, "", "ContentAssessmentResultsStorage"], [279, 2, 1, "", "CornealTopographyMapStorage"], [280, 2, 1, "", "DICOS2DAITStorage"], [281, 2, 1, "", "DICOS3DAITStorage"], [282, 2, 1, "", "DICOSCTImageStorage"], [283, 2, 1, "", "DICOSDigitalXRayImageStorageForPresentation"], [284, 2, 1, "", "DICOSDigitalXRayImageStorageForProcessing"], [285, 2, 1, "", "DICOSQuadrupoleResonanceStorage"], [286, 2, 1, "", "DICOSThreatDetectionReportStorage"], [287, 2, 1, "", "DeflatedExplicitVRLittleEndian"], [288, 2, 1, "", "DeformableSpatialRegistrationStorage"], [289, 2, 1, "", "DermoscopicPhotographyImageStorage"], [290, 2, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [291, 2, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [292, 2, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [293, 2, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [294, 2, 1, "", "DigitalXRayImageStorageForPresentation"], [295, 2, 1, "", "DigitalXRayImageStorageForProcessing"], [296, 2, 1, "", "EddyCurrentImageStorage"], [297, 2, 1, "", "EddyCurrentMultiFrameImageStorage"], [298, 2, 1, "", "ElectromyogramWaveformStorage"], [299, 2, 1, "", "ElectrooculogramWaveformStorage"], [300, 2, 1, "", "EncapsulatedCDAStorage"], [301, 2, 1, "", "EncapsulatedMTLStorage"], [302, 2, 1, "", "EncapsulatedOBJStorage"], [303, 2, 1, "", "EncapsulatedPDFStorage"], [304, 2, 1, "", "EncapsulatedSTLStorage"], [305, 2, 1, "", "EnhancedCTImageStorage"], [306, 2, 1, "", "EnhancedContinuousRTImageStorage"], [307, 2, 1, "", "EnhancedMRColorImageStorage"], [308, 2, 1, "", "EnhancedMRImageStorage"], [309, 2, 1, "", "EnhancedPETImageStorage"], [310, 2, 1, "", "EnhancedRTImageStorage"], [311, 2, 1, "", "EnhancedSRStorage"], [312, 2, 1, "", "EnhancedUSVolumeStorage"], [313, 2, 1, "", "EnhancedXAImageStorage"], [314, 2, 1, "", "EnhancedXRFImageStorage"], [315, 2, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [316, 2, 1, "", "ExplicitVRBigEndian"], [317, 2, 1, "", "ExplicitVRLittleEndian"], [318, 2, 1, "", "ExtensibleSRStorage"], [319, 2, 1, "", "General32bitECGWaveformStorage"], [320, 2, 1, "", "GeneralAudioWaveformStorage"], [321, 2, 1, "", "GeneralECGWaveformStorage"], [322, 2, 1, "", "GenericImplantTemplateStorage"], [323, 2, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [324, 2, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [325, 2, 1, "", "HEVCM10P51"], [326, 2, 1, "", "HEVCMP51"], [327, 2, 1, "", "HTJ2K"], [328, 2, 1, "", "HTJ2KLossless"], [329, 2, 1, "", "HTJ2KLosslessRPCL"], [330, 2, 1, "", "HangingProtocolStorage"], [331, 2, 1, "", "HemodynamicWaveformStorage"], [332, 2, 1, "", "ImplantAssemblyTemplateStorage"], [333, 2, 1, "", "ImplantTemplateGroupStorage"], [334, 2, 1, "", "ImplantationPlanSRStorage"], [335, 2, 1, "", "ImplicitVRLittleEndian"], [336, 2, 1, "", "IntraocularLensCalculationsStorage"], [337, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [338, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [339, 2, 1, "", "InventoryStorage"], [340, 2, 1, "", "JPEG2000"], [341, 2, 1, "", "JPEG2000Lossless"], [342, 2, 1, "", "JPEG2000MC"], [343, 2, 1, "", "JPEG2000MCLossless"], [344, 2, 1, "", "JPEG2000TransferSyntaxes"], [345, 2, 1, "", "JPEGBaseline8Bit"], [346, 2, 1, "", "JPEGExtended12Bit"], [347, 2, 1, "", "JPEGLSLossless"], [348, 2, 1, "", "JPEGLSNearLossless"], [349, 2, 1, "", "JPEGLSTransferSyntaxes"], [350, 2, 1, "", "JPEGLossless"], [351, 2, 1, "", "JPEGLosslessSV1"], [352, 2, 1, "", "JPEGTransferSyntaxes"], [353, 2, 1, "", "JPIPHTJ2KReferenced"], [354, 2, 1, "", "JPIPHTJ2KReferencedDeflate"], [355, 2, 1, "", "KeratometryMeasurementsStorage"], [356, 2, 1, "", "KeyObjectSelectionDocumentStorage"], [357, 2, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [358, 2, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [359, 2, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [360, 2, 1, "", "LensometryMeasurementsStorage"], [361, 2, 1, "", "MPEG2MPHL"], [362, 2, 1, "", "MPEG2MPHLF"], [363, 2, 1, "", "MPEG2MPML"], [364, 2, 1, "", "MPEG2MPMLF"], [365, 2, 1, "", "MPEG4HP41"], [366, 2, 1, "", "MPEG4HP41BD"], [367, 2, 1, "", "MPEG4HP41BDF"], [368, 2, 1, "", "MPEG4HP41F"], [369, 2, 1, "", "MPEG4HP422D"], [370, 2, 1, "", "MPEG4HP422DF"], [371, 2, 1, "", "MPEG4HP423D"], [372, 2, 1, "", "MPEG4HP423DF"], [373, 2, 1, "", "MPEG4HP42STEREO"], [374, 2, 1, "", "MPEG4HP42STEREOF"], [375, 2, 1, "", "MPEGTransferSyntaxes"], [376, 2, 1, "", "MRImageStorage"], [377, 2, 1, "", "MRSpectroscopyStorage"], [378, 2, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [379, 2, 1, "", "MammographyCADSRStorage"], [380, 2, 1, "", "MediaStorageDirectoryStorage"], [381, 2, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [382, 2, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [383, 2, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [384, 2, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [385, 2, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [386, 2, 1, "", "MultichannelRespiratoryWaveformStorage"], [387, 2, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [388, 2, 1, "", "NuclearMedicineImageStorage"], [389, 2, 1, "", "OphthalmicAxialMeasurementsStorage"], [390, 2, 1, "", "OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [391, 2, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [392, 2, 1, "", "OphthalmicPhotography16BitImageStorage"], [393, 2, 1, "", "OphthalmicPhotography8BitImageStorage"], [394, 2, 1, "", "OphthalmicThicknessMapStorage"], [395, 2, 1, "", "OphthalmicTomographyImageStorage"], [396, 2, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [397, 2, 1, "", "PYDICOM_IMPLEMENTATION_UID"], [398, 2, 1, "", "PYDICOM_ROOT_UID"], [399, 2, 1, "", "ParametricMapStorage"], [400, 2, 1, "", "PatientRadiationDoseSRStorage"], [401, 2, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [402, 2, 1, "", "PhotoacousticImageStorage"], [403, 2, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [404, 2, 1, "", "PositronEmissionTomographyImageStorage"], [405, 2, 1, "", "PrivateTransferSyntaxes"], [406, 2, 1, "", "ProcedureLogStorage"], [407, 2, 1, "", "ProtocolApprovalStorage"], [408, 2, 1, "", "PseudoColorSoftcopyPresentationStateStorage"], [409, 2, 1, "", "RE_VALID_UID"], [410, 2, 1, "", "RE_VALID_UID_PREFIX"], [411, 2, 1, "", "RLELossless"], [412, 2, 1, "", "RLETransferSyntaxes"], [413, 2, 1, "", "RTBeamsDeliveryInstructionStorage"], [414, 2, 1, "", "RTBeamsTreatmentRecordStorage"], [415, 2, 1, "", "RTBrachyApplicationSetupDeliveryInstructionStorage"], [416, 2, 1, "", "RTBrachyTreatmentRecordStorage"], [417, 2, 1, "", "RTDoseStorage"], [418, 2, 1, "", "RTImageStorage"], [419, 2, 1, "", "RTIonBeamsTreatmentRecordStorage"], [420, 2, 1, "", "RTIonPlanStorage"], [421, 2, 1, "", "RTPatientPositionAcquisitionInstructionStorage"], [422, 2, 1, "", "RTPhysicianIntentStorage"], [423, 2, 1, "", "RTPlanStorage"], [424, 2, 1, "", "RTRadiationRecordSetStorage"], [425, 2, 1, "", "RTRadiationSalvageRecordStorage"], [426, 2, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [427, 2, 1, "", "RTRadiationSetStorage"], [428, 2, 1, "", "RTSegmentAnnotationStorage"], [429, 2, 1, "", "RTStructureSetStorage"], [430, 2, 1, "", "RTTreatmentPreparationStorage"], [431, 2, 1, "", "RTTreatmentSummaryRecordStorage"], [432, 2, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [433, 2, 1, "", "RawDataStorage"], [434, 2, 1, "", "RealWorldValueMappingStorage"], [435, 2, 1, "", "RespiratoryWaveformStorage"], [436, 2, 1, "", "RoboticArmRadiationStorage"], [437, 2, 1, "", "RoboticRadiationRecordStorage"], [438, 2, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [439, 2, 1, "", "SMPTEST211020UncompressedInterlacedActiveVideo"], [440, 2, 1, "", "SMPTEST211020UncompressedProgressiveActiveVideo"], [441, 2, 1, "", "SMPTEST211030PCMDigitalAudio"], [442, 2, 1, "", "SecondaryCaptureImageStorage"], [443, 2, 1, "", "SegmentationStorage"], [444, 2, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [445, 2, 1, "", "SimplifiedAdultEchoSRStorage"], [446, 2, 1, "", "SleepElectroencephalogramWaveformStorage"], [447, 2, 1, "", "SpatialFiducialsStorage"], [448, 2, 1, "", "SpatialRegistrationStorage"], [449, 2, 1, "", "SpectaclePrescriptionReportStorage"], [450, 2, 1, "", "StereometricRelationshipStorage"], [451, 2, 1, "", "SubjectiveRefractionMeasurementsStorage"], [452, 2, 1, "", "SurfaceScanMeshStorage"], [453, 2, 1, "", "SurfaceScanPointCloudStorage"], [454, 2, 1, "", "SurfaceSegmentationStorage"], [455, 2, 1, "", "TomotherapeuticRadiationRecordStorage"], [456, 2, 1, "", "TomotherapeuticRadiationStorage"], [457, 2, 1, "", "TractographyResultsStorage"], [458, 2, 1, "", "TwelveLeadECGWaveformStorage"], [459, 3, 1, "", "UID"], [460, 2, 1, "", "UltrasoundImageStorage"], [461, 2, 1, "", "UltrasoundMultiFrameImageStorage"], [462, 2, 1, "", "UncompressedTransferSyntaxes"], [463, 2, 1, "", "VLEndoscopicImageStorage"], [464, 2, 1, "", "VLMicroscopicImageStorage"], [465, 2, 1, "", "VLPhotographicImageStorage"], [466, 2, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [467, 2, 1, "", "VLWholeSlideMicroscopyImageStorage"], [468, 2, 1, "", "VariableModalityLUTSoftcopyPresentationStateStorage"], [469, 2, 1, "", "VideoEndoscopicImageStorage"], [470, 2, 1, "", "VideoMicroscopicImageStorage"], [471, 2, 1, "", "VideoPhotographicImageStorage"], [472, 2, 1, "", "VisualAcuityMeasurementsStorage"], [473, 2, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [474, 2, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [475, 2, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [476, 2, 1, "", "XADefinedProcedureProtocolStorage"], [477, 2, 1, "", "XAPerformedProcedureProtocolStorage"], [478, 2, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [479, 2, 1, "", "XRay3DAngiographicImageStorage"], [480, 2, 1, "", "XRay3DCraniofacialImageStorage"], [481, 2, 1, "", "XRayAngiographicImageStorage"], [482, 2, 1, "", "XRayRadiationDoseSRStorage"], [483, 2, 1, "", "XRayRadiofluoroscopicImageStorage"], [484, 1, 1, "", "generate_uid"], [485, 1, 1, "", "register_transfer_syntax"]], "pydicom.uid.UID": [[459, 6, 1, "", "__init__"], [459, 4, 1, "", "info"], [459, 4, 1, "", "is_compressed"], [459, 4, 1, "", "is_deflated"], [459, 4, 1, "", "is_encapsulated"], [459, 4, 1, "", "is_implicit_VR"], [459, 4, 1, "", "is_little_endian"], [459, 4, 1, "", "is_private"], [459, 4, 1, "", "is_retired"], [459, 4, 1, "", "is_transfer_syntax"], [459, 4, 1, "", "is_valid"], [459, 4, 1, "", "keyword"], [459, 4, 1, "", "name"], [459, 6, 1, "", "set_private_encoding"], [459, 4, 1, "", "type"]], "pydicom.valuerep": [[486, 3, 1, "", "DA"], [487, 1, 1, "", "DS"], [488, 3, 1, "", "DSdecimal"], [489, 3, 1, "", "DSfloat"], [490, 3, 1, "", "DT"], [491, 3, 1, "", "IS"], [492, 3, 1, "", "ISfloat"], [493, 3, 1, "", "PersonName"], [494, 3, 1, "", "TM"], [495, 3, 1, "", "VR"], [496, 1, 1, "", "format_number_as_ds"], [497, 1, 1, "", "is_valid_ds"]], "pydicom.valuerep.DA": [[486, 6, 1, "", "__init__"]], "pydicom.valuerep.DSdecimal": [[488, 6, 1, "", "__init__"]], "pydicom.valuerep.DSfloat": [[489, 6, 1, "", "__init__"]], "pydicom.valuerep.DT": [[490, 6, 1, "", "__init__"]], "pydicom.valuerep.IS": [[491, 6, 1, "", "__init__"]], "pydicom.valuerep.ISfloat": [[492, 6, 1, "", "__init__"]], "pydicom.valuerep.PersonName": [[493, 6, 1, "", "__init__"], [493, 4, 1, "", "alphabetic"], [493, 4, 1, "", "components"], [493, 6, 1, "", "decode"], [493, 6, 1, "", "encode"], [493, 6, 1, "", "family_comma_given"], [493, 4, 1, "", "family_name"], [493, 6, 1, "", "formatted"], [493, 6, 1, "", "from_named_components"], [493, 6, 1, "", "from_named_components_veterinary"], [493, 4, 1, "", "given_name"], [493, 4, 1, "", "ideographic"], [493, 4, 1, "", "middle_name"], [493, 4, 1, "", "name_prefix"], [493, 4, 1, "", "name_suffix"], [493, 4, 1, "", "phonetic"]], "pydicom.valuerep.TM": [[494, 6, 1, "", "__init__"]], "pydicom.valuerep.VR": [[495, 6, 1, "", "__init__"]], "pydicom.values": [[498, 1, 1, "", "convert_AE_string"], [499, 1, 1, "", "convert_ATvalue"], [500, 1, 1, "", "convert_DA_string"], [501, 1, 1, "", "convert_DS_string"], [502, 1, 1, "", "convert_DT_string"], [503, 1, 1, "", "convert_IS_string"], [504, 1, 1, "", "convert_OBvalue"], [505, 1, 1, "", "convert_OWvalue"], [506, 1, 1, "", "convert_PN"], [507, 1, 1, "", "convert_SQ"], [508, 1, 1, "", "convert_TM_string"], [509, 1, 1, "", "convert_UI"], [510, 1, 1, "", "convert_UN"], [511, 1, 1, "", "convert_UR_string"], [512, 1, 1, "", "convert_numbers"], [513, 1, 1, "", "convert_single_string"], [514, 1, 1, "", "convert_string"], [515, 1, 1, "", "convert_tag"], [516, 1, 1, "", "convert_text"], [517, 1, 1, "", "convert_value"], [518, 1, 1, "", "multi_string"]], "pydicom.waveforms": [[519, 0, 0, "-", "numpy_handler"]], "pydicom.waveforms.numpy_handler": [[519, 1, 1, "", "generate_multiplex"], [519, 1, 1, "", "is_available"], [519, 1, 1, "", "multiplex_array"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:method", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"show": [0, 14, 26, 28], "dicom": [0, 10, 11, 12, 16, 17, 20, 24, 26, 42, 46, 48, 53, 57, 74, 558, 560, 563], "file": [0, 10, 17, 20, 24, 26, 37, 48, 53, 74, 530, 534, 537, 538, 558, 560], "us": [0, 2, 23, 43, 44, 49, 53, 560, 561], "hierarch": 0, "tree": 0, "imag": [1, 2, 4, 6, 29, 36, 37, 49], "process": [1, 6, 15, 29], "downsiz": 2, "mri": 2, "pydicom": [2, 23, 24, 26, 27, 28, 33, 40, 41, 42, 43, 44, 46, 47, 49, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 523, 524, 525, 526, 527, 528, 529, 530, 550, 551, 553, 560, 561], "decod": [3, 29, 30, 31, 54, 65, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 525, 526, 563], "plot": [3, 4, 9], "waveform": [3, 52, 519, 529, 563], "data": [3, 8, 9, 12, 17, 29, 30, 31, 34, 35, 44, 45, 46, 50, 51, 52, 56, 57, 59, 60, 66, 103, 104, 105, 106, 520, 521, 524, 525, 526, 527, 529, 557, 561, 563], "load": [4, 558], "ct": 4, "slice": 4, "axial": 4, "sagitt": 4, "coron": 4, "comput": [5, 13, 19, 21, 552], "time": [5, 13, 19, 21, 552], "gener": [6, 23, 39], "exampl": [6, 24, 26, 36, 40, 68, 556, 560], "input": [6, 7], "output": [6, 7, 8], "metadata": [6, 15], "format": [8, 557], "set": [8, 10, 46, 74, 98, 558], "print": 8, "read": [9, 10, 11, 48, 71, 556], "dataset": [9, 14, 41, 44, 50, 51, 52, 56, 58, 68, 69, 71, 73, 130, 131, 132, 133, 134, 556, 557], "pixel": [9, 29, 30, 31, 34, 35, 36, 37, 44, 45, 51, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 520, 521, 525, 526, 527, 561], "rtplan": 11, "list": [11, 528], "inform": [11, 37], "write": [12, 39, 48, 53, 73, 554, 556], "work": [14, 18, 50, 51, 52, 557], "memori": 14, "base": [14, 70, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "add": 16, "item": 16, "privat": [16, 46, 57], "dictionari": [16, 46, 57], "anonym": 17, "singl": 17, "sequenc": [18, 41, 62, 243, 556], "analys": 20, "differ": 20, "between": 20, "displai": [22, 46], "unicod": 22, "person": 22, "name": 22, "frequent": 23, "ask": 23, "question": 23, "how": [23, 560], "do": 23, "i": [23, 491], "cite": 23, "instal": [23, 26, 27, 43, 554, 560], "what": [23, 554, 555], "ar": 23, "": 23, "prerequisit": 23, "requir": [23, 30, 34, 554], "option": [23, 24, 26, 29, 33, 55, 554, 560], "version": [23, 42, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 560], "python": [23, 32, 49], "can": 23, "codifi": [24, 26, 53], "command": [24, 26, 28], "A": [24, 26], "simpl": [24, 26], "part": [24, 26], "extend": [25, 26], "cli": [25, 26, 27], "line": 26, "interfac": 26, "guid": [26, 38, 40, 47], "introduct": [26, 27, 42, 43, 46, 49, 50, 51, 52, 53, 557, 561], "combin": [26, 27], "other": [26, 27, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540], "miscellan": [29, 523], "plugin": [29, 30, 33, 34, 36], "rle": [29, 36], "lossless": [29, 36], "ad": [30, 34, 46, 556, 558], "element": [32, 41, 46, 59, 60, 61, 62, 63, 64, 65, 556], "vr": [32, 495], "type": [32, 39], "encod": [33, 34, 35, 36, 54, 237, 238, 525, 527, 563], "gdcm": [33, 560], "pylibjpeg": [33, 560], "an": 34, "valid": [36, 42], "paramet": 36, "avail": 36, "glossari": 37, "meta": 37, "modul": 37, "document": [39, 40, 530, 542, 554, 555], "style": 39, "guidelin": 39, "restructuredtext": 39, "get": [40, 56, 556], "start": 40, "user": [40, 47], "api": [40, 522], "refer": [40, 522], "core": 41, "datael": [41, 127], "tag": [41, 63, 244, 245, 246, 247], "best": 42, "practic": 42, "enforc": 42, "futur": 42, "proof": 42, "your": [42, 554, 555], "code": [42, 554], "limit": 42, "major": [42, 530, 531, 532, 533, 534, 535, 536, 537, 539], "packag": [42, 44, 561], "licens": 43, "support": [43, 44, 45, 557], "next": [43, 554, 555, 556], "step": [43, 556], "compress": [44, 45, 561], "third": [44, 561], "parti": [44, 561], "transfer": [44, 45, 528], "syntax": [44, 45, 528], "handl": [45, 524], "precondit": 45, "usag": [45, 68], "remov": [46, 530, 551, 558], "all": 46, "new": [46, 530, 534, 554, 555, 558], "entri": 46, "pars": [48, 66], "view": [49, 556], "matplotlib": 49, "tkinter": 49, "librari": [49, 554, 560], "pil": 49, "wxpython": 49, "overlai": [50, 204, 524], "overlay_arrai": 50, "pixel_arrai": [51, 242], "color": 51, "space": 51, "palett": 51, "modal": 51, "lut": 51, "rescal": 51, "oper": 51, "voi": 51, "window": 51, "waveform_arrai": 52, "from": [53, 557], "scratch": 53, "charact": 54, "charset": [54, 75, 76, 77, 78], "configur": 55, "config": [55, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "includ": 56, "util": [57, 66, 72, 218, 520, 525, 528], "datadict": [57, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "represent": [58, 59, 61, 62, 64], "dataelem": [60, 127, 128, 129], "multi": 61, "valu": [61, 62, 64, 65, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518], "multiv": [61, 203], "special": 64, "valuerep": [64, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497], "bulk": [66, 520], "encapsul": [66, 137, 561], "encap": [66, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "creat": [66, 554, 555, 557, 558], "except": 67, "error": [67, 153], "io": [69, 70, 72], "class": [70, 528], "filebas": [70, 154, 155, 156, 157], "fileread": [71, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "fileutil": [72, 174, 175, 176, 177, 178], "filewrit": [73, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "fileset": [74, 168, 169, 170, 171, 172, 173, 558], "convert_encod": 75, "decode_byt": 76, "decode_el": 77, "encode_str": 78, "apply_j2k_correct": 79, "ds_decim": 80, "ds_numpi": 81, "ignor": 82, "invalid_keyword_behavior": 83, "invalid_key_behavior": 84, "rais": 85, "warn": 86, "allow_ds_float": 87, "assume_implicit_vr_switch": 88, "convert_wrong_length_to_un": 89, "data_element_callback": 90, "data_element_callback_kwarg": 91, "datetime_convers": 92, "debug": 93, "enforce_valid_valu": 94, "future_behavior": 95, "pixel_data_handl": [96, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 521], "reset_data_element_callback": 97, "show_file_meta": 99, "use_ds_decim": 100, "use_ds_numpi": 101, "use_is_numpi": 102, "get_charset_fil": 103, "get_palette_fil": 104, "get_testdata_fil": [105, 106], "add_dict_entri": [107, 108], "add_private_dict_entri": [109, 110], "dictionary_vm": 111, "dictionary_vr": 112, "dictionary_descript": 113, "dictionary_has_tag": 114, "dictionary_is_retir": 115, "dictionary_keyword": 116, "get_entri": 117, "get_private_entri": 118, "keyword_for_tag": 119, "mask_match": 120, "private_dictionary_vm": 121, "private_dictionary_vr": 122, "private_dictionary_descript": 123, "repeater_has_keyword": 124, "repeater_has_tag": 125, "tag_for_keyword": 126, "dataelement_from_raw": 128, "rawdatael": 129, "filedataset": 131, "filemetadataset": 132, "privateblock": 133, "validate_file_meta": 134, "decode_data_sequ": 135, "defragment_data": 136, "encapsulate_extend": 138, "fragment_fram": 139, "generate_fragmented_fram": 140, "generate_frag": 141, "generate_fram": 142, "generate_pixel_data": 143, "generate_pixel_data_frag": 144, "generate_pixel_data_fram": 145, "get_fram": 146, "get_frame_offset": 147, "itemize_frag": 148, "itemize_fram": 149, "parse_basic_offset": 150, "parse_frag": 151, "read_item": 152, "invaliddicomerror": 153, "dicombytesio": 154, "dicomfil": 155, "dicomfilelik": 156, "dicomio": 157, "data_element_gener": 158, "data_element_offset_to_valu": 159, "dcmread": 160, "read_dataset": 161, "read_deferred_data_el": 162, "read_file_meta_info": 163, "read_parti": 164, "read_preambl": 165, "read_sequ": 166, "read_sequence_item": 167, "directory_record": 168, "fileinst": 169, "recordnod": 171, "generate_filenam": 172, "is_conformant_file_id": 173, "absorb_delimiter_item": 174, "find_byt": 175, "find_delimit": 176, "length_of_undefined_length": 177, "read_undefined_length_valu": 178, "correct_ambiguous_vr": 179, "correct_ambiguous_vr_el": 180, "dcmwrite": 181, "multi_str": [182, 518], "write_atvalu": 183, "write_da": 184, "write_dt": 185, "write_obvalu": 186, "write_owvalu": 187, "write_pn": 188, "write_tm": 189, "write_ui": 190, "write_un": 191, "write_data_el": 192, "write_dataset": 193, "write_file_meta_info": 194, "write_number_str": 195, "write_numb": 196, "write_sequ": 197, "write_sequence_item": 198, "write_str": 199, "write_text": 200, "misc": [201, 202, 523], "is_dicom": 201, "size_in_byt": 202, "multivalu": 203, "numpy_handl": [204, 214, 519], "apply_color_lut": 205, "apply_modality_lut": 206, "apply_rescal": 207, "apply_voi": 208, "apply_voi_lut": 209, "apply_window": 210, "convert_color_spac": 211, "gdcm_handler": 212, "jpeg_ls_handl": 213, "pillow_handl": 215, "pylibjpeg_handl": 216, "rle_handl": 217, "decoderunn": 219, "deflatedexplicitvrlittleendiandecod": 221, "explicitvrbigendiandecod": 222, "explicitvrlittleendiandecod": 223, "htj2kdecod": 224, "htj2klosslessdecod": 225, "htj2klosslessrpcldecod": 226, "implicitvrlittleendiandecod": 227, "jpeg2000decod": 228, "jpeg2000losslessdecod": 229, "jpegbaseline8bitdecod": 230, "jpegextended12bitdecod": 231, "jpeglslosslessdecod": 232, "jpeglsnearlosslessdecod": 233, "jpeglosslessdecod": 234, "jpeglosslesssv1decod": 235, "rlelosslessdecod": 236, "rlelosslessencod": 238, "get_decod": 239, "get_encod": 240, "iter_pixel": 241, "basetag": 244, "tupletag": 246, "tag_in_except": 247, "uid": [248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 528], "acquisitioncontextsrstorag": 248, "advancedblendingpresentationstatestorag": 249, "alltransfersyntax": 250, "ambulatoryecgwaveformstorag": 251, "arterialpulsewaveformstorag": 252, "autorefractionmeasurementsstorag": 253, "basicstructureddisplaystorag": 254, "basictextsrstorag": 255, "basicvoiceaudiowaveformstorag": 256, "blendingsoftcopypresentationstatestorag": 257, "bodypositionwaveformstorag": 258, "breastprojectionxrayimagestorageforpresent": 259, "breastprojectionxrayimagestorageforprocess": 260, "breasttomosynthesisimagestorag": 261, "carmphotonelectronradiationrecordstorag": 262, "carmphotonelectronradiationstorag": 263, "ctdefinedprocedureprotocolstorag": 264, "ctimagestorag": 265, "ctperformedprocedureprotocolstorag": 266, "cardiacelectrophysiologywaveformstorag": 267, "chestcadsrstorag": 268, "coloncadsrstorag": 269, "colorpalettestorag": 270, "colorsoftcopypresentationstatestorag": 271, "compositingplanarmprvolumetricpresentationstatestorag": 272, "comprehensive3dsrstorag": 273, "comprehensivesrstorag": 274, "computedradiographyimagestorag": 275, "confocalmicroscopyimagestorag": 276, "confocalmicroscopytiledpyramidalimagestorag": 277, "contentassessmentresultsstorag": 278, "cornealtopographymapstorag": 279, "dicos2daitstorag": 280, "dicos3daitstorag": 281, "dicosctimagestorag": 282, "dicosdigitalxrayimagestorageforpresent": 283, "dicosdigitalxrayimagestorageforprocess": 284, "dicosquadrupoleresonancestorag": 285, "dicosthreatdetectionreportstorag": 286, "deflatedexplicitvrlittleendian": 287, "deformablespatialregistrationstorag": 288, "dermoscopicphotographyimagestorag": 289, "digitalintraoralxrayimagestorageforpresent": 290, "digitalintraoralxrayimagestorageforprocess": 291, "digitalmammographyxrayimagestorageforpresent": 292, "digitalmammographyxrayimagestorageforprocess": 293, "digitalxrayimagestorageforpresent": 294, "digitalxrayimagestorageforprocess": 295, "eddycurrentimagestorag": 296, "eddycurrentmultiframeimagestorag": 297, "electromyogramwaveformstorag": 298, "electrooculogramwaveformstorag": 299, "encapsulatedcdastorag": 300, "encapsulatedmtlstorag": 301, "encapsulatedobjstorag": 302, "encapsulatedpdfstorag": 303, "encapsulatedstlstorag": 304, "enhancedctimagestorag": 305, "enhancedcontinuousrtimagestorag": 306, "enhancedmrcolorimagestorag": 307, "enhancedmrimagestorag": 308, "enhancedpetimagestorag": 309, "enhancedrtimagestorag": 310, "enhancedsrstorag": 311, "enhancedusvolumestorag": 312, "enhancedxaimagestorag": 313, "enhancedxrfimagestorag": 314, "enhancedxrayradiationdosesrstorag": 315, "explicitvrbigendian": 316, "explicitvrlittleendian": 317, "extensiblesrstorag": 318, "general32bitecgwaveformstorag": 319, "generalaudiowaveformstorag": 320, "generalecgwaveformstorag": 321, "genericimplanttemplatestorag": 322, "grayscaleplanarmprvolumetricpresentationstatestorag": 323, "grayscalesoftcopypresentationstatestorag": 324, "hevcm10p51": 325, "hevcmp51": 326, "htj2k": 327, "htj2klossless": 328, "htj2klosslessrpcl": 329, "hangingprotocolstorag": 330, "hemodynamicwaveformstorag": 331, "implantassemblytemplatestorag": 332, "implanttemplategroupstorag": 333, "implantationplansrstorag": 334, "implicitvrlittleendian": 335, "intraocularlenscalculationsstorag": 336, "intravascularopticalcoherencetomographyimagestorageforpresent": 337, "intravascularopticalcoherencetomographyimagestorageforprocess": 338, "inventorystorag": 339, "jpeg2000": 340, "jpeg2000lossless": 341, "jpeg2000mc": 342, "jpeg2000mclossless": 343, "jpeg2000transfersyntax": 344, "jpegbaseline8bit": 345, "jpegextended12bit": 346, "jpeglslossless": 347, "jpeglsnearlossless": 348, "jpeglstransfersyntax": 349, "jpeglossless": 350, "jpeglosslesssv1": 351, "jpegtransfersyntax": 352, "jpiphtj2kreferenc": 353, "jpiphtj2kreferenceddefl": 354, "keratometrymeasurementsstorag": 355, "keyobjectselectiondocumentstorag": 356, "legacyconvertedenhancedctimagestorag": 357, "legacyconvertedenhancedmrimagestorag": 358, "legacyconvertedenhancedpetimagestorag": 359, "lensometrymeasurementsstorag": 360, "mpeg2mphl": 361, "mpeg2mphlf": 362, "mpeg2mpml": 363, "mpeg2mpmlf": 364, "mpeg4hp41": 365, "mpeg4hp41bd": 366, "mpeg4hp41bdf": 367, "mpeg4hp41f": 368, "mpeg4hp422d": 369, "mpeg4hp422df": 370, "mpeg4hp423d": 371, "mpeg4hp423df": 372, "mpeg4hp42stereo": 373, "mpeg4hp42stereof": 374, "mpegtransfersyntax": 375, "mrimagestorag": 376, "mrspectroscopystorag": 377, "maculargridthicknessandvolumereportstorag": 378, "mammographycadsrstorag": 379, "mediastoragedirectorystorag": 380, "microscopybulksimpleannotationsstorag": 381, "multiframegrayscalebytesecondarycaptureimagestorag": 382, "multiframegrayscalewordsecondarycaptureimagestorag": 383, "multiframesinglebitsecondarycaptureimagestorag": 384, "multiframetruecolorsecondarycaptureimagestorag": 385, "multichannelrespiratorywaveformstorag": 386, "multiplevolumerenderingvolumetricpresentationstatestorag": 387, "nuclearmedicineimagestorag": 388, "ophthalmicaxialmeasurementsstorag": 389, "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorag": 390, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 391, "ophthalmicphotography16bitimagestorag": 392, "ophthalmicphotography8bitimagestorag": 393, "ophthalmicthicknessmapstorag": 394, "ophthalmictomographyimagestorag": 395, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 396, "pydicom_implementation_uid": 397, "pydicom_root_uid": 398, "parametricmapstorag": 399, "patientradiationdosesrstorag": 400, "performedimagingagentadministrationsrstorag": 401, "photoacousticimagestorag": 402, "plannedimagingagentadministrationsrstorag": 403, "positronemissiontomographyimagestorag": 404, "privatetransfersyntax": 405, "procedurelogstorag": 406, "protocolapprovalstorag": 407, "pseudocolorsoftcopypresentationstatestorag": 408, "re_valid_uid": 409, "re_valid_uid_prefix": 410, "rlelossless": 411, "rletransfersyntax": 412, "rtbeamsdeliveryinstructionstorag": 413, "rtbeamstreatmentrecordstorag": 414, "rtbrachyapplicationsetupdeliveryinstructionstorag": 415, "rtbrachytreatmentrecordstorag": 416, "rtdosestorag": 417, "rtimagestorag": 418, "rtionbeamstreatmentrecordstorag": 419, "rtionplanstorag": 420, "rtpatientpositionacquisitioninstructionstorag": 421, "rtphysicianintentstorag": 422, "rtplanstorag": 423, "rtradiationrecordsetstorag": 424, "rtradiationsalvagerecordstorag": 425, "rtradiationsetdeliveryinstructionstorag": 426, "rtradiationsetstorag": 427, "rtsegmentannotationstorag": 428, "rtstructuresetstorag": 429, "rttreatmentpreparationstorag": 430, "rttreatmentsummaryrecordstorag": 431, "radiopharmaceuticalradiationdosesrstorag": 432, "rawdatastorag": 433, "realworldvaluemappingstorag": 434, "respiratorywaveformstorag": 435, "roboticarmradiationstorag": 436, "roboticradiationrecordstorag": 437, "routinescalpelectroencephalogramwaveformstorag": 438, "smptest211020uncompressedinterlacedactivevideo": 439, "smptest211020uncompressedprogressiveactivevideo": 440, "smptest211030pcmdigitalaudio": 441, "secondarycaptureimagestorag": 442, "segmentationstorag": 443, "segmentedvolumerenderingvolumetricpresentationstatestorag": 444, "simplifiedadultechosrstorag": 445, "sleepelectroencephalogramwaveformstorag": 446, "spatialfiducialsstorag": 447, "spatialregistrationstorag": 448, "spectacleprescriptionreportstorag": 449, "stereometricrelationshipstorag": 450, "subjectiverefractionmeasurementsstorag": 451, "surfacescanmeshstorag": 452, "surfacescanpointcloudstorag": 453, "surfacesegmentationstorag": 454, "tomotherapeuticradiationrecordstorag": 455, "tomotherapeuticradiationstorag": 456, "tractographyresultsstorag": 457, "twelveleadecgwaveformstorag": 458, "ultrasoundimagestorag": 460, "ultrasoundmultiframeimagestorag": 461, "uncompressedtransfersyntax": 462, "vlendoscopicimagestorag": 463, "vlmicroscopicimagestorag": 464, "vlphotographicimagestorag": 465, "vlslidecoordinatesmicroscopicimagestorag": 466, "vlwholeslidemicroscopyimagestorag": 467, "variablemodalitylutsoftcopypresentationstatestorag": 468, "videoendoscopicimagestorag": 469, "videomicroscopicimagestorag": 470, "videophotographicimagestorag": 471, "visualacuitymeasurementsstorag": 472, "volumerenderingvolumetricpresentationstatestorag": 473, "widefieldophthalmicphotography3dcoordinatesimagestorag": 474, "widefieldophthalmicphotographystereographicprojectionimagestorag": 475, "xadefinedprocedureprotocolstorag": 476, "xaperformedprocedureprotocolstorag": 477, "xaxrfgrayscalesoftcopypresentationstatestorag": 478, "xray3dangiographicimagestorag": 479, "xray3dcraniofacialimagestorag": 480, "xrayangiographicimagestorag": 481, "xrayradiationdosesrstorag": 482, "xrayradiofluoroscopicimagestorag": 483, "generate_uid": 484, "register_transfer_syntax": 485, "da": 486, "d": 487, "dsdecim": 488, "dsfloat": 489, "dt": 490, "isfloat": 492, "personnam": 493, "tm": 494, "format_number_as_d": 496, "is_valid_d": 497, "convert_ae_str": 498, "convert_atvalu": 499, "convert_da_str": 500, "convert_ds_str": 501, "convert_dt_str": 502, "convert_is_str": 503, "convert_obvalu": 504, "convert_owvalu": 505, "convert_pn": 506, "convert_sq": 507, "convert_tm_str": 508, "convert_ui": 509, "convert_un": 510, "convert_ur_str": 511, "convert_numb": 512, "convert_single_str": 513, "convert_str": 514, "convert_tag": 515, "convert_text": 516, "convert_valu": 517, "handler": [520, 521, 529], "definit": 528, "storag": 528, "sop": [528, 558], "releas": [530, 534, 560], "note": 530, "3": [530, 532, 542, 549, 551], "0": [530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 548, 549, 550, 551], "chang": [530, 531, 532, 533, 535, 536, 537, 538, 539, 541, 542, 543, 544, 546, 548, 549, 550, 551, 554, 555, 558], "enhanc": [530, 531, 532, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 548, 549, 550, 551], "fix": [530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551], "deprec": [530, 551], "intern": [530, 550, 551], "2": [530, 531, 541, 545, 546, 547, 548, 549, 550], "4": [530, 533, 543, 544, 550], "1": [530, 539, 540, 541, 542, 543, 544, 546, 547], "changelog": [530, 545], "infrastructur": [530, 539], "9": [530, 531, 532, 533, 534, 535, 536, 537, 538], "contrib": [530, 534, 537, 538], "contributor": [530, 538], "8": [530, 537], "bug": [530, 531, 532, 533, 535, 536, 537], "7": [530, 536], "6": [530, 535], "5": [530, 534], "thi": [530, 533, 534], "addit": [530, 533], "contribut": [553, 554, 555], "sourc": 554, "download": [554, 555, 560], "current": 554, "pytest": 554, "run": 554, "test": [554, 560], "suit": 554, "branch": [554, 555], "make": [554, 555], "preview": [554, 555], "commit": [554, 555], "pull": [554, 555], "request": [554, 555], "happen": [554, 555], "build": 555, "basic": 556, "access": 556, "modifi": [556, 558], "path": 556, "file_meta": 556, "ani": 556, "categori": 556, "standard": 556, "delet": 556, "json": 557, "convert": 557, "larg": 557, "binari": 557, "dicomdir": 558, "The": 558, "exist": 558, "stage": 558, "instanc": 558, "appli": 558, "conclus": 558, "tutori": 559, "offici": 560, "pip": 560, "conda": 560, "pillow": 560, "pyjpegl": 560, "develop": 560, "structur": 562, "report": 562}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"pydicom.uid.BasicStructuredDisplayStorage": [[254, "pydicom-uid-basicstructureddisplaystorage"]], "pydicom.uid.BreastTomosynthesisImageStorage": [[261, "pydicom-uid-breasttomosynthesisimagestorage"]], "pydicom.uid.AutorefractionMeasurementsStorage": [[253, "pydicom-uid-autorefractionmeasurementsstorage"]], "pydicom.uid.BodyPositionWaveformStorage": [[258, "pydicom-uid-bodypositionwaveformstorage"]], "pydicom.uid.BreastProjectionXRayImageStorageForPresentation": [[259, "pydicom-uid-breastprojectionxrayimagestorageforpresentation"]], "pydicom.uid.CArmPhotonElectronRadiationStorage": [[263, "pydicom-uid-carmphotonelectronradiationstorage"]], "pydicom.uid.BasicTextSRStorage": [[255, "pydicom-uid-basictextsrstorage"]], "pydicom.uid.BlendingSoftcopyPresentationStateStorage": [[257, "pydicom-uid-blendingsoftcopypresentationstatestorage"]], "pydicom.uid.BasicVoiceAudioWaveformStorage": [[256, "pydicom-uid-basicvoiceaudiowaveformstorage"]], "pydicom.uid.CArmPhotonElectronRadiationRecordStorage": [[262, "pydicom-uid-carmphotonelectronradiationrecordstorage"]], "pydicom.uid.BreastProjectionXRayImageStorageForProcessing": [[260, "pydicom-uid-breastprojectionxrayimagestorageforprocessing"]], "pydicom.uid.ArterialPulseWaveformStorage": [[252, "pydicom-uid-arterialpulsewaveformstorage"]], "Show working with memory-based dataset": [[14, "show-working-with-memory-based-dataset"]], "Working with sequences": [[18, "working-with-sequences"]], "Analyse differences between DICOM files": [[20, "analyse-differences-between-dicom-files"]], "Anonymize DICOM data": [[17, "anonymize-dicom-data"]], "Anonymize a single file": [[17, "anonymize-a-single-file"]], "Display unicode person names": [[22, "display-unicode-person-names"]], "Computation times": [[13, "computation-times"], [21, "computation-times"], [19, "computation-times"], [5, "computation-times"], [552, "computation-times"]], "Write DICOM data": [[12, "write-dicom-data"]], "Add items to the private DICOM dictionary": [[16, "add-items-to-the-private-dicom-dictionary"]], "Frequently asked questions": [[23, "frequently-asked-questions"]], "General": [[23, "general"]], "How do I cite pydicom?": [[23, "how-do-i-cite-pydicom"]], "Installation": [[23, "installation"]], "What are pydicom\u2019s prerequisites?": [[23, "what-are-pydicom-s-prerequisites"]], "Required": [[23, "required"]], "Optional": [[23, "optional"]], "What version of Python can I use?": [[23, "what-version-of-python-can-i-use"]], "Metadata processing": [[15, "metadata-processing"], [6, "metadata-processing"]], "Show a dicom file using hierarchical tree": [[0, "show-a-dicom-file-using-hierarchical-tree"]], "Read RTPLAN DICOM and list information": [[11, "read-rtplan-dicom-and-list-information"]], "Read a Dataset and plot Pixel Data": [[9, "read-a-dataset-and-plot-pixel-data"]], "General examples": [[6, "general-examples"]], "Image processing": [[6, "image-processing"], [1, "image-processing"]], "Input-output": [[6, "input-output"], [7, "input-output"]], "Load CT slices and plot axial, sagittal and coronal images": [[4, "load-ct-slices-and-plot-axial-sagittal-and-coronal-images"]], "Decode and plot Waveform Data": [[3, "decode-and-plot-waveform-data"]], "Format the output of the data set printing": [[8, "format-the-output-of-the-data-set-printing"]], "Downsize MRI image using pydicom": [[2, "downsize-mri-image-using-pydicom"]], "Read a DICOM File-set": [[10, "read-a-dicom-file-set"]], "pydicom.config.debug": [[93, "pydicom-config-debug"]], "pydicom.config.assume_implicit_vr_switch": [[88, "pydicom-config-assume-implicit-vr-switch"]], "pydicom.config.allow_DS_float": [[87, "pydicom-config-allow-ds-float"]], "pydicom.config.WARN": [[86, "pydicom-config-warn"]], "pydicom.config.data_element_callback": [[90, "pydicom-config-data-element-callback"]], "pydicom.config.convert_wrong_length_to_UN": [[89, "pydicom-config-convert-wrong-length-to-un"]], "pydicom.config.data_element_callback_kwargs": [[91, "pydicom-config-data-element-callback-kwargs"]], "pydicom.config.datetime_conversion": [[92, "pydicom-config-datetime-conversion"]], "pydicom.config.enforce_valid_values": [[94, "pydicom-config-enforce-valid-values"]], "pydicom.config.INVALID_KEY_BEHAVIOR": [[84, "pydicom-config-invalid-key-behavior"]], "pydicom.config.future_behavior": [[95, "pydicom-config-future-behavior"]], "pydicom.config.RAISE": [[85, "pydicom-config-raise"]], "Introduction": [[27, "introduction"], [26, "introduction"], [42, "introduction"], [43, "introduction"], [46, "introduction"], [49, "introduction"], [50, "introduction"], [53, "introduction"], [51, "introduction"], [52, "introduction"], [561, "introduction"]], "Installing the pydicom CLI": [[27, "installing-the-pydicom-cli"], [26, "installing-the-pydicom-cli"]], "Combining with other CLIs": [[27, "combining-with-other-clis"], [26, "combining-with-other-clis"]], "Pixel Data Encoding": [[35, "pixel-data-encoding"], [525, "pixel-data-encoding"]], "Encoder Plugins Options": [[33, "encoder-plugins-options"]], "pydicom": [[33, "pydicom"]], "gdcm": [[33, "gdcm"]], "pylibjpeg": [[33, "pylibjpeg"]], "Pixel Data Decoder Plugins": [[30, "pixel-data-decoder-plugins"]], "Plugin Requirements": [[30, "plugin-requirements"], [34, "plugin-requirements"]], "Adding Plugins to a Decoder": [[30, "adding-plugins-to-a-decoder"]], "Pixel Data Decoder Options": [[29, "pixel-data-decoder-options"]], "Image Pixel Options": [[29, "image-pixel-options"]], "Image Processing Options": [[29, "image-processing-options"]], "Miscellaneous Options": [[29, "miscellaneous-options"]], "Decoding Plugin Options": [[29, "decoding-plugin-options"]], "RLE Lossless": [[29, "rle-lossless"]], "Element VRs and Python types": [[32, "element-vrs-and-python-types"]], "Extending the CLI": [[25, "extending-the-cli"], [26, "extending-the-cli"]], "pydicom show command": [[28, "pydicom-show-command"], [26, "pydicom-show-command"]], "pydicom codify command": [[24, "pydicom-codify-command"], [26, "pydicom-codify-command"]], "A simple example": [[24, "a-simple-example"], [26, "a-simple-example"]], "Command options": [[24, "command-options"], [26, "command-options"]], "Codifying a part of a DICOM file": [[24, "codifying-a-part-of-a-dicom-file"], [26, "codifying-a-part-of-a-dicom-file"]], "Pixel Data Decoding": [[31, "pixel-data-decoding"], [525, "pixel-data-decoding"]], "Pixel Data Encoder Plugins": [[34, "pixel-data-encoder-plugins"]], "Adding Plugins to an Encoder": [[34, "adding-plugins-to-an-encoder"]], "Command-line Interface Guide": [[26, "command-line-interface-guide"]], "Core elements in pydicom": [[41, "core-elements-in-pydicom"]], "Dataset": [[41, "dataset"]], "DataElement": [[41, "dataelement"]], "Tag": [[41, "tag"]], "Sequence": [[41, "sequence"]], "pydicom User Guide": [[47, "pydicom-user-guide"]], "Compressing Pixel Data": [[44, "compressing-pixel-data"], [561, "compressing-pixel-data"]], "Compressing using third-party packages": [[44, "compressing-using-third-party-packages"]], "Compressing using pydicom": [[44, "compressing-using-pydicom"], [561, "compressing-using-pydicom"]], "Supported Transfer Syntaxes": [[44, "supported-transfer-syntaxes"], [45, "supported-transfer-syntaxes"]], "Compressing with Dataset.compress()": [[44, "compressing-with-dataset-compress"]], "Handling of compressed pixel data": [[45, "handling-of-compressed-pixel-data"]], "Preconditions": [[45, "preconditions"]], "Usage": [[45, "usage"], [68, "usage"]], "Writing documentation": [[39, "writing-documentation"]], "Types of documentation": [[39, "types-of-documentation"]], "General style guidelines": [[39, "general-style-guidelines"]], "Guidelines for reStructuredText": [[39, "guidelines-for-restructuredtext"]], "Best Practices": [[42, "best-practices"]], "Enforcing Valid DICOM": [[42, "enforcing-valid-dicom"]], "Future-proofing your code": [[42, "future-proofing-your-code"]], "Limiting the pydicom major version in your package": [[42, "limiting-the-pydicom-major-version-in-your-package"]], "RLE Lossless Encoding": [[36, "rle-lossless-encoding"]], "Valid Image Pixel Parameters": [[36, "valid-image-pixel-parameters"]], "Available Plugins": [[36, "available-plugins"]], "Examples": [[36, "examples"], [40, "examples"]], "pydicom documentation": [[40, "pydicom-documentation"]], "Getting Started": [[40, "getting-started"]], "User Guide": [[40, "user-guide"]], "API Reference": [[40, "api-reference"], [522, "api-reference"]], "Glossary": [[37, "glossary"]], "File Meta Information": [[37, "file-meta-information"]], "Image Pixel Module": [[37, "image-pixel-module"]], "Guides": [[38, "guides"]], "Introduction to pydicom": [[43, "introduction-to-pydicom"]], "License": [[43, "license"]], "Installing": [[43, "installing"]], "Using pydicom": [[43, "using-pydicom"]], "Support": [[43, "support"]], "Next Steps": [[43, "next-steps"]], "Private Data Elements": [[46, "private-data-elements"]], "Displaying Private Data Elements in pydicom": [[46, "displaying-private-data-elements-in-pydicom"]], "Setting Private Data Elements with pydicom": [[46, "setting-private-data-elements-with-pydicom"]], "Removing All Private Data Elements": [[46, "removing-all-private-data-elements"]], "Adding new entries to the DICOM dictionary": [[46, "adding-new-entries-to-the-dicom-dictionary"]], "Representation of Data Elements": [[59, "representation-of-data-elements"]], "Character Encoding and Decoding (pydicom.charset)": [[54, "character-encoding-and-decoding-pydicom-charset"]], "Configuration Options (pydicom.config)": [[55, "configuration-options-pydicom-config"]], "Viewing Images": [[49, "viewing-images"]], "Using pydicom with matplotlib": [[49, "using-pydicom-with-matplotlib"]], "Using pydicom with Tkinter": [[49, "using-pydicom-with-tkinter"]], "Using pydicom with Python Imaging Library (PIL)": [[49, "using-pydicom-with-python-imaging-library-pil"]], "Using pydicom with wxPython": [[49, "using-pydicom-with-wxpython"]], "Working with Overlay Data": [[50, "working-with-overlay-data"]], "Dataset.overlay_array()": [[50, "dataset-overlay-array"]], "Reading and writing DICOM files": [[48, "reading-and-writing-dicom-files"]], "File Reading/Parsing": [[48, "file-reading-parsing"]], "File Writing": [[48, "file-writing"]], "Representation of Datasets (pydicom.dataset)": [[58, "representation-of-datasets-pydicom-dataset"]], "Data Dictionary Utilities (pydicom.datadict)": [[57, "data-dictionary-utilities-pydicom-datadict"]], "DICOM Data Dictionary": [[57, "dicom-data-dictionary"]], "Private Data Dictionary": [[57, "private-data-dictionary"]], "Getting Included Datasets (pydicom.data)": [[56, "getting-included-datasets-pydicom-data"]], "Writing DICOM Files": [[53, "writing-dicom-files"]], "Using Codify": [[53, "using-codify"]], "Writing a file from Scratch": [[53, "writing-a-file-from-scratch"]], "Working with Pixel Data": [[51, "working-with-pixel-data"]], "Dataset.pixel_array": [[51, "dataset-pixel-array"]], "Color space": [[51, "color-space"]], "Palette Color": [[51, "palette-color"]], "Modality LUT or Rescale Operation": [[51, "modality-lut-or-rescale-operation"]], "VOI LUT or Windowing Operation": [[51, "voi-lut-or-windowing-operation"]], "Working with Waveform Data": [[52, "working-with-waveform-data"]], "Dataset.waveform_array()": [[52, "dataset-waveform-array"]], "DICOM File-sets (pydicom.fileset)": [[74, "dicom-file-sets-pydicom-fileset"]], "pydicom.config.INVALID_KEYWORD_BEHAVIOR": [[83, "pydicom-config-invalid-keyword-behavior"]], "pydicom.config.IGNORE": [[82, "pydicom-config-ignore"]], "pydicom.config.DS_decimal": [[80, "pydicom-config-ds-decimal"]], "pydicom.charset.encode_string": [[78, "pydicom-charset-encode-string"]], "pydicom.charset.decode_bytes": [[76, "pydicom-charset-decode-bytes"]], "pydicom.charset.convert_encodings": [[75, "pydicom-charset-convert-encodings"]], "pydicom.config.APPLY_J2K_CORRECTIONS": [[79, "pydicom-config-apply-j2k-corrections"]], "IO Utilities (pydicom.fileutil)": [[72, "io-utilities-pydicom-fileutil"]], "pydicom.config.DS_numpy": [[81, "pydicom-config-ds-numpy"]], "pydicom.charset.decode_element": [[77, "pydicom-charset-decode-element"]], "Dataset Writing (pydicom.filewriter)": [[73, "dataset-writing-pydicom-filewriter"]], "Sequence Element Value Representation (pydicom.sequence)": [[62, "sequence-element-value-representation-pydicom-sequence"]], "Element Value Decoding (pydicom.values)": [[65, "element-value-decoding-pydicom-values"]], "Bulk Data Encapsulation Utilities (pydicom.encaps)": [[66, "bulk-data-encapsulation-utilities-pydicom-encaps"]], "Parsing Encapsulated Data": [[66, "parsing-encapsulated-data"]], "Creating Encapsulated Data": [[66, "creating-encapsulated-data"]], "Specialized Element Value Representation (pydicom.valuerep)": [[64, "specialized-element-value-representation-pydicom-valuerep"]], "Dataset Reading (pydicom.filereader)": [[71, "dataset-reading-pydicom-filereader"]], "Element Tags (pydicom.tag)": [[63, "element-tags-pydicom-tag"]], "Example Datasets (pydicom.examples)": [[68, "example-datasets-pydicom-examples"]], "IO Base Classes (pydicom.filebase)": [[70, "io-base-classes-pydicom-filebase"]], "Data Elements (pydicom.dataelem)": [[60, "data-elements-pydicom-dataelem"]], "Element Multi-value Representation (pydicom.multival)": [[61, "element-multi-value-representation-pydicom-multival"]], "Dataset IO": [[69, "dataset-io"]], "Exceptions (pydicom.errors)": [[67, "exceptions-pydicom-errors"]], "pydicom.data.get_charset_files": [[103, "pydicom-data-get-charset-files"]], "pydicom.config.reset_data_element_callback": [[97, "pydicom-config-reset-data-element-callback"]], "pydicom.config.use_DS_numpy": [[101, "pydicom-config-use-ds-numpy"]], "pydicom.data.get_testdata_file": [[105, "pydicom-data-get-testdata-file"]], "pydicom.data.get_palette_files": [[104, "pydicom-data-get-palette-files"]], "pydicom.config.show_file_meta": [[99, "pydicom-config-show-file-meta"]], "pydicom.data.get_testdata_files": [[106, "pydicom-data-get-testdata-files"]], "pydicom.datadict.add_dict_entries": [[107, "pydicom-datadict-add-dict-entries"]], "pydicom.config.settings": [[98, "pydicom-config-settings"]], "pydicom.config.use_IS_numpy": [[102, "pydicom-config-use-is-numpy"]], "pydicom.config.pixel_data_handlers": [[96, "pydicom-config-pixel-data-handlers"]], "pydicom.config.use_DS_decimal": [[100, "pydicom-config-use-ds-decimal"]], "pydicom.datadict.add_private_dict_entries": [[109, "pydicom-datadict-add-private-dict-entries"]], "pydicom.datadict.dictionary_VR": [[112, "pydicom-datadict-dictionary-vr"]], "pydicom.datadict.dictionary_is_retired": [[115, "pydicom-datadict-dictionary-is-retired"]], "pydicom.datadict.get_private_entry": [[118, "pydicom-datadict-get-private-entry"]], "pydicom.datadict.dictionary_keyword": [[116, "pydicom-datadict-dictionary-keyword"]], "pydicom.datadict.add_private_dict_entry": [[110, "pydicom-datadict-add-private-dict-entry"]], "pydicom.datadict.get_entry": [[117, "pydicom-datadict-get-entry"]], "pydicom.datadict.dictionary_VM": [[111, "pydicom-datadict-dictionary-vm"]], "pydicom.datadict.add_dict_entry": [[108, "pydicom-datadict-add-dict-entry"]], "pydicom.datadict.keyword_for_tag": [[119, "pydicom-datadict-keyword-for-tag"]], "pydicom.datadict.dictionary_has_tag": [[114, "pydicom-datadict-dictionary-has-tag"]], "pydicom.datadict.dictionary_description": [[113, "pydicom-datadict-dictionary-description"]], "pydicom.encaps.generate_fragments": [[141, "pydicom-encaps-generate-fragments"]], "pydicom.dataset.FileMetaDataset": [[132, "pydicom-dataset-filemetadataset"]], "pydicom.encaps.generate_fragmented_frames": [[140, "pydicom-encaps-generate-fragmented-frames"]], "pydicom.dataset.validate_file_meta": [[134, "pydicom-dataset-validate-file-meta"]], "pydicom.encaps.fragment_frame": [[139, "pydicom-encaps-fragment-frame"]], "pydicom.encaps.encapsulate_extended": [[138, "pydicom-encaps-encapsulate-extended"]], "pydicom.encaps.generate_frames": [[142, "pydicom-encaps-generate-frames"]], "pydicom.encaps.decode_data_sequence": [[135, "pydicom-encaps-decode-data-sequence"]], "pydicom.encaps.generate_pixel_data": [[143, "pydicom-encaps-generate-pixel-data"]], "pydicom.encaps.encapsulate": [[137, "pydicom-encaps-encapsulate"]], "pydicom.dataset.PrivateBlock": [[133, "pydicom-dataset-privateblock"]], "pydicom.encaps.defragment_data": [[136, "pydicom-encaps-defragment-data"]], "pydicom.encaps.parse_basic_offsets": [[150, "pydicom-encaps-parse-basic-offsets"]], "pydicom.encaps.get_frame": [[146, "pydicom-encaps-get-frame"]], "pydicom.encaps.get_frame_offsets": [[147, "pydicom-encaps-get-frame-offsets"]], "pydicom.encaps.read_item": [[152, "pydicom-encaps-read-item"]], "pydicom.encaps.generate_pixel_data_fragment": [[144, "pydicom-encaps-generate-pixel-data-fragment"]], "pydicom.errors.InvalidDicomError": [[153, "pydicom-errors-invaliddicomerror"]], "pydicom.encaps.parse_fragments": [[151, "pydicom-encaps-parse-fragments"]], "pydicom.encaps.itemize_fragment": [[148, "pydicom-encaps-itemize-fragment"]], "pydicom.encaps.generate_pixel_data_frame": [[145, "pydicom-encaps-generate-pixel-data-frame"]], "pydicom.filebase.DicomBytesIO": [[154, "pydicom-filebase-dicombytesio"]], "pydicom.filebase.DicomFile": [[155, "pydicom-filebase-dicomfile"]], "pydicom.encaps.itemize_frame": [[149, "pydicom-encaps-itemize-frame"]], "pydicom.filereader.read_preamble": [[165, "pydicom-filereader-read-preamble"]], "pydicom.filereader.data_element_offset_to_value": [[159, "pydicom-filereader-data-element-offset-to-value"]], "pydicom.filereader.dcmread": [[160, "pydicom-filereader-dcmread"]], "pydicom.filereader.read_file_meta_info": [[163, "pydicom-filereader-read-file-meta-info"]], "pydicom.filereader.read_partial": [[164, "pydicom-filereader-read-partial"]], "pydicom.filereader.data_element_generator": [[158, "pydicom-filereader-data-element-generator"]], "pydicom.filebase.DicomFileLike": [[156, "pydicom-filebase-dicomfilelike"]], "pydicom.filereader.read_sequence_item": [[167, "pydicom-filereader-read-sequence-item"]], "pydicom.filereader.read_deferred_data_element": [[162, "pydicom-filereader-read-deferred-data-element"]], "pydicom.filereader.read_sequence": [[166, "pydicom-filereader-read-sequence"]], "pydicom.filereader.read_dataset": [[161, "pydicom-filereader-read-dataset"]], "pydicom.filebase.DicomIO": [[157, "pydicom-filebase-dicomio"]], "pydicom.fileutil.absorb_delimiter_item": [[174, "pydicom-fileutil-absorb-delimiter-item"]], "pydicom.fileset.FileSet": [[170, "pydicom-fileset-fileset"]], "pydicom.fileset.is_conformant_file_id": [[173, "pydicom-fileset-is-conformant-file-id"]], "pydicom.fileutil.length_of_undefined_length": [[177, "pydicom-fileutil-length-of-undefined-length"]], "pydicom.fileutil.read_undefined_length_value": [[178, "pydicom-fileutil-read-undefined-length-value"]], "pydicom.fileset.RecordNode": [[171, "pydicom-fileset-recordnode"]], "pydicom.filewriter.correct_ambiguous_vr": [[179, "pydicom-filewriter-correct-ambiguous-vr"]], "pydicom.fileset.FileInstance": [[169, "pydicom-fileset-fileinstance"]], "pydicom.fileutil.find_bytes": [[175, "pydicom-fileutil-find-bytes"]], "pydicom.fileset.generate_filename": [[172, "pydicom-fileset-generate-filename"]], "pydicom.fileset.DIRECTORY_RECORDERS": [[168, "pydicom-fileset-directory-recorders"]], "pydicom.fileutil.find_delimiter": [[176, "pydicom-fileutil-find-delimiter"]], "pydicom.filewriter.multi_string": [[182, "pydicom-filewriter-multi-string"]], "pydicom.filewriter.write_OBvalue": [[186, "pydicom-filewriter-write-obvalue"]], "pydicom.filewriter.write_DA": [[184, "pydicom-filewriter-write-da"]], "pydicom.filewriter.write_ATvalue": [[183, "pydicom-filewriter-write-atvalue"]], "pydicom.filewriter.write_UI": [[190, "pydicom-filewriter-write-ui"]], "pydicom.filewriter.write_TM": [[189, "pydicom-filewriter-write-tm"]], "pydicom.filewriter.write_DT": [[185, "pydicom-filewriter-write-dt"]], "pydicom.filewriter.write_OWvalue": [[187, "pydicom-filewriter-write-owvalue"]], "pydicom.filewriter.write_PN": [[188, "pydicom-filewriter-write-pn"]], "pydicom.filewriter.dcmwrite": [[181, "pydicom-filewriter-dcmwrite"]], "pydicom.filewriter.write_UN": [[191, "pydicom-filewriter-write-un"]], "pydicom.filewriter.correct_ambiguous_vr_element": [[180, "pydicom-filewriter-correct-ambiguous-vr-element"]], "pydicom.filewriter.write_dataset": [[193, "pydicom-filewriter-write-dataset"]], "pydicom.filewriter.write_text": [[200, "pydicom-filewriter-write-text"]], "pydicom.multival.MultiValue": [[203, "pydicom-multival-multivalue"]], "pydicom.filewriter.write_sequence_item": [[198, "pydicom-filewriter-write-sequence-item"]], "pydicom.filewriter.write_data_element": [[192, "pydicom-filewriter-write-data-element"]], "pydicom.filewriter.write_file_meta_info": [[194, "pydicom-filewriter-write-file-meta-info"]], "pydicom.misc.size_in_bytes": [[202, "pydicom-misc-size-in-bytes"]], "pydicom.filewriter.write_sequence": [[197, "pydicom-filewriter-write-sequence"]], "pydicom.filewriter.write_number_string": [[195, "pydicom-filewriter-write-number-string"]], "pydicom.filewriter.write_string": [[199, "pydicom-filewriter-write-string"]], "pydicom.misc.is_dicom": [[201, "pydicom-misc-is-dicom"]], "pydicom.filewriter.write_numbers": [[196, "pydicom-filewriter-write-numbers"]], "pydicom.pixel_data_handlers.apply_voi": [[208, "pydicom-pixel-data-handlers-apply-voi"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[213, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "pydicom.pixel_data_handlers.convert_color_space": [[211, "pydicom-pixel-data-handlers-convert-color-space"]], "pydicom.pixel_data_handlers.gdcm_handler": [[212, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "pydicom.pixel_data_handlers.apply_windowing": [[210, "pydicom-pixel-data-handlers-apply-windowing"]], "pydicom.pixel_data_handlers.apply_voi_lut": [[209, "pydicom-pixel-data-handlers-apply-voi-lut"]], "pydicom.overlays.numpy_handler": [[204, "module-pydicom.overlays.numpy_handler"]], "pydicom.pixel_data_handlers.apply_color_lut": [[205, "pydicom-pixel-data-handlers-apply-color-lut"]], "pydicom.pixel_data_handlers.numpy_handler": [[214, "module-pydicom.pixel_data_handlers.numpy_handler"]], "pydicom.pixel_data_handlers.apply_rescale": [[207, "pydicom-pixel-data-handlers-apply-rescale"]], "pydicom.pixel_data_handlers.pillow_handler": [[215, "module-pydicom.pixel_data_handlers.pillow_handler"]], "pydicom.pixel_data_handlers.apply_modality_lut": [[206, "pydicom-pixel-data-handlers-apply-modality-lut"]], "pydicom.pixels.decoders.base.JPEGLosslessSV1Decoder": [[235, "pydicom-pixels-decoders-base-jpeglosslesssv1decoder"]], "pydicom.pixels.encoders.base.Encoder": [[237, "pydicom-pixels-encoders-base-encoder"]], "pydicom.pixels.decoders.base.JPEG2000LosslessDecoder": [[229, "pydicom-pixels-decoders-base-jpeg2000losslessdecoder"]], "pydicom.pixels.decoders.base.JPEGLSLosslessDecoder": [[232, "pydicom-pixels-decoders-base-jpeglslosslessdecoder"]], "pydicom.pixels.decoders.base.JPEGLSNearLosslessDecoder": [[233, "pydicom-pixels-decoders-base-jpeglsnearlosslessdecoder"]], "pydicom.pixels.decoders.base.RLELosslessDecoder": [[236, "pydicom-pixels-decoders-base-rlelosslessdecoder"]], "pydicom.pixels.decoders.base.JPEGLosslessDecoder": [[234, "pydicom-pixels-decoders-base-jpeglosslessdecoder"]], "pydicom.pixels.decoders.base.JPEG2000Decoder": [[228, "pydicom-pixels-decoders-base-jpeg2000decoder"]], "pydicom.pixels.encoders.base.RLELosslessEncoder": [[238, "pydicom-pixels-encoders-base-rlelosslessencoder"]], "pydicom.pixels.decoders.base.JPEGBaseline8BitDecoder": [[230, "pydicom-pixels-decoders-base-jpegbaseline8bitdecoder"]], "pydicom.pixels.decoders.base.JPEGExtended12BitDecoder": [[231, "pydicom-pixels-decoders-base-jpegextended12bitdecoder"]], "pydicom.pixels.get_decoder": [[239, "pydicom-pixels-get-decoder"]], "pydicom.sequence.Sequence": [[243, "pydicom-sequence-sequence"]], "pydicom.pixels.get_encoder": [[240, "pydicom-pixels-get-encoder"]], "pydicom.tag.TupleTag": [[246, "pydicom-tag-tupletag"]], "pydicom.tag.Tag": [[245, "pydicom-tag-tag"]], "pydicom.tag.tag_in_exception": [[247, "pydicom-tag-tag-in-exception"]], "pydicom.uid.AllTransferSyntaxes": [[250, "pydicom-uid-alltransfersyntaxes"]], "pydicom.uid.AmbulatoryECGWaveformStorage": [[251, "pydicom-uid-ambulatoryecgwaveformstorage"]], "pydicom.tag.BaseTag": [[244, "pydicom-tag-basetag"]], "pydicom.pixels.pixel_array": [[242, "pydicom-pixels-pixel-array"]], "pydicom.uid.AcquisitionContextSRStorage": [[248, "pydicom-uid-acquisitioncontextsrstorage"]], "pydicom.uid.AdvancedBlendingPresentationStateStorage": [[249, "pydicom-uid-advancedblendingpresentationstatestorage"]], "pydicom.pixels.iter_pixels": [[241, "pydicom-pixels-iter-pixels"]], "pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder": [[222, "pydicom-pixels-decoders-base-explicitvrbigendiandecoder"]], "pydicom.pixel_data_handlers.rle_handler": [[217, "module-pydicom.pixel_data_handlers.rle_handler"]], "pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder": [[227, "pydicom-pixels-decoders-base-implicitvrlittleendiandecoder"]], "pydicom.pixels.decoders.base.HTJ2KLosslessDecoder": [[225, "pydicom-pixels-decoders-base-htj2klosslessdecoder"]], "pydicom.pixels.decoders.base.HTJ2KDecoder": [[224, "pydicom-pixels-decoders-base-htj2kdecoder"]], "pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder": [[223, "pydicom-pixels-decoders-base-explicitvrlittleendiandecoder"]], "pydicom.pixels.decoders.base.HTJ2KLosslessRPCLDecoder": [[226, "pydicom-pixels-decoders-base-htj2klosslessrpcldecoder"]], "pydicom.pixel_data_handlers.util": [[218, "module-pydicom.pixel_data_handlers.util"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[216, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "pydicom.pixels.decoders.base.Decoder": [[220, "pydicom-pixels-decoders-base-decoder"]], "pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder": [[221, "pydicom-pixels-decoders-base-deflatedexplicitvrlittleendiandecoder"]], "pydicom.pixels.decoders.base.DecodeRunner": [[219, "pydicom-pixels-decoders-base-decoderunner"]], "pydicom.uid.ColonCADSRStorage": [[269, "pydicom-uid-coloncadsrstorage"]], "pydicom.uid.CTImageStorage": [[265, "pydicom-uid-ctimagestorage"]], "pydicom.uid.ColorPaletteStorage": [[270, "pydicom-uid-colorpalettestorage"]], "pydicom.uid.CTPerformedProcedureProtocolStorage": [[266, "pydicom-uid-ctperformedprocedureprotocolstorage"]], "pydicom.uid.ComprehensiveSRStorage": [[274, "pydicom-uid-comprehensivesrstorage"]], "pydicom.uid.Comprehensive3DSRStorage": [[273, "pydicom-uid-comprehensive3dsrstorage"]], "pydicom.uid.CTDefinedProcedureProtocolStorage": [[264, "pydicom-uid-ctdefinedprocedureprotocolstorage"]], "pydicom.uid.CardiacElectrophysiologyWaveformStorage": [[267, "pydicom-uid-cardiacelectrophysiologywaveformstorage"]], "pydicom.uid.ColorSoftcopyPresentationStateStorage": [[271, "pydicom-uid-colorsoftcopypresentationstatestorage"]], "pydicom.uid.ComputedRadiographyImageStorage": [[275, "pydicom-uid-computedradiographyimagestorage"]], "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage": [[272, "pydicom-uid-compositingplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.ChestCADSRStorage": [[268, "pydicom-uid-chestcadsrstorage"]], "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation": [[283, "pydicom-uid-dicosdigitalxrayimagestorageforpresentation"]], "pydicom.uid.DICOS3DAITStorage": [[281, "pydicom-uid-dicos3daitstorage"]], "pydicom.uid.ConfocalMicroscopyImageStorage": [[276, "pydicom-uid-confocalmicroscopyimagestorage"]], "pydicom.uid.DICOSCTImageStorage": [[282, "pydicom-uid-dicosctimagestorage"]], "pydicom.uid.DICOS2DAITStorage": [[280, "pydicom-uid-dicos2daitstorage"]], "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing": [[284, "pydicom-uid-dicosdigitalxrayimagestorageforprocessing"]], "pydicom.uid.DICOSThreatDetectionReportStorage": [[286, "pydicom-uid-dicosthreatdetectionreportstorage"]], "pydicom.uid.DeflatedExplicitVRLittleEndian": [[287, "pydicom-uid-deflatedexplicitvrlittleendian"]], "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage": [[277, "pydicom-uid-confocalmicroscopytiledpyramidalimagestorage"]], "pydicom.uid.ContentAssessmentResultsStorage": [[278, "pydicom-uid-contentassessmentresultsstorage"]], "pydicom.uid.DICOSQuadrupoleResonanceStorage": [[285, "pydicom-uid-dicosquadrupoleresonancestorage"]], "pydicom.uid.CornealTopographyMapStorage": [[279, "pydicom-uid-cornealtopographymapstorage"]], "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing": [[293, "pydicom-uid-digitalmammographyxrayimagestorageforprocessing"]], "pydicom.uid.ElectromyogramWaveformStorage": [[298, "pydicom-uid-electromyogramwaveformstorage"]], "pydicom.uid.EddyCurrentMultiFrameImageStorage": [[297, "pydicom-uid-eddycurrentmultiframeimagestorage"]], "pydicom.uid.DigitalXRayImageStorageForProcessing": [[295, "pydicom-uid-digitalxrayimagestorageforprocessing"]], "pydicom.uid.EddyCurrentImageStorage": [[296, "pydicom-uid-eddycurrentimagestorage"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing": [[291, "pydicom-uid-digitalintraoralxrayimagestorageforprocessing"]], "pydicom.uid.DermoscopicPhotographyImageStorage": [[289, "pydicom-uid-dermoscopicphotographyimagestorage"]], "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation": [[292, "pydicom-uid-digitalmammographyxrayimagestorageforpresentation"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation": [[290, "pydicom-uid-digitalintraoralxrayimagestorageforpresentation"]], "pydicom.uid.DigitalXRayImageStorageForPresentation": [[294, "pydicom-uid-digitalxrayimagestorageforpresentation"]], "pydicom.uid.ElectrooculogramWaveformStorage": [[299, "pydicom-uid-electrooculogramwaveformstorage"]], "pydicom.uid.DeformableSpatialRegistrationStorage": [[288, "pydicom-uid-deformablespatialregistrationstorage"]], "pydicom.uid.EnhancedSRStorage": [[311, "pydicom-uid-enhancedsrstorage"]], "pydicom.uid.EnhancedCTImageStorage": [[305, "pydicom-uid-enhancedctimagestorage"]], "pydicom.uid.EncapsulatedPDFStorage": [[303, "pydicom-uid-encapsulatedpdfstorage"]], "pydicom.uid.EnhancedContinuousRTImageStorage": [[306, "pydicom-uid-enhancedcontinuousrtimagestorage"]], "pydicom.uid.EnhancedMRImageStorage": [[308, "pydicom-uid-enhancedmrimagestorage"]], "pydicom.uid.EncapsulatedSTLStorage": [[304, "pydicom-uid-encapsulatedstlstorage"]], "pydicom.uid.EncapsulatedOBJStorage": [[302, "pydicom-uid-encapsulatedobjstorage"]], "pydicom.uid.EnhancedRTImageStorage": [[310, "pydicom-uid-enhancedrtimagestorage"]], "pydicom.uid.EncapsulatedCDAStorage": [[300, "pydicom-uid-encapsulatedcdastorage"]], "pydicom.uid.EnhancedPETImageStorage": [[309, "pydicom-uid-enhancedpetimagestorage"]], "pydicom.uid.EnhancedMRColorImageStorage": [[307, "pydicom-uid-enhancedmrcolorimagestorage"]], "pydicom.uid.EncapsulatedMTLStorage": [[301, "pydicom-uid-encapsulatedmtlstorage"]], "pydicom.uid.EnhancedUSVolumeStorage": [[312, "pydicom-uid-enhancedusvolumestorage"]], "pydicom.uid.General32bitECGWaveformStorage": [[319, "pydicom-uid-general32bitecgwaveformstorage"]], "pydicom.uid.GeneralECGWaveformStorage": [[321, "pydicom-uid-generalecgwaveformstorage"]], "pydicom.uid.GeneralAudioWaveformStorage": [[320, "pydicom-uid-generalaudiowaveformstorage"]], "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage": [[323, "pydicom-uid-grayscaleplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.GenericImplantTemplateStorage": [[322, "pydicom-uid-genericimplanttemplatestorage"]], "pydicom.uid.ExplicitVRLittleEndian": [[317, "pydicom-uid-explicitvrlittleendian"]], "pydicom.uid.ExtensibleSRStorage": [[318, "pydicom-uid-extensiblesrstorage"]], "pydicom.uid.EnhancedXRayRadiationDoseSRStorage": [[315, "pydicom-uid-enhancedxrayradiationdosesrstorage"]], "pydicom.uid.ExplicitVRBigEndian": [[316, "pydicom-uid-explicitvrbigendian"]], "pydicom.uid.EnhancedXAImageStorage": [[313, "pydicom-uid-enhancedxaimagestorage"]], "pydicom.uid.EnhancedXRFImageStorage": [[314, "pydicom-uid-enhancedxrfimagestorage"]], "pydicom.uid.HangingProtocolStorage": [[330, "pydicom-uid-hangingprotocolstorage"]], "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage": [[324, "pydicom-uid-grayscalesoftcopypresentationstatestorage"]], "pydicom.uid.HEVCMP51": [[326, "pydicom-uid-hevcmp51"]], "pydicom.uid.ImplantTemplateGroupStorage": [[333, "pydicom-uid-implanttemplategroupstorage"]], "pydicom.uid.HTJ2KLossless": [[328, "pydicom-uid-htj2klossless"]], "pydicom.uid.HTJ2KLosslessRPCL": [[329, "pydicom-uid-htj2klosslessrpcl"]], "pydicom.uid.HemodynamicWaveformStorage": [[331, "pydicom-uid-hemodynamicwaveformstorage"]], "pydicom.uid.ImplicitVRLittleEndian": [[335, "pydicom-uid-implicitvrlittleendian"]], "pydicom.uid.HEVCM10P51": [[325, "pydicom-uid-hevcm10p51"]], "pydicom.uid.ImplantAssemblyTemplateStorage": [[332, "pydicom-uid-implantassemblytemplatestorage"]], "pydicom.uid.HTJ2K": [[327, "pydicom-uid-htj2k"]], "pydicom.uid.ImplantationPlanSRStorage": [[334, "pydicom-uid-implantationplansrstorage"]], "pydicom.uid.JPEG2000MCLossless": [[343, "pydicom-uid-jpeg2000mclossless"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation": [[337, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforpresentation"]], "pydicom.uid.JPEG2000Lossless": [[341, "pydicom-uid-jpeg2000lossless"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing": [[338, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforprocessing"]], "pydicom.uid.JPEGExtended12Bit": [[346, "pydicom-uid-jpegextended12bit"]], "pydicom.uid.JPEG2000MC": [[342, "pydicom-uid-jpeg2000mc"]], "pydicom.uid.IntraocularLensCalculationsStorage": [[336, "pydicom-uid-intraocularlenscalculationsstorage"]], "pydicom.uid.JPEGLSLossless": [[347, "pydicom-uid-jpeglslossless"]], "pydicom.uid.JPEG2000": [[340, "pydicom-uid-jpeg2000"]], "pydicom.uid.JPEGBaseline8Bit": [[345, "pydicom-uid-jpegbaseline8bit"]], "pydicom.uid.InventoryStorage": [[339, "pydicom-uid-inventorystorage"]], "pydicom.uid.JPEG2000TransferSyntaxes": [[344, "pydicom-uid-jpeg2000transfersyntaxes"]], "pydicom.uid.JPEGLossless": [[350, "pydicom-uid-jpeglossless"]], "pydicom.uid.JPIPHTJ2KReferenced": [[353, "pydicom-uid-jpiphtj2kreferenced"]], "pydicom.uid.KeratometryMeasurementsStorage": [[355, "pydicom-uid-keratometrymeasurementsstorage"]], "pydicom.uid.JPEGLSTransferSyntaxes": [[349, "pydicom-uid-jpeglstransfersyntaxes"]], "pydicom.uid.JPEGTransferSyntaxes": [[352, "pydicom-uid-jpegtransfersyntaxes"]], "pydicom.uid.LegacyConvertedEnhancedCTImageStorage": [[357, "pydicom-uid-legacyconvertedenhancedctimagestorage"]], "pydicom.uid.JPEGLosslessSV1": [[351, "pydicom-uid-jpeglosslesssv1"]], "pydicom.uid.KeyObjectSelectionDocumentStorage": [[356, "pydicom-uid-keyobjectselectiondocumentstorage"]], "pydicom.uid.JPIPHTJ2KReferencedDeflate": [[354, "pydicom-uid-jpiphtj2kreferenceddeflate"]], "pydicom.uid.LegacyConvertedEnhancedPETImageStorage": [[359, "pydicom-uid-legacyconvertedenhancedpetimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedMRImageStorage": [[358, "pydicom-uid-legacyconvertedenhancedmrimagestorage"]], "pydicom.uid.JPEGLSNearLossless": [[348, "pydicom-uid-jpeglsnearlossless"]], "pydicom.uid.MPEG2MPHL": [[361, "pydicom-uid-mpeg2mphl"]], "pydicom.uid.MPEG2MPML": [[363, "pydicom-uid-mpeg2mpml"]], "pydicom.uid.MPEG4HP422D": [[369, "pydicom-uid-mpeg4hp422d"]], "pydicom.uid.MPEG4HP41": [[365, "pydicom-uid-mpeg4hp41"]], "pydicom.uid.MPEG4HP41F": [[368, "pydicom-uid-mpeg4hp41f"]], "pydicom.uid.LensometryMeasurementsStorage": [[360, "pydicom-uid-lensometrymeasurementsstorage"]], "pydicom.uid.MPEG4HP41BDF": [[367, "pydicom-uid-mpeg4hp41bdf"]], "pydicom.uid.MPEG4HP423D": [[371, "pydicom-uid-mpeg4hp423d"]], "pydicom.uid.MPEG2MPHLF": [[362, "pydicom-uid-mpeg2mphlf"]], "pydicom.uid.MPEG2MPMLF": [[364, "pydicom-uid-mpeg2mpmlf"]], "pydicom.uid.MPEG4HP41BD": [[366, "pydicom-uid-mpeg4hp41bd"]], "pydicom.uid.MPEG4HP422DF": [[370, "pydicom-uid-mpeg4hp422df"]], "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage": [[381, "pydicom-uid-microscopybulksimpleannotationsstorage"]], "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage": [[383, "pydicom-uid-multiframegrayscalewordsecondarycaptureimagestorage"]], "pydicom.uid.MediaStorageDirectoryStorage": [[380, "pydicom-uid-mediastoragedirectorystorage"]], "pydicom.uid.MPEG4HP42STEREOF": [[374, "pydicom-uid-mpeg4hp42stereof"]], "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage": [[382, "pydicom-uid-multiframegrayscalebytesecondarycaptureimagestorage"]], "pydicom.uid.MPEG4HP423DF": [[372, "pydicom-uid-mpeg4hp423df"]], "pydicom.uid.MPEG4HP42STEREO": [[373, "pydicom-uid-mpeg4hp42stereo"]], "pydicom.uid.MPEGTransferSyntaxes": [[375, "pydicom-uid-mpegtransfersyntaxes"]], "pydicom.uid.MacularGridThicknessAndVolumeReportStorage": [[378, "pydicom-uid-maculargridthicknessandvolumereportstorage"]], "pydicom.uid.MammographyCADSRStorage": [[379, "pydicom-uid-mammographycadsrstorage"]], "pydicom.uid.MRSpectroscopyStorage": [[377, "pydicom-uid-mrspectroscopystorage"]], "pydicom.uid.MRImageStorage": [[376, "pydicom-uid-mrimagestorage"]], "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage": [[387, "pydicom-uid-multiplevolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.NuclearMedicineImageStorage": [[388, "pydicom-uid-nuclearmedicineimagestorage"]], "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage": [[385, "pydicom-uid-multiframetruecolorsecondarycaptureimagestorage"]], "pydicom.uid.OphthalmicPhotography8BitImageStorage": [[393, "pydicom-uid-ophthalmicphotography8bitimagestorage"]], "pydicom.uid.MultichannelRespiratoryWaveformStorage": [[386, "pydicom-uid-multichannelrespiratorywaveformstorage"]], "pydicom.uid.OphthalmicPhotography16BitImageStorage": [[392, "pydicom-uid-ophthalmicphotography16bitimagestorage"]], "pydicom.uid.OphthalmicThicknessMapStorage": [[394, "pydicom-uid-ophthalmicthicknessmapstorage"]], "pydicom.uid.OphthalmicTomographyImageStorage": [[395, "pydicom-uid-ophthalmictomographyimagestorage"]], "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage": [[384, "pydicom-uid-multiframesinglebitsecondarycaptureimagestorage"]], "pydicom.uid.OphthalmicAxialMeasurementsStorage": [[389, "pydicom-uid-ophthalmicaxialmeasurementsstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage": [[391, "pydicom-uid-ophthalmicopticalcoherencetomographyenfaceimagestorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage": [[390, "pydicom-uid-ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage"]], "pydicom.uid.PlannedImagingAgentAdministrationSRStorage": [[403, "pydicom-uid-plannedimagingagentadministrationsrstorage"]], "pydicom.uid.PatientRadiationDoseSRStorage": [[400, "pydicom-uid-patientradiationdosesrstorage"]], "pydicom.uid.ProtocolApprovalStorage": [[407, "pydicom-uid-protocolapprovalstorage"]], "pydicom.uid.ProcedureLogStorage": [[406, "pydicom-uid-procedurelogstorage"]], "pydicom.uid.PYDICOM_IMPLEMENTATION_UID": [[397, "pydicom-uid-pydicom-implementation-uid"]], "pydicom.uid.PerformedImagingAgentAdministrationSRStorage": [[401, "pydicom-uid-performedimagingagentadministrationsrstorage"]], "pydicom.uid.PhotoacousticImageStorage": [[402, "pydicom-uid-photoacousticimagestorage"]], "pydicom.uid.PYDICOM_ROOT_UID": [[398, "pydicom-uid-pydicom-root-uid"]], "pydicom.uid.PrivateTransferSyntaxes": [[405, "pydicom-uid-privatetransfersyntaxes"]], "pydicom.uid.ParametricMapStorage": [[399, "pydicom-uid-parametricmapstorage"]], "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage": [[396, "pydicom-uid-ophthalmicvisualfieldstaticperimetrymeasurementsstorage"]], "pydicom.uid.PositronEmissionTomographyImageStorage": [[404, "pydicom-uid-positronemissiontomographyimagestorage"]], "pydicom.uid.RE_VALID_UID": [[409, "pydicom-uid-re-valid-uid"]], "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage": [[408, "pydicom-uid-pseudocolorsoftcopypresentationstatestorage"]], "pydicom.uid.RTBeamsDeliveryInstructionStorage": [[413, "pydicom-uid-rtbeamsdeliveryinstructionstorage"]], "pydicom.uid.RTIonBeamsTreatmentRecordStorage": [[419, "pydicom-uid-rtionbeamstreatmentrecordstorage"]], "pydicom.uid.RLELossless": [[411, "pydicom-uid-rlelossless"]], "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage": [[415, "pydicom-uid-rtbrachyapplicationsetupdeliveryinstructionstorage"]], "pydicom.uid.RTDoseStorage": [[417, "pydicom-uid-rtdosestorage"]], "pydicom.uid.RTBeamsTreatmentRecordStorage": [[414, "pydicom-uid-rtbeamstreatmentrecordstorage"]], "pydicom.uid.RTImageStorage": [[418, "pydicom-uid-rtimagestorage"]], "pydicom.uid.RTBrachyTreatmentRecordStorage": [[416, "pydicom-uid-rtbrachytreatmentrecordstorage"]], "pydicom.uid.RLETransferSyntaxes": [[412, "pydicom-uid-rletransfersyntaxes"]], "pydicom.uid.RE_VALID_UID_PREFIX": [[410, "pydicom-uid-re-valid-uid-prefix"]], "pydicom.dataelem.DataElement": [[127, "pydicom-dataelem-dataelement"]], "pydicom.datadict.repeater_has_tag": [[125, "pydicom-datadict-repeater-has-tag"]], "pydicom.datadict.private_dictionary_description": [[123, "pydicom-datadict-private-dictionary-description"]], "pydicom.datadict.tag_for_keyword": [[126, "pydicom-datadict-tag-for-keyword"]], "pydicom.dataset.FileDataset": [[131, "pydicom-dataset-filedataset"]], "pydicom.dataset.Dataset": [[130, "pydicom-dataset-dataset"]], "pydicom.datadict.repeater_has_keyword": [[124, "pydicom-datadict-repeater-has-keyword"]], "pydicom.datadict.private_dictionary_VM": [[121, "pydicom-datadict-private-dictionary-vm"]], "pydicom.dataelem.DataElement_from_raw": [[128, "pydicom-dataelem-dataelement-from-raw"]], "pydicom.dataelem.RawDataElement": [[129, "pydicom-dataelem-rawdataelement"]], "pydicom.datadict.mask_match": [[120, "pydicom-datadict-mask-match"]], "pydicom.datadict.private_dictionary_VR": [[122, "pydicom-datadict-private-dictionary-vr"]], "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage": [[421, "pydicom-uid-rtpatientpositionacquisitioninstructionstorage"]], "pydicom.uid.RTPhysicianIntentStorage": [[422, "pydicom-uid-rtphysicianintentstorage"]], "pydicom.uid.RTStructureSetStorage": [[429, "pydicom-uid-rtstructuresetstorage"]], "pydicom.uid.RTRadiationRecordSetStorage": [[424, "pydicom-uid-rtradiationrecordsetstorage"]], "pydicom.uid.RTPlanStorage": [[423, "pydicom-uid-rtplanstorage"]], "pydicom.uid.RTSegmentAnnotationStorage": [[428, "pydicom-uid-rtsegmentannotationstorage"]], "pydicom.uid.RTRadiationSetDeliveryInstructionStorage": [[426, "pydicom-uid-rtradiationsetdeliveryinstructionstorage"]], "pydicom.uid.RTRadiationSalvageRecordStorage": [[425, "pydicom-uid-rtradiationsalvagerecordstorage"]], "pydicom.uid.RTTreatmentSummaryRecordStorage": [[431, "pydicom-uid-rttreatmentsummaryrecordstorage"]], "pydicom.uid.RTTreatmentPreparationStorage": [[430, "pydicom-uid-rttreatmentpreparationstorage"]], "pydicom.uid.RTIonPlanStorage": [[420, "pydicom-uid-rtionplanstorage"]], "pydicom.uid.RTRadiationSetStorage": [[427, "pydicom-uid-rtradiationsetstorage"]], "Encapsulating data compressed by third-party packages": [[561, "encapsulating-data-compressed-by-third-party-packages"]], "Contributing to pydicom": [[553, "contributing-to-pydicom"]], "Waveforms": [[563, "waveforms"]], "Waveforms in DICOM": [[563, "waveforms-in-dicom"]], "Decoding Waveform Data": [[563, "decoding-waveform-data"]], "Encoding Waveform Data": [[563, "encoding-waveform-data"]], "Contributing a source code change": [[554, "contributing-a-source-code-change"]], "Download the current source code": [[554, "download-the-current-source-code"]], "(Optional) Install required libraries": [[554, "optional-install-required-libraries"]], "Install pytest and run the test suite": [[554, "install-pytest-and-run-the-test-suite"]], "Create a new branch": [[554, "create-a-new-branch"], [555, "create-a-new-branch"]], "Write tests for your changes": [[554, "write-tests-for-your-changes"]], "Make a code change and document it": [[554, "make-a-code-change-and-document-it"]], "Preview your changes": [[554, "preview-your-changes"]], "Commit your changes and make a pull request": [[554, "commit-your-changes-and-make-a-pull-request"], [555, "commit-your-changes-and-make-a-pull-request"]], "What happens next?": [[554, "what-happens-next"], [555, "what-happens-next"]], "Introduction to JSON support": [[557, "introduction-to-json-support"]], "Converting a dataset into JSON format": [[557, "converting-a-dataset-into-json-format"]], "Creating a dataset from JSON": [[557, "creating-a-dataset-from-json"]], "Working with large binary data": [[557, "working-with-large-binary-data"]], "How to install pydicom": [[560, "how-to-install-pydicom"]], "Install the official release": [[560, "install-the-official-release"]], "Install using pip": [[560, "install-using-pip"]], "Install using conda": [[560, "install-using-conda"]], "Downloading example/test DICOM files": [[560, "downloading-example-test-dicom-files"]], "Install the optional libraries": [[560, "install-the-optional-libraries"]], "Installing Pillow": [[560, "installing-pillow"]], "Installing pyjpegls": [[560, "installing-pyjpegls"]], "Installing GDCM": [[560, "installing-gdcm"]], "Installing pylibjpeg": [[560, "installing-pylibjpeg"]], "Install the development version": [[560, "install-the-development-version"]], "Tutorials": [[559, "tutorials"]], "Contributing a documentation change": [[555, "contributing-a-documentation-change"]], "Download the documentation": [[555, "download-the-documentation"]], "Build and preview the documentation": [[555, "build-and-preview-the-documentation"]], "Make a change to the documentation": [[555, "make-a-change-to-the-documentation"]], "DICOM File-sets and DICOMDIR": [[558, "dicom-file-sets-and-dicomdir"]], "The DICOM File-set": [[558, "the-dicom-file-set"]], "The DICOMDIR file": [[558, "the-dicomdir-file"]], "FileSet": [[558, "fileset"]], "Loading existing File-sets": [[558, "loading-existing-file-sets"]], "Creating a new File-set": [[558, "creating-a-new-file-set"]], "Modifying a File-set": [[558, "modifying-a-file-set"]], "FileSet and staging": [[558, "fileset-and-staging"]], "Adding SOP instances": [[558, "adding-sop-instances"]], "Removing instances": [[558, "removing-instances"]], "Applying the changes": [[558, "applying-the-changes"]], "Conclusion": [[558, "conclusion"]], "Dataset basics: read, access, modify, write": [[556, "dataset-basics-read-access-modify-write"]], "Getting the path to the example dataset": [[556, "getting-the-path-to-the-example-dataset"]], "Reading": [[556, "reading"]], "Viewing and accessing": [[556, "viewing-and-accessing"]], "Elements": [[556, "elements"]], "Sequences": [[556, "sequences"], [556, "id1"]], "file_meta": [[556, "file-meta"]], "Modifying": [[556, "modifying"]], "Modifying elements": [[556, "modifying-elements"]], "Adding elements": [[556, "adding-elements"]], "Any category": [[556, "any-category"]], "Standard elements": [[556, "standard-elements"]], "Deleting elements": [[556, "deleting-elements"]], "Writing": [[556, "writing"]], "Next steps": [[556, "next-steps"]], "Structured Reporting": [[562, "structured-reporting"]], "Version 1.4.0": [[543, "version-1-4-0"], [530, "version-1-4-0"]], "Fixes": [[543, "fixes"], [550, "fixes"], [551, "fixes"], [542, "fixes"], [545, "fixes"], [547, "fixes"], [549, "fixes"], [544, "fixes"], [541, "fixes"], [548, "fixes"], [540, "fixes"], [546, "fixes"], [539, "fixes"], [530, "fixes"], [530, "id3"], [530, "id7"], [530, "id10"], [530, "id11"], [530, "id14"], [530, "id16"], [530, "id17"], [530, "id19"], [530, "id24"], [530, "id27"], [530, "id29"], [530, "id30"]], "Enhancements": [[543, "enhancements"], [550, "enhancements"], [551, "enhancements"], [542, "enhancements"], [545, "enhancements"], [549, "enhancements"], [541, "enhancements"], [548, "enhancements"], [540, "enhancements"], [546, "enhancements"], [537, "enhancements"], [538, "enhancements"], [530, "enhancements"], [530, "id2"], [530, "id6"], [530, "id9"], [530, "id12"], [530, "id15"], [530, "id20"], [530, "id23"], [530, "id26"], [530, "id28"], [530, "id31"], [530, "id33"]], "Changes": [[543, "changes"], [550, "changes"], [551, "changes"], [542, "changes"], [549, "changes"], [544, "changes"], [541, "changes"], [548, "changes"], [546, "changes"], [530, "changes"], [530, "id1"], [530, "id5"], [530, "id8"], [530, "id13"], [530, "id18"], [530, "id21"], [530, "id22"], [530, "id25"]], "Version 2.4.0": [[550, "version-2-4-0"], [530, "version-2-4-0"]], "Pydicom Internals": [[550, "pydicom-internals"], [551, "pydicom-internals"], [530, "pydicom-internals"], [530, "id4"]], "Version 3.0.0": [[551, "version-3-0-0"], [530, "version-3-0-0"]], "Removals": [[551, "removals"], [530, "removals"]], "Deprecations": [[551, "deprecations"], [530, "deprecations"]], "Version 1.3.0": [[542, "version-1-3-0"], [530, "version-1-3-0"]], "Documentation": [[542, "documentation"], [530, "documentation"]], "Version 2.0.0": [[545, "version-2-0-0"], [530, "version-2-0-0"]], "Changelog": [[545, "changelog"], [530, "changelog"]], "Version 2.1.1": [[547, "version-2-1-1"], [530, "version-2-1-1"]], "Version 2.3.0": [[549, "version-2-3-0"], [530, "version-2-3-0"]], "Version 1.4.1": [[544, "version-1-4-1"], [530, "version-1-4-1"]], "Version 1.2.0": [[541, "version-1-2-0"], [530, "version-1-2-0"]], "Version 2.2.0": [[548, "version-2-2-0"], [530, "version-2-2-0"]], "Version 1.1.0": [[540, "version-1-1-0"], [530, "version-1-1-0"]], "Other": [[540, "other"], [532, "other"], [531, "other"], [535, "other"], [534, "other"], [530, "other"], [530, "id40"], [530, "id41"], [530, "id45"], [530, "id49"]], "Version 2.1.0": [[546, "version-2-1-0"], [530, "version-2-1-0"]], "Version 0.9.8": [[537, "version-0-9-8"], [530, "version-0-9-8"]], "Major changes": [[537, "major-changes"], [532, "major-changes"], [531, "major-changes"], [535, "major-changes"], [536, "major-changes"], [539, "major-changes"], [530, "major-changes"], [530, "id32"], [530, "id35"], [530, "id38"], [530, "id42"], [530, "id46"]], "Bug fixes": [[537, "bug-fixes"], [535, "bug-fixes"], [536, "bug-fixes"], [530, "bug-fixes"], [530, "id36"], [530, "id39"]], "Contrib file changes": [[537, "contrib-file-changes"], [538, "contrib-file-changes"], [530, "contrib-file-changes"], [530, "id34"]], "Version 0.9.3": [[532, "version-0-9-3"], [530, "version-0-9-3"]], "Other Enhancements": [[532, "other-enhancements"], [531, "other-enhancements"], [536, "other-enhancements"], [530, "id37"], [530, "id43"], [530, "id47"]], "Bug Fixes": [[532, "bug-fixes"], [531, "bug-fixes"], [530, "id44"], [530, "id48"]], "Version 0.9.9": [[538, "version-0-9-9"], [530, "version-0-9-9"]], "Other Contributors": [[538, "other-contributors"], [530, "other-contributors"]], "Version 0.9.2": [[531, "version-0-9-2"], [530, "version-0-9-2"]], "Version 0.9.6": [[535, "version-0-9-6"], [530, "version-0-9-6"]], "Version 0.9.5": [[534, "version-0-9-5"], [530, "version-0-9-5"]], "Major fixes in this release": [[534, "major-fixes-in-this-release"], [530, "major-fixes-in-this-release"]], "Other fixes in this release": [[534, "other-fixes-in-this-release"], [530, "other-fixes-in-this-release"]], "New \u2018Contrib\u2019 files": [[534, "new-contrib-files"], [530, "new-contrib-files"]], "Version 0.9.7": [[536, "version-0-9-7"], [530, "version-0-9-7"]], "Waveform Data Handlers (pydicom.waveforms)": [[529, "waveform-data-handlers-pydicom-waveforms"]], "Version 1.0.0": [[539, "version-1-0-0"], [530, "version-1-0-0"]], "Other enhancements": [[539, "other-enhancements"], [530, "other-enhancements"]], "Infrastructure": [[539, "infrastructure"], [530, "infrastructure"]], "Release notes": [[530, "release-notes"]], "Version 0.9.4": [[530, "version-0-9-4"], [533, "version-0-9-4"]], "Major changes/additions in this version": [[530, "major-changes-additions-in-this-version"], [533, "major-changes-additions-in-this-version"]], "Other changes and bug fixes": [[530, "other-changes-and-bug-fixes"], [533, "other-changes-and-bug-fixes"]], "UID Definitions and Utilities (pydicom.uid)": [[528, "uid-definitions-and-utilities-pydicom-uid"]], "Transfer Syntax UIDs": [[528, "transfer-syntax-uids"]], "Transfer Syntax Lists": [[528, "transfer-syntax-lists"]], "UID Utilities": [[528, "uid-utilities"]], "Storage SOP Class UIDs": [[528, "storage-sop-class-uids"]], "Pixel Data Decoders (pydicom.pixels.decoders)": [[526, "pixel-data-decoders-pydicom-pixels-decoders"]], "Bulk Data Handlers": [[520, "bulk-data-handlers"]], "Pixel Data Utilities": [[520, "pixel-data-utilities"], [525, "pixel-data-utilities"]], "pydicom.values.convert_text": [[516, "pydicom-values-convert-text"]], "Pixel Data Handlers (pydicom.pixel_data_handlers)": [[521, "pixel-data-handlers-pydicom-pixel-data-handlers"]], "pydicom.values.multi_string": [[518, "pydicom-values-multi-string"]], "Miscellaneous (pydicom.misc)": [[523, "miscellaneous-pydicom-misc"]], "pydicom.values.convert_value": [[517, "pydicom-values-convert-value"]], "Pixel Data (pydicom.pixels)": [[525, "pixel-data-pydicom-pixels"]], "Overlay Data Handling (pydicom.overlays)": [[524, "overlay-data-handling-pydicom-overlays"]], "pydicom.waveforms.numpy_handler": [[519, "module-pydicom.waveforms.numpy_handler"]], "Pixel Data Encoders (pydicom.pixels.encoders)": [[527, "pixel-data-encoders-pydicom-pixels-encoders"]], "pydicom.values.convert_tag": [[515, "pydicom-values-convert-tag"]], "pydicom.values.convert_PN": [[506, "pydicom-values-convert-pn"]], "pydicom.values.convert_SQ": [[507, "pydicom-values-convert-sq"]], "pydicom.values.convert_UR_string": [[511, "pydicom-values-convert-ur-string"]], "pydicom.values.convert_TM_string": [[508, "pydicom-values-convert-tm-string"]], "pydicom.values.convert_string": [[514, "pydicom-values-convert-string"]], "pydicom.values.convert_UI": [[509, "pydicom-values-convert-ui"]], "pydicom.values.convert_UN": [[510, "pydicom-values-convert-un"]], "pydicom.values.convert_OBvalue": [[504, "pydicom-values-convert-obvalue"]], "pydicom.values.convert_numbers": [[512, "pydicom-values-convert-numbers"]], "pydicom.values.convert_OWvalue": [[505, "pydicom-values-convert-owvalue"]], "pydicom.values.convert_single_string": [[513, "pydicom-values-convert-single-string"]], "pydicom.valuerep.VR": [[495, "pydicom-valuerep-vr"]], "pydicom.values.convert_IS_string": [[503, "pydicom-values-convert-is-string"]], "pydicom.values.convert_DT_string": [[502, "pydicom-values-convert-dt-string"]], "pydicom.values.convert_DS_string": [[501, "pydicom-values-convert-ds-string"]], "pydicom.valuerep.TM": [[494, "pydicom-valuerep-tm"]], "pydicom.valuerep.PersonName": [[493, "pydicom-valuerep-personname"]], "pydicom.valuerep.format_number_as_ds": [[496, "pydicom-valuerep-format-number-as-ds"]], "pydicom.values.convert_ATvalue": [[499, "pydicom-values-convert-atvalue"]], "pydicom.valuerep.ISfloat": [[492, "pydicom-valuerep-isfloat"]], "pydicom.values.convert_AE_string": [[498, "pydicom-values-convert-ae-string"]], "pydicom.values.convert_DA_string": [[500, "pydicom-values-convert-da-string"]], "pydicom.valuerep.is_valid_ds": [[497, "pydicom-valuerep-is-valid-ds"]], "pydicom.uid.XRayAngiographicImageStorage": [[481, "pydicom-uid-xrayangiographicimagestorage"]], "pydicom.valuerep.DA": [[486, "pydicom-valuerep-da"]], "pydicom.valuerep.DSfloat": [[489, "pydicom-valuerep-dsfloat"]], "pydicom.uid.generate_uid": [[484, "pydicom-uid-generate-uid"]], "pydicom.uid.XRayRadiationDoseSRStorage": [[482, "pydicom-uid-xrayradiationdosesrstorage"]], "pydicom.valuerep.DS": [[487, "pydicom-valuerep-ds"]], "pydicom.uid.register_transfer_syntax": [[485, "pydicom-uid-register-transfer-syntax"]], "pydicom.valuerep.DT": [[490, "pydicom-valuerep-dt"]], "pydicom.valuerep.IS": [[491, "pydicom-valuerep-is"]], "pydicom.uid.XRayRadiofluoroscopicImageStorage": [[483, "pydicom-uid-xrayradiofluoroscopicimagestorage"]], "pydicom.valuerep.DSdecimal": [[488, "pydicom-valuerep-dsdecimal"]], "pydicom.uid.XRay3DCraniofacialImageStorage": [[480, "pydicom-uid-xray3dcraniofacialimagestorage"]], "pydicom.uid.XRay3DAngiographicImageStorage": [[479, "pydicom-uid-xray3dangiographicimagestorage"]], "pydicom.uid.VisualAcuityMeasurementsStorage": [[472, "pydicom-uid-visualacuitymeasurementsstorage"]], "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage": [[474, "pydicom-uid-widefieldophthalmicphotography3dcoordinatesimagestorage"]], "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage": [[478, "pydicom-uid-xaxrfgrayscalesoftcopypresentationstatestorage"]], "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage": [[468, "pydicom-uid-variablemodalitylutsoftcopypresentationstatestorage"]], "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage": [[473, "pydicom-uid-volumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage": [[475, "pydicom-uid-widefieldophthalmicphotographystereographicprojectionimagestorage"]], "pydicom.uid.XADefinedProcedureProtocolStorage": [[476, "pydicom-uid-xadefinedprocedureprotocolstorage"]], "pydicom.uid.XAPerformedProcedureProtocolStorage": [[477, "pydicom-uid-xaperformedprocedureprotocolstorage"]], "pydicom.uid.VideoEndoscopicImageStorage": [[469, "pydicom-uid-videoendoscopicimagestorage"]], "pydicom.uid.VideoPhotographicImageStorage": [[471, "pydicom-uid-videophotographicimagestorage"]], "pydicom.uid.VideoMicroscopicImageStorage": [[470, "pydicom-uid-videomicroscopicimagestorage"]], "pydicom.uid.UncompressedTransferSyntaxes": [[462, "pydicom-uid-uncompressedtransfersyntaxes"]], "pydicom.uid.VLMicroscopicImageStorage": [[464, "pydicom-uid-vlmicroscopicimagestorage"]], "pydicom.uid.VLPhotographicImageStorage": [[465, "pydicom-uid-vlphotographicimagestorage"]], "pydicom.uid.TwelveLeadECGWaveformStorage": [[458, "pydicom-uid-twelveleadecgwaveformstorage"]], "pydicom.uid.UID": [[459, "pydicom-uid-uid"]], "pydicom.uid.TomotherapeuticRadiationStorage": [[456, "pydicom-uid-tomotherapeuticradiationstorage"]], "pydicom.uid.UltrasoundMultiFrameImageStorage": [[461, "pydicom-uid-ultrasoundmultiframeimagestorage"]], "pydicom.uid.VLEndoscopicImageStorage": [[463, "pydicom-uid-vlendoscopicimagestorage"]], "pydicom.uid.TractographyResultsStorage": [[457, "pydicom-uid-tractographyresultsstorage"]], "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage": [[466, "pydicom-uid-vlslidecoordinatesmicroscopicimagestorage"]], "pydicom.uid.UltrasoundImageStorage": [[460, "pydicom-uid-ultrasoundimagestorage"]], "pydicom.uid.VLWholeSlideMicroscopyImageStorage": [[467, "pydicom-uid-vlwholeslidemicroscopyimagestorage"]], "pydicom.uid.SpatialFiducialsStorage": [[447, "pydicom-uid-spatialfiducialsstorage"]], "pydicom.uid.SurfaceScanMeshStorage": [[452, "pydicom-uid-surfacescanmeshstorage"]], "pydicom.uid.SurfaceScanPointCloudStorage": [[453, "pydicom-uid-surfacescanpointcloudstorage"]], "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage": [[444, "pydicom-uid-segmentedvolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.SpectaclePrescriptionReportStorage": [[449, "pydicom-uid-spectacleprescriptionreportstorage"]], "pydicom.uid.SpatialRegistrationStorage": [[448, "pydicom-uid-spatialregistrationstorage"]], "pydicom.uid.SubjectiveRefractionMeasurementsStorage": [[451, "pydicom-uid-subjectiverefractionmeasurementsstorage"]], "pydicom.uid.StereometricRelationshipStorage": [[450, "pydicom-uid-stereometricrelationshipstorage"]], "pydicom.uid.SimplifiedAdultEchoSRStorage": [[445, "pydicom-uid-simplifiedadultechosrstorage"]], "pydicom.uid.SleepElectroencephalogramWaveformStorage": [[446, "pydicom-uid-sleepelectroencephalogramwaveformstorage"]], "pydicom.uid.SurfaceSegmentationStorage": [[454, "pydicom-uid-surfacesegmentationstorage"]], "pydicom.uid.TomotherapeuticRadiationRecordStorage": [[455, "pydicom-uid-tomotherapeuticradiationrecordstorage"]], "pydicom.uid.RespiratoryWaveformStorage": [[435, "pydicom-uid-respiratorywaveformstorage"]], "pydicom.uid.RoboticArmRadiationStorage": [[436, "pydicom-uid-roboticarmradiationstorage"]], "pydicom.uid.RawDataStorage": [[433, "pydicom-uid-rawdatastorage"]], "pydicom.uid.SMPTEST211030PCMDigitalAudio": [[441, "pydicom-uid-smptest211030pcmdigitalaudio"]], "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage": [[432, "pydicom-uid-radiopharmaceuticalradiationdosesrstorage"]], "pydicom.uid.SegmentationStorage": [[443, "pydicom-uid-segmentationstorage"]], "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage": [[438, "pydicom-uid-routinescalpelectroencephalogramwaveformstorage"]], "pydicom.uid.SecondaryCaptureImageStorage": [[442, "pydicom-uid-secondarycaptureimagestorage"]], "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo": [[440, "pydicom-uid-smptest211020uncompressedprogressiveactivevideo"]], "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo": [[439, "pydicom-uid-smptest211020uncompressedinterlacedactivevideo"]], "pydicom.uid.RealWorldValueMappingStorage": [[434, "pydicom-uid-realworldvaluemappingstorage"]], "pydicom.uid.RoboticRadiationRecordStorage": [[437, "pydicom-uid-roboticradiationrecordstorage"]]}, "indexentries": {"settings (class in pydicom.config)": [[55, "pydicom.config.Settings"]], "infer_sq_for_un_vr (pydicom.config.settings property)": [[55, "pydicom.config.Settings.infer_sq_for_un_vr"]], "reading_validation_mode (pydicom.config.settings property)": [[55, "pydicom.config.Settings.reading_validation_mode"]], "writing_validation_mode (pydicom.config.settings property)": [[55, "pydicom.config.Settings.writing_validation_mode"]], "convert_encodings() (in module pydicom.charset)": [[75, "pydicom.charset.convert_encodings"]], "decode_bytes() (in module pydicom.charset)": [[76, "pydicom.charset.decode_bytes"]], "decode_element() (in module pydicom.charset)": [[77, "pydicom.charset.decode_element"]], "encode_string() (in module pydicom.charset)": [[78, "pydicom.charset.encode_string"]], "apply_j2k_corrections (in module pydicom.config)": [[79, "pydicom.config.APPLY_J2K_CORRECTIONS"]], "ds_decimal() (in module pydicom.config)": [[80, "pydicom.config.DS_decimal"]], "ds_numpy() (in module pydicom.config)": [[81, "pydicom.config.DS_numpy"]], "ignore (in module pydicom.config)": [[82, "pydicom.config.IGNORE"]], "invalid_keyword_behavior (in module pydicom.config)": [[83, "pydicom.config.INVALID_KEYWORD_BEHAVIOR"]], "invalid_key_behavior (in module pydicom.config)": [[84, "pydicom.config.INVALID_KEY_BEHAVIOR"]], "raise (in module pydicom.config)": [[85, "pydicom.config.RAISE"]], "warn (in module pydicom.config)": [[86, "pydicom.config.WARN"]], "allow_ds_float (in module pydicom.config)": [[87, "pydicom.config.allow_DS_float"]], "assume_implicit_vr_switch (in module pydicom.config)": [[88, "pydicom.config.assume_implicit_vr_switch"]], "convert_wrong_length_to_un (in module pydicom.config)": [[89, "pydicom.config.convert_wrong_length_to_UN"]], "data_element_callback (in module pydicom.config)": [[90, "pydicom.config.data_element_callback"]], "data_element_callback_kwargs (in module pydicom.config)": [[91, "pydicom.config.data_element_callback_kwargs"]], "datetime_conversion (in module pydicom.config)": [[92, "pydicom.config.datetime_conversion"]], "debug() (in module pydicom.config)": [[93, "pydicom.config.debug"]], "enforce_valid_values (in module pydicom.config)": [[94, "pydicom.config.enforce_valid_values"]], "future_behavior() (in module pydicom.config)": [[95, "pydicom.config.future_behavior"]], "pixel_data_handlers (in module pydicom.config)": [[96, "pydicom.config.pixel_data_handlers"]], "reset_data_element_callback() (in module pydicom.config)": [[97, "pydicom.config.reset_data_element_callback"]], "settings (in module pydicom.config)": [[98, "pydicom.config.settings"]], "show_file_meta (in module pydicom.config)": [[99, "pydicom.config.show_file_meta"]], "use_ds_decimal (in module pydicom.config)": [[100, "pydicom.config.use_DS_decimal"]], "use_ds_numpy (in module pydicom.config)": [[101, "pydicom.config.use_DS_numpy"]], "use_is_numpy (in module pydicom.config)": [[102, "pydicom.config.use_IS_numpy"]], "get_charset_files() (in module pydicom.data)": [[103, "pydicom.data.get_charset_files"]], "get_palette_files() (in module pydicom.data)": [[104, "pydicom.data.get_palette_files"]], "get_testdata_file() (in module pydicom.data)": [[105, "pydicom.data.get_testdata_file"]], "get_testdata_files() (in module pydicom.data)": [[106, "pydicom.data.get_testdata_files"]], "add_dict_entries() (in module pydicom.datadict)": [[107, "pydicom.datadict.add_dict_entries"]], "add_dict_entry() (in module pydicom.datadict)": [[108, "pydicom.datadict.add_dict_entry"]], "add_private_dict_entries() (in module pydicom.datadict)": [[109, "pydicom.datadict.add_private_dict_entries"]], "add_private_dict_entry() (in module pydicom.datadict)": [[110, "pydicom.datadict.add_private_dict_entry"]], "dictionary_vm() (in module pydicom.datadict)": [[111, "pydicom.datadict.dictionary_VM"]], "dictionary_vr() (in module pydicom.datadict)": [[112, "pydicom.datadict.dictionary_VR"]], "dictionary_description() (in module pydicom.datadict)": [[113, "pydicom.datadict.dictionary_description"]], "dictionary_has_tag() (in module pydicom.datadict)": [[114, "pydicom.datadict.dictionary_has_tag"]], "dictionary_is_retired() (in module pydicom.datadict)": [[115, "pydicom.datadict.dictionary_is_retired"]], "dictionary_keyword() (in module pydicom.datadict)": [[116, "pydicom.datadict.dictionary_keyword"]], "get_entry() (in module pydicom.datadict)": [[117, "pydicom.datadict.get_entry"]], "get_private_entry() (in module pydicom.datadict)": [[118, "pydicom.datadict.get_private_entry"]], "keyword_for_tag() (in module pydicom.datadict)": [[119, "pydicom.datadict.keyword_for_tag"]], "mask_match() (in module pydicom.datadict)": [[120, "pydicom.datadict.mask_match"]], "private_dictionary_vm() (in module pydicom.datadict)": [[121, "pydicom.datadict.private_dictionary_VM"]], "private_dictionary_vr() (in module pydicom.datadict)": [[122, "pydicom.datadict.private_dictionary_VR"]], "private_dictionary_description() (in module pydicom.datadict)": [[123, "pydicom.datadict.private_dictionary_description"]], "repeater_has_keyword() (in module pydicom.datadict)": [[124, "pydicom.datadict.repeater_has_keyword"]], "repeater_has_tag() (in module pydicom.datadict)": [[125, "pydicom.datadict.repeater_has_tag"]], "tag_for_keyword() (in module pydicom.datadict)": [[126, "pydicom.datadict.tag_for_keyword"]], "dataelement (class in pydicom.dataelem)": [[127, "pydicom.dataelem.DataElement"]], "vm (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.VM"]], "vr (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.VR"]], "__init__() (pydicom.dataelem.dataelement method)": [[127, "pydicom.dataelem.DataElement.__init__"]], "clear() (pydicom.dataelem.dataelement method)": [[127, "pydicom.dataelem.DataElement.clear"]], "descripwidth (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.descripWidth"]], "empty_value (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.empty_value"]], "from_json() (pydicom.dataelem.dataelement class method)": [[127, "pydicom.dataelem.DataElement.from_json"]], "is_empty (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.is_empty"]], "is_private (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.is_private"]], "is_retired (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.is_retired"]], "is_undefined_length (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.is_undefined_length"]], "keyword (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.keyword"]], "maxbytestodisplay (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.maxBytesToDisplay"]], "name (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.name"]], "repval (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.repval"]], "showvr (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.showVR"]], "tag (pydicom.dataelem.dataelement attribute)": [[127, "pydicom.dataelem.DataElement.tag"]], "to_json() (pydicom.dataelem.dataelement method)": [[127, "pydicom.dataelem.DataElement.to_json"]], "to_json_dict() (pydicom.dataelem.dataelement method)": [[127, "pydicom.dataelem.DataElement.to_json_dict"]], "validate() (pydicom.dataelem.dataelement method)": [[127, "pydicom.dataelem.DataElement.validate"]], "value (pydicom.dataelem.dataelement property)": [[127, "pydicom.dataelem.DataElement.value"]], "dataelement_from_raw() (in module pydicom.dataelem)": [[128, "pydicom.dataelem.DataElement_from_raw"]], "rawdataelement (class in pydicom.dataelem)": [[129, "pydicom.dataelem.RawDataElement"]], "vr (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.VR"]], "__init__() (pydicom.dataelem.rawdataelement method)": [[129, "pydicom.dataelem.RawDataElement.__init__"]], "is_implicit_vr (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.is_implicit_VR"]], "is_little_endian (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.is_little_endian"]], "is_raw (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.is_raw"]], "length (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.length"]], "tag (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.tag"]], "value (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.value"]], "value_tell (pydicom.dataelem.rawdataelement attribute)": [[129, "pydicom.dataelem.RawDataElement.value_tell"]], "dataset (class in pydicom.dataset)": [[130, "pydicom.dataset.Dataset"]], "__init__() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.__init__"]], "add() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.add"]], "add_new() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.add_new"]], "add_new_private() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.add_new_private"]], "clear() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.clear"]], "compress() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.compress"]], "convert_pixel_data() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.convert_pixel_data"]], "copy() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.copy"]], "data_element() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.data_element"]], "decode() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.decode"]], "decompress() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.decompress"]], "default_element_format (pydicom.dataset.dataset attribute)": [[130, "pydicom.dataset.Dataset.default_element_format"]], "default_sequence_element_format (pydicom.dataset.dataset attribute)": [[130, "pydicom.dataset.Dataset.default_sequence_element_format"]], "dir() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.dir"]], "elements() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.elements"]], "ensure_file_meta() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.ensure_file_meta"]], "formatted_lines() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.formatted_lines"]], "from_json() (pydicom.dataset.dataset class method)": [[130, "pydicom.dataset.Dataset.from_json"]], "get() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.get"]], "get_item() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.get_item"]], "get_private_item() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.get_private_item"]], "group_dataset() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.group_dataset"]], "indent_chars (pydicom.dataset.dataset attribute)": [[130, "pydicom.dataset.Dataset.indent_chars"]], "is_implicit_vr (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.is_little_endian"]], "is_original_encoding (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.is_original_encoding"]], "items() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.items"]], "iterall() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.iterall"]], "keys() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.keys"]], "original_character_set (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.original_character_set"]], "original_encoding (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.original_encoding"]], "overlay_array() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.overlay_array"]], "pixel_array (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.pixel_array"]], "pop() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.pop"]], "popitem() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.popitem"]], "private_block() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.private_block"]], "private_creators() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.private_creators"]], "read_encoding (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.read_encoding"]], "read_implicit_vr (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.read_implicit_vr"]], "read_little_endian (pydicom.dataset.dataset property)": [[130, "pydicom.dataset.Dataset.read_little_endian"]], "remove_private_tags() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.remove_private_tags"]], "save_as() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.save_as"]], "set_original_encoding() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.set_original_encoding"]], "setdefault() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.setdefault"]], "to_json() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.to_json"]], "to_json_dict() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.to_json_dict"]], "top() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.top"]], "trait_names() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.trait_names"]], "update() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.update"]], "values() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.values"]], "walk() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.walk"]], "waveform_array() (pydicom.dataset.dataset method)": [[130, "pydicom.dataset.Dataset.waveform_array"]], "filedataset (class in pydicom.dataset)": [[131, "pydicom.dataset.FileDataset"]], "__init__() (pydicom.dataset.filedataset method)": [[131, "pydicom.dataset.FileDataset.__init__"]], "file_meta (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.file_meta"]], "filename (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.filename"]], "fileobj_type (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.fileobj_type"]], "is_implicit_vr (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.is_little_endian"]], "preamble (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.preamble"]], "timestamp (pydicom.dataset.filedataset attribute)": [[131, "pydicom.dataset.FileDataset.timestamp"]], "filemetadataset (class in pydicom.dataset)": [[132, "pydicom.dataset.FileMetaDataset"]], "__init__() (pydicom.dataset.filemetadataset method)": [[132, "pydicom.dataset.FileMetaDataset.__init__"]], "validate() (pydicom.dataset.filemetadataset static method)": [[132, "pydicom.dataset.FileMetaDataset.validate"]], "privateblock (class in pydicom.dataset)": [[133, "pydicom.dataset.PrivateBlock"]], "__init__() (pydicom.dataset.privateblock method)": [[133, "pydicom.dataset.PrivateBlock.__init__"]], "add_new() (pydicom.dataset.privateblock method)": [[133, "pydicom.dataset.PrivateBlock.add_new"]], "block_start (pydicom.dataset.privateblock attribute)": [[133, "pydicom.dataset.PrivateBlock.block_start"]], "dataset (pydicom.dataset.privateblock attribute)": [[133, "pydicom.dataset.PrivateBlock.dataset"]], "get_tag() (pydicom.dataset.privateblock method)": [[133, "pydicom.dataset.PrivateBlock.get_tag"]], "group (pydicom.dataset.privateblock attribute)": [[133, "pydicom.dataset.PrivateBlock.group"]], "private_creator (pydicom.dataset.privateblock attribute)": [[133, "pydicom.dataset.PrivateBlock.private_creator"]], "validate_file_meta() (in module pydicom.dataset)": [[134, "pydicom.dataset.validate_file_meta"]], "decode_data_sequence() (in module pydicom.encaps)": [[135, "pydicom.encaps.decode_data_sequence"]], "defragment_data() (in module pydicom.encaps)": [[136, "pydicom.encaps.defragment_data"]], "encapsulate() (in module pydicom.encaps)": [[137, "pydicom.encaps.encapsulate"]], "encapsulate_extended() (in module pydicom.encaps)": [[138, "pydicom.encaps.encapsulate_extended"]], "fragment_frame() (in module pydicom.encaps)": [[139, "pydicom.encaps.fragment_frame"]], "generate_fragmented_frames() (in module pydicom.encaps)": [[140, "pydicom.encaps.generate_fragmented_frames"]], "generate_fragments() (in module pydicom.encaps)": [[141, "pydicom.encaps.generate_fragments"]], "generate_frames() (in module pydicom.encaps)": [[142, "pydicom.encaps.generate_frames"]], "generate_pixel_data() (in module pydicom.encaps)": [[143, "pydicom.encaps.generate_pixel_data"]], "generate_pixel_data_fragment() (in module pydicom.encaps)": [[144, "pydicom.encaps.generate_pixel_data_fragment"]], "generate_pixel_data_frame() (in module pydicom.encaps)": [[145, "pydicom.encaps.generate_pixel_data_frame"]], "get_frame() (in module pydicom.encaps)": [[146, "pydicom.encaps.get_frame"]], "get_frame_offsets() (in module pydicom.encaps)": [[147, "pydicom.encaps.get_frame_offsets"]], "itemize_fragment() (in module pydicom.encaps)": [[148, "pydicom.encaps.itemize_fragment"]], "itemize_frame() (in module pydicom.encaps)": [[149, "pydicom.encaps.itemize_frame"]], "parse_basic_offsets() (in module pydicom.encaps)": [[150, "pydicom.encaps.parse_basic_offsets"]], "parse_fragments() (in module pydicom.encaps)": [[151, "pydicom.encaps.parse_fragments"]], "read_item() (in module pydicom.encaps)": [[152, "pydicom.encaps.read_item"]], "invaliddicomerror": [[153, "pydicom.errors.InvalidDicomError"]], "dicombytesio (class in pydicom.filebase)": [[154, "pydicom.filebase.DicomBytesIO"]], "__init__() (pydicom.filebase.dicombytesio method)": [[154, "pydicom.filebase.DicomBytesIO.__init__"]], "dicomfile() (in module pydicom.filebase)": [[155, "pydicom.filebase.DicomFile"]], "dicomfilelike (class in pydicom.filebase)": [[156, "pydicom.filebase.DicomFileLike"]], "__init__() (pydicom.filebase.dicomfilelike method)": [[156, "pydicom.filebase.DicomFileLike.__init__"]], "dicomio (class in pydicom.filebase)": [[157, "pydicom.filebase.DicomIO"]], "__init__() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.__init__"]], "close() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.close"]], "is_implicit_vr (pydicom.filebase.dicomio property)": [[157, "pydicom.filebase.DicomIO.is_implicit_VR"]], "is_little_endian (pydicom.filebase.dicomio property)": [[157, "pydicom.filebase.DicomIO.is_little_endian"]], "name (pydicom.filebase.dicomio property)": [[157, "pydicom.filebase.DicomIO.name"]], "parent (pydicom.filebase.dicomio property)": [[157, "pydicom.filebase.DicomIO.parent"]], "read() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.read"]], "read_ul() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.read_UL"]], "read_us() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.read_US"]], "read_exact() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.read_exact"]], "read_tag() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.read_tag"]], "seek() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.seek"]], "tell() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.tell"]], "write() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.write"]], "write_ul() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.write_UL"]], "write_us() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.write_US"]], "write_tag() (pydicom.filebase.dicomio method)": [[157, "pydicom.filebase.DicomIO.write_tag"]], "data_element_generator() (in module pydicom.filereader)": [[158, "pydicom.filereader.data_element_generator"]], "data_element_offset_to_value() (in module pydicom.filereader)": [[159, "pydicom.filereader.data_element_offset_to_value"]], "dcmread() (in module pydicom.filereader)": [[160, "pydicom.filereader.dcmread"]], "read_dataset() (in module pydicom.filereader)": [[161, "pydicom.filereader.read_dataset"]], "read_deferred_data_element() (in module pydicom.filereader)": [[162, "pydicom.filereader.read_deferred_data_element"]], "read_file_meta_info() (in module pydicom.filereader)": [[163, "pydicom.filereader.read_file_meta_info"]], "read_partial() (in module pydicom.filereader)": [[164, "pydicom.filereader.read_partial"]], "read_preamble() (in module pydicom.filereader)": [[165, "pydicom.filereader.read_preamble"]], "read_sequence() (in module pydicom.filereader)": [[166, "pydicom.filereader.read_sequence"]], "read_sequence_item() (in module pydicom.filereader)": [[167, "pydicom.filereader.read_sequence_item"]], "directory_recorders (in module pydicom.fileset)": [[168, "pydicom.fileset.DIRECTORY_RECORDERS"]], "fileid (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.FileID"]], "fileinstance (class in pydicom.fileset)": [[169, "pydicom.fileset.FileInstance"]], "sopclassuid (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.SOPClassUID"]], "sopinstanceuid (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.SOPInstanceUID"]], "transfersyntaxuid (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.TransferSyntaxUID"]], "__init__() (pydicom.fileset.fileinstance method)": [[169, "pydicom.fileset.FileInstance.__init__"]], "file_set (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.file_set"]], "for_addition (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.for_addition"]], "for_moving (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.for_moving"]], "for_removal (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.for_removal"]], "is_private (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.is_private"]], "is_staged (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.is_staged"]], "load() (pydicom.fileset.fileinstance method)": [[169, "pydicom.fileset.FileInstance.load"]], "node (pydicom.fileset.fileinstance attribute)": [[169, "pydicom.fileset.FileInstance.node"]], "path (pydicom.fileset.fileinstance property)": [[169, "pydicom.fileset.FileInstance.path"]], "fileset (class in pydicom.fileset)": [[170, "pydicom.fileset.FileSet"]], "id (pydicom.fileset.fileset property)": [[170, "pydicom.fileset.FileSet.ID"]], "uid (pydicom.fileset.fileset property)": [[170, "pydicom.fileset.FileSet.UID"]], "__init__() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.__init__"]], "add() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.add"]], "add_custom() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.add_custom"]], "clear() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.clear"]], "copy() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.copy"]], "descriptor_character_set (pydicom.fileset.fileset property)": [[170, "pydicom.fileset.FileSet.descriptor_character_set"]], "descriptor_file_id (pydicom.fileset.fileset property)": [[170, "pydicom.fileset.FileSet.descriptor_file_id"]], "find() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.find"]], "find_values() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.find_values"]], "is_staged (pydicom.fileset.fileset property)": [[170, "pydicom.fileset.FileSet.is_staged"]], "load() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.load"]], "path (pydicom.fileset.fileset property)": [[170, "pydicom.fileset.FileSet.path"]], "remove() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.remove"]], "write() (pydicom.fileset.fileset method)": [[170, "pydicom.fileset.FileSet.write"]], "recordnode (class in pydicom.fileset)": [[171, "pydicom.fileset.RecordNode"]], "__init__() (pydicom.fileset.recordnode method)": [[171, "pydicom.fileset.RecordNode.__init__"]], "add() (pydicom.fileset.recordnode method)": [[171, "pydicom.fileset.RecordNode.add"]], "ancestors (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.ancestors"]], "children (pydicom.fileset.recordnode attribute)": [[171, "pydicom.fileset.RecordNode.children"]], "component (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.component"]], "depth (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.depth"]], "file_set (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.file_set"]], "has_instance (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.has_instance"]], "index (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.index"]], "instance (pydicom.fileset.recordnode attribute)": [[171, "pydicom.fileset.RecordNode.instance"]], "is_root (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.is_root"]], "key (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.key"]], "next (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.next"]], "parent (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.parent"]], "prettify() (pydicom.fileset.recordnode method)": [[171, "pydicom.fileset.RecordNode.prettify"]], "previous (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.previous"]], "record_type (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.record_type"]], "remove() (pydicom.fileset.recordnode method)": [[171, "pydicom.fileset.RecordNode.remove"]], "reverse() (pydicom.fileset.recordnode method)": [[171, "pydicom.fileset.RecordNode.reverse"]], "root (pydicom.fileset.recordnode property)": [[171, "pydicom.fileset.RecordNode.root"]], "generate_filename() (in module pydicom.fileset)": [[172, "pydicom.fileset.generate_filename"]], "is_conformant_file_id() (in module pydicom.fileset)": [[173, "pydicom.fileset.is_conformant_file_id"]], "absorb_delimiter_item() (in module pydicom.fileutil)": [[174, "pydicom.fileutil.absorb_delimiter_item"]], "find_bytes() (in module pydicom.fileutil)": [[175, "pydicom.fileutil.find_bytes"]], "find_delimiter() (in module pydicom.fileutil)": [[176, "pydicom.fileutil.find_delimiter"]], "length_of_undefined_length() (in module pydicom.fileutil)": [[177, "pydicom.fileutil.length_of_undefined_length"]], "read_undefined_length_value() (in module pydicom.fileutil)": [[178, "pydicom.fileutil.read_undefined_length_value"]], "correct_ambiguous_vr() (in module pydicom.filewriter)": [[179, "pydicom.filewriter.correct_ambiguous_vr"]], "correct_ambiguous_vr_element() (in module pydicom.filewriter)": [[180, "pydicom.filewriter.correct_ambiguous_vr_element"]], "dcmwrite() (in module pydicom.filewriter)": [[181, "pydicom.filewriter.dcmwrite"]], "multi_string() (in module pydicom.filewriter)": [[182, "pydicom.filewriter.multi_string"]], "write_atvalue() (in module pydicom.filewriter)": [[183, "pydicom.filewriter.write_ATvalue"]], "write_da() (in module pydicom.filewriter)": [[184, "pydicom.filewriter.write_DA"]], "write_dt() (in module pydicom.filewriter)": [[185, "pydicom.filewriter.write_DT"]], "write_obvalue() (in module pydicom.filewriter)": [[186, "pydicom.filewriter.write_OBvalue"]], "write_owvalue() (in module pydicom.filewriter)": [[187, "pydicom.filewriter.write_OWvalue"]], "write_pn() (in module pydicom.filewriter)": [[188, "pydicom.filewriter.write_PN"]], "write_tm() (in module pydicom.filewriter)": [[189, "pydicom.filewriter.write_TM"]], "write_ui() (in module pydicom.filewriter)": [[190, "pydicom.filewriter.write_UI"]], "write_un() (in module pydicom.filewriter)": [[191, "pydicom.filewriter.write_UN"]], "write_data_element() (in module pydicom.filewriter)": [[192, "pydicom.filewriter.write_data_element"]], "write_dataset() (in module pydicom.filewriter)": [[193, "pydicom.filewriter.write_dataset"]], "write_file_meta_info() (in module pydicom.filewriter)": [[194, "pydicom.filewriter.write_file_meta_info"]], "write_number_string() (in module pydicom.filewriter)": [[195, "pydicom.filewriter.write_number_string"]], "write_numbers() (in module pydicom.filewriter)": [[196, "pydicom.filewriter.write_numbers"]], "write_sequence() (in module pydicom.filewriter)": [[197, "pydicom.filewriter.write_sequence"]], "write_sequence_item() (in module pydicom.filewriter)": [[198, "pydicom.filewriter.write_sequence_item"]], "write_string() (in module pydicom.filewriter)": [[199, "pydicom.filewriter.write_string"]], "write_text() (in module pydicom.filewriter)": [[200, "pydicom.filewriter.write_text"]], "is_dicom() (in module pydicom.misc)": [[201, "pydicom.misc.is_dicom"]], "size_in_bytes() (in module pydicom.misc)": [[202, "pydicom.misc.size_in_bytes"]], "multivalue (class in pydicom.multival)": [[203, "pydicom.multival.MultiValue"]], "__init__() (pydicom.multival.multivalue method)": [[203, "pydicom.multival.MultiValue.__init__"]], "get_expected_length() (in module pydicom.overlays.numpy_handler)": [[204, "pydicom.overlays.numpy_handler.get_expected_length"]], "get_overlay_array() (in module pydicom.overlays.numpy_handler)": [[204, "pydicom.overlays.numpy_handler.get_overlay_array"]], "is_available() (in module pydicom.overlays.numpy_handler)": [[204, "pydicom.overlays.numpy_handler.is_available"]], "module": [[204, "module-pydicom.overlays.numpy_handler"], [212, "module-pydicom.pixel_data_handlers.gdcm_handler"], [213, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"], [214, "module-pydicom.pixel_data_handlers.numpy_handler"], [215, "module-pydicom.pixel_data_handlers.pillow_handler"], [216, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"], [217, "module-pydicom.pixel_data_handlers.rle_handler"], [218, "module-pydicom.pixel_data_handlers.util"], [519, "module-pydicom.waveforms.numpy_handler"], [521, "module-pydicom.pixel_data_handlers"], [522, "module-pydicom"], [524, "module-pydicom.overlays"], [527, "module-pydicom.pixels.encoders"], [529, "module-pydicom.waveforms"]], "pydicom.overlays.numpy_handler": [[204, "module-pydicom.overlays.numpy_handler"]], "reshape_overlay_array() (in module pydicom.overlays.numpy_handler)": [[204, "pydicom.overlays.numpy_handler.reshape_overlay_array"]], "apply_color_lut() (in module pydicom.pixel_data_handlers)": [[205, "pydicom.pixel_data_handlers.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers)": [[206, "pydicom.pixel_data_handlers.apply_modality_lut"]], "apply_rescale() (in module pydicom.pixel_data_handlers)": [[207, "pydicom.pixel_data_handlers.apply_rescale"]], "apply_voi() (in module pydicom.pixel_data_handlers)": [[208, "pydicom.pixel_data_handlers.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers)": [[209, "pydicom.pixel_data_handlers.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers)": [[210, "pydicom.pixel_data_handlers.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers)": [[211, "pydicom.pixel_data_handlers.convert_color_space"]], "create_data_element() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[212, "pydicom.pixel_data_handlers.gdcm_handler.create_data_element"]], "create_image() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[212, "pydicom.pixel_data_handlers.gdcm_handler.create_image"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[212, "pydicom.pixel_data_handlers.gdcm_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[212, "pydicom.pixel_data_handlers.gdcm_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[212, "pydicom.pixel_data_handlers.gdcm_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.gdcm_handler": [[212, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[212, "pydicom.pixel_data_handlers.gdcm_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[212, "pydicom.pixel_data_handlers.gdcm_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[213, "pydicom.pixel_data_handlers.jpeg_ls_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[213, "pydicom.pixel_data_handlers.jpeg_ls_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[213, "pydicom.pixel_data_handlers.jpeg_ls_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[213, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[213, "pydicom.pixel_data_handlers.jpeg_ls_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[213, "pydicom.pixel_data_handlers.jpeg_ls_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.numpy_handler)": [[214, "pydicom.pixel_data_handlers.numpy_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.numpy_handler)": [[214, "pydicom.pixel_data_handlers.numpy_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[214, "pydicom.pixel_data_handlers.numpy_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.numpy_handler": [[214, "module-pydicom.pixel_data_handlers.numpy_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[214, "pydicom.pixel_data_handlers.numpy_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.numpy_handler)": [[214, "pydicom.pixel_data_handlers.numpy_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pillow_handler)": [[215, "pydicom.pixel_data_handlers.pillow_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pillow_handler)": [[215, "pydicom.pixel_data_handlers.pillow_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[215, "pydicom.pixel_data_handlers.pillow_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pillow_handler": [[215, "module-pydicom.pixel_data_handlers.pillow_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[215, "pydicom.pixel_data_handlers.pillow_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pillow_handler)": [[215, "pydicom.pixel_data_handlers.pillow_handler.supports_transfer_syntax"]], "as_array() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[216, "pydicom.pixel_data_handlers.pylibjpeg_handler.as_array"]], "generate_frames() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[216, "pydicom.pixel_data_handlers.pylibjpeg_handler.generate_frames"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[216, "pydicom.pixel_data_handlers.pylibjpeg_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[216, "pydicom.pixel_data_handlers.pylibjpeg_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[216, "pydicom.pixel_data_handlers.pylibjpeg_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[216, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[216, "pydicom.pixel_data_handlers.pylibjpeg_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[216, "pydicom.pixel_data_handlers.pylibjpeg_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.rle_handler)": [[217, "pydicom.pixel_data_handlers.rle_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.rle_handler)": [[217, "pydicom.pixel_data_handlers.rle_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[217, "pydicom.pixel_data_handlers.rle_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.rle_handler": [[217, "module-pydicom.pixel_data_handlers.rle_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[217, "pydicom.pixel_data_handlers.rle_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.rle_handler)": [[217, "pydicom.pixel_data_handlers.rle_handler.supports_transfer_syntax"]], "apply_color_lut() (in module pydicom.pixel_data_handlers.util)": [[218, "pydicom.pixel_data_handlers.util.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers.util)": [[218, "pydicom.pixel_data_handlers.util.apply_modality_lut"]], "apply_voi() (in module pydicom.pixel_data_handlers.util)": [[218, "pydicom.pixel_data_handlers.util.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers.util)": [[218, "pydicom.pixel_data_handlers.util.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers.util)": [[218, "pydicom.pixel_data_handlers.util.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers.util)": [[218, "pydicom.pixel_data_handlers.util.convert_color_space"]], "dtype_corrected_for_endianness() (in module pydicom.pixel_data_handlers.util)": [[218, "pydicom.pixel_data_handlers.util.dtype_corrected_for_endianness"]], "expand_ybr422() (in module pydicom.pixel_data_handlers.util)": [[218, "pydicom.pixel_data_handlers.util.expand_ybr422"]], "get_expected_length() (in module pydicom.pixel_data_handlers.util)": [[218, "pydicom.pixel_data_handlers.util.get_expected_length"]], "get_image_pixel_ids() (in module pydicom.pixel_data_handlers.util)": [[218, "pydicom.pixel_data_handlers.util.get_image_pixel_ids"]], "get_j2k_parameters() (in module pydicom.pixel_data_handlers.util)": [[218, "pydicom.pixel_data_handlers.util.get_j2k_parameters"]], "get_nr_frames() (in module pydicom.pixel_data_handlers.util)": [[218, "pydicom.pixel_data_handlers.util.get_nr_frames"]], "pack_bits() (in module pydicom.pixel_data_handlers.util)": [[218, "pydicom.pixel_data_handlers.util.pack_bits"]], "pixel_dtype() (in module pydicom.pixel_data_handlers.util)": [[218, "pydicom.pixel_data_handlers.util.pixel_dtype"]], "pydicom.pixel_data_handlers.util": [[218, "module-pydicom.pixel_data_handlers.util"]], "reshape_pixel_array() (in module pydicom.pixel_data_handlers.util)": [[218, "pydicom.pixel_data_handlers.util.reshape_pixel_array"]], "unpack_bits() (in module pydicom.pixel_data_handlers.util)": [[218, "pydicom.pixel_data_handlers.util.unpack_bits"]], "decoderunner (class in pydicom.pixels.decoders.base)": [[219, "pydicom.pixels.decoders.base.DecodeRunner"]], "__init__() (pydicom.pixels.decoders.base.decoderunner method)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.__init__"]], "bits_allocated (pydicom.pixels.decoders.base.decoderunner property)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.bits_allocated"]], "bits_stored (pydicom.pixels.decoders.base.decoderunner property)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.bits_stored"]], "columns (pydicom.pixels.decoders.base.decoderunner property)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.columns"]], "decode() (pydicom.pixels.decoders.base.decoderunner method)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.decode"]], "del_option() (pydicom.pixels.decoders.base.decoderunner method)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.del_option"]], "extended_offsets (pydicom.pixels.decoders.base.decoderunner property)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.extended_offsets"]], "frame_length() (pydicom.pixels.decoders.base.decoderunner method)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.frame_length"]], "get_data() (pydicom.pixels.decoders.base.decoderunner method)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.get_data"]], "get_option() (pydicom.pixels.decoders.base.decoderunner method)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.get_option"]], "is_buffer (pydicom.pixels.decoders.base.decoderunner property)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.is_buffer"]], "iter_decode() (pydicom.pixels.decoders.base.decoderunner method)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.iter_decode"]], "number_of_frames (pydicom.pixels.decoders.base.decoderunner property)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.number_of_frames"]], "options (pydicom.pixels.decoders.base.decoderunner property)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.options"]], "photometric_interpretation (pydicom.pixels.decoders.base.decoderunner property)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.photometric_interpretation"]], "pixel_dtype (pydicom.pixels.decoders.base.decoderunner property)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.pixel_dtype"]], "pixel_keyword (pydicom.pixels.decoders.base.decoderunner property)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.pixel_keyword"]], "pixel_representation (pydicom.pixels.decoders.base.decoderunner property)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.pixel_representation"]], "planar_configuration (pydicom.pixels.decoders.base.decoderunner property)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.planar_configuration"]], "process() (pydicom.pixels.decoders.base.decoderunner method)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.process"]], "reshape() (pydicom.pixels.decoders.base.decoderunner method)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.reshape"]], "rows (pydicom.pixels.decoders.base.decoderunner property)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.rows"]], "samples_per_pixel (pydicom.pixels.decoders.base.decoderunner property)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.samples_per_pixel"]], "set_decoders() (pydicom.pixels.decoders.base.decoderunner method)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.set_decoders"]], "set_option() (pydicom.pixels.decoders.base.decoderunner method)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.set_option"]], "set_options() (pydicom.pixels.decoders.base.decoderunner method)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.set_options"]], "set_source() (pydicom.pixels.decoders.base.decoderunner method)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.set_source"]], "src (pydicom.pixels.decoders.base.decoderunner property)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.src"]], "transfer_syntax (pydicom.pixels.decoders.base.decoderunner property)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.transfer_syntax"]], "validate() (pydicom.pixels.decoders.base.decoderunner method)": [[219, "pydicom.pixels.decoders.base.DecodeRunner.validate"]], "decoder (class in pydicom.pixels.decoders.base)": [[220, "pydicom.pixels.decoders.base.Decoder"]], "uid (pydicom.pixels.decoders.base.decoder property)": [[220, "pydicom.pixels.decoders.base.Decoder.UID"]], "__init__() (pydicom.pixels.decoders.base.decoder method)": [[220, "pydicom.pixels.decoders.base.Decoder.__init__"]], "add_plugin() (pydicom.pixels.decoders.base.decoder method)": [[220, "pydicom.pixels.decoders.base.Decoder.add_plugin"]], "add_plugins() (pydicom.pixels.decoders.base.decoder method)": [[220, "pydicom.pixels.decoders.base.Decoder.add_plugins"]], "as_array() (pydicom.pixels.decoders.base.decoder method)": [[220, "pydicom.pixels.decoders.base.Decoder.as_array"]], "as_buffer() (pydicom.pixels.decoders.base.decoder method)": [[220, "pydicom.pixels.decoders.base.Decoder.as_buffer"]], "is_available (pydicom.pixels.decoders.base.decoder property)": [[220, "pydicom.pixels.decoders.base.Decoder.is_available"]], "is_encapsulated (pydicom.pixels.decoders.base.decoder property)": [[220, "pydicom.pixels.decoders.base.Decoder.is_encapsulated"]], "is_native (pydicom.pixels.decoders.base.decoder property)": [[220, "pydicom.pixels.decoders.base.Decoder.is_native"]], "iter_array() (pydicom.pixels.decoders.base.decoder method)": [[220, "pydicom.pixels.decoders.base.Decoder.iter_array"]], "iter_buffer() (pydicom.pixels.decoders.base.decoder method)": [[220, "pydicom.pixels.decoders.base.Decoder.iter_buffer"]], "missing_dependencies (pydicom.pixels.decoders.base.decoder property)": [[220, "pydicom.pixels.decoders.base.Decoder.missing_dependencies"]], "name (pydicom.pixels.decoders.base.decoder property)": [[220, "pydicom.pixels.decoders.base.Decoder.name"]], "remove_plugin() (pydicom.pixels.decoders.base.decoder method)": [[220, "pydicom.pixels.decoders.base.Decoder.remove_plugin"]], "deflatedexplicitvrlittleendiandecoder (in module pydicom.pixels.decoders.base)": [[221, "pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder"]], "explicitvrbigendiandecoder (in module pydicom.pixels.decoders.base)": [[222, "pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder"]], "explicitvrlittleendiandecoder (in module pydicom.pixels.decoders.base)": [[223, "pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder"]], "htj2kdecoder (in module pydicom.pixels.decoders.base)": [[224, "pydicom.pixels.decoders.base.HTJ2KDecoder"]], "htj2klosslessdecoder (in module pydicom.pixels.decoders.base)": [[225, "pydicom.pixels.decoders.base.HTJ2KLosslessDecoder"]], "htj2klosslessrpcldecoder (in module pydicom.pixels.decoders.base)": [[226, "pydicom.pixels.decoders.base.HTJ2KLosslessRPCLDecoder"]], "implicitvrlittleendiandecoder (in module pydicom.pixels.decoders.base)": [[227, "pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder"]], "jpeg2000decoder (in module pydicom.pixels.decoders.base)": [[228, "pydicom.pixels.decoders.base.JPEG2000Decoder"]], "jpeg2000losslessdecoder (in module pydicom.pixels.decoders.base)": [[229, "pydicom.pixels.decoders.base.JPEG2000LosslessDecoder"]], "jpegbaseline8bitdecoder (in module pydicom.pixels.decoders.base)": [[230, "pydicom.pixels.decoders.base.JPEGBaseline8BitDecoder"]], "jpegextended12bitdecoder (in module pydicom.pixels.decoders.base)": [[231, "pydicom.pixels.decoders.base.JPEGExtended12BitDecoder"]], "jpeglslosslessdecoder (in module pydicom.pixels.decoders.base)": [[232, "pydicom.pixels.decoders.base.JPEGLSLosslessDecoder"]], "jpeglsnearlosslessdecoder (in module pydicom.pixels.decoders.base)": [[233, "pydicom.pixels.decoders.base.JPEGLSNearLosslessDecoder"]], "jpeglosslessdecoder (in module pydicom.pixels.decoders.base)": [[234, "pydicom.pixels.decoders.base.JPEGLosslessDecoder"]], "jpeglosslesssv1decoder (in module pydicom.pixels.decoders.base)": [[235, "pydicom.pixels.decoders.base.JPEGLosslessSV1Decoder"]], "rlelosslessdecoder (in module pydicom.pixels.decoders.base)": [[236, "pydicom.pixels.decoders.base.RLELosslessDecoder"]], "encoder (class in pydicom.pixels.encoders.base)": [[237, "pydicom.pixels.encoders.base.Encoder"]], "uid (pydicom.pixels.encoders.base.encoder property)": [[237, "pydicom.pixels.encoders.base.Encoder.UID"]], "__init__() (pydicom.pixels.encoders.base.encoder method)": [[237, "pydicom.pixels.encoders.base.Encoder.__init__"]], "add_plugin() (pydicom.pixels.encoders.base.encoder method)": [[237, "pydicom.pixels.encoders.base.Encoder.add_plugin"]], "encode() (pydicom.pixels.encoders.base.encoder method)": [[237, "pydicom.pixels.encoders.base.Encoder.encode"]], "is_available (pydicom.pixels.encoders.base.encoder property)": [[237, "pydicom.pixels.encoders.base.Encoder.is_available"]], "iter_encode() (pydicom.pixels.encoders.base.encoder method)": [[237, "pydicom.pixels.encoders.base.Encoder.iter_encode"]], "kwargs_from_ds() (pydicom.pixels.encoders.base.encoder static method)": [[237, "pydicom.pixels.encoders.base.Encoder.kwargs_from_ds"]], "missing_dependencies (pydicom.pixels.encoders.base.encoder property)": [[237, "pydicom.pixels.encoders.base.Encoder.missing_dependencies"]], "name (pydicom.pixels.encoders.base.encoder property)": [[237, "pydicom.pixels.encoders.base.Encoder.name"]], "remove_plugin() (pydicom.pixels.encoders.base.encoder method)": [[237, "pydicom.pixels.encoders.base.Encoder.remove_plugin"]], "rlelosslessencoder (in module pydicom.pixels.encoders.base)": [[238, "pydicom.pixels.encoders.base.RLELosslessEncoder"]], "get_decoder() (in module pydicom.pixels)": [[239, "pydicom.pixels.get_decoder"]], "get_encoder() (in module pydicom.pixels)": [[240, "pydicom.pixels.get_encoder"]], "iter_pixels() (in module pydicom.pixels)": [[241, "pydicom.pixels.iter_pixels"]], "pixel_array() (in module pydicom.pixels)": [[242, "pydicom.pixels.pixel_array"]], "sequence (class in pydicom.sequence)": [[243, "pydicom.sequence.Sequence"]], "__init__() (pydicom.sequence.sequence method)": [[243, "pydicom.sequence.Sequence.__init__"]], "extend() (pydicom.sequence.sequence method)": [[243, "pydicom.sequence.Sequence.extend"]], "basetag (class in pydicom.tag)": [[244, "pydicom.tag.BaseTag"]], "__init__() (pydicom.tag.basetag method)": [[244, "pydicom.tag.BaseTag.__init__"]], "elem (pydicom.tag.basetag property)": [[244, "pydicom.tag.BaseTag.elem"]], "element (pydicom.tag.basetag property)": [[244, "pydicom.tag.BaseTag.element"]], "group (pydicom.tag.basetag property)": [[244, "pydicom.tag.BaseTag.group"]], "is_private (pydicom.tag.basetag property)": [[244, "pydicom.tag.BaseTag.is_private"]], "is_private_creator (pydicom.tag.basetag property)": [[244, "pydicom.tag.BaseTag.is_private_creator"]], "json_key (pydicom.tag.basetag property)": [[244, "pydicom.tag.BaseTag.json_key"]], "private_creator (pydicom.tag.basetag property)": [[244, "pydicom.tag.BaseTag.private_creator"]], "tag() (in module pydicom.tag)": [[245, "pydicom.tag.Tag"]], "tupletag() (in module pydicom.tag)": [[246, "pydicom.tag.TupleTag"]], "tag_in_exception() (in module pydicom.tag)": [[247, "pydicom.tag.tag_in_exception"]], "acquisitioncontextsrstorage (in module pydicom.uid)": [[248, "pydicom.uid.AcquisitionContextSRStorage"]], "advancedblendingpresentationstatestorage (in module pydicom.uid)": [[249, "pydicom.uid.AdvancedBlendingPresentationStateStorage"]], "alltransfersyntaxes (in module pydicom.uid)": [[250, "pydicom.uid.AllTransferSyntaxes"]], "ambulatoryecgwaveformstorage (in module pydicom.uid)": [[251, "pydicom.uid.AmbulatoryECGWaveformStorage"]], "arterialpulsewaveformstorage (in module pydicom.uid)": [[252, "pydicom.uid.ArterialPulseWaveformStorage"]], "autorefractionmeasurementsstorage (in module pydicom.uid)": [[253, "pydicom.uid.AutorefractionMeasurementsStorage"]], "basicstructureddisplaystorage (in module pydicom.uid)": [[254, "pydicom.uid.BasicStructuredDisplayStorage"]], "basictextsrstorage (in module pydicom.uid)": [[255, "pydicom.uid.BasicTextSRStorage"]], "basicvoiceaudiowaveformstorage (in module pydicom.uid)": [[256, "pydicom.uid.BasicVoiceAudioWaveformStorage"]], "blendingsoftcopypresentationstatestorage (in module pydicom.uid)": [[257, "pydicom.uid.BlendingSoftcopyPresentationStateStorage"]], "bodypositionwaveformstorage (in module pydicom.uid)": [[258, "pydicom.uid.BodyPositionWaveformStorage"]], "breastprojectionxrayimagestorageforpresentation (in module pydicom.uid)": [[259, "pydicom.uid.BreastProjectionXRayImageStorageForPresentation"]], "breastprojectionxrayimagestorageforprocessing (in module pydicom.uid)": [[260, "pydicom.uid.BreastProjectionXRayImageStorageForProcessing"]], "breasttomosynthesisimagestorage (in module pydicom.uid)": [[261, "pydicom.uid.BreastTomosynthesisImageStorage"]], "carmphotonelectronradiationrecordstorage (in module pydicom.uid)": [[262, "pydicom.uid.CArmPhotonElectronRadiationRecordStorage"]], "carmphotonelectronradiationstorage (in module pydicom.uid)": [[263, "pydicom.uid.CArmPhotonElectronRadiationStorage"]], "ctdefinedprocedureprotocolstorage (in module pydicom.uid)": [[264, "pydicom.uid.CTDefinedProcedureProtocolStorage"]], "ctimagestorage (in module pydicom.uid)": [[265, "pydicom.uid.CTImageStorage"]], "ctperformedprocedureprotocolstorage (in module pydicom.uid)": [[266, "pydicom.uid.CTPerformedProcedureProtocolStorage"]], "cardiacelectrophysiologywaveformstorage (in module pydicom.uid)": [[267, "pydicom.uid.CardiacElectrophysiologyWaveformStorage"]], "chestcadsrstorage (in module pydicom.uid)": [[268, "pydicom.uid.ChestCADSRStorage"]], "coloncadsrstorage (in module pydicom.uid)": [[269, "pydicom.uid.ColonCADSRStorage"]], "colorpalettestorage (in module pydicom.uid)": [[270, "pydicom.uid.ColorPaletteStorage"]], "colorsoftcopypresentationstatestorage (in module pydicom.uid)": [[271, "pydicom.uid.ColorSoftcopyPresentationStateStorage"]], "compositingplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[272, "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage"]], "comprehensive3dsrstorage (in module pydicom.uid)": [[273, "pydicom.uid.Comprehensive3DSRStorage"]], "comprehensivesrstorage (in module pydicom.uid)": [[274, "pydicom.uid.ComprehensiveSRStorage"]], "computedradiographyimagestorage (in module pydicom.uid)": [[275, "pydicom.uid.ComputedRadiographyImageStorage"]], "confocalmicroscopyimagestorage (in module pydicom.uid)": [[276, "pydicom.uid.ConfocalMicroscopyImageStorage"]], "confocalmicroscopytiledpyramidalimagestorage (in module pydicom.uid)": [[277, "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage"]], "contentassessmentresultsstorage (in module pydicom.uid)": [[278, "pydicom.uid.ContentAssessmentResultsStorage"]], "cornealtopographymapstorage (in module pydicom.uid)": [[279, "pydicom.uid.CornealTopographyMapStorage"]], "dicos2daitstorage (in module pydicom.uid)": [[280, "pydicom.uid.DICOS2DAITStorage"]], "dicos3daitstorage (in module pydicom.uid)": [[281, "pydicom.uid.DICOS3DAITStorage"]], "dicosctimagestorage (in module pydicom.uid)": [[282, "pydicom.uid.DICOSCTImageStorage"]], "dicosdigitalxrayimagestorageforpresentation (in module pydicom.uid)": [[283, "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation"]], "dicosdigitalxrayimagestorageforprocessing (in module pydicom.uid)": [[284, "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing"]], "dicosquadrupoleresonancestorage (in module pydicom.uid)": [[285, "pydicom.uid.DICOSQuadrupoleResonanceStorage"]], "dicosthreatdetectionreportstorage (in module pydicom.uid)": [[286, "pydicom.uid.DICOSThreatDetectionReportStorage"]], "deflatedexplicitvrlittleendian (in module pydicom.uid)": [[287, "pydicom.uid.DeflatedExplicitVRLittleEndian"]], "deformablespatialregistrationstorage (in module pydicom.uid)": [[288, "pydicom.uid.DeformableSpatialRegistrationStorage"]], "dermoscopicphotographyimagestorage (in module pydicom.uid)": [[289, "pydicom.uid.DermoscopicPhotographyImageStorage"]], "digitalintraoralxrayimagestorageforpresentation (in module pydicom.uid)": [[290, "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation"]], "digitalintraoralxrayimagestorageforprocessing (in module pydicom.uid)": [[291, "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing"]], "digitalmammographyxrayimagestorageforpresentation (in module pydicom.uid)": [[292, "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation"]], "digitalmammographyxrayimagestorageforprocessing (in module pydicom.uid)": [[293, "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing"]], "digitalxrayimagestorageforpresentation (in module pydicom.uid)": [[294, "pydicom.uid.DigitalXRayImageStorageForPresentation"]], "digitalxrayimagestorageforprocessing (in module pydicom.uid)": [[295, "pydicom.uid.DigitalXRayImageStorageForProcessing"]], "eddycurrentimagestorage (in module pydicom.uid)": [[296, "pydicom.uid.EddyCurrentImageStorage"]], "eddycurrentmultiframeimagestorage (in module pydicom.uid)": [[297, "pydicom.uid.EddyCurrentMultiFrameImageStorage"]], "electromyogramwaveformstorage (in module pydicom.uid)": [[298, "pydicom.uid.ElectromyogramWaveformStorage"]], "electrooculogramwaveformstorage (in module pydicom.uid)": [[299, "pydicom.uid.ElectrooculogramWaveformStorage"]], "encapsulatedcdastorage (in module pydicom.uid)": [[300, "pydicom.uid.EncapsulatedCDAStorage"]], "encapsulatedmtlstorage (in module pydicom.uid)": [[301, "pydicom.uid.EncapsulatedMTLStorage"]], "encapsulatedobjstorage (in module pydicom.uid)": [[302, "pydicom.uid.EncapsulatedOBJStorage"]], "encapsulatedpdfstorage (in module pydicom.uid)": [[303, "pydicom.uid.EncapsulatedPDFStorage"]], "encapsulatedstlstorage (in module pydicom.uid)": [[304, "pydicom.uid.EncapsulatedSTLStorage"]], "enhancedctimagestorage (in module pydicom.uid)": [[305, "pydicom.uid.EnhancedCTImageStorage"]], "enhancedcontinuousrtimagestorage (in module pydicom.uid)": [[306, "pydicom.uid.EnhancedContinuousRTImageStorage"]], "enhancedmrcolorimagestorage (in module pydicom.uid)": [[307, "pydicom.uid.EnhancedMRColorImageStorage"]], "enhancedmrimagestorage (in module pydicom.uid)": [[308, "pydicom.uid.EnhancedMRImageStorage"]], "enhancedpetimagestorage (in module pydicom.uid)": [[309, "pydicom.uid.EnhancedPETImageStorage"]], "enhancedrtimagestorage (in module pydicom.uid)": [[310, "pydicom.uid.EnhancedRTImageStorage"]], "enhancedsrstorage (in module pydicom.uid)": [[311, "pydicom.uid.EnhancedSRStorage"]], "enhancedusvolumestorage (in module pydicom.uid)": [[312, "pydicom.uid.EnhancedUSVolumeStorage"]], "enhancedxaimagestorage (in module pydicom.uid)": [[313, "pydicom.uid.EnhancedXAImageStorage"]], "enhancedxrfimagestorage (in module pydicom.uid)": [[314, "pydicom.uid.EnhancedXRFImageStorage"]], "enhancedxrayradiationdosesrstorage (in module pydicom.uid)": [[315, "pydicom.uid.EnhancedXRayRadiationDoseSRStorage"]], "explicitvrbigendian (in module pydicom.uid)": [[316, "pydicom.uid.ExplicitVRBigEndian"]], "explicitvrlittleendian (in module pydicom.uid)": [[317, "pydicom.uid.ExplicitVRLittleEndian"]], "extensiblesrstorage (in module pydicom.uid)": [[318, "pydicom.uid.ExtensibleSRStorage"]], "general32bitecgwaveformstorage (in module pydicom.uid)": [[319, "pydicom.uid.General32bitECGWaveformStorage"]], "generalaudiowaveformstorage (in module pydicom.uid)": [[320, "pydicom.uid.GeneralAudioWaveformStorage"]], "generalecgwaveformstorage (in module pydicom.uid)": [[321, "pydicom.uid.GeneralECGWaveformStorage"]], "genericimplanttemplatestorage (in module pydicom.uid)": [[322, "pydicom.uid.GenericImplantTemplateStorage"]], "grayscaleplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[323, "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage"]], "grayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[324, "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage"]], "hevcm10p51 (in module pydicom.uid)": [[325, "pydicom.uid.HEVCM10P51"]], "hevcmp51 (in module pydicom.uid)": [[326, "pydicom.uid.HEVCMP51"]], "htj2k (in module pydicom.uid)": [[327, "pydicom.uid.HTJ2K"]], "htj2klossless (in module pydicom.uid)": [[328, "pydicom.uid.HTJ2KLossless"]], "htj2klosslessrpcl (in module pydicom.uid)": [[329, "pydicom.uid.HTJ2KLosslessRPCL"]], "hangingprotocolstorage (in module pydicom.uid)": [[330, "pydicom.uid.HangingProtocolStorage"]], "hemodynamicwaveformstorage (in module pydicom.uid)": [[331, "pydicom.uid.HemodynamicWaveformStorage"]], "implantassemblytemplatestorage (in module pydicom.uid)": [[332, "pydicom.uid.ImplantAssemblyTemplateStorage"]], "implanttemplategroupstorage (in module pydicom.uid)": [[333, "pydicom.uid.ImplantTemplateGroupStorage"]], "implantationplansrstorage (in module pydicom.uid)": [[334, "pydicom.uid.ImplantationPlanSRStorage"]], "implicitvrlittleendian (in module pydicom.uid)": [[335, "pydicom.uid.ImplicitVRLittleEndian"]], "intraocularlenscalculationsstorage (in module pydicom.uid)": [[336, "pydicom.uid.IntraocularLensCalculationsStorage"]], "intravascularopticalcoherencetomographyimagestorageforpresentation (in module pydicom.uid)": [[337, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation"]], "intravascularopticalcoherencetomographyimagestorageforprocessing (in module pydicom.uid)": [[338, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing"]], "inventorystorage (in module pydicom.uid)": [[339, "pydicom.uid.InventoryStorage"]], "jpeg2000 (in module pydicom.uid)": [[340, "pydicom.uid.JPEG2000"]], "jpeg2000lossless (in module pydicom.uid)": [[341, "pydicom.uid.JPEG2000Lossless"]], "jpeg2000mc (in module pydicom.uid)": [[342, "pydicom.uid.JPEG2000MC"]], "jpeg2000mclossless (in module pydicom.uid)": [[343, "pydicom.uid.JPEG2000MCLossless"]], "jpeg2000transfersyntaxes (in module pydicom.uid)": [[344, "pydicom.uid.JPEG2000TransferSyntaxes"]], "jpegbaseline8bit (in module pydicom.uid)": [[345, "pydicom.uid.JPEGBaseline8Bit"]], "jpegextended12bit (in module pydicom.uid)": [[346, "pydicom.uid.JPEGExtended12Bit"]], "jpeglslossless (in module pydicom.uid)": [[347, "pydicom.uid.JPEGLSLossless"]], "jpeglsnearlossless (in module pydicom.uid)": [[348, "pydicom.uid.JPEGLSNearLossless"]], "jpeglstransfersyntaxes (in module pydicom.uid)": [[349, "pydicom.uid.JPEGLSTransferSyntaxes"]], "jpeglossless (in module pydicom.uid)": [[350, "pydicom.uid.JPEGLossless"]], "jpeglosslesssv1 (in module pydicom.uid)": [[351, "pydicom.uid.JPEGLosslessSV1"]], "jpegtransfersyntaxes (in module pydicom.uid)": [[352, "pydicom.uid.JPEGTransferSyntaxes"]], "jpiphtj2kreferenced (in module pydicom.uid)": [[353, "pydicom.uid.JPIPHTJ2KReferenced"]], "jpiphtj2kreferenceddeflate (in module pydicom.uid)": [[354, "pydicom.uid.JPIPHTJ2KReferencedDeflate"]], "keratometrymeasurementsstorage (in module pydicom.uid)": [[355, "pydicom.uid.KeratometryMeasurementsStorage"]], "keyobjectselectiondocumentstorage (in module pydicom.uid)": [[356, "pydicom.uid.KeyObjectSelectionDocumentStorage"]], "legacyconvertedenhancedctimagestorage (in module pydicom.uid)": [[357, "pydicom.uid.LegacyConvertedEnhancedCTImageStorage"]], "legacyconvertedenhancedmrimagestorage (in module pydicom.uid)": [[358, "pydicom.uid.LegacyConvertedEnhancedMRImageStorage"]], "legacyconvertedenhancedpetimagestorage (in module pydicom.uid)": [[359, "pydicom.uid.LegacyConvertedEnhancedPETImageStorage"]], "lensometrymeasurementsstorage (in module pydicom.uid)": [[360, "pydicom.uid.LensometryMeasurementsStorage"]], "mpeg2mphl (in module pydicom.uid)": [[361, "pydicom.uid.MPEG2MPHL"]], "mpeg2mphlf (in module pydicom.uid)": [[362, "pydicom.uid.MPEG2MPHLF"]], "mpeg2mpml (in module pydicom.uid)": [[363, "pydicom.uid.MPEG2MPML"]], "mpeg2mpmlf (in module pydicom.uid)": [[364, "pydicom.uid.MPEG2MPMLF"]], "mpeg4hp41 (in module pydicom.uid)": [[365, "pydicom.uid.MPEG4HP41"]], "mpeg4hp41bd (in module pydicom.uid)": [[366, "pydicom.uid.MPEG4HP41BD"]], "mpeg4hp41bdf (in module pydicom.uid)": [[367, "pydicom.uid.MPEG4HP41BDF"]], "mpeg4hp41f (in module pydicom.uid)": [[368, "pydicom.uid.MPEG4HP41F"]], "mpeg4hp422d (in module pydicom.uid)": [[369, "pydicom.uid.MPEG4HP422D"]], "mpeg4hp422df (in module pydicom.uid)": [[370, "pydicom.uid.MPEG4HP422DF"]], "mpeg4hp423d (in module pydicom.uid)": [[371, "pydicom.uid.MPEG4HP423D"]], "mpeg4hp423df (in module pydicom.uid)": [[372, "pydicom.uid.MPEG4HP423DF"]], "mpeg4hp42stereo (in module pydicom.uid)": [[373, "pydicom.uid.MPEG4HP42STEREO"]], "mpeg4hp42stereof (in module pydicom.uid)": [[374, "pydicom.uid.MPEG4HP42STEREOF"]], "mpegtransfersyntaxes (in module pydicom.uid)": [[375, "pydicom.uid.MPEGTransferSyntaxes"]], "mrimagestorage (in module pydicom.uid)": [[376, "pydicom.uid.MRImageStorage"]], "mrspectroscopystorage (in module pydicom.uid)": [[377, "pydicom.uid.MRSpectroscopyStorage"]], "maculargridthicknessandvolumereportstorage (in module pydicom.uid)": [[378, "pydicom.uid.MacularGridThicknessAndVolumeReportStorage"]], "mammographycadsrstorage (in module pydicom.uid)": [[379, "pydicom.uid.MammographyCADSRStorage"]], "mediastoragedirectorystorage (in module pydicom.uid)": [[380, "pydicom.uid.MediaStorageDirectoryStorage"]], "microscopybulksimpleannotationsstorage (in module pydicom.uid)": [[381, "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage"]], "multiframegrayscalebytesecondarycaptureimagestorage (in module pydicom.uid)": [[382, "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage"]], "multiframegrayscalewordsecondarycaptureimagestorage (in module pydicom.uid)": [[383, "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage"]], "multiframesinglebitsecondarycaptureimagestorage (in module pydicom.uid)": [[384, "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage"]], "multiframetruecolorsecondarycaptureimagestorage (in module pydicom.uid)": [[385, "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage"]], "multichannelrespiratorywaveformstorage (in module pydicom.uid)": [[386, "pydicom.uid.MultichannelRespiratoryWaveformStorage"]], "multiplevolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[387, "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage"]], "nuclearmedicineimagestorage (in module pydicom.uid)": [[388, "pydicom.uid.NuclearMedicineImageStorage"]], "ophthalmicaxialmeasurementsstorage (in module pydicom.uid)": [[389, "pydicom.uid.OphthalmicAxialMeasurementsStorage"]], "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage (in module pydicom.uid)": [[390, "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"]], "ophthalmicopticalcoherencetomographyenfaceimagestorage (in module pydicom.uid)": [[391, "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"]], "ophthalmicphotography16bitimagestorage (in module pydicom.uid)": [[392, "pydicom.uid.OphthalmicPhotography16BitImageStorage"]], "ophthalmicphotography8bitimagestorage (in module pydicom.uid)": [[393, "pydicom.uid.OphthalmicPhotography8BitImageStorage"]], "ophthalmicthicknessmapstorage (in module pydicom.uid)": [[394, "pydicom.uid.OphthalmicThicknessMapStorage"]], "ophthalmictomographyimagestorage (in module pydicom.uid)": [[395, "pydicom.uid.OphthalmicTomographyImageStorage"]], "ophthalmicvisualfieldstaticperimetrymeasurementsstorage (in module pydicom.uid)": [[396, "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"]], "pydicom_implementation_uid (in module pydicom.uid)": [[397, "pydicom.uid.PYDICOM_IMPLEMENTATION_UID"]], "pydicom_root_uid (in module pydicom.uid)": [[398, "pydicom.uid.PYDICOM_ROOT_UID"]], "parametricmapstorage (in module pydicom.uid)": [[399, "pydicom.uid.ParametricMapStorage"]], "patientradiationdosesrstorage (in module pydicom.uid)": [[400, "pydicom.uid.PatientRadiationDoseSRStorage"]], "performedimagingagentadministrationsrstorage (in module pydicom.uid)": [[401, "pydicom.uid.PerformedImagingAgentAdministrationSRStorage"]], "photoacousticimagestorage (in module pydicom.uid)": [[402, "pydicom.uid.PhotoacousticImageStorage"]], "plannedimagingagentadministrationsrstorage (in module pydicom.uid)": [[403, "pydicom.uid.PlannedImagingAgentAdministrationSRStorage"]], "positronemissiontomographyimagestorage (in module pydicom.uid)": [[404, "pydicom.uid.PositronEmissionTomographyImageStorage"]], "privatetransfersyntaxes (in module pydicom.uid)": [[405, "pydicom.uid.PrivateTransferSyntaxes"]], "procedurelogstorage (in module pydicom.uid)": [[406, "pydicom.uid.ProcedureLogStorage"]], "protocolapprovalstorage (in module pydicom.uid)": [[407, "pydicom.uid.ProtocolApprovalStorage"]], "pseudocolorsoftcopypresentationstatestorage (in module pydicom.uid)": [[408, "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage"]], "re_valid_uid (in module pydicom.uid)": [[409, "pydicom.uid.RE_VALID_UID"]], "re_valid_uid_prefix (in module pydicom.uid)": [[410, "pydicom.uid.RE_VALID_UID_PREFIX"]], "rlelossless (in module pydicom.uid)": [[411, "pydicom.uid.RLELossless"]], "rletransfersyntaxes (in module pydicom.uid)": [[412, "pydicom.uid.RLETransferSyntaxes"]], "rtbeamsdeliveryinstructionstorage (in module pydicom.uid)": [[413, "pydicom.uid.RTBeamsDeliveryInstructionStorage"]], "rtbeamstreatmentrecordstorage (in module pydicom.uid)": [[414, "pydicom.uid.RTBeamsTreatmentRecordStorage"]], "rtbrachyapplicationsetupdeliveryinstructionstorage (in module pydicom.uid)": [[415, "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage"]], "rtbrachytreatmentrecordstorage (in module pydicom.uid)": [[416, "pydicom.uid.RTBrachyTreatmentRecordStorage"]], "rtdosestorage (in module pydicom.uid)": [[417, "pydicom.uid.RTDoseStorage"]], "rtimagestorage (in module pydicom.uid)": [[418, "pydicom.uid.RTImageStorage"]], "rtionbeamstreatmentrecordstorage (in module pydicom.uid)": [[419, "pydicom.uid.RTIonBeamsTreatmentRecordStorage"]], "rtionplanstorage (in module pydicom.uid)": [[420, "pydicom.uid.RTIonPlanStorage"]], "rtpatientpositionacquisitioninstructionstorage (in module pydicom.uid)": [[421, "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage"]], "rtphysicianintentstorage (in module pydicom.uid)": [[422, "pydicom.uid.RTPhysicianIntentStorage"]], "rtplanstorage (in module pydicom.uid)": [[423, "pydicom.uid.RTPlanStorage"]], "rtradiationrecordsetstorage (in module pydicom.uid)": [[424, "pydicom.uid.RTRadiationRecordSetStorage"]], "rtradiationsalvagerecordstorage (in module pydicom.uid)": [[425, "pydicom.uid.RTRadiationSalvageRecordStorage"]], "rtradiationsetdeliveryinstructionstorage (in module pydicom.uid)": [[426, "pydicom.uid.RTRadiationSetDeliveryInstructionStorage"]], "rtradiationsetstorage (in module pydicom.uid)": [[427, "pydicom.uid.RTRadiationSetStorage"]], "rtsegmentannotationstorage (in module pydicom.uid)": [[428, "pydicom.uid.RTSegmentAnnotationStorage"]], "rtstructuresetstorage (in module pydicom.uid)": [[429, "pydicom.uid.RTStructureSetStorage"]], "rttreatmentpreparationstorage (in module pydicom.uid)": [[430, "pydicom.uid.RTTreatmentPreparationStorage"]], "rttreatmentsummaryrecordstorage (in module pydicom.uid)": [[431, "pydicom.uid.RTTreatmentSummaryRecordStorage"]], "radiopharmaceuticalradiationdosesrstorage (in module pydicom.uid)": [[432, "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage"]], "rawdatastorage (in module pydicom.uid)": [[433, "pydicom.uid.RawDataStorage"]], "realworldvaluemappingstorage (in module pydicom.uid)": [[434, "pydicom.uid.RealWorldValueMappingStorage"]], "respiratorywaveformstorage (in module pydicom.uid)": [[435, "pydicom.uid.RespiratoryWaveformStorage"]], "roboticarmradiationstorage (in module pydicom.uid)": [[436, "pydicom.uid.RoboticArmRadiationStorage"]], "roboticradiationrecordstorage (in module pydicom.uid)": [[437, "pydicom.uid.RoboticRadiationRecordStorage"]], "routinescalpelectroencephalogramwaveformstorage (in module pydicom.uid)": [[438, "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage"]], "smptest211020uncompressedinterlacedactivevideo (in module pydicom.uid)": [[439, "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo"]], "smptest211020uncompressedprogressiveactivevideo (in module pydicom.uid)": [[440, "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo"]], "smptest211030pcmdigitalaudio (in module pydicom.uid)": [[441, "pydicom.uid.SMPTEST211030PCMDigitalAudio"]], "secondarycaptureimagestorage (in module pydicom.uid)": [[442, "pydicom.uid.SecondaryCaptureImageStorage"]], "segmentationstorage (in module pydicom.uid)": [[443, "pydicom.uid.SegmentationStorage"]], "segmentedvolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[444, "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage"]], "simplifiedadultechosrstorage (in module pydicom.uid)": [[445, "pydicom.uid.SimplifiedAdultEchoSRStorage"]], "sleepelectroencephalogramwaveformstorage (in module pydicom.uid)": [[446, "pydicom.uid.SleepElectroencephalogramWaveformStorage"]], "spatialfiducialsstorage (in module pydicom.uid)": [[447, "pydicom.uid.SpatialFiducialsStorage"]], "spatialregistrationstorage (in module pydicom.uid)": [[448, "pydicom.uid.SpatialRegistrationStorage"]], "spectacleprescriptionreportstorage (in module pydicom.uid)": [[449, "pydicom.uid.SpectaclePrescriptionReportStorage"]], "stereometricrelationshipstorage (in module pydicom.uid)": [[450, "pydicom.uid.StereometricRelationshipStorage"]], "subjectiverefractionmeasurementsstorage (in module pydicom.uid)": [[451, "pydicom.uid.SubjectiveRefractionMeasurementsStorage"]], "surfacescanmeshstorage (in module pydicom.uid)": [[452, "pydicom.uid.SurfaceScanMeshStorage"]], "surfacescanpointcloudstorage (in module pydicom.uid)": [[453, "pydicom.uid.SurfaceScanPointCloudStorage"]], "surfacesegmentationstorage (in module pydicom.uid)": [[454, "pydicom.uid.SurfaceSegmentationStorage"]], "tomotherapeuticradiationrecordstorage (in module pydicom.uid)": [[455, "pydicom.uid.TomotherapeuticRadiationRecordStorage"]], "tomotherapeuticradiationstorage (in module pydicom.uid)": [[456, "pydicom.uid.TomotherapeuticRadiationStorage"]], "tractographyresultsstorage (in module pydicom.uid)": [[457, "pydicom.uid.TractographyResultsStorage"]], "twelveleadecgwaveformstorage (in module pydicom.uid)": [[458, "pydicom.uid.TwelveLeadECGWaveformStorage"]], "uid (class in pydicom.uid)": [[459, "pydicom.uid.UID"]], "__init__() (pydicom.uid.uid method)": [[459, "pydicom.uid.UID.__init__"]], "info (pydicom.uid.uid property)": [[459, "pydicom.uid.UID.info"]], "is_compressed (pydicom.uid.uid property)": [[459, "pydicom.uid.UID.is_compressed"]], "is_deflated (pydicom.uid.uid property)": [[459, "pydicom.uid.UID.is_deflated"]], "is_encapsulated (pydicom.uid.uid property)": [[459, "pydicom.uid.UID.is_encapsulated"]], "is_implicit_vr (pydicom.uid.uid property)": [[459, "pydicom.uid.UID.is_implicit_VR"]], "is_little_endian (pydicom.uid.uid property)": [[459, "pydicom.uid.UID.is_little_endian"]], "is_private (pydicom.uid.uid property)": [[459, "pydicom.uid.UID.is_private"]], "is_retired (pydicom.uid.uid property)": [[459, "pydicom.uid.UID.is_retired"]], "is_transfer_syntax (pydicom.uid.uid property)": [[459, "pydicom.uid.UID.is_transfer_syntax"]], "is_valid (pydicom.uid.uid property)": [[459, "pydicom.uid.UID.is_valid"]], "keyword (pydicom.uid.uid property)": [[459, "pydicom.uid.UID.keyword"]], "name (pydicom.uid.uid property)": [[459, "pydicom.uid.UID.name"]], "set_private_encoding() (pydicom.uid.uid method)": [[459, "pydicom.uid.UID.set_private_encoding"]], "type (pydicom.uid.uid property)": [[459, "pydicom.uid.UID.type"]], "ultrasoundimagestorage (in module pydicom.uid)": [[460, "pydicom.uid.UltrasoundImageStorage"]], "ultrasoundmultiframeimagestorage (in module pydicom.uid)": [[461, "pydicom.uid.UltrasoundMultiFrameImageStorage"]], "uncompressedtransfersyntaxes (in module pydicom.uid)": [[462, "pydicom.uid.UncompressedTransferSyntaxes"]], "vlendoscopicimagestorage (in module pydicom.uid)": [[463, "pydicom.uid.VLEndoscopicImageStorage"]], "vlmicroscopicimagestorage (in module pydicom.uid)": [[464, "pydicom.uid.VLMicroscopicImageStorage"]], "vlphotographicimagestorage (in module pydicom.uid)": [[465, "pydicom.uid.VLPhotographicImageStorage"]], "vlslidecoordinatesmicroscopicimagestorage (in module pydicom.uid)": [[466, "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage"]], "vlwholeslidemicroscopyimagestorage (in module pydicom.uid)": [[467, "pydicom.uid.VLWholeSlideMicroscopyImageStorage"]], "variablemodalitylutsoftcopypresentationstatestorage (in module pydicom.uid)": [[468, "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage"]], "videoendoscopicimagestorage (in module pydicom.uid)": [[469, "pydicom.uid.VideoEndoscopicImageStorage"]], "videomicroscopicimagestorage (in module pydicom.uid)": [[470, "pydicom.uid.VideoMicroscopicImageStorage"]], "videophotographicimagestorage (in module pydicom.uid)": [[471, "pydicom.uid.VideoPhotographicImageStorage"]], "visualacuitymeasurementsstorage (in module pydicom.uid)": [[472, "pydicom.uid.VisualAcuityMeasurementsStorage"]], "volumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[473, "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage"]], "widefieldophthalmicphotography3dcoordinatesimagestorage (in module pydicom.uid)": [[474, "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage"]], "widefieldophthalmicphotographystereographicprojectionimagestorage (in module pydicom.uid)": [[475, "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"]], "xadefinedprocedureprotocolstorage (in module pydicom.uid)": [[476, "pydicom.uid.XADefinedProcedureProtocolStorage"]], "xaperformedprocedureprotocolstorage (in module pydicom.uid)": [[477, "pydicom.uid.XAPerformedProcedureProtocolStorage"]], "xaxrfgrayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[478, "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage"]], "xray3dangiographicimagestorage (in module pydicom.uid)": [[479, "pydicom.uid.XRay3DAngiographicImageStorage"]], "xray3dcraniofacialimagestorage (in module pydicom.uid)": [[480, "pydicom.uid.XRay3DCraniofacialImageStorage"]], "xrayangiographicimagestorage (in module pydicom.uid)": [[481, "pydicom.uid.XRayAngiographicImageStorage"]], "xrayradiationdosesrstorage (in module pydicom.uid)": [[482, "pydicom.uid.XRayRadiationDoseSRStorage"]], "xrayradiofluoroscopicimagestorage (in module pydicom.uid)": [[483, "pydicom.uid.XRayRadiofluoroscopicImageStorage"]], "generate_uid() (in module pydicom.uid)": [[484, "pydicom.uid.generate_uid"]], "register_transfer_syntax() (in module pydicom.uid)": [[485, "pydicom.uid.register_transfer_syntax"]], "da (class in pydicom.valuerep)": [[486, "pydicom.valuerep.DA"]], "__init__() (pydicom.valuerep.da method)": [[486, "pydicom.valuerep.DA.__init__"]], "ds() (in module pydicom.valuerep)": [[487, "pydicom.valuerep.DS"]], "dsdecimal (class in pydicom.valuerep)": [[488, "pydicom.valuerep.DSdecimal"]], "__init__() (pydicom.valuerep.dsdecimal method)": [[488, "pydicom.valuerep.DSdecimal.__init__"]], "dsfloat (class in pydicom.valuerep)": [[489, "pydicom.valuerep.DSfloat"]], "__init__() (pydicom.valuerep.dsfloat method)": [[489, "pydicom.valuerep.DSfloat.__init__"]], "dt (class in pydicom.valuerep)": [[490, "pydicom.valuerep.DT"]], "__init__() (pydicom.valuerep.dt method)": [[490, "pydicom.valuerep.DT.__init__"]], "is (class in pydicom.valuerep)": [[491, "pydicom.valuerep.IS"]], "__init__() (pydicom.valuerep.is method)": [[491, "pydicom.valuerep.IS.__init__"]], "isfloat (class in pydicom.valuerep)": [[492, "pydicom.valuerep.ISfloat"]], "__init__() (pydicom.valuerep.isfloat method)": [[492, "pydicom.valuerep.ISfloat.__init__"]], "personname (class in pydicom.valuerep)": [[493, "pydicom.valuerep.PersonName"]], "__init__() (pydicom.valuerep.personname method)": [[493, "pydicom.valuerep.PersonName.__init__"]], "alphabetic (pydicom.valuerep.personname property)": [[493, "pydicom.valuerep.PersonName.alphabetic"]], "components (pydicom.valuerep.personname property)": [[493, "pydicom.valuerep.PersonName.components"]], "decode() (pydicom.valuerep.personname method)": [[493, "pydicom.valuerep.PersonName.decode"]], "encode() (pydicom.valuerep.personname method)": [[493, "pydicom.valuerep.PersonName.encode"]], "family_comma_given() (pydicom.valuerep.personname method)": [[493, "pydicom.valuerep.PersonName.family_comma_given"]], "family_name (pydicom.valuerep.personname property)": [[493, "pydicom.valuerep.PersonName.family_name"]], "formatted() (pydicom.valuerep.personname method)": [[493, "pydicom.valuerep.PersonName.formatted"]], "from_named_components() (pydicom.valuerep.personname class method)": [[493, "pydicom.valuerep.PersonName.from_named_components"]], "from_named_components_veterinary() (pydicom.valuerep.personname class method)": [[493, "pydicom.valuerep.PersonName.from_named_components_veterinary"]], "given_name (pydicom.valuerep.personname property)": [[493, "pydicom.valuerep.PersonName.given_name"]], "ideographic (pydicom.valuerep.personname property)": [[493, "pydicom.valuerep.PersonName.ideographic"]], "middle_name (pydicom.valuerep.personname property)": [[493, "pydicom.valuerep.PersonName.middle_name"]], "name_prefix (pydicom.valuerep.personname property)": [[493, "pydicom.valuerep.PersonName.name_prefix"]], "name_suffix (pydicom.valuerep.personname property)": [[493, "pydicom.valuerep.PersonName.name_suffix"]], "phonetic (pydicom.valuerep.personname property)": [[493, "pydicom.valuerep.PersonName.phonetic"]], "tm (class in pydicom.valuerep)": [[494, "pydicom.valuerep.TM"]], "__init__() (pydicom.valuerep.tm method)": [[494, "pydicom.valuerep.TM.__init__"]], "vr (class in pydicom.valuerep)": [[495, "pydicom.valuerep.VR"]], "__init__() (pydicom.valuerep.vr method)": [[495, "pydicom.valuerep.VR.__init__"]], "format_number_as_ds() (in module pydicom.valuerep)": [[496, "pydicom.valuerep.format_number_as_ds"]], "is_valid_ds() (in module pydicom.valuerep)": [[497, "pydicom.valuerep.is_valid_ds"]], "convert_ae_string() (in module pydicom.values)": [[498, "pydicom.values.convert_AE_string"]], "convert_atvalue() (in module pydicom.values)": [[499, "pydicom.values.convert_ATvalue"]], "convert_da_string() (in module pydicom.values)": [[500, "pydicom.values.convert_DA_string"]], "convert_ds_string() (in module pydicom.values)": [[501, "pydicom.values.convert_DS_string"]], "convert_dt_string() (in module pydicom.values)": [[502, "pydicom.values.convert_DT_string"]], "convert_is_string() (in module pydicom.values)": [[503, "pydicom.values.convert_IS_string"]], "convert_obvalue() (in module pydicom.values)": [[504, "pydicom.values.convert_OBvalue"]], "convert_owvalue() (in module pydicom.values)": [[505, "pydicom.values.convert_OWvalue"]], "convert_pn() (in module pydicom.values)": [[506, "pydicom.values.convert_PN"]], "convert_sq() (in module pydicom.values)": [[507, "pydicom.values.convert_SQ"]], "convert_tm_string() (in module pydicom.values)": [[508, "pydicom.values.convert_TM_string"]], "convert_ui() (in module pydicom.values)": [[509, "pydicom.values.convert_UI"]], "convert_un() (in module pydicom.values)": [[510, "pydicom.values.convert_UN"]], "convert_ur_string() (in module pydicom.values)": [[511, "pydicom.values.convert_UR_string"]], "convert_numbers() (in module pydicom.values)": [[512, "pydicom.values.convert_numbers"]], "convert_single_string() (in module pydicom.values)": [[513, "pydicom.values.convert_single_string"]], "convert_string() (in module pydicom.values)": [[514, "pydicom.values.convert_string"]], "convert_tag() (in module pydicom.values)": [[515, "pydicom.values.convert_tag"]], "convert_text() (in module pydicom.values)": [[516, "pydicom.values.convert_text"]], "convert_value() (in module pydicom.values)": [[517, "pydicom.values.convert_value"]], "multi_string() (in module pydicom.values)": [[518, "pydicom.values.multi_string"]], "generate_multiplex() (in module pydicom.waveforms.numpy_handler)": [[519, "pydicom.waveforms.numpy_handler.generate_multiplex"]], "is_available() (in module pydicom.waveforms.numpy_handler)": [[519, "pydicom.waveforms.numpy_handler.is_available"]], "multiplex_array() (in module pydicom.waveforms.numpy_handler)": [[519, "pydicom.waveforms.numpy_handler.multiplex_array"]], "pydicom.waveforms.numpy_handler": [[519, "module-pydicom.waveforms.numpy_handler"]], "pydicom.pixel_data_handlers": [[521, "module-pydicom.pixel_data_handlers"]], "pydicom": [[522, "module-pydicom"]], "pydicom.overlays": [[524, "module-pydicom.overlays"]], "pydicom.pixels.encoders": [[527, "module-pydicom.pixels.encoders"]], "pydicom.waveforms": [[529, "module-pydicom.waveforms"]]}})