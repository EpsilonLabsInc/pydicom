Search.setIndex({"alltitles": {"(Optional) Install required libraries": [[602, "optional-install-required-libraries"]], "A simple example": [[24, "a-simple-example"], [26, "a-simple-example"]], "API Reference": [[54, "api-reference"], [567, null]], "Add items to the private DICOM dictionary": [[16, null]], "Adding Plugins to a Decoder": [[30, "adding-plugins-to-a-decoder"]], "Adding Plugins to an Encoder": [[34, "adding-plugins-to-an-encoder"]], "Adding SOP instances": [[606, "adding-sop-instances"]], "Adding elements": [[604, "adding-elements"]], "Adding new entries to the DICOM dictionary": [[47, "adding-new-entries-to-the-dicom-dictionary"]], "Additional type hints": [[608, "additional-type-hints"]], "Analyse differences between DICOM files": [[20, null]], "Anonymize DICOM data": [[17, null]], "Anonymize a single file": [[17, "anonymize-a-single-file"]], "Any category": [[604, "any-category"]], "Applying the changes": [[606, "applying-the-changes"]], "Available Plugins": [[36, "available-plugins"], [37, "available-plugins"], [38, "available-plugins"]], "Best Practices": [[43, null]], "Bits Stored": [[36, "bits-stored"]], "Bufferable O* VRs": [[32, "bufferable-o-vrs"]], "Bug Fixes": [[578, "id44"], [578, "id48"], [579, "bug-fixes"], [580, "bug-fixes"]], "Bug fixes": [[578, "bug-fixes"], [578, "id36"], [578, "id39"], [583, "bug-fixes"], [584, "bug-fixes"], [585, "bug-fixes"]], "Build and preview the documentation": [[603, "build-and-preview-the-documentation"]], "Bulk Data Encapsulation Utilities (pydicom.encaps)": [[67, null]], "Bulk Data Handlers": [[565, null]], "Changelog": [[578, "changelog"], [593, "changelog"]], "Changes": [[578, "changes"], [578, "id1"], [578, "id5"], [578, "id8"], [578, "id13"], [578, "id18"], [578, "id21"], [578, "id22"], [578, "id25"], [589, "changes"], [590, "changes"], [591, "changes"], [592, "changes"], [594, "changes"], [596, "changes"], [597, "changes"], [598, "changes"], [599, "changes"]], "Character Encoding and Decoding (pydicom.charset)": [[55, null]], "Codifying a part of a DICOM file": [[24, "codifying-a-part-of-a-dicom-file"], [26, "codifying-a-part-of-a-dicom-file"]], "Color space": [[50, "color-space"]], "Combining with other CLIs": [[26, "combining-with-other-clis"], [27, "combining-with-other-clis"]], "Command options": [[24, "command-options"], [26, "command-options"]], "Command-line Interface Guide": [[26, null]], "Commit your changes and make a pull request": [[602, "commit-your-changes-and-make-a-pull-request"], [603, "commit-your-changes-and-make-a-pull-request"]], "Compressed transfer syntaxes": [[612, "compressed-transfer-syntaxes"]], "Compressing Pixel Data": [[44, null]], "Compressing a dataset (with RLE Lossless)": [[609, "compressing-a-dataset-with-rle-lossless"]], "Compressing using pydicom": [[44, "compressing-using-pydicom"]], "Compressing using third-party packages": [[44, "compressing-using-third-party-packages"]], "Compressing with Dataset.compress()": [[44, "compressing-with-dataset-compress"]], "Compressing with JPEG 2000": [[609, "compressing-with-jpeg-2000"]], "Compressing with JPEG-LS": [[609, "compressing-with-jpeg-ls"]], "Compression of Pixel Data": [[609, "compression-of-pixel-data"]], "Computation times": [[5, null], [13, null], [19, null], [21, null], [600, null]], "Concepts and Context Groups (pydicom.sr)": [[575, null]], "Conclusion": [[606, "conclusion"], [609, "conclusion"]], "Conclusion and next steps": [[610, "conclusion-and-next-steps"], [612, "conclusion-and-next-steps"]], "Configuration Options (pydicom.config)": [[56, null]], "Contrib file changes": [[578, "contrib-file-changes"], [578, "id34"], [585, "contrib-file-changes"], [586, "contrib-file-changes"]], "Contributing a documentation change": [[603, null]], "Contributing a source code change": [[602, null]], "Contributing to pydicom": [[601, null]], "Controlling decoding": [[612, "controlling-decoding"]], "Converting a dataset into JSON format": [[605, "converting-a-dataset-into-json-format"]], "Converting to an ndarray": [[612, "converting-to-an-ndarray"]], "Converting to an ndarray with metadata": [[612, "converting-to-an-ndarray-with-metadata"]], "Core elements in pydicom": [[42, null]], "Create a new branch": [[602, "create-a-new-branch"], [603, "create-a-new-branch"]], "Creating Encapsulated Data": [[67, "creating-encapsulated-data"]], "Creating Float Pixel Data and Double Float Pixel Data": [[610, "creating-float-pixel-data-and-double-float-pixel-data"]], "Creating Pixel Data": [[610, "creating-pixel-data"]], "Creating a dataset from JSON": [[605, "creating-a-dataset-from-json"]], "Creating a new File-set": [[606, "creating-a-new-file-set"]], "DICOM Data Dictionary": [[58, "dicom-data-dictionary"]], "DICOM File-sets (pydicom.fileset)": [[75, null]], "DICOM File-sets and DICOMDIR": [[606, null]], "Data Dictionary Utilities (pydicom.datadict)": [[58, null]], "Data Elements (pydicom.dataelem)": [[61, null]], "DataElement": [[42, "dataelement"]], "Dataset": [[42, "dataset"]], "Dataset IO": [[70, null]], "Dataset Reading (pydicom.filereader)": [[72, null]], "Dataset Writing (pydicom.filewriter)": [[74, null]], "Dataset basics: read, access, modify, write": [[604, null]], "Dataset.overlay_array()": [[49, "dataset-overlay-array"]], "Dataset.pixel_array": [[50, "dataset-pixel-array"]], "Dataset.waveform_array()": [[51, "dataset-waveform-array"]], "Decode and plot Waveform Data": [[3, null]], "Decoding Plugin Options": [[29, "decoding-plugin-options"]], "Decoding Waveform Data": [[614, "decoding-waveform-data"]], "Decompression of Pixel Data": [[609, "decompression-of-pixel-data"]], "Deleting elements": [[604, "deleting-elements"]], "Deprecations": [[578, "deprecations"], [599, "deprecations"]], "Display unicode person names": [[22, null]], "Displaying Private Data Elements in pydicom": [[47, "displaying-private-data-elements-in-pydicom"]], "Documentation": [[578, "documentation"], [590, "documentation"]], "Download the current source code": [[602, "download-the-current-source-code"]], "Download the documentation": [[603, "download-the-documentation"]], "Downloading example/test DICOM files": [[608, "downloading-example-test-dicom-files"]], "Downsize MRI image using pydicom": [[2, null]], "Element Multi-value Representation (pydicom.multival)": [[62, null]], "Element Tags (pydicom.tag)": [[64, null]], "Element VRs and Python types": [[32, null]], "Element Value Decoding (pydicom.values)": [[66, null]], "Elements": [[604, "elements"]], "Encapsulating data compressed by third-party packages": [[609, "encapsulating-data-compressed-by-third-party-packages"]], "Encoder Plugins Options": [[33, null]], "Encoding Waveform Data": [[614, "encoding-waveform-data"]], "Enforcing Valid DICOM": [[43, "enforcing-valid-dicom"]], "Enhancements": [[578, "enhancements"], [578, "id2"], [578, "id6"], [578, "id9"], [578, "id12"], [578, "id15"], [578, "id20"], [578, "id23"], [578, "id26"], [578, "id28"], [578, "id31"], [578, "id33"], [585, "enhancements"], [586, "enhancements"], [588, "enhancements"], [589, "enhancements"], [590, "enhancements"], [591, "enhancements"], [593, "enhancements"], [594, "enhancements"], [596, "enhancements"], [597, "enhancements"], [598, "enhancements"], [599, "enhancements"]], "Example Datasets (pydicom.examples)": [[69, null]], "Examples": [[36, "examples"], [37, "examples"], [38, "examples"], [54, "examples"]], "Exceptions (pydicom.errors)": [[68, null]], "Extending the CLI": [[25, null], [26, "extending-the-cli"]], "File Meta Information": [[39, "file-meta-information"]], "FileSet": [[606, "fileset"]], "FileSet and staging": [[606, "fileset-and-staging"]], "Fixes": [[578, "fixes"], [578, "id3"], [578, "id7"], [578, "id10"], [578, "id11"], [578, "id14"], [578, "id16"], [578, "id17"], [578, "id19"], [578, "id24"], [578, "id27"], [578, "id29"], [578, "id30"], [587, "fixes"], [588, "fixes"], [589, "fixes"], [590, "fixes"], [591, "fixes"], [592, "fixes"], [593, "fixes"], [594, "fixes"], [595, "fixes"], [596, "fixes"], [597, "fixes"], [598, "fixes"], [599, "fixes"]], "Format the output of the data set printing": [[8, null]], "Frequently asked questions": [[23, null]], "Future-proofing your code": [[43, "future-proofing-your-code"]], "General": [[23, "general"]], "General examples": [[6, null]], "General style guidelines": [[53, "general-style-guidelines"]], "Getting Included Datasets (pydicom.data)": [[57, null]], "Getting Started": [[54, "getting-started"]], "Getting the path to the example dataset": [[604, "getting-the-path-to-the-example-dataset"]], "Glossary": [[39, null]], "Grayscale with 12-bit signed integers": [[610, "grayscale-with-12-bit-signed-integers"]], "Grayscale with 8-bit unsigned integers": [[610, "grayscale-with-8-bit-unsigned-integers"]], "Guidelines for reStructuredText": [[53, "guidelines-for-restructuredtext"]], "Guides": [[40, null]], "Handling of compressed pixel data": [[45, null]], "How do I cite pydicom?": [[23, "how-do-i-cite-pydicom"]], "How to install pydicom": [[608, null]], "IO Base Classes (pydicom.filebase)": [[71, null]], "IO Utilities (pydicom.fileutil)": [[73, null]], "Image Pixel Module": [[39, "image-pixel-module"]], "Image Pixel Options": [[29, "image-pixel-options"]], "Image Processing Options": [[29, "image-processing-options"]], "Image processing": [[1, null], [6, "image-processing"]], "Infrastructure": [[578, "infrastructure"], [587, "infrastructure"]], "Input-output": [[6, "input-output"], [7, null]], "Install pytest and run the test suite": [[602, "install-pytest-and-run-the-test-suite"]], "Install the development version": [[608, "install-the-development-version"]], "Install the official release": [[608, "install-the-official-release"]], "Install the optional libraries": [[608, "install-the-optional-libraries"]], "Install using conda": [[608, "install-using-conda"]], "Install using pip": [[608, "install-using-pip"]], "Installation": [[23, "installation"]], "Installing GDCM": [[608, "installing-gdcm"]], "Installing Pillow": [[608, "installing-pillow"]], "Installing pyjpegls": [[608, "installing-pyjpegls"]], "Installing pylibjpeg": [[608, "installing-pylibjpeg"]], "Installing the pydicom CLI": [[26, "installing-the-pydicom-cli"], [27, "installing-the-pydicom-cli"]], "Introduction": [[26, "introduction"], [27, null], [43, "introduction"], [47, "introduction"], [48, "introduction"], [49, "introduction"], [50, "introduction"], [51, "introduction"], [52, "introduction"], [612, "introduction"]], "Introduction to JSON support": [[605, null]], "JPEG 2000": [[36, "jpeg-2000"]], "JPEG 2000 Encoding": [[36, null]], "JPEG 2000 Lossless": [[36, "jpeg-2000-lossless"]], "JPEG-LS Encoding": [[37, null]], "JPEG-LS Lossless": [[37, "jpeg-ls-lossless"]], "JPEG-LS Near-lossless": [[37, "jpeg-ls-near-lossless"]], "Limiting the pydicom major version in your package": [[43, "limiting-the-pydicom-major-version-in-your-package"]], "Load CT slices and plot axial, sagittal and coronal images": [[4, null]], "Loading existing File-sets": [[606, "loading-existing-file-sets"]], "Major changes": [[578, "major-changes"], [578, "id32"], [578, "id35"], [578, "id38"], [578, "id42"], [578, "id46"], [579, "major-changes"], [580, "major-changes"], [583, "major-changes"], [584, "major-changes"], [585, "major-changes"], [587, "major-changes"]], "Major changes/additions in this version": [[578, "major-changes-additions-in-this-version"], [581, "major-changes-additions-in-this-version"]], "Major fixes in this release": [[578, "major-fixes-in-this-release"], [582, "major-fixes-in-this-release"]], "Make a change to the documentation": [[603, "make-a-change-to-the-documentation"]], "Make a code change and document it": [[602, "make-a-code-change-and-document-it"]], "Metadata processing": [[6, "metadata-processing"], [15, null]], "Minimizing memory usage": [[612, "minimizing-memory-usage"]], "Miscellaneous (pydicom.misc)": [[568, null]], "Miscellaneous Options": [[29, "miscellaneous-options"]], "Modality LUT or Rescale Operation": [[50, "modality-lut-or-rescale-operation"]], "Modifying": [[604, "modifying"]], "Modifying a File-set": [[606, "modifying-a-file-set"]], "Modifying elements": [[604, "modifying-elements"]], "Multi-frame RGB with 8-bit unsigned integers": [[610, "multi-frame-rgb-with-8-bit-unsigned-integers"]], "New \u2018Contrib\u2019 files": [[578, "new-contrib-files"], [582, "new-contrib-files"]], "Next steps": [[604, "next-steps"]], "Optional": [[23, "optional"]], "Other": [[578, "other"], [578, "id40"], [578, "id41"], [578, "id45"], [578, "id49"], [579, "other"], [580, "other"], [582, "other"], [583, "other"], [588, "other"]], "Other Contributors": [[578, "other-contributors"], [586, "other-contributors"]], "Other Enhancements": [[578, "id37"], [578, "id43"], [578, "id47"], [579, "other-enhancements"], [580, "other-enhancements"], [584, "other-enhancements"]], "Other changes and bug fixes": [[578, "other-changes-and-bug-fixes"], [581, "other-changes-and-bug-fixes"]], "Other enhancements": [[578, "other-enhancements"], [587, "other-enhancements"]], "Other fixes in this release": [[578, "other-fixes-in-this-release"], [582, "other-fixes-in-this-release"]], "Overlay Data Handling (pydicom.overlays)": [[569, null]], "Palette Color": [[50, "palette-color"]], "Parsing Encapsulated Data": [[67, "parsing-encapsulated-data"]], "Photometric Interpretation": [[36, "photometric-interpretation"], [37, "photometric-interpretation"]], "Pixel Data": [[611, null]], "Pixel Data (pydicom.pixels)": [[570, null]], "Pixel Data - Part 1: Introduction and accessing": [[612, null]], "Pixel Data - Part 2: Creation of pixel data": [[610, null]], "Pixel Data - Part 3: Compression and decompression": [[609, null]], "Pixel Data Decoder Options": [[29, null]], "Pixel Data Decoder Plugins": [[30, null]], "Pixel Data Decoders (pydicom.pixels.decoders)": [[571, null]], "Pixel Data Decoding": [[31, null]], "Pixel Data Encoder Plugins": [[34, null]], "Pixel Data Encoders (pydicom.pixels.encoders)": [[572, null]], "Pixel Data Encoding": [[35, null]], "Pixel Data Handlers (pydicom.pixel_data_handlers)": [[566, null]], "Pixel Data Processing (pydicom.pixels.processing)": [[573, null]], "Pixel Data Utilities (pydicom.pixels.utils)": [[574, null]], "Pixel Representation": [[37, "pixel-representation"]], "Planar Configuration": [[37, "planar-configuration"]], "Plugin Requirements": [[30, "plugin-requirements"], [34, "plugin-requirements"]], "Plugins": [[41, "plugins"], [41, "id5"]], "Plugins for Compression": [[41, "plugins-for-compression"]], "Plugins for Decompression": [[41, "plugins-for-decompression"]], "Plugins for Pixel Data Compression and Decompression": [[41, null]], "Prerequisites": [[45, "prerequisites"]], "Preview your changes": [[602, "preview-your-changes"]], "Private Data Dictionary": [[58, "private-data-dictionary"]], "Private Data Elements": [[47, null]], "Pydicom Internals": [[578, "pydicom-internals"], [578, "id4"], [598, "pydicom-internals"], [599, "pydicom-internals"]], "RLE Lossless": [[29, "rle-lossless"]], "RLE Lossless Encoding": [[38, null]], "Read RTPLAN DICOM and list information": [[11, null]], "Read a DICOM File-set": [[10, null]], "Read a Dataset and plot Pixel Data": [[9, null]], "Reading": [[604, "reading"]], "Release notes": [[578, null]], "Removals": [[578, "removals"], [599, "removals"]], "Removing All Private Data Elements": [[47, "removing-all-private-data-elements"]], "Removing instances": [[606, "removing-instances"]], "Representation of Data Elements": [[60, null]], "Representation of Datasets (pydicom.dataset)": [[59, null]], "Required": [[23, "required"]], "Sequence": [[42, "sequence"]], "Sequence Element Value Representation (pydicom.sequence)": [[63, null]], "Sequences": [[604, "sequences"], [604, "id1"]], "Setting Private Data Elements with pydicom": [[47, "setting-private-data-elements-with-pydicom"]], "Show a dicom file using hierarchical tree": [[0, null]], "Show working with memory-based dataset": [[14, null]], "Specialized Element Value Representation (pydicom.valuerep)": [[65, null]], "Standard elements": [[604, "standard-elements"]], "Storage SOP Class UIDs": [[576, "storage-sop-class-uids"]], "Structured Reporting": [[613, null]], "Sub-modules": [[570, "sub-modules"]], "Supported Transfer Syntaxes": [[44, "supported-transfer-syntaxes"], [45, "supported-transfer-syntaxes"]], "Tag": [[42, "tag"]], "The DICOM File-set": [[606, "the-dicom-file-set"]], "The DICOMDIR file": [[606, "the-dicomdir-file"]], "Transfer Syntax Lists": [[576, "transfer-syntax-lists"]], "Transfer Syntax UIDs": [[576, "transfer-syntax-uids"]], "Tutorials": [[607, null]], "Types of documentation": [[53, "types-of-documentation"]], "UID Definitions and Utilities (pydicom.uid)": [[576, null]], "UID Utilities": [[576, "uid-utilities"]], "Usage": [[45, "usage"], [69, "usage"], [575, "usage"]], "User Guide": [[54, "user-guide"]], "Using codify": [[52, "using-codify"]], "Using pydicom with matplotlib": [[48, "using-pydicom-with-matplotlib"]], "VOI LUT or Windowing Operation": [[50, "voi-lut-or-windowing-operation"]], "Valid Image Pixel Parameters": [[36, "valid-image-pixel-parameters"], [37, "valid-image-pixel-parameters"], [38, "valid-image-pixel-parameters"]], "Version 0.9.2": [[578, "version-0-9-2"], [579, null]], "Version 0.9.3": [[578, "version-0-9-3"], [580, null]], "Version 0.9.4": [[578, "version-0-9-4"], [581, null]], "Version 0.9.5": [[578, "version-0-9-5"], [582, null]], "Version 0.9.6": [[578, "version-0-9-6"], [583, null]], "Version 0.9.7": [[578, "version-0-9-7"], [584, null]], "Version 0.9.8": [[578, "version-0-9-8"], [585, null]], "Version 0.9.9": [[578, "version-0-9-9"], [586, null]], "Version 1.0.0": [[578, "version-1-0-0"], [587, null]], "Version 1.1.0": [[578, "version-1-1-0"], [588, null]], "Version 1.2.0": [[578, "version-1-2-0"], [589, null]], "Version 1.3.0": [[578, "version-1-3-0"], [590, null]], "Version 1.4.0": [[578, "version-1-4-0"], [591, null]], "Version 1.4.1": [[578, "version-1-4-1"], [592, null]], "Version 2.0.0": [[578, "version-2-0-0"], [593, null]], "Version 2.1.0": [[578, "version-2-1-0"], [594, null]], "Version 2.1.1": [[578, "version-2-1-1"], [595, null]], "Version 2.2.0": [[578, "version-2-2-0"], [596, null]], "Version 2.3.0": [[578, "version-2-3-0"], [597, null]], "Version 2.4.0": [[578, "version-2-4-0"], [598, null]], "Version 3.0.0": [[578, "version-3-0-0"], [599, null]], "Viewing Images": [[48, null]], "Viewing and accessing": [[604, "viewing-and-accessing"]], "Waveform Data Handlers (pydicom.waveforms)": [[577, null]], "Waveforms": [[614, null]], "Waveforms in DICOM": [[614, "waveforms-in-dicom"]], "What are pydicom\u2019s prerequisites?": [[23, "what-are-pydicom-s-prerequisites"]], "What happens next?": [[602, "what-happens-next"], [603, "what-happens-next"]], "What license does pydicom use?": [[23, "what-license-does-pydicom-use"]], "What version of Python can I use?": [[23, "what-version-of-python-can-i-use"]], "Working with Overlay Data": [[49, null]], "Working with Pixel Data": [[50, null]], "Working with Waveform Data": [[51, null]], "Working with large binary data": [[605, "working-with-large-binary-data"]], "Working with sequences": [[18, null]], "Write DICOM data": [[12, null]], "Write tests for your changes": [[602, "write-tests-for-your-changes"]], "Writing": [[604, "writing"]], "Writing DICOM Files": [[52, null]], "Writing a file from scratch": [[52, "writing-a-file-from-scratch"]], "Writing documentation": [[53, null]], "file_meta": [[604, "file-meta"]], "gdcm": [[33, "gdcm"], [41, "gdcm"]], "pillow": [[41, "pillow"]], "pydicom": [[33, "pydicom"], [41, "pydicom"], [41, "id12"]], "pydicom User Guide": [[46, null]], "pydicom codify command": [[24, null], [26, "pydicom-codify-command"]], "pydicom documentation": [[54, null]], "pydicom show command": [[26, "pydicom-show-command"], [28, null]], "pydicom.charset.convert_encodings": [[76, null]], "pydicom.charset.decode_bytes": [[77, null]], "pydicom.charset.decode_element": [[78, null]], "pydicom.charset.encode_string": [[79, null]], "pydicom.config.APPLY_J2K_CORRECTIONS": [[80, null]], "pydicom.config.DS_decimal": [[81, null]], "pydicom.config.DS_numpy": [[82, null]], "pydicom.config.IGNORE": [[83, null]], "pydicom.config.INVALID_KEYWORD_BEHAVIOR": [[84, null]], "pydicom.config.INVALID_KEY_BEHAVIOR": [[85, null]], "pydicom.config.RAISE": [[86, null]], "pydicom.config.WARN": [[87, null]], "pydicom.config.allow_DS_float": [[88, null]], "pydicom.config.assume_implicit_vr_switch": [[89, null]], "pydicom.config.convert_wrong_length_to_UN": [[90, null]], "pydicom.config.data_element_callback": [[91, null]], "pydicom.config.data_element_callback_kwargs": [[92, null]], "pydicom.config.datetime_conversion": [[93, null]], "pydicom.config.debug": [[94, null]], "pydicom.config.enforce_valid_values": [[95, null]], "pydicom.config.future_behavior": [[96, null]], "pydicom.config.pixel_data_handlers": [[97, null]], "pydicom.config.reset_data_element_callback": [[98, null]], "pydicom.config.settings": [[99, null]], "pydicom.config.show_file_meta": [[100, null]], "pydicom.config.use_DS_decimal": [[101, null]], "pydicom.config.use_DS_numpy": [[102, null]], "pydicom.config.use_IS_numpy": [[103, null]], "pydicom.data.get_charset_files": [[104, null]], "pydicom.data.get_palette_files": [[105, null]], "pydicom.data.get_testdata_file": [[106, null]], "pydicom.data.get_testdata_files": [[107, null]], "pydicom.datadict.add_dict_entries": [[108, null]], "pydicom.datadict.add_dict_entry": [[109, null]], "pydicom.datadict.add_private_dict_entries": [[110, null]], "pydicom.datadict.add_private_dict_entry": [[111, null]], "pydicom.datadict.dictionary_VM": [[112, null]], "pydicom.datadict.dictionary_VR": [[113, null]], "pydicom.datadict.dictionary_description": [[114, null]], "pydicom.datadict.dictionary_has_tag": [[115, null]], "pydicom.datadict.dictionary_is_retired": [[116, null]], "pydicom.datadict.dictionary_keyword": [[117, null]], "pydicom.datadict.get_entry": [[118, null]], "pydicom.datadict.get_private_entry": [[119, null]], "pydicom.datadict.keyword_for_tag": [[120, null]], "pydicom.datadict.mask_match": [[121, null]], "pydicom.datadict.private_dictionary_VM": [[122, null]], "pydicom.datadict.private_dictionary_VR": [[123, null]], "pydicom.datadict.private_dictionary_description": [[124, null]], "pydicom.datadict.repeater_has_keyword": [[125, null]], "pydicom.datadict.repeater_has_tag": [[126, null]], "pydicom.datadict.tag_for_keyword": [[127, null]], "pydicom.dataelem.DataElement": [[128, null]], "pydicom.dataelem.DataElement_from_raw": [[129, null]], "pydicom.dataelem.RawDataElement": [[130, null]], "pydicom.dataset.Dataset": [[131, null]], "pydicom.dataset.FileDataset": [[132, null]], "pydicom.dataset.FileMetaDataset": [[133, null]], "pydicom.dataset.PrivateBlock": [[134, null]], "pydicom.dataset.validate_file_meta": [[135, null]], "pydicom.encaps.decode_data_sequence": [[136, null]], "pydicom.encaps.defragment_data": [[137, null]], "pydicom.encaps.encapsulate": [[138, null]], "pydicom.encaps.encapsulate_buffer": [[139, null]], "pydicom.encaps.encapsulate_extended": [[140, null]], "pydicom.encaps.encapsulate_extended_buffer": [[141, null]], "pydicom.encaps.fragment_frame": [[142, null]], "pydicom.encaps.generate_fragmented_frames": [[143, null]], "pydicom.encaps.generate_fragments": [[144, null]], "pydicom.encaps.generate_frames": [[145, null]], "pydicom.encaps.generate_pixel_data": [[146, null]], "pydicom.encaps.generate_pixel_data_fragment": [[147, null]], "pydicom.encaps.generate_pixel_data_frame": [[148, null]], "pydicom.encaps.get_frame": [[149, null]], "pydicom.encaps.get_frame_offsets": [[150, null]], "pydicom.encaps.itemize_fragment": [[151, null]], "pydicom.encaps.itemize_frame": [[152, null]], "pydicom.encaps.parse_basic_offsets": [[153, null]], "pydicom.encaps.parse_fragments": [[154, null]], "pydicom.encaps.read_item": [[155, null]], "pydicom.errors.InvalidDicomError": [[156, null]], "pydicom.examples.get_path": [[157, null]], "pydicom.filebase.DicomBytesIO": [[158, null]], "pydicom.filebase.DicomFile": [[159, null]], "pydicom.filebase.DicomFileLike": [[160, null]], "pydicom.filebase.DicomIO": [[161, null]], "pydicom.filereader.data_element_generator": [[162, null]], "pydicom.filereader.data_element_offset_to_value": [[163, null]], "pydicom.filereader.dcmread": [[164, null]], "pydicom.filereader.read_dataset": [[165, null]], "pydicom.filereader.read_deferred_data_element": [[166, null]], "pydicom.filereader.read_file_meta_info": [[167, null]], "pydicom.filereader.read_partial": [[168, null]], "pydicom.filereader.read_preamble": [[169, null]], "pydicom.filereader.read_sequence": [[170, null]], "pydicom.filereader.read_sequence_item": [[171, null]], "pydicom.fileset.DIRECTORY_RECORDERS": [[172, null]], "pydicom.fileset.FileInstance": [[173, null]], "pydicom.fileset.FileSet": [[174, null]], "pydicom.fileset.RecordNode": [[175, null]], "pydicom.fileset.generate_filename": [[176, null]], "pydicom.fileset.is_conformant_file_id": [[177, null]], "pydicom.fileutil.absorb_delimiter_item": [[178, null]], "pydicom.fileutil.find_bytes": [[179, null]], "pydicom.fileutil.find_delimiter": [[180, null]], "pydicom.fileutil.length_of_undefined_length": [[181, null]], "pydicom.fileutil.read_undefined_length_value": [[182, null]], "pydicom.filewriter.correct_ambiguous_vr": [[183, null]], "pydicom.filewriter.correct_ambiguous_vr_element": [[184, null]], "pydicom.filewriter.dcmwrite": [[185, null]], "pydicom.filewriter.multi_string": [[186, null]], "pydicom.filewriter.write_ATvalue": [[187, null]], "pydicom.filewriter.write_DA": [[188, null]], "pydicom.filewriter.write_DT": [[189, null]], "pydicom.filewriter.write_OBvalue": [[190, null]], "pydicom.filewriter.write_OWvalue": [[191, null]], "pydicom.filewriter.write_PN": [[192, null]], "pydicom.filewriter.write_TM": [[193, null]], "pydicom.filewriter.write_UI": [[194, null]], "pydicom.filewriter.write_UN": [[195, null]], "pydicom.filewriter.write_data_element": [[196, null]], "pydicom.filewriter.write_dataset": [[197, null]], "pydicom.filewriter.write_file_meta_info": [[198, null]], "pydicom.filewriter.write_number_string": [[199, null]], "pydicom.filewriter.write_numbers": [[200, null]], "pydicom.filewriter.write_sequence": [[201, null]], "pydicom.filewriter.write_sequence_item": [[202, null]], "pydicom.filewriter.write_string": [[203, null]], "pydicom.filewriter.write_text": [[204, null]], "pydicom.misc.is_dicom": [[205, null]], "pydicom.misc.size_in_bytes": [[206, null]], "pydicom.multival.MultiValue": [[207, null]], "pydicom.overlays.numpy_handler": [[208, null]], "pydicom.pixel_data_handlers.gdcm_handler": [[209, null]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[210, null]], "pydicom.pixel_data_handlers.numpy_handler": [[211, null]], "pydicom.pixel_data_handlers.pillow_handler": [[212, null]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[213, null]], "pydicom.pixel_data_handlers.rle_handler": [[214, null]], "pydicom.pixels.apply_color_lut": [[215, null]], "pydicom.pixels.apply_icc_profile": [[216, null]], "pydicom.pixels.apply_modality_lut": [[217, null]], "pydicom.pixels.apply_presentation_lut": [[218, null]], "pydicom.pixels.apply_rescale": [[219, null]], "pydicom.pixels.apply_voi": [[220, null]], "pydicom.pixels.apply_voi_lut": [[221, null]], "pydicom.pixels.apply_windowing": [[222, null]], "pydicom.pixels.as_pixel_options": [[223, null]], "pydicom.pixels.compress": [[224, null]], "pydicom.pixels.convert_color_space": [[225, null]], "pydicom.pixels.create_icc_transform": [[226, null]], "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder": [[227, null]], "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder": [[228, null]], "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder": [[229, null]], "pydicom.pixels.decoders.HTJ2KDecoder": [[230, null]], "pydicom.pixels.decoders.HTJ2KLosslessDecoder": [[231, null]], "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder": [[232, null]], "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder": [[233, null]], "pydicom.pixels.decoders.JPEG2000Decoder": [[234, null]], "pydicom.pixels.decoders.JPEG2000LosslessDecoder": [[235, null]], "pydicom.pixels.decoders.JPEGBaseline8BitDecoder": [[236, null]], "pydicom.pixels.decoders.JPEGExtended12BitDecoder": [[237, null]], "pydicom.pixels.decoders.JPEGLSLosslessDecoder": [[238, null]], "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder": [[239, null]], "pydicom.pixels.decoders.JPEGLosslessDecoder": [[240, null]], "pydicom.pixels.decoders.JPEGLosslessSV1Decoder": [[241, null]], "pydicom.pixels.decoders.RLELosslessDecoder": [[242, null]], "pydicom.pixels.decoders.base.DecodeRunner": [[243, null]], "pydicom.pixels.decoders.base.Decoder": [[244, null]], "pydicom.pixels.decompress": [[245, null]], "pydicom.pixels.encoders.JPEG2000Encoder": [[246, null]], "pydicom.pixels.encoders.JPEG2000LosslessEncoder": [[247, null]], "pydicom.pixels.encoders.JPEGLSLosslessEncoder": [[248, null]], "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder": [[249, null]], "pydicom.pixels.encoders.RLELosslessEncoder": [[250, null]], "pydicom.pixels.encoders.base.EncodeRunner": [[251, null]], "pydicom.pixels.encoders.base.Encoder": [[252, null]], "pydicom.pixels.get_decoder": [[253, null]], "pydicom.pixels.get_encoder": [[254, null]], "pydicom.pixels.iter_pixels": [[255, null]], "pydicom.pixels.pack_bits": [[256, null]], "pydicom.pixels.pixel_array": [[257, null]], "pydicom.pixels.processing.apply_color_lut": [[258, null]], "pydicom.pixels.processing.apply_icc_profile": [[259, null]], "pydicom.pixels.processing.apply_modality_lut": [[260, null]], "pydicom.pixels.processing.apply_presentation_lut": [[261, null]], "pydicom.pixels.processing.apply_rescale": [[262, null]], "pydicom.pixels.processing.apply_voi": [[263, null]], "pydicom.pixels.processing.apply_voi_lut": [[264, null]], "pydicom.pixels.processing.apply_windowing": [[265, null]], "pydicom.pixels.processing.convert_color_space": [[266, null]], "pydicom.pixels.processing.create_icc_transform": [[267, null]], "pydicom.pixels.set_pixel_data": [[268, null]], "pydicom.pixels.unpack_bits": [[269, null]], "pydicom.pixels.utils.as_pixel_options": [[270, null]], "pydicom.pixels.utils.compress": [[271, null]], "pydicom.pixels.utils.decompress": [[272, null]], "pydicom.pixels.utils.expand_ybr422": [[273, null]], "pydicom.pixels.utils.get_expected_length": [[274, null]], "pydicom.pixels.utils.get_image_pixel_ids": [[275, null]], "pydicom.pixels.utils.get_j2k_parameters": [[276, null]], "pydicom.pixels.utils.get_nr_frames": [[277, null]], "pydicom.pixels.utils.iter_pixels": [[278, null]], "pydicom.pixels.utils.pack_bits": [[279, null]], "pydicom.pixels.utils.pixel_array": [[280, null]], "pydicom.pixels.utils.pixel_dtype": [[281, null]], "pydicom.pixels.utils.reshape_pixel_array": [[282, null]], "pydicom.pixels.utils.set_pixel_data": [[283, null]], "pydicom.pixels.utils.unpack_bits": [[284, null]], "pydicom.sequence.Sequence": [[285, null]], "pydicom.sr.Code": [[286, null]], "pydicom.sr.Collection": [[287, null]], "pydicom.sr.Concepts": [[288, null]], "pydicom.tag.BaseTag": [[289, null]], "pydicom.tag.Tag": [[290, null]], "pydicom.tag.TupleTag": [[291, null]], "pydicom.tag.tag_in_exception": [[292, null]], "pydicom.uid.AcquisitionContextSRStorage": [[293, null]], "pydicom.uid.AdvancedBlendingPresentationStateStorage": [[294, null]], "pydicom.uid.AllTransferSyntaxes": [[295, null]], "pydicom.uid.AmbulatoryECGWaveformStorage": [[296, null]], "pydicom.uid.ArterialPulseWaveformStorage": [[297, null]], "pydicom.uid.AutorefractionMeasurementsStorage": [[298, null]], "pydicom.uid.BasicStructuredDisplayStorage": [[299, null]], "pydicom.uid.BasicTextSRStorage": [[300, null]], "pydicom.uid.BasicVoiceAudioWaveformStorage": [[301, null]], "pydicom.uid.BlendingSoftcopyPresentationStateStorage": [[302, null]], "pydicom.uid.BodyPositionWaveformStorage": [[303, null]], "pydicom.uid.BreastProjectionXRayImageStorageForPresentation": [[304, null]], "pydicom.uid.BreastProjectionXRayImageStorageForProcessing": [[305, null]], "pydicom.uid.BreastTomosynthesisImageStorage": [[306, null]], "pydicom.uid.CArmPhotonElectronRadiationRecordStorage": [[307, null]], "pydicom.uid.CArmPhotonElectronRadiationStorage": [[308, null]], "pydicom.uid.CTDefinedProcedureProtocolStorage": [[309, null]], "pydicom.uid.CTImageStorage": [[310, null]], "pydicom.uid.CTPerformedProcedureProtocolStorage": [[311, null]], "pydicom.uid.CardiacElectrophysiologyWaveformStorage": [[312, null]], "pydicom.uid.ChestCADSRStorage": [[313, null]], "pydicom.uid.ColonCADSRStorage": [[314, null]], "pydicom.uid.ColorPaletteStorage": [[315, null]], "pydicom.uid.ColorSoftcopyPresentationStateStorage": [[316, null]], "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage": [[317, null]], "pydicom.uid.Comprehensive3DSRStorage": [[318, null]], "pydicom.uid.ComprehensiveSRStorage": [[319, null]], "pydicom.uid.ComputedRadiographyImageStorage": [[320, null]], "pydicom.uid.ConfocalMicroscopyImageStorage": [[321, null]], "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage": [[322, null]], "pydicom.uid.ContentAssessmentResultsStorage": [[323, null]], "pydicom.uid.CornealTopographyMapStorage": [[324, null]], "pydicom.uid.DICOS2DAITStorage": [[325, null]], "pydicom.uid.DICOS3DAITStorage": [[326, null]], "pydicom.uid.DICOSCTImageStorage": [[327, null]], "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation": [[328, null]], "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing": [[329, null]], "pydicom.uid.DICOSQuadrupoleResonanceStorage": [[330, null]], "pydicom.uid.DICOSThreatDetectionReportStorage": [[331, null]], "pydicom.uid.DeflatedExplicitVRLittleEndian": [[332, null]], "pydicom.uid.DeformableSpatialRegistrationStorage": [[333, null]], "pydicom.uid.DermoscopicPhotographyImageStorage": [[334, null]], "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation": [[335, null]], "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing": [[336, null]], "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation": [[337, null]], "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing": [[338, null]], "pydicom.uid.DigitalXRayImageStorageForPresentation": [[339, null]], "pydicom.uid.DigitalXRayImageStorageForProcessing": [[340, null]], "pydicom.uid.EddyCurrentImageStorage": [[341, null]], "pydicom.uid.EddyCurrentMultiFrameImageStorage": [[342, null]], "pydicom.uid.ElectromyogramWaveformStorage": [[343, null]], "pydicom.uid.ElectrooculogramWaveformStorage": [[344, null]], "pydicom.uid.EncapsulatedCDAStorage": [[345, null]], "pydicom.uid.EncapsulatedMTLStorage": [[346, null]], "pydicom.uid.EncapsulatedOBJStorage": [[347, null]], "pydicom.uid.EncapsulatedPDFStorage": [[348, null]], "pydicom.uid.EncapsulatedSTLStorage": [[349, null]], "pydicom.uid.EnhancedCTImageStorage": [[350, null]], "pydicom.uid.EnhancedContinuousRTImageStorage": [[351, null]], "pydicom.uid.EnhancedMRColorImageStorage": [[352, null]], "pydicom.uid.EnhancedMRImageStorage": [[353, null]], "pydicom.uid.EnhancedPETImageStorage": [[354, null]], "pydicom.uid.EnhancedRTImageStorage": [[355, null]], "pydicom.uid.EnhancedSRStorage": [[356, null]], "pydicom.uid.EnhancedUSVolumeStorage": [[357, null]], "pydicom.uid.EnhancedXAImageStorage": [[358, null]], "pydicom.uid.EnhancedXRFImageStorage": [[359, null]], "pydicom.uid.EnhancedXRayRadiationDoseSRStorage": [[360, null]], "pydicom.uid.ExplicitVRBigEndian": [[361, null]], "pydicom.uid.ExplicitVRLittleEndian": [[362, null]], "pydicom.uid.ExtensibleSRStorage": [[363, null]], "pydicom.uid.General32bitECGWaveformStorage": [[364, null]], "pydicom.uid.GeneralAudioWaveformStorage": [[365, null]], "pydicom.uid.GeneralECGWaveformStorage": [[366, null]], "pydicom.uid.GenericImplantTemplateStorage": [[367, null]], "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage": [[368, null]], "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage": [[369, null]], "pydicom.uid.HEVCM10P51": [[370, null]], "pydicom.uid.HEVCMP51": [[371, null]], "pydicom.uid.HTJ2K": [[372, null]], "pydicom.uid.HTJ2KLossless": [[373, null]], "pydicom.uid.HTJ2KLosslessRPCL": [[374, null]], "pydicom.uid.HangingProtocolStorage": [[375, null]], "pydicom.uid.HemodynamicWaveformStorage": [[376, null]], "pydicom.uid.ImplantAssemblyTemplateStorage": [[377, null]], "pydicom.uid.ImplantTemplateGroupStorage": [[378, null]], "pydicom.uid.ImplantationPlanSRStorage": [[379, null]], "pydicom.uid.ImplicitVRLittleEndian": [[380, null]], "pydicom.uid.IntraocularLensCalculationsStorage": [[381, null]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation": [[382, null]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing": [[383, null]], "pydicom.uid.InventoryStorage": [[384, null]], "pydicom.uid.JPEG2000": [[385, null]], "pydicom.uid.JPEG2000Lossless": [[386, null]], "pydicom.uid.JPEG2000MC": [[387, null]], "pydicom.uid.JPEG2000MCLossless": [[388, null]], "pydicom.uid.JPEG2000TransferSyntaxes": [[389, null]], "pydicom.uid.JPEGBaseline8Bit": [[390, null]], "pydicom.uid.JPEGExtended12Bit": [[391, null]], "pydicom.uid.JPEGLSLossless": [[392, null]], "pydicom.uid.JPEGLSNearLossless": [[393, null]], "pydicom.uid.JPEGLSTransferSyntaxes": [[394, null]], "pydicom.uid.JPEGLossless": [[395, null]], "pydicom.uid.JPEGLosslessSV1": [[396, null]], "pydicom.uid.JPEGTransferSyntaxes": [[397, null]], "pydicom.uid.JPIPHTJ2KReferenced": [[398, null]], "pydicom.uid.JPIPHTJ2KReferencedDeflate": [[399, null]], "pydicom.uid.KeratometryMeasurementsStorage": [[400, null]], "pydicom.uid.KeyObjectSelectionDocumentStorage": [[401, null]], "pydicom.uid.LegacyConvertedEnhancedCTImageStorage": [[402, null]], "pydicom.uid.LegacyConvertedEnhancedMRImageStorage": [[403, null]], "pydicom.uid.LegacyConvertedEnhancedPETImageStorage": [[404, null]], "pydicom.uid.LensometryMeasurementsStorage": [[405, null]], "pydicom.uid.MPEG2MPHL": [[406, null]], "pydicom.uid.MPEG2MPHLF": [[407, null]], "pydicom.uid.MPEG2MPML": [[408, null]], "pydicom.uid.MPEG2MPMLF": [[409, null]], "pydicom.uid.MPEG4HP41": [[410, null]], "pydicom.uid.MPEG4HP41BD": [[411, null]], "pydicom.uid.MPEG4HP41BDF": [[412, null]], "pydicom.uid.MPEG4HP41F": [[413, null]], "pydicom.uid.MPEG4HP422D": [[414, null]], "pydicom.uid.MPEG4HP422DF": [[415, null]], "pydicom.uid.MPEG4HP423D": [[416, null]], "pydicom.uid.MPEG4HP423DF": [[417, null]], "pydicom.uid.MPEG4HP42STEREO": [[418, null]], "pydicom.uid.MPEG4HP42STEREOF": [[419, null]], "pydicom.uid.MPEGTransferSyntaxes": [[420, null]], "pydicom.uid.MRImageStorage": [[421, null]], "pydicom.uid.MRSpectroscopyStorage": [[422, null]], "pydicom.uid.MacularGridThicknessAndVolumeReportStorage": [[423, null]], "pydicom.uid.MammographyCADSRStorage": [[424, null]], "pydicom.uid.MediaStorageDirectoryStorage": [[425, null]], "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage": [[426, null]], "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage": [[427, null]], "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage": [[428, null]], "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage": [[429, null]], "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage": [[430, null]], "pydicom.uid.MultichannelRespiratoryWaveformStorage": [[431, null]], "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage": [[432, null]], "pydicom.uid.NuclearMedicineImageStorage": [[433, null]], "pydicom.uid.OphthalmicAxialMeasurementsStorage": [[434, null]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage": [[435, null]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage": [[436, null]], "pydicom.uid.OphthalmicPhotography16BitImageStorage": [[437, null]], "pydicom.uid.OphthalmicPhotography8BitImageStorage": [[438, null]], "pydicom.uid.OphthalmicThicknessMapStorage": [[439, null]], "pydicom.uid.OphthalmicTomographyImageStorage": [[440, null]], "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage": [[441, null]], "pydicom.uid.PYDICOM_IMPLEMENTATION_UID": [[442, null]], "pydicom.uid.PYDICOM_ROOT_UID": [[443, null]], "pydicom.uid.ParametricMapStorage": [[444, null]], "pydicom.uid.PatientRadiationDoseSRStorage": [[445, null]], "pydicom.uid.PerformedImagingAgentAdministrationSRStorage": [[446, null]], "pydicom.uid.PhotoacousticImageStorage": [[447, null]], "pydicom.uid.PlannedImagingAgentAdministrationSRStorage": [[448, null]], "pydicom.uid.PositronEmissionTomographyImageStorage": [[449, null]], "pydicom.uid.PrivateTransferSyntaxes": [[450, null]], "pydicom.uid.ProcedureLogStorage": [[451, null]], "pydicom.uid.ProtocolApprovalStorage": [[452, null]], "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage": [[453, null]], "pydicom.uid.RE_VALID_UID": [[454, null]], "pydicom.uid.RE_VALID_UID_PREFIX": [[455, null]], "pydicom.uid.RLELossless": [[456, null]], "pydicom.uid.RLETransferSyntaxes": [[457, null]], "pydicom.uid.RTBeamsDeliveryInstructionStorage": [[458, null]], "pydicom.uid.RTBeamsTreatmentRecordStorage": [[459, null]], "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage": [[460, null]], "pydicom.uid.RTBrachyTreatmentRecordStorage": [[461, null]], "pydicom.uid.RTDoseStorage": [[462, null]], "pydicom.uid.RTImageStorage": [[463, null]], "pydicom.uid.RTIonBeamsTreatmentRecordStorage": [[464, null]], "pydicom.uid.RTIonPlanStorage": [[465, null]], "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage": [[466, null]], "pydicom.uid.RTPhysicianIntentStorage": [[467, null]], "pydicom.uid.RTPlanStorage": [[468, null]], "pydicom.uid.RTRadiationRecordSetStorage": [[469, null]], "pydicom.uid.RTRadiationSalvageRecordStorage": [[470, null]], "pydicom.uid.RTRadiationSetDeliveryInstructionStorage": [[471, null]], "pydicom.uid.RTRadiationSetStorage": [[472, null]], "pydicom.uid.RTSegmentAnnotationStorage": [[473, null]], "pydicom.uid.RTStructureSetStorage": [[474, null]], "pydicom.uid.RTTreatmentPreparationStorage": [[475, null]], "pydicom.uid.RTTreatmentSummaryRecordStorage": [[476, null]], "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage": [[477, null]], "pydicom.uid.RawDataStorage": [[478, null]], "pydicom.uid.RealWorldValueMappingStorage": [[479, null]], "pydicom.uid.RespiratoryWaveformStorage": [[480, null]], "pydicom.uid.RoboticArmRadiationStorage": [[481, null]], "pydicom.uid.RoboticRadiationRecordStorage": [[482, null]], "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage": [[483, null]], "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo": [[484, null]], "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo": [[485, null]], "pydicom.uid.SMPTEST211030PCMDigitalAudio": [[486, null]], "pydicom.uid.SecondaryCaptureImageStorage": [[487, null]], "pydicom.uid.SegmentationStorage": [[488, null]], "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage": [[489, null]], "pydicom.uid.SimplifiedAdultEchoSRStorage": [[490, null]], "pydicom.uid.SleepElectroencephalogramWaveformStorage": [[491, null]], "pydicom.uid.SpatialFiducialsStorage": [[492, null]], "pydicom.uid.SpatialRegistrationStorage": [[493, null]], "pydicom.uid.SpectaclePrescriptionReportStorage": [[494, null]], "pydicom.uid.StereometricRelationshipStorage": [[495, null]], "pydicom.uid.SubjectiveRefractionMeasurementsStorage": [[496, null]], "pydicom.uid.SurfaceScanMeshStorage": [[497, null]], "pydicom.uid.SurfaceScanPointCloudStorage": [[498, null]], "pydicom.uid.SurfaceSegmentationStorage": [[499, null]], "pydicom.uid.TomotherapeuticRadiationRecordStorage": [[500, null]], "pydicom.uid.TomotherapeuticRadiationStorage": [[501, null]], "pydicom.uid.TractographyResultsStorage": [[502, null]], "pydicom.uid.TwelveLeadECGWaveformStorage": [[503, null]], "pydicom.uid.UID": [[504, null]], "pydicom.uid.UltrasoundImageStorage": [[505, null]], "pydicom.uid.UltrasoundMultiFrameImageStorage": [[506, null]], "pydicom.uid.UncompressedTransferSyntaxes": [[507, null]], "pydicom.uid.VLEndoscopicImageStorage": [[508, null]], "pydicom.uid.VLMicroscopicImageStorage": [[509, null]], "pydicom.uid.VLPhotographicImageStorage": [[510, null]], "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage": [[511, null]], "pydicom.uid.VLWholeSlideMicroscopyImageStorage": [[512, null]], "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage": [[513, null]], "pydicom.uid.VideoEndoscopicImageStorage": [[514, null]], "pydicom.uid.VideoMicroscopicImageStorage": [[515, null]], "pydicom.uid.VideoPhotographicImageStorage": [[516, null]], "pydicom.uid.VisualAcuityMeasurementsStorage": [[517, null]], "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage": [[518, null]], "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage": [[519, null]], "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage": [[520, null]], "pydicom.uid.XADefinedProcedureProtocolStorage": [[521, null]], "pydicom.uid.XAPerformedProcedureProtocolStorage": [[522, null]], "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage": [[523, null]], "pydicom.uid.XRay3DAngiographicImageStorage": [[524, null]], "pydicom.uid.XRay3DCraniofacialImageStorage": [[525, null]], "pydicom.uid.XRayAngiographicImageStorage": [[526, null]], "pydicom.uid.XRayRadiationDoseSRStorage": [[527, null]], "pydicom.uid.XRayRadiofluoroscopicImageStorage": [[528, null]], "pydicom.uid.generate_uid": [[529, null]], "pydicom.uid.register_transfer_syntax": [[530, null]], "pydicom.valuerep.DA": [[531, null]], "pydicom.valuerep.DS": [[532, null]], "pydicom.valuerep.DSdecimal": [[533, null]], "pydicom.valuerep.DSfloat": [[534, null]], "pydicom.valuerep.DT": [[535, null]], "pydicom.valuerep.IS": [[536, null]], "pydicom.valuerep.ISfloat": [[537, null]], "pydicom.valuerep.PersonName": [[538, null]], "pydicom.valuerep.TM": [[539, null]], "pydicom.valuerep.VR": [[540, null]], "pydicom.valuerep.format_number_as_ds": [[541, null]], "pydicom.valuerep.is_valid_ds": [[542, null]], "pydicom.values.convert_AE_string": [[543, null]], "pydicom.values.convert_ATvalue": [[544, null]], "pydicom.values.convert_DA_string": [[545, null]], "pydicom.values.convert_DS_string": [[546, null]], "pydicom.values.convert_DT_string": [[547, null]], "pydicom.values.convert_IS_string": [[548, null]], "pydicom.values.convert_OBvalue": [[549, null]], "pydicom.values.convert_OWvalue": [[550, null]], "pydicom.values.convert_PN": [[551, null]], "pydicom.values.convert_SQ": [[552, null]], "pydicom.values.convert_TM_string": [[553, null]], "pydicom.values.convert_UI": [[554, null]], "pydicom.values.convert_UN": [[555, null]], "pydicom.values.convert_UR_string": [[556, null]], "pydicom.values.convert_numbers": [[557, null]], "pydicom.values.convert_single_string": [[558, null]], "pydicom.values.convert_string": [[559, null]], "pydicom.values.convert_tag": [[560, null]], "pydicom.values.convert_text": [[561, null]], "pydicom.values.convert_value": [[562, null]], "pydicom.values.multi_string": [[563, null]], "pydicom.waveforms.numpy_handler": [[564, null]], "pyjpegls": [[33, "pyjpegls"], [41, "pyjpegls"], [41, "id6"]], "pylibjpeg": [[33, "pylibjpeg"], [36, "pylibjpeg"], [41, "pylibjpeg"], [41, "id8"]]}, "docnames": ["auto_examples/dicomtree", "auto_examples/image_processing/index", "auto_examples/image_processing/plot_downsize_image", "auto_examples/image_processing/plot_waveforms", "auto_examples/image_processing/reslice", "auto_examples/image_processing/sg_execution_times", "auto_examples/index", "auto_examples/input_output/index", "auto_examples/input_output/plot_printing_dataset", "auto_examples/input_output/plot_read_dicom", "auto_examples/input_output/plot_read_fileset", "auto_examples/input_output/plot_read_rtplan", "auto_examples/input_output/plot_write_dicom", "auto_examples/input_output/sg_execution_times", "auto_examples/memory_dataset", "auto_examples/metadata_processing/index", "auto_examples/metadata_processing/plot_add_dict_entries", "auto_examples/metadata_processing/plot_anonymize", "auto_examples/metadata_processing/plot_sequences", "auto_examples/metadata_processing/sg_execution_times", "auto_examples/plot_dicom_difference", "auto_examples/sg_execution_times", "auto_examples/show_charset_name", "faq/index", "guides/cli/cli_codify", "guides/cli/cli_dev", "guides/cli/cli_guide", "guides/cli/cli_intro", "guides/cli/cli_show", "guides/decoding/decoder_options", "guides/decoding/decoder_plugins", "guides/decoding/index", "guides/element_value_types", "guides/encoding/encoder_plugin_options", "guides/encoding/encoder_plugins", "guides/encoding/index", "guides/encoding/jpeg_2k", "guides/encoding/jpeg_ls", "guides/encoding/rle_lossless", "guides/glossary", "guides/index", "guides/plugin_table", "guides/user/base_element", "guides/user/best_practices", "guides/user/image_data_compression", "guides/user/image_data_handlers", "guides/user/index", "guides/user/private_data_elements", "guides/user/viewing_images", "guides/user/working_with_overlays", "guides/user/working_with_pixel_data", "guides/user/working_with_waveforms", "guides/user/writing_files", "guides/writing_documentation", "index", "reference/charset", "reference/config", "reference/data", "reference/datadict", "reference/dataset", "reference/elem", "reference/elem.dataelem", "reference/elem.multival", "reference/elem.sequence", "reference/elem.tag", "reference/elem.valuerep", "reference/elem.values", "reference/encaps", "reference/errors", "reference/examples", "reference/fileio", "reference/fileio.base", "reference/fileio.read", "reference/fileio.util", "reference/fileio.write", "reference/fileset", "reference/generated/pydicom.charset.convert_encodings", "reference/generated/pydicom.charset.decode_bytes", "reference/generated/pydicom.charset.decode_element", "reference/generated/pydicom.charset.encode_string", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS", "reference/generated/pydicom.config.DS_decimal", "reference/generated/pydicom.config.DS_numpy", "reference/generated/pydicom.config.IGNORE", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR", "reference/generated/pydicom.config.RAISE", "reference/generated/pydicom.config.WARN", "reference/generated/pydicom.config.allow_DS_float", "reference/generated/pydicom.config.assume_implicit_vr_switch", "reference/generated/pydicom.config.convert_wrong_length_to_UN", "reference/generated/pydicom.config.data_element_callback", "reference/generated/pydicom.config.data_element_callback_kwargs", "reference/generated/pydicom.config.datetime_conversion", "reference/generated/pydicom.config.debug", "reference/generated/pydicom.config.enforce_valid_values", "reference/generated/pydicom.config.future_behavior", "reference/generated/pydicom.config.pixel_data_handlers", "reference/generated/pydicom.config.reset_data_element_callback", "reference/generated/pydicom.config.settings", "reference/generated/pydicom.config.show_file_meta", "reference/generated/pydicom.config.use_DS_decimal", "reference/generated/pydicom.config.use_DS_numpy", "reference/generated/pydicom.config.use_IS_numpy", "reference/generated/pydicom.data.get_charset_files", "reference/generated/pydicom.data.get_palette_files", "reference/generated/pydicom.data.get_testdata_file", "reference/generated/pydicom.data.get_testdata_files", "reference/generated/pydicom.datadict.add_dict_entries", "reference/generated/pydicom.datadict.add_dict_entry", "reference/generated/pydicom.datadict.add_private_dict_entries", "reference/generated/pydicom.datadict.add_private_dict_entry", "reference/generated/pydicom.datadict.dictionary_VM", "reference/generated/pydicom.datadict.dictionary_VR", "reference/generated/pydicom.datadict.dictionary_description", "reference/generated/pydicom.datadict.dictionary_has_tag", "reference/generated/pydicom.datadict.dictionary_is_retired", "reference/generated/pydicom.datadict.dictionary_keyword", "reference/generated/pydicom.datadict.get_entry", "reference/generated/pydicom.datadict.get_private_entry", "reference/generated/pydicom.datadict.keyword_for_tag", "reference/generated/pydicom.datadict.mask_match", "reference/generated/pydicom.datadict.private_dictionary_VM", "reference/generated/pydicom.datadict.private_dictionary_VR", "reference/generated/pydicom.datadict.private_dictionary_description", "reference/generated/pydicom.datadict.repeater_has_keyword", "reference/generated/pydicom.datadict.repeater_has_tag", "reference/generated/pydicom.datadict.tag_for_keyword", "reference/generated/pydicom.dataelem.DataElement", "reference/generated/pydicom.dataelem.DataElement_from_raw", "reference/generated/pydicom.dataelem.RawDataElement", "reference/generated/pydicom.dataset.Dataset", "reference/generated/pydicom.dataset.FileDataset", "reference/generated/pydicom.dataset.FileMetaDataset", "reference/generated/pydicom.dataset.PrivateBlock", "reference/generated/pydicom.dataset.validate_file_meta", "reference/generated/pydicom.encaps.decode_data_sequence", "reference/generated/pydicom.encaps.defragment_data", "reference/generated/pydicom.encaps.encapsulate", "reference/generated/pydicom.encaps.encapsulate_buffer", "reference/generated/pydicom.encaps.encapsulate_extended", "reference/generated/pydicom.encaps.encapsulate_extended_buffer", "reference/generated/pydicom.encaps.fragment_frame", "reference/generated/pydicom.encaps.generate_fragmented_frames", "reference/generated/pydicom.encaps.generate_fragments", "reference/generated/pydicom.encaps.generate_frames", "reference/generated/pydicom.encaps.generate_pixel_data", "reference/generated/pydicom.encaps.generate_pixel_data_fragment", "reference/generated/pydicom.encaps.generate_pixel_data_frame", "reference/generated/pydicom.encaps.get_frame", "reference/generated/pydicom.encaps.get_frame_offsets", "reference/generated/pydicom.encaps.itemize_fragment", "reference/generated/pydicom.encaps.itemize_frame", "reference/generated/pydicom.encaps.parse_basic_offsets", "reference/generated/pydicom.encaps.parse_fragments", "reference/generated/pydicom.encaps.read_item", "reference/generated/pydicom.errors.InvalidDicomError", "reference/generated/pydicom.examples.get_path", "reference/generated/pydicom.filebase.DicomBytesIO", "reference/generated/pydicom.filebase.DicomFile", "reference/generated/pydicom.filebase.DicomFileLike", "reference/generated/pydicom.filebase.DicomIO", "reference/generated/pydicom.filereader.data_element_generator", "reference/generated/pydicom.filereader.data_element_offset_to_value", "reference/generated/pydicom.filereader.dcmread", "reference/generated/pydicom.filereader.read_dataset", "reference/generated/pydicom.filereader.read_deferred_data_element", "reference/generated/pydicom.filereader.read_file_meta_info", "reference/generated/pydicom.filereader.read_partial", "reference/generated/pydicom.filereader.read_preamble", "reference/generated/pydicom.filereader.read_sequence", "reference/generated/pydicom.filereader.read_sequence_item", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS", "reference/generated/pydicom.fileset.FileInstance", "reference/generated/pydicom.fileset.FileSet", "reference/generated/pydicom.fileset.RecordNode", "reference/generated/pydicom.fileset.generate_filename", "reference/generated/pydicom.fileset.is_conformant_file_id", "reference/generated/pydicom.fileutil.absorb_delimiter_item", "reference/generated/pydicom.fileutil.find_bytes", "reference/generated/pydicom.fileutil.find_delimiter", "reference/generated/pydicom.fileutil.length_of_undefined_length", "reference/generated/pydicom.fileutil.read_undefined_length_value", "reference/generated/pydicom.filewriter.correct_ambiguous_vr", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element", "reference/generated/pydicom.filewriter.dcmwrite", "reference/generated/pydicom.filewriter.multi_string", "reference/generated/pydicom.filewriter.write_ATvalue", "reference/generated/pydicom.filewriter.write_DA", "reference/generated/pydicom.filewriter.write_DT", "reference/generated/pydicom.filewriter.write_OBvalue", "reference/generated/pydicom.filewriter.write_OWvalue", "reference/generated/pydicom.filewriter.write_PN", "reference/generated/pydicom.filewriter.write_TM", "reference/generated/pydicom.filewriter.write_UI", "reference/generated/pydicom.filewriter.write_UN", "reference/generated/pydicom.filewriter.write_data_element", "reference/generated/pydicom.filewriter.write_dataset", "reference/generated/pydicom.filewriter.write_file_meta_info", "reference/generated/pydicom.filewriter.write_number_string", "reference/generated/pydicom.filewriter.write_numbers", "reference/generated/pydicom.filewriter.write_sequence", "reference/generated/pydicom.filewriter.write_sequence_item", "reference/generated/pydicom.filewriter.write_string", "reference/generated/pydicom.filewriter.write_text", "reference/generated/pydicom.misc.is_dicom", "reference/generated/pydicom.misc.size_in_bytes", "reference/generated/pydicom.multival.MultiValue", "reference/generated/pydicom.overlays.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler", "reference/generated/pydicom.pixel_data_handlers.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.pillow_handler", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler", "reference/generated/pydicom.pixel_data_handlers.rle_handler", "reference/generated/pydicom.pixels.apply_color_lut", "reference/generated/pydicom.pixels.apply_icc_profile", "reference/generated/pydicom.pixels.apply_modality_lut", "reference/generated/pydicom.pixels.apply_presentation_lut", "reference/generated/pydicom.pixels.apply_rescale", "reference/generated/pydicom.pixels.apply_voi", "reference/generated/pydicom.pixels.apply_voi_lut", "reference/generated/pydicom.pixels.apply_windowing", "reference/generated/pydicom.pixels.as_pixel_options", "reference/generated/pydicom.pixels.compress", "reference/generated/pydicom.pixels.convert_color_space", "reference/generated/pydicom.pixels.create_icc_transform", "reference/generated/pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", "reference/generated/pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessDecoder", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", "reference/generated/pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.JPEG2000Decoder", "reference/generated/pydicom.pixels.decoders.JPEG2000LosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGBaseline8BitDecoder", "reference/generated/pydicom.pixels.decoders.JPEGExtended12BitDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLSLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLosslessDecoder", "reference/generated/pydicom.pixels.decoders.JPEGLosslessSV1Decoder", "reference/generated/pydicom.pixels.decoders.RLELosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner", "reference/generated/pydicom.pixels.decoders.base.Decoder", "reference/generated/pydicom.pixels.decompress", "reference/generated/pydicom.pixels.encoders.JPEG2000Encoder", "reference/generated/pydicom.pixels.encoders.JPEG2000LosslessEncoder", "reference/generated/pydicom.pixels.encoders.JPEGLSLosslessEncoder", "reference/generated/pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", "reference/generated/pydicom.pixels.encoders.RLELosslessEncoder", "reference/generated/pydicom.pixels.encoders.base.EncodeRunner", "reference/generated/pydicom.pixels.encoders.base.Encoder", "reference/generated/pydicom.pixels.get_decoder", "reference/generated/pydicom.pixels.get_encoder", "reference/generated/pydicom.pixels.iter_pixels", "reference/generated/pydicom.pixels.pack_bits", "reference/generated/pydicom.pixels.pixel_array", "reference/generated/pydicom.pixels.processing.apply_color_lut", "reference/generated/pydicom.pixels.processing.apply_icc_profile", "reference/generated/pydicom.pixels.processing.apply_modality_lut", "reference/generated/pydicom.pixels.processing.apply_presentation_lut", "reference/generated/pydicom.pixels.processing.apply_rescale", "reference/generated/pydicom.pixels.processing.apply_voi", "reference/generated/pydicom.pixels.processing.apply_voi_lut", "reference/generated/pydicom.pixels.processing.apply_windowing", "reference/generated/pydicom.pixels.processing.convert_color_space", "reference/generated/pydicom.pixels.processing.create_icc_transform", "reference/generated/pydicom.pixels.set_pixel_data", "reference/generated/pydicom.pixels.unpack_bits", "reference/generated/pydicom.pixels.utils.as_pixel_options", "reference/generated/pydicom.pixels.utils.compress", "reference/generated/pydicom.pixels.utils.decompress", "reference/generated/pydicom.pixels.utils.expand_ybr422", "reference/generated/pydicom.pixels.utils.get_expected_length", "reference/generated/pydicom.pixels.utils.get_image_pixel_ids", "reference/generated/pydicom.pixels.utils.get_j2k_parameters", "reference/generated/pydicom.pixels.utils.get_nr_frames", "reference/generated/pydicom.pixels.utils.iter_pixels", "reference/generated/pydicom.pixels.utils.pack_bits", "reference/generated/pydicom.pixels.utils.pixel_array", "reference/generated/pydicom.pixels.utils.pixel_dtype", "reference/generated/pydicom.pixels.utils.reshape_pixel_array", "reference/generated/pydicom.pixels.utils.set_pixel_data", "reference/generated/pydicom.pixels.utils.unpack_bits", "reference/generated/pydicom.sequence.Sequence", "reference/generated/pydicom.sr.Code", "reference/generated/pydicom.sr.Collection", "reference/generated/pydicom.sr.Concepts", "reference/generated/pydicom.tag.BaseTag", "reference/generated/pydicom.tag.Tag", "reference/generated/pydicom.tag.TupleTag", "reference/generated/pydicom.tag.tag_in_exception", "reference/generated/pydicom.uid.AcquisitionContextSRStorage", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage", "reference/generated/pydicom.uid.AllTransferSyntaxes", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage", "reference/generated/pydicom.uid.BasicTextSRStorage", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.BodyPositionWaveformStorage", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.CTImageStorage", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage", "reference/generated/pydicom.uid.ChestCADSRStorage", "reference/generated/pydicom.uid.ColonCADSRStorage", "reference/generated/pydicom.uid.ColorPaletteStorage", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.Comprehensive3DSRStorage", "reference/generated/pydicom.uid.ComprehensiveSRStorage", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage", "reference/generated/pydicom.uid.CornealTopographyMapStorage", "reference/generated/pydicom.uid.DICOS2DAITStorage", "reference/generated/pydicom.uid.DICOS3DAITStorage", "reference/generated/pydicom.uid.DICOSCTImageStorage", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.EddyCurrentImageStorage", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage", "reference/generated/pydicom.uid.EncapsulatedCDAStorage", "reference/generated/pydicom.uid.EncapsulatedMTLStorage", "reference/generated/pydicom.uid.EncapsulatedOBJStorage", "reference/generated/pydicom.uid.EncapsulatedPDFStorage", "reference/generated/pydicom.uid.EncapsulatedSTLStorage", "reference/generated/pydicom.uid.EnhancedCTImageStorage", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage", "reference/generated/pydicom.uid.EnhancedMRImageStorage", "reference/generated/pydicom.uid.EnhancedPETImageStorage", "reference/generated/pydicom.uid.EnhancedRTImageStorage", "reference/generated/pydicom.uid.EnhancedSRStorage", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage", "reference/generated/pydicom.uid.EnhancedXAImageStorage", "reference/generated/pydicom.uid.EnhancedXRFImageStorage", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.ExplicitVRBigEndian", "reference/generated/pydicom.uid.ExplicitVRLittleEndian", "reference/generated/pydicom.uid.ExtensibleSRStorage", "reference/generated/pydicom.uid.General32bitECGWaveformStorage", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage", "reference/generated/pydicom.uid.GeneralECGWaveformStorage", "reference/generated/pydicom.uid.GenericImplantTemplateStorage", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.HEVCM10P51", "reference/generated/pydicom.uid.HEVCMP51", "reference/generated/pydicom.uid.HTJ2K", "reference/generated/pydicom.uid.HTJ2KLossless", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL", "reference/generated/pydicom.uid.HangingProtocolStorage", "reference/generated/pydicom.uid.HemodynamicWaveformStorage", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage", "reference/generated/pydicom.uid.ImplantationPlanSRStorage", "reference/generated/pydicom.uid.ImplicitVRLittleEndian", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pydicom.uid.InventoryStorage", "reference/generated/pydicom.uid.JPEG2000", "reference/generated/pydicom.uid.JPEG2000Lossless", "reference/generated/pydicom.uid.JPEG2000MC", "reference/generated/pydicom.uid.JPEG2000MCLossless", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes", "reference/generated/pydicom.uid.JPEGBaseline8Bit", "reference/generated/pydicom.uid.JPEGExtended12Bit", "reference/generated/pydicom.uid.JPEGLSLossless", "reference/generated/pydicom.uid.JPEGLSNearLossless", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes", "reference/generated/pydicom.uid.JPEGLossless", "reference/generated/pydicom.uid.JPEGLosslessSV1", "reference/generated/pydicom.uid.JPEGTransferSyntaxes", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pydicom.uid.LensometryMeasurementsStorage", "reference/generated/pydicom.uid.MPEG2MPHL", "reference/generated/pydicom.uid.MPEG2MPHLF", "reference/generated/pydicom.uid.MPEG2MPML", "reference/generated/pydicom.uid.MPEG2MPMLF", "reference/generated/pydicom.uid.MPEG4HP41", "reference/generated/pydicom.uid.MPEG4HP41BD", "reference/generated/pydicom.uid.MPEG4HP41BDF", "reference/generated/pydicom.uid.MPEG4HP41F", "reference/generated/pydicom.uid.MPEG4HP422D", "reference/generated/pydicom.uid.MPEG4HP422DF", "reference/generated/pydicom.uid.MPEG4HP423D", "reference/generated/pydicom.uid.MPEG4HP423DF", "reference/generated/pydicom.uid.MPEG4HP42STEREO", "reference/generated/pydicom.uid.MPEG4HP42STEREOF", "reference/generated/pydicom.uid.MPEGTransferSyntaxes", "reference/generated/pydicom.uid.MRImageStorage", "reference/generated/pydicom.uid.MRSpectroscopyStorage", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pydicom.uid.MammographyCADSRStorage", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.NuclearMedicineImageStorage", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID", "reference/generated/pydicom.uid.ParametricMapStorage", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PhotoacousticImageStorage", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage", "reference/generated/pydicom.uid.PrivateTransferSyntaxes", "reference/generated/pydicom.uid.ProcedureLogStorage", "reference/generated/pydicom.uid.ProtocolApprovalStorage", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.RE_VALID_UID", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX", "reference/generated/pydicom.uid.RLELossless", "reference/generated/pydicom.uid.RLETransferSyntaxes", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage", "reference/generated/pydicom.uid.RTDoseStorage", "reference/generated/pydicom.uid.RTImageStorage", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTIonPlanStorage", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "reference/generated/pydicom.uid.RTPhysicianIntentStorage", "reference/generated/pydicom.uid.RTPlanStorage", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTRadiationSetStorage", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage", "reference/generated/pydicom.uid.RTStructureSetStorage", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pydicom.uid.RawDataStorage", "reference/generated/pydicom.uid.RealWorldValueMappingStorage", "reference/generated/pydicom.uid.RespiratoryWaveformStorage", "reference/generated/pydicom.uid.RoboticArmRadiationStorage", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage", "reference/generated/pydicom.uid.SegmentationStorage", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SpatialFiducialsStorage", "reference/generated/pydicom.uid.SpatialRegistrationStorage", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage", "reference/generated/pydicom.uid.StereometricRelationshipStorage", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage", "reference/generated/pydicom.uid.SurfaceScanMeshStorage", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage", "reference/generated/pydicom.uid.SurfaceSegmentationStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage", "reference/generated/pydicom.uid.TractographyResultsStorage", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage", "reference/generated/pydicom.uid.UID", "reference/generated/pydicom.uid.UltrasoundImageStorage", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes", "reference/generated/pydicom.uid.VLEndoscopicImageStorage", "reference/generated/pydicom.uid.VLMicroscopicImageStorage", "reference/generated/pydicom.uid.VLPhotographicImageStorage", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage", "reference/generated/pydicom.uid.VideoPhotographicImageStorage", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage", "reference/generated/pydicom.uid.XRayAngiographicImageStorage", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage", "reference/generated/pydicom.uid.generate_uid", "reference/generated/pydicom.uid.register_transfer_syntax", "reference/generated/pydicom.valuerep.DA", "reference/generated/pydicom.valuerep.DS", "reference/generated/pydicom.valuerep.DSdecimal", "reference/generated/pydicom.valuerep.DSfloat", "reference/generated/pydicom.valuerep.DT", "reference/generated/pydicom.valuerep.IS", "reference/generated/pydicom.valuerep.ISfloat", "reference/generated/pydicom.valuerep.PersonName", "reference/generated/pydicom.valuerep.TM", "reference/generated/pydicom.valuerep.VR", "reference/generated/pydicom.valuerep.format_number_as_ds", "reference/generated/pydicom.valuerep.is_valid_ds", "reference/generated/pydicom.values.convert_AE_string", "reference/generated/pydicom.values.convert_ATvalue", "reference/generated/pydicom.values.convert_DA_string", "reference/generated/pydicom.values.convert_DS_string", "reference/generated/pydicom.values.convert_DT_string", "reference/generated/pydicom.values.convert_IS_string", "reference/generated/pydicom.values.convert_OBvalue", "reference/generated/pydicom.values.convert_OWvalue", "reference/generated/pydicom.values.convert_PN", "reference/generated/pydicom.values.convert_SQ", "reference/generated/pydicom.values.convert_TM_string", "reference/generated/pydicom.values.convert_UI", "reference/generated/pydicom.values.convert_UN", "reference/generated/pydicom.values.convert_UR_string", "reference/generated/pydicom.values.convert_numbers", "reference/generated/pydicom.values.convert_single_string", "reference/generated/pydicom.values.convert_string", "reference/generated/pydicom.values.convert_tag", "reference/generated/pydicom.values.convert_text", "reference/generated/pydicom.values.convert_value", "reference/generated/pydicom.values.multi_string", "reference/generated/pydicom.waveforms.numpy_handler", "reference/handlers", "reference/handlers.pixel_data", "reference/index", "reference/misc", "reference/overlays", "reference/pixels", "reference/pixels.decoders", "reference/pixels.encoders", "reference/pixels.processing", "reference/pixels.utils", "reference/sr", "reference/uid", "reference/waveforms", "release_notes/index", "release_notes/v0.9.2", "release_notes/v0.9.3", "release_notes/v0.9.4", "release_notes/v0.9.5", "release_notes/v0.9.6", "release_notes/v0.9.7", "release_notes/v0.9.8", "release_notes/v0.9.9", "release_notes/v1.0.0", "release_notes/v1.1.0", "release_notes/v1.2.0", "release_notes/v1.3.0", "release_notes/v1.4.0", "release_notes/v1.4.1", "release_notes/v2.0.0", "release_notes/v2.1.0", "release_notes/v2.1.1", "release_notes/v2.2.0", "release_notes/v2.3.0", "release_notes/v2.4.0", "release_notes/v3.0.0", "sg_execution_times", "tutorials/contributing", "tutorials/contributing_code", "tutorials/contributing_docs", "tutorials/dataset_basics", "tutorials/dicom_json", "tutorials/filesets", "tutorials/index", "tutorials/installation", "tutorials/pixel_data/compressing", "tutorials/pixel_data/creation", "tutorials/pixel_data/index", "tutorials/pixel_data/introduction", "tutorials/sr_basics", "tutorials/waveforms"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["auto_examples/dicomtree.rst", "auto_examples/image_processing/index.rst", "auto_examples/image_processing/plot_downsize_image.rst", "auto_examples/image_processing/plot_waveforms.rst", "auto_examples/image_processing/reslice.rst", "auto_examples/image_processing/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/input_output/index.rst", "auto_examples/input_output/plot_printing_dataset.rst", "auto_examples/input_output/plot_read_dicom.rst", "auto_examples/input_output/plot_read_fileset.rst", "auto_examples/input_output/plot_read_rtplan.rst", "auto_examples/input_output/plot_write_dicom.rst", "auto_examples/input_output/sg_execution_times.rst", "auto_examples/memory_dataset.rst", "auto_examples/metadata_processing/index.rst", "auto_examples/metadata_processing/plot_add_dict_entries.rst", "auto_examples/metadata_processing/plot_anonymize.rst", "auto_examples/metadata_processing/plot_sequences.rst", "auto_examples/metadata_processing/sg_execution_times.rst", "auto_examples/plot_dicom_difference.rst", "auto_examples/sg_execution_times.rst", "auto_examples/show_charset_name.rst", "faq/index.rst", "guides/cli/cli_codify.rst", "guides/cli/cli_dev.rst", "guides/cli/cli_guide.rst", "guides/cli/cli_intro.rst", "guides/cli/cli_show.rst", "guides/decoding/decoder_options.rst", "guides/decoding/decoder_plugins.rst", "guides/decoding/index.rst", "guides/element_value_types.rst", "guides/encoding/encoder_plugin_options.rst", "guides/encoding/encoder_plugins.rst", "guides/encoding/index.rst", "guides/encoding/jpeg_2k.rst", "guides/encoding/jpeg_ls.rst", "guides/encoding/rle_lossless.rst", "guides/glossary.rst", "guides/index.rst", "guides/plugin_table.rst", "guides/user/base_element.rst", "guides/user/best_practices.rst", "guides/user/image_data_compression.rst", "guides/user/image_data_handlers.rst", "guides/user/index.rst", "guides/user/private_data_elements.rst", "guides/user/viewing_images.rst", "guides/user/working_with_overlays.rst", "guides/user/working_with_pixel_data.rst", "guides/user/working_with_waveforms.rst", "guides/user/writing_files.rst", "guides/writing_documentation.rst", "index.rst", "reference/charset.rst", "reference/config.rst", "reference/data.rst", "reference/datadict.rst", "reference/dataset.rst", "reference/elem.rst", "reference/elem.dataelem.rst", "reference/elem.multival.rst", "reference/elem.sequence.rst", "reference/elem.tag.rst", "reference/elem.valuerep.rst", "reference/elem.values.rst", "reference/encaps.rst", "reference/errors.rst", "reference/examples.rst", "reference/fileio.rst", "reference/fileio.base.rst", "reference/fileio.read.rst", "reference/fileio.util.rst", "reference/fileio.write.rst", "reference/fileset.rst", "reference/generated/pydicom.charset.convert_encodings.rst", "reference/generated/pydicom.charset.decode_bytes.rst", "reference/generated/pydicom.charset.decode_element.rst", "reference/generated/pydicom.charset.encode_string.rst", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS.rst", "reference/generated/pydicom.config.DS_decimal.rst", "reference/generated/pydicom.config.DS_numpy.rst", "reference/generated/pydicom.config.IGNORE.rst", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR.rst", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR.rst", "reference/generated/pydicom.config.RAISE.rst", "reference/generated/pydicom.config.WARN.rst", "reference/generated/pydicom.config.allow_DS_float.rst", "reference/generated/pydicom.config.assume_implicit_vr_switch.rst", "reference/generated/pydicom.config.convert_wrong_length_to_UN.rst", "reference/generated/pydicom.config.data_element_callback.rst", "reference/generated/pydicom.config.data_element_callback_kwargs.rst", "reference/generated/pydicom.config.datetime_conversion.rst", "reference/generated/pydicom.config.debug.rst", "reference/generated/pydicom.config.enforce_valid_values.rst", "reference/generated/pydicom.config.future_behavior.rst", "reference/generated/pydicom.config.pixel_data_handlers.rst", "reference/generated/pydicom.config.reset_data_element_callback.rst", "reference/generated/pydicom.config.settings.rst", "reference/generated/pydicom.config.show_file_meta.rst", "reference/generated/pydicom.config.use_DS_decimal.rst", "reference/generated/pydicom.config.use_DS_numpy.rst", "reference/generated/pydicom.config.use_IS_numpy.rst", "reference/generated/pydicom.data.get_charset_files.rst", "reference/generated/pydicom.data.get_palette_files.rst", "reference/generated/pydicom.data.get_testdata_file.rst", "reference/generated/pydicom.data.get_testdata_files.rst", "reference/generated/pydicom.datadict.add_dict_entries.rst", "reference/generated/pydicom.datadict.add_dict_entry.rst", "reference/generated/pydicom.datadict.add_private_dict_entries.rst", "reference/generated/pydicom.datadict.add_private_dict_entry.rst", "reference/generated/pydicom.datadict.dictionary_VM.rst", "reference/generated/pydicom.datadict.dictionary_VR.rst", "reference/generated/pydicom.datadict.dictionary_description.rst", "reference/generated/pydicom.datadict.dictionary_has_tag.rst", "reference/generated/pydicom.datadict.dictionary_is_retired.rst", "reference/generated/pydicom.datadict.dictionary_keyword.rst", "reference/generated/pydicom.datadict.get_entry.rst", "reference/generated/pydicom.datadict.get_private_entry.rst", "reference/generated/pydicom.datadict.keyword_for_tag.rst", "reference/generated/pydicom.datadict.mask_match.rst", "reference/generated/pydicom.datadict.private_dictionary_VM.rst", "reference/generated/pydicom.datadict.private_dictionary_VR.rst", "reference/generated/pydicom.datadict.private_dictionary_description.rst", "reference/generated/pydicom.datadict.repeater_has_keyword.rst", "reference/generated/pydicom.datadict.repeater_has_tag.rst", "reference/generated/pydicom.datadict.tag_for_keyword.rst", "reference/generated/pydicom.dataelem.DataElement.rst", "reference/generated/pydicom.dataelem.DataElement_from_raw.rst", "reference/generated/pydicom.dataelem.RawDataElement.rst", "reference/generated/pydicom.dataset.Dataset.rst", "reference/generated/pydicom.dataset.FileDataset.rst", "reference/generated/pydicom.dataset.FileMetaDataset.rst", "reference/generated/pydicom.dataset.PrivateBlock.rst", "reference/generated/pydicom.dataset.validate_file_meta.rst", "reference/generated/pydicom.encaps.decode_data_sequence.rst", "reference/generated/pydicom.encaps.defragment_data.rst", "reference/generated/pydicom.encaps.encapsulate.rst", "reference/generated/pydicom.encaps.encapsulate_buffer.rst", "reference/generated/pydicom.encaps.encapsulate_extended.rst", "reference/generated/pydicom.encaps.encapsulate_extended_buffer.rst", "reference/generated/pydicom.encaps.fragment_frame.rst", "reference/generated/pydicom.encaps.generate_fragmented_frames.rst", "reference/generated/pydicom.encaps.generate_fragments.rst", "reference/generated/pydicom.encaps.generate_frames.rst", "reference/generated/pydicom.encaps.generate_pixel_data.rst", "reference/generated/pydicom.encaps.generate_pixel_data_fragment.rst", "reference/generated/pydicom.encaps.generate_pixel_data_frame.rst", "reference/generated/pydicom.encaps.get_frame.rst", "reference/generated/pydicom.encaps.get_frame_offsets.rst", "reference/generated/pydicom.encaps.itemize_fragment.rst", "reference/generated/pydicom.encaps.itemize_frame.rst", "reference/generated/pydicom.encaps.parse_basic_offsets.rst", "reference/generated/pydicom.encaps.parse_fragments.rst", "reference/generated/pydicom.encaps.read_item.rst", "reference/generated/pydicom.errors.InvalidDicomError.rst", "reference/generated/pydicom.examples.get_path.rst", "reference/generated/pydicom.filebase.DicomBytesIO.rst", "reference/generated/pydicom.filebase.DicomFile.rst", "reference/generated/pydicom.filebase.DicomFileLike.rst", "reference/generated/pydicom.filebase.DicomIO.rst", "reference/generated/pydicom.filereader.data_element_generator.rst", "reference/generated/pydicom.filereader.data_element_offset_to_value.rst", "reference/generated/pydicom.filereader.dcmread.rst", "reference/generated/pydicom.filereader.read_dataset.rst", "reference/generated/pydicom.filereader.read_deferred_data_element.rst", "reference/generated/pydicom.filereader.read_file_meta_info.rst", "reference/generated/pydicom.filereader.read_partial.rst", "reference/generated/pydicom.filereader.read_preamble.rst", "reference/generated/pydicom.filereader.read_sequence.rst", "reference/generated/pydicom.filereader.read_sequence_item.rst", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS.rst", "reference/generated/pydicom.fileset.FileInstance.rst", "reference/generated/pydicom.fileset.FileSet.rst", "reference/generated/pydicom.fileset.RecordNode.rst", "reference/generated/pydicom.fileset.generate_filename.rst", "reference/generated/pydicom.fileset.is_conformant_file_id.rst", "reference/generated/pydicom.fileutil.absorb_delimiter_item.rst", "reference/generated/pydicom.fileutil.find_bytes.rst", "reference/generated/pydicom.fileutil.find_delimiter.rst", "reference/generated/pydicom.fileutil.length_of_undefined_length.rst", "reference/generated/pydicom.fileutil.read_undefined_length_value.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element.rst", "reference/generated/pydicom.filewriter.dcmwrite.rst", "reference/generated/pydicom.filewriter.multi_string.rst", "reference/generated/pydicom.filewriter.write_ATvalue.rst", "reference/generated/pydicom.filewriter.write_DA.rst", "reference/generated/pydicom.filewriter.write_DT.rst", "reference/generated/pydicom.filewriter.write_OBvalue.rst", "reference/generated/pydicom.filewriter.write_OWvalue.rst", "reference/generated/pydicom.filewriter.write_PN.rst", "reference/generated/pydicom.filewriter.write_TM.rst", "reference/generated/pydicom.filewriter.write_UI.rst", "reference/generated/pydicom.filewriter.write_UN.rst", "reference/generated/pydicom.filewriter.write_data_element.rst", "reference/generated/pydicom.filewriter.write_dataset.rst", "reference/generated/pydicom.filewriter.write_file_meta_info.rst", "reference/generated/pydicom.filewriter.write_number_string.rst", "reference/generated/pydicom.filewriter.write_numbers.rst", "reference/generated/pydicom.filewriter.write_sequence.rst", "reference/generated/pydicom.filewriter.write_sequence_item.rst", "reference/generated/pydicom.filewriter.write_string.rst", "reference/generated/pydicom.filewriter.write_text.rst", "reference/generated/pydicom.misc.is_dicom.rst", "reference/generated/pydicom.misc.size_in_bytes.rst", "reference/generated/pydicom.multival.MultiValue.rst", "reference/generated/pydicom.overlays.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler.rst", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler.rst", "reference/generated/pydicom.pixel_data_handlers.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pillow_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler.rst", "reference/generated/pydicom.pixel_data_handlers.rle_handler.rst", "reference/generated/pydicom.pixels.apply_color_lut.rst", "reference/generated/pydicom.pixels.apply_icc_profile.rst", "reference/generated/pydicom.pixels.apply_modality_lut.rst", "reference/generated/pydicom.pixels.apply_presentation_lut.rst", "reference/generated/pydicom.pixels.apply_rescale.rst", "reference/generated/pydicom.pixels.apply_voi.rst", "reference/generated/pydicom.pixels.apply_voi_lut.rst", "reference/generated/pydicom.pixels.apply_windowing.rst", "reference/generated/pydicom.pixels.as_pixel_options.rst", "reference/generated/pydicom.pixels.compress.rst", "reference/generated/pydicom.pixels.convert_color_space.rst", "reference/generated/pydicom.pixels.create_icc_transform.rst", "reference/generated/pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.ExplicitVRBigEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder.rst", "reference/generated/pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEG2000Decoder.rst", "reference/generated/pydicom.pixels.decoders.JPEG2000LosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGBaseline8BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGExtended12BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLSLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLSNearLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.JPEGLosslessSV1Decoder.rst", "reference/generated/pydicom.pixels.decoders.RLELosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner.rst", "reference/generated/pydicom.pixels.decoders.base.Decoder.rst", "reference/generated/pydicom.pixels.decompress.rst", "reference/generated/pydicom.pixels.encoders.JPEG2000Encoder.rst", "reference/generated/pydicom.pixels.encoders.JPEG2000LosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.JPEGLSLosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.JPEGLSNearLosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.RLELosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.base.EncodeRunner.rst", "reference/generated/pydicom.pixels.encoders.base.Encoder.rst", "reference/generated/pydicom.pixels.get_decoder.rst", "reference/generated/pydicom.pixels.get_encoder.rst", "reference/generated/pydicom.pixels.iter_pixels.rst", "reference/generated/pydicom.pixels.pack_bits.rst", "reference/generated/pydicom.pixels.pixel_array.rst", "reference/generated/pydicom.pixels.processing.apply_color_lut.rst", "reference/generated/pydicom.pixels.processing.apply_icc_profile.rst", "reference/generated/pydicom.pixels.processing.apply_modality_lut.rst", "reference/generated/pydicom.pixels.processing.apply_presentation_lut.rst", "reference/generated/pydicom.pixels.processing.apply_rescale.rst", "reference/generated/pydicom.pixels.processing.apply_voi.rst", "reference/generated/pydicom.pixels.processing.apply_voi_lut.rst", "reference/generated/pydicom.pixels.processing.apply_windowing.rst", "reference/generated/pydicom.pixels.processing.convert_color_space.rst", "reference/generated/pydicom.pixels.processing.create_icc_transform.rst", "reference/generated/pydicom.pixels.set_pixel_data.rst", "reference/generated/pydicom.pixels.unpack_bits.rst", "reference/generated/pydicom.pixels.utils.as_pixel_options.rst", "reference/generated/pydicom.pixels.utils.compress.rst", "reference/generated/pydicom.pixels.utils.decompress.rst", "reference/generated/pydicom.pixels.utils.expand_ybr422.rst", "reference/generated/pydicom.pixels.utils.get_expected_length.rst", "reference/generated/pydicom.pixels.utils.get_image_pixel_ids.rst", "reference/generated/pydicom.pixels.utils.get_j2k_parameters.rst", "reference/generated/pydicom.pixels.utils.get_nr_frames.rst", "reference/generated/pydicom.pixels.utils.iter_pixels.rst", "reference/generated/pydicom.pixels.utils.pack_bits.rst", "reference/generated/pydicom.pixels.utils.pixel_array.rst", "reference/generated/pydicom.pixels.utils.pixel_dtype.rst", "reference/generated/pydicom.pixels.utils.reshape_pixel_array.rst", "reference/generated/pydicom.pixels.utils.set_pixel_data.rst", "reference/generated/pydicom.pixels.utils.unpack_bits.rst", "reference/generated/pydicom.sequence.Sequence.rst", "reference/generated/pydicom.sr.Code.rst", "reference/generated/pydicom.sr.Collection.rst", "reference/generated/pydicom.sr.Concepts.rst", "reference/generated/pydicom.tag.BaseTag.rst", "reference/generated/pydicom.tag.Tag.rst", "reference/generated/pydicom.tag.TupleTag.rst", "reference/generated/pydicom.tag.tag_in_exception.rst", "reference/generated/pydicom.uid.AcquisitionContextSRStorage.rst", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pydicom.uid.AllTransferSyntaxes.rst", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage.rst", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage.rst", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage.rst", "reference/generated/pydicom.uid.BasicTextSRStorage.rst", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.BodyPositionWaveformStorage.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CTImageStorage.rst", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pydicom.uid.ChestCADSRStorage.rst", "reference/generated/pydicom.uid.ColonCADSRStorage.rst", "reference/generated/pydicom.uid.ColorPaletteStorage.rst", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.Comprehensive3DSRStorage.rst", "reference/generated/pydicom.uid.ComprehensiveSRStorage.rst", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage.rst", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage.rst", "reference/generated/pydicom.uid.CornealTopographyMapStorage.rst", "reference/generated/pydicom.uid.DICOS2DAITStorage.rst", "reference/generated/pydicom.uid.DICOS3DAITStorage.rst", "reference/generated/pydicom.uid.DICOSCTImageStorage.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage.rst", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage.rst", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.EddyCurrentImageStorage.rst", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage.rst", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage.rst", "reference/generated/pydicom.uid.EncapsulatedCDAStorage.rst", "reference/generated/pydicom.uid.EncapsulatedMTLStorage.rst", "reference/generated/pydicom.uid.EncapsulatedOBJStorage.rst", "reference/generated/pydicom.uid.EncapsulatedPDFStorage.rst", "reference/generated/pydicom.uid.EncapsulatedSTLStorage.rst", "reference/generated/pydicom.uid.EnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.EnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.EnhancedRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedSRStorage.rst", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage.rst", "reference/generated/pydicom.uid.EnhancedXAImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRFImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.ExplicitVRBigEndian.rst", "reference/generated/pydicom.uid.ExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.ExtensibleSRStorage.rst", "reference/generated/pydicom.uid.General32bitECGWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralECGWaveformStorage.rst", "reference/generated/pydicom.uid.GenericImplantTemplateStorage.rst", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.HEVCM10P51.rst", "reference/generated/pydicom.uid.HEVCMP51.rst", "reference/generated/pydicom.uid.HTJ2K.rst", "reference/generated/pydicom.uid.HTJ2KLossless.rst", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL.rst", "reference/generated/pydicom.uid.HangingProtocolStorage.rst", "reference/generated/pydicom.uid.HemodynamicWaveformStorage.rst", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage.rst", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage.rst", "reference/generated/pydicom.uid.ImplantationPlanSRStorage.rst", "reference/generated/pydicom.uid.ImplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pydicom.uid.InventoryStorage.rst", "reference/generated/pydicom.uid.JPEG2000.rst", "reference/generated/pydicom.uid.JPEG2000Lossless.rst", "reference/generated/pydicom.uid.JPEG2000MC.rst", "reference/generated/pydicom.uid.JPEG2000MCLossless.rst", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGBaseline8Bit.rst", "reference/generated/pydicom.uid.JPEGExtended12Bit.rst", "reference/generated/pydicom.uid.JPEGLSLossless.rst", "reference/generated/pydicom.uid.JPEGLSNearLossless.rst", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGLossless.rst", "reference/generated/pydicom.uid.JPEGLosslessSV1.rst", "reference/generated/pydicom.uid.JPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate.rst", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.LensometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.MPEG2MPHL.rst", "reference/generated/pydicom.uid.MPEG2MPHLF.rst", "reference/generated/pydicom.uid.MPEG2MPML.rst", "reference/generated/pydicom.uid.MPEG2MPMLF.rst", "reference/generated/pydicom.uid.MPEG4HP41.rst", "reference/generated/pydicom.uid.MPEG4HP41BD.rst", "reference/generated/pydicom.uid.MPEG4HP41BDF.rst", "reference/generated/pydicom.uid.MPEG4HP41F.rst", "reference/generated/pydicom.uid.MPEG4HP422D.rst", "reference/generated/pydicom.uid.MPEG4HP422DF.rst", "reference/generated/pydicom.uid.MPEG4HP423D.rst", "reference/generated/pydicom.uid.MPEG4HP423DF.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREO.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREOF.rst", "reference/generated/pydicom.uid.MPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.MRImageStorage.rst", "reference/generated/pydicom.uid.MRSpectroscopyStorage.rst", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pydicom.uid.MammographyCADSRStorage.rst", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage.rst", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.NuclearMedicineImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage.rst", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID.rst", "reference/generated/pydicom.uid.ParametricMapStorage.rst", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PhotoacousticImageStorage.rst", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage.rst", "reference/generated/pydicom.uid.PrivateTransferSyntaxes.rst", "reference/generated/pydicom.uid.ProcedureLogStorage.rst", "reference/generated/pydicom.uid.ProtocolApprovalStorage.rst", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.RE_VALID_UID.rst", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX.rst", "reference/generated/pydicom.uid.RLELossless.rst", "reference/generated/pydicom.uid.RLETransferSyntaxes.rst", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTDoseStorage.rst", "reference/generated/pydicom.uid.RTImageStorage.rst", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTIonPlanStorage.rst", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage.rst", "reference/generated/pydicom.uid.RTPhysicianIntentStorage.rst", "reference/generated/pydicom.uid.RTPlanStorage.rst", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage.rst", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetStorage.rst", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage.rst", "reference/generated/pydicom.uid.RTStructureSetStorage.rst", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage.rst", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.RawDataStorage.rst", "reference/generated/pydicom.uid.RealWorldValueMappingStorage.rst", "reference/generated/pydicom.uid.RespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.RoboticArmRadiationStorage.rst", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio.rst", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.SegmentationStorage.rst", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SpatialFiducialsStorage.rst", "reference/generated/pydicom.uid.SpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage.rst", "reference/generated/pydicom.uid.StereometricRelationshipStorage.rst", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.SurfaceScanMeshStorage.rst", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage.rst", "reference/generated/pydicom.uid.SurfaceSegmentationStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage.rst", "reference/generated/pydicom.uid.TractographyResultsStorage.rst", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage.rst", "reference/generated/pydicom.uid.UID.rst", "reference/generated/pydicom.uid.UltrasoundImageStorage.rst", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes.rst", "reference/generated/pydicom.uid.VLEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VLMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage.rst", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage.rst", "reference/generated/pydicom.uid.XRayAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pydicom.uid.generate_uid.rst", "reference/generated/pydicom.uid.register_transfer_syntax.rst", "reference/generated/pydicom.valuerep.DA.rst", "reference/generated/pydicom.valuerep.DS.rst", "reference/generated/pydicom.valuerep.DSdecimal.rst", "reference/generated/pydicom.valuerep.DSfloat.rst", "reference/generated/pydicom.valuerep.DT.rst", "reference/generated/pydicom.valuerep.IS.rst", "reference/generated/pydicom.valuerep.ISfloat.rst", "reference/generated/pydicom.valuerep.PersonName.rst", "reference/generated/pydicom.valuerep.TM.rst", "reference/generated/pydicom.valuerep.VR.rst", "reference/generated/pydicom.valuerep.format_number_as_ds.rst", "reference/generated/pydicom.valuerep.is_valid_ds.rst", "reference/generated/pydicom.values.convert_AE_string.rst", "reference/generated/pydicom.values.convert_ATvalue.rst", "reference/generated/pydicom.values.convert_DA_string.rst", "reference/generated/pydicom.values.convert_DS_string.rst", "reference/generated/pydicom.values.convert_DT_string.rst", "reference/generated/pydicom.values.convert_IS_string.rst", "reference/generated/pydicom.values.convert_OBvalue.rst", "reference/generated/pydicom.values.convert_OWvalue.rst", "reference/generated/pydicom.values.convert_PN.rst", "reference/generated/pydicom.values.convert_SQ.rst", "reference/generated/pydicom.values.convert_TM_string.rst", "reference/generated/pydicom.values.convert_UI.rst", "reference/generated/pydicom.values.convert_UN.rst", "reference/generated/pydicom.values.convert_UR_string.rst", "reference/generated/pydicom.values.convert_numbers.rst", "reference/generated/pydicom.values.convert_single_string.rst", "reference/generated/pydicom.values.convert_string.rst", "reference/generated/pydicom.values.convert_tag.rst", "reference/generated/pydicom.values.convert_text.rst", "reference/generated/pydicom.values.convert_value.rst", "reference/generated/pydicom.values.multi_string.rst", "reference/generated/pydicom.waveforms.numpy_handler.rst", "reference/handlers.rst", "reference/handlers.pixel_data.rst", "reference/index.rst", "reference/misc.rst", "reference/overlays.rst", "reference/pixels.rst", "reference/pixels.decoders.rst", "reference/pixels.encoders.rst", "reference/pixels.processing.rst", "reference/pixels.utils.rst", "reference/sr.rst", "reference/uid.rst", "reference/waveforms.rst", "release_notes/index.rst", "release_notes/v0.9.2.rst", "release_notes/v0.9.3.rst", "release_notes/v0.9.4.rst", "release_notes/v0.9.5.rst", "release_notes/v0.9.6.rst", "release_notes/v0.9.7.rst", "release_notes/v0.9.8.rst", "release_notes/v0.9.9.rst", "release_notes/v1.0.0.rst", "release_notes/v1.1.0.rst", "release_notes/v1.2.0.rst", "release_notes/v1.3.0.rst", "release_notes/v1.4.0.rst", "release_notes/v1.4.1.rst", "release_notes/v2.0.0.rst", "release_notes/v2.1.0.rst", "release_notes/v2.1.1.rst", "release_notes/v2.2.0.rst", "release_notes/v2.3.0.rst", "release_notes/v2.4.0.rst", "release_notes/v3.0.0.rst", "sg_execution_times.rst", "tutorials/contributing.rst", "tutorials/contributing_code.rst", "tutorials/contributing_docs.rst", "tutorials/dataset_basics.rst", "tutorials/dicom_json.rst", "tutorials/filesets.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/pixel_data/compressing.rst", "tutorials/pixel_data/creation.rst", "tutorials/pixel_data/index.rst", "tutorials/pixel_data/introduction.rst", "tutorials/sr_basics.rst", "tutorials/waveforms.rst"], "indexentries": {"__init__() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.__init__", false]], "__init__() (pydicom.dataelem.rawdataelement method)": [[130, "pydicom.dataelem.RawDataElement.__init__", false]], "__init__() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.__init__", false]], "__init__() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.__init__", false]], "__init__() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.__init__", false]], "__init__() (pydicom.dataset.privateblock method)": [[134, "pydicom.dataset.PrivateBlock.__init__", false]], "__init__() (pydicom.filebase.dicombytesio method)": [[158, "pydicom.filebase.DicomBytesIO.__init__", false]], "__init__() (pydicom.filebase.dicomfilelike method)": [[160, "pydicom.filebase.DicomFileLike.__init__", false]], "__init__() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.__init__", false]], "__init__() (pydicom.fileset.fileinstance method)": [[173, "pydicom.fileset.FileInstance.__init__", false]], "__init__() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.__init__", false]], "__init__() (pydicom.fileset.recordnode method)": [[175, "pydicom.fileset.RecordNode.__init__", false]], "__init__() (pydicom.multival.multivalue method)": [[207, "pydicom.multival.MultiValue.__init__", false]], "__init__() (pydicom.pixels.decoders.base.decoder method)": [[244, "pydicom.pixels.decoders.base.Decoder.__init__", false]], "__init__() (pydicom.pixels.decoders.base.decoderunner method)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.__init__", false]], "__init__() (pydicom.pixels.encoders.base.encoder method)": [[252, "pydicom.pixels.encoders.base.Encoder.__init__", false]], "__init__() (pydicom.pixels.encoders.base.encoderunner method)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.__init__", false]], "__init__() (pydicom.sequence.sequence method)": [[285, "pydicom.sequence.Sequence.__init__", false]], "__init__() (pydicom.sr.code method)": [[286, "pydicom.sr.Code.__init__", false]], "__init__() (pydicom.sr.collection method)": [[287, "pydicom.sr.Collection.__init__", false]], "__init__() (pydicom.sr.concepts method)": [[288, "pydicom.sr.Concepts.__init__", false]], "__init__() (pydicom.tag.basetag method)": [[289, "pydicom.tag.BaseTag.__init__", false]], "__init__() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.__init__", false]], "__init__() (pydicom.valuerep.da method)": [[531, "pydicom.valuerep.DA.__init__", false]], "__init__() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.__init__", false]], "__init__() (pydicom.valuerep.dsfloat method)": [[534, "pydicom.valuerep.DSfloat.__init__", false]], "__init__() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.__init__", false]], "__init__() (pydicom.valuerep.is method)": [[536, "pydicom.valuerep.IS.__init__", false]], "__init__() (pydicom.valuerep.isfloat method)": [[537, "pydicom.valuerep.ISfloat.__init__", false]], "__init__() (pydicom.valuerep.personname method)": [[538, "pydicom.valuerep.PersonName.__init__", false]], "__init__() (pydicom.valuerep.tm method)": [[539, "pydicom.valuerep.TM.__init__", false]], "__init__() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.__init__", false]], "absorb_delimiter_item() (in module pydicom.fileutil)": [[178, "pydicom.fileutil.absorb_delimiter_item", false]], "acquisitioncontextsrstorage (in module pydicom.uid)": [[293, "pydicom.uid.AcquisitionContextSRStorage", false]], "add() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.add", false]], "add() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.add", false]], "add() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.add", false]], "add() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.add", false]], "add() (pydicom.fileset.recordnode method)": [[175, "pydicom.fileset.RecordNode.add", false]], "add_custom() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.add_custom", false]], "add_dict_entries() (in module pydicom.datadict)": [[108, "pydicom.datadict.add_dict_entries", false]], "add_dict_entry() (in module pydicom.datadict)": [[109, "pydicom.datadict.add_dict_entry", false]], "add_new() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.add_new", false]], "add_new() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.add_new", false]], "add_new() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.add_new", false]], "add_new() (pydicom.dataset.privateblock method)": [[134, "pydicom.dataset.PrivateBlock.add_new", false]], "add_new_private() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.add_new_private", false]], "add_new_private() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.add_new_private", false]], "add_new_private() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.add_new_private", false]], "add_plugin() (pydicom.pixels.decoders.base.decoder method)": [[244, "pydicom.pixels.decoders.base.Decoder.add_plugin", false]], "add_plugin() (pydicom.pixels.encoders.base.encoder method)": [[252, "pydicom.pixels.encoders.base.Encoder.add_plugin", false]], "add_plugins() (pydicom.pixels.decoders.base.decoder method)": [[244, "pydicom.pixels.decoders.base.Decoder.add_plugins", false]], "add_plugins() (pydicom.pixels.encoders.base.encoder method)": [[252, "pydicom.pixels.encoders.base.Encoder.add_plugins", false]], "add_private_dict_entries() (in module pydicom.datadict)": [[110, "pydicom.datadict.add_private_dict_entries", false]], "add_private_dict_entry() (in module pydicom.datadict)": [[111, "pydicom.datadict.add_private_dict_entry", false]], "adjusted() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.adjusted", false]], "advancedblendingpresentationstatestorage (in module pydicom.uid)": [[294, "pydicom.uid.AdvancedBlendingPresentationStateStorage", false]], "allow_ds_float (in module pydicom.config)": [[88, "pydicom.config.allow_DS_float", false]], "alltransfersyntaxes (in module pydicom.uid)": [[295, "pydicom.uid.AllTransferSyntaxes", false]], "alphabetic (pydicom.valuerep.personname property)": [[538, "pydicom.valuerep.PersonName.alphabetic", false]], "ambulatoryecgwaveformstorage (in module pydicom.uid)": [[296, "pydicom.uid.AmbulatoryECGWaveformStorage", false]], "ancestors (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.ancestors", false]], "append() (pydicom.multival.multivalue method)": [[207, "pydicom.multival.MultiValue.append", false]], "append() (pydicom.sequence.sequence method)": [[285, "pydicom.sequence.Sequence.append", false]], "apply_color_lut() (in module pydicom.pixels)": [[215, "pydicom.pixels.apply_color_lut", false]], "apply_color_lut() (in module pydicom.pixels.processing)": [[258, "pydicom.pixels.processing.apply_color_lut", false]], "apply_icc_profile() (in module pydicom.pixels)": [[216, "pydicom.pixels.apply_icc_profile", false]], "apply_icc_profile() (in module pydicom.pixels.processing)": [[259, "pydicom.pixels.processing.apply_icc_profile", false]], "apply_j2k_corrections (in module pydicom.config)": [[80, "pydicom.config.APPLY_J2K_CORRECTIONS", false]], "apply_modality_lut() (in module pydicom.pixels)": [[217, "pydicom.pixels.apply_modality_lut", false]], "apply_modality_lut() (in module pydicom.pixels.processing)": [[260, "pydicom.pixels.processing.apply_modality_lut", false]], "apply_presentation_lut() (in module pydicom.pixels)": [[218, "pydicom.pixels.apply_presentation_lut", false]], "apply_presentation_lut() (in module pydicom.pixels.processing)": [[261, "pydicom.pixels.processing.apply_presentation_lut", false]], "apply_rescale() (in module pydicom.pixels)": [[219, "pydicom.pixels.apply_rescale", false]], "apply_rescale() (in module pydicom.pixels.processing)": [[262, "pydicom.pixels.processing.apply_rescale", false]], "apply_voi() (in module pydicom.pixels)": [[220, "pydicom.pixels.apply_voi", false]], "apply_voi() (in module pydicom.pixels.processing)": [[263, "pydicom.pixels.processing.apply_voi", false]], "apply_voi_lut() (in module pydicom.pixels)": [[221, "pydicom.pixels.apply_voi_lut", false]], "apply_voi_lut() (in module pydicom.pixels.processing)": [[264, "pydicom.pixels.processing.apply_voi_lut", false]], "apply_windowing() (in module pydicom.pixels)": [[222, "pydicom.pixels.apply_windowing", false]], "apply_windowing() (in module pydicom.pixels.processing)": [[265, "pydicom.pixels.processing.apply_windowing", false]], "arterialpulsewaveformstorage (in module pydicom.uid)": [[297, "pydicom.uid.ArterialPulseWaveformStorage", false]], "as_array() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[213, "pydicom.pixel_data_handlers.pylibjpeg_handler.as_array", false]], "as_array() (pydicom.pixels.decoders.base.decoder method)": [[244, "pydicom.pixels.decoders.base.Decoder.as_array", false]], "as_buffer() (pydicom.pixels.decoders.base.decoder method)": [[244, "pydicom.pixels.decoders.base.Decoder.as_buffer", false]], "as_integer_ratio() (pydicom.tag.basetag method)": [[289, "pydicom.tag.BaseTag.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.dsfloat method)": [[534, "pydicom.valuerep.DSfloat.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.is method)": [[536, "pydicom.valuerep.IS.as_integer_ratio", false]], "as_integer_ratio() (pydicom.valuerep.isfloat method)": [[537, "pydicom.valuerep.ISfloat.as_integer_ratio", false]], "as_pixel_options() (in module pydicom.pixels)": [[223, "pydicom.pixels.as_pixel_options", false]], "as_pixel_options() (in module pydicom.pixels.utils)": [[270, "pydicom.pixels.utils.as_pixel_options", false]], "as_tuple() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.as_tuple", false]], "assume_implicit_vr_switch (in module pydicom.config)": [[89, "pydicom.config.assume_implicit_vr_switch", false]], "astimezone() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.astimezone", false]], "autorefractionmeasurementsstorage (in module pydicom.uid)": [[298, "pydicom.uid.AutorefractionMeasurementsStorage", false]], "available_plugins (pydicom.pixels.decoders.base.decoder property)": [[244, "pydicom.pixels.decoders.base.Decoder.available_plugins", false]], "available_plugins (pydicom.pixels.encoders.base.encoder property)": [[252, "pydicom.pixels.encoders.base.Encoder.available_plugins", false]], "basetag (class in pydicom.tag)": [[289, "pydicom.tag.BaseTag", false]], "basic_offset_table (pydicom.encaps.encapsulatedbuffer property)": [[67, "pydicom.encaps.EncapsulatedBuffer.basic_offset_table", false]], "basicstructureddisplaystorage (in module pydicom.uid)": [[299, "pydicom.uid.BasicStructuredDisplayStorage", false]], "basictextsrstorage (in module pydicom.uid)": [[300, "pydicom.uid.BasicTextSRStorage", false]], "basicvoiceaudiowaveformstorage (in module pydicom.uid)": [[301, "pydicom.uid.BasicVoiceAudioWaveformStorage", false]], "bit_count() (pydicom.tag.basetag method)": [[289, "pydicom.tag.BaseTag.bit_count", false]], "bit_count() (pydicom.valuerep.is method)": [[536, "pydicom.valuerep.IS.bit_count", false]], "bit_length() (pydicom.tag.basetag method)": [[289, "pydicom.tag.BaseTag.bit_length", false]], "bit_length() (pydicom.valuerep.is method)": [[536, "pydicom.valuerep.IS.bit_length", false]], "bits_allocated (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.bits_allocated", false]], "bits_allocated (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.bits_allocated", false]], "bits_stored (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.bits_stored", false]], "bits_stored (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.bits_stored", false]], "blendingsoftcopypresentationstatestorage (in module pydicom.uid)": [[302, "pydicom.uid.BlendingSoftcopyPresentationStateStorage", false]], "block_start (pydicom.dataset.privateblock attribute)": [[134, "pydicom.dataset.PrivateBlock.block_start", false]], "bodypositionwaveformstorage (in module pydicom.uid)": [[303, "pydicom.uid.BodyPositionWaveformStorage", false]], "breastprojectionxrayimagestorageforpresentation (in module pydicom.uid)": [[304, "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", false]], "breastprojectionxrayimagestorageforprocessing (in module pydicom.uid)": [[305, "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", false]], "breasttomosynthesisimagestorage (in module pydicom.uid)": [[306, "pydicom.uid.BreastTomosynthesisImageStorage", false]], "buffer (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.buffer", false]], "buffered_read_size (pydicom.config.settings property)": [[56, "pydicom.config.Settings.buffered_read_size", false]], "canonical() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.canonical", false]], "capitalize() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.capitalize", false]], "capitalize() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.capitalize", false]], "cardiacelectrophysiologywaveformstorage (in module pydicom.uid)": [[312, "pydicom.uid.CardiacElectrophysiologyWaveformStorage", false]], "carmphotonelectronradiationrecordstorage (in module pydicom.uid)": [[307, "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", false]], "carmphotonelectronradiationstorage (in module pydicom.uid)": [[308, "pydicom.uid.CArmPhotonElectronRadiationStorage", false]], "casefold() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.casefold", false]], "casefold() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.casefold", false]], "center() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.center", false]], "center() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.center", false]], "chestcadsrstorage (in module pydicom.uid)": [[313, "pydicom.uid.ChestCADSRStorage", false]], "children (pydicom.fileset.recordnode attribute)": [[175, "pydicom.fileset.RecordNode.children", false]], "cids() (pydicom.sr.concepts method)": [[288, "pydicom.sr.Concepts.CIDs", false]], "clear() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.clear", false]], "clear() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.clear", false]], "clear() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.clear", false]], "clear() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.clear", false]], "clear() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.clear", false]], "clear() (pydicom.multival.multivalue method)": [[207, "pydicom.multival.MultiValue.clear", false]], "clear() (pydicom.sequence.sequence method)": [[285, "pydicom.sequence.Sequence.clear", false]], "close() (pydicom.filebase.dicombytesio method)": [[158, "pydicom.filebase.DicomBytesIO.close", false]], "close() (pydicom.filebase.dicomfilelike method)": [[160, "pydicom.filebase.DicomFileLike.close", false]], "close() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.close", false]], "closed (pydicom.encaps.encapsulatedbuffer property)": [[67, "pydicom.encaps.EncapsulatedBuffer.closed", false]], "code (class in pydicom.sr)": [[286, "pydicom.sr.Code", false]], "collection (class in pydicom.sr)": [[287, "pydicom.sr.Collection", false]], "collections (pydicom.sr.concepts property)": [[288, "pydicom.sr.Concepts.collections", false]], "coloncadsrstorage (in module pydicom.uid)": [[314, "pydicom.uid.ColonCADSRStorage", false]], "colorpalettestorage (in module pydicom.uid)": [[315, "pydicom.uid.ColorPaletteStorage", false]], "colorsoftcopypresentationstatestorage (in module pydicom.uid)": [[316, "pydicom.uid.ColorSoftcopyPresentationStateStorage", false]], "columns (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.columns", false]], "columns (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.columns", false]], "combine() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.combine", false]], "compare() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.compare", false]], "compare_signal() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.compare_signal", false]], "compare_total() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.compare_total", false]], "compare_total_mag() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.compare_total_mag", false]], "component (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.component", false]], "components (pydicom.valuerep.personname property)": [[538, "pydicom.valuerep.PersonName.components", false]], "compositingplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[317, "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", false]], "comprehensive3dsrstorage (in module pydicom.uid)": [[318, "pydicom.uid.Comprehensive3DSRStorage", false]], "comprehensivesrstorage (in module pydicom.uid)": [[319, "pydicom.uid.ComprehensiveSRStorage", false]], "compress() (in module pydicom.pixels)": [[224, "pydicom.pixels.compress", false]], "compress() (in module pydicom.pixels.utils)": [[271, "pydicom.pixels.utils.compress", false]], "compress() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.compress", false]], "compress() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.compress", false]], "compress() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.compress", false]], "computedradiographyimagestorage (in module pydicom.uid)": [[320, "pydicom.uid.ComputedRadiographyImageStorage", false]], "concepts (class in pydicom.sr)": [[288, "pydicom.sr.Concepts", false]], "concepts (pydicom.sr.collection property)": [[287, "pydicom.sr.Collection.concepts", false]], "confocalmicroscopyimagestorage (in module pydicom.uid)": [[321, "pydicom.uid.ConfocalMicroscopyImageStorage", false]], "confocalmicroscopytiledpyramidalimagestorage (in module pydicom.uid)": [[322, "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", false]], "conjugate() (pydicom.tag.basetag method)": [[289, "pydicom.tag.BaseTag.conjugate", false]], "conjugate() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.conjugate", false]], "conjugate() (pydicom.valuerep.dsfloat method)": [[534, "pydicom.valuerep.DSfloat.conjugate", false]], "conjugate() (pydicom.valuerep.is method)": [[536, "pydicom.valuerep.IS.conjugate", false]], "conjugate() (pydicom.valuerep.isfloat method)": [[537, "pydicom.valuerep.ISfloat.conjugate", false]], "contentassessmentresultsstorage (in module pydicom.uid)": [[323, "pydicom.uid.ContentAssessmentResultsStorage", false]], "convert_ae_string() (in module pydicom.values)": [[543, "pydicom.values.convert_AE_string", false]], "convert_atvalue() (in module pydicom.values)": [[544, "pydicom.values.convert_ATvalue", false]], "convert_color_space() (in module pydicom.pixels)": [[225, "pydicom.pixels.convert_color_space", false]], "convert_color_space() (in module pydicom.pixels.processing)": [[266, "pydicom.pixels.processing.convert_color_space", false]], "convert_da_string() (in module pydicom.values)": [[545, "pydicom.values.convert_DA_string", false]], "convert_ds_string() (in module pydicom.values)": [[546, "pydicom.values.convert_DS_string", false]], "convert_dt_string() (in module pydicom.values)": [[547, "pydicom.values.convert_DT_string", false]], "convert_encodings() (in module pydicom.charset)": [[76, "pydicom.charset.convert_encodings", false]], "convert_is_string() (in module pydicom.values)": [[548, "pydicom.values.convert_IS_string", false]], "convert_numbers() (in module pydicom.values)": [[557, "pydicom.values.convert_numbers", false]], "convert_obvalue() (in module pydicom.values)": [[549, "pydicom.values.convert_OBvalue", false]], "convert_owvalue() (in module pydicom.values)": [[550, "pydicom.values.convert_OWvalue", false]], "convert_pixel_data() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.convert_pixel_data", false]], "convert_pixel_data() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.convert_pixel_data", false]], "convert_pixel_data() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.convert_pixel_data", false]], "convert_pn() (in module pydicom.values)": [[551, "pydicom.values.convert_PN", false]], "convert_single_string() (in module pydicom.values)": [[558, "pydicom.values.convert_single_string", false]], "convert_sq() (in module pydicom.values)": [[552, "pydicom.values.convert_SQ", false]], "convert_string() (in module pydicom.values)": [[559, "pydicom.values.convert_string", false]], "convert_tag() (in module pydicom.values)": [[560, "pydicom.values.convert_tag", false]], "convert_text() (in module pydicom.values)": [[561, "pydicom.values.convert_text", false]], "convert_tm_string() (in module pydicom.values)": [[553, "pydicom.values.convert_TM_string", false]], "convert_ui() (in module pydicom.values)": [[554, "pydicom.values.convert_UI", false]], "convert_un() (in module pydicom.values)": [[555, "pydicom.values.convert_UN", false]], "convert_ur_string() (in module pydicom.values)": [[556, "pydicom.values.convert_UR_string", false]], "convert_value() (in module pydicom.values)": [[562, "pydicom.values.convert_value", false]], "convert_wrong_length_to_un (in module pydicom.config)": [[90, "pydicom.config.convert_wrong_length_to_UN", false]], "copy() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.copy", false]], "copy() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.copy", false]], "copy() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.copy", false]], "copy() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.copy", false]], "copy_abs() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.copy_abs", false]], "copy_negate() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.copy_negate", false]], "copy_sign() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.copy_sign", false]], "cornealtopographymapstorage (in module pydicom.uid)": [[324, "pydicom.uid.CornealTopographyMapStorage", false]], "correct_ambiguous_vr() (in module pydicom.filewriter)": [[183, "pydicom.filewriter.correct_ambiguous_vr", false]], "correct_ambiguous_vr_element() (in module pydicom.filewriter)": [[184, "pydicom.filewriter.correct_ambiguous_vr_element", false]], "count() (pydicom.dataelem.rawdataelement method)": [[130, "pydicom.dataelem.RawDataElement.count", false]], "count() (pydicom.multival.multivalue method)": [[207, "pydicom.multival.MultiValue.count", false]], "count() (pydicom.sequence.sequence method)": [[285, "pydicom.sequence.Sequence.count", false]], "count() (pydicom.sr.code method)": [[286, "pydicom.sr.Code.count", false]], "count() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.count", false]], "count() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.count", false]], "create_data_element() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[209, "pydicom.pixel_data_handlers.gdcm_handler.create_data_element", false]], "create_icc_transform() (in module pydicom.pixels)": [[226, "pydicom.pixels.create_icc_transform", false]], "create_icc_transform() (in module pydicom.pixels.processing)": [[267, "pydicom.pixels.processing.create_icc_transform", false]], "create_image() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[209, "pydicom.pixel_data_handlers.gdcm_handler.create_image", false]], "ctdefinedprocedureprotocolstorage (in module pydicom.uid)": [[309, "pydicom.uid.CTDefinedProcedureProtocolStorage", false]], "ctimagestorage (in module pydicom.uid)": [[310, "pydicom.uid.CTImageStorage", false]], "ctime() (pydicom.valuerep.da method)": [[531, "pydicom.valuerep.DA.ctime", false]], "ctime() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.ctime", false]], "ctperformedprocedureprotocolstorage (in module pydicom.uid)": [[311, "pydicom.uid.CTPerformedProcedureProtocolStorage", false]], "da (class in pydicom.valuerep)": [[531, "pydicom.valuerep.DA", false]], "data_element() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.data_element", false]], "data_element() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.data_element", false]], "data_element() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.data_element", false]], "data_element_callback (in module pydicom.config)": [[91, "pydicom.config.data_element_callback", false]], "data_element_callback_kwargs (in module pydicom.config)": [[92, "pydicom.config.data_element_callback_kwargs", false]], "data_element_generator() (in module pydicom.filereader)": [[162, "pydicom.filereader.data_element_generator", false]], "data_element_offset_to_value() (in module pydicom.filereader)": [[163, "pydicom.filereader.data_element_offset_to_value", false]], "dataelement (class in pydicom.dataelem)": [[128, "pydicom.dataelem.DataElement", false]], "dataelement_from_raw() (in module pydicom.dataelem)": [[129, "pydicom.dataelem.DataElement_from_raw", false]], "dataset (class in pydicom.dataset)": [[131, "pydicom.dataset.Dataset", false]], "dataset (pydicom.dataset.privateblock attribute)": [[134, "pydicom.dataset.PrivateBlock.dataset", false]], "date() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.date", false]], "datetime_conversion (in module pydicom.config)": [[93, "pydicom.config.datetime_conversion", false]], "dcmread() (in module pydicom.filereader)": [[164, "pydicom.filereader.dcmread", false]], "dcmwrite() (in module pydicom.filewriter)": [[185, "pydicom.filewriter.dcmwrite", false]], "debug() (in module pydicom.config)": [[94, "pydicom.config.debug", false]], "decode() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.decode", false]], "decode() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.decode", false]], "decode() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.decode", false]], "decode() (pydicom.pixels.decoders.base.decoderunner method)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.decode", false]], "decode() (pydicom.valuerep.personname method)": [[538, "pydicom.valuerep.PersonName.decode", false]], "decode_bytes() (in module pydicom.charset)": [[77, "pydicom.charset.decode_bytes", false]], "decode_data_sequence() (in module pydicom.encaps)": [[136, "pydicom.encaps.decode_data_sequence", false]], "decode_element() (in module pydicom.charset)": [[78, "pydicom.charset.decode_element", false]], "decoder (class in pydicom.pixels.decoders.base)": [[244, "pydicom.pixels.decoders.base.Decoder", false]], "decoderunner (class in pydicom.pixels.decoders.base)": [[243, "pydicom.pixels.decoders.base.DecodeRunner", false]], "decompress() (in module pydicom.pixels)": [[245, "pydicom.pixels.decompress", false]], "decompress() (in module pydicom.pixels.utils)": [[272, "pydicom.pixels.utils.decompress", false]], "decompress() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.decompress", false]], "decompress() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.decompress", false]], "decompress() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.decompress", false]], "default_element_format (pydicom.dataset.dataset attribute)": [[131, "pydicom.dataset.Dataset.default_element_format", false]], "default_sequence_element_format (pydicom.dataset.dataset attribute)": [[131, "pydicom.dataset.Dataset.default_sequence_element_format", false]], "deflatedexplicitvrlittleendian (in module pydicom.uid)": [[332, "pydicom.uid.DeflatedExplicitVRLittleEndian", false]], "deflatedexplicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[227, "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", false]], "deformablespatialregistrationstorage (in module pydicom.uid)": [[333, "pydicom.uid.DeformableSpatialRegistrationStorage", false]], "defragment_data() (in module pydicom.encaps)": [[137, "pydicom.encaps.defragment_data", false]], "del_option() (pydicom.pixels.decoders.base.decoderunner method)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.del_option", false]], "del_option() (pydicom.pixels.encoders.base.encoderunner method)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.del_option", false]], "denominator (pydicom.tag.basetag attribute)": [[289, "pydicom.tag.BaseTag.denominator", false]], "denominator (pydicom.valuerep.is attribute)": [[536, "pydicom.valuerep.IS.denominator", false]], "depth (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.depth", false]], "dermoscopicphotographyimagestorage (in module pydicom.uid)": [[334, "pydicom.uid.DermoscopicPhotographyImageStorage", false]], "descriptor_character_set (pydicom.fileset.fileset property)": [[174, "pydicom.fileset.FileSet.descriptor_character_set", false]], "descriptor_file_id (pydicom.fileset.fileset property)": [[174, "pydicom.fileset.FileSet.descriptor_file_id", false]], "descripwidth (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.descripWidth", false]], "dicombytesio (class in pydicom.filebase)": [[158, "pydicom.filebase.DicomBytesIO", false]], "dicomfile() (in module pydicom.filebase)": [[159, "pydicom.filebase.DicomFile", false]], "dicomfilelike (class in pydicom.filebase)": [[160, "pydicom.filebase.DicomFileLike", false]], "dicomio (class in pydicom.filebase)": [[161, "pydicom.filebase.DicomIO", false]], "dicos2daitstorage (in module pydicom.uid)": [[325, "pydicom.uid.DICOS2DAITStorage", false]], "dicos3daitstorage (in module pydicom.uid)": [[326, "pydicom.uid.DICOS3DAITStorage", false]], "dicosctimagestorage (in module pydicom.uid)": [[327, "pydicom.uid.DICOSCTImageStorage", false]], "dicosdigitalxrayimagestorageforpresentation (in module pydicom.uid)": [[328, "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", false]], "dicosdigitalxrayimagestorageforprocessing (in module pydicom.uid)": [[329, "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", false]], "dicosquadrupoleresonancestorage (in module pydicom.uid)": [[330, "pydicom.uid.DICOSQuadrupoleResonanceStorage", false]], "dicosthreatdetectionreportstorage (in module pydicom.uid)": [[331, "pydicom.uid.DICOSThreatDetectionReportStorage", false]], "dictionary_description() (in module pydicom.datadict)": [[114, "pydicom.datadict.dictionary_description", false]], "dictionary_has_tag() (in module pydicom.datadict)": [[115, "pydicom.datadict.dictionary_has_tag", false]], "dictionary_is_retired() (in module pydicom.datadict)": [[116, "pydicom.datadict.dictionary_is_retired", false]], "dictionary_keyword() (in module pydicom.datadict)": [[117, "pydicom.datadict.dictionary_keyword", false]], "dictionary_vm() (in module pydicom.datadict)": [[112, "pydicom.datadict.dictionary_VM", false]], "dictionary_vr() (in module pydicom.datadict)": [[113, "pydicom.datadict.dictionary_VR", false]], "digitalintraoralxrayimagestorageforpresentation (in module pydicom.uid)": [[335, "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", false]], "digitalintraoralxrayimagestorageforprocessing (in module pydicom.uid)": [[336, "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", false]], "digitalmammographyxrayimagestorageforpresentation (in module pydicom.uid)": [[337, "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", false]], "digitalmammographyxrayimagestorageforprocessing (in module pydicom.uid)": [[338, "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", false]], "digitalxrayimagestorageforpresentation (in module pydicom.uid)": [[339, "pydicom.uid.DigitalXRayImageStorageForPresentation", false]], "digitalxrayimagestorageforprocessing (in module pydicom.uid)": [[340, "pydicom.uid.DigitalXRayImageStorageForProcessing", false]], "dir() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.dir", false]], "dir() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.dir", false]], "dir() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.dir", false]], "dir() (pydicom.sr.collection method)": [[287, "pydicom.sr.Collection.dir", false]], "directory_recorders (in module pydicom.fileset)": [[172, "pydicom.fileset.DIRECTORY_RECORDERS", false]], "ds() (in module pydicom.valuerep)": [[532, "pydicom.valuerep.DS", false]], "ds_decimal() (in module pydicom.config)": [[81, "pydicom.config.DS_decimal", false]], "ds_numpy() (in module pydicom.config)": [[82, "pydicom.config.DS_numpy", false]], "dsdecimal (class in pydicom.valuerep)": [[533, "pydicom.valuerep.DSdecimal", false]], "dsfloat (class in pydicom.valuerep)": [[534, "pydicom.valuerep.DSfloat", false]], "dst() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.dst", false]], "dst() (pydicom.valuerep.tm method)": [[539, "pydicom.valuerep.TM.dst", false]], "dt (class in pydicom.valuerep)": [[535, "pydicom.valuerep.DT", false]], "eddycurrentimagestorage (in module pydicom.uid)": [[341, "pydicom.uid.EddyCurrentImageStorage", false]], "eddycurrentmultiframeimagestorage (in module pydicom.uid)": [[342, "pydicom.uid.EddyCurrentMultiFrameImageStorage", false]], "electromyogramwaveformstorage (in module pydicom.uid)": [[343, "pydicom.uid.ElectromyogramWaveformStorage", false]], "electrooculogramwaveformstorage (in module pydicom.uid)": [[344, "pydicom.uid.ElectrooculogramWaveformStorage", false]], "elem (pydicom.tag.basetag property)": [[289, "pydicom.tag.BaseTag.elem", false]], "element (pydicom.tag.basetag property)": [[289, "pydicom.tag.BaseTag.element", false]], "elements() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.elements", false]], "elements() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.elements", false]], "elements() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.elements", false]], "empty_value (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.empty_value", false]], "encapsulate() (in module pydicom.encaps)": [[138, "pydicom.encaps.encapsulate", false]], "encapsulate_buffer() (in module pydicom.encaps)": [[139, "pydicom.encaps.encapsulate_buffer", false]], "encapsulate_extended() (in module pydicom.encaps)": [[140, "pydicom.encaps.encapsulate_extended", false]], "encapsulate_extended_buffer() (in module pydicom.encaps)": [[141, "pydicom.encaps.encapsulate_extended_buffer", false]], "encapsulated_length (pydicom.encaps.encapsulatedbuffer property)": [[67, "pydicom.encaps.EncapsulatedBuffer.encapsulated_length", false]], "encapsulatedbuffer (class in pydicom.encaps)": [[67, "pydicom.encaps.EncapsulatedBuffer", false]], "encapsulatedcdastorage (in module pydicom.uid)": [[345, "pydicom.uid.EncapsulatedCDAStorage", false]], "encapsulatedmtlstorage (in module pydicom.uid)": [[346, "pydicom.uid.EncapsulatedMTLStorage", false]], "encapsulatedobjstorage (in module pydicom.uid)": [[347, "pydicom.uid.EncapsulatedOBJStorage", false]], "encapsulatedpdfstorage (in module pydicom.uid)": [[348, "pydicom.uid.EncapsulatedPDFStorage", false]], "encapsulatedstlstorage (in module pydicom.uid)": [[349, "pydicom.uid.EncapsulatedSTLStorage", false]], "encode() (pydicom.pixels.encoders.base.encoder method)": [[252, "pydicom.pixels.encoders.base.Encoder.encode", false]], "encode() (pydicom.pixels.encoders.base.encoderunner method)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.encode", false]], "encode() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.encode", false]], "encode() (pydicom.valuerep.personname method)": [[538, "pydicom.valuerep.PersonName.encode", false]], "encode() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.encode", false]], "encode_string() (in module pydicom.charset)": [[79, "pydicom.charset.encode_string", false]], "encoder (class in pydicom.pixels.encoders.base)": [[252, "pydicom.pixels.encoders.base.Encoder", false]], "encoderunner (class in pydicom.pixels.encoders.base)": [[251, "pydicom.pixels.encoders.base.EncodeRunner", false]], "endswith() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.endswith", false]], "endswith() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.endswith", false]], "enforce_valid_values (in module pydicom.config)": [[95, "pydicom.config.enforce_valid_values", false]], "enhancedcontinuousrtimagestorage (in module pydicom.uid)": [[351, "pydicom.uid.EnhancedContinuousRTImageStorage", false]], "enhancedctimagestorage (in module pydicom.uid)": [[350, "pydicom.uid.EnhancedCTImageStorage", false]], "enhancedmrcolorimagestorage (in module pydicom.uid)": [[352, "pydicom.uid.EnhancedMRColorImageStorage", false]], "enhancedmrimagestorage (in module pydicom.uid)": [[353, "pydicom.uid.EnhancedMRImageStorage", false]], "enhancedpetimagestorage (in module pydicom.uid)": [[354, "pydicom.uid.EnhancedPETImageStorage", false]], "enhancedrtimagestorage (in module pydicom.uid)": [[355, "pydicom.uid.EnhancedRTImageStorage", false]], "enhancedsrstorage (in module pydicom.uid)": [[356, "pydicom.uid.EnhancedSRStorage", false]], "enhancedusvolumestorage (in module pydicom.uid)": [[357, "pydicom.uid.EnhancedUSVolumeStorage", false]], "enhancedxaimagestorage (in module pydicom.uid)": [[358, "pydicom.uid.EnhancedXAImageStorage", false]], "enhancedxrayradiationdosesrstorage (in module pydicom.uid)": [[360, "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", false]], "enhancedxrfimagestorage (in module pydicom.uid)": [[359, "pydicom.uid.EnhancedXRFImageStorage", false]], "ensure_file_meta() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.ensure_file_meta", false]], "ensure_file_meta() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.ensure_file_meta", false]], "ensure_file_meta() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.ensure_file_meta", false]], "exp() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.exp", false]], "expand_ybr422() (in module pydicom.pixels.utils)": [[273, "pydicom.pixels.utils.expand_ybr422", false]], "expandtabs() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.expandtabs", false]], "expandtabs() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.expandtabs", false]], "explicitvrbigendian (in module pydicom.uid)": [[361, "pydicom.uid.ExplicitVRBigEndian", false]], "explicitvrbigendiandecoder (in module pydicom.pixels.decoders)": [[228, "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", false]], "explicitvrlittleendian (in module pydicom.uid)": [[362, "pydicom.uid.ExplicitVRLittleEndian", false]], "explicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[229, "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", false]], "extend() (pydicom.multival.multivalue method)": [[207, "pydicom.multival.MultiValue.extend", false]], "extend() (pydicom.sequence.sequence method)": [[285, "pydicom.sequence.Sequence.extend", false]], "extended_lengths (pydicom.encaps.encapsulatedbuffer property)": [[67, "pydicom.encaps.EncapsulatedBuffer.extended_lengths", false]], "extended_offsets (pydicom.encaps.encapsulatedbuffer property)": [[67, "pydicom.encaps.EncapsulatedBuffer.extended_offsets", false]], "extended_offsets (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.extended_offsets", false]], "extended_offsets (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.extended_offsets", false]], "extensiblesrstorage (in module pydicom.uid)": [[363, "pydicom.uid.ExtensibleSRStorage", false]], "family_comma_given() (pydicom.valuerep.personname method)": [[538, "pydicom.valuerep.PersonName.family_comma_given", false]], "family_name (pydicom.valuerep.personname property)": [[538, "pydicom.valuerep.PersonName.family_name", false]], "file_meta (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.file_meta", false]], "file_set (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.file_set", false]], "file_set (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.file_set", false]], "filedataset (class in pydicom.dataset)": [[132, "pydicom.dataset.FileDataset", false]], "fileid (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.FileID", false]], "fileinstance (class in pydicom.fileset)": [[173, "pydicom.fileset.FileInstance", false]], "filemetadataset (class in pydicom.dataset)": [[133, "pydicom.dataset.FileMetaDataset", false]], "filename (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.filename", false]], "fileobj_type (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.fileobj_type", false]], "fileset (class in pydicom.fileset)": [[174, "pydicom.fileset.FileSet", false]], "find() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.find", false]], "find() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.find", false]], "find() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.find", false]], "find_bytes() (in module pydicom.fileutil)": [[179, "pydicom.fileutil.find_bytes", false]], "find_delimiter() (in module pydicom.fileutil)": [[180, "pydicom.fileutil.find_delimiter", false]], "find_values() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.find_values", false]], "fma() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.fma", false]], "for_addition (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.for_addition", false]], "for_moving (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.for_moving", false]], "for_removal (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.for_removal", false]], "format() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.format", false]], "format() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.format", false]], "format_map() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.format_map", false]], "format_map() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.format_map", false]], "format_number_as_ds() (in module pydicom.valuerep)": [[541, "pydicom.valuerep.format_number_as_ds", false]], "formatted() (pydicom.valuerep.personname method)": [[538, "pydicom.valuerep.PersonName.formatted", false]], "formatted_lines() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.formatted_lines", false]], "formatted_lines() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.formatted_lines", false]], "formatted_lines() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.formatted_lines", false]], "fragment_frame() (in module pydicom.encaps)": [[142, "pydicom.encaps.fragment_frame", false]], "frame_length() (pydicom.pixels.decoders.base.decoderunner method)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.frame_length", false]], "frame_length() (pydicom.pixels.encoders.base.encoderunner method)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.frame_length", false]], "from_bytes() (pydicom.tag.basetag method)": [[289, "pydicom.tag.BaseTag.from_bytes", false]], "from_bytes() (pydicom.valuerep.is method)": [[536, "pydicom.valuerep.IS.from_bytes", false]], "from_float() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.from_float", false]], "from_json() (pydicom.dataelem.dataelement class method)": [[128, "pydicom.dataelem.DataElement.from_json", false]], "from_json() (pydicom.dataset.dataset class method)": [[131, "pydicom.dataset.Dataset.from_json", false]], "from_json() (pydicom.dataset.filedataset class method)": [[132, "pydicom.dataset.FileDataset.from_json", false]], "from_json() (pydicom.dataset.filemetadataset class method)": [[133, "pydicom.dataset.FileMetaDataset.from_json", false]], "from_named_components() (pydicom.valuerep.personname class method)": [[538, "pydicom.valuerep.PersonName.from_named_components", false]], "from_named_components_veterinary() (pydicom.valuerep.personname class method)": [[538, "pydicom.valuerep.PersonName.from_named_components_veterinary", false]], "fromhex() (pydicom.valuerep.dsfloat method)": [[534, "pydicom.valuerep.DSfloat.fromhex", false]], "fromhex() (pydicom.valuerep.isfloat method)": [[537, "pydicom.valuerep.ISfloat.fromhex", false]], "fromisocalendar() (pydicom.valuerep.da method)": [[531, "pydicom.valuerep.DA.fromisocalendar", false]], "fromisocalendar() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.fromisocalendar", false]], "fromisoformat() (pydicom.valuerep.da method)": [[531, "pydicom.valuerep.DA.fromisoformat", false]], "fromisoformat() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.fromisoformat", false]], "fromisoformat() (pydicom.valuerep.tm method)": [[539, "pydicom.valuerep.TM.fromisoformat", false]], "fromordinal() (pydicom.valuerep.da method)": [[531, "pydicom.valuerep.DA.fromordinal", false]], "fromordinal() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.fromordinal", false]], "fromtimestamp() (pydicom.valuerep.da method)": [[531, "pydicom.valuerep.DA.fromtimestamp", false]], "fromtimestamp() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.fromtimestamp", false]], "future_behavior() (in module pydicom.config)": [[96, "pydicom.config.future_behavior", false]], "general32bitecgwaveformstorage (in module pydicom.uid)": [[364, "pydicom.uid.General32bitECGWaveformStorage", false]], "generalaudiowaveformstorage (in module pydicom.uid)": [[365, "pydicom.uid.GeneralAudioWaveformStorage", false]], "generalecgwaveformstorage (in module pydicom.uid)": [[366, "pydicom.uid.GeneralECGWaveformStorage", false]], "generate_filename() (in module pydicom.fileset)": [[176, "pydicom.fileset.generate_filename", false]], "generate_fragmented_frames() (in module pydicom.encaps)": [[143, "pydicom.encaps.generate_fragmented_frames", false]], "generate_fragments() (in module pydicom.encaps)": [[144, "pydicom.encaps.generate_fragments", false]], "generate_frames() (in module pydicom.encaps)": [[145, "pydicom.encaps.generate_frames", false]], "generate_frames() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[213, "pydicom.pixel_data_handlers.pylibjpeg_handler.generate_frames", false]], "generate_multiplex() (in module pydicom.waveforms.numpy_handler)": [[564, "pydicom.waveforms.numpy_handler.generate_multiplex", false]], "generate_pixel_data() (in module pydicom.encaps)": [[146, "pydicom.encaps.generate_pixel_data", false]], "generate_pixel_data_fragment() (in module pydicom.encaps)": [[147, "pydicom.encaps.generate_pixel_data_fragment", false]], "generate_pixel_data_frame() (in module pydicom.encaps)": [[148, "pydicom.encaps.generate_pixel_data_frame", false]], "generate_uid() (in module pydicom.uid)": [[529, "pydicom.uid.generate_uid", false]], "genericimplanttemplatestorage (in module pydicom.uid)": [[367, "pydicom.uid.GenericImplantTemplateStorage", false]], "get() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.get", false]], "get() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.get", false]], "get() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.get", false]], "get_charset_files() (in module pydicom.data)": [[104, "pydicom.data.get_charset_files", false]], "get_data() (pydicom.pixels.decoders.base.decoderunner method)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.get_data", false]], "get_decoder() (in module pydicom.pixels)": [[253, "pydicom.pixels.get_decoder", false]], "get_encoder() (in module pydicom.pixels)": [[254, "pydicom.pixels.get_encoder", false]], "get_entry() (in module pydicom.datadict)": [[118, "pydicom.datadict.get_entry", false]], "get_expected_length() (in module pydicom.overlays.numpy_handler)": [[208, "pydicom.overlays.numpy_handler.get_expected_length", false]], "get_expected_length() (in module pydicom.pixels.utils)": [[274, "pydicom.pixels.utils.get_expected_length", false]], "get_frame() (in module pydicom.encaps)": [[149, "pydicom.encaps.get_frame", false]], "get_frame() (pydicom.pixels.encoders.base.encoderunner method)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.get_frame", false]], "get_frame_offsets() (in module pydicom.encaps)": [[150, "pydicom.encaps.get_frame_offsets", false]], "get_image_pixel_ids() (in module pydicom.pixels.utils)": [[275, "pydicom.pixels.utils.get_image_pixel_ids", false]], "get_item() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.get_item", false]], "get_item() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.get_item", false]], "get_item() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.get_item", false]], "get_j2k_parameters() (in module pydicom.pixels.utils)": [[276, "pydicom.pixels.utils.get_j2k_parameters", false]], "get_nr_frames() (in module pydicom.pixels.utils)": [[277, "pydicom.pixels.utils.get_nr_frames", false]], "get_option() (pydicom.pixels.decoders.base.decoderunner method)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.get_option", false]], "get_option() (pydicom.pixels.encoders.base.encoderunner method)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.get_option", false]], "get_overlay_array() (in module pydicom.overlays.numpy_handler)": [[208, "pydicom.overlays.numpy_handler.get_overlay_array", false]], "get_palette_files() (in module pydicom.data)": [[105, "pydicom.data.get_palette_files", false]], "get_path() (in module pydicom.examples)": [[157, "pydicom.examples.get_path", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[209, "pydicom.pixel_data_handlers.gdcm_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[210, "pydicom.pixel_data_handlers.jpeg_ls_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.numpy_handler)": [[211, "pydicom.pixel_data_handlers.numpy_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pillow_handler)": [[212, "pydicom.pixel_data_handlers.pillow_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[213, "pydicom.pixel_data_handlers.pylibjpeg_handler.get_pixeldata", false]], "get_pixeldata() (in module pydicom.pixel_data_handlers.rle_handler)": [[214, "pydicom.pixel_data_handlers.rle_handler.get_pixeldata", false]], "get_private_entry() (in module pydicom.datadict)": [[119, "pydicom.datadict.get_private_entry", false]], "get_private_item() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.get_private_item", false]], "get_private_item() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.get_private_item", false]], "get_private_item() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.get_private_item", false]], "get_tag() (pydicom.dataset.privateblock method)": [[134, "pydicom.dataset.PrivateBlock.get_tag", false]], "get_testdata_file() (in module pydicom.data)": [[106, "pydicom.data.get_testdata_file", false]], "get_testdata_files() (in module pydicom.data)": [[107, "pydicom.data.get_testdata_files", false]], "given_name (pydicom.valuerep.personname property)": [[538, "pydicom.valuerep.PersonName.given_name", false]], "grayscaleplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[368, "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", false]], "grayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[369, "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", false]], "group (pydicom.dataset.privateblock attribute)": [[134, "pydicom.dataset.PrivateBlock.group", false]], "group (pydicom.tag.basetag property)": [[289, "pydicom.tag.BaseTag.group", false]], "group_dataset() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.group_dataset", false]], "group_dataset() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.group_dataset", false]], "group_dataset() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.group_dataset", false]], "hangingprotocolstorage (in module pydicom.uid)": [[375, "pydicom.uid.HangingProtocolStorage", false]], "has_instance (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.has_instance", false]], "hemodynamicwaveformstorage (in module pydicom.uid)": [[376, "pydicom.uid.HemodynamicWaveformStorage", false]], "hevcm10p51 (in module pydicom.uid)": [[370, "pydicom.uid.HEVCM10P51", false]], "hevcmp51 (in module pydicom.uid)": [[371, "pydicom.uid.HEVCMP51", false]], "hex() (pydicom.valuerep.dsfloat method)": [[534, "pydicom.valuerep.DSfloat.hex", false]], "hex() (pydicom.valuerep.isfloat method)": [[537, "pydicom.valuerep.ISfloat.hex", false]], "htj2k (in module pydicom.uid)": [[372, "pydicom.uid.HTJ2K", false]], "htj2kdecoder (in module pydicom.pixels.decoders)": [[230, "pydicom.pixels.decoders.HTJ2KDecoder", false]], "htj2klossless (in module pydicom.uid)": [[373, "pydicom.uid.HTJ2KLossless", false]], "htj2klosslessdecoder (in module pydicom.pixels.decoders)": [[231, "pydicom.pixels.decoders.HTJ2KLosslessDecoder", false]], "htj2klosslessrpcl (in module pydicom.uid)": [[374, "pydicom.uid.HTJ2KLosslessRPCL", false]], "htj2klosslessrpcldecoder (in module pydicom.pixels.decoders)": [[232, "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", false]], "id (pydicom.fileset.fileset property)": [[174, "pydicom.fileset.FileSet.ID", false]], "ideographic (pydicom.valuerep.personname property)": [[538, "pydicom.valuerep.PersonName.ideographic", false]], "ignore (in module pydicom.config)": [[83, "pydicom.config.IGNORE", false]], "imag (pydicom.tag.basetag attribute)": [[289, "pydicom.tag.BaseTag.imag", false]], "imag (pydicom.valuerep.dsfloat attribute)": [[534, "pydicom.valuerep.DSfloat.imag", false]], "imag (pydicom.valuerep.is attribute)": [[536, "pydicom.valuerep.IS.imag", false]], "imag (pydicom.valuerep.isfloat attribute)": [[537, "pydicom.valuerep.ISfloat.imag", false]], "implantassemblytemplatestorage (in module pydicom.uid)": [[377, "pydicom.uid.ImplantAssemblyTemplateStorage", false]], "implantationplansrstorage (in module pydicom.uid)": [[379, "pydicom.uid.ImplantationPlanSRStorage", false]], "implanttemplategroupstorage (in module pydicom.uid)": [[378, "pydicom.uid.ImplantTemplateGroupStorage", false]], "implicitvrlittleendian (in module pydicom.uid)": [[380, "pydicom.uid.ImplicitVRLittleEndian", false]], "implicitvrlittleendiandecoder (in module pydicom.pixels.decoders)": [[233, "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", false]], "indent_chars (pydicom.dataset.dataset attribute)": [[131, "pydicom.dataset.Dataset.indent_chars", false]], "index (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.index", false]], "index() (pydicom.dataelem.rawdataelement method)": [[130, "pydicom.dataelem.RawDataElement.index", false]], "index() (pydicom.multival.multivalue method)": [[207, "pydicom.multival.MultiValue.index", false]], "index() (pydicom.sequence.sequence method)": [[285, "pydicom.sequence.Sequence.index", false]], "index() (pydicom.sr.code method)": [[286, "pydicom.sr.Code.index", false]], "index() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.index", false]], "index() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.index", false]], "infer_sq_for_un_vr (pydicom.config.settings property)": [[56, "pydicom.config.Settings.infer_sq_for_un_vr", false]], "info (pydicom.uid.uid property)": [[504, "pydicom.uid.UID.info", false]], "insert() (pydicom.multival.multivalue method)": [[207, "pydicom.multival.MultiValue.insert", false]], "insert() (pydicom.sequence.sequence method)": [[285, "pydicom.sequence.Sequence.insert", false]], "instance (pydicom.fileset.recordnode attribute)": [[175, "pydicom.fileset.RecordNode.instance", false]], "intraocularlenscalculationsstorage (in module pydicom.uid)": [[381, "pydicom.uid.IntraocularLensCalculationsStorage", false]], "intravascularopticalcoherencetomographyimagestorageforpresentation (in module pydicom.uid)": [[382, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", false]], "intravascularopticalcoherencetomographyimagestorageforprocessing (in module pydicom.uid)": [[383, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", false]], "invalid_key_behavior (in module pydicom.config)": [[85, "pydicom.config.INVALID_KEY_BEHAVIOR", false]], "invalid_keyword_behavior (in module pydicom.config)": [[84, "pydicom.config.INVALID_KEYWORD_BEHAVIOR", false]], "invaliddicomerror": [[156, "pydicom.errors.InvalidDicomError", false]], "inventorystorage (in module pydicom.uid)": [[384, "pydicom.uid.InventoryStorage", false]], "is (class in pydicom.valuerep)": [[536, "pydicom.valuerep.IS", false]], "is_array (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.is_array", false]], "is_array (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.is_array", false]], "is_available (pydicom.pixels.decoders.base.decoder property)": [[244, "pydicom.pixels.decoders.base.Decoder.is_available", false]], "is_available (pydicom.pixels.encoders.base.encoder property)": [[252, "pydicom.pixels.encoders.base.Encoder.is_available", false]], "is_available() (in module pydicom.overlays.numpy_handler)": [[208, "pydicom.overlays.numpy_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[209, "pydicom.pixel_data_handlers.gdcm_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[210, "pydicom.pixel_data_handlers.jpeg_ls_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.numpy_handler)": [[211, "pydicom.pixel_data_handlers.numpy_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.pillow_handler)": [[212, "pydicom.pixel_data_handlers.pillow_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[213, "pydicom.pixel_data_handlers.pylibjpeg_handler.is_available", false]], "is_available() (in module pydicom.pixel_data_handlers.rle_handler)": [[214, "pydicom.pixel_data_handlers.rle_handler.is_available", false]], "is_available() (in module pydicom.waveforms.numpy_handler)": [[564, "pydicom.waveforms.numpy_handler.is_available", false]], "is_binary (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.is_binary", false]], "is_binary (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.is_binary", false]], "is_buffer (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.is_buffer", false]], "is_buffer (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.is_buffer", false]], "is_buffered (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.is_buffered", false]], "is_buffered (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.is_buffered", false]], "is_canonical() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.is_canonical", false]], "is_cid (pydicom.sr.collection property)": [[287, "pydicom.sr.Collection.is_cid", false]], "is_compressed (pydicom.uid.uid property)": [[504, "pydicom.uid.UID.is_compressed", false]], "is_conformant_file_id() (in module pydicom.fileset)": [[177, "pydicom.fileset.is_conformant_file_id", false]], "is_dataset (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.is_dataset", false]], "is_dataset (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.is_dataset", false]], "is_deflated (pydicom.uid.uid property)": [[504, "pydicom.uid.UID.is_deflated", false]], "is_dicom() (in module pydicom.misc)": [[205, "pydicom.misc.is_dicom", false]], "is_empty (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.is_empty", false]], "is_encapsulated (pydicom.pixels.decoders.base.decoder property)": [[244, "pydicom.pixels.decoders.base.Decoder.is_encapsulated", false]], "is_encapsulated (pydicom.pixels.encoders.base.encoder property)": [[252, "pydicom.pixels.encoders.base.Encoder.is_encapsulated", false]], "is_encapsulated (pydicom.uid.uid property)": [[504, "pydicom.uid.UID.is_encapsulated", false]], "is_finite() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.is_finite", false]], "is_implicit_vr (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicombytesio property)": [[158, "pydicom.filebase.DicomBytesIO.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicomfilelike property)": [[160, "pydicom.filebase.DicomFileLike.is_implicit_VR", false]], "is_implicit_vr (pydicom.filebase.dicomio property)": [[161, "pydicom.filebase.DicomIO.is_implicit_VR", false]], "is_implicit_vr (pydicom.uid.uid property)": [[504, "pydicom.uid.UID.is_implicit_VR", false]], "is_infinite() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.is_infinite", false]], "is_integer() (pydicom.valuerep.dsfloat method)": [[534, "pydicom.valuerep.DSfloat.is_integer", false]], "is_integer() (pydicom.valuerep.isfloat method)": [[537, "pydicom.valuerep.ISfloat.is_integer", false]], "is_little_endian (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.is_little_endian", false]], "is_little_endian (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.is_little_endian", false]], "is_little_endian (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.is_little_endian", false]], "is_little_endian (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicombytesio property)": [[158, "pydicom.filebase.DicomBytesIO.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicomfilelike property)": [[160, "pydicom.filebase.DicomFileLike.is_little_endian", false]], "is_little_endian (pydicom.filebase.dicomio property)": [[161, "pydicom.filebase.DicomIO.is_little_endian", false]], "is_little_endian (pydicom.uid.uid property)": [[504, "pydicom.uid.UID.is_little_endian", false]], "is_nan() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.is_nan", false]], "is_native (pydicom.pixels.decoders.base.decoder property)": [[244, "pydicom.pixels.decoders.base.Decoder.is_native", false]], "is_native (pydicom.pixels.encoders.base.encoder property)": [[252, "pydicom.pixels.encoders.base.Encoder.is_native", false]], "is_normal() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.is_normal", false]], "is_original_encoding (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.is_original_encoding", false]], "is_original_encoding (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.is_original_encoding", false]], "is_original_encoding (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.is_original_encoding", false]], "is_private (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.is_private", false]], "is_private (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.is_private", false]], "is_private (pydicom.tag.basetag property)": [[289, "pydicom.tag.BaseTag.is_private", false]], "is_private (pydicom.uid.uid property)": [[504, "pydicom.uid.UID.is_private", false]], "is_private_creator (pydicom.tag.basetag property)": [[289, "pydicom.tag.BaseTag.is_private_creator", false]], "is_qnan() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.is_qnan", false]], "is_raw (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.is_raw", false]], "is_retired (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.is_retired", false]], "is_retired (pydicom.uid.uid property)": [[504, "pydicom.uid.UID.is_retired", false]], "is_root (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.is_root", false]], "is_signed() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.is_signed", false]], "is_snan() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.is_snan", false]], "is_staged (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.is_staged", false]], "is_staged (pydicom.fileset.fileset property)": [[174, "pydicom.fileset.FileSet.is_staged", false]], "is_subnormal() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.is_subnormal", false]], "is_transfer_syntax (pydicom.uid.uid property)": [[504, "pydicom.uid.UID.is_transfer_syntax", false]], "is_undefined_length (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.is_undefined_length", false]], "is_valid (pydicom.uid.uid property)": [[504, "pydicom.uid.UID.is_valid", false]], "is_valid_ds() (in module pydicom.valuerep)": [[542, "pydicom.valuerep.is_valid_ds", false]], "is_zero() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.is_zero", false]], "isalnum() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.isalnum", false]], "isalnum() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.isalnum", false]], "isalpha() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.isalpha", false]], "isalpha() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.isalpha", false]], "isascii() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.isascii", false]], "isascii() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.isascii", false]], "isdecimal() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.isdecimal", false]], "isdecimal() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.isdecimal", false]], "isdigit() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.isdigit", false]], "isdigit() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.isdigit", false]], "isfloat (class in pydicom.valuerep)": [[537, "pydicom.valuerep.ISfloat", false]], "isidentifier() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.isidentifier", false]], "isidentifier() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.isidentifier", false]], "islower() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.islower", false]], "islower() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.islower", false]], "isnumeric() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.isnumeric", false]], "isnumeric() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.isnumeric", false]], "isocalendar() (pydicom.valuerep.da method)": [[531, "pydicom.valuerep.DA.isocalendar", false]], "isocalendar() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.isocalendar", false]], "isoformat() (pydicom.valuerep.da method)": [[531, "pydicom.valuerep.DA.isoformat", false]], "isoformat() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.isoformat", false]], "isoformat() (pydicom.valuerep.tm method)": [[539, "pydicom.valuerep.TM.isoformat", false]], "isoweekday() (pydicom.valuerep.da method)": [[531, "pydicom.valuerep.DA.isoweekday", false]], "isoweekday() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.isoweekday", false]], "isprintable() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.isprintable", false]], "isprintable() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.isprintable", false]], "isspace() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.isspace", false]], "isspace() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.isspace", false]], "istitle() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.istitle", false]], "istitle() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.istitle", false]], "isupper() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.isupper", false]], "isupper() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.isupper", false]], "itemize_fragment() (in module pydicom.encaps)": [[151, "pydicom.encaps.itemize_fragment", false]], "itemize_frame() (in module pydicom.encaps)": [[152, "pydicom.encaps.itemize_frame", false]], "items() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.items", false]], "items() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.items", false]], "items() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.items", false]], "iter_array() (pydicom.pixels.decoders.base.decoder method)": [[244, "pydicom.pixels.decoders.base.Decoder.iter_array", false]], "iter_buffer() (pydicom.pixels.decoders.base.decoder method)": [[244, "pydicom.pixels.decoders.base.Decoder.iter_buffer", false]], "iter_decode() (pydicom.pixels.decoders.base.decoderunner method)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.iter_decode", false]], "iter_encode() (pydicom.pixels.encoders.base.encoder method)": [[252, "pydicom.pixels.encoders.base.Encoder.iter_encode", false]], "iter_pixels() (in module pydicom.pixels)": [[255, "pydicom.pixels.iter_pixels", false]], "iter_pixels() (in module pydicom.pixels.utils)": [[278, "pydicom.pixels.utils.iter_pixels", false]], "iterall() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.iterall", false]], "iterall() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.iterall", false]], "iterall() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.iterall", false]], "join() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.join", false]], "join() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.join", false]], "jpeg2000 (in module pydicom.uid)": [[385, "pydicom.uid.JPEG2000", false]], "jpeg2000decoder (in module pydicom.pixels.decoders)": [[234, "pydicom.pixels.decoders.JPEG2000Decoder", false]], "jpeg2000encoder (in module pydicom.pixels.encoders)": [[246, "pydicom.pixels.encoders.JPEG2000Encoder", false]], "jpeg2000lossless (in module pydicom.uid)": [[386, "pydicom.uid.JPEG2000Lossless", false]], "jpeg2000losslessdecoder (in module pydicom.pixels.decoders)": [[235, "pydicom.pixels.decoders.JPEG2000LosslessDecoder", false]], "jpeg2000losslessencoder (in module pydicom.pixels.encoders)": [[247, "pydicom.pixels.encoders.JPEG2000LosslessEncoder", false]], "jpeg2000mc (in module pydicom.uid)": [[387, "pydicom.uid.JPEG2000MC", false]], "jpeg2000mclossless (in module pydicom.uid)": [[388, "pydicom.uid.JPEG2000MCLossless", false]], "jpeg2000transfersyntaxes (in module pydicom.uid)": [[389, "pydicom.uid.JPEG2000TransferSyntaxes", false]], "jpegbaseline8bit (in module pydicom.uid)": [[390, "pydicom.uid.JPEGBaseline8Bit", false]], "jpegbaseline8bitdecoder (in module pydicom.pixels.decoders)": [[236, "pydicom.pixels.decoders.JPEGBaseline8BitDecoder", false]], "jpegextended12bit (in module pydicom.uid)": [[391, "pydicom.uid.JPEGExtended12Bit", false]], "jpegextended12bitdecoder (in module pydicom.pixels.decoders)": [[237, "pydicom.pixels.decoders.JPEGExtended12BitDecoder", false]], "jpeglossless (in module pydicom.uid)": [[395, "pydicom.uid.JPEGLossless", false]], "jpeglosslessdecoder (in module pydicom.pixels.decoders)": [[240, "pydicom.pixels.decoders.JPEGLosslessDecoder", false]], "jpeglosslesssv1 (in module pydicom.uid)": [[396, "pydicom.uid.JPEGLosslessSV1", false]], "jpeglosslesssv1decoder (in module pydicom.pixels.decoders)": [[241, "pydicom.pixels.decoders.JPEGLosslessSV1Decoder", false]], "jpeglslossless (in module pydicom.uid)": [[392, "pydicom.uid.JPEGLSLossless", false]], "jpeglslosslessdecoder (in module pydicom.pixels.decoders)": [[238, "pydicom.pixels.decoders.JPEGLSLosslessDecoder", false]], "jpeglslosslessencoder (in module pydicom.pixels.encoders)": [[248, "pydicom.pixels.encoders.JPEGLSLosslessEncoder", false]], "jpeglsnearlossless (in module pydicom.uid)": [[393, "pydicom.uid.JPEGLSNearLossless", false]], "jpeglsnearlosslessdecoder (in module pydicom.pixels.decoders)": [[239, "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", false]], "jpeglsnearlosslessencoder (in module pydicom.pixels.encoders)": [[249, "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", false]], "jpeglstransfersyntaxes (in module pydicom.uid)": [[394, "pydicom.uid.JPEGLSTransferSyntaxes", false]], "jpegtransfersyntaxes (in module pydicom.uid)": [[397, "pydicom.uid.JPEGTransferSyntaxes", false]], "jpiphtj2kreferenced (in module pydicom.uid)": [[398, "pydicom.uid.JPIPHTJ2KReferenced", false]], "jpiphtj2kreferenceddeflate (in module pydicom.uid)": [[399, "pydicom.uid.JPIPHTJ2KReferencedDeflate", false]], "json_key (pydicom.tag.basetag property)": [[289, "pydicom.tag.BaseTag.json_key", false]], "keratometrymeasurementsstorage (in module pydicom.uid)": [[400, "pydicom.uid.KeratometryMeasurementsStorage", false]], "key (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.key", false]], "keyobjectselectiondocumentstorage (in module pydicom.uid)": [[401, "pydicom.uid.KeyObjectSelectionDocumentStorage", false]], "keys() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.keys", false]], "keys() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.keys", false]], "keys() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.keys", false]], "keyword (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.keyword", false]], "keyword (pydicom.uid.uid property)": [[504, "pydicom.uid.UID.keyword", false]], "keyword_for_tag() (in module pydicom.datadict)": [[120, "pydicom.datadict.keyword_for_tag", false]], "legacyconvertedenhancedctimagestorage (in module pydicom.uid)": [[402, "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", false]], "legacyconvertedenhancedmrimagestorage (in module pydicom.uid)": [[403, "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", false]], "legacyconvertedenhancedpetimagestorage (in module pydicom.uid)": [[404, "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", false]], "length (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.length", false]], "length_of_undefined_length() (in module pydicom.fileutil)": [[181, "pydicom.fileutil.length_of_undefined_length", false]], "lengths (pydicom.encaps.encapsulatedbuffer property)": [[67, "pydicom.encaps.EncapsulatedBuffer.lengths", false]], "lensometrymeasurementsstorage (in module pydicom.uid)": [[405, "pydicom.uid.LensometryMeasurementsStorage", false]], "ljust() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.ljust", false]], "ljust() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.ljust", false]], "ln() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.ln", false]], "load() (pydicom.fileset.fileinstance method)": [[173, "pydicom.fileset.FileInstance.load", false]], "load() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.load", false]], "log10() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.log10", false]], "logb() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.logb", false]], "logical_and() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.logical_and", false]], "logical_invert() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.logical_invert", false]], "logical_or() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.logical_or", false]], "logical_xor() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.logical_xor", false]], "lower() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.lower", false]], "lower() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.lower", false]], "lstrip() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.lstrip", false]], "lstrip() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.lstrip", false]], "maculargridthicknessandvolumereportstorage (in module pydicom.uid)": [[423, "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", false]], "maketrans() (pydicom.uid.uid static method)": [[504, "pydicom.uid.UID.maketrans", false]], "maketrans() (pydicom.valuerep.vr static method)": [[540, "pydicom.valuerep.VR.maketrans", false]], "mammographycadsrstorage (in module pydicom.uid)": [[424, "pydicom.uid.MammographyCADSRStorage", false]], "mask_match() (in module pydicom.datadict)": [[121, "pydicom.datadict.mask_match", false]], "max() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.max", false]], "max_mag() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.max_mag", false]], "maxbytestodisplay (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.maxBytesToDisplay", false]], "meaning (pydicom.sr.code attribute)": [[286, "pydicom.sr.Code.meaning", false]], "mediastoragedirectorystorage (in module pydicom.uid)": [[425, "pydicom.uid.MediaStorageDirectoryStorage", false]], "microscopybulksimpleannotationsstorage (in module pydicom.uid)": [[426, "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", false]], "middle_name (pydicom.valuerep.personname property)": [[538, "pydicom.valuerep.PersonName.middle_name", false]], "min() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.min", false]], "min_mag() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.min_mag", false]], "missing_dependencies (pydicom.pixels.decoders.base.decoder property)": [[244, "pydicom.pixels.decoders.base.Decoder.missing_dependencies", false]], "missing_dependencies (pydicom.pixels.encoders.base.encoder property)": [[252, "pydicom.pixels.encoders.base.Encoder.missing_dependencies", false]], "module": [[67, "module-pydicom.encaps", false], [69, "module-pydicom.examples", false], [208, "module-pydicom.overlays.numpy_handler", false], [209, "module-pydicom.pixel_data_handlers.gdcm_handler", false], [210, "module-pydicom.pixel_data_handlers.jpeg_ls_handler", false], [211, "module-pydicom.pixel_data_handlers.numpy_handler", false], [212, "module-pydicom.pixel_data_handlers.pillow_handler", false], [213, "module-pydicom.pixel_data_handlers.pylibjpeg_handler", false], [214, "module-pydicom.pixel_data_handlers.rle_handler", false], [564, "module-pydicom.waveforms.numpy_handler", false], [566, "module-pydicom.pixel_data_handlers", false], [567, "module-pydicom", false], [569, "module-pydicom.overlays", false], [570, "module-pydicom.pixels", false], [571, "module-pydicom.pixels.decoders", false], [572, "module-pydicom.pixels.encoders", false], [573, "module-pydicom.pixels.processing", false], [574, "module-pydicom.pixels.utils", false], [575, "module-pydicom.sr", false], [576, "module-pydicom.uid", false], [577, "module-pydicom.waveforms", false]], "mpeg2mphl (in module pydicom.uid)": [[406, "pydicom.uid.MPEG2MPHL", false]], "mpeg2mphlf (in module pydicom.uid)": [[407, "pydicom.uid.MPEG2MPHLF", false]], "mpeg2mpml (in module pydicom.uid)": [[408, "pydicom.uid.MPEG2MPML", false]], "mpeg2mpmlf (in module pydicom.uid)": [[409, "pydicom.uid.MPEG2MPMLF", false]], "mpeg4hp41 (in module pydicom.uid)": [[410, "pydicom.uid.MPEG4HP41", false]], "mpeg4hp41bd (in module pydicom.uid)": [[411, "pydicom.uid.MPEG4HP41BD", false]], "mpeg4hp41bdf (in module pydicom.uid)": [[412, "pydicom.uid.MPEG4HP41BDF", false]], "mpeg4hp41f (in module pydicom.uid)": [[413, "pydicom.uid.MPEG4HP41F", false]], "mpeg4hp422d (in module pydicom.uid)": [[414, "pydicom.uid.MPEG4HP422D", false]], "mpeg4hp422df (in module pydicom.uid)": [[415, "pydicom.uid.MPEG4HP422DF", false]], "mpeg4hp423d (in module pydicom.uid)": [[416, "pydicom.uid.MPEG4HP423D", false]], "mpeg4hp423df (in module pydicom.uid)": [[417, "pydicom.uid.MPEG4HP423DF", false]], "mpeg4hp42stereo (in module pydicom.uid)": [[418, "pydicom.uid.MPEG4HP42STEREO", false]], "mpeg4hp42stereof (in module pydicom.uid)": [[419, "pydicom.uid.MPEG4HP42STEREOF", false]], "mpegtransfersyntaxes (in module pydicom.uid)": [[420, "pydicom.uid.MPEGTransferSyntaxes", false]], "mrimagestorage (in module pydicom.uid)": [[421, "pydicom.uid.MRImageStorage", false]], "mrspectroscopystorage (in module pydicom.uid)": [[422, "pydicom.uid.MRSpectroscopyStorage", false]], "multi_string() (in module pydicom.filewriter)": [[186, "pydicom.filewriter.multi_string", false]], "multi_string() (in module pydicom.values)": [[563, "pydicom.values.multi_string", false]], "multichannelrespiratorywaveformstorage (in module pydicom.uid)": [[431, "pydicom.uid.MultichannelRespiratoryWaveformStorage", false]], "multiframegrayscalebytesecondarycaptureimagestorage (in module pydicom.uid)": [[427, "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", false]], "multiframegrayscalewordsecondarycaptureimagestorage (in module pydicom.uid)": [[428, "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", false]], "multiframesinglebitsecondarycaptureimagestorage (in module pydicom.uid)": [[429, "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", false]], "multiframetruecolorsecondarycaptureimagestorage (in module pydicom.uid)": [[430, "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", false]], "multiplevolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[432, "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", false]], "multiplex_array() (in module pydicom.waveforms.numpy_handler)": [[564, "pydicom.waveforms.numpy_handler.multiplex_array", false]], "multivalue (class in pydicom.multival)": [[207, "pydicom.multival.MultiValue", false]], "name (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.name", false]], "name (pydicom.filebase.dicombytesio property)": [[158, "pydicom.filebase.DicomBytesIO.name", false]], "name (pydicom.filebase.dicomfilelike property)": [[160, "pydicom.filebase.DicomFileLike.name", false]], "name (pydicom.filebase.dicomio property)": [[161, "pydicom.filebase.DicomIO.name", false]], "name (pydicom.sr.collection property)": [[287, "pydicom.sr.Collection.name", false]], "name (pydicom.uid.uid property)": [[504, "pydicom.uid.UID.name", false]], "name_prefix (pydicom.valuerep.personname property)": [[538, "pydicom.valuerep.PersonName.name_prefix", false]], "name_suffix (pydicom.valuerep.personname property)": [[538, "pydicom.valuerep.PersonName.name_suffix", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[209, "pydicom.pixel_data_handlers.gdcm_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[210, "pydicom.pixel_data_handlers.jpeg_ls_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[211, "pydicom.pixel_data_handlers.numpy_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[212, "pydicom.pixel_data_handlers.pillow_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[213, "pydicom.pixel_data_handlers.pylibjpeg_handler.needs_to_convert_to_RGB", false]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[214, "pydicom.pixel_data_handlers.rle_handler.needs_to_convert_to_RGB", false]], "next (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.next", false]], "next_minus() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.next_minus", false]], "next_plus() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.next_plus", false]], "next_toward() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.next_toward", false]], "node (pydicom.fileset.fileinstance attribute)": [[173, "pydicom.fileset.FileInstance.node", false]], "normalize() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.normalize", false]], "now() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.now", false]], "nuclearmedicineimagestorage (in module pydicom.uid)": [[433, "pydicom.uid.NuclearMedicineImageStorage", false]], "number_class() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.number_class", false]], "number_of_frames (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.number_of_frames", false]], "number_of_frames (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.number_of_frames", false]], "numerator (pydicom.tag.basetag attribute)": [[289, "pydicom.tag.BaseTag.numerator", false]], "numerator (pydicom.valuerep.is attribute)": [[536, "pydicom.valuerep.IS.numerator", false]], "offsets (pydicom.encaps.encapsulatedbuffer property)": [[67, "pydicom.encaps.EncapsulatedBuffer.offsets", false]], "ophthalmicaxialmeasurementsstorage (in module pydicom.uid)": [[434, "pydicom.uid.OphthalmicAxialMeasurementsStorage", false]], "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage (in module pydicom.uid)": [[435, "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", false]], "ophthalmicopticalcoherencetomographyenfaceimagestorage (in module pydicom.uid)": [[436, "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", false]], "ophthalmicphotography16bitimagestorage (in module pydicom.uid)": [[437, "pydicom.uid.OphthalmicPhotography16BitImageStorage", false]], "ophthalmicphotography8bitimagestorage (in module pydicom.uid)": [[438, "pydicom.uid.OphthalmicPhotography8BitImageStorage", false]], "ophthalmicthicknessmapstorage (in module pydicom.uid)": [[439, "pydicom.uid.OphthalmicThicknessMapStorage", false]], "ophthalmictomographyimagestorage (in module pydicom.uid)": [[440, "pydicom.uid.OphthalmicTomographyImageStorage", false]], "ophthalmicvisualfieldstaticperimetrymeasurementsstorage (in module pydicom.uid)": [[441, "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", false]], "options (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.options", false]], "options (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.options", false]], "original_character_set (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.original_character_set", false]], "original_character_set (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.original_character_set", false]], "original_character_set (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.original_character_set", false]], "original_encoding (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.original_encoding", false]], "original_encoding (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.original_encoding", false]], "original_encoding (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.original_encoding", false]], "overlay_array() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.overlay_array", false]], "overlay_array() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.overlay_array", false]], "overlay_array() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.overlay_array", false]], "pack_bits() (in module pydicom.pixels)": [[256, "pydicom.pixels.pack_bits", false]], "pack_bits() (in module pydicom.pixels.utils)": [[279, "pydicom.pixels.utils.pack_bits", false]], "parametricmapstorage (in module pydicom.uid)": [[444, "pydicom.uid.ParametricMapStorage", false]], "parent (pydicom.filebase.dicombytesio property)": [[158, "pydicom.filebase.DicomBytesIO.parent", false]], "parent (pydicom.filebase.dicomfilelike property)": [[160, "pydicom.filebase.DicomFileLike.parent", false]], "parent (pydicom.filebase.dicomio property)": [[161, "pydicom.filebase.DicomIO.parent", false]], "parent (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.parent", false]], "parse_basic_offsets() (in module pydicom.encaps)": [[153, "pydicom.encaps.parse_basic_offsets", false]], "parse_fragments() (in module pydicom.encaps)": [[154, "pydicom.encaps.parse_fragments", false]], "partition() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.partition", false]], "partition() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.partition", false]], "path (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.path", false]], "path (pydicom.fileset.fileset property)": [[174, "pydicom.fileset.FileSet.path", false]], "patientradiationdosesrstorage (in module pydicom.uid)": [[445, "pydicom.uid.PatientRadiationDoseSRStorage", false]], "performedimagingagentadministrationsrstorage (in module pydicom.uid)": [[446, "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", false]], "personname (class in pydicom.valuerep)": [[538, "pydicom.valuerep.PersonName", false]], "phonetic (pydicom.valuerep.personname property)": [[538, "pydicom.valuerep.PersonName.phonetic", false]], "photoacousticimagestorage (in module pydicom.uid)": [[447, "pydicom.uid.PhotoacousticImageStorage", false]], "photometric_interpretation (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.photometric_interpretation", false]], "photometric_interpretation (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.photometric_interpretation", false]], "pixel_array (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.pixel_array", false]], "pixel_array (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.pixel_array", false]], "pixel_array (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.pixel_array", false]], "pixel_array() (in module pydicom.pixels)": [[257, "pydicom.pixels.pixel_array", false]], "pixel_array() (in module pydicom.pixels.utils)": [[280, "pydicom.pixels.utils.pixel_array", false]], "pixel_array_options() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.pixel_array_options", false]], "pixel_array_options() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.pixel_array_options", false]], "pixel_array_options() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.pixel_array_options", false]], "pixel_data_handlers (in module pydicom.config)": [[97, "pydicom.config.pixel_data_handlers", false]], "pixel_dtype (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.pixel_dtype", false]], "pixel_dtype() (in module pydicom.pixels.utils)": [[281, "pydicom.pixels.utils.pixel_dtype", false]], "pixel_keyword (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.pixel_keyword", false]], "pixel_keyword (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.pixel_keyword", false]], "pixel_properties() (pydicom.pixels.decoders.base.decoderunner method)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.pixel_properties", false]], "pixel_representation (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.pixel_representation", false]], "pixel_representation (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.pixel_representation", false]], "planar_configuration (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.planar_configuration", false]], "planar_configuration (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.planar_configuration", false]], "plannedimagingagentadministrationsrstorage (in module pydicom.uid)": [[448, "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", false]], "pop() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.pop", false]], "pop() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.pop", false]], "pop() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.pop", false]], "pop() (pydicom.multival.multivalue method)": [[207, "pydicom.multival.MultiValue.pop", false]], "pop() (pydicom.sequence.sequence method)": [[285, "pydicom.sequence.Sequence.pop", false]], "popitem() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.popitem", false]], "popitem() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.popitem", false]], "popitem() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.popitem", false]], "positronemissiontomographyimagestorage (in module pydicom.uid)": [[449, "pydicom.uid.PositronEmissionTomographyImageStorage", false]], "preamble (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.preamble", false]], "prettify() (pydicom.fileset.recordnode method)": [[175, "pydicom.fileset.RecordNode.prettify", false]], "previous (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.previous", false]], "private_block() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.private_block", false]], "private_block() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.private_block", false]], "private_block() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.private_block", false]], "private_creator (pydicom.dataset.privateblock attribute)": [[134, "pydicom.dataset.PrivateBlock.private_creator", false]], "private_creator (pydicom.tag.basetag property)": [[289, "pydicom.tag.BaseTag.private_creator", false]], "private_creators() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.private_creators", false]], "private_creators() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.private_creators", false]], "private_creators() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.private_creators", false]], "private_dictionary_description() (in module pydicom.datadict)": [[124, "pydicom.datadict.private_dictionary_description", false]], "private_dictionary_vm() (in module pydicom.datadict)": [[122, "pydicom.datadict.private_dictionary_VM", false]], "private_dictionary_vr() (in module pydicom.datadict)": [[123, "pydicom.datadict.private_dictionary_VR", false]], "privateblock (class in pydicom.dataset)": [[134, "pydicom.dataset.PrivateBlock", false]], "privatetransfersyntaxes (in module pydicom.uid)": [[450, "pydicom.uid.PrivateTransferSyntaxes", false]], "procedurelogstorage (in module pydicom.uid)": [[451, "pydicom.uid.ProcedureLogStorage", false]], "process() (pydicom.pixels.decoders.base.decoderunner method)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.process", false]], "protocolapprovalstorage (in module pydicom.uid)": [[452, "pydicom.uid.ProtocolApprovalStorage", false]], "pseudocolorsoftcopypresentationstatestorage (in module pydicom.uid)": [[453, "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", false]], "pydicom": [[567, "module-pydicom", false]], "pydicom.encaps": [[67, "module-pydicom.encaps", false]], "pydicom.examples": [[69, "module-pydicom.examples", false]], "pydicom.overlays": [[569, "module-pydicom.overlays", false]], "pydicom.overlays.numpy_handler": [[208, "module-pydicom.overlays.numpy_handler", false]], "pydicom.pixel_data_handlers": [[566, "module-pydicom.pixel_data_handlers", false]], "pydicom.pixel_data_handlers.gdcm_handler": [[209, "module-pydicom.pixel_data_handlers.gdcm_handler", false]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[210, "module-pydicom.pixel_data_handlers.jpeg_ls_handler", false]], "pydicom.pixel_data_handlers.numpy_handler": [[211, "module-pydicom.pixel_data_handlers.numpy_handler", false]], "pydicom.pixel_data_handlers.pillow_handler": [[212, "module-pydicom.pixel_data_handlers.pillow_handler", false]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[213, "module-pydicom.pixel_data_handlers.pylibjpeg_handler", false]], "pydicom.pixel_data_handlers.rle_handler": [[214, "module-pydicom.pixel_data_handlers.rle_handler", false]], "pydicom.pixels": [[570, "module-pydicom.pixels", false]], "pydicom.pixels.decoders": [[571, "module-pydicom.pixels.decoders", false]], "pydicom.pixels.encoders": [[572, "module-pydicom.pixels.encoders", false]], "pydicom.pixels.processing": [[573, "module-pydicom.pixels.processing", false]], "pydicom.pixels.utils": [[574, "module-pydicom.pixels.utils", false]], "pydicom.sr": [[575, "module-pydicom.sr", false]], "pydicom.uid": [[576, "module-pydicom.uid", false]], "pydicom.waveforms": [[577, "module-pydicom.waveforms", false]], "pydicom.waveforms.numpy_handler": [[564, "module-pydicom.waveforms.numpy_handler", false]], "pydicom_implementation_uid (in module pydicom.uid)": [[442, "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", false]], "pydicom_root_uid (in module pydicom.uid)": [[443, "pydicom.uid.PYDICOM_ROOT_UID", false]], "quantize() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.quantize", false]], "radiopharmaceuticalradiationdosesrstorage (in module pydicom.uid)": [[477, "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", false]], "radix() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.radix", false]], "raise (in module pydicom.config)": [[86, "pydicom.config.RAISE", false]], "rawdataelement (class in pydicom.dataelem)": [[130, "pydicom.dataelem.RawDataElement", false]], "rawdatastorage (in module pydicom.uid)": [[478, "pydicom.uid.RawDataStorage", false]], "re_valid_uid (in module pydicom.uid)": [[454, "pydicom.uid.RE_VALID_UID", false]], "re_valid_uid_prefix (in module pydicom.uid)": [[455, "pydicom.uid.RE_VALID_UID_PREFIX", false]], "read() (pydicom.encaps.encapsulatedbuffer method)": [[67, "pydicom.encaps.EncapsulatedBuffer.read", false]], "read() (pydicom.filebase.dicombytesio method)": [[158, "pydicom.filebase.DicomBytesIO.read", false]], "read() (pydicom.filebase.dicomfilelike method)": [[160, "pydicom.filebase.DicomFileLike.read", false]], "read() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.read", false]], "read_dataset() (in module pydicom.filereader)": [[165, "pydicom.filereader.read_dataset", false]], "read_deferred_data_element() (in module pydicom.filereader)": [[166, "pydicom.filereader.read_deferred_data_element", false]], "read_encoding (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.read_encoding", false]], "read_encoding (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.read_encoding", false]], "read_encoding (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.read_encoding", false]], "read_exact() (pydicom.filebase.dicombytesio method)": [[158, "pydicom.filebase.DicomBytesIO.read_exact", false]], "read_exact() (pydicom.filebase.dicomfilelike method)": [[160, "pydicom.filebase.DicomFileLike.read_exact", false]], "read_exact() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.read_exact", false]], "read_file_meta_info() (in module pydicom.filereader)": [[167, "pydicom.filereader.read_file_meta_info", false]], "read_implicit_vr (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.read_implicit_vr", false]], "read_implicit_vr (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.read_implicit_vr", false]], "read_implicit_vr (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.read_implicit_vr", false]], "read_item() (in module pydicom.encaps)": [[155, "pydicom.encaps.read_item", false]], "read_little_endian (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.read_little_endian", false]], "read_little_endian (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.read_little_endian", false]], "read_little_endian (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.read_little_endian", false]], "read_partial() (in module pydicom.filereader)": [[168, "pydicom.filereader.read_partial", false]], "read_preamble() (in module pydicom.filereader)": [[169, "pydicom.filereader.read_preamble", false]], "read_sequence() (in module pydicom.filereader)": [[170, "pydicom.filereader.read_sequence", false]], "read_sequence_item() (in module pydicom.filereader)": [[171, "pydicom.filereader.read_sequence_item", false]], "read_tag() (pydicom.filebase.dicombytesio method)": [[158, "pydicom.filebase.DicomBytesIO.read_tag", false]], "read_tag() (pydicom.filebase.dicomfilelike method)": [[160, "pydicom.filebase.DicomFileLike.read_tag", false]], "read_tag() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.read_tag", false]], "read_ul() (pydicom.filebase.dicombytesio method)": [[158, "pydicom.filebase.DicomBytesIO.read_UL", false]], "read_ul() (pydicom.filebase.dicomfilelike method)": [[160, "pydicom.filebase.DicomFileLike.read_UL", false]], "read_ul() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.read_UL", false]], "read_undefined_length_value() (in module pydicom.fileutil)": [[182, "pydicom.fileutil.read_undefined_length_value", false]], "read_us() (pydicom.filebase.dicombytesio method)": [[158, "pydicom.filebase.DicomBytesIO.read_US", false]], "read_us() (pydicom.filebase.dicomfilelike method)": [[160, "pydicom.filebase.DicomFileLike.read_US", false]], "read_us() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.read_US", false]], "readable() (pydicom.encaps.encapsulatedbuffer method)": [[67, "pydicom.encaps.EncapsulatedBuffer.readable", false]], "reading_validation_mode (pydicom.config.settings property)": [[56, "pydicom.config.Settings.reading_validation_mode", false]], "real (pydicom.tag.basetag attribute)": [[289, "pydicom.tag.BaseTag.real", false]], "real (pydicom.valuerep.dsfloat attribute)": [[534, "pydicom.valuerep.DSfloat.real", false]], "real (pydicom.valuerep.is attribute)": [[536, "pydicom.valuerep.IS.real", false]], "real (pydicom.valuerep.isfloat attribute)": [[537, "pydicom.valuerep.ISfloat.real", false]], "realworldvaluemappingstorage (in module pydicom.uid)": [[479, "pydicom.uid.RealWorldValueMappingStorage", false]], "record_type (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.record_type", false]], "recordnode (class in pydicom.fileset)": [[175, "pydicom.fileset.RecordNode", false]], "register_transfer_syntax() (in module pydicom.uid)": [[530, "pydicom.uid.register_transfer_syntax", false]], "remainder_near() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.remainder_near", false]], "remove() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.remove", false]], "remove() (pydicom.fileset.recordnode method)": [[175, "pydicom.fileset.RecordNode.remove", false]], "remove() (pydicom.multival.multivalue method)": [[207, "pydicom.multival.MultiValue.remove", false]], "remove() (pydicom.sequence.sequence method)": [[285, "pydicom.sequence.Sequence.remove", false]], "remove_plugin() (pydicom.pixels.decoders.base.decoder method)": [[244, "pydicom.pixels.decoders.base.Decoder.remove_plugin", false]], "remove_plugin() (pydicom.pixels.encoders.base.encoder method)": [[252, "pydicom.pixels.encoders.base.Encoder.remove_plugin", false]], "remove_private_tags() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.remove_private_tags", false]], "remove_private_tags() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.remove_private_tags", false]], "remove_private_tags() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.remove_private_tags", false]], "removeprefix() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.removeprefix", false]], "removeprefix() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.removeprefix", false]], "removesuffix() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.removesuffix", false]], "removesuffix() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.removesuffix", false]], "repeater_has_keyword() (in module pydicom.datadict)": [[125, "pydicom.datadict.repeater_has_keyword", false]], "repeater_has_tag() (in module pydicom.datadict)": [[126, "pydicom.datadict.repeater_has_tag", false]], "replace() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.replace", false]], "replace() (pydicom.valuerep.da method)": [[531, "pydicom.valuerep.DA.replace", false]], "replace() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.replace", false]], "replace() (pydicom.valuerep.tm method)": [[539, "pydicom.valuerep.TM.replace", false]], "replace() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.replace", false]], "repval (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.repval", false]], "reset_data_element_callback() (in module pydicom.config)": [[98, "pydicom.config.reset_data_element_callback", false]], "reshape() (pydicom.pixels.decoders.base.decoderunner method)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.reshape", false]], "reshape_overlay_array() (in module pydicom.overlays.numpy_handler)": [[208, "pydicom.overlays.numpy_handler.reshape_overlay_array", false]], "reshape_pixel_array() (in module pydicom.pixels.utils)": [[282, "pydicom.pixels.utils.reshape_pixel_array", false]], "respiratorywaveformstorage (in module pydicom.uid)": [[480, "pydicom.uid.RespiratoryWaveformStorage", false]], "reverse() (pydicom.fileset.recordnode method)": [[175, "pydicom.fileset.RecordNode.reverse", false]], "reverse() (pydicom.multival.multivalue method)": [[207, "pydicom.multival.MultiValue.reverse", false]], "reverse() (pydicom.sequence.sequence method)": [[285, "pydicom.sequence.Sequence.reverse", false]], "rfind() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.rfind", false]], "rfind() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.rfind", false]], "rindex() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.rindex", false]], "rindex() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.rindex", false]], "rjust() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.rjust", false]], "rjust() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.rjust", false]], "rlelossless (in module pydicom.uid)": [[456, "pydicom.uid.RLELossless", false]], "rlelosslessdecoder (in module pydicom.pixels.decoders)": [[242, "pydicom.pixels.decoders.RLELosslessDecoder", false]], "rlelosslessencoder (in module pydicom.pixels.encoders)": [[250, "pydicom.pixels.encoders.RLELosslessEncoder", false]], "rletransfersyntaxes (in module pydicom.uid)": [[457, "pydicom.uid.RLETransferSyntaxes", false]], "roboticarmradiationstorage (in module pydicom.uid)": [[481, "pydicom.uid.RoboticArmRadiationStorage", false]], "roboticradiationrecordstorage (in module pydicom.uid)": [[482, "pydicom.uid.RoboticRadiationRecordStorage", false]], "root (pydicom.fileset.recordnode property)": [[175, "pydicom.fileset.RecordNode.root", false]], "rotate() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.rotate", false]], "routinescalpelectroencephalogramwaveformstorage (in module pydicom.uid)": [[483, "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", false]], "rows (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.rows", false]], "rows (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.rows", false]], "rpartition() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.rpartition", false]], "rpartition() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.rpartition", false]], "rsplit() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.rsplit", false]], "rsplit() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.rsplit", false]], "rstrip() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.rstrip", false]], "rstrip() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.rstrip", false]], "rtbeamsdeliveryinstructionstorage (in module pydicom.uid)": [[458, "pydicom.uid.RTBeamsDeliveryInstructionStorage", false]], "rtbeamstreatmentrecordstorage (in module pydicom.uid)": [[459, "pydicom.uid.RTBeamsTreatmentRecordStorage", false]], "rtbrachyapplicationsetupdeliveryinstructionstorage (in module pydicom.uid)": [[460, "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", false]], "rtbrachytreatmentrecordstorage (in module pydicom.uid)": [[461, "pydicom.uid.RTBrachyTreatmentRecordStorage", false]], "rtdosestorage (in module pydicom.uid)": [[462, "pydicom.uid.RTDoseStorage", false]], "rtimagestorage (in module pydicom.uid)": [[463, "pydicom.uid.RTImageStorage", false]], "rtionbeamstreatmentrecordstorage (in module pydicom.uid)": [[464, "pydicom.uid.RTIonBeamsTreatmentRecordStorage", false]], "rtionplanstorage (in module pydicom.uid)": [[465, "pydicom.uid.RTIonPlanStorage", false]], "rtpatientpositionacquisitioninstructionstorage (in module pydicom.uid)": [[466, "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", false]], "rtphysicianintentstorage (in module pydicom.uid)": [[467, "pydicom.uid.RTPhysicianIntentStorage", false]], "rtplanstorage (in module pydicom.uid)": [[468, "pydicom.uid.RTPlanStorage", false]], "rtradiationrecordsetstorage (in module pydicom.uid)": [[469, "pydicom.uid.RTRadiationRecordSetStorage", false]], "rtradiationsalvagerecordstorage (in module pydicom.uid)": [[470, "pydicom.uid.RTRadiationSalvageRecordStorage", false]], "rtradiationsetdeliveryinstructionstorage (in module pydicom.uid)": [[471, "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", false]], "rtradiationsetstorage (in module pydicom.uid)": [[472, "pydicom.uid.RTRadiationSetStorage", false]], "rtsegmentannotationstorage (in module pydicom.uid)": [[473, "pydicom.uid.RTSegmentAnnotationStorage", false]], "rtstructuresetstorage (in module pydicom.uid)": [[474, "pydicom.uid.RTStructureSetStorage", false]], "rttreatmentpreparationstorage (in module pydicom.uid)": [[475, "pydicom.uid.RTTreatmentPreparationStorage", false]], "rttreatmentsummaryrecordstorage (in module pydicom.uid)": [[476, "pydicom.uid.RTTreatmentSummaryRecordStorage", false]], "same_quantum() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.same_quantum", false]], "samples_per_pixel (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.samples_per_pixel", false]], "samples_per_pixel (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.samples_per_pixel", false]], "save_as() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.save_as", false]], "save_as() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.save_as", false]], "save_as() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.save_as", false]], "scaleb() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.scaleb", false]], "scheme_designator (pydicom.sr.code attribute)": [[286, "pydicom.sr.Code.scheme_designator", false]], "scheme_designator (pydicom.sr.collection property)": [[287, "pydicom.sr.Collection.scheme_designator", false]], "scheme_version (pydicom.sr.code attribute)": [[286, "pydicom.sr.Code.scheme_version", false]], "schemes() (pydicom.sr.concepts method)": [[288, "pydicom.sr.Concepts.schemes", false]], "secondarycaptureimagestorage (in module pydicom.uid)": [[487, "pydicom.uid.SecondaryCaptureImageStorage", false]], "seek() (pydicom.encaps.encapsulatedbuffer method)": [[67, "pydicom.encaps.EncapsulatedBuffer.seek", false]], "seek() (pydicom.filebase.dicombytesio method)": [[158, "pydicom.filebase.DicomBytesIO.seek", false]], "seek() (pydicom.filebase.dicomfilelike method)": [[160, "pydicom.filebase.DicomFileLike.seek", false]], "seek() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.seek", false]], "seekable() (pydicom.encaps.encapsulatedbuffer method)": [[67, "pydicom.encaps.EncapsulatedBuffer.seekable", false]], "segmentationstorage (in module pydicom.uid)": [[488, "pydicom.uid.SegmentationStorage", false]], "segmentedvolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[489, "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", false]], "sequence (class in pydicom.sequence)": [[285, "pydicom.sequence.Sequence", false]], "set_decoders() (pydicom.pixels.decoders.base.decoderunner method)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.set_decoders", false]], "set_encoders() (pydicom.pixels.encoders.base.encoderunner method)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.set_encoders", false]], "set_option() (pydicom.pixels.decoders.base.decoderunner method)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.set_option", false]], "set_option() (pydicom.pixels.encoders.base.encoderunner method)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.set_option", false]], "set_options() (pydicom.pixels.decoders.base.decoderunner method)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.set_options", false]], "set_options() (pydicom.pixels.encoders.base.encoderunner method)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.set_options", false]], "set_original_encoding() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.set_original_encoding", false]], "set_original_encoding() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.set_original_encoding", false]], "set_original_encoding() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.set_original_encoding", false]], "set_pixel_data() (in module pydicom.pixels)": [[268, "pydicom.pixels.set_pixel_data", false]], "set_pixel_data() (in module pydicom.pixels.utils)": [[283, "pydicom.pixels.utils.set_pixel_data", false]], "set_pixel_data() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.set_pixel_data", false]], "set_pixel_data() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.set_pixel_data", false]], "set_pixel_data() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.set_pixel_data", false]], "set_private_encoding() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.set_private_encoding", false]], "set_source() (pydicom.pixels.decoders.base.decoderunner method)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.set_source", false]], "set_source() (pydicom.pixels.encoders.base.encoderunner method)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.set_source", false]], "setdefault() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.setdefault", false]], "setdefault() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.setdefault", false]], "setdefault() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.setdefault", false]], "settings (class in pydicom.config)": [[56, "pydicom.config.Settings", false]], "settings (in module pydicom.config)": [[99, "pydicom.config.settings", false]], "shift() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.shift", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[209, "pydicom.pixel_data_handlers.gdcm_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[210, "pydicom.pixel_data_handlers.jpeg_ls_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[211, "pydicom.pixel_data_handlers.numpy_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[212, "pydicom.pixel_data_handlers.pillow_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[213, "pydicom.pixel_data_handlers.pylibjpeg_handler.should_change_PhotometricInterpretation_to_RGB", false]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[214, "pydicom.pixel_data_handlers.rle_handler.should_change_PhotometricInterpretation_to_RGB", false]], "show_file_meta (in module pydicom.config)": [[100, "pydicom.config.show_file_meta", false]], "showvr (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.showVR", false]], "simplifiedadultechosrstorage (in module pydicom.uid)": [[490, "pydicom.uid.SimplifiedAdultEchoSRStorage", false]], "size_in_bytes() (in module pydicom.misc)": [[206, "pydicom.misc.size_in_bytes", false]], "sleepelectroencephalogramwaveformstorage (in module pydicom.uid)": [[491, "pydicom.uid.SleepElectroencephalogramWaveformStorage", false]], "smptest211020uncompressedinterlacedactivevideo (in module pydicom.uid)": [[484, "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", false]], "smptest211020uncompressedprogressiveactivevideo (in module pydicom.uid)": [[485, "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", false]], "smptest211030pcmdigitalaudio (in module pydicom.uid)": [[486, "pydicom.uid.SMPTEST211030PCMDigitalAudio", false]], "sopclassuid (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.SOPClassUID", false]], "sopinstanceuid (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.SOPInstanceUID", false]], "spatialfiducialsstorage (in module pydicom.uid)": [[492, "pydicom.uid.SpatialFiducialsStorage", false]], "spatialregistrationstorage (in module pydicom.uid)": [[493, "pydicom.uid.SpatialRegistrationStorage", false]], "spectacleprescriptionreportstorage (in module pydicom.uid)": [[494, "pydicom.uid.SpectaclePrescriptionReportStorage", false]], "split() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.split", false]], "split() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.split", false]], "splitlines() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.splitlines", false]], "splitlines() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.splitlines", false]], "sqrt() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.sqrt", false]], "src (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.src", false]], "src (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.src", false]], "startswith() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.startswith", false]], "startswith() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.startswith", false]], "stereometricrelationshipstorage (in module pydicom.uid)": [[495, "pydicom.uid.StereometricRelationshipStorage", false]], "strftime() (pydicom.valuerep.da method)": [[531, "pydicom.valuerep.DA.strftime", false]], "strftime() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.strftime", false]], "strftime() (pydicom.valuerep.tm method)": [[539, "pydicom.valuerep.TM.strftime", false]], "strip() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.strip", false]], "strip() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.strip", false]], "strptime() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.strptime", false]], "subjectiverefractionmeasurementsstorage (in module pydicom.uid)": [[496, "pydicom.uid.SubjectiveRefractionMeasurementsStorage", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[209, "pydicom.pixel_data_handlers.gdcm_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[210, "pydicom.pixel_data_handlers.jpeg_ls_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.numpy_handler)": [[211, "pydicom.pixel_data_handlers.numpy_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pillow_handler)": [[212, "pydicom.pixel_data_handlers.pillow_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[213, "pydicom.pixel_data_handlers.pylibjpeg_handler.supports_transfer_syntax", false]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.rle_handler)": [[214, "pydicom.pixel_data_handlers.rle_handler.supports_transfer_syntax", false]], "surfacescanmeshstorage (in module pydicom.uid)": [[497, "pydicom.uid.SurfaceScanMeshStorage", false]], "surfacescanpointcloudstorage (in module pydicom.uid)": [[498, "pydicom.uid.SurfaceScanPointCloudStorage", false]], "surfacesegmentationstorage (in module pydicom.uid)": [[499, "pydicom.uid.SurfaceSegmentationStorage", false]], "swapcase() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.swapcase", false]], "swapcase() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.swapcase", false]], "tag (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.tag", false]], "tag (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.tag", false]], "tag() (in module pydicom.tag)": [[290, "pydicom.tag.Tag", false]], "tag_for_keyword() (in module pydicom.datadict)": [[127, "pydicom.datadict.tag_for_keyword", false]], "tag_in_exception() (in module pydicom.tag)": [[292, "pydicom.tag.tag_in_exception", false]], "tell() (pydicom.encaps.encapsulatedbuffer method)": [[67, "pydicom.encaps.EncapsulatedBuffer.tell", false]], "tell() (pydicom.filebase.dicombytesio method)": [[158, "pydicom.filebase.DicomBytesIO.tell", false]], "tell() (pydicom.filebase.dicomfilelike method)": [[160, "pydicom.filebase.DicomFileLike.tell", false]], "tell() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.tell", false]], "time() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.time", false]], "timestamp (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.timestamp", false]], "timestamp() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.timestamp", false]], "timetuple() (pydicom.valuerep.da method)": [[531, "pydicom.valuerep.DA.timetuple", false]], "timetuple() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.timetuple", false]], "timetz() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.timetz", false]], "title() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.title", false]], "title() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.title", false]], "tm (class in pydicom.valuerep)": [[539, "pydicom.valuerep.TM", false]], "to_bytes() (pydicom.tag.basetag method)": [[289, "pydicom.tag.BaseTag.to_bytes", false]], "to_bytes() (pydicom.valuerep.is method)": [[536, "pydicom.valuerep.IS.to_bytes", false]], "to_eng_string() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.to_eng_string", false]], "to_integral() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.to_integral", false]], "to_integral_exact() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.to_integral_exact", false]], "to_integral_value() (pydicom.valuerep.dsdecimal method)": [[533, "pydicom.valuerep.DSdecimal.to_integral_value", false]], "to_json() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.to_json", false]], "to_json() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.to_json", false]], "to_json() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.to_json", false]], "to_json() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.to_json", false]], "to_json_dict() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.to_json_dict", false]], "to_json_dict() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.to_json_dict", false]], "to_json_dict() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.to_json_dict", false]], "to_json_dict() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.to_json_dict", false]], "today() (pydicom.valuerep.da method)": [[531, "pydicom.valuerep.DA.today", false]], "today() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.today", false]], "tomotherapeuticradiationrecordstorage (in module pydicom.uid)": [[500, "pydicom.uid.TomotherapeuticRadiationRecordStorage", false]], "tomotherapeuticradiationstorage (in module pydicom.uid)": [[501, "pydicom.uid.TomotherapeuticRadiationStorage", false]], "toordinal() (pydicom.valuerep.da method)": [[531, "pydicom.valuerep.DA.toordinal", false]], "toordinal() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.toordinal", false]], "top() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.top", false]], "top() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.top", false]], "top() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.top", false]], "tractographyresultsstorage (in module pydicom.uid)": [[502, "pydicom.uid.TractographyResultsStorage", false]], "trait_names() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.trait_names", false]], "trait_names() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.trait_names", false]], "trait_names() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.trait_names", false]], "trait_names() (pydicom.sr.collection method)": [[287, "pydicom.sr.Collection.trait_names", false]], "transfer_syntax (pydicom.pixels.decoders.base.decoderunner property)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.transfer_syntax", false]], "transfer_syntax (pydicom.pixels.encoders.base.encoderunner property)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.transfer_syntax", false]], "transfersyntaxuid (pydicom.fileset.fileinstance property)": [[173, "pydicom.fileset.FileInstance.TransferSyntaxUID", false]], "translate() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.translate", false]], "translate() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.translate", false]], "tupletag() (in module pydicom.tag)": [[291, "pydicom.tag.TupleTag", false]], "twelveleadecgwaveformstorage (in module pydicom.uid)": [[503, "pydicom.uid.TwelveLeadECGWaveformStorage", false]], "type (pydicom.uid.uid property)": [[504, "pydicom.uid.UID.type", false]], "tzname() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.tzname", false]], "tzname() (pydicom.valuerep.tm method)": [[539, "pydicom.valuerep.TM.tzname", false]], "uid (class in pydicom.uid)": [[504, "pydicom.uid.UID", false]], "uid (pydicom.fileset.fileset property)": [[174, "pydicom.fileset.FileSet.UID", false]], "uid (pydicom.pixels.decoders.base.decoder property)": [[244, "pydicom.pixels.decoders.base.Decoder.UID", false]], "uid (pydicom.pixels.encoders.base.encoder property)": [[252, "pydicom.pixels.encoders.base.Encoder.UID", false]], "ultrasoundimagestorage (in module pydicom.uid)": [[505, "pydicom.uid.UltrasoundImageStorage", false]], "ultrasoundmultiframeimagestorage (in module pydicom.uid)": [[506, "pydicom.uid.UltrasoundMultiFrameImageStorage", false]], "uncompressedtransfersyntaxes (in module pydicom.uid)": [[507, "pydicom.uid.UncompressedTransferSyntaxes", false]], "unpack_bits() (in module pydicom.pixels)": [[269, "pydicom.pixels.unpack_bits", false]], "unpack_bits() (in module pydicom.pixels.utils)": [[284, "pydicom.pixels.utils.unpack_bits", false]], "update() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.update", false]], "update() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.update", false]], "update() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.update", false]], "update_raw_element() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.update_raw_element", false]], "update_raw_element() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.update_raw_element", false]], "update_raw_element() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.update_raw_element", false]], "upper() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.upper", false]], "upper() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.upper", false]], "use_ds_decimal (in module pydicom.config)": [[101, "pydicom.config.use_DS_decimal", false]], "use_ds_numpy (in module pydicom.config)": [[102, "pydicom.config.use_DS_numpy", false]], "use_is_numpy (in module pydicom.config)": [[103, "pydicom.config.use_IS_numpy", false]], "utcfromtimestamp() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.utcfromtimestamp", false]], "utcnow() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.utcnow", false]], "utcoffset() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.utcoffset", false]], "utcoffset() (pydicom.valuerep.tm method)": [[539, "pydicom.valuerep.TM.utcoffset", false]], "utctimetuple() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.utctimetuple", false]], "validate() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.validate", false]], "validate() (pydicom.dataset.filemetadataset static method)": [[133, "pydicom.dataset.FileMetaDataset.validate", false]], "validate() (pydicom.pixels.decoders.base.decoderunner method)": [[243, "pydicom.pixels.decoders.base.DecodeRunner.validate", false]], "validate() (pydicom.pixels.encoders.base.encoderunner method)": [[251, "pydicom.pixels.encoders.base.EncodeRunner.validate", false]], "validate_file_meta() (in module pydicom.dataset)": [[135, "pydicom.dataset.validate_file_meta", false]], "validation_mode (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.validation_mode", false]], "value (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.value", false]], "value (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.value", false]], "value (pydicom.sr.code attribute)": [[286, "pydicom.sr.Code.value", false]], "value_tell (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.value_tell", false]], "values() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.values", false]], "values() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.values", false]], "values() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.values", false]], "variablemodalitylutsoftcopypresentationstatestorage (in module pydicom.uid)": [[513, "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", false]], "videoendoscopicimagestorage (in module pydicom.uid)": [[514, "pydicom.uid.VideoEndoscopicImageStorage", false]], "videomicroscopicimagestorage (in module pydicom.uid)": [[515, "pydicom.uid.VideoMicroscopicImageStorage", false]], "videophotographicimagestorage (in module pydicom.uid)": [[516, "pydicom.uid.VideoPhotographicImageStorage", false]], "visualacuitymeasurementsstorage (in module pydicom.uid)": [[517, "pydicom.uid.VisualAcuityMeasurementsStorage", false]], "vlendoscopicimagestorage (in module pydicom.uid)": [[508, "pydicom.uid.VLEndoscopicImageStorage", false]], "vlmicroscopicimagestorage (in module pydicom.uid)": [[509, "pydicom.uid.VLMicroscopicImageStorage", false]], "vlphotographicimagestorage (in module pydicom.uid)": [[510, "pydicom.uid.VLPhotographicImageStorage", false]], "vlslidecoordinatesmicroscopicimagestorage (in module pydicom.uid)": [[511, "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", false]], "vlwholeslidemicroscopyimagestorage (in module pydicom.uid)": [[512, "pydicom.uid.VLWholeSlideMicroscopyImageStorage", false]], "vm (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.VM", false]], "volumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[518, "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", false]], "vr (class in pydicom.valuerep)": [[540, "pydicom.valuerep.VR", false]], "vr (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.VR", false]], "vr (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.VR", false]], "walk() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.walk", false]], "walk() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.walk", false]], "walk() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.walk", false]], "warn (in module pydicom.config)": [[87, "pydicom.config.WARN", false]], "waveform_array() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.waveform_array", false]], "waveform_array() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.waveform_array", false]], "waveform_array() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.waveform_array", false]], "weekday() (pydicom.valuerep.da method)": [[531, "pydicom.valuerep.DA.weekday", false]], "weekday() (pydicom.valuerep.dt method)": [[535, "pydicom.valuerep.DT.weekday", false]], "widefieldophthalmicphotography3dcoordinatesimagestorage (in module pydicom.uid)": [[519, "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", false]], "widefieldophthalmicphotographystereographicprojectionimagestorage (in module pydicom.uid)": [[520, "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", false]], "with_traceback() (pydicom.errors.invaliddicomerror method)": [[156, "pydicom.errors.InvalidDicomError.with_traceback", false]], "write() (pydicom.filebase.dicombytesio method)": [[158, "pydicom.filebase.DicomBytesIO.write", false]], "write() (pydicom.filebase.dicomfilelike method)": [[160, "pydicom.filebase.DicomFileLike.write", false]], "write() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.write", false]], "write() (pydicom.fileset.fileset method)": [[174, "pydicom.fileset.FileSet.write", false]], "write_atvalue() (in module pydicom.filewriter)": [[187, "pydicom.filewriter.write_ATvalue", false]], "write_da() (in module pydicom.filewriter)": [[188, "pydicom.filewriter.write_DA", false]], "write_data_element() (in module pydicom.filewriter)": [[196, "pydicom.filewriter.write_data_element", false]], "write_dataset() (in module pydicom.filewriter)": [[197, "pydicom.filewriter.write_dataset", false]], "write_dt() (in module pydicom.filewriter)": [[189, "pydicom.filewriter.write_DT", false]], "write_file_meta_info() (in module pydicom.filewriter)": [[198, "pydicom.filewriter.write_file_meta_info", false]], "write_number_string() (in module pydicom.filewriter)": [[199, "pydicom.filewriter.write_number_string", false]], "write_numbers() (in module pydicom.filewriter)": [[200, "pydicom.filewriter.write_numbers", false]], "write_obvalue() (in module pydicom.filewriter)": [[190, "pydicom.filewriter.write_OBvalue", false]], "write_owvalue() (in module pydicom.filewriter)": [[191, "pydicom.filewriter.write_OWvalue", false]], "write_pn() (in module pydicom.filewriter)": [[192, "pydicom.filewriter.write_PN", false]], "write_sequence() (in module pydicom.filewriter)": [[201, "pydicom.filewriter.write_sequence", false]], "write_sequence_item() (in module pydicom.filewriter)": [[202, "pydicom.filewriter.write_sequence_item", false]], "write_string() (in module pydicom.filewriter)": [[203, "pydicom.filewriter.write_string", false]], "write_tag() (pydicom.filebase.dicombytesio method)": [[158, "pydicom.filebase.DicomBytesIO.write_tag", false]], "write_tag() (pydicom.filebase.dicomfilelike method)": [[160, "pydicom.filebase.DicomFileLike.write_tag", false]], "write_tag() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.write_tag", false]], "write_text() (in module pydicom.filewriter)": [[204, "pydicom.filewriter.write_text", false]], "write_tm() (in module pydicom.filewriter)": [[193, "pydicom.filewriter.write_TM", false]], "write_ui() (in module pydicom.filewriter)": [[194, "pydicom.filewriter.write_UI", false]], "write_ul() (pydicom.filebase.dicombytesio method)": [[158, "pydicom.filebase.DicomBytesIO.write_UL", false]], "write_ul() (pydicom.filebase.dicomfilelike method)": [[160, "pydicom.filebase.DicomFileLike.write_UL", false]], "write_ul() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.write_UL", false]], "write_un() (in module pydicom.filewriter)": [[195, "pydicom.filewriter.write_UN", false]], "write_us() (pydicom.filebase.dicombytesio method)": [[158, "pydicom.filebase.DicomBytesIO.write_US", false]], "write_us() (pydicom.filebase.dicomfilelike method)": [[160, "pydicom.filebase.DicomFileLike.write_US", false]], "write_us() (pydicom.filebase.dicomio method)": [[161, "pydicom.filebase.DicomIO.write_US", false]], "writing_validation_mode (pydicom.config.settings property)": [[56, "pydicom.config.Settings.writing_validation_mode", false]], "xadefinedprocedureprotocolstorage (in module pydicom.uid)": [[521, "pydicom.uid.XADefinedProcedureProtocolStorage", false]], "xaperformedprocedureprotocolstorage (in module pydicom.uid)": [[522, "pydicom.uid.XAPerformedProcedureProtocolStorage", false]], "xaxrfgrayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[523, "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", false]], "xray3dangiographicimagestorage (in module pydicom.uid)": [[524, "pydicom.uid.XRay3DAngiographicImageStorage", false]], "xray3dcraniofacialimagestorage (in module pydicom.uid)": [[525, "pydicom.uid.XRay3DCraniofacialImageStorage", false]], "xrayangiographicimagestorage (in module pydicom.uid)": [[526, "pydicom.uid.XRayAngiographicImageStorage", false]], "xrayradiationdosesrstorage (in module pydicom.uid)": [[527, "pydicom.uid.XRayRadiationDoseSRStorage", false]], "xrayradiofluoroscopicimagestorage (in module pydicom.uid)": [[528, "pydicom.uid.XRayRadiofluoroscopicImageStorage", false]], "zfill() (pydicom.uid.uid method)": [[504, "pydicom.uid.UID.zfill", false]], "zfill() (pydicom.valuerep.vr method)": [[540, "pydicom.valuerep.VR.zfill", false]]}, "objects": {"": [[567, 0, 0, "-", "pydicom"]], "pydicom": [[67, 0, 0, "-", "encaps"], [69, 0, 0, "-", "examples"], [569, 0, 0, "-", "overlays"], [566, 0, 0, "-", "pixel_data_handlers"], [570, 0, 0, "-", "pixels"], [575, 0, 0, "-", "sr"], [576, 0, 0, "-", "uid"], [577, 0, 0, "-", "waveforms"]], "pydicom.charset": [[76, 1, 1, "", "convert_encodings"], [77, 1, 1, "", "decode_bytes"], [78, 1, 1, "", "decode_element"], [79, 1, 1, "", "encode_string"]], "pydicom.config": [[80, 2, 1, "", "APPLY_J2K_CORRECTIONS"], [81, 1, 1, "", "DS_decimal"], [82, 1, 1, "", "DS_numpy"], [83, 2, 1, "", "IGNORE"], [84, 2, 1, "", "INVALID_KEYWORD_BEHAVIOR"], [85, 2, 1, "", "INVALID_KEY_BEHAVIOR"], [86, 2, 1, "", "RAISE"], [56, 3, 1, "", "Settings"], [87, 2, 1, "", "WARN"], [88, 2, 1, "", "allow_DS_float"], [89, 2, 1, "", "assume_implicit_vr_switch"], [90, 2, 1, "", "convert_wrong_length_to_UN"], [91, 2, 1, "", "data_element_callback"], [92, 2, 1, "", "data_element_callback_kwargs"], [93, 2, 1, "", "datetime_conversion"], [94, 1, 1, "", "debug"], [95, 2, 1, "", "enforce_valid_values"], [96, 1, 1, "", "future_behavior"], [97, 2, 1, "", "pixel_data_handlers"], [98, 1, 1, "", "reset_data_element_callback"], [99, 2, 1, "", "settings"], [100, 2, 1, "", "show_file_meta"], [101, 2, 1, "", "use_DS_decimal"], [102, 2, 1, "", "use_DS_numpy"], [103, 2, 1, "", "use_IS_numpy"]], "pydicom.config.Settings": [[56, 4, 1, "", "buffered_read_size"], [56, 4, 1, "", "infer_sq_for_un_vr"], [56, 4, 1, "", "reading_validation_mode"], [56, 4, 1, "", "writing_validation_mode"]], "pydicom.data": [[104, 1, 1, "", "get_charset_files"], [105, 1, 1, "", "get_palette_files"], [106, 1, 1, "", "get_testdata_file"], [107, 1, 1, "", "get_testdata_files"]], "pydicom.datadict": [[108, 1, 1, "", "add_dict_entries"], [109, 1, 1, "", "add_dict_entry"], [110, 1, 1, "", "add_private_dict_entries"], [111, 1, 1, "", "add_private_dict_entry"], [112, 1, 1, "", "dictionary_VM"], [113, 1, 1, "", "dictionary_VR"], [114, 1, 1, "", "dictionary_description"], [115, 1, 1, "", "dictionary_has_tag"], [116, 1, 1, "", "dictionary_is_retired"], [117, 1, 1, "", "dictionary_keyword"], [118, 1, 1, "", "get_entry"], [119, 1, 1, "", "get_private_entry"], [120, 1, 1, "", "keyword_for_tag"], [121, 1, 1, "", "mask_match"], [122, 1, 1, "", "private_dictionary_VM"], [123, 1, 1, "", "private_dictionary_VR"], [124, 1, 1, "", "private_dictionary_description"], [125, 1, 1, "", "repeater_has_keyword"], [126, 1, 1, "", "repeater_has_tag"], [127, 1, 1, "", "tag_for_keyword"]], "pydicom.dataelem": [[128, 3, 1, "", "DataElement"], [129, 1, 1, "", "DataElement_from_raw"], [130, 3, 1, "", "RawDataElement"]], "pydicom.dataelem.DataElement": [[128, 4, 1, "", "VM"], [128, 5, 1, "", "VR"], [128, 6, 1, "", "__init__"], [128, 6, 1, "", "clear"], [128, 5, 1, "", "descripWidth"], [128, 4, 1, "", "empty_value"], [128, 6, 1, "", "from_json"], [128, 4, 1, "", "is_buffered"], [128, 4, 1, "", "is_empty"], [128, 4, 1, "", "is_private"], [128, 4, 1, "", "is_retired"], [128, 5, 1, "", "is_undefined_length"], [128, 4, 1, "", "keyword"], [128, 5, 1, "", "maxBytesToDisplay"], [128, 4, 1, "", "name"], [128, 4, 1, "", "repval"], [128, 5, 1, "", "showVR"], [128, 5, 1, "", "tag"], [128, 6, 1, "", "to_json"], [128, 6, 1, "", "to_json_dict"], [128, 6, 1, "", "validate"], [128, 5, 1, "", "validation_mode"], [128, 4, 1, "", "value"]], "pydicom.dataelem.RawDataElement": [[130, 5, 1, "", "VR"], [130, 6, 1, "", "__init__"], [130, 6, 1, "", "count"], [130, 6, 1, "", "index"], [130, 5, 1, "", "is_buffered"], [130, 5, 1, "", "is_implicit_VR"], [130, 5, 1, "", "is_little_endian"], [130, 5, 1, "", "is_raw"], [130, 5, 1, "", "length"], [130, 5, 1, "", "tag"], [130, 5, 1, "", "value"], [130, 5, 1, "", "value_tell"]], "pydicom.dataset": [[131, 3, 1, "", "Dataset"], [132, 3, 1, "", "FileDataset"], [133, 3, 1, "", "FileMetaDataset"], [134, 3, 1, "", "PrivateBlock"], [135, 1, 1, "", "validate_file_meta"]], "pydicom.dataset.Dataset": [[131, 6, 1, "", "__init__"], [131, 6, 1, "", "add"], [131, 6, 1, "", "add_new"], [131, 6, 1, "", "add_new_private"], [131, 6, 1, "", "clear"], [131, 6, 1, "", "compress"], [131, 6, 1, "", "convert_pixel_data"], [131, 6, 1, "", "copy"], [131, 6, 1, "", "data_element"], [131, 6, 1, "", "decode"], [131, 6, 1, "", "decompress"], [131, 5, 1, "", "default_element_format"], [131, 5, 1, "", "default_sequence_element_format"], [131, 6, 1, "", "dir"], [131, 6, 1, "", "elements"], [131, 6, 1, "", "ensure_file_meta"], [131, 6, 1, "", "formatted_lines"], [131, 6, 1, "", "from_json"], [131, 6, 1, "", "get"], [131, 6, 1, "", "get_item"], [131, 6, 1, "", "get_private_item"], [131, 6, 1, "", "group_dataset"], [131, 5, 1, "", "indent_chars"], [131, 4, 1, "", "is_implicit_VR"], [131, 4, 1, "", "is_little_endian"], [131, 4, 1, "", "is_original_encoding"], [131, 6, 1, "", "items"], [131, 6, 1, "", "iterall"], [131, 6, 1, "", "keys"], [131, 4, 1, "", "original_character_set"], [131, 4, 1, "", "original_encoding"], [131, 6, 1, "", "overlay_array"], [131, 4, 1, "", "pixel_array"], [131, 6, 1, "", "pixel_array_options"], [131, 6, 1, "", "pop"], [131, 6, 1, "", "popitem"], [131, 6, 1, "", "private_block"], [131, 6, 1, "", "private_creators"], [131, 4, 1, "", "read_encoding"], [131, 4, 1, "", "read_implicit_vr"], [131, 4, 1, "", "read_little_endian"], [131, 6, 1, "", "remove_private_tags"], [131, 6, 1, "", "save_as"], [131, 6, 1, "", "set_original_encoding"], [131, 6, 1, "", "set_pixel_data"], [131, 6, 1, "", "setdefault"], [131, 6, 1, "", "to_json"], [131, 6, 1, "", "to_json_dict"], [131, 6, 1, "", "top"], [131, 6, 1, "", "trait_names"], [131, 6, 1, "", "update"], [131, 6, 1, "", "update_raw_element"], [131, 6, 1, "", "values"], [131, 6, 1, "", "walk"], [131, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileDataset": [[132, 6, 1, "", "__init__"], [132, 6, 1, "", "add"], [132, 6, 1, "", "add_new"], [132, 6, 1, "", "add_new_private"], [132, 5, 1, "", "buffer"], [132, 6, 1, "", "clear"], [132, 6, 1, "", "compress"], [132, 6, 1, "", "convert_pixel_data"], [132, 6, 1, "", "copy"], [132, 6, 1, "", "data_element"], [132, 6, 1, "", "decode"], [132, 6, 1, "", "decompress"], [132, 6, 1, "", "dir"], [132, 6, 1, "", "elements"], [132, 6, 1, "", "ensure_file_meta"], [132, 5, 1, "", "file_meta"], [132, 5, 1, "", "filename"], [132, 5, 1, "", "fileobj_type"], [132, 6, 1, "", "formatted_lines"], [132, 6, 1, "", "from_json"], [132, 6, 1, "", "get"], [132, 6, 1, "", "get_item"], [132, 6, 1, "", "get_private_item"], [132, 6, 1, "", "group_dataset"], [132, 4, 1, "", "is_implicit_VR"], [132, 4, 1, "", "is_little_endian"], [132, 4, 1, "", "is_original_encoding"], [132, 6, 1, "", "items"], [132, 6, 1, "", "iterall"], [132, 6, 1, "", "keys"], [132, 4, 1, "", "original_character_set"], [132, 4, 1, "", "original_encoding"], [132, 6, 1, "", "overlay_array"], [132, 4, 1, "", "pixel_array"], [132, 6, 1, "", "pixel_array_options"], [132, 6, 1, "", "pop"], [132, 6, 1, "", "popitem"], [132, 5, 1, "", "preamble"], [132, 6, 1, "", "private_block"], [132, 6, 1, "", "private_creators"], [132, 4, 1, "", "read_encoding"], [132, 4, 1, "", "read_implicit_vr"], [132, 4, 1, "", "read_little_endian"], [132, 6, 1, "", "remove_private_tags"], [132, 6, 1, "", "save_as"], [132, 6, 1, "", "set_original_encoding"], [132, 6, 1, "", "set_pixel_data"], [132, 6, 1, "", "setdefault"], [132, 5, 1, "", "timestamp"], [132, 6, 1, "", "to_json"], [132, 6, 1, "", "to_json_dict"], [132, 6, 1, "", "top"], [132, 6, 1, "", "trait_names"], [132, 6, 1, "", "update"], [132, 6, 1, "", "update_raw_element"], [132, 6, 1, "", "values"], [132, 6, 1, "", "walk"], [132, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileMetaDataset": [[133, 6, 1, "", "__init__"], [133, 6, 1, "", "add"], [133, 6, 1, "", "add_new"], [133, 6, 1, "", "add_new_private"], [133, 6, 1, "", "clear"], [133, 6, 1, "", "compress"], [133, 6, 1, "", "convert_pixel_data"], [133, 6, 1, "", "copy"], [133, 6, 1, "", "data_element"], [133, 6, 1, "", "decode"], [133, 6, 1, "", "decompress"], [133, 6, 1, "", "dir"], [133, 6, 1, "", "elements"], [133, 6, 1, "", "ensure_file_meta"], [133, 6, 1, "", "formatted_lines"], [133, 6, 1, "", "from_json"], [133, 6, 1, "", "get"], [133, 6, 1, "", "get_item"], [133, 6, 1, "", "get_private_item"], [133, 6, 1, "", "group_dataset"], [133, 4, 1, "", "is_implicit_VR"], [133, 4, 1, "", "is_little_endian"], [133, 4, 1, "", "is_original_encoding"], [133, 6, 1, "", "items"], [133, 6, 1, "", "iterall"], [133, 6, 1, "", "keys"], [133, 4, 1, "", "original_character_set"], [133, 4, 1, "", "original_encoding"], [133, 6, 1, "", "overlay_array"], [133, 4, 1, "", "pixel_array"], [133, 6, 1, "", "pixel_array_options"], [133, 6, 1, "", "pop"], [133, 6, 1, "", "popitem"], [133, 6, 1, "", "private_block"], [133, 6, 1, "", "private_creators"], [133, 4, 1, "", "read_encoding"], [133, 4, 1, "", "read_implicit_vr"], [133, 4, 1, "", "read_little_endian"], [133, 6, 1, "", "remove_private_tags"], [133, 6, 1, "", "save_as"], [133, 6, 1, "", "set_original_encoding"], [133, 6, 1, "", "set_pixel_data"], [133, 6, 1, "", "setdefault"], [133, 6, 1, "", "to_json"], [133, 6, 1, "", "to_json_dict"], [133, 6, 1, "", "top"], [133, 6, 1, "", "trait_names"], [133, 6, 1, "", "update"], [133, 6, 1, "", "update_raw_element"], [133, 6, 1, "", "validate"], [133, 6, 1, "", "values"], [133, 6, 1, "", "walk"], [133, 6, 1, "", "waveform_array"]], "pydicom.dataset.PrivateBlock": [[134, 6, 1, "", "__init__"], [134, 6, 1, "", "add_new"], [134, 5, 1, "", "block_start"], [134, 5, 1, "", "dataset"], [134, 6, 1, "", "get_tag"], [134, 5, 1, "", "group"], [134, 5, 1, "", "private_creator"]], "pydicom.encaps": [[67, 3, 1, "", "EncapsulatedBuffer"], [136, 1, 1, "", "decode_data_sequence"], [137, 1, 1, "", "defragment_data"], [138, 1, 1, "", "encapsulate"], [139, 1, 1, "", "encapsulate_buffer"], [140, 1, 1, "", "encapsulate_extended"], [141, 1, 1, "", "encapsulate_extended_buffer"], [142, 1, 1, "", "fragment_frame"], [143, 1, 1, "", "generate_fragmented_frames"], [144, 1, 1, "", "generate_fragments"], [145, 1, 1, "", "generate_frames"], [146, 1, 1, "", "generate_pixel_data"], [147, 1, 1, "", "generate_pixel_data_fragment"], [148, 1, 1, "", "generate_pixel_data_frame"], [149, 1, 1, "", "get_frame"], [150, 1, 1, "", "get_frame_offsets"], [151, 1, 1, "", "itemize_fragment"], [152, 1, 1, "", "itemize_frame"], [153, 1, 1, "", "parse_basic_offsets"], [154, 1, 1, "", "parse_fragments"], [155, 1, 1, "", "read_item"]], "pydicom.encaps.EncapsulatedBuffer": [[67, 4, 1, "", "basic_offset_table"], [67, 4, 1, "", "closed"], [67, 4, 1, "", "encapsulated_length"], [67, 4, 1, "", "extended_lengths"], [67, 4, 1, "", "extended_offsets"], [67, 4, 1, "", "lengths"], [67, 4, 1, "", "offsets"], [67, 6, 1, "", "read"], [67, 6, 1, "", "readable"], [67, 6, 1, "", "seek"], [67, 6, 1, "", "seekable"], [67, 6, 1, "", "tell"]], "pydicom.errors": [[156, 7, 1, "", "InvalidDicomError"]], "pydicom.errors.InvalidDicomError": [[156, 6, 1, "", "with_traceback"]], "pydicom.examples": [[157, 1, 1, "", "get_path"]], "pydicom.filebase": [[158, 3, 1, "", "DicomBytesIO"], [159, 1, 1, "", "DicomFile"], [160, 3, 1, "", "DicomFileLike"], [161, 3, 1, "", "DicomIO"]], "pydicom.filebase.DicomBytesIO": [[158, 6, 1, "", "__init__"], [158, 6, 1, "", "close"], [158, 4, 1, "", "is_implicit_VR"], [158, 4, 1, "", "is_little_endian"], [158, 4, 1, "", "name"], [158, 4, 1, "", "parent"], [158, 6, 1, "", "read"], [158, 6, 1, "", "read_UL"], [158, 6, 1, "", "read_US"], [158, 6, 1, "", "read_exact"], [158, 6, 1, "", "read_tag"], [158, 6, 1, "", "seek"], [158, 6, 1, "", "tell"], [158, 6, 1, "", "write"], [158, 6, 1, "", "write_UL"], [158, 6, 1, "", "write_US"], [158, 6, 1, "", "write_tag"]], "pydicom.filebase.DicomFileLike": [[160, 6, 1, "", "__init__"], [160, 6, 1, "", "close"], [160, 4, 1, "", "is_implicit_VR"], [160, 4, 1, "", "is_little_endian"], [160, 4, 1, "", "name"], [160, 4, 1, "", "parent"], [160, 6, 1, "", "read"], [160, 6, 1, "", "read_UL"], [160, 6, 1, "", "read_US"], [160, 6, 1, "", "read_exact"], [160, 6, 1, "", "read_tag"], [160, 6, 1, "", "seek"], [160, 6, 1, "", "tell"], [160, 6, 1, "", "write"], [160, 6, 1, "", "write_UL"], [160, 6, 1, "", "write_US"], [160, 6, 1, "", "write_tag"]], "pydicom.filebase.DicomIO": [[161, 6, 1, "", "__init__"], [161, 6, 1, "", "close"], [161, 4, 1, "", "is_implicit_VR"], [161, 4, 1, "", "is_little_endian"], [161, 4, 1, "", "name"], [161, 4, 1, "", "parent"], [161, 6, 1, "", "read"], [161, 6, 1, "", "read_UL"], [161, 6, 1, "", "read_US"], [161, 6, 1, "", "read_exact"], [161, 6, 1, "", "read_tag"], [161, 6, 1, "", "seek"], [161, 6, 1, "", "tell"], [161, 6, 1, "", "write"], [161, 6, 1, "", "write_UL"], [161, 6, 1, "", "write_US"], [161, 6, 1, "", "write_tag"]], "pydicom.filereader": [[162, 1, 1, "", "data_element_generator"], [163, 1, 1, "", "data_element_offset_to_value"], [164, 1, 1, "", "dcmread"], [165, 1, 1, "", "read_dataset"], [166, 1, 1, "", "read_deferred_data_element"], [167, 1, 1, "", "read_file_meta_info"], [168, 1, 1, "", "read_partial"], [169, 1, 1, "", "read_preamble"], [170, 1, 1, "", "read_sequence"], [171, 1, 1, "", "read_sequence_item"]], "pydicom.fileset": [[172, 2, 1, "", "DIRECTORY_RECORDERS"], [173, 3, 1, "", "FileInstance"], [174, 3, 1, "", "FileSet"], [175, 3, 1, "", "RecordNode"], [176, 1, 1, "", "generate_filename"], [177, 1, 1, "", "is_conformant_file_id"]], "pydicom.fileset.FileInstance": [[173, 4, 1, "", "FileID"], [173, 4, 1, "", "SOPClassUID"], [173, 4, 1, "", "SOPInstanceUID"], [173, 4, 1, "", "TransferSyntaxUID"], [173, 6, 1, "", "__init__"], [173, 4, 1, "", "file_set"], [173, 4, 1, "", "for_addition"], [173, 4, 1, "", "for_moving"], [173, 4, 1, "", "for_removal"], [173, 4, 1, "", "is_private"], [173, 4, 1, "", "is_staged"], [173, 6, 1, "", "load"], [173, 5, 1, "", "node"], [173, 4, 1, "", "path"]], "pydicom.fileset.FileSet": [[174, 4, 1, "", "ID"], [174, 4, 1, "", "UID"], [174, 6, 1, "", "__init__"], [174, 6, 1, "", "add"], [174, 6, 1, "", "add_custom"], [174, 6, 1, "", "clear"], [174, 6, 1, "", "copy"], [174, 4, 1, "", "descriptor_character_set"], [174, 4, 1, "", "descriptor_file_id"], [174, 6, 1, "", "find"], [174, 6, 1, "", "find_values"], [174, 4, 1, "", "is_staged"], [174, 6, 1, "", "load"], [174, 4, 1, "", "path"], [174, 6, 1, "", "remove"], [174, 6, 1, "", "write"]], "pydicom.fileset.RecordNode": [[175, 6, 1, "", "__init__"], [175, 6, 1, "", "add"], [175, 4, 1, "", "ancestors"], [175, 5, 1, "", "children"], [175, 4, 1, "", "component"], [175, 4, 1, "", "depth"], [175, 4, 1, "", "file_set"], [175, 4, 1, "", "has_instance"], [175, 4, 1, "", "index"], [175, 5, 1, "", "instance"], [175, 4, 1, "", "is_root"], [175, 4, 1, "", "key"], [175, 4, 1, "", "next"], [175, 4, 1, "", "parent"], [175, 6, 1, "", "prettify"], [175, 4, 1, "", "previous"], [175, 4, 1, "", "record_type"], [175, 6, 1, "", "remove"], [175, 6, 1, "", "reverse"], [175, 4, 1, "", "root"]], "pydicom.fileutil": [[178, 1, 1, "", "absorb_delimiter_item"], [179, 1, 1, "", "find_bytes"], [180, 1, 1, "", "find_delimiter"], [181, 1, 1, "", "length_of_undefined_length"], [182, 1, 1, "", "read_undefined_length_value"]], "pydicom.filewriter": [[183, 1, 1, "", "correct_ambiguous_vr"], [184, 1, 1, "", "correct_ambiguous_vr_element"], [185, 1, 1, "", "dcmwrite"], [186, 1, 1, "", "multi_string"], [187, 1, 1, "", "write_ATvalue"], [188, 1, 1, "", "write_DA"], [189, 1, 1, "", "write_DT"], [190, 1, 1, "", "write_OBvalue"], [191, 1, 1, "", "write_OWvalue"], [192, 1, 1, "", "write_PN"], [193, 1, 1, "", "write_TM"], [194, 1, 1, "", "write_UI"], [195, 1, 1, "", "write_UN"], [196, 1, 1, "", "write_data_element"], [197, 1, 1, "", "write_dataset"], [198, 1, 1, "", "write_file_meta_info"], [199, 1, 1, "", "write_number_string"], [200, 1, 1, "", "write_numbers"], [201, 1, 1, "", "write_sequence"], [202, 1, 1, "", "write_sequence_item"], [203, 1, 1, "", "write_string"], [204, 1, 1, "", "write_text"]], "pydicom.misc": [[205, 1, 1, "", "is_dicom"], [206, 1, 1, "", "size_in_bytes"]], "pydicom.multival": [[207, 3, 1, "", "MultiValue"]], "pydicom.multival.MultiValue": [[207, 6, 1, "", "__init__"], [207, 6, 1, "", "append"], [207, 6, 1, "", "clear"], [207, 6, 1, "", "count"], [207, 6, 1, "", "extend"], [207, 6, 1, "", "index"], [207, 6, 1, "", "insert"], [207, 6, 1, "", "pop"], [207, 6, 1, "", "remove"], [207, 6, 1, "", "reverse"]], "pydicom.overlays": [[208, 0, 0, "-", "numpy_handler"]], "pydicom.overlays.numpy_handler": [[208, 1, 1, "", "get_expected_length"], [208, 1, 1, "", "get_overlay_array"], [208, 1, 1, "", "is_available"], [208, 1, 1, "", "reshape_overlay_array"]], "pydicom.pixel_data_handlers": [[209, 0, 0, "-", "gdcm_handler"], [210, 0, 0, "-", "jpeg_ls_handler"], [211, 0, 0, "-", "numpy_handler"], [212, 0, 0, "-", "pillow_handler"], [213, 0, 0, "-", "pylibjpeg_handler"], [214, 0, 0, "-", "rle_handler"]], "pydicom.pixel_data_handlers.gdcm_handler": [[209, 1, 1, "", "create_data_element"], [209, 1, 1, "", "create_image"], [209, 1, 1, "", "get_pixeldata"], [209, 1, 1, "", "is_available"], [209, 1, 1, "", "needs_to_convert_to_RGB"], [209, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [209, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[210, 1, 1, "", "get_pixeldata"], [210, 1, 1, "", "is_available"], [210, 1, 1, "", "needs_to_convert_to_RGB"], [210, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [210, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.numpy_handler": [[211, 1, 1, "", "get_pixeldata"], [211, 1, 1, "", "is_available"], [211, 1, 1, "", "needs_to_convert_to_RGB"], [211, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [211, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pillow_handler": [[212, 1, 1, "", "get_pixeldata"], [212, 1, 1, "", "is_available"], [212, 1, 1, "", "needs_to_convert_to_RGB"], [212, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [212, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[213, 1, 1, "", "as_array"], [213, 1, 1, "", "generate_frames"], [213, 1, 1, "", "get_pixeldata"], [213, 1, 1, "", "is_available"], [213, 1, 1, "", "needs_to_convert_to_RGB"], [213, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [213, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.rle_handler": [[214, 1, 1, "", "get_pixeldata"], [214, 1, 1, "", "is_available"], [214, 1, 1, "", "needs_to_convert_to_RGB"], [214, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [214, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixels": [[215, 1, 1, "", "apply_color_lut"], [216, 1, 1, "", "apply_icc_profile"], [217, 1, 1, "", "apply_modality_lut"], [218, 1, 1, "", "apply_presentation_lut"], [219, 1, 1, "", "apply_rescale"], [220, 1, 1, "", "apply_voi"], [221, 1, 1, "", "apply_voi_lut"], [222, 1, 1, "", "apply_windowing"], [223, 1, 1, "", "as_pixel_options"], [224, 1, 1, "", "compress"], [225, 1, 1, "", "convert_color_space"], [226, 1, 1, "", "create_icc_transform"], [571, 0, 0, "-", "decoders"], [245, 1, 1, "", "decompress"], [572, 0, 0, "-", "encoders"], [253, 1, 1, "", "get_decoder"], [254, 1, 1, "", "get_encoder"], [255, 1, 1, "", "iter_pixels"], [256, 1, 1, "", "pack_bits"], [257, 1, 1, "", "pixel_array"], [573, 0, 0, "-", "processing"], [268, 1, 1, "", "set_pixel_data"], [269, 1, 1, "", "unpack_bits"], [574, 0, 0, "-", "utils"]], "pydicom.pixels.decoders": [[227, 2, 1, "", "DeflatedExplicitVRLittleEndianDecoder"], [228, 2, 1, "", "ExplicitVRBigEndianDecoder"], [229, 2, 1, "", "ExplicitVRLittleEndianDecoder"], [230, 2, 1, "", "HTJ2KDecoder"], [231, 2, 1, "", "HTJ2KLosslessDecoder"], [232, 2, 1, "", "HTJ2KLosslessRPCLDecoder"], [233, 2, 1, "", "ImplicitVRLittleEndianDecoder"], [234, 2, 1, "", "JPEG2000Decoder"], [235, 2, 1, "", "JPEG2000LosslessDecoder"], [236, 2, 1, "", "JPEGBaseline8BitDecoder"], [237, 2, 1, "", "JPEGExtended12BitDecoder"], [238, 2, 1, "", "JPEGLSLosslessDecoder"], [239, 2, 1, "", "JPEGLSNearLosslessDecoder"], [240, 2, 1, "", "JPEGLosslessDecoder"], [241, 2, 1, "", "JPEGLosslessSV1Decoder"], [242, 2, 1, "", "RLELosslessDecoder"]], "pydicom.pixels.decoders.base": [[243, 3, 1, "", "DecodeRunner"], [244, 3, 1, "", "Decoder"]], "pydicom.pixels.decoders.base.DecodeRunner": [[243, 6, 1, "", "__init__"], [243, 4, 1, "", "bits_allocated"], [243, 4, 1, "", "bits_stored"], [243, 4, 1, "", "columns"], [243, 6, 1, "", "decode"], [243, 6, 1, "", "del_option"], [243, 4, 1, "", "extended_offsets"], [243, 6, 1, "", "frame_length"], [243, 6, 1, "", "get_data"], [243, 6, 1, "", "get_option"], [243, 4, 1, "", "is_array"], [243, 4, 1, "", "is_binary"], [243, 4, 1, "", "is_buffer"], [243, 4, 1, "", "is_dataset"], [243, 6, 1, "", "iter_decode"], [243, 4, 1, "", "number_of_frames"], [243, 4, 1, "", "options"], [243, 4, 1, "", "photometric_interpretation"], [243, 4, 1, "", "pixel_dtype"], [243, 4, 1, "", "pixel_keyword"], [243, 6, 1, "", "pixel_properties"], [243, 4, 1, "", "pixel_representation"], [243, 4, 1, "", "planar_configuration"], [243, 6, 1, "", "process"], [243, 6, 1, "", "reshape"], [243, 4, 1, "", "rows"], [243, 4, 1, "", "samples_per_pixel"], [243, 6, 1, "", "set_decoders"], [243, 6, 1, "", "set_option"], [243, 6, 1, "", "set_options"], [243, 6, 1, "", "set_source"], [243, 4, 1, "", "src"], [243, 4, 1, "", "transfer_syntax"], [243, 6, 1, "", "validate"]], "pydicom.pixels.decoders.base.Decoder": [[244, 4, 1, "", "UID"], [244, 6, 1, "", "__init__"], [244, 6, 1, "", "add_plugin"], [244, 6, 1, "", "add_plugins"], [244, 6, 1, "", "as_array"], [244, 6, 1, "", "as_buffer"], [244, 4, 1, "", "available_plugins"], [244, 4, 1, "", "is_available"], [244, 4, 1, "", "is_encapsulated"], [244, 4, 1, "", "is_native"], [244, 6, 1, "", "iter_array"], [244, 6, 1, "", "iter_buffer"], [244, 4, 1, "", "missing_dependencies"], [244, 6, 1, "", "remove_plugin"]], "pydicom.pixels.encoders": [[246, 2, 1, "", "JPEG2000Encoder"], [247, 2, 1, "", "JPEG2000LosslessEncoder"], [248, 2, 1, "", "JPEGLSLosslessEncoder"], [249, 2, 1, "", "JPEGLSNearLosslessEncoder"], [250, 2, 1, "", "RLELosslessEncoder"]], "pydicom.pixels.encoders.base": [[251, 3, 1, "", "EncodeRunner"], [252, 3, 1, "", "Encoder"]], "pydicom.pixels.encoders.base.EncodeRunner": [[251, 6, 1, "", "__init__"], [251, 4, 1, "", "bits_allocated"], [251, 4, 1, "", "bits_stored"], [251, 4, 1, "", "columns"], [251, 6, 1, "", "del_option"], [251, 6, 1, "", "encode"], [251, 4, 1, "", "extended_offsets"], [251, 6, 1, "", "frame_length"], [251, 6, 1, "", "get_frame"], [251, 6, 1, "", "get_option"], [251, 4, 1, "", "is_array"], [251, 4, 1, "", "is_binary"], [251, 4, 1, "", "is_buffer"], [251, 4, 1, "", "is_dataset"], [251, 4, 1, "", "number_of_frames"], [251, 4, 1, "", "options"], [251, 4, 1, "", "photometric_interpretation"], [251, 4, 1, "", "pixel_keyword"], [251, 4, 1, "", "pixel_representation"], [251, 4, 1, "", "planar_configuration"], [251, 4, 1, "", "rows"], [251, 4, 1, "", "samples_per_pixel"], [251, 6, 1, "", "set_encoders"], [251, 6, 1, "", "set_option"], [251, 6, 1, "", "set_options"], [251, 6, 1, "", "set_source"], [251, 4, 1, "", "src"], [251, 4, 1, "", "transfer_syntax"], [251, 6, 1, "", "validate"]], "pydicom.pixels.encoders.base.Encoder": [[252, 4, 1, "", "UID"], [252, 6, 1, "", "__init__"], [252, 6, 1, "", "add_plugin"], [252, 6, 1, "", "add_plugins"], [252, 4, 1, "", "available_plugins"], [252, 6, 1, "", "encode"], [252, 4, 1, "", "is_available"], [252, 4, 1, "", "is_encapsulated"], [252, 4, 1, "", "is_native"], [252, 6, 1, "", "iter_encode"], [252, 4, 1, "", "missing_dependencies"], [252, 6, 1, "", "remove_plugin"]], "pydicom.pixels.processing": [[258, 1, 1, "", "apply_color_lut"], [259, 1, 1, "", "apply_icc_profile"], [260, 1, 1, "", "apply_modality_lut"], [261, 1, 1, "", "apply_presentation_lut"], [262, 1, 1, "", "apply_rescale"], [263, 1, 1, "", "apply_voi"], [264, 1, 1, "", "apply_voi_lut"], [265, 1, 1, "", "apply_windowing"], [266, 1, 1, "", "convert_color_space"], [267, 1, 1, "", "create_icc_transform"]], "pydicom.pixels.utils": [[270, 1, 1, "", "as_pixel_options"], [271, 1, 1, "", "compress"], [272, 1, 1, "", "decompress"], [273, 1, 1, "", "expand_ybr422"], [274, 1, 1, "", "get_expected_length"], [275, 1, 1, "", "get_image_pixel_ids"], [276, 1, 1, "", "get_j2k_parameters"], [277, 1, 1, "", "get_nr_frames"], [278, 1, 1, "", "iter_pixels"], [279, 1, 1, "", "pack_bits"], [280, 1, 1, "", "pixel_array"], [281, 1, 1, "", "pixel_dtype"], [282, 1, 1, "", "reshape_pixel_array"], [283, 1, 1, "", "set_pixel_data"], [284, 1, 1, "", "unpack_bits"]], "pydicom.sequence": [[285, 3, 1, "", "Sequence"]], "pydicom.sequence.Sequence": [[285, 6, 1, "", "__init__"], [285, 6, 1, "", "append"], [285, 6, 1, "", "clear"], [285, 6, 1, "", "count"], [285, 6, 1, "", "extend"], [285, 6, 1, "", "index"], [285, 6, 1, "", "insert"], [285, 6, 1, "", "pop"], [285, 6, 1, "", "remove"], [285, 6, 1, "", "reverse"]], "pydicom.sr": [[286, 3, 1, "", "Code"], [287, 3, 1, "", "Collection"], [288, 3, 1, "", "Concepts"]], "pydicom.sr.Code": [[286, 6, 1, "", "__init__"], [286, 6, 1, "", "count"], [286, 6, 1, "", "index"], [286, 5, 1, "", "meaning"], [286, 5, 1, "", "scheme_designator"], [286, 5, 1, "", "scheme_version"], [286, 5, 1, "", "value"]], "pydicom.sr.Collection": [[287, 6, 1, "", "__init__"], [287, 4, 1, "", "concepts"], [287, 6, 1, "", "dir"], [287, 4, 1, "", "is_cid"], [287, 4, 1, "", "name"], [287, 4, 1, "", "scheme_designator"], [287, 6, 1, "", "trait_names"]], "pydicom.sr.Concepts": [[288, 6, 1, "", "CIDs"], [288, 6, 1, "", "__init__"], [288, 4, 1, "", "collections"], [288, 6, 1, "", "schemes"]], "pydicom.tag": [[289, 3, 1, "", "BaseTag"], [290, 1, 1, "", "Tag"], [291, 1, 1, "", "TupleTag"], [292, 1, 1, "", "tag_in_exception"]], "pydicom.tag.BaseTag": [[289, 6, 1, "", "__init__"], [289, 6, 1, "", "as_integer_ratio"], [289, 6, 1, "", "bit_count"], [289, 6, 1, "", "bit_length"], [289, 6, 1, "", "conjugate"], [289, 5, 1, "", "denominator"], [289, 4, 1, "", "elem"], [289, 4, 1, "", "element"], [289, 6, 1, "", "from_bytes"], [289, 4, 1, "", "group"], [289, 5, 1, "", "imag"], [289, 4, 1, "", "is_private"], [289, 4, 1, "", "is_private_creator"], [289, 4, 1, "", "json_key"], [289, 5, 1, "", "numerator"], [289, 4, 1, "", "private_creator"], [289, 5, 1, "", "real"], [289, 6, 1, "", "to_bytes"]], "pydicom.uid": [[293, 2, 1, "", "AcquisitionContextSRStorage"], [294, 2, 1, "", "AdvancedBlendingPresentationStateStorage"], [295, 2, 1, "", "AllTransferSyntaxes"], [296, 2, 1, "", "AmbulatoryECGWaveformStorage"], [297, 2, 1, "", "ArterialPulseWaveformStorage"], [298, 2, 1, "", "AutorefractionMeasurementsStorage"], [299, 2, 1, "", "BasicStructuredDisplayStorage"], [300, 2, 1, "", "BasicTextSRStorage"], [301, 2, 1, "", "BasicVoiceAudioWaveformStorage"], [302, 2, 1, "", "BlendingSoftcopyPresentationStateStorage"], [303, 2, 1, "", "BodyPositionWaveformStorage"], [304, 2, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [305, 2, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [306, 2, 1, "", "BreastTomosynthesisImageStorage"], [307, 2, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [308, 2, 1, "", "CArmPhotonElectronRadiationStorage"], [309, 2, 1, "", "CTDefinedProcedureProtocolStorage"], [310, 2, 1, "", "CTImageStorage"], [311, 2, 1, "", "CTPerformedProcedureProtocolStorage"], [312, 2, 1, "", "CardiacElectrophysiologyWaveformStorage"], [313, 2, 1, "", "ChestCADSRStorage"], [314, 2, 1, "", "ColonCADSRStorage"], [315, 2, 1, "", "ColorPaletteStorage"], [316, 2, 1, "", "ColorSoftcopyPresentationStateStorage"], [317, 2, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [318, 2, 1, "", "Comprehensive3DSRStorage"], [319, 2, 1, "", "ComprehensiveSRStorage"], [320, 2, 1, "", "ComputedRadiographyImageStorage"], [321, 2, 1, "", "ConfocalMicroscopyImageStorage"], [322, 2, 1, "", "ConfocalMicroscopyTiledPyramidalImageStorage"], [323, 2, 1, "", "ContentAssessmentResultsStorage"], [324, 2, 1, "", "CornealTopographyMapStorage"], [325, 2, 1, "", "DICOS2DAITStorage"], [326, 2, 1, "", "DICOS3DAITStorage"], [327, 2, 1, "", "DICOSCTImageStorage"], [328, 2, 1, "", "DICOSDigitalXRayImageStorageForPresentation"], [329, 2, 1, "", "DICOSDigitalXRayImageStorageForProcessing"], [330, 2, 1, "", "DICOSQuadrupoleResonanceStorage"], [331, 2, 1, "", "DICOSThreatDetectionReportStorage"], [332, 2, 1, "", "DeflatedExplicitVRLittleEndian"], [333, 2, 1, "", "DeformableSpatialRegistrationStorage"], [334, 2, 1, "", "DermoscopicPhotographyImageStorage"], [335, 2, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [336, 2, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [337, 2, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [338, 2, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [339, 2, 1, "", "DigitalXRayImageStorageForPresentation"], [340, 2, 1, "", "DigitalXRayImageStorageForProcessing"], [341, 2, 1, "", "EddyCurrentImageStorage"], [342, 2, 1, "", "EddyCurrentMultiFrameImageStorage"], [343, 2, 1, "", "ElectromyogramWaveformStorage"], [344, 2, 1, "", "ElectrooculogramWaveformStorage"], [345, 2, 1, "", "EncapsulatedCDAStorage"], [346, 2, 1, "", "EncapsulatedMTLStorage"], [347, 2, 1, "", "EncapsulatedOBJStorage"], [348, 2, 1, "", "EncapsulatedPDFStorage"], [349, 2, 1, "", "EncapsulatedSTLStorage"], [350, 2, 1, "", "EnhancedCTImageStorage"], [351, 2, 1, "", "EnhancedContinuousRTImageStorage"], [352, 2, 1, "", "EnhancedMRColorImageStorage"], [353, 2, 1, "", "EnhancedMRImageStorage"], [354, 2, 1, "", "EnhancedPETImageStorage"], [355, 2, 1, "", "EnhancedRTImageStorage"], [356, 2, 1, "", "EnhancedSRStorage"], [357, 2, 1, "", "EnhancedUSVolumeStorage"], [358, 2, 1, "", "EnhancedXAImageStorage"], [359, 2, 1, "", "EnhancedXRFImageStorage"], [360, 2, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [361, 2, 1, "", "ExplicitVRBigEndian"], [362, 2, 1, "", "ExplicitVRLittleEndian"], [363, 2, 1, "", "ExtensibleSRStorage"], [364, 2, 1, "", "General32bitECGWaveformStorage"], [365, 2, 1, "", "GeneralAudioWaveformStorage"], [366, 2, 1, "", "GeneralECGWaveformStorage"], [367, 2, 1, "", "GenericImplantTemplateStorage"], [368, 2, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [369, 2, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [370, 2, 1, "", "HEVCM10P51"], [371, 2, 1, "", "HEVCMP51"], [372, 2, 1, "", "HTJ2K"], [373, 2, 1, "", "HTJ2KLossless"], [374, 2, 1, "", "HTJ2KLosslessRPCL"], [375, 2, 1, "", "HangingProtocolStorage"], [376, 2, 1, "", "HemodynamicWaveformStorage"], [377, 2, 1, "", "ImplantAssemblyTemplateStorage"], [378, 2, 1, "", "ImplantTemplateGroupStorage"], [379, 2, 1, "", "ImplantationPlanSRStorage"], [380, 2, 1, "", "ImplicitVRLittleEndian"], [381, 2, 1, "", "IntraocularLensCalculationsStorage"], [382, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [383, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [384, 2, 1, "", "InventoryStorage"], [385, 2, 1, "", "JPEG2000"], [386, 2, 1, "", "JPEG2000Lossless"], [387, 2, 1, "", "JPEG2000MC"], [388, 2, 1, "", "JPEG2000MCLossless"], [389, 2, 1, "", "JPEG2000TransferSyntaxes"], [390, 2, 1, "", "JPEGBaseline8Bit"], [391, 2, 1, "", "JPEGExtended12Bit"], [392, 2, 1, "", "JPEGLSLossless"], [393, 2, 1, "", "JPEGLSNearLossless"], [394, 2, 1, "", "JPEGLSTransferSyntaxes"], [395, 2, 1, "", "JPEGLossless"], [396, 2, 1, "", "JPEGLosslessSV1"], [397, 2, 1, "", "JPEGTransferSyntaxes"], [398, 2, 1, "", "JPIPHTJ2KReferenced"], [399, 2, 1, "", "JPIPHTJ2KReferencedDeflate"], [400, 2, 1, "", "KeratometryMeasurementsStorage"], [401, 2, 1, "", "KeyObjectSelectionDocumentStorage"], [402, 2, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [403, 2, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [404, 2, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [405, 2, 1, "", "LensometryMeasurementsStorage"], [406, 2, 1, "", "MPEG2MPHL"], [407, 2, 1, "", "MPEG2MPHLF"], [408, 2, 1, "", "MPEG2MPML"], [409, 2, 1, "", "MPEG2MPMLF"], [410, 2, 1, "", "MPEG4HP41"], [411, 2, 1, "", "MPEG4HP41BD"], [412, 2, 1, "", "MPEG4HP41BDF"], [413, 2, 1, "", "MPEG4HP41F"], [414, 2, 1, "", "MPEG4HP422D"], [415, 2, 1, "", "MPEG4HP422DF"], [416, 2, 1, "", "MPEG4HP423D"], [417, 2, 1, "", "MPEG4HP423DF"], [418, 2, 1, "", "MPEG4HP42STEREO"], [419, 2, 1, "", "MPEG4HP42STEREOF"], [420, 2, 1, "", "MPEGTransferSyntaxes"], [421, 2, 1, "", "MRImageStorage"], [422, 2, 1, "", "MRSpectroscopyStorage"], [423, 2, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [424, 2, 1, "", "MammographyCADSRStorage"], [425, 2, 1, "", "MediaStorageDirectoryStorage"], [426, 2, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [427, 2, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [428, 2, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [429, 2, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [430, 2, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [431, 2, 1, "", "MultichannelRespiratoryWaveformStorage"], [432, 2, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [433, 2, 1, "", "NuclearMedicineImageStorage"], [434, 2, 1, "", "OphthalmicAxialMeasurementsStorage"], [435, 2, 1, "", "OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [436, 2, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [437, 2, 1, "", "OphthalmicPhotography16BitImageStorage"], [438, 2, 1, "", "OphthalmicPhotography8BitImageStorage"], [439, 2, 1, "", "OphthalmicThicknessMapStorage"], [440, 2, 1, "", "OphthalmicTomographyImageStorage"], [441, 2, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [442, 2, 1, "", "PYDICOM_IMPLEMENTATION_UID"], [443, 2, 1, "", "PYDICOM_ROOT_UID"], [444, 2, 1, "", "ParametricMapStorage"], [445, 2, 1, "", "PatientRadiationDoseSRStorage"], [446, 2, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [447, 2, 1, "", "PhotoacousticImageStorage"], [448, 2, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [449, 2, 1, "", "PositronEmissionTomographyImageStorage"], [450, 2, 1, "", "PrivateTransferSyntaxes"], [451, 2, 1, "", "ProcedureLogStorage"], [452, 2, 1, "", "ProtocolApprovalStorage"], [453, 2, 1, "", "PseudoColorSoftcopyPresentationStateStorage"], [454, 2, 1, "", "RE_VALID_UID"], [455, 2, 1, "", "RE_VALID_UID_PREFIX"], [456, 2, 1, "", "RLELossless"], [457, 2, 1, "", "RLETransferSyntaxes"], [458, 2, 1, "", "RTBeamsDeliveryInstructionStorage"], [459, 2, 1, "", "RTBeamsTreatmentRecordStorage"], [460, 2, 1, "", "RTBrachyApplicationSetupDeliveryInstructionStorage"], [461, 2, 1, "", "RTBrachyTreatmentRecordStorage"], [462, 2, 1, "", "RTDoseStorage"], [463, 2, 1, "", "RTImageStorage"], [464, 2, 1, "", "RTIonBeamsTreatmentRecordStorage"], [465, 2, 1, "", "RTIonPlanStorage"], [466, 2, 1, "", "RTPatientPositionAcquisitionInstructionStorage"], [467, 2, 1, "", "RTPhysicianIntentStorage"], [468, 2, 1, "", "RTPlanStorage"], [469, 2, 1, "", "RTRadiationRecordSetStorage"], [470, 2, 1, "", "RTRadiationSalvageRecordStorage"], [471, 2, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [472, 2, 1, "", "RTRadiationSetStorage"], [473, 2, 1, "", "RTSegmentAnnotationStorage"], [474, 2, 1, "", "RTStructureSetStorage"], [475, 2, 1, "", "RTTreatmentPreparationStorage"], [476, 2, 1, "", "RTTreatmentSummaryRecordStorage"], [477, 2, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [478, 2, 1, "", "RawDataStorage"], [479, 2, 1, "", "RealWorldValueMappingStorage"], [480, 2, 1, "", "RespiratoryWaveformStorage"], [481, 2, 1, "", "RoboticArmRadiationStorage"], [482, 2, 1, "", "RoboticRadiationRecordStorage"], [483, 2, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [484, 2, 1, "", "SMPTEST211020UncompressedInterlacedActiveVideo"], [485, 2, 1, "", "SMPTEST211020UncompressedProgressiveActiveVideo"], [486, 2, 1, "", "SMPTEST211030PCMDigitalAudio"], [487, 2, 1, "", "SecondaryCaptureImageStorage"], [488, 2, 1, "", "SegmentationStorage"], [489, 2, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [490, 2, 1, "", "SimplifiedAdultEchoSRStorage"], [491, 2, 1, "", "SleepElectroencephalogramWaveformStorage"], [492, 2, 1, "", "SpatialFiducialsStorage"], [493, 2, 1, "", "SpatialRegistrationStorage"], [494, 2, 1, "", "SpectaclePrescriptionReportStorage"], [495, 2, 1, "", "StereometricRelationshipStorage"], [496, 2, 1, "", "SubjectiveRefractionMeasurementsStorage"], [497, 2, 1, "", "SurfaceScanMeshStorage"], [498, 2, 1, "", "SurfaceScanPointCloudStorage"], [499, 2, 1, "", "SurfaceSegmentationStorage"], [500, 2, 1, "", "TomotherapeuticRadiationRecordStorage"], [501, 2, 1, "", "TomotherapeuticRadiationStorage"], [502, 2, 1, "", "TractographyResultsStorage"], [503, 2, 1, "", "TwelveLeadECGWaveformStorage"], [504, 3, 1, "", "UID"], [505, 2, 1, "", "UltrasoundImageStorage"], [506, 2, 1, "", "UltrasoundMultiFrameImageStorage"], [507, 2, 1, "", "UncompressedTransferSyntaxes"], [508, 2, 1, "", "VLEndoscopicImageStorage"], [509, 2, 1, "", "VLMicroscopicImageStorage"], [510, 2, 1, "", "VLPhotographicImageStorage"], [511, 2, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [512, 2, 1, "", "VLWholeSlideMicroscopyImageStorage"], [513, 2, 1, "", "VariableModalityLUTSoftcopyPresentationStateStorage"], [514, 2, 1, "", "VideoEndoscopicImageStorage"], [515, 2, 1, "", "VideoMicroscopicImageStorage"], [516, 2, 1, "", "VideoPhotographicImageStorage"], [517, 2, 1, "", "VisualAcuityMeasurementsStorage"], [518, 2, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [519, 2, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [520, 2, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [521, 2, 1, "", "XADefinedProcedureProtocolStorage"], [522, 2, 1, "", "XAPerformedProcedureProtocolStorage"], [523, 2, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [524, 2, 1, "", "XRay3DAngiographicImageStorage"], [525, 2, 1, "", "XRay3DCraniofacialImageStorage"], [526, 2, 1, "", "XRayAngiographicImageStorage"], [527, 2, 1, "", "XRayRadiationDoseSRStorage"], [528, 2, 1, "", "XRayRadiofluoroscopicImageStorage"], [529, 1, 1, "", "generate_uid"], [530, 1, 1, "", "register_transfer_syntax"]], "pydicom.uid.UID": [[504, 6, 1, "", "__init__"], [504, 6, 1, "", "capitalize"], [504, 6, 1, "", "casefold"], [504, 6, 1, "", "center"], [504, 6, 1, "", "count"], [504, 6, 1, "", "encode"], [504, 6, 1, "", "endswith"], [504, 6, 1, "", "expandtabs"], [504, 6, 1, "", "find"], [504, 6, 1, "", "format"], [504, 6, 1, "", "format_map"], [504, 6, 1, "", "index"], [504, 4, 1, "", "info"], [504, 4, 1, "", "is_compressed"], [504, 4, 1, "", "is_deflated"], [504, 4, 1, "", "is_encapsulated"], [504, 4, 1, "", "is_implicit_VR"], [504, 4, 1, "", "is_little_endian"], [504, 4, 1, "", "is_private"], [504, 4, 1, "", "is_retired"], [504, 4, 1, "", "is_transfer_syntax"], [504, 4, 1, "", "is_valid"], [504, 6, 1, "", "isalnum"], [504, 6, 1, "", "isalpha"], [504, 6, 1, "", "isascii"], [504, 6, 1, "", "isdecimal"], [504, 6, 1, "", "isdigit"], [504, 6, 1, "", "isidentifier"], [504, 6, 1, "", "islower"], [504, 6, 1, "", "isnumeric"], [504, 6, 1, "", "isprintable"], [504, 6, 1, "", "isspace"], [504, 6, 1, "", "istitle"], [504, 6, 1, "", "isupper"], [504, 6, 1, "", "join"], [504, 4, 1, "", "keyword"], [504, 6, 1, "", "ljust"], [504, 6, 1, "", "lower"], [504, 6, 1, "", "lstrip"], [504, 6, 1, "", "maketrans"], [504, 4, 1, "", "name"], [504, 6, 1, "", "partition"], [504, 6, 1, "", "removeprefix"], [504, 6, 1, "", "removesuffix"], [504, 6, 1, "", "replace"], [504, 6, 1, "", "rfind"], [504, 6, 1, "", "rindex"], [504, 6, 1, "", "rjust"], [504, 6, 1, "", "rpartition"], [504, 6, 1, "", "rsplit"], [504, 6, 1, "", "rstrip"], [504, 6, 1, "", "set_private_encoding"], [504, 6, 1, "", "split"], [504, 6, 1, "", "splitlines"], [504, 6, 1, "", "startswith"], [504, 6, 1, "", "strip"], [504, 6, 1, "", "swapcase"], [504, 6, 1, "", "title"], [504, 6, 1, "", "translate"], [504, 4, 1, "", "type"], [504, 6, 1, "", "upper"], [504, 6, 1, "", "zfill"]], "pydicom.valuerep": [[531, 3, 1, "", "DA"], [532, 1, 1, "", "DS"], [533, 3, 1, "", "DSdecimal"], [534, 3, 1, "", "DSfloat"], [535, 3, 1, "", "DT"], [536, 3, 1, "", "IS"], [537, 3, 1, "", "ISfloat"], [538, 3, 1, "", "PersonName"], [539, 3, 1, "", "TM"], [540, 3, 1, "", "VR"], [541, 1, 1, "", "format_number_as_ds"], [542, 1, 1, "", "is_valid_ds"]], "pydicom.valuerep.DA": [[531, 6, 1, "", "__init__"], [531, 6, 1, "", "ctime"], [531, 6, 1, "", "fromisocalendar"], [531, 6, 1, "", "fromisoformat"], [531, 6, 1, "", "fromordinal"], [531, 6, 1, "", "fromtimestamp"], [531, 6, 1, "", "isocalendar"], [531, 6, 1, "", "isoformat"], [531, 6, 1, "", "isoweekday"], [531, 6, 1, "", "replace"], [531, 6, 1, "", "strftime"], [531, 6, 1, "", "timetuple"], [531, 6, 1, "", "today"], [531, 6, 1, "", "toordinal"], [531, 6, 1, "", "weekday"]], "pydicom.valuerep.DSdecimal": [[533, 6, 1, "", "__init__"], [533, 6, 1, "", "adjusted"], [533, 6, 1, "", "as_integer_ratio"], [533, 6, 1, "", "as_tuple"], [533, 6, 1, "", "canonical"], [533, 6, 1, "", "compare"], [533, 6, 1, "", "compare_signal"], [533, 6, 1, "", "compare_total"], [533, 6, 1, "", "compare_total_mag"], [533, 6, 1, "", "conjugate"], [533, 6, 1, "", "copy_abs"], [533, 6, 1, "", "copy_negate"], [533, 6, 1, "", "copy_sign"], [533, 6, 1, "", "exp"], [533, 6, 1, "", "fma"], [533, 6, 1, "", "from_float"], [533, 6, 1, "", "is_canonical"], [533, 6, 1, "", "is_finite"], [533, 6, 1, "", "is_infinite"], [533, 6, 1, "", "is_nan"], [533, 6, 1, "", "is_normal"], [533, 6, 1, "", "is_qnan"], [533, 6, 1, "", "is_signed"], [533, 6, 1, "", "is_snan"], [533, 6, 1, "", "is_subnormal"], [533, 6, 1, "", "is_zero"], [533, 6, 1, "", "ln"], [533, 6, 1, "", "log10"], [533, 6, 1, "", "logb"], [533, 6, 1, "", "logical_and"], [533, 6, 1, "", "logical_invert"], [533, 6, 1, "", "logical_or"], [533, 6, 1, "", "logical_xor"], [533, 6, 1, "", "max"], [533, 6, 1, "", "max_mag"], [533, 6, 1, "", "min"], [533, 6, 1, "", "min_mag"], [533, 6, 1, "", "next_minus"], [533, 6, 1, "", "next_plus"], [533, 6, 1, "", "next_toward"], [533, 6, 1, "", "normalize"], [533, 6, 1, "", "number_class"], [533, 6, 1, "", "quantize"], [533, 6, 1, "", "radix"], [533, 6, 1, "", "remainder_near"], [533, 6, 1, "", "rotate"], [533, 6, 1, "", "same_quantum"], [533, 6, 1, "", "scaleb"], [533, 6, 1, "", "shift"], [533, 6, 1, "", "sqrt"], [533, 6, 1, "", "to_eng_string"], [533, 6, 1, "", "to_integral"], [533, 6, 1, "", "to_integral_exact"], [533, 6, 1, "", "to_integral_value"]], "pydicom.valuerep.DSfloat": [[534, 6, 1, "", "__init__"], [534, 6, 1, "", "as_integer_ratio"], [534, 6, 1, "", "conjugate"], [534, 6, 1, "", "fromhex"], [534, 6, 1, "", "hex"], [534, 5, 1, "", "imag"], [534, 6, 1, "", "is_integer"], [534, 5, 1, "", "real"]], "pydicom.valuerep.DT": [[535, 6, 1, "", "__init__"], [535, 6, 1, "", "astimezone"], [535, 6, 1, "", "combine"], [535, 6, 1, "", "ctime"], [535, 6, 1, "", "date"], [535, 6, 1, "", "dst"], [535, 6, 1, "", "fromisocalendar"], [535, 6, 1, "", "fromisoformat"], [535, 6, 1, "", "fromordinal"], [535, 6, 1, "", "fromtimestamp"], [535, 6, 1, "", "isocalendar"], [535, 6, 1, "", "isoformat"], [535, 6, 1, "", "isoweekday"], [535, 6, 1, "", "now"], [535, 6, 1, "", "replace"], [535, 6, 1, "", "strftime"], [535, 6, 1, "", "strptime"], [535, 6, 1, "", "time"], [535, 6, 1, "", "timestamp"], [535, 6, 1, "", "timetuple"], [535, 6, 1, "", "timetz"], [535, 6, 1, "", "today"], [535, 6, 1, "", "toordinal"], [535, 6, 1, "", "tzname"], [535, 6, 1, "", "utcfromtimestamp"], [535, 6, 1, "", "utcnow"], [535, 6, 1, "", "utcoffset"], [535, 6, 1, "", "utctimetuple"], [535, 6, 1, "", "weekday"]], "pydicom.valuerep.IS": [[536, 6, 1, "", "__init__"], [536, 6, 1, "", "as_integer_ratio"], [536, 6, 1, "", "bit_count"], [536, 6, 1, "", "bit_length"], [536, 6, 1, "", "conjugate"], [536, 5, 1, "", "denominator"], [536, 6, 1, "", "from_bytes"], [536, 5, 1, "", "imag"], [536, 5, 1, "", "numerator"], [536, 5, 1, "", "real"], [536, 6, 1, "", "to_bytes"]], "pydicom.valuerep.ISfloat": [[537, 6, 1, "", "__init__"], [537, 6, 1, "", "as_integer_ratio"], [537, 6, 1, "", "conjugate"], [537, 6, 1, "", "fromhex"], [537, 6, 1, "", "hex"], [537, 5, 1, "", "imag"], [537, 6, 1, "", "is_integer"], [537, 5, 1, "", "real"]], "pydicom.valuerep.PersonName": [[538, 6, 1, "", "__init__"], [538, 4, 1, "", "alphabetic"], [538, 4, 1, "", "components"], [538, 6, 1, "", "decode"], [538, 6, 1, "", "encode"], [538, 6, 1, "", "family_comma_given"], [538, 4, 1, "", "family_name"], [538, 6, 1, "", "formatted"], [538, 6, 1, "", "from_named_components"], [538, 6, 1, "", "from_named_components_veterinary"], [538, 4, 1, "", "given_name"], [538, 4, 1, "", "ideographic"], [538, 4, 1, "", "middle_name"], [538, 4, 1, "", "name_prefix"], [538, 4, 1, "", "name_suffix"], [538, 4, 1, "", "phonetic"]], "pydicom.valuerep.TM": [[539, 6, 1, "", "__init__"], [539, 6, 1, "", "dst"], [539, 6, 1, "", "fromisoformat"], [539, 6, 1, "", "isoformat"], [539, 6, 1, "", "replace"], [539, 6, 1, "", "strftime"], [539, 6, 1, "", "tzname"], [539, 6, 1, "", "utcoffset"]], "pydicom.valuerep.VR": [[540, 6, 1, "", "__init__"], [540, 6, 1, "", "capitalize"], [540, 6, 1, "", "casefold"], [540, 6, 1, "", "center"], [540, 6, 1, "", "count"], [540, 6, 1, "", "encode"], [540, 6, 1, "", "endswith"], [540, 6, 1, "", "expandtabs"], [540, 6, 1, "", "find"], [540, 6, 1, "", "format"], [540, 6, 1, "", "format_map"], [540, 6, 1, "", "index"], [540, 6, 1, "", "isalnum"], [540, 6, 1, "", "isalpha"], [540, 6, 1, "", "isascii"], [540, 6, 1, "", "isdecimal"], [540, 6, 1, "", "isdigit"], [540, 6, 1, "", "isidentifier"], [540, 6, 1, "", "islower"], [540, 6, 1, "", "isnumeric"], [540, 6, 1, "", "isprintable"], [540, 6, 1, "", "isspace"], [540, 6, 1, "", "istitle"], [540, 6, 1, "", "isupper"], [540, 6, 1, "", "join"], [540, 6, 1, "", "ljust"], [540, 6, 1, "", "lower"], [540, 6, 1, "", "lstrip"], [540, 6, 1, "", "maketrans"], [540, 6, 1, "", "partition"], [540, 6, 1, "", "removeprefix"], [540, 6, 1, "", "removesuffix"], [540, 6, 1, "", "replace"], [540, 6, 1, "", "rfind"], [540, 6, 1, "", "rindex"], [540, 6, 1, "", "rjust"], [540, 6, 1, "", "rpartition"], [540, 6, 1, "", "rsplit"], [540, 6, 1, "", "rstrip"], [540, 6, 1, "", "split"], [540, 6, 1, "", "splitlines"], [540, 6, 1, "", "startswith"], [540, 6, 1, "", "strip"], [540, 6, 1, "", "swapcase"], [540, 6, 1, "", "title"], [540, 6, 1, "", "translate"], [540, 6, 1, "", "upper"], [540, 6, 1, "", "zfill"]], "pydicom.values": [[543, 1, 1, "", "convert_AE_string"], [544, 1, 1, "", "convert_ATvalue"], [545, 1, 1, "", "convert_DA_string"], [546, 1, 1, "", "convert_DS_string"], [547, 1, 1, "", "convert_DT_string"], [548, 1, 1, "", "convert_IS_string"], [549, 1, 1, "", "convert_OBvalue"], [550, 1, 1, "", "convert_OWvalue"], [551, 1, 1, "", "convert_PN"], [552, 1, 1, "", "convert_SQ"], [553, 1, 1, "", "convert_TM_string"], [554, 1, 1, "", "convert_UI"], [555, 1, 1, "", "convert_UN"], [556, 1, 1, "", "convert_UR_string"], [557, 1, 1, "", "convert_numbers"], [558, 1, 1, "", "convert_single_string"], [559, 1, 1, "", "convert_string"], [560, 1, 1, "", "convert_tag"], [561, 1, 1, "", "convert_text"], [562, 1, 1, "", "convert_value"], [563, 1, 1, "", "multi_string"]], "pydicom.waveforms": [[564, 0, 0, "-", "numpy_handler"]], "pydicom.waveforms.numpy_handler": [[564, 1, 1, "", "generate_multiplex"], [564, 1, 1, "", "is_available"], [564, 1, 1, "", "multiplex_array"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:method", "7": "py:exception"}, "terms": {"": [0, 2, 3, 4, 8, 9, 10, 12, 16, 17, 20, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 41, 42, 44, 47, 48, 49, 50, 52, 53, 54, 84, 93, 94, 97, 110, 116, 120, 127, 128, 131, 132, 133, 138, 143, 146, 149, 150, 153, 155, 158, 160, 161, 164, 174, 175, 183, 184, 185, 207, 225, 243, 244, 245, 251, 252, 255, 256, 257, 266, 268, 272, 275, 278, 279, 280, 283, 285, 289, 290, 442, 443, 504, 533, 535, 536, 540, 541, 542, 544, 551, 552, 559, 561, 562, 575, 578, 580, 581, 583, 588, 589, 591, 594, 596, 599, 601, 602, 603, 604, 606, 608, 609, 610, 612, 614], "0": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 33, 34, 36, 37, 38, 39, 42, 43, 44, 47, 49, 50, 51, 56, 67, 81, 82, 83, 100, 102, 103, 128, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 158, 160, 161, 170, 171, 172, 176, 177, 183, 184, 185, 208, 211, 213, 214, 216, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 263, 264, 265, 267, 268, 270, 271, 272, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 442, 443, 454, 455, 504, 529, 531, 533, 534, 535, 536, 537, 546, 548, 552, 560, 564, 565, 566, 567, 595, 600, 603, 604, 606, 608, 609, 610, 612, 614], "00": [5, 13, 19, 21, 150, 600], "000": [5, 21, 533, 600, 614], "0000": [2, 8, 12, 20, 26, 27, 28, 42, 47, 198, 504, 540, 578, 599, 604], "000000": [10, 20, 606], "00000000": 176, "000000000": [2, 8, 20], "00000000000000": [26, 28], "00000001": 176, "00000002": 176, "0000200": [2, 8, 20], "0001": [2, 12, 20, 26, 27, 28, 42, 47, 131, 132, 133, 135, 143, 145, 149, 198, 224, 271, 604], "00010": 176, "0002": [2, 12, 20, 26, 27, 28, 29, 39, 42, 47, 50, 131, 132, 133, 135, 143, 145, 149, 185, 198, 211, 213, 214, 224, 245, 268, 271, 272, 274, 275, 282, 283, 442, 604, 608, 612], "0003": [2, 12, 20, 26, 27, 28, 42, 47, 135, 198, 604], "0004": [2, 10, 20, 26, 27, 28, 29, 39, 50, 131, 132, 133, 172, 174, 211, 213, 224, 225, 266, 268, 271, 273, 274, 275, 283, 578, 591, 606, 612], "0005": [20, 26, 28, 47, 76, 77, 78, 79, 131, 132, 133, 164, 165, 564, 578, 579, 604, 605, 606], "0006": [26, 27, 28, 29, 39, 131, 132, 133, 211, 213, 214, 224, 268, 271, 275, 282, 283], "0008": [2, 12, 20, 26, 27, 28, 29, 39, 42, 47, 50, 76, 77, 78, 79, 131, 132, 133, 143, 145, 146, 148, 149, 164, 165, 211, 213, 214, 215, 224, 245, 258, 268, 271, 272, 274, 275, 282, 283, 571, 578, 579, 591, 604, 605, 606, 612], "00080005": 605, "00080008": 605, "0009": [20, 47, 50, 131, 132, 133, 211, 275, 571, 578, 591, 612], "00091002": 605, "000b": 47, "000d": [2, 20], "000e": [2, 20], "000y": 20, "001": [18, 19, 47, 600], "0010": [2, 12, 16, 17, 20, 26, 27, 28, 29, 39, 42, 47, 49, 50, 53, 67, 97, 131, 132, 133, 135, 146, 147, 148, 164, 198, 208, 211, 212, 213, 214, 224, 245, 268, 271, 272, 274, 275, 282, 283, 564, 565, 571, 572, 578, 587, 599, 603, 604, 606, 608, 612], "0011": [2, 20, 29, 39, 49, 131, 132, 133, 208, 211, 213, 214, 224, 268, 269, 271, 274, 275, 282, 283, 284, 612], "0012": [2, 12, 20, 26, 27, 28, 42, 47, 135, 198, 442, 604], "0013": [2, 12, 20, 26, 27, 28, 42, 47, 135, 198, 604, 606], "0014": [2, 20, 26, 27, 28, 604], "0015": 208, "0016": [2, 20, 26, 27, 28, 42, 47, 198, 604], "0017": 198, "0018": [2, 20, 26, 27, 28, 42, 131, 132, 133, 198, 215, 224, 245, 258, 268, 271, 272, 283], "0019": 20, "0019xx43": [578, 597], "001a": 51, "002": [11, 13, 600], "0020": [2, 12, 17, 20, 26, 27, 28, 42, 604, 606], "0021": [2, 20], "0022": [2, 20, 604], "0023": [2, 12, 20, 26, 27], "0025": 20, "0026": [26, 27], "0027": 20, "0028": [2, 20, 29, 39, 45, 50, 131, 132, 133, 143, 145, 146, 148, 149, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 252, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 279, 281, 282, 283, 284, 578, 591, 593, 604, 612], "0029": [20, 131, 132, 133], "002c": [26, 27], "003": [16, 19, 600], "0030": [2, 17, 20, 42, 612], "0031": [2, 20], "0032": [2, 20], "0033": [12, 20], "0036697": [26, 27, 28], "003669700000": [26, 28], "0037": [2, 20], "003a": [51, 131, 132, 133, 564, 614], "004": [12, 13, 600], "0040": [2, 20], "0041": 131, "0043": [20, 26, 28, 604], "005": [2, 5, 8, 13, 600], "0050": [2, 20, 26, 27, 42, 49], "0051": [26, 27], "0052": [2, 20], "0060": [2, 20, 26, 27, 42], "007": [14, 17, 19, 600], "0070": [2, 20, 26, 27], "0071": [26, 27, 28], "0078": [26, 27, 28], "007f": [504, 540], "0080": [2, 20, 26, 27, 28], "0081": [2, 20], "0082": [26, 27, 28], "0083": [2, 20], "0084": [2, 20, 26, 27, 28], "0085": [2, 20], "0086": [2, 20, 26, 27, 28], "0088": 20, "0090": [2, 20], "0091": [2, 20], "00a0": [26, 27, 28], "00b0": [26, 27], "00b6": [26, 27], "00f8": 18, "00fe": 18, "0100": [2, 20, 29, 39, 45, 51, 131, 132, 133, 198, 208, 211, 213, 214, 224, 256, 268, 269, 271, 273, 274, 275, 279, 283, 284, 564, 612, 614], "0101": [2, 20, 29, 39, 131, 132, 133, 211, 213, 217, 219, 224, 260, 262, 268, 271, 275, 281, 283, 612], "0102": [2, 20, 39, 131, 132, 133, 198, 208, 268, 283, 612], "0103": [2, 20, 29, 39, 131, 132, 133, 211, 213, 214, 217, 219, 224, 252, 260, 262, 268, 271, 275, 281, 283, 612], "0104": [131, 132, 133], "0106": [2, 20], "0107": [2, 20], "010c": [26, 27], "011": 19, "0111": [26, 27], "0115": [26, 27], "011a": [26, 27], "0120": 20, "0166": 20, "0180": [26, 27], "0197b5846bb5": [578, 585], "0200": 614, "0201": [2, 20, 578, 590], "0210": [131, 132, 133, 564, 614], "0211": [131, 132, 133], "025109": [10, 606], "0275401": [26, 27, 28], "02754010000000": [26, 28], "033": [22, 612], "035797": 20, "03579711914062": 20, "0400": [2, 8, 20], "0411bab7c985": [578, 585], "045357": [10, 606], "05": [20, 603], "0500": 20, "050743": [10, 606], "072730": [20, 26, 28], "072731": [20, 26, 28, 604], "07992553710938": 20, "079926": 20, "079956": 20, "08": 150, "084": [9, 13, 600], "085000": 20, "093": [20, 21, 600], "095": 20, "095000": 20, "0b00011001": 29, "0b01111111": 37, "0b10000000": 37, "0b100101": [289, 536], "0b1101": [289, 536], "0e0": 533, "0x00": [131, 132, 133, 138, 142, 185, 554], "0x0000": 185, "0x00000000": [147, 150], "0x0002": [132, 185, 255, 257, 278, 280, 604], "0x0006": [578, 588], "0x0008": 604, "0x0009": [47, 131, 132, 133], "0x00091001": 47, "0x000b": 47, "0x0010": [42, 131, 132, 133, 290, 604], "0x00100010": [42, 128, 131, 132, 133], "0x00100015": 290, "0x00100020": 131, "0x00100030": 131, "0x00100040": [131, 132, 133], "0x0015": 290, "0x0016": 604, "0x0018": 42, "0x0028": [243, 251, 255, 257, 278, 280, 604, 612], "0x00291026": [131, 132, 133], "0x0030": 131, "0x0041": [131, 132, 133], "0x004100001": 47, "0x00410001": 110, "0x00410002": 110, "0x0043": 604, "0x01": [16, 47, 131], "0x02": [16, 47], "0x03": 16, "0x1": [534, 537], "0x10": [42, 128, 131, 132, 133, 290], "0x1001": 16, "0x100100010": 85, "0x10011001": 16, "0x10011002": 16, "0x10011003": 16, "0x1002": 604, "0x10021001": [108, 109], "0x10021002": [108, 109], "0x1020": 42, "0x104e": 604, "0x1050": 604, "0x1p": [534, 537], "0x3000": 49, "0x300a": 42, "0x50": 290, "0x5000": 17, "0x6000": [49, 208, 604], "0x6002": 604, "0x6004": 604, "0x6010": 208, "0x601e": 604, "0x60ff": 208, "0x7fe0": 612, "0x888800001": 47, "0xb0": 42, "0xb4": 53, "0xc2": 42, "0xff": [131, 132, 133], "0xff00": 17, "0xffd9": 146, "0xffff": [131, 132, 133, 172, 578, 588], "0xffffffff": 128, "0xffffffffl": 128, "1": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 41, 42, 44, 45, 47, 49, 50, 51, 53, 62, 80, 84, 85, 87, 96, 106, 108, 109, 110, 111, 128, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 146, 150, 151, 152, 158, 160, 161, 164, 176, 185, 198, 208, 211, 213, 214, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 533, 534, 535, 536, 537, 538, 540, 564, 579, 582, 585, 593, 596, 599, 602, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614], "10": [11, 20, 23, 26, 28, 39, 49, 51, 150, 176, 198, 255, 278, 289, 425, 460, 467, 489, 533, 534, 536, 537, 578, 585, 589, 599, 604, 606, 612, 614], "100": [10, 20, 24, 26, 28, 36, 47, 51, 295, 408, 409, 420, 533, 604, 605, 606, 614], "1000": [2, 20, 51, 614], "10000": [51, 614], "1000000000000000055511151231257827021181583404541015625": 533, "10008": [8, 9, 12, 24, 26, 41, 44, 45, 50, 131, 132, 133, 146, 211, 214, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247, 248, 249, 250, 253, 254, 271, 282, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 578, 588, 589, 591, 593, 594, 599, 602, 604], "1001": [16, 20, 47, 131], "1002": [16, 20, 47, 604], "1003": [16, 20], "1004": [20, 564, 578, 591], "1005": 20, "1006": [20, 564, 578, 591], "1007": 20, "1008": 20, "1009": 20, "100a": 20, "100f": 20, "101": [22, 295, 406, 407, 420], "1010": [2, 20, 51, 614], "1011": 20, "1012": 20, "1013": [20, 578, 591], "1014": [20, 578, 594], "1015": 20, "1016": [20, 578, 591], "1017": 20, "1018": 20, "1019": [20, 50], "101a": 20, "101b": 20, "101c": 20, "101d": 20, "101e": 20, "101f": 20, "102": [295, 410, 413, 420, 578, 584], "1020": [2, 20], "102000": 20, "1021": [20, 578, 599], "1023": 20, "1024": [20, 128, 131, 132, 133, 578, 592, 605, 610, 612], "1025": 20, "1026": [20, 131, 132, 133], "1027": 20, "1028": 20, "1029": [20, 578, 592], "102a": 20, "102b": 20, "102c": 20, "102e": 20, "102f": 20, "103": [295, 411, 412, 420, 578, 584], "1030": [2, 20, 578, 592], "1031": 20, "1034": 20, "1035": 20, "1037": 20, "1038": [578, 593], "1039": [20, 606], "104": [22, 295, 345, 346, 347, 348, 349, 414, 415, 420], "1040": [2, 20], "1041": [2, 20], "1042": [20, 578, 593], "1043": 20, "10431": 20, "1044": 20, "1045": 20, "1046": 20, "1047": [20, 578, 593], "1048": 20, "1049": [20, 578, 593], "104a": 20, "104b": [20, 26, 28], "104c": [20, 26, 28], "104d": [20, 26, 28], "104e": [20, 26, 28, 604], "105": [22, 51, 295, 416, 417, 420], "1050": [2, 20, 221, 222, 264, 265, 604], "1051": [2, 20, 221, 222, 264, 265, 578, 596, 604], "1052": [20, 217, 219, 260, 262], "1053": [20, 217, 219, 260, 262, 578, 593], "1054": 20, "1055": 20, "1057": 20, "1058": 20, "105e": 20, "105f": 20, "106": [51, 295, 418, 419, 420], "1060": [2, 20], "1061": 20, "1062": 20, "1067": [578, 593], "1068": 50, "106a": 20, "106b": 20, "107": [20, 295, 371, 420, 578, 585], "1070": [2, 20], "1071": 20, "1072": 20, "1073": [20, 578, 593], "1074": [20, 534, 537], "1075": [20, 578, 593], "1076": 20, "1078": [578, 593], "1079": 604, "107d": 20, "108": [295, 370, 420, 538], "1082": [578, 593], "1083": 50, "1086": [578, 593], "1090": [2, 20], "1091": 20, "10918": [39, 44, 225, 266, 397, 578, 596], "1092": 20, "1093": [20, 578, 594], "1094": 50, "1097": [578, 593], "1099": 20, "10da": 20, "10db": 20, "10dc": 20, "10dd": 20, "10de": 20, "10e6": 20, "10e7": 20, "10e9": 20, "11": [11, 20, 23, 217, 219, 220, 221, 222, 260, 262, 263, 264, 265, 294, 300, 302, 316, 317, 368, 369, 432, 453, 473, 489, 513, 518, 523, 533, 578, 598, 599, 610, 614], "110": [51, 578, 584], "1100": 20, "1101": [578, 591], "1103": [578, 591, 594], "111": [578, 584], "1110": 20, "111079": 20, "1111": 20, "112": 51, "1120": 20, "1127": [578, 594], "112749": 20, "1129": 50, "112936": 20, "113": [578, 585], "1130": [10, 20], "113008": 20, "1133": [578, 599], "114": [578, 585], "1140": [578, 594], "1141": 10, "1142": 10, "1146": [578, 594], "1147": [578, 596], "1149": [578, 594], "1150": 20, "1151": 20, "1152": 20, "1153": [578, 594], "1155": [578, 594], "1156": [578, 594], "116": [20, 26, 27, 28, 51], "1160": 20, "1161": [578, 594], "117": [578, 581], "1178": [578, 594], "118": 10, "1181": [578, 594], "119": [578, 581], "1190": [20, 578, 594], "1193": [578, 594], "1196533885": 10, "12": [0, 23, 30, 34, 39, 41, 51, 69, 211, 252, 253, 358, 359, 472, 513, 526, 528, 533, 606, 614], "120": [20, 51], "1200": [51, 578, 594, 614], "1200x900": 0, "1201": [215, 258], "1203": [215, 258], "1204": [215, 258], "1210": 20, "121006": 613, "1211": [578, 594], "1215": [578, 594], "122": [578, 581], "1220": 606, "1221": [215, 258], "1223": [215, 258], "1224": [215, 258], "1227": 50, "123": [533, 605], "12322": [20, 26, 28, 47, 604], "1234": [578, 594, 608], "12345": [42, 131], "123456": 12, "1234567": 174, "1234abcd": [20, 604], "1237": [578, 594], "123e": 533, "124": 609, "1240": [578, 594], "1243": [578, 599], "1244": [578, 599], "125": [578, 587, 609], "1251": [578, 595], "1253": [578, 595], "1254": [578, 595], "126": [2, 20, 26, 28, 604, 614], "1262": [578, 596], "1263": [578, 599], "1265": [578, 599], "127": [37, 610], "1273": [578, 599], "1278": [578, 596], "128": [2, 9, 12, 20, 26, 28, 37, 132, 156, 169, 179, 180, 181, 185, 198, 404, 449, 604, 609, 612], "128002": 613, "129": [20, 609], "13": [11, 289, 304, 305, 306, 308, 524, 525, 536], "130": 354, "131": [51, 299], "1311": 604, "1312": [578, 596], "1314": [2, 20], "1318": 50, "1327": [578, 596], "133": [20, 169], "1332": [578, 596], "1336": 50, "1338": [578, 596], "1340": [578, 596], "1341": [578, 596], "1346": 50, "1348": [578, 596], "135803": 20, "1359940846": [10, 606], "1361": [578, 596], "13656": 36, "1369": 50, "137": 51, "1372": [578, 596], "1386": 612, "1388": [578, 599], "14": [20, 45, 146, 240, 241, 382, 383, 501, 578, 593], "1400": [174, 606], "1410": [174, 606], "1412": [578, 596], "1414": [578, 598, 599], "1415": [578, 596], "14159": [534, 537], "14180": 37, "1420": [174, 606], "1428": [578, 596], "143": [578, 587], "1430": [172, 606], "1434": [578, 596], "1436": 604, "1438": [578, 596], "1444": [578, 596], "1449": [578, 596], "14495": [37, 394, 609], "1454": [578, 599], "1457": [578, 596], "1476": 10, "1481": [578, 599], "1485": [578, 599], "1487": [578, 597], "149188": 37, "1498": [578, 597], "15": [2, 8, 20, 481, 600, 604, 612, 614], "150": [20, 51], "1500": [174, 578, 597], "150031": [24, 26, 27, 42], "151": [578, 587], "1510": 174, "1511": [174, 578, 597], "1512": 174, "152": 42, "152294": 612, "152326": 612, "152342": [36, 609], "1529": [578, 599], "153557": [24, 26, 28, 42], "15444": [36, 276, 389, 609], "156": [26, 27, 42], "1565": [578, 597], "157": 42, "1571": [578, 597], "1576": 20, "158": 20, "1581": [578, 597], "1582": 36, "1588": [578, 597], "159": [20, 578, 591], "1593": [578, 597], "1594": [578, 597], "1596": [578, 597], "1599": [578, 597], "16": [2, 8, 20, 26, 28, 30, 34, 36, 37, 38, 39, 41, 45, 56, 128, 131, 132, 133, 134, 211, 213, 214, 281, 469, 541, 542, 564, 578, 591, 599, 609, 610, 612, 614], "1600": [2, 8, 20], "1601": 20, "1605775145": 20, "1606": [578, 597], "1609": [578, 597], "1611": [578, 598], "1617": [578, 597], "1632": [578, 598], "1634": [578, 598], "1638": [578, 598], "164": 42, "1648": [578, 598], "1658": [578, 598], "166": 42, "1661": [578, 598], "1666": [578, 599], "1667": [578, 598], "1670": [578, 598], "167161297070865690102504091919570542144": 529, "1674": [578, 598], "1680": [578, 598], "1683": [578, 598], "1689": [578, 599], "1693": [578, 598], "17": [20, 51, 470], "170": 20, "1702": [578, 598], "1703": 604, "171": 42, "17106": 606, "17136": 606, "17166": 606, "17196": 606, "172": [578, 587], "1728": [578, 598], "173032": [10, 606], "1734": [578, 598], "1738": [578, 598], "1739": [578, 599], "1743": [578, 599], "1747": [578, 598], "175": 42, "1752": [578, 599], "1773": [578, 599], "1774": [578, 599], "178": 20, "1781": [578, 599], "1788": [578, 598], "179": 20, "1792": [578, 598], "18": [128, 131, 132, 133, 500, 578, 587, 605], "180": [20, 42], "1803": [578, 598], "181": [3, 5, 42, 600], "18148": 10, "1816": [578, 599], "183": 42, "1838265625": [578, 599], "184": 42, "1844": [578, 599], "1848": [578, 599], "185059": [2, 8, 20], "185434": [2, 8, 20], "1858": 606, "186": [5, 42], "1860": 606, "1873": [578, 599], "1874": [578, 599], "187460": 38, "1895": 84, "19": 307, "190": [2, 20, 42], "19000101": 17, "1907": [578, 599], "1909": [578, 599], "1913": [578, 599], "192": [20, 26, 28, 47, 604], "1922": [578, 599], "1937": [578, 599], "194": [10, 13, 600], "1943": [578, 599], "1957": 609, "1965": [578, 599], "1968": [578, 599], "1969": 20, "197": [578, 587], "197968": 20, "1983": [578, 599], "1994": [578, 599], "19950903": [10, 606], "1997": [578, 599], "19970430": 20, "19999694824219": 20, "199999809265137": 20, "1c": [3, 185, 198, 211, 213, 214, 274, 275, 282, 614], "1c32791bf0": [578, 582], "1ct1": [9, 20, 26, 28, 606], "1d": [97, 208, 211, 212, 213, 214, 243, 256, 279, 282], "1f": 11, "2": [0, 2, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 50, 51, 53, 56, 80, 82, 84, 85, 86, 89, 96, 99, 100, 102, 103, 106, 108, 109, 110, 111, 128, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 146, 147, 150, 151, 152, 164, 172, 198, 208, 211, 213, 214, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 269, 271, 276, 278, 279, 280, 282, 284, 286, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 533, 538, 546, 548, 564, 581, 582, 584, 585, 587, 588, 590, 591, 599, 602, 604, 606, 608, 609, 611, 612, 614], "20": [20, 36, 41, 51, 131, 132, 133, 224, 269, 271, 284, 433, 482, 567, 578, 596], "200": [36, 309, 311, 452, 521, 522], "2000": [2, 8, 20, 29, 32, 35, 39, 41, 44, 45, 80, 131, 132, 133, 146, 224, 230, 231, 232, 234, 235, 244, 246, 247, 254, 255, 257, 271, 276, 278, 280, 282, 389, 578, 591, 594, 599, 608, 612], "200000": 20, "20010101": [10, 131, 606], "2002": [216, 226, 259, 267], "20030505": [10, 606], "20030716": [24, 26, 27, 28, 42], "20030903": [24, 26, 27, 42], "20030903150023": [24, 26, 27, 42], "20040119": [9, 20, 26, 28, 604], "20040119072730": [20, 26, 28, 47, 604], "20040826": [2, 8, 20], "20040826185059": [2, 8, 20], "2006": [131, 132, 133, 578, 599], "2008": [22, 538, 578, 599], "2009": [578, 599], "201": [41, 45, 231, 253, 295, 373, 384, 389], "2010": [578, 599], "2011": [578, 583, 584], "2012": [225, 266], "2013": [578, 599], "2017c": [578, 587], "2018": [23, 603], "2018b": [578, 588], "2018c": [578, 589], "2019": 23, "2019e": [578, 591], "202": [41, 45, 232, 253, 295, 374, 389], "2020": 23, "2020d": [578, 594], "2021": [23, 578, 598], "2021b": [578, 596], "2022": 23, "2022a": [578, 597], "2023": 23, "2023b": [578, 598], "2023d": [578, 599], "2024": [23, 567, 578, 599], "20240720": 12, "2024c": [578, 599], "2025": [578, 599], "203": [41, 42, 45, 230, 253, 295, 372, 389], "20304870605469": 20, "2035": [578, 599], "204": [295, 398], "2040634155": [9, 20, 26, 28], "20406341552734": 20, "2047": [534, 537, 610], "2048": 610, "205": [295, 399, 578, 591], "2062": [578, 599], "2068": 20, "207": 42, "2073": [578, 599], "2075": [578, 599], "2081": [578, 599], "20x": [38, 44, 131, 132, 133, 224, 271, 578, 596], "21": [20, 51, 471], "2104": [578, 599], "212": [578, 587], "216": 42, "2191": 609, "219482421875": 20, "21b0": 20, "22": [356, 475], "22463838056059845879389038257786771680": 529, "2281": 606, "23": [355, 578, 599], "230": 612, "231126": 12, "2338": 606, "235": 42, "236": 602, "239": [24, 26, 27, 28, 42], "23e": 533, "23e2": 533, "24": [20, 36, 41, 351], "240": [2, 8, 20], "240000": [51, 614], "24078": 20, "243": [578, 594], "2452": 604, "249": 612, "25": [29, 51, 466, 529, 534, 537], "253": 22, "255": [37, 610], "256": [578, 588], "256x256": [49, 50], "258": [578, 587], "261": 22, "261792": 37, "263": [578, 591], "265": 22, "270": 613, "273": [578, 591], "276": [10, 606], "277": [22, 578, 591], "280": 50, "285": 50, "28726007": 575, "289295": 12, "290": 13, "291": [578, 589], "292": [578, 588], "29282": 49, "298": 50, "299316": 20, "2d": [578, 594, 612], "3": [2, 4, 5, 8, 10, 12, 16, 17, 19, 20, 22, 23, 26, 28, 29, 30, 32, 34, 36, 37, 38, 39, 41, 42, 43, 45, 47, 50, 51, 56, 67, 99, 106, 108, 109, 110, 128, 130, 131, 132, 133, 135, 136, 137, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 158, 160, 161, 172, 176, 183, 184, 185, 198, 208, 211, 213, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 278, 280, 282, 283, 284, 286, 287, 288, 289, 295, 296, 306, 312, 331, 333, 335, 336, 344, 349, 352, 400, 425, 428, 447, 452, 453, 474, 486, 495, 504, 506, 511, 529, 533, 534, 536, 537, 540, 565, 566, 567, 581, 582, 584, 585, 586, 587, 588, 589, 593, 594, 595, 598, 602, 603, 604, 605, 606, 610, 611, 612, 614], "30": [24, 26, 27, 28, 51, 52, 444, 603], "300": [50, 131, 132, 133, 224, 271], "3000": [49, 131, 132, 133, 208, 217, 219, 260, 262, 578, 591, 604], "3002": [217, 219, 220, 221, 260, 262, 263, 264, 578, 591], "3006": [578, 593], "300a": [18, 26, 27, 28], "300c": [26, 27, 28], "3010": [220, 221, 263, 264], "302": 50, "304": [50, 609], "31": [138, 610], "310": 22, "3100585938": 20, "3125": [2, 8, 20], "3126": 606, "316": 22, "31906": [10, 606], "32": [34, 36, 39, 131, 132, 133, 134, 140, 150, 211, 214, 281, 533, 564, 578, 588, 596, 599, 610, 614], "320": [20, 50, 609, 610], "3204": 604, "321": 22, "321000e": 533, "324": [22, 534, 537], "327": 22, "32767": [578, 599], "32768": [20, 26, 28, 36, 37, 604], "328": 50, "33": 319, "331": 50, "333": 609, "334": 50, "334412": [36, 609], "338": 20, "339": 50, "34": [318, 458, 460], "346": [22, 578, 587], "35": [128, 131, 132, 133, 176, 363], "350": 20, "353": [578, 587], "355": 50, "363": 22, "3678b1be6aca": [578, 585], "3680043": [442, 443, 529], "37": [51, 289, 536], "371919006": 613, "373": [20, 22], "374": 50, "377": 50, "378": 50, "38": [36, 375], "380": 602, "3816": 20, "39": 315, "3994": 20, "3d": [2, 4, 8, 20, 256, 279, 578, 594, 612], "3ed": 22, "3rd": [215, 217, 219, 220, 221, 257, 258, 260, 262, 263, 264, 280], "4": [2, 8, 9, 10, 12, 16, 20, 21, 23, 24, 26, 28, 32, 34, 36, 37, 38, 39, 41, 42, 44, 45, 47, 50, 53, 130, 131, 132, 133, 138, 142, 146, 147, 150, 151, 152, 153, 180, 181, 185, 198, 217, 219, 220, 221, 222, 224, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 246, 247, 248, 249, 252, 253, 254, 260, 262, 263, 264, 265, 271, 282, 286, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 451, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 534, 537, 560, 584, 589, 590, 593, 594, 596, 599, 602, 604, 606, 613, 614], "40": [20, 36, 51, 451, 578, 596], "400": [20, 50], "4000": [2, 8, 20], "4095": [30, 34, 39, 252], "413": 50, "414": 533, "41421356": 533, "42": [16, 578, 581], "422": 50, "424152": 38, "43": [367, 578, 581], "431": 50, "44": [20, 377], "45": 378, "452": [578, 591], "46": 603, "46076": 36, "46100": 36, "464": [578, 588], "46af": 606, "47": [578, 581], "480": [20, 609, 610], "481": [24, 26, 307, 308, 351, 355, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 481, 482, 500, 501], "484": 49, "489": [578, 588], "494": 85, "498": [50, 442, 443, 529, 578, 588], "4ed698a7bfb": [578, 584], "4mr1": [2, 8, 17, 20], "4x": 41, "5": [8, 9, 10, 12, 13, 16, 20, 22, 23, 24, 26, 29, 32, 36, 37, 38, 39, 41, 42, 44, 45, 50, 51, 56, 128, 130, 131, 132, 133, 134, 138, 142, 145, 146, 147, 148, 149, 150, 152, 153, 202, 208, 214, 220, 221, 222, 224, 225, 242, 250, 253, 254, 256, 263, 264, 265, 266, 269, 271, 279, 282, 284, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 375, 376, 377, 378, 379, 381, 382, 383, 384, 400, 401, 402, 403, 404, 405, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 533, 538, 593, 594, 602, 603, 604, 606, 608, 609, 612, 614], "50": [8, 41, 45, 50, 51, 146, 236, 253, 282, 295, 390, 397, 424, 504, 578, 599, 612], "500": [602, 604], "501": [325, 326, 327, 328, 329, 330, 331], "51": [2, 8, 20, 41, 45, 146, 237, 253, 295, 391, 397], "510": 606, "5100": [2, 20], "512": [2, 20, 164, 208, 578, 588], "512x512": [49, 50], "51698a8366f2": 606, "52": [578, 584], "524288": 52, "531250000000": [24, 26, 27, 28], "53579711914062": 20, "537": [578, 591], "54": [529, 578, 599], "5400": [51, 131, 132, 133, 564, 614], "5457": [2, 8, 20], "55": [51, 578, 581], "566": 50, "57": [41, 45, 146, 240, 253, 282, 295, 395, 397, 578, 589, 594, 599], "58": [578, 581, 610], "580": 600, "581": 604, "584": [578, 589], "59": 401, "5962": [2, 8, 10, 20, 26, 28, 47, 604], "597": [578, 588], "599": [578, 588], "5e": [534, 537], "5x": [45, 131, 132, 133, 224, 271, 578, 596], "6": [2, 8, 10, 20, 23, 26, 28, 32, 36, 39, 41, 45, 47, 50, 56, 78, 128, 130, 131, 132, 133, 142, 211, 225, 266, 282, 289, 330, 357, 368, 431, 447, 461, 480, 494, 502, 505, 512, 519, 531, 535, 536, 538, 579, 584, 585, 587, 594, 595, 598, 599, 603, 604, 614], "60": [51, 578, 585, 596], "600": [2, 8, 20], "6000": 49, "6002": 49, "60060977935791": [20, 26, 28, 604], "601": [341, 342], "601e": 49, "605": [578, 588], "60xx": [49, 208, 269, 284, 578, 591, 604], "6154": 606, "62": 51, "620": [578, 588], "623": [578, 593], "624": [578, 589], "6247": 606, "625": [578, 588], "6278": 606, "628": 50, "62824007": 575, "63": [2, 8, 20, 604, 610], "630": 20, "631": 604, "63580322265625": 20, "64": [2, 8, 20, 32, 34, 36, 39, 50, 211, 223, 270, 281, 529, 564, 578, 581, 610, 614], "640": [578, 588], "6406": [2, 8, 20], "649": [578, 588], "65": [51, 313], "650": [26, 27], "65535": [30, 34, 39, 252, 606], "66": [333, 478, 488, 492, 493, 499, 502], "660": [578, 589], "661468": [9, 20, 612], "663": [578, 589], "666": [578, 590], "667": 529, "67": [479, 527], "6716": 20, "677": [578, 589], "678": [604, 609], "68": [51, 477, 497, 498], "682": [578, 589], "685": [578, 591], "6854": 604, "689": [578, 589], "69": 314, "693": [578, 591], "695": [578, 589], "696": [578, 589], "69999694824219": 20, "699997": 20, "699999809265137": 20, "6b949a5b925b": [578, 585], "7": [10, 20, 23, 24, 26, 27, 29, 36, 39, 41, 42, 50, 130, 134, 138, 152, 174, 198, 202, 211, 225, 266, 282, 295, 317, 334, 343, 344, 427, 428, 429, 430, 434, 436, 458, 476, 483, 484, 485, 486, 487, 491, 521, 531, 535, 585, 589, 598, 599, 603, 606, 614], "70": [41, 45, 146, 241, 253, 282, 295, 379, 396, 397, 578, 593, 594, 599], "700": [10, 578, 589, 606], "700000": 20, "704": [578, 589], "706": 50, "707": [578, 589], "71": 293, "713": [578, 589], "715": [578, 589], "716": [578, 589], "717": [578, 589], "718": 20, "72": [490, 578, 581], "722": [578, 589], "7230010": [10, 606], "726": [578, 589], "728": [578, 589], "729": [578, 589], "73": [445, 578, 581], "730": [578, 590], "7369": 604, "737": [578, 589], "74": 448, "740": [578, 589], "7400": 20, "741": [26, 27], "746": [578, 599], "748": 20, "749": 20, "75": [20, 26, 27, 51, 446], "750": 20, "750675506": 20, "751": [24, 26, 27, 28], "753": [578, 590], "757": [578, 590], "76": 360, "760": [578, 590], "763": 20, "764": 20, "7654321": 174, "77": [9, 20, 24, 26, 27, 28, 42, 321, 322, 334, 435, 436, 437, 438, 440, 495, 508, 509, 510, 511, 512, 514, 515, 516, 519, 520], "770": 50, "774b7a55db33": [578, 585], "77654033": [10, 606], "777": [24, 26, 27, 42], "7777": [24, 26, 27, 42], "78": [298, 381, 400, 405, 434, 494, 496, 517, 578, 582], "78187": [10, 606], "784578": 20, "785": [578, 590], "788": [578, 590], "789": [578, 590], "79": [423, 578, 582], "791": [578, 590], "79187": 20, "799": [578, 590], "799988": 20, "7fe0": [2, 20, 26, 28, 42, 50, 53, 67, 97, 131, 132, 133, 143, 145, 146, 147, 148, 149, 164, 211, 212, 213, 214, 224, 271, 275, 565, 571, 572, 578, 587, 591, 599, 604, 612], "8": [2, 8, 11, 20, 22, 23, 26, 27, 29, 30, 34, 36, 37, 38, 39, 41, 42, 44, 45, 50, 81, 130, 131, 132, 133, 134, 176, 177, 208, 211, 213, 214, 216, 220, 221, 222, 225, 244, 245, 252, 253, 256, 259, 263, 264, 265, 266, 269, 272, 279, 281, 282, 284, 294, 303, 321, 381, 435, 442, 443, 465, 504, 522, 529, 540, 564, 580, 583, 587, 589, 591, 594, 597, 598, 599, 609, 614], "80": [2, 8, 20, 36, 41, 44, 45, 51, 53, 131, 132, 133, 146, 224, 238, 248, 253, 254, 271, 282, 295, 392, 394, 441, 614], "800": [36, 609], "804": [578, 590], "81": [41, 44, 45, 51, 131, 132, 133, 146, 224, 239, 249, 253, 254, 271, 282, 295, 393, 394, 439, 578, 582], "810": [578, 590], "815": [578, 590], "819": [578, 590], "8192": [20, 56, 67, 182], "82": [324, 578, 582], "820": [578, 590], "822": [578, 591], "826": [442, 443, 529, 578, 591], "826203": [26, 27], "83": [2, 8, 20], "833": 604, "835": [578, 590], "838": [578, 590], "84": [578, 582], "840": [8, 9, 12, 24, 26, 41, 44, 45, 50, 131, 132, 133, 146, 211, 214, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247, 248, 249, 250, 253, 254, 271, 282, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 578, 588, 589, 591, 593, 594, 599, 602, 604], "848": [578, 591], "84af4b240add": [578, 585], "85": 51, "850": [578, 590], "8508": 37, "852": [20, 578, 590], "856": [578, 590], "8601": [531, 535, 539], "862": 50, "862399669": 20, "862399761": 20, "864": [578, 590], "86e6b75b": 606, "87": [20, 37, 609], "87000000000": [24, 26, 27, 28], "871": [225, 266], "87507166259346337659265156363895084463": 529, "878": [578, 596], "88": [26, 27, 42, 293, 300, 313, 314, 318, 319, 356, 360, 363, 379, 401, 424, 445, 446, 448, 451, 477, 490, 527, 578, 582], "887": [578, 591, 604], "888": [26, 27, 42], "89": 11, "891": [578, 591], "892": [578, 591], "894": [578, 591], "896": [578, 591], "899": [578, 591], "8d": 11, "9": [20, 23, 26, 27, 36, 37, 38, 42, 50, 51, 81, 176, 177, 208, 296, 297, 301, 303, 312, 322, 343, 344, 364, 365, 366, 376, 431, 454, 455, 464, 480, 483, 491, 503, 518, 529, 588, 591, 594, 599, 614], "90": [2, 8, 20, 41, 44, 45, 51, 131, 132, 133, 146, 224, 235, 247, 253, 254, 271, 282, 295, 323, 386, 389, 578, 591], "904": 42, "905": [42, 50], "906": 42, "9063": [2, 8, 20], "907": 50, "909": 42, "91": [2, 8, 20, 41, 44, 45, 131, 132, 133, 146, 224, 234, 246, 253, 254, 271, 282, 295, 385, 389, 426, 578, 583, 591], "910": 42, "911": 42, "912": [20, 578, 591], "914": 42, "915": [578, 591], "916": [42, 578, 581], "917": [578, 591], "92": [146, 295, 388, 389, 578, 588, 589], "921600": [36, 37, 38], "921f9f01b866ep": [534, 537], "922": 42, "9223372036854775807": [130, 286], "923": 42, "924339": [2, 8, 20], "925": 42, "927": 42, "929": 42, "93": [51, 146, 295, 387, 389, 578, 583, 589], "932": [578, 591], "938": 42, "940": [578, 591], "942": [42, 578, 591], "947": [578, 591], "95": [20, 578, 584, 587], "951": [578, 591], "954": 42, "955": [20, 42], "959": 42, "96": [578, 583], "968": [578, 591], "97": [578, 583], "971": [578, 591, 612], "973283917": 20, "98": [578, 584], "981": [578, 591], "9834": 529, "984": 20, "984375": [534, 537], "98890234": [10, 606], "98892001": 606, "98892003": 606, "99": [26, 27, 42, 45, 211, 227, 253, 295, 332, 507], "994": [578, 591], "999": [26, 27, 42, 578, 591], "9990268": [26, 27], "9999": [26, 27, 42, 603], "999999999999ap": [534, 537], "9b92b336e7d4": [578, 585], "A": [10, 20, 28, 29, 30, 34, 36, 37, 38, 39, 42, 44, 52, 53, 54, 76, 77, 89, 104, 105, 107, 131, 132, 133, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 160, 161, 162, 164, 165, 172, 174, 175, 176, 177, 183, 184, 185, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 257, 258, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 275, 276, 278, 280, 281, 282, 288, 504, 529, 530, 533, 538, 540, 551, 558, 561, 562, 575, 578, 588, 596, 599, 602, 604, 606, 609, 610, 612], "AS": [20, 32, 559], "AT": [32, 544, 578, 591, 596, 598], "And": [25, 26, 27, 28, 30, 578, 594, 602, 603, 604, 612, 614], "As": [43, 45, 47, 69, 533, 604, 609, 613], "At": [30, 34, 602, 613], "Be": 45, "But": 604, "By": [24, 26, 50, 172, 174, 537, 578, 582, 604, 610, 612], "For": [0, 17, 24, 26, 27, 29, 30, 34, 36, 37, 38, 39, 42, 43, 47, 49, 50, 52, 53, 120, 128, 131, 132, 133, 138, 146, 147, 150, 172, 174, 208, 223, 224, 243, 244, 245, 251, 252, 255, 256, 257, 270, 271, 272, 278, 279, 280, 282, 533, 538, 578, 584, 594, 599, 602, 603, 604, 606, 608, 609, 610, 612], "IN": [207, 285], "If": [24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 42, 43, 44, 50, 51, 52, 53, 54, 56, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 94, 97, 100, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 138, 143, 144, 145, 146, 147, 149, 150, 153, 154, 158, 160, 161, 162, 164, 165, 166, 169, 173, 174, 175, 176, 182, 183, 184, 185, 197, 198, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 243, 244, 245, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 274, 277, 278, 279, 280, 281, 283, 284, 285, 287, 289, 290, 504, 529, 530, 533, 534, 535, 536, 538, 540, 541, 545, 546, 547, 548, 553, 557, 560, 564, 578, 584, 596, 599, 601, 602, 603, 604, 605, 606, 608, 609, 610, 612, 613, 614], "In": [24, 25, 26, 27, 30, 34, 37, 39, 42, 44, 47, 50, 52, 53, 76, 131, 132, 133, 174, 268, 283, 504, 533, 540, 578, 586, 592, 594, 598, 599, 602, 603, 604, 606, 609, 610, 612], "Into": 602, "It": [17, 26, 27, 30, 34, 42, 43, 47, 50, 52, 54, 131, 132, 133, 147, 174, 185, 244, 578, 584, 585, 602, 603, 604, 605, 606, 608, 612, 614], "Its": 128, "NEAR": [37, 609], "NOT": [208, 243, 251, 274], "Near": [41, 44, 131, 132, 133, 146, 224, 239, 249, 253, 254, 271, 578, 599, 609], "No": [20, 36, 41, 177, 550, 601, 609, 610], "Not": [533, 543, 544, 545, 546, 547, 548, 553, 554, 556, 559], "OF": [32, 185, 578, 593, 599, 610, 612], "ON": 20, "OR": 538, "Of": 10, "On": [20, 39, 182, 538, 605], "One": [16, 29, 47, 49, 52, 53, 108, 109, 110, 131, 132, 133, 215, 225, 243, 244, 251, 257, 258, 266, 280, 602, 603], "Or": [42, 608], "That": [43, 47], "The": [0, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 56, 67, 69, 76, 77, 78, 79, 97, 99, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 158, 160, 161, 162, 164, 166, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 197, 198, 200, 201, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 243, 244, 245, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 289, 290, 292, 504, 529, 530, 531, 533, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 575, 578, 581, 588, 589, 594, 599, 602, 603, 604, 605, 608, 609, 610, 612, 613, 614], "Then": [607, 608], "There": [36, 43, 48, 50, 131, 132, 133, 224, 271, 578, 589, 602, 603, 604, 605, 609, 614], "These": [1, 6, 7, 15, 40, 42, 43, 578, 594, 599, 604], "To": [10, 24, 26, 28, 32, 36, 37, 38, 42, 43, 45, 49, 51, 52, 131, 132, 133, 156, 162, 244, 255, 257, 278, 280, 289, 536, 578, 584, 589, 594, 602, 603, 604, 606, 608, 609, 610, 612, 614], "Will": [44, 109], "With": [37, 131, 132, 133, 252, 504, 540, 609], "_": [177, 603], "_1sigmalowervalueofpopul": 613, "__class__": [531, 535], "__concepts_version__": [578, 599], "__contains__": [85, 578, 594], "__dir__": [578, 584], "__doc__": [0, 2, 8, 11, 14, 16, 20, 22], "__eq__": [578, 588, 596], "__getitem__": [131, 132, 133, 504, 540, 604], "__init__": [14, 128, 130, 131, 132, 133, 134, 158, 160, 161, 173, 174, 175, 207, 243, 244, 251, 252, 285, 286, 287, 288, 289, 504, 531, 533, 534, 535, 536, 537, 538, 539, 540], "__iter__": [578, 579, 594, 604], "__main__": [0, 14, 25, 26], "__name__": [0, 14, 25, 26], "__ne__": [578, 588], "__new__": 532, "__next__": [578, 594], "__setattr__": 84, "__str__": [578, 588, 596, 604], "__traceback__": 156, "__write_like_origin": 185, "_blob": 14, "_build": 603, "_check_dataset": 606, "_cid_dict": 287, "_concepts_dict": 287, "_dataset__write_like_origin": [131, 132, 133], "_define_assess": 172, "_define_empti": 172, "_define_encap_doc": 172, "_define_generic_cont": 172, "_define_generic_content_id": 172, "_define_hanging_protocol": 172, "_define_imag": 172, "_define_impl": 172, "_define_implant_assi": 172, "_define_implant_group": 172, "_define_key_object_doc": 172, "_define_palett": 172, "_define_pati": 172, "_define_present": 172, "_define_radiotherapi": 172, "_define_rt_dos": [172, 606], "_define_rt_plan": 172, "_define_rt_structure_set": 172, "_define_rt_treatment_record": 172, "_define_seri": 172, "_define_spectroscopi": 172, "_define_sr_docu": 172, "_define_studi": 172, "_define_surface_scan": 172, "_dicom_dict": 42, "_from_codifi": [24, 26], "_list": 604, "_new": 14, "_pretty_str": [8, 604], "_recordifi": 606, "_storage_sopclass_uid": [578, 594, 599], "_t": 563, "_validate_arrai": 609, "_validate_plugin": 612, "a1": 4, "a2": 4, "a3": 4, "a_large_amount_of_data": 32, "a_large_jpeg2000_fil": 32, "ab": [504, 540, 564], "abc": 538, "abcd1234": [20, 604], "abil": [26, 27, 50, 578, 586, 587, 594, 599], "abl": [32, 45, 47, 578, 593, 599, 605, 606, 614], "about": [42, 43, 50, 53, 94, 269, 284, 604, 606, 609, 612, 614], "abov": [18, 24, 25, 26, 27, 28, 42, 47, 49, 52, 128, 131, 132, 133, 208, 244, 255, 257, 278, 280, 578, 588, 603, 606, 612], "absenc": 147, "absent": [36, 37, 538, 614], "absolut": [33, 37, 67, 104, 105, 106, 107, 131, 132, 133, 154, 158, 160, 161, 173, 174, 216, 224, 226, 259, 267, 271, 289, 533, 536, 578, 599, 609], "absorb_delimiter_item": 70, "abstract": [533, 606], "accept": [24, 26, 32, 43, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 131, 132, 133, 150, 578, 593, 594, 596, 598, 602], "access": [2, 8, 20, 23, 26, 27, 30, 34, 36, 37, 42, 45, 47, 49, 54, 56, 69, 82, 99, 131, 132, 133, 164, 575, 578, 580, 587, 593, 594, 598, 599, 603, 605, 606, 607, 608, 609, 610, 611, 613], "accessionnumb": 603, "accident": [602, 606], "accomplish": 47, "accord": [32, 52, 128, 164, 196, 604, 606], "accordingli": [37, 38, 131, 132, 133], "account": [39, 578, 599], "achiev": [53, 142], "acknowledg": [578, 585], "acm": [16, 47, 110], "acq": 20, "acquisit": [2, 8, 20], "acquisitiondata": 603, "across": [578, 584, 599], "act": 604, "activ": 608, "actual": [10, 20, 25, 26, 29, 30, 34, 37, 39, 42, 49, 128, 131, 132, 133, 174, 185, 208, 211, 214, 244, 245, 252, 255, 257, 272, 278, 280, 286, 602, 606, 609, 610, 612], "ad": [20, 25, 26, 27, 36, 37, 38, 42, 46, 53, 56, 67, 80, 82, 84, 85, 89, 91, 96, 99, 100, 102, 103, 106, 128, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 144, 145, 149, 151, 152, 153, 154, 172, 174, 175, 183, 184, 185, 198, 207, 213, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 278, 279, 280, 283, 284, 287, 288, 289, 450, 504, 546, 548, 564, 578, 579, 580, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599, 601, 602, 605, 610, 613], "adam": 538, "adapt": [578, 589], "adapt_dataset_from_byt": 14, "add": [0, 2, 6, 10, 12, 15, 18, 19, 20, 25, 26, 27, 30, 34, 42, 43, 47, 49, 53, 108, 110, 111, 128, 131, 132, 133, 134, 138, 140, 172, 174, 175, 185, 224, 244, 252, 256, 268, 271, 279, 283, 533, 578, 587, 590, 596, 598, 599, 600, 602, 603, 604, 606, 608, 609, 610, 614], "add_argu": [25, 26], "add_custom": [172, 174, 606], "add_dict_entri": [42, 47, 111, 578, 587, 590], "add_new": [16, 47, 131, 132, 133, 134, 604], "add_new_priv": [47, 131, 132, 133, 578, 599], "add_pars": [25, 26], "add_plugin": [30, 34, 244, 252], "add_private_dict_entri": [16, 42, 47, 578, 590], "add_subpars": [25, 26], "addit": [20, 26, 27, 28, 30, 34, 39, 76, 131, 132, 133, 173, 174, 224, 244, 245, 252, 255, 257, 268, 271, 272, 278, 280, 283, 535, 538, 539, 586, 594, 596, 599, 605, 606, 609, 612], "addition": 538, "adher": 43, "adit": [578, 581], "adjust": 533, "admin": 608, "advanc": [30, 34, 53, 244], "advantag": [20, 578, 585], "ae": [2, 20, 26, 28, 32, 47, 198, 543, 559, 578, 587, 599, 604], "affect": [30, 34, 209, 210, 211, 212, 213, 214, 275, 533, 602, 603], "after": [2, 8, 20, 26, 27, 28, 29, 30, 34, 37, 47, 53, 131, 132, 133, 142, 144, 147, 153, 154, 169, 175, 180, 181, 182, 185, 198, 243, 244, 255, 257, 278, 280, 504, 533, 540, 578, 593, 596, 599, 602, 603, 604, 606, 608], "afterward": [154, 602], "ag": [20, 32], "again": [43, 52, 602, 606], "against": [43, 128, 174, 578, 583, 594], "agent": [2, 8, 20], "aid": [578, 586], "aim": [53, 578, 594], "al": 23, "algorithm": [38, 529], "alia": [130, 286, 578, 594], "alias": [578, 580, 593], "align": 49, "all": [4, 6, 8, 10, 12, 17, 20, 24, 26, 27, 28, 37, 39, 42, 43, 44, 46, 52, 54, 67, 69, 97, 110, 131, 132, 133, 136, 137, 138, 142, 147, 150, 158, 160, 161, 164, 174, 176, 183, 184, 185, 207, 224, 244, 245, 252, 255, 257, 271, 272, 278, 280, 285, 287, 295, 504, 533, 540, 571, 572, 578, 579, 580, 581, 584, 586, 589, 591, 594, 596, 597, 598, 599, 600, 602, 603, 604, 608, 609, 610, 612], "alloc": [2, 8, 20, 29, 36, 37, 38, 39, 41, 45, 53, 131, 132, 133, 211, 214, 224, 243, 244, 245, 251, 255, 256, 257, 268, 269, 271, 272, 273, 278, 279, 280, 281, 283, 284, 578, 598, 599, 610, 612, 614], "allow": [16, 17, 24, 26, 27, 32, 36, 37, 39, 43, 47, 49, 56, 88, 128, 131, 132, 133, 172, 174, 224, 256, 271, 279, 537, 578, 580, 581, 590, 593, 594, 596, 597, 598, 599, 608, 609, 610], "allow_ds_float": [567, 578, 584], "allow_excess_fram": [29, 610], "alltransfersyntax": [578, 594], "almar": [578, 582], "almost": 50, "alon": 76, "along": [23, 174, 245, 272, 609], "alpha": [20, 215, 258, 504, 540, 578, 590, 591, 613], "alphabet": [131, 132, 133, 504, 538, 540, 578, 598], "alphanumer": [174, 176, 578, 599], "alreadi": [26, 28, 36, 37, 38, 40, 44, 50, 53, 76, 109, 131, 132, 133, 135, 147, 175, 179, 185, 198, 207, 224, 256, 268, 271, 279, 283, 532, 578, 586, 599, 604, 606, 612, 614], "already_convert": 128, "also": [3, 17, 26, 27, 28, 29, 30, 32, 34, 37, 39, 42, 47, 50, 52, 53, 78, 118, 131, 132, 133, 169, 198, 224, 244, 245, 252, 255, 257, 271, 272, 278, 280, 289, 504, 533, 536, 538, 540, 578, 579, 580, 581, 582, 585, 586, 589, 590, 594, 599, 602, 603, 604, 605, 606, 608, 609, 612, 613, 614], "alter": 52, "altern": [10, 23, 42, 131, 220, 221, 222, 263, 264, 265, 602, 604, 606, 612], "although": [50, 174, 216, 226, 259, 267, 578, 599, 606, 612], "alwai": [26, 28, 45, 47, 50, 120, 128, 131, 132, 133, 134, 164, 211, 223, 244, 255, 257, 270, 278, 280, 282, 533, 578, 590, 594, 596, 599, 609, 610, 612], "am": 603, "ambigu": [183, 184, 578, 587, 589, 590, 594], "american": 53, "amongst": 175, "amount": [32, 44, 67, 131, 132, 133, 209, 224, 243, 271, 533, 609, 610, 612, 614], "an": [2, 10, 11, 16, 23, 24, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 42, 43, 44, 47, 48, 49, 50, 52, 53, 54, 56, 67, 69, 76, 77, 78, 84, 85, 86, 89, 97, 106, 107, 109, 115, 118, 119, 125, 128, 129, 131, 132, 133, 134, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 164, 165, 174, 175, 184, 185, 195, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 243, 244, 245, 251, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 274, 276, 277, 279, 280, 281, 283, 284, 285, 287, 289, 292, 504, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 557, 564, 575, 578, 581, 582, 588, 590, 591, 593, 594, 596, 597, 599, 602, 603, 604, 606, 608, 609, 610, 613, 614], "analog": [47, 131, 132, 133], "analys": [6, 21, 600], "anatom": 20, "ancestor": [174, 175, 183, 184], "angl": [2, 8, 20], "ani": [0, 10, 24, 26, 27, 29, 30, 32, 34, 36, 37, 39, 42, 43, 48, 49, 51, 67, 79, 92, 106, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 131, 132, 133, 135, 138, 140, 142, 156, 158, 159, 160, 161, 166, 174, 175, 185, 198, 207, 208, 221, 222, 223, 224, 243, 244, 245, 251, 252, 255, 256, 257, 264, 265, 270, 271, 272, 276, 278, 279, 280, 287, 289, 290, 504, 531, 533, 534, 535, 536, 537, 538, 539, 540, 552, 556, 562, 563, 578, 580, 581, 590, 596, 599, 602, 603, 606, 608, 609, 610, 612], "annex": [10, 36, 37, 38, 39, 50, 51, 128, 131, 132, 133, 138, 142, 145, 146, 147, 148, 149, 150, 152, 153, 172, 211, 217, 219, 220, 221, 222, 225, 256, 260, 262, 263, 264, 265, 266, 269, 279, 282, 284, 529, 606], "announc": 97, "anonym": [6, 15, 19, 42, 47, 578, 579, 580, 590, 600], "anoth": [43, 225, 266, 578, 594, 604], "answer": [38, 601, 604], "anterior": 20, "anymor": 93, "anyon": [578, 586], "anyth": [32, 47, 49, 50, 256, 279, 609], "anywher": [42, 604], "apertur": 18, "api": [53, 131, 132, 133, 244, 245, 252, 255, 257, 272, 278, 280, 578, 588, 602, 605, 613], "app": 22, "app14": [578, 596], "appear": [156, 606], "append": [4, 11, 18, 20, 42, 142, 207, 285, 529, 604, 614], "appli": [1, 6, 10, 16, 29, 36, 39, 50, 51, 67, 78, 80, 131, 132, 133, 174, 215, 216, 217, 218, 219, 220, 221, 222, 243, 244, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 278, 280, 573, 578, 591, 594, 599, 603, 608, 609, 614], "applic": [2, 20, 26, 27, 28, 32, 43, 44, 47, 198, 604, 609], "apply_color_lut": [50, 567, 578, 591, 599], "apply_icc_profil": [226, 267, 567, 578, 599], "apply_j2k_correct": [567, 578, 599], "apply_j2k_sign_correct": 29, "apply_jls_sign_correct": 29, "apply_modality_lut": [50, 218, 220, 221, 222, 261, 263, 264, 265, 567, 578, 591, 593, 599], "apply_presentation_lut": [567, 578, 599], "apply_rescal": [567, 578, 594, 599, 612], "apply_voi": [221, 222, 264, 265, 567, 578, 594, 599], "apply_voi_lut": [50, 218, 261, 567, 578, 591, 593, 594, 599], "apply_window": [220, 221, 263, 264, 567, 578, 594, 599], "approach": 205, "appropri": [44, 49, 50, 128, 169, 207, 213, 243, 533, 562, 578, 599, 609, 610], "approv": [602, 603], "approx": [578, 581, 585], "approxim": 52, "appveyor": [578, 587], "apr": 603, "ar": [4, 10, 18, 24, 26, 27, 28, 29, 32, 36, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 56, 67, 69, 76, 77, 81, 82, 85, 94, 97, 101, 102, 108, 110, 111, 128, 131, 132, 133, 134, 135, 138, 140, 143, 145, 146, 147, 148, 149, 150, 158, 160, 161, 164, 169, 172, 174, 177, 183, 184, 185, 198, 207, 209, 210, 214, 215, 217, 219, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 252, 255, 257, 258, 260, 262, 264, 265, 268, 270, 273, 276, 278, 280, 281, 283, 287, 289, 504, 533, 535, 536, 538, 539, 540, 541, 556, 559, 561, 563, 578, 584, 589, 590, 591, 593, 594, 596, 597, 599, 601, 602, 603, 604, 606, 608, 609, 610, 612, 613, 614], "arang": [3, 614], "archibald": [10, 606], "archiv": 20, "area": 602, "aren": [174, 243, 244, 252, 578, 599, 604, 606, 610], "arg": [25, 26, 131, 132, 133, 156, 158, 159, 160, 161, 290, 504, 531, 535, 538, 539, 540, 578, 582], "arg2": [290, 578, 581], "argpars": [25, 26], "argument": [24, 25, 26, 27, 28, 42, 44, 53, 92, 131, 132, 133, 183, 184, 185, 206, 207, 285, 287, 289, 504, 533, 535, 536, 539, 540, 578, 580, 581, 589, 590, 591, 592, 593, 594, 599, 605, 606, 609, 612], "argv": [0, 4, 14], "arithmet": 533, "around": [42, 578, 599, 602], "arr": [2, 3, 37, 42, 49, 50, 51, 53, 131, 132, 133, 208, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 243, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 271, 277, 278, 279, 280, 282, 283, 609, 610, 612, 614], "arr_downsampl": 2, "arrai": [2, 4, 14, 20, 26, 28, 29, 37, 42, 49, 50, 51, 52, 53, 82, 97, 102, 128, 131, 132, 133, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 243, 244, 251, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 271, 278, 279, 280, 282, 283, 289, 532, 536, 578, 579, 589, 590, 593, 594, 599, 604, 610, 612], "array_equ": 609, "artifact": 603, "as_arrai": [29, 213, 244, 269, 284, 612], "as_buff": [29, 244], "as_float": 281, "as_fram": 243, "as_integer_ratio": [289, 533, 534, 536, 537], "as_pixel_opt": 567, "as_raw": [3, 51, 564, 578, 598, 614], "as_rgb": [29, 131, 132, 133, 245, 272, 609], "as_tupl": 533, "ascii": [32, 177, 203, 504, 540, 578, 590], "ask": [38, 601, 602, 603], "aspect": 4, "assert": [36, 37, 602, 605, 609, 610, 612], "assess": 172, "assi": 172, "assign": [17, 42, 69, 128, 578, 584, 591, 597, 608], "associ": [131, 132, 133, 243, 251], "assum": [4, 25, 26, 37, 44, 50, 89, 147, 504, 540, 578, 587, 606, 609, 612, 614], "assume_implicit_vr_switch": [567, 578, 596], "astimezon": 535, "astyp": [610, 614], "at_top_level": 165, "attach": 174, "attempt": [29, 30, 34, 146, 184, 185, 564, 578, 587, 596, 599, 604], "attr": 53, "attribut": [32, 39, 47, 69, 84, 128, 130, 131, 132, 133, 157, 158, 160, 161, 173, 174, 175, 185, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 272, 286, 287, 288, 289, 504, 531, 533, 534, 535, 536, 537, 538, 539, 540, 575, 578, 579, 589, 594, 597, 598, 599, 604, 606, 608], "attributeerror": [183, 208, 209, 211, 213, 214, 244, 252, 578, 581, 597, 599, 604], "audio": [51, 614], "august": 23, "author": [2, 8, 9, 11, 12, 16, 17, 20, 22], "auto": [20, 131, 132, 133, 287, 535, 539, 578, 579], "auto_exampl": [5, 13, 19, 21], "auto_examples_jupyt": 6, "auto_examples_python": 6, "auto_format": [532, 533, 534, 578, 596], "autocomplet": [131, 132, 133, 287], "automat": [26, 27, 42, 44, 47, 49, 50, 52, 53, 97, 128, 131, 132, 133, 174, 183, 184, 185, 533, 534, 578, 587, 591, 593, 596, 599, 602, 603, 604, 610], "avail": [1, 6, 10, 15, 24, 26, 27, 28, 30, 33, 34, 41, 42, 47, 48, 50, 51, 52, 106, 131, 132, 133, 138, 140, 143, 145, 149, 158, 160, 161, 174, 209, 210, 212, 224, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 252, 255, 257, 269, 271, 272, 276, 278, 280, 284, 288, 538, 546, 548, 575, 578, 580, 581, 585, 587, 588, 589, 591, 594, 606, 608, 609, 612, 613, 614], "available_plugin": [244, 252], "averag": [2, 8, 20], "averagin": 2, "avf": 614, "avg": 20, "avl": 614, "avoid": [32, 43, 103, 165, 182, 532, 578, 590, 591, 594, 606, 609, 612], "avr": 614, "awai": 606, "awar": [30, 32, 34, 52, 606], "ax": 3, "ax1": 614, "ax2": 614, "ax_aspect": 4, "axesimag": 48, "axi": 614, "axial": [1, 5, 6, 20, 26, 28, 47, 578, 590, 600, 604], "azimuth": 20, "b": [2, 8, 12, 16, 20, 22, 26, 27, 28, 37, 39, 42, 47, 49, 50, 128, 131, 132, 133, 158, 160, 161, 185, 226, 267, 529, 533, 538, 602, 603, 604, 610, 612], "b1": 39, "b2": 39, "b6b3658f3b14": [578, 584], "b764": 606, "back": [2, 14, 16, 20, 38, 49, 50, 52, 53, 602, 603, 604, 606], "backend": [29, 131, 132, 133, 578, 599, 609], "backslash": [131, 132, 133, 538, 558, 578, 579, 580, 596], "backup": 174, "backward": [131, 132, 133, 578, 581, 587], "bad": [578, 587, 597], "balanc": 43, "bar": [578, 598], "bari": 613, "base": [6, 21, 23, 36, 37, 38, 39, 70, 81, 131, 132, 133, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247, 248, 249, 250, 287, 531, 533, 535, 539, 567, 571, 572, 578, 581, 587, 591, 594, 600, 602, 603, 606, 609, 612, 614], "base64": [128, 131, 132, 133, 605], "baselin": [20, 39, 41, 44, 45, 50, 146, 236, 253, 282, 504, 578, 598, 609, 614], "basetag": [32, 42, 60, 85, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 130, 131, 132, 133, 134, 162, 164, 165, 168, 174, 178, 180, 181, 182, 255, 257, 278, 280, 290, 291, 292, 544, 560, 578, 581, 596], "basic": [11, 26, 27, 28, 44, 51, 52, 54, 67, 71, 131, 132, 133, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 224, 271, 578, 591, 599, 606, 607, 609, 612, 614], "basic_offset_t": 67, "bb": 22, "bbh": 20, "beam": [11, 18, 24, 26, 27, 28, 578, 584], "beam0": 18, "beam1": 42, "beamdosespecificationpoint": [24, 26], "beamnam": [11, 18, 42], "beamnumb": [11, 24, 26, 27, 28], "beamsequ": [11, 18, 24, 26, 27, 28, 42, 131, 578, 584], "bec3": 606, "becaus": [10, 24, 26, 37, 38, 39, 42, 49, 50, 52, 53, 69, 156, 174, 602, 603, 604, 609, 610, 612], "becom": [96, 578, 584, 594, 602, 603, 606], "been": [10, 25, 26, 39, 41, 45, 47, 50, 82, 89, 91, 131, 132, 133, 138, 140, 143, 144, 145, 146, 147, 149, 166, 173, 174, 176, 185, 197, 198, 243, 244, 251, 256, 279, 504, 532, 533, 540, 578, 581, 588, 593, 596, 597, 599, 602, 603, 604, 605, 609, 610, 612], "befor": [38, 45, 47, 91, 128, 131, 132, 133, 164, 175, 182, 218, 221, 222, 243, 244, 261, 264, 265, 504, 540, 578, 581, 584, 585, 587, 590, 602, 603, 604, 606, 612, 614], "beforehand": 608, "began": 613, "begin": [42, 100, 138, 153, 169, 289, 504, 536, 540], "behav": [43, 111, 207, 578, 588, 590, 606], "behavior": [42, 43, 56, 84, 85, 96, 131, 132, 133, 578, 585, 589, 593, 594], "being": [37, 39, 103, 112, 113, 114, 116, 117, 120, 122, 123, 124, 127, 131, 132, 133, 147, 158, 160, 161, 214, 252, 578, 579, 589, 596, 597, 599, 606, 608, 609, 610, 612], "belong": [129, 131, 132, 133, 173, 174], "below": [26, 28, 32, 36, 37, 38, 41, 44, 47, 175, 185, 208, 211, 213, 214, 282, 564, 578, 581, 606, 610, 612, 613], "best": [29, 46, 69], "beta": 605, "better": [37, 53, 578, 582, 584, 588], "between": [6, 21, 37, 38, 49, 50, 53, 109, 208, 504, 540, 578, 599, 600, 602, 603, 604, 609], "beyond": 609, "big": [29, 33, 34, 39, 45, 131, 132, 133, 143, 144, 145, 149, 153, 154, 158, 160, 161, 185, 211, 214, 228, 244, 253, 289, 295, 504, 530, 536, 578, 598, 599, 614], "bigger": [52, 578, 593], "bin": [289, 536, 602, 603], "binari": [24, 26, 128, 131, 132, 133, 256, 279, 289, 533, 536, 578, 582, 590, 591, 599], "binaryio": [131, 132, 133, 162, 164, 165, 166, 168, 169, 170, 171, 178, 179, 180, 181, 182, 185, 243, 244, 251, 255, 257, 278, 280, 578, 599], "biopsi": 20, "birth": [2, 8, 17, 20], "bit": [2, 8, 20, 29, 30, 32, 34, 37, 38, 39, 41, 45, 49, 50, 53, 131, 132, 133, 134, 150, 211, 214, 216, 217, 219, 224, 225, 243, 244, 245, 251, 252, 253, 255, 256, 257, 259, 260, 262, 266, 268, 269, 271, 272, 273, 278, 279, 280, 281, 283, 284, 289, 536, 578, 588, 589, 591, 596, 597, 598, 599, 602, 603, 609, 612, 614], "bit_count": [289, 536], "bit_length": [289, 536], "bits_alloc": [29, 30, 34, 223, 243, 251, 252, 270, 273], "bits_stor": [29, 30, 34, 131, 132, 133, 223, 243, 251, 252, 268, 270, 283], "bitsalloc": [36, 37, 38, 44, 45, 128, 211, 213, 214, 274, 275, 281, 578, 589, 609, 610], "bitsstor": [26, 28, 36, 37, 211, 213, 275, 609, 610], "black": [36, 37, 38, 578, 599], "blank": [16, 17, 109, 207, 532, 578, 580, 604], "blend": 20, "blob": 14, "block": [16, 18, 20, 26, 27, 28, 36, 47, 131, 132, 133, 134, 578, 593, 599, 603], "block1": 18, "block2": 18, "block_ds1": 18, "block_ds2": 18, "block_ds3": 18, "block_start": 134, "blocknam": 18, "blocksequ": 18, "blocktyp": 18, "blue": [36, 37, 38, 39, 578, 593], "bn": 39, "boli": [26, 28], "bolu": [2, 8, 20], "bond": 14, "bone": 20, "bool": [29, 30, 33, 34, 56, 67, 81, 82, 94, 96, 101, 106, 115, 116, 125, 126, 128, 130, 131, 132, 133, 135, 138, 139, 150, 158, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 198, 205, 208, 209, 210, 211, 212, 213, 214, 221, 224, 225, 243, 244, 245, 251, 252, 255, 256, 257, 264, 266, 268, 269, 271, 272, 276, 277, 278, 279, 280, 281, 283, 284, 287, 289, 504, 530, 532, 533, 534, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 559, 560, 564], "boolean": 610, "bot": 150, "both": [29, 37, 38, 43, 76, 81, 82, 97, 150, 174, 221, 264, 533, 578, 580, 587, 590, 593, 599, 605, 609], "bottom": [20, 53, 602, 603], "boundari": [146, 504, 540, 578, 599], "bowti": 20, "box": [23, 53], "brace": [504, 540], "brachi": [26, 27, 28], "bracket": [42, 47, 604], "brain": [10, 606], "branch": [604, 608], "break": [43, 504, 540, 578, 594, 606], "brett": [578, 586], "briefli": [606, 612], "broken": 50, "browser": 603, "bubbl": [131, 132, 133], "buffer": [14, 29, 56, 67, 131, 132, 133, 139, 141, 143, 144, 145, 148, 149, 153, 154, 158, 160, 161, 164, 185, 197, 211, 243, 244, 251, 289, 536, 578, 599], "buffered_dataset": [139, 141], "buffered_read_s": 56, "bufferediobas": [32, 67, 128, 139, 141, 578, 599], "bufferedread": [32, 139, 141], "bug": [582, 586, 590, 593, 596, 601, 602, 608], "build": [0, 4, 183, 184, 578, 587, 598, 602], "build_tre": 0, "built": [32, 53, 289, 536, 608], "bulk": [50, 128, 131, 132, 133, 567, 578, 591, 592, 595, 605, 612], "bulk_data_element_handl": [128, 131, 132, 133, 605], "bulk_data_handl": 605, "bulk_data_read": 605, "bulk_data_threshold": [128, 131, 132, 133, 578, 592, 605], "bulk_data_uri": 605, "bulk_data_uri_handl": [128, 131, 132, 133, 578, 594, 605], "bulkdatauri": [128, 131, 132, 133, 605], "bullet": [578, 581], "button": 20, "bypass": 56, "byte": [14, 24, 26, 29, 30, 32, 33, 34, 37, 39, 42, 44, 49, 50, 51, 52, 67, 77, 78, 79, 89, 90, 111, 128, 130, 131, 132, 133, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 161, 163, 164, 165, 166, 167, 169, 179, 180, 181, 182, 183, 184, 185, 190, 191, 195, 197, 198, 206, 208, 226, 243, 244, 251, 252, 256, 267, 269, 273, 274, 276, 279, 284, 289, 504, 536, 538, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 578, 589, 590, 591, 596, 599, 604, 606, 609, 610, 612, 614], "byte_str": [543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561], "bytearrai": [29, 30, 34, 131, 132, 133, 143, 144, 145, 149, 153, 154, 158, 160, 161, 243, 244, 251, 273, 289, 536], "bytelength": [165, 170], "byteord": [29, 33, 34, 289, 536, 614], "bytes_to_find": 179, "bytesio": [14, 16, 132, 158, 578, 599, 604], "byteslengthexcept": [578, 598], "bytestr": [185, 273], "bytestream": [146, 148], "c": [2, 10, 18, 20, 22, 24, 26, 27, 28, 32, 39, 42, 47, 50, 51, 93, 131, 132, 133, 208, 211, 217, 219, 220, 221, 222, 225, 260, 262, 263, 264, 265, 266, 282, 533, 559, 578, 585, 604, 605, 606, 608, 609, 610, 612, 614], "c313d2befb08": [578, 584], "cach": [602, 608], "cal": 20, "calcul": [578, 596, 598], "calibr": 20, "call": [10, 25, 26, 39, 42, 43, 44, 49, 52, 81, 85, 91, 131, 132, 133, 147, 158, 160, 161, 162, 174, 181, 185, 207, 243, 504, 532, 540, 578, 581, 584, 588, 594, 599, 604, 606, 609, 612], "call_back": 165, "callabl": [91, 128, 131, 132, 133, 162, 165, 168, 172, 207, 243, 251, 563], "callback": [17, 25, 26, 131, 132, 133, 578, 587], "caller": [164, 578, 581], "camel": [84, 578, 594], "can": [1, 6, 10, 14, 17, 24, 25, 26, 27, 28, 30, 32, 34, 37, 39, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 69, 96, 131, 132, 133, 138, 139, 140, 160, 161, 164, 165, 172, 174, 185, 200, 207, 226, 244, 252, 267, 287, 504, 530, 532, 533, 537, 540, 563, 575, 578, 579, 580, 581, 584, 593, 594, 597, 599, 602, 603, 604, 605, 606, 608, 609, 610, 612, 613, 614], "cancel": 174, "cannot": [42, 45, 85, 131, 132, 133, 174, 185, 207, 224, 271, 533, 537, 541, 578, 596, 599, 602, 606], "canon": 533, "capabl": 613, "capac": 45, "capit": [53, 504, 533, 540, 578, 584], "captur": 602, "carotid": [10, 606], "carri": [532, 533, 578, 586], "case": [25, 26, 29, 37, 42, 43, 47, 52, 56, 76, 78, 84, 131, 132, 133, 165, 224, 244, 271, 287, 504, 533, 538, 540, 578, 590, 594, 599, 604, 605, 609, 610, 612, 614], "casefold": [504, 540], "caseless": [504, 540], "catch": [578, 581, 583], "caus": [30, 34, 541, 578, 580, 606], "caution": 604, "cb": 273, "cd": [602, 603, 606], "cell": 20, "center": [2, 8, 20, 221, 222, 264, 265, 504, 540, 604], "central": 2, "certain": [52, 131, 132, 133, 282, 603, 604], "certainli": 52, "ch": [37, 614], "ch1": 614, "ch2": 614, "ch_idx": 3, "ch_item": 3, "ch_sourc": 3, "chain": 20, "chan": 20, "chanc": 604, "chang": [10, 12, 25, 26, 27, 30, 34, 38, 43, 44, 49, 50, 53, 56, 67, 82, 96, 106, 128, 131, 132, 133, 150, 158, 160, 161, 174, 176, 183, 184, 185, 209, 210, 211, 212, 213, 214, 221, 225, 243, 256, 264, 266, 269, 279, 282, 284, 529, 533, 546, 548, 593, 601, 604, 605, 607, 608, 609, 610, 613], "channel": [3, 20, 37, 39, 50, 51, 131, 132, 133, 211, 564, 610, 614], "channeldefinitionsequ": [3, 614], "channelsampleskew": 614, "channelsensit": 614, "channelsensitivityunitssequ": [3, 614], "channelsourcesequ": [3, 614], "chapter": [39, 529], "chapter_7": 603, "char": [504, 540], "charact": [10, 20, 26, 28, 32, 43, 47, 53, 56, 76, 77, 78, 79, 89, 128, 129, 131, 132, 133, 134, 164, 165, 174, 175, 176, 177, 197, 200, 201, 202, 504, 529, 538, 540, 541, 542, 546, 548, 551, 552, 558, 561, 562, 567, 578, 579, 580, 587, 589, 590, 593, 594, 596, 597, 598, 599, 602, 604, 605, 606], "character_encod": [131, 132, 133], "character_set": 604, "charl": 608, "charpyl": [578, 598, 608], "charset": [104, 567, 578, 598], "chdef": 614, "chdef_seq": 614, "check": [3, 12, 42, 43, 115, 116, 118, 119, 121, 125, 126, 131, 132, 133, 135, 177, 185, 198, 532, 542, 578, 584, 587, 589, 590, 593, 594, 596, 599, 602, 603, 608, 610, 614], "checkout": [602, 603], "checksum": 20, "chief": 538, "child": 175, "children": 175, "chines": [578, 579, 587], "choic": [609, 610], "choos": [602, 603, 609], "chosen": [533, 610, 612, 614], "chtml": 53, "chunk": 56, "ci": [578, 599], "cid": [287, 288, 575, 613], "cid1234": 287, "cid270": 613, "cid4": 575, "cid6": 575, "cid_concept": 287, "cid_for_nam": 613, "circl": 610, "circleci": 603, "circumst": [138, 140], "citat": 23, "citizen": [84, 128, 131, 604], "clam": 0, "clarif": [602, 603], "clariti": [578, 587], "class": [2, 8, 9, 12, 14, 20, 26, 27, 28, 29, 30, 34, 42, 47, 50, 51, 53, 54, 56, 67, 69, 70, 81, 128, 130, 131, 132, 133, 134, 135, 158, 160, 161, 164, 173, 174, 175, 185, 198, 207, 243, 244, 251, 252, 285, 286, 287, 288, 289, 442, 504, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 567, 571, 572, 578, 579, 580, 581, 584, 585, 586, 587, 588, 589, 591, 593, 594, 597, 598, 599, 603, 604, 606, 612, 613], "classmethod": [128, 131, 132, 133, 538], "clean": [532, 578, 587, 602, 603], "clear": [47, 128, 131, 132, 133, 174, 207, 285, 578, 599], "cli": [578, 598], "click": [602, 603], "clip": [20, 37], "clone": [26, 27, 602, 603, 608], "close": [67, 139, 141, 158, 160, 161, 164, 168, 578, 580, 581, 609, 610], "closest": [183, 184, 533], "clunie1": [2, 20, 26, 28, 47, 604], "cm": [9, 11, 48], "cmap": [9, 48, 612], "co": [131, 614], "code": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 32, 36, 42, 46, 47, 52, 77, 78, 96, 131, 132, 133, 162, 164, 167, 287, 504, 540, 567, 575, 578, 579, 581, 585, 586, 587, 589, 591, 594, 596, 599, 601, 603, 607, 608, 613, 614], "code_fil": 52, "codec": [504, 540], "codedict": 613, "codemean": [3, 614], "codestream": [29, 131, 132, 133, 224, 271, 276, 609], "codevalu": 614, "codifi": [25, 27, 46, 578, 586, 588, 596, 598, 599], "codingschemedesign": 614, "codingschemevers": 614, "coeffici": [20, 26, 27, 533], "coll": [26, 28], "collect": [20, 47, 56, 133, 165, 288, 567, 606], "collis": [578, 580], "color": [29, 30, 33, 34, 36, 37, 38, 39, 46, 131, 132, 133, 215, 216, 225, 226, 243, 252, 258, 259, 266, 267, 268, 283, 578, 591, 593, 609, 610, 612], "color3d_jpeg_baselin": 69, "color_spac": [216, 226, 259, 267], "colorimetr": [216, 226, 259, 267], "colour": [215, 258], "colourspac": [97, 578, 596], "column": [0, 2, 8, 9, 20, 26, 28, 29, 30, 34, 37, 39, 49, 50, 131, 132, 133, 208, 211, 213, 214, 216, 223, 224, 225, 243, 244, 251, 252, 255, 256, 257, 259, 266, 268, 270, 271, 274, 275, 278, 279, 280, 282, 283, 609, 610, 612], "columnconfigur": 0, "com": [2, 8, 9, 11, 12, 17, 20, 22, 23, 602, 603, 608], "combin": [131, 132, 133, 290, 535, 604, 614], "comfort": 609, "comma": 53, "command": [25, 27, 40, 52, 131, 132, 133, 185, 287, 578, 586, 596, 598, 599, 602, 603, 608], "command1": [25, 26], "command1modul": [25, 26], "command2": [25, 26], "command2modul": [25, 26], "comment": [2, 8, 20, 602], "commit": [578, 599], "common": [37, 47, 51, 52, 76, 578, 589, 606, 612, 614], "commonli": [45, 131, 132, 133, 244, 255, 257, 278, 280, 606, 612], "commun": [578, 594], "comp": [10, 20, 26, 28, 606], "compani": 47, "compar": [20, 56, 504, 533, 540, 578, 585, 588, 596, 599, 602, 603, 610], "compare_sign": 533, "compare_tot": 533, "compare_total_mag": 533, "comparison": [504, 533, 540, 578, 583, 588], "compat": [43, 44, 131, 132, 133, 531, 533, 535, 578, 581, 582, 584, 585, 586, 587, 599, 608], "compil": [454, 455], "complement": [34, 39, 54, 252, 289, 536], "complet": [20, 24, 26, 34, 52, 131, 132, 133, 145, 148, 182, 287, 578, 579, 602, 606, 608, 610], "complex": [50, 289, 534, 536, 537, 612], "compliant": [12, 52, 578, 587], "complic": [37, 606, 609], "compon": [36, 39, 80, 146, 175, 177, 213, 276, 538, 578, 579, 581, 596, 609], "compress": [20, 23, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 46, 50, 54, 67, 131, 132, 133, 138, 139, 140, 141, 146, 147, 230, 231, 232, 234, 235, 238, 239, 243, 244, 245, 246, 247, 248, 249, 251, 255, 257, 268, 272, 278, 280, 282, 283, 504, 567, 571, 572, 578, 587, 589, 591, 596, 597, 599, 608, 610, 611], "compressedsampl": [2, 8, 9, 20, 26, 28, 69, 603, 604], "compression_ratio": 33, "comput": 20, "concaten": [37, 137, 150, 504, 540, 610], "concept": [286, 287, 567, 578, 599], "concern": 48, "conda": [609, 610, 612, 614], "condit": [164, 168, 533, 578, 587], "condition": [30, 614], "config": [32, 43, 537, 559, 567, 578, 584, 589, 590, 591, 593, 594, 596, 599], "configur": [0, 29, 36, 39, 43, 99, 128, 131, 132, 133, 224, 243, 251, 268, 271, 282, 283, 567, 578, 589, 596, 597, 610], "conform": [56, 128, 131, 132, 133, 174, 177, 185, 198, 205, 214, 578, 587, 589, 590, 599, 604, 606, 609, 610, 612], "confus": [578, 599], "congratul": 604, "conjug": [289, 533, 534, 536, 537], "conjunct": [256, 279], "connect": [578, 594], "conserv": 205, "consid": [10, 25, 26, 52, 131, 132, 133, 504, 540, 602, 603, 605], "consist": [51, 132, 185, 286, 578, 584, 603, 612, 614], "consolid": [578, 585], "constant": [578, 594, 599, 614], "constrain": 39, "constraint": [37, 39, 533, 534, 541], "construct": [531, 533, 534, 535, 538, 578, 584, 585, 596], "constructor": 207, "consumpt": [578, 589], "contain": [0, 10, 24, 26, 29, 30, 32, 34, 39, 40, 42, 43, 47, 49, 50, 51, 52, 53, 54, 56, 67, 69, 76, 78, 128, 130, 131, 132, 133, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 164, 165, 172, 179, 183, 184, 185, 198, 201, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 243, 244, 245, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 290, 504, 531, 535, 538, 540, 542, 546, 548, 564, 575, 578, 586, 589, 596, 599, 602, 604, 606, 609, 610, 612, 614], "content": [10, 12, 14, 20, 42, 56, 131, 132, 133, 143, 146, 208, 211, 212, 213, 214, 223, 224, 244, 270, 271, 282, 603, 604, 606, 609], "contentd": 12, "contenttim": 12, "context": [164, 292, 533, 567, 578, 587, 604], "contigu": 39, "continu": [137, 578, 579, 596], "contrast": [2, 8, 10, 20, 606], "contrib": 581, "contribut": [25, 26, 578, 581, 584, 585, 607], "contributing_cod": 603, "contributing_doc": 603, "contributor": 16, "control": [26, 27, 29, 36, 37, 84, 85, 101, 102, 131, 132, 133, 244, 255, 257, 278, 280, 578, 584, 599, 606, 609], "controlpointsequ": 11, "conveni": [42, 47, 50, 67, 128, 578, 594, 599, 605], "convent": [25, 26, 42, 538], "convers": [29, 30, 34, 36, 37, 38, 39, 93, 128, 131, 132, 133, 208, 211, 213, 214, 564, 578, 580, 590, 591, 593, 599, 605, 609, 612, 614], "convert": [14, 29, 30, 34, 36, 37, 38, 39, 50, 76, 77, 79, 85, 88, 90, 93, 97, 129, 131, 132, 133, 174, 185, 207, 208, 209, 210, 211, 212, 213, 214, 225, 243, 244, 245, 252, 255, 257, 266, 272, 278, 280, 289, 504, 533, 535, 536, 540, 564, 578, 581, 584, 587, 590, 591, 594, 595, 596, 599, 603, 604, 609, 610, 614], "convert_ae_str": 60, "convert_atvalu": 60, "convert_color_spac": [38, 50, 567, 578, 596, 599, 609, 612], "convert_da_str": 60, "convert_ds_str": 60, "convert_dt_str": 60, "convert_encod": 567, "convert_is_str": 60, "convert_numb": [60, 183, 184], "convert_obvalu": 60, "convert_owvalu": 60, "convert_pixel_data": [97, 131, 132, 133, 578, 599], "convert_pn": 60, "convert_single_str": 60, "convert_sq": 60, "convert_str": 60, "convert_tag": 60, "convert_text": 60, "convert_tm_str": 60, "convert_ui": 60, "convert_un": 60, "convert_ur_str": 60, "convert_valu": 60, "convert_wrong_length_to_un": [567, 578, 596], "convolut": 20, "coord": 20, "coordin": [20, 26, 27, 42], "copi": [2, 10, 52, 131, 132, 133, 174, 504, 533, 540, 578, 584, 594, 597, 599, 602, 603, 606, 608], "copy_ab": 533, "copy_neg": 533, "copy_sign": 533, "copyfil": 606, "copyright": 603, "copytre": 606, "cor_aspect": 4, "core": [46, 54], "cornea": 575, "corner": 20, "coron": [1, 5, 6, 575, 578, 590, 600], "correct": [4, 16, 20, 24, 26, 29, 36, 37, 38, 39, 43, 45, 49, 51, 76, 80, 97, 131, 132, 133, 164, 179, 183, 184, 207, 213, 224, 256, 271, 279, 578, 588, 589, 591, 596, 597, 599, 602, 604, 614], "correct_ambiguous_vr": 70, "correct_ambiguous_vr_el": 70, "correct_unused_bit": 29, "correctli": [32, 47, 52, 97, 174, 209, 210, 533, 578, 581, 584, 587, 588, 590, 591, 594, 596, 597, 598, 599, 602], "correspond": [10, 17, 29, 30, 34, 36, 37, 38, 41, 42, 44, 49, 50, 51, 53, 76, 106, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 138, 140, 166, 173, 174, 175, 185, 208, 215, 224, 243, 244, 245, 251, 252, 253, 254, 258, 268, 271, 272, 277, 282, 283, 290, 504, 530, 531, 535, 564, 578, 596, 599, 602, 603, 606, 609, 612, 614], "cosin": 614, "cost": 606, "couch": [26, 28], "couchdb": [578, 582], "could": [3, 24, 25, 26, 50, 52, 76, 77, 79, 207, 209, 578, 581, 582, 596, 602, 603], "count": [4, 130, 207, 285, 286, 289, 504, 536, 540], "counter": 20, "coupl": 606, "courier": 0, "cours": [10, 612], "cover": [30, 34, 604, 606, 608, 612, 614], "coverag": [578, 587, 602], "cp0": 11, "cp805": [578, 581], "cr": [10, 273, 606], "cr1": 606, "cr2": 606, "cr3": 606, "crash": [578, 588, 597, 598], "creat": [0, 4, 12, 14, 16, 18, 24, 25, 26, 27, 32, 42, 43, 47, 52, 54, 88, 128, 129, 131, 132, 133, 158, 160, 161, 162, 172, 173, 174, 175, 185, 207, 216, 226, 243, 244, 251, 252, 259, 267, 287, 288, 290, 504, 529, 531, 532, 534, 535, 537, 538, 567, 578, 581, 583, 596, 598, 599, 604, 608, 609, 612, 613, 614], "create_data_el": 209, "create_icc_transform": [216, 259, 567, 578, 599], "create_imag": 209, "creation": [2, 8, 12, 20, 26, 27, 28, 42, 172, 578, 590, 604, 606, 611], "creator": [2, 8, 16, 20, 26, 28, 47, 110, 111, 119, 122, 123, 124, 131, 132, 133, 134, 198, 289, 578, 588, 593, 598, 604, 606], "credit": 603, "ct": [1, 5, 6, 9, 10, 12, 20, 26, 28, 36, 37, 38, 42, 44, 47, 48, 50, 69, 131, 132, 133, 174, 224, 271, 287, 578, 590, 600, 604, 605, 606, 609, 612], "ct01": [20, 47], "ct01_oc0": 20, "ct1": [9, 20, 26, 28, 69, 603, 604], "ct2": 606, "ct_compressed_bas": [44, 609], "ct_compressed_ext": [44, 609], "ct_rle_lossless": [44, 131, 132, 133, 224, 271], "ct_small": [9, 26, 28, 69, 164, 603, 604], "ctime": [531, 535], "cumul": [26, 27], "current": [0, 20, 24, 26, 28, 39, 43, 44, 53, 67, 96, 128, 131, 132, 133, 158, 160, 161, 174, 175, 183, 184, 191, 215, 225, 258, 266, 531, 533, 535, 538, 578, 596, 603, 606, 608], "curv": [17, 614], "curve_typ": 614, "curves_callback": 17, "custom": [8, 26, 28, 131, 132, 133, 172, 174, 578, 579, 580, 587, 590, 594, 609, 612], "cython": 608, "d": [0, 2, 3, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 60, 65, 69, 81, 82, 84, 85, 97, 101, 102, 108, 109, 110, 128, 131, 132, 133, 138, 139, 140, 141, 164, 172, 174, 183, 184, 199, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 245, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 533, 534, 538, 541, 546, 564, 578, 584, 585, 593, 596, 598, 602, 603, 604, 605, 606, 608, 609, 610, 612, 614], "da": [2, 12, 17, 20, 26, 27, 28, 32, 42, 47, 60, 65, 93, 131, 545, 559, 578, 587, 596, 604], "dai": [531, 535], "daniel": [578, 581], "darci": [11, 12, 16, 17], "data": [1, 2, 5, 6, 7, 10, 11, 13, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 32, 33, 36, 37, 38, 39, 40, 42, 43, 46, 48, 52, 53, 54, 56, 62, 63, 64, 65, 69, 77, 78, 79, 80, 82, 84, 97, 100, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 166, 168, 172, 174, 181, 197, 200, 201, 202, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 504, 529, 540, 557, 564, 567, 578, 579, 580, 581, 582, 583, 584, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 606, 607, 608], "data_el": [17, 131, 132, 133, 187, 190, 191, 194, 196, 201, 202, 209, 604, 605], "data_elem": [578, 579, 604], "data_element_callback": [92, 98, 567], "data_element_callback_kwarg": 567, "data_element_gener": [70, 165], "data_element_offset_to_valu": 70, "data_retrieved_for_tag_and_vr_via_uri": 605, "data_retrieved_via_uri": 605, "databas": 14, "datadict": [16, 567, 578, 587, 590, 604], "datael": [0, 46, 47, 49, 53, 56, 60, 78, 129, 131, 132, 133, 162, 165, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 209, 245, 272, 578, 579, 587, 588, 589, 590, 593, 597, 599, 604], "dataelem": [60, 78, 131, 132, 133, 166, 184, 200, 201, 562, 567, 578, 590, 593, 604], "dataelement_from_raw": [60, 604], "dataset": [0, 2, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 32, 37, 38, 39, 43, 45, 46, 47, 48, 52, 53, 54, 73, 80, 84, 85, 91, 97, 100, 106, 107, 108, 109, 128, 129, 136, 138, 139, 140, 141, 146, 148, 157, 158, 160, 161, 164, 165, 168, 170, 171, 172, 173, 174, 175, 183, 184, 185, 197, 198, 202, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 243, 244, 245, 251, 252, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 285, 504, 530, 564, 567, 578, 579, 580, 581, 582, 583, 584, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 603, 606, 607, 608, 610, 612, 614], "dataset_class": 128, "datastor": 106, "date": [2, 8, 9, 12, 17, 20, 23, 26, 27, 28, 32, 42, 43, 47, 93, 174, 531, 535, 567, 578, 587, 588, 590, 596, 604, 608], "datetim": [12, 93, 531, 535, 539], "datetime_convers": [32, 545, 547, 553, 567], "daughter": 131, "daunt": 602, "dave": [578, 581], "db": [14, 36, 131, 132, 133, 224, 271, 609], "dcm": [9, 11, 12, 24, 26, 27, 28, 32, 42, 44, 49, 50, 53, 69, 131, 132, 133, 139, 141, 164, 172, 224, 255, 257, 271, 278, 280, 578, 594, 603, 604, 609, 613, 614], "dcm_qt_tree": [578, 585, 586], "dcmread": [0, 4, 9, 10, 11, 12, 14, 16, 42, 45, 50, 70, 91, 106, 132, 156, 160, 161, 162, 165, 168, 182, 206, 255, 257, 278, 280, 530, 578, 587, 593, 594, 596, 599, 603, 604, 606, 612, 614], "dcmwrite": [14, 70, 131, 132, 133, 160, 161, 578, 587, 593, 594, 596, 599, 604], "dctool100": [2, 20, 26, 28, 47, 604], "dd": [23, 531], "ddt": 535, "de": 52, "deal": [23, 43, 49, 214, 578, 580, 589, 604], "debug": [567, 578, 584, 586], "debug_on": 94, "decemb": [578, 598], "decid": [578, 599, 609], "decim": [32, 81, 101, 504, 532, 533, 534, 536, 537, 540, 541, 542, 578, 584, 585, 596], "decis": 38, "decod": [1, 5, 6, 37, 39, 40, 45, 50, 54, 60, 77, 78, 128, 131, 132, 133, 143, 145, 149, 150, 158, 160, 161, 164, 197, 209, 210, 212, 213, 214, 245, 252, 253, 255, 257, 272, 278, 280, 538, 543, 544, 545, 546, 547, 548, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 567, 570, 578, 582, 589, 590, 591, 594, 596, 597, 599, 600, 606, 608, 609], "decode_byt": 567, "decode_data_sequ": [578, 599], "decode_el": 567, "decode_pixel_data": [244, 252], "decodefunct": 243, "decodeopt": [243, 244, 251], "decoder_depend": 30, "decoderunn": [30, 244], "decoding_plugin": [131, 132, 133, 244, 245, 255, 257, 272, 278, 280, 609, 612], "decomposit": 36, "decompress": [29, 40, 44, 45, 54, 131, 132, 133, 212, 244, 255, 257, 278, 280, 567, 578, 587, 591, 599, 608, 610, 611, 612], "decon": 20, "decor": [578, 585], "decreas": [36, 131, 132, 133, 224, 271, 609], "deep": [578, 597], "deepcopi": [32, 578, 596, 599], "def": [0, 8, 11, 14, 17, 25, 26, 30, 34, 97, 131, 132, 133, 172, 504, 540, 602, 605, 610], "default": [0, 9, 24, 26, 29, 32, 33, 34, 43, 45, 49, 50, 56, 76, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 128, 131, 132, 133, 135, 138, 142, 143, 144, 145, 149, 152, 153, 154, 158, 160, 161, 162, 164, 165, 174, 176, 183, 184, 185, 197, 198, 207, 208, 211, 213, 214, 216, 220, 221, 222, 224, 225, 226, 243, 244, 245, 251, 252, 255, 256, 257, 259, 263, 264, 265, 266, 267, 268, 269, 271, 272, 274, 277, 278, 279, 280, 281, 283, 284, 285, 504, 529, 533, 535, 538, 540, 546, 548, 552, 563, 564, 578, 582, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 599, 603, 604, 605, 606, 608, 609, 610, 612], "default_element_format": 131, "default_encod": [22, 538], "default_handl": 94, "default_sequence_element_format": 131, "defer": [131, 132, 133, 166, 578, 580, 584, 591, 597, 604], "defer_s": [162, 164, 165, 168, 182, 206, 578, 580], "deferreddatael": [578, 589, 590], "defin": [16, 17, 20, 25, 26, 36, 37, 38, 39, 47, 49, 56, 128, 131, 132, 133, 134, 173, 174, 215, 258, 504, 533, 578, 584, 602, 604, 606, 609, 614], "definit": [174, 185, 567, 578, 587, 614], "deflat": [45, 211, 227, 253, 504, 578, 593, 599], "defragment_data": [578, 599], "degre": 20, "del": [17, 18, 42, 47, 131, 604], "del_opt": [243, 251], "delai": [20, 26, 28], "delattr": 17, "delet": [12, 17, 52, 131, 132, 133, 243, 251, 504, 540, 578, 593, 602, 603], "delimit": [77, 146, 147, 148, 178, 180, 181, 182, 186, 504, 540, 563, 578, 594, 596], "delimiter_tag": 182, "deliveri": [26, 27], "delta": 20, "demand": 538, "demonstr": [16, 578, 579, 610], "denomin": [289, 533, 534, 536, 537], "depend": [20, 30, 34, 39, 44, 45, 50, 52, 97, 128, 131, 132, 133, 143, 144, 145, 174, 185, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 223, 224, 243, 244, 252, 258, 260, 262, 263, 264, 270, 271, 282, 559, 564, 578, 589, 590, 597, 603, 605, 606, 608, 610, 612, 614], "dependabot": [578, 599], "deprec": [95, 96, 131, 132, 133, 136, 137, 146, 147, 148, 150, 155, 185, 565, 566, 583, 584, 588, 589, 590, 593, 594, 596, 597, 598], "deprecationwarn": [578, 579], "depth": [32, 37, 50, 54, 175, 578, 591, 608, 609], "deriv": [2, 8, 20, 42, 81, 97, 128, 133, 578, 584, 604], "describ": [29, 39, 42, 52, 108, 110, 128, 131, 132, 133, 244, 533, 538, 605, 606, 612], "descript": [3, 16, 20, 25, 26, 27, 29, 33, 39, 42, 47, 54, 108, 109, 110, 111, 114, 124, 128, 134, 578, 579, 580, 593, 597, 599, 612], "descriptor": [10, 47, 174, 215, 217, 219, 220, 221, 258, 260, 262, 263, 264, 578, 591, 593, 599, 606], "descriptor_character_set": [10, 174, 606], "descriptor_file_id": [10, 174, 606], "descripwidth": 128, "deseri": 605, "design": [52, 286, 287, 288, 613], "desir": [48, 207, 225, 266], "despit": 606, "destin": [160, 161], "detail": [24, 26, 39, 42, 43, 50, 52, 94, 128, 131, 132, 133, 165, 292, 533, 537, 567, 578, 596, 599, 602, 603], "detector": 20, "determin": [39, 42, 49, 128, 131, 174, 217, 219, 260, 262, 289, 533, 536, 578, 599, 606, 614], "determinist": 529, "dev0": 567, "develop": [25, 26, 27, 43, 578, 587], "devic": [2, 8, 20, 26, 27, 613], "di": 606, "diamet": 20, "dicm": [156, 169, 185, 198, 205, 604], "dicom": [1, 2, 4, 6, 7, 9, 13, 14, 15, 19, 21, 22, 23, 27, 28, 30, 32, 34, 36, 37, 38, 39, 42, 44, 45, 46, 48, 49, 50, 51, 53, 54, 56, 59, 61, 69, 70, 72, 74, 76, 77, 78, 84, 89, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 131, 132, 133, 134, 138, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 160, 161, 162, 164, 165, 167, 168, 169, 174, 185, 196, 198, 200, 202, 205, 207, 208, 211, 215, 217, 219, 220, 221, 222, 225, 244, 252, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 269, 278, 279, 280, 282, 284, 287, 289, 290, 504, 529, 533, 534, 537, 538, 540, 541, 557, 567, 575, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 594, 596, 597, 598, 599, 600, 603, 604, 605, 607, 609, 610, 612, 613], "dicom_character_set": 78, "dicom_dao": [578, 582], "dicom_filenam": 14, "dicombytesio": [70, 160, 578, 599], "dicomdir": [10, 54, 69, 172, 174, 175, 578, 586, 590, 591, 594, 597, 598, 599, 607], "dicomdirtest": [10, 606], "dicomfil": [24, 26, 70], "dicomfilelik": [14, 70, 158, 159, 578, 580], "dicominfo": [578, 579], "dicomio": [70, 147, 150, 155, 158, 160, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 578, 599], "dicomit": [578, 582], "dicomtre": [0, 21, 578, 579, 600], "dicomweb": [128, 131, 132, 133, 605], "dicond": [183, 184], "dicosquadrupoleresonanceqrstorag": [578, 594], "dicosquadrupoleresonancestorag": [578, 594], "dict": [14, 30, 34, 42, 92, 108, 110, 128, 131, 132, 133, 172, 174, 208, 223, 243, 244, 245, 251, 270, 272, 275, 276, 287, 578, 581, 596, 598, 612], "dict_item": [131, 132, 133], "dict_kei": [131, 132, 133], "dictionari": [6, 15, 19, 42, 46, 84, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 165, 223, 243, 251, 270, 504, 540, 567, 578, 580, 581, 583, 586, 587, 588, 589, 590, 591, 594, 596, 597, 599, 600, 605, 613], "dictionary_is_retir": [578, 587], "dictionary_vr": 604, "did": [18, 578, 579, 599], "diff": [20, 602], "differ": [4, 6, 17, 21, 25, 26, 28, 32, 37, 38, 47, 50, 54, 131, 132, 133, 533, 578, 581, 593, 600, 602, 603, 604, 605, 606, 609, 610, 612], "difficult": [52, 602], "difflib": 20, "dig": 606, "digit": [88, 134, 199, 504, 533, 540, 614], "dimens": [97, 131, 132, 133, 213, 244, 255, 257, 278, 280, 612], "dimitri": [578, 586], "dir": [42, 131, 132, 133, 287, 575, 578, 584, 597, 603, 613], "direct": [24, 26, 273, 533, 603, 605, 606], "directli": [10, 30, 34, 37, 42, 128, 243, 244, 251, 252, 532, 578, 599, 605, 606, 609, 610, 612, 613], "directori": [10, 172, 173, 174, 175, 177, 578, 579, 597, 599, 602, 603, 606, 608], "directory_record": [174, 567, 606], "directoryrecordsequ": 606, "directoryrecordtyp": [172, 174], "disabl": 609, "disadvantag": 52, "disagre": [578, 599], "discard": [504, 540], "discuss": [602, 606], "disk": [578, 594], "displai": [6, 20, 21, 26, 27, 28, 36, 37, 38, 42, 46, 48, 100, 128, 131, 578, 579, 585, 590, 596, 600, 602, 610, 612, 614], "distanc": 20, "distinct": [578, 582], "distribut": [578, 582, 594, 608], "distutil": [578, 579], "div": 538, "dive": 602, "divid": 533, "divisionbyzero": 533, "django": [602, 603, 605], "do": [10, 14, 25, 26, 30, 34, 43, 44, 45, 47, 49, 50, 52, 54, 93, 131, 132, 133, 174, 185, 191, 578, 584, 590, 596, 599, 602, 603, 604, 606, 609, 610, 613, 614], "do_command": [25, 26], "doc": [172, 603], "docstr": [53, 602], "document": [40, 43, 131, 132, 133, 172, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 252, 255, 257, 272, 278, 280, 582, 587, 588, 599, 601, 607], "doe": [10, 12, 37, 47, 49, 50, 52, 89, 97, 109, 131, 132, 133, 156, 166, 185, 191, 209, 533, 541, 578, 594, 606], "doesn": [29, 39, 49, 84, 131, 132, 133, 208, 211, 214, 244, 255, 257, 268, 278, 280, 283, 578, 593, 602, 608, 609, 610], "doi": 23, "domain": 612, "don": [8, 10, 18, 26, 27, 28, 32, 36, 42, 45, 47, 52, 243, 602, 603, 605, 606, 609, 610, 612], "done": [30, 34, 44, 504, 533, 540, 602, 603, 604], "dont_print": 8, "dose": [26, 27, 28, 69, 172, 174, 578, 584, 606], "dosesummationtyp": 606, "dot": [602, 604], "doubl": [32, 50, 53, 131, 132, 133, 211, 281, 571, 578, 591, 612], "doublefloatpixeldata": [29, 30, 50, 243, 251, 275, 578, 596, 612], "down": [205, 602, 606], "download": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 106, 578, 594, 596, 597, 598], "downsampl": [2, 38], "downscal": [37, 38], "downsiz": [1, 5, 6, 50, 600], "downstream": 37, "dr": 538, "draw_circl": 610, "drop": [131, 132, 133, 578, 593, 594], "ds1": 605, "ds2": 131, "ds_byte": 14, "ds_decim": [101, 567, 578, 593], "ds_json": 605, "ds_numpi": [102, 567], "ds_or_path": 174, "ds_out": [255, 257, 278, 280, 612], "dsdecim": [32, 60, 88, 532, 546, 578, 596], "dsfloat": [32, 60, 532, 546, 578, 596], "dst": [535, 539, 606], "dt": [12, 32, 60, 65, 93, 547, 559, 578, 587, 596], "dtype": [42, 49, 50, 51, 53, 131, 132, 133, 213, 224, 225, 243, 244, 252, 256, 266, 268, 271, 279, 281, 283, 609, 610, 612], "dtype_corrected_for_endian": [578, 599], "due": [29, 131, 132, 133, 174, 243, 578, 585, 596, 598, 602, 606, 612], "dummi": [24, 26], "dummydatabas": 14, "dump": [128, 131, 132, 133], "dump_handl": [128, 131, 132, 133], "duplic": [578, 585], "durat": [20, 26, 28, 604], "dure": [36, 37, 42, 47, 109, 578, 597, 599, 602, 603, 609], "dvd": 606, "dwt": 36, "dynam": [16, 20], "e": [20, 24, 26, 27, 28, 30, 34, 42, 43, 49, 50, 53, 56, 85, 128, 131, 132, 133, 134, 164, 170, 171, 174, 175, 176, 207, 208, 244, 252, 256, 273, 279, 285, 531, 533, 538, 563, 578, 581, 588, 590, 594, 599, 602, 603, 604, 608], "e0": 150, "e000": [147, 150, 151, 152], "e0dd": 147, "e3ee934bbc": [578, 582], "e830f30b6781": [578, 585], "each": [0, 3, 10, 20, 29, 30, 33, 34, 36, 37, 38, 39, 42, 44, 49, 50, 51, 54, 69, 77, 131, 132, 133, 138, 140, 146, 147, 150, 151, 152, 153, 154, 175, 176, 207, 214, 224, 225, 243, 244, 245, 251, 252, 255, 257, 266, 271, 272, 273, 278, 280, 504, 533, 538, 540, 564, 575, 578, 593, 596, 602, 604, 606, 609, 610, 612, 614], "earlier": 604, "easi": [50, 609], "easier": [47, 132, 578, 599, 603], "easiest": 23, "easili": [17, 578, 579, 581], "ecg": [51, 69, 614], "echo": [2, 8, 20], "echofindingobservationtyp": 613, "edit": [10, 52, 578, 588, 589, 591, 602, 603, 608], "editor": [602, 603], "eeee": [185, 578, 599], "effect": [42, 147, 529, 610], "effici": [10, 162, 174, 256, 279, 541, 609, 614], "effort": 29, "eg": 4, "einthoven": 614, "either": [26, 27, 30, 34, 36, 37, 39, 42, 43, 47, 52, 97, 128, 131, 132, 133, 143, 145, 149, 169, 174, 208, 216, 226, 243, 251, 256, 259, 267, 274, 279, 281, 282, 287, 289, 290, 533, 536, 538, 545, 553, 575, 578, 594, 599, 603, 604, 606, 608, 609, 610, 612], "elem": [0, 8, 17, 42, 49, 53, 78, 128, 131, 132, 133, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 208, 289, 291, 578, 581, 604], "element": [2, 10, 12, 16, 17, 18, 20, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 40, 44, 46, 48, 49, 50, 51, 52, 53, 54, 56, 67, 77, 78, 80, 82, 84, 85, 93, 94, 97, 100, 101, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 146, 147, 148, 162, 163, 164, 165, 166, 174, 181, 182, 183, 184, 185, 198, 200, 201, 208, 209, 211, 213, 214, 216, 218, 223, 224, 226, 243, 244, 245, 251, 255, 257, 259, 261, 267, 268, 270, 271, 272, 274, 275, 278, 280, 281, 282, 283, 287, 289, 290, 531, 533, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 564, 565, 567, 578, 579, 580, 581, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599, 603, 606, 608, 609, 610, 612, 614], "element_format": [131, 132, 133], "element_offset": [131, 132, 133, 134], "element_v": [25, 26], "element_valu": [25, 26], "elementcallback": 91, "els": [3, 4, 8, 36, 37, 38, 44, 131, 165, 179, 182, 532, 533, 604, 610], "embed": [578, 594], "emin": 533, "emit": 56, "empti": [32, 67, 128, 131, 132, 133, 135, 143, 145, 146, 148, 149, 150, 158, 207, 256, 276, 279, 285, 504, 533, 534, 538, 540, 557, 578, 579, 587, 590, 591, 592, 593, 594, 596, 599, 604, 606, 610, 612, 614], "empty_valu": 128, "empty_value_for_vr": 128, "emul": [42, 96, 131, 132, 133], "enabl": [33, 43, 93, 131, 132, 133, 609], "enable_futur": 96, "encap": [32, 44, 172, 567, 578, 587, 589, 599, 609, 612], "encapsul": [29, 32, 39, 44, 50, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 224, 244, 252, 268, 271, 283, 567, 578, 579, 589, 594, 599, 612], "encapsulate_buff": [32, 138, 140, 141, 578, 599], "encapsulate_ext": [131, 132, 133, 224, 271], "encapsulate_extend": [44, 138, 139, 141, 578, 594, 599, 609], "encapsulate_extended_buff": [32, 138, 139, 140, 578, 599], "encapsulated_length": 67, "encapsulatedbuff": [67, 139, 141, 578, 599], "encapul": 67, "encasul": 504, "enclos": 47, "encod": [29, 30, 32, 39, 40, 41, 44, 45, 50, 51, 54, 56, 67, 76, 77, 78, 79, 128, 129, 131, 132, 133, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 158, 160, 161, 162, 165, 170, 171, 174, 185, 192, 196, 197, 198, 200, 201, 202, 204, 214, 224, 226, 243, 244, 254, 255, 257, 267, 268, 271, 278, 280, 283, 504, 530, 533, 538, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 567, 570, 578, 584, 587, 588, 589, 590, 591, 596, 597, 598, 599, 604, 605, 609, 610, 612], "encode_pixel_data": [244, 252], "encode_str": 567, "encodefunct": 251, "encodeopt": [243, 251], "encoder_depend": 34, "encoderunn": 34, "encoding_plugin": [44, 131, 132, 133, 224, 252, 271, 609], "encount": [47, 89], "encourag": [578, 584], "end": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 142, 144, 153, 154, 165, 180, 182, 243, 244, 256, 279, 289, 504, 536, 540, 578, 584, 591, 609], "endian": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 39, 42, 44, 45, 47, 131, 132, 133, 143, 144, 145, 147, 149, 151, 152, 153, 154, 158, 160, 161, 162, 165, 174, 179, 180, 181, 182, 185, 191, 198, 211, 214, 227, 228, 229, 233, 244, 245, 252, 253, 268, 272, 283, 295, 504, 530, 543, 544, 545, 546, 547, 548, 552, 553, 554, 556, 557, 559, 560, 578, 581, 589, 593, 598, 599, 604, 609, 610, 612, 614], "endswith": [504, 540], "energi": [26, 28], "enforc": [42, 46, 207, 578, 584], "enforce_file_format": [12, 131, 132, 133, 185, 578, 599, 604], "enforce_standard": [135, 198, 604], "enforce_valid_valu": [567, 578, 584, 590, 591, 594, 596, 597], "engin": 533, "english": 53, "enhanc": [20, 215, 258, 581], "ensur": [4, 32, 36, 37, 38, 43, 47, 96, 131, 132, 133, 135, 164, 174, 185, 207, 256, 279, 533, 534, 578, 584, 587, 596, 598, 599, 602, 612], "ensure_file_meta": [131, 132, 133], "enter": 23, "entir": [42, 131, 164, 167, 209, 213, 244, 255, 257, 278, 280, 602, 604, 609, 612], "entireti": [131, 132, 133, 245, 272], "entiti": [2, 20, 26, 28, 32, 47, 174, 198, 604], "entri": [16, 25, 26, 27, 42, 46, 50, 108, 109, 110, 111, 118, 119, 578, 580, 597, 602, 603], "entropy_src": [529, 578, 599], "entry_point": [25, 26], "enum": [578, 597, 599], "enumer": [0, 4, 614], "env": 606, "environ": [26, 27, 43, 578, 579, 594, 608], "eoc": [146, 578, 591], "eof": [158, 160, 161, 182], "eoferror": [158, 160, 161, 182], "eoi": [146, 578, 591], "eol": [578, 598], "equal": [29, 37, 38, 39, 142, 147, 289, 504, 533, 534, 536, 537, 540, 578, 588, 589, 590], "equival": [42, 131, 132, 133, 143, 145, 149, 243, 251, 256, 279, 533, 578, 588], "error": [24, 26, 33, 37, 52, 56, 76, 86, 87, 96, 128, 131, 132, 133, 224, 271, 504, 533, 540, 541, 567, 578, 581, 582, 585, 587, 588, 589, 590, 591, 593, 594, 598, 599, 602, 604, 608, 609], "escap": [578, 599], "especi": [39, 52, 602, 609, 612], "estim": 20, "et": 23, "etc": [17, 18, 42, 50, 53, 128, 131, 132, 133, 208, 578, 579, 585, 596, 602, 606, 609], "euc_kr": [22, 538], "even": [32, 37, 47, 49, 131, 132, 133, 138, 142, 147, 164, 169, 244, 245, 255, 256, 272, 278, 279, 533, 578, 594, 604, 606, 610, 612], "everi": [67, 91, 244, 252, 273, 606, 614], "everyth": [174, 602, 606], "evolut": 43, "exact": [42, 533, 534, 536, 537], "exactli": [26, 27, 49, 51, 289, 533, 534, 536, 537, 604], "exam": 20, "exampl": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 29, 30, 34, 39, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 84, 85, 108, 109, 110, 128, 131, 132, 133, 139, 140, 141, 164, 172, 174, 223, 224, 243, 252, 255, 257, 270, 271, 278, 280, 289, 504, 529, 533, 536, 538, 540, 567, 578, 579, 580, 581, 583, 584, 586, 590, 594, 596, 599, 600, 601, 602, 603, 605, 606, 609, 610, 612, 614], "exc": 85, "exce": [138, 140], "except": [43, 47, 49, 50, 56, 76, 84, 85, 86, 97, 131, 132, 133, 156, 172, 174, 185, 198, 207, 244, 252, 292, 533, 567, 578, 581, 583, 586, 587, 590, 591, 594, 596, 597, 599, 602, 604, 606, 609, 612], "excess": [143, 145, 149, 578, 590, 599], "exclud": [24, 26, 27, 28, 52, 131, 208, 243, 251, 274], "exclude_s": [24, 26], "exclus": 533, "execut": [5, 13, 19, 21, 538, 600], "exist": [9, 16, 30, 34, 38, 42, 43, 52, 53, 109, 131, 132, 133, 166, 174, 185, 198, 216, 224, 259, 268, 271, 283, 578, 598, 599, 601, 602, 603, 609], "exist_ok": [131, 132, 133, 185, 578, 599], "exit": [0, 14, 24, 26, 27, 28], "exp": 533, "expand": [10, 26, 28, 273, 504, 540, 578, 597, 603, 606], "expand_ybr422": [578, 597, 599], "expandtab": [504, 540], "expans": [578, 596], "expect": [37, 42, 131, 132, 133, 143, 145, 149, 208, 209, 211, 214, 243, 244, 251, 255, 257, 274, 278, 280, 578, 588, 590, 594, 598, 602, 609], "experiment": [578, 585, 610], "explain": 53, "explan": [36, 37, 38, 612], "explanatori": 614, "explicit": [2, 12, 20, 26, 28, 39, 44, 45, 47, 56, 89, 131, 132, 133, 147, 158, 160, 161, 165, 185, 198, 211, 227, 228, 229, 244, 245, 253, 268, 272, 283, 295, 504, 530, 538, 578, 581, 582, 590, 591, 593, 596, 599, 604, 609, 612], "explicitli": [49, 50, 88, 578, 589, 596, 606], "explicitvrlittleendian": [12, 32, 610], "explor": [26, 27, 47], "expon": 533, "exponenti": 533, "export": [24, 26, 43, 578, 596], "exposur": 20, "expr": 206, "express": [26, 27, 504, 540, 608], "extend": [41, 44, 45, 67, 131, 132, 133, 138, 140, 141, 143, 145, 149, 207, 224, 237, 243, 251, 253, 271, 285, 578, 594, 599, 609], "extended_length": 67, "extended_offset": [67, 143, 145, 149, 243, 251], "extendedoffsett": [44, 140, 141, 609], "extendedoffsettablelength": [44, 140, 141, 609], "extens": [42, 78, 132, 578, 589, 596], "extern": [106, 578, 594, 596], "extra": [26, 28, 29, 42, 244, 578, 599, 608, 610], "extract": 97, "extrem": [578, 598], "ez_setup": [578, 586], "f": [0, 2, 3, 4, 8, 9, 10, 11, 12, 18, 20, 32, 128, 131, 132, 133, 172, 174, 255, 257, 278, 280, 504, 540, 602, 606, 609, 614], "f1ae573d9de5": [578, 585], "facilit": 244, "fact": [97, 604], "factor": [20, 51, 578, 585, 614], "factori": [207, 244, 252, 291, 532, 578, 581, 596, 599], "fail": [30, 34, 97, 131, 132, 133, 578, 581, 582, 587, 602, 603, 606], "failur": [56, 504, 540, 578, 593, 599, 602], "fairli": [53, 609], "fall": [215, 258], "fallback": [578, 589], "fals": [3, 4, 10, 14, 29, 30, 32, 34, 43, 47, 53, 56, 67, 69, 80, 81, 82, 85, 88, 90, 93, 94, 95, 96, 97, 101, 102, 103, 106, 115, 116, 125, 126, 128, 130, 131, 132, 133, 135, 138, 140, 158, 160, 161, 162, 164, 168, 169, 174, 176, 177, 180, 181, 182, 185, 198, 205, 211, 213, 224, 225, 243, 244, 245, 252, 255, 257, 266, 269, 271, 272, 278, 280, 281, 284, 289, 504, 530, 532, 533, 534, 536, 540, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 556, 557, 559, 560, 564, 578, 584, 588, 593, 596, 598, 604, 606, 609, 610, 612, 614], "famili": [538, 609], "familiar": [40, 53, 604, 606, 612, 614], "family_comma_given": [9, 538], "family_nam": [538, 578, 596], "family_name_ideograph": 538, "family_name_phonet": 538, "far": [45, 128, 609], "farm": 538, "fast": [205, 291], "faster": [45, 578, 581, 593, 596], "fatq": 20, "favor": [578, 583, 597], "fc790f01f5": [578, 582], "fd": [20, 32], "fe": 150, "featur": [43, 53, 578, 586, 601, 602], "feedback": [578, 585], "fetch": [44, 50, 609], "fetch_data_fil": 608, "fewer": [158, 160, 161, 243, 542], "ff": [20, 150], "ffee": 150, "fffc": [2, 20, 26, 28, 604], "fffe": [147, 150, 151, 152], "ffffp10": [534, 537], "fidel": [20, 47], "fiduci": 172, "field": [11, 20, 26, 28, 42, 90, 128, 130, 147, 286, 504, 531, 535, 539, 540, 578, 596], "fifth": 538, "fig": [3, 612, 614], "fil": 20, "file": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 21, 25, 27, 28, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 69, 72, 74, 85, 89, 94, 100, 104, 105, 106, 107, 109, 131, 132, 133, 135, 139, 141, 155, 156, 159, 160, 162, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 185, 187, 196, 197, 198, 200, 201, 202, 205, 224, 243, 244, 255, 257, 271, 278, 280, 567, 579, 580, 581, 583, 584, 587, 590, 591, 593, 594, 596, 597, 598, 599, 600, 602, 603, 604, 607, 609, 610, 612], "file_meta": [2, 12, 20, 26, 27, 28, 32, 42, 44, 45, 47, 131, 132, 133, 135, 139, 140, 141, 185, 198, 245, 272, 578, 581, 593, 599, 606, 609, 610, 612], "file_metadata": [578, 583], "file_path": [14, 205], "file_set": [173, 175], "file_value_tel": 128, "filebas": [14, 70, 147, 150, 155, 197, 567], "filedataset": [69, 106, 164, 168, 185, 567, 578, 581, 583, 596, 597, 599, 604, 606, 612], "fileexistserror": [131, 132, 133, 185, 578, 599], "fileid": 173, "fileinst": [10, 174, 175, 567, 578, 599, 606], "filemetadataset": [12, 24, 26, 32, 132, 135, 139, 140, 141, 167, 185, 198, 567, 578, 593, 604, 610], "filenam": [24, 26, 27, 28, 104, 105, 106, 107, 131, 132, 133, 166, 167, 174, 176, 185, 578, 593, 599, 602, 606], "filename_or_obj": [132, 166], "fileobj": [168, 604], "fileobj_typ": [132, 166], "fileread": [70, 205, 567, 603, 604], "fileset": [10, 567, 578, 594, 596, 597, 599], "filespec": [24, 25, 26, 27, 28], "filespec_help": [25, 26], "filespec_pars": [25, 26], "filetyp": [25, 26], "fileutil": [70, 567], "filewrit": [70, 131, 132, 133, 567, 604], "fill": [4, 29, 504, 540, 602, 603], "fillchar": [504, 540], "filter": [20, 26, 27, 131, 132, 133, 287], "final": [2, 17, 106, 138, 143, 144, 145, 185, 604, 609, 610, 614], "find": [10, 17, 20, 23, 25, 26, 44, 93, 131, 132, 133, 167, 174, 179, 180, 181, 183, 184, 504, 540, 602, 603, 604, 606, 610, 613, 614], "find_byt": [70, 180, 181, 578, 585], "find_delimit": [70, 181], "find_valu": [10, 174, 606], "finit": [533, 541], "first": [3, 20, 26, 28, 36, 37, 38, 39, 42, 43, 47, 50, 52, 53, 67, 76, 77, 79, 97, 106, 130, 131, 132, 133, 143, 144, 145, 146, 147, 149, 150, 153, 154, 169, 174, 182, 207, 241, 244, 245, 255, 257, 272, 276, 278, 280, 285, 286, 504, 533, 538, 540, 578, 589, 590, 591, 599, 601, 602, 603, 606, 609, 610, 612, 614], "firstnam": 12, "fit": [578, 588], "five": [53, 538], "fivechamb": 575, "fix": [131, 132, 133, 165, 586, 601, 602, 604], "fix_meta_info": [578, 589, 599], "fixer": [578, 587], "fixm": 2, "fl": [20, 26, 28, 32, 604], "flag": [16, 20, 43, 96, 131, 132, 133, 169, 174, 179, 180, 181, 533, 578, 593, 596, 606], "flat": 606, "flatten": [131, 132, 133], "flexibl": [578, 599], "flip": [2, 8, 20], "float": [11, 32, 33, 36, 42, 50, 53, 81, 88, 128, 131, 132, 133, 162, 164, 165, 166, 168, 182, 206, 211, 224, 271, 281, 532, 533, 534, 535, 536, 537, 541, 557, 571, 578, 584, 585, 591, 594, 596, 598, 604, 609, 612], "float32": 610, "float64": [217, 219, 221, 222, 260, 262, 264, 265, 546, 610], "floatpixeldata": [29, 30, 50, 243, 251, 275, 578, 596, 610, 612], "fly": [578, 594], "fma": [533, 613], "fname": 4, "focal": 20, "folder": [578, 581, 599], "follow": [10, 25, 26, 27, 28, 29, 30, 34, 36, 39, 42, 43, 44, 45, 50, 53, 67, 69, 131, 132, 133, 135, 146, 147, 150, 174, 182, 185, 198, 223, 224, 244, 252, 255, 257, 268, 270, 271, 278, 280, 283, 504, 533, 538, 540, 578, 591, 594, 596, 599, 602, 603, 604, 606, 609, 610, 613, 614], "font": 0, "foo": [34, 608], "for_addit": [173, 606], "for_mov": 173, "for_remov": 173, "forc": [16, 29, 131, 132, 133, 156, 164, 168, 169, 174, 185, 224, 271, 578, 582, 584, 586, 604], "force_encod": [185, 578, 599], "force_implicit": 174, "force_rgb": 29, "force_ybr": 29, "foreign": [20, 578, 579], "forg": [608, 609, 610, 612, 614], "forget": [18, 52], "fork": [578, 598, 602, 603, 608], "form": [20, 39, 49, 50, 51, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 131, 132, 133, 244, 255, 257, 278, 280, 290, 529, 538, 612], "format": [6, 7, 12, 13, 20, 24, 26, 27, 28, 32, 34, 42, 43, 45, 128, 131, 132, 133, 138, 140, 142, 147, 164, 185, 200, 211, 214, 504, 531, 533, 534, 535, 538, 539, 540, 557, 578, 579, 580, 581, 587, 590, 596, 597, 599, 600, 604, 606, 608, 609, 612], "format_map": [504, 540], "format_number_as_d": [60, 578, 596], "format_str": 538, "formatted_lin": [131, 132, 133, 578, 580], "found": [10, 47, 49, 50, 51, 106, 131, 132, 133, 164, 169, 174, 179, 182, 244, 252, 287, 504, 540, 604, 606, 608, 609, 612], "found_at": 179, "foundat": 613, "four": [53, 97, 174, 182], "fourchamb": 575, "fourth": 538, "fp": [16, 147, 150, 155, 162, 164, 165, 169, 170, 171, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "fpa": 20, "fraction": [26, 27, 28], "fractiongroupnumb": [24, 26], "fractiongroupsequ": [24, 26, 27, 28], "fragment": [50, 67, 136, 137, 138, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 578, 591, 599], "fragments_per_fram": [53, 138], "frame": [2, 8, 20, 29, 30, 32, 34, 37, 39, 44, 50, 67, 69, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 208, 213, 216, 224, 225, 243, 244, 251, 252, 255, 256, 257, 259, 266, 268, 271, 278, 279, 280, 282, 283, 578, 587, 589, 591, 596, 599, 609, 612], "frame1": [138, 139, 141], "frame2": [138, 139, 141], "frame3": [139, 141], "frame_iter": 609, "frame_length": [243, 251], "framework": 608, "free": [36, 37, 131, 132, 133], "frequenc": [2, 8, 20, 51, 614], "frequent": 606, "friendli": [504, 604, 606], "from": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 67, 69, 72, 76, 77, 79, 81, 84, 85, 91, 97, 108, 109, 118, 119, 128, 129, 130, 131, 132, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 155, 158, 159, 160, 161, 162, 163, 166, 169, 172, 173, 174, 175, 176, 183, 184, 185, 197, 198, 200, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 223, 224, 225, 226, 243, 244, 245, 251, 255, 257, 259, 260, 261, 262, 266, 267, 268, 270, 271, 272, 278, 280, 283, 285, 504, 529, 531, 533, 534, 535, 537, 538, 539, 540, 542, 560, 575, 578, 581, 582, 583, 584, 585, 586, 589, 590, 593, 594, 595, 596, 599, 600, 602, 603, 604, 606, 608, 609, 610, 612, 613, 614], "from_byt": [289, 536], "from_float": 533, "from_json": [128, 131, 132, 133, 578, 591, 594, 605], "from_named_compon": [538, 578, 596], "from_named_components_veterinari": [538, 578, 596], "fromhex": [534, 537], "fromisocalendar": [531, 535], "fromisoformat": [531, 535, 539], "fromordin": [531, 535], "fromtimestamp": [531, 535], "front": [504, 540, 602], "full": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 37, 47, 106, 132, 164, 243, 533, 578, 587, 588, 589, 594, 606], "func": [25, 26, 603], "function": [17, 20, 25, 26, 27, 29, 30, 32, 34, 36, 37, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 55, 58, 59, 67, 69, 70, 72, 74, 81, 91, 98, 102, 109, 110, 128, 131, 132, 133, 136, 137, 147, 148, 150, 155, 162, 165, 167, 168, 172, 174, 183, 184, 185, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 226, 243, 244, 245, 251, 252, 255, 257, 258, 259, 267, 272, 273, 278, 280, 287, 290, 450, 531, 532, 533, 535, 541, 564, 565, 567, 568, 570, 573, 574, 578, 579, 580, 581, 586, 587, 589, 590, 591, 594, 596, 599, 603, 604, 605, 606, 609, 610, 612, 614], "further": [39, 606, 609, 612, 613], "furthermor": 541, "furthest": [175, 183, 184], "fuse": 533, "futur": [46, 96, 131, 132, 133, 578, 584, 594, 613], "future_behavior": [43, 567, 578, 594], "f\u00e9lix": [578, 585], "g": [2, 8, 9, 11, 12, 17, 20, 22, 24, 26, 27, 30, 34, 38, 39, 42, 43, 49, 50, 53, 56, 85, 128, 131, 132, 133, 134, 164, 207, 208, 244, 252, 285, 531, 533, 538, 563, 578, 581, 588, 590, 594, 599, 604, 610], "g1": 39, "g2": 39, "gain": 20, "galleri": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 600], "gantri": [11, 20, 26, 28], "gantryangl": 11, "gb18030": 22, "gcc": 603, "gdcm": [30, 34, 38, 44, 45, 131, 132, 133, 209, 224, 234, 235, 236, 237, 238, 239, 240, 241, 250, 271, 578, 581, 587, 590, 594, 596, 597, 599, 612], "gdcm_handler": 97, "ge": 20, "ge_genesis_ff": [20, 47], "gems_acqu_01": 20, "gems_iden_01": [20, 47], "gems_imag_01": 20, "gems_imps_01": 20, "gems_parm_01": 20, "gems_pati_01": 20, "gems_rela_01": 20, "gems_sers_01": 20, "gems_stdy_01": 20, "gender": 53, "gener": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 25, 26, 27, 34, 38, 42, 43, 45, 52, 131, 132, 133, 136, 137, 146, 152, 162, 168, 176, 224, 245, 268, 271, 272, 283, 285, 290, 504, 529, 537, 564, 578, 580, 581, 585, 587, 599, 601, 603, 609], "generate_filenam": [567, 578, 599], "generate_frag": [136, 137, 147, 155, 578, 599], "generate_fragmented_fram": [146, 578, 599], "generate_fram": [136, 137, 148, 213, 578, 599, 612], "generate_instance_uid": [131, 132, 133, 224, 245, 268, 271, 272, 283], "generate_multiplex": [3, 131, 132, 133, 564, 578, 594, 614], "generate_pixel_data": [578, 591, 599], "generate_pixel_data_frag": [578, 599], "generate_pixel_data_fram": [578, 599], "generate_uid": [10, 38, 131, 132, 133, 174, 224, 245, 268, 271, 272, 283, 578, 590, 599], "genesi": 20, "geometri": 0, "get": [2, 9, 10, 14, 26, 27, 32, 42, 43, 45, 47, 48, 49, 50, 51, 53, 56, 93, 97, 128, 131, 132, 133, 158, 160, 161, 172, 281, 567, 578, 581, 582, 590, 594, 596, 602, 603, 607, 608, 609, 612], "get_charset_fil": 567, "get_data": 243, "get_decod": [567, 612], "get_encod": 567, "get_entri": 119, "get_expected_length": [208, 578, 599], "get_fram": [251, 578, 599, 612], "get_frame_offset": [578, 591, 599], "get_image_pixel_id": [578, 599], "get_item": [131, 132, 133, 578, 599], "get_j2k_paramet": [578, 599], "get_nr_fram": [578, 599], "get_opt": [30, 34, 243, 251], "get_overlay_arrai": 208, "get_palette_fil": [567, 578, 591], "get_path": [42, 50, 69, 567, 604, 606, 612], "get_pixeldata": [97, 209, 210, 211, 212, 213, 214], "get_private_entri": 118, "get_private_item": [131, 132, 133], "get_tag": 134, "get_testdata_fil": [9, 10, 11, 567, 578, 594, 596, 597, 599, 603], "gggg": 604, "ggggeeee": 289, "gildong": [22, 538], "git": [24, 26, 27, 602, 603, 608], "github": [23, 578, 587, 601, 602, 603, 608], "give": [533, 541, 578, 580, 581, 604], "given": [2, 11, 24, 26, 27, 28, 29, 32, 36, 37, 45, 50, 51, 67, 77, 79, 128, 129, 131, 132, 133, 134, 135, 143, 145, 158, 160, 161, 164, 166, 172, 174, 185, 208, 211, 213, 214, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 273, 289, 504, 533, 534, 536, 538, 540, 557, 564, 578, 593, 596, 604, 606, 608, 609, 612, 614], "given_nam": [538, 578, 596], "given_name_ideograph": 538, "given_name_phonet": 538, "glob": [4, 10, 104, 105, 107, 606], "global": [99, 578, 597], "glossari": [36, 37, 38, 40, 612], "glow": 20, "gmail": [2, 8, 9, 11, 12, 17, 20, 22], "gn": 39, "go": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 167, 602, 603, 604, 606, 608, 610], "gone": 603, "good": [52, 53, 602, 603, 609], "googl": 601, "got": 603, "goyett": [578, 586], "gracefulli": [578, 594, 599], "grai": [9, 48, 612], "graphic": [0, 50], "grayscal": [30, 34, 36, 37, 38, 39, 50, 131, 132, 133, 268, 283, 612], "greater": [32, 39, 56, 131, 132, 133, 142, 147, 224, 268, 271, 282, 283, 529, 533, 578, 587, 599, 605], "greek": [578, 579], "green": [36, 37, 38, 39, 578, 593], "gregorian": [531, 535], "grep": [26, 27], "greyscal": [36, 37], "grid": 0, "group": [2, 12, 17, 20, 26, 27, 28, 39, 42, 47, 49, 51, 118, 120, 128, 131, 132, 133, 134, 135, 164, 172, 174, 185, 198, 208, 243, 251, 255, 257, 278, 280, 289, 290, 291, 538, 564, 567, 578, 581, 584, 588, 593, 594, 601, 602, 604, 612, 614], "group_dataset": [131, 132, 133, 612], "group_elem": 291, "grouplength": 120, "guarante": [43, 45, 47, 533], "gui": [578, 579], "guid": [30, 34, 41, 44, 53, 131, 132, 133, 224, 271, 567, 578, 590, 596, 599, 601, 603, 604, 609], "guillaum": [2, 8, 9, 11, 12, 17, 20, 22], "gunnar": [578, 585], "gzip": [578, 584, 590], "h": [2, 8, 12, 20, 22, 24, 26, 27, 28], "ha": [2, 10, 14, 20, 23, 24, 25, 26, 27, 30, 32, 34, 36, 37, 38, 39, 43, 44, 47, 50, 52, 53, 82, 89, 91, 128, 131, 132, 133, 142, 143, 145, 147, 149, 150, 165, 166, 173, 174, 175, 185, 186, 197, 207, 208, 209, 210, 211, 212, 213, 214, 243, 251, 256, 277, 279, 289, 504, 529, 530, 532, 533, 540, 564, 578, 580, 581, 583, 588, 589, 591, 592, 593, 598, 599, 602, 603, 604, 605, 606, 608, 609, 610, 612, 614], "habit": 604, "had": [530, 578, 589, 596, 602], "halchenko": [578, 586], "halv": 273, "hand": [39, 52, 533, 578, 594], "handi": 42, "handl": [46, 47, 50, 52, 76, 97, 128, 131, 132, 133, 181, 199, 504, 540, 565, 567, 578, 579, 582, 584, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599, 604, 605, 608, 612], "handler": [44, 53, 80, 94, 97, 131, 132, 133, 208, 209, 210, 211, 212, 213, 214, 564, 567, 578, 587, 589, 591, 592, 593, 594, 596, 597, 599, 602, 605], "handler_nam": [131, 132, 133], "hang": 172, "happi": [602, 603], "harder": 42, "has_bot": [138, 139, 140], "has_inst": 175, "hasattr": 4, "hash": [529, 578, 590, 596], "hasn": [146, 602, 603], "have": [12, 14, 25, 26, 27, 28, 32, 36, 37, 38, 39, 42, 43, 44, 45, 47, 49, 50, 52, 53, 97, 128, 131, 132, 133, 135, 138, 140, 143, 144, 147, 150, 164, 167, 174, 176, 185, 198, 208, 211, 213, 214, 223, 224, 243, 244, 251, 252, 255, 256, 257, 270, 271, 278, 279, 280, 504, 530, 533, 540, 543, 554, 564, 578, 584, 587, 589, 590, 593, 597, 599, 601, 602, 603, 604, 605, 606, 608, 609, 610, 612, 614], "haven": [53, 578, 599, 602, 604], "hdr": 20, "head": [10, 53, 606], "header": [20, 36, 156, 164, 169, 578, 580, 599, 604], "health": [24, 26, 52], "height": 20, "helic": 20, "hello": [16, 604], "help": [14, 24, 25, 26, 27, 28, 43, 44, 47, 165, 578, 581, 589, 596, 598, 601, 602, 603], "helper": 134, "henc": [39, 185], "here": [10, 24, 26, 28, 30, 34, 47, 54, 99, 131, 132, 133, 181, 244, 252, 603, 604, 605, 606, 613], "heurist": [165, 578, 587], "hex": [49, 53, 128, 131, 132, 133, 134, 534, 537, 578, 581], "hexadecim": [534, 537, 604], "hf": [2, 8, 20], "hh": [535, 539], "hierarch": [6, 21, 146, 240, 241, 282, 578, 591, 600], "hierarchi": [174, 606], "high": [2, 8, 20, 37, 38, 39, 45, 53, 111, 131, 132, 133, 230, 231, 232, 268, 283, 578, 591, 612], "highbit": [609, 610], "higher": [36, 38, 40, 131, 132, 133, 149, 533, 578, 581, 605], "highest": [504, 540, 578, 596], "highli": [578, 598], "hint": 32, "hispe": 20, "histogram": 20, "histori": 20, "hold": [207, 285, 289, 536], "holmberg": [578, 586], "holog": [578, 597], "home": [69, 606], "hong": [22, 538], "hood": 42, "horiz": 20, "horizont": 273, "hors": 538, "host": [20, 289, 536], "hot_iron": [215, 258], "hot_metal_blu": [215, 258], "hotfix": [578, 599], "hounsfield": [50, 612], "hour": [535, 539], "how": [2, 3, 8, 9, 10, 12, 14, 16, 17, 18, 20, 24, 26, 30, 34, 39, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 109, 128, 143, 144, 174, 578, 579, 583, 602, 603, 604, 605, 606, 607, 609, 610, 612, 614], "howev": [10, 25, 26, 29, 32, 36, 37, 38, 39, 41, 42, 44, 45, 131, 132, 133, 146, 147, 150, 207, 268, 283, 537, 602, 603, 604, 606, 609, 612], "htj2k": [41, 253, 578, 599], "htj2klossless": [578, 599], "htj2klosslessrpcl": [578, 599], "html": [53, 603], "http": [23, 53, 602, 603, 605, 608], "hu": [50, 612], "human": [504, 538, 604], "hypothet": 53, "hz": [3, 51, 614], "i": [0, 2, 3, 4, 10, 17, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 60, 65, 69, 71, 73, 76, 77, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 96, 97, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 143, 145, 146, 147, 148, 149, 150, 151, 152, 156, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 197, 198, 199, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 243, 244, 245, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 292, 504, 529, 531, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 556, 557, 559, 560, 565, 566, 575, 578, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 608, 609, 610, 612, 613, 614], "i2": 609, "ibh": 20, "icc": [216, 226, 259, 267, 578, 599], "icc_profil": [226, 267], "icon": [602, 603], "id": [0, 2, 8, 9, 10, 12, 17, 20, 47, 131, 132, 133, 134, 173, 174, 175, 176, 177, 275, 578, 580, 597, 604, 606], "id00001": [26, 28], "idea": [602, 603], "ideal": 45, "iden": 20, "ident": [533, 578, 584, 612], "identif": 10, "identifi": [32, 39, 43, 47, 52, 194, 287, 504, 540, 578, 599], "ideograph": 538, "idx": 0, "ie": 128, "iec": [36, 37, 39, 44, 225, 266, 276, 389, 394, 397, 529, 609], "ignor": [43, 56, 76, 84, 85, 111, 128, 131, 132, 133, 178, 504, 533, 540, 558, 567, 578, 592, 596, 599, 603], "ii": [604, 614], "iii": 614, "illustr": [1, 3, 4, 6, 7, 8, 9, 15, 16, 18, 20, 36, 37, 42, 54, 609], "im": [2, 610, 612], "im000000": [10, 606], "im000001": [10, 606], "im000002": [10, 606], "im000003": [10, 606], "im000004": 10, "im000005": 10, "im000006": 10, "im1": 612, "im2": 612, "imag": [5, 8, 9, 10, 12, 17, 20, 26, 28, 30, 33, 34, 44, 45, 46, 47, 49, 50, 69, 131, 132, 133, 139, 140, 141, 142, 146, 147, 150, 172, 174, 209, 211, 212, 213, 214, 215, 223, 224, 225, 230, 231, 232, 234, 235, 238, 239, 243, 244, 245, 246, 247, 248, 249, 251, 255, 257, 258, 266, 268, 270, 271, 272, 274, 277, 278, 280, 281, 282, 283, 289, 534, 536, 537, 570, 573, 578, 581, 588, 590, 594, 596, 599, 600, 604, 606, 608, 609, 610, 612], "image_handl": [578, 589, 590], "image_process": [5, 600], "imagecm": [216, 226, 259, 267], "imagecmstransform": [216, 226, 259, 267], "imagecodec": [30, 34], "imageri": 612, "imagetyp": 604, "imaginari": [289, 534, 536, 537], "img2d": 4, "img3d": 4, "img_shap": 4, "imit": 96, "immedi": 50, "immut": [29, 244, 531, 535, 539, 578, 590], "implant": [172, 174], "implement": [2, 12, 20, 26, 27, 28, 30, 34, 42, 47, 52, 135, 160, 161, 198, 442, 504, 540, 578, 594, 604], "implementationclassuid": 12, "implicit": [16, 26, 27, 39, 42, 45, 89, 131, 132, 133, 158, 160, 161, 162, 165, 174, 185, 211, 233, 253, 504, 530, 552, 578, 581, 588, 590, 596, 599], "implicit_vr": [131, 132, 133, 185, 504, 530, 578, 599], "implicitli": 44, "import": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 30, 32, 34, 36, 37, 38, 39, 42, 43, 44, 45, 47, 48, 49, 50, 51, 69, 84, 85, 108, 109, 128, 131, 132, 133, 139, 140, 141, 172, 174, 224, 244, 252, 255, 257, 271, 278, 280, 504, 529, 575, 578, 584, 587, 599, 602, 603, 604, 605, 606, 608, 609, 610, 612, 613, 614], "import_path": [244, 252], "importantli": [606, 612], "importerror": [209, 210, 212, 546, 548, 578, 595, 602], "imposs": 174, "improp": [578, 591, 593], "improv": [43, 578, 585, 588, 589, 596, 598, 599, 601, 609], "imshow": [4, 9, 48, 610, 612], "imxxxxxx": 174, "includ": [24, 25, 26, 29, 43, 49, 52, 128, 131, 132, 133, 138, 172, 174, 185, 208, 243, 251, 274, 292, 504, 533, 535, 539, 540, 567, 578, 580, 582, 584, 586, 587, 599, 602, 603, 604, 606, 609, 614], "include_orphan": 174, "inclus": [37, 38, 39], "incompat": [578, 581, 587, 608], "incorrect": [146, 244, 252, 578, 582, 588, 590, 591, 599], "incorrectli": [578, 579], "incorrectmodalityworklistentri": 613, "increas": [36, 131, 132, 133, 224, 271, 578, 581, 598, 609], "increment": [20, 176], "incur": 541, "indent": [8, 131, 132, 133, 175, 604], "indent_char": [131, 175], "indent_format": [131, 132, 133], "indent_str": 8, "independ": 185, "index": [36, 37, 38, 42, 50, 51, 130, 131, 132, 133, 149, 174, 175, 176, 207, 220, 221, 222, 243, 244, 251, 252, 257, 263, 264, 265, 280, 285, 286, 504, 540, 564, 578, 594, 599, 603, 612, 614], "indexerror": [207, 285], "indic": [2, 8, 20, 39, 47, 49, 67, 97, 128, 131, 132, 133, 158, 160, 161, 244, 255, 278, 289, 533, 536, 578, 585, 602, 603, 604, 612], "indirectli": [30, 34], "individu": [52, 225, 266, 538, 575, 578, 584, 594, 596], "inequ": [578, 588, 589], "inexact": 533, "inf": [533, 541], "infer_sq_for_un_vr": [56, 578, 597], "infil": 604, "infin": [533, 534, 537], "infinit": 533, "info": [11, 20, 162, 165, 168, 180, 181, 182, 504, 578, 581, 582, 584, 586], "inform": [2, 6, 7, 8, 9, 12, 13, 20, 24, 26, 27, 28, 31, 35, 40, 42, 44, 47, 50, 52, 53, 80, 100, 128, 131, 132, 133, 135, 164, 167, 169, 185, 198, 224, 244, 245, 252, 255, 257, 271, 272, 278, 280, 538, 578, 579, 581, 584, 587, 591, 593, 594, 599, 600, 602, 603, 604, 609, 612, 614], "inherit": [32, 139, 141, 578, 596, 599], "init": [578, 596], "init_valu": 133, "initi": [53, 132, 133, 134, 180, 181, 207, 285, 538, 602, 612], "initial_byt": 158, "initialis": [578, 599], "inlin": [131, 132, 133, 578, 599, 605], "inlinebinari": [128, 131, 132, 133], "input": [20, 24, 26, 50, 207, 216, 225, 243, 256, 259, 266, 279, 538, 578, 594], "input_output": [13, 600], "insensit": [42, 131, 132, 133, 287], "insert": [0, 207, 285, 504, 540, 603, 604], "insid": [17, 578, 580, 610], "instal": [43, 45, 54, 97, 131, 132, 133, 213, 244, 245, 252, 255, 257, 272, 278, 280, 578, 579, 586, 596, 603, 604, 607, 609, 610, 612, 614], "instanc": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 38, 42, 45, 47, 50, 52, 69, 78, 88, 128, 131, 132, 133, 135, 139, 141, 158, 160, 161, 164, 165, 172, 173, 174, 175, 185, 198, 207, 215, 216, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 257, 258, 259, 268, 271, 272, 278, 280, 283, 285, 288, 504, 532, 533, 534, 540, 571, 572, 578, 590, 596, 599, 604, 609, 610, 612, 613], "instancecreationd": [24, 26], "instancecreationtim": [24, 26], "instancenumb": 606, "instead": [2, 29, 34, 37, 42, 50, 51, 52, 56, 95, 131, 132, 133, 146, 147, 148, 150, 155, 162, 172, 174, 185, 224, 244, 271, 504, 537, 538, 540, 565, 566, 578, 581, 584, 588, 589, 590, 593, 594, 596, 597, 599, 602, 603, 604, 605, 606, 608, 610, 612, 614], "institut": [2, 8, 20], "instruct": [602, 603, 604], "int": [29, 30, 32, 33, 34, 42, 56, 67, 77, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 138, 142, 143, 145, 146, 148, 149, 150, 152, 153, 154, 158, 160, 161, 162, 163, 164, 165, 168, 170, 171, 174, 175, 176, 179, 180, 181, 182, 197, 206, 207, 208, 216, 220, 221, 222, 224, 226, 243, 244, 251, 252, 255, 256, 257, 259, 263, 264, 265, 267, 268, 271, 273, 274, 275, 276, 277, 278, 279, 280, 283, 285, 289, 290, 291, 504, 531, 532, 533, 534, 535, 536, 537, 538, 540, 552, 557, 560, 564, 604, 608, 610], "int16": [42, 50, 51, 131, 132, 133, 268, 283, 610, 612, 614], "int64": 548, "int8": [131, 132, 133, 268, 283], "integ": [29, 30, 32, 34, 37, 39, 50, 150, 207, 256, 277, 279, 281, 285, 289, 504, 529, 533, 534, 536, 537, 540, 578, 582, 584, 594, 609, 612, 614], "integr": 20, "intend": [30, 34, 38, 39, 131, 132, 133, 243, 251, 252, 602], "intens": [33, 36, 37, 38, 39, 609], "intent": [216, 226, 259, 267], "intention": [504, 540], "interact": [10, 42, 47, 131, 132, 133, 606], "intercept": [20, 42, 217, 219, 260, 262], "interchang": [50, 606], "interest": [14, 49, 601, 604, 612], "interfac": [27, 40, 287, 575, 578, 596, 599, 608], "interleav": [33, 37, 614], "interleave_mod": 33, "intermedi": [42, 54, 533], "intern": [128, 131, 132, 133, 162, 585], "interpret": [2, 8, 20, 29, 38, 39, 49, 50, 131, 132, 133, 209, 210, 211, 212, 213, 214, 224, 225, 243, 244, 245, 251, 255, 257, 266, 268, 271, 272, 273, 278, 280, 283, 504, 531, 540, 578, 591, 599, 609, 610, 612, 614], "interscan": 20, "interv": [609, 610, 614], "intricaci": 244, "introduc": [578, 597, 602, 612], "introduct": [28, 34, 46, 54, 602, 603, 606, 607, 611, 614], "intuit": 609, "invalid": [43, 56, 76, 77, 85, 89, 90, 135, 277, 529, 578, 590, 594, 596, 598, 599], "invalid_key_behavior": [96, 567, 578, 594], "invalid_keyword_behavior": [96, 567, 578, 594], "invaliddicomerror": [164, 169, 567, 578, 582, 604], "invalidoper": 533, "invers": [39, 531, 533, 535], "io": [14, 16, 32, 128, 132, 139, 141, 158, 160, 161, 567, 578, 599, 604], "iobas": [160, 161], "iod": [39, 185, 281, 606, 610, 614], "ipsum": 529, "ipynb": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "ipython": [131, 132, 133, 287, 578, 579], "ir": [578, 591], "irrevers": 36, "is_arrai": [243, 251], "is_avail": [30, 34, 97, 208, 209, 210, 211, 212, 213, 214, 244, 252, 564, 578, 589], "is_binari": [243, 251], "is_buff": [128, 130, 243, 251], "is_canon": 533, "is_cid": 287, "is_compress": [504, 609, 612], "is_conformant_file_id": 567, "is_dataset": [243, 251], "is_defl": 504, "is_dicom": [567, 578, 587], "is_empti": 128, "is_encapsul": [244, 252, 504], "is_fil": [10, 606], "is_finit": 533, "is_implicit_vr": [16, 44, 130, 131, 132, 133, 158, 160, 161, 162, 163, 165, 170, 171, 185, 197, 504, 552, 578, 590, 599], "is_infinit": 533, "is_integ": [534, 537], "is_little_endian": [14, 16, 44, 130, 131, 132, 133, 147, 150, 158, 160, 161, 162, 165, 170, 171, 178, 180, 181, 182, 183, 184, 185, 197, 504, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 559, 560, 578, 599], "is_n": [244, 252], "is_nan": 533, "is_norm": 533, "is_original_encod": [131, 132, 133], "is_priv": [42, 128, 173, 289, 504, 578, 587], "is_private_cr": 289, "is_qnan": 533, "is_raw": 130, "is_retir": [16, 108, 109, 110, 118, 119, 128, 504, 578, 587], "is_root": 175, "is_sign": [276, 533], "is_snan": 533, "is_stag": [173, 174, 606], "is_subnorm": 533, "is_transfer_syntax": 504, "is_undefined_length": [44, 128, 131, 132, 133, 245, 272, 578, 591], "is_valid": 504, "is_valid_d": [60, 578, 596], "is_zero": 533, "isalnum": [504, 540], "isalpha": [504, 540], "isascii": [504, 540], "isdecim": [504, 540], "isdigit": [504, 540], "isfloat": [60, 578, 598], "isidentifi": [504, 540], "isinst": 609, "iskeyword": [504, 540], "islow": [504, 540], "ismultivalu": [578, 590, 593], "isn": [37, 131, 132, 133, 143, 145, 149, 165, 185, 281, 504, 529, 578, 590, 594, 599, 603, 604, 612], "isnumer": [504, 540], "iso": [26, 27, 36, 37, 39, 44, 225, 266, 276, 389, 394, 397, 529, 531, 535, 539, 578, 591, 609], "iso2022_jp": 22, "iso8859": [22, 131, 132, 133, 162, 165, 197, 552], "iso_ir": [10, 20, 26, 28, 47, 78, 604, 605, 606], "iso_ir_100": 604, "isocalendar": [531, 535], "isoformat": [531, 535, 539], "isol": 608, "isovue300": 20, "isoweekdai": [531, 535], "isprint": [504, 540], "isspac": [504, 540], "isstr": [578, 590], "isstringorstringlist": [578, 590], "issu": [24, 26, 28, 30, 34, 37, 52, 76, 77, 79, 87, 131, 132, 133, 277, 578, 581, 582, 583, 584, 585, 590, 599, 601, 602, 608], "issue18": [578, 579], "issue22": [578, 579], "issue27": [578, 579], "issue33": [578, 579], "issue36": [578, 580], "issue38": [578, 580], "issue40": [578, 580], "issue41": [578, 580], "istitl": [504, 540], "isupp": [504, 540], "ital": 53, "italic": 53, "item": [0, 6, 8, 9, 15, 19, 20, 24, 26, 27, 28, 32, 42, 51, 52, 53, 67, 128, 131, 132, 133, 138, 140, 142, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 171, 178, 202, 207, 285, 578, 579, 580, 581, 584, 587, 590, 591, 596, 597, 600, 604, 606, 614], "itemdelimitertag": 165, "itemis": 152, "items": [131, 132, 133, 244, 268, 283], "iter": [10, 17, 42, 131, 132, 133, 142, 143, 144, 145, 146, 147, 148, 152, 162, 175, 176, 183, 186, 207, 213, 243, 244, 252, 255, 278, 285, 289, 292, 504, 536, 540, 578, 580, 588, 599, 606, 612], "iter_arrai": [29, 244, 612], "iter_buff": [29, 244], "iter_decod": 243, "iter_encod": [252, 609], "iter_pixel": [29, 45, 131, 132, 133, 567, 578, 599, 610, 612], "iteral": [131, 132, 133, 578, 580], "itis_tsn": 613, "its": [10, 24, 25, 26, 27, 29, 30, 32, 34, 36, 37, 38, 39, 42, 43, 82, 128, 131, 132, 133, 150, 174, 175, 182, 207, 208, 209, 210, 211, 212, 213, 214, 216, 226, 245, 259, 267, 272, 504, 533, 540, 564, 578, 589, 594, 599, 604, 606, 609, 612], "itself": [10, 38, 42, 47, 53, 106, 160, 161, 183, 184, 504, 540, 578, 594, 602, 603, 606], "itu": [36, 37, 225, 266, 529, 609], "iv": 20, "j": 22, "j2k": [32, 139, 141, 578, 599], "j2k_cr": [36, 131, 132, 133, 224, 271, 609], "j2k_psnr": [36, 131, 132, 133, 224, 271, 609], "jame": 14, "jan": [84, 604], "januari": [23, 531, 535], "japanes": [578, 579, 584, 587], "jfk": 20, "ji": [578, 590], "jls_error": [37, 131, 132, 133, 224, 271, 609], "joan": [128, 131], "john": [131, 538], "join": [11, 504, 540, 610], "jonathan": [578, 585, 586], "jp2": [36, 578, 599], "jpe2000lossless": 36, "jpeg": [29, 32, 35, 39, 41, 44, 45, 50, 80, 131, 132, 133, 138, 140, 146, 209, 210, 211, 212, 213, 214, 224, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 244, 246, 247, 248, 249, 253, 254, 255, 257, 271, 276, 278, 280, 282, 389, 394, 397, 504, 578, 589, 591, 593, 594, 596, 599, 608, 612], "jpeg2000": [30, 34, 36, 45, 146, 253, 578, 589, 591, 609], "jpeg2000compressedpixeltransfersyntax": [578, 594, 599], "jpeg2000encod": [33, 36, 578, 599], "jpeg2000lossi": [578, 589], "jpeg2000lossless": [32, 139, 140, 141, 609], "jpeg2000losslessencod": [33, 36, 578, 599], "jpeg2000mc": [578, 594, 599], "jpeg2000mclossless": [578, 594, 599], "jpeg2000multicompon": [578, 589, 594, 599, 602], "jpeg2000multicomponentlossless": [578, 589, 594, 599, 602], "jpeg2000transfersyntax": [578, 594, 599], "jpeg2k": [44, 69, 578, 589, 609, 612], "jpeg2kimageplugin": [41, 45], "jpeg_l": [45, 131, 132, 133, 210, 578, 587, 599], "jpeg_ls_handl": 97, "jpegbaselin": [578, 589, 594, 599], "jpegbaseline8bit": [44, 504, 578, 594, 599, 609], "jpegbaselinelossy12bit": [578, 589], "jpegbaselinelossy8bit": [578, 589], "jpegextend": [578, 589, 594, 599], "jpegextended12bit": [578, 594, 599], "jpegimageplugin": 45, "jpeglossless": [578, 594, 599], "jpeglosslessp14": [578, 589], "jpeglosslesssv1": [578, 594, 599], "jpeglossycompressedpixeltransfersyntax": [578, 594, 599], "jpeglslossi": [578, 594, 599], "jpeglslossless": [37, 609], "jpeglslosslessencod": [33, 37, 578, 599], "jpeglsnearlossless": [37, 578, 594, 599, 609], "jpeglsnearlosslessencod": [33, 37, 578, 599], "jpeglssupportedcompressedpixeltransfersyntax": [578, 594, 599], "jpeglstransfersyntax": [578, 594, 599], "jpegtransfersyntax": [578, 594, 599], "jpg": [578, 596], "jpiphtj2kreferenc": [578, 599], "jpiphtj2kreferenceddefl": [578, 599], "json": [128, 131, 132, 133, 289, 578, 590, 591, 595, 596, 599, 607], "json_data": 605, "json_dataset": [131, 132, 133], "json_kei": [289, 578, 598], "jsonmodel": 131, "jul": 567, "juli": 23, "julien": [578, 586], "june": 23, "jupyt": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "just": [10, 12, 14, 25, 26, 27, 28, 42, 47, 52, 89, 128, 131, 132, 133, 162, 224, 271, 578, 590, 594, 602, 603, 604, 606, 612], "justifi": [504, 540], "k": [176, 578, 599], "kb": 164, "keep": [36, 37, 38, 131, 132, 133, 174, 224, 245, 271, 272, 606, 608, 609, 610, 612], "keep_def": [131, 132, 133, 578, 599], "keepend": [504, 540], "kei": [4, 33, 42, 85, 128, 131, 132, 133, 134, 172, 175, 208, 223, 270, 287, 289, 504, 540, 578, 594, 602], "kept": [131, 132, 133, 533, 578, 580, 608], "kernel": 20, "keyerror": [112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 129, 131, 132, 133, 578, 599, 604], "keysview": 288, "keyword": [17, 26, 27, 28, 29, 42, 47, 50, 51, 53, 84, 85, 92, 106, 108, 109, 117, 118, 120, 125, 127, 128, 131, 132, 133, 164, 174, 183, 184, 185, 208, 211, 213, 214, 221, 224, 225, 243, 244, 245, 251, 252, 255, 256, 257, 264, 266, 269, 271, 272, 274, 275, 278, 279, 280, 281, 282, 284, 287, 290, 504, 540, 564, 575, 578, 582, 584, 587, 589, 590, 594, 598, 599, 603, 604, 606, 608, 612, 613], "khz": 614, "kind": 47, "klein": [578, 582], "know": [10, 39, 42, 47, 604, 605, 606], "knowledg": 612, "known": [38, 39, 41, 42, 43, 47, 50, 56, 84, 96, 128, 129, 131, 132, 133, 215, 258, 289, 291, 536, 578, 588, 591, 593, 594, 596, 604, 613], "korean": [538, 578, 584], "kvp": 20, "kwarg": [131, 132, 133, 158, 159, 160, 161, 174, 185, 223, 224, 243, 244, 245, 251, 252, 255, 257, 270, 271, 272, 278, 280, 504, 531, 535, 538, 539, 540], "l": [20, 23, 29, 35, 41, 44, 45, 131, 132, 133, 146, 224, 238, 239, 244, 248, 249, 253, 254, 255, 257, 271, 278, 280, 282, 394, 578, 589, 599, 608], "label": [22, 26, 28, 30, 34, 244, 252], "lack": 604, "lambda": 4, "lami": [578, 586], "landmark": 20, "languag": [578, 579, 584], "larg": [20, 32, 44, 47, 52, 131, 132, 133, 134, 138, 140, 165, 182, 224, 271, 532, 578, 580, 581, 588, 590, 591, 594, 596, 609, 612, 614], "large_compressed_dataset": 32, "large_dataset": 32, "larger": [24, 26, 164, 533, 608], "largest": [2, 8, 20, 533], "last": [20, 26, 28, 42, 47, 53, 85, 97, 142, 147, 207, 285, 578, 584, 597, 604, 606, 609, 612], "lastli": [602, 603], "later": [2, 8, 20, 30, 99, 533, 534, 578, 585, 602, 604], "latest": [47, 608], "latin5": [578, 587], "latter": [143, 144, 145, 149, 153, 154, 610], "layer": [33, 36, 131, 132, 133, 224, 271, 609], "layout": [10, 174], "lazi": 49, "lead": [51, 56, 69, 504, 533, 534, 540, 543, 578, 582, 587, 598, 614], "leaf": [173, 174, 175], "leaf_nod": 174, "learn": [53, 602, 606, 609, 610, 612], "least": [30, 34, 36, 39, 41, 131, 132, 133, 224, 244, 257, 271, 280, 504, 540, 560, 606, 609, 610], "leav": [10, 16, 26, 27, 109, 604], "left": [20, 36, 49, 131, 132, 133, 224, 271, 504, 533, 540, 603, 609], "legaci": 43, "lemaitr": [2, 8, 9, 11, 12, 17, 20, 22], "lemaitre58": [2, 8, 9, 11, 12, 17, 20, 22], "len": [0, 3, 4, 8, 10, 14, 36, 37, 38, 504, 540, 604, 606, 609, 612, 614], "length": [2, 8, 12, 20, 26, 27, 28, 42, 43, 44, 47, 51, 56, 67, 90, 120, 128, 130, 131, 132, 133, 138, 140, 141, 142, 143, 145, 147, 149, 150, 151, 152, 158, 160, 161, 162, 178, 181, 198, 208, 211, 214, 224, 243, 245, 251, 256, 271, 272, 274, 279, 289, 504, 529, 533, 536, 540, 578, 583, 584, 588, 590, 594, 596, 597, 598, 599, 604, 610], "length_of_undefined_length": 70, "less": [10, 37, 38, 39, 158, 160, 161, 533, 578, 599, 609, 610, 614], "let": [44, 578, 591, 602, 603, 604, 606, 609], "letter": [20, 42, 131, 132, 133], "level": [20, 26, 27, 28, 36, 40, 53, 131, 132, 133, 165, 174, 175, 578, 584, 596, 599, 603, 604, 605, 606, 612], "lib": 606, "libjpeg": [41, 45, 578, 599, 608], "librari": [2, 23, 25, 26, 42, 43, 50, 269, 284, 578, 581, 584, 603], "licens": [2, 8, 9, 11, 12, 16, 17, 20, 22, 578, 580, 581, 603], "like": [18, 25, 26, 29, 37, 42, 43, 47, 49, 52, 72, 74, 85, 111, 131, 132, 133, 155, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 179, 181, 182, 185, 197, 198, 200, 201, 202, 216, 226, 243, 244, 251, 255, 257, 259, 267, 278, 280, 535, 578, 581, 591, 594, 597, 599, 603, 604, 605, 606, 609, 610, 612], "limit": [10, 26, 27, 37, 38, 41, 46, 50, 174, 504, 540, 541, 542, 578, 584, 590, 594, 613], "linac": 131, "line": [11, 20, 23, 24, 25, 27, 28, 40, 43, 47, 49, 52, 85, 131, 132, 133, 174, 287, 504, 540, 578, 585, 596, 602, 603, 604, 606, 609, 612], "linear": [578, 596], "link": [36, 37, 53, 603], "linspac": 610, "linux": [43, 578, 587, 603, 608], "list": [4, 6, 7, 8, 10, 13, 20, 26, 28, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 44, 67, 76, 77, 78, 79, 97, 104, 105, 107, 128, 129, 131, 132, 133, 136, 138, 139, 140, 141, 143, 145, 149, 150, 153, 154, 162, 164, 165, 168, 170, 174, 175, 183, 184, 192, 196, 197, 201, 202, 204, 207, 208, 224, 243, 244, 251, 252, 255, 257, 271, 278, 280, 285, 287, 288, 504, 529, 538, 540, 545, 546, 547, 548, 551, 552, 553, 554, 557, 558, 561, 562, 567, 575, 578, 581, 584, 585, 591, 594, 596, 597, 599, 600, 603, 604, 606, 608, 609, 612], "list_beam": 11, "liter": [25, 26], "littl": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 39, 42, 44, 45, 47, 131, 132, 133, 143, 144, 145, 147, 149, 151, 152, 153, 154, 158, 160, 161, 162, 165, 174, 180, 181, 182, 185, 198, 211, 214, 227, 229, 233, 245, 252, 253, 268, 272, 283, 289, 504, 530, 536, 543, 544, 545, 546, 547, 548, 552, 553, 554, 556, 557, 559, 560, 578, 581, 593, 599, 604, 609, 610, 612, 614], "little_endian": [131, 132, 133, 185, 504, 530, 578, 599], "live": [602, 603], "ljust": [504, 540], "ll": [42, 44, 602, 603, 604, 609, 610, 612, 614], "ln": [533, 613], "lo": [2, 12, 16, 17, 18, 20, 26, 27, 32, 47, 131, 561, 604, 606], "load": [1, 5, 6, 10, 12, 14, 16, 165, 173, 174, 182, 578, 590, 594, 595, 596, 600, 612], "loc": 20, "local": [43, 69, 106, 531, 535, 578, 597, 602, 603, 604, 608], "localhost": 603, "localtim": [531, 535], "locat": [2, 4, 8, 9, 20, 94, 131, 132, 133, 134, 146, 173, 180, 603, 606], "log": [94, 131, 132, 133, 578, 584, 597, 599, 602], "log10": 533, "logarithm": 533, "logb": 533, "logger": [94, 578, 585, 599], "logic": [533, 578, 581], "logical_and": 533, "logical_invert": 533, "logical_or": 533, "logical_xor": 533, "long": [12, 32, 37, 181, 185, 560, 578, 598, 604, 610], "longer": [56, 82, 128, 211, 578, 588, 589, 591, 594, 596, 599, 606], "look": [52, 183, 184, 602, 603, 604], "lookup": [36, 37, 38, 50, 112, 113, 114, 116, 117, 127, 215, 217, 219, 220, 221, 258, 260, 262, 263, 264, 504, 540, 578, 594, 604], "lookuperror": [76, 77, 504, 540], "loonei": [578, 585, 586], "loop": [24, 26, 52], "lorem": 529, "loss": [77, 79, 533, 534, 541, 578, 594, 609], "lossi": [36, 37, 38, 41, 44, 45, 146, 239, 249, 282, 609, 612], "lossl": 32, "lossless": [35, 39, 41, 44, 45, 50, 131, 132, 133, 138, 140, 146, 213, 214, 224, 231, 232, 235, 238, 239, 240, 241, 242, 247, 248, 249, 250, 252, 253, 254, 271, 282, 578, 593, 596, 597, 599, 612], "losslessli": [36, 37], "lossy_error": 33, "lot": [578, 587, 604, 612], "low": [134, 605], "lower": [20, 131, 132, 133, 134, 174, 504, 533, 540, 578, 599, 606, 613], "lowercas": [53, 504, 540], "lowest": [289, 504, 533, 536, 540], "lrcp": 36, "lsb": 214, "lstrip": [504, 540], "lt": [2, 20, 32], "ltd": 110, "lut": [46, 215, 217, 218, 219, 220, 221, 222, 258, 260, 261, 262, 263, 264, 265, 578, 591, 593, 594, 596, 599], "lutdata": [578, 598], "m": [12, 22, 538, 602, 603, 606, 608, 609, 610, 612, 614], "maco": [578, 597, 608], "made": [38, 131, 132, 133, 142, 146, 174, 185, 578, 580, 581, 593, 599, 602, 603, 606, 609], "mai": [23, 24, 26, 27, 29, 30, 33, 34, 36, 37, 39, 43, 47, 49, 50, 52, 78, 96, 99, 131, 132, 133, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 158, 160, 161, 174, 185, 198, 214, 223, 224, 243, 244, 245, 252, 255, 257, 270, 271, 272, 278, 280, 504, 530, 533, 538, 540, 554, 556, 578, 591, 599, 602, 603, 604, 606, 608, 610, 612, 614], "main": [24, 25, 26, 42, 52, 54, 118, 578, 581, 602, 603, 604, 608, 610], "mainli": [48, 131, 132, 133, 504, 540, 578, 585], "mainloop": [0, 22], "major": [46, 96, 594], "make": [29, 30, 34, 36, 37, 39, 42, 43, 47, 52, 131, 132, 133, 504, 529, 540, 541, 578, 581, 590, 596, 599, 604, 606, 608, 609, 610], "maketran": [504, 540], "mamp": 20, "manag": [10, 30, 34, 47, 67, 161, 164, 174, 243, 251, 288, 578, 587, 594, 604, 606], "mani": [39, 43, 48, 50, 138, 140, 143, 144, 578, 580, 584, 585, 599, 601, 610, 612], "manipul": [2, 23, 128, 608], "manner": [604, 609], "manual": [93, 185, 610], "manufactur": [2, 8, 20, 131], "map": [50, 128, 131, 172, 504, 540, 578, 599, 603], "march": 23, "mark": [578, 586], "marker": [142, 146, 169, 182, 578, 591, 596], "markup": [53, 603], "mask": 121, "mason": [11, 12, 16, 17, 23], "massag": 20, "match": [10, 29, 39, 44, 50, 84, 93, 104, 105, 106, 107, 131, 132, 133, 166, 172, 174, 208, 209, 211, 214, 224, 243, 244, 245, 255, 257, 271, 272, 278, 280, 287, 538, 578, 584, 587, 594, 599, 606, 609, 610, 612, 614], "materi": 601, "matplotlib": [3, 4, 9, 46, 610, 612, 614], "matter": [578, 589, 604, 612], "matthew": [578, 586], "max": [20, 37, 217, 219, 260, 262, 533, 609], "max_mag": 533, "maxbytestodisplai": [128, 578, 590], "maxdepth": 603, "maximum": [26, 27, 36, 37, 39, 41, 52, 128, 138, 140, 176, 252, 504, 529, 533, 540, 578, 598, 599, 609, 610], "maxsplit": [504, 540], "mayb": 156, "mb": [5, 13, 19, 21, 164, 564, 600], "mct": [33, 36, 609], "mdc": 613, "mean": [39, 45, 214, 286, 504, 529, 540, 575, 602, 604, 606, 609, 610, 612, 613], "meaningless": 289, "meant": [167, 205], "measur": [67, 150, 153, 172], "mechan": [30, 34, 244, 252, 609], "media": [2, 12, 20, 26, 27, 28, 42, 47, 69, 135, 196, 198, 604, 606], "mediastoragesopclassuid": [12, 606], "mediastoragesopinstanceuid": 12, "medic": [20, 53, 606, 612], "meet": [10, 34, 142, 252, 578, 584, 609, 610], "mem": [5, 13, 19, 21, 600], "member": [42, 533], "memori": [6, 16, 21, 30, 32, 45, 131, 132, 133, 164, 165, 166, 182, 211, 225, 255, 257, 266, 278, 280, 578, 581, 589, 590, 591, 599, 600, 606, 610], "memory_dataset": [14, 21, 600], "memoryview": [29, 158, 160, 161, 243, 244, 251], "mention": [45, 604], "merg": [602, 603], "messag": [24, 26, 27, 28, 94, 292, 578, 581, 590, 598, 599, 602, 604, 606], "met": [30, 34, 50, 168, 208, 209, 210, 211, 212, 213, 214, 564, 578, 589], "meta": [2, 8, 12, 20, 26, 27, 28, 42, 47, 52, 100, 131, 132, 133, 135, 164, 167, 185, 198, 224, 255, 257, 271, 278, 280, 578, 581, 584, 587, 593, 604, 612], "metadata": [578, 596], "metadata_process": [19, 600], "meterset": [26, 27, 28], "method": [17, 23, 29, 30, 34, 36, 37, 39, 42, 44, 47, 49, 51, 97, 100, 128, 130, 131, 132, 133, 134, 138, 140, 143, 144, 145, 149, 153, 154, 158, 160, 161, 164, 172, 173, 174, 175, 185, 207, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 271, 285, 286, 287, 288, 289, 504, 531, 533, 534, 535, 536, 537, 538, 539, 540, 578, 581, 584, 587, 589, 596, 598, 599, 604, 605, 606, 609, 612, 613], "micro": 12, "microsecond": [535, 539], "microvolt": 614, "mid": [20, 26, 28, 42, 612], "middl": 538, "middle_nam": 538, "middle_name_ideograph": 538, "middle_name_phonet": 538, "might": [38, 47, 252, 614], "mike": [578, 582], "millisecond": [535, 539], "min": [10, 37, 217, 219, 260, 262, 533, 606, 609, 610], "min_mag": 533, "mind": [37, 38, 609, 612], "minim": [26, 28, 30, 45, 131, 132, 133, 185, 198, 244, 255, 257, 278, 280, 533, 578, 599, 610], "minimum": [30, 34, 36, 37, 38, 131, 132, 133, 198, 224, 271, 533, 609, 610, 612], "minor": 606, "minut": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 535, 539], "misc": [567, 578, 587], "miscellan": 567, "misinterpret": 29, "mismatch": 609, "miss": [9, 34, 106, 131, 132, 133, 135, 164, 169, 183, 185, 198, 208, 211, 213, 214, 215, 244, 252, 258, 578, 586, 587, 590, 591, 597, 599, 602, 604, 606, 608, 612], "missing_depend": [244, 252], "mistak": 76, "mit": [2, 8, 9, 11, 12, 16, 17, 20, 22, 23, 578, 580, 581], "mitig": [578, 599], "mitra": [578, 597], "mix": [578, 590], "mixedmodality3dcammodel": 613, "mm": [20, 23, 531, 535, 539], "mmap": [578, 599], "mmm": [535, 539], "mobil": 20, "mod": 20, "modal": [2, 8, 9, 10, 20, 26, 28, 42, 46, 217, 218, 219, 221, 222, 260, 261, 262, 264, 265, 578, 591, 606, 613], "modalitytoread": 613, "mode": [9, 20, 26, 28, 32, 33, 37, 83, 86, 87, 128, 132, 158, 160, 161, 255, 257, 278, 280, 533, 578, 591, 602, 608], "model": [2, 8, 20, 24, 26, 42, 52, 128, 131, 132, 133, 605, 614], "modern": [578, 585], "modif": [132, 602, 604, 606], "modifi": [6, 15, 30, 34, 45, 49, 50, 52, 54, 106, 131, 132, 133, 174, 224, 245, 268, 271, 272, 283, 578, 591, 594, 599, 607, 610], "modul": [10, 25, 26, 30, 34, 36, 37, 38, 43, 48, 50, 51, 69, 85, 94, 97, 131, 132, 133, 200, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 243, 244, 245, 252, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 272, 274, 277, 278, 280, 281, 282, 283, 504, 530, 540, 564, 565, 566, 567, 575, 578, 579, 585, 586, 589, 594, 596, 597, 599, 604, 606, 609, 612, 614], "modulenotfounderror": [244, 252], "mondai": [531, 535], "monochrome1": [10, 36, 37, 38, 39, 131, 132, 133, 211, 213, 268, 283, 606], "monochrome2": [2, 8, 20, 36, 37, 38, 39, 131, 132, 133, 211, 213, 268, 283, 606, 609, 610, 612], "monospac": 0, "month": 535, "more": [0, 24, 26, 27, 29, 32, 34, 36, 37, 39, 42, 43, 44, 45, 47, 49, 50, 51, 53, 67, 99, 128, 131, 132, 133, 138, 142, 143, 145, 146, 147, 150, 165, 168, 174, 177, 182, 185, 186, 200, 224, 243, 244, 245, 252, 255, 257, 271, 272, 278, 280, 282, 287, 504, 533, 538, 540, 541, 578, 579, 580, 581, 583, 584, 591, 599, 602, 603, 604, 605, 606, 608, 609, 612, 614], "morenc": [578, 585], "most": [29, 39, 43, 45, 52, 85, 131, 132, 133, 244, 255, 257, 278, 280, 289, 536, 578, 581, 584, 585, 604, 606, 609, 612, 613], "mostli": 130, "move": [0, 93, 99, 173, 174, 578, 584, 585, 599, 603, 606], "mpeg": [420, 578, 594], "mpeg2mphlf": [578, 599], "mpeg2mpmlf": [578, 599], "mpeg4hp41bdf": [578, 599], "mpeg4hp41f": [578, 599], "mpeg4hp422df": [578, 599], "mpeg4hp423df": [578, 599], "mpeg4hp42stereof": [578, 599], "mplx": 3, "mplx_label": 3, "mr": [2, 8, 10, 17, 20, 50, 69, 538, 606], "mr1": [2, 8, 20], "mr_small": 69, "mra": [10, 606], "mrg": [602, 603], "mri": [1, 5, 6, 50, 600], "mrt50h1": [2, 8, 20], "msb": 214, "msec": 20, "msg": [85, 604], "msh": 613, "much": [37, 41, 42, 541, 578, 581, 584, 585, 593], "multi": [34, 39, 50, 60, 69, 82, 131, 132, 133, 138, 146, 147, 148, 149, 150, 174, 207, 208, 243, 244, 252, 255, 257, 268, 278, 280, 282, 283, 556, 567, 578, 587, 589, 591, 593, 599, 604, 612, 614], "multi_str": [60, 70], "multifram": [578, 594], "multipl": [4, 30, 32, 34, 36, 39, 42, 47, 49, 50, 78, 109, 111, 112, 122, 128, 131, 132, 133, 146, 148, 149, 150, 216, 220, 221, 222, 224, 225, 243, 244, 251, 252, 256, 259, 263, 264, 265, 266, 271, 279, 285, 533, 538, 557, 578, 591, 597, 599, 604, 609, 610, 612], "multiplex": [3, 51, 131, 132, 133, 564, 578, 594, 614], "multiplex_1": 51, "multiplex_2": 51, "multiplex_arrai": [51, 131, 132, 133, 564, 578, 594, 614], "multiplexgrouplabel": [3, 614], "multipli": 533, "multiv": [60, 567, 604], "multivalu": [32, 60, 82, 203, 204, 544, 545, 546, 547, 548, 551, 559, 562, 563, 578, 584], "must": [25, 26, 30, 34, 36, 37, 38, 39, 42, 43, 44, 49, 50, 56, 85, 88, 131, 132, 133, 134, 138, 140, 150, 164, 172, 174, 177, 179, 181, 185, 207, 208, 215, 216, 218, 221, 222, 224, 226, 256, 258, 259, 261, 264, 265, 267, 268, 271, 279, 283, 289, 504, 533, 536, 540, 542, 560, 578, 596, 604, 605, 606, 609, 610, 614], "mutabl": 131, "mutablemap": [131, 132, 133], "mutablesequ": [32, 76, 129, 131, 132, 133, 162, 165, 170, 171, 543, 544, 545, 546, 547, 548, 551, 553, 554, 557, 559, 561, 562, 563], "my": [10, 47, 131, 132, 133, 174, 605], "my_decod": 30, "my_decoder_func": 30, "my_encod": 34, "my_encoder_func": 34, "my_inst": 172, "my_json_dump": [131, 132, 133], "my_packag": [30, 34], "my_record": 172, "my_waveform": 614, "mypi": 608, "myprint": [8, 578, 579], "myself": [578, 586], "n": [2, 8, 11, 14, 20, 26, 28, 198, 208, 211, 213, 214, 217, 219, 220, 221, 222, 260, 262, 263, 264, 265, 282, 504, 533, 540, 564, 606], "naiv": 535, "name": [0, 2, 6, 8, 9, 10, 11, 12, 14, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 41, 42, 43, 44, 45, 47, 52, 53, 106, 109, 111, 118, 119, 122, 123, 124, 128, 131, 132, 133, 135, 157, 158, 160, 161, 164, 198, 215, 224, 243, 244, 245, 251, 252, 253, 254, 255, 257, 258, 271, 272, 278, 280, 282, 287, 288, 504, 531, 533, 535, 538, 540, 578, 579, 580, 581, 584, 587, 588, 589, 594, 596, 597, 598, 599, 600, 602, 603, 604, 606, 609, 612, 613, 614], "name_prefix": 538, "name_prefix_ideograph": 538, "name_prefix_phonet": 538, "name_suffix": 538, "name_suffix_ideograph": 538, "name_suffix_phonet": 538, "namedtemporaryfil": [12, 17], "namedtupl": 286, "nan": [533, 534, 537, 541], "nanz": [578, 581], "nativ": [29, 39, 44, 131, 132, 133, 244, 252, 255, 257, 278, 280, 289, 507, 536, 571, 578, 599], "natur": [504, 533, 540], "navig": 603, "ncit": 613, "ndarrai": [29, 37, 42, 45, 48, 49, 50, 51, 53, 80, 82, 97, 103, 131, 132, 133, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 243, 244, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 271, 278, 279, 280, 282, 283, 284, 546, 548, 564, 578, 587, 591, 594, 599, 609, 610, 614], "ndc": 613, "nearest": [175, 533], "necessari": [29, 37, 42, 43, 131, 132, 133, 142, 147, 268, 283, 289, 533, 536, 538, 606, 614], "necessarili": [47, 49, 578, 599], "need": [25, 26, 27, 30, 34, 37, 38, 39, 42, 43, 44, 45, 47, 49, 51, 52, 53, 77, 79, 93, 97, 131, 132, 133, 162, 168, 224, 243, 244, 271, 558, 561, 578, 581, 596, 599, 602, 603, 604, 605, 606, 608, 609, 610, 612, 614], "needs_to_convert_to_rgb": [97, 209, 210, 211, 212, 213, 214], "neg": [289, 533, 536], "negat": 533, "neither": [84, 85, 174, 217, 219, 221, 260, 262, 264, 533], "nema": 53, "ness": [578, 581], "nest": [26, 28, 42, 131, 578, 585, 598], "network": [578, 594], "neu": 613, "neutral": 53, "never": [32, 81, 131, 132, 133, 504, 533, 540, 602, 612], "new": [10, 16, 17, 18, 26, 27, 38, 46, 52, 53, 54, 67, 69, 108, 109, 110, 111, 128, 131, 132, 133, 158, 160, 161, 173, 174, 175, 207, 224, 225, 243, 244, 245, 251, 252, 266, 271, 272, 287, 288, 504, 531, 535, 538, 539, 540, 579, 580, 581, 584, 585, 586, 589, 590, 591, 593, 594, 596, 599, 601, 604, 607, 609, 614], "new_dict_item": [16, 108, 110], "new_entries_dict": [16, 108, 110], "new_fileset": 10, "new_instance_uid": 609, "newdefineduid": 602, "newer": 47, "newli": [43, 131, 132, 133, 578, 593], "newlin": 20, "next": [43, 47, 96, 131, 132, 133, 165, 174, 175, 578, 581, 594, 606, 614], "next_indent_str": 8, "next_minu": 533, "next_plu": 533, "next_toward": 533, "nfound": 10, "nice": [207, 244, 252, 602], "nikitathespid": [578, 581], "nil": [578, 586], "no_meta": 604, "no_meta_path": 604, "node": [173, 174, 175, 604], "nois": [33, 36, 131, 132, 133, 224, 271, 609], "non": [24, 26, 32, 42, 43, 108, 109, 110, 111, 126, 128, 129, 131, 132, 133, 135, 146, 172, 174, 185, 198, 214, 240, 241, 255, 257, 278, 280, 282, 295, 504, 533, 537, 540, 541, 543, 546, 548, 554, 556, 578, 582, 583, 587, 588, 589, 590, 591, 594, 598, 599, 604, 612], "none": [0, 2, 8, 10, 14, 20, 32, 33, 53, 67, 76, 78, 81, 82, 91, 94, 96, 97, 98, 106, 108, 109, 110, 111, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 143, 145, 146, 148, 149, 155, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 215, 216, 224, 226, 243, 244, 251, 252, 255, 257, 258, 259, 267, 268, 271, 277, 278, 280, 283, 285, 286, 287, 288, 290, 292, 504, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 561, 562, 563, 564, 575, 578, 587, 590, 591, 594, 602, 604, 608, 610, 613], "nor": [84, 85], "norigin": 10, "normal": [9, 16, 20, 25, 26, 27, 32, 42, 69, 533, 578, 599], "not_dicom": 604, "notat": [26, 27, 28, 504, 533, 540, 541, 604], "note": [10, 18, 24, 26, 27, 28, 29, 32, 43, 47, 53, 82, 93, 109, 111, 131, 132, 133, 134, 142, 146, 151, 152, 164, 168, 169, 181, 191, 207, 217, 218, 219, 221, 222, 260, 261, 262, 264, 265, 504, 531, 533, 534, 535, 537, 538, 539, 540, 541, 581, 603, 604, 605, 612, 613, 614], "notebook": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "noth": [36, 37, 38, 606], "notic": [604, 606], "notimplementederror": [97, 131, 132, 133, 210, 211, 212, 214, 281], "notimplementerror": [578, 580], "noun": 53, "noutput": 16, "novemb": 23, "now": [12, 20, 128, 131, 132, 133, 529, 535, 578, 580, 581, 584, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 602, 603, 604, 606, 609, 614], "np": [3, 4, 37, 208, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 243, 244, 251, 252, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 271, 278, 280, 281, 282, 283, 564, 609, 610, 612, 614], "nr_channel": 3, "nr_fragment": [142, 152], "nr_frame": [146, 148], "nr_retri": [158, 160, 161], "nr_sampl": 3, "nsew": 0, "nucleu": [2, 8, 20], "null": [142, 208, 243, 251, 256, 274, 279, 554], "number": [2, 8, 11, 18, 20, 24, 26, 27, 28, 29, 30, 34, 39, 42, 45, 47, 49, 53, 109, 111, 130, 131, 132, 133, 134, 138, 142, 143, 145, 146, 147, 148, 149, 152, 154, 158, 160, 161, 163, 164, 165, 174, 175, 176, 179, 182, 197, 199, 200, 206, 207, 208, 224, 243, 244, 251, 252, 268, 271, 273, 274, 282, 283, 285, 286, 289, 290, 504, 529, 531, 533, 534, 535, 536, 537, 539, 540, 541, 578, 579, 583, 586, 590, 596, 597, 599, 603, 604, 606, 608, 610, 612, 613, 614], "number_class": 533, "number_of_fram": [29, 30, 34, 143, 145, 149, 223, 243, 251, 252, 270, 612], "numberofbeam": [24, 26], "numberofblock": 18, "numberofbrachyapplicationsetup": [24, 26], "numberoffractionsplan": [24, 26], "numberoffram": [211, 213, 214, 274, 275, 277, 282, 610, 612], "numberofframesinoverlai": 208, "numberofwaveformchannel": [3, 51, 564, 614], "numberofwaveformsampl": [3, 564, 614], "numer": [42, 174, 176, 289, 504, 533, 536, 540, 557, 578, 582, 591, 596, 598], "numpi": [2, 3, 4, 23, 29, 30, 34, 36, 37, 38, 42, 44, 45, 48, 49, 50, 51, 53, 82, 97, 102, 103, 131, 132, 133, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 243, 244, 245, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 278, 279, 280, 281, 282, 284, 546, 548, 564, 578, 579, 587, 589, 590, 591, 593, 597, 599, 602, 608, 609, 610, 612, 614], "numpy_handl": [97, 567, 578, 596], "numpypi": [578, 589], "o": [20, 22, 71, 73, 255, 257, 278, 280, 578, 599, 612], "ob": [2, 12, 20, 26, 27, 28, 32, 42, 44, 47, 131, 132, 133, 142, 190, 198, 245, 272, 549, 578, 582, 597, 599, 604, 605, 609, 610, 612], "obj": [131, 132, 133], "object": [0, 10, 14, 29, 30, 32, 34, 42, 47, 48, 53, 85, 99, 103, 128, 131, 132, 133, 134, 139, 141, 143, 144, 145, 149, 153, 154, 158, 160, 161, 164, 165, 166, 168, 169, 172, 174, 185, 207, 216, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247, 248, 249, 250, 255, 257, 259, 267, 278, 280, 285, 289, 291, 535, 536, 538, 567, 578, 580, 581, 590, 591, 593, 596, 597, 599, 604, 606, 614], "observ": 613, "observationsubjectclass": 613, "observertyp": 613, "obviou": 610, "obvious": 614, "obxxxx1a": 69, "occasion": [603, 604, 606], "occur": [86, 87, 131, 132, 133, 533, 578, 591, 602, 606], "occurr": [130, 207, 285, 286, 504, 540], "octob": 23, "od": [32, 185, 578, 587, 588, 596, 599, 610, 612], "odd": [42, 131, 132, 133, 134, 208, 243, 244, 251, 274, 289, 578, 588, 597, 599, 604, 610], "off": [20, 26, 27, 43, 94, 165, 578, 585, 593, 603], "offer": [26, 27, 50, 131, 132, 133, 287, 612], "offic": 538, "offici": [42, 112, 113, 114, 115, 116, 117, 118, 125, 126, 127, 128, 504, 578, 584, 585, 604, 614], "offlin": 608, "offset": [2, 8, 20, 44, 47, 49, 67, 128, 131, 132, 133, 134, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 158, 160, 161, 169, 170, 171, 174, 180, 181, 224, 243, 244, 251, 271, 552, 560, 578, 591, 594, 597, 599, 606, 609], "offsetofreferencedlowerleveldirectoryent": 172, "offsetofthenextdirectoryrecord": 172, "often": [48, 50, 109, 605], "ok": [37, 84, 85, 174, 602], "ol": [32, 185, 578, 587, 588, 596, 599], "old": [131, 132, 133, 504, 540, 578, 579, 580, 584, 587, 593], "older": [533, 608], "onc": [44, 47, 82, 109, 111, 602, 603, 613], "one": [10, 24, 26, 30, 34, 36, 39, 41, 42, 45, 50, 51, 52, 67, 83, 86, 87, 108, 110, 128, 131, 132, 133, 137, 138, 140, 142, 145, 146, 147, 150, 166, 167, 172, 174, 175, 176, 182, 186, 200, 215, 216, 224, 225, 226, 244, 245, 251, 252, 255, 257, 258, 259, 266, 267, 268, 271, 272, 278, 280, 283, 287, 504, 533, 534, 540, 578, 584, 587, 597, 599, 602, 604, 606, 608, 609, 610, 612, 613, 614], "ones": [289, 504, 536, 540, 601, 604, 606, 609], "onli": [10, 24, 26, 27, 28, 29, 30, 34, 36, 37, 39, 41, 42, 43, 45, 49, 50, 52, 53, 56, 80, 97, 109, 111, 112, 113, 114, 116, 117, 118, 119, 127, 128, 131, 132, 133, 135, 146, 150, 164, 167, 174, 176, 183, 184, 185, 198, 211, 216, 224, 226, 231, 232, 235, 243, 244, 247, 251, 252, 255, 256, 257, 259, 267, 268, 269, 271, 278, 279, 280, 281, 283, 284, 290, 504, 537, 540, 542, 578, 584, 586, 587, 588, 589, 590, 591, 593, 594, 596, 599, 602, 604, 605, 606, 609, 612], "onlin": 23, "open": [9, 23, 25, 26, 32, 139, 141, 159, 165, 255, 257, 278, 280, 578, 581, 602, 603, 604], "openjpeg": [36, 41, 44, 45, 608, 609, 612], "oper": [2, 8, 20, 29, 36, 37, 38, 42, 43, 45, 46, 47, 85, 131, 132, 133, 158, 160, 161, 217, 218, 219, 221, 222, 243, 244, 255, 257, 260, 261, 262, 264, 265, 278, 280, 504, 533, 540, 578, 581, 589, 591, 594, 604, 608, 612], "operand": [533, 578, 596], "opt": 614, "optim": [131, 132, 133], "optimis": [578, 596], "optimist": [578, 594], "option": [2, 8, 17, 20, 25, 27, 28, 30, 31, 34, 35, 43, 45, 48, 67, 81, 82, 94, 104, 105, 106, 107, 109, 111, 128, 129, 131, 132, 133, 135, 138, 142, 143, 144, 145, 146, 148, 149, 152, 153, 154, 158, 160, 161, 162, 164, 165, 168, 174, 175, 176, 182, 185, 197, 207, 208, 211, 213, 214, 215, 216, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 251, 252, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 271, 272, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 504, 529, 530, 535, 538, 539, 540, 543, 544, 545, 546, 547, 548, 551, 552, 553, 554, 556, 558, 559, 560, 561, 562, 563, 564, 567, 578, 580, 581, 587, 591, 594, 596, 599, 606, 609, 612, 614], "order": [4, 29, 30, 33, 34, 36, 37, 39, 50, 97, 131, 132, 133, 134, 146, 175, 179, 183, 184, 185, 197, 214, 224, 241, 252, 256, 271, 279, 289, 504, 533, 536, 578, 579, 586, 589, 591, 602, 609, 610, 612, 614], "ordereddict": [578, 586], "ordin": [504, 531, 535, 540], "org": [53, 605], "organ": [26, 27, 538], "organ_at_risk": [26, 27], "orient": [2, 8, 20], "origin": [2, 10, 20, 24, 26, 28, 29, 39, 44, 47, 49, 52, 89, 131, 132, 133, 166, 174, 211, 218, 224, 243, 244, 245, 261, 271, 272, 289, 504, 529, 533, 534, 536, 537, 538, 540, 578, 599, 602, 603, 604, 609, 612, 614], "original_character_set": [131, 132, 133, 578, 599], "original_encod": [131, 132, 133, 185, 197, 578, 599], "original_str": [538, 578, 589], "orphan": 174, "orthogon": 4, "oserror": 166, "other": [2, 8, 17, 20, 24, 30, 32, 34, 39, 41, 43, 44, 45, 47, 48, 49, 50, 52, 168, 185, 190, 191, 198, 256, 279, 504, 533, 538, 540, 599, 602, 604, 606, 609, 610, 612], "othermod": 613, "otherpatientid": [17, 578, 580], "otherpatientidssequ": [17, 604], "otherwis": [24, 26, 29, 30, 34, 39, 42, 88, 97, 115, 116, 120, 121, 125, 126, 127, 128, 131, 132, 133, 138, 143, 144, 145, 149, 153, 154, 162, 174, 176, 177, 180, 181, 185, 205, 216, 218, 220, 221, 222, 224, 225, 226, 243, 244, 245, 251, 252, 255, 256, 257, 259, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 278, 279, 280, 281, 283, 284, 504, 530, 533, 538, 540, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 556, 557, 559, 560], "our": [37, 602, 603, 604, 606, 609, 610, 614], "out": [0, 50, 52, 140, 141, 174, 207, 256, 279, 285, 533, 534, 578, 594, 601, 602, 603, 604, 606, 610, 614], "outfil": [24, 26, 604], "outlin": 47, "output": [13, 16, 20, 24, 26, 27, 45, 50, 52, 53, 131, 132, 133, 216, 217, 219, 226, 244, 255, 257, 259, 260, 262, 267, 273, 278, 280, 531, 535, 539, 578, 591, 593, 600, 602, 603, 604, 606], "ov": [32, 185, 578, 591, 596, 599], "over": [10, 20, 26, 27, 49, 578, 599, 604, 606], "overflow": 20, "overflowerror": [289, 533, 534, 536, 537], "overlai": [46, 50, 69, 131, 132, 133, 269, 284, 567, 578, 591, 594, 599, 604], "overlap": [504, 540], "overlay_arrai": [46, 131, 132, 133, 578, 591], "overlay_data_handl": [578, 594, 599], "overlaybitposit": 208, "overlaybitsalloc": 208, "overlaycolumn": 208, "overlayrow": 208, "overrang": 20, "overrid": [29, 133, 172, 216, 223, 226, 259, 267, 270, 532, 578, 589, 606], "overview": 606, "overwrit": [10, 563], "ow": [2, 20, 26, 28, 32, 44, 49, 51, 131, 132, 133, 185, 191, 244, 245, 272, 550, 578, 582, 593, 598, 599, 604, 610, 612], "own": [8, 24, 25, 26, 27, 42, 47, 52, 131, 132, 133, 174, 185, 578, 588, 598, 604, 606, 612, 614], "p": [4, 10, 22, 24, 26, 56, 218, 261, 538, 578, 584, 606], "p0xxxxxx": 174, "p14": [41, 253], "p1xxxxxx": 174, "p25": [2, 8, 20], "p2xxxxxx": 174, "p98": 22, "pack": [22, 39, 49, 131, 132, 133, 244, 255, 256, 257, 269, 278, 279, 280, 284, 578, 588, 589, 594, 597], "pack_bit": [49, 567, 578, 589, 594, 599], "packag": [25, 26, 27, 45, 46, 48, 131, 132, 133, 208, 209, 210, 211, 212, 213, 214, 244, 245, 252, 255, 257, 272, 278, 280, 564, 578, 579, 582, 587, 594, 596, 599, 606, 608, 612], "packbit": [38, 609], "packed_byt": 49, "pad": [2, 3, 8, 20, 26, 28, 131, 132, 133, 138, 142, 147, 203, 208, 243, 245, 251, 256, 272, 274, 279, 504, 533, 540, 578, 588, 590, 591, 594, 596, 597, 604, 610], "padraig": [578, 585, 586], "page": [37, 578, 587, 590, 601, 602, 603, 608], "pair": [25, 26, 133, 174, 223, 270, 289, 533, 534, 536, 537], "palett": [36, 37, 38, 39, 46, 105, 131, 132, 133, 172, 174, 215, 258, 268, 283, 578, 591, 593], "palette_color": [50, 69], "panchal": [578, 581], "papadopoulo": [578, 586], "paramet": [0, 10, 20, 24, 26, 50, 51, 52, 53, 56, 67, 76, 77, 78, 79, 81, 82, 94, 96, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 161, 162, 164, 165, 166, 168, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 197, 198, 200, 201, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 243, 244, 245, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 290, 292, 504, 529, 530, 533, 534, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 578, 584, 586, 588, 594, 596, 597, 604, 606, 609, 612], "parametr": [50, 602], "pare": 205, "parent": [0, 26, 27, 134, 158, 160, 161, 174, 175, 578, 588, 599, 606], "parent_dataset": [578, 599], "parent_encod": [165, 197], "parent_seq": [578, 599], "pars": [164, 168, 276, 535, 567, 578, 579, 591, 593, 594, 599], "parse_basic_offset": [150, 578, 599], "parse_frag": [578, 599], "parser": [25, 26], "part": [10, 27, 28, 32, 36, 37, 38, 39, 43, 47, 50, 51, 53, 111, 128, 131, 132, 133, 134, 138, 142, 145, 146, 147, 148, 149, 150, 152, 153, 164, 177, 183, 184, 185, 198, 202, 208, 211, 217, 219, 220, 221, 222, 225, 256, 260, 262, 263, 264, 265, 266, 269, 279, 282, 284, 287, 289, 504, 529, 534, 536, 537, 538, 540, 578, 581, 584, 596, 602, 603, 604, 605, 606, 611, 614], "part05": [53, 603], "parti": [46, 538, 608], "partial": [287, 578, 581], "particular": [26, 27, 42, 49, 50, 89, 131, 132, 133, 167, 578, 581, 591, 604, 612, 613], "particularli": [50, 52], "partit": [504, 540], "pass": [36, 37, 42, 44, 49, 50, 53, 92, 104, 105, 107, 131, 132, 133, 138, 140, 207, 578, 581, 602, 603, 606, 609, 610, 612], "past": [39, 147, 169, 198], "pat": 42, "pat_nam": 9, "patch": [578, 581, 601, 602], "path": [0, 9, 10, 11, 12, 17, 24, 26, 27, 28, 30, 34, 42, 45, 50, 53, 69, 104, 105, 106, 107, 131, 132, 133, 157, 164, 173, 174, 177, 185, 205, 244, 252, 255, 257, 278, 280, 578, 594, 599, 603, 606, 612], "pathlib": [0, 10, 12, 69, 157, 177, 604, 606, 612], "pathlik": [131, 132, 133, 164, 166, 167, 174, 185, 255, 257, 278, 280, 578, 593], "patient": [2, 8, 9, 10, 12, 17, 20, 26, 27, 28, 131, 132, 133, 172, 174, 538, 578, 580, 587, 597, 603, 604, 606], "patient_id": 10, "patient_nam": 538, "patient_name_ideograph": 538, "patient_name_phonet": 538, "patientbirthd": [17, 42], "patientid": [9, 10, 12, 14, 17, 26, 28, 42, 131, 172, 174, 604, 606], "patientnam": [9, 10, 12, 14, 26, 28, 42, 69, 84, 85, 128, 131, 164, 172, 174, 290, 578, 590, 603, 604, 606, 608], "patientsbirthd": [578, 580], "patientsetupsequ": 42, "patientsex": [42, 131, 132, 133], "patientsnam": [84, 85], "pattern": [20, 26, 28, 104, 105, 107, 578, 599], "paus": [610, 612], "paxxxxxx": 174, "pc": 606, "peak": [33, 36, 131, 132, 133, 224, 271, 609], "penalti": 532, "peopl": 606, "pep": [578, 580, 583, 587], "per": [2, 8, 20, 29, 30, 34, 36, 37, 38, 39, 41, 42, 50, 56, 131, 132, 133, 138, 140, 146, 177, 211, 224, 243, 251, 252, 268, 271, 282, 283, 578, 584, 591, 594, 604, 609, 610, 612], "per_fram": [225, 266, 578, 596], "perceptu": [216, 226, 259, 267], "perform": [2, 30, 34, 36, 37, 39, 43, 44, 45, 83, 112, 113, 114, 116, 117, 127, 131, 132, 133, 135, 174, 213, 244, 245, 252, 255, 257, 272, 278, 280, 533, 550, 578, 585, 588, 589, 608, 609, 612, 614], "perman": 109, "persist": 166, "person": [6, 17, 21, 32, 53, 538, 578, 589, 596, 600, 613], "person_nam": 22, "person_names_callback": 17, "personnam": [22, 32, 60, 128, 551, 578, 579, 590, 593, 594, 596, 599, 608], "personname3": [578, 585, 590, 593], "personnameunicod": [578, 593, 599], "pet": [50, 215, 258], "pet_20_step": [215, 258], "peter": [10, 606], "phase": 20, "phonet": 538, "photometr": [2, 8, 20, 29, 38, 39, 50, 131, 132, 133, 209, 210, 211, 212, 213, 214, 224, 225, 243, 244, 245, 251, 255, 257, 266, 268, 271, 272, 273, 278, 280, 283, 578, 591, 609, 610, 612], "photometric_interpret": [29, 30, 34, 131, 132, 133, 223, 243, 251, 252, 268, 270, 283, 612], "photometricinterpret": [10, 36, 37, 38, 211, 213, 274, 275, 606, 609, 610, 612], "photon": [26, 28], "physic": [50, 606], "physician": [2, 8, 20], "pi": 614, "pickl": [32, 578, 587, 591, 596], "pierr": [578, 581], "pil": [216, 226, 259, 267, 578, 581, 589], "pillow": [30, 34, 45, 48, 131, 132, 133, 212, 216, 226, 234, 235, 236, 237, 259, 267, 578, 587, 589, 591, 593, 596, 599, 602, 612], "pillow_handl": [97, 602], "pilsupportedcompressedpixeltransfersyntax": [578, 594, 599], "pip": [26, 27, 602, 603, 609, 610, 612, 614], "pipe": [26, 27], "pitch": 20, "pixel": [2, 4, 6, 7, 8, 13, 20, 23, 24, 26, 28, 32, 33, 40, 42, 46, 48, 49, 52, 53, 54, 67, 80, 97, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 164, 168, 208, 209, 210, 211, 212, 213, 214, 565, 567, 578, 579, 581, 582, 587, 588, 589, 590, 591, 593, 594, 596, 597, 599, 600, 602, 604, 607, 608], "pixel_arrai": [2, 4, 9, 29, 37, 38, 42, 45, 46, 48, 53, 131, 132, 133, 567, 578, 580, 591, 599, 609, 610, 612], "pixel_array_opt": [29, 131, 132, 133, 578, 599], "pixel_byt": 42, "pixel_data_handl": [131, 132, 133, 565, 567, 578, 589, 596, 599], "pixel_dtyp": [243, 578, 599], "pixel_keyword": [29, 30, 243, 251], "pixel_properti": [243, 244], "pixel_represent": [29, 30, 34, 223, 243, 251, 252, 270], "pixelarrai": [578, 579, 580], "pixeldata": [2, 29, 30, 32, 36, 37, 38, 42, 44, 50, 52, 136, 138, 139, 140, 141, 243, 251, 275, 578, 590, 591, 609, 610, 612], "pixeldataarrai": [578, 579], "pixelrepresent": [36, 37, 38, 211, 213, 214, 275, 281, 578, 590, 609, 610], "pixels1": 20, "pixelspac": [4, 9], "place": [36, 37, 38, 39, 44, 45, 131, 132, 133, 207, 216, 224, 225, 245, 259, 266, 271, 272, 285, 533, 578, 587, 604, 606, 609, 610], "placehold": [131, 132, 133], "plain": [578, 581], "plan": [26, 27, 28, 42, 69, 172], "plan1": [26, 28], "plan_d": 18, "planar": [29, 36, 39, 50, 131, 132, 133, 224, 243, 251, 268, 271, 282, 283, 578, 589, 610], "planar_configur": [29, 30, 223, 243, 251, 270], "planarconfigur": [211, 213, 214, 275, 282, 578, 587, 610], "plane": [4, 20, 30, 33, 37, 39, 50, 208, 252], "pleas": [0, 14, 25, 26, 28, 42, 131, 132, 133, 136, 137, 146, 147, 148, 150, 155, 185, 244, 255, 257, 278, 280, 578, 585, 596, 602, 603], "plot": [1, 5, 6, 7, 13, 578, 590, 600, 614], "plot_add_dict_entri": [16, 19, 600], "plot_anonym": [17, 19, 600], "plot_dicom_differ": [20, 21, 600], "plot_downsize_imag": [2, 5, 600], "plot_printing_dataset": [8, 13, 600], "plot_read_dicom": [9, 13, 600], "plot_read_fileset": [10, 13, 600], "plot_read_rtplan": [11, 13, 600], "plot_sequ": [18, 19, 600], "plot_waveform": [3, 5, 600], "plot_write_dicom": [12, 13, 600], "plt": [3, 4, 9, 48, 610, 612, 614], "plugin": [31, 35, 40, 44, 45, 54, 131, 132, 133, 213, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 255, 257, 271, 272, 278, 280, 578, 596, 597, 608, 609, 612], "plugin_label": [30, 34], "plural": 10, "pn": [2, 12, 17, 20, 32, 42, 65, 128, 131, 132, 133, 538, 551, 578, 591, 596, 603, 604, 606], "point": [17, 24, 25, 26, 27, 28, 32, 52, 182, 211, 281, 504, 533, 534, 537, 540, 541, 578, 580, 585, 596, 602, 604, 613], "poor": 41, "pop": [131, 132, 133, 207, 285, 578, 590], "popitem": [131, 132, 133], "popul": [0, 12, 52, 289, 536, 613], "popular": 608, "portion": 42, "posit": [2, 8, 20, 24, 26, 27, 28, 67, 143, 144, 145, 147, 149, 150, 153, 154, 156, 158, 160, 161, 169, 179, 180, 181, 198, 207, 243, 244, 285, 289, 504, 533, 534, 536, 537, 540], "posix": [531, 535], "posixpath": [42, 69, 604], "possibl": [17, 30, 37, 39, 42, 43, 50, 93, 128, 131, 132, 133, 149, 158, 160, 161, 172, 183, 184, 185, 214, 244, 269, 284, 504, 540, 541, 578, 587, 589, 590, 591, 596, 599, 605, 606, 612, 613], "possibli": [50, 131, 132, 133, 244], "post": [20, 578, 593], "posterior": 20, "potenti": [52, 609], "ppscan": 20, "pq": [504, 540], "pr": [578, 597, 602, 603], "practic": [37, 46, 69, 174, 216, 226, 259, 267], "pre": [26, 28, 42, 578, 599, 602], "preambl": [131, 132, 133, 164, 169, 185, 198, 205, 578, 587, 604], "preced": [47, 578, 599], "precis": [80, 88, 276, 533, 534, 538, 541, 578, 596], "predefin": 43, "predict": [146, 241], "prefer": 604, "prefer_lut": [221, 264, 578, 594], "prefix": [24, 26, 27, 28, 53, 156, 164, 169, 176, 185, 198, 455, 504, 529, 538, 540, 578, 590, 599, 602, 603, 604, 613], "preliminari": [578, 579, 582], "prepar": [578, 585], "prepend": 132, "prerequisit": [46, 609, 610, 612, 614], "prescrib": 20, "prescript": [26, 27], "presenc": [147, 215, 258, 604], "present": [16, 26, 28, 39, 49, 79, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 130, 131, 132, 133, 135, 146, 147, 148, 150, 156, 164, 169, 172, 174, 175, 185, 198, 207, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 245, 252, 258, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 285, 286, 504, 540, 578, 580, 588, 590, 591, 599, 604, 610, 612, 614], "preserv": [131, 132, 133, 185, 578, 586, 593], "pretti": [175, 602], "prettier": 42, "prettifi": 175, "prevent": [578, 591], "previou": [52, 175, 176, 578, 584, 587, 593, 594, 599], "previous": [39, 131, 132, 133, 166, 578, 589, 593, 596], "primari": [20, 26, 28, 47, 604], "primarili": [578, 582], "primer": 603, "print": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 36, 37, 42, 49, 109, 111, 131, 132, 133, 255, 278, 578, 580, 591, 600, 603, 604, 606, 612, 614], "printabl": [504, 540], "prior": [39, 44, 131, 132, 133, 147, 185, 244, 252, 578, 599, 609, 612], "prioriti": [185, 197, 578, 599], "privat": [6, 15, 17, 19, 20, 24, 26, 27, 28, 39, 42, 46, 52, 108, 109, 110, 111, 118, 119, 122, 123, 124, 126, 128, 129, 131, 132, 133, 134, 172, 173, 174, 198, 289, 450, 504, 530, 567, 578, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 593, 594, 596, 597, 598, 599, 600, 604, 606], "private_block": [16, 47, 131, 132, 133], "private_cr": [16, 47, 110, 111, 119, 122, 123, 124, 131, 132, 133, 134, 289], "private_creator_el": 134, "private_elem": 604, "privateblock": [47, 131, 132, 133, 567], "privaterecorduid": 174, "privileg": 608, "probabl": [23, 52, 606], "problem": [578, 596, 604], "proc": 20, "procedur": 606, "process": [20, 25, 26, 30, 34, 36, 37, 39, 45, 131, 132, 133, 146, 225, 236, 237, 240, 241, 243, 244, 251, 255, 257, 278, 280, 504, 532, 570, 578, 581, 593, 596, 598, 599, 602, 603, 609, 612, 614], "produc": [12, 24, 26, 29, 50, 52, 53, 289, 533, 536, 578, 586, 591, 596, 599], "product": [20, 533], "profil": [216, 226, 259, 267, 578, 599], "program": [26, 27, 48, 578, 579, 584], "progress": [36, 578, 598, 603], "project": [9, 10, 20, 97, 602, 603, 608], "projector": 20, "prolept": [531, 535], "promot": [578, 584], "prompt": 42, "pronoun": 53, "proof": [46, 96], "propag": [578, 591], "proper": [53, 578, 581], "properli": [602, 612], "properti": [10, 14, 29, 30, 34, 42, 45, 56, 67, 128, 131, 132, 133, 158, 160, 161, 173, 174, 175, 243, 244, 251, 252, 287, 288, 289, 504, 538, 578, 579, 581, 584, 587, 588, 594, 599, 606, 609, 610], "protect": 43, "protocol": [172, 289, 536], "provid": [30, 34, 39, 42, 47, 50, 54, 97, 128, 131, 132, 133, 143, 145, 149, 208, 211, 213, 214, 244, 252, 564, 578, 585, 605, 608, 609, 612, 613], "ps3": [22, 538], "psnr": [131, 132, 133, 224, 271], "pt000000": [10, 606], "pt000001": [10, 606], "pt000002": [10, 606], "pt000003": 10, "ptv": [26, 27], "ptxxxxxx": 174, "pubchem_cid": 613, "public": [39, 131, 132, 133, 185], "pull": [25, 26, 28, 601, 608], "puls": 20, "punctuat": [504, 540], "purpos": [36, 37, 609], "push": [602, 603], "put": 186, "px": 37, "py": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 42, 52, 84, 85, 97, 578, 579, 582, 583, 584, 585, 586, 587, 595, 600, 602, 604, 606, 608, 609, 612], "py3": 608, "pydicom": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 25, 29, 30, 32, 34, 36, 37, 38, 40, 45, 49, 50, 51, 52, 53, 60, 70, 565, 567, 579, 581, 582, 583, 584, 585, 586, 587, 588, 591, 593, 594, 596, 600, 602, 603, 604, 605, 606, 607, 609, 610, 612, 613, 614], "pydicom_futur": [43, 578, 594], "pydicom_seri": [578, 582, 585, 586], "pydicom_subcommand": [25, 26], "pydicom_test": [10, 606], "pyjpegl": [37, 44, 131, 132, 133, 210, 224, 238, 239, 248, 249, 271, 578, 599, 609], "pylibjpeg": [29, 38, 44, 45, 131, 132, 133, 213, 224, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 250, 252, 271, 578, 594, 596, 599, 609, 610, 612], "pylibjpeg_handl": 97, "pypi": [578, 587, 589, 608], "pyplot": [3, 4, 9, 48, 610, 612, 614], "pyproject": [43, 578, 598], "pysid": [578, 585], "pytest": [578, 598], "python": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 40, 41, 42, 43, 47, 48, 52, 53, 54, 76, 77, 79, 94, 131, 132, 133, 209, 210, 212, 504, 540, 578, 579, 581, 582, 584, 585, 586, 587, 588, 589, 590, 593, 594, 595, 596, 598, 599, 602, 603, 604, 605, 608, 609, 610, 612, 614], "python3": 606, "pythoncod": [24, 26], "q": [26, 27, 28, 602, 609], "qt": [578, 585], "qualiti": [33, 36, 37, 131, 132, 133, 224, 271, 609], "quantiti": [50, 564, 614], "quantiz": 533, "queri": [10, 93, 174, 606], "question": 601, "quickli": [167, 606], "quiet": [26, 27, 28, 533], "quinci": 538, "quit": [52, 578, 581, 602], "r": [20, 39, 128, 131, 132, 133, 504, 540, 605, 609, 610], "r1": 39, "r100": [578, 580], "r102": [578, 580], "r103": [578, 580], "r104": [578, 580], "r105": [578, 580], "r109": [578, 580], "r110": [578, 580], "r111": [578, 580], "r113": [578, 580], "r2": 39, "r45": [578, 579], "r46": [578, 579], "r50": [578, 579], "r51": [578, 579], "r55": [578, 579], "r64": [578, 579], "r65": [578, 579], "r67": [578, 579], "r68": [578, 579], "r69": [578, 579], "r70": [578, 579], "r72": [578, 579], "r73": [578, 579], "r78ba350a3eb8": [578, 585], "r91": [578, 580], "r95": [578, 580], "r96": [578, 580], "r97": [578, 580], "r98": [578, 580], "ra": 20, "radiotherapi": 172, "radiu": 610, "radix": 533, "radlex": 613, "rai": [20, 26, 28, 604], "rais": [43, 56, 76, 77, 79, 81, 82, 84, 85, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 129, 130, 131, 132, 133, 134, 135, 147, 150, 156, 158, 160, 161, 164, 166, 169, 174, 182, 183, 185, 198, 207, 208, 209, 210, 211, 212, 213, 214, 244, 252, 256, 269, 279, 281, 284, 285, 286, 289, 292, 504, 529, 533, 534, 536, 537, 540, 541, 546, 548, 560, 567, 578, 582, 583, 588, 590, 591, 594, 596, 597, 599, 604, 606, 609, 612], "raise_orphan": 174, "randbelow": [529, 578, 599], "random": [529, 578, 599], "rang": [20, 30, 34, 37, 39, 49, 93, 207, 217, 219, 252, 255, 260, 262, 278, 285, 504, 533, 540, 578, 589, 591, 604, 609], "rare": [578, 599], "rate": [26, 27], "rather": [24, 26, 27, 28, 49, 52, 128, 131, 132, 133, 174, 207, 223, 270, 533, 578, 579, 580, 587, 591, 593, 596, 599, 604], "ratio": [20, 33, 36, 37, 38, 131, 132, 133, 224, 271, 289, 533, 534, 536, 537, 609], "ration": [289, 536], "raw": [29, 30, 34, 37, 42, 49, 50, 51, 128, 129, 130, 131, 132, 133, 143, 145, 149, 155, 162, 166, 172, 244, 252, 255, 257, 278, 280, 564, 578, 584, 590, 593, 609, 610, 612, 614], "raw_data_el": [129, 562], "raw_data_elem": 166, "rawdatael": [60, 91, 129, 131, 132, 133, 162, 166, 184, 196, 562, 578, 599], "rawiobas": [160, 161], "raybaut": [578, 581], "rb": [32, 132, 139, 141, 255, 257, 278, 280, 604], "rbg": [578, 596], "rd000000": 606, "re": [10, 16, 49, 54, 135, 216, 259, 454, 455, 601, 602, 603, 604, 606, 608, 609, 610, 612, 614], "reach": [168, 180, 182, 243], "reachabl": 603, "read": [0, 2, 6, 7, 8, 13, 14, 16, 17, 18, 20, 24, 26, 27, 28, 29, 32, 42, 43, 47, 49, 50, 52, 54, 56, 67, 70, 76, 82, 89, 94, 106, 131, 132, 133, 136, 137, 143, 144, 145, 147, 149, 153, 154, 155, 156, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 178, 179, 181, 182, 205, 209, 211, 243, 244, 255, 257, 278, 280, 530, 536, 537, 567, 578, 579, 580, 581, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599, 600, 603, 605, 606, 607, 612, 613], "read_byt": 14, "read_data_el": 162, "read_dataset": [14, 70, 168], "read_deferred_data_el": 70, "read_dicomdir": [578, 586], "read_encod": [131, 132, 133, 578, 599], "read_exact": [158, 160, 161], "read_fil": [578, 580, 581, 582, 587, 596, 599], "read_file_meta_info": [70, 132], "read_implicit_vr": [131, 132, 133, 578, 599], "read_item": [578, 599], "read_little_endian": [131, 132, 133, 578, 599], "read_onli": 211, "read_ow": [578, 579], "read_parti": [70, 164, 205, 604], "read_preambl": [70, 205, 604], "read_sequ": 70, "read_sequence_item": 70, "read_siz": [179, 180, 181, 182], "read_tag": [158, 160, 161], "read_u": [158, 160, 161], "read_ul": [158, 160, 161], "read_undefined_length_valu": 70, "readabl": [67, 131, 132, 133, 143, 144, 145, 149, 153, 154, 164, 578, 599], "readablebuff": [132, 143, 144, 145, 149, 153, 154, 158, 160, 161, 164], "reader": 53, "readfil": [578, 580], "readi": [602, 603], "reading_validation_mod": [43, 56, 76, 77, 79, 95, 129, 131, 132, 133, 578, 597], "readm": 10, "real": [289, 534, 536, 537, 602, 603, 614], "realli": [42, 578, 581, 590], "reason": [53, 603, 612], "rebuild": 603, "recalcul": 606, "receiv": [20, 198], "recent": [85, 602, 603, 604, 606, 609, 612], "recommend": [23, 25, 26, 30, 36, 37, 42, 43, 44, 45, 93, 131, 132, 133, 138, 140, 174, 207, 216, 256, 259, 279, 285, 604, 606, 608, 609], "recon": 20, "reconstruct": [20, 36], "record": [10, 20, 172, 173, 174, 175, 578, 591, 597, 606], "record_gen": 606, "record_typ": [175, 606], "recordinuseflag": 172, "recordnod": [173, 174, 567], "recreat": [24, 26, 578, 586], "recurs": [0, 4, 47, 131, 132, 133, 578, 580, 582], "recursionerror": [578, 599], "red": [36, 37, 38, 39, 215, 258, 578, 593, 602, 603], "reduc": [49, 50, 176, 225, 266, 578, 589, 594, 599, 606], "ref": 20, "refactor": [578, 599], "refd_beam1": [24, 26], "refd_beam_sequ": [24, 26], "refer": [2, 8, 20, 26, 27, 39, 42, 50, 53, 93, 138, 142, 145, 146, 147, 148, 149, 150, 152, 153, 173, 208, 215, 217, 219, 220, 221, 222, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 256, 258, 260, 262, 263, 264, 265, 266, 269, 279, 282, 284, 529, 578, 581, 602, 606, 609, 614], "referenc": [24, 26, 27, 28, 42, 53, 167, 173, 174, 606], "referencedbeamsequ": [24, 26], "reflect": 243, "refus": 97, "reg": 20, "regard": 2, "regex": [454, 455], "regist": [16, 25, 26, 47, 128, 504, 530, 540, 578, 594, 599, 604], "register_error": [504, 540], "register_transfer_syntax": [450, 578, 599], "registr": 172, "regress": [578, 592, 593, 602], "regular": [26, 27, 42, 504, 540, 578, 598], "reinstal": [26, 27], "rel": [67, 158, 160, 161, 177, 216, 226, 259, 267, 578, 599], "relat": [25, 26, 27, 37, 39, 43, 49, 51, 59, 131, 132, 133, 134, 185, 208, 211, 213, 214, 243, 268, 283, 564, 574, 578, 579, 599, 602, 606, 609, 614], "relationship": [36, 37, 38, 174, 603], "relative_to": 10, "releas": [23, 47, 567, 587, 591, 594], "relev": [44, 183, 184, 185, 602], "reli": [45, 80], "reload": 42, "remain": [39, 147, 174, 504, 540, 578, 584, 603], "remaind": 533, "remainder_near": 533, "rememb": [42, 47, 49], "remind": 53, "remot": [602, 603], "remov": [10, 12, 17, 42, 43, 46, 131, 132, 133, 136, 137, 147, 148, 150, 155, 173, 174, 175, 185, 207, 244, 252, 255, 257, 268, 273, 278, 280, 283, 285, 504, 540, 565, 566, 587, 588, 589, 590, 593, 594, 595, 596, 597, 598, 602, 604], "remove_plugin": [244, 252], "remove_private_tag": [17, 47, 131, 132, 133], "removeprefix": [504, 540], "removesuffix": [504, 540], "renam": [578, 579, 587, 593, 598, 599], "render": [216, 226, 259, 267], "reopen": 12, "reorgan": [578, 579, 581], "rep": 20, "repeat": [26, 27, 49, 118, 121, 125, 126, 174, 578, 589, 598, 604], "repetit": [2, 8, 20, 52], "replac": [17, 76, 77, 79, 109, 504, 531, 535, 539, 540, 578, 590, 597], "replace_un_with_known_vr": [578, 593], "replic": [26, 27], "report": [578, 591, 601, 607], "repositori": [26, 27, 106, 578, 599, 608], "repr": [8, 100, 504, 540, 578, 593], "repr_valu": 8, "repres": [10, 34, 42, 50, 101, 128, 131, 132, 133, 147, 164, 185, 289, 531, 535, 536, 537, 538, 541, 602, 609, 612, 614], "represent": [2, 8, 20, 26, 28, 29, 32, 36, 38, 39, 41, 42, 61, 64, 75, 109, 111, 113, 123, 128, 131, 132, 133, 134, 142, 173, 174, 175, 217, 219, 224, 243, 244, 251, 255, 257, 260, 262, 268, 271, 278, 280, 283, 286, 289, 533, 534, 536, 537, 538, 540, 541, 558, 561, 567, 578, 594, 596, 599, 604, 605, 610, 612, 614], "reproduc": 602, "repval": [128, 131, 132, 133], "request": [25, 26, 28, 42, 289, 536, 578, 594, 596, 601], "requir": [2, 10, 12, 20, 26, 27, 29, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 128, 131, 132, 133, 138, 142, 143, 145, 146, 147, 148, 149, 164, 174, 183, 185, 198, 207, 208, 209, 210, 211, 213, 214, 215, 216, 221, 222, 224, 226, 243, 244, 245, 252, 255, 257, 258, 259, 264, 265, 267, 269, 271, 272, 274, 278, 280, 282, 284, 290, 530, 541, 578, 581, 585, 589, 593, 594, 599, 603, 604, 606, 608, 609, 610, 612, 614], "resampl": 211, "rescal": [20, 37, 46, 217, 219, 221, 222, 260, 262, 264, 265, 609, 612], "rescaleintercept": 612, "rescaleslop": 612, "reserv": [47, 504, 540], "reset": [77, 96, 98, 131, 132, 133, 149, 154], "reset_data_element_callback": 567, "reshap": [97, 131, 132, 133, 208, 213, 243, 244, 255, 257, 278, 280, 282], "reshape_overlay_arrai": 208, "reshape_pixel_arrai": [578, 599], "resiz": 49, "reslic": [4, 5, 600], "resolut": 36, "resolv": [0, 129, 183, 578, 584, 590, 599], "resort": [578, 597], "resourc": 602, "respect": [76, 93, 578, 588], "respiratori": 614, "respons": [164, 538, 605], "responsible_party_nam": 538, "responsible_party_name_ideograph": 538, "responsible_party_name_phonet": 538, "rest": [504, 540, 578, 597, 603], "restor": [578, 593], "restrict": [37, 39, 610], "restructuredtext": 603, "result": [10, 17, 24, 25, 26, 27, 36, 37, 38, 41, 43, 44, 52, 77, 79, 131, 132, 133, 185, 224, 244, 245, 255, 257, 271, 272, 278, 280, 289, 504, 529, 533, 540, 578, 596, 599, 602, 603, 609, 610, 612], "result_load": 10, "ret": 128, "retain": [541, 578, 596], "retir": [39, 109, 116, 128, 131, 132, 133, 183, 184, 255, 257, 278, 280, 295, 504, 578, 594], "retriev": [42, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 127, 128, 131, 132, 133, 578, 591, 599, 604, 605], "return": [10, 11, 14, 29, 30, 32, 34, 39, 42, 47, 49, 50, 51, 53, 67, 69, 76, 77, 79, 80, 90, 91, 97, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 147, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 197, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 243, 244, 245, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 504, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 578, 579, 580, 581, 582, 588, 589, 590, 591, 593, 594, 596, 597, 599, 604, 605, 606, 610, 612, 614], "rev": 538, "revers": [36, 45, 175, 207, 285, 578, 591], "revert": [131, 132, 133, 578, 585], "review": [24, 26, 601, 602, 603], "revis": [20, 578, 582, 584, 585], "rewind": [14, 169, 179, 180, 181, 578, 585], "rewrit": [536, 537], "rfind": [504, 540], "rg1_unci": [578, 594], "rgb": [29, 30, 33, 34, 36, 37, 38, 39, 50, 97, 131, 132, 133, 209, 210, 211, 212, 213, 214, 215, 216, 225, 243, 244, 245, 255, 257, 258, 259, 266, 268, 272, 278, 280, 283, 578, 588, 591, 596, 599, 609, 612], "rgb_color": [36, 37, 38, 69, 609], "rgba": [215, 258], "rhapsod": 20, "rhythm": 614, "rickard": [578, 586], "right": [20, 36, 131, 132, 133, 224, 271, 504, 533, 540, 609], "rightmost": 533, "rindex": [504, 540], "risk": [26, 27], "rjust": [504, 540], "rle": [35, 39, 41, 44, 45, 50, 131, 132, 133, 138, 140, 146, 213, 214, 224, 242, 250, 252, 253, 254, 271, 282, 457, 578, 589, 590, 596, 597, 599, 608], "rle_encode_fram": [578, 596, 599], "rle_handl": [97, 578, 597, 599], "rle_segment_ord": [29, 214], "rlecompressedlosslesssyntax": [578, 594, 599], "rlelossless": [30, 34, 38, 44, 131, 132, 133, 224, 271, 602, 609], "rlelosslessdecod": 30, "rlelosslessencod": [33, 34, 38, 578, 596, 599], "rletransfersyntax": [578, 594, 599], "rn": 39, "robert": 538, "root": [0, 9, 10, 22, 26, 27, 97, 174, 175, 177, 443, 529, 533, 604, 606], "rotat": [20, 533], "roughli": 610, "round": [88, 256, 279, 533], "round_half_even": 533, "rout": 20, "routin": 181, "row": [0, 2, 8, 9, 20, 26, 28, 29, 30, 34, 37, 39, 49, 50, 131, 132, 133, 208, 211, 213, 214, 216, 223, 224, 225, 243, 244, 251, 252, 255, 256, 257, 259, 266, 268, 270, 271, 274, 275, 278, 279, 280, 282, 283, 609, 610, 612], "rowconfigur": 0, "rpartit": [504, 540], "rpcl": [41, 45, 232, 253], "rsplit": [504, 540], "rst": [602, 603], "rstrip": [504, 540], "rt": [26, 27, 28, 42, 69, 172, 174, 606], "rt_dose": [69, 606, 612], "rt_plan": [42, 69], "rt_ss": 69, "rtdose": 69, "rtplan": [6, 7, 13, 24, 26, 27, 28, 42, 69, 164, 600], "rtstruct": 69, "ruff": [578, 599], "rule": 196, "run": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 42, 43, 52, 109, 131, 132, 133, 538, 578, 581, 584, 594, 599, 603, 604, 607, 608], "runner": [30, 34, 243, 251, 609], "runtimeerror": [131, 132, 133, 213, 612], "safe": [244, 252, 291], "sag_aspect": 4, "sagitt": [1, 5, 6, 578, 590, 600], "sai": [52, 602, 604], "sake": [256, 279], "same": [4, 30, 34, 42, 43, 49, 109, 131, 132, 133, 160, 161, 174, 207, 216, 244, 259, 504, 531, 533, 534, 535, 540, 578, 582, 584, 603, 604, 606, 609, 612], "same_quantum": 533, "sampl": [2, 8, 20, 29, 30, 34, 36, 37, 38, 39, 41, 50, 51, 131, 132, 133, 216, 224, 243, 244, 251, 252, 255, 257, 259, 268, 271, 276, 278, 280, 282, 283, 564, 578, 599, 609, 610, 612, 614], "samples_per_pixel": [29, 30, 34, 223, 243, 251, 252, 270, 612], "samplesperpixel": [36, 37, 38, 211, 213, 214, 274, 275, 282, 578, 584, 589, 609, 610], "sampling_fq": 3, "samplingfrequ": [3, 51, 614], "satisfi": [533, 534, 541], "satur": [216, 226, 259, 267], "save": [14, 16, 24, 26, 44, 49, 50, 578, 581, 584, 599, 603, 604, 605, 614], "save_a": [12, 16, 17, 24, 26, 32, 44, 49, 50, 131, 132, 133, 139, 141, 185, 224, 271, 578, 580, 593, 599, 604, 609, 614], "save_filenam": [24, 26], "savea": [578, 580], "savenam": [24, 26], "saw": 604, "sb": 564, "scale": 20, "scaleb": 533, "scan": [2, 8, 20, 26, 28, 172], "schaefer": [578, 585], "scheme": [36, 37, 38, 162, 286, 287, 288, 504, 540, 551, 552, 558, 561, 562, 575, 609, 612, 613, 614], "scheme_design": [286, 287, 575, 578, 599, 613], "scheme_vers": [286, 575, 613], "scientif": 541, "scope": 609, "scout": [4, 20], "scratch": [12, 18, 46, 131, 132, 133, 185, 578, 582, 583, 596, 602, 610, 612], "screen": [20, 24, 26], "script": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 52, 578, 588, 599], "scroll": 602, "sct": [575, 578, 599, 613], "se": [2, 8, 20], "se000000": [10, 606], "se000001": [10, 606], "se000002": [10, 606], "search": [10, 106, 146, 174, 179, 180, 181, 504, 540, 578, 596, 599, 604, 606], "sec": 20, "second": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 36, 37, 39, 43, 533, 535, 538, 539, 609, 610, 614], "secondari": [2, 8, 20], "secret": 529, "sect": 538, "sect_6": 53, "section": [2, 24, 25, 26, 27, 36, 37, 38, 39, 42, 44, 47, 50, 52, 53, 56, 100, 128, 131, 132, 133, 134, 138, 142, 152, 198, 202, 208, 225, 244, 255, 256, 257, 266, 269, 278, 279, 280, 282, 284, 538, 602, 603], "secur": [578, 599], "see": [23, 24, 26, 27, 28, 32, 34, 36, 37, 38, 42, 43, 44, 50, 52, 56, 128, 131, 132, 133, 134, 162, 165, 168, 172, 180, 181, 182, 185, 198, 202, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 255, 257, 271, 272, 278, 280, 533, 537, 538, 578, 581, 591, 592, 593, 596, 599, 602, 603, 604, 606, 608, 610, 613], "seek": [14, 67, 131, 132, 133, 143, 144, 145, 149, 153, 154, 158, 160, 161, 164, 185, 578, 580, 590, 599], "seekabl": 67, "seem": 602, "seen": [10, 25, 26, 89, 603, 614], "segment": [20, 29, 214, 215, 258, 578, 589, 596], "select": [42, 131, 132, 133, 146, 241, 609], "self": [14, 156, 289, 504, 531, 533, 534, 535, 536, 537, 539, 604, 609, 612], "semant": [10, 53, 174, 538, 606], "send": [198, 602, 603], "sens": [578, 581], "sensit": [24, 26, 51, 52, 131, 132, 133, 564, 614], "sent": [578, 599], "sep": [504, 535, 540], "separ": [37, 44, 100, 131, 132, 133, 138, 140, 504, 535, 538, 540, 578, 581, 582, 609, 610, 612], "septemb": 23, "seq": [53, 604], "seq_idx": 0, "seq_item": 0, "sequenc": [0, 2, 3, 6, 8, 15, 19, 20, 24, 26, 27, 28, 32, 46, 51, 52, 53, 60, 77, 79, 89, 131, 132, 133, 142, 146, 147, 148, 165, 170, 171, 175, 178, 179, 201, 202, 217, 219, 220, 221, 260, 262, 263, 264, 538, 552, 564, 567, 578, 579, 580, 584, 585, 588, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 606, 614], "sequence_element_format": [131, 132, 133], "sequence_item": 8, "seri": [2, 8, 10, 20, 53, 167, 172, 174, 578, 582, 603, 606], "serial": [2, 8, 20, 128, 131, 132, 133, 605], "series_uid": 10, "seriesinstanceuid": 10, "seriesnumb": [10, 42, 606], "server": 603, "servic": [20, 606], "session": [42, 43, 47, 131, 132, 133, 603], "set": [2, 6, 7, 12, 13, 18, 20, 25, 26, 27, 28, 32, 36, 39, 42, 43, 44, 46, 49, 50, 52, 54, 56, 69, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 91, 92, 93, 95, 96, 101, 102, 103, 109, 128, 129, 131, 132, 133, 147, 150, 156, 158, 160, 161, 164, 165, 166, 172, 173, 174, 176, 177, 182, 185, 197, 224, 243, 245, 251, 268, 271, 272, 283, 504, 530, 533, 537, 538, 540, 541, 542, 567, 578, 579, 584, 587, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 604, 605, 607, 608, 609, 610, 612, 614], "set_aspect": 4, "set_data": [610, 612], "set_decod": 243, "set_default": [25, 26], "set_encod": 251, "set_opt": [30, 34, 243, 251], "set_original_encod": [131, 132, 133], "set_pixel_data": [131, 132, 133, 567, 578, 599], "set_private_encod": [504, 530, 578, 599], "set_sourc": [243, 251], "set_titl": [3, 612], "set_xlabel": 3, "set_ylabel": [3, 614], "setdefault": [131, 132, 133, 578, 590, 594], "setup": [25, 26, 27, 28, 578, 585, 586, 598], "setuptool": [25, 26, 578, 579, 586, 596], "sever": [48, 56, 578, 585, 587], "sex": [2, 8, 20], "sexxxxxx": 174, "sfov": 20, "sh": [2, 12, 16, 20, 26, 28, 32, 42, 47, 198, 561, 604], "sha512": 529, "shall": [97, 142, 146, 147, 150, 151, 152, 162, 185, 198], "shallow": [131, 132, 133], "shape": [2, 4, 37, 49, 50, 51, 131, 132, 133, 208, 209, 210, 213, 216, 224, 225, 244, 252, 255, 256, 257, 259, 266, 268, 271, 278, 279, 280, 282, 283, 564, 609, 610, 612, 614], "share": 606, "shift": [29, 533], "short": [32, 560, 602, 604], "should": [18, 25, 26, 27, 30, 32, 34, 36, 37, 38, 39, 42, 43, 47, 49, 50, 52, 53, 128, 131, 132, 133, 143, 145, 146, 147, 148, 149, 150, 164, 169, 172, 174, 176, 183, 184, 198, 207, 209, 210, 211, 212, 213, 214, 224, 225, 244, 252, 255, 256, 257, 266, 271, 278, 279, 280, 287, 529, 557, 578, 580, 581, 588, 589, 594, 602, 603, 604, 606, 607, 609, 610, 612, 614], "should_change_photometricinterpretation_to_rgb": [209, 210, 211, 212, 213, 214], "shouldn": 29, "show": [2, 3, 4, 6, 9, 10, 12, 17, 21, 24, 25, 27, 47, 52, 53, 109, 128, 578, 579, 583, 585, 596, 598, 600, 603, 604, 610, 612, 614], "show_charset_nam": [21, 22, 600], "show_dicomdir": [578, 586, 587], "show_file_meta": [567, 578, 593], "shown": [25, 26, 28, 42, 47, 52, 56, 282, 578, 579, 580, 593, 604, 606], "showvr": 128, "shrunk": 50, "shutil": 606, "sibl": 175, "side": 20, "siemen": 69, "sigma": 613, "sign": [29, 30, 32, 34, 36, 37, 39, 50, 80, 252, 289, 533, 536, 578, 594, 602, 603, 609, 612, 614], "signal": [30, 33, 34, 36, 131, 132, 133, 224, 271, 533, 609], "signal_to_noise_ratio": 33, "signatur": [30, 34, 160, 161, 578, 594], "signed": [29, 37, 131, 132, 133, 244, 255, 257, 278, 280], "signific": [29, 39, 43, 289, 536, 543, 554, 556, 578, 581], "silent": [578, 596], "similar": [26, 27, 53, 131, 132, 133, 202, 533, 578, 580, 584, 605, 610, 613], "similarli": [42, 532, 604], "simpl": [22, 42, 578, 579], "simpler": 604, "simplest": [43, 606, 608], "simpli": [26, 27], "simplifi": [158, 160, 578, 580, 584, 599, 609], "simul": [16, 131, 132, 133], "sin": 614, "sinc": [18, 39, 47, 131, 132, 133, 136, 137, 146, 147, 148, 150, 155, 185, 533, 565, 566, 578, 598, 602, 606, 614], "sine": 614, "singl": [25, 26, 30, 32, 34, 36, 37, 38, 39, 53, 78, 108, 110, 128, 131, 132, 133, 138, 142, 147, 149, 150, 155, 171, 172, 174, 203, 204, 207, 208, 213, 243, 244, 251, 252, 255, 257, 268, 278, 280, 282, 283, 548, 557, 578, 579, 589, 597, 602, 605, 606, 610, 612], "singleton": 56, "site": 606, "size": [2, 8, 9, 20, 24, 26, 34, 36, 50, 52, 56, 67, 97, 128, 158, 160, 161, 165, 182, 209, 210, 504, 540, 578, 588, 594, 598, 608, 610], "size_in_byt": 567, "skip": [4, 18, 578, 597, 602, 612], "skipcount": 4, "sl": [20, 26, 28, 32, 564], "slice": [1, 2, 5, 6, 8, 9, 20, 26, 28, 131, 132, 133, 504, 540, 578, 587, 588, 590, 600, 612], "sliceloc": [4, 9, 26, 28], "slicethick": 4, "slight": 612, "slope": [20, 217, 219, 260, 262], "slow": [578, 585], "slower": [38, 41, 44, 269, 284], "slowest": [578, 597], "small": [578, 581, 587, 589, 601, 608], "smaller": [533, 605], "smallest": [2, 8, 20, 533], "smart": 20, "smptest211020uncompressedinterlacedactivevideo": [578, 599], "smptest211020uncompressedprogressiveactivevideo": [578, 599], "smptest211030pcmdigitalaudio": [578, 599], "sn": 20, "snan": 533, "snapshot": 608, "snip": 604, "snippet": [25, 26, 47], "snome": 287, "so": [3, 16, 26, 27, 30, 32, 34, 37, 39, 42, 43, 44, 49, 50, 52, 53, 93, 131, 132, 133, 174, 176, 185, 205, 287, 530, 532, 533, 578, 579, 582, 599, 602, 604, 605, 606, 609, 610, 614], "softwar": [2, 8, 20, 43, 608], "softwarevers": 42, "some": [9, 14, 16, 17, 26, 28, 42, 43, 47, 49, 50, 51, 52, 53, 56, 76, 89, 99, 131, 132, 168, 185, 533, 534, 541, 578, 579, 580, 582, 584, 587, 588, 598, 603, 604, 605, 606, 608, 613], "somenewtag": 47, "someth": [10, 14, 23, 25, 26, 30, 34, 49, 53, 131, 578, 599, 602, 610], "sometim": [43, 47, 578, 589, 599, 612], "somewher": 6, "son": 131, "sop": [2, 8, 9, 10, 12, 20, 26, 27, 28, 38, 42, 47, 50, 51, 69, 131, 132, 133, 135, 167, 172, 173, 174, 175, 185, 198, 215, 224, 245, 258, 268, 271, 272, 283, 567, 578, 587, 588, 594, 597, 598, 604, 609, 610, 612], "sopclassuid": [9, 24, 26, 28, 173, 604, 614], "sopinstanceuid": [24, 26, 38, 173], "sorri": [578, 586], "sort": [4, 10, 131, 132, 133, 287, 606], "sort_kei": [131, 132, 133], "sourc": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 23, 26, 28, 29, 30, 34, 47, 52, 56, 67, 76, 77, 78, 79, 81, 82, 94, 96, 98, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 578, 586, 594, 596, 599, 601, 604, 607, 608, 614], "sourcetosurfacedist": 11, "space": [2, 8, 9, 20, 29, 30, 34, 36, 37, 38, 39, 46, 53, 109, 131, 132, 133, 216, 225, 226, 243, 252, 259, 266, 267, 504, 538, 540, 543, 554, 556, 558, 578, 587, 599, 604, 606, 609, 612], "span": 146, "sparingli": 53, "special": [43, 60, 567, 578, 585], "specif": [10, 20, 24, 26, 27, 28, 29, 34, 35, 42, 44, 47, 49, 50, 52, 53, 76, 77, 78, 79, 131, 132, 133, 164, 165, 174, 179, 202, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 504, 533, 540, 563, 578, 579, 581, 587, 589, 590, 593, 594, 599, 602, 603, 604, 605, 606, 609, 610, 612], "specifi": [24, 25, 26, 27, 28, 36, 37, 39, 42, 109, 111, 128, 131, 132, 133, 149, 164, 165, 185, 197, 216, 224, 226, 244, 245, 252, 255, 257, 259, 267, 271, 272, 278, 280, 504, 531, 533, 535, 538, 539, 540, 564, 578, 591, 596, 604, 606, 608, 609, 612], "specific_tag": [162, 164, 165, 168, 255, 257, 278, 280, 604], "specificcharacterset": 172, "spectroscopi": 172, "sped": 609, "speed": [20, 578, 581, 585, 589, 596, 598], "spell": [53, 76, 578, 589], "sphinx": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 53, 578, 582, 603], "spine": [10, 606], "split": [20, 504, 540, 563, 578, 579, 580], "splitlin": [504, 540], "spot": 20, "spread": [578, 599], "spring": [215, 258], "sq": [0, 8, 32, 56, 128, 131, 132, 133, 162, 552, 578, 584, 594, 597, 599, 604], "sqrt": 533, "squar": [42, 47, 533, 604], "sr": [172, 538, 567, 578, 596, 599, 613], "src": [9, 10, 29, 30, 33, 34, 37, 69, 97, 243, 244, 251, 252, 255, 257, 269, 273, 278, 280, 284, 606, 609], "srgb": [216, 226, 259, 267], "srt": [578, 599], "ss": [2, 4, 20, 26, 28, 32, 183, 184, 535, 539, 564, 578, 580, 599, 614], "ssd": 11, "st": 32, "st000000": [10, 606], "st000001": [10, 606], "st000002": 10, "st000003": 10, "st_mtime": 166, "stabl": 608, "stack": 614, "stackoverflow": 601, "stage": [10, 173, 174, 602, 603], "stamp": 20, "stand": 76, "standard": [12, 20, 22, 32, 36, 37, 38, 39, 43, 44, 47, 50, 51, 53, 56, 128, 131, 132, 133, 134, 138, 142, 145, 146, 147, 148, 149, 150, 152, 153, 174, 185, 198, 202, 208, 211, 215, 217, 219, 220, 221, 222, 225, 256, 258, 260, 262, 263, 264, 265, 266, 269, 279, 282, 284, 290, 529, 533, 534, 537, 538, 578, 580, 583, 584, 586, 587, 594, 596, 599, 605, 606, 608, 609, 610, 614], "start": [0, 6, 17, 18, 20, 24, 26, 27, 28, 37, 49, 52, 67, 128, 130, 131, 132, 133, 134, 144, 145, 147, 149, 150, 153, 154, 163, 169, 175, 176, 181, 183, 184, 207, 243, 244, 257, 280, 285, 286, 504, 529, 540, 552, 560, 578, 588, 598, 599, 602, 603, 604, 605, 609, 613], "startswith": [504, 540], "stat": [20, 166], "state": [191, 578, 599, 605], "statement": [578, 582], "static": [26, 28, 133, 504, 540], "station": [2, 8, 20], "statu": [20, 116, 128], "stdin": [85, 604, 606, 609, 612], "stdlib": 48, "stdout": [24, 26], "step": [53, 578, 585, 596, 606, 613, 614], "stereometr": 172, "stick": 604, "sticki": 0, "still": [10, 44, 47, 578, 584, 585, 587, 588, 589, 591, 602, 604, 605, 606, 612], "stop": [130, 164, 168, 207, 285, 286, 504, 540, 578, 581], "stop_before_pixel": [164, 578, 581, 612], "stop_when": [162, 165, 168], "storag": [2, 9, 12, 14, 20, 26, 27, 28, 42, 47, 50, 69, 135, 196, 198, 567, 578, 581, 582, 587, 597, 604, 606, 614], "store": [2, 8, 10, 17, 20, 29, 32, 34, 37, 38, 39, 41, 42, 47, 50, 106, 128, 131, 132, 133, 164, 199, 217, 219, 224, 243, 251, 252, 260, 262, 268, 271, 273, 283, 531, 533, 534, 535, 536, 537, 539, 578, 581, 596, 599, 604, 605, 606, 609, 610, 612, 614], "store_data_and_return_uri": 605, "str": [0, 11, 14, 20, 29, 30, 32, 34, 42, 76, 77, 78, 79, 88, 92, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 143, 144, 145, 149, 153, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 185, 186, 192, 196, 197, 200, 201, 202, 203, 204, 205, 206, 208, 214, 215, 216, 223, 224, 225, 226, 243, 244, 245, 251, 252, 253, 254, 255, 257, 258, 259, 266, 267, 268, 270, 271, 272, 274, 275, 276, 278, 280, 283, 286, 287, 288, 289, 290, 504, 529, 530, 531, 532, 533, 534, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 578, 588, 593, 596, 604, 608, 610, 612], "straightforward": [50, 609], "stream": [67, 147, 155, 158, 160, 161, 578, 599, 602, 609, 612], "streamhandl": 94, "streamlin": [578, 585], "strftime": [12, 531, 535, 539], "strict": [0, 43, 504, 537, 540, 578, 591, 598], "strictli": 43, "string": [16, 17, 20, 25, 26, 32, 42, 56, 77, 78, 79, 109, 128, 131, 132, 133, 134, 164, 175, 186, 195, 197, 199, 203, 204, 207, 244, 252, 287, 289, 504, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 546, 548, 557, 558, 559, 563, 578, 581, 583, 584, 588, 589, 594, 596, 605], "strip": [504, 533, 540, 610], "strongli": [138, 174, 606], "strptime": 535, "struct": [20, 200, 557], "struct_format": [200, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 555, 556, 557, 559], "structur": [10, 26, 27, 42, 69, 172, 174, 175, 578, 591, 598, 599, 604, 606, 607], "studi": [2, 8, 9, 10, 20, 26, 27, 28, 42, 172, 174, 606], "study1": [26, 28], "study_uid": 10, "studyd": [9, 10, 24, 26, 27, 28, 606], "studydescript": [10, 26, 28, 174, 606], "studyid": [26, 28], "studyinstanceuid": 10, "studytim": [10, 24, 26, 28, 606], "stuff": 14, "stxxxxxx": 174, "style": [0, 23, 531, 535, 539, 578, 580, 583], "sub": [25, 26, 36, 131, 132, 133, 244, 255, 257, 278, 280, 504, 540, 567], "subclass": [504, 578, 588, 599], "subcommand": [25, 26, 27, 578, 596], "subcommandnam": [25, 26], "subdirectori": [578, 586], "subject": [53, 605, 613], "submit": [26, 28, 578, 584, 601, 602, 603], "subnorm": 533, "subpars": [25, 26], "subplot": [3, 4, 612, 614], "subsampl": 273, "subsequ": 164, "subset": [10, 24, 26], "substanti": [578, 581], "substitut": [504, 540], "substr": [504, 540], "success": [131, 132, 133, 244, 245, 255, 257, 272, 278, 280, 603, 608, 612], "successfulli": [30, 34, 149], "suever": [578, 585], "suffici": [143, 145, 149, 244, 252, 610], "suffix": [12, 176, 504, 529, 538, 540, 578, 599], "suggest": [43, 601, 602, 603], "suit": [20, 47, 578, 598, 609], "suitabl": [174, 215, 243, 245, 258, 269, 272, 281, 284, 504, 540, 608, 610], "summar": [11, 606], "summari": [10, 25, 26, 602], "summer": [215, 258], "sundai": [531, 535], "super": 133, "supp": [578, 581], "supplement": [215, 258], "suppli": [0, 14, 52, 79, 143, 145, 149, 164, 174, 215, 216, 226, 244, 252, 258, 259, 267, 529, 538, 604, 606, 612], "support": [30, 34, 36, 41, 43, 46, 70, 71, 80, 97, 131, 132, 133, 160, 161, 174, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 224, 226, 244, 252, 253, 258, 259, 267, 269, 271, 281, 282, 284, 285, 289, 536, 564, 578, 579, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599, 606, 607, 608, 609, 613], "supports_transfer_syntax": [97, 209, 210, 211, 212, 213, 214], "suppos": 214, "suppress": [578, 596], "suppress_invalid_tag": [131, 132, 133, 578, 598], "sure": [9, 37, 45, 52, 602, 604, 608], "surfac": 172, "surround": 604, "sv": [32, 564, 578, 591], "sv1": [41, 45, 253, 282, 578, 593], "swap": [191, 244, 550], "swapcas": [504, 540], "switch": [52, 89, 578, 582, 584, 586, 591, 593, 596, 598, 602, 603], "sy": [0, 4, 14, 289, 536, 614], "symmetr": 605, "synchronis": [51, 614], "synonym": [578, 579], "syntax": [2, 12, 16, 20, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 41, 42, 46, 47, 52, 97, 131, 132, 133, 135, 138, 140, 146, 147, 165, 173, 174, 182, 185, 198, 209, 210, 211, 212, 213, 214, 224, 243, 244, 245, 251, 252, 253, 254, 255, 257, 268, 271, 272, 278, 280, 282, 283, 295, 389, 394, 397, 420, 450, 457, 504, 507, 530, 567, 578, 581, 582, 587, 589, 590, 591, 593, 594, 598, 599, 604, 608, 609, 614], "system": [20, 24, 26, 27, 28, 43, 158, 160, 161, 174, 289, 536, 578, 599, 604, 606, 608, 614], "t": [4, 8, 10, 18, 20, 26, 27, 28, 29, 32, 36, 37, 39, 42, 45, 47, 49, 52, 53, 84, 131, 132, 133, 143, 145, 146, 149, 165, 174, 185, 207, 208, 211, 214, 225, 243, 244, 252, 255, 257, 266, 268, 278, 280, 281, 283, 285, 504, 529, 535, 540, 578, 590, 593, 594, 599, 602, 603, 604, 605, 606, 608, 609, 610, 612], "t1": 42, "t2": 42, "t3": 42, "t4": 42, "tab": [504, 540, 603], "tabl": [20, 23, 32, 36, 37, 38, 41, 44, 50, 67, 128, 131, 132, 133, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 185, 198, 208, 211, 213, 214, 215, 217, 219, 220, 221, 224, 243, 251, 258, 260, 262, 263, 264, 271, 282, 504, 540, 564, 578, 591, 594, 599, 603, 604, 606, 608, 609, 612], "tabsiz": [504, 540], "tag": [16, 17, 26, 28, 29, 32, 46, 47, 49, 50, 56, 60, 67, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 144, 147, 150, 151, 152, 153, 154, 158, 160, 161, 162, 164, 166, 174, 182, 183, 187, 202, 208, 211, 213, 214, 255, 257, 274, 275, 278, 280, 281, 282, 560, 564, 567, 578, 580, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 599, 604, 605, 612], "tag_in_except": 60, "tagtyp": [131, 132, 133], "take": [2, 24, 25, 26, 30, 34, 39, 52, 53, 131, 132, 133, 162, 172, 207, 578, 585, 599, 602, 603, 604, 606], "taken": [39, 131, 132, 133, 143, 145, 149, 223, 270, 282], "target": [26, 27, 53], "tarou": 22, "task": [603, 609], "tb": 156, "tdir": 10, "teardown": [578, 598], "technic": [53, 54], "techniqu": 39, "tell": [67, 131, 132, 133, 143, 144, 145, 149, 153, 154, 158, 160, 161, 164, 185, 578, 580, 599, 603, 606], "temp": [49, 50], "tempfil": [10, 12, 17, 606], "temporari": [173, 578, 599, 606], "temporarili": 43, "temporarydirectori": [10, 606], "ten": 533, "tend": [49, 608], "term": [20, 50, 208, 243, 251, 274, 289, 533, 535, 536, 539, 609], "termin": [20, 26, 27, 28, 43, 147, 165, 178], "test": [2, 12, 16, 24, 26, 27, 28, 42, 89, 108, 109, 110, 131, 132, 133, 504, 533, 540, 542, 578, 579, 585, 587, 591, 594, 596, 598, 609], "test_fil": [9, 10, 24, 26, 42, 69, 603, 604, 606], "test_new_uid": 602, "test_uid": 602, "teston": [108, 109], "testtwo": [108, 109], "text": [0, 20, 22, 32, 42, 47, 128, 164, 201, 202, 204, 504, 540, 552, 558, 559, 561, 562, 578, 580, 589, 602, 603, 604], "tggc": [20, 26, 28], "thai": [578, 587], "than": [24, 25, 26, 27, 28, 29, 32, 37, 38, 39, 41, 44, 45, 49, 52, 53, 56, 128, 131, 132, 133, 142, 143, 144, 145, 146, 147, 149, 150, 158, 160, 161, 164, 168, 174, 177, 186, 200, 207, 223, 224, 256, 268, 270, 271, 279, 282, 283, 529, 533, 578, 579, 580, 581, 586, 587, 588, 591, 593, 596, 599, 604, 605, 609, 610], "thank": [578, 581, 584], "thei": [4, 29, 36, 42, 47, 49, 50, 53, 76, 88, 97, 131, 132, 133, 135, 185, 198, 218, 224, 261, 271, 504, 540, 578, 596, 599, 602, 603, 604, 606, 608, 609, 610, 612], "them": [4, 8, 24, 26, 27, 28, 30, 34, 42, 45, 47, 49, 52, 53, 54, 131, 132, 133, 158, 160, 161, 546, 548, 578, 586, 590, 594, 603, 604, 606, 612], "theme_us": 0, "theoret": [578, 599], "therefor": [29, 37, 207, 273, 609], "theta": 20, "thi": [2, 3, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 39, 42, 43, 47, 49, 50, 52, 53, 54, 69, 76, 81, 82, 83, 86, 87, 89, 96, 97, 109, 128, 131, 132, 133, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 155, 162, 164, 167, 173, 174, 185, 191, 202, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 224, 226, 243, 244, 245, 251, 252, 255, 257, 258, 259, 263, 264, 265, 267, 271, 272, 273, 278, 280, 289, 504, 531, 532, 533, 534, 535, 537, 538, 540, 541, 542, 567, 585, 587, 590, 591, 596, 599, 602, 603, 604, 605, 606, 608, 609, 610, 612, 613, 614], "thick": [2, 8, 20], "thing": [42, 49, 603, 604, 612], "think": [25, 26], "third": [37, 46, 504, 533, 538, 540, 608], "third_party_compression_func": [44, 609], "thoroughli": 609, "those": [26, 28, 29, 30, 34, 40, 43, 47, 578, 581, 584, 594, 604, 606, 612], "though": [37, 606, 609], "thread": [244, 252, 533], "three": [16, 30, 34, 37, 53, 110, 504, 538, 540, 604, 606, 612], "threshold": [131, 132, 133], "through": [8, 17, 30, 34, 42, 47, 50, 53, 131, 132, 133, 167, 181, 183, 184, 244, 255, 278, 533, 578, 579, 580, 599, 602, 603, 604, 608, 612, 613], "throughput": [45, 230, 231, 232], "thrown": [578, 587], "thu": [47, 578, 579], "tick": 53, "tight_layout": 3, "tile": 36, "tilt": 20, "time": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 26, 27, 28, 32, 42, 43, 47, 52, 69, 91, 93, 109, 132, 145, 166, 179, 182, 269, 284, 531, 532, 535, 539, 578, 581, 587, 596, 601, 602, 603, 604, 606, 614], "timelin": [578, 590], "timespec": [535, 539], "timestamp": [132, 166, 531, 535], "timetupl": [531, 535], "timetz": 535, "timezon": [2, 8, 20, 535], "titl": [0, 2, 20, 26, 28, 47, 53, 198, 504, 538, 540, 602, 603, 604], "titlecas": [504, 540], "tix": [578, 579], "tk": [0, 22], "tkinter": [0, 22, 48, 578, 579, 581], "tm": [2, 12, 20, 26, 27, 28, 32, 42, 60, 65, 93, 553, 559, 578, 587, 596, 604], "tmp": [10, 12, 606], "tmp0aalrzir": 606, "tmp__e5xsui": 10, "tmpsqz8rhgb": 606, "tmpu068kdwp": 606, "tmpzfvvn341": 12, "to_byt": [289, 536], "to_eng_str": 533, "to_integr": 533, "to_integral_exact": 533, "to_integral_valu": 533, "to_json": [128, 131, 132, 133, 578, 592, 605], "to_json_dict": [128, 131, 132, 133, 578, 592, 598, 599, 605], "tobyt": [2, 50, 610, 614], "toctre": 603, "todai": [531, 535], "togeth": [137, 138, 186, 610], "toi": 18, "toler": [578, 580, 591], "toml": [43, 578, 598], "too": [44, 131, 132, 133, 134, 224, 271, 504, 540, 560, 578, 588, 590, 591, 601], "tool": [52, 578, 599], "toordin": [531, 535], "top": [20, 26, 27, 28, 49, 53, 131, 132, 133, 165, 174, 578, 599, 603, 604], "top_nod": 174, "toshiba": [2, 8, 20], "toshiba_mec": [2, 8, 20], "total": [2, 3, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 37, 67, 138, 140, 208, 243, 251, 274, 533, 600], "toward": [24, 26], "traceback": [85, 292, 604, 606, 609, 612], "track": 37, "tracker": [601, 602], "tract": 172, "trail": [2, 8, 20, 26, 28, 142, 208, 243, 251, 274, 504, 533, 540, 543, 554, 556, 558, 578, 587, 604, 610], "train": [2, 8, 20], "trait_nam": [131, 132, 133, 287], "transfer": [2, 12, 16, 20, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 41, 42, 46, 47, 97, 131, 132, 133, 135, 138, 140, 146, 147, 165, 173, 174, 182, 185, 198, 209, 210, 211, 212, 213, 214, 224, 243, 244, 245, 251, 252, 253, 254, 255, 257, 268, 271, 272, 278, 280, 282, 283, 295, 389, 394, 397, 420, 450, 457, 504, 507, 530, 567, 578, 582, 587, 589, 590, 591, 593, 594, 598, 599, 604, 608, 609, 614], "transfer_syntax": [97, 209, 210, 211, 212, 214, 243, 251], "transfer_syntax_uid": [30, 34, 131, 132, 133, 224, 271], "transfersyntaxuid": [12, 32, 44, 45, 139, 140, 141, 173, 578, 580, 587, 604, 609, 610, 612], "transform": [36, 39, 50, 216, 226, 259, 267, 609], "translat": [24, 26, 42, 504, 540, 578, 587], "transvers": 575, "travisci": [578, 587], "treat": [172, 243, 606, 609], "treatment": [26, 28], "tree": [6, 21, 175, 578, 585, 600, 604], "tree_item": 0, "tree_seq_item": 0, "treeview": 0, "tri": [131, 132, 133, 158, 160, 161, 224, 244, 245, 252, 255, 257, 271, 272, 278, 280, 578, 599, 612], "tricki": 52, "trigger": [20, 26, 28], "troubl": 602, "true": [0, 10, 12, 16, 29, 30, 32, 33, 34, 42, 43, 44, 47, 51, 53, 56, 67, 69, 80, 81, 82, 88, 89, 93, 94, 96, 97, 100, 106, 115, 116, 125, 126, 128, 130, 131, 132, 133, 135, 138, 139, 147, 150, 156, 158, 160, 161, 162, 164, 165, 169, 173, 174, 175, 176, 177, 179, 180, 181, 182, 185, 198, 205, 208, 209, 210, 211, 212, 213, 214, 221, 224, 225, 243, 244, 245, 251, 252, 255, 256, 257, 264, 266, 268, 269, 271, 272, 277, 278, 279, 280, 281, 283, 284, 287, 289, 504, 530, 533, 534, 537, 540, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 556, 557, 559, 560, 564, 578, 582, 584, 594, 596, 598, 599, 604, 606, 609, 610, 612, 614], "truli": 52, "truncat": [504, 540, 541, 578, 580], "truthi": [578, 591], "try": [53, 97, 131, 132, 133, 183, 184, 243, 504, 540, 578, 582, 590, 599, 604, 606, 610], "tsyntax": [213, 243, 251, 612], "ttk": 0, "tube": 20, "tupl": [30, 34, 42, 44, 47, 85, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 131, 132, 133, 134, 140, 141, 143, 145, 146, 149, 150, 154, 158, 160, 161, 164, 207, 243, 244, 251, 252, 285, 290, 291, 504, 531, 533, 535, 538, 540, 578, 581, 590, 609, 610, 612], "tupletag": [60, 578, 581], "turkish": [578, 587], "turn": [43, 94, 165, 578, 594], "tut": 603, "tutori": [34, 52, 53, 578, 591, 601, 602, 603, 604, 606, 609, 610, 612, 614], "two": [16, 20, 25, 26, 28, 39, 42, 43, 47, 53, 89, 108, 109, 110, 131, 132, 133, 142, 174, 273, 289, 504, 533, 536, 538, 540, 578, 585, 599, 604, 605, 609, 610, 614], "txt": [43, 604], "type": [2, 3, 8, 17, 18, 20, 25, 26, 27, 28, 29, 30, 34, 39, 40, 42, 44, 47, 50, 54, 67, 69, 76, 77, 79, 82, 99, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 149, 150, 151, 153, 154, 155, 158, 160, 161, 164, 165, 166, 168, 169, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 197, 198, 200, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 243, 244, 245, 251, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 287, 290, 504, 529, 530, 533, 538, 541, 542, 543, 544, 545, 546, 547, 548, 551, 552, 553, 554, 556, 558, 559, 560, 561, 562, 563, 564, 578, 581, 582, 584, 595, 596, 598, 599, 603, 604, 606, 610, 614], "type_constructor": [207, 604], "typeerror": [133, 164, 207, 209, 210, 578, 588, 594, 604], "typeofpatientid": 604, "typic": [29, 39, 96, 136, 612], "typo": 601, "tz": 535, "tzinfo": [535, 539], "tzname": [535, 539], "u": [2, 20, 26, 28, 32, 69, 110, 131, 132, 133, 158, 160, 161, 183, 184, 504, 540, 564, 578, 580, 605, 606, 608, 609, 610, 612, 614], "u1": 612, "ub": 564, "uc": [32, 561, 578, 587], "ucum": 613, "ui": [2, 12, 16, 20, 26, 27, 28, 32, 42, 47, 194, 198, 554, 578, 581, 591, 604], "uid": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 50, 52, 97, 131, 132, 133, 135, 138, 139, 140, 141, 173, 174, 185, 198, 209, 210, 211, 212, 213, 214, 215, 224, 243, 244, 245, 251, 252, 253, 254, 258, 268, 271, 272, 282, 283, 554, 563, 567, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599, 602, 604, 606, 608, 609, 610, 612], "uid_dictionari": [578, 579], "uint": [256, 279], "uint16": [131, 132, 133, 215, 217, 219, 220, 221, 252, 258, 260, 262, 263, 264, 268, 283, 610], "uint8": [49, 131, 132, 133, 215, 217, 219, 220, 221, 225, 258, 260, 262, 263, 264, 266, 268, 283, 609, 610], "ul": [2, 12, 16, 20, 26, 27, 28, 32, 42, 47, 108, 109, 110, 158, 160, 161, 198, 564, 604, 606], "ultrasound": 606, "uml": 613, "un": [16, 32, 56, 90, 162, 185, 195, 555, 578, 579, 591, 593, 596, 597, 599, 604], "unabl": [131, 132, 133, 158, 160, 161, 185, 276, 578, 599, 604, 606, 612], "unaffect": 533, "unavail": [244, 252], "uncas": [504, 540], "unchang": [10, 76, 183, 184, 217, 218, 219, 220, 221, 222, 260, 261, 262, 263, 264, 265, 533, 609], "uncom": [578, 585], "uncommon": 537, "uncompress": [2, 8, 20, 29, 34, 36, 37, 38, 41, 44, 45, 50, 131, 132, 133, 224, 245, 251, 252, 271, 272, 273, 507, 578, 589, 591, 596, 597, 609, 610, 612], "uncompressedpixeltransfersyntax": [578, 594, 599], "uncompressedtransfersyntax": [578, 594, 599], "unconvert": [131, 132, 133], "undecod": 130, "undefin": [44, 56, 128, 147, 162, 178, 578, 583, 594, 597], "undefinedlength": [578, 579], "under": [25, 26, 42, 138, 140, 578, 579, 581, 587, 602, 603, 608], "underflow": [20, 533], "undergon": 612, "underli": 38, "underscor": 613, "understand": [42, 53, 244, 602, 609, 614], "undesir": 45, "undocu": 608, "unencapsul": 39, "unencod": [30, 34, 252], "unequ": 533, "unexpect": [578, 591], "unfamiliar": 53, "unicod": [6, 21, 32, 77, 79, 504, 538, 540, 578, 579, 581, 582, 598, 600], "unicodedecodeerror": 77, "unicodeencodeerror": [79, 504, 540], "uniqu": [20, 30, 32, 34, 39, 47, 174, 175, 176, 194, 244, 252, 578, 587, 598, 599, 604, 606], "unit": [33, 37, 50, 131, 132, 133, 164, 208, 243, 251, 274, 564, 602, 609, 612, 614], "unitless": [3, 50, 564, 614], "unittest": 602, "unknown": [16, 20, 32, 47, 85, 128, 129, 131, 132, 133, 147, 195, 578, 583, 588, 590, 594, 596, 604, 613], "unless": [53, 168, 175, 504, 533, 540, 578, 582, 593, 606], "unlik": [131, 132, 133, 533], "unlimit": 32, "unlink": 12, "unneed": [578, 588], "unoffici": [578, 585], "unpack": [49, 131, 132, 133, 244, 255, 257, 269, 278, 280, 284, 557, 578, 589, 597], "unpack_bit": [567, 578, 597, 599], "unpickl": [578, 591], "unrealist": [131, 132, 133], "unrecover": 529, "unsign": [29, 30, 32, 34, 36, 37, 39, 50, 150, 225, 252, 266, 578, 594, 609, 614], "unspecifi": [158, 160, 161], "unsupport": [164, 209, 210, 211, 214], "until": [10, 158, 160, 161, 164, 165, 168, 179, 182, 578, 579, 584, 596, 599, 606], "untouch": [504, 540], "unus": [29, 578, 589, 599, 610], "up": [37, 49, 50, 67, 131, 132, 133, 158, 160, 161, 174, 175, 182, 185, 213, 529, 533, 538, 563, 578, 581, 585, 587, 602, 603, 604, 607, 608, 609], "upcom": [43, 96], "updat": [2, 10, 18, 20, 26, 27, 37, 38, 49, 108, 109, 110, 111, 131, 132, 133, 172, 174, 183, 184, 198, 224, 225, 243, 245, 255, 257, 266, 268, 271, 272, 278, 280, 283, 578, 580, 581, 583, 584, 586, 587, 588, 589, 591, 593, 594, 596, 597, 598, 599, 602, 603, 606, 608, 609, 612], "update_raw_el": [131, 132, 133, 578, 599], "upon": [131, 132, 133], "upper": [504, 533, 540, 578, 599], "uppercas": [53, 128, 504, 540], "ur": [32, 556], "uri": [32, 131, 132, 133, 578, 594, 605], "url": [32, 53], "urllib": [578, 596], "us": [1, 3, 5, 6, 7, 9, 10, 12, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 56, 69, 77, 78, 79, 80, 84, 85, 88, 94, 95, 96, 97, 101, 102, 106, 109, 111, 128, 129, 131, 132, 133, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 160, 161, 162, 164, 165, 167, 168, 172, 174, 175, 176, 182, 183, 184, 185, 197, 200, 201, 202, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 223, 224, 226, 243, 244, 245, 251, 252, 255, 256, 257, 258, 259, 260, 262, 267, 268, 269, 270, 271, 272, 273, 278, 279, 280, 281, 283, 284, 285, 287, 289, 292, 450, 504, 529, 530, 533, 535, 536, 537, 538, 540, 541, 543, 544, 545, 546, 547, 548, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 564, 565, 566, 571, 572, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 609, 610, 612, 613, 614], "us1_j2kr": 69, "us1_rl": 44, "us1_uncr": 69, "usabl": [244, 504, 540], "usag": [14, 24, 26, 27, 28, 30, 38, 42, 46, 225, 255, 257, 266, 278, 280, 504, 538, 567, 578, 591, 599, 606, 609, 610], "usb": 606, "use_bot": 67, "use_decimal_boolean": 81, "use_ds_decim": [32, 82, 546, 567, 578, 593], "use_ds_numpi": [81, 546, 567, 578, 593], "use_exist": [174, 606], "use_is_numpi": [548, 567, 578, 593], "use_mct": 33, "use_numpi": 82, "use_v2_backend": [131, 132, 133], "user": [20, 30, 34, 40, 42, 69, 79, 88, 131, 132, 133, 162, 167, 185, 224, 244, 271, 578, 581, 584, 590, 591, 594, 599, 602, 604, 606], "userwarn": [10, 84], "usual": [25, 26, 27, 28, 38, 42, 47, 50, 109, 132, 144, 156, 162, 578, 581, 602, 604, 608, 609], "ut": 32, "utc": [2, 8, 20, 535], "utcfromtimestamp": 535, "utcnow": 535, "utcoffset": [535, 539], "utctimetupl": 535, "utf": [22, 504, 540], "util": [24, 26, 52, 63, 64, 65, 69, 70, 567, 570, 578, 579, 586, 587, 599, 612], "uuid": 529, "uuid4": 529, "uuu": [535, 539], "uv": [32, 564, 578, 591], "v": [578, 590], "v1": [578, 588, 589, 590, 614], "v2": [26, 27, 38, 578, 594, 599, 608, 614], "v3": [2, 8, 20, 36, 37, 47, 578, 594, 596, 597, 599, 614], "v4": [131, 132, 133, 136, 137, 147, 148, 150, 155, 185, 565, 566, 578, 599, 614], "v5": 614, "v6": 614, "val": [128, 158, 160, 161, 186, 207, 285, 504, 532, 533, 534, 536, 537, 538, 541, 563, 604], "valid": [12, 46, 52, 56, 83, 86, 87, 89, 124, 128, 131, 132, 133, 135, 164, 177, 185, 198, 225, 243, 244, 251, 252, 266, 268, 283, 287, 454, 455, 504, 535, 539, 540, 541, 542, 546, 548, 557, 558, 561, 578, 596, 597, 598, 599, 609], "validate_dataset": 604, "validate_file_meta": [567, 578, 599, 604], "validate_valu": 128, "validation_mod": [128, 504, 532, 533, 534, 536, 537, 538], "valtyp": 563, "valu": [0, 2, 8, 9, 10, 12, 17, 20, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 42, 43, 47, 49, 50, 52, 53, 56, 60, 67, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 93, 96, 103, 109, 111, 112, 113, 122, 123, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 158, 160, 161, 163, 164, 166, 172, 174, 182, 183, 184, 185, 186, 195, 200, 201, 202, 207, 208, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 241, 243, 244, 245, 251, 252, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 271, 272, 275, 277, 279, 281, 282, 283, 285, 286, 289, 504, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 564, 567, 575, 578, 579, 580, 583, 584, 585, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599, 602, 603, 604, 605, 606, 608, 609, 610, 612, 613, 614], "value_kei": 128, "value_tel": 130, "valueerror": [81, 82, 84, 85, 106, 107, 108, 109, 110, 111, 130, 131, 132, 133, 134, 135, 147, 150, 166, 174, 185, 198, 207, 208, 211, 214, 256, 269, 279, 284, 285, 286, 504, 529, 533, 534, 537, 540, 541, 546, 548, 560, 578, 599, 606, 609], "valuerep": [16, 22, 60, 545, 547, 551, 553, 567], "valuesview": [131, 132, 133], "vari": 604, "variabl": [26, 27, 42, 43, 53, 54, 69, 578, 590, 594, 598, 608], "variant": [2, 8, 20], "variat": 612, "varieti": [50, 609, 610], "variou": [25, 26, 47, 578, 579, 612], "ve": [44, 578, 586, 602, 603, 606, 609, 610, 612, 614], "verbos": [578, 599], "veri": [22, 32, 37, 41, 578, 581, 602, 606, 609, 610, 612], "verif": [578, 588], "verifi": [45, 578, 584], "versa": [38, 185, 215, 258], "version": [2, 8, 12, 20, 24, 26, 27, 28, 39, 42, 46, 47, 53, 56, 67, 80, 82, 84, 85, 89, 96, 99, 100, 102, 103, 106, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 176, 183, 184, 185, 198, 205, 213, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 278, 279, 280, 282, 283, 284, 286, 287, 288, 289, 504, 529, 533, 540, 546, 548, 564, 565, 566, 602, 603, 604, 605, 613], "versionad": [53, 286], "versionchang": 53, "veterinari": 538, "via": [29, 41, 44, 56, 128, 131, 132, 133, 213, 504, 531, 540, 575, 578, 587, 589, 594, 596, 597, 599, 605, 606, 609, 612], "vice": [38, 185, 215, 258], "videan42": [578, 586], "view": [4, 10, 20, 29, 38, 42, 46, 50, 131, 132, 133, 220, 221, 222, 243, 263, 264, 265, 578, 579, 581, 599, 603, 606, 614], "view_onli": [29, 131, 132, 133, 244, 255, 257, 278, 280], "viewer": [0, 48], "virtual": [43, 608], "virtualenv": 603, "visibl": 603, "visit": [131, 132, 133, 602, 603], "vm": [16, 32, 42, 62, 108, 109, 110, 111, 112, 118, 119, 122, 128, 578, 582, 590, 593, 599, 604], "vma": 20, "voi": [46, 218, 220, 221, 222, 261, 263, 264, 265, 578, 591, 594], "voic": 51, "volum": [209, 612], "voxel": 2, "vr": [0, 2, 8, 12, 16, 17, 20, 26, 27, 28, 39, 40, 42, 44, 45, 47, 54, 56, 60, 65, 82, 89, 90, 93, 101, 102, 108, 109, 110, 111, 113, 118, 119, 123, 128, 129, 130, 131, 132, 133, 134, 142, 158, 160, 161, 162, 163, 165, 166, 174, 183, 184, 185, 190, 191, 194, 198, 199, 211, 227, 228, 229, 233, 244, 245, 253, 268, 272, 283, 295, 504, 530, 531, 533, 534, 535, 536, 537, 538, 539, 543, 552, 554, 556, 557, 558, 559, 561, 562, 578, 579, 580, 581, 582, 584, 585, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599, 604, 605, 609, 610, 612], "w": 604, "wa": [24, 25, 26, 39, 53, 128, 131, 132, 133, 149, 174, 179, 183, 184, 546, 548, 578, 581, 588, 591, 596, 599, 602, 603, 606], "wado": [128, 131, 132, 133, 605], "wai": [37, 42, 43, 49, 50, 131, 132, 133, 578, 584, 599, 601, 604, 605, 606, 608, 613], "walk": [17, 131, 132, 133], "wallac": [578, 582], "wang": 22, "want": [9, 10, 14, 24, 25, 26, 37, 43, 52, 176, 602, 603, 604, 605, 606, 608, 609, 612], "warn": [43, 52, 53, 56, 76, 77, 79, 84, 85, 277, 567, 578, 580, 584, 588, 589, 590, 591, 593, 596, 597, 599, 602, 603], "warn_and_log": 10, "water": [20, 538], "waveform": [1, 5, 6, 46, 54, 69, 131, 132, 133, 172, 567, 578, 594, 598, 600, 607], "waveform_arrai": [3, 46, 131, 132, 133, 578, 594, 614], "waveform_ecg": 69, "waveformbitsalloc": [564, 614], "waveformbitsstor": 614, "waveformdata": [51, 614], "waveformorigin": 614, "waveformsampleinterpret": [564, 614], "waveformsequ": [3, 51, 614], "wavelet": 36, "wb": 604, "we": [3, 10, 16, 17, 18, 24, 26, 28, 37, 38, 45, 93, 131, 132, 133, 601, 602, 603, 604, 606, 608, 609, 610, 614], "web": 603, "wedg": [26, 28], "week": [531, 535], "weekdai": [531, 535], "weight": [0, 2, 8, 20], "well": [41, 47, 50, 52, 69, 141, 174, 215, 258, 504, 540, 578, 581, 582, 584, 591, 601, 602, 604, 608, 609], "were": [20, 26, 28, 131, 132, 133, 578, 584, 586, 602, 603, 610, 614], "weren": 609, "what": [10, 32, 39, 47, 49, 54, 174, 604, 606, 610, 612], "whatev": [223, 270, 609], "whatsoev": 244, "wheel": 608, "when": [10, 16, 23, 24, 25, 26, 27, 29, 30, 32, 34, 36, 37, 38, 39, 41, 42, 44, 47, 49, 50, 52, 53, 56, 80, 84, 85, 89, 93, 94, 97, 131, 132, 133, 138, 140, 143, 145, 146, 148, 149, 150, 156, 158, 160, 161, 168, 174, 176, 183, 184, 185, 214, 216, 217, 219, 220, 221, 222, 224, 244, 245, 252, 255, 257, 259, 260, 262, 263, 264, 265, 269, 271, 272, 278, 280, 281, 282, 284, 290, 292, 504, 529, 530, 538, 540, 578, 580, 581, 582, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 602, 603, 604, 606, 608, 609, 610, 612, 614], "whenc": [67, 158, 160, 161], "whenev": [578, 594], "where": [10, 30, 34, 36, 37, 39, 42, 43, 49, 50, 51, 56, 108, 110, 131, 132, 133, 134, 138, 166, 172, 174, 179, 180, 217, 219, 243, 244, 251, 252, 260, 262, 504, 533, 540, 578, 580, 589, 590, 591, 599, 602, 603, 604, 606, 609, 610, 612], "whether": [29, 39, 42, 82, 102, 128, 131, 132, 133, 150, 243, 289, 504, 533, 536, 540, 542, 578, 581, 584, 589, 591, 596, 601, 602, 608, 612], "which": [1, 6, 20, 23, 24, 25, 26, 30, 34, 36, 37, 39, 42, 45, 47, 50, 51, 52, 53, 77, 78, 84, 109, 128, 131, 132, 133, 162, 165, 167, 172, 174, 185, 198, 214, 223, 224, 244, 252, 257, 269, 270, 271, 280, 284, 504, 529, 530, 532, 533, 540, 578, 579, 582, 584, 586, 594, 599, 602, 603, 604, 605, 606, 608, 609, 610, 612, 614], "whichev": 252, "while": [10, 26, 27, 37, 38, 39, 45, 50, 56, 128, 131, 132, 133, 185, 214, 244, 252, 255, 257, 278, 280, 541, 578, 590, 591, 596, 599, 602, 606, 608, 609, 612], "white": [36, 37, 38, 578, 586], "whitespac": [504, 540], "whl": 608, "who": [30, 34, 244, 578, 584, 585], "whole": [24, 26, 162, 208, 243, 251, 274, 578, 599], "whose": [42, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 131, 132, 133, 244, 255, 257, 278, 280, 289, 504, 533, 534, 536, 537, 538, 540, 541, 602], "why": 38, "wide": 609, "widget": 0, "width": [2, 8, 20, 128, 221, 222, 264, 265, 504, 540, 604], "window": [0, 2, 8, 20, 26, 27, 43, 46, 221, 222, 264, 265, 578, 579, 587, 591, 597, 602, 603, 604, 608, 612], "windowcent": 604, "windowwidth": 604, "winter": [215, 258], "wip": [602, 603], "wise": 533, "wish": [25, 26, 36, 43, 281], "with_traceback": 156, "within": [24, 26, 27, 28, 30, 34, 37, 80, 89, 131, 132, 133, 164, 165, 173, 174, 185, 292, 504, 540, 552, 578, 594, 606, 608, 609, 614], "without": [10, 36, 42, 45, 47, 51, 106, 131, 132, 133, 156, 167, 180, 269, 284, 533, 543, 554, 556, 557, 578, 580, 588, 590, 594, 597, 598, 599, 604, 606, 608, 609], "withoverlai": 69, "witten": [578, 581], "wo": [10, 606], "won": [602, 603, 604, 606], "word": [32, 52, 53, 109, 191, 504, 538, 540, 604], "work": [6, 15, 19, 21, 25, 26, 27, 30, 32, 34, 37, 42, 43, 46, 47, 52, 53, 174, 504, 540, 578, 579, 581, 582, 584, 585, 586, 588, 590, 594, 599, 600, 602, 603, 604, 608, 610, 613, 614], "workflow": [578, 596, 602, 603], "world": [16, 604], "worri": 609, "worth": [30, 243, 251], "would": [10, 24, 25, 26, 27, 29, 38, 43, 52, 56, 533, 602, 603, 606, 610, 614], "wrap": [42, 53, 158, 160, 161, 185], "wrapper": [158, 160, 161, 578, 593], "write": [6, 7, 10, 13, 14, 16, 17, 24, 26, 40, 43, 46, 47, 54, 56, 70, 94, 131, 132, 133, 139, 141, 158, 160, 161, 174, 185, 187, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 533, 534, 567, 578, 580, 582, 587, 588, 590, 592, 593, 594, 596, 597, 599, 600, 603, 605, 606, 607, 610], "write_atvalu": 70, "write_da": 70, "write_data_el": 70, "write_dataset": [70, 578, 599], "write_dataset_to_byt": 14, "write_dt": 70, "write_fil": [578, 587, 596, 599], "write_file_meta_info": [70, 185], "write_like_origin": [131, 132, 133, 185, 578, 599], "write_new": [578, 583], "write_numb": 70, "write_number_str": 70, "write_obvalu": 70, "write_owvalu": 70, "write_pn": [70, 578, 588], "write_sequ": 70, "write_sequence_item": 70, "write_str": 70, "write_tag": [158, 160, 161], "write_text": 70, "write_tm": 70, "write_u": [158, 160, 161], "write_ui": 70, "write_ul": [158, 160, 161], "write_un": 70, "writeabl": [131, 132, 133, 185, 211, 244, 255, 257, 278, 280, 578, 599], "writeablebuff": [131, 132, 133, 158, 160, 161, 185], "writer": 89, "writing_validation_mod": [43, 56, 79, 128, 578, 597], "written": [12, 24, 26, 32, 43, 49, 50, 131, 132, 133, 158, 160, 161, 174, 185, 197, 198, 578, 590, 591, 599, 602, 604, 606, 612], "wrong": [578, 589, 590, 594, 598], "wrote": 52, "wxpython": [48, 578, 581], "x": [2, 3, 8, 9, 20, 26, 27, 28, 36, 53, 504, 529, 533, 540, 578, 590, 602, 604, 610, 612, 614], "x0": 610, "x00": [2, 8, 12, 16, 20, 26, 27, 28, 37, 42, 47, 49, 604, 610, 612], "x00t": 604, "x01": [2, 8, 12, 20, 26, 27, 28, 42, 47, 50, 604, 612], "x02": 50, "x03": 50, "x04": [8, 50], "x08": 604, "x18": 604, "x5e": 22, "x7f": 50, "x89": 50, "x8b": 22, "x8e": 22, "x8f": 22, "x94": 50, "x9d": 22, "x_unit": 3, "xa1": 22, "xab": 22, "xb0": 22, "xb1": 22, "xb6": 22, "xcb": 50, "xcd": 22, "xd0": 22, "xe0": 612, "xe5": 22, "xe6": 22, "xe7": 22, "xeb": 50, "xf5": 22, "xf9": 50, "xfb": 50, "xfe": [8, 612], "xff": [37, 612], "xffo": 612, "xffq": 612, "xiaodong": 22, "xm": [20, 26, 28], "xmlcharrefreplac": [504, 540], "xr": [10, 606], "xraytubecurr": 603, "xxx": 52, "xxxxxx": 174, "y": [12, 53, 273, 504, 533, 540, 610], "y0": 610, "y_unit": 3, "yamada": 22, "yaroslav": [578, 586], "ybr": [38, 50, 578, 596, 609, 612], "ybr_color": [69, 612], "ybr_full": [30, 34, 36, 37, 38, 39, 50, 131, 132, 133, 211, 213, 225, 244, 252, 255, 257, 266, 268, 273, 278, 280, 283, 578, 591, 597, 609], "ybr_full_422": [29, 39, 50, 131, 132, 133, 211, 213, 225, 244, 245, 255, 257, 266, 268, 272, 273, 278, 280, 283, 578, 591, 597, 612], "ybr_ict": [36, 39, 213, 609], "ybr_partial_420": 39, "ybr_rct": [36, 39, 213, 609], "ycbcr": [29, 36, 37, 38, 39, 131, 132, 133, 209, 210, 211, 212, 213, 214, 243, 244, 245, 255, 257, 272, 278, 280, 609, 612], "year": [531, 535], "yet": [604, 613], "yield": [10, 42, 131, 132, 133, 142, 143, 144, 145, 146, 147, 148, 152, 162, 175, 176, 213, 243, 244, 245, 252, 255, 272, 278, 564, 578, 599, 604, 606, 612, 614], "you": [10, 12, 14, 16, 18, 23, 24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 93, 138, 140, 164, 168, 172, 174, 176, 281, 504, 578, 591, 594, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 614], "your": [8, 10, 14, 23, 25, 26, 27, 30, 34, 36, 37, 38, 39, 42, 45, 46, 47, 52, 96, 138, 140, 174, 601, 604, 605, 606, 608, 612, 614], "your_fil": [24, 26, 27, 28], "yourarg": [25, 26], "yourpackag": [25, 26], "yourplan": [24, 26, 27, 28], "yourself": [25, 26, 49, 50], "yourusernam": [602, 603], "yyyi": [23, 531, 535], "z": [20, 89, 176, 177, 578, 599], "zenodo": 23, "zero": [4, 20, 32, 50, 131, 132, 133, 182, 243, 287, 504, 533, 540, 578, 598, 604, 609, 610, 612], "zfill": [504, 540], "zip": [3, 6, 578, 590, 614], "\u03bcv": 614, "\u5409\u6d1e": 538, "\u6d2a": 538, "\uae38\ub3d9": 538, "\ud64d": 538}, "titles": ["Show a dicom file using hierarchical tree", "Image processing", "Downsize MRI image using pydicom", "Decode and plot Waveform Data", "Load CT slices and plot axial, sagittal and coronal images", "Computation times", "General examples", "Input-output", "Format the output of the data set printing", "Read a Dataset and plot Pixel Data", "Read a DICOM File-set", "Read RTPLAN DICOM and list information", "Write DICOM data", "Computation times", "Show working with memory-based dataset", "Metadata processing", "Add items to the private DICOM dictionary", "Anonymize DICOM data", "Working with sequences", "Computation times", "Analyse differences between DICOM files", "Computation times", "Display unicode person names", "Frequently asked questions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">codify</span></code> command", "Extending the CLI", "Command-line Interface Guide", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">show</span></code> command", "Pixel Data Decoder Options", "Pixel Data Decoder Plugins", "Pixel Data Decoding", "Element VRs and Python types", "Encoder Plugins Options", "Pixel Data Encoder Plugins", "Pixel Data Encoding", "JPEG 2000 Encoding", "JPEG-LS Encoding", "RLE Lossless Encoding", "Glossary", "Guides", "Plugins for Pixel Data Compression and Decompression", "Core elements in pydicom", "Best Practices", "Compressing <em>Pixel Data</em>", "Handling of compressed pixel data", "pydicom User Guide", "Private Data Elements", "Viewing Images", "Working with Overlay Data", "Working with Pixel Data", "Working with Waveform Data", "Writing DICOM Files", "Writing documentation", "pydicom documentation", "Character Encoding and Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.charset</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.config</span></code>)", "Getting Included Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.data</span></code>)", "Data Dictionary Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.datadict</span></code>)", "Representation of Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataset</span></code>)", "Representation of Data Elements", "Data Elements (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataelem</span></code>)", "Element Multi-value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.multival</span></code>)", "Sequence Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sequence</span></code>)", "Element Tags (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.tag</span></code>)", "Specialized Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.valuerep</span></code>)", "Element Value Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.values</span></code>)", "Bulk Data Encapsulation Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encaps</span></code>)", "Exceptions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.errors</span></code>)", "Example Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.examples</span></code>)", "Dataset IO", "IO Base Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filebase</span></code>)", "Dataset Reading (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filereader</span></code>)", "IO Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileutil</span></code>)", "Dataset Writing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filewriter</span></code>)", "DICOM File-sets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileset</span></code>)", "pydicom.charset.convert_encodings", "pydicom.charset.decode_bytes", "pydicom.charset.decode_element", "pydicom.charset.encode_string", "pydicom.config.APPLY_J2K_CORRECTIONS", "pydicom.config.DS_decimal", "pydicom.config.DS_numpy", "pydicom.config.IGNORE", "pydicom.config.INVALID_KEYWORD_BEHAVIOR", "pydicom.config.INVALID_KEY_BEHAVIOR", "pydicom.config.RAISE", "pydicom.config.WARN", "pydicom.config.allow_DS_float", "pydicom.config.assume_implicit_vr_switch", "pydicom.config.convert_wrong_length_to_UN", "pydicom.config.data_element_callback", "pydicom.config.data_element_callback_kwargs", "pydicom.config.datetime_conversion", "pydicom.config.debug", "pydicom.config.enforce_valid_values", "pydicom.config.future_behavior", "pydicom.config.pixel_data_handlers", "pydicom.config.reset_data_element_callback", "pydicom.config.settings", "pydicom.config.show_file_meta", "pydicom.config.use_DS_decimal", "pydicom.config.use_DS_numpy", "pydicom.config.use_IS_numpy", "pydicom.data.get_charset_files", "pydicom.data.get_palette_files", "pydicom.data.get_testdata_file", "pydicom.data.get_testdata_files", "pydicom.datadict.add_dict_entries", "pydicom.datadict.add_dict_entry", "pydicom.datadict.add_private_dict_entries", "pydicom.datadict.add_private_dict_entry", "pydicom.datadict.dictionary_VM", "pydicom.datadict.dictionary_VR", "pydicom.datadict.dictionary_description", "pydicom.datadict.dictionary_has_tag", "pydicom.datadict.dictionary_is_retired", "pydicom.datadict.dictionary_keyword", "pydicom.datadict.get_entry", "pydicom.datadict.get_private_entry", "pydicom.datadict.keyword_for_tag", "pydicom.datadict.mask_match", "pydicom.datadict.private_dictionary_VM", "pydicom.datadict.private_dictionary_VR", "pydicom.datadict.private_dictionary_description", "pydicom.datadict.repeater_has_keyword", "pydicom.datadict.repeater_has_tag", "pydicom.datadict.tag_for_keyword", "pydicom.dataelem.DataElement", "pydicom.dataelem.DataElement_from_raw", "pydicom.dataelem.RawDataElement", "pydicom.dataset.Dataset", "pydicom.dataset.FileDataset", "pydicom.dataset.FileMetaDataset", "pydicom.dataset.PrivateBlock", "pydicom.dataset.validate_file_meta", "pydicom.encaps.decode_data_sequence", "pydicom.encaps.defragment_data", "pydicom.encaps.encapsulate", "pydicom.encaps.encapsulate_buffer", "pydicom.encaps.encapsulate_extended", "pydicom.encaps.encapsulate_extended_buffer", "pydicom.encaps.fragment_frame", "pydicom.encaps.generate_fragmented_frames", "pydicom.encaps.generate_fragments", "pydicom.encaps.generate_frames", "pydicom.encaps.generate_pixel_data", "pydicom.encaps.generate_pixel_data_fragment", "pydicom.encaps.generate_pixel_data_frame", "pydicom.encaps.get_frame", "pydicom.encaps.get_frame_offsets", "pydicom.encaps.itemize_fragment", "pydicom.encaps.itemize_frame", "pydicom.encaps.parse_basic_offsets", "pydicom.encaps.parse_fragments", "pydicom.encaps.read_item", "pydicom.errors.InvalidDicomError", "pydicom.examples.get_path", "pydicom.filebase.DicomBytesIO", "pydicom.filebase.DicomFile", "pydicom.filebase.DicomFileLike", "pydicom.filebase.DicomIO", "pydicom.filereader.data_element_generator", "pydicom.filereader.data_element_offset_to_value", "pydicom.filereader.dcmread", "pydicom.filereader.read_dataset", "pydicom.filereader.read_deferred_data_element", "pydicom.filereader.read_file_meta_info", "pydicom.filereader.read_partial", "pydicom.filereader.read_preamble", "pydicom.filereader.read_sequence", "pydicom.filereader.read_sequence_item", "pydicom.fileset.DIRECTORY_RECORDERS", "pydicom.fileset.FileInstance", "pydicom.fileset.FileSet", "pydicom.fileset.RecordNode", "pydicom.fileset.generate_filename", "pydicom.fileset.is_conformant_file_id", "pydicom.fileutil.absorb_delimiter_item", "pydicom.fileutil.find_bytes", "pydicom.fileutil.find_delimiter", "pydicom.fileutil.length_of_undefined_length", "pydicom.fileutil.read_undefined_length_value", "pydicom.filewriter.correct_ambiguous_vr", "pydicom.filewriter.correct_ambiguous_vr_element", "pydicom.filewriter.dcmwrite", "pydicom.filewriter.multi_string", "pydicom.filewriter.write_ATvalue", "pydicom.filewriter.write_DA", "pydicom.filewriter.write_DT", "pydicom.filewriter.write_OBvalue", "pydicom.filewriter.write_OWvalue", "pydicom.filewriter.write_PN", "pydicom.filewriter.write_TM", "pydicom.filewriter.write_UI", "pydicom.filewriter.write_UN", "pydicom.filewriter.write_data_element", "pydicom.filewriter.write_dataset", "pydicom.filewriter.write_file_meta_info", "pydicom.filewriter.write_number_string", "pydicom.filewriter.write_numbers", "pydicom.filewriter.write_sequence", "pydicom.filewriter.write_sequence_item", "pydicom.filewriter.write_string", "pydicom.filewriter.write_text", "pydicom.misc.is_dicom", "pydicom.misc.size_in_bytes", "pydicom.multival.MultiValue", "pydicom.overlays.numpy_handler", "pydicom.pixel_data_handlers.gdcm_handler", "pydicom.pixel_data_handlers.jpeg_ls_handler", "pydicom.pixel_data_handlers.numpy_handler", "pydicom.pixel_data_handlers.pillow_handler", "pydicom.pixel_data_handlers.pylibjpeg_handler", "pydicom.pixel_data_handlers.rle_handler", "pydicom.pixels.apply_color_lut", "pydicom.pixels.apply_icc_profile", "pydicom.pixels.apply_modality_lut", "pydicom.pixels.apply_presentation_lut", "pydicom.pixels.apply_rescale", "pydicom.pixels.apply_voi", "pydicom.pixels.apply_voi_lut", "pydicom.pixels.apply_windowing", "pydicom.pixels.as_pixel_options", "pydicom.pixels.compress", "pydicom.pixels.convert_color_space", "pydicom.pixels.create_icc_transform", "pydicom.pixels.decoders.DeflatedExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.ExplicitVRBigEndianDecoder", "pydicom.pixels.decoders.ExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.HTJ2KDecoder", "pydicom.pixels.decoders.HTJ2KLosslessDecoder", "pydicom.pixels.decoders.HTJ2KLosslessRPCLDecoder", "pydicom.pixels.decoders.ImplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.JPEG2000Decoder", "pydicom.pixels.decoders.JPEG2000LosslessDecoder", "pydicom.pixels.decoders.JPEGBaseline8BitDecoder", "pydicom.pixels.decoders.JPEGExtended12BitDecoder", "pydicom.pixels.decoders.JPEGLSLosslessDecoder", "pydicom.pixels.decoders.JPEGLSNearLosslessDecoder", "pydicom.pixels.decoders.JPEGLosslessDecoder", "pydicom.pixels.decoders.JPEGLosslessSV1Decoder", "pydicom.pixels.decoders.RLELosslessDecoder", "pydicom.pixels.decoders.base.DecodeRunner", "pydicom.pixels.decoders.base.Decoder", "pydicom.pixels.decompress", "pydicom.pixels.encoders.JPEG2000Encoder", "pydicom.pixels.encoders.JPEG2000LosslessEncoder", "pydicom.pixels.encoders.JPEGLSLosslessEncoder", "pydicom.pixels.encoders.JPEGLSNearLosslessEncoder", "pydicom.pixels.encoders.RLELosslessEncoder", "pydicom.pixels.encoders.base.EncodeRunner", "pydicom.pixels.encoders.base.Encoder", "pydicom.pixels.get_decoder", "pydicom.pixels.get_encoder", "pydicom.pixels.iter_pixels", "pydicom.pixels.pack_bits", "pydicom.pixels.pixel_array", "pydicom.pixels.processing.apply_color_lut", "pydicom.pixels.processing.apply_icc_profile", "pydicom.pixels.processing.apply_modality_lut", "pydicom.pixels.processing.apply_presentation_lut", "pydicom.pixels.processing.apply_rescale", "pydicom.pixels.processing.apply_voi", "pydicom.pixels.processing.apply_voi_lut", "pydicom.pixels.processing.apply_windowing", "pydicom.pixels.processing.convert_color_space", "pydicom.pixels.processing.create_icc_transform", "pydicom.pixels.set_pixel_data", "pydicom.pixels.unpack_bits", "pydicom.pixels.utils.as_pixel_options", "pydicom.pixels.utils.compress", "pydicom.pixels.utils.decompress", "pydicom.pixels.utils.expand_ybr422", "pydicom.pixels.utils.get_expected_length", "pydicom.pixels.utils.get_image_pixel_ids", "pydicom.pixels.utils.get_j2k_parameters", "pydicom.pixels.utils.get_nr_frames", "pydicom.pixels.utils.iter_pixels", "pydicom.pixels.utils.pack_bits", "pydicom.pixels.utils.pixel_array", "pydicom.pixels.utils.pixel_dtype", "pydicom.pixels.utils.reshape_pixel_array", "pydicom.pixels.utils.set_pixel_data", "pydicom.pixels.utils.unpack_bits", "pydicom.sequence.Sequence", "pydicom.sr.Code", "pydicom.sr.Collection", "pydicom.sr.Concepts", "pydicom.tag.BaseTag", "pydicom.tag.Tag", "pydicom.tag.TupleTag", "pydicom.tag.tag_in_exception", "pydicom.uid.AcquisitionContextSRStorage", "pydicom.uid.AdvancedBlendingPresentationStateStorage", "pydicom.uid.AllTransferSyntaxes", "pydicom.uid.AmbulatoryECGWaveformStorage", "pydicom.uid.ArterialPulseWaveformStorage", "pydicom.uid.AutorefractionMeasurementsStorage", "pydicom.uid.BasicStructuredDisplayStorage", "pydicom.uid.BasicTextSRStorage", "pydicom.uid.BasicVoiceAudioWaveformStorage", "pydicom.uid.BlendingSoftcopyPresentationStateStorage", "pydicom.uid.BodyPositionWaveformStorage", "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "pydicom.uid.BreastTomosynthesisImageStorage", "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "pydicom.uid.CArmPhotonElectronRadiationStorage", "pydicom.uid.CTDefinedProcedureProtocolStorage", "pydicom.uid.CTImageStorage", "pydicom.uid.CTPerformedProcedureProtocolStorage", "pydicom.uid.CardiacElectrophysiologyWaveformStorage", "pydicom.uid.ChestCADSRStorage", "pydicom.uid.ColonCADSRStorage", "pydicom.uid.ColorPaletteStorage", "pydicom.uid.ColorSoftcopyPresentationStateStorage", "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.Comprehensive3DSRStorage", "pydicom.uid.ComprehensiveSRStorage", "pydicom.uid.ComputedRadiographyImageStorage", "pydicom.uid.ConfocalMicroscopyImageStorage", "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "pydicom.uid.ContentAssessmentResultsStorage", "pydicom.uid.CornealTopographyMapStorage", "pydicom.uid.DICOS2DAITStorage", "pydicom.uid.DICOS3DAITStorage", "pydicom.uid.DICOSCTImageStorage", "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "pydicom.uid.DICOSQuadrupoleResonanceStorage", "pydicom.uid.DICOSThreatDetectionReportStorage", "pydicom.uid.DeflatedExplicitVRLittleEndian", "pydicom.uid.DeformableSpatialRegistrationStorage", "pydicom.uid.DermoscopicPhotographyImageStorage", "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "pydicom.uid.DigitalXRayImageStorageForPresentation", "pydicom.uid.DigitalXRayImageStorageForProcessing", "pydicom.uid.EddyCurrentImageStorage", "pydicom.uid.EddyCurrentMultiFrameImageStorage", "pydicom.uid.ElectromyogramWaveformStorage", "pydicom.uid.ElectrooculogramWaveformStorage", "pydicom.uid.EncapsulatedCDAStorage", "pydicom.uid.EncapsulatedMTLStorage", "pydicom.uid.EncapsulatedOBJStorage", "pydicom.uid.EncapsulatedPDFStorage", "pydicom.uid.EncapsulatedSTLStorage", "pydicom.uid.EnhancedCTImageStorage", "pydicom.uid.EnhancedContinuousRTImageStorage", "pydicom.uid.EnhancedMRColorImageStorage", "pydicom.uid.EnhancedMRImageStorage", "pydicom.uid.EnhancedPETImageStorage", "pydicom.uid.EnhancedRTImageStorage", "pydicom.uid.EnhancedSRStorage", "pydicom.uid.EnhancedUSVolumeStorage", "pydicom.uid.EnhancedXAImageStorage", "pydicom.uid.EnhancedXRFImageStorage", "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "pydicom.uid.ExplicitVRBigEndian", "pydicom.uid.ExplicitVRLittleEndian", "pydicom.uid.ExtensibleSRStorage", "pydicom.uid.General32bitECGWaveformStorage", "pydicom.uid.GeneralAudioWaveformStorage", "pydicom.uid.GeneralECGWaveformStorage", "pydicom.uid.GenericImplantTemplateStorage", "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.HEVCM10P51", "pydicom.uid.HEVCMP51", "pydicom.uid.HTJ2K", "pydicom.uid.HTJ2KLossless", "pydicom.uid.HTJ2KLosslessRPCL", "pydicom.uid.HangingProtocolStorage", "pydicom.uid.HemodynamicWaveformStorage", "pydicom.uid.ImplantAssemblyTemplateStorage", "pydicom.uid.ImplantTemplateGroupStorage", "pydicom.uid.ImplantationPlanSRStorage", "pydicom.uid.ImplicitVRLittleEndian", "pydicom.uid.IntraocularLensCalculationsStorage", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pydicom.uid.InventoryStorage", "pydicom.uid.JPEG2000", "pydicom.uid.JPEG2000Lossless", "pydicom.uid.JPEG2000MC", "pydicom.uid.JPEG2000MCLossless", "pydicom.uid.JPEG2000TransferSyntaxes", "pydicom.uid.JPEGBaseline8Bit", "pydicom.uid.JPEGExtended12Bit", "pydicom.uid.JPEGLSLossless", "pydicom.uid.JPEGLSNearLossless", "pydicom.uid.JPEGLSTransferSyntaxes", "pydicom.uid.JPEGLossless", "pydicom.uid.JPEGLosslessSV1", "pydicom.uid.JPEGTransferSyntaxes", "pydicom.uid.JPIPHTJ2KReferenced", "pydicom.uid.JPIPHTJ2KReferencedDeflate", "pydicom.uid.KeratometryMeasurementsStorage", "pydicom.uid.KeyObjectSelectionDocumentStorage", "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "pydicom.uid.LensometryMeasurementsStorage", "pydicom.uid.MPEG2MPHL", "pydicom.uid.MPEG2MPHLF", "pydicom.uid.MPEG2MPML", "pydicom.uid.MPEG2MPMLF", "pydicom.uid.MPEG4HP41", "pydicom.uid.MPEG4HP41BD", "pydicom.uid.MPEG4HP41BDF", "pydicom.uid.MPEG4HP41F", "pydicom.uid.MPEG4HP422D", "pydicom.uid.MPEG4HP422DF", "pydicom.uid.MPEG4HP423D", "pydicom.uid.MPEG4HP423DF", "pydicom.uid.MPEG4HP42STEREO", "pydicom.uid.MPEG4HP42STEREOF", "pydicom.uid.MPEGTransferSyntaxes", "pydicom.uid.MRImageStorage", "pydicom.uid.MRSpectroscopyStorage", "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "pydicom.uid.MammographyCADSRStorage", "pydicom.uid.MediaStorageDirectoryStorage", "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "pydicom.uid.MultichannelRespiratoryWaveformStorage", "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.NuclearMedicineImageStorage", "pydicom.uid.OphthalmicAxialMeasurementsStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pydicom.uid.OphthalmicPhotography16BitImageStorage", "pydicom.uid.OphthalmicPhotography8BitImageStorage", "pydicom.uid.OphthalmicThicknessMapStorage", "pydicom.uid.OphthalmicTomographyImageStorage", "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "pydicom.uid.PYDICOM_ROOT_UID", "pydicom.uid.ParametricMapStorage", "pydicom.uid.PatientRadiationDoseSRStorage", "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "pydicom.uid.PhotoacousticImageStorage", "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "pydicom.uid.PositronEmissionTomographyImageStorage", "pydicom.uid.PrivateTransferSyntaxes", "pydicom.uid.ProcedureLogStorage", "pydicom.uid.ProtocolApprovalStorage", "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "pydicom.uid.RE_VALID_UID", "pydicom.uid.RE_VALID_UID_PREFIX", "pydicom.uid.RLELossless", "pydicom.uid.RLETransferSyntaxes", "pydicom.uid.RTBeamsDeliveryInstructionStorage", "pydicom.uid.RTBeamsTreatmentRecordStorage", "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "pydicom.uid.RTBrachyTreatmentRecordStorage", "pydicom.uid.RTDoseStorage", "pydicom.uid.RTImageStorage", "pydicom.uid.RTIonBeamsTreatmentRecordStorage", "pydicom.uid.RTIonPlanStorage", "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "pydicom.uid.RTPhysicianIntentStorage", "pydicom.uid.RTPlanStorage", "pydicom.uid.RTRadiationRecordSetStorage", "pydicom.uid.RTRadiationSalvageRecordStorage", "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "pydicom.uid.RTRadiationSetStorage", "pydicom.uid.RTSegmentAnnotationStorage", "pydicom.uid.RTStructureSetStorage", "pydicom.uid.RTTreatmentPreparationStorage", "pydicom.uid.RTTreatmentSummaryRecordStorage", "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "pydicom.uid.RawDataStorage", "pydicom.uid.RealWorldValueMappingStorage", "pydicom.uid.RespiratoryWaveformStorage", "pydicom.uid.RoboticArmRadiationStorage", "pydicom.uid.RoboticRadiationRecordStorage", "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "pydicom.uid.SMPTEST211030PCMDigitalAudio", "pydicom.uid.SecondaryCaptureImageStorage", "pydicom.uid.SegmentationStorage", "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.SimplifiedAdultEchoSRStorage", "pydicom.uid.SleepElectroencephalogramWaveformStorage", "pydicom.uid.SpatialFiducialsStorage", "pydicom.uid.SpatialRegistrationStorage", "pydicom.uid.SpectaclePrescriptionReportStorage", "pydicom.uid.StereometricRelationshipStorage", "pydicom.uid.SubjectiveRefractionMeasurementsStorage", "pydicom.uid.SurfaceScanMeshStorage", "pydicom.uid.SurfaceScanPointCloudStorage", "pydicom.uid.SurfaceSegmentationStorage", "pydicom.uid.TomotherapeuticRadiationRecordStorage", "pydicom.uid.TomotherapeuticRadiationStorage", "pydicom.uid.TractographyResultsStorage", "pydicom.uid.TwelveLeadECGWaveformStorage", "pydicom.uid.UID", "pydicom.uid.UltrasoundImageStorage", "pydicom.uid.UltrasoundMultiFrameImageStorage", "pydicom.uid.UncompressedTransferSyntaxes", "pydicom.uid.VLEndoscopicImageStorage", "pydicom.uid.VLMicroscopicImageStorage", "pydicom.uid.VLPhotographicImageStorage", "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "pydicom.uid.VLWholeSlideMicroscopyImageStorage", "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "pydicom.uid.VideoEndoscopicImageStorage", "pydicom.uid.VideoMicroscopicImageStorage", "pydicom.uid.VideoPhotographicImageStorage", "pydicom.uid.VisualAcuityMeasurementsStorage", "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pydicom.uid.XADefinedProcedureProtocolStorage", "pydicom.uid.XAPerformedProcedureProtocolStorage", "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.XRay3DAngiographicImageStorage", "pydicom.uid.XRay3DCraniofacialImageStorage", "pydicom.uid.XRayAngiographicImageStorage", "pydicom.uid.XRayRadiationDoseSRStorage", "pydicom.uid.XRayRadiofluoroscopicImageStorage", "pydicom.uid.generate_uid", "pydicom.uid.register_transfer_syntax", "pydicom.valuerep.DA", "pydicom.valuerep.DS", "pydicom.valuerep.DSdecimal", "pydicom.valuerep.DSfloat", "pydicom.valuerep.DT", "pydicom.valuerep.IS", "pydicom.valuerep.ISfloat", "pydicom.valuerep.PersonName", "pydicom.valuerep.TM", "pydicom.valuerep.VR", "pydicom.valuerep.format_number_as_ds", "pydicom.valuerep.is_valid_ds", "pydicom.values.convert_AE_string", "pydicom.values.convert_ATvalue", "pydicom.values.convert_DA_string", "pydicom.values.convert_DS_string", "pydicom.values.convert_DT_string", "pydicom.values.convert_IS_string", "pydicom.values.convert_OBvalue", "pydicom.values.convert_OWvalue", "pydicom.values.convert_PN", "pydicom.values.convert_SQ", "pydicom.values.convert_TM_string", "pydicom.values.convert_UI", "pydicom.values.convert_UN", "pydicom.values.convert_UR_string", "pydicom.values.convert_numbers", "pydicom.values.convert_single_string", "pydicom.values.convert_string", "pydicom.values.convert_tag", "pydicom.values.convert_text", "pydicom.values.convert_value", "pydicom.values.multi_string", "pydicom.waveforms.numpy_handler", "Bulk Data Handlers", "Pixel Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixel_data_handlers</span></code>)", "API Reference", "Miscellaneous (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.misc</span></code>)", "Overlay Data Handling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.overlays</span></code>)", "Pixel Data (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels</span></code>)", "Pixel Data Decoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.decoders</span></code>)", "Pixel Data Encoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.encoders</span></code>)", "Pixel Data Processing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.processing</span></code>)", "Pixel Data Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.utils</span></code>)", "Concepts and Context Groups (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sr</span></code>)", "UID Definitions and Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.uid</span></code>)", "Waveform Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.waveforms</span></code>)", "Release notes", "Version 0.9.2", "Version 0.9.3", "Version 0.9.4", "Version 0.9.5", "Version 0.9.6", "Version 0.9.7", "Version 0.9.8", "Version 0.9.9", "Version 1.0.0", "Version 1.1.0", "Version 1.2.0", "Version 1.3.0", "Version 1.4.0", "Version 1.4.1", "Version 2.0.0", "Version 2.1.0", "Version 2.1.1", "Version 2.2.0", "Version 2.3.0", "Version 2.4.0", "Version 3.0.0", "Computation times", "Contributing to pydicom", "Contributing a source code change", "Contributing a documentation change", "Dataset basics: read, access, modify, write", "Introduction to JSON support", "DICOM File-sets and DICOMDIR", "Tutorials", "How to install pydicom", "<em>Pixel Data</em> - Part 3: Compression and decompression", "<em>Pixel Data</em> - Part 2: Creation of pixel data", "<em>Pixel Data</em>", "<em>Pixel Data</em> - Part 1: Introduction and accessing", "Structured Reporting", "Waveforms"], "titleterms": {"": 23, "0": [578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599], "1": [578, 587, 588, 589, 590, 591, 592, 594, 595, 612], "12": 610, "2": [578, 579, 589, 593, 594, 595, 596, 597, 598, 610], "2000": [36, 609], "3": [578, 580, 590, 597, 599, 609], "4": [578, 581, 591, 592, 598], "5": [578, 582], "6": [578, 583], "7": [578, 584], "8": [578, 585, 610], "9": [578, 579, 580, 581, 582, 583, 584, 585, 586], "A": [24, 26], "Near": 37, "The": 606, "absorb_delimiter_item": 178, "access": [604, 612], "acquisitioncontextsrstorag": 293, "ad": [30, 34, 47, 604, 606], "add": 16, "add_dict_entri": [108, 109], "add_private_dict_entri": [110, 111], "addit": [578, 581, 608], "advancedblendingpresentationstatestorag": 294, "all": 47, "allow_ds_float": 88, "alltransfersyntax": 295, "ambulatoryecgwaveformstorag": 296, "an": [34, 612], "analys": 20, "ani": 604, "anonym": 17, "api": [54, 567], "appli": 606, "apply_color_lut": [215, 258], "apply_icc_profil": [216, 259], "apply_j2k_correct": 80, "apply_modality_lut": [217, 260], "apply_presentation_lut": [218, 261], "apply_rescal": [219, 262], "apply_voi": [220, 263], "apply_voi_lut": [221, 264], "apply_window": [222, 265], "ar": 23, "arterialpulsewaveformstorag": 297, "as_pixel_opt": [223, 270], "ask": 23, "assume_implicit_vr_switch": 89, "autorefractionmeasurementsstorag": 298, "avail": [36, 37, 38], "axial": 4, "base": [14, 71, 243, 244, 251, 252], "basetag": 289, "basic": 604, "basicstructureddisplaystorag": 299, "basictextsrstorag": 300, "basicvoiceaudiowaveformstorag": 301, "best": 43, "between": 20, "binari": 605, "bit": [36, 610], "blendingsoftcopypresentationstatestorag": 302, "bodypositionwaveformstorag": 303, "branch": [602, 603], "breastprojectionxrayimagestorageforpresent": 304, "breastprojectionxrayimagestorageforprocess": 305, "breasttomosynthesisimagestorag": 306, "buffer": 32, "bug": [578, 579, 580, 581, 583, 584, 585], "build": 603, "bulk": [67, 565], "can": 23, "cardiacelectrophysiologywaveformstorag": 312, "carmphotonelectronradiationrecordstorag": 307, "carmphotonelectronradiationstorag": 308, "categori": 604, "chang": [578, 579, 580, 581, 583, 584, 585, 586, 587, 589, 590, 591, 592, 594, 596, 597, 598, 599, 602, 603, 606], "changelog": [578, 593], "charact": 55, "charset": [55, 76, 77, 78, 79], "chestcadsrstorag": 313, "cite": 23, "class": [71, 576], "cli": [25, 26, 27], "code": [43, 286, 602], "codifi": [24, 26, 52], "collect": 287, "coloncadsrstorag": 314, "color": 50, "colorpalettestorag": 315, "colorsoftcopypresentationstatestorag": 316, "combin": [26, 27], "command": [24, 26, 28], "commit": [602, 603], "compositingplanarmprvolumetricpresentationstatestorag": 317, "comprehensive3dsrstorag": 318, "comprehensivesrstorag": 319, "compress": [41, 44, 45, 224, 271, 609, 612], "comput": [5, 13, 19, 21, 600], "computedradiographyimagestorag": 320, "concept": [288, 575], "conclus": [606, 609, 610, 612], "conda": 608, "config": [56, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "configur": [37, 56], "confocalmicroscopyimagestorag": 321, "confocalmicroscopytiledpyramidalimagestorag": 322, "contentassessmentresultsstorag": 323, "context": 575, "contrib": [578, 582, 585, 586], "contribut": [601, 602, 603], "contributor": [578, 586], "control": 612, "convert": [605, 612], "convert_ae_str": 543, "convert_atvalu": 544, "convert_color_spac": [225, 266], "convert_da_str": 545, "convert_ds_str": 546, "convert_dt_str": 547, "convert_encod": 76, "convert_is_str": 548, "convert_numb": 557, "convert_obvalu": 549, "convert_owvalu": 550, "convert_pn": 551, "convert_single_str": 558, "convert_sq": 552, "convert_str": 559, "convert_tag": 560, "convert_text": 561, "convert_tm_str": 553, "convert_ui": 554, "convert_un": 555, "convert_ur_str": 556, "convert_valu": 562, "convert_wrong_length_to_un": 90, "core": 42, "cornealtopographymapstorag": 324, "coron": 4, "correct_ambiguous_vr": 183, "correct_ambiguous_vr_el": 184, "creat": [67, 602, 603, 605, 606, 610], "create_icc_transform": [226, 267], "creation": 610, "ct": 4, "ctdefinedprocedureprotocolstorag": 309, "ctimagestorag": 310, "ctperformedprocedureprotocolstorag": 311, "current": 602, "d": 532, "da": 531, "data": [3, 8, 9, 12, 17, 29, 30, 31, 34, 35, 41, 44, 45, 47, 49, 50, 51, 57, 58, 60, 61, 67, 104, 105, 106, 107, 565, 566, 569, 570, 571, 572, 573, 574, 577, 605, 609, 610, 611, 612, 614], "data_element_callback": 91, "data_element_callback_kwarg": 92, "data_element_gener": 162, "data_element_offset_to_valu": 163, "datadict": [58, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "datael": [42, 128], "dataelem": [61, 128, 129, 130], "dataelement_from_raw": 129, "dataset": [9, 14, 42, 44, 49, 50, 51, 57, 59, 69, 70, 72, 74, 131, 132, 133, 134, 135, 604, 605, 609], "datetime_convers": 93, "dcmread": 164, "dcmwrite": 185, "debug": 94, "decod": [3, 29, 30, 31, 55, 66, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 571, 612, 614], "decode_byt": 77, "decode_data_sequ": 136, "decode_el": 78, "decoderunn": 243, "decompress": [41, 245, 272, 609], "definit": 576, "deflatedexplicitvrlittleendian": 332, "deflatedexplicitvrlittleendiandecod": 227, "deformablespatialregistrationstorag": 333, "defragment_data": 137, "delet": 604, "deprec": [578, 599], "dermoscopicphotographyimagestorag": 334, "develop": 608, "dicom": [0, 10, 11, 12, 16, 17, 20, 24, 26, 43, 47, 52, 58, 75, 606, 608, 614], "dicombytesio": 158, "dicomdir": 606, "dicomfil": 159, "dicomfilelik": 160, "dicomio": 161, "dicos2daitstorag": 325, "dicos3daitstorag": 326, "dicosctimagestorag": 327, "dicosdigitalxrayimagestorageforpresent": 328, "dicosdigitalxrayimagestorageforprocess": 329, "dicosquadrupoleresonancestorag": 330, "dicosthreatdetectionreportstorag": 331, "dictionari": [16, 47, 58], "dictionary_descript": 114, "dictionary_has_tag": 115, "dictionary_is_retir": 116, "dictionary_keyword": 117, "dictionary_vm": 112, "dictionary_vr": 113, "differ": 20, "digitalintraoralxrayimagestorageforpresent": 335, "digitalintraoralxrayimagestorageforprocess": 336, "digitalmammographyxrayimagestorageforpresent": 337, "digitalmammographyxrayimagestorageforprocess": 338, "digitalxrayimagestorageforpresent": 339, "digitalxrayimagestorageforprocess": 340, "directory_record": 172, "displai": [22, 47], "do": 23, "document": [53, 54, 578, 590, 602, 603], "doe": 23, "doubl": 610, "download": [602, 603, 608], "downsiz": 2, "ds_decim": 81, "ds_numpi": 82, "dsdecim": 533, "dsfloat": 534, "dt": 535, "eddycurrentimagestorag": 341, "eddycurrentmultiframeimagestorag": 342, "electromyogramwaveformstorag": 343, "electrooculogramwaveformstorag": 344, "element": [32, 42, 47, 60, 61, 62, 63, 64, 65, 66, 604], "encap": [67, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "encapsul": [67, 138, 609], "encapsulate_buff": 139, "encapsulate_extend": 140, "encapsulate_extended_buff": 141, "encapsulatedcdastorag": 345, "encapsulatedmtlstorag": 346, "encapsulatedobjstorag": 347, "encapsulatedpdfstorag": 348, "encapsulatedstlstorag": 349, "encod": [33, 34, 35, 36, 37, 38, 55, 246, 247, 248, 249, 250, 251, 252, 572, 614], "encode_str": 79, "encoderunn": 251, "enforc": 43, "enforce_valid_valu": 95, "enhanc": [578, 579, 580, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599], "enhancedcontinuousrtimagestorag": 351, "enhancedctimagestorag": 350, "enhancedmrcolorimagestorag": 352, "enhancedmrimagestorag": 353, "enhancedpetimagestorag": 354, "enhancedrtimagestorag": 355, "enhancedsrstorag": 356, "enhancedusvolumestorag": 357, "enhancedxaimagestorag": 358, "enhancedxrayradiationdosesrstorag": 360, "enhancedxrfimagestorag": 359, "entri": 47, "error": [68, 156], "exampl": [6, 24, 26, 36, 37, 38, 54, 69, 157, 604, 608], "except": 68, "exist": 606, "expand_ybr422": 273, "explicitvrbigendian": 361, "explicitvrbigendiandecod": 228, "explicitvrlittleendian": 362, "explicitvrlittleendiandecod": 229, "extend": [25, 26], "extensiblesrstorag": 363, "file": [0, 10, 17, 20, 24, 26, 39, 52, 75, 578, 582, 585, 586, 606, 608], "file_meta": 604, "filebas": [71, 158, 159, 160, 161], "filedataset": 132, "fileinst": 173, "filemetadataset": 133, "fileread": [72, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "fileset": [75, 172, 173, 174, 175, 176, 177, 606], "fileutil": [73, 178, 179, 180, 181, 182], "filewrit": [74, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "find_byt": 179, "find_delimit": 180, "fix": [578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599], "float": 610, "format": [8, 605], "format_number_as_d": 541, "fragment_fram": 142, "frame": 610, "frequent": 23, "from": [52, 605], "futur": 43, "future_behavior": 96, "gdcm": [33, 41, 608], "gdcm_handler": 209, "gener": [6, 23, 53], "general32bitecgwaveformstorag": 364, "generalaudiowaveformstorag": 365, "generalecgwaveformstorag": 366, "generate_filenam": 176, "generate_frag": 144, "generate_fragmented_fram": 143, "generate_fram": 145, "generate_pixel_data": 146, "generate_pixel_data_frag": 147, "generate_pixel_data_fram": 148, "generate_uid": 529, "genericimplanttemplatestorag": 367, "get": [54, 57, 604], "get_charset_fil": 104, "get_decod": 253, "get_encod": 254, "get_entri": 118, "get_expected_length": 274, "get_fram": 149, "get_frame_offset": 150, "get_image_pixel_id": 275, "get_j2k_paramet": 276, "get_nr_fram": 277, "get_palette_fil": 105, "get_path": 157, "get_private_entri": 119, "get_testdata_fil": [106, 107], "glossari": 39, "grayscal": 610, "grayscaleplanarmprvolumetricpresentationstatestorag": 368, "grayscalesoftcopypresentationstatestorag": 369, "group": 575, "guid": [26, 40, 46, 54], "guidelin": 53, "handl": [45, 569], "handler": [565, 566, 577], "hangingprotocolstorag": 375, "happen": [602, 603], "hemodynamicwaveformstorag": 376, "hevcm10p51": 370, "hevcmp51": 371, "hierarch": 0, "hint": 608, "how": [23, 608], "htj2k": 372, "htj2kdecod": 230, "htj2klossless": 373, "htj2klosslessdecod": 231, "htj2klosslessrpcl": 374, "htj2klosslessrpcldecod": 232, "i": [23, 536], "ignor": 83, "imag": [1, 2, 4, 6, 29, 36, 37, 38, 39, 48], "implantassemblytemplatestorag": 377, "implantationplansrstorag": 379, "implanttemplategroupstorag": 378, "implicitvrlittleendian": 380, "implicitvrlittleendiandecod": 233, "includ": 57, "inform": [11, 39], "infrastructur": [578, 587], "input": [6, 7], "instal": [23, 26, 27, 602, 608], "instanc": 606, "integ": 610, "interfac": 26, "intern": [578, 598, 599], "interpret": [36, 37], "intraocularlenscalculationsstorag": 381, "intravascularopticalcoherencetomographyimagestorageforpresent": 382, "intravascularopticalcoherencetomographyimagestorageforprocess": 383, "introduct": [26, 27, 43, 47, 48, 49, 50, 51, 52, 605, 612], "invalid_key_behavior": 85, "invalid_keyword_behavior": 84, "invaliddicomerror": 156, "inventorystorag": 384, "io": [70, 71, 73], "is_conformant_file_id": 177, "is_dicom": 205, "is_valid_d": 542, "isfloat": 537, "item": 16, "itemize_frag": 151, "itemize_fram": 152, "iter_pixel": [255, 278], "jpeg": [36, 37, 609], "jpeg2000": 385, "jpeg2000decod": 234, "jpeg2000encod": 246, "jpeg2000lossless": 386, "jpeg2000losslessdecod": 235, "jpeg2000losslessencod": 247, "jpeg2000mc": 387, "jpeg2000mclossless": 388, "jpeg2000transfersyntax": 389, "jpeg_ls_handl": 210, "jpegbaseline8bit": 390, "jpegbaseline8bitdecod": 236, "jpegextended12bit": 391, "jpegextended12bitdecod": 237, "jpeglossless": 395, "jpeglosslessdecod": 240, "jpeglosslesssv1": 396, "jpeglosslesssv1decod": 241, "jpeglslossless": 392, "jpeglslosslessdecod": 238, "jpeglslosslessencod": 248, "jpeglsnearlossless": 393, "jpeglsnearlosslessdecod": 239, "jpeglsnearlosslessencod": 249, "jpeglstransfersyntax": 394, "jpegtransfersyntax": 397, "jpiphtj2kreferenc": 398, "jpiphtj2kreferenceddefl": 399, "json": 605, "keratometrymeasurementsstorag": 400, "keyobjectselectiondocumentstorag": 401, "keyword_for_tag": 120, "l": [37, 609], "larg": 605, "legacyconvertedenhancedctimagestorag": 402, "legacyconvertedenhancedmrimagestorag": 403, "legacyconvertedenhancedpetimagestorag": 404, "length_of_undefined_length": 181, "lensometrymeasurementsstorag": 405, "librari": [602, 608], "licens": 23, "limit": 43, "line": 26, "list": [11, 576], "load": [4, 606], "lossless": [29, 36, 37, 38, 609], "lut": 50, "maculargridthicknessandvolumereportstorag": 423, "major": [43, 578, 579, 580, 581, 582, 583, 584, 585, 587], "make": [602, 603], "mammographycadsrstorag": 424, "mask_match": 121, "matplotlib": 48, "mediastoragedirectorystorag": 425, "memori": [14, 612], "meta": 39, "metadata": [6, 15, 612], "microscopybulksimpleannotationsstorag": 426, "minim": 612, "misc": [205, 206, 568], "miscellan": [29, 568], "modal": 50, "modifi": [604, 606], "modul": [39, 570], "mpeg2mphl": 406, "mpeg2mphlf": 407, "mpeg2mpml": 408, "mpeg2mpmlf": 409, "mpeg4hp41": 410, "mpeg4hp41bd": 411, "mpeg4hp41bdf": 412, "mpeg4hp41f": 413, "mpeg4hp422d": 414, "mpeg4hp422df": 415, "mpeg4hp423d": 416, "mpeg4hp423df": 417, "mpeg4hp42stereo": 418, "mpeg4hp42stereof": 419, "mpegtransfersyntax": 420, "mri": 2, "mrimagestorag": 421, "mrspectroscopystorag": 422, "multi": [62, 610], "multi_str": [186, 563], "multichannelrespiratorywaveformstorag": 431, "multiframegrayscalebytesecondarycaptureimagestorag": 427, "multiframegrayscalewordsecondarycaptureimagestorag": 428, "multiframesinglebitsecondarycaptureimagestorag": 429, "multiframetruecolorsecondarycaptureimagestorag": 430, "multiplevolumerenderingvolumetricpresentationstatestorag": 432, "multiv": [62, 207], "multivalu": 207, "name": 22, "ndarrai": 612, "new": [47, 578, 582, 602, 603, 606], "next": [602, 603, 604, 610, 612], "note": 578, "nuclearmedicineimagestorag": 433, "numpy_handl": [208, 211, 564], "o": 32, "offici": 608, "oper": 50, "ophthalmicaxialmeasurementsstorag": 434, "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorag": 435, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 436, "ophthalmicphotography16bitimagestorag": 437, "ophthalmicphotography8bitimagestorag": 438, "ophthalmicthicknessmapstorag": 439, "ophthalmictomographyimagestorag": 440, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 441, "option": [23, 24, 26, 29, 33, 56, 602, 608], "other": [26, 27, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588], "output": [6, 7, 8], "overlai": [49, 208, 569], "overlay_arrai": 49, "pack_bit": [256, 279], "packag": [43, 44, 609], "palett": 50, "paramet": [36, 37, 38], "parametricmapstorag": 444, "pars": 67, "parse_basic_offset": 153, "parse_frag": 154, "part": [24, 26, 609, 610, 612], "parti": [44, 609], "path": 604, "patientradiationdosesrstorag": 445, "performedimagingagentadministrationsrstorag": 446, "person": 22, "personnam": 538, "photoacousticimagestorag": 447, "photometr": [36, 37], "pillow": [41, 608], "pillow_handl": 212, "pip": 608, "pixel": [9, 29, 30, 31, 34, 35, 36, 37, 38, 39, 41, 44, 45, 50, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 566, 570, 571, 572, 573, 574, 609, 610, 611, 612], "pixel_arrai": [50, 257, 280], "pixel_data_handl": [97, 209, 210, 211, 212, 213, 214, 566], "pixel_dtyp": 281, "planar": 37, "plannedimagingagentadministrationsrstorag": 448, "plot": [3, 4, 9], "plugin": [29, 30, 33, 34, 36, 37, 38, 41], "positronemissiontomographyimagestorag": 449, "practic": 43, "prerequisit": [23, 45], "preview": [602, 603], "print": 8, "privat": [16, 47, 58], "private_dictionary_descript": 124, "private_dictionary_vm": 122, "private_dictionary_vr": 123, "privateblock": 134, "privatetransfersyntax": 450, "procedurelogstorag": 451, "process": [1, 6, 15, 29, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 573], "proof": 43, "protocolapprovalstorag": 452, "pseudocolorsoftcopypresentationstatestorag": 453, "pull": [602, 603], "pydicom": [2, 23, 24, 26, 27, 28, 33, 41, 42, 43, 44, 46, 47, 48, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 598, 599, 601, 608], "pydicom_implementation_uid": 442, "pydicom_root_uid": 443, "pyjpegl": [33, 41, 608], "pylibjpeg": [33, 36, 41, 608], "pylibjpeg_handl": 213, "pytest": 602, "python": [23, 32], "question": 23, "radiopharmaceuticalradiationdosesrstorag": 477, "rais": 86, "rawdatael": 130, "rawdatastorag": 478, "re_valid_uid": 454, "re_valid_uid_prefix": 455, "read": [9, 10, 11, 72, 604], "read_dataset": 165, "read_deferred_data_el": 166, "read_file_meta_info": 167, "read_item": 155, "read_parti": 168, "read_preambl": 169, "read_sequ": 170, "read_sequence_item": 171, "read_undefined_length_valu": 182, "realworldvaluemappingstorag": 479, "recordnod": 175, "refer": [54, 567], "register_transfer_syntax": 530, "releas": [578, 582, 608], "remov": [47, 578, 599, 606], "repeater_has_keyword": 125, "repeater_has_tag": 126, "report": 613, "represent": [37, 59, 60, 62, 63, 65], "request": [602, 603], "requir": [23, 30, 34, 602], "rescal": 50, "reset_data_element_callback": 98, "reshape_pixel_arrai": 282, "respiratorywaveformstorag": 480, "restructuredtext": 53, "rgb": 610, "rle": [29, 38, 609], "rle_handl": 214, "rlelossless": 456, "rlelosslessdecod": 242, "rlelosslessencod": 250, "rletransfersyntax": 457, "roboticarmradiationstorag": 481, "roboticradiationrecordstorag": 482, "routinescalpelectroencephalogramwaveformstorag": 483, "rtbeamsdeliveryinstructionstorag": 458, "rtbeamstreatmentrecordstorag": 459, "rtbrachyapplicationsetupdeliveryinstructionstorag": 460, "rtbrachytreatmentrecordstorag": 461, "rtdosestorag": 462, "rtimagestorag": 463, "rtionbeamstreatmentrecordstorag": 464, "rtionplanstorag": 465, "rtpatientpositionacquisitioninstructionstorag": 466, "rtphysicianintentstorag": 467, "rtplan": 11, "rtplanstorag": 468, "rtradiationrecordsetstorag": 469, "rtradiationsalvagerecordstorag": 470, "rtradiationsetdeliveryinstructionstorag": 471, "rtradiationsetstorag": 472, "rtsegmentannotationstorag": 473, "rtstructuresetstorag": 474, "rttreatmentpreparationstorag": 475, "rttreatmentsummaryrecordstorag": 476, "run": 602, "sagitt": 4, "scratch": 52, "secondarycaptureimagestorag": 487, "segmentationstorag": 488, "segmentedvolumerenderingvolumetricpresentationstatestorag": 489, "sequenc": [18, 42, 63, 285, 604], "set": [8, 10, 47, 75, 99, 606], "set_pixel_data": [268, 283], "show": [0, 14, 26, 28], "show_file_meta": 100, "sign": 610, "simpl": [24, 26], "simplifiedadultechosrstorag": 490, "singl": 17, "size_in_byt": 206, "sleepelectroencephalogramwaveformstorag": 491, "slice": 4, "smptest211020uncompressedinterlacedactivevideo": 484, "smptest211020uncompressedprogressiveactivevideo": 485, "smptest211030pcmdigitalaudio": 486, "sop": [576, 606], "sourc": 602, "space": 50, "spatialfiducialsstorag": 492, "spatialregistrationstorag": 493, "special": 65, "spectacleprescriptionreportstorag": 494, "sr": [286, 287, 288, 575], "stage": 606, "standard": 604, "start": 54, "step": [604, 610, 612], "stereometricrelationshipstorag": 495, "storag": 576, "store": 36, "structur": 613, "style": 53, "sub": 570, "subjectiverefractionmeasurementsstorag": 496, "suit": 602, "support": [44, 45, 605], "surfacescanmeshstorag": 497, "surfacescanpointcloudstorag": 498, "surfacesegmentationstorag": 499, "syntax": [44, 45, 576, 612], "tag": [42, 64, 289, 290, 291, 292], "tag_for_keyword": 127, "tag_in_except": 292, "test": [602, 608], "thi": [578, 581, 582], "third": [44, 609], "time": [5, 13, 19, 21, 600], "tm": 539, "tomotherapeuticradiationrecordstorag": 500, "tomotherapeuticradiationstorag": 501, "tractographyresultsstorag": 502, "transfer": [44, 45, 576, 612], "tree": 0, "tupletag": 291, "tutori": 607, "twelveleadecgwaveformstorag": 503, "type": [32, 53, 608], "uid": [293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 576], "ultrasoundimagestorag": 505, "ultrasoundmultiframeimagestorag": 506, "uncompressedtransfersyntax": 507, "unicod": 22, "unpack_bit": [269, 284], "unsign": 610, "us": [0, 2, 23, 44, 48, 52, 608], "usag": [45, 69, 575, 612], "use_ds_decim": 101, "use_ds_numpi": 102, "use_is_numpi": 103, "user": [46, 54], "util": [58, 67, 73, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 574, 576], "valid": [36, 37, 38, 43], "validate_file_meta": 135, "valu": [62, 63, 65, 66, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563], "valuerep": [65, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542], "variablemodalitylutsoftcopypresentationstatestorag": 513, "version": [23, 43, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 608], "videoendoscopicimagestorag": 514, "videomicroscopicimagestorag": 515, "videophotographicimagestorag": 516, "view": [48, 604], "visualacuitymeasurementsstorag": 517, "vlendoscopicimagestorag": 508, "vlmicroscopicimagestorag": 509, "vlphotographicimagestorag": 510, "vlslidecoordinatesmicroscopicimagestorag": 511, "vlwholeslidemicroscopyimagestorag": 512, "voi": 50, "volumerenderingvolumetricpresentationstatestorag": 518, "vr": [32, 540], "warn": 87, "waveform": [3, 51, 564, 577, 614], "waveform_arrai": 51, "what": [23, 602, 603], "widefieldophthalmicphotography3dcoordinatesimagestorag": 519, "widefieldophthalmicphotographystereographicprojectionimagestorag": 520, "window": 50, "work": [14, 18, 49, 50, 51, 605], "write": [12, 52, 53, 74, 602, 604], "write_atvalu": 187, "write_da": 188, "write_data_el": 196, "write_dataset": 197, "write_dt": 189, "write_file_meta_info": 198, "write_numb": 200, "write_number_str": 199, "write_obvalu": 190, "write_owvalu": 191, "write_pn": 192, "write_sequ": 201, "write_sequence_item": 202, "write_str": 203, "write_text": 204, "write_tm": 193, "write_ui": 194, "write_un": 195, "xadefinedprocedureprotocolstorag": 521, "xaperformedprocedureprotocolstorag": 522, "xaxrfgrayscalesoftcopypresentationstatestorag": 523, "xray3dangiographicimagestorag": 524, "xray3dcraniofacialimagestorag": 525, "xrayangiographicimagestorag": 526, "xrayradiationdosesrstorag": 527, "xrayradiofluoroscopicimagestorag": 528, "your": [43, 602, 603]}})