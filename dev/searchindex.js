Search.setIndex({"docnames": ["auto_examples/dicomtree", "auto_examples/image_processing/index", "auto_examples/image_processing/plot_downsize_image", "auto_examples/image_processing/plot_waveforms", "auto_examples/image_processing/reslice", "auto_examples/image_processing/sg_execution_times", "auto_examples/index", "auto_examples/input_output/index", "auto_examples/input_output/plot_printing_dataset", "auto_examples/input_output/plot_read_dicom", "auto_examples/input_output/plot_read_fileset", "auto_examples/input_output/plot_read_rtplan", "auto_examples/input_output/plot_write_dicom", "auto_examples/input_output/sg_execution_times", "auto_examples/memory_dataset", "auto_examples/metadata_processing/index", "auto_examples/metadata_processing/plot_add_dict_entries", "auto_examples/metadata_processing/plot_anonymize", "auto_examples/metadata_processing/plot_sequences", "auto_examples/metadata_processing/sg_execution_times", "auto_examples/plot_dicom_difference", "auto_examples/sg_execution_times", "auto_examples/show_charset_name", "faq/index", "guides/cli/cli_codify", "guides/cli/cli_dev", "guides/cli/cli_guide", "guides/cli/cli_intro", "guides/cli/cli_show", "guides/decoding/decoder_options", "guides/decoding/decoder_plugins", "guides/decoding/index", "guides/element_value_types", "guides/encoding/encoder_plugin_options", "guides/encoding/encoder_plugins", "guides/encoding/index", "guides/encoding/jpeg_ls", "guides/encoding/rle_lossless", "guides/glossary", "guides/index", "guides/writing_documentation", "index", "old/base_element", "old/best_practices", "old/getting_started", "old/image_data_compression", "old/image_data_handlers", "old/private_data_elements", "old/pydicom_user_guide", "old/ref_guide", "old/viewing_images", "old/working_with_overlays", "old/working_with_pixel_data", "old/working_with_waveforms", "old/writing_files", "reference/charset", "reference/config", "reference/data", "reference/datadict", "reference/dataset", "reference/elem", "reference/elem.dataelem", "reference/elem.multival", "reference/elem.sequence", "reference/elem.tag", "reference/elem.valuerep", "reference/elem.values", "reference/encaps", "reference/errors", "reference/examples", "reference/fileio", "reference/fileio.base", "reference/fileio.read", "reference/fileio.util", "reference/fileio.write", "reference/fileset", "reference/generated/pydicom.charset.convert_encodings", "reference/generated/pydicom.charset.decode_bytes", "reference/generated/pydicom.charset.decode_element", "reference/generated/pydicom.charset.encode_string", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS", "reference/generated/pydicom.config.DS_decimal", "reference/generated/pydicom.config.DS_numpy", "reference/generated/pydicom.config.IGNORE", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR", "reference/generated/pydicom.config.RAISE", "reference/generated/pydicom.config.WARN", "reference/generated/pydicom.config.allow_DS_float", "reference/generated/pydicom.config.assume_implicit_vr_switch", "reference/generated/pydicom.config.convert_wrong_length_to_UN", "reference/generated/pydicom.config.data_element_callback", "reference/generated/pydicom.config.data_element_callback_kwargs", "reference/generated/pydicom.config.datetime_conversion", "reference/generated/pydicom.config.debug", "reference/generated/pydicom.config.enforce_valid_values", "reference/generated/pydicom.config.future_behavior", "reference/generated/pydicom.config.pixel_data_handlers", "reference/generated/pydicom.config.reset_data_element_callback", "reference/generated/pydicom.config.settings", "reference/generated/pydicom.config.show_file_meta", "reference/generated/pydicom.config.use_DS_decimal", "reference/generated/pydicom.config.use_DS_numpy", "reference/generated/pydicom.config.use_IS_numpy", "reference/generated/pydicom.data.get_charset_files", "reference/generated/pydicom.data.get_palette_files", "reference/generated/pydicom.data.get_testdata_file", "reference/generated/pydicom.data.get_testdata_files", "reference/generated/pydicom.datadict.add_dict_entries", "reference/generated/pydicom.datadict.add_dict_entry", "reference/generated/pydicom.datadict.add_private_dict_entries", "reference/generated/pydicom.datadict.add_private_dict_entry", "reference/generated/pydicom.datadict.dictionary_VM", "reference/generated/pydicom.datadict.dictionary_VR", "reference/generated/pydicom.datadict.dictionary_description", "reference/generated/pydicom.datadict.dictionary_has_tag", "reference/generated/pydicom.datadict.dictionary_is_retired", "reference/generated/pydicom.datadict.dictionary_keyword", "reference/generated/pydicom.datadict.get_entry", "reference/generated/pydicom.datadict.get_private_entry", "reference/generated/pydicom.datadict.keyword_for_tag", "reference/generated/pydicom.datadict.mask_match", "reference/generated/pydicom.datadict.private_dictionary_VM", "reference/generated/pydicom.datadict.private_dictionary_VR", "reference/generated/pydicom.datadict.private_dictionary_description", "reference/generated/pydicom.datadict.repeater_has_keyword", "reference/generated/pydicom.datadict.repeater_has_tag", "reference/generated/pydicom.datadict.tag_for_keyword", "reference/generated/pydicom.dataelem.DataElement", "reference/generated/pydicom.dataelem.DataElement_from_raw", "reference/generated/pydicom.dataelem.RawDataElement", "reference/generated/pydicom.dataset.Dataset", "reference/generated/pydicom.dataset.FileDataset", "reference/generated/pydicom.dataset.FileMetaDataset", "reference/generated/pydicom.dataset.PrivateBlock", "reference/generated/pydicom.dataset.validate_file_meta", "reference/generated/pydicom.encaps.decode_data_sequence", "reference/generated/pydicom.encaps.defragment_data", "reference/generated/pydicom.encaps.encapsulate", "reference/generated/pydicom.encaps.encapsulate_extended", "reference/generated/pydicom.encaps.fragment_frame", "reference/generated/pydicom.encaps.generate_fragmented_frames", "reference/generated/pydicom.encaps.generate_fragments", "reference/generated/pydicom.encaps.generate_frames", "reference/generated/pydicom.encaps.generate_pixel_data", "reference/generated/pydicom.encaps.generate_pixel_data_fragment", "reference/generated/pydicom.encaps.generate_pixel_data_frame", "reference/generated/pydicom.encaps.get_frame", "reference/generated/pydicom.encaps.get_frame_offsets", "reference/generated/pydicom.encaps.itemize_fragment", "reference/generated/pydicom.encaps.itemize_frame", "reference/generated/pydicom.encaps.parse_basic_offsets", "reference/generated/pydicom.encaps.parse_fragments", "reference/generated/pydicom.encaps.read_item", "reference/generated/pydicom.errors.InvalidDicomError", "reference/generated/pydicom.filebase.DicomBytesIO", "reference/generated/pydicom.filebase.DicomFile", "reference/generated/pydicom.filebase.DicomFileLike", "reference/generated/pydicom.filebase.DicomIO", "reference/generated/pydicom.filereader.data_element_generator", "reference/generated/pydicom.filereader.data_element_offset_to_value", "reference/generated/pydicom.filereader.dcmread", "reference/generated/pydicom.filereader.read_dataset", "reference/generated/pydicom.filereader.read_deferred_data_element", "reference/generated/pydicom.filereader.read_file_meta_info", "reference/generated/pydicom.filereader.read_partial", "reference/generated/pydicom.filereader.read_preamble", "reference/generated/pydicom.filereader.read_sequence", "reference/generated/pydicom.filereader.read_sequence_item", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS", "reference/generated/pydicom.fileset.FileInstance", "reference/generated/pydicom.fileset.FileSet", "reference/generated/pydicom.fileset.RecordNode", "reference/generated/pydicom.fileset.generate_filename", "reference/generated/pydicom.fileset.is_conformant_file_id", "reference/generated/pydicom.fileutil.absorb_delimiter_item", "reference/generated/pydicom.fileutil.find_bytes", "reference/generated/pydicom.fileutil.find_delimiter", "reference/generated/pydicom.fileutil.length_of_undefined_length", "reference/generated/pydicom.fileutil.read_undefined_length_value", "reference/generated/pydicom.filewriter.correct_ambiguous_vr", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element", "reference/generated/pydicom.filewriter.dcmwrite", "reference/generated/pydicom.filewriter.multi_string", "reference/generated/pydicom.filewriter.write_ATvalue", "reference/generated/pydicom.filewriter.write_DA", "reference/generated/pydicom.filewriter.write_DT", "reference/generated/pydicom.filewriter.write_OBvalue", "reference/generated/pydicom.filewriter.write_OWvalue", "reference/generated/pydicom.filewriter.write_PN", "reference/generated/pydicom.filewriter.write_TM", "reference/generated/pydicom.filewriter.write_UI", "reference/generated/pydicom.filewriter.write_UN", "reference/generated/pydicom.filewriter.write_data_element", "reference/generated/pydicom.filewriter.write_dataset", "reference/generated/pydicom.filewriter.write_file_meta_info", "reference/generated/pydicom.filewriter.write_number_string", "reference/generated/pydicom.filewriter.write_numbers", "reference/generated/pydicom.filewriter.write_sequence", "reference/generated/pydicom.filewriter.write_sequence_item", "reference/generated/pydicom.filewriter.write_string", "reference/generated/pydicom.filewriter.write_text", "reference/generated/pydicom.misc.is_dicom", "reference/generated/pydicom.misc.size_in_bytes", "reference/generated/pydicom.multival.MultiValue", "reference/generated/pydicom.overlays.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut", "reference/generated/pydicom.pixel_data_handlers.apply_rescale", "reference/generated/pydicom.pixel_data_handlers.apply_voi", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut", "reference/generated/pydicom.pixel_data_handlers.apply_windowing", "reference/generated/pydicom.pixel_data_handlers.convert_color_space", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler", "reference/generated/pydicom.pixel_data_handlers.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.pillow_handler", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler", "reference/generated/pydicom.pixel_data_handlers.rle_handler", "reference/generated/pydicom.pixel_data_handlers.util", "reference/generated/pydicom.pixels.as_pixel_options", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner", "reference/generated/pydicom.pixels.decoders.base.Decoder", "reference/generated/pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder", "reference/generated/pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.base.HTJ2KDecoder", "reference/generated/pydicom.pixels.decoders.base.HTJ2KLosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.HTJ2KLosslessRPCLDecoder", "reference/generated/pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEG2000Decoder", "reference/generated/pydicom.pixels.decoders.base.JPEG2000LosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGBaseline8BitDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGExtended12BitDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGLSLosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGLSNearLosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGLosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGLosslessSV1Decoder", "reference/generated/pydicom.pixels.decoders.base.RLELosslessDecoder", "reference/generated/pydicom.pixels.encoders.base.EncodeRunner", "reference/generated/pydicom.pixels.encoders.base.Encoder", "reference/generated/pydicom.pixels.encoders.base.JPEGLSLosslessEncoder", "reference/generated/pydicom.pixels.encoders.base.JPEGLSNearLosslessEncoder", "reference/generated/pydicom.pixels.encoders.base.RLELosslessEncoder", "reference/generated/pydicom.pixels.get_decoder", "reference/generated/pydicom.pixels.get_encoder", "reference/generated/pydicom.pixels.iter_pixels", "reference/generated/pydicom.pixels.pixel_array", "reference/generated/pydicom.sequence.Sequence", "reference/generated/pydicom.tag.BaseTag", "reference/generated/pydicom.tag.Tag", "reference/generated/pydicom.tag.TupleTag", "reference/generated/pydicom.tag.tag_in_exception", "reference/generated/pydicom.uid.AcquisitionContextSRStorage", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage", "reference/generated/pydicom.uid.AllTransferSyntaxes", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage", "reference/generated/pydicom.uid.BasicTextSRStorage", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.BodyPositionWaveformStorage", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.CTImageStorage", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage", "reference/generated/pydicom.uid.ChestCADSRStorage", "reference/generated/pydicom.uid.ColonCADSRStorage", "reference/generated/pydicom.uid.ColorPaletteStorage", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.Comprehensive3DSRStorage", "reference/generated/pydicom.uid.ComprehensiveSRStorage", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage", "reference/generated/pydicom.uid.CornealTopographyMapStorage", "reference/generated/pydicom.uid.DICOS2DAITStorage", "reference/generated/pydicom.uid.DICOS3DAITStorage", "reference/generated/pydicom.uid.DICOSCTImageStorage", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.EddyCurrentImageStorage", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage", "reference/generated/pydicom.uid.EncapsulatedCDAStorage", "reference/generated/pydicom.uid.EncapsulatedMTLStorage", "reference/generated/pydicom.uid.EncapsulatedOBJStorage", "reference/generated/pydicom.uid.EncapsulatedPDFStorage", "reference/generated/pydicom.uid.EncapsulatedSTLStorage", "reference/generated/pydicom.uid.EnhancedCTImageStorage", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage", "reference/generated/pydicom.uid.EnhancedMRImageStorage", "reference/generated/pydicom.uid.EnhancedPETImageStorage", "reference/generated/pydicom.uid.EnhancedRTImageStorage", "reference/generated/pydicom.uid.EnhancedSRStorage", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage", "reference/generated/pydicom.uid.EnhancedXAImageStorage", "reference/generated/pydicom.uid.EnhancedXRFImageStorage", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.ExplicitVRBigEndian", "reference/generated/pydicom.uid.ExplicitVRLittleEndian", "reference/generated/pydicom.uid.ExtensibleSRStorage", "reference/generated/pydicom.uid.General32bitECGWaveformStorage", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage", "reference/generated/pydicom.uid.GeneralECGWaveformStorage", "reference/generated/pydicom.uid.GenericImplantTemplateStorage", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.HEVCM10P51", "reference/generated/pydicom.uid.HEVCMP51", "reference/generated/pydicom.uid.HTJ2K", "reference/generated/pydicom.uid.HTJ2KLossless", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL", "reference/generated/pydicom.uid.HangingProtocolStorage", "reference/generated/pydicom.uid.HemodynamicWaveformStorage", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage", "reference/generated/pydicom.uid.ImplantationPlanSRStorage", "reference/generated/pydicom.uid.ImplicitVRLittleEndian", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pydicom.uid.InventoryStorage", "reference/generated/pydicom.uid.JPEG2000", "reference/generated/pydicom.uid.JPEG2000Lossless", "reference/generated/pydicom.uid.JPEG2000MC", "reference/generated/pydicom.uid.JPEG2000MCLossless", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes", "reference/generated/pydicom.uid.JPEGBaseline8Bit", "reference/generated/pydicom.uid.JPEGExtended12Bit", "reference/generated/pydicom.uid.JPEGLSLossless", "reference/generated/pydicom.uid.JPEGLSNearLossless", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes", "reference/generated/pydicom.uid.JPEGLossless", "reference/generated/pydicom.uid.JPEGLosslessSV1", "reference/generated/pydicom.uid.JPEGTransferSyntaxes", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pydicom.uid.LensometryMeasurementsStorage", "reference/generated/pydicom.uid.MPEG2MPHL", "reference/generated/pydicom.uid.MPEG2MPHLF", "reference/generated/pydicom.uid.MPEG2MPML", "reference/generated/pydicom.uid.MPEG2MPMLF", "reference/generated/pydicom.uid.MPEG4HP41", "reference/generated/pydicom.uid.MPEG4HP41BD", "reference/generated/pydicom.uid.MPEG4HP41BDF", "reference/generated/pydicom.uid.MPEG4HP41F", "reference/generated/pydicom.uid.MPEG4HP422D", "reference/generated/pydicom.uid.MPEG4HP422DF", "reference/generated/pydicom.uid.MPEG4HP423D", "reference/generated/pydicom.uid.MPEG4HP423DF", "reference/generated/pydicom.uid.MPEG4HP42STEREO", "reference/generated/pydicom.uid.MPEG4HP42STEREOF", "reference/generated/pydicom.uid.MPEGTransferSyntaxes", "reference/generated/pydicom.uid.MRImageStorage", "reference/generated/pydicom.uid.MRSpectroscopyStorage", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pydicom.uid.MammographyCADSRStorage", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.NuclearMedicineImageStorage", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID", "reference/generated/pydicom.uid.ParametricMapStorage", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PhotoacousticImageStorage", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage", "reference/generated/pydicom.uid.PrivateTransferSyntaxes", "reference/generated/pydicom.uid.ProcedureLogStorage", "reference/generated/pydicom.uid.ProtocolApprovalStorage", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.RE_VALID_UID", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX", "reference/generated/pydicom.uid.RLELossless", "reference/generated/pydicom.uid.RLETransferSyntaxes", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage", "reference/generated/pydicom.uid.RTDoseStorage", "reference/generated/pydicom.uid.RTImageStorage", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTIonPlanStorage", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "reference/generated/pydicom.uid.RTPhysicianIntentStorage", "reference/generated/pydicom.uid.RTPlanStorage", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTRadiationSetStorage", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage", "reference/generated/pydicom.uid.RTStructureSetStorage", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pydicom.uid.RawDataStorage", "reference/generated/pydicom.uid.RealWorldValueMappingStorage", "reference/generated/pydicom.uid.RespiratoryWaveformStorage", "reference/generated/pydicom.uid.RoboticArmRadiationStorage", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage", "reference/generated/pydicom.uid.SegmentationStorage", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SpatialFiducialsStorage", "reference/generated/pydicom.uid.SpatialRegistrationStorage", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage", "reference/generated/pydicom.uid.StereometricRelationshipStorage", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage", "reference/generated/pydicom.uid.SurfaceScanMeshStorage", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage", "reference/generated/pydicom.uid.SurfaceSegmentationStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage", "reference/generated/pydicom.uid.TractographyResultsStorage", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage", "reference/generated/pydicom.uid.UID", "reference/generated/pydicom.uid.UltrasoundImageStorage", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes", "reference/generated/pydicom.uid.VLEndoscopicImageStorage", "reference/generated/pydicom.uid.VLMicroscopicImageStorage", "reference/generated/pydicom.uid.VLPhotographicImageStorage", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage", "reference/generated/pydicom.uid.VideoPhotographicImageStorage", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage", "reference/generated/pydicom.uid.XRayAngiographicImageStorage", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage", "reference/generated/pydicom.uid.generate_uid", "reference/generated/pydicom.uid.register_transfer_syntax", "reference/generated/pydicom.valuerep.DA", "reference/generated/pydicom.valuerep.DS", "reference/generated/pydicom.valuerep.DSdecimal", "reference/generated/pydicom.valuerep.DSfloat", "reference/generated/pydicom.valuerep.DT", "reference/generated/pydicom.valuerep.IS", "reference/generated/pydicom.valuerep.ISfloat", "reference/generated/pydicom.valuerep.PersonName", "reference/generated/pydicom.valuerep.TM", "reference/generated/pydicom.valuerep.VR", "reference/generated/pydicom.valuerep.format_number_as_ds", "reference/generated/pydicom.valuerep.is_valid_ds", "reference/generated/pydicom.values.convert_AE_string", "reference/generated/pydicom.values.convert_ATvalue", "reference/generated/pydicom.values.convert_DA_string", "reference/generated/pydicom.values.convert_DS_string", "reference/generated/pydicom.values.convert_DT_string", "reference/generated/pydicom.values.convert_IS_string", "reference/generated/pydicom.values.convert_OBvalue", "reference/generated/pydicom.values.convert_OWvalue", "reference/generated/pydicom.values.convert_PN", "reference/generated/pydicom.values.convert_SQ", "reference/generated/pydicom.values.convert_TM_string", "reference/generated/pydicom.values.convert_UI", "reference/generated/pydicom.values.convert_UN", "reference/generated/pydicom.values.convert_UR_string", "reference/generated/pydicom.values.convert_numbers", "reference/generated/pydicom.values.convert_single_string", "reference/generated/pydicom.values.convert_string", "reference/generated/pydicom.values.convert_tag", "reference/generated/pydicom.values.convert_text", "reference/generated/pydicom.values.convert_value", "reference/generated/pydicom.values.multi_string", "reference/generated/pydicom.waveforms.numpy_handler", "reference/handlers", "reference/handlers.pixel_data", "reference/index", "reference/misc", "reference/overlays", "reference/pixels", "reference/pixels.decoders", "reference/pixels.encoders", "reference/uid", "reference/waveforms", "release_notes/index", "release_notes/v0.9.2", "release_notes/v0.9.3", "release_notes/v0.9.4", "release_notes/v0.9.5", "release_notes/v0.9.6", "release_notes/v0.9.7", "release_notes/v0.9.8", "release_notes/v0.9.9", "release_notes/v1.0.0", "release_notes/v1.1.0", "release_notes/v1.2.0", "release_notes/v1.3.0", "release_notes/v1.4.0", "release_notes/v1.4.1", "release_notes/v2.0.0", "release_notes/v2.1.0", "release_notes/v2.1.1", "release_notes/v2.2.0", "release_notes/v2.3.0", "release_notes/v2.4.0", "release_notes/v3.0.0", "sg_execution_times", "tutorials/contributing", "tutorials/contributing_code", "tutorials/contributing_docs", "tutorials/dataset_basics", "tutorials/dicom_json", "tutorials/filesets", "tutorials/index", "tutorials/installation", "tutorials/pixel_data/compressing", "tutorials/sr_basics", "tutorials/waveforms"], "filenames": ["auto_examples/dicomtree.rst", "auto_examples/image_processing/index.rst", "auto_examples/image_processing/plot_downsize_image.rst", "auto_examples/image_processing/plot_waveforms.rst", "auto_examples/image_processing/reslice.rst", "auto_examples/image_processing/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/input_output/index.rst", "auto_examples/input_output/plot_printing_dataset.rst", "auto_examples/input_output/plot_read_dicom.rst", "auto_examples/input_output/plot_read_fileset.rst", "auto_examples/input_output/plot_read_rtplan.rst", "auto_examples/input_output/plot_write_dicom.rst", "auto_examples/input_output/sg_execution_times.rst", "auto_examples/memory_dataset.rst", "auto_examples/metadata_processing/index.rst", "auto_examples/metadata_processing/plot_add_dict_entries.rst", "auto_examples/metadata_processing/plot_anonymize.rst", "auto_examples/metadata_processing/plot_sequences.rst", "auto_examples/metadata_processing/sg_execution_times.rst", "auto_examples/plot_dicom_difference.rst", "auto_examples/sg_execution_times.rst", "auto_examples/show_charset_name.rst", "faq/index.rst", "guides/cli/cli_codify.rst", "guides/cli/cli_dev.rst", "guides/cli/cli_guide.rst", "guides/cli/cli_intro.rst", "guides/cli/cli_show.rst", "guides/decoding/decoder_options.rst", "guides/decoding/decoder_plugins.rst", "guides/decoding/index.rst", "guides/element_value_types.rst", "guides/encoding/encoder_plugin_options.rst", "guides/encoding/encoder_plugins.rst", "guides/encoding/index.rst", "guides/encoding/jpeg_ls.rst", "guides/encoding/rle_lossless.rst", "guides/glossary.rst", "guides/index.rst", "guides/writing_documentation.rst", "index.rst", "old/base_element.rst", "old/best_practices.rst", "old/getting_started.rst", "old/image_data_compression.rst", "old/image_data_handlers.rst", "old/private_data_elements.rst", "old/pydicom_user_guide.rst", "old/ref_guide.rst", "old/viewing_images.rst", "old/working_with_overlays.rst", "old/working_with_pixel_data.rst", "old/working_with_waveforms.rst", "old/writing_files.rst", "reference/charset.rst", "reference/config.rst", "reference/data.rst", "reference/datadict.rst", "reference/dataset.rst", "reference/elem.rst", "reference/elem.dataelem.rst", "reference/elem.multival.rst", "reference/elem.sequence.rst", "reference/elem.tag.rst", "reference/elem.valuerep.rst", "reference/elem.values.rst", "reference/encaps.rst", "reference/errors.rst", "reference/examples.rst", "reference/fileio.rst", "reference/fileio.base.rst", "reference/fileio.read.rst", "reference/fileio.util.rst", "reference/fileio.write.rst", "reference/fileset.rst", "reference/generated/pydicom.charset.convert_encodings.rst", "reference/generated/pydicom.charset.decode_bytes.rst", "reference/generated/pydicom.charset.decode_element.rst", "reference/generated/pydicom.charset.encode_string.rst", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS.rst", "reference/generated/pydicom.config.DS_decimal.rst", "reference/generated/pydicom.config.DS_numpy.rst", "reference/generated/pydicom.config.IGNORE.rst", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR.rst", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR.rst", "reference/generated/pydicom.config.RAISE.rst", "reference/generated/pydicom.config.WARN.rst", "reference/generated/pydicom.config.allow_DS_float.rst", "reference/generated/pydicom.config.assume_implicit_vr_switch.rst", "reference/generated/pydicom.config.convert_wrong_length_to_UN.rst", "reference/generated/pydicom.config.data_element_callback.rst", "reference/generated/pydicom.config.data_element_callback_kwargs.rst", "reference/generated/pydicom.config.datetime_conversion.rst", "reference/generated/pydicom.config.debug.rst", "reference/generated/pydicom.config.enforce_valid_values.rst", "reference/generated/pydicom.config.future_behavior.rst", "reference/generated/pydicom.config.pixel_data_handlers.rst", "reference/generated/pydicom.config.reset_data_element_callback.rst", "reference/generated/pydicom.config.settings.rst", "reference/generated/pydicom.config.show_file_meta.rst", "reference/generated/pydicom.config.use_DS_decimal.rst", "reference/generated/pydicom.config.use_DS_numpy.rst", "reference/generated/pydicom.config.use_IS_numpy.rst", "reference/generated/pydicom.data.get_charset_files.rst", "reference/generated/pydicom.data.get_palette_files.rst", "reference/generated/pydicom.data.get_testdata_file.rst", "reference/generated/pydicom.data.get_testdata_files.rst", "reference/generated/pydicom.datadict.add_dict_entries.rst", "reference/generated/pydicom.datadict.add_dict_entry.rst", "reference/generated/pydicom.datadict.add_private_dict_entries.rst", "reference/generated/pydicom.datadict.add_private_dict_entry.rst", "reference/generated/pydicom.datadict.dictionary_VM.rst", "reference/generated/pydicom.datadict.dictionary_VR.rst", "reference/generated/pydicom.datadict.dictionary_description.rst", "reference/generated/pydicom.datadict.dictionary_has_tag.rst", "reference/generated/pydicom.datadict.dictionary_is_retired.rst", "reference/generated/pydicom.datadict.dictionary_keyword.rst", "reference/generated/pydicom.datadict.get_entry.rst", "reference/generated/pydicom.datadict.get_private_entry.rst", "reference/generated/pydicom.datadict.keyword_for_tag.rst", "reference/generated/pydicom.datadict.mask_match.rst", "reference/generated/pydicom.datadict.private_dictionary_VM.rst", "reference/generated/pydicom.datadict.private_dictionary_VR.rst", "reference/generated/pydicom.datadict.private_dictionary_description.rst", "reference/generated/pydicom.datadict.repeater_has_keyword.rst", "reference/generated/pydicom.datadict.repeater_has_tag.rst", "reference/generated/pydicom.datadict.tag_for_keyword.rst", "reference/generated/pydicom.dataelem.DataElement.rst", "reference/generated/pydicom.dataelem.DataElement_from_raw.rst", "reference/generated/pydicom.dataelem.RawDataElement.rst", "reference/generated/pydicom.dataset.Dataset.rst", "reference/generated/pydicom.dataset.FileDataset.rst", "reference/generated/pydicom.dataset.FileMetaDataset.rst", "reference/generated/pydicom.dataset.PrivateBlock.rst", "reference/generated/pydicom.dataset.validate_file_meta.rst", "reference/generated/pydicom.encaps.decode_data_sequence.rst", "reference/generated/pydicom.encaps.defragment_data.rst", "reference/generated/pydicom.encaps.encapsulate.rst", "reference/generated/pydicom.encaps.encapsulate_extended.rst", "reference/generated/pydicom.encaps.fragment_frame.rst", "reference/generated/pydicom.encaps.generate_fragmented_frames.rst", "reference/generated/pydicom.encaps.generate_fragments.rst", "reference/generated/pydicom.encaps.generate_frames.rst", "reference/generated/pydicom.encaps.generate_pixel_data.rst", "reference/generated/pydicom.encaps.generate_pixel_data_fragment.rst", "reference/generated/pydicom.encaps.generate_pixel_data_frame.rst", "reference/generated/pydicom.encaps.get_frame.rst", "reference/generated/pydicom.encaps.get_frame_offsets.rst", "reference/generated/pydicom.encaps.itemize_fragment.rst", "reference/generated/pydicom.encaps.itemize_frame.rst", "reference/generated/pydicom.encaps.parse_basic_offsets.rst", "reference/generated/pydicom.encaps.parse_fragments.rst", "reference/generated/pydicom.encaps.read_item.rst", "reference/generated/pydicom.errors.InvalidDicomError.rst", "reference/generated/pydicom.filebase.DicomBytesIO.rst", "reference/generated/pydicom.filebase.DicomFile.rst", "reference/generated/pydicom.filebase.DicomFileLike.rst", "reference/generated/pydicom.filebase.DicomIO.rst", "reference/generated/pydicom.filereader.data_element_generator.rst", "reference/generated/pydicom.filereader.data_element_offset_to_value.rst", "reference/generated/pydicom.filereader.dcmread.rst", "reference/generated/pydicom.filereader.read_dataset.rst", "reference/generated/pydicom.filereader.read_deferred_data_element.rst", "reference/generated/pydicom.filereader.read_file_meta_info.rst", "reference/generated/pydicom.filereader.read_partial.rst", "reference/generated/pydicom.filereader.read_preamble.rst", "reference/generated/pydicom.filereader.read_sequence.rst", "reference/generated/pydicom.filereader.read_sequence_item.rst", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS.rst", "reference/generated/pydicom.fileset.FileInstance.rst", "reference/generated/pydicom.fileset.FileSet.rst", "reference/generated/pydicom.fileset.RecordNode.rst", "reference/generated/pydicom.fileset.generate_filename.rst", "reference/generated/pydicom.fileset.is_conformant_file_id.rst", "reference/generated/pydicom.fileutil.absorb_delimiter_item.rst", "reference/generated/pydicom.fileutil.find_bytes.rst", "reference/generated/pydicom.fileutil.find_delimiter.rst", "reference/generated/pydicom.fileutil.length_of_undefined_length.rst", "reference/generated/pydicom.fileutil.read_undefined_length_value.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element.rst", "reference/generated/pydicom.filewriter.dcmwrite.rst", "reference/generated/pydicom.filewriter.multi_string.rst", "reference/generated/pydicom.filewriter.write_ATvalue.rst", "reference/generated/pydicom.filewriter.write_DA.rst", "reference/generated/pydicom.filewriter.write_DT.rst", "reference/generated/pydicom.filewriter.write_OBvalue.rst", "reference/generated/pydicom.filewriter.write_OWvalue.rst", "reference/generated/pydicom.filewriter.write_PN.rst", "reference/generated/pydicom.filewriter.write_TM.rst", "reference/generated/pydicom.filewriter.write_UI.rst", "reference/generated/pydicom.filewriter.write_UN.rst", "reference/generated/pydicom.filewriter.write_data_element.rst", "reference/generated/pydicom.filewriter.write_dataset.rst", "reference/generated/pydicom.filewriter.write_file_meta_info.rst", "reference/generated/pydicom.filewriter.write_number_string.rst", "reference/generated/pydicom.filewriter.write_numbers.rst", "reference/generated/pydicom.filewriter.write_sequence.rst", "reference/generated/pydicom.filewriter.write_sequence_item.rst", "reference/generated/pydicom.filewriter.write_string.rst", "reference/generated/pydicom.filewriter.write_text.rst", "reference/generated/pydicom.misc.is_dicom.rst", "reference/generated/pydicom.misc.size_in_bytes.rst", "reference/generated/pydicom.multival.MultiValue.rst", "reference/generated/pydicom.overlays.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_rescale.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_windowing.rst", "reference/generated/pydicom.pixel_data_handlers.convert_color_space.rst", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler.rst", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler.rst", "reference/generated/pydicom.pixel_data_handlers.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pillow_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler.rst", "reference/generated/pydicom.pixel_data_handlers.rle_handler.rst", "reference/generated/pydicom.pixel_data_handlers.util.rst", "reference/generated/pydicom.pixels.as_pixel_options.rst", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner.rst", "reference/generated/pydicom.pixels.decoders.base.Decoder.rst", "reference/generated/pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.HTJ2KDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.HTJ2KLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.HTJ2KLosslessRPCLDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEG2000Decoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEG2000LosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGBaseline8BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGExtended12BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGLSLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGLSNearLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGLosslessSV1Decoder.rst", "reference/generated/pydicom.pixels.decoders.base.RLELosslessDecoder.rst", "reference/generated/pydicom.pixels.encoders.base.EncodeRunner.rst", "reference/generated/pydicom.pixels.encoders.base.Encoder.rst", "reference/generated/pydicom.pixels.encoders.base.JPEGLSLosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.base.JPEGLSNearLosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.base.RLELosslessEncoder.rst", "reference/generated/pydicom.pixels.get_decoder.rst", "reference/generated/pydicom.pixels.get_encoder.rst", "reference/generated/pydicom.pixels.iter_pixels.rst", "reference/generated/pydicom.pixels.pixel_array.rst", "reference/generated/pydicom.sequence.Sequence.rst", "reference/generated/pydicom.tag.BaseTag.rst", "reference/generated/pydicom.tag.Tag.rst", "reference/generated/pydicom.tag.TupleTag.rst", "reference/generated/pydicom.tag.tag_in_exception.rst", "reference/generated/pydicom.uid.AcquisitionContextSRStorage.rst", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pydicom.uid.AllTransferSyntaxes.rst", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage.rst", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage.rst", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage.rst", "reference/generated/pydicom.uid.BasicTextSRStorage.rst", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.BodyPositionWaveformStorage.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CTImageStorage.rst", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pydicom.uid.ChestCADSRStorage.rst", "reference/generated/pydicom.uid.ColonCADSRStorage.rst", "reference/generated/pydicom.uid.ColorPaletteStorage.rst", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.Comprehensive3DSRStorage.rst", "reference/generated/pydicom.uid.ComprehensiveSRStorage.rst", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage.rst", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage.rst", "reference/generated/pydicom.uid.CornealTopographyMapStorage.rst", "reference/generated/pydicom.uid.DICOS2DAITStorage.rst", "reference/generated/pydicom.uid.DICOS3DAITStorage.rst", "reference/generated/pydicom.uid.DICOSCTImageStorage.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage.rst", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage.rst", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.EddyCurrentImageStorage.rst", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage.rst", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage.rst", "reference/generated/pydicom.uid.EncapsulatedCDAStorage.rst", "reference/generated/pydicom.uid.EncapsulatedMTLStorage.rst", "reference/generated/pydicom.uid.EncapsulatedOBJStorage.rst", "reference/generated/pydicom.uid.EncapsulatedPDFStorage.rst", "reference/generated/pydicom.uid.EncapsulatedSTLStorage.rst", "reference/generated/pydicom.uid.EnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.EnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.EnhancedRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedSRStorage.rst", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage.rst", "reference/generated/pydicom.uid.EnhancedXAImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRFImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.ExplicitVRBigEndian.rst", "reference/generated/pydicom.uid.ExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.ExtensibleSRStorage.rst", "reference/generated/pydicom.uid.General32bitECGWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralECGWaveformStorage.rst", "reference/generated/pydicom.uid.GenericImplantTemplateStorage.rst", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.HEVCM10P51.rst", "reference/generated/pydicom.uid.HEVCMP51.rst", "reference/generated/pydicom.uid.HTJ2K.rst", "reference/generated/pydicom.uid.HTJ2KLossless.rst", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL.rst", "reference/generated/pydicom.uid.HangingProtocolStorage.rst", "reference/generated/pydicom.uid.HemodynamicWaveformStorage.rst", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage.rst", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage.rst", "reference/generated/pydicom.uid.ImplantationPlanSRStorage.rst", "reference/generated/pydicom.uid.ImplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pydicom.uid.InventoryStorage.rst", "reference/generated/pydicom.uid.JPEG2000.rst", "reference/generated/pydicom.uid.JPEG2000Lossless.rst", "reference/generated/pydicom.uid.JPEG2000MC.rst", "reference/generated/pydicom.uid.JPEG2000MCLossless.rst", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGBaseline8Bit.rst", "reference/generated/pydicom.uid.JPEGExtended12Bit.rst", "reference/generated/pydicom.uid.JPEGLSLossless.rst", "reference/generated/pydicom.uid.JPEGLSNearLossless.rst", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGLossless.rst", "reference/generated/pydicom.uid.JPEGLosslessSV1.rst", "reference/generated/pydicom.uid.JPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate.rst", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.LensometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.MPEG2MPHL.rst", "reference/generated/pydicom.uid.MPEG2MPHLF.rst", "reference/generated/pydicom.uid.MPEG2MPML.rst", "reference/generated/pydicom.uid.MPEG2MPMLF.rst", "reference/generated/pydicom.uid.MPEG4HP41.rst", "reference/generated/pydicom.uid.MPEG4HP41BD.rst", "reference/generated/pydicom.uid.MPEG4HP41BDF.rst", "reference/generated/pydicom.uid.MPEG4HP41F.rst", "reference/generated/pydicom.uid.MPEG4HP422D.rst", "reference/generated/pydicom.uid.MPEG4HP422DF.rst", "reference/generated/pydicom.uid.MPEG4HP423D.rst", "reference/generated/pydicom.uid.MPEG4HP423DF.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREO.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREOF.rst", "reference/generated/pydicom.uid.MPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.MRImageStorage.rst", "reference/generated/pydicom.uid.MRSpectroscopyStorage.rst", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pydicom.uid.MammographyCADSRStorage.rst", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage.rst", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.NuclearMedicineImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage.rst", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID.rst", "reference/generated/pydicom.uid.ParametricMapStorage.rst", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PhotoacousticImageStorage.rst", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage.rst", "reference/generated/pydicom.uid.PrivateTransferSyntaxes.rst", "reference/generated/pydicom.uid.ProcedureLogStorage.rst", "reference/generated/pydicom.uid.ProtocolApprovalStorage.rst", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.RE_VALID_UID.rst", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX.rst", "reference/generated/pydicom.uid.RLELossless.rst", "reference/generated/pydicom.uid.RLETransferSyntaxes.rst", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTDoseStorage.rst", "reference/generated/pydicom.uid.RTImageStorage.rst", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTIonPlanStorage.rst", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage.rst", "reference/generated/pydicom.uid.RTPhysicianIntentStorage.rst", "reference/generated/pydicom.uid.RTPlanStorage.rst", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage.rst", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetStorage.rst", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage.rst", "reference/generated/pydicom.uid.RTStructureSetStorage.rst", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage.rst", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.RawDataStorage.rst", "reference/generated/pydicom.uid.RealWorldValueMappingStorage.rst", "reference/generated/pydicom.uid.RespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.RoboticArmRadiationStorage.rst", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio.rst", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.SegmentationStorage.rst", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SpatialFiducialsStorage.rst", "reference/generated/pydicom.uid.SpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage.rst", "reference/generated/pydicom.uid.StereometricRelationshipStorage.rst", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.SurfaceScanMeshStorage.rst", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage.rst", "reference/generated/pydicom.uid.SurfaceSegmentationStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage.rst", "reference/generated/pydicom.uid.TractographyResultsStorage.rst", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage.rst", "reference/generated/pydicom.uid.UID.rst", "reference/generated/pydicom.uid.UltrasoundImageStorage.rst", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes.rst", "reference/generated/pydicom.uid.VLEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VLMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage.rst", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage.rst", "reference/generated/pydicom.uid.XRayAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pydicom.uid.generate_uid.rst", "reference/generated/pydicom.uid.register_transfer_syntax.rst", "reference/generated/pydicom.valuerep.DA.rst", "reference/generated/pydicom.valuerep.DS.rst", "reference/generated/pydicom.valuerep.DSdecimal.rst", "reference/generated/pydicom.valuerep.DSfloat.rst", "reference/generated/pydicom.valuerep.DT.rst", "reference/generated/pydicom.valuerep.IS.rst", "reference/generated/pydicom.valuerep.ISfloat.rst", "reference/generated/pydicom.valuerep.PersonName.rst", "reference/generated/pydicom.valuerep.TM.rst", "reference/generated/pydicom.valuerep.VR.rst", "reference/generated/pydicom.valuerep.format_number_as_ds.rst", "reference/generated/pydicom.valuerep.is_valid_ds.rst", "reference/generated/pydicom.values.convert_AE_string.rst", "reference/generated/pydicom.values.convert_ATvalue.rst", "reference/generated/pydicom.values.convert_DA_string.rst", "reference/generated/pydicom.values.convert_DS_string.rst", "reference/generated/pydicom.values.convert_DT_string.rst", "reference/generated/pydicom.values.convert_IS_string.rst", "reference/generated/pydicom.values.convert_OBvalue.rst", "reference/generated/pydicom.values.convert_OWvalue.rst", "reference/generated/pydicom.values.convert_PN.rst", "reference/generated/pydicom.values.convert_SQ.rst", "reference/generated/pydicom.values.convert_TM_string.rst", "reference/generated/pydicom.values.convert_UI.rst", "reference/generated/pydicom.values.convert_UN.rst", "reference/generated/pydicom.values.convert_UR_string.rst", "reference/generated/pydicom.values.convert_numbers.rst", "reference/generated/pydicom.values.convert_single_string.rst", "reference/generated/pydicom.values.convert_string.rst", "reference/generated/pydicom.values.convert_tag.rst", "reference/generated/pydicom.values.convert_text.rst", "reference/generated/pydicom.values.convert_value.rst", "reference/generated/pydicom.values.multi_string.rst", "reference/generated/pydicom.waveforms.numpy_handler.rst", "reference/handlers.rst", "reference/handlers.pixel_data.rst", "reference/index.rst", "reference/misc.rst", "reference/overlays.rst", "reference/pixels.rst", "reference/pixels.decoders.rst", "reference/pixels.encoders.rst", "reference/uid.rst", "reference/waveforms.rst", "release_notes/index.rst", "release_notes/v0.9.2.rst", "release_notes/v0.9.3.rst", "release_notes/v0.9.4.rst", "release_notes/v0.9.5.rst", "release_notes/v0.9.6.rst", "release_notes/v0.9.7.rst", "release_notes/v0.9.8.rst", "release_notes/v0.9.9.rst", "release_notes/v1.0.0.rst", "release_notes/v1.1.0.rst", "release_notes/v1.2.0.rst", "release_notes/v1.3.0.rst", "release_notes/v1.4.0.rst", "release_notes/v1.4.1.rst", "release_notes/v2.0.0.rst", "release_notes/v2.1.0.rst", "release_notes/v2.1.1.rst", "release_notes/v2.2.0.rst", "release_notes/v2.3.0.rst", "release_notes/v2.4.0.rst", "release_notes/v3.0.0.rst", "sg_execution_times.rst", "tutorials/contributing.rst", "tutorials/contributing_code.rst", "tutorials/contributing_docs.rst", "tutorials/dataset_basics.rst", "tutorials/dicom_json.rst", "tutorials/filesets.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/pixel_data/compressing.rst", "tutorials/sr_basics.rst", "tutorials/waveforms.rst"], "titles": ["Show a dicom file using hierarchical tree", "Image processing", "Downsize MRI image using pydicom", "Decode and plot Waveform Data", "Load CT slices and plot axial, sagittal and coronal images", "Computation times", "General examples", "Input-output", "Format the output of the data set printing", "Read a Dataset and plot Pixel Data", "Read a DICOM File-set", "Read RTPLAN DICOM and list information", "Write DICOM data", "Computation times", "Show working with memory-based dataset", "Metadata processing", "Add items to the private DICOM dictionary", "Anonymize DICOM data", "Working with sequences", "Computation times", "Analyse differences between DICOM files", "Computation times", "Display unicode person names", "Frequently asked questions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">codify</span></code> command", "Extending the CLI", "Command-line Interface Guide", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">show</span></code> command", "Pixel Data Decoder Options", "Pixel Data Decoder Plugins", "Pixel Data Decoding", "Element VRs and Python types", "Encoder Plugins Options", "Pixel Data Encoder Plugins", "Pixel Data Encoding", "JPEG-LS Encoding", "RLE Lossless Encoding", "Glossary", "Guides", "Writing documentation", "pydicom documentation", "Core elements in pydicom", "Best Practices", "Introduction to pydicom", "Compressing <em>Pixel Data</em>", "Handling of compressed pixel data", "Private Data Elements", "pydicom User Guide", "Reading and writing DICOM files", "Viewing Images", "Working with Overlay Data", "Working with Pixel Data", "Working with Waveform Data", "Writing DICOM Files", "Character Encoding and Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.charset</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.config</span></code>)", "Getting Included Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.data</span></code>)", "Data Dictionary Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.datadict</span></code>)", "Representation of Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataset</span></code>)", "Representation of Data Elements", "Data Elements (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataelem</span></code>)", "Element Multi-value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.multival</span></code>)", "Sequence Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sequence</span></code>)", "Element Tags (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.tag</span></code>)", "Specialized Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.valuerep</span></code>)", "Element Value Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.values</span></code>)", "Bulk Data Encapsulation Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encaps</span></code>)", "Exceptions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.errors</span></code>)", "Example Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.examples</span></code>)", "Dataset IO", "IO Base Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filebase</span></code>)", "Dataset Reading (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filereader</span></code>)", "IO Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileutil</span></code>)", "Dataset Writing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filewriter</span></code>)", "DICOM File-sets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileset</span></code>)", "pydicom.charset.convert_encodings", "pydicom.charset.decode_bytes", "pydicom.charset.decode_element", "pydicom.charset.encode_string", "pydicom.config.APPLY_J2K_CORRECTIONS", "pydicom.config.DS_decimal", "pydicom.config.DS_numpy", "pydicom.config.IGNORE", "pydicom.config.INVALID_KEYWORD_BEHAVIOR", "pydicom.config.INVALID_KEY_BEHAVIOR", "pydicom.config.RAISE", "pydicom.config.WARN", "pydicom.config.allow_DS_float", "pydicom.config.assume_implicit_vr_switch", "pydicom.config.convert_wrong_length_to_UN", "pydicom.config.data_element_callback", "pydicom.config.data_element_callback_kwargs", "pydicom.config.datetime_conversion", "pydicom.config.debug", "pydicom.config.enforce_valid_values", "pydicom.config.future_behavior", "pydicom.config.pixel_data_handlers", "pydicom.config.reset_data_element_callback", "pydicom.config.settings", "pydicom.config.show_file_meta", "pydicom.config.use_DS_decimal", "pydicom.config.use_DS_numpy", "pydicom.config.use_IS_numpy", "pydicom.data.get_charset_files", "pydicom.data.get_palette_files", "pydicom.data.get_testdata_file", "pydicom.data.get_testdata_files", "pydicom.datadict.add_dict_entries", "pydicom.datadict.add_dict_entry", "pydicom.datadict.add_private_dict_entries", "pydicom.datadict.add_private_dict_entry", "pydicom.datadict.dictionary_VM", "pydicom.datadict.dictionary_VR", "pydicom.datadict.dictionary_description", "pydicom.datadict.dictionary_has_tag", "pydicom.datadict.dictionary_is_retired", "pydicom.datadict.dictionary_keyword", "pydicom.datadict.get_entry", "pydicom.datadict.get_private_entry", "pydicom.datadict.keyword_for_tag", "pydicom.datadict.mask_match", "pydicom.datadict.private_dictionary_VM", "pydicom.datadict.private_dictionary_VR", "pydicom.datadict.private_dictionary_description", "pydicom.datadict.repeater_has_keyword", "pydicom.datadict.repeater_has_tag", "pydicom.datadict.tag_for_keyword", "pydicom.dataelem.DataElement", "pydicom.dataelem.DataElement_from_raw", "pydicom.dataelem.RawDataElement", "pydicom.dataset.Dataset", "pydicom.dataset.FileDataset", "pydicom.dataset.FileMetaDataset", "pydicom.dataset.PrivateBlock", "pydicom.dataset.validate_file_meta", "pydicom.encaps.decode_data_sequence", "pydicom.encaps.defragment_data", "pydicom.encaps.encapsulate", "pydicom.encaps.encapsulate_extended", "pydicom.encaps.fragment_frame", "pydicom.encaps.generate_fragmented_frames", "pydicom.encaps.generate_fragments", "pydicom.encaps.generate_frames", "pydicom.encaps.generate_pixel_data", "pydicom.encaps.generate_pixel_data_fragment", "pydicom.encaps.generate_pixel_data_frame", "pydicom.encaps.get_frame", "pydicom.encaps.get_frame_offsets", "pydicom.encaps.itemize_fragment", "pydicom.encaps.itemize_frame", "pydicom.encaps.parse_basic_offsets", "pydicom.encaps.parse_fragments", "pydicom.encaps.read_item", "pydicom.errors.InvalidDicomError", "pydicom.filebase.DicomBytesIO", "pydicom.filebase.DicomFile", "pydicom.filebase.DicomFileLike", "pydicom.filebase.DicomIO", "pydicom.filereader.data_element_generator", "pydicom.filereader.data_element_offset_to_value", "pydicom.filereader.dcmread", "pydicom.filereader.read_dataset", "pydicom.filereader.read_deferred_data_element", "pydicom.filereader.read_file_meta_info", "pydicom.filereader.read_partial", "pydicom.filereader.read_preamble", "pydicom.filereader.read_sequence", "pydicom.filereader.read_sequence_item", "pydicom.fileset.DIRECTORY_RECORDERS", "pydicom.fileset.FileInstance", "pydicom.fileset.FileSet", "pydicom.fileset.RecordNode", "pydicom.fileset.generate_filename", "pydicom.fileset.is_conformant_file_id", "pydicom.fileutil.absorb_delimiter_item", "pydicom.fileutil.find_bytes", "pydicom.fileutil.find_delimiter", "pydicom.fileutil.length_of_undefined_length", "pydicom.fileutil.read_undefined_length_value", "pydicom.filewriter.correct_ambiguous_vr", "pydicom.filewriter.correct_ambiguous_vr_element", "pydicom.filewriter.dcmwrite", "pydicom.filewriter.multi_string", "pydicom.filewriter.write_ATvalue", "pydicom.filewriter.write_DA", "pydicom.filewriter.write_DT", "pydicom.filewriter.write_OBvalue", "pydicom.filewriter.write_OWvalue", "pydicom.filewriter.write_PN", "pydicom.filewriter.write_TM", "pydicom.filewriter.write_UI", "pydicom.filewriter.write_UN", "pydicom.filewriter.write_data_element", "pydicom.filewriter.write_dataset", "pydicom.filewriter.write_file_meta_info", "pydicom.filewriter.write_number_string", "pydicom.filewriter.write_numbers", "pydicom.filewriter.write_sequence", "pydicom.filewriter.write_sequence_item", "pydicom.filewriter.write_string", "pydicom.filewriter.write_text", "pydicom.misc.is_dicom", "pydicom.misc.size_in_bytes", "pydicom.multival.MultiValue", "pydicom.overlays.numpy_handler", "pydicom.pixel_data_handlers.apply_color_lut", "pydicom.pixel_data_handlers.apply_modality_lut", "pydicom.pixel_data_handlers.apply_rescale", "pydicom.pixel_data_handlers.apply_voi", "pydicom.pixel_data_handlers.apply_voi_lut", "pydicom.pixel_data_handlers.apply_windowing", "pydicom.pixel_data_handlers.convert_color_space", "pydicom.pixel_data_handlers.gdcm_handler", "pydicom.pixel_data_handlers.jpeg_ls_handler", "pydicom.pixel_data_handlers.numpy_handler", "pydicom.pixel_data_handlers.pillow_handler", "pydicom.pixel_data_handlers.pylibjpeg_handler", "pydicom.pixel_data_handlers.rle_handler", "pydicom.pixel_data_handlers.util", "pydicom.pixels.as_pixel_options", "pydicom.pixels.decoders.base.DecodeRunner", "pydicom.pixels.decoders.base.Decoder", "pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder", "pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.base.HTJ2KDecoder", "pydicom.pixels.decoders.base.HTJ2KLosslessDecoder", "pydicom.pixels.decoders.base.HTJ2KLosslessRPCLDecoder", "pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.base.JPEG2000Decoder", "pydicom.pixels.decoders.base.JPEG2000LosslessDecoder", "pydicom.pixels.decoders.base.JPEGBaseline8BitDecoder", "pydicom.pixels.decoders.base.JPEGExtended12BitDecoder", "pydicom.pixels.decoders.base.JPEGLSLosslessDecoder", "pydicom.pixels.decoders.base.JPEGLSNearLosslessDecoder", "pydicom.pixels.decoders.base.JPEGLosslessDecoder", "pydicom.pixels.decoders.base.JPEGLosslessSV1Decoder", "pydicom.pixels.decoders.base.RLELosslessDecoder", "pydicom.pixels.encoders.base.EncodeRunner", "pydicom.pixels.encoders.base.Encoder", "pydicom.pixels.encoders.base.JPEGLSLosslessEncoder", "pydicom.pixels.encoders.base.JPEGLSNearLosslessEncoder", "pydicom.pixels.encoders.base.RLELosslessEncoder", "pydicom.pixels.get_decoder", "pydicom.pixels.get_encoder", "pydicom.pixels.iter_pixels", "pydicom.pixels.pixel_array", "pydicom.sequence.Sequence", "pydicom.tag.BaseTag", "pydicom.tag.Tag", "pydicom.tag.TupleTag", "pydicom.tag.tag_in_exception", "pydicom.uid.AcquisitionContextSRStorage", "pydicom.uid.AdvancedBlendingPresentationStateStorage", "pydicom.uid.AllTransferSyntaxes", "pydicom.uid.AmbulatoryECGWaveformStorage", "pydicom.uid.ArterialPulseWaveformStorage", "pydicom.uid.AutorefractionMeasurementsStorage", "pydicom.uid.BasicStructuredDisplayStorage", "pydicom.uid.BasicTextSRStorage", "pydicom.uid.BasicVoiceAudioWaveformStorage", "pydicom.uid.BlendingSoftcopyPresentationStateStorage", "pydicom.uid.BodyPositionWaveformStorage", "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "pydicom.uid.BreastTomosynthesisImageStorage", "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "pydicom.uid.CArmPhotonElectronRadiationStorage", "pydicom.uid.CTDefinedProcedureProtocolStorage", "pydicom.uid.CTImageStorage", "pydicom.uid.CTPerformedProcedureProtocolStorage", "pydicom.uid.CardiacElectrophysiologyWaveformStorage", "pydicom.uid.ChestCADSRStorage", "pydicom.uid.ColonCADSRStorage", "pydicom.uid.ColorPaletteStorage", "pydicom.uid.ColorSoftcopyPresentationStateStorage", "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.Comprehensive3DSRStorage", "pydicom.uid.ComprehensiveSRStorage", "pydicom.uid.ComputedRadiographyImageStorage", "pydicom.uid.ConfocalMicroscopyImageStorage", "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "pydicom.uid.ContentAssessmentResultsStorage", "pydicom.uid.CornealTopographyMapStorage", "pydicom.uid.DICOS2DAITStorage", "pydicom.uid.DICOS3DAITStorage", "pydicom.uid.DICOSCTImageStorage", "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "pydicom.uid.DICOSQuadrupoleResonanceStorage", "pydicom.uid.DICOSThreatDetectionReportStorage", "pydicom.uid.DeflatedExplicitVRLittleEndian", "pydicom.uid.DeformableSpatialRegistrationStorage", "pydicom.uid.DermoscopicPhotographyImageStorage", "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "pydicom.uid.DigitalXRayImageStorageForPresentation", "pydicom.uid.DigitalXRayImageStorageForProcessing", "pydicom.uid.EddyCurrentImageStorage", "pydicom.uid.EddyCurrentMultiFrameImageStorage", "pydicom.uid.ElectromyogramWaveformStorage", "pydicom.uid.ElectrooculogramWaveformStorage", "pydicom.uid.EncapsulatedCDAStorage", "pydicom.uid.EncapsulatedMTLStorage", "pydicom.uid.EncapsulatedOBJStorage", "pydicom.uid.EncapsulatedPDFStorage", "pydicom.uid.EncapsulatedSTLStorage", "pydicom.uid.EnhancedCTImageStorage", "pydicom.uid.EnhancedContinuousRTImageStorage", "pydicom.uid.EnhancedMRColorImageStorage", "pydicom.uid.EnhancedMRImageStorage", "pydicom.uid.EnhancedPETImageStorage", "pydicom.uid.EnhancedRTImageStorage", "pydicom.uid.EnhancedSRStorage", "pydicom.uid.EnhancedUSVolumeStorage", "pydicom.uid.EnhancedXAImageStorage", "pydicom.uid.EnhancedXRFImageStorage", "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "pydicom.uid.ExplicitVRBigEndian", "pydicom.uid.ExplicitVRLittleEndian", "pydicom.uid.ExtensibleSRStorage", "pydicom.uid.General32bitECGWaveformStorage", "pydicom.uid.GeneralAudioWaveformStorage", "pydicom.uid.GeneralECGWaveformStorage", "pydicom.uid.GenericImplantTemplateStorage", "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.HEVCM10P51", "pydicom.uid.HEVCMP51", "pydicom.uid.HTJ2K", "pydicom.uid.HTJ2KLossless", "pydicom.uid.HTJ2KLosslessRPCL", "pydicom.uid.HangingProtocolStorage", "pydicom.uid.HemodynamicWaveformStorage", "pydicom.uid.ImplantAssemblyTemplateStorage", "pydicom.uid.ImplantTemplateGroupStorage", "pydicom.uid.ImplantationPlanSRStorage", "pydicom.uid.ImplicitVRLittleEndian", "pydicom.uid.IntraocularLensCalculationsStorage", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pydicom.uid.InventoryStorage", "pydicom.uid.JPEG2000", "pydicom.uid.JPEG2000Lossless", "pydicom.uid.JPEG2000MC", "pydicom.uid.JPEG2000MCLossless", "pydicom.uid.JPEG2000TransferSyntaxes", "pydicom.uid.JPEGBaseline8Bit", "pydicom.uid.JPEGExtended12Bit", "pydicom.uid.JPEGLSLossless", "pydicom.uid.JPEGLSNearLossless", "pydicom.uid.JPEGLSTransferSyntaxes", "pydicom.uid.JPEGLossless", "pydicom.uid.JPEGLosslessSV1", "pydicom.uid.JPEGTransferSyntaxes", "pydicom.uid.JPIPHTJ2KReferenced", "pydicom.uid.JPIPHTJ2KReferencedDeflate", "pydicom.uid.KeratometryMeasurementsStorage", "pydicom.uid.KeyObjectSelectionDocumentStorage", "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "pydicom.uid.LensometryMeasurementsStorage", "pydicom.uid.MPEG2MPHL", "pydicom.uid.MPEG2MPHLF", "pydicom.uid.MPEG2MPML", "pydicom.uid.MPEG2MPMLF", "pydicom.uid.MPEG4HP41", "pydicom.uid.MPEG4HP41BD", "pydicom.uid.MPEG4HP41BDF", "pydicom.uid.MPEG4HP41F", "pydicom.uid.MPEG4HP422D", "pydicom.uid.MPEG4HP422DF", "pydicom.uid.MPEG4HP423D", "pydicom.uid.MPEG4HP423DF", "pydicom.uid.MPEG4HP42STEREO", "pydicom.uid.MPEG4HP42STEREOF", "pydicom.uid.MPEGTransferSyntaxes", "pydicom.uid.MRImageStorage", "pydicom.uid.MRSpectroscopyStorage", "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "pydicom.uid.MammographyCADSRStorage", "pydicom.uid.MediaStorageDirectoryStorage", "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "pydicom.uid.MultichannelRespiratoryWaveformStorage", "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.NuclearMedicineImageStorage", "pydicom.uid.OphthalmicAxialMeasurementsStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pydicom.uid.OphthalmicPhotography16BitImageStorage", "pydicom.uid.OphthalmicPhotography8BitImageStorage", "pydicom.uid.OphthalmicThicknessMapStorage", "pydicom.uid.OphthalmicTomographyImageStorage", "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "pydicom.uid.PYDICOM_ROOT_UID", "pydicom.uid.ParametricMapStorage", "pydicom.uid.PatientRadiationDoseSRStorage", "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "pydicom.uid.PhotoacousticImageStorage", "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "pydicom.uid.PositronEmissionTomographyImageStorage", "pydicom.uid.PrivateTransferSyntaxes", "pydicom.uid.ProcedureLogStorage", "pydicom.uid.ProtocolApprovalStorage", "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "pydicom.uid.RE_VALID_UID", "pydicom.uid.RE_VALID_UID_PREFIX", "pydicom.uid.RLELossless", "pydicom.uid.RLETransferSyntaxes", "pydicom.uid.RTBeamsDeliveryInstructionStorage", "pydicom.uid.RTBeamsTreatmentRecordStorage", "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "pydicom.uid.RTBrachyTreatmentRecordStorage", "pydicom.uid.RTDoseStorage", "pydicom.uid.RTImageStorage", "pydicom.uid.RTIonBeamsTreatmentRecordStorage", "pydicom.uid.RTIonPlanStorage", "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "pydicom.uid.RTPhysicianIntentStorage", "pydicom.uid.RTPlanStorage", "pydicom.uid.RTRadiationRecordSetStorage", "pydicom.uid.RTRadiationSalvageRecordStorage", "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "pydicom.uid.RTRadiationSetStorage", "pydicom.uid.RTSegmentAnnotationStorage", "pydicom.uid.RTStructureSetStorage", "pydicom.uid.RTTreatmentPreparationStorage", "pydicom.uid.RTTreatmentSummaryRecordStorage", "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "pydicom.uid.RawDataStorage", "pydicom.uid.RealWorldValueMappingStorage", "pydicom.uid.RespiratoryWaveformStorage", "pydicom.uid.RoboticArmRadiationStorage", "pydicom.uid.RoboticRadiationRecordStorage", "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "pydicom.uid.SMPTEST211030PCMDigitalAudio", "pydicom.uid.SecondaryCaptureImageStorage", "pydicom.uid.SegmentationStorage", "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.SimplifiedAdultEchoSRStorage", "pydicom.uid.SleepElectroencephalogramWaveformStorage", "pydicom.uid.SpatialFiducialsStorage", "pydicom.uid.SpatialRegistrationStorage", "pydicom.uid.SpectaclePrescriptionReportStorage", "pydicom.uid.StereometricRelationshipStorage", "pydicom.uid.SubjectiveRefractionMeasurementsStorage", "pydicom.uid.SurfaceScanMeshStorage", "pydicom.uid.SurfaceScanPointCloudStorage", "pydicom.uid.SurfaceSegmentationStorage", "pydicom.uid.TomotherapeuticRadiationRecordStorage", "pydicom.uid.TomotherapeuticRadiationStorage", "pydicom.uid.TractographyResultsStorage", "pydicom.uid.TwelveLeadECGWaveformStorage", "pydicom.uid.UID", "pydicom.uid.UltrasoundImageStorage", "pydicom.uid.UltrasoundMultiFrameImageStorage", "pydicom.uid.UncompressedTransferSyntaxes", "pydicom.uid.VLEndoscopicImageStorage", "pydicom.uid.VLMicroscopicImageStorage", "pydicom.uid.VLPhotographicImageStorage", "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "pydicom.uid.VLWholeSlideMicroscopyImageStorage", "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "pydicom.uid.VideoEndoscopicImageStorage", "pydicom.uid.VideoMicroscopicImageStorage", "pydicom.uid.VideoPhotographicImageStorage", "pydicom.uid.VisualAcuityMeasurementsStorage", "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pydicom.uid.XADefinedProcedureProtocolStorage", "pydicom.uid.XAPerformedProcedureProtocolStorage", "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.XRay3DAngiographicImageStorage", "pydicom.uid.XRay3DCraniofacialImageStorage", "pydicom.uid.XRayAngiographicImageStorage", "pydicom.uid.XRayRadiationDoseSRStorage", "pydicom.uid.XRayRadiofluoroscopicImageStorage", "pydicom.uid.generate_uid", "pydicom.uid.register_transfer_syntax", "pydicom.valuerep.DA", "pydicom.valuerep.DS", "pydicom.valuerep.DSdecimal", "pydicom.valuerep.DSfloat", "pydicom.valuerep.DT", "pydicom.valuerep.IS", "pydicom.valuerep.ISfloat", "pydicom.valuerep.PersonName", "pydicom.valuerep.TM", "pydicom.valuerep.VR", "pydicom.valuerep.format_number_as_ds", "pydicom.valuerep.is_valid_ds", "pydicom.values.convert_AE_string", "pydicom.values.convert_ATvalue", "pydicom.values.convert_DA_string", "pydicom.values.convert_DS_string", "pydicom.values.convert_DT_string", "pydicom.values.convert_IS_string", "pydicom.values.convert_OBvalue", "pydicom.values.convert_OWvalue", "pydicom.values.convert_PN", "pydicom.values.convert_SQ", "pydicom.values.convert_TM_string", "pydicom.values.convert_UI", "pydicom.values.convert_UN", "pydicom.values.convert_UR_string", "pydicom.values.convert_numbers", "pydicom.values.convert_single_string", "pydicom.values.convert_string", "pydicom.values.convert_tag", "pydicom.values.convert_text", "pydicom.values.convert_value", "pydicom.values.multi_string", "pydicom.waveforms.numpy_handler", "Bulk Data Handlers", "Pixel Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixel_data_handlers</span></code>)", "API Reference", "Miscellaneous (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.misc</span></code>)", "Overlay Data Handling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.overlays</span></code>)", "Pixel Data (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels</span></code>)", "Pixel Data Decoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.decoders</span></code>)", "Pixel Data Encoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.encoders</span></code>)", "UID Definitions and Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.uid</span></code>)", "Waveform Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.waveforms</span></code>)", "Release notes", "Version 0.9.2", "Version 0.9.3", "Version 0.9.4", "Version 0.9.5", "Version 0.9.6", "Version 0.9.7", "Version 0.9.8", "Version 0.9.9", "Version 1.0.0", "Version 1.1.0", "Version 1.2.0", "Version 1.3.0", "Version 1.4.0", "Version 1.4.1", "Version 2.0.0", "Version 2.1.0", "Version 2.1.1", "Version 2.2.0", "Version 2.3.0", "Version 2.4.0", "Version 3.0.0", "Computation times", "Contributing to pydicom", "Contributing a source code change", "Contributing a documentation change", "Dataset basics: read, access, modify, write", "Introduction to JSON support", "DICOM File-sets and DICOMDIR", "Tutorials", "How to install pydicom", "Compressing <em>Pixel Data</em>", "Structured Reporting", "Waveforms"], "terms": {"go": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 54, 164, 559, 560, 561, 563, 565], "end": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 140, 142, 151, 152, 162, 177, 179, 219, 221, 222, 249, 464, 496, 535, 541, 548], "download": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 106, 535, 551, 553, 554, 555], "full": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 36, 47, 106, 132, 161, 221, 493, 535, 544, 545, 546, 551, 563, 566], "exampl": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 30, 34, 38, 40, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 84, 85, 108, 109, 110, 128, 131, 132, 133, 139, 161, 169, 171, 220, 240, 246, 247, 249, 464, 489, 493, 496, 498, 527, 535, 536, 537, 538, 540, 541, 543, 547, 551, 553, 556, 557, 558, 559, 560, 562, 563, 566, 568], "code": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 32, 42, 44, 47, 48, 49, 54, 77, 78, 96, 131, 132, 133, 159, 161, 164, 464, 535, 536, 538, 542, 543, 544, 546, 548, 551, 553, 556, 558, 560, 564, 565, 567, 568], "graphic": [0, 50, 52], "window": [0, 2, 8, 20, 26, 27, 43, 48, 210, 211, 219, 535, 536, 544, 548, 554, 559, 560, 561, 565], "from": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 69, 72, 76, 77, 79, 81, 84, 85, 91, 97, 108, 109, 118, 119, 128, 129, 130, 131, 132, 133, 135, 136, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 153, 155, 156, 157, 158, 159, 160, 163, 166, 169, 170, 171, 172, 173, 180, 181, 182, 194, 195, 197, 204, 207, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 239, 246, 247, 248, 464, 489, 491, 493, 494, 495, 497, 498, 499, 502, 520, 535, 538, 539, 540, 541, 542, 543, 546, 547, 550, 551, 552, 553, 556, 557, 559, 560, 561, 563, 565, 566, 567, 568], "pathlib": [0, 10, 12, 174, 563], "import": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 30, 34, 36, 37, 38, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 69, 84, 85, 108, 109, 128, 131, 132, 133, 139, 169, 171, 222, 240, 464, 489, 535, 541, 544, 556, 559, 560, 561, 562, 563, 565, 566, 567, 568], "path": [0, 9, 10, 11, 12, 17, 24, 26, 27, 28, 30, 34, 40, 42, 44, 46, 49, 52, 104, 105, 106, 107, 131, 132, 133, 161, 170, 171, 174, 182, 202, 222, 240, 246, 247, 535, 551, 556, 560, 563], "sy": [0, 4, 14, 249, 496, 568], "tkinter": [0, 22, 48, 535, 536, 538], "tk": [0, 22], "ttk": 0, "pydicom": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 25, 29, 30, 32, 34, 36, 37, 39, 40, 46, 49, 51, 52, 53, 54, 60, 70, 525, 527, 536, 538, 539, 540, 541, 542, 543, 544, 545, 548, 550, 551, 553, 557, 559, 560, 561, 562, 563, 564, 567, 568], "print": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 36, 42, 44, 51, 109, 111, 131, 132, 133, 246, 535, 537, 548, 557, 560, 561, 563, 568], "__doc__": [0, 2, 8, 11, 14, 16, 20, 22], "def": [0, 8, 11, 14, 17, 25, 26, 30, 34, 97, 131, 132, 133, 169, 464, 559, 562], "build_tre": 0, "treeview": 0, "d": [0, 2, 3, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 40, 42, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 60, 65, 69, 81, 82, 84, 85, 97, 101, 102, 108, 109, 110, 128, 131, 132, 133, 138, 139, 161, 169, 171, 180, 181, 196, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 493, 494, 498, 501, 506, 524, 535, 541, 542, 550, 553, 555, 559, 560, 561, 562, 563, 566, 568], "dataset": [0, 2, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 32, 36, 37, 38, 40, 43, 44, 46, 47, 48, 49, 50, 54, 73, 80, 84, 85, 91, 97, 100, 106, 107, 108, 109, 128, 129, 136, 138, 139, 144, 146, 155, 157, 158, 161, 162, 165, 167, 168, 169, 170, 171, 172, 180, 181, 182, 194, 195, 199, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 239, 240, 246, 247, 248, 464, 490, 524, 527, 535, 536, 537, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 560, 563, 564, 565, 566, 568], "parent": [0, 26, 27, 134, 155, 157, 158, 171, 172, 535, 545, 556, 563], "str": [0, 11, 14, 20, 29, 30, 32, 34, 42, 76, 77, 78, 79, 88, 92, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 141, 142, 143, 147, 151, 152, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 182, 183, 189, 193, 194, 197, 198, 199, 200, 201, 202, 203, 205, 206, 212, 218, 219, 220, 221, 222, 239, 240, 244, 245, 246, 247, 249, 250, 464, 489, 490, 491, 492, 493, 494, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 535, 545, 550, 553, 561], "none": [0, 2, 8, 10, 14, 20, 32, 33, 40, 76, 78, 81, 82, 91, 94, 96, 97, 98, 106, 108, 109, 110, 111, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 141, 143, 144, 146, 147, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 206, 219, 221, 222, 239, 240, 246, 247, 248, 250, 252, 464, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 521, 522, 523, 524, 535, 544, 547, 548, 551, 559, 561, 565, 567], "build": [0, 4, 180, 181, 535, 544, 555, 559], "out": [0, 50, 52, 54, 139, 171, 204, 219, 248, 493, 494, 535, 551, 558, 559, 560, 561, 563, 568], "paramet": [0, 10, 20, 24, 26, 40, 52, 53, 54, 76, 77, 78, 79, 81, 82, 94, 96, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 161, 162, 163, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 194, 195, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 239, 240, 246, 247, 248, 250, 252, 464, 489, 490, 493, 494, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 535, 541, 543, 545, 551, 553, 554, 561, 563, 566], "The": [0, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 69, 76, 77, 78, 79, 97, 99, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 161, 163, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 194, 195, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 239, 240, 246, 247, 249, 250, 252, 464, 489, 490, 491, 493, 495, 496, 498, 499, 501, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 535, 538, 545, 546, 551, 556, 559, 560, 561, 562, 565, 566, 567, 568], "object": [0, 10, 14, 30, 34, 40, 42, 44, 47, 50, 85, 99, 103, 128, 131, 132, 133, 134, 141, 142, 143, 147, 151, 152, 155, 157, 158, 161, 162, 163, 165, 166, 169, 171, 182, 204, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 246, 247, 248, 249, 251, 495, 496, 498, 527, 535, 537, 538, 547, 548, 550, 553, 554, 556, 561, 563, 568], "add": [0, 2, 6, 10, 12, 15, 18, 19, 20, 25, 26, 27, 30, 34, 40, 42, 43, 45, 47, 51, 108, 110, 111, 128, 131, 132, 133, 134, 138, 139, 169, 171, 172, 182, 219, 222, 240, 493, 535, 544, 547, 553, 555, 556, 557, 559, 560, 561, 563, 566, 568], "item": [0, 6, 8, 9, 15, 19, 20, 24, 26, 27, 28, 32, 40, 42, 53, 54, 128, 131, 132, 133, 138, 139, 140, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 168, 175, 199, 204, 248, 535, 536, 537, 538, 541, 544, 547, 548, 553, 554, 557, 561, 563, 568], "id": [0, 2, 8, 9, 10, 12, 17, 20, 47, 131, 132, 133, 134, 170, 171, 172, 173, 174, 219, 535, 537, 554, 561, 563], "ani": [0, 10, 24, 26, 27, 29, 30, 32, 34, 38, 42, 43, 50, 51, 53, 79, 92, 106, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 131, 132, 133, 135, 138, 139, 140, 154, 155, 156, 157, 158, 163, 171, 172, 182, 195, 204, 205, 210, 211, 219, 220, 221, 222, 239, 240, 246, 247, 249, 250, 464, 491, 493, 494, 495, 496, 497, 498, 499, 512, 516, 522, 523, 535, 537, 538, 547, 553, 556, 559, 560, 563, 565, 566], "default": [0, 9, 24, 26, 29, 32, 34, 43, 46, 50, 51, 52, 56, 76, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 128, 131, 132, 133, 135, 138, 140, 141, 142, 143, 147, 150, 151, 152, 155, 157, 158, 159, 161, 162, 171, 173, 180, 181, 182, 194, 195, 204, 205, 209, 210, 211, 212, 215, 217, 218, 219, 221, 222, 239, 240, 246, 247, 248, 464, 489, 493, 495, 498, 506, 508, 512, 523, 524, 535, 539, 541, 542, 544, 546, 547, 548, 549, 550, 551, 553, 556, 560, 561, 562, 563, 566], "For": [0, 17, 24, 26, 27, 30, 34, 36, 37, 38, 40, 42, 43, 45, 47, 51, 52, 54, 120, 128, 131, 132, 133, 138, 144, 145, 148, 169, 171, 205, 219, 220, 221, 222, 239, 240, 246, 247, 493, 498, 535, 541, 551, 556, 559, 560, 561, 563, 565, 566], "each": [0, 3, 10, 20, 29, 30, 34, 36, 37, 38, 41, 42, 45, 51, 52, 53, 69, 77, 131, 132, 133, 138, 139, 144, 145, 148, 149, 150, 151, 152, 172, 173, 204, 212, 218, 219, 221, 222, 239, 240, 246, 247, 464, 493, 498, 524, 535, 550, 553, 559, 561, 563, 566, 568], "datael": [0, 40, 47, 48, 51, 60, 78, 129, 131, 132, 133, 159, 162, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 200, 201, 213, 535, 536, 544, 545, 546, 547, 550, 554, 556, 561], "current": [0, 20, 24, 26, 28, 38, 40, 43, 45, 96, 128, 131, 132, 133, 155, 157, 158, 171, 172, 180, 181, 188, 206, 212, 219, 491, 493, 495, 498, 535, 553, 560, 563, 565, 566], "idx": 0, "elem": [0, 8, 17, 40, 42, 51, 78, 128, 131, 132, 133, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 200, 201, 205, 249, 251, 535, 538, 561], "enumer": [0, 4, 568], "tree_item": 0, "insert": [0, 204, 248, 464, 560, 561], "text": [0, 20, 22, 32, 42, 47, 128, 161, 198, 199, 201, 464, 512, 518, 519, 521, 522, 535, 537, 546, 559, 560, 561], "move": [0, 93, 99, 170, 171, 535, 541, 542, 556, 560, 563], "vr": [0, 2, 8, 12, 16, 17, 20, 26, 27, 28, 38, 39, 41, 42, 45, 46, 47, 56, 60, 65, 82, 89, 90, 93, 101, 102, 108, 109, 110, 111, 113, 118, 119, 123, 128, 129, 130, 131, 132, 133, 134, 140, 155, 157, 158, 159, 160, 162, 163, 171, 180, 181, 182, 187, 188, 191, 195, 196, 215, 222, 223, 224, 225, 229, 244, 255, 464, 490, 491, 493, 494, 495, 496, 497, 498, 499, 503, 512, 514, 516, 517, 518, 519, 521, 522, 535, 536, 537, 538, 539, 541, 542, 544, 545, 546, 547, 548, 550, 551, 553, 554, 555, 556, 561, 562, 566], "sq": [0, 8, 32, 56, 128, 131, 132, 133, 159, 512, 535, 541, 551, 554, 556, 561], "i": [0, 2, 3, 4, 10, 17, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 60, 65, 69, 71, 73, 76, 77, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 96, 97, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 194, 195, 196, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 239, 240, 246, 247, 248, 249, 252, 464, 489, 491, 493, 494, 495, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 512, 513, 514, 516, 517, 519, 520, 535, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568], "sequenc": [0, 2, 3, 6, 8, 15, 19, 20, 24, 26, 27, 28, 32, 40, 48, 53, 54, 60, 77, 79, 89, 131, 132, 133, 140, 144, 145, 146, 162, 167, 168, 172, 175, 176, 198, 199, 207, 208, 209, 210, 219, 498, 512, 524, 527, 535, 536, 537, 541, 542, 545, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 563, 568], "contain": [0, 10, 24, 26, 29, 30, 32, 34, 38, 39, 40, 41, 42, 43, 47, 51, 52, 53, 54, 56, 69, 76, 78, 128, 130, 131, 132, 133, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 161, 162, 169, 176, 180, 181, 182, 195, 198, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 239, 240, 246, 247, 248, 250, 464, 491, 495, 498, 502, 506, 508, 524, 535, 543, 546, 553, 556, 559, 561, 563, 568], "0": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 34, 36, 37, 38, 42, 43, 44, 45, 47, 51, 52, 53, 81, 82, 83, 100, 102, 103, 128, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 155, 157, 158, 167, 168, 169, 173, 174, 180, 181, 182, 205, 209, 210, 211, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 249, 402, 403, 414, 415, 464, 489, 491, 493, 494, 495, 496, 497, 506, 508, 512, 520, 524, 527, 552, 557, 560, 561, 563, 565, 566, 568], "more": [0, 24, 26, 27, 32, 34, 36, 38, 40, 42, 43, 44, 45, 46, 47, 51, 52, 53, 99, 128, 131, 132, 133, 138, 140, 141, 143, 144, 145, 148, 162, 165, 171, 174, 179, 182, 183, 197, 219, 221, 222, 240, 246, 247, 464, 493, 498, 501, 535, 536, 537, 538, 540, 541, 548, 556, 559, 560, 561, 562, 563, 565, 566, 568], "seq_idx": 0, "seq_item": 0, "valu": [0, 2, 8, 9, 10, 12, 17, 20, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 42, 43, 45, 47, 51, 52, 54, 56, 60, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 93, 96, 103, 109, 111, 112, 113, 122, 123, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 155, 157, 158, 160, 161, 163, 169, 171, 179, 180, 181, 182, 183, 192, 197, 198, 199, 204, 205, 206, 207, 208, 209, 210, 212, 215, 217, 218, 219, 220, 221, 222, 237, 239, 240, 248, 249, 464, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 524, 527, 535, 536, 537, 540, 541, 542, 544, 545, 546, 547, 548, 550, 551, 553, 554, 555, 556, 559, 560, 561, 562, 563, 565, 566, 567, 568], "tree_seq_item": 0, "f": [0, 2, 3, 4, 8, 9, 10, 11, 12, 18, 20, 128, 131, 132, 133, 169, 171, 246, 247, 464, 559, 563, 566, 568], "name": [0, 2, 6, 8, 9, 10, 11, 12, 14, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 40, 42, 43, 44, 45, 46, 47, 54, 106, 109, 111, 118, 119, 122, 123, 124, 128, 131, 132, 133, 135, 155, 157, 158, 161, 195, 206, 219, 221, 222, 239, 240, 244, 245, 246, 247, 464, 491, 493, 495, 498, 535, 536, 537, 538, 541, 544, 545, 546, 551, 553, 554, 555, 556, 557, 559, 560, 561, 563, 566, 567, 568], "1": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 40, 42, 44, 45, 46, 47, 51, 52, 53, 62, 80, 84, 85, 87, 96, 106, 108, 109, 110, 111, 128, 130, 131, 132, 133, 134, 135, 138, 139, 140, 144, 148, 149, 150, 155, 157, 158, 161, 173, 182, 195, 205, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 496, 497, 498, 524, 536, 539, 542, 550, 553, 556, 559, 560, 561, 562, 563, 565, 566, 567, 568], "recurs": [0, 4, 47, 131, 132, 133, 535, 537, 539], "": [0, 2, 3, 4, 8, 9, 10, 12, 16, 17, 20, 24, 25, 26, 27, 28, 29, 30, 34, 36, 38, 40, 41, 42, 45, 47, 49, 50, 51, 52, 54, 84, 93, 94, 97, 110, 116, 120, 127, 128, 131, 132, 133, 138, 141, 144, 147, 148, 151, 153, 155, 157, 158, 161, 171, 172, 180, 181, 182, 204, 212, 219, 221, 222, 239, 240, 246, 247, 248, 249, 250, 402, 403, 464, 493, 495, 496, 500, 501, 502, 504, 511, 512, 519, 521, 522, 535, 537, 538, 540, 545, 546, 548, 551, 553, 558, 559, 560, 561, 563, 565, 566, 568], "__name__": [0, 14, 25, 26], "__main__": [0, 14, 25, 26], "len": [0, 3, 4, 8, 10, 14, 36, 37, 464, 561, 563, 568], "argv": [0, 4, 14], "2": [0, 2, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 32, 34, 36, 37, 38, 40, 42, 43, 45, 46, 47, 52, 53, 56, 80, 82, 84, 85, 86, 89, 96, 99, 100, 102, 103, 106, 108, 109, 110, 111, 128, 130, 131, 132, 133, 134, 135, 138, 139, 140, 144, 145, 148, 149, 150, 161, 169, 195, 205, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 493, 498, 506, 508, 524, 538, 539, 541, 542, 544, 545, 547, 548, 556, 559, 561, 563, 565, 566, 568], "pleas": [0, 14, 25, 26, 28, 42, 44, 131, 132, 133, 136, 137, 144, 145, 146, 148, 153, 182, 222, 246, 247, 535, 542, 553, 559, 560], "suppli": [0, 14, 50, 54, 79, 141, 143, 147, 161, 171, 206, 219, 222, 240, 489, 498, 561, 563], "python": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 39, 40, 41, 42, 43, 44, 47, 48, 54, 76, 77, 79, 94, 131, 132, 133, 213, 214, 216, 464, 535, 536, 538, 539, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 555, 556, 559, 560, 561, 562, 565, 566, 568], "dicomtre": [0, 21, 535, 536, 557], "py": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 42, 50, 54, 84, 85, 97, 535, 536, 539, 540, 541, 542, 543, 544, 552, 557, 559, 561, 563, 566], "exit": [0, 14, 24, 26, 27, 28], "read": [0, 2, 6, 7, 8, 13, 14, 16, 17, 18, 20, 24, 26, 27, 28, 29, 41, 42, 43, 44, 47, 51, 52, 54, 56, 70, 76, 82, 89, 94, 106, 131, 132, 133, 136, 137, 141, 142, 143, 145, 147, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 175, 176, 178, 179, 202, 213, 215, 221, 222, 246, 247, 490, 496, 497, 527, 535, 536, 537, 538, 539, 540, 541, 544, 545, 546, 547, 548, 550, 551, 553, 554, 555, 556, 557, 560, 562, 563, 564, 567], "resolv": [0, 129, 180, 535, 541, 547], "strict": [0, 43, 464, 497, 535, 548, 555], "true": [0, 10, 12, 16, 29, 30, 32, 34, 40, 42, 43, 45, 47, 53, 56, 69, 80, 81, 82, 88, 89, 93, 94, 96, 97, 100, 106, 115, 116, 125, 126, 128, 130, 131, 132, 133, 135, 138, 145, 148, 154, 155, 157, 158, 159, 161, 162, 166, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 195, 202, 205, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 239, 240, 246, 247, 249, 464, 490, 493, 494, 497, 502, 503, 504, 505, 506, 507, 508, 512, 513, 514, 516, 517, 519, 520, 524, 535, 539, 541, 551, 553, 555, 556, 561, 563, 568], "dcmread": [0, 4, 9, 10, 11, 12, 14, 16, 42, 44, 46, 49, 52, 70, 91, 106, 132, 154, 157, 158, 159, 162, 165, 179, 203, 490, 535, 544, 550, 551, 553, 556, 560, 561, 563, 568], "creat": [0, 4, 12, 14, 16, 18, 24, 25, 26, 27, 42, 43, 47, 50, 54, 88, 128, 129, 131, 132, 133, 155, 157, 158, 159, 169, 170, 171, 172, 182, 204, 221, 222, 239, 240, 250, 464, 489, 491, 492, 494, 495, 497, 498, 527, 535, 538, 540, 553, 555, 556, 561, 565, 566, 567, 568], "root": [0, 9, 10, 22, 26, 27, 97, 171, 172, 174, 403, 489, 493, 561, 563], "widget": [0, 50], "geometri": 0, "1200x900": 0, "titl": [0, 2, 20, 26, 28, 40, 47, 195, 464, 498, 559, 560, 561], "viewer": [0, 50], "rowconfigur": 0, "weight": [0, 2, 8, 20], "columnconfigur": 0, "monospac": 0, "font": 0, "style": [0, 23, 491, 495, 499, 535, 537, 540], "theme_us": 0, "clam": 0, "configur": [0, 29, 38, 43, 99, 128, 131, 132, 133, 219, 221, 239, 527, 535, 546, 553, 554], "courier": 0, "12": [0, 30, 34, 38, 53, 69, 215, 240, 244, 318, 319, 432, 473, 486, 488, 493, 563, 568], "popul": [0, 12, 54, 249, 496, 567], "grid": 0, "row": [0, 2, 8, 9, 20, 26, 28, 29, 30, 34, 36, 38, 51, 52, 131, 132, 133, 205, 212, 215, 217, 218, 219, 220, 221, 222, 239, 240, 246, 247, 566], "column": [0, 2, 8, 9, 20, 26, 28, 29, 30, 34, 36, 38, 51, 52, 131, 132, 133, 205, 212, 215, 217, 218, 219, 220, 221, 222, 239, 240, 246, 247, 566], "sticki": 0, "nsew": 0, "start": [0, 6, 17, 18, 20, 24, 26, 27, 28, 36, 44, 51, 54, 128, 130, 134, 142, 143, 145, 147, 148, 151, 152, 160, 166, 172, 173, 178, 180, 181, 204, 221, 222, 247, 248, 464, 489, 512, 520, 535, 545, 555, 559, 560, 561, 562, 567], "mainloop": [0, 22], "jupyt": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "notebook": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "ipynb": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "sourc": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 23, 26, 28, 29, 30, 34, 47, 54, 56, 76, 77, 78, 79, 81, 82, 94, 96, 98, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 535, 543, 551, 553, 556, 558, 561, 564, 565, 568], "galleri": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 557], "gener": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 25, 26, 27, 34, 37, 42, 43, 46, 54, 136, 137, 144, 150, 159, 165, 173, 248, 250, 464, 489, 497, 524, 535, 537, 538, 542, 544, 556, 560, 566], "sphinx": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 40, 535, 539, 560], "These": [1, 6, 7, 15, 39, 42, 43, 535, 551, 556, 561], "illustr": [1, 3, 4, 6, 7, 8, 9, 15, 16, 18, 20, 41, 42, 566], "avail": [1, 6, 10, 15, 24, 26, 27, 28, 30, 33, 34, 42, 47, 50, 52, 53, 54, 106, 131, 132, 133, 138, 139, 141, 143, 147, 155, 157, 158, 171, 213, 214, 216, 219, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 246, 247, 498, 506, 508, 535, 537, 538, 542, 544, 545, 546, 548, 551, 563, 565, 566, 567, 568], "which": [1, 6, 20, 23, 24, 25, 26, 30, 34, 38, 40, 42, 44, 45, 47, 50, 52, 53, 54, 77, 78, 84, 109, 128, 131, 132, 133, 159, 162, 164, 169, 171, 182, 195, 218, 219, 220, 222, 240, 247, 464, 489, 490, 492, 493, 535, 536, 539, 541, 543, 551, 556, 559, 560, 561, 562, 563, 565, 566, 568], "can": [1, 6, 10, 14, 17, 24, 25, 26, 27, 28, 30, 32, 34, 36, 38, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 96, 131, 132, 133, 138, 139, 157, 158, 161, 162, 169, 171, 182, 197, 204, 222, 240, 464, 490, 492, 493, 497, 523, 535, 536, 537, 538, 541, 550, 551, 554, 556, 559, 560, 561, 562, 563, 565, 566, 567, 568], "appli": [1, 6, 10, 16, 29, 38, 52, 53, 67, 78, 80, 131, 132, 133, 171, 206, 207, 208, 209, 210, 211, 219, 221, 222, 246, 247, 535, 548, 551, 560, 565, 568], "dicom": [1, 2, 4, 6, 7, 9, 13, 14, 15, 19, 21, 22, 23, 27, 28, 30, 32, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 48, 50, 51, 52, 53, 56, 59, 61, 69, 70, 72, 74, 76, 77, 78, 84, 89, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 131, 132, 133, 134, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 157, 158, 159, 161, 162, 164, 165, 166, 171, 182, 193, 195, 197, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 219, 222, 240, 246, 247, 249, 250, 464, 489, 493, 494, 497, 498, 500, 501, 517, 527, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 551, 553, 554, 555, 556, 557, 560, 561, 562, 564, 566, 567], "downsiz": [1, 5, 6, 52, 557], "mri": [1, 5, 6, 52, 557], "us": [1, 3, 5, 6, 7, 9, 10, 12, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 53, 77, 78, 79, 80, 84, 85, 88, 94, 95, 96, 97, 101, 102, 106, 109, 111, 128, 129, 131, 132, 133, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 165, 169, 171, 172, 173, 179, 180, 181, 182, 194, 197, 198, 199, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 239, 240, 246, 247, 248, 249, 252, 410, 464, 489, 490, 493, 495, 496, 497, 498, 501, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 524, 531, 532, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 567, 568], "decod": [1, 5, 6, 36, 38, 39, 41, 60, 77, 78, 128, 131, 132, 133, 141, 143, 147, 148, 155, 157, 158, 161, 194, 213, 214, 216, 217, 218, 240, 244, 246, 247, 498, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 527, 535, 539, 546, 547, 548, 551, 553, 554, 556, 557, 563, 565], "plot": [1, 5, 6, 7, 13, 535, 547, 557, 568], "waveform": [1, 5, 6, 41, 48, 69, 131, 132, 133, 169, 527, 535, 551, 555, 557, 564], "data": [1, 2, 5, 6, 7, 10, 11, 13, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 50, 54, 56, 62, 63, 64, 65, 77, 78, 79, 80, 82, 84, 97, 100, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 165, 169, 171, 178, 194, 197, 198, 199, 205, 206, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 464, 489, 500, 517, 524, 527, 535, 536, 537, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 563, 564, 565], "load": [1, 5, 6, 10, 12, 14, 16, 162, 170, 171, 179, 535, 547, 551, 552, 553, 557], "ct": [1, 5, 6, 9, 10, 12, 20, 26, 28, 36, 37, 42, 45, 47, 50, 52, 69, 131, 132, 133, 171, 535, 547, 557, 561, 562, 563, 566], "slice": [1, 2, 5, 6, 8, 9, 20, 26, 28, 131, 132, 133, 464, 535, 544, 545, 547, 557], "axial": [1, 5, 6, 20, 26, 28, 47, 535, 547, 557, 561], "sagitt": [1, 5, 6, 535, 547, 557], "coron": [1, 5, 6, 535, 547, 557], "thi": [2, 3, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 34, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 56, 69, 76, 81, 82, 83, 86, 87, 89, 96, 97, 109, 128, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 153, 159, 161, 164, 170, 171, 182, 188, 199, 202, 204, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 239, 240, 246, 247, 249, 464, 491, 492, 493, 494, 495, 497, 498, 501, 502, 527, 542, 544, 547, 548, 553, 556, 559, 560, 561, 562, 563, 565, 566, 567, 568], "show": [2, 3, 4, 6, 9, 10, 12, 17, 21, 24, 25, 27, 40, 47, 50, 54, 109, 128, 535, 536, 540, 542, 553, 555, 557, 560, 561, 568], "how": [2, 3, 8, 9, 10, 12, 14, 16, 17, 18, 20, 24, 26, 30, 34, 38, 40, 41, 44, 45, 46, 47, 50, 51, 52, 53, 54, 109, 128, 141, 142, 171, 535, 536, 540, 559, 560, 561, 562, 563, 564, 568], "an": [2, 10, 11, 16, 23, 24, 26, 27, 28, 29, 30, 32, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 56, 76, 77, 78, 84, 85, 86, 89, 97, 106, 107, 109, 115, 118, 119, 125, 128, 129, 131, 132, 133, 134, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 161, 162, 171, 172, 181, 182, 192, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 219, 221, 222, 239, 240, 247, 248, 249, 252, 464, 491, 493, 494, 495, 496, 497, 498, 499, 501, 517, 524, 535, 538, 539, 545, 547, 548, 550, 551, 553, 554, 556, 559, 560, 561, 563, 565, 566, 567, 568], "mr": [2, 8, 10, 17, 20, 69, 498, 563], "512": [2, 20, 161, 205, 535, 545], "im": 2, "64": [2, 8, 20, 32, 34, 38, 52, 215, 219, 220, 489, 524, 535, 538, 568], "perform": [2, 30, 34, 36, 38, 43, 45, 83, 112, 113, 114, 116, 117, 127, 131, 132, 133, 135, 171, 217, 222, 240, 246, 247, 493, 510, 535, 542, 545, 546, 565, 566, 568], "take": [2, 24, 25, 26, 30, 34, 38, 40, 45, 50, 54, 131, 132, 133, 159, 169, 204, 535, 542, 559, 560, 561, 563], "central": 2, "section": [2, 24, 25, 26, 27, 36, 37, 38, 40, 42, 45, 47, 52, 54, 56, 100, 128, 131, 132, 133, 134, 138, 140, 150, 195, 199, 205, 212, 219, 222, 246, 247, 498, 559, 560], "instead": [2, 34, 36, 42, 44, 52, 53, 54, 95, 131, 132, 133, 144, 145, 146, 148, 153, 159, 169, 171, 182, 222, 464, 497, 498, 535, 538, 541, 545, 546, 547, 550, 551, 553, 554, 556, 559, 560, 561, 562, 563, 565, 566, 568], "averagin": 2, "pixel": [2, 4, 6, 7, 8, 13, 20, 23, 24, 26, 28, 39, 40, 41, 42, 44, 48, 50, 51, 54, 67, 80, 97, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 161, 165, 205, 206, 207, 208, 213, 214, 215, 216, 217, 218, 219, 527, 535, 536, 538, 539, 544, 545, 546, 547, 548, 550, 551, 553, 554, 556, 557, 559, 561, 564, 565], "final": [2, 17, 44, 106, 138, 141, 142, 143, 182, 561, 568], "store": [2, 8, 10, 17, 20, 29, 32, 34, 36, 37, 38, 42, 47, 52, 106, 128, 131, 132, 133, 161, 196, 207, 208, 219, 221, 239, 240, 491, 493, 494, 495, 496, 497, 499, 535, 538, 553, 556, 561, 562, 563, 568], "requir": [2, 10, 12, 20, 26, 27, 29, 36, 37, 38, 42, 43, 45, 47, 51, 52, 53, 54, 128, 131, 132, 133, 138, 140, 141, 143, 144, 145, 146, 147, 161, 171, 180, 182, 195, 204, 205, 206, 210, 211, 213, 214, 215, 217, 218, 219, 222, 240, 246, 247, 250, 490, 501, 535, 538, 542, 546, 550, 551, 556, 560, 561, 563, 565, 566, 568], "numpi": [2, 3, 4, 23, 29, 30, 34, 36, 37, 40, 42, 45, 46, 51, 52, 53, 82, 97, 102, 103, 131, 132, 133, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 239, 240, 246, 247, 506, 508, 524, 535, 536, 544, 546, 547, 548, 550, 554, 556, 559, 565, 566, 568], "librari": [2, 23, 25, 26, 42, 43, 48, 52, 219, 535, 538, 541, 560, 566], "manipul": [2, 23, 44, 128, 525, 565], "ha": [2, 10, 14, 20, 24, 25, 26, 27, 30, 34, 36, 37, 38, 40, 43, 44, 45, 47, 52, 54, 82, 89, 91, 128, 131, 132, 133, 140, 141, 143, 145, 147, 148, 162, 163, 170, 171, 172, 182, 183, 194, 204, 205, 213, 214, 215, 216, 217, 218, 219, 239, 249, 464, 489, 490, 492, 493, 524, 535, 537, 538, 540, 545, 546, 548, 549, 550, 555, 556, 559, 560, 561, 562, 563, 566, 568], "x": [2, 3, 8, 9, 20, 26, 27, 28, 40, 464, 489, 493, 535, 547, 559, 561, 566, 568], "voxel": 2, "downsampl": [2, 37], "8": [2, 8, 11, 20, 22, 23, 26, 27, 30, 34, 36, 37, 38, 42, 46, 52, 81, 134, 173, 174, 205, 209, 210, 211, 215, 217, 218, 219, 222, 240, 244, 254, 263, 281, 341, 395, 402, 403, 425, 464, 482, 489, 524, 537, 540, 544, 546, 548, 551, 554, 555, 556, 568], "inform": [2, 6, 7, 8, 9, 12, 13, 20, 24, 26, 27, 28, 31, 35, 39, 40, 42, 45, 47, 50, 52, 54, 80, 100, 128, 131, 132, 133, 135, 161, 164, 166, 182, 195, 222, 240, 246, 247, 498, 535, 536, 538, 541, 544, 548, 550, 551, 556, 557, 559, 560, 561, 566, 568], "set": [2, 6, 7, 12, 13, 18, 20, 25, 26, 27, 28, 32, 38, 41, 42, 43, 45, 46, 48, 51, 52, 54, 56, 69, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 91, 92, 93, 95, 96, 101, 102, 103, 109, 128, 129, 131, 132, 133, 145, 148, 154, 155, 157, 158, 161, 162, 163, 169, 170, 171, 173, 174, 179, 182, 194, 221, 239, 464, 490, 493, 497, 498, 501, 502, 527, 535, 536, 541, 544, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 561, 562, 564, 565, 566, 568], "after": [2, 8, 20, 26, 27, 28, 29, 30, 34, 36, 40, 47, 50, 140, 142, 145, 151, 152, 166, 172, 177, 178, 179, 182, 195, 221, 222, 246, 247, 464, 493, 535, 550, 553, 556, 559, 560, 561, 563, 565, 566], "file_meta": [2, 12, 20, 26, 27, 28, 42, 45, 46, 47, 131, 132, 133, 135, 182, 195, 535, 538, 550, 556, 563, 566], "0002": [2, 12, 20, 26, 27, 28, 29, 38, 42, 47, 52, 131, 132, 133, 135, 141, 143, 147, 182, 195, 215, 217, 218, 219, 402, 561, 565], "0000": [2, 8, 12, 20, 26, 27, 28, 42, 47, 195, 464, 535, 556, 561], "file": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 21, 25, 27, 28, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 69, 72, 74, 85, 89, 94, 100, 104, 105, 106, 107, 109, 131, 132, 133, 135, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 184, 193, 194, 195, 197, 198, 199, 202, 221, 222, 246, 247, 527, 536, 537, 538, 540, 541, 544, 547, 548, 550, 551, 553, 554, 555, 556, 557, 559, 560, 561, 564, 566], "meta": [2, 8, 12, 20, 26, 27, 28, 42, 47, 54, 100, 131, 132, 133, 135, 161, 164, 182, 195, 246, 247, 535, 538, 541, 544, 550, 561], "group": [2, 12, 17, 20, 26, 27, 28, 38, 42, 44, 47, 51, 53, 118, 120, 128, 131, 132, 133, 134, 135, 161, 169, 171, 182, 195, 205, 221, 239, 246, 247, 249, 250, 251, 498, 524, 535, 538, 541, 545, 550, 551, 558, 559, 561, 568], "length": [2, 8, 12, 20, 26, 27, 28, 42, 43, 47, 53, 56, 90, 120, 128, 130, 131, 132, 133, 138, 139, 140, 141, 143, 145, 147, 148, 149, 150, 155, 157, 158, 159, 175, 178, 195, 205, 215, 218, 219, 221, 239, 249, 464, 489, 493, 496, 535, 540, 541, 545, 547, 551, 553, 554, 555, 556, 561], "ul": [2, 12, 16, 20, 26, 27, 28, 32, 42, 47, 108, 109, 110, 155, 157, 158, 195, 524, 561, 563], "190": [2, 20, 42], "0001": [2, 12, 20, 26, 27, 28, 42, 47, 131, 132, 133, 135, 141, 143, 147, 195, 561], "version": [2, 8, 12, 20, 24, 26, 27, 28, 38, 40, 42, 44, 47, 48, 56, 80, 82, 84, 85, 89, 96, 99, 100, 102, 103, 106, 128, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 173, 180, 181, 182, 195, 202, 209, 210, 211, 212, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 464, 489, 493, 506, 508, 524, 559, 560, 561, 562, 567], "ob": [2, 12, 20, 26, 27, 28, 32, 42, 47, 140, 187, 195, 509, 535, 539, 554, 561, 562], "b": [2, 8, 12, 16, 20, 22, 26, 27, 28, 36, 38, 42, 47, 51, 52, 128, 131, 132, 133, 155, 157, 158, 182, 489, 493, 498, 559, 560, 561], "x00": [2, 8, 12, 16, 20, 26, 27, 28, 36, 42, 47, 51, 561], "x01": [2, 8, 12, 20, 26, 27, 28, 42, 47, 52, 561], "media": [2, 12, 20, 26, 27, 28, 42, 47, 69, 135, 193, 195, 561, 563], "storag": [2, 9, 12, 14, 20, 26, 27, 28, 42, 47, 52, 69, 135, 193, 195, 527, 535, 538, 539, 544, 554, 561, 563, 568], "sop": [2, 8, 9, 10, 12, 20, 26, 27, 28, 37, 42, 47, 52, 53, 69, 135, 164, 169, 170, 171, 172, 182, 195, 206, 219, 527, 535, 544, 545, 551, 554, 555, 561, 566], "class": [2, 8, 9, 12, 14, 20, 26, 27, 28, 29, 30, 34, 40, 41, 42, 47, 52, 53, 56, 69, 70, 81, 128, 130, 131, 132, 133, 134, 135, 155, 157, 158, 161, 170, 171, 172, 182, 195, 204, 221, 222, 239, 240, 248, 249, 402, 464, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 527, 531, 532, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 548, 550, 551, 554, 555, 556, 560, 561, 563, 566, 567], "uid": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 35, 36, 37, 38, 42, 45, 46, 47, 52, 54, 97, 131, 132, 133, 135, 138, 139, 170, 171, 182, 195, 206, 213, 214, 215, 216, 217, 218, 219, 221, 222, 239, 240, 244, 245, 514, 523, 527, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 555, 556, 559, 561, 563, 565, 566], "ui": [2, 12, 16, 20, 26, 27, 28, 32, 42, 47, 191, 195, 514, 535, 538, 548, 561], "0003": [2, 12, 20, 26, 27, 28, 42, 47, 135, 195, 561], "instanc": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 37, 42, 44, 47, 49, 50, 52, 69, 78, 88, 131, 132, 133, 135, 155, 157, 158, 161, 162, 169, 170, 171, 172, 182, 195, 204, 206, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 464, 492, 493, 494, 531, 532, 535, 547, 553, 556, 561, 566, 567], "3": [2, 4, 5, 8, 10, 12, 16, 17, 19, 20, 22, 23, 26, 28, 30, 32, 34, 36, 37, 38, 42, 43, 46, 47, 52, 53, 56, 99, 106, 108, 109, 110, 128, 130, 131, 132, 133, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 155, 157, 158, 169, 173, 180, 181, 182, 195, 205, 207, 208, 209, 210, 211, 212, 215, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 249, 255, 256, 266, 272, 291, 293, 295, 296, 304, 309, 312, 360, 385, 388, 407, 412, 413, 434, 446, 455, 464, 466, 471, 489, 493, 494, 496, 497, 527, 538, 539, 541, 542, 543, 544, 545, 546, 550, 551, 552, 555, 559, 560, 561, 562, 563, 566, 568], "6": [2, 8, 10, 20, 23, 26, 28, 32, 38, 46, 47, 52, 56, 78, 128, 130, 131, 132, 133, 140, 212, 215, 219, 249, 290, 317, 328, 391, 407, 421, 440, 454, 462, 465, 472, 479, 491, 495, 496, 498, 536, 541, 542, 544, 551, 552, 555, 556, 560, 561, 568], "4": [2, 8, 9, 10, 12, 16, 20, 21, 23, 24, 26, 28, 34, 36, 37, 38, 40, 42, 45, 46, 47, 52, 130, 131, 132, 133, 138, 140, 144, 145, 148, 149, 150, 151, 177, 178, 182, 195, 207, 208, 209, 210, 211, 219, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 244, 245, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412, 413, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 494, 497, 520, 541, 546, 547, 550, 551, 553, 556, 559, 561, 563, 567, 568], "5962": [2, 8, 10, 20, 26, 28, 47, 561], "20040826185059": [2, 8, 20], "5457": [2, 8, 20], "0010": [2, 12, 16, 17, 20, 26, 27, 28, 29, 38, 40, 42, 47, 51, 52, 67, 97, 131, 132, 133, 135, 144, 145, 146, 161, 195, 205, 215, 216, 217, 218, 219, 524, 525, 530, 531, 532, 535, 544, 556, 560, 561, 563, 565], "transfer": [2, 12, 16, 20, 26, 27, 28, 29, 30, 34, 35, 36, 38, 42, 47, 48, 97, 131, 132, 133, 135, 138, 139, 144, 145, 162, 170, 171, 179, 182, 195, 213, 214, 215, 216, 217, 218, 219, 221, 222, 239, 240, 244, 245, 246, 247, 255, 349, 354, 357, 380, 410, 417, 464, 467, 490, 527, 535, 539, 544, 546, 547, 548, 550, 551, 555, 556, 561, 565, 566, 568], "syntax": [2, 12, 16, 20, 24, 26, 27, 28, 29, 30, 34, 35, 36, 38, 42, 47, 48, 54, 97, 131, 132, 133, 135, 138, 139, 144, 145, 162, 170, 171, 179, 182, 195, 213, 214, 215, 216, 217, 218, 219, 221, 222, 239, 240, 244, 245, 246, 247, 255, 349, 354, 357, 380, 410, 417, 464, 467, 490, 527, 535, 538, 539, 544, 546, 547, 548, 550, 551, 555, 556, 561, 565, 566, 568], "explicit": [2, 12, 20, 26, 28, 38, 45, 46, 47, 56, 89, 131, 132, 133, 145, 155, 157, 158, 162, 182, 195, 215, 222, 223, 224, 225, 244, 255, 464, 490, 498, 535, 538, 539, 547, 548, 550, 553, 556, 561], "littl": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 38, 42, 45, 46, 47, 131, 132, 133, 141, 142, 143, 145, 147, 149, 150, 151, 152, 155, 157, 158, 159, 162, 171, 177, 178, 179, 182, 195, 215, 218, 223, 225, 229, 240, 244, 249, 464, 490, 496, 503, 504, 505, 506, 507, 508, 512, 513, 514, 516, 517, 519, 520, 535, 538, 550, 556, 561, 566, 568], "endian": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 38, 42, 45, 46, 47, 131, 132, 133, 141, 142, 143, 145, 147, 149, 150, 151, 152, 155, 157, 158, 159, 162, 171, 176, 177, 178, 179, 182, 188, 195, 215, 218, 219, 222, 223, 224, 225, 229, 240, 244, 255, 464, 490, 503, 504, 505, 506, 507, 508, 512, 513, 514, 516, 517, 519, 520, 535, 538, 546, 550, 555, 556, 561, 566, 568], "0012": [2, 12, 20, 26, 27, 28, 42, 47, 135, 195, 402, 561], "implement": [2, 12, 20, 26, 27, 28, 30, 34, 42, 47, 54, 135, 157, 158, 195, 402, 464, 535, 551, 561], "0013": [2, 12, 20, 26, 27, 28, 42, 47, 135, 195, 561, 563], "sh": [2, 12, 16, 20, 26, 28, 32, 42, 47, 195, 521, 561], "dctool100": [2, 20, 26, 28, 47, 561], "0016": [2, 20, 26, 27, 28, 42, 47, 195, 561], "applic": [2, 20, 26, 27, 28, 32, 43, 47, 195, 561, 566], "entiti": [2, 20, 26, 28, 32, 47, 171, 195, 561], "ae": [2, 20, 26, 28, 32, 47, 195, 503, 519, 535, 544, 556, 561], "clunie1": [2, 20, 26, 28, 47, 561], "0008": [2, 12, 20, 26, 27, 28, 29, 38, 42, 47, 52, 76, 77, 78, 79, 131, 132, 133, 141, 143, 144, 146, 147, 161, 162, 206, 215, 217, 218, 219, 530, 531, 535, 536, 548, 561, 562, 563], "type": [2, 3, 8, 17, 18, 20, 25, 26, 27, 28, 29, 30, 34, 38, 39, 41, 42, 45, 47, 52, 69, 76, 77, 79, 82, 99, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 147, 148, 149, 151, 152, 153, 155, 157, 158, 161, 162, 163, 165, 166, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 194, 195, 197, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 239, 240, 247, 250, 464, 489, 490, 493, 498, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 523, 524, 535, 538, 539, 541, 552, 553, 555, 556, 560, 561, 563, 566, 568], "c": [2, 10, 18, 20, 22, 24, 26, 27, 28, 32, 38, 42, 44, 47, 52, 53, 93, 131, 132, 133, 205, 207, 208, 209, 210, 211, 212, 215, 219, 493, 519, 535, 542, 561, 562, 563, 565, 566, 568], "deriv": [2, 8, 20, 42, 49, 81, 97, 128, 133, 535, 541, 561], "secondari": [2, 8, 20], "other": [2, 8, 17, 20, 24, 30, 32, 34, 38, 43, 45, 46, 47, 50, 51, 52, 54, 165, 182, 187, 188, 195, 219, 464, 493, 498, 556, 559, 561, 563, 566], "creation": [2, 8, 12, 20, 26, 27, 28, 42, 169, 535, 547, 561, 563], "date": [2, 8, 9, 12, 17, 20, 23, 26, 27, 28, 32, 42, 43, 47, 93, 171, 491, 495, 527, 535, 544, 545, 547, 553, 561, 565], "da": [2, 12, 17, 20, 26, 27, 28, 32, 42, 47, 60, 65, 93, 131, 505, 519, 535, 544, 553, 561], "20040826": [2, 8, 20], "time": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 26, 27, 28, 32, 42, 43, 47, 54, 69, 91, 93, 109, 132, 143, 163, 176, 179, 219, 491, 492, 495, 499, 535, 538, 544, 553, 558, 559, 560, 561, 563, 568], "tm": [2, 12, 20, 26, 27, 28, 32, 42, 60, 65, 93, 513, 519, 535, 544, 553, 561], "185434": [2, 8, 20], "0014": [2, 20, 26, 27, 28, 561], "creator": [2, 8, 16, 20, 26, 28, 47, 110, 111, 119, 122, 123, 124, 131, 132, 133, 134, 195, 249, 535, 545, 550, 555, 561, 563], "0018": [2, 20, 26, 27, 28, 42, 44, 195, 206, 219], "0020": [2, 12, 17, 20, 26, 27, 28, 42, 561, 563], "studi": [2, 8, 9, 10, 20, 26, 27, 28, 42, 169, 171, 563], "0021": [2, 20], "seri": [2, 8, 10, 20, 40, 164, 169, 171, 535, 539, 560, 563, 566], "0022": [2, 20, 561], "acquisit": [2, 8, 20], "0030": [2, 17, 20, 42], "185059": [2, 8, 20], "0031": [2, 20], "0032": [2, 20], "0050": [2, 20, 26, 27, 42, 51], "access": [2, 8, 20, 23, 26, 27, 30, 34, 36, 41, 42, 47, 51, 56, 69, 82, 99, 131, 132, 133, 161, 535, 537, 544, 550, 551, 555, 556, 560, 562, 563, 564, 567], "number": [2, 8, 11, 18, 20, 24, 26, 27, 28, 29, 30, 34, 38, 40, 42, 44, 47, 51, 109, 111, 128, 130, 131, 132, 133, 134, 138, 140, 141, 143, 144, 145, 146, 147, 150, 152, 155, 157, 158, 160, 161, 162, 171, 172, 173, 176, 179, 194, 196, 197, 203, 204, 205, 219, 221, 222, 239, 240, 248, 249, 250, 464, 489, 491, 493, 494, 495, 496, 497, 499, 501, 535, 536, 540, 543, 547, 553, 554, 556, 560, 561, 563, 565, 567, 568], "0060": [2, 20, 26, 27, 42], "modal": [2, 8, 9, 10, 20, 26, 28, 42, 48, 207, 208, 210, 211, 219, 535, 548, 563, 567], "0070": [2, 20, 26, 27], "manufactur": [2, 8, 20, 131], "lo": [2, 12, 16, 17, 18, 20, 26, 27, 32, 47, 131, 521, 561, 563], "toshiba_mec": [2, 8, 20], "0080": [2, 20, 26, 27, 28], "institut": [2, 8, 20], "toshiba": [2, 8, 20], "0090": [2, 20], "refer": [2, 8, 20, 26, 27, 38, 40, 42, 52, 93, 138, 140, 143, 144, 145, 146, 147, 148, 150, 151, 170, 205, 206, 207, 208, 209, 210, 211, 212, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 489, 535, 538, 559, 563, 566, 568], "physician": [2, 8, 20], "pn": [2, 12, 17, 20, 32, 42, 65, 128, 131, 132, 133, 498, 511, 535, 548, 553, 560, 561, 563], "0201": [2, 20, 535, 547], "timezon": [2, 8, 20, 495], "offset": [2, 8, 20, 45, 47, 51, 128, 131, 132, 133, 134, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 155, 157, 158, 166, 167, 168, 171, 177, 178, 221, 222, 239, 512, 520, 535, 548, 551, 554, 556, 563, 566], "utc": [2, 8, 20, 495], "0400": [2, 8, 20], "1010": [2, 20, 53, 568], "station": [2, 8, 20], "000000000": [2, 8, 20], "1060": [2, 20], "1070": [2, 20], "oper": [2, 8, 20, 36, 37, 42, 43, 47, 48, 85, 131, 132, 133, 155, 157, 158, 207, 208, 210, 211, 219, 221, 222, 246, 247, 464, 493, 535, 538, 546, 548, 551, 561, 565], "1090": [2, 20], "model": [2, 8, 20, 24, 26, 42, 54, 128, 131, 132, 133, 562, 568], "mrt50h1": [2, 8, 20], "patient": [2, 8, 9, 10, 12, 17, 20, 26, 27, 28, 44, 131, 132, 133, 169, 171, 498, 535, 537, 544, 554, 560, 561, 563], "compressedsampl": [2, 8, 9, 20, 26, 28, 69, 560, 561], "mr1": [2, 8, 20], "4mr1": [2, 8, 17, 20], "birth": [2, 8, 17, 20], "0040": [2, 20], "sex": [2, 8, 20], "1020": [2, 20], "size": [2, 8, 9, 20, 24, 26, 34, 52, 54, 97, 128, 155, 157, 158, 162, 179, 213, 214, 464, 535, 545, 551, 555, 565, 566], "1030": [2, 20, 535, 549], "80": [2, 8, 20, 40, 45, 46, 53, 131, 132, 133, 144, 219, 234, 241, 244, 245, 255, 352, 354, 401, 568], "contrast": [2, 8, 10, 20, 563], "bolu": [2, 8, 20], "agent": [2, 8, 20], "scan": [2, 8, 20, 26, 28, 169, 566], "se": [2, 8, 20], "variant": [2, 8, 20], "option": [2, 8, 17, 20, 25, 27, 28, 30, 31, 32, 34, 35, 43, 46, 50, 81, 82, 94, 104, 105, 106, 107, 109, 111, 128, 129, 131, 132, 133, 135, 138, 140, 141, 142, 143, 144, 146, 147, 150, 151, 152, 155, 157, 158, 159, 161, 162, 165, 171, 172, 173, 179, 182, 194, 204, 205, 206, 209, 210, 211, 212, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 246, 247, 248, 250, 464, 489, 490, 495, 498, 499, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 516, 518, 519, 520, 521, 522, 523, 524, 527, 535, 537, 538, 544, 548, 551, 553, 556, 563, 568], "0023": [2, 12, 20, 26, 27], "3d": [2, 4, 8, 20, 219, 535, 551], "thick": [2, 8, 20], "repetit": [2, 8, 20, 54], "4000": [2, 8, 20], "0081": [2, 20], "echo": [2, 8, 20], "240": [2, 8, 20], "0083": [2, 20], "averag": [2, 8, 20], "0084": [2, 20, 26, 27, 28], "frequenc": [2, 8, 20, 53, 568], "63": [2, 8, 20, 561], "924339": [2, 8, 20], "0085": [2, 20], "nucleu": [2, 8, 20], "h": [2, 8, 12, 20, 22, 24, 26, 27, 28], "0086": [2, 20, 26, 27, 28], "0091": [2, 20], "train": [2, 8, 20], "1000": [2, 20, 53, 568], "devic": [2, 8, 20, 26, 27, 567], "serial": [2, 8, 20, 128, 131, 132, 133, 562], "0000200": [2, 8, 20], "softwar": [2, 8, 20, 43, 565], "v3": [2, 8, 20, 36, 535, 551, 553, 554, 556, 568], "51": [2, 8, 20, 46, 144, 233, 244, 255, 351, 357], "p25": [2, 8, 20], "1314": [2, 20], "flip": [2, 8, 20], "angl": [2, 8, 20], "90": [2, 8, 20, 46, 53, 144, 219, 231, 244, 255, 283, 346, 349, 535, 548], "5100": [2, 20, 44], "posit": [2, 8, 20, 24, 26, 27, 28, 44, 141, 142, 143, 145, 147, 148, 151, 152, 154, 155, 157, 158, 166, 176, 177, 178, 195, 204, 221, 222, 248, 249, 464, 493, 494, 496, 497], "hf": [2, 8, 20, 44], "000d": [2, 20], "000e": [2, 20], "0011": [2, 20, 29, 38, 51, 131, 132, 133, 205, 215, 217, 218, 219], "83": [2, 8, 20], "9063": [2, 8, 20], "91": [2, 8, 20, 46, 144, 219, 230, 244, 255, 345, 349, 386, 535, 540, 548], "2000": [2, 8, 20, 29, 38, 45, 80, 144, 219, 222, 226, 227, 228, 230, 231, 246, 247, 349, 535, 548, 551, 565, 566], "6406": [2, 8, 20], "0037": [2, 20], "orient": [2, 8, 20], "0052": [2, 20], "frame": [2, 8, 20, 29, 30, 34, 36, 38, 45, 52, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 205, 212, 217, 219, 221, 222, 239, 240, 246, 247, 535, 544, 546, 548, 553, 556, 566], "later": [2, 8, 20, 30, 99, 493, 494, 535, 542, 559, 561], "1040": [2, 20], "indic": [2, 8, 20, 38, 47, 51, 97, 128, 131, 132, 133, 155, 157, 158, 222, 246, 249, 493, 496, 535, 542, 559, 560, 561], "1041": [2, 20], "locat": [2, 4, 8, 9, 20, 94, 131, 132, 133, 134, 144, 170, 177, 560, 563], "comment": [2, 8, 20, 559], "lt": [2, 20, 32], "uncompress": [2, 8, 20, 29, 34, 36, 37, 44, 45, 46, 52, 131, 132, 133, 219, 239, 240, 467, 535, 546, 548, 553, 554, 566], "0028": [2, 20, 29, 38, 46, 52, 131, 132, 133, 141, 143, 144, 146, 147, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 240, 535, 548, 550, 561], "sampl": [2, 8, 20, 29, 30, 34, 36, 37, 38, 45, 52, 53, 131, 132, 133, 219, 221, 222, 239, 240, 246, 247, 524, 566, 568], "per": [2, 8, 20, 29, 30, 34, 36, 37, 38, 42, 45, 52, 56, 131, 132, 133, 138, 139, 144, 174, 215, 219, 221, 239, 240, 535, 541, 548, 551, 561, 566], "u": [2, 20, 26, 28, 32, 69, 110, 155, 157, 158, 180, 181, 464, 524, 535, 537, 562, 563, 565, 566, 568], "0004": [2, 10, 20, 26, 27, 28, 29, 38, 52, 131, 132, 133, 169, 171, 212, 215, 217, 219, 535, 548, 563], "photometr": [2, 8, 20, 29, 37, 38, 45, 46, 52, 131, 132, 133, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 239, 246, 247, 535, 548, 566], "interpret": [2, 8, 20, 29, 37, 38, 45, 46, 51, 52, 131, 132, 133, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 239, 246, 247, 464, 491, 535, 548, 566, 568], "monochrome2": [2, 8, 20, 36, 37, 38, 215, 217, 563], "space": [2, 8, 9, 20, 29, 30, 34, 36, 37, 38, 40, 45, 48, 109, 212, 219, 240, 464, 498, 503, 514, 516, 518, 535, 544, 556, 561, 563], "3125": [2, 8, 20], "0100": [2, 20, 29, 38, 46, 53, 131, 132, 133, 195, 205, 215, 217, 218, 219, 524, 568], "bit": [2, 8, 20, 29, 30, 32, 34, 36, 37, 38, 40, 46, 50, 51, 52, 131, 132, 133, 134, 148, 207, 208, 215, 218, 219, 221, 222, 239, 240, 244, 246, 247, 249, 496, 535, 545, 546, 548, 553, 554, 555, 556, 559, 560, 566, 568], "alloc": [2, 8, 20, 29, 36, 37, 38, 40, 46, 131, 132, 133, 215, 218, 219, 221, 222, 239, 246, 247, 535, 555, 556, 568], "16": [2, 8, 20, 26, 28, 30, 34, 36, 37, 38, 46, 56, 128, 131, 132, 133, 134, 215, 217, 218, 219, 429, 501, 502, 524, 535, 548, 556, 566, 568], "0101": [2, 20, 29, 38, 131, 132, 133, 207, 208, 215, 217, 219], "0102": [2, 20, 38, 195, 205], "high": [2, 8, 20, 36, 37, 38, 40, 111, 226, 227, 228, 535, 548], "15": [2, 8, 20, 441, 557, 561, 568], "0103": [2, 20, 29, 38, 131, 132, 133, 207, 208, 215, 217, 218, 219, 240], "represent": [2, 8, 20, 26, 28, 29, 32, 37, 38, 42, 61, 64, 75, 109, 111, 113, 123, 128, 131, 132, 133, 134, 140, 170, 171, 172, 207, 208, 219, 221, 222, 239, 246, 247, 249, 493, 494, 496, 497, 498, 500, 501, 518, 521, 527, 535, 551, 553, 556, 561, 562, 568], "0106": [2, 20], "smallest": [2, 8, 20, 493], "ss": [2, 4, 20, 26, 28, 32, 180, 181, 495, 499, 524, 535, 537, 568], "0107": [2, 20], "largest": [2, 8, 20, 493], "1050": [2, 20, 210, 211, 219, 561], "center": [2, 8, 20, 210, 211, 219, 464, 561], "600": [2, 8, 20], "1051": [2, 20, 210, 211, 219, 535, 553, 561], "width": [2, 8, 20, 128, 210, 211, 219, 464, 561], "1600": [2, 8, 20], "7fe0": [2, 20, 26, 28, 40, 42, 52, 67, 97, 131, 132, 133, 141, 143, 144, 145, 146, 147, 161, 215, 216, 217, 218, 219, 525, 530, 531, 532, 535, 544, 548, 556, 561], "ow": [2, 20, 26, 28, 32, 51, 53, 182, 188, 222, 510, 535, 539, 550, 555, 561], "arrai": [2, 4, 14, 20, 26, 28, 29, 36, 40, 42, 51, 52, 53, 54, 82, 97, 102, 128, 131, 132, 133, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 239, 246, 247, 249, 492, 496, 535, 536, 546, 547, 550, 551, 556, 561], "128": [2, 9, 12, 20, 26, 28, 36, 132, 154, 166, 176, 177, 178, 182, 195, 364, 409, 561, 566], "element": [2, 10, 12, 16, 17, 18, 20, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 40, 41, 44, 48, 50, 51, 52, 53, 54, 56, 67, 77, 78, 80, 82, 84, 85, 93, 94, 97, 100, 101, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 138, 139, 144, 145, 146, 159, 160, 161, 162, 163, 171, 178, 179, 180, 181, 182, 195, 197, 198, 205, 213, 215, 217, 218, 219, 220, 221, 222, 239, 246, 247, 249, 250, 491, 493, 494, 495, 496, 497, 498, 499, 500, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 524, 525, 527, 530, 535, 536, 537, 538, 539, 540, 541, 544, 545, 546, 547, 548, 550, 551, 553, 554, 555, 556, 560, 563, 566, 568], "fffc": [2, 20, 26, 28, 561], "trail": [2, 8, 20, 26, 28, 140, 205, 219, 221, 239, 464, 493, 503, 514, 516, 518, 535, 544, 561], "pad": [2, 3, 8, 20, 26, 28, 138, 140, 145, 200, 205, 219, 221, 239, 464, 493, 535, 545, 547, 548, 551, 553, 554, 561], "126": [2, 20, 26, 28, 561, 568], "author": [2, 8, 9, 11, 12, 16, 17, 20, 22], "guillaum": [2, 8, 9, 11, 12, 17, 20, 22], "lemaitr": [2, 8, 9, 11, 12, 17, 20, 22], "g": [2, 8, 9, 11, 12, 17, 20, 22, 24, 26, 27, 30, 34, 37, 38, 40, 42, 43, 44, 51, 52, 56, 85, 128, 131, 132, 133, 134, 161, 204, 205, 219, 222, 240, 248, 491, 493, 498, 523, 535, 538, 545, 547, 551, 556, 561], "lemaitre58": [2, 8, 9, 11, 12, 17, 20, 22], "gmail": [2, 8, 9, 11, 12, 17, 20, 22], "com": [2, 8, 9, 11, 12, 17, 20, 22, 23, 559, 560, 565], "licens": [2, 8, 9, 11, 12, 16, 17, 20, 22, 535, 537, 538, 560], "mit": [2, 8, 9, 11, 12, 16, 17, 20, 22, 44, 535, 537, 538], "fixm": 2, "test": [2, 12, 16, 24, 26, 27, 28, 42, 44, 89, 108, 109, 110, 131, 132, 133, 464, 493, 502, 535, 536, 542, 544, 548, 551, 553, 555], "get": [2, 9, 10, 14, 26, 27, 32, 40, 42, 43, 44, 46, 47, 50, 51, 52, 53, 93, 97, 131, 132, 133, 155, 157, 158, 169, 219, 527, 535, 538, 539, 547, 551, 553, 559, 560, 564, 565, 566], "arr": [2, 3, 36, 40, 42, 45, 51, 52, 53, 131, 132, 133, 205, 206, 207, 208, 209, 210, 211, 212, 219, 221, 246, 247, 566, 568], "pixel_arrai": [2, 4, 9, 29, 36, 37, 40, 42, 45, 46, 48, 50, 131, 132, 133, 535, 537, 548, 556], "shape": [2, 4, 36, 51, 52, 53, 131, 132, 133, 205, 212, 213, 214, 217, 219, 222, 240, 246, 247, 524, 566, 568], "arr_downsampl": 2, "copi": [2, 10, 46, 54, 131, 132, 133, 171, 464, 493, 535, 541, 551, 554, 559, 560, 563, 565], "back": [2, 14, 16, 20, 37, 40, 44, 51, 52, 54, 559, 560, 561, 563], "origin": [2, 10, 20, 24, 26, 28, 29, 38, 45, 46, 47, 51, 54, 89, 131, 132, 133, 163, 171, 215, 221, 222, 249, 464, 489, 493, 494, 496, 497, 498, 535, 556, 559, 560, 561, 566, 568], "pixeldata": [2, 29, 30, 36, 37, 42, 45, 52, 54, 136, 138, 139, 219, 221, 239, 535, 547, 548, 566], "tobyt": [2, 52, 568], "updat": [2, 10, 18, 20, 26, 27, 36, 37, 51, 108, 109, 110, 111, 131, 132, 133, 169, 171, 180, 181, 195, 246, 247, 535, 537, 538, 540, 541, 543, 544, 545, 546, 548, 550, 551, 553, 554, 555, 556, 559, 560, 563, 565, 566], "regard": 2, "given": [2, 11, 24, 26, 27, 28, 29, 32, 36, 46, 52, 53, 77, 79, 128, 129, 131, 132, 133, 134, 135, 141, 143, 155, 157, 158, 161, 163, 169, 171, 205, 215, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 249, 464, 493, 494, 496, 498, 517, 524, 535, 550, 553, 561, 563, 565, 566, 568], "n": [2, 8, 11, 14, 20, 26, 28, 195, 205, 207, 208, 209, 210, 211, 215, 217, 218, 219, 464, 493, 524, 563], "total": [2, 3, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 36, 138, 139, 205, 219, 221, 239, 493, 557, 566], "run": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 42, 43, 44, 54, 109, 131, 132, 133, 498, 535, 538, 541, 551, 556, 560, 561, 564, 565], "script": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 54, 535, 545, 556, 558], "minut": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 495, 499], "005": [2, 5, 8, 13, 557], "second": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 36, 38, 43, 49, 493, 495, 498, 499, 568], "plot_downsize_imag": [2, 5, 557], "matplotlib": [3, 4, 9, 48, 568], "np": [3, 4, 36, 205, 206, 207, 208, 209, 210, 211, 215, 217, 218, 219, 221, 222, 246, 524, 566, 568], "pyplot": [3, 4, 9, 50, 568], "plt": [3, 4, 9, 50, 568], "generate_multiplex": [3, 131, 132, 133, 524, 535, 551, 568], "first": [3, 20, 26, 28, 36, 37, 38, 40, 42, 43, 44, 47, 49, 52, 54, 76, 77, 79, 97, 106, 130, 131, 132, 133, 141, 142, 143, 144, 145, 147, 148, 151, 152, 166, 171, 179, 204, 219, 222, 237, 246, 247, 248, 464, 493, 498, 535, 546, 547, 548, 558, 559, 560, 563, 568], "channel": [3, 20, 36, 38, 52, 53, 131, 132, 133, 215, 524, 568], "multiplex": [3, 53, 131, 132, 133, 524, 535, 551, 568], "ch_idx": 3, "we": [3, 10, 16, 17, 18, 24, 26, 28, 36, 37, 44, 46, 93, 131, 132, 133, 558, 559, 560, 561, 563, 565, 566, 568], "could": [3, 24, 25, 26, 42, 52, 54, 76, 77, 79, 204, 213, 535, 538, 539, 553, 559, 560], "also": [3, 17, 26, 27, 28, 29, 30, 32, 34, 36, 38, 40, 42, 44, 47, 49, 50, 52, 54, 78, 118, 131, 132, 133, 166, 195, 222, 240, 246, 247, 249, 464, 493, 496, 498, 535, 536, 537, 538, 539, 542, 543, 546, 547, 551, 556, 559, 560, 561, 562, 563, 565, 566, 567, 568], "waveform_arrai": [3, 48, 131, 132, 133, 535, 551, 568], "fig": [3, 568], "ax": 3, "subplot": [3, 4, 568], "waveformsequ": [3, 53, 568], "as_raw": [3, 53, 524, 535, 555, 568], "fals": [3, 4, 10, 14, 29, 30, 32, 34, 40, 43, 45, 47, 56, 69, 80, 81, 82, 85, 88, 90, 93, 94, 95, 96, 97, 101, 102, 103, 106, 115, 116, 125, 126, 128, 131, 132, 133, 135, 138, 139, 155, 157, 158, 159, 161, 165, 166, 171, 173, 174, 177, 178, 179, 182, 195, 202, 212, 215, 217, 219, 221, 222, 240, 246, 247, 249, 464, 490, 492, 493, 494, 496, 502, 503, 504, 505, 506, 507, 508, 512, 513, 514, 516, 517, 519, 520, 524, 535, 541, 545, 550, 553, 555, 561, 563, 568], "mplx": 3, "zip": [3, 6, 535, 547, 568], "nr_channel": 3, "numberofwaveformchannel": [3, 53, 524, 568], "nr_sampl": 3, "numberofwaveformsampl": [3, 524, 568], "sampling_fq": 3, "samplingfrequ": [3, 53, 568], "hz": [3, 53, 568], "mplx_label": 3, "multiplexgrouplabel": [3, 568], "ch_item": 3, "channeldefinitionsequ": [3, 568], "arang": [3, 568], "x_unit": 3, "channelsensitivityunitssequ": [3, 568], "1c": [3, 182, 195, 215, 217, 218, 219, 568], "so": [3, 16, 26, 27, 30, 32, 34, 36, 38, 40, 42, 43, 51, 52, 54, 93, 131, 132, 133, 171, 173, 182, 202, 490, 492, 493, 535, 536, 539, 556, 559, 561, 562, 563, 566, 568], "check": [3, 12, 42, 43, 115, 116, 118, 119, 121, 125, 126, 131, 132, 133, 135, 174, 182, 195, 492, 502, 535, 541, 544, 546, 547, 550, 551, 553, 556, 559, 560, 565, 568], "y_unit": 3, "codemean": [3, 568], "els": [3, 4, 8, 36, 37, 131, 162, 176, 179, 492, 493, 561], "unitless": [3, 52, 524, 568], "descript": [3, 16, 20, 25, 26, 27, 29, 33, 38, 41, 42, 44, 47, 108, 109, 110, 111, 114, 124, 128, 134, 535, 536, 537, 550, 554, 556], "ch_sourc": 3, "channelsourcesequ": [3, 568], "set_titl": 3, "set_xlabel": 3, "set_ylabel": [3, 568], "tight_layout": 3, "207": [3, 5, 42, 557], "plot_waveform": [3, 5, 557], "multipl": [4, 30, 32, 34, 38, 42, 47, 51, 52, 78, 109, 111, 112, 122, 128, 131, 132, 133, 141, 143, 144, 146, 147, 148, 209, 210, 211, 212, 219, 221, 222, 239, 240, 248, 493, 498, 517, 535, 548, 554, 556, 561], "sort": [4, 10, 131, 132, 133, 563], "them": [4, 8, 24, 26, 27, 28, 30, 34, 40, 41, 42, 46, 47, 51, 54, 131, 132, 133, 155, 157, 158, 506, 508, 535, 543, 547, 551, 560, 561, 563], "reslic": [4, 5, 557], "differ": [4, 6, 17, 21, 25, 26, 28, 32, 36, 37, 41, 47, 52, 131, 132, 133, 493, 535, 538, 550, 557, 559, 560, 561, 562, 563], "plane": [4, 20, 30, 36, 38, 52, 205, 219, 221, 222, 240, 246, 247], "glob": [4, 10, 104, 105, 107, 563], "fname": 4, "append": [4, 11, 18, 20, 42, 140, 204, 248, 489, 561, 568], "count": [4, 130, 204, 248, 249, 464, 496], "skip": [4, 18, 535, 554, 559], "sliceloc": [4, 9, 26, 28], "eg": 4, "scout": [4, 20], "view": [4, 10, 20, 29, 37, 42, 44, 48, 52, 209, 210, 211, 219, 221, 535, 536, 538, 556, 560, 563, 568], "skipcount": 4, "hasattr": 4, "ensur": [4, 32, 36, 37, 43, 45, 47, 96, 131, 132, 133, 135, 161, 171, 182, 204, 219, 493, 494, 535, 541, 544, 553, 555, 556, 559], "thei": [4, 29, 40, 42, 47, 51, 52, 76, 88, 97, 131, 132, 133, 135, 182, 195, 464, 535, 553, 556, 559, 560, 561, 563, 565, 566], "ar": [4, 10, 18, 24, 26, 27, 28, 29, 36, 37, 38, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 56, 69, 76, 77, 81, 82, 85, 94, 97, 101, 102, 108, 110, 111, 128, 131, 132, 133, 134, 135, 138, 139, 141, 143, 144, 145, 146, 147, 148, 155, 157, 158, 161, 166, 169, 171, 174, 180, 181, 182, 195, 204, 206, 207, 208, 210, 211, 213, 214, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 246, 247, 249, 464, 493, 495, 496, 498, 499, 501, 516, 519, 521, 523, 535, 541, 546, 547, 548, 550, 551, 553, 554, 556, 558, 559, 560, 561, 563, 565, 566, 567, 568], "correct": [4, 16, 20, 24, 26, 36, 37, 38, 43, 45, 46, 51, 53, 76, 80, 97, 131, 132, 133, 161, 176, 180, 181, 204, 217, 219, 535, 545, 546, 548, 553, 554, 556, 559, 561, 566, 568], "order": [4, 29, 30, 33, 34, 36, 38, 52, 97, 131, 132, 133, 134, 144, 172, 176, 180, 181, 182, 194, 218, 219, 237, 240, 249, 464, 493, 496, 535, 536, 543, 546, 548, 559, 568], "kei": [4, 33, 42, 85, 128, 131, 132, 133, 134, 169, 172, 205, 220, 249, 464, 535, 551, 559], "lambda": 4, "aspect": 4, "assum": [4, 25, 26, 36, 45, 52, 89, 145, 464, 535, 544, 563, 566, 568], "all": [4, 6, 8, 10, 12, 17, 20, 24, 26, 27, 28, 36, 38, 41, 42, 43, 45, 48, 54, 69, 97, 110, 128, 131, 132, 133, 136, 137, 138, 140, 145, 148, 155, 157, 158, 161, 171, 173, 180, 181, 182, 204, 222, 240, 246, 247, 248, 255, 464, 493, 531, 532, 535, 536, 537, 538, 541, 543, 546, 548, 551, 553, 554, 555, 556, 557, 559, 560, 561, 565, 566], "same": [4, 30, 34, 42, 43, 44, 51, 109, 131, 132, 133, 157, 158, 171, 204, 222, 464, 491, 493, 494, 495, 535, 539, 541, 560, 561, 563], "p": [4, 10, 22, 24, 26, 56, 498, 535, 541, 563], "pixelspac": [4, 9], "slicethick": 4, "ax_aspect": 4, "sag_aspect": 4, "cor_aspect": 4, "img_shap": 4, "list": [4, 6, 7, 8, 10, 13, 20, 26, 28, 30, 32, 34, 36, 37, 38, 42, 44, 45, 76, 77, 78, 79, 97, 104, 105, 107, 128, 129, 131, 132, 133, 136, 138, 139, 141, 143, 147, 148, 151, 152, 159, 161, 162, 165, 167, 171, 172, 180, 181, 189, 193, 194, 198, 199, 201, 204, 205, 221, 222, 239, 240, 246, 247, 248, 464, 489, 498, 505, 506, 507, 508, 511, 512, 513, 514, 517, 518, 521, 522, 527, 535, 538, 541, 542, 548, 551, 553, 554, 556, 557, 560, 561, 563, 565, 566], "img3d": 4, "zero": [4, 20, 32, 52, 131, 132, 133, 179, 221, 464, 493, 535, 555, 561, 566], "fill": [4, 464, 559, 560], "img2d": 4, "orthogon": 4, "a1": 4, "imshow": [4, 9, 50], "set_aspect": 4, "a2": 4, "a3": 4, "t": [4, 8, 10, 18, 20, 26, 27, 28, 29, 32, 36, 38, 40, 42, 47, 51, 54, 84, 131, 132, 133, 141, 143, 144, 147, 162, 171, 182, 204, 205, 212, 215, 218, 219, 222, 240, 246, 247, 248, 464, 489, 495, 535, 547, 550, 551, 556, 559, 560, 561, 562, 563, 566], "00": [5, 13, 19, 21, 148, 557], "212": [5, 535, 544], "execut": [5, 13, 19, 21, 498, 557], "auto_exampl": [5, 13, 19, 21], "image_process": [5, 557], "mem": [5, 13, 19, 21, 557], "mb": [5, 13, 19, 21, 161, 524, 557], "imag": [5, 8, 9, 10, 12, 17, 20, 26, 28, 30, 34, 44, 45, 47, 48, 51, 52, 69, 131, 132, 133, 139, 140, 144, 145, 148, 169, 171, 206, 212, 213, 215, 216, 217, 218, 219, 220, 222, 226, 227, 228, 230, 231, 234, 235, 239, 241, 242, 246, 247, 249, 494, 496, 497, 535, 538, 545, 547, 551, 553, 556, 557, 561, 563, 565, 566], "000": [5, 21, 493, 557, 568], "somewher": [6, 44], "analys": [6, 21, 557], "between": [6, 21, 36, 37, 40, 51, 52, 109, 205, 464, 535, 556, 557, 559, 560, 561, 566], "displai": [6, 20, 21, 26, 27, 28, 36, 37, 42, 48, 50, 100, 128, 131, 535, 536, 542, 547, 553, 557, 559, 568], "unicod": [6, 21, 32, 77, 79, 464, 498, 535, 536, 538, 539, 555, 557], "person": [6, 17, 21, 32, 40, 498, 535, 546, 553, 557, 567], "hierarch": [6, 21, 144, 219, 236, 237, 535, 548, 557], "tree": [6, 21, 42, 172, 535, 542, 557, 561], "work": [6, 15, 19, 21, 25, 26, 27, 30, 34, 36, 40, 42, 43, 44, 46, 47, 48, 54, 171, 464, 535, 536, 538, 539, 541, 542, 543, 545, 547, 551, 556, 557, 559, 560, 561, 565, 566, 567, 568], "memori": [6, 16, 21, 30, 161, 162, 163, 179, 212, 215, 219, 246, 247, 535, 538, 546, 547, 548, 556, 557, 563], "base": [6, 21, 36, 37, 38, 44, 70, 81, 131, 132, 133, 491, 493, 495, 499, 527, 531, 532, 535, 538, 544, 548, 551, 557, 559, 560, 563, 566, 568], "rtplan": [6, 7, 13, 24, 26, 27, 28, 42, 44, 69, 161, 557], "format": [6, 7, 12, 13, 20, 24, 26, 27, 28, 32, 34, 42, 43, 44, 46, 128, 131, 132, 133, 138, 139, 140, 145, 161, 182, 197, 215, 218, 464, 491, 493, 494, 495, 498, 499, 517, 535, 536, 537, 538, 544, 547, 553, 554, 556, 557, 561, 563, 565], "write": [6, 7, 10, 13, 14, 16, 17, 24, 26, 39, 41, 43, 47, 48, 56, 70, 94, 131, 132, 133, 155, 157, 158, 171, 182, 184, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 493, 494, 527, 535, 537, 539, 544, 545, 547, 549, 550, 551, 553, 554, 556, 557, 560, 562, 563, 564], "modifi": [6, 15, 30, 34, 41, 44, 51, 52, 54, 106, 131, 132, 133, 171, 535, 548, 551, 556, 564], "anonym": [6, 15, 19, 42, 47, 535, 536, 537, 547, 557], "privat": [6, 15, 17, 19, 20, 24, 26, 27, 28, 38, 42, 48, 54, 108, 109, 110, 111, 118, 119, 122, 123, 124, 126, 128, 129, 131, 132, 133, 134, 169, 170, 171, 195, 249, 410, 464, 490, 527, 535, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 550, 551, 553, 554, 555, 556, 557, 561, 563], "dictionari": [6, 15, 19, 42, 48, 84, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 162, 220, 221, 239, 464, 527, 535, 537, 538, 540, 543, 544, 545, 546, 547, 548, 551, 553, 554, 556, 557, 562, 567], "auto_examples_python": 6, "auto_examples_jupyt": 6, "your": [8, 10, 14, 23, 25, 26, 27, 30, 34, 36, 37, 38, 42, 44, 47, 48, 54, 96, 138, 139, 171, 558, 561, 562, 563, 565, 568], "own": [8, 24, 25, 26, 27, 42, 44, 47, 54, 131, 132, 133, 171, 182, 535, 545, 555, 561, 563, 566, 568], "840": [8, 9, 12, 24, 26, 45, 46, 52, 131, 132, 133, 144, 215, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 535, 545, 546, 548, 550, 551, 556, 559, 561], "10008": [8, 9, 12, 24, 26, 45, 46, 52, 131, 132, 133, 144, 215, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 535, 545, 546, 548, 550, 551, 556, 559, 561], "5": [8, 9, 10, 12, 13, 16, 20, 22, 23, 24, 26, 32, 36, 37, 38, 42, 45, 46, 52, 53, 56, 128, 130, 131, 132, 133, 134, 138, 140, 143, 144, 145, 146, 147, 148, 150, 151, 199, 205, 209, 210, 211, 212, 218, 219, 238, 243, 244, 245, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 335, 336, 337, 338, 339, 341, 342, 343, 344, 360, 361, 362, 363, 364, 365, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 493, 498, 550, 551, 559, 560, 561, 563, 566, 568], "don": [8, 10, 18, 26, 27, 28, 42, 47, 54, 559, 560, 562, 563, 566], "xfe": 8, "x04": [8, 52], "myprint": [8, 535, 536], "indent": [8, 131, 132, 133, 172, 561], "through": [8, 17, 30, 34, 40, 42, 44, 47, 52, 131, 132, 133, 164, 178, 180, 181, 222, 246, 493, 535, 536, 537, 556, 559, 560, 561, 565, 567], "custom": [8, 26, 28, 169, 171, 535, 536, 537, 544, 547, 551], "_pretty_str": [8, 561], "dont_print": 8, "indent_str": 8, "next_indent_str": 8, "sequence_item": 8, "repr_valu": 8, "repr": [8, 42, 100, 464, 535, 550], "50": [8, 46, 52, 53, 144, 219, 232, 244, 255, 350, 357, 384, 464], "plot_printing_dataset": [8, 13, 557], "open": [9, 23, 25, 26, 156, 162, 246, 247, 535, 538, 559, 560, 561], "some": [9, 14, 16, 17, 26, 28, 40, 42, 43, 47, 50, 51, 52, 53, 54, 56, 76, 89, 99, 131, 132, 165, 182, 493, 494, 501, 535, 536, 537, 539, 541, 544, 545, 555, 560, 561, 562, 563, 565, 567], "project": [9, 10, 20, 97, 558, 559, 560, 565], "src": [9, 10, 29, 30, 33, 34, 36, 97, 219, 221, 222, 239, 240, 246, 247, 563, 566], "test_fil": [9, 10, 24, 26, 42, 44, 560, 561, 563], "ct_small": [9, 26, 28, 69, 161, 560, 561], "dcm": [9, 11, 12, 24, 26, 27, 28, 40, 42, 44, 45, 51, 52, 69, 131, 132, 133, 161, 169, 246, 247, 535, 551, 560, 561, 566, 567, 568], "ct1": [9, 20, 26, 28, 69, 560, 561], "1ct1": [9, 20, 26, 28, 563], "20040119": [9, 20, 26, 28, 561], "661468": [9, 20], "77": [9, 20, 24, 26, 27, 28, 42, 281, 282, 294, 395, 396, 397, 398, 400, 455, 468, 469, 470, 471, 472, 474, 475, 476, 479, 480], "2040634155": [9, 20, 26, 28], "get_testdata_fil": [9, 10, 11, 42, 44, 52, 527, 535, 551, 553, 554, 556, 560, 561, 563], "normal": [9, 16, 20, 25, 26, 27, 42, 69, 493, 535, 556], "mode": [9, 20, 26, 28, 36, 83, 86, 87, 132, 155, 157, 158, 246, 247, 493, 535, 548, 559, 565], "sopclassuid": [9, 24, 26, 28, 170, 561, 568], "pat_nam": 9, "patientnam": [9, 10, 12, 14, 26, 28, 42, 44, 69, 84, 85, 128, 131, 161, 169, 171, 250, 535, 547, 560, 561, 563], "family_comma_given": [9, 498], "patientid": [9, 10, 12, 14, 17, 26, 28, 42, 131, 169, 171, 561, 563], "studyd": [9, 10, 24, 26, 27, 28, 563], "sure": [9, 36, 46, 54, 559, 561, 565], "exist": [9, 16, 30, 34, 37, 40, 42, 43, 54, 109, 131, 132, 133, 163, 171, 182, 195, 535, 555, 556, 558, 559, 560, 566], "want": [9, 10, 14, 24, 25, 26, 36, 43, 54, 173, 559, 560, 561, 562, 563, 565], "miss": [9, 34, 106, 131, 132, 133, 135, 161, 166, 180, 182, 195, 205, 206, 215, 217, 218, 219, 222, 240, 535, 543, 544, 547, 548, 554, 556, 559, 561, 563, 565], "cmap": [9, 50], "cm": [9, 11, 50], "grai": 9, "099": [9, 13, 557], "plot_read_dicom": [9, 13, 557], "interact": [10, 42, 44, 47, 131, 132, 133, 563], "directori": [10, 44, 169, 170, 171, 172, 174, 535, 536, 554, 556, 559, 560, 563, 565], "dicomdirtest": [10, 563], "pydicom_test": [10, 563], "276": [10, 563], "7230010": [10, 563], "31906": [10, 563], "1359940846": [10, 563], "78187": [10, 563], "descriptor": [10, 47, 171, 206, 207, 208, 209, 210, 219, 535, 548, 550, 563], "charact": [10, 20, 26, 28, 32, 40, 43, 47, 56, 76, 77, 78, 79, 89, 128, 129, 131, 132, 133, 134, 161, 162, 171, 172, 173, 174, 194, 197, 198, 199, 464, 489, 498, 501, 502, 506, 508, 511, 512, 518, 521, 522, 527, 535, 536, 537, 544, 546, 547, 550, 551, 553, 554, 555, 556, 559, 561, 562, 563], "chang": [10, 12, 25, 26, 27, 30, 34, 37, 40, 43, 44, 45, 46, 51, 52, 56, 82, 96, 106, 128, 131, 132, 133, 148, 155, 157, 158, 171, 173, 180, 181, 182, 210, 212, 213, 214, 215, 216, 217, 218, 219, 489, 493, 506, 508, 550, 558, 561, 562, 564, 565, 566, 567], "stage": [10, 170, 171, 559, 560], "dicomdir": [10, 41, 69, 169, 171, 172, 535, 543, 547, 548, 551, 554, 555, 556, 564], "structur": [10, 26, 27, 42, 44, 69, 169, 171, 172, 535, 548, 555, 556, 561, 563, 564], "manag": [10, 30, 34, 47, 158, 161, 171, 221, 239, 535, 544, 551, 561, 563], "77654033": [10, 563], "doe": [10, 12, 36, 47, 51, 52, 54, 89, 97, 109, 131, 132, 133, 154, 163, 182, 188, 213, 493, 501, 535, 551, 563], "archibald": [10, 563], "20010101": [10, 131, 563], "studytim": [10, 24, 26, 28, 563], "000000": [10, 20, 563], "studydescript": [10, 26, 28, 171, 563], "xr": [10, 563], "spine": [10, 563], "comp": [10, 20, 26, 28, 563], "min": [10, 36, 207, 208, 219, 493, 563], "cr": [10, 219, 563], "seriesnumb": [10, 42, 563], "19950903": [10, 563], "173032": [10, 563], "head": [10, 40, 44, 563], "brain": [10, 563], "wo": [10, 563], "98890234": [10, 563], "peter": [10, 563], "20030505": [10, 563], "050743": [10, 563], "carotid": [10, 563], "025109": [10, 563], "045357": [10, 563], "mra": [10, 563], "700": [10, 535, 546, 563], "7": [10, 20, 23, 24, 26, 27, 38, 42, 52, 130, 134, 138, 150, 171, 195, 199, 212, 215, 219, 255, 277, 294, 303, 304, 387, 388, 389, 390, 394, 396, 418, 436, 443, 444, 445, 446, 447, 451, 481, 491, 495, 542, 546, 555, 556, 560, 563, 568], "found": [10, 44, 47, 51, 52, 53, 106, 131, 132, 133, 161, 166, 171, 176, 179, 222, 240, 464, 561, 563, 566], "seriesinstanceuid": 10, "1196533885": 10, "18148": 10, "118": 10, "fileset": [10, 527, 535, 551, 553, 554, 556], "1479": 10, "userwarn": [10, 84], "record": [10, 20, 169, 170, 171, 172, 535, 548, 554, 563], "queri": [10, 93, 171, 563], "consid": [10, 25, 26, 54, 131, 132, 133, 219, 464, 559, 560, 562], "expand": [10, 26, 28, 219, 464, 535, 554, 560, 563], "search": [10, 106, 144, 171, 176, 177, 178, 464, 535, 553, 556, 561, 563], "correspond": [10, 17, 29, 30, 34, 36, 37, 40, 42, 51, 52, 53, 76, 106, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 138, 139, 163, 170, 171, 172, 182, 205, 206, 219, 221, 222, 239, 240, 244, 245, 250, 464, 490, 491, 495, 524, 535, 553, 556, 559, 560, 563, 566, 568], "warn_and_log": 10, "photometricinterpret": [10, 36, 37, 45, 215, 217, 219, 563, 566], "monochrome1": [10, 36, 37, 38, 215, 217, 563], "without": [10, 42, 46, 47, 53, 106, 131, 132, 133, 154, 164, 177, 219, 493, 503, 514, 516, 517, 535, 537, 545, 547, 551, 554, 555, 556, 561, 563, 565, 566], "still": [10, 45, 47, 535, 541, 542, 544, 545, 546, 548, 559, 561, 562, 563, 566], "tmp": [10, 12, 563], "tmpxhlpw_81": 10, "follow": [10, 25, 26, 27, 28, 29, 30, 34, 38, 40, 42, 43, 45, 46, 52, 69, 128, 131, 132, 133, 135, 144, 145, 148, 171, 179, 182, 195, 220, 222, 240, 246, 247, 464, 493, 498, 535, 548, 551, 553, 556, 559, 560, 561, 563, 567, 568], "pt000000": [10, 563], "st000000": [10, 563], "se000000": [10, 563], "im000000": [10, 563], "se000001": [10, 563], "se000002": [10, 563], "st000001": [10, 563], "im000001": [10, 563], "im000002": [10, 563], "im000003": [10, 563], "pt000001": [10, 563], "im000004": 10, "st000002": 10, "st000003": 10, "im000005": 10, "im000006": 10, "pt000002": [10, 563], "pt000003": 10, "tempfil": [10, 12, 17, 563], "temporarydirectori": [10, 563], "generate_uid": [10, 37, 171, 535, 547, 556], "A": [10, 20, 28, 30, 34, 36, 37, 38, 40, 41, 42, 44, 45, 54, 76, 77, 89, 104, 105, 107, 131, 132, 133, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 157, 158, 159, 161, 162, 169, 171, 172, 173, 174, 180, 181, 182, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 464, 489, 490, 493, 498, 511, 518, 521, 522, 535, 545, 553, 556, 559, 561, 563, 566], "its": [10, 24, 25, 26, 27, 30, 32, 34, 36, 37, 38, 42, 43, 82, 128, 131, 132, 133, 148, 171, 172, 179, 204, 205, 213, 214, 215, 216, 217, 218, 464, 493, 524, 535, 546, 551, 556, 561, 563], "itself": [10, 37, 40, 42, 47, 106, 157, 158, 180, 181, 464, 535, 551, 559, 560, 563], "summari": [10, 25, 26, 559], "content": [10, 12, 14, 20, 42, 56, 131, 132, 133, 141, 144, 205, 215, 216, 217, 218, 219, 220, 560, 561, 563, 566], "seen": [10, 25, 26, 89, 560, 568], "when": [10, 16, 23, 24, 25, 26, 27, 29, 30, 32, 34, 36, 37, 38, 40, 42, 45, 47, 49, 51, 52, 54, 80, 84, 85, 89, 93, 94, 97, 131, 132, 133, 138, 139, 141, 143, 144, 146, 147, 148, 154, 155, 157, 158, 165, 171, 173, 180, 181, 182, 207, 208, 209, 210, 211, 218, 219, 222, 240, 246, 247, 250, 252, 464, 489, 490, 498, 535, 537, 538, 539, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 559, 560, 561, 563, 565, 566, 568], "iter": [10, 17, 42, 131, 132, 133, 140, 141, 142, 143, 144, 145, 146, 150, 159, 172, 173, 180, 183, 204, 217, 221, 222, 240, 246, 248, 249, 252, 464, 496, 535, 537, 545, 556, 563], "over": [10, 20, 26, 27, 49, 51, 535, 556, 561, 563], "yield": [10, 42, 131, 132, 133, 140, 141, 142, 143, 144, 145, 146, 150, 159, 172, 173, 217, 221, 222, 240, 246, 524, 535, 556, 561, 563, 568], "fileinst": [10, 171, 172, 527, 535, 556, 563], "do": [10, 14, 25, 26, 30, 34, 41, 43, 46, 47, 49, 50, 51, 52, 54, 93, 131, 132, 133, 171, 182, 188, 535, 541, 547, 553, 556, 559, 560, 561, 563, 566, 567, 568], "someth": [10, 14, 23, 25, 26, 30, 34, 40, 51, 131, 535, 556, 559], "patient_id": 10, "find_valu": [10, 171, 563], "return": [10, 11, 14, 29, 30, 34, 38, 40, 42, 44, 47, 51, 52, 53, 69, 76, 77, 79, 80, 90, 91, 97, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 194, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 239, 240, 244, 245, 247, 248, 249, 250, 464, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 535, 536, 537, 538, 539, 545, 546, 547, 548, 550, 551, 553, 554, 556, 561, 562, 563, 568], "where": [10, 30, 34, 36, 38, 42, 43, 51, 52, 53, 56, 108, 110, 131, 132, 133, 134, 138, 163, 169, 171, 176, 177, 207, 208, 219, 221, 222, 239, 240, 464, 493, 535, 537, 546, 547, 548, 556, 559, 560, 561, 563], "one": [10, 24, 26, 30, 34, 38, 42, 44, 46, 52, 53, 54, 83, 86, 87, 108, 110, 128, 131, 132, 133, 137, 138, 139, 140, 143, 144, 145, 148, 163, 164, 169, 171, 172, 173, 179, 183, 197, 206, 212, 219, 222, 239, 240, 246, 247, 464, 493, 494, 535, 541, 544, 554, 556, 559, 561, 563, 565, 566, 567, 568], "repres": [10, 34, 42, 52, 101, 128, 131, 132, 133, 145, 161, 182, 249, 491, 495, 496, 497, 498, 501, 559, 568], "match": [10, 29, 38, 45, 46, 52, 84, 93, 104, 105, 106, 107, 131, 132, 133, 163, 169, 171, 205, 213, 215, 218, 222, 246, 247, 498, 535, 541, 544, 551, 556, 563, 566, 568], "result": [10, 17, 24, 25, 26, 27, 36, 37, 43, 45, 54, 77, 79, 131, 132, 133, 182, 222, 246, 247, 249, 464, 489, 493, 535, 553, 556, 559, 560, 566], "find": [10, 17, 20, 23, 25, 26, 93, 131, 132, 133, 164, 171, 176, 177, 178, 180, 181, 464, 559, 560, 561, 563, 567, 568], "study_uid": 10, "studyinstanceuid": 10, "series_uid": 10, "plural": 10, "Of": 10, "cours": [10, 566], "you": [10, 12, 14, 16, 18, 23, 24, 25, 26, 27, 28, 30, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 93, 138, 139, 161, 165, 169, 171, 173, 219, 464, 535, 548, 551, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568], "just": [10, 12, 14, 25, 26, 27, 28, 42, 47, 54, 89, 128, 131, 132, 133, 159, 535, 547, 551, 559, 560, 561, 563], "directli": [10, 30, 34, 42, 54, 128, 221, 222, 239, 240, 492, 535, 556, 562, 563, 567], "know": [10, 38, 42, 47, 561, 562, 563], "what": [10, 32, 38, 41, 47, 51, 171, 561, 563, 566], "nfound": 10, "actual": [10, 20, 25, 26, 29, 30, 34, 36, 38, 42, 45, 51, 128, 131, 132, 133, 171, 182, 205, 215, 218, 222, 240, 559, 563, 566], "onli": [10, 24, 26, 27, 28, 29, 30, 34, 36, 38, 40, 42, 43, 44, 46, 51, 52, 54, 56, 80, 97, 109, 111, 112, 113, 114, 116, 117, 118, 119, 127, 131, 132, 133, 135, 144, 148, 161, 164, 171, 173, 180, 181, 182, 195, 215, 219, 221, 222, 227, 228, 231, 239, 240, 246, 247, 250, 464, 497, 502, 535, 541, 543, 544, 545, 546, 547, 548, 550, 551, 553, 556, 559, 561, 562, 563, 566], "limit": [10, 26, 27, 36, 37, 44, 45, 48, 52, 171, 464, 501, 502, 535, 541, 547, 551, 567], "subset": [10, 24, 26], "howev": [10, 25, 26, 32, 36, 37, 38, 42, 45, 131, 132, 133, 144, 145, 148, 204, 497, 559, 560, 561, 563, 566], "less": [10, 36, 37, 38, 155, 157, 158, 493, 535, 556, 568], "effici": [10, 159, 171, 219, 501, 568], "result_load": 10, "remov": [10, 12, 17, 42, 43, 48, 131, 132, 133, 136, 137, 145, 146, 148, 153, 170, 171, 172, 182, 204, 219, 222, 240, 246, 247, 248, 464, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 559, 561], "To": [10, 24, 26, 28, 36, 37, 42, 43, 44, 46, 51, 53, 54, 154, 159, 222, 249, 496, 535, 541, 546, 551, 559, 560, 561, 563, 565, 568], "edit": [10, 54, 535, 545, 546, 548, 559, 560, 565], "identif": 10, "modul": [10, 25, 26, 30, 34, 36, 37, 43, 49, 50, 52, 53, 69, 85, 94, 97, 131, 132, 133, 197, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 222, 240, 246, 247, 464, 490, 524, 527, 535, 536, 542, 543, 546, 551, 553, 554, 556, 561, 563, 566, 568], "part": [10, 27, 28, 32, 36, 37, 38, 40, 43, 47, 49, 52, 53, 111, 128, 131, 132, 133, 134, 138, 140, 143, 144, 145, 146, 147, 148, 150, 151, 161, 174, 180, 181, 182, 195, 199, 205, 207, 208, 209, 210, 211, 212, 215, 219, 249, 464, 489, 494, 496, 497, 498, 535, 538, 541, 553, 559, 560, 561, 562, 563, 566, 568], "annex": [10, 36, 37, 38, 52, 53, 128, 131, 132, 133, 138, 140, 143, 144, 145, 146, 147, 148, 150, 151, 169, 207, 208, 209, 210, 211, 212, 215, 219, 489, 563], "properti": [10, 14, 30, 34, 42, 56, 128, 131, 132, 133, 155, 157, 158, 170, 171, 172, 221, 222, 239, 240, 249, 464, 498, 535, 536, 538, 541, 544, 545, 551, 556, 563], "1130": [10, 20], "my": [10, 47, 131, 132, 133, 171, 562], "1141": 10, "descriptor_file_id": [10, 171, 563], "readm": 10, "1142": 10, "specif": [10, 20, 24, 26, 27, 28, 29, 34, 35, 40, 42, 45, 47, 51, 52, 54, 76, 77, 78, 79, 131, 132, 133, 161, 162, 171, 176, 199, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 464, 493, 523, 535, 536, 538, 544, 546, 547, 550, 551, 556, 559, 560, 561, 562, 563, 566], "descriptor_character_set": [10, 171, 563], "iso_ir": [10, 20, 26, 28, 47, 78, 561, 562, 563], "100": [10, 20, 24, 26, 28, 47, 53, 255, 368, 369, 380, 493, 561, 562, 563, 568], "until": [10, 155, 157, 158, 161, 162, 165, 176, 179, 535, 536, 541, 553, 563], "call": [10, 25, 26, 38, 42, 43, 45, 49, 51, 54, 81, 85, 91, 131, 132, 133, 145, 155, 157, 158, 159, 171, 178, 182, 204, 464, 492, 535, 538, 541, 545, 551, 556, 561, 563, 566], "meet": [10, 34, 140, 240, 535, 541], "semant": [10, 40, 171, 498, 563], "re": [10, 16, 41, 51, 135, 414, 415, 558, 559, 560, 561, 563, 565, 566, 568], "here": [10, 24, 26, 28, 30, 34, 41, 47, 50, 99, 178, 222, 240, 560, 561, 562, 563, 567], "becaus": [10, 24, 26, 36, 37, 38, 40, 42, 44, 45, 51, 52, 54, 69, 154, 171, 559, 560, 561], "would": [10, 24, 25, 26, 27, 37, 43, 54, 56, 493, 559, 560, 563, 568], "overwrit": [10, 523], "altern": [10, 23, 42, 131, 209, 210, 211, 219, 559, 561, 563], "new": [10, 16, 17, 18, 26, 27, 37, 40, 41, 44, 48, 56, 69, 80, 82, 84, 85, 89, 96, 99, 100, 102, 103, 108, 109, 110, 111, 128, 131, 132, 133, 138, 140, 141, 142, 143, 147, 149, 150, 151, 152, 155, 157, 158, 170, 171, 172, 204, 209, 211, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 464, 491, 495, 498, 499, 524, 536, 537, 538, 541, 542, 543, 546, 547, 548, 550, 551, 553, 556, 558, 561, 564, 568], "while": [10, 26, 27, 36, 37, 38, 52, 56, 128, 131, 132, 133, 182, 218, 222, 240, 246, 247, 501, 535, 547, 548, 553, 556, 559, 563, 565], "leav": [10, 16, 26, 27, 109, 561], "unchang": [10, 45, 76, 180, 181, 207, 208, 209, 210, 211, 219, 493, 566], "tdir": 10, "new_fileset": 10, "norigin": 10, "note": [10, 18, 24, 26, 27, 28, 29, 40, 43, 45, 46, 47, 50, 82, 93, 109, 111, 131, 132, 133, 134, 140, 144, 149, 150, 161, 165, 166, 178, 188, 204, 207, 208, 210, 211, 219, 464, 491, 493, 494, 495, 497, 498, 499, 501, 538, 560, 561, 562, 566, 567, 568], "layout": [10, 171], "been": [10, 25, 26, 38, 45, 46, 47, 52, 82, 89, 91, 131, 132, 133, 138, 139, 141, 142, 143, 144, 145, 147, 163, 170, 171, 173, 182, 194, 195, 219, 221, 222, 239, 464, 492, 493, 535, 538, 545, 550, 553, 554, 556, 559, 560, 561, 562], "is_fil": [10, 563], "relative_to": 10, "192": [10, 13, 20, 26, 28, 47, 557, 561], "plot_read_fileset": [10, 13, 557], "basic": [11, 26, 27, 28, 41, 44, 45, 50, 53, 54, 71, 131, 132, 133, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 535, 548, 556, 563, 564, 566, 568], "info": [11, 20, 159, 162, 165, 177, 178, 179, 464, 535, 538, 539, 541, 543], "beam": [11, 18, 24, 26, 27, 28, 535, 541], "gantri": [11, 20, 26, 28], "ssd": 11, "field": [11, 20, 26, 28, 42, 90, 128, 130, 145, 464, 491, 495, 499, 535, 553], "89": 11, "darci": [11, 12, 16, 17], "mason": [11, 12, 16, 17, 23], "list_beam": 11, "summar": [11, 563], "line": [11, 20, 23, 24, 25, 27, 28, 39, 43, 44, 47, 51, 54, 85, 131, 132, 133, 171, 464, 535, 542, 553, 559, 560, 561, 563, 566], "13": [11, 249, 264, 265, 266, 268, 484, 485, 496], "11": [11, 20, 23, 207, 208, 209, 210, 211, 219, 254, 260, 262, 276, 277, 328, 329, 392, 413, 433, 449, 473, 478, 483, 493, 535, 555, 556, 568], "beamsequ": [11, 18, 24, 26, 27, 28, 42, 131, 535, 541], "cp0": 11, "controlpointsequ": 11, "float": [11, 32, 40, 42, 52, 81, 88, 128, 131, 132, 133, 159, 161, 162, 163, 165, 179, 203, 215, 219, 492, 493, 494, 495, 496, 497, 501, 517, 530, 531, 535, 541, 542, 548, 551, 553, 555, 561], "sourcetosurfacedist": 11, "10": [11, 20, 23, 26, 28, 38, 51, 53, 148, 173, 195, 246, 249, 385, 420, 427, 449, 493, 494, 496, 497, 535, 542, 546, 556, 561, 563, 568], "beamnam": [11, 18, 42], "beamnumb": [11, 24, 26, 27, 28], "8d": 11, "gantryangl": 11, "1f": 11, "join": [11, 44, 464], "002": [11, 13, 557], "plot_read_rtplan": [11, 13, 557], "scratch": [12, 18, 48, 131, 132, 133, 182, 535, 539, 540, 553, 559, 566], "produc": [12, 24, 26, 40, 52, 54, 249, 493, 496, 535, 543, 548, 553, 556], "standard": [12, 20, 22, 32, 36, 37, 38, 40, 43, 45, 47, 52, 53, 56, 128, 131, 132, 133, 134, 138, 140, 143, 144, 145, 146, 147, 148, 150, 151, 171, 182, 195, 199, 205, 206, 207, 208, 209, 210, 211, 212, 215, 219, 250, 489, 493, 494, 497, 498, 535, 537, 540, 541, 543, 544, 551, 553, 562, 563, 566, 568], "compliant": [12, 54, 535, 544], "written": [12, 24, 26, 32, 43, 44, 49, 51, 52, 131, 132, 133, 155, 157, 158, 171, 182, 194, 195, 535, 547, 548, 556, 559, 561, 563], "have": [12, 14, 25, 26, 27, 28, 32, 36, 37, 38, 40, 42, 43, 45, 46, 47, 51, 54, 97, 128, 131, 132, 133, 135, 138, 139, 141, 142, 145, 148, 161, 164, 171, 173, 182, 195, 205, 215, 217, 218, 219, 220, 221, 222, 239, 240, 246, 247, 464, 490, 493, 503, 514, 524, 535, 541, 544, 546, 547, 550, 554, 556, 558, 559, 560, 561, 562, 563, 565, 566, 568], "valid": [12, 48, 54, 56, 83, 86, 87, 89, 124, 128, 131, 132, 133, 135, 161, 174, 182, 195, 212, 219, 221, 222, 239, 240, 414, 415, 464, 495, 499, 501, 502, 506, 508, 517, 518, 521, 535, 553, 554, 555, 566], "tmp4m3s2x1u": 12, "20240307": 12, "0033": [12, 20], "214106": 12, "849501": 12, "firstnam": 12, "123456": 12, "delet": [12, 17, 54, 131, 132, 133, 221, 239, 464, 535, 550, 559, 560], "datetim": [12, 93, 491, 495, 499], "filemetadataset": [12, 24, 26, 132, 135, 164, 182, 195, 527, 535, 550, 561], "explicitvrlittleendian": 12, "dt": [12, 32, 60, 65, 93, 507, 519, 535, 544, 553], "now": [12, 20, 128, 131, 132, 133, 489, 495, 535, 537, 538, 541, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 559, 560, 561, 563, 568], "contentd": 12, "strftime": [12, 491, 495, 499], "y": [12, 40, 219, 464, 493], "m": [12, 22, 498, 559, 560, 563, 565, 566, 568], "contenttim": 12, "long": [12, 32, 36, 178, 182, 520, 535, 555, 561], "micro": 12, "mediastoragesopclassuid": [12, 563], "mediastoragesopinstanceuid": 12, "implementationclassuid": 12, "transfersyntaxuid": [12, 45, 46, 131, 132, 133, 170, 535, 537, 544, 561, 566], "namedtemporaryfil": [12, 17], "suffix": [12, 173, 464, 489, 498, 535, 556], "save_a": [12, 16, 17, 24, 26, 44, 45, 49, 51, 52, 131, 132, 133, 182, 535, 537, 550, 556, 561, 566, 568], "enforce_file_format": [12, 131, 132, 133, 182, 535, 556, 561], "reopen": 12, "unlink": 12, "004": [12, 13, 557], "plot_write_dicom": [12, 13, 557], "303": 13, "input_output": [13, 557], "output": [13, 16, 20, 24, 26, 27, 40, 46, 52, 54, 207, 208, 219, 222, 246, 247, 491, 495, 499, 535, 548, 550, 557, 559, 560, 561, 563], "byte": [14, 24, 26, 30, 32, 33, 34, 36, 38, 42, 45, 51, 52, 53, 54, 77, 78, 79, 89, 90, 111, 128, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 160, 161, 162, 163, 164, 166, 176, 177, 178, 179, 180, 181, 182, 187, 188, 192, 194, 195, 203, 205, 219, 221, 222, 239, 240, 249, 464, 496, 498, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 535, 546, 547, 548, 553, 556, 561, 563, 566, 568], "help": [14, 24, 25, 26, 27, 28, 43, 47, 162, 535, 538, 546, 553, 555, 558, 559, 560, 566], "save": [14, 16, 24, 26, 44, 45, 51, 52, 535, 538, 541, 560, 561, 562, 566, 568], "blob": 14, "databas": 14, "io": [14, 16, 132, 155, 157, 158, 527, 535, 556, 561], "bytesio": [14, 16, 132, 155, 535, 556, 561], "dcmwrite": [14, 49, 70, 131, 132, 133, 157, 158, 535, 544, 550, 551, 553, 556, 561], "filebas": [14, 70, 145, 148, 153, 194, 527], "dicomfilelik": [14, 70, 155, 156, 535, 537], "usag": [14, 24, 26, 27, 28, 30, 37, 42, 48, 212, 219, 246, 247, 464, 498, 527, 535, 548, 556, 563], "memory_dataset": [14, 21, 557], "dicom_filenam": 14, "write_dataset_to_byt": 14, "buffer": [14, 29, 131, 132, 133, 141, 142, 143, 146, 147, 151, 152, 155, 157, 158, 161, 182, 194, 215, 221, 222, 239, 249, 496, 535, 556], "rewind": [14, 166, 176, 177, 178, 535, 542], "seek": [14, 131, 132, 133, 141, 142, 143, 147, 151, 152, 155, 157, 158, 161, 182, 535, 537, 547, 556], "adapt_dataset_from_byt": 14, "interest": [14, 51, 558, 561], "stuff": 14, "is_little_endian": [14, 16, 45, 130, 131, 132, 133, 145, 148, 155, 157, 158, 159, 162, 167, 168, 175, 177, 178, 179, 180, 181, 182, 194, 219, 464, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 535, 556], "bond": 14, "jame": 14, "007": [14, 17, 19, 557], "dummydatabas": 14, "__init__": [14, 128, 130, 131, 132, 133, 134, 155, 157, 158, 170, 171, 172, 204, 221, 222, 239, 240, 248, 249, 464, 491, 493, 494, 495, 496, 497, 498, 499, 500], "self": [14, 154, 249, 464, 491, 493, 494, 495, 496, 497, 499, 561, 566], "_blob": 14, "dict": [14, 30, 34, 42, 92, 108, 110, 128, 131, 132, 133, 169, 171, 205, 219, 220, 221, 239, 535, 538, 553, 555], "file_path": [14, 202], "db": 14, "convert": [14, 29, 30, 34, 36, 37, 38, 46, 52, 76, 77, 79, 85, 88, 90, 93, 97, 129, 131, 132, 133, 171, 182, 204, 205, 212, 213, 214, 215, 216, 217, 218, 219, 222, 240, 246, 247, 249, 464, 493, 495, 496, 524, 535, 538, 541, 544, 547, 548, 551, 552, 553, 556, 560, 561, 568], "ds_byte": 14, "read_byt": 14, "read_dataset": [14, 70, 165], "_new": 14, "dynam": [16, 20], "allow": [16, 17, 24, 26, 27, 36, 38, 42, 43, 47, 51, 56, 88, 131, 132, 133, 169, 171, 219, 497, 535, 537, 538, 547, 550, 551, 553, 554, 555, 556, 565], "tag": [16, 17, 26, 28, 29, 32, 44, 47, 48, 51, 52, 56, 60, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 142, 145, 148, 149, 150, 151, 152, 155, 157, 158, 159, 161, 163, 171, 179, 180, 184, 199, 205, 215, 217, 218, 219, 246, 247, 520, 524, 527, 535, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 556, 561, 562], "present": [16, 26, 28, 38, 51, 79, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 130, 131, 132, 133, 135, 144, 145, 146, 148, 154, 161, 166, 169, 171, 172, 182, 195, 204, 206, 207, 208, 209, 210, 211, 219, 220, 240, 248, 464, 535, 537, 545, 547, 548, 561, 568], "unknown": [16, 20, 32, 47, 85, 128, 129, 131, 132, 133, 145, 192, 535, 540, 545, 547, 551, 553, 561, 567], "1001": [16, 20, 47, 131], "acm": [16, 47, 110], "un": [16, 32, 56, 90, 159, 182, 192, 515, 535, 536, 548, 550, 553, 554, 561], "1002": [16, 20, 47, 561], "hello": [16, 561], "world": [16, 561], "1003": [16, 20], "regist": [16, 25, 26, 47, 128, 464, 490, 535, 551, 556, 561], "One": [16, 29, 40, 44, 47, 51, 54, 108, 109, 110, 128, 131, 132, 133, 206, 212, 219, 221, 239, 559, 560], "42": [16, 535, 538], "two": [16, 20, 25, 26, 28, 38, 40, 42, 43, 46, 47, 49, 89, 108, 109, 110, 131, 132, 133, 140, 171, 219, 249, 464, 493, 496, 498, 535, 542, 556, 561, 562, 568], "three": [16, 30, 34, 36, 40, 110, 464, 498, 561, 563], "contributor": 16, "datadict": [16, 47, 527, 535, 544, 547, 561], "add_private_dict_entri": [16, 42, 47, 535, 547], "valuerep": [16, 22, 60, 505, 507, 511, 513, 527], "demonstr": [16, 50, 535, 536], "implicit": [16, 26, 27, 38, 42, 46, 89, 131, 132, 133, 155, 157, 158, 159, 162, 171, 182, 215, 229, 244, 464, 490, 512, 535, 538, 545, 547, 553, 556, 566], "is_implicit_vr": [16, 45, 130, 131, 132, 133, 155, 157, 158, 159, 160, 162, 167, 168, 182, 194, 464, 512, 535, 547, 556], "block": [16, 18, 20, 26, 27, 28, 47, 131, 132, 133, 134, 535, 550, 560], "private_block": [16, 47, 131, 132, 133], "0x1001": 16, "add_new": [16, 47, 131, 132, 133, 134, 561], "0x01": [16, 47, 131], "0x02": [16, 47], "0x03": 16, "simul": [16, 131, 132, 133], "fp": [16, 145, 148, 153, 159, 161, 162, 166, 167, 168, 175, 176, 177, 178, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "forc": [16, 29, 131, 132, 133, 154, 161, 165, 166, 171, 182, 535, 539, 541, 543, 561], "defin": [16, 17, 20, 25, 26, 36, 37, 38, 47, 51, 56, 128, 131, 132, 133, 134, 170, 171, 206, 219, 464, 493, 535, 541, 559, 561, 563, 568], "vm": [16, 32, 42, 62, 108, 109, 110, 111, 112, 118, 119, 122, 128, 535, 539, 547, 550, 556, 561], "is_retir": [16, 108, 109, 110, 118, 119, 128, 464, 535, 544], "flag": [16, 20, 43, 96, 131, 132, 133, 166, 171, 176, 177, 178, 493, 535, 550, 553, 563], "blank": [16, 17, 109, 204, 492, 535, 537, 561], "new_dict_item": [16, 108, 110], "0x10011001": 16, "0x10011002": 16, "0x10011003": 16, "entri": [16, 25, 26, 27, 42, 48, 52, 108, 109, 110, 111, 118, 119, 535, 537, 554, 559, 560], "string": [16, 17, 20, 25, 26, 32, 42, 56, 77, 78, 79, 109, 128, 131, 132, 133, 134, 161, 172, 183, 192, 194, 196, 200, 201, 204, 222, 240, 249, 464, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 506, 508, 517, 518, 519, 523, 535, 538, 540, 541, 545, 546, 551, 553, 562], "private_cr": [16, 47, 110, 111, 119, 122, 123, 124, 131, 132, 133, 134, 249], "new_entries_dict": [16, 108, 110], "noutput": 16, "003": [16, 19, 557], "plot_add_dict_entri": [16, 19, 557], "point": [17, 24, 25, 26, 27, 28, 32, 50, 54, 179, 215, 219, 464, 493, 494, 497, 501, 535, 537, 542, 553, 559, 561, 567], "It": [17, 26, 27, 30, 34, 41, 42, 43, 44, 45, 47, 49, 50, 52, 54, 131, 132, 133, 145, 171, 182, 535, 541, 542, 559, 560, 561, 562, 563, 565, 566, 568], "replac": [17, 76, 77, 79, 109, 464, 491, 495, 499, 535, 547, 554], "curv": [17, 568], "keyword": [17, 26, 27, 28, 29, 40, 42, 47, 52, 53, 84, 85, 92, 106, 108, 109, 117, 118, 120, 125, 127, 128, 131, 132, 133, 161, 171, 180, 181, 182, 205, 210, 212, 215, 217, 218, 219, 221, 222, 239, 240, 246, 247, 250, 464, 524, 535, 539, 541, 544, 546, 547, 551, 555, 556, 560, 561, 563, 566, 567], "patientbirthd": [17, 42], "data_el": [17, 131, 132, 133, 184, 187, 188, 191, 193, 198, 199, 213, 561, 562], "callback": [17, 25, 26, 131, 132, 133, 535, 544], "function": [17, 20, 25, 26, 27, 29, 30, 34, 36, 40, 41, 42, 43, 44, 47, 49, 52, 53, 54, 55, 58, 59, 67, 70, 72, 74, 81, 91, 98, 102, 109, 110, 128, 131, 132, 133, 136, 137, 145, 146, 148, 153, 159, 162, 164, 165, 169, 171, 180, 181, 182, 202, 204, 205, 206, 213, 214, 215, 216, 217, 218, 219, 221, 222, 239, 240, 246, 247, 250, 410, 491, 492, 493, 495, 501, 524, 525, 527, 528, 530, 535, 536, 537, 538, 543, 544, 546, 547, 548, 551, 553, 556, 560, 561, 562, 563, 566, 568], "insid": [17, 535, 537], "person_names_callback": 17, "curves_callback": 17, "0xff00": 17, "0x5000": 17, "del": [17, 18, 42, 47, 131, 561], "etc": [17, 18, 40, 42, 44, 50, 52, 128, 131, 132, 133, 205, 535, 536, 542, 553, 559, 563, 566], "walk": [17, 131, 132, 133], "remove_private_tag": [17, 47, 131, 132, 133], "method": [17, 23, 29, 30, 34, 38, 42, 45, 46, 47, 49, 50, 51, 53, 97, 100, 128, 130, 131, 132, 133, 134, 138, 139, 141, 142, 143, 147, 151, 152, 155, 157, 158, 161, 169, 170, 171, 172, 182, 204, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 249, 464, 491, 493, 494, 495, 496, 497, 498, 499, 535, 538, 541, 544, 546, 553, 555, 556, 561, 562, 563, 566, 567], "easili": [17, 535, 536, 538], "delattr": 17, "otherpatientid": [17, 535, 537], "otherpatientidssequ": [17, 561], "possibl": [17, 30, 36, 38, 42, 43, 52, 93, 128, 131, 132, 133, 147, 155, 157, 158, 169, 180, 181, 182, 218, 219, 464, 501, 535, 544, 546, 547, 548, 553, 556, 562, 563, 567], "assign": [17, 42, 69, 128, 535, 541, 548, 554], "19000101": 17, "plot_anonym": [17, 19, 557], "300a": [18, 26, 27, 28, 44], "00f8": 18, "apertur": 18, "00fe": 18, "block1": 18, "block2": 18, "toi": 18, "block_ds1": 18, "blocktyp": 18, "blocknam": 18, "block_ds2": 18, "should": [18, 25, 26, 27, 30, 32, 34, 36, 37, 38, 40, 42, 43, 44, 47, 51, 52, 54, 128, 131, 132, 133, 141, 143, 144, 145, 146, 147, 148, 161, 166, 169, 171, 173, 180, 181, 195, 204, 212, 213, 214, 215, 216, 217, 218, 219, 222, 240, 489, 517, 535, 537, 538, 545, 546, 551, 559, 560, 561, 563, 564, 566, 568], "like": [18, 25, 26, 29, 36, 42, 43, 47, 51, 54, 72, 74, 85, 111, 131, 132, 133, 153, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 176, 178, 179, 182, 194, 195, 197, 198, 199, 221, 222, 239, 246, 247, 495, 535, 538, 548, 551, 554, 556, 560, 561, 562, 563], "plan_d": 18, "sinc": [18, 38, 47, 131, 132, 133, 136, 137, 144, 145, 146, 148, 153, 182, 493, 535, 555, 559, 563, 568], "did": [18, 535, 536, 556], "blocksequ": 18, "numberofblock": 18, "beam0": 18, "block_ds3": 18, "abov": [18, 24, 25, 26, 27, 28, 42, 47, 51, 54, 128, 131, 132, 133, 205, 222, 246, 247, 535, 545, 560, 563], "forget": [18, 54], "001": [18, 19, 47, 557], "plot_sequ": [18, 19, 557], "011": 19, "metadata_process": [19, 557], "20040119072730": [20, 26, 28, 47, 561], "12322": [20, 26, 28, 47, 561], "0005": [20, 26, 28, 47, 76, 77, 78, 79, 131, 132, 133, 161, 162, 524, 535, 536, 561, 562, 563], "primari": [20, 26, 28, 47, 561], "072731": [20, 26, 28, 561], "19970430": 20, "072730": [20, 26, 28], "112749": 20, "112936": 20, "113008": 20, "ge": 20, "medic": [20, 40, 44, 46, 563], "system": [20, 24, 26, 27, 28, 43, 50, 155, 157, 158, 171, 219, 249, 496, 535, 556, 561, 563, 565, 568], "jfk": 20, "0500": 20, "ct01_oc0": 20, "e": [20, 24, 26, 27, 28, 30, 34, 40, 42, 43, 44, 51, 52, 56, 85, 128, 131, 132, 133, 134, 161, 167, 168, 171, 172, 173, 204, 205, 219, 222, 240, 248, 491, 493, 498, 523, 535, 538, 545, 547, 551, 556, 559, 560, 561, 565], "rhapsod": 20, "0009": [20, 47, 52, 131, 132, 133, 215, 219, 530, 531, 535, 548], "gems_iden_01": [20, 47], "fidel": [20, 47], "ge_genesis_ff": [20, 47], "suit": [20, 47, 535, 555], "ct01": [20, 47], "1004": [20, 524, 535, 548], "product": [20, 493], "hispe": 20, "1027": 20, "sl": [20, 26, 28, 32, 524], "862399669": 20, "servic": [20, 563], "1031": 20, "mobil": 20, "10e6": 20, "genesi": 20, "05": [20, 560], "10e7": 20, "exam": 20, "checksum": 20, "973283917": 20, "10e9": 20, "stamp": 20, "o": [20, 22, 71, 73, 246, 247], "abcd1234": [20, 561], "1234abcd": [20, 561], "ag": [20, 32], "AS": [20, 32, 519], "000y": 20, "21b0": 20, "addit": [20, 26, 27, 28, 30, 34, 38, 76, 131, 132, 133, 170, 171, 222, 240, 246, 247, 495, 498, 499, 543, 551, 553, 556, 562, 563, 565, 566], "histori": 20, "gems_pati_01": 20, "statu": [20, 116, 128], "isovue300": 20, "helic": 20, "kvp": 20, "120": [20, 53], "0088": 20, "collect": [20, 47, 56, 133, 162, 563], "diamet": 20, "480": 20, "rout": 20, "iv": 20, "1100": 20, "reconstruct": 20, "338": 20, "6716": 20, "1110": 20, "distanc": 20, "detector": 20, "1099": 20, "3100585938": 20, "1111": 20, "630": 20, "1120": 20, "tilt": 20, "tabl": [20, 23, 32, 36, 37, 45, 52, 128, 131, 132, 133, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 182, 195, 205, 206, 207, 208, 209, 210, 215, 217, 218, 219, 221, 239, 464, 524, 535, 548, 551, 556, 560, 561, 563, 565, 566], "height": 20, "133": [20, 166], "699997": 20, "1150": 20, "exposur": 20, "1601": 20, "1151": 20, "rai": [20, 26, 28, 561], "tube": 20, "170": 20, "1152": 20, "1160": 20, "filter": [20, 26, 27, 131, 132, 133], "larg": [20, 45, 47, 54, 131, 132, 133, 134, 138, 139, 162, 179, 492, 535, 537, 538, 545, 547, 548, 551, 553, 566, 568], "bowti": 20, "fil": 20, "1190": [20, 535, 551], "focal": 20, "spot": 20, "1210": 20, "convolut": 20, "kernel": 20, "ff": [20, 148], "0019": 20, "gems_acqu_01": 20, "912": [20, 535, 548], "cell": 20, "theta": 20, "373": [20, 22], "75": [20, 26, 27, 53, 406], "0166": 20, "100f": 20, "horiz": 20, "ref": 20, "955": [20, 42], "799988": 20, "1011": 20, "1013": [20, 535, 548], "baselin": [20, 38, 46, 52, 144, 219, 232, 244, 464, 535, 555, 568], "1014": [20, 535, 551], "1015": 20, "enhanc": [20, 206, 219, 538], "1016": [20, 535, 548], "1017": 20, "1018": 20, "ra": 20, "1019": [20, 52], "79187": 20, "101a": 20, "last": [20, 26, 28, 40, 42, 44, 47, 85, 97, 140, 145, 204, 248, 535, 541, 554, 561, 563, 566], "101b": 20, "loc": 20, "320": [20, 52], "197968": 20, "101e": 20, "1023": 20, "speed": [20, 535, 538, 542, 546, 553, 555], "mm": [20, 23, 491, 495, 499], "rotat": [20, 493], "1024": [20, 128, 131, 132, 133, 535, 549, 562, 566], "mid": [20, 26, 28, 42, 44], "sec": 20, "17": [20, 53, 430], "784578": 20, "1025": 20, "1026": 20, "azimuth": 20, "degre": 20, "msec": 20, "102a": 20, "On": [20, 38, 179, 498, 562], "178": 20, "079926": 20, "102b": 20, "off": [20, 26, 27, 43, 94, 162, 535, 542, 550, 560], "3994": 20, "299316": 20, "102c": 20, "trigger": [20, 26, 28], "10431": 20, "102e": 20, "718": 20, "079956": 20, "102f": 20, "984": 20, "1039": [20, 563], "sfov": 20, "stat": [20, 163], "recon": 20, "comput": 20, "1042": [20, 535, 550], "segment": [20, 29, 206, 218, 219, 535, 546, 553], "1043": 20, "1044": 20, "interscan": 20, "delai": [20, 26, 28], "1047": [20, 535, 550], "compress": [20, 23, 29, 30, 34, 36, 37, 38, 41, 44, 48, 52, 131, 132, 133, 138, 139, 144, 145, 219, 221, 222, 226, 227, 228, 230, 231, 234, 235, 239, 241, 242, 246, 247, 464, 531, 532, 535, 544, 546, 548, 553, 554, 556, 564, 565], "factor": [20, 53, 535, 542, 566, 568], "104a": 20, "104b": [20, 26, 28], "1052": [20, 207, 208, 219], "post": [20, 535, 550], "proc": 20, "1057": 20, "water": [20, 498], "95": [20, 535, 541, 544], "1058": 20, "bone": [20, 50], "105e": 20, "763": 20, "105f": 20, "increment": [20, 173], "1969": 20, "1061": 20, "1576": 20, "1062": 20, "106a": 20, "depend": [20, 30, 34, 38, 45, 46, 52, 54, 97, 128, 131, 132, 133, 141, 142, 143, 171, 182, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 222, 240, 519, 524, 535, 546, 547, 554, 560, 562, 563, 565, 568], "process": [20, 25, 26, 30, 34, 38, 46, 131, 132, 133, 144, 212, 219, 221, 222, 232, 233, 236, 237, 239, 246, 247, 464, 492, 535, 538, 550, 553, 555, 559, 560, 568], "106b": 20, "852": [20, 535, 547], "button": 20, "1071": 20, "fatq": 20, "estim": 20, "were": [20, 26, 28, 131, 132, 133, 535, 541, 543, 559, 560, 568], "1072": 20, "z": [20, 89, 173, 174, 535, 556], "chan": 20, "avg": 20, "1073": [20, 535, 550], "left": [20, 51, 464, 493, 560], "1074": [20, 494, 497], "max": [20, 36, 207, 208, 219, 493], "1075": [20, 535, 550], "right": [20, 464, 493], "1076": 20, "10da": 20, "10db": 20, "projector": 20, "coeffici": [20, 26, 27, 493], "10dc": 20, "10dd": 20, "overrang": 20, "10de": 20, "alpha": [20, 206, 219, 464, 535, 547, 548, 567], "158": 20, "135803": 20, "179": 20, "035797": 20, "sn": 20, "gems_rela_01": 20, "prescrib": 20, "1005": 20, "1007": 20, "1605775145": 20, "24078": 20, "acq": 20, "750675506": 20, "1037": 20, "screen": [20, 24, 26], "anatom": 20, "7400": 20, "1091": 20, "biopsi": 20, "1092": 20, "fl": [20, 26, 28, 32, 561], "1093": [20, 535, 551], "gems_stdy_01": 20, "fd": [20, 32], "862399761": 20, "111079": 20, "No": [20, 174, 510, 558], "header": [20, 154, 161, 166, 535, 537, 561], "107d": 20, "complet": [20, 24, 26, 34, 54, 131, 132, 133, 143, 146, 179, 535, 536, 559, 563, 565], "0025": 20, "gems_sers_01": 20, "1006": [20, 524, 535, 548], "puls": 20, "44": [20, 337], "landmark": 20, "counter": 20, "archiv": 20, "receiv": [20, 195], "host": [20, 249, 496], "0027": 20, "gems_imag_01": 20, "101c": 20, "vma": 20, "mamp": 20, "150": [20, 53], "101d": 20, "phase": 20, "mod": 20, "24": [20, 311], "101f": 20, "clip": [20, 36], "129": [20, 566], "smart": 20, "ON": 20, "foreign": [20, 535, 536], "revis": [20, 535, 539, 541, 542], "1035": 20, "letter": [20, 42, 131, 132, 133], "20406341552734": 20, "r": [20, 38, 128, 131, 132, 133, 464, 562], "coord": 20, "199999809265137": 20, "9": [20, 23, 26, 27, 36, 37, 42, 52, 53, 81, 173, 174, 205, 256, 257, 261, 263, 272, 282, 303, 304, 324, 325, 326, 336, 391, 414, 415, 424, 440, 443, 451, 463, 478, 489, 545, 548, 551, 556, 568], "699999809265137": 20, "69999694824219": 20, "1045": 20, "1046": 20, "1048": 20, "top": [20, 26, 27, 28, 40, 51, 131, 132, 133, 162, 171, 535, 556, 560, 561], "corner": 20, "180": [20, 42], "53579711914062": 20, "1049": [20, 535, 550], "03579711914062": 20, "bottom": [20, 40, 559, 560], "104c": [20, 26, 28], "159": [20, 535, 548], "63580322265625": 20, "104d": [20, 26, 28], "19999694824219": 20, "116": [20, 26, 27, 28, 53], "20304870605469": 20, "side": 20, "l": [20, 23, 29, 35, 45, 46, 131, 132, 133, 144, 219, 222, 234, 235, 241, 242, 244, 245, 246, 247, 354, 535, 546, 556, 565, 566], "1053": [20, 207, 208, 219, 535, 550], "anterior": 20, "posterior": 20, "1054": 20, "1055": 20, "0120": 20, "rescal": [20, 36, 48, 207, 208, 210, 211, 219], "intercept": [20, 42, 207, 208, 219], "slope": [20, 207, 208, 219], "0029": 20, "gems_imps_01": 20, "lower": [20, 131, 132, 133, 134, 171, 464, 493, 535, 556, 563, 567], "rang": [20, 30, 34, 36, 38, 51, 93, 204, 207, 208, 219, 240, 246, 248, 464, 493, 535, 546, 548, 561], "pixels1": 20, "87": [20, 36], "1008": 20, "1009": 20, "100a": 20, "764": 20, "hdr": 20, "struct": [20, 197, 517], "1034": 20, "advantag": [20, 535, 542], "overflow": 20, "underflow": [20, 493], "0043": [20, 26, 28, 561], "gems_parm_01": 20, "400": [20, 52], "input": [20, 24, 26, 52, 204, 212, 219, 221, 498, 535, 551], "1012": 20, "chain": 20, "14": [20, 46, 144, 236, 237, 342, 343, 461, 535, 550], "decon": 20, "107": [20, 255, 331, 380, 535, 542], "21": [20, 53, 431], "20": [20, 53, 219, 393, 442, 535, 553], "calibr": 20, "ibh": 20, "scale": 20, "095": 20, "bbh": 20, "085000": 20, "102000": 20, "095000": 20, "blend": 20, "350": 20, "ppscan": 20, "integr": 20, "level": [20, 26, 27, 28, 39, 40, 131, 132, 133, 162, 171, 172, 535, 541, 553, 556, 560, 561, 562, 563], "40": [20, 53, 411, 535, 553], "delta": 20, "1021": 20, "glow": 20, "term": [20, 52, 205, 219, 221, 239, 249, 493, 495, 496, 499], "748": 20, "749": 20, "750": 20, "pitch": 20, "ratio": [20, 36, 37, 249, 493, 494, 496, 497], "1028": 20, "uniqu": [20, 30, 32, 34, 38, 47, 171, 172, 173, 191, 222, 240, 535, 544, 555, 561, 563], "iden": 20, "1029": [20, 535, 549], "histogram": 20, "2068": 20, "user": [20, 30, 34, 42, 44, 49, 50, 79, 88, 131, 132, 133, 159, 164, 182, 535, 538, 541, 547, 548, 551, 556, 559, 561, 563], "coordin": [20, 26, 27, 42], "200000": 20, "700000": 20, "07992553710938": 20, "3816": 20, "219482421875": 20, "fpa": 20, "gain": 20, "ad": [20, 25, 26, 27, 36, 37, 40, 42, 48, 91, 106, 131, 132, 133, 134, 135, 169, 171, 172, 180, 181, 182, 195, 204, 210, 212, 217, 219, 222, 240, 244, 245, 246, 247, 410, 506, 508, 535, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 555, 556, 558, 559, 562, 567], "cal": 20, "reg": 20, "xm": [20, 26, 28], "auto": [20, 131, 132, 133, 495, 499, 535, 536], "pattern": [20, 26, 28, 104, 105, 107, 535, 556], "tggc": [20, 26, 28], "104e": [20, 26, 28, 561], "durat": [20, 26, 28, 561], "60060977935791": [20, 26, 28, 561], "8192": [20, 179], "32768": [20, 26, 28, 36, 561], "difflib": 20, "compar": [20, 56, 464, 493, 535, 542, 545, 553, 556, 559, 560], "termin": [20, 26, 27, 28, 43, 145, 162, 175], "newlin": 20, "massag": 20, "form": [20, 38, 51, 52, 53, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 131, 132, 133, 222, 246, 247, 250, 489, 498], "rep": 20, "split": [20, 464, 523, 535, 536, 537], "diff": [20, 559], "096": [20, 21, 557], "plot_dicom_differ": [20, 21, 557], "show_charset_nam": [21, 22, 557], "veri": [22, 32, 36, 535, 538, 559, 563, 566], "simpl": [22, 42, 44, 50, 535, 536], "app": 22, "personnam": [22, 32, 60, 128, 511, 535, 536, 547, 550, 551, 553, 556], "default_encod": [22, 498], "iso8859": [22, 131, 132, 133, 159, 162, 194, 512], "person_nam": 22, "2008": [22, 498, 535, 556], "ps3": [22, 498], "p98": 22, "yamada": 22, "tarou": 22, "033": 22, "3ed": 22, "bb": 22, "iso2022_jp": 22, "j": 22, "105": [22, 53, 255, 376, 377, 380], "wang": 22, "xiaodong": 22, "xcd": 22, "xf5": 22, "x5e": 22, "xd0": 22, "xa1": 22, "xb6": 22, "xab": 22, "gb18030": 22, "104": [22, 255, 305, 306, 307, 308, 309, 374, 375, 380], "xe7": 22, "x8e": 22, "x8b": 22, "xe5": 22, "xb0": 22, "x8f": 22, "xe6": 22, "x9d": 22, "xb1": 22, "utf": [22, 464], "101": [22, 255, 366, 367, 380], "hong": [22, 498], "gildong": [22, 498], "363": 22, "321": 22, "316": 22, "324": [22, 494, 497], "327": 22, "310": 22, "253": 22, "261": 22, "346": [22, 535, 544], "265": 22, "277": [22, 535, 548], "euc_kr": [22, 498], "label": [22, 26, 28, 30, 34, 50, 222, 240], "pack": [22, 38, 51, 219, 222, 246, 247, 535, 545, 546, 551, 554], "easiest": [23, 566], "probabl": [23, 54, 563], "zenodo": 23, "doi": 23, "enter": 23, "citat": 23, "box": [23, 40], "along": [23, 171], "et": 23, "al": 23, "http": [23, 40, 50, 559, 560, 562, 565], "github": [23, 535, 544, 558, 559, 560, 565], "onlin": 23, "yyyi": [23, 491, 495], "dd": [23, 491], "recommend": [23, 25, 26, 30, 42, 43, 45, 93, 131, 132, 133, 138, 139, 171, 204, 219, 248, 561, 563, 565, 566], "deal": [23, 43, 51, 218, 535, 537, 546, 561], "jpeg": [23, 29, 35, 38, 44, 45, 46, 52, 80, 131, 132, 133, 138, 139, 144, 213, 214, 215, 216, 217, 218, 219, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 349, 354, 357, 464, 535, 546, 548, 550, 551, 553, 556, 565, 566], "see": [23, 24, 26, 27, 28, 34, 36, 37, 42, 43, 44, 45, 52, 54, 56, 128, 131, 132, 133, 134, 159, 162, 165, 169, 177, 178, 179, 182, 195, 199, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 246, 247, 493, 497, 498, 535, 538, 548, 549, 550, 553, 556, 559, 560, 561, 563, 565, 566, 567], "releas": [23, 47, 527, 544, 548, 551], "march": 23, "2018": [23, 560], "june": 23, "octob": 23, "juli": 23, "2019": 23, "januari": [23, 491, 495], "2020": 23, "mai": [23, 24, 26, 27, 29, 30, 33, 34, 36, 38, 43, 46, 47, 50, 51, 52, 54, 78, 96, 99, 131, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 155, 157, 158, 171, 182, 195, 218, 220, 221, 222, 240, 246, 247, 464, 490, 493, 498, 514, 516, 535, 548, 556, 559, 560, 561, 563, 565, 566, 568], "novemb": 23, "august": 23, "2021": [23, 535, 555], "2022": 23, "2023": 23, "jan": [23, 84, 561], "2024": [23, 527], "recreat": [24, 26, 535, 543], "within": [24, 26, 27, 28, 30, 34, 36, 80, 89, 131, 132, 133, 161, 162, 170, 171, 182, 252, 464, 512, 535, 551, 563, 565, 568], "detail": [24, 26, 38, 42, 43, 44, 52, 54, 94, 128, 131, 132, 133, 162, 252, 493, 497, 527, 535, 553, 556, 559, 560], "review": [24, 26, 558, 559, 560], "than": [24, 25, 26, 27, 28, 32, 36, 37, 38, 40, 45, 46, 51, 54, 56, 128, 131, 132, 133, 140, 141, 142, 143, 144, 145, 147, 148, 155, 157, 158, 161, 165, 171, 174, 183, 197, 204, 219, 220, 489, 493, 535, 536, 537, 538, 543, 544, 545, 548, 550, 553, 556, 561, 562, 566], "export": [24, 26, 43, 535, 553], "includ": [24, 25, 26, 29, 43, 51, 54, 128, 131, 132, 133, 138, 169, 171, 182, 205, 219, 221, 239, 252, 464, 493, 495, 499, 527, 535, 537, 539, 541, 543, 544, 556, 559, 560, 561, 563, 566, 568], "health": [24, 26, 54], "sensit": [24, 26, 53, 54, 131, 132, 133, 524, 568], "git": [24, 26, 27, 559, 560, 565], "util": [24, 26, 52, 54, 63, 64, 65, 70, 527, 535, 536, 543, 544, 556], "main": [24, 25, 26, 41, 42, 49, 54, 118, 535, 538, 559, 560, 561, 565], "instancecreationd": [24, 26], "20030903": [24, 26, 27, 42], "instancecreationtim": [24, 26], "150031": [24, 26, 27, 42], "481": [24, 26, 267, 268, 311, 315, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 441, 442, 460, 461], "sopinstanceuid": [24, 26, 37, 170], "777": [24, 26, 27, 42], "7777": [24, 26, 27, 42], "20030903150023": [24, 26, 27, 42], "20030716": [24, 26, 27, 28, 42], "153557": [24, 26, 28, 42], "prefix": [24, 26, 27, 28, 40, 154, 161, 166, 173, 182, 195, 415, 464, 489, 498, 535, 547, 556, 559, 560, 561, 567], "rather": [24, 26, 27, 28, 51, 54, 128, 131, 132, 133, 171, 204, 220, 493, 535, 536, 537, 544, 548, 550, 553, 556, 561], "In": [24, 25, 26, 27, 30, 34, 36, 38, 40, 42, 44, 45, 47, 52, 54, 76, 171, 464, 493, 535, 543, 549, 551, 555, 556, 559, 560, 561, 563, 566], "wa": [24, 25, 26, 38, 40, 128, 131, 132, 133, 147, 171, 176, 180, 181, 506, 508, 535, 538, 545, 548, 553, 556, 559, 560, 563, 566], "direct": [24, 26, 42, 219, 493, 560, 562, 563], "specifi": [24, 25, 26, 27, 28, 36, 38, 42, 109, 111, 128, 131, 132, 133, 147, 161, 162, 182, 194, 222, 240, 246, 247, 464, 491, 493, 495, 498, 499, 524, 535, 548, 553, 561, 563, 565, 566], "exclude_s": [24, 26], "filespec": [24, 25, 26, 27, 28], "outfil": [24, 26, 561], "argument": [24, 25, 26, 27, 28, 40, 42, 45, 92, 131, 132, 133, 180, 181, 182, 203, 204, 248, 249, 464, 493, 495, 496, 499, 535, 537, 538, 546, 547, 548, 549, 550, 551, 556, 562, 563, 566], "filenam": [24, 26, 27, 28, 104, 105, 106, 107, 131, 132, 133, 155, 157, 158, 163, 164, 171, 173, 182, 535, 550, 559, 563], "If": [24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 40, 41, 42, 43, 49, 52, 53, 54, 56, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 94, 97, 100, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 138, 141, 142, 143, 144, 145, 147, 148, 151, 152, 155, 157, 158, 159, 161, 162, 163, 166, 170, 171, 172, 173, 179, 180, 181, 182, 194, 195, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 239, 240, 246, 247, 248, 249, 250, 464, 489, 490, 493, 494, 495, 496, 498, 501, 505, 506, 507, 508, 513, 517, 520, 524, 535, 541, 553, 556, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568], "your_fil": [24, 26, 27, 28], "yourplan": [24, 26, 27, 28], "stdout": [24, 26], "messag": [24, 26, 27, 28, 94, 252, 535, 538, 547, 555, 556, 559, 561, 563], "exclud": [24, 26, 27, 28, 54, 131, 205, 219, 221, 239], "binari": [24, 26, 128, 131, 132, 133, 219, 249, 493, 496, 535, 539, 547, 548], "larger": [24, 26, 161, 493, 565, 566], "save_filenam": [24, 26], "otherwis": [24, 26, 30, 34, 38, 42, 88, 97, 115, 116, 120, 121, 125, 126, 127, 128, 131, 132, 133, 138, 141, 142, 143, 147, 151, 152, 159, 171, 173, 174, 177, 178, 182, 202, 209, 210, 211, 219, 221, 222, 239, 240, 246, 247, 464, 490, 493, 498, 502, 503, 504, 505, 506, 507, 508, 512, 513, 514, 516, 517, 519, 520], "_from_codifi": [24, 26], "dummi": [24, 26], "error": [24, 26, 36, 54, 56, 76, 86, 87, 96, 128, 131, 132, 133, 464, 493, 501, 527, 535, 538, 539, 542, 544, 545, 546, 547, 548, 550, 551, 555, 556, 559, 561, 566], "savenam": [24, 26], "dicomfil": [24, 26, 70], "pythoncod": [24, 26], "By": [24, 26, 52, 169, 171, 497, 535, 539, 561], "translat": [24, 26, 42, 464, 535, 544], "whole": [24, 26, 159, 205, 219, 221, 239, 535, 556, 566], "fractiongroupsequ": [24, 26, 27, 28], "non": [24, 26, 32, 42, 43, 108, 109, 110, 111, 126, 128, 129, 131, 132, 133, 135, 144, 169, 171, 182, 195, 218, 219, 236, 237, 246, 247, 255, 464, 493, 497, 501, 503, 506, 508, 514, 516, 535, 539, 540, 544, 545, 546, 547, 548, 551, 555, 561], "fractiongroupnumb": [24, 26], "numberoffractionsplan": [24, 26], "30": [24, 26, 27, 28, 53, 54, 404, 560], "numberofbeam": [24, 26], "numberofbrachyapplicationsetup": [24, 26], "referenc": [24, 26, 27, 28, 40, 42, 164, 170, 171, 563], "refd_beam_sequ": [24, 26], "referencedbeamsequ": [24, 26], "refd_beam1": [24, 26], "beamdosespecificationpoint": [24, 26], "239": [24, 26, 27, 28, 42], "531250000000": [24, 26, 27, 28], "751": [24, 26, 27, 28], "87000000000": [24, 26, 27, 28], "accept": [24, 26, 32, 43, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 131, 132, 133, 148, 535, 550, 551, 553, 555, 559], "issu": [24, 26, 28, 30, 34, 36, 44, 54, 56, 76, 77, 79, 87, 219, 535, 538, 539, 540, 541, 542, 547, 556, 558, 559], "toward": [24, 26], "loop": [24, 26, 54], "develop": [25, 26, 27, 43, 535, 544], "subcommand": [25, 26, 27, 535, 553], "command": [25, 27, 39, 44, 54, 131, 132, 133, 182, 535, 543, 553, 555, 556, 559, 560, 565], "packag": [25, 26, 27, 44, 46, 48, 49, 50, 205, 213, 214, 215, 216, 217, 218, 222, 240, 524, 535, 536, 539, 544, 551, 553, 563, 565], "setup": [25, 26, 27, 28, 44, 535, 542, 543, 555], "command1": [25, 26], "command2": [25, 26], "setuptool": [25, 26, 535, 536, 543, 553], "yourpackag": [25, 26], "variou": [25, 26, 47, 535, 536], "entry_point": [25, 26], "pydicom_subcommand": [25, 26], "command1modul": [25, 26], "add_subpars": [25, 26], "command2modul": [25, 26], "liter": [25, 26], "must": [25, 26, 30, 34, 36, 37, 38, 42, 43, 45, 51, 52, 85, 88, 131, 132, 133, 134, 138, 139, 148, 161, 169, 171, 174, 176, 178, 182, 204, 205, 206, 210, 211, 219, 249, 464, 493, 496, 502, 520, 535, 553, 561, 562, 563, 566, 568], "wish": [25, 26, 43, 219], "usual": [25, 26, 27, 28, 37, 42, 47, 52, 109, 132, 142, 154, 159, 535, 538, 559, 561, 565, 566], "convent": [25, 26, 42, 498], "singl": [25, 26, 30, 32, 34, 36, 37, 38, 40, 78, 108, 110, 128, 131, 132, 133, 138, 140, 145, 147, 148, 153, 168, 169, 171, 200, 201, 204, 205, 217, 219, 221, 222, 239, 240, 246, 247, 508, 517, 535, 536, 546, 554, 559, 562, 563], "subpars": [25, 26], "do_command": [25, 26], "filespec_help": [25, 26], "filespec_pars": [25, 26], "sub": [25, 26, 222, 246, 247, 464], "parser": [25, 26], "add_pars": [25, 26], "subcommandnam": [25, 26], "add_argu": [25, 26], "set_default": [25, 26], "func": [25, 26, 560], "And": [25, 26, 27, 28, 30, 535, 551, 559, 560, 561, 568], "arg": [25, 26, 131, 132, 133, 154, 155, 156, 157, 158, 250, 464, 491, 495, 498, 499, 535, 539], "element_v": [25, 26], "yourarg": [25, 26], "need": [25, 26, 27, 30, 34, 36, 37, 38, 40, 42, 43, 46, 47, 49, 53, 54, 77, 79, 93, 97, 131, 132, 133, 159, 165, 222, 518, 521, 535, 538, 553, 556, 559, 560, 561, 562, 563, 565, 566, 568], "argpars": [25, 26], "snippet": [25, 26, 47], "element_valu": [25, 26], "pair": [25, 26, 133, 171, 220, 249, 493, 494, 496, 497], "codifi": [25, 27, 48, 535, 543, 545, 553, 555, 556], "filetyp": [25, 26], "yourself": [25, 26, 51, 52], "shown": [25, 26, 28, 42, 47, 54, 56, 219, 535, 536, 537, 550, 561, 563], "relat": [25, 26, 27, 38, 43, 51, 53, 59, 131, 132, 133, 134, 182, 205, 215, 217, 218, 524, 535, 536, 559, 563, 568], "think": [25, 26], "contribut": [25, 26, 535, 538, 541, 542, 564], "case": [25, 26, 36, 42, 43, 44, 45, 47, 54, 56, 76, 78, 84, 131, 132, 133, 162, 222, 464, 493, 498, 535, 547, 551, 556, 561, 562, 566, 568], "under": [25, 26, 42, 138, 139, 535, 536, 538, 544, 559, 560, 565], "pull": [25, 26, 28, 558, 565], "request": [25, 26, 28, 42, 249, 496, 535, 551, 553, 558], "v2": [26, 27, 37, 535, 551, 565, 568], "offer": [26, 27, 45, 52, 131, 132, 133], "explor": [26, 27, 47], "156": [26, 27, 42], "rt": [26, 27, 28, 42, 69, 169, 171, 563], "plan": [26, 27, 28, 42, 44, 69, 169], "999": [26, 27, 42, 535, 548], "99": [26, 27, 42, 46, 215, 223, 244, 255, 292, 467], "9999": [26, 27, 42, 560], "888": [26, 27, 42], "88": [26, 27, 42, 253, 260, 273, 274, 278, 279, 316, 320, 323, 339, 361, 384, 405, 406, 408, 411, 437, 450, 487, 535, 539], "replic": [26, 27], "exactli": [26, 27, 51, 53, 249, 493, 494, 496, 497, 561], "notat": [26, 27, 28, 464, 493, 501, 561], "0071": [26, 27, 28], "fraction": [26, 27, 28], "0078": [26, 27, 28], "00a0": [26, 27, 28], "brachi": [26, 27, 28], "300c": [26, 27, 28], "0082": [26, 27, 28], "dose": [26, 27, 28, 69, 169, 171, 535, 541, 563], "0275401": [26, 27, 28], "meterset": [26, 27, 28], "0036697": [26, 27, 28], "0006": [26, 27, 28, 29, 38, 131, 132, 133, 215, 217, 218, 219], "simpli": [26, 27, 42, 51], "particular": [26, 27, 42, 45, 51, 52, 89, 164, 535, 538, 548, 561, 567], "q": [26, 27, 28, 559], "quiet": [26, 27, 28, 493], "automat": [26, 27, 40, 42, 45, 47, 51, 52, 54, 97, 128, 131, 132, 133, 171, 180, 181, 182, 493, 494, 535, 544, 548, 550, 553, 559, 560, 561], "pip": [26, 27, 559, 560, 566, 568], "environ": [26, 27, 43, 535, 536, 551, 565], "variabl": [26, 27, 40, 41, 42, 43, 69, 535, 547, 551, 555], "clone": [26, 27, 559, 560, 565], "repositori": [26, 27, 50, 106, 535, 556, 565], "repeat": [26, 27, 51, 118, 121, 125, 126, 171, 535, 546, 555, 561], "reinstal": [26, 27], "similar": [26, 27, 40, 132, 199, 493, 535, 537, 541, 562, 567], "program": [26, 27, 42, 44, 50, 535, 536, 541], "pipe": [26, 27], "grep": [26, 27], "either": [26, 27, 30, 34, 36, 38, 42, 43, 47, 49, 97, 128, 131, 132, 133, 141, 143, 147, 166, 171, 205, 219, 221, 239, 249, 250, 493, 496, 498, 505, 513, 535, 551, 556, 560, 561, 563, 565, 566], "iso": [26, 27, 36, 38, 212, 219, 349, 354, 357, 489, 491, 495, 499, 535, 548], "741": [26, 27], "organ_at_risk": [26, 27], "deliveri": [26, 27], "maximum": [26, 27, 36, 38, 54, 128, 138, 139, 173, 240, 464, 489, 493, 535, 555, 556], "002c": [26, 27], "organ": [26, 27, 498], "risk": [26, 27], "ptv": [26, 27], "target": [26, 27, 40], "0026": [26, 27], "prescript": [26, 27], "826203": [26, 27], "00b0": [26, 27], "00b6": [26, 27], "0111": [26, 27], "control": [26, 27, 29, 49, 84, 85, 101, 102, 222, 246, 247, 535, 541, 563, 566], "0115": [26, 27], "rate": [26, 27], "650": [26, 27], "011a": [26, 27], "010c": [26, 27], "cumul": [26, 27], "0051": [26, 27], "9990268": [26, 27], "0180": [26, 27], "regular": [26, 27, 42, 464, 535, 555], "express": [26, 27, 464], "abil": [26, 27, 52, 535, 543, 544, 551, 556], "alreadi": [26, 28, 36, 37, 39, 40, 45, 52, 76, 109, 131, 132, 133, 135, 145, 172, 176, 195, 204, 219, 492, 535, 543, 561, 563, 566, 568], "nest": [26, 28, 42, 131, 535, 542, 555], "minim": [26, 28, 30, 182, 195, 222, 246, 247, 493, 535, 556], "below": [26, 28, 32, 36, 37, 42, 44, 45, 47, 172, 182, 205, 215, 217, 218, 219, 524, 535, 538, 563, 566, 567], "studyid": [26, 28], "bitsstor": [26, 28, 36, 215, 217, 219], "pre": [26, 28, 42, 44, 535, 556, 559], "id00001": [26, 28], "study1": [26, 28], "plan1": [26, 28], "02754010000000": [26, 28], "003669700000": [26, 28], "treatment": [26, 28], "static": [26, 28, 133, 464], "photon": [26, 28], "energi": [26, 28], "00000000000000": [26, 28], "coll": [26, 28], "couch": [26, 28], "wedg": [26, 28], "boli": [26, 28], "alwai": [26, 28, 46, 47, 52, 120, 128, 134, 161, 215, 219, 220, 222, 246, 247, 493, 535, 547, 551, 553, 556], "those": [26, 28, 30, 34, 39, 43, 47, 535, 538, 541, 551, 561, 563, 566], "extra": [26, 28, 42, 222, 535, 556], "submit": [26, 28, 44, 535, 541, 558, 559, 560], "interfac": [27, 39, 535, 553, 565], "introduct": [28, 34, 41, 48, 559, 560, 563, 564, 568], "backend": [29, 535, 556], "iter_pixel": [29, 535, 556], "well": [29, 47, 52, 54, 171, 206, 219, 464, 535, 538, 539, 541, 548, 559, 561, 565], "as_arrai": [29, 217, 219, 222], "as_buff": [29, 222], "iter_arrai": [29, 222], "iter_buff": [29, 222], "describ": [29, 38, 42, 46, 54, 108, 110, 128, 131, 132, 133, 493, 498, 562, 563], "encod": [29, 30, 32, 38, 39, 41, 45, 46, 52, 53, 56, 76, 77, 78, 79, 128, 129, 131, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 155, 157, 158, 159, 162, 167, 168, 171, 182, 189, 193, 194, 195, 197, 198, 199, 201, 218, 221, 222, 245, 246, 247, 464, 490, 493, 498, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 527, 535, 541, 544, 545, 546, 547, 548, 553, 554, 555, 556, 561, 562, 566], "overrid": [29, 133, 169, 220, 492, 535, 546, 563], "int": [29, 30, 32, 34, 42, 56, 77, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 138, 140, 141, 143, 144, 146, 147, 148, 150, 151, 152, 155, 157, 158, 159, 160, 161, 162, 165, 167, 168, 171, 172, 173, 176, 177, 178, 179, 194, 203, 204, 205, 209, 210, 211, 219, 221, 222, 239, 240, 246, 247, 248, 249, 250, 251, 464, 491, 492, 493, 494, 495, 496, 497, 498, 512, 517, 520, 524, 561], "number_of_fram": [29, 30, 34, 141, 143, 147, 220, 221, 239, 240], "samples_per_pixel": [29, 30, 34, 220, 221, 239, 240], "bits_alloc": [29, 30, 34, 219, 220, 221, 239, 240], "bits_stor": [29, 30, 34, 220, 221, 239, 240], "photometric_interpret": [29, 30, 34, 220, 221, 239, 240], "color": [29, 30, 34, 36, 37, 38, 45, 48, 206, 212, 219, 240, 535, 548, 550, 566], "pixel_represent": [29, 30, 34, 220, 221, 239, 240], "pixel_keyword": [29, 30, 221, 239], "whether": [29, 38, 42, 82, 102, 128, 131, 132, 133, 148, 249, 464, 493, 496, 502, 535, 538, 541, 546, 548, 553, 558, 559, 565], "sign": [29, 30, 32, 34, 36, 38, 52, 80, 240, 249, 493, 496, 535, 551, 559, 560, 568], "unsign": [29, 30, 32, 34, 36, 38, 52, 148, 240, 535, 551, 568], "planar_configur": [29, 30, 220, 221, 239], "planar": [29, 38, 52, 131, 132, 133, 219, 221, 239, 535, 546], "nativ": [29, 38, 45, 222, 240, 246, 247, 249, 467, 496, 531, 566], "floatpixeldata": [29, 30, 52, 219, 221, 239, 535, 553], "doublefloatpixeldata": [29, 30, 52, 219, 221, 239, 535, 553], "ndarrai": [29, 36, 40, 42, 46, 51, 52, 53, 80, 82, 97, 103, 131, 132, 133, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 239, 240, 246, 247, 506, 508, 524, 535, 544, 548, 551, 556, 566, 568], "as_rgb": 29, "bool": [29, 30, 34, 56, 81, 82, 94, 96, 101, 106, 115, 116, 125, 126, 128, 130, 131, 132, 133, 135, 138, 148, 155, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 195, 202, 205, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 239, 240, 246, 247, 249, 464, 490, 492, 493, 494, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 524], "ycbcr": [29, 36, 37, 38, 213, 214, 215, 216, 217, 218, 222, 246, 247], "ybr_full_422": [29, 38, 52, 212, 215, 217, 219, 222, 246, 247, 535, 548, 554], "rgb": [29, 30, 34, 36, 37, 38, 45, 52, 97, 206, 212, 213, 214, 215, 216, 217, 218, 219, 222, 246, 247, 535, 545, 548, 553, 556, 566], "force_rgb": 29, "convers": [29, 30, 34, 36, 37, 38, 93, 128, 205, 215, 217, 218, 524, 535, 537, 547, 548, 550, 562, 568], "force_ybr": 29, "view_onli": [29, 222, 246, 247], "make": [29, 30, 34, 36, 38, 42, 43, 44, 47, 54, 131, 132, 133, 464, 489, 501, 535, 538, 547, 553, 556, 561, 563, 565, 566], "best": [29, 48, 69], "effort": 29, "attempt": [29, 30, 34, 144, 181, 182, 524, 535, 544, 553, 556, 561], "immut": [29, 222, 491, 495, 499, 535, 547], "encapsul": [29, 38, 45, 52, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 222, 240, 527, 535, 536, 546, 551, 556], "apply_jls_sign_correct": 29, "raw": [29, 30, 34, 36, 42, 51, 52, 53, 129, 130, 131, 132, 133, 141, 143, 147, 153, 159, 163, 169, 222, 240, 246, 247, 524, 535, 541, 547, 550, 568], "integ": [29, 30, 32, 34, 36, 38, 52, 148, 204, 219, 248, 249, 464, 489, 493, 494, 496, 497, 535, 539, 541, 551, 568], "apply_j2k_sign_correct": 29, "doesn": [29, 38, 51, 84, 131, 132, 133, 205, 215, 218, 222, 246, 247, 535, 550, 559], "signed": [29, 36, 222, 246, 247], "codestream": [29, 219], "rle_segment_ord": [29, 218], "big": [29, 33, 34, 38, 46, 131, 132, 133, 141, 142, 143, 147, 151, 152, 155, 157, 158, 182, 215, 218, 222, 224, 244, 249, 255, 464, 490, 496, 535, 555, 556, 568], "pylibjpeg": [29, 37, 45, 46, 131, 132, 133, 217, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 243, 535, 551, 553, 556, 566], "byteord": [29, 33, 34, 249, 496, 568], "guid": [30, 34, 40, 44, 131, 132, 133, 527, 535, 547, 553, 556, 560, 561, 566], "intend": [30, 34, 37, 38, 131, 132, 133, 221, 239, 240, 559], "advanc": [30, 34, 40], "who": [30, 34, 535, 541, 542], "support": [30, 34, 43, 48, 70, 71, 80, 97, 131, 132, 133, 157, 158, 171, 204, 205, 206, 213, 214, 215, 216, 217, 218, 219, 222, 240, 244, 248, 249, 496, 524, 535, 536, 544, 545, 546, 547, 548, 550, 551, 553, 554, 555, 556, 563, 564, 565, 566, 567], "provid": [30, 34, 38, 41, 42, 47, 52, 97, 128, 131, 132, 133, 141, 143, 147, 205, 215, 217, 218, 222, 240, 524, 535, 542, 562, 565, 566, 567], "cover": [30, 34, 561, 563, 566, 568], "mechan": [30, 34, 222, 240], "unencod": [30, 34, 240], "least": [30, 34, 38, 247, 464, 520, 563], "is_avail": [30, 34, 97, 205, 213, 214, 215, 216, 217, 218, 222, 240, 524, 535, 546], "signatur": [30, 34, 157, 158, 535, 551], "met": [30, 34, 165, 205, 213, 214, 215, 216, 217, 218, 524, 535, 546], "decoder_depend": 30, "tupl": [30, 34, 42, 45, 47, 85, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 131, 132, 133, 134, 139, 141, 143, 144, 147, 148, 152, 155, 157, 158, 161, 204, 221, 222, 239, 240, 248, 250, 251, 464, 491, 493, 495, 498, 535, 538, 547, 566], "rlelossless": [30, 34, 37, 45, 131, 132, 133, 559, 566], "jpeg2000": [30, 34, 46, 144, 244, 535, 546, 548], "pillow": [30, 34, 46, 50, 131, 132, 133, 216, 230, 231, 232, 233, 535, 544, 546, 548, 550, 553, 556, 559], "imagecodec": [30, 34], "gdcm": [30, 34, 37, 45, 46, 131, 132, 133, 213, 230, 231, 232, 233, 234, 235, 236, 237, 243, 535, 538, 544, 547, 551, 553, 554, 556, 566], "runner": [30, 34, 221, 239, 566], "decoderunn": 30, "bytearrai": [30, 34, 131, 132, 133, 141, 142, 143, 147, 151, 152, 155, 157, 158, 219, 221, 222, 239, 249, 496], "worth": [30, 221, 239], "indirectli": [30, 34], "get_opt": [30, 34, 221, 239], "At": [30, 34, 559, 567], "minimum": [30, 34, 36, 37, 195, 493], "transfer_syntax_uid": [30, 34, 131, 132, 133], "grayscal": [30, 34, 36, 37, 38, 52], "4095": [30, 34, 38, 240], "65535": [30, 34, 38, 240, 563], "ybr_full": [30, 34, 36, 37, 38, 52, 212, 215, 217, 219, 222, 240, 246, 247, 535, 548, 554], "condition": [30, 568], "signal": [30, 34, 493], "done": [30, 34, 45, 464, 493, 559, 560, 561, 566], "set_opt": [30, 34, 221, 239], "successfulli": [30, 34, 147], "fail": [30, 34, 97, 535, 538, 539, 544, 559, 560, 563], "caus": [30, 34, 501, 535, 537, 563], "awar": [30, 34, 54, 563], "affect": [30, 34, 213, 214, 215, 216, 217, 218, 219, 493, 559, 560], "add_plugin": [30, 34, 222, 240], "plugin_label": [30, 34], "my_decoder_func": 30, "my_packag": [30, 34], "rlelosslessdecod": 30, "my_decod": 30, "plugin": [31, 35, 45, 46, 131, 132, 133, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 246, 247, 535, 553, 554, 558, 565, 566], "anyth": [32, 47, 51, 52, 219], "ascii": [32, 174, 200, 464, 535, 547], "decim": [32, 81, 101, 464, 492, 493, 494, 496, 497, 501, 502, 535, 541, 542, 553], "depth": [32, 36, 41, 50, 52, 172, 535, 548, 565], "even": [32, 36, 47, 51, 138, 140, 145, 161, 166, 219, 222, 246, 493, 535, 551, 561, 563, 566], "correctli": [32, 47, 54, 97, 171, 213, 214, 493, 535, 538, 541, 544, 545, 547, 548, 551, 553, 554, 555, 556, 559], "empti": [32, 128, 131, 132, 133, 135, 141, 143, 144, 146, 147, 148, 155, 204, 219, 248, 464, 493, 494, 498, 517, 535, 536, 544, 547, 548, 549, 550, 551, 553, 556, 561, 563, 568], "multivalu": [32, 60, 82, 200, 201, 504, 505, 506, 507, 508, 511, 519, 522, 523, 535, 541], "accord": [32, 54, 161, 193, 561, 563], "od": [32, 182, 535, 544, 545, 553], "OF": [32, 182, 535, 550], "ol": [32, 182, 535, 544, 545, 553], "st": [32, 44], "ur": [32, 516], "ut": 32, "never": [32, 81, 131, 132, 133, 464, 493, 559], "greater": [32, 38, 131, 132, 133, 140, 145, 219, 489, 493, 535, 544, 562], "hint": 32, "union": 32, "mutablesequ": [32, 76, 129, 131, 132, 133, 159, 162, 167, 168, 503, 504, 505, 506, 507, 508, 511, 513, 514, 517, 519, 521, 522, 523], "AT": [32, 504, 535, 548, 553, 555], "attribut": [32, 38, 47, 69, 84, 128, 130, 131, 132, 133, 155, 157, 158, 170, 171, 172, 182, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 249, 464, 491, 493, 494, 495, 496, 497, 498, 499, 500, 535, 536, 546, 551, 554, 555, 556, 561, 563], "basetag": [32, 42, 60, 85, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 130, 131, 132, 133, 134, 159, 161, 162, 165, 171, 175, 177, 178, 179, 246, 247, 250, 251, 252, 504, 520, 535, 538, 553], "dsfloat": [32, 60, 492, 506, 535, 553], "dsdecim": [32, 60, 88, 492, 506, 535, 553], "doubl": [32, 40, 52, 131, 132, 133, 215, 219, 530, 531, 535, 548], "ov": [32, 182, 535, 548, 553], "word": [32, 40, 54, 109, 188, 464, 498, 561], "short": [32, 520, 559, 561], "sv": [32, 524, 535, 548], "uc": [32, 521, 535, 544], "unlimit": 32, "identifi": [32, 38, 43, 47, 54, 191, 464], "uri": [32, 131, 132, 133, 535, 551, 562], "url": [32, 40], "uv": [32, 524, 535, 548], "config": [32, 43, 497, 519, 527, 535, 541, 546, 547, 548, 550, 551, 553, 556], "datetime_convers": [32, 505, 507, 513, 527], "use_ds_decim": [32, 82, 506, 527, 535, 550], "rlelosslessencod": [33, 34, 37, 535, 553, 556], "jpeglslosslessencod": [33, 36], "jpeglsnearlosslessencod": [33, 36], "tutori": [34, 40, 44, 535, 548, 558, 559, 560, 561, 563, 566, 568], "foo": 34, "encoderunn": 34, "multi": [34, 38, 46, 52, 60, 82, 128, 131, 132, 133, 138, 141, 143, 144, 145, 146, 147, 148, 171, 204, 205, 219, 221, 222, 240, 246, 247, 516, 527, 535, 544, 546, 548, 550, 561, 568], "32": [34, 38, 131, 132, 133, 134, 139, 148, 215, 218, 219, 493, 524, 535, 545, 553, 556, 568], "complement": [34, 38, 41, 240, 249, 496], "encoder_depend": 34, "my_encoder_func": 34, "my_encod": 34, "rle": [35, 38, 45, 46, 52, 131, 132, 133, 138, 139, 144, 217, 218, 219, 238, 240, 243, 244, 245, 417, 535, 546, 547, 553, 554, 556, 565, 566], "lossless": [35, 38, 45, 46, 52, 131, 132, 133, 138, 139, 144, 217, 218, 219, 227, 228, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 535, 550, 553, 554, 556, 566], "scheme": [36, 37, 159, 464, 511, 512, 518, 521, 522, 567, 568], "iec": [36, 38, 212, 219, 349, 354, 357, 489], "14495": [36, 354], "itu": [36, 212, 219, 489], "link": [36, 40, 560], "free": [36, 131, 132, 133], "explan": [36, 37], "relationship": [36, 37, 171, 560], "glossari": [36, 37, 39], "absent": [36, 498, 568], "palett": [36, 37, 38, 48, 105, 169, 171, 206, 219, 535, 548, 550], "practic": [36, 48, 69, 171], "complic": [36, 563], "wai": [36, 42, 43, 44, 49, 51, 52, 54, 131, 132, 133, 535, 541, 556, 558, 561, 562, 563, 565, 567], "lossi": [36, 37, 46, 144, 219, 235, 242, 566], "track": 36, "dure": [36, 42, 47, 109, 535, 554, 556, 559, 560], "absolut": [36, 104, 105, 106, 107, 131, 132, 133, 152, 155, 157, 158, 170, 171, 249, 493, 496, 535, 556, 566], "constraint": [36, 38, 493, 494, 501], "NEAR": 36, "jls_error": [36, 131, 132, 133, 566], "pass": [36, 40, 42, 45, 51, 52, 92, 104, 105, 107, 133, 138, 139, 204, 535, 538, 559, 560, 563, 566], "though": [36, 563], "intens": [36, 37, 38, 566], "unit": [36, 52, 131, 132, 133, 161, 205, 219, 221, 239, 524, 559, 566, 568], "up": [36, 45, 51, 52, 131, 132, 133, 155, 157, 158, 171, 172, 179, 182, 217, 489, 493, 498, 523, 535, 538, 542, 544, 559, 560, 561, 564, 565, 566], "0b10000000": 36, "127": 36, "0b01111111": 36, "ok": [36, 84, 85, 171, 559], "255": 36, "much": [36, 42, 501, 535, 538, 541, 542, 550], "therefor": [36, 204, 219], "restrict": [36, 38], "both": [36, 37, 43, 44, 76, 81, 82, 97, 148, 171, 210, 219, 493, 535, 537, 544, 547, 550, 556, 562], "white": [36, 37, 535, 543], "black": [36, 37, 535, 556], "index": [36, 37, 42, 52, 53, 130, 131, 132, 133, 147, 171, 172, 173, 204, 209, 210, 211, 219, 221, 222, 239, 240, 247, 248, 464, 524, 535, 551, 556, 560, 568], "red": [36, 37, 38, 206, 219, 535, 550, 559, 560], "green": [36, 37, 38, 535, 550], "blue": [36, 37, 38, 535, 550], "lookup": [36, 37, 52, 112, 113, 114, 116, 117, 127, 206, 207, 208, 209, 210, 219, 464, 535, 551, 561], "noth": [36, 37, 563], "equal": [36, 37, 38, 140, 145, 249, 464, 493, 494, 496, 497, 535, 545, 546, 547], "keep": [36, 37, 171, 563, 565], "mind": [36, 37], "inclus": [36, 37, 38], "downscal": [36, 37], "accordingli": [36, 37, 131, 132, 133], "interleav": [36, 568], "better": [36, 40, 535, 539, 541, 545], "downstream": 36, "expect": [36, 42, 141, 143, 147, 205, 213, 215, 218, 219, 221, 222, 239, 246, 247, 535, 545, 547, 551, 555, 559, 566], "common": [36, 47, 49, 53, 54, 76, 535, 546, 563, 568], "being": [36, 38, 103, 112, 113, 114, 116, 117, 120, 122, 123, 124, 127, 131, 132, 133, 145, 155, 157, 158, 218, 240, 535, 536, 546, 553, 554, 556, 563, 565, 566], "With": [36, 240, 464], "separ": [36, 45, 100, 128, 131, 132, 133, 138, 139, 464, 495, 498, 535, 538, 539, 566], "concaten": [36, 137, 148, 464], "px": 36, "third": [36, 48, 464, 493, 498, 565], "xff": 36, "ch": [36, 568], "losslessli": 36, "place": [36, 37, 38, 45, 46, 131, 132, 133, 204, 248, 493, 535, 544, 561, 563], "jpeglslossless": 36, "rgb_color": [36, 37, 69], "assert": [36, 559, 562], "samplesperpixel": [36, 37, 215, 217, 218, 219, 535, 541, 546, 566], "bitsalloc": [36, 37, 46, 128, 215, 217, 218, 219, 535, 546], "pixelrepresent": [36, 37, 215, 217, 218, 219, 535, 547], "921600": [36, 37], "261792": 36, "greyscal": 36, "14180": 36, "jpeglsnearlossless": [36, 535, 551, 556, 566], "149188": 36, "our": [36, 559, 560, 561, 563, 568], "page": [36, 535, 544, 547, 558, 559, 560, 565], "isn": [36, 131, 132, 133, 141, 143, 147, 162, 182, 219, 464, 489, 535, 547, 551, 556, 560, 561], "necessari": [36, 42, 43, 50, 140, 145, 249, 493, 496, 498, 563, 568], "8508": 36, "pyjpegl": [36, 45, 131, 132, 133, 214, 234, 235, 241, 242, 535, 556, 566], "underli": 37, "algorithm": [37, 489], "packbit": 37, "made": [37, 131, 132, 133, 140, 144, 171, 182, 535, 537, 538, 550, 559, 560, 563], "might": [37, 47, 240, 568], "ask": [37, 44, 558, 559, 560], "why": [37, 566], "vice": [37, 182, 206, 219], "versa": [37, 182, 206, 219], "answer": [37, 558, 561, 566], "higher": [37, 39, 131, 132, 133, 147, 493, 535, 538, 562], "befor": [37, 46, 47, 91, 128, 131, 132, 133, 161, 172, 179, 210, 211, 219, 221, 222, 464, 535, 538, 541, 542, 544, 547, 559, 560, 561, 563, 566, 568], "decis": 37, "known": [37, 38, 42, 43, 47, 52, 56, 84, 96, 128, 129, 131, 132, 133, 206, 219, 249, 251, 496, 535, 545, 548, 550, 551, 553, 561, 567], "20x": [37, 45, 535, 553], "slower": [37, 45, 219], "424152": 37, "pixel_data_handl": [37, 51, 52, 131, 132, 133, 525, 527, 535, 546, 553, 556], "convert_color_spac": [37, 52, 219, 527, 535, 553], "ybr": [37, 52, 535, 553], "187460": 37, "retir": [38, 109, 116, 128, 131, 132, 133, 180, 181, 246, 247, 255, 464, 535, 551], "techniqu": [38, 44], "10918": [38, 212, 219, 357, 535, 553], "unencapsul": 38, "henc": [38, 182], "public": [38, 131, 132, 133, 182], "compon": [38, 46, 80, 144, 172, 174, 217, 219, 498, 535, 536, 538, 553], "previous": [38, 163, 535, 546, 550, 553], "constrain": 38, "iod": [38, 182, 219, 563, 568], "remain": [38, 145, 171, 464, 535, 541, 560], "hand": [38, 54, 493, 535, 551], "ybr_rct": [38, 45, 217, 566], "transform": [38, 52], "prior": [38, 45, 145, 182, 222, 240, 535, 556, 566], "taken": [38, 131, 132, 133, 141, 143, 147, 219, 220], "account": 38, "especi": [38, 54, 559], "determin": [38, 42, 51, 128, 131, 171, 207, 208, 219, 249, 493, 496, 535, 556, 563, 568], "invers": [38, 491, 493, 495], "ybr_partial_420": 38, "ybr_ict": [38, 217], "further": [38, 563, 567], "r1": 38, "g1": 38, "b1": 38, "r2": 38, "g2": 38, "b2": 38, "rn": 38, "gn": 38, "bn": 38, "contigu": 38, "typic": [38, 96, 136, 566], "mean": [38, 46, 218, 464, 489, 559, 561, 563, 566, 567], "chapter": [38, 489], "mani": [38, 43, 50, 52, 138, 139, 141, 142, 535, 537, 541, 542, 556, 558], "most": [38, 42, 43, 46, 50, 54, 85, 222, 246, 247, 249, 496, 535, 538, 541, 542, 561, 563, 566, 567], "signific": [38, 43, 249, 496, 503, 514, 516, 535, 538], "past": [38, 145, 166, 195], "familiar": [39, 40, 561, 563, 566, 568], "document": [39, 43, 131, 132, 133, 169, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 246, 247, 539, 544, 545, 556, 558, 564], "reader": 40, "unfamiliar": 40, "step": [40, 535, 542, 553, 563, 567, 568], "achiev": [40, 140], "understand": [40, 42, 559, 566, 568], "aim": [40, 535, 551], "explain": 40, "subject": [40, 562, 567], "fairli": 40, "technic": [40, 41], "api": [40, 222, 240, 246, 247, 535, 545, 559, 562, 566, 567], "learn": [40, 44, 559, 563], "remind": 40, "about": [40, 42, 43, 44, 50, 52, 54, 94, 219, 561, 563, 566, 568], "italic": 40, "lowercas": [40, 464], "uppercas": [40, 128, 464], "capit": [40, 464, 493, 535, 541], "american": 40, "english": 40, "spell": [40, 76, 535, 546], "hex": [40, 51, 128, 131, 132, 133, 134, 494, 497, 535, 538], "comma": 40, "ital": 40, "seq": [40, 561], "try": [40, 97, 180, 181, 221, 464, 535, 539, 547, 561, 563], "gender": 40, "neutral": 40, "pronoun": 40, "hypothet": 40, "tick": 40, "markup": [40, 560], "0xb4": 40, "built": [40, 249, 496, 565], "fragments_per_fram": [40, 138], "haven": [40, 559, 561], "docstr": [40, 559], "initi": [40, 44, 132, 133, 134, 177, 178, 204, 219, 248, 498, 559], "proper": [40, 535, 538], "noun": 40, "wrap": [40, 42, 155, 157, 158, 182], "unless": [40, 165, 172, 464, 493, 535, 539, 550, 563], "good": [40, 54, 559, 560], "reason": [40, 560], "attr": 40, "dtype": [40, 42, 51, 52, 53, 131, 132, 133, 217, 219, 221, 240, 566], "chtml": 40, "part05": [40, 560], "sect_6": 40, "html": [40, 560], "nema": 40, "org": [40, 50, 562], "four": [40, 97, 171, 179], "five": [40, 498], "warn": [40, 43, 54, 56, 76, 77, 79, 84, 85, 219, 527, 535, 537, 541, 545, 546, 547, 548, 550, 553, 554, 556, 559, 560], "sparingli": 40, "featur": [40, 43, 535, 543, 558, 559], "versionad": 40, "versionchang": 40, "handler": [40, 45, 46, 52, 80, 94, 97, 131, 132, 133, 205, 213, 214, 215, 216, 217, 218, 219, 524, 527, 535, 544, 546, 548, 549, 550, 551, 553, 554, 556, 559, 562, 566], "instal": [41, 43, 46, 50, 97, 217, 222, 240, 535, 536, 543, 553, 560, 561, 564, 566, 568], "intermedi": [41, 42, 493], "core": [41, 48], "mostli": [42, 130], "behav": [42, 43, 111, 204, 535, 545, 547, 563], "via": [42, 45, 56, 128, 131, 132, 133, 217, 464, 491, 535, 544, 546, 551, 553, 554, 556, 562, 563, 566], "entir": [42, 131, 161, 164, 213, 217, 222, 246, 247, 559, 561, 566], "collaps": [42, 51], "dcm_qt_tree": [42, 535, 542, 543], "0x10": [42, 128, 131, 132, 133, 250], "squar": [42, 47, 493, 561], "bracket": [42, 47, 561], "around": [42, 535, 556, 559], "conveni": [42, 47, 52, 128, 535, 551, 556, 562], "cannot": [42, 46, 85, 131, 132, 133, 171, 182, 204, 493, 497, 501, 535, 553, 559, 563], "retriev": [42, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 127, 128, 131, 132, 133, 535, 548, 556, 561, 562], "12345": [42, 131], "member": [42, 493], "numer": [42, 171, 173, 249, 464, 493, 496, 517, 535, 539, 548, 553, 555], "begin": [42, 100, 138, 151, 166, 249, 464, 496], "Or": [42, 565], "beam1": 42, "thing": [42, 51, 560, 561], "harder": 42, "realli": [42, 535, 538, 547], "0x300a": 42, "0xb0": 42, "0xc2": 42, "rememb": [42, 47, 51], "exact": [42, 493, 494, 496, 497], "handi": 42, "dir": [42, 44, 131, 132, 133, 535, 541, 554, 560, 567], "session": [42, 43, 44, 47, 131, 132, 133, 560], "prompt": 42, "pat": 42, "patientsetupsequ": [42, 44], "patientsex": [42, 131, 132, 133], "anywher": [42, 561], "insensit": [42, 131, 132, 133], "_dicom_dict": 42, "add_dict_entri": [42, 47, 111, 535, 544, 547], "similarli": [42, 492, 561, 566], "hood": 42, "offici": [42, 112, 113, 114, 115, 116, 117, 118, 125, 126, 127, 128, 464, 535, 541, 542, 561, 568], "reload": 42, "0x0010": [42, 131, 132, 133, 250, 561], "softwarevers": 42, "0x0018": 42, "0x1020": 42, "pixel_byt": 42, "175": 42, "166": 42, "203": [42, 226, 244, 255, 332, 349], "216": 42, "186": 42, "183": 42, "157": 42, "181": 42, "184": 42, "171": 42, "152": 42, "164": 42, "235": 42, "906": 42, "910": 42, "923": 42, "922": 42, "929": 42, "927": 42, "914": 42, "954": 42, "938": 42, "942": [42, 535, 548], "925": 42, "905": [42, 52], "959": 42, "916": [42, 535, 538], "911": 42, "904": 42, "909": 42, "int16": [42, 52, 53, 568], "extens": [42, 78, 132, 535, 546, 553], "effect": [42, 145, 489], "behavior": [42, 43, 56, 84, 85, 96, 131, 132, 133, 535, 542, 546, 550, 551], "enforc": [42, 48, 204, 535, 541], "t1": 42, "0x00100010": [42, 128, 131, 132, 133], "equival": [42, 131, 132, 133, 141, 143, 147, 219, 221, 239, 493, 535, 545], "t2": 42, "t3": 42, "t4": 42, "portion": 42, "is_priv": [42, 128, 170, 249, 464, 535, 544], "odd": [42, 131, 132, 133, 134, 205, 219, 221, 222, 239, 249, 535, 545, 554, 556, 561], "prettier": 42, "select": [42, 131, 132, 133, 144, 237], "There": [43, 49, 50, 52, 535, 546, 559, 560, 561, 562, 568], "against": [43, 128, 171, 535, 540, 551], "turn": [43, 94, 162, 535, 551], "enabl": [43, 93, 131, 132, 133], "reading_validation_mod": [43, 56, 76, 77, 79, 95, 129, 131, 132, 133, 535, 554], "writing_validation_mod": [43, 56, 79, 535, 554], "newli": [43, 131, 132, 133, 535, 550], "ignor": [43, 56, 76, 84, 85, 111, 128, 131, 132, 133, 175, 464, 493, 518, 527, 535, 549, 553, 556, 560], "rais": [43, 56, 76, 77, 79, 81, 82, 84, 85, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 129, 130, 131, 132, 133, 134, 135, 145, 148, 154, 155, 157, 158, 161, 163, 166, 171, 179, 180, 182, 195, 204, 205, 213, 214, 215, 216, 217, 218, 219, 222, 240, 248, 249, 252, 464, 489, 493, 494, 496, 497, 501, 506, 508, 520, 527, 535, 539, 540, 545, 547, 548, 551, 553, 554, 556, 561, 563, 566], "As": [43, 46, 47, 493, 561, 567], "suggest": [43, 558, 559, 560], "except": [43, 47, 51, 52, 56, 76, 84, 85, 86, 97, 131, 132, 133, 154, 169, 171, 182, 195, 204, 222, 240, 252, 493, 527, 535, 538, 540, 543, 544, 547, 548, 551, 553, 554, 556, 559, 561, 563, 566], "special": [43, 60, 527, 535, 542], "avoid": [43, 103, 162, 179, 492, 535, 547, 548, 551, 563], "invalid": [43, 56, 76, 77, 85, 89, 90, 135, 219, 489, 535, 547, 551, 553, 555, 556], "legaci": 43, "strictli": [43, 50], "adher": 43, "guarante": [43, 46, 47, 493], "predefin": 43, "That": [43, 47], "local": [43, 69, 106, 491, 495, 535, 554, 559, 560, 561, 565], "balanc": 43, "evolut": 43, "break": [43, 464, 535, 551, 563], "sometim": [43, 47, 535, 546, 556], "improv": [43, 535, 542, 545, 546, 553, 555, 558], "protect": 43, "upcom": [43, 96], "compat": [43, 45, 491, 493, 495, 535, 538, 539, 541, 542, 543, 544, 556, 565], "next": [43, 47, 96, 131, 132, 133, 162, 171, 172, 535, 538, 551, 563, 568], "simplest": [43, 563, 565], "pydicom_futur": [43, 535, 551], "temporarili": 43, "linux": [43, 535, 544, 560, 565], "future_behavior": [43, 527, 535, 551], "again": [43, 44, 54, 559, 563], "anoth": [43, 212, 219, 535, 551, 561, 566], "txt": [43, 561], "virtual": [43, 565], "brief": 44, "overview": [44, 563], "pure": 44, "report": [44, 535, 548, 558, 564], "radiotherapi": [44, 169], "easi": [44, 52], "complex": [44, 52, 249, 494, 496, 497], "natur": [44, 464, 493], "helper": [44, 134], "filedataset": [44, 49, 69, 106, 161, 165, 182, 527, 535, 538, 540, 553, 554, 556, 561, 563], "supin": 44, "prone": 44, "hfp": 44, "rtplan2": 44, "fetch": [44, 45, 52, 566], "0182": 44, "01b2": 44, "patientposit": 44, "thorough": 44, "server": [44, 560], "pynetdicom": 44, "primarili": [44, 535, 539], "design": [44, 54, 567], "let": [44, 45, 535, 548, 559, 560, 561, 563, 566], "wherev": 44, "alter": [44, 54], "intellig": 44, "decompress": [44, 45, 46, 131, 132, 133, 216, 222, 535, 544, 548, 565, 566], "onc": [44, 45, 47, 82, 109, 111, 559, 560, 566, 567], "kind": [44, 47], "discuss": [44, 559, 563], "question": [44, 558], "give": [44, 493, 501, 535, 537, 538, 561, 566], "feedback": [44, 535, 542], "bug": [44, 539, 543, 547, 550, 553, 558, 559, 565], "tracker": [44, 558, 559], "major": [44, 48, 96, 551], "fix": [44, 162, 543, 558, 559, 561], "announc": [44, 97], "ll": [45, 559, 560, 561, 566, 568], "reli": [45, 46, 80], "amount": [45, 131, 132, 133, 213, 221, 493, 566, 568], "too": [45, 131, 132, 133, 134, 464, 520, 535, 545, 547, 548, 558], "extend": [45, 46, 131, 132, 133, 138, 139, 141, 143, 147, 204, 221, 233, 239, 244, 248, 535, 551, 556, 566], "relev": [45, 180, 181, 182, 559], "encap": [45, 169, 527, 535, 544, 546, 556, 566], "encapsulate_extend": [45, 138, 535, 551, 556, 566], "jpeg2000lossless": [45, 566], "third_party_compression_func": [45, 566], "appropri": [45, 51, 52, 131, 132, 133, 166, 204, 217, 493, 522, 566], "ct_compressed_bas": [45, 566], "extendedoffsett": [45, 139, 566], "extendedoffsettablelength": [45, 139, 566], "ct_compressed_ext": [45, 566], "Near": [45, 131, 132, 133, 144, 235, 242, 244, 245, 535, 556, 566], "81": [45, 46, 53, 131, 132, 133, 144, 219, 235, 242, 244, 245, 255, 353, 354, 399, 535, 539], "ct_rle_lossless": [45, 131, 132, 133, 566], "encoding_plugin": [45, 131, 132, 133, 240, 566], "Will": [45, 109], "implicitli": [45, 566], "explicitli": [45, 51, 52, 88, 535, 546, 553, 563, 566], "jpeg2k": [45, 69, 535, 546, 566], "us1_rl": 45, "j2k": [45, 535, 556], "abl": [46, 47, 535, 550, 556, 562, 563, 566, 568], "ideal": 46, "jpeg_l": [46, 131, 132, 133, 214, 535, 544, 556], "libjpeg": [46, 535, 556, 565], "openjpeg": [46, 565], "capac": 46, "mention": [46, 561], "Be": 46, "verifi": [46, 535, 541], "purpos": [46, 566], "far": [46, 128], "deflat": [46, 215, 223, 244, 464, 535, 550], "57": [46, 144, 219, 236, 244, 255, 355, 357, 535, 546, 551, 556], "sv1": [46, 219, 244, 535, 550], "70": [46, 144, 219, 237, 244, 255, 339, 356, 357, 535, 550, 551, 556], "92": [46, 144, 255, 348, 349, 535, 545, 546], "93": [46, 53, 144, 255, 347, 349, 535, 540, 546], "jpegimageplugin": 46, "jpeg2kimageplugin": 46, "5x": [46, 535, 553], "faster": [46, 535, 538, 550, 553], "adapt": [46, 535, 546], "v1": [47, 535, 545, 546, 547, 568], "easier": [47, 132, 535, 556, 560], "outlin": 47, "preced": [47, 535, 556], "reserv": [47, 464], "thu": [47, 535, 536], "necessarili": [47, 51, 535, 556], "enclos": 47, "clear": [47, 128, 131, 132, 133, 171, 204, 248, 535, 556], "0x00091001": 47, "privateblock": [47, 131, 132, 133, 527], "0x0009": [47, 131, 132, 133], "compani": 47, "accomplish": 47, "0x000b": 47, "000b": 47, "add_new_priv": [47, 131, 132, 133, 535, 556], "latest": [47, 565], "encount": [47, 89], "newer": 47, "handl": [47, 48, 52, 54, 76, 97, 128, 131, 132, 133, 178, 196, 464, 525, 527, 530, 535, 536, 539, 541, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 555, 556, 561, 562, 565], "0x888800001": 47, "somenewtag": 47, "analog": [47, 131, 132, 133], "0x004100001": 47, "lut": [48, 50, 206, 207, 208, 209, 210, 211, 219, 535, 548, 550, 551, 553], "voi": [48, 209, 210, 211, 219, 535, 548, 551], "overlai": [48, 52, 69, 131, 132, 133, 219, 527, 535, 548, 551, 556, 561], "overlay_arrai": [48, 131, 132, 133, 535, 548], "precondit": 48, "parti": [48, 498, 565], "pil": [48, 535, 538, 546], "wxpython": [48, 535, 538], "futur": [48, 96, 131, 132, 133, 535, 541, 551, 567], "proof": [48, 96], "fileread": [49, 70, 202, 527, 560, 561], "fine": 49, "read_parti": [49, 70, 161, 202, 561], "preexist": 49, "mainli": [50, 131, 132, 133, 464, 535, 542], "concern": 50, "often": [50, 52, 109, 562], "desir": [50, 204, 212, 219], "sever": [50, 56, 535, 542, 544], "stdlib": 50, "2d": [50, 535, 551], "axesimag": 50, "thank": [50, 535, 538, 541], "roi": 50, "key": 50, "pydicom_tkint": 50, "contrib": [50, 538, 558], "come": 50, "photoimag": 50, "pydicom_pil": 50, "imview": 50, "60xx": [51, 205, 219, 535, 548, 561], "3000": [51, 131, 132, 133, 205, 207, 208, 219, 535, 548, 561], "6000": 51, "6002": 51, "601e": 51, "0x6000": [51, 205, 561], "0x3000": 51, "29282": 51, "tend": [51, 565], "lazi": 51, "unpack": [51, 219, 222, 246, 247, 517, 535, 546, 554], "uint8": [51, 206, 207, 208, 209, 210, 219], "484": 51, "align": 51, "pack_bit": [51, 219, 535, 546, 551], "numpy_handl": [51, 97, 527, 535, 553], "packed_byt": 51, "temp": [51, 52], "reduc": [51, 52, 173, 212, 219, 535, 546, 551, 556, 563, 566], "512x512": [51, 52], "256x256": [51, 52], "bulk": [52, 128, 131, 132, 133, 527, 530, 535, 548, 549, 552, 562], "although": [52, 171, 563], "almost": 52, "parametr": [52, 559], "map": [52, 128, 131, 169, 464, 535, 556, 560], "interchang": [52, 563], "mr_small": [52, 69], "x89": 52, "x03": 52, "xfb": 52, "xcb": 52, "xeb": 52, "xf9": 52, "x02": 52, "x94": 52, "x7f": 52, "immedi": 52, "varieti": 52, "broken": 52, "fragment": [52, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 535, 548, 556], "1227": 52, "302": 52, "304": [52, 566], "328": 52, "628": 52, "770": 52, "907": 52, "298": 52, "331": 52, "355": 52, "498": [52, 402, 403, 489, 535, 545], "566": 52, "706": 52, "280": 52, "285": 52, "334": 52, "431": 52, "1094": 52, "1068": 52, "1083": 52, "339": 52, "377": 52, "413": 52, "1318": 52, "1346": 52, "1336": 52, "378": 52, "374": 52, "422": 52, "1369": 52, "1129": 52, "862": 52, "straightforward": 52, "particularli": [52, 54], "300": 52, "shrunk": 52, "apply_color_lut": [52, 219, 527, 535, 548], "palette_color": [52, 69], "pet": [52, 206, 219], "possibli": [52, 131, 132, 133, 222], "physic": [52, 563], "quantiti": [52, 524, 568], "hounsfield": 52, "apply_modality_lut": [52, 209, 210, 211, 219, 527, 535, 548, 550], "hu": 52, "apply_voi_lut": [52, 219, 527, 535, 548, 550, 551], "voic": 53, "audio": [53, 568], "lead": [53, 56, 69, 464, 493, 494, 503, 535, 539, 544, 555, 568], "ecg": [53, 69, 568], "5400": [53, 131, 132, 133, 524, 568], "consist": [53, 132, 182, 535, 541, 560, 566, 568], "synchronis": [53, 568], "003a": [53, 131, 132, 133, 524, 568], "001a": 53, "waveformdata": [53, 568], "240000": [53, 568], "multiplex_1": 53, "112": 53, "25": [53, 426, 489, 494, 497], "68": [53, 437, 457, 458], "106": [53, 255, 378, 379, 380], "62": 53, "37": [53, 249, 496], "131": [53, 259], "137": 53, "10000": [53, 568], "multiplex_2": 53, "1200": [53, 535, 551, 568], "multiplex_arrai": [53, 131, 132, 133, 524, 535, 551, 568], "55": [53, 535, 538], "65": [53, 273], "85": 53, "60": [53, 535, 542, 553], "110": [53, 535, 541], "coupl": [54, 563], "truli": 54, "certain": [54, 131, 132, 133, 219, 560, 561], "tool": [54, 535, 556], "look": [54, 180, 181, 559, 560, 561], "approxim": 54, "tricki": 54, "de": 54, "xxx": 54, "524288": 54, "bigger": [54, 535, 550], "potenti": 54, "disadvantag": 54, "sai": [54, 559, 561], "wrote": 54, "quit": [54, 535, 538, 559], "switch": [54, 89, 535, 539, 541, 543, 548, 550, 553, 555, 559, 560], "individu": [54, 212, 219, 498, 535, 541, 551, 553], "code_fil": 54, "previou": [54, 172, 173, 535, 541, 544, 550, 551, 556], "certainli": 54, "difficult": [54, 559], "singleton": 56, "infer_sq_for_un_vr": [56, 535, 554], "undefin": [56, 128, 145, 159, 175, 535, 540, 551, 554], "conform": [56, 128, 131, 132, 133, 171, 174, 182, 195, 202, 218, 535, 544, 546, 547, 561, 563, 566], "failur": [56, 464, 535, 550, 556, 559], "longer": [56, 82, 128, 215, 535, 545, 546, 548, 551, 553, 556, 563], "bypass": 56, "dataelem": [60, 78, 131, 132, 133, 163, 181, 197, 198, 522, 527, 535, 547, 550, 561], "dataelement_from_raw": [60, 561], "rawdatael": [60, 91, 129, 131, 132, 133, 159, 163, 193, 522], "tag_in_except": 60, "tupletag": [60, 535, 538], "convert_ae_str": 60, "convert_atvalu": 60, "convert_da_str": 60, "convert_ds_str": 60, "convert_dt_str": 60, "convert_is_str": 60, "convert_numb": [60, 180, 181], "convert_obvalu": 60, "convert_owvalu": 60, "convert_pn": 60, "convert_single_str": 60, "convert_sq": 60, "convert_str": 60, "convert_tag": 60, "convert_text": 60, "convert_tm_str": 60, "convert_ui": 60, "convert_un": 60, "convert_ur_str": 60, "convert_valu": 60, "multi_str": [60, 70], "multiv": [60, 527, 561], "is_valid_d": [60, 535, 553], "format_number_as_d": [60, 535, 553], "isfloat": [60, 535, 555], "rt_plan": 69, "rt_dose": [69, 563], "rtdose": 69, "rt_ss": 69, "rtstruct": 69, "siemen": 69, "withoverlai": 69, "waveform_ecg": 69, "us1_uncr": 69, "obxxxx1a": 69, "us1_j2kr": 69, "data_element_gener": [70, 162], "data_element_offset_to_valu": 70, "read_deferred_data_el": 70, "read_file_meta_info": [70, 132], "read_preambl": [70, 202, 561], "read_sequ": 70, "read_sequence_item": 70, "filewrit": [70, 131, 132, 133, 527, 561], "correct_ambiguous_vr": 70, "correct_ambiguous_vr_el": 70, "write_atvalu": 70, "write_da": 70, "write_dataset": [70, 535, 556], "write_data_el": 70, "write_dt": 70, "write_file_meta_info": [70, 182], "write_numb": 70, "write_number_str": 70, "write_obvalu": 70, "write_owvalu": 70, "write_pn": [70, 535, 545], "write_sequ": 70, "write_sequence_item": 70, "write_str": 70, "write_text": 70, "write_tm": 70, "write_ui": 70, "write_un": 70, "dicombytesio": [70, 157, 535, 556], "dicomio": [70, 145, 148, 153, 155, 157, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 535, 556], "fileutil": [70, 527], "absorb_delimiter_item": 70, "find_byt": [70, 177, 178, 535, 542], "find_delimit": [70, 178], "length_of_undefined_length": 70, "read_undefined_length_valu": 70, "mistak": 76, "stand": 76, "alon": 76, "respect": [76, 93, 535, 545], "lookuperror": [76, 77, 464], "delimit": [77, 144, 145, 146, 175, 177, 178, 179, 183, 464, 523, 535, 551, 553], "reset": [77, 96, 98, 131, 132, 133, 147, 152], "loss": [77, 79, 493, 494, 501, 535, 551], "unicodedecodeerror": 77, "dicom_character_set": 78, "unicodeencodeerror": [79, 464], "precis": [80, 88, 219, 493, 494, 498, 501, 535, 553], "use_decimal_boolean": 81, "valueerror": [81, 82, 84, 85, 106, 107, 108, 109, 110, 111, 130, 131, 132, 133, 134, 135, 145, 148, 163, 171, 182, 195, 204, 205, 215, 218, 219, 248, 464, 489, 493, 494, 497, 501, 506, 508, 520, 535, 556, 563, 566], "use_ds_numpi": [81, 506, 527, 535, 550], "use_numpi": 82, "__setattr__": 84, "camel": [84, 535, 551], "neither": [84, 85, 171, 207, 208, 210, 219, 493], "nor": [84, 85], "citizen": [84, 128, 131, 561], "patientsnam": [84, 85], "1895": 84, "__contains__": [85, 535, 551], "0x100100010": 85, "traceback": [85, 252, 561, 563, 566], "recent": [85, 559, 560, 561, 563, 566], "stdin": [85, 561, 563, 566], "494": 85, "msg": [85, 561], "exc": 85, "occur": [86, 87, 493, 535, 548, 559, 563], "digit": [88, 134, 196, 464, 493, 568], "round": [88, 219, 493], "writer": 89, "elementcallback": 91, "callabl": [91, 128, 131, 132, 133, 159, 162, 165, 169, 204, 221, 239, 523], "everi": [91, 219, 222, 240, 563, 568], "data_element_callback": [92, 98, 527], "anymor": 93, "manual": [93, 182], "debug_on": 94, "default_handl": 94, "log": [94, 131, 132, 133, 535, 541, 554, 559], "logger": [94, 535, 542, 556], "streamhandl": 94, "deprec": [95, 96, 131, 132, 133, 136, 137, 144, 145, 146, 148, 153, 182, 540, 541, 545, 546, 547, 550, 551, 553, 554, 555], "enable_futur": 96, "imit": 96, "becom": [96, 535, 541, 551, 559, 560, 563], "emul": [96, 131, 132, 133], "invalid_keyword_behavior": [96, 527, 535, 551], "invalid_key_behavior": [96, 527, 535, 551], "gdcm_handler": 97, "pillow_handl": [97, 559], "jpeg_ls_handl": 97, "pylibjpeg_handl": 97, "rle_handl": [97, 535, 554, 556], "convert_pixel_data": [97, 131, 132, 133], "extract": 97, "shall": [97, 131, 132, 133, 140, 144, 145, 148, 149, 150, 159, 182, 195], "supports_transfer_syntax": [97, 213, 214, 215, 216, 217, 218], "transfer_syntax": [97, 213, 214, 215, 216, 218, 221, 239], "get_pixeldata": [97, 213, 214, 215, 216, 217, 218], "1d": [97, 205, 215, 216, 217, 218, 219, 221], "reshap": [97, 205, 217, 219, 221, 222, 246, 247], "dimens": [97, 217, 222, 246, 247], "needs_to_convert_to_rgb": [97, 213, 214, 215, 216, 217, 218], "colourspac": [97, 535, 553], "refus": 97, "fact": [97, 561], "notimplementederror": [97, 131, 132, 133, 214, 215, 216, 218, 219], "global": [99, 535, 554], "ds_decim": [101, 527, 535, 550], "ds_numpi": [102, 527], "charset": [104, 527, 535, 555], "extern": [106, 535, 551, 553], "datastor": 106, "0x10021001": [108, 109], "teston": [108, 109], "0x10021002": [108, 109], "testtwo": [108, 109], "perman": 109, "0x00410001": 110, "0x00410002": 110, "ltd": 110, "whose": [112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 222, 246, 247, 249, 464, 493, 494, 496, 497, 498, 501, 559], "keyerror": [112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 129, 131, 132, 133, 535, 556, 561], "get_private_entri": 118, "get_entri": 119, "grouplength": 120, "mask": 121, "file_value_tel": 128, "is_undefined_length": [128, 131, 132, 133, 535, 548], "already_convert": 128, "validation_mod": [128, 464, 492, 493, 494, 496, 497, 498], "joan": [128, 131], "Its": 128, "descripwidth": 128, "35": [128, 131, 132, 133, 173, 323], "0xffffffffl": 128, "ie": 128, "maxbytestodisplai": [128, 535, 547], "showvr": 128, "backslash": [128, 131, 132, 133, 498, 518, 535, 536, 537, 553], "intern": [128, 131, 132, 133, 159, 542], "0xffffffff": 128, "empty_value_for_vr": 128, "empty_valu": 128, "classmethod": [128, 131, 132, 133, 498], "from_json": [128, 131, 132, 133, 535, 548, 551, 562], "dataset_class": 128, "value_kei": 128, "bulk_data_uri_handl": [128, 131, 132, 133, 535, 551, 562], "json": [128, 131, 132, 133, 249, 535, 547, 548, 552, 553, 564], "inlinebinari": [128, 131, 132, 133], "bulkdatauri": [128, 131, 132, 133, 562], "dicomweb": [128, 131, 132, 133, 562], "wado": [128, 131, 132, 133, 562], "is_empti": 128, "ret": 128, "repval": [128, 131, 132, 133], "to_json": [128, 131, 132, 133, 535, 549, 562], "bulk_data_threshold": [128, 131, 132, 133, 535, 549, 562], "bulk_data_element_handl": [128, 131, 132, 133, 562], "dump_handl": [128, 131, 132, 133], "base64": [128, 131, 132, 133, 562], "dump": [128, 131, 132, 133], "to_json_dict": [128, 131, 132, 133, 535, 549, 555, 562], "18": [128, 131, 132, 133, 460, 535, 544, 562], "validate_valu": 128, "raw_data_el": [129, 522], "belong": [129, 131, 132, 133, 170, 171], "value_tel": 130, "is_raw": 130, "undecod": 130, "alia": [130, 535, 551], "occurr": [130, 204, 248, 464], "stop": [130, 161, 165, 204, 248, 464, 535, 538], "9223372036854775807": 130, "mutablemap": [131, 132, 133], "kwarg": [131, 132, 133, 155, 156, 157, 158, 171, 182, 220, 221, 222, 239, 240, 246, 247, 464, 491, 495, 498, 499], "mutabl": 131, "0x00100020": 131, "0x0030": 131, "0x00100030": 131, "linac": 131, "co": [131, 568], "son": 131, "daughter": 131, "0x0041": [131, 132, 133], "john": [131, 498], "0041": 131, "get_private_item": [131, 132, 133], "iteral": [131, 132, 133, 535, 537], "jsonmodel": 131, "ds2": 131, "default_element_format": 131, "default_sequence_element_format": 131, "indent_char": [131, 172], "element_offset": [131, 132, 133, 134], "0xffff": [131, 132, 133, 169, 535, 545], "0x00": [131, 132, 133, 138, 140, 182, 514], "0xff": [131, 132, 133], "decoding_plugin": [131, 132, 133, 222, 246, 247], "encapsulate_ext": [131, 132, 133], "tri": [131, 132, 133, 155, 157, 158, 222, 240, 246, 247, 535, 556], "placehold": [131, 132, 133], "handler_nam": [131, 132, 133], "unabl": [131, 132, 133, 155, 157, 158, 182, 219, 561, 563], "runtimeerror": [131, 132, 133, 217], "shallow": [131, 132, 133], "state": [131, 132, 133, 188, 535, 556, 562], "alphabet": [131, 132, 133, 464, 498, 535, 555], "__getitem__": [131, 132, 133, 464, 561], "unconvert": [131, 132, 133], "increas": [131, 132, 133, 535, 538, 555], "ensure_file_meta": [131, 132, 133], "formatted_lin": [131, 132, 133, 535, 537], "element_format": [131, 132, 133], "sequence_element_format": [131, 132, 133], "indent_format": [131, 132, 133], "json_dataset": [131, 132, 133], "obj": [131, 132, 133], "get_item": [131, 132, 133, 535, 556], "keep_def": [131, 132, 133, 535, 556], "defer": [131, 132, 133, 163, 535, 537, 541, 548, 554, 561], "group_dataset": [131, 132, 133], "v4": [131, 132, 133, 136, 137, 145, 146, 148, 153, 182, 535, 556, 568], "implicit_vr": [131, 132, 133, 182, 464, 490, 535, 556], "little_endian": [131, 132, 133, 182, 464, 490, 535, 556], "is_original_encod": [131, 132, 133], "dict_item": [131, 132, 133], "unlik": [131, 132, 133, 493], "flatten": [131, 132, 133], "dict_kei": [131, 132, 133], "original_character_set": [131, 132, 133, 535, 556], "original_encod": [131, 132, 133, 182, 194, 535, 556], "pop": [131, 132, 133, 204, 248, 535, 547], "tagtyp": [131, 132, 133], "combin": [131, 132, 133, 250, 495, 561, 568], "popitem": [131, 132, 133], "unrealist": [131, 132, 133], "associ": [131, 132, 133, 221, 239], "read_encod": [131, 132, 133, 535, 556], "read_implicit_vr": [131, 132, 133, 535, 556], "read_little_endian": [131, 132, 133, 535, 556], "pathlik": [131, 132, 133, 161, 163, 164, 171, 182, 246, 247, 535, 550], "binaryio": [131, 132, 133, 159, 161, 162, 163, 165, 166, 167, 168, 175, 176, 177, 178, 179, 182, 221, 222, 239, 246, 247, 535, 556], "writeablebuff": [131, 132, 133, 155, 157, 158, 182], "_dataset__write_like_origin": [131, 132, 133], "2006": [131, 132, 133], "write_like_origin": [131, 132, 133, 182, 535, 556], "writeabl": [131, 132, 133, 182, 215, 222, 246, 247, 535, 556], "tell": [131, 132, 133, 141, 142, 143, 147, 151, 152, 155, 157, 158, 161, 182, 535, 537, 556, 560, 563], "preserv": [131, 132, 133, 182, 535, 543, 550], "preambl": [131, 132, 133, 161, 166, 182, 195, 202, 535, 544, 561], "set_original_encod": [131, 132, 133], "character_encod": [131, 132, 133], "optim": [131, 132, 133], "setdefault": [131, 132, 133, 535, 547, 551], "0x00100040": [131, 132, 133], "suppress_invalid_tag": [131, 132, 133, 535, 555], "threshold": [131, 132, 133], "inlin": [131, 132, 133, 562], "drop": [131, 132, 133, 535, 550, 551], "bubbl": [131, 132, 133], "my_json_dump": [131, 132, 133], "sort_kei": [131, 132, 133], "trait_nam": [131, 132, 133], "ipython": [131, 132, 133, 535, 536], "autocomplet": [131, 132, 133], "valuesview": [131, 132, 133], "visit": [131, 132, 133, 559, 560], "0210": [131, 132, 133, 524, 568], "0211": [131, 132, 133], "filename_or_obj": [132, 163], "readablebuff": [132, 141, 142, 143, 147, 151, 152, 155, 157, 158, 161], "prepend": 132, "0x0002": [132, 182, 246, 247, 561], "fileobj_typ": [132, 163], "timestamp": [132, 163, 491, 495], "modif": [132, 559, 561, 563], "readabl": [132, 141, 142, 143, 147, 151, 152, 161, 535, 556], "rb": [132, 246, 247, 561], "super": 133, "typeerror": [133, 161, 204, 213, 214, 535, 545, 551, 561], "init_valu": 133, "private_creator_el": 134, "block_start": 134, "low": [134, 562], "get_tag": 134, "enforce_standard": [135, 195, 561], "generate_fram": [136, 137, 146, 217, 535, 556], "generate_frag": [136, 137, 145, 153, 535, 556], "continu": [137, 535, 536, 553], "togeth": [137, 138, 183], "has_bot": [138, 139], "frame1": 138, "frame2": 138, "exce": [138, 139], "31": 138, "circumst": [138, 139], "strongli": [138, 171, 563], "nr_fragment": [140, 150], "marker": [140, 144, 166, 179, 535, 548, 553], "null": [140, 205, 219, 221, 239, 514], "extended_offset": [141, 143, 147, 221, 239], "suffici": [141, 143, 147, 240], "excess": [141, 143, 147, 535, 547, 556], "latter": [141, 142, 143, 147, 151, 152], "bytestream": [144, 146], "nr_frame": [144, 146], "generate_fragmented_fram": [144, 535, 556], "span": 144, "predict": [144, 237], "boundari": [144, 464, 535, 556], "eoi": [144, 535, 548], "eoc": [144, 535, 548], "0xffd9": 144, "hasn": [144, 559, 560], "incorrect": [144, 222, 240, 535, 539, 545, 547, 548, 556], "stream": [145, 153, 155, 157, 158, 535, 556, 559], "fffe": [145, 148, 149, 150], "e000": [145, 148, 149, 150], "e0dd": 145, "0x00000000": [145, 148], "presenc": [145, 206, 219, 561], "absenc": 145, "parse_basic_offset": [148, 535, 556], "fe": 148, "e0": 148, "08": 148, "measur": [148, 151, 169], "bot": 148, "ffee": 148, "itemis": 150, "afterward": [152, 559], "appear": [154, 563], "dicm": [154, 166, 182, 195, 202, 561], "mayb": 154, "with_traceback": 154, "tb": 154, "__traceback__": 154, "initial_byt": 155, "memoryview": [155, 157, 158, 221, 222, 239], "wrapper": [155, 157, 158, 535, 550], "simplifi": [155, 157, 535, 537, 541], "close": [155, 157, 158, 161, 165, 535, 537, 538], "unspecifi": [155, 157, 158], "eof": [155, 157, 158, 179], "fewer": [155, 157, 158, 221, 502], "read_ul": [155, 157, 158], "read_u": [155, 157, 158], "read_exact": [155, 157, 158], "nr_retri": [155, 157, 158], "eoferror": [155, 157, 158, 179], "read_tag": [155, 157, 158], "whenc": [155, 157, 158], "rel": [155, 157, 158, 174, 535, 556], "write_ul": [155, 157, 158], "val": [155, 157, 158, 183, 204, 248, 464, 492, 493, 494, 496, 497, 498, 501, 523, 561], "write_u": [155, 157, 158], "write_tag": [155, 157, 158], "iobas": [157, 158], "rawiobas": [157, 158], "destin": [157, 158], "stop_when": [159, 162, 165], "defer_s": [159, 161, 162, 165, 179, 203, 535, 537], "specific_tag": [159, 161, 162, 165, 246, 247, 561], "read_data_el": 159, "stop_before_pixel": [161, 535, 538], "pars": [161, 165, 219, 495, 527, 535, 536, 548, 550, 551, 556], "context": [161, 252, 493, 535, 544, 561], "caller": [161, 535, 538], "respons": [161, 498, 562], "kb": 161, "subsequ": 161, "invaliddicomerror": [161, 166, 527, 535, 539, 561], "unsupport": [161, 213, 214, 215, 218], "condit": [161, 165, 493, 535, 544], "bytelength": [162, 167], "parent_encod": [162, 194], "at_top_level": 162, "itemdelimitertag": 162, "call_back": 162, "heurist": [162, 535, 544], "raw_data_elem": 163, "persist": 163, "st_mtime": 163, "oserror": 163, "meant": [164, 202], "quickli": [164, 563], "fileobj": [165, 561], "reach": [165, 177, 179, 221], "assess": 169, "_define_assess": 169, "doc": [169, 560], "_define_encap_doc": 169, "fiduci": 169, "_define_generic_content_id": 169, "hang": 169, "protocol": [169, 249, 496], "_define_hanging_protocol": 169, "_define_imag": 169, "implant": [169, 171], "_define_impl": 169, "assi": 169, "_define_implant_assi": 169, "_define_implant_group": 169, "_define_key_object_doc": 169, "_define_palett": 169, "_define_pati": 169, "_define_empti": 169, "_define_present": 169, "_define_radiotherapi": 169, "_define_generic_cont": 169, "registr": 169, "_define_rt_dos": [169, 563], "_define_rt_plan": 169, "_define_rt_structure_set": 169, "treat": [169, 221, 563], "_define_rt_treatment_record": 169, "_define_seri": 169, "spectroscopi": 169, "_define_spectroscopi": 169, "sr": [169, 498, 535, 553, 567], "_define_sr_docu": 169, "stereometr": 169, "_define_studi": 169, "surfac": 169, "_define_surface_scan": 169, "tract": 169, "1430": [169, 563], "my_record": 169, "offsetofthenextdirectoryrecord": 169, "recordinuseflag": 169, "offsetofreferencedlowerleveldirectoryent": 169, "directoryrecordtyp": [169, 171], "specificcharacterset": 169, "my_inst": 169, "add_custom": [169, 171, 563], "node": [170, 171, 172, 561], "recordnod": [170, 171, 527], "leaf": [170, 171, 172], "fileid": 170, "file_set": [170, 172], "for_addit": [170, 563], "for_mov": 170, "for_remov": 170, "is_stag": [170, 171, 563], "temporari": [170, 535, 556, 563], "ds_or_path": 171, "cancel": 171, "directory_record": [171, 527, 563], "definit": [171, 182, 527, 535, 544, 568], "aren": [171, 222, 240, 535, 556, 561, 563], "suitabl": [171, 206, 219, 221, 464, 565], "1400": [171, 563], "1410": [171, 563], "1420": [171, 563], "1500": [171, 535, 554], "1510": 171, "1511": [171, 535, 554], "1512": 171, "hierarchi": [171, 563], "privaterecorduid": 171, "leaf_nod": 171, "top_nod": 171, "ancestor": [171, 172, 180, 181], "due": [171, 535, 542, 553, 555, 559, 563], "force_implicit": 171, "1234567": 171, "7654321": 171, "include_orphan": 171, "raise_orphan": 171, "attach": 171, "imposs": 171, "orphan": 171, "use_exist": [171, 563], "backup": 171, "ptxxxxxx": 171, "stxxxxxx": 171, "sexxxxxx": 171, "imxxxxxx": 171, "xxxxxx": 171, "alphanumer": [171, 173, 535, 556], "paxxxxxx": 171, "p0xxxxxx": 171, "p1xxxxxx": 171, "p2xxxxxx": 171, "everyth": [171, 559, 563], "children": 172, "child": 172, "nearest": [172, 493], "furthest": [172, 180, 181], "has_inst": 172, "amongst": 172, "sibl": 172, "is_root": 172, "prettifi": 172, "pretti": [172, 559], "record_typ": [172, 563], "revers": [172, 204, 248, 535, 548], "k": [173, 535, 556], "00010": 173, "00000000": 173, "00000001": 173, "00000002": 173, "_": [174, 560], "bytes_to_find": 176, "read_siz": [176, 177, 178, 179], "found_at": 176, "routin": 178, "delimiter_tag": 179, "ambigu": [180, 181, 535, 544, 546, 547, 551], "dicond": [180, 181], "closest": [180, 181, 493], "attributeerror": [180, 205, 213, 215, 217, 218, 222, 240, 535, 538, 554, 556, 561], "__write_like_origin": 182, "force_encod": [182, 535, 556], "bytestr": [182, 219], "eeee": [182, 535, 556], "independ": 182, "prioriti": [182, 194, 535, 556], "0x0000": 182, "put": 183, "swap": [188, 222, 510], "rule": 193, "0017": 195, "send": [195, 559, 560], "struct_format": [197, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 519], "pare": 202, "down": [202, 559, 563], "fast": [202, 251], "conserv": 202, "approach": 202, "expr": 203, "type_constructor": [204, 561], "hold": [204, 248, 249, 496], "constructor": 204, "nice": [204, 222, 240, 559], "factori": [204, 222, 240, 251, 492, 535, 538, 553, 556], "indexerror": [204, 248], "IN": [204, 248], "overlayrow": 205, "overlaycolumn": 205, "0015": 205, "numberofframesinoverlai": 205, "overlaybitsalloc": 205, "overlaybitposit": 205, "get_expected_length": [205, 219], "NOT": [205, 219, 221, 239], "get_overlay_arrai": 205, "0x6010": 205, "0x60ff": 205, "reshape_overlay_arrai": 205, "1201": [206, 219], "1203": [206, 219], "1221": [206, 219], "1223": [206, 219], "1204": [206, 219], "1224": [206, 219], "supplement": [206, 219], "hot_iron": [206, 219], "hot_metal_blu": [206, 219], "pet_20_step": [206, 219], "spring": [206, 219], "summer": [206, 219], "fall": [206, 219], "winter": [206, 219], "rgba": [206, 219], "uint16": [206, 207, 208, 209, 210, 219, 240], "3rd": [206, 207, 208, 209, 210, 219, 247], "colour": [206, 219], "3002": [207, 208, 209, 210, 219, 535, 548], "float64": [207, 208, 210, 211, 219, 506], "3010": [209, 210, 219], "apply_window": [209, 210, 219, 527, 535, 551], "prefer_lut": [210, 219, 535, 551], "apply_voi": [210, 211, 219, 527, 535, 551], "per_fram": [212, 219, 535, 553], "2012": [212, 219], "871": [212, 219], "create_data_el": 213, "create_imag": 213, "volum": 213, "importerror": [213, 214, 216, 506, 508, 535, 552, 559], "should_change_photometricinterpretation_to_rgb": [213, 214, 215, 216, 217, 218], "planarconfigur": [215, 217, 218, 219, 535, 544], "numberoffram": [215, 217, 218, 219, 535, 556], "read_onli": 215, "resampl": 215, "tsyntax": [217, 221, 239], "suppos": 218, "msb": 218, "lsb": 218, "dtype_corrected_for_endian": 219, "numpy_dtyp": 219, "expand_ybr422": [219, 535, 554], "subsampl": 219, "horizont": 219, "halv": 219, "cb": 219, "get_image_pixel_id": 219, "get_j2k_paramet": 219, "15444": [219, 349], "is_sign": [219, 493], "get_nr_fram": 219, "conjunct": 219, "uint": 219, "sake": 219, "pixel_dtyp": [219, 221], "as_float": 219, "reshape_pixel_arrai": 219, "unpack_bit": [219, 535, 554], "whatev": 220, "del_opt": [221, 239], "frame_length": [221, 239], "get_data": 221, "is_arrai": [221, 239], "is_binari": [221, 239], "is_buff": [221, 239], "is_dataset": [221, 239], "iter_decod": 221, "decodeopt": [221, 222, 239], "encodeopt": [221, 239], "as_fram": 221, "set_decod": 221, "decodefunct": 221, "set_sourc": [221, 239], "0x0028": [221, 239, 246, 247, 561], "import_path": [222, 240], "thread": [222, 240, 493], "safe": [222, 240, 251], "encode_pixel_data": [222, 240], "decode_pixel_data": [222, 240], "modulenotfounderror": [222, 240], "unavail": [222, 240], "commonli": [222, 246, 247, 563, 566], "whatsoev": 222, "success": [222, 246, 247, 560], "facilit": 222, "is_encapsul": [222, 240, 464], "is_n": [222, 240], "missing_depend": [222, 240], "remove_plugin": [222, 240], "throughput": [226, 227, 228], "201": [227, 244, 255, 333, 344, 349], "rpcl": [228, 244], "202": [228, 244, 255, 334, 349], "get_fram": [239, 535, 556], "set_encod": 239, "encodefunct": 239, "whichev": 240, "iter_encod": [240, 566], "p14": 244, "htj2k": [244, 535, 556], "ds_out": [246, 247], "as_integer_ratio": [249, 493, 494, 496, 497], "denomin": [249, 493, 494, 496, 497], "bit_count": [249, 496], "ones": [249, 464, 496, 558, 561, 563], "bin": [249, 496, 559, 560], "0b1101": [249, 496], "bit_length": [249, 496], "0b100101": [249, 496], "conjug": [249, 493, 494, 496, 497], "ration": [249, 496], "lowest": [249, 464, 493, 496], "from_byt": [249, 496], "imaginari": [249, 494, 496, 497], "is_private_cr": 249, "json_kei": [249, 535, 555], "ggggeeee": 249, "meaningless": 249, "real": [249, 494, 496, 497, 559, 560, 568], "to_byt": [249, 496], "overflowerror": [249, 493, 494, 496, 497], "neg": [249, 493, 496], "arg2": [250, 535, 538], "0x00100015": 250, "0x50": 250, "0x0015": 250, "group_elem": 251, "71": 253, "102": [255, 370, 373, 380, 535, 541], "103": [255, 371, 372, 380, 535, 541], "108": [255, 330, 380, 498], "204": [255, 358], "205": [255, 359, 535, 548], "78": [258, 341, 360, 365, 394, 454, 456, 477, 535, 539], "19": 267, "200": [269, 271, 412, 481, 482], "69": 274, "39": 275, "34": [278, 418, 420], "33": 279, "82": [284, 535, 539], "501": [285, 286, 287, 288, 289, 290, 291], "66": [293, 438, 448, 452, 453, 459, 462], "601": [301, 302], "130": 314, "23": [315, 535, 556], "22": [316, 435], "76": 320, "43": [327, 535, 538], "38": 335, "45": 338, "59": 361, "mpeg": [380, 535, 551], "79": [383, 535, 539], "826": [402, 403, 489, 535, 548], "3680043": [402, 403, 489], "73": [405, 535, 538], "74": 408, "register_transfer_syntax": [410, 535, 556], "compil": [414, 415], "regex": [414, 415], "67": [439, 487], "72": [450, 535, 538], "human": [464, 498, 561], "friendli": [464, 561, 563], "subclass": [464, 535, 545], "set_private_encod": [464, 490, 535, 556], "is_transfer_syntax": 464, "jpegbaseline8bit": [464, 535, 551, 556], "upper": [464, 493, 535, 556], "rest": [464, 535, 554, 560], "casefold": 464, "caseless": 464, "comparison": [464, 493, 535, 540, 545], "fillchar": 464, "overlap": 464, "substr": 464, "codec": 464, "xmlcharrefreplac": 464, "register_error": 464, "endswith": 464, "expandtab": 464, "tabsiz": 464, "tab": [464, 560], "substitut": 464, "brace": 464, "format_map": 464, "is_compress": 464, "is_defl": 464, "encasul": 464, "is_valid": 464, "isalnum": 464, "isalpha": 464, "isascii": 464, "007f": 464, "isdecim": 464, "isdigit": 464, "isidentifi": 464, "iskeyword": 464, "islow": 464, "isnumer": 464, "isprint": 464, "printabl": 464, "isspac": 464, "whitespac": 464, "istitl": 464, "uncas": 464, "isupp": 464, "ab": [464, 524], "pq": 464, "ljust": 464, "justifi": 464, "lstrip": 464, "char": 464, "maketran": 464, "usabl": 464, "ordin": [464, 491, 495], "partit": 464, "sep": [464, 495], "removeprefix": 464, "removesuffix": 464, "old": [464, 535, 536, 537, 541, 544, 550], "rfind": 464, "highest": [464, 535, 553], "rindex": 464, "rjust": 464, "rpartit": 464, "rsplit": 464, "maxsplit": 464, "discard": 464, "front": [464, 559], "rstrip": 464, "intention": 464, "punctuat": 464, "splitlin": 464, "keepend": 464, "startswith": 464, "strip": [464, 493], "swapcas": 464, "titlecas": 464, "untouch": 464, "zfill": 464, "truncat": [464, 501, 535, 537], "entropy_src": [489, 535, 556], "randbelow": [489, 535, 556], "54": [489, 535, 556], "uuid": 489, "uuid4": 489, "sha512": 489, "hash": [489, 535, 547, 553], "determinist": 489, "unrecover": 489, "random": [489, 535, 556], "secret": 489, "22463838056059845879389038257786771680": 489, "167161297070865690102504091919570542144": 489, "lorem": 489, "ipsum": 489, "87507166259346337659265156363895084463": 489, "9834": 489, "667": 489, "had": [490, 535, 546, 553, 559], "ctime": [491, 495], "fromisocalendar": [491, 495], "construct": [491, 493, 494, 495, 498, 535, 541, 542, 553], "year": [491, 495], "week": [491, 495], "weekdai": [491, 495], "isocalendar": [491, 495], "fromisoformat": [491, 495, 499], "isoformat": [491, 495, 499], "fromordin": [491, 495], "prolept": [491, 495], "gregorian": [491, 495], "fromtimestamp": [491, 495], "posix": [491, 495], "8601": [491, 495, 499], "isoweekdai": [491, 495], "dai": [491, 495], "mondai": [491, 495], "sundai": [491, 495], "timetupl": [491, 495], "localtim": [491, 495], "todai": [491, 495], "__class__": [491, 495], "toordin": [491, 495], "auto_format": [492, 493, 494, 535, 553], "__new__": 492, "carri": [492, 493, 535, 543], "penalti": 492, "clean": [492, 535, 544, 559, 560], "satisfi": [493, 494, 501], "23e2": 493, "123": [493, 562], "adjust": 493, "expon": 493, "exp": 493, "infin": [493, 494, 497], "nan": [493, 494, 497, 501], "as_tupl": 493, "canon": 493, "compare_sign": 493, "ident": [493, 535, 541], "compare_tot": 493, "operand": [493, 535, 553], "abstract": [493, 563], "unequ": 493, "unaffect": 493, "invalidoper": 493, "compare_total_mag": 493, "copy_ab": 493, "copy_neg": 493, "negat": 493, "copy_sign": 493, "exponenti": 493, "round_half_even": 493, "fma": [493, 567], "fuse": 493, "multipli": 493, "from_float": 493, "1000000000000000055511151231257827021181583404541015625": 493, "inf": [493, 501], "is_canon": 493, "is_finit": 493, "finit": [493, 501], "infinit": 493, "is_infinit": 493, "is_nan": 493, "is_norm": 493, "emin": 493, "subnorm": 493, "is_qnan": 493, "is_snan": 493, "is_subnorm": 493, "is_zero": 493, "ln": [493, 567], "logarithm": 493, "log10": 493, "ten": 493, "logb": 493, "divisionbyzero": 493, "logical_and": 493, "wise": 493, "logic": [493, 535, 538], "logical_invert": 493, "logical_or": 493, "logical_xor": 493, "exclus": 493, "max_mag": 493, "min_mag": 493, "next_minu": 493, "smaller": [493, 562], "next_plu": 493, "next_toward": 493, "rightmost": 493, "0e0": 493, "321000e": 493, "number_class": 493, "Not": [493, 503, 504, 505, 506, 507, 508, 513, 514, 516, 519], "snan": 493, "quantiz": 493, "41421356": 493, "414": 493, "inexact": 493, "radix": 493, "arithmet": 493, "remainder_near": 493, "remaind": 493, "divid": 493, "chosen": [493, 568], "same_quantum": 493, "scaleb": 493, "shift": 493, "sqrt": 493, "to_eng_str": 493, "engin": 493, "123e": 493, "23e": 493, "to_integr": 493, "to_integral_valu": 493, "kept": [493, 535, 537, 565], "older": [493, 565], "to_integral_exact": 493, "fromhex": [494, 497], "hexadecim": [494, 497, 561], "0x1": [494, 497], "ffffp10": [494, 497], "2047": [494, 497], "984375": [494, 497], "0x1p": [494, 497], "5e": [494, 497], "999999999999ap": [494, 497], "14159": [494, 497], "921f9f01b866ep": [494, 497], "is_integ": [494, 497], "astimezon": 495, "tz": 495, "month": 495, "dst": [495, 499, 563], "tzinfo": [495, 499], "ddt": 495, "hh": [495, 499], "mmm": [495, 499], "uuu": [495, 499], "timespec": [495, 499], "hour": [495, 499], "millisecond": [495, 499], "microsecond": [495, 499], "strptime": 495, "timetz": 495, "tzname": [495, 499], "utcfromtimestamp": 495, "naiv": 495, "utcnow": 495, "utcoffset": [495, 499], "utctimetupl": 495, "rewrit": [496, 497], "uncommon": 497, "original_str": [498, 535, 546], "from_named_compon": [498, 535, 553], "from_named_components_veterinari": [498, 535, 553], "ideograph": 498, "phonet": 498, "demand": 498, "famili": 498, "family_nam": [498, 535, 553], "format_str": 498, "given_nam": [498, 535, 553], "middle_nam": 498, "name_prefix": 498, "name_suffix": 498, "family_name_ideograph": 498, "given_name_ideograph": 498, "middle_name_ideograph": 498, "name_prefix_ideograph": 498, "name_suffix_ideograph": 498, "family_name_phonet": 498, "given_name_phonet": 498, "middle_name_phonet": 498, "name_prefix_phonet": 498, "name_suffix_phonet": 498, "middl": 498, "addition": 498, "sect": 498, "adam": 498, "robert": 498, "quinci": 498, "rev": 498, "div": 498, "korean": [498, 535, 541], "\u6d2a": 498, "\u5409\u6d1e": 498, "\ud64d": 498, "\uae38\ub3d9": 498, "dr": 498, "chief": 498, "offic": 498, "responsible_party_nam": 498, "patient_nam": 498, "responsible_party_name_ideograph": 498, "patient_name_ideograph": 498, "responsible_party_name_phonet": 498, "patient_name_phonet": 498, "veterinari": 498, "OR": 498, "hors": 498, "abc": 498, "farm": 498, "fourth": 498, "fifth": 498, "retain": [501, 535, 553], "scientif": 501, "incur": 501, "furthermor": 501, "byte_str": [503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "int64": 508, "use_is_numpi": [508, 527, 535, 550], "valtyp": 523, "_t": 523, "waveformbitsalloc": [524, 568], "waveformsampleinterpret": [524, 568], "sb": 524, "ub": 524, "dev0": 527, "mar": 527, "07": 527, "convert_encod": 527, "decode_el": 527, "decode_byt": 527, "encode_str": 527, "allow_ds_float": [527, 535, 541], "assume_implicit_vr_switch": [527, 535, 553], "convert_wrong_length_to_un": [527, 535, 553], "data_element_callback_kwarg": 527, "debug": [527, 535, 541, 543], "enforce_valid_valu": [527, 535, 541, 547, 548, 551, 553, 554], "reset_data_element_callback": 527, "show_file_meta": [527, 535, 550], "apply_j2k_correct": [527, 535, 556], "get_charset_fil": 527, "get_palette_fil": [527, 535, 548], "validate_file_meta": [527, 535, 556, 561], "generate_filenam": [527, 535, 556], "is_conformant_file_id": 527, "apply_rescal": [527, 535, 551], "miscellan": 527, "misc": [527, 535, 544], "is_dicom": [527, 535, 544], "size_in_byt": 527, "gracefulli": [535, 551, 556], "1844": [535, 556], "jpeglossless": [535, 551, 556], "jpeglosslesssv1": [535, 551, 556], "theoret": [535, 556], "1838265625": [535, 556], "1743": [535, 556], "1773": [535, 556], "1481": [535, 556], "2023d": [535, 556], "decid": [535, 556], "initialis": [535, 556], "inherit": [535, 553, 556], "read_fil": [535, 537, 538, 539, 544, 553, 556], "write_fil": [535, 544, 553, 556], "constant": [535, 551, 556, 568], "jpegbaselin": [535, 546, 551, 556], "jpegextend": [535, 546, 551, 556], "jpegextended12bit": [535, 551, 556], "jpeglslossi": [535, 551, 556], "jpeg2000multicomponentlossless": [535, 546, 551, 556, 559], "jpeg2000mclossless": [535, 551, 556], "jpeg2000multicompon": [535, 546, 551, 556, 559], "jpeg2000mc": [535, 551, 556], "jpeglossycompressedpixeltransfersyntax": [535, 551, 556], "jpegtransfersyntax": [535, 551, 556], "jpeglssupportedcompressedpixeltransfersyntax": [535, 551, 556], "jpeglstransfersyntax": [535, 551, 556], "jpeg2000compressedpixeltransfersyntax": [535, 551, 556], "jpeg2000transfersyntax": [535, 551, 556], "rlecompressedlosslesssyntax": [535, 551, 556], "rletransfersyntax": [535, 551, 556], "uncompressedpixeltransfersyntax": [535, 551, 556], "uncompressedtransfersyntax": [535, 551, 556], "pilsupportedcompressedpixeltransfersyntax": [535, 551, 556], "personnameunicod": [535, 550, 556], "rle_encode_fram": [535, 553, 556], "_storage_sopclass_uid": [535, 551, 556], "parent_seq": [535, 556], "parent_dataset": [535, 556], "overlay_data_handl": [535, 551, 556], "fix_meta_info": [535, 546, 556], "1752": [535, 556], "mpeg2mpmlf": [535, 556], "mpeg2mphlf": [535, 556], "mpeg4hp41f": [535, 556], "mpeg4hp41bdf": [535, 556], "mpeg4hp422df": [535, 556], "mpeg4hp423df": [535, 556], "mpeg4hp42stereof": [535, 556], "htj2klossless": [535, 556], "htj2klosslessrpcl": [535, 556], "jpiphtj2kreferenc": [535, 556], "jpiphtj2kreferenceddefl": [535, 556], "smptest211020uncompressedprogressiveactivevideo": [535, 556], "smptest211020uncompressedinterlacedactivevideo": [535, 556], "smptest211030pcmdigitalaudio": [535, 556], "confus": [535, 556], "sent": [535, 556], "1529": [535, 556], "parse_frag": [535, 556], "mmap": [535, 556], "1873": [535, 556], "flexibl": [535, 556], "746": [535, 556], "1263": [535, 556], "1243": [535, 556], "1781": [535, 556], "1133": [535, 556], "1666": [535, 556], "1848": [535, 556], "1997": [535, 556], "disagre": [535, 556], "1689": [535, 556], "enum": [535, 554, 556], "1874": [535, 556], "1907": [535, 556], "secur": [535, 556], "escap": [535, 556], "1922": [535, 556], "deepcopi": [535, 553, 556], "1816": [535, 556], "1968": [535, 556], "1943": [535, 556], "spread": [535, 556], "across": [535, 541, 556], "1774": [535, 556], "mitig": [535, 556], "rare": [535, 556], "1983": [535, 556], "scheme_design": [535, 556, 567], "srt": [535, 556], "sct": [535, 556, 567], "1994": [535, 556], "2009": [535, 556], "2010": [535, 556], "2013": [535, 556], "get_frame_offset": [535, 548, 556], "generate_pixel_data_frag": [535, 556], "generate_pixel_data_fram": [535, 556], "generate_pixel_data": [535, 548, 556], "decode_data_sequ": [535, 556], "defragment_data": [535, 556], "read_item": [535, 556], "folder": [535, 538, 556], "refactor": [535, 556], "renam": [535, 536, 544, 550, 555, 556], "ci": [535, 556], "dependabot": [535, 556], "commit": [535, 556], "ruff": [535, 556], "hotfix": [535, 556], "1965": [535, 556], "eol": [535, 555], "decemb": [535, 555], "1634": [535, 555], "1648": [535, 555], "1414": [535, 555], "cli": [535, 555], "1674": [535, 555], "1658": [535, 555], "1661": [535, 555], "highli": [535, 555], "1728": [535, 555], "1734": [535, 555], "pyproject": [535, 555], "toml": [535, 555], "1792": [535, 555], "2023b": [535, 555], "1803": [535, 555], "1632": [535, 555], "progress": [535, 555, 560], "bar": [535, 555], "1611": [535, 555], "crash": [535, 545, 554, 555], "1638": [535, 555], "extrem": [535, 555], "byteslengthexcept": [535, 555], "1683": [535, 555], "1670": [535, 555], "1693": [535, 555], "1680": [535, 555], "1702": [535, 555], "wrong": [535, 546, 547, 551, 555], "calcul": [535, 553, 555], "1667": [535, 555], "lutdata": [535, 555], "1747": [535, 555], "1738": [535, 555], "teardown": [535, 555], "pytest": [535, 555], "fork": [535, 555, 559, 560, 565], "charpyl": [535, 555, 565], "1788": [535, 555], "favor": [535, 540, 554], "1617": [535, 554], "1498": [535, 554], "resort": [535, 554], "slowest": [535, 554], "1487": [535, 554], "mitra": [535, 554], "1588": [535, 554], "pr": [535, 554, 559, 560], "1594": [535, 554], "1593": [535, 554], "introduc": [535, 554, 559], "2022a": [535, 554], "holog": [535, 554], "0019xx43": [535, 554], "1565": [535, 554], "deep": [535, 554], "1571": [535, 554], "1581": [535, 554], "maco": [535, 554, 565], "1599": [535, 554], "bad": [535, 544, 554], "1596": [535, 554], "1606": [535, 554], "1609": [535, 554], "__eq__": [535, 545, 553], "1327": [535, 553], "__str__": [535, 545, 553, 561], "1262": [535, 553], "metadata": [535, 553], "2021b": [535, 553], "silent": [535, 553], "init": [535, 553], "urllib": [535, 553], "1340": [535, 553], "1348": [535, 553], "optimis": [535, 553], "1361": [535, 553], "1372": [535, 553], "1438": [535, 553], "suppress": [535, 553], "1332": [535, 553], "1428": [535, 553], "1434": [535, 553], "pickl": [535, 544, 548, 553], "1278": [535, 553], "1312": [535, 553], "problem": [535, 553, 561], "workflow": [535, 553, 559, 560], "1341": [535, 553], "1338": [535, 553], "878": [535, 553], "1147": [535, 553], "1412": [535, 553], "expans": [535, 553], "linear": [535, 553], "1415": [535, 553], "1449": [535, 553], "rbg": [535, 553], "jpg": [535, 553], "app14": [535, 553], "1444": [535, 553], "1457": [535, 553], "1251": [535, 552], "1253": [535, 552], "1254": [535, 552], "distribut": [535, 539, 551, 565], "fly": [535, 551], "whenev": [535, 551], "disk": [535, 551], "rg1_unci": [535, 551], "1127": [535, 551], "1234": [535, 551], "1237": [535, 551], "1156": [535, 551], "__next__": [535, 551], "__iter__": [535, 536, 551, 561], "1103": [535, 548, 551], "1155": [535, 551], "1149": [535, 551], "2020d": [535, 551], "243": [535, 551], "alltransfersyntax": [535, 551], "commun": [535, 551], "1240": [535, 551], "1178": [535, 551], "1161": [535, 551], "multifram": [535, 551], "dicosquadrupoleresonanceqrstorag": [535, 551], "dicosquadrupoleresonancestorag": [535, 551], "1211": [535, 551], "1181": [535, 551], "1146": [535, 551], "optimist": [535, 551], "embed": [535, 551], "1140": [535, 551], "network": [535, 551], "connect": [535, 551], "1153": [535, 551], "1193": [535, 551], "1215": [535, 551], "restor": [535, 550], "personname3": [535, 542, 547, 550], "alias": [535, 537, 550], "ismultivalu": [535, 547, 550], "1086": [535, 550], "replace_un_with_known_vr": [535, 550], "1067": [535, 550], "623": [535, 550, 557], "regress": [535, 549, 550, 559], "1038": [535, 550], "improp": [535, 548, 550], "3006": [535, 550], "1078": [535, 550], "1082": [535, 550], "1097": [535, 550], "915": [535, 548], "887": [535, 548, 561], "prevent": [535, 548], "894": [535, 548], "892": [535, 548], "truthi": [535, 548], "891": [535, 548], "899": [535, 548], "968": [535, 548], "896": [535, 548], "unpickl": [535, 548], "947": [535, 548], "951": [535, 548], "1101": [535, 548], "ir": [535, 548], "917": [535, 548], "propag": [535, 548], "971": [535, 548], "822": [535, 548], "263": [535, 548], "273": [535, 548], "994": [535, 548], "685": [535, 548], "693": [535, 548], "932": [535, 548], "toler": [535, 537, 548], "940": [535, 548], "unexpect": [535, 548], "848": [535, 548], "981": [535, 548], "537": [535, 548], "452": [535, 548], "2019e": [535, 548], "timelin": [535, 547], "789": [535, 547], "image_handl": [535, 546, 547], "deferreddatael": [535, 546, 547], "760": [535, 547], "isstringorstringlist": [535, 547], "isstr": [535, 547], "666": [535, 547], "799": [535, 547], "gzip": [535, 541, 547], "753": [535, 547], "730": [535, 547], "v": [535, 547], "820": [535, 547], "864": [535, 547], "819": [535, 547], "850": [535, 547], "838": [535, 547], "757": [535, 547], "785": [535, 547], "788": [535, 547], "810": [535, 547], "815": [535, 547], "804": [535, 547], "mix": [535, 547], "835": [535, 547], "791": [535, 547], "ji": [535, 547], "856": [535, 547], "fallback": [535, 546], "722": [535, 546], "jpegbaselinelossy8bit": [535, 546], "726": [535, 546], "jpegbaselinelossy12bit": [535, 546], "jpeg2000lossi": [535, 546], "inequ": [535, 545, 546], "matter": [535, 546, 561], "291": [535, 546], "numpypi": [535, 546], "pypi": [535, 544, 546, 565], "2018c": [535, 546], "677": [535, 546], "624": [535, 546], "696": [535, 546], "584": [535, 546], "715": [535, 546], "716": [535, 546], "695": [535, 546], "737": [535, 546], "jpeglosslessp14": [535, 546], "713": [535, 546], "small": [535, 538, 544, 546, 558, 565], "729": [535, 546], "unus": [535, 546], "660": [535, 546], "682": [535, 546], "689": [535, 546], "663": [535, 546], "728": [535, 546], "704": [535, 546], "707": [535, 546], "consumpt": [535, 546], "717": [535, 546], "740": [535, 546], "464": [535, 545], "605": [535, 545], "292": [535, 545], "2018b": [535, 545], "649": [535, 545], "256": [535, 545], "0x0006": [535, 545], "489": [535, 545], "599": [535, 545], "unneed": [535, 545], "597": [535, 545], "620": [535, 545], "625": [535, 545], "fit": [535, 545], "640": [535, 545], "__ne__": [535, 545], "verif": [535, 545], "backward": [535, 538, 544], "incompat": [535, 538, 544], "2017c": [535, 544], "fixer": [535, 544], "thrown": [535, 544], "143": [535, 544], "197": [535, 544], "dictionary_is_retir": [535, 544], "thai": [535, 544], "japanes": [535, 536, 541, 544], "chines": [535, 536, 544], "353": [535, 544], "172": [535, 544], "clariti": [535, 544], "travisci": [535, 544], "appveyor": [535, 544], "coverag": [535, 544, 559], "pep": [535, 537, 540, 544], "151": [535, 544], "125": [535, 544], "show_dicomdir": [535, 543, 544], "258": [535, 544], "latin5": [535, 544], "turkish": [535, 544], "lot": [535, 544, 561], "read_dicomdir": [535, 543], "subdirectori": [535, 543], "ez_setup": [535, 543], "aid": [535, 543], "pydicom_seri": [535, 539, 542, 543], "nil": [535, 543], "goyett": [535, 543], "ordereddict": [535, 543], "padraig": [535, 542, 543], "loonei": [535, 542, 543], "jonathan": [535, 542, 543], "myself": [535, 543], "rickard": [535, 543], "holmberg": [535, 543], "julien": [535, 543], "lami": [535, 543], "yaroslav": [535, 543], "halchenko": [535, 543], "mark": [535, 543], "matthew": [535, 543], "brett": [535, 543], "dimitri": [535, 543], "papadopoulo": [535, 543], "videan42": [535, 543], "sorri": [535, 543], "ve": [535, 543, 559, 560, 563, 566, 568], "anyon": [535, 543], "consolid": [535, 542], "revert": [535, 542], "prepar": [535, 542], "experiment": [535, 542], "unoffici": [535, 542], "uncom": [535, 542], "114": [535, 542], "slow": [535, 542], "approx": [535, 538, 542], "r78ba350a3eb8": [535, 542], "streamlin": [535, 542], "modern": [535, 542], "decor": [535, 542], "duplic": [535, 542], "gunnar": [535, 542], "schaefer": [535, 542], "774b7a55db33": [535, 542], "6b949a5b925b": [535, 542], "113": [535, 542], "84af4b240add": [535, 542], "f\u00e9lix": [535, 542], "morenc": [535, 542], "0197b5846bb5": [535, 542], "3678b1be6aca": [535, 542], "f1ae573d9de5": [535, 542], "0411bab7c985": [535, 542], "9b92b336e7d4": [535, 542], "e830f30b6781": [535, 542], "pysid": [535, 542], "qt": [535, 542], "acknowledg": [535, 542], "suever": [535, 542], "2011": [535, 540, 541], "4ed698a7bfb": [535, 541], "c313d2befb08": [535, 541], "encourag": [535, 541], "promot": [535, 541], "languag": [535, 536, 541], "b6b3658f3b14": [535, 541], "98": [535, 541], "52": [535, 541], "111": [535, 541], "__dir__": [535, 541], "file_metadata": [535, 540], "96": [535, 540], "catch": [535, 538, 540], "97": [535, 540], "write_new": [535, 540], "fc790f01f5": [535, 539], "84": [535, 539], "dicomit": [535, 539], "statement": [535, 539], "1c32791bf0": [535, 539], "e3ee934bbc": [535, 539], "dicom_dao": [535, 539], "mike": [535, 539], "wallac": [535, 539], "couchdb": [535, 539], "almar": [535, 539], "klein": [535, 539], "distinct": [535, 539], "preliminari": [535, 536, 539], "reorgan": [535, 536, 538], "substanti": [535, 538], "partial": [535, 538], "plain": [535, 538], "bullet": [535, 538], "ness": [535, 538], "sens": [535, 538], "daniel": [535, 538], "nanz": [535, 538], "dave": [535, 538], "witten": [535, 538], "adit": [535, 538], "panchal": [535, 538], "cp805": [535, 538], "supp": [535, 538], "117": [535, 538], "119": [535, 538], "122": [535, 538], "patch": [535, 538, 558, 559], "nikitathespid": [535, 538], "58": [535, 538], "pierr": [535, 538], "raybaut": [535, 538], "47": [535, 538], "r102": [535, 537], "r103": [535, 537], "issue36": [535, 537], "r97": [535, 537], "r110": [535, 537], "readfil": [535, 537], "savea": [535, 537], "pixelarrai": [535, 536, 537], "r105": [535, 537], "r91": [535, 537], "r113": [535, 537], "r95": [535, 537], "issue38": [535, 537], "collis": [535, 537], "r96": [535, 537], "issue40": [535, 537], "notimplementerror": [535, 537], "r100": [535, 537], "issue41": [535, 537], "r104": [535, 537], "r109": [535, 537], "r111": [535, 537], "patientsbirthd": [535, 537], "r98": [535, 537], "deprecationwarn": [535, 536], "issue22": [535, 536], "r72": [535, 536], "r73": [535, 536], "greek": [535, 536], "gui": [535, 536], "r64": [535, 536], "r65": [535, 536], "r69": [535, 536], "r70": [535, 536], "data_elem": [535, 536, 561], "r68": [535, 536], "tix": [535, 536], "r55": [535, 536], "uid_dictionari": [535, 536], "r51": [535, 536], "synonym": [535, 536], "issue27": [535, 536], "incorrectli": [535, 536], "read_ow": [535, 536], "undefinedlength": [535, 536], "r50": [535, 536], "dicominfo": [535, 536], "issue33": [535, 536], "issue18": [535, 536], "r45": [535, 536], "r67": [535, 536], "r46": [535, 536], "pixeldataarrai": [535, 536], "distutil": [535, 536], "typo": 558, "materi": 558, "stackoverflow": 558, "googl": 558, "django": [559, 560, 562], "cd": [559, 560, 563], "live": [559, 560], "yourusernam": [559, 560], "accident": [559, 563], "area": 559, "dot": [559, 561], "choos": [559, 560], "won": [559, 560, 561, 563], "checkout": [559, 560], "reproduc": 559, "seem": 559, "daunt": 559, "resourc": 559, "captur": 559, "dive": 559, "Into": 559, "unittest": 559, "troubl": 559, "500": [559, 561], "test_uid": 559, "test_new_uid": 559, "newdefineduid": 559, "380": 559, "editor": [559, 560], "236": 559, "rst": [559, 560], "properli": 559, "happi": [559, 560], "idea": [559, 560], "cach": [559, 565], "scroll": 559, "push": [559, 560], "click": [559, 560], "wip": [559, 560], "instruct": [559, 560, 561], "mrg": [559, 560], "readi": [559, 560], "merg": [559, 560], "clarif": [559, 560], "approv": [559, 560], "lastli": [559, 560], "remot": [559, 560], "icon": [559, 560], "restructuredtext": 560, "navig": 560, "occasion": [560, 561, 563], "_build": 560, "web": 560, "browser": 560, "localhost": 560, "tut": 560, "toctre": 560, "visibl": 560, "got": 560, "maxdepth": 560, "virtualenv": 560, "contributing_cod": 560, "contributing_doc": 560, "rebuild": 560, "gone": 560, "reachabl": 560, "task": 560, "chapter_7": 560, "apr": 560, "46": 560, "gcc": 560, "copyright": 560, "credit": 560, "accessionnumb": 560, "acquisitiondata": 560, "xraytubecurr": 560, "primer": 560, "am": 560, "circleci": 560, "artifact": 560, "yet": [561, 567], "vari": 561, "infil": 561, "no_meta_path": 561, "no_meta": 561, "678": [561, 566], "631": 561, "caution": 561, "not_dicom": 561, "w": 561, "1703": 561, "1436": 561, "1079": 561, "833": 561, "character_set": 561, "581": 561, "6854": 561, "7369": 561, "iso_ir_100": 561, "0x6002": 561, "0x6004": 561, "0x601e": 561, "gggg": 561, "surround": 561, "0x0008": 561, "0x0016": 561, "private_elem": 561, "0x0043": 561, "0x104e": 561, "lack": 561, "stick": 561, "simpler": 561, "imagetyp": 561, "act": 561, "branch": [561, 565], "manner": [561, 566], "0x1002": 561, "earlier": 561, "saw": 561, "ii": [561, 568], "x00t": 561, "x18": 561, "x08": 561, "chanc": 561, "But": 561, "snip": 561, "_list": 561, "validate_dataset": 561, "dictionary_vr": 561, "0x1050": 561, "windowwidth": 561, "notic": [561, 563], "typeofpatientid": 561, "windowcent": 561, "prefer": 561, "wb": 561, "2452": 561, "1311": 561, "3204": 561, "habit": 561, "congratul": 561, "beta": 562, "deseri": 562, "00080005": 562, "00080008": 562, "symmetr": 562, "ds_json": 562, "ds1": 562, "bulk_data_handl": 562, "store_data_and_return_uri": 562, "bulk_data_read": 562, "bulk_data_uri": 562, "data_retrieved_via_uri": 562, "json_data": 562, "00091002": 562, "data_retrieved_for_tag_and_vr_via_uri": 562, "share": 563, "peopl": 563, "frequent": 563, "dvd": 563, "procedur": 563, "ultrasound": 563, "despit": 563, "usb": 563, "pc": 563, "minor": 563, "recalcul": 563, "1220": 563, "briefli": 563, "directoryrecordsequ": 563, "3126": 563, "di": 563, "510": 563, "home": 563, "env": 563, "lib": 563, "python3": 563, "site": 563, "flat": 563, "awai": 563, "dig": 563, "cost": 563, "importantli": 563, "tmp0aalrzir": 563, "86e6b75b": 563, "b764": 563, "46af": 563, "bec3": 563, "51698a8366f2": 563, "1858": 563, "_recordifi": 563, "2338": 563, "_check_dataset": 563, "instancenumb": 563, "dosesummationtyp": 563, "2281": 563, "record_gen": 563, "1860": 563, "tmpsqz8rhgb": 563, "rd000000": 563, "shutil": 563, "copytre": 563, "copyfil": 563, "98892001": 563, "98892003": 563, "tmpu068kdwp": 563, "cr1": 563, "6154": 563, "cr2": 563, "6247": 563, "cr3": 563, "6278": 563, "ct2": 563, "17106": 563, "17136": 563, "17166": 563, "17196": 563, "Then": [564, 565], "isol": 565, "admin": 565, "privileg": 565, "offlin": 565, "whl": 565, "py3": 565, "forg": [565, 566, 568], "fetch_data_fil": 565, "popular": 565, "beforehand": 565, "charl": 565, "cython": 565, "wheel": 565, "framework": 565, "snapshot": 565, "activ": 565, "stabl": 565, "undocu": 565, "prerequisit": [566, 568], "conda": [566, 568], "hundr": 566, "megabyt": 566, "slide": 566, "microscopi": 566, "gigabyt": 566, "territori": 566, "Being": 566, "significantli": 566, "qualiti": 566, "i2": 566, "1957": 566, "frame_iter": 566, "_validate_arrai": 566, "333": 566, "mismatch": 566, "recompress": 566, "began": 567, "foundat": 567, "codedict": 567, "cid": 567, "incorrectmodalityworklistentri": 567, "mixedmodality3dcammodel": 567, "modalitytoread": 567, "othermod": 567, "128002": 567, "scheme_vers": 567, "underscor": 567, "_1sigmalowervalueofpopul": 567, "371919006": 567, "sigma": 567, "cid270": 567, "121006": 567, "cid_for_nam": 567, "observ": 567, "observationsubjectclass": 567, "observertyp": 567, "echofindingobservationtyp": 567, "270": 567, "mdc": 567, "uml": 567, "bari": 567, "ncit": 567, "neu": 567, "ucum": 567, "radlex": 567, "ndc": 567, "itis_tsn": 567, "pubchem_cid": 567, "msh": 567, "capabl": 567, "explanatori": 568, "respiratori": 568, "interv": 568, "rhythm": 568, "khz": 568, "0200": 568, "channelsensit": 568, "einthoven": 568, "microvolt": 568, "iii": 568, "avr": 568, "avl": 568, "avf": 568, "v5": 568, "v6": 568, "ax1": 568, "ax2": 568, "\u03bcv": 568, "cosin": 568, "sine": 568, "pi": 568, "ch1": 568, "astyp": 568, "ch2": 568, "sin": 568, "waveformorigin": 568, "opt": 568, "obvious": 568, "chdef_seq": 568, "chdef": 568, "curve_typ": 568, "channelsampleskew": 568, "waveformbitsstor": 568, "codevalu": 568, "codingschemedesign": 568, "codingschemevers": 568, "stack": 568, "axi": 568, "my_waveform": 568}, "objects": {"": [[527, 0, 0, "-", "pydicom"]], "pydicom.charset": [[76, 1, 1, "", "convert_encodings"], [77, 1, 1, "", "decode_bytes"], [78, 1, 1, "", "decode_element"], [79, 1, 1, "", "encode_string"]], "pydicom.config": [[80, 2, 1, "", "APPLY_J2K_CORRECTIONS"], [81, 1, 1, "", "DS_decimal"], [82, 1, 1, "", "DS_numpy"], [83, 2, 1, "", "IGNORE"], [84, 2, 1, "", "INVALID_KEYWORD_BEHAVIOR"], [85, 2, 1, "", "INVALID_KEY_BEHAVIOR"], [86, 2, 1, "", "RAISE"], [56, 3, 1, "", "Settings"], [87, 2, 1, "", "WARN"], [88, 2, 1, "", "allow_DS_float"], [89, 2, 1, "", "assume_implicit_vr_switch"], [90, 2, 1, "", "convert_wrong_length_to_UN"], [91, 2, 1, "", "data_element_callback"], [92, 2, 1, "", "data_element_callback_kwargs"], [93, 2, 1, "", "datetime_conversion"], [94, 1, 1, "", "debug"], [95, 2, 1, "", "enforce_valid_values"], [96, 1, 1, "", "future_behavior"], [97, 2, 1, "", "pixel_data_handlers"], [98, 1, 1, "", "reset_data_element_callback"], [99, 2, 1, "", "settings"], [100, 2, 1, "", "show_file_meta"], [101, 2, 1, "", "use_DS_decimal"], [102, 2, 1, "", "use_DS_numpy"], [103, 2, 1, "", "use_IS_numpy"]], "pydicom.config.Settings": [[56, 4, 1, "", "infer_sq_for_un_vr"], [56, 4, 1, "", "reading_validation_mode"], [56, 4, 1, "", "writing_validation_mode"]], "pydicom.data": [[104, 1, 1, "", "get_charset_files"], [105, 1, 1, "", "get_palette_files"], [106, 1, 1, "", "get_testdata_file"], [107, 1, 1, "", "get_testdata_files"]], "pydicom.datadict": [[108, 1, 1, "", "add_dict_entries"], [109, 1, 1, "", "add_dict_entry"], [110, 1, 1, "", "add_private_dict_entries"], [111, 1, 1, "", "add_private_dict_entry"], [112, 1, 1, "", "dictionary_VM"], [113, 1, 1, "", "dictionary_VR"], [114, 1, 1, "", "dictionary_description"], [115, 1, 1, "", "dictionary_has_tag"], [116, 1, 1, "", "dictionary_is_retired"], [117, 1, 1, "", "dictionary_keyword"], [118, 1, 1, "", "get_entry"], [119, 1, 1, "", "get_private_entry"], [120, 1, 1, "", "keyword_for_tag"], [121, 1, 1, "", "mask_match"], [122, 1, 1, "", "private_dictionary_VM"], [123, 1, 1, "", "private_dictionary_VR"], [124, 1, 1, "", "private_dictionary_description"], [125, 1, 1, "", "repeater_has_keyword"], [126, 1, 1, "", "repeater_has_tag"], [127, 1, 1, "", "tag_for_keyword"]], "pydicom.dataelem": [[128, 3, 1, "", "DataElement"], [129, 1, 1, "", "DataElement_from_raw"], [130, 3, 1, "", "RawDataElement"]], "pydicom.dataelem.DataElement": [[128, 4, 1, "", "VM"], [128, 5, 1, "", "VR"], [128, 6, 1, "", "__init__"], [128, 6, 1, "", "clear"], [128, 5, 1, "", "descripWidth"], [128, 4, 1, "", "empty_value"], [128, 6, 1, "", "from_json"], [128, 4, 1, "", "is_empty"], [128, 4, 1, "", "is_private"], [128, 4, 1, "", "is_retired"], [128, 5, 1, "", "is_undefined_length"], [128, 4, 1, "", "keyword"], [128, 5, 1, "", "maxBytesToDisplay"], [128, 4, 1, "", "name"], [128, 4, 1, "", "repval"], [128, 5, 1, "", "showVR"], [128, 5, 1, "", "tag"], [128, 6, 1, "", "to_json"], [128, 6, 1, "", "to_json_dict"], [128, 6, 1, "", "validate"], [128, 4, 1, "", "value"]], "pydicom.dataelem.RawDataElement": [[130, 5, 1, "", "VR"], [130, 6, 1, "", "__init__"], [130, 6, 1, "", "count"], [130, 6, 1, "", "index"], [130, 5, 1, "", "is_implicit_VR"], [130, 5, 1, "", "is_little_endian"], [130, 5, 1, "", "is_raw"], [130, 5, 1, "", "length"], [130, 5, 1, "", "tag"], [130, 5, 1, "", "value"], [130, 5, 1, "", "value_tell"]], "pydicom.dataset": [[131, 3, 1, "", "Dataset"], [132, 3, 1, "", "FileDataset"], [133, 3, 1, "", "FileMetaDataset"], [134, 3, 1, "", "PrivateBlock"], [135, 1, 1, "", "validate_file_meta"]], "pydicom.dataset.Dataset": [[131, 6, 1, "", "__init__"], [131, 6, 1, "", "add"], [131, 6, 1, "", "add_new"], [131, 6, 1, "", "add_new_private"], [131, 6, 1, "", "clear"], [131, 6, 1, "", "compress"], [131, 6, 1, "", "convert_pixel_data"], [131, 6, 1, "", "copy"], [131, 6, 1, "", "data_element"], [131, 6, 1, "", "decode"], [131, 6, 1, "", "decompress"], [131, 5, 1, "", "default_element_format"], [131, 5, 1, "", "default_sequence_element_format"], [131, 6, 1, "", "dir"], [131, 6, 1, "", "elements"], [131, 6, 1, "", "ensure_file_meta"], [131, 6, 1, "", "formatted_lines"], [131, 6, 1, "", "from_json"], [131, 6, 1, "", "get"], [131, 6, 1, "", "get_item"], [131, 6, 1, "", "get_private_item"], [131, 6, 1, "", "group_dataset"], [131, 5, 1, "", "indent_chars"], [131, 4, 1, "", "is_implicit_VR"], [131, 4, 1, "", "is_little_endian"], [131, 4, 1, "", "is_original_encoding"], [131, 6, 1, "", "items"], [131, 6, 1, "", "iterall"], [131, 6, 1, "", "keys"], [131, 4, 1, "", "original_character_set"], [131, 4, 1, "", "original_encoding"], [131, 6, 1, "", "overlay_array"], [131, 4, 1, "", "pixel_array"], [131, 6, 1, "", "pop"], [131, 6, 1, "", "popitem"], [131, 6, 1, "", "private_block"], [131, 6, 1, "", "private_creators"], [131, 4, 1, "", "read_encoding"], [131, 4, 1, "", "read_implicit_vr"], [131, 4, 1, "", "read_little_endian"], [131, 6, 1, "", "remove_private_tags"], [131, 6, 1, "", "save_as"], [131, 6, 1, "", "set_original_encoding"], [131, 6, 1, "", "setdefault"], [131, 6, 1, "", "to_json"], [131, 6, 1, "", "to_json_dict"], [131, 6, 1, "", "top"], [131, 6, 1, "", "trait_names"], [131, 6, 1, "", "update"], [131, 6, 1, "", "values"], [131, 6, 1, "", "walk"], [131, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileDataset": [[132, 6, 1, "", "__init__"], [132, 6, 1, "", "add"], [132, 6, 1, "", "add_new"], [132, 6, 1, "", "add_new_private"], [132, 6, 1, "", "clear"], [132, 6, 1, "", "compress"], [132, 6, 1, "", "convert_pixel_data"], [132, 6, 1, "", "copy"], [132, 6, 1, "", "data_element"], [132, 6, 1, "", "decode"], [132, 6, 1, "", "decompress"], [132, 6, 1, "", "dir"], [132, 6, 1, "", "elements"], [132, 6, 1, "", "ensure_file_meta"], [132, 5, 1, "", "file_meta"], [132, 5, 1, "", "filename"], [132, 5, 1, "", "fileobj_type"], [132, 6, 1, "", "formatted_lines"], [132, 6, 1, "", "from_json"], [132, 6, 1, "", "get"], [132, 6, 1, "", "get_item"], [132, 6, 1, "", "get_private_item"], [132, 6, 1, "", "group_dataset"], [132, 4, 1, "", "is_implicit_VR"], [132, 4, 1, "", "is_little_endian"], [132, 4, 1, "", "is_original_encoding"], [132, 6, 1, "", "items"], [132, 6, 1, "", "iterall"], [132, 6, 1, "", "keys"], [132, 4, 1, "", "original_character_set"], [132, 4, 1, "", "original_encoding"], [132, 6, 1, "", "overlay_array"], [132, 4, 1, "", "pixel_array"], [132, 6, 1, "", "pop"], [132, 6, 1, "", "popitem"], [132, 5, 1, "", "preamble"], [132, 6, 1, "", "private_block"], [132, 6, 1, "", "private_creators"], [132, 4, 1, "", "read_encoding"], [132, 4, 1, "", "read_implicit_vr"], [132, 4, 1, "", "read_little_endian"], [132, 6, 1, "", "remove_private_tags"], [132, 6, 1, "", "save_as"], [132, 6, 1, "", "set_original_encoding"], [132, 6, 1, "", "setdefault"], [132, 5, 1, "", "timestamp"], [132, 6, 1, "", "to_json"], [132, 6, 1, "", "to_json_dict"], [132, 6, 1, "", "top"], [132, 6, 1, "", "trait_names"], [132, 6, 1, "", "update"], [132, 6, 1, "", "values"], [132, 6, 1, "", "walk"], [132, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileMetaDataset": [[133, 6, 1, "", "__init__"], [133, 6, 1, "", "add"], [133, 6, 1, "", "add_new"], [133, 6, 1, "", "add_new_private"], [133, 6, 1, "", "clear"], [133, 6, 1, "", "compress"], [133, 6, 1, "", "convert_pixel_data"], [133, 6, 1, "", "copy"], [133, 6, 1, "", "data_element"], [133, 6, 1, "", "decode"], [133, 6, 1, "", "decompress"], [133, 6, 1, "", "dir"], [133, 6, 1, "", "elements"], [133, 6, 1, "", "ensure_file_meta"], [133, 6, 1, "", "formatted_lines"], [133, 6, 1, "", "from_json"], [133, 6, 1, "", "get"], [133, 6, 1, "", "get_item"], [133, 6, 1, "", "get_private_item"], [133, 6, 1, "", "group_dataset"], [133, 4, 1, "", "is_implicit_VR"], [133, 4, 1, "", "is_little_endian"], [133, 4, 1, "", "is_original_encoding"], [133, 6, 1, "", "items"], [133, 6, 1, "", "iterall"], [133, 6, 1, "", "keys"], [133, 4, 1, "", "original_character_set"], [133, 4, 1, "", "original_encoding"], [133, 6, 1, "", "overlay_array"], [133, 4, 1, "", "pixel_array"], [133, 6, 1, "", "pop"], [133, 6, 1, "", "popitem"], [133, 6, 1, "", "private_block"], [133, 6, 1, "", "private_creators"], [133, 4, 1, "", "read_encoding"], [133, 4, 1, "", "read_implicit_vr"], [133, 4, 1, "", "read_little_endian"], [133, 6, 1, "", "remove_private_tags"], [133, 6, 1, "", "save_as"], [133, 6, 1, "", "set_original_encoding"], [133, 6, 1, "", "setdefault"], [133, 6, 1, "", "to_json"], [133, 6, 1, "", "to_json_dict"], [133, 6, 1, "", "top"], [133, 6, 1, "", "trait_names"], [133, 6, 1, "", "update"], [133, 6, 1, "", "validate"], [133, 6, 1, "", "values"], [133, 6, 1, "", "walk"], [133, 6, 1, "", "waveform_array"]], "pydicom.dataset.PrivateBlock": [[134, 6, 1, "", "__init__"], [134, 6, 1, "", "add_new"], [134, 5, 1, "", "block_start"], [134, 5, 1, "", "dataset"], [134, 6, 1, "", "get_tag"], [134, 5, 1, "", "group"], [134, 5, 1, "", "private_creator"]], "pydicom.encaps": [[136, 1, 1, "", "decode_data_sequence"], [137, 1, 1, "", "defragment_data"], [138, 1, 1, "", "encapsulate"], [139, 1, 1, "", "encapsulate_extended"], [140, 1, 1, "", "fragment_frame"], [141, 1, 1, "", "generate_fragmented_frames"], [142, 1, 1, "", "generate_fragments"], [143, 1, 1, "", "generate_frames"], [144, 1, 1, "", "generate_pixel_data"], [145, 1, 1, "", "generate_pixel_data_fragment"], [146, 1, 1, "", "generate_pixel_data_frame"], [147, 1, 1, "", "get_frame"], [148, 1, 1, "", "get_frame_offsets"], [149, 1, 1, "", "itemize_fragment"], [150, 1, 1, "", "itemize_frame"], [151, 1, 1, "", "parse_basic_offsets"], [152, 1, 1, "", "parse_fragments"], [153, 1, 1, "", "read_item"]], "pydicom.errors": [[154, 7, 1, "", "InvalidDicomError"]], "pydicom.errors.InvalidDicomError": [[154, 6, 1, "", "with_traceback"]], "pydicom.filebase": [[155, 3, 1, "", "DicomBytesIO"], [156, 1, 1, "", "DicomFile"], [157, 3, 1, "", "DicomFileLike"], [158, 3, 1, "", "DicomIO"]], "pydicom.filebase.DicomBytesIO": [[155, 6, 1, "", "__init__"], [155, 6, 1, "", "close"], [155, 4, 1, "", "is_implicit_VR"], [155, 4, 1, "", "is_little_endian"], [155, 4, 1, "", "name"], [155, 4, 1, "", "parent"], [155, 6, 1, "", "read"], [155, 6, 1, "", "read_UL"], [155, 6, 1, "", "read_US"], [155, 6, 1, "", "read_exact"], [155, 6, 1, "", "read_tag"], [155, 6, 1, "", "seek"], [155, 6, 1, "", "tell"], [155, 6, 1, "", "write"], [155, 6, 1, "", "write_UL"], [155, 6, 1, "", "write_US"], [155, 6, 1, "", "write_tag"]], "pydicom.filebase.DicomFileLike": [[157, 6, 1, "", "__init__"], [157, 6, 1, "", "close"], [157, 4, 1, "", "is_implicit_VR"], [157, 4, 1, "", "is_little_endian"], [157, 4, 1, "", "name"], [157, 4, 1, "", "parent"], [157, 6, 1, "", "read"], [157, 6, 1, "", "read_UL"], [157, 6, 1, "", "read_US"], [157, 6, 1, "", "read_exact"], [157, 6, 1, "", "read_tag"], [157, 6, 1, "", "seek"], [157, 6, 1, "", "tell"], [157, 6, 1, "", "write"], [157, 6, 1, "", "write_UL"], [157, 6, 1, "", "write_US"], [157, 6, 1, "", "write_tag"]], "pydicom.filebase.DicomIO": [[158, 6, 1, "", "__init__"], [158, 6, 1, "", "close"], [158, 4, 1, "", "is_implicit_VR"], [158, 4, 1, "", "is_little_endian"], [158, 4, 1, "", "name"], [158, 4, 1, "", "parent"], [158, 6, 1, "", "read"], [158, 6, 1, "", "read_UL"], [158, 6, 1, "", "read_US"], [158, 6, 1, "", "read_exact"], [158, 6, 1, "", "read_tag"], [158, 6, 1, "", "seek"], [158, 6, 1, "", "tell"], [158, 6, 1, "", "write"], [158, 6, 1, "", "write_UL"], [158, 6, 1, "", "write_US"], [158, 6, 1, "", "write_tag"]], "pydicom.filereader": [[159, 1, 1, "", "data_element_generator"], [160, 1, 1, "", "data_element_offset_to_value"], [161, 1, 1, "", "dcmread"], [162, 1, 1, "", "read_dataset"], [163, 1, 1, "", "read_deferred_data_element"], [164, 1, 1, "", "read_file_meta_info"], [165, 1, 1, "", "read_partial"], [166, 1, 1, "", "read_preamble"], [167, 1, 1, "", "read_sequence"], [168, 1, 1, "", "read_sequence_item"]], "pydicom.fileset": [[169, 2, 1, "", "DIRECTORY_RECORDERS"], [170, 3, 1, "", "FileInstance"], [171, 3, 1, "", "FileSet"], [172, 3, 1, "", "RecordNode"], [173, 1, 1, "", "generate_filename"], [174, 1, 1, "", "is_conformant_file_id"]], "pydicom.fileset.FileInstance": [[170, 4, 1, "", "FileID"], [170, 4, 1, "", "SOPClassUID"], [170, 4, 1, "", "SOPInstanceUID"], [170, 4, 1, "", "TransferSyntaxUID"], [170, 6, 1, "", "__init__"], [170, 4, 1, "", "file_set"], [170, 4, 1, "", "for_addition"], [170, 4, 1, "", "for_moving"], [170, 4, 1, "", "for_removal"], [170, 4, 1, "", "is_private"], [170, 4, 1, "", "is_staged"], [170, 6, 1, "", "load"], [170, 5, 1, "", "node"], [170, 4, 1, "", "path"]], "pydicom.fileset.FileSet": [[171, 4, 1, "", "ID"], [171, 4, 1, "", "UID"], [171, 6, 1, "", "__init__"], [171, 6, 1, "", "add"], [171, 6, 1, "", "add_custom"], [171, 6, 1, "", "clear"], [171, 6, 1, "", "copy"], [171, 4, 1, "", "descriptor_character_set"], [171, 4, 1, "", "descriptor_file_id"], [171, 6, 1, "", "find"], [171, 6, 1, "", "find_values"], [171, 4, 1, "", "is_staged"], [171, 6, 1, "", "load"], [171, 4, 1, "", "path"], [171, 6, 1, "", "remove"], [171, 6, 1, "", "write"]], "pydicom.fileset.RecordNode": [[172, 6, 1, "", "__init__"], [172, 6, 1, "", "add"], [172, 4, 1, "", "ancestors"], [172, 5, 1, "", "children"], [172, 4, 1, "", "component"], [172, 4, 1, "", "depth"], [172, 4, 1, "", "file_set"], [172, 4, 1, "", "has_instance"], [172, 4, 1, "", "index"], [172, 5, 1, "", "instance"], [172, 4, 1, "", "is_root"], [172, 4, 1, "", "key"], [172, 4, 1, "", "next"], [172, 4, 1, "", "parent"], [172, 6, 1, "", "prettify"], [172, 4, 1, "", "previous"], [172, 4, 1, "", "record_type"], [172, 6, 1, "", "remove"], [172, 6, 1, "", "reverse"], [172, 4, 1, "", "root"]], "pydicom.fileutil": [[175, 1, 1, "", "absorb_delimiter_item"], [176, 1, 1, "", "find_bytes"], [177, 1, 1, "", "find_delimiter"], [178, 1, 1, "", "length_of_undefined_length"], [179, 1, 1, "", "read_undefined_length_value"]], "pydicom.filewriter": [[180, 1, 1, "", "correct_ambiguous_vr"], [181, 1, 1, "", "correct_ambiguous_vr_element"], [182, 1, 1, "", "dcmwrite"], [183, 1, 1, "", "multi_string"], [184, 1, 1, "", "write_ATvalue"], [185, 1, 1, "", "write_DA"], [186, 1, 1, "", "write_DT"], [187, 1, 1, "", "write_OBvalue"], [188, 1, 1, "", "write_OWvalue"], [189, 1, 1, "", "write_PN"], [190, 1, 1, "", "write_TM"], [191, 1, 1, "", "write_UI"], [192, 1, 1, "", "write_UN"], [193, 1, 1, "", "write_data_element"], [194, 1, 1, "", "write_dataset"], [195, 1, 1, "", "write_file_meta_info"], [196, 1, 1, "", "write_number_string"], [197, 1, 1, "", "write_numbers"], [198, 1, 1, "", "write_sequence"], [199, 1, 1, "", "write_sequence_item"], [200, 1, 1, "", "write_string"], [201, 1, 1, "", "write_text"]], "pydicom.misc": [[202, 1, 1, "", "is_dicom"], [203, 1, 1, "", "size_in_bytes"]], "pydicom.multival": [[204, 3, 1, "", "MultiValue"]], "pydicom.multival.MultiValue": [[204, 6, 1, "", "__init__"], [204, 6, 1, "", "append"], [204, 6, 1, "", "clear"], [204, 6, 1, "", "count"], [204, 6, 1, "", "extend"], [204, 6, 1, "", "index"], [204, 6, 1, "", "insert"], [204, 6, 1, "", "pop"], [204, 6, 1, "", "remove"], [204, 6, 1, "", "reverse"]], "pydicom": [[529, 0, 0, "-", "overlays"], [526, 0, 0, "-", "pixel_data_handlers"], [534, 0, 0, "-", "waveforms"]], "pydicom.overlays": [[205, 0, 0, "-", "numpy_handler"]], "pydicom.overlays.numpy_handler": [[205, 1, 1, "", "get_expected_length"], [205, 1, 1, "", "get_overlay_array"], [205, 1, 1, "", "is_available"], [205, 1, 1, "", "reshape_overlay_array"]], "pydicom.pixel_data_handlers": [[206, 1, 1, "", "apply_color_lut"], [207, 1, 1, "", "apply_modality_lut"], [208, 1, 1, "", "apply_rescale"], [209, 1, 1, "", "apply_voi"], [210, 1, 1, "", "apply_voi_lut"], [211, 1, 1, "", "apply_windowing"], [212, 1, 1, "", "convert_color_space"], [213, 0, 0, "-", "gdcm_handler"], [214, 0, 0, "-", "jpeg_ls_handler"], [215, 0, 0, "-", "numpy_handler"], [216, 0, 0, "-", "pillow_handler"], [217, 0, 0, "-", "pylibjpeg_handler"], [218, 0, 0, "-", "rle_handler"], [219, 0, 0, "-", "util"]], "pydicom.pixel_data_handlers.gdcm_handler": [[213, 1, 1, "", "create_data_element"], [213, 1, 1, "", "create_image"], [213, 1, 1, "", "get_pixeldata"], [213, 1, 1, "", "is_available"], [213, 1, 1, "", "needs_to_convert_to_RGB"], [213, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [213, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[214, 1, 1, "", "get_pixeldata"], [214, 1, 1, "", "is_available"], [214, 1, 1, "", "needs_to_convert_to_RGB"], [214, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [214, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.numpy_handler": [[215, 1, 1, "", "get_pixeldata"], [215, 1, 1, "", "is_available"], [215, 1, 1, "", "needs_to_convert_to_RGB"], [215, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [215, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pillow_handler": [[216, 1, 1, "", "get_pixeldata"], [216, 1, 1, "", "is_available"], [216, 1, 1, "", "needs_to_convert_to_RGB"], [216, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [216, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[217, 1, 1, "", "as_array"], [217, 1, 1, "", "generate_frames"], [217, 1, 1, "", "get_pixeldata"], [217, 1, 1, "", "is_available"], [217, 1, 1, "", "needs_to_convert_to_RGB"], [217, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [217, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.rle_handler": [[218, 1, 1, "", "get_pixeldata"], [218, 1, 1, "", "is_available"], [218, 1, 1, "", "needs_to_convert_to_RGB"], [218, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [218, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.util": [[219, 1, 1, "", "apply_color_lut"], [219, 1, 1, "", "apply_modality_lut"], [219, 1, 1, "", "apply_voi"], [219, 1, 1, "", "apply_voi_lut"], [219, 1, 1, "", "apply_windowing"], [219, 1, 1, "", "convert_color_space"], [219, 1, 1, "", "dtype_corrected_for_endianness"], [219, 1, 1, "", "expand_ybr422"], [219, 1, 1, "", "get_expected_length"], [219, 1, 1, "", "get_image_pixel_ids"], [219, 1, 1, "", "get_j2k_parameters"], [219, 1, 1, "", "get_nr_frames"], [219, 1, 1, "", "pack_bits"], [219, 1, 1, "", "pixel_dtype"], [219, 1, 1, "", "reshape_pixel_array"], [219, 1, 1, "", "unpack_bits"]], "pydicom.pixels": [[220, 1, 1, "", "as_pixel_options"], [244, 1, 1, "", "get_decoder"], [245, 1, 1, "", "get_encoder"], [246, 1, 1, "", "iter_pixels"], [247, 1, 1, "", "pixel_array"]], "pydicom.pixels.decoders.base": [[221, 3, 1, "", "DecodeRunner"], [222, 3, 1, "", "Decoder"], [223, 2, 1, "", "DeflatedExplicitVRLittleEndianDecoder"], [224, 2, 1, "", "ExplicitVRBigEndianDecoder"], [225, 2, 1, "", "ExplicitVRLittleEndianDecoder"], [226, 2, 1, "", "HTJ2KDecoder"], [227, 2, 1, "", "HTJ2KLosslessDecoder"], [228, 2, 1, "", "HTJ2KLosslessRPCLDecoder"], [229, 2, 1, "", "ImplicitVRLittleEndianDecoder"], [230, 2, 1, "", "JPEG2000Decoder"], [231, 2, 1, "", "JPEG2000LosslessDecoder"], [232, 2, 1, "", "JPEGBaseline8BitDecoder"], [233, 2, 1, "", "JPEGExtended12BitDecoder"], [234, 2, 1, "", "JPEGLSLosslessDecoder"], [235, 2, 1, "", "JPEGLSNearLosslessDecoder"], [236, 2, 1, "", "JPEGLosslessDecoder"], [237, 2, 1, "", "JPEGLosslessSV1Decoder"], [238, 2, 1, "", "RLELosslessDecoder"]], "pydicom.pixels.decoders.base.DecodeRunner": [[221, 6, 1, "", "__init__"], [221, 4, 1, "", "bits_allocated"], [221, 4, 1, "", "bits_stored"], [221, 4, 1, "", "columns"], [221, 6, 1, "", "decode"], [221, 6, 1, "", "del_option"], [221, 4, 1, "", "extended_offsets"], [221, 6, 1, "", "frame_length"], [221, 6, 1, "", "get_data"], [221, 6, 1, "", "get_option"], [221, 4, 1, "", "is_array"], [221, 4, 1, "", "is_binary"], [221, 4, 1, "", "is_buffer"], [221, 4, 1, "", "is_dataset"], [221, 6, 1, "", "iter_decode"], [221, 4, 1, "", "number_of_frames"], [221, 4, 1, "", "options"], [221, 4, 1, "", "photometric_interpretation"], [221, 4, 1, "", "pixel_dtype"], [221, 4, 1, "", "pixel_keyword"], [221, 4, 1, "", "pixel_representation"], [221, 4, 1, "", "planar_configuration"], [221, 6, 1, "", "process"], [221, 6, 1, "", "reshape"], [221, 4, 1, "", "rows"], [221, 4, 1, "", "samples_per_pixel"], [221, 6, 1, "", "set_decoders"], [221, 6, 1, "", "set_option"], [221, 6, 1, "", "set_options"], [221, 6, 1, "", "set_source"], [221, 4, 1, "", "src"], [221, 4, 1, "", "transfer_syntax"], [221, 6, 1, "", "validate"]], "pydicom.pixels.decoders.base.Decoder": [[222, 4, 1, "", "UID"], [222, 6, 1, "", "__init__"], [222, 6, 1, "", "add_plugin"], [222, 6, 1, "", "add_plugins"], [222, 6, 1, "", "as_array"], [222, 6, 1, "", "as_buffer"], [222, 4, 1, "", "is_available"], [222, 4, 1, "", "is_encapsulated"], [222, 4, 1, "", "is_native"], [222, 6, 1, "", "iter_array"], [222, 6, 1, "", "iter_buffer"], [222, 4, 1, "", "missing_dependencies"], [222, 6, 1, "", "remove_plugin"]], "pydicom.pixels.encoders.base": [[239, 3, 1, "", "EncodeRunner"], [240, 3, 1, "", "Encoder"], [241, 2, 1, "", "JPEGLSLosslessEncoder"], [242, 2, 1, "", "JPEGLSNearLosslessEncoder"], [243, 2, 1, "", "RLELosslessEncoder"]], "pydicom.pixels.encoders.base.EncodeRunner": [[239, 6, 1, "", "__init__"], [239, 4, 1, "", "bits_allocated"], [239, 4, 1, "", "bits_stored"], [239, 4, 1, "", "columns"], [239, 6, 1, "", "del_option"], [239, 6, 1, "", "encode"], [239, 4, 1, "", "extended_offsets"], [239, 6, 1, "", "frame_length"], [239, 6, 1, "", "get_frame"], [239, 6, 1, "", "get_option"], [239, 4, 1, "", "is_array"], [239, 4, 1, "", "is_binary"], [239, 4, 1, "", "is_buffer"], [239, 4, 1, "", "is_dataset"], [239, 4, 1, "", "number_of_frames"], [239, 4, 1, "", "options"], [239, 4, 1, "", "photometric_interpretation"], [239, 4, 1, "", "pixel_keyword"], [239, 4, 1, "", "pixel_representation"], [239, 4, 1, "", "planar_configuration"], [239, 4, 1, "", "rows"], [239, 4, 1, "", "samples_per_pixel"], [239, 6, 1, "", "set_encoders"], [239, 6, 1, "", "set_option"], [239, 6, 1, "", "set_options"], [239, 6, 1, "", "set_source"], [239, 4, 1, "", "src"], [239, 4, 1, "", "transfer_syntax"], [239, 6, 1, "", "validate"]], "pydicom.pixels.encoders.base.Encoder": [[240, 4, 1, "", "UID"], [240, 6, 1, "", "__init__"], [240, 6, 1, "", "add_plugin"], [240, 6, 1, "", "add_plugins"], [240, 6, 1, "", "encode"], [240, 4, 1, "", "is_available"], [240, 4, 1, "", "is_encapsulated"], [240, 4, 1, "", "is_native"], [240, 6, 1, "", "iter_encode"], [240, 4, 1, "", "missing_dependencies"], [240, 6, 1, "", "remove_plugin"]], "pydicom.sequence": [[248, 3, 1, "", "Sequence"]], "pydicom.sequence.Sequence": [[248, 6, 1, "", "__init__"], [248, 6, 1, "", "append"], [248, 6, 1, "", "clear"], [248, 6, 1, "", "count"], [248, 6, 1, "", "extend"], [248, 6, 1, "", "index"], [248, 6, 1, "", "insert"], [248, 6, 1, "", "pop"], [248, 6, 1, "", "remove"], [248, 6, 1, "", "reverse"]], "pydicom.tag": [[249, 3, 1, "", "BaseTag"], [250, 1, 1, "", "Tag"], [251, 1, 1, "", "TupleTag"], [252, 1, 1, "", "tag_in_exception"]], "pydicom.tag.BaseTag": [[249, 6, 1, "", "__init__"], [249, 6, 1, "", "as_integer_ratio"], [249, 6, 1, "", "bit_count"], [249, 6, 1, "", "bit_length"], [249, 6, 1, "", "conjugate"], [249, 5, 1, "", "denominator"], [249, 4, 1, "", "elem"], [249, 4, 1, "", "element"], [249, 6, 1, "", "from_bytes"], [249, 4, 1, "", "group"], [249, 5, 1, "", "imag"], [249, 4, 1, "", "is_private"], [249, 4, 1, "", "is_private_creator"], [249, 4, 1, "", "json_key"], [249, 5, 1, "", "numerator"], [249, 4, 1, "", "private_creator"], [249, 5, 1, "", "real"], [249, 6, 1, "", "to_bytes"]], "pydicom.uid": [[253, 2, 1, "", "AcquisitionContextSRStorage"], [254, 2, 1, "", "AdvancedBlendingPresentationStateStorage"], [255, 2, 1, "", "AllTransferSyntaxes"], [256, 2, 1, "", "AmbulatoryECGWaveformStorage"], [257, 2, 1, "", "ArterialPulseWaveformStorage"], [258, 2, 1, "", "AutorefractionMeasurementsStorage"], [259, 2, 1, "", "BasicStructuredDisplayStorage"], [260, 2, 1, "", "BasicTextSRStorage"], [261, 2, 1, "", "BasicVoiceAudioWaveformStorage"], [262, 2, 1, "", "BlendingSoftcopyPresentationStateStorage"], [263, 2, 1, "", "BodyPositionWaveformStorage"], [264, 2, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [265, 2, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [266, 2, 1, "", "BreastTomosynthesisImageStorage"], [267, 2, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [268, 2, 1, "", "CArmPhotonElectronRadiationStorage"], [269, 2, 1, "", "CTDefinedProcedureProtocolStorage"], [270, 2, 1, "", "CTImageStorage"], [271, 2, 1, "", "CTPerformedProcedureProtocolStorage"], [272, 2, 1, "", "CardiacElectrophysiologyWaveformStorage"], [273, 2, 1, "", "ChestCADSRStorage"], [274, 2, 1, "", "ColonCADSRStorage"], [275, 2, 1, "", "ColorPaletteStorage"], [276, 2, 1, "", "ColorSoftcopyPresentationStateStorage"], [277, 2, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [278, 2, 1, "", "Comprehensive3DSRStorage"], [279, 2, 1, "", "ComprehensiveSRStorage"], [280, 2, 1, "", "ComputedRadiographyImageStorage"], [281, 2, 1, "", "ConfocalMicroscopyImageStorage"], [282, 2, 1, "", "ConfocalMicroscopyTiledPyramidalImageStorage"], [283, 2, 1, "", "ContentAssessmentResultsStorage"], [284, 2, 1, "", "CornealTopographyMapStorage"], [285, 2, 1, "", "DICOS2DAITStorage"], [286, 2, 1, "", "DICOS3DAITStorage"], [287, 2, 1, "", "DICOSCTImageStorage"], [288, 2, 1, "", "DICOSDigitalXRayImageStorageForPresentation"], [289, 2, 1, "", "DICOSDigitalXRayImageStorageForProcessing"], [290, 2, 1, "", "DICOSQuadrupoleResonanceStorage"], [291, 2, 1, "", "DICOSThreatDetectionReportStorage"], [292, 2, 1, "", "DeflatedExplicitVRLittleEndian"], [293, 2, 1, "", "DeformableSpatialRegistrationStorage"], [294, 2, 1, "", "DermoscopicPhotographyImageStorage"], [295, 2, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [296, 2, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [297, 2, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [298, 2, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [299, 2, 1, "", "DigitalXRayImageStorageForPresentation"], [300, 2, 1, "", "DigitalXRayImageStorageForProcessing"], [301, 2, 1, "", "EddyCurrentImageStorage"], [302, 2, 1, "", "EddyCurrentMultiFrameImageStorage"], [303, 2, 1, "", "ElectromyogramWaveformStorage"], [304, 2, 1, "", "ElectrooculogramWaveformStorage"], [305, 2, 1, "", "EncapsulatedCDAStorage"], [306, 2, 1, "", "EncapsulatedMTLStorage"], [307, 2, 1, "", "EncapsulatedOBJStorage"], [308, 2, 1, "", "EncapsulatedPDFStorage"], [309, 2, 1, "", "EncapsulatedSTLStorage"], [310, 2, 1, "", "EnhancedCTImageStorage"], [311, 2, 1, "", "EnhancedContinuousRTImageStorage"], [312, 2, 1, "", "EnhancedMRColorImageStorage"], [313, 2, 1, "", "EnhancedMRImageStorage"], [314, 2, 1, "", "EnhancedPETImageStorage"], [315, 2, 1, "", "EnhancedRTImageStorage"], [316, 2, 1, "", "EnhancedSRStorage"], [317, 2, 1, "", "EnhancedUSVolumeStorage"], [318, 2, 1, "", "EnhancedXAImageStorage"], [319, 2, 1, "", "EnhancedXRFImageStorage"], [320, 2, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [321, 2, 1, "", "ExplicitVRBigEndian"], [322, 2, 1, "", "ExplicitVRLittleEndian"], [323, 2, 1, "", "ExtensibleSRStorage"], [324, 2, 1, "", "General32bitECGWaveformStorage"], [325, 2, 1, "", "GeneralAudioWaveformStorage"], [326, 2, 1, "", "GeneralECGWaveformStorage"], [327, 2, 1, "", "GenericImplantTemplateStorage"], [328, 2, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [329, 2, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [330, 2, 1, "", "HEVCM10P51"], [331, 2, 1, "", "HEVCMP51"], [332, 2, 1, "", "HTJ2K"], [333, 2, 1, "", "HTJ2KLossless"], [334, 2, 1, "", "HTJ2KLosslessRPCL"], [335, 2, 1, "", "HangingProtocolStorage"], [336, 2, 1, "", "HemodynamicWaveformStorage"], [337, 2, 1, "", "ImplantAssemblyTemplateStorage"], [338, 2, 1, "", "ImplantTemplateGroupStorage"], [339, 2, 1, "", "ImplantationPlanSRStorage"], [340, 2, 1, "", "ImplicitVRLittleEndian"], [341, 2, 1, "", "IntraocularLensCalculationsStorage"], [342, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [343, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [344, 2, 1, "", "InventoryStorage"], [345, 2, 1, "", "JPEG2000"], [346, 2, 1, "", "JPEG2000Lossless"], [347, 2, 1, "", "JPEG2000MC"], [348, 2, 1, "", "JPEG2000MCLossless"], [349, 2, 1, "", "JPEG2000TransferSyntaxes"], [350, 2, 1, "", "JPEGBaseline8Bit"], [351, 2, 1, "", "JPEGExtended12Bit"], [352, 2, 1, "", "JPEGLSLossless"], [353, 2, 1, "", "JPEGLSNearLossless"], [354, 2, 1, "", "JPEGLSTransferSyntaxes"], [355, 2, 1, "", "JPEGLossless"], [356, 2, 1, "", "JPEGLosslessSV1"], [357, 2, 1, "", "JPEGTransferSyntaxes"], [358, 2, 1, "", "JPIPHTJ2KReferenced"], [359, 2, 1, "", "JPIPHTJ2KReferencedDeflate"], [360, 2, 1, "", "KeratometryMeasurementsStorage"], [361, 2, 1, "", "KeyObjectSelectionDocumentStorage"], [362, 2, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [363, 2, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [364, 2, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [365, 2, 1, "", "LensometryMeasurementsStorage"], [366, 2, 1, "", "MPEG2MPHL"], [367, 2, 1, "", "MPEG2MPHLF"], [368, 2, 1, "", "MPEG2MPML"], [369, 2, 1, "", "MPEG2MPMLF"], [370, 2, 1, "", "MPEG4HP41"], [371, 2, 1, "", "MPEG4HP41BD"], [372, 2, 1, "", "MPEG4HP41BDF"], [373, 2, 1, "", "MPEG4HP41F"], [374, 2, 1, "", "MPEG4HP422D"], [375, 2, 1, "", "MPEG4HP422DF"], [376, 2, 1, "", "MPEG4HP423D"], [377, 2, 1, "", "MPEG4HP423DF"], [378, 2, 1, "", "MPEG4HP42STEREO"], [379, 2, 1, "", "MPEG4HP42STEREOF"], [380, 2, 1, "", "MPEGTransferSyntaxes"], [381, 2, 1, "", "MRImageStorage"], [382, 2, 1, "", "MRSpectroscopyStorage"], [383, 2, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [384, 2, 1, "", "MammographyCADSRStorage"], [385, 2, 1, "", "MediaStorageDirectoryStorage"], [386, 2, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [387, 2, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [388, 2, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [389, 2, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [390, 2, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [391, 2, 1, "", "MultichannelRespiratoryWaveformStorage"], [392, 2, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [393, 2, 1, "", "NuclearMedicineImageStorage"], [394, 2, 1, "", "OphthalmicAxialMeasurementsStorage"], [395, 2, 1, "", "OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [396, 2, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [397, 2, 1, "", "OphthalmicPhotography16BitImageStorage"], [398, 2, 1, "", "OphthalmicPhotography8BitImageStorage"], [399, 2, 1, "", "OphthalmicThicknessMapStorage"], [400, 2, 1, "", "OphthalmicTomographyImageStorage"], [401, 2, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [402, 2, 1, "", "PYDICOM_IMPLEMENTATION_UID"], [403, 2, 1, "", "PYDICOM_ROOT_UID"], [404, 2, 1, "", "ParametricMapStorage"], [405, 2, 1, "", "PatientRadiationDoseSRStorage"], [406, 2, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [407, 2, 1, "", "PhotoacousticImageStorage"], [408, 2, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [409, 2, 1, "", "PositronEmissionTomographyImageStorage"], [410, 2, 1, "", "PrivateTransferSyntaxes"], [411, 2, 1, "", "ProcedureLogStorage"], [412, 2, 1, "", "ProtocolApprovalStorage"], [413, 2, 1, "", "PseudoColorSoftcopyPresentationStateStorage"], [414, 2, 1, "", "RE_VALID_UID"], [415, 2, 1, "", "RE_VALID_UID_PREFIX"], [416, 2, 1, "", "RLELossless"], [417, 2, 1, "", "RLETransferSyntaxes"], [418, 2, 1, "", "RTBeamsDeliveryInstructionStorage"], [419, 2, 1, "", "RTBeamsTreatmentRecordStorage"], [420, 2, 1, "", "RTBrachyApplicationSetupDeliveryInstructionStorage"], [421, 2, 1, "", "RTBrachyTreatmentRecordStorage"], [422, 2, 1, "", "RTDoseStorage"], [423, 2, 1, "", "RTImageStorage"], [424, 2, 1, "", "RTIonBeamsTreatmentRecordStorage"], [425, 2, 1, "", "RTIonPlanStorage"], [426, 2, 1, "", "RTPatientPositionAcquisitionInstructionStorage"], [427, 2, 1, "", "RTPhysicianIntentStorage"], [428, 2, 1, "", "RTPlanStorage"], [429, 2, 1, "", "RTRadiationRecordSetStorage"], [430, 2, 1, "", "RTRadiationSalvageRecordStorage"], [431, 2, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [432, 2, 1, "", "RTRadiationSetStorage"], [433, 2, 1, "", "RTSegmentAnnotationStorage"], [434, 2, 1, "", "RTStructureSetStorage"], [435, 2, 1, "", "RTTreatmentPreparationStorage"], [436, 2, 1, "", "RTTreatmentSummaryRecordStorage"], [437, 2, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [438, 2, 1, "", "RawDataStorage"], [439, 2, 1, "", "RealWorldValueMappingStorage"], [440, 2, 1, "", "RespiratoryWaveformStorage"], [441, 2, 1, "", "RoboticArmRadiationStorage"], [442, 2, 1, "", "RoboticRadiationRecordStorage"], [443, 2, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [444, 2, 1, "", "SMPTEST211020UncompressedInterlacedActiveVideo"], [445, 2, 1, "", "SMPTEST211020UncompressedProgressiveActiveVideo"], [446, 2, 1, "", "SMPTEST211030PCMDigitalAudio"], [447, 2, 1, "", "SecondaryCaptureImageStorage"], [448, 2, 1, "", "SegmentationStorage"], [449, 2, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [450, 2, 1, "", "SimplifiedAdultEchoSRStorage"], [451, 2, 1, "", "SleepElectroencephalogramWaveformStorage"], [452, 2, 1, "", "SpatialFiducialsStorage"], [453, 2, 1, "", "SpatialRegistrationStorage"], [454, 2, 1, "", "SpectaclePrescriptionReportStorage"], [455, 2, 1, "", "StereometricRelationshipStorage"], [456, 2, 1, "", "SubjectiveRefractionMeasurementsStorage"], [457, 2, 1, "", "SurfaceScanMeshStorage"], [458, 2, 1, "", "SurfaceScanPointCloudStorage"], [459, 2, 1, "", "SurfaceSegmentationStorage"], [460, 2, 1, "", "TomotherapeuticRadiationRecordStorage"], [461, 2, 1, "", "TomotherapeuticRadiationStorage"], [462, 2, 1, "", "TractographyResultsStorage"], [463, 2, 1, "", "TwelveLeadECGWaveformStorage"], [464, 3, 1, "", "UID"], [465, 2, 1, "", "UltrasoundImageStorage"], [466, 2, 1, "", "UltrasoundMultiFrameImageStorage"], [467, 2, 1, "", "UncompressedTransferSyntaxes"], [468, 2, 1, "", "VLEndoscopicImageStorage"], [469, 2, 1, "", "VLMicroscopicImageStorage"], [470, 2, 1, "", "VLPhotographicImageStorage"], [471, 2, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [472, 2, 1, "", "VLWholeSlideMicroscopyImageStorage"], [473, 2, 1, "", "VariableModalityLUTSoftcopyPresentationStateStorage"], [474, 2, 1, "", "VideoEndoscopicImageStorage"], [475, 2, 1, "", "VideoMicroscopicImageStorage"], [476, 2, 1, "", "VideoPhotographicImageStorage"], [477, 2, 1, "", "VisualAcuityMeasurementsStorage"], [478, 2, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [479, 2, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [480, 2, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [481, 2, 1, "", "XADefinedProcedureProtocolStorage"], [482, 2, 1, "", "XAPerformedProcedureProtocolStorage"], [483, 2, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [484, 2, 1, "", "XRay3DAngiographicImageStorage"], [485, 2, 1, "", "XRay3DCraniofacialImageStorage"], [486, 2, 1, "", "XRayAngiographicImageStorage"], [487, 2, 1, "", "XRayRadiationDoseSRStorage"], [488, 2, 1, "", "XRayRadiofluoroscopicImageStorage"], [489, 1, 1, "", "generate_uid"], [490, 1, 1, "", "register_transfer_syntax"]], "pydicom.uid.UID": [[464, 6, 1, "", "__init__"], [464, 6, 1, "", "capitalize"], [464, 6, 1, "", "casefold"], [464, 6, 1, "", "center"], [464, 6, 1, "", "count"], [464, 6, 1, "", "encode"], [464, 6, 1, "", "endswith"], [464, 6, 1, "", "expandtabs"], [464, 6, 1, "", "find"], [464, 6, 1, "", "format"], [464, 6, 1, "", "format_map"], [464, 6, 1, "", "index"], [464, 4, 1, "", "info"], [464, 4, 1, "", "is_compressed"], [464, 4, 1, "", "is_deflated"], [464, 4, 1, "", "is_encapsulated"], [464, 4, 1, "", "is_implicit_VR"], [464, 4, 1, "", "is_little_endian"], [464, 4, 1, "", "is_private"], [464, 4, 1, "", "is_retired"], [464, 4, 1, "", "is_transfer_syntax"], [464, 4, 1, "", "is_valid"], [464, 6, 1, "", "isalnum"], [464, 6, 1, "", "isalpha"], [464, 6, 1, "", "isascii"], [464, 6, 1, "", "isdecimal"], [464, 6, 1, "", "isdigit"], [464, 6, 1, "", "isidentifier"], [464, 6, 1, "", "islower"], [464, 6, 1, "", "isnumeric"], [464, 6, 1, "", "isprintable"], [464, 6, 1, "", "isspace"], [464, 6, 1, "", "istitle"], [464, 6, 1, "", "isupper"], [464, 6, 1, "", "join"], [464, 4, 1, "", "keyword"], [464, 6, 1, "", "ljust"], [464, 6, 1, "", "lower"], [464, 6, 1, "", "lstrip"], [464, 6, 1, "", "maketrans"], [464, 4, 1, "", "name"], [464, 6, 1, "", "partition"], [464, 6, 1, "", "removeprefix"], [464, 6, 1, "", "removesuffix"], [464, 6, 1, "", "replace"], [464, 6, 1, "", "rfind"], [464, 6, 1, "", "rindex"], [464, 6, 1, "", "rjust"], [464, 6, 1, "", "rpartition"], [464, 6, 1, "", "rsplit"], [464, 6, 1, "", "rstrip"], [464, 6, 1, "", "set_private_encoding"], [464, 6, 1, "", "split"], [464, 6, 1, "", "splitlines"], [464, 6, 1, "", "startswith"], [464, 6, 1, "", "strip"], [464, 6, 1, "", "swapcase"], [464, 6, 1, "", "title"], [464, 6, 1, "", "translate"], [464, 4, 1, "", "type"], [464, 6, 1, "", "upper"], [464, 6, 1, "", "zfill"]], "pydicom.valuerep": [[491, 3, 1, "", "DA"], [492, 1, 1, "", "DS"], [493, 3, 1, "", "DSdecimal"], [494, 3, 1, "", "DSfloat"], [495, 3, 1, "", "DT"], [496, 3, 1, "", "IS"], [497, 3, 1, "", "ISfloat"], [498, 3, 1, "", "PersonName"], [499, 3, 1, "", "TM"], [500, 3, 1, "", "VR"], [501, 1, 1, "", "format_number_as_ds"], [502, 1, 1, "", "is_valid_ds"]], "pydicom.valuerep.DA": [[491, 6, 1, "", "__init__"], [491, 6, 1, "", "ctime"], [491, 6, 1, "", "fromisocalendar"], [491, 6, 1, "", "fromisoformat"], [491, 6, 1, "", "fromordinal"], [491, 6, 1, "", "fromtimestamp"], [491, 6, 1, "", "isocalendar"], [491, 6, 1, "", "isoformat"], [491, 6, 1, "", "isoweekday"], [491, 6, 1, "", "replace"], [491, 6, 1, "", "strftime"], [491, 6, 1, "", "timetuple"], [491, 6, 1, "", "today"], [491, 6, 1, "", "toordinal"], [491, 6, 1, "", "weekday"]], "pydicom.valuerep.DSdecimal": [[493, 6, 1, "", "__init__"], [493, 6, 1, "", "adjusted"], [493, 6, 1, "", "as_integer_ratio"], [493, 6, 1, "", "as_tuple"], [493, 6, 1, "", "canonical"], [493, 6, 1, "", "compare"], [493, 6, 1, "", "compare_signal"], [493, 6, 1, "", "compare_total"], [493, 6, 1, "", "compare_total_mag"], [493, 6, 1, "", "conjugate"], [493, 6, 1, "", "copy_abs"], [493, 6, 1, "", "copy_negate"], [493, 6, 1, "", "copy_sign"], [493, 6, 1, "", "exp"], [493, 6, 1, "", "fma"], [493, 6, 1, "", "from_float"], [493, 6, 1, "", "is_canonical"], [493, 6, 1, "", "is_finite"], [493, 6, 1, "", "is_infinite"], [493, 6, 1, "", "is_nan"], [493, 6, 1, "", "is_normal"], [493, 6, 1, "", "is_qnan"], [493, 6, 1, "", "is_signed"], [493, 6, 1, "", "is_snan"], [493, 6, 1, "", "is_subnormal"], [493, 6, 1, "", "is_zero"], [493, 6, 1, "", "ln"], [493, 6, 1, "", "log10"], [493, 6, 1, "", "logb"], [493, 6, 1, "", "logical_and"], [493, 6, 1, "", "logical_invert"], [493, 6, 1, "", "logical_or"], [493, 6, 1, "", "logical_xor"], [493, 6, 1, "", "max"], [493, 6, 1, "", "max_mag"], [493, 6, 1, "", "min"], [493, 6, 1, "", "min_mag"], [493, 6, 1, "", "next_minus"], [493, 6, 1, "", "next_plus"], [493, 6, 1, "", "next_toward"], [493, 6, 1, "", "normalize"], [493, 6, 1, "", "number_class"], [493, 6, 1, "", "quantize"], [493, 6, 1, "", "radix"], [493, 6, 1, "", "remainder_near"], [493, 6, 1, "", "rotate"], [493, 6, 1, "", "same_quantum"], [493, 6, 1, "", "scaleb"], [493, 6, 1, "", "shift"], [493, 6, 1, "", "sqrt"], [493, 6, 1, "", "to_eng_string"], [493, 6, 1, "", "to_integral"], [493, 6, 1, "", "to_integral_exact"], [493, 6, 1, "", "to_integral_value"]], "pydicom.valuerep.DSfloat": [[494, 6, 1, "", "__init__"], [494, 6, 1, "", "as_integer_ratio"], [494, 6, 1, "", "conjugate"], [494, 6, 1, "", "fromhex"], [494, 6, 1, "", "hex"], [494, 5, 1, "", "imag"], [494, 6, 1, "", "is_integer"], [494, 5, 1, "", "real"]], "pydicom.valuerep.DT": [[495, 6, 1, "", "__init__"], [495, 6, 1, "", "astimezone"], [495, 6, 1, "", "combine"], [495, 6, 1, "", "ctime"], [495, 6, 1, "", "date"], [495, 6, 1, "", "dst"], [495, 6, 1, "", "fromisocalendar"], [495, 6, 1, "", "fromisoformat"], [495, 6, 1, "", "fromordinal"], [495, 6, 1, "", "fromtimestamp"], [495, 6, 1, "", "isocalendar"], [495, 6, 1, "", "isoformat"], [495, 6, 1, "", "isoweekday"], [495, 6, 1, "", "now"], [495, 6, 1, "", "replace"], [495, 6, 1, "", "strftime"], [495, 6, 1, "", "strptime"], [495, 6, 1, "", "time"], [495, 6, 1, "", "timestamp"], [495, 6, 1, "", "timetuple"], [495, 6, 1, "", "timetz"], [495, 6, 1, "", "today"], [495, 6, 1, "", "toordinal"], [495, 6, 1, "", "tzname"], [495, 6, 1, "", "utcfromtimestamp"], [495, 6, 1, "", "utcnow"], [495, 6, 1, "", "utcoffset"], [495, 6, 1, "", "utctimetuple"], [495, 6, 1, "", "weekday"]], "pydicom.valuerep.IS": [[496, 6, 1, "", "__init__"], [496, 6, 1, "", "as_integer_ratio"], [496, 6, 1, "", "bit_count"], [496, 6, 1, "", "bit_length"], [496, 6, 1, "", "conjugate"], [496, 5, 1, "", "denominator"], [496, 6, 1, "", "from_bytes"], [496, 5, 1, "", "imag"], [496, 5, 1, "", "numerator"], [496, 5, 1, "", "real"], [496, 6, 1, "", "to_bytes"]], "pydicom.valuerep.ISfloat": [[497, 6, 1, "", "__init__"], [497, 6, 1, "", "as_integer_ratio"], [497, 6, 1, "", "conjugate"], [497, 6, 1, "", "fromhex"], [497, 6, 1, "", "hex"], [497, 5, 1, "", "imag"], [497, 6, 1, "", "is_integer"], [497, 5, 1, "", "real"]], "pydicom.valuerep.PersonName": [[498, 6, 1, "", "__init__"], [498, 4, 1, "", "alphabetic"], [498, 4, 1, "", "components"], [498, 6, 1, "", "decode"], [498, 6, 1, "", "encode"], [498, 6, 1, "", "family_comma_given"], [498, 4, 1, "", "family_name"], [498, 6, 1, "", "formatted"], [498, 6, 1, "", "from_named_components"], [498, 6, 1, "", "from_named_components_veterinary"], [498, 4, 1, "", "given_name"], [498, 4, 1, "", "ideographic"], [498, 4, 1, "", "middle_name"], [498, 4, 1, "", "name_prefix"], [498, 4, 1, "", "name_suffix"], [498, 4, 1, "", "phonetic"]], "pydicom.valuerep.TM": [[499, 6, 1, "", "__init__"], [499, 6, 1, "", "dst"], [499, 6, 1, "", "fromisoformat"], [499, 6, 1, "", "isoformat"], [499, 6, 1, "", "replace"], [499, 6, 1, "", "strftime"], [499, 6, 1, "", "tzname"], [499, 6, 1, "", "utcoffset"]], "pydicom.valuerep.VR": [[500, 6, 1, "", "__init__"]], "pydicom.values": [[503, 1, 1, "", "convert_AE_string"], [504, 1, 1, "", "convert_ATvalue"], [505, 1, 1, "", "convert_DA_string"], [506, 1, 1, "", "convert_DS_string"], [507, 1, 1, "", "convert_DT_string"], [508, 1, 1, "", "convert_IS_string"], [509, 1, 1, "", "convert_OBvalue"], [510, 1, 1, "", "convert_OWvalue"], [511, 1, 1, "", "convert_PN"], [512, 1, 1, "", "convert_SQ"], [513, 1, 1, "", "convert_TM_string"], [514, 1, 1, "", "convert_UI"], [515, 1, 1, "", "convert_UN"], [516, 1, 1, "", "convert_UR_string"], [517, 1, 1, "", "convert_numbers"], [518, 1, 1, "", "convert_single_string"], [519, 1, 1, "", "convert_string"], [520, 1, 1, "", "convert_tag"], [521, 1, 1, "", "convert_text"], [522, 1, 1, "", "convert_value"], [523, 1, 1, "", "multi_string"]], "pydicom.waveforms": [[524, 0, 0, "-", "numpy_handler"]], "pydicom.waveforms.numpy_handler": [[524, 1, 1, "", "generate_multiplex"], [524, 1, 1, "", "is_available"], [524, 1, 1, "", "multiplex_array"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:method", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"show": [0, 14, 26, 28], "dicom": [0, 10, 11, 12, 16, 17, 20, 24, 26, 43, 47, 49, 54, 58, 75, 563, 565, 568], "file": [0, 10, 17, 20, 24, 26, 38, 49, 54, 75, 535, 539, 542, 543, 563, 565], "us": [0, 2, 23, 44, 45, 50, 54, 565, 566], "hierarch": 0, "tree": 0, "imag": [1, 2, 4, 6, 29, 36, 37, 38, 50], "process": [1, 6, 15, 29], "downsiz": 2, "mri": 2, "pydicom": [2, 23, 24, 26, 27, 28, 33, 41, 42, 43, 44, 45, 47, 48, 50, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 528, 529, 530, 531, 532, 533, 534, 535, 555, 556, 558, 565, 566], "decod": [3, 29, 30, 31, 55, 66, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 530, 531, 568], "plot": [3, 4, 9], "waveform": [3, 53, 524, 534, 568], "data": [3, 8, 9, 12, 17, 29, 30, 31, 34, 35, 45, 46, 47, 51, 52, 53, 57, 58, 60, 61, 67, 104, 105, 106, 107, 525, 526, 529, 530, 531, 532, 534, 562, 566, 568], "load": [4, 563], "ct": 4, "slice": 4, "axial": 4, "sagitt": 4, "coron": 4, "comput": [5, 13, 19, 21, 557], "time": [5, 13, 19, 21, 557], "gener": [6, 23, 40], "exampl": [6, 24, 26, 36, 37, 41, 69, 561, 565], "input": [6, 7], "output": [6, 7, 8], "metadata": [6, 15], "format": [8, 562], "set": [8, 10, 47, 75, 99, 563], "print": 8, "read": [9, 10, 11, 49, 72, 561], "dataset": [9, 14, 42, 45, 51, 52, 53, 57, 59, 69, 70, 72, 74, 131, 132, 133, 134, 135, 561, 562], "pixel": [9, 29, 30, 31, 34, 35, 36, 37, 38, 45, 46, 52, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 525, 526, 530, 531, 532, 566], "rtplan": 11, "list": [11, 533], "inform": [11, 38], "write": [12, 40, 49, 54, 74, 559, 561], "work": [14, 18, 51, 52, 53, 562], "memori": 14, "base": [14, 71, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "add": 16, "item": 16, "privat": [16, 47, 58], "dictionari": [16, 47, 58], "anonym": 17, "singl": 17, "sequenc": [18, 42, 63, 248, 561], "analys": 20, "differ": 20, "between": 20, "displai": [22, 47], "unicod": 22, "person": 22, "name": 22, "frequent": 23, "ask": 23, "question": 23, "how": [23, 565], "do": 23, "i": [23, 496], "cite": 23, "instal": [23, 26, 27, 44, 559, 565], "what": [23, 559, 560], "ar": 23, "": 23, "prerequisit": 23, "requir": [23, 30, 34, 559], "option": [23, 24, 26, 29, 33, 56, 559, 565], "version": [23, 43, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 565], "python": [23, 32, 50], "can": 23, "codifi": [24, 26, 54], "command": [24, 26, 28], "A": [24, 26], "simpl": [24, 26], "part": [24, 26], "extend": [25, 26], "cli": [25, 26, 27], "line": 26, "interfac": 26, "guid": [26, 39, 41, 48], "introduct": [26, 27, 43, 44, 47, 50, 51, 52, 53, 54, 562, 566], "combin": [26, 27], "other": [26, 27, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545], "miscellan": [29, 528], "plugin": [29, 30, 33, 34, 36, 37], "rle": [29, 37], "lossless": [29, 36, 37], "ad": [30, 34, 47, 561, 563], "element": [32, 42, 47, 60, 61, 62, 63, 64, 65, 66, 561], "vr": [32, 500], "type": [32, 40], "encod": [33, 34, 35, 36, 37, 55, 239, 240, 241, 242, 243, 530, 532, 568], "gdcm": [33, 565], "pylibjpeg": [33, 565], "pyjpegl": [33, 565], "an": 34, "jpeg": 36, "l": 36, "valid": [36, 37, 43], "paramet": [36, 37], "represent": [36, 59, 60, 62, 63, 65], "photometr": 36, "interpret": 36, "planar": 36, "configur": [36, 56], "Near": 36, "avail": [36, 37], "glossari": 38, "meta": 38, "modul": 38, "document": [40, 41, 535, 547, 559, 560], "style": 40, "guidelin": 40, "restructuredtext": 40, "get": [41, 57, 561], "start": 41, "user": [41, 48], "api": [41, 527], "refer": [41, 527], "core": 42, "datael": [42, 128], "tag": [42, 64, 249, 250, 251, 252], "best": 43, "practic": 43, "enforc": 43, "futur": 43, "proof": 43, "your": [43, 559, 560], "code": [43, 559], "limit": 43, "major": [43, 535, 536, 537, 538, 539, 540, 541, 542, 544], "packag": [43, 45, 566], "licens": 44, "support": [44, 45, 46, 562], "next": [44, 559, 560, 561], "step": [44, 561], "compress": [45, 46, 566], "third": [45, 566], "parti": [45, 566], "transfer": [45, 46, 533], "syntax": [45, 46, 533], "handl": [46, 529], "precondit": 46, "usag": [46, 69], "remov": [47, 535, 556, 563], "all": 47, "new": [47, 535, 539, 559, 560, 563], "entri": 47, "pars": [49, 67], "view": [50, 561], "matplotlib": 50, "tkinter": 50, "librari": [50, 559, 565], "pil": 50, "wxpython": 50, "overlai": [51, 205, 529], "overlay_arrai": 51, "pixel_arrai": [52, 247], "color": 52, "space": 52, "palett": 52, "modal": 52, "lut": 52, "rescal": 52, "oper": 52, "voi": 52, "window": 52, "waveform_arrai": 53, "from": [54, 562], "scratch": 54, "charact": 55, "charset": [55, 76, 77, 78, 79], "config": [56, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "includ": 57, "util": [58, 67, 73, 219, 525, 530, 533], "datadict": [58, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "dataelem": [61, 128, 129, 130], "multi": 62, "valu": [62, 63, 65, 66, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "multiv": [62, 204], "special": 65, "valuerep": [65, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502], "bulk": [67, 525], "encapsul": [67, 138, 566], "encap": [67, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "creat": [67, 559, 560, 562, 563], "except": 68, "error": [68, 154], "io": [70, 71, 73], "class": [71, 533], "filebas": [71, 155, 156, 157, 158], "fileread": [72, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "fileutil": [73, 175, 176, 177, 178, 179], "filewrit": [74, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "fileset": [75, 169, 170, 171, 172, 173, 174, 563], "convert_encod": 76, "decode_byt": 77, "decode_el": 78, "encode_str": 79, "apply_j2k_correct": 80, "ds_decim": 81, "ds_numpi": 82, "ignor": 83, "invalid_keyword_behavior": 84, "invalid_key_behavior": 85, "rais": 86, "warn": 87, "allow_ds_float": 88, "assume_implicit_vr_switch": 89, "convert_wrong_length_to_un": 90, "data_element_callback": 91, "data_element_callback_kwarg": 92, "datetime_convers": 93, "debug": 94, "enforce_valid_valu": 95, "future_behavior": 96, "pixel_data_handl": [97, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 526], "reset_data_element_callback": 98, "show_file_meta": 100, "use_ds_decim": 101, "use_ds_numpi": 102, "use_is_numpi": 103, "get_charset_fil": 104, "get_palette_fil": 105, "get_testdata_fil": [106, 107], "add_dict_entri": [108, 109], "add_private_dict_entri": [110, 111], "dictionary_vm": 112, "dictionary_vr": 113, "dictionary_descript": 114, "dictionary_has_tag": 115, "dictionary_is_retir": 116, "dictionary_keyword": 117, "get_entri": 118, "get_private_entri": 119, "keyword_for_tag": 120, "mask_match": 121, "private_dictionary_vm": 122, "private_dictionary_vr": 123, "private_dictionary_descript": 124, "repeater_has_keyword": 125, "repeater_has_tag": 126, "tag_for_keyword": 127, "dataelement_from_raw": 129, "rawdatael": 130, "filedataset": 132, "filemetadataset": 133, "privateblock": 134, "validate_file_meta": 135, "decode_data_sequ": 136, "defragment_data": 137, "encapsulate_extend": 139, "fragment_fram": 140, "generate_fragmented_fram": 141, "generate_frag": 142, "generate_fram": 143, "generate_pixel_data": 144, "generate_pixel_data_frag": 145, "generate_pixel_data_fram": 146, "get_fram": 147, "get_frame_offset": 148, "itemize_frag": 149, "itemize_fram": 150, "parse_basic_offset": 151, "parse_frag": 152, "read_item": 153, "invaliddicomerror": 154, "dicombytesio": 155, "dicomfil": 156, "dicomfilelik": 157, "dicomio": 158, "data_element_gener": 159, "data_element_offset_to_valu": 160, "dcmread": 161, "read_dataset": 162, "read_deferred_data_el": 163, "read_file_meta_info": 164, "read_parti": 165, "read_preambl": 166, "read_sequ": 167, "read_sequence_item": 168, "directory_record": 169, "fileinst": 170, "recordnod": 172, "generate_filenam": 173, "is_conformant_file_id": 174, "absorb_delimiter_item": 175, "find_byt": 176, "find_delimit": 177, "length_of_undefined_length": 178, "read_undefined_length_valu": 179, "correct_ambiguous_vr": 180, "correct_ambiguous_vr_el": 181, "dcmwrite": 182, "multi_str": [183, 523], "write_atvalu": 184, "write_da": 185, "write_dt": 186, "write_obvalu": 187, "write_owvalu": 188, "write_pn": 189, "write_tm": 190, "write_ui": 191, "write_un": 192, "write_data_el": 193, "write_dataset": 194, "write_file_meta_info": 195, "write_number_str": 196, "write_numb": 197, "write_sequ": 198, "write_sequence_item": 199, "write_str": 200, "write_text": 201, "misc": [202, 203, 528], "is_dicom": 202, "size_in_byt": 203, "multivalu": 204, "numpy_handl": [205, 215, 524], "apply_color_lut": 206, "apply_modality_lut": 207, "apply_rescal": 208, "apply_voi": 209, "apply_voi_lut": 210, "apply_window": 211, "convert_color_spac": 212, "gdcm_handler": 213, "jpeg_ls_handl": 214, "pillow_handl": 216, "pylibjpeg_handl": 217, "rle_handl": 218, "as_pixel_opt": 220, "decoderunn": 221, "deflatedexplicitvrlittleendiandecod": 223, "explicitvrbigendiandecod": 224, "explicitvrlittleendiandecod": 225, "htj2kdecod": 226, "htj2klosslessdecod": 227, "htj2klosslessrpcldecod": 228, "implicitvrlittleendiandecod": 229, "jpeg2000decod": 230, "jpeg2000losslessdecod": 231, "jpegbaseline8bitdecod": 232, "jpegextended12bitdecod": 233, "jpeglslosslessdecod": 234, "jpeglsnearlosslessdecod": 235, "jpeglosslessdecod": 236, "jpeglosslesssv1decod": 237, "rlelosslessdecod": 238, "encoderunn": 239, "jpeglslosslessencod": 241, "jpeglsnearlosslessencod": 242, "rlelosslessencod": 243, "get_decod": 244, "get_encod": 245, "iter_pixel": 246, "basetag": 249, "tupletag": 251, "tag_in_except": 252, "uid": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 533], "acquisitioncontextsrstorag": 253, "advancedblendingpresentationstatestorag": 254, "alltransfersyntax": 255, "ambulatoryecgwaveformstorag": 256, "arterialpulsewaveformstorag": 257, "autorefractionmeasurementsstorag": 258, "basicstructureddisplaystorag": 259, "basictextsrstorag": 260, "basicvoiceaudiowaveformstorag": 261, "blendingsoftcopypresentationstatestorag": 262, "bodypositionwaveformstorag": 263, "breastprojectionxrayimagestorageforpresent": 264, "breastprojectionxrayimagestorageforprocess": 265, "breasttomosynthesisimagestorag": 266, "carmphotonelectronradiationrecordstorag": 267, "carmphotonelectronradiationstorag": 268, "ctdefinedprocedureprotocolstorag": 269, "ctimagestorag": 270, "ctperformedprocedureprotocolstorag": 271, "cardiacelectrophysiologywaveformstorag": 272, "chestcadsrstorag": 273, "coloncadsrstorag": 274, "colorpalettestorag": 275, "colorsoftcopypresentationstatestorag": 276, "compositingplanarmprvolumetricpresentationstatestorag": 277, "comprehensive3dsrstorag": 278, "comprehensivesrstorag": 279, "computedradiographyimagestorag": 280, "confocalmicroscopyimagestorag": 281, "confocalmicroscopytiledpyramidalimagestorag": 282, "contentassessmentresultsstorag": 283, "cornealtopographymapstorag": 284, "dicos2daitstorag": 285, "dicos3daitstorag": 286, "dicosctimagestorag": 287, "dicosdigitalxrayimagestorageforpresent": 288, "dicosdigitalxrayimagestorageforprocess": 289, "dicosquadrupoleresonancestorag": 290, "dicosthreatdetectionreportstorag": 291, "deflatedexplicitvrlittleendian": 292, "deformablespatialregistrationstorag": 293, "dermoscopicphotographyimagestorag": 294, "digitalintraoralxrayimagestorageforpresent": 295, "digitalintraoralxrayimagestorageforprocess": 296, "digitalmammographyxrayimagestorageforpresent": 297, "digitalmammographyxrayimagestorageforprocess": 298, "digitalxrayimagestorageforpresent": 299, "digitalxrayimagestorageforprocess": 300, "eddycurrentimagestorag": 301, "eddycurrentmultiframeimagestorag": 302, "electromyogramwaveformstorag": 303, "electrooculogramwaveformstorag": 304, "encapsulatedcdastorag": 305, "encapsulatedmtlstorag": 306, "encapsulatedobjstorag": 307, "encapsulatedpdfstorag": 308, "encapsulatedstlstorag": 309, "enhancedctimagestorag": 310, "enhancedcontinuousrtimagestorag": 311, "enhancedmrcolorimagestorag": 312, "enhancedmrimagestorag": 313, "enhancedpetimagestorag": 314, "enhancedrtimagestorag": 315, "enhancedsrstorag": 316, "enhancedusvolumestorag": 317, "enhancedxaimagestorag": 318, "enhancedxrfimagestorag": 319, "enhancedxrayradiationdosesrstorag": 320, "explicitvrbigendian": 321, "explicitvrlittleendian": 322, "extensiblesrstorag": 323, "general32bitecgwaveformstorag": 324, "generalaudiowaveformstorag": 325, "generalecgwaveformstorag": 326, "genericimplanttemplatestorag": 327, "grayscaleplanarmprvolumetricpresentationstatestorag": 328, "grayscalesoftcopypresentationstatestorag": 329, "hevcm10p51": 330, "hevcmp51": 331, "htj2k": 332, "htj2klossless": 333, "htj2klosslessrpcl": 334, "hangingprotocolstorag": 335, "hemodynamicwaveformstorag": 336, "implantassemblytemplatestorag": 337, "implanttemplategroupstorag": 338, "implantationplansrstorag": 339, "implicitvrlittleendian": 340, "intraocularlenscalculationsstorag": 341, "intravascularopticalcoherencetomographyimagestorageforpresent": 342, "intravascularopticalcoherencetomographyimagestorageforprocess": 343, "inventorystorag": 344, "jpeg2000": 345, "jpeg2000lossless": 346, "jpeg2000mc": 347, "jpeg2000mclossless": 348, "jpeg2000transfersyntax": 349, "jpegbaseline8bit": 350, "jpegextended12bit": 351, "jpeglslossless": 352, "jpeglsnearlossless": 353, "jpeglstransfersyntax": 354, "jpeglossless": 355, "jpeglosslesssv1": 356, "jpegtransfersyntax": 357, "jpiphtj2kreferenc": 358, "jpiphtj2kreferenceddefl": 359, "keratometrymeasurementsstorag": 360, "keyobjectselectiondocumentstorag": 361, "legacyconvertedenhancedctimagestorag": 362, "legacyconvertedenhancedmrimagestorag": 363, "legacyconvertedenhancedpetimagestorag": 364, "lensometrymeasurementsstorag": 365, "mpeg2mphl": 366, "mpeg2mphlf": 367, "mpeg2mpml": 368, "mpeg2mpmlf": 369, "mpeg4hp41": 370, "mpeg4hp41bd": 371, "mpeg4hp41bdf": 372, "mpeg4hp41f": 373, "mpeg4hp422d": 374, "mpeg4hp422df": 375, "mpeg4hp423d": 376, "mpeg4hp423df": 377, "mpeg4hp42stereo": 378, "mpeg4hp42stereof": 379, "mpegtransfersyntax": 380, "mrimagestorag": 381, "mrspectroscopystorag": 382, "maculargridthicknessandvolumereportstorag": 383, "mammographycadsrstorag": 384, "mediastoragedirectorystorag": 385, "microscopybulksimpleannotationsstorag": 386, "multiframegrayscalebytesecondarycaptureimagestorag": 387, "multiframegrayscalewordsecondarycaptureimagestorag": 388, "multiframesinglebitsecondarycaptureimagestorag": 389, "multiframetruecolorsecondarycaptureimagestorag": 390, "multichannelrespiratorywaveformstorag": 391, "multiplevolumerenderingvolumetricpresentationstatestorag": 392, "nuclearmedicineimagestorag": 393, "ophthalmicaxialmeasurementsstorag": 394, "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorag": 395, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 396, "ophthalmicphotography16bitimagestorag": 397, "ophthalmicphotography8bitimagestorag": 398, "ophthalmicthicknessmapstorag": 399, "ophthalmictomographyimagestorag": 400, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 401, "pydicom_implementation_uid": 402, "pydicom_root_uid": 403, "parametricmapstorag": 404, "patientradiationdosesrstorag": 405, "performedimagingagentadministrationsrstorag": 406, "photoacousticimagestorag": 407, "plannedimagingagentadministrationsrstorag": 408, "positronemissiontomographyimagestorag": 409, "privatetransfersyntax": 410, "procedurelogstorag": 411, "protocolapprovalstorag": 412, "pseudocolorsoftcopypresentationstatestorag": 413, "re_valid_uid": 414, "re_valid_uid_prefix": 415, "rlelossless": 416, "rletransfersyntax": 417, "rtbeamsdeliveryinstructionstorag": 418, "rtbeamstreatmentrecordstorag": 419, "rtbrachyapplicationsetupdeliveryinstructionstorag": 420, "rtbrachytreatmentrecordstorag": 421, "rtdosestorag": 422, "rtimagestorag": 423, "rtionbeamstreatmentrecordstorag": 424, "rtionplanstorag": 425, "rtpatientpositionacquisitioninstructionstorag": 426, "rtphysicianintentstorag": 427, "rtplanstorag": 428, "rtradiationrecordsetstorag": 429, "rtradiationsalvagerecordstorag": 430, "rtradiationsetdeliveryinstructionstorag": 431, "rtradiationsetstorag": 432, "rtsegmentannotationstorag": 433, "rtstructuresetstorag": 434, "rttreatmentpreparationstorag": 435, "rttreatmentsummaryrecordstorag": 436, "radiopharmaceuticalradiationdosesrstorag": 437, "rawdatastorag": 438, "realworldvaluemappingstorag": 439, "respiratorywaveformstorag": 440, "roboticarmradiationstorag": 441, "roboticradiationrecordstorag": 442, "routinescalpelectroencephalogramwaveformstorag": 443, "smptest211020uncompressedinterlacedactivevideo": 444, "smptest211020uncompressedprogressiveactivevideo": 445, "smptest211030pcmdigitalaudio": 446, "secondarycaptureimagestorag": 447, "segmentationstorag": 448, "segmentedvolumerenderingvolumetricpresentationstatestorag": 449, "simplifiedadultechosrstorag": 450, "sleepelectroencephalogramwaveformstorag": 451, "spatialfiducialsstorag": 452, "spatialregistrationstorag": 453, "spectacleprescriptionreportstorag": 454, "stereometricrelationshipstorag": 455, "subjectiverefractionmeasurementsstorag": 456, "surfacescanmeshstorag": 457, "surfacescanpointcloudstorag": 458, "surfacesegmentationstorag": 459, "tomotherapeuticradiationrecordstorag": 460, "tomotherapeuticradiationstorag": 461, "tractographyresultsstorag": 462, "twelveleadecgwaveformstorag": 463, "ultrasoundimagestorag": 465, "ultrasoundmultiframeimagestorag": 466, "uncompressedtransfersyntax": 467, "vlendoscopicimagestorag": 468, "vlmicroscopicimagestorag": 469, "vlphotographicimagestorag": 470, "vlslidecoordinatesmicroscopicimagestorag": 471, "vlwholeslidemicroscopyimagestorag": 472, "variablemodalitylutsoftcopypresentationstatestorag": 473, "videoendoscopicimagestorag": 474, "videomicroscopicimagestorag": 475, "videophotographicimagestorag": 476, "visualacuitymeasurementsstorag": 477, "volumerenderingvolumetricpresentationstatestorag": 478, "widefieldophthalmicphotography3dcoordinatesimagestorag": 479, "widefieldophthalmicphotographystereographicprojectionimagestorag": 480, "xadefinedprocedureprotocolstorag": 481, "xaperformedprocedureprotocolstorag": 482, "xaxrfgrayscalesoftcopypresentationstatestorag": 483, "xray3dangiographicimagestorag": 484, "xray3dcraniofacialimagestorag": 485, "xrayangiographicimagestorag": 486, "xrayradiationdosesrstorag": 487, "xrayradiofluoroscopicimagestorag": 488, "generate_uid": 489, "register_transfer_syntax": 490, "da": 491, "d": 492, "dsdecim": 493, "dsfloat": 494, "dt": 495, "isfloat": 497, "personnam": 498, "tm": 499, "format_number_as_d": 501, "is_valid_d": 502, "convert_ae_str": 503, "convert_atvalu": 504, "convert_da_str": 505, "convert_ds_str": 506, "convert_dt_str": 507, "convert_is_str": 508, "convert_obvalu": 509, "convert_owvalu": 510, "convert_pn": 511, "convert_sq": 512, "convert_tm_str": 513, "convert_ui": 514, "convert_un": 515, "convert_ur_str": 516, "convert_numb": 517, "convert_single_str": 518, "convert_str": 519, "convert_tag": 520, "convert_text": 521, "convert_valu": 522, "handler": [525, 526, 534], "definit": 533, "storag": 533, "sop": [533, 563], "releas": [535, 539, 565], "note": 535, "3": [535, 537, 547, 554, 556], "0": [535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 555, 556], "chang": [535, 536, 537, 538, 540, 541, 542, 543, 544, 546, 547, 548, 549, 551, 553, 554, 555, 556, 559, 560, 563], "enhanc": [535, 536, 537, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 555, 556], "fix": [535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556], "deprec": [535, 556], "intern": [535, 555, 556], "2": [535, 536, 546, 550, 551, 552, 553, 554, 555], "4": [535, 538, 548, 549, 555], "1": [535, 544, 545, 546, 547, 548, 549, 551, 552], "changelog": [535, 550], "infrastructur": [535, 544], "9": [535, 536, 537, 538, 539, 540, 541, 542, 543], "contrib": [535, 539, 542, 543], "contributor": [535, 543], "8": [535, 542], "bug": [535, 536, 537, 538, 540, 541, 542], "7": [535, 541], "6": [535, 540], "5": [535, 539], "thi": [535, 538, 539], "addit": [535, 538], "contribut": [558, 559, 560], "sourc": 559, "download": [559, 560, 565], "current": 559, "pytest": 559, "run": 559, "test": [559, 565], "suit": 559, "branch": [559, 560], "make": [559, 560], "preview": [559, 560], "commit": [559, 560], "pull": [559, 560], "request": [559, 560], "happen": [559, 560], "build": 560, "basic": 561, "access": 561, "modifi": [561, 563], "path": 561, "file_meta": 561, "ani": 561, "categori": 561, "standard": 561, "delet": 561, "json": 562, "convert": 562, "larg": 562, "binari": 562, "dicomdir": 563, "The": 563, "exist": 563, "stage": 563, "instanc": 563, "appli": 563, "conclus": 563, "tutori": 564, "offici": 565, "pip": 565, "conda": 565, "pillow": 565, "develop": 565, "structur": 567, "report": 567}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"pydicom.config.WARN": [[87, "pydicom-config-warn"]], "pydicom.config.RAISE": [[86, "pydicom-config-raise"]], "pydicom.config.assume_implicit_vr_switch": [[89, "pydicom-config-assume-implicit-vr-switch"]], "pydicom.config.allow_DS_float": [[88, "pydicom-config-allow-ds-float"]], "pydicom.config.data_element_callback": [[91, "pydicom-config-data-element-callback"]], "pydicom.config.convert_wrong_length_to_UN": [[90, "pydicom-config-convert-wrong-length-to-un"]], "pydicom.config.data_element_callback_kwargs": [[92, "pydicom-config-data-element-callback-kwargs"]], "pydicom.config.enforce_valid_values": [[95, "pydicom-config-enforce-valid-values"]], "pydicom.config.debug": [[94, "pydicom-config-debug"]], "pydicom.config.INVALID_KEY_BEHAVIOR": [[85, "pydicom-config-invalid-key-behavior"]], "pydicom.config.INVALID_KEYWORD_BEHAVIOR": [[84, "pydicom-config-invalid-keyword-behavior"]], "pydicom.config.datetime_conversion": [[93, "pydicom-config-datetime-conversion"]], "Image processing": [[1, "image-processing"], [6, "image-processing"]], "General examples": [[6, "general-examples"]], "Input-output": [[6, "input-output"], [7, "input-output"]], "Metadata processing": [[6, "metadata-processing"], [15, "metadata-processing"]], "Read a Dataset and plot Pixel Data": [[9, "read-a-dataset-and-plot-pixel-data"]], "Read RTPLAN DICOM and list information": [[11, "read-rtplan-dicom-and-list-information"]], "Computation times": [[5, "computation-times"], [21, "computation-times"], [19, "computation-times"], [13, "computation-times"], [557, "computation-times"]], "Show a dicom file using hierarchical tree": [[0, "show-a-dicom-file-using-hierarchical-tree"]], "Read a DICOM File-set": [[10, "read-a-dicom-file-set"]], "Decode and plot Waveform Data": [[3, "decode-and-plot-waveform-data"]], "Downsize MRI image using pydicom": [[2, "downsize-mri-image-using-pydicom"]], "Format the output of the data set printing": [[8, "format-the-output-of-the-data-set-printing"]], "Load CT slices and plot axial, sagittal and coronal images": [[4, "load-ct-slices-and-plot-axial-sagittal-and-coronal-images"]], "Show working with memory-based dataset": [[14, "show-working-with-memory-based-dataset"]], "Display unicode person names": [[22, "display-unicode-person-names"]], "Frequently asked questions": [[23, "frequently-asked-questions"]], "General": [[23, "general"]], "How do I cite pydicom?": [[23, "how-do-i-cite-pydicom"]], "Installation": [[23, "installation"]], "What are pydicom\u2019s prerequisites?": [[23, "what-are-pydicom-s-prerequisites"]], "Required": [[23, "required"]], "Optional": [[23, "optional"]], "What version of Python can I use?": [[23, "what-version-of-python-can-i-use"]], "Analyse differences between DICOM files": [[20, "analyse-differences-between-dicom-files"]], "Anonymize DICOM data": [[17, "anonymize-dicom-data"]], "Anonymize a single file": [[17, "anonymize-a-single-file"]], "Working with sequences": [[18, "working-with-sequences"]], "Write DICOM data": [[12, "write-dicom-data"]], "Add items to the private DICOM dictionary": [[16, "add-items-to-the-private-dicom-dictionary"]], "pydicom.config.reset_data_element_callback": [[98, "pydicom-config-reset-data-element-callback"]], "pydicom.data.get_testdata_file": [[106, "pydicom-data-get-testdata-file"]], "pydicom.config.settings": [[99, "pydicom-config-settings"]], "pydicom.config.use_IS_numpy": [[103, "pydicom-config-use-is-numpy"]], "pydicom.data.get_testdata_files": [[107, "pydicom-data-get-testdata-files"]], "pydicom.data.get_palette_files": [[105, "pydicom-data-get-palette-files"]], "pydicom.config.use_DS_decimal": [[101, "pydicom-config-use-ds-decimal"]], "pydicom.config.use_DS_numpy": [[102, "pydicom-config-use-ds-numpy"]], "pydicom.config.future_behavior": [[96, "pydicom-config-future-behavior"]], "pydicom.data.get_charset_files": [[104, "pydicom-data-get-charset-files"]], "pydicom.config.show_file_meta": [[100, "pydicom-config-show-file-meta"]], "pydicom.config.pixel_data_handlers": [[97, "pydicom-config-pixel-data-handlers"]], "Core elements in pydicom": [[42, "core-elements-in-pydicom"]], "Dataset": [[42, "dataset"]], "DataElement": [[42, "dataelement"]], "Tag": [[42, "tag"]], "Sequence": [[42, "sequence"]], "JPEG-LS Encoding": [[36, "jpeg-ls-encoding"]], "Valid Image Pixel Parameters": [[36, "valid-image-pixel-parameters"], [37, "valid-image-pixel-parameters"]], "Pixel Representation": [[36, "pixel-representation"]], "Photometric Interpretation": [[36, "photometric-interpretation"]], "Planar Configuration": [[36, "planar-configuration"]], "Examples": [[36, "examples"], [41, "examples"], [37, "examples"]], "JPEG-LS Lossless": [[36, "jpeg-ls-lossless"]], "JPEG-LS Near-lossless": [[36, "jpeg-ls-near-lossless"]], "Available Plugins": [[36, "available-plugins"], [37, "available-plugins"]], "Private Data Elements": [[47, "private-data-elements"]], "Introduction": [[47, "introduction"], [43, "introduction"], [44, "introduction"], [27, "introduction"], [26, "introduction"], [53, "introduction"], [51, "introduction"], [52, "introduction"], [54, "introduction"], [50, "introduction"], [566, "introduction"]], "Displaying Private Data Elements in pydicom": [[47, "displaying-private-data-elements-in-pydicom"]], "Setting Private Data Elements with pydicom": [[47, "setting-private-data-elements-with-pydicom"]], "Removing All Private Data Elements": [[47, "removing-all-private-data-elements"]], "Adding new entries to the DICOM dictionary": [[47, "adding-new-entries-to-the-dicom-dictionary"]], "Best Practices": [[43, "best-practices"]], "Enforcing Valid DICOM": [[43, "enforcing-valid-dicom"]], "Future-proofing your code": [[43, "future-proofing-your-code"]], "Limiting the pydicom major version in your package": [[43, "limiting-the-pydicom-major-version-in-your-package"]], "Handling of compressed pixel data": [[46, "handling-of-compressed-pixel-data"]], "Preconditions": [[46, "preconditions"]], "Supported Transfer Syntaxes": [[46, "supported-transfer-syntaxes"], [45, "supported-transfer-syntaxes"]], "Usage": [[46, "usage"], [69, "usage"]], "Guides": [[39, "guides"]], "pydicom documentation": [[41, "pydicom-documentation"]], "Getting Started": [[41, "getting-started"]], "User Guide": [[41, "user-guide"]], "API Reference": [[41, "api-reference"], [527, "api-reference"]], "Writing documentation": [[40, "writing-documentation"]], "Types of documentation": [[40, "types-of-documentation"]], "General style guidelines": [[40, "general-style-guidelines"]], "Guidelines for reStructuredText": [[40, "guidelines-for-restructuredtext"]], "Compressing Pixel Data": [[45, "compressing-pixel-data"], [566, "compressing-pixel-data"]], "Compressing using third-party packages": [[45, "compressing-using-third-party-packages"]], "Compressing using pydicom": [[45, "compressing-using-pydicom"], [566, "compressing-using-pydicom"]], "Compressing with Dataset.compress()": [[45, "compressing-with-dataset-compress"]], "Introduction to pydicom": [[44, "introduction-to-pydicom"]], "License": [[44, "license"]], "Installing": [[44, "installing"]], "Using pydicom": [[44, "using-pydicom"]], "Support": [[44, "support"]], "Next Steps": [[44, "next-steps"]], "RLE Lossless Encoding": [[37, "rle-lossless-encoding"]], "Glossary": [[38, "glossary"]], "File Meta Information": [[38, "file-meta-information"]], "Image Pixel Module": [[38, "image-pixel-module"]], "Installing the pydicom CLI": [[27, "installing-the-pydicom-cli"], [26, "installing-the-pydicom-cli"]], "Combining with other CLIs": [[27, "combining-with-other-clis"], [26, "combining-with-other-clis"]], "Pixel Data Decoding": [[31, "pixel-data-decoding"], [530, "pixel-data-decoding"]], "Pixel Data Decoder Options": [[29, "pixel-data-decoder-options"]], "Image Pixel Options": [[29, "image-pixel-options"]], "Image Processing Options": [[29, "image-processing-options"]], "Miscellaneous Options": [[29, "miscellaneous-options"]], "Decoding Plugin Options": [[29, "decoding-plugin-options"]], "RLE Lossless": [[29, "rle-lossless"]], "Element VRs and Python types": [[32, "element-vrs-and-python-types"]], "Extending the CLI": [[25, "extending-the-cli"], [26, "extending-the-cli"]], "Pixel Data Encoding": [[35, "pixel-data-encoding"], [530, "pixel-data-encoding"]], "Pixel Data Encoder Plugins": [[34, "pixel-data-encoder-plugins"]], "Plugin Requirements": [[34, "plugin-requirements"], [30, "plugin-requirements"]], "Adding Plugins to an Encoder": [[34, "adding-plugins-to-an-encoder"]], "Encoder Plugins Options": [[33, "encoder-plugins-options"]], "pydicom": [[33, "pydicom"]], "gdcm": [[33, "gdcm"]], "pylibjpeg": [[33, "pylibjpeg"]], "pyjpegls": [[33, "pyjpegls"]], "pydicom show command": [[28, "pydicom-show-command"], [26, "pydicom-show-command"]], "Pixel Data Decoder Plugins": [[30, "pixel-data-decoder-plugins"]], "Adding Plugins to a Decoder": [[30, "adding-plugins-to-a-decoder"]], "Command-line Interface Guide": [[26, "command-line-interface-guide"]], "pydicom codify command": [[26, "pydicom-codify-command"], [24, "pydicom-codify-command"]], "A simple example": [[26, "a-simple-example"], [24, "a-simple-example"]], "Command options": [[26, "command-options"], [24, "command-options"]], "Codifying a part of a DICOM file": [[26, "codifying-a-part-of-a-dicom-file"], [24, "codifying-a-part-of-a-dicom-file"]], "pydicom.datadict.add_dict_entries": [[108, "pydicom-datadict-add-dict-entries"]], "pydicom.datadict.dictionary_VM": [[112, "pydicom-datadict-dictionary-vm"]], "pydicom.datadict.dictionary_description": [[114, "pydicom-datadict-dictionary-description"]], "pydicom.datadict.dictionary_keyword": [[117, "pydicom-datadict-dictionary-keyword"]], "pydicom.datadict.dictionary_has_tag": [[115, "pydicom-datadict-dictionary-has-tag"]], "pydicom.datadict.add_private_dict_entries": [[110, "pydicom-datadict-add-private-dict-entries"]], "pydicom.datadict.add_dict_entry": [[109, "pydicom-datadict-add-dict-entry"]], "pydicom.datadict.dictionary_is_retired": [[116, "pydicom-datadict-dictionary-is-retired"]], "pydicom.datadict.get_entry": [[118, "pydicom-datadict-get-entry"]], "pydicom.datadict.dictionary_VR": [[113, "pydicom-datadict-dictionary-vr"]], "pydicom.datadict.get_private_entry": [[119, "pydicom-datadict-get-private-entry"]], "pydicom.datadict.add_private_dict_entry": [[111, "pydicom-datadict-add-private-dict-entry"]], "Reading and writing DICOM files": [[49, "reading-and-writing-dicom-files"]], "File Reading/Parsing": [[49, "file-reading-parsing"]], "File Writing": [[49, "file-writing"]], "Working with Waveform Data": [[53, "working-with-waveform-data"]], "Dataset.waveform_array()": [[53, "dataset-waveform-array"]], "Representation of Datasets (pydicom.dataset)": [[59, "representation-of-datasets-pydicom-dataset"]], "Working with Overlay Data": [[51, "working-with-overlay-data"]], "Dataset.overlay_array()": [[51, "dataset-overlay-array"]], "Data Dictionary Utilities (pydicom.datadict)": [[58, "data-dictionary-utilities-pydicom-datadict"]], "DICOM Data Dictionary": [[58, "dicom-data-dictionary"]], "Private Data Dictionary": [[58, "private-data-dictionary"]], "Working with Pixel Data": [[52, "working-with-pixel-data"]], "Dataset.pixel_array": [[52, "dataset-pixel-array"]], "Color space": [[52, "color-space"]], "Palette Color": [[52, "palette-color"]], "Modality LUT or Rescale Operation": [[52, "modality-lut-or-rescale-operation"]], "VOI LUT or Windowing Operation": [[52, "voi-lut-or-windowing-operation"]], "Writing DICOM Files": [[54, "writing-dicom-files"]], "Using Codify": [[54, "using-codify"]], "Writing a file from Scratch": [[54, "writing-a-file-from-scratch"]], "pydicom User Guide": [[48, "pydicom-user-guide"]], "Getting Included Datasets (pydicom.data)": [[57, "getting-included-datasets-pydicom-data"]], "Configuration Options (pydicom.config)": [[56, "configuration-options-pydicom-config"]], "Viewing Images": [[50, "viewing-images"]], "Using pydicom with matplotlib": [[50, "using-pydicom-with-matplotlib"]], "Using pydicom with Tkinter": [[50, "using-pydicom-with-tkinter"]], "Using pydicom with Python Imaging Library (PIL)": [[50, "using-pydicom-with-python-imaging-library-pil"]], "Using pydicom with wxPython": [[50, "using-pydicom-with-wxpython"]], "Character Encoding and Decoding (pydicom.charset)": [[55, "character-encoding-and-decoding-pydicom-charset"]], "Specialized Element Value Representation (pydicom.valuerep)": [[65, "specialized-element-value-representation-pydicom-valuerep"]], "Element Value Decoding (pydicom.values)": [[66, "element-value-decoding-pydicom-values"]], "IO Base Classes (pydicom.filebase)": [[71, "io-base-classes-pydicom-filebase"]], "Example Datasets (pydicom.examples)": [[69, "example-datasets-pydicom-examples"]], "Exceptions (pydicom.errors)": [[68, "exceptions-pydicom-errors"]], "Dataset IO": [[70, "dataset-io"]], "Representation of Data Elements": [[60, "representation-of-data-elements"]], "Data Elements (pydicom.dataelem)": [[61, "data-elements-pydicom-dataelem"]], "Bulk Data Encapsulation Utilities (pydicom.encaps)": [[67, "bulk-data-encapsulation-utilities-pydicom-encaps"]], "Parsing Encapsulated Data": [[67, "parsing-encapsulated-data"]], "Creating Encapsulated Data": [[67, "creating-encapsulated-data"]], "Element Tags (pydicom.tag)": [[64, "element-tags-pydicom-tag"]], "Sequence Element Value Representation (pydicom.sequence)": [[63, "sequence-element-value-representation-pydicom-sequence"]], "Element Multi-value Representation (pydicom.multival)": [[62, "element-multi-value-representation-pydicom-multival"]], "pydicom.config.DS_numpy": [[82, "pydicom-config-ds-numpy"]], "Dataset Writing (pydicom.filewriter)": [[74, "dataset-writing-pydicom-filewriter"]], "Dataset Reading (pydicom.filereader)": [[72, "dataset-reading-pydicom-filereader"]], "pydicom.charset.encode_string": [[79, "pydicom-charset-encode-string"]], "DICOM File-sets (pydicom.fileset)": [[75, "dicom-file-sets-pydicom-fileset"]], "pydicom.charset.decode_element": [[78, "pydicom-charset-decode-element"]], "pydicom.charset.decode_bytes": [[77, "pydicom-charset-decode-bytes"]], "pydicom.charset.convert_encodings": [[76, "pydicom-charset-convert-encodings"]], "IO Utilities (pydicom.fileutil)": [[73, "io-utilities-pydicom-fileutil"]], "pydicom.config.APPLY_J2K_CORRECTIONS": [[80, "pydicom-config-apply-j2k-corrections"]], "pydicom.config.IGNORE": [[83, "pydicom-config-ignore"]], "pydicom.config.DS_decimal": [[81, "pydicom-config-ds-decimal"]], "pydicom.filebase.DicomBytesIO": [[155, "pydicom-filebase-dicombytesio"]], "pydicom.encaps.parse_basic_offsets": [[151, "pydicom-encaps-parse-basic-offsets"]], "pydicom.encaps.itemize_frame": [[150, "pydicom-encaps-itemize-frame"]], "pydicom.errors.InvalidDicomError": [[154, "pydicom-errors-invaliddicomerror"]], "pydicom.encaps.generate_pixel_data_fragment": [[145, "pydicom-encaps-generate-pixel-data-fragment"]], "pydicom.encaps.read_item": [[153, "pydicom-encaps-read-item"]], "pydicom.encaps.itemize_fragment": [[149, "pydicom-encaps-itemize-fragment"]], "pydicom.encaps.get_frame": [[147, "pydicom-encaps-get-frame"]], "pydicom.encaps.generate_pixel_data_frame": [[146, "pydicom-encaps-generate-pixel-data-frame"]], "pydicom.encaps.get_frame_offsets": [[148, "pydicom-encaps-get-frame-offsets"]], "pydicom.encaps.generate_pixel_data": [[144, "pydicom-encaps-generate-pixel-data"]], "pydicom.encaps.parse_fragments": [[152, "pydicom-encaps-parse-fragments"]], "pydicom.filereader.read_file_meta_info": [[164, "pydicom-filereader-read-file-meta-info"]], "pydicom.filebase.DicomFileLike": [[157, "pydicom-filebase-dicomfilelike"]], "pydicom.filereader.dcmread": [[161, "pydicom-filereader-dcmread"]], "pydicom.filebase.DicomIO": [[158, "pydicom-filebase-dicomio"]], "pydicom.filereader.data_element_offset_to_value": [[160, "pydicom-filereader-data-element-offset-to-value"]], "pydicom.filebase.DicomFile": [[156, "pydicom-filebase-dicomfile"]], "pydicom.filereader.read_sequence": [[167, "pydicom-filereader-read-sequence"]], "pydicom.filereader.read_deferred_data_element": [[163, "pydicom-filereader-read-deferred-data-element"]], "pydicom.filereader.read_partial": [[165, "pydicom-filereader-read-partial"]], "pydicom.filereader.data_element_generator": [[159, "pydicom-filereader-data-element-generator"]], "pydicom.filereader.read_dataset": [[162, "pydicom-filereader-read-dataset"]], "pydicom.filereader.read_preamble": [[166, "pydicom-filereader-read-preamble"]], "pydicom.fileutil.find_bytes": [[176, "pydicom-fileutil-find-bytes"]], "pydicom.fileset.FileInstance": [[170, "pydicom-fileset-fileinstance"]], "pydicom.fileutil.absorb_delimiter_item": [[175, "pydicom-fileutil-absorb-delimiter-item"]], "pydicom.fileset.is_conformant_file_id": [[174, "pydicom-fileset-is-conformant-file-id"]], "pydicom.fileutil.find_delimiter": [[177, "pydicom-fileutil-find-delimiter"]], "pydicom.fileutil.length_of_undefined_length": [[178, "pydicom-fileutil-length-of-undefined-length"]], "pydicom.fileset.DIRECTORY_RECORDERS": [[169, "pydicom-fileset-directory-recorders"]], "pydicom.fileset.RecordNode": [[172, "pydicom-fileset-recordnode"]], "pydicom.fileset.FileSet": [[171, "pydicom-fileset-fileset"]], "pydicom.fileset.generate_filename": [[173, "pydicom-fileset-generate-filename"]], "pydicom.fileutil.read_undefined_length_value": [[179, "pydicom-fileutil-read-undefined-length-value"]], "pydicom.filereader.read_sequence_item": [[168, "pydicom-filereader-read-sequence-item"]], "pydicom.filewriter.dcmwrite": [[182, "pydicom-filewriter-dcmwrite"]], "pydicom.filewriter.write_UI": [[191, "pydicom-filewriter-write-ui"]], "pydicom.filewriter.write_PN": [[189, "pydicom-filewriter-write-pn"]], "pydicom.filewriter.write_DA": [[185, "pydicom-filewriter-write-da"]], "pydicom.filewriter.write_TM": [[190, "pydicom-filewriter-write-tm"]], "pydicom.filewriter.write_ATvalue": [[184, "pydicom-filewriter-write-atvalue"]], "pydicom.filewriter.write_DT": [[186, "pydicom-filewriter-write-dt"]], "pydicom.filewriter.correct_ambiguous_vr_element": [[181, "pydicom-filewriter-correct-ambiguous-vr-element"]], "pydicom.filewriter.write_OBvalue": [[187, "pydicom-filewriter-write-obvalue"]], "pydicom.filewriter.write_OWvalue": [[188, "pydicom-filewriter-write-owvalue"]], "pydicom.filewriter.correct_ambiguous_vr": [[180, "pydicom-filewriter-correct-ambiguous-vr"]], "pydicom.filewriter.multi_string": [[183, "pydicom-filewriter-multi-string"]], "pydicom.filewriter.write_number_string": [[196, "pydicom-filewriter-write-number-string"]], "pydicom.filewriter.write_data_element": [[193, "pydicom-filewriter-write-data-element"]], "pydicom.misc.size_in_bytes": [[203, "pydicom-misc-size-in-bytes"]], "pydicom.misc.is_dicom": [[202, "pydicom-misc-is-dicom"]], "pydicom.filewriter.write_file_meta_info": [[195, "pydicom-filewriter-write-file-meta-info"]], "pydicom.filewriter.write_UN": [[192, "pydicom-filewriter-write-un"]], "pydicom.filewriter.write_dataset": [[194, "pydicom-filewriter-write-dataset"]], "pydicom.filewriter.write_sequence": [[198, "pydicom-filewriter-write-sequence"]], "pydicom.filewriter.write_text": [[201, "pydicom-filewriter-write-text"]], "pydicom.filewriter.write_string": [[200, "pydicom-filewriter-write-string"]], "pydicom.filewriter.write_sequence_item": [[199, "pydicom-filewriter-write-sequence-item"]], "pydicom.filewriter.write_numbers": [[197, "pydicom-filewriter-write-numbers"]], "pydicom.dataelem.DataElement": [[128, "pydicom-dataelem-dataelement"]], "pydicom.datadict.private_dictionary_description": [[124, "pydicom-datadict-private-dictionary-description"]], "pydicom.dataset.Dataset": [[131, "pydicom-dataset-dataset"]], "pydicom.datadict.repeater_has_tag": [[126, "pydicom-datadict-repeater-has-tag"]], "pydicom.datadict.private_dictionary_VR": [[123, "pydicom-datadict-private-dictionary-vr"]], "pydicom.datadict.keyword_for_tag": [[120, "pydicom-datadict-keyword-for-tag"]], "pydicom.datadict.mask_match": [[121, "pydicom-datadict-mask-match"]], "pydicom.datadict.private_dictionary_VM": [[122, "pydicom-datadict-private-dictionary-vm"]], "pydicom.datadict.repeater_has_keyword": [[125, "pydicom-datadict-repeater-has-keyword"]], "pydicom.datadict.tag_for_keyword": [[127, "pydicom-datadict-tag-for-keyword"]], "pydicom.dataelem.DataElement_from_raw": [[129, "pydicom-dataelem-dataelement-from-raw"]], "pydicom.dataelem.RawDataElement": [[130, "pydicom-dataelem-rawdataelement"]], "pydicom.pixel_data_handlers.apply_modality_lut": [[207, "pydicom-pixel-data-handlers-apply-modality-lut"]], "pydicom.pixel_data_handlers.apply_voi": [[209, "pydicom-pixel-data-handlers-apply-voi"]], "pydicom.pixel_data_handlers.convert_color_space": [[212, "pydicom-pixel-data-handlers-convert-color-space"]], "pydicom.pixel_data_handlers.gdcm_handler": [[213, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "pydicom.overlays.numpy_handler": [[205, "module-pydicom.overlays.numpy_handler"]], "pydicom.pixel_data_handlers.apply_color_lut": [[206, "pydicom-pixel-data-handlers-apply-color-lut"]], "pydicom.pixel_data_handlers.apply_rescale": [[208, "pydicom-pixel-data-handlers-apply-rescale"]], "pydicom.multival.MultiValue": [[204, "pydicom-multival-multivalue"]], "pydicom.pixel_data_handlers.apply_voi_lut": [[210, "pydicom-pixel-data-handlers-apply-voi-lut"]], "pydicom.pixel_data_handlers.numpy_handler": [[215, "module-pydicom.pixel_data_handlers.numpy_handler"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[214, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "pydicom.pixel_data_handlers.apply_windowing": [[211, "pydicom-pixel-data-handlers-apply-windowing"]], "pydicom.pixels.decoders.base.JPEGLSLosslessDecoder": [[234, "pydicom-pixels-decoders-base-jpeglslosslessdecoder"]], "pydicom.pixels.encoders.base.EncodeRunner": [[239, "pydicom-pixels-encoders-base-encoderunner"]], "pydicom.pixels.decoders.base.JPEG2000Decoder": [[230, "pydicom-pixels-decoders-base-jpeg2000decoder"]], "pydicom.pixels.decoders.base.JPEGLSNearLosslessDecoder": [[235, "pydicom-pixels-decoders-base-jpeglsnearlosslessdecoder"]], "pydicom.pixels.decoders.base.HTJ2KLosslessRPCLDecoder": [[228, "pydicom-pixels-decoders-base-htj2klosslessrpcldecoder"]], "pydicom.pixels.decoders.base.RLELosslessDecoder": [[238, "pydicom-pixels-decoders-base-rlelosslessdecoder"]], "pydicom.pixels.decoders.base.JPEGBaseline8BitDecoder": [[232, "pydicom-pixels-decoders-base-jpegbaseline8bitdecoder"]], "pydicom.pixels.decoders.base.JPEGLosslessDecoder": [[236, "pydicom-pixels-decoders-base-jpeglosslessdecoder"]], "pydicom.pixels.decoders.base.JPEGLosslessSV1Decoder": [[237, "pydicom-pixels-decoders-base-jpeglosslesssv1decoder"]], "pydicom.pixels.decoders.base.JPEG2000LosslessDecoder": [[231, "pydicom-pixels-decoders-base-jpeg2000losslessdecoder"]], "pydicom.pixels.decoders.base.JPEGExtended12BitDecoder": [[233, "pydicom-pixels-decoders-base-jpegextended12bitdecoder"]], "pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder": [[229, "pydicom-pixels-decoders-base-implicitvrlittleendiandecoder"]], "pydicom.pixels.encoders.base.JPEGLSLosslessEncoder": [[241, "pydicom-pixels-encoders-base-jpeglslosslessencoder"]], "pydicom.pixels.encoders.base.Encoder": [[240, "pydicom-pixels-encoders-base-encoder"]], "pydicom.pixels.pixel_array": [[247, "pydicom-pixels-pixel-array"]], "pydicom.pixels.iter_pixels": [[246, "pydicom-pixels-iter-pixels"]], "pydicom.pixels.get_encoder": [[245, "pydicom-pixels-get-encoder"]], "pydicom.pixels.get_decoder": [[244, "pydicom-pixels-get-decoder"]], "pydicom.tag.Tag": [[250, "pydicom-tag-tag"]], "pydicom.tag.TupleTag": [[251, "pydicom-tag-tupletag"]], "pydicom.tag.BaseTag": [[249, "pydicom-tag-basetag"]], "pydicom.sequence.Sequence": [[248, "pydicom-sequence-sequence"]], "pydicom.pixels.encoders.base.JPEGLSNearLosslessEncoder": [[242, "pydicom-pixels-encoders-base-jpeglsnearlosslessencoder"]], "pydicom.pixels.encoders.base.RLELosslessEncoder": [[243, "pydicom-pixels-encoders-base-rlelosslessencoder"]], "pydicom.uid.BasicTextSRStorage": [[260, "pydicom-uid-basictextsrstorage"]], "pydicom.uid.BasicVoiceAudioWaveformStorage": [[261, "pydicom-uid-basicvoiceaudiowaveformstorage"]], "pydicom.uid.AmbulatoryECGWaveformStorage": [[256, "pydicom-uid-ambulatoryecgwaveformstorage"]], "pydicom.uid.BlendingSoftcopyPresentationStateStorage": [[262, "pydicom-uid-blendingsoftcopypresentationstatestorage"]], "pydicom.uid.AllTransferSyntaxes": [[255, "pydicom-uid-alltransfersyntaxes"]], "pydicom.uid.AutorefractionMeasurementsStorage": [[258, "pydicom-uid-autorefractionmeasurementsstorage"]], "pydicom.uid.BodyPositionWaveformStorage": [[263, "pydicom-uid-bodypositionwaveformstorage"]], "pydicom.uid.ArterialPulseWaveformStorage": [[257, "pydicom-uid-arterialpulsewaveformstorage"]], "pydicom.tag.tag_in_exception": [[252, "pydicom-tag-tag-in-exception"]], "pydicom.uid.BasicStructuredDisplayStorage": [[259, "pydicom-uid-basicstructureddisplaystorage"]], "pydicom.uid.AdvancedBlendingPresentationStateStorage": [[254, "pydicom-uid-advancedblendingpresentationstatestorage"]], "pydicom.uid.AcquisitionContextSRStorage": [[253, "pydicom-uid-acquisitioncontextsrstorage"]], "pydicom.uid.BreastTomosynthesisImageStorage": [[266, "pydicom-uid-breasttomosynthesisimagestorage"]], "pydicom.uid.CArmPhotonElectronRadiationRecordStorage": [[267, "pydicom-uid-carmphotonelectronradiationrecordstorage"]], "pydicom.uid.CardiacElectrophysiologyWaveformStorage": [[272, "pydicom-uid-cardiacelectrophysiologywaveformstorage"]], "pydicom.uid.CTPerformedProcedureProtocolStorage": [[271, "pydicom-uid-ctperformedprocedureprotocolstorage"]], "pydicom.uid.ChestCADSRStorage": [[273, "pydicom-uid-chestcadsrstorage"]], "pydicom.uid.ColonCADSRStorage": [[274, "pydicom-uid-coloncadsrstorage"]], "pydicom.uid.CArmPhotonElectronRadiationStorage": [[268, "pydicom-uid-carmphotonelectronradiationstorage"]], "pydicom.uid.CTImageStorage": [[270, "pydicom-uid-ctimagestorage"]], "pydicom.uid.ColorPaletteStorage": [[275, "pydicom-uid-colorpalettestorage"]], "pydicom.uid.BreastProjectionXRayImageStorageForPresentation": [[264, "pydicom-uid-breastprojectionxrayimagestorageforpresentation"]], "pydicom.uid.CTDefinedProcedureProtocolStorage": [[269, "pydicom-uid-ctdefinedprocedureprotocolstorage"]], "pydicom.uid.BreastProjectionXRayImageStorageForProcessing": [[265, "pydicom-uid-breastprojectionxrayimagestorageforprocessing"]], "pydicom.pixel_data_handlers.rle_handler": [[218, "module-pydicom.pixel_data_handlers.rle_handler"]], "pydicom.pixels.decoders.base.Decoder": [[222, "pydicom-pixels-decoders-base-decoder"]], "pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder": [[224, "pydicom-pixels-decoders-base-explicitvrbigendiandecoder"]], "pydicom.pixels.decoders.base.HTJ2KDecoder": [[226, "pydicom-pixels-decoders-base-htj2kdecoder"]], "pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder": [[223, "pydicom-pixels-decoders-base-deflatedexplicitvrlittleendiandecoder"]], "pydicom.pixels.decoders.base.DecodeRunner": [[221, "pydicom-pixels-decoders-base-decoderunner"]], "pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder": [[225, "pydicom-pixels-decoders-base-explicitvrlittleendiandecoder"]], "pydicom.pixel_data_handlers.util": [[219, "module-pydicom.pixel_data_handlers.util"]], "pydicom.pixels.decoders.base.HTJ2KLosslessDecoder": [[227, "pydicom-pixels-decoders-base-htj2klosslessdecoder"]], "pydicom.pixels.as_pixel_options": [[220, "pydicom-pixels-as-pixel-options"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[217, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "pydicom.pixel_data_handlers.pillow_handler": [[216, "module-pydicom.pixel_data_handlers.pillow_handler"]], "pydicom.uid.ConfocalMicroscopyImageStorage": [[281, "pydicom-uid-confocalmicroscopyimagestorage"]], "pydicom.uid.Comprehensive3DSRStorage": [[278, "pydicom-uid-comprehensive3dsrstorage"]], "pydicom.uid.DICOS2DAITStorage": [[285, "pydicom-uid-dicos2daitstorage"]], "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage": [[277, "pydicom-uid-compositingplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.DICOS3DAITStorage": [[286, "pydicom-uid-dicos3daitstorage"]], "pydicom.uid.DICOSCTImageStorage": [[287, "pydicom-uid-dicosctimagestorage"]], "pydicom.uid.CornealTopographyMapStorage": [[284, "pydicom-uid-cornealtopographymapstorage"]], "pydicom.uid.ComputedRadiographyImageStorage": [[280, "pydicom-uid-computedradiographyimagestorage"]], "pydicom.uid.ColorSoftcopyPresentationStateStorage": [[276, "pydicom-uid-colorsoftcopypresentationstatestorage"]], "pydicom.uid.ContentAssessmentResultsStorage": [[283, "pydicom-uid-contentassessmentresultsstorage"]], "pydicom.uid.ComprehensiveSRStorage": [[279, "pydicom-uid-comprehensivesrstorage"]], "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage": [[282, "pydicom-uid-confocalmicroscopytiledpyramidalimagestorage"]], "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation": [[297, "pydicom-uid-digitalmammographyxrayimagestorageforpresentation"]], "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation": [[288, "pydicom-uid-dicosdigitalxrayimagestorageforpresentation"]], "pydicom.uid.DermoscopicPhotographyImageStorage": [[294, "pydicom-uid-dermoscopicphotographyimagestorage"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing": [[296, "pydicom-uid-digitalintraoralxrayimagestorageforprocessing"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation": [[295, "pydicom-uid-digitalintraoralxrayimagestorageforpresentation"]], "pydicom.uid.DeflatedExplicitVRLittleEndian": [[292, "pydicom-uid-deflatedexplicitvrlittleendian"]], "pydicom.uid.DICOSThreatDetectionReportStorage": [[291, "pydicom-uid-dicosthreatdetectionreportstorage"]], "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing": [[289, "pydicom-uid-dicosdigitalxrayimagestorageforprocessing"]], "pydicom.uid.DICOSQuadrupoleResonanceStorage": [[290, "pydicom-uid-dicosquadrupoleresonancestorage"]], "pydicom.uid.DigitalXRayImageStorageForPresentation": [[299, "pydicom-uid-digitalxrayimagestorageforpresentation"]], "pydicom.uid.DeformableSpatialRegistrationStorage": [[293, "pydicom-uid-deformablespatialregistrationstorage"]], "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing": [[298, "pydicom-uid-digitalmammographyxrayimagestorageforprocessing"]], "pydicom.uid.EddyCurrentMultiFrameImageStorage": [[302, "pydicom-uid-eddycurrentmultiframeimagestorage"]], "pydicom.uid.EddyCurrentImageStorage": [[301, "pydicom-uid-eddycurrentimagestorage"]], "pydicom.uid.EncapsulatedCDAStorage": [[305, "pydicom-uid-encapsulatedcdastorage"]], "pydicom.uid.ElectrooculogramWaveformStorage": [[304, "pydicom-uid-electrooculogramwaveformstorage"]], "pydicom.uid.DigitalXRayImageStorageForProcessing": [[300, "pydicom-uid-digitalxrayimagestorageforprocessing"]], "pydicom.uid.ElectromyogramWaveformStorage": [[303, "pydicom-uid-electromyogramwaveformstorage"]], "pydicom.uid.EnhancedContinuousRTImageStorage": [[311, "pydicom-uid-enhancedcontinuousrtimagestorage"]], "pydicom.uid.EnhancedCTImageStorage": [[310, "pydicom-uid-enhancedctimagestorage"]], "pydicom.uid.EncapsulatedPDFStorage": [[308, "pydicom-uid-encapsulatedpdfstorage"]], "pydicom.uid.EncapsulatedMTLStorage": [[306, "pydicom-uid-encapsulatedmtlstorage"]], "pydicom.uid.EncapsulatedOBJStorage": [[307, "pydicom-uid-encapsulatedobjstorage"]], "pydicom.uid.EncapsulatedSTLStorage": [[309, "pydicom-uid-encapsulatedstlstorage"]], "pydicom.uid.EnhancedXRayRadiationDoseSRStorage": [[320, "pydicom-uid-enhancedxrayradiationdosesrstorage"]], "pydicom.uid.EnhancedRTImageStorage": [[315, "pydicom-uid-enhancedrtimagestorage"]], "pydicom.uid.EnhancedUSVolumeStorage": [[317, "pydicom-uid-enhancedusvolumestorage"]], "pydicom.uid.ExplicitVRLittleEndian": [[322, "pydicom-uid-explicitvrlittleendian"]], "pydicom.uid.EnhancedXRFImageStorage": [[319, "pydicom-uid-enhancedxrfimagestorage"]], "pydicom.uid.EnhancedMRImageStorage": [[313, "pydicom-uid-enhancedmrimagestorage"]], "pydicom.uid.ExplicitVRBigEndian": [[321, "pydicom-uid-explicitvrbigendian"]], "pydicom.uid.EnhancedXAImageStorage": [[318, "pydicom-uid-enhancedxaimagestorage"]], "pydicom.uid.ExtensibleSRStorage": [[323, "pydicom-uid-extensiblesrstorage"]], "pydicom.uid.EnhancedPETImageStorage": [[314, "pydicom-uid-enhancedpetimagestorage"]], "pydicom.uid.EnhancedMRColorImageStorage": [[312, "pydicom-uid-enhancedmrcolorimagestorage"]], "pydicom.uid.EnhancedSRStorage": [[316, "pydicom-uid-enhancedsrstorage"]], "pydicom.uid.HTJ2KLossless": [[333, "pydicom-uid-htj2klossless"]], "pydicom.uid.HangingProtocolStorage": [[335, "pydicom-uid-hangingprotocolstorage"]], "pydicom.uid.HTJ2K": [[332, "pydicom-uid-htj2k"]], "pydicom.uid.HTJ2KLosslessRPCL": [[334, "pydicom-uid-htj2klosslessrpcl"]], "pydicom.uid.HEVCMP51": [[331, "pydicom-uid-hevcmp51"]], "pydicom.uid.GeneralAudioWaveformStorage": [[325, "pydicom-uid-generalaudiowaveformstorage"]], "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage": [[328, "pydicom-uid-grayscaleplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage": [[329, "pydicom-uid-grayscalesoftcopypresentationstatestorage"]], "pydicom.uid.HEVCM10P51": [[330, "pydicom-uid-hevcm10p51"]], "pydicom.uid.GenericImplantTemplateStorage": [[327, "pydicom-uid-genericimplanttemplatestorage"]], "pydicom.uid.GeneralECGWaveformStorage": [[326, "pydicom-uid-generalecgwaveformstorage"]], "pydicom.uid.General32bitECGWaveformStorage": [[324, "pydicom-uid-general32bitecgwaveformstorage"]], "pydicom.uid.InventoryStorage": [[344, "pydicom-uid-inventorystorage"]], "pydicom.uid.ImplantTemplateGroupStorage": [[338, "pydicom-uid-implanttemplategroupstorage"]], "pydicom.uid.ImplantationPlanSRStorage": [[339, "pydicom-uid-implantationplansrstorage"]], "pydicom.uid.ImplicitVRLittleEndian": [[340, "pydicom-uid-implicitvrlittleendian"]], "pydicom.uid.JPEG2000": [[345, "pydicom-uid-jpeg2000"]], "pydicom.uid.JPEG2000Lossless": [[346, "pydicom-uid-jpeg2000lossless"]], "pydicom.uid.ImplantAssemblyTemplateStorage": [[337, "pydicom-uid-implantassemblytemplatestorage"]], "pydicom.uid.HemodynamicWaveformStorage": [[336, "pydicom-uid-hemodynamicwaveformstorage"]], "pydicom.uid.JPEG2000MC": [[347, "pydicom-uid-jpeg2000mc"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation": [[342, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforpresentation"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing": [[343, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforprocessing"]], "pydicom.uid.IntraocularLensCalculationsStorage": [[341, "pydicom-uid-intraocularlenscalculationsstorage"]], "pydicom.uid.JPIPHTJ2KReferencedDeflate": [[359, "pydicom-uid-jpiphtj2kreferenceddeflate"]], "pydicom.uid.JPEG2000MCLossless": [[348, "pydicom-uid-jpeg2000mclossless"]], "pydicom.uid.JPEG2000TransferSyntaxes": [[349, "pydicom-uid-jpeg2000transfersyntaxes"]], "pydicom.uid.JPEGBaseline8Bit": [[350, "pydicom-uid-jpegbaseline8bit"]], "pydicom.uid.JPEGLSTransferSyntaxes": [[354, "pydicom-uid-jpeglstransfersyntaxes"]], "pydicom.uid.JPIPHTJ2KReferenced": [[358, "pydicom-uid-jpiphtj2kreferenced"]], "pydicom.uid.JPEGLossless": [[355, "pydicom-uid-jpeglossless"]], "pydicom.uid.JPEGTransferSyntaxes": [[357, "pydicom-uid-jpegtransfersyntaxes"]], "pydicom.uid.JPEGLSNearLossless": [[353, "pydicom-uid-jpeglsnearlossless"]], "pydicom.uid.JPEGLosslessSV1": [[356, "pydicom-uid-jpeglosslesssv1"]], "pydicom.uid.JPEGLSLossless": [[352, "pydicom-uid-jpeglslossless"]], "pydicom.uid.JPEGExtended12Bit": [[351, "pydicom-uid-jpegextended12bit"]], "pydicom.uid.LegacyConvertedEnhancedCTImageStorage": [[362, "pydicom-uid-legacyconvertedenhancedctimagestorage"]], "pydicom.uid.MPEG2MPMLF": [[369, "pydicom-uid-mpeg2mpmlf"]], "pydicom.uid.KeyObjectSelectionDocumentStorage": [[361, "pydicom-uid-keyobjectselectiondocumentstorage"]], "pydicom.uid.MPEG2MPML": [[368, "pydicom-uid-mpeg2mpml"]], "pydicom.uid.LensometryMeasurementsStorage": [[365, "pydicom-uid-lensometrymeasurementsstorage"]], "pydicom.uid.KeratometryMeasurementsStorage": [[360, "pydicom-uid-keratometrymeasurementsstorage"]], "pydicom.uid.LegacyConvertedEnhancedPETImageStorage": [[364, "pydicom-uid-legacyconvertedenhancedpetimagestorage"]], "pydicom.uid.MPEG2MPHLF": [[367, "pydicom-uid-mpeg2mphlf"]], "pydicom.uid.LegacyConvertedEnhancedMRImageStorage": [[363, "pydicom-uid-legacyconvertedenhancedmrimagestorage"]], "pydicom.uid.MPEG4HP41": [[370, "pydicom-uid-mpeg4hp41"]], "pydicom.uid.MPEG4HP41BD": [[371, "pydicom-uid-mpeg4hp41bd"]], "pydicom.uid.MPEG2MPHL": [[366, "pydicom-uid-mpeg2mphl"]], "pydicom.encaps.encapsulate_extended": [[139, "pydicom-encaps-encapsulate-extended"]], "pydicom.dataset.PrivateBlock": [[134, "pydicom-dataset-privateblock"]], "pydicom.dataset.FileDataset": [[132, "pydicom-dataset-filedataset"]], "pydicom.encaps.defragment_data": [[137, "pydicom-encaps-defragment-data"]], "pydicom.encaps.generate_fragments": [[142, "pydicom-encaps-generate-fragments"]], "pydicom.dataset.FileMetaDataset": [[133, "pydicom-dataset-filemetadataset"]], "pydicom.encaps.encapsulate": [[138, "pydicom-encaps-encapsulate"]], "pydicom.dataset.validate_file_meta": [[135, "pydicom-dataset-validate-file-meta"]], "pydicom.encaps.generate_frames": [[143, "pydicom-encaps-generate-frames"]], "pydicom.encaps.fragment_frame": [[140, "pydicom-encaps-fragment-frame"]], "pydicom.encaps.generate_fragmented_frames": [[141, "pydicom-encaps-generate-fragmented-frames"]], "pydicom.encaps.decode_data_sequence": [[136, "pydicom-encaps-decode-data-sequence"]], "pydicom.uid.MPEG4HP42STEREO": [[378, "pydicom-uid-mpeg4hp42stereo"]], "pydicom.uid.MacularGridThicknessAndVolumeReportStorage": [[383, "pydicom-uid-maculargridthicknessandvolumereportstorage"]], "pydicom.uid.MPEG4HP422D": [[374, "pydicom-uid-mpeg4hp422d"]], "pydicom.uid.MPEG4HP423D": [[376, "pydicom-uid-mpeg4hp423d"]], "pydicom.uid.MPEG4HP41BDF": [[372, "pydicom-uid-mpeg4hp41bdf"]], "pydicom.uid.MPEG4HP422DF": [[375, "pydicom-uid-mpeg4hp422df"]], "pydicom.uid.MPEG4HP42STEREOF": [[379, "pydicom-uid-mpeg4hp42stereof"]], "pydicom.uid.MPEGTransferSyntaxes": [[380, "pydicom-uid-mpegtransfersyntaxes"]], "pydicom.uid.MRImageStorage": [[381, "pydicom-uid-mrimagestorage"]], "pydicom.uid.MPEG4HP423DF": [[377, "pydicom-uid-mpeg4hp423df"]], "pydicom.uid.MPEG4HP41F": [[373, "pydicom-uid-mpeg4hp41f"]], "pydicom.uid.MRSpectroscopyStorage": [[382, "pydicom-uid-mrspectroscopystorage"]], "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage": [[389, "pydicom-uid-multiframesinglebitsecondarycaptureimagestorage"]], "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage": [[392, "pydicom-uid-multiplevolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage": [[388, "pydicom-uid-multiframegrayscalewordsecondarycaptureimagestorage"]], "pydicom.uid.MediaStorageDirectoryStorage": [[385, "pydicom-uid-mediastoragedirectorystorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage": [[395, "pydicom-uid-ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage"]], "pydicom.uid.OphthalmicAxialMeasurementsStorage": [[394, "pydicom-uid-ophthalmicaxialmeasurementsstorage"]], "pydicom.uid.MammographyCADSRStorage": [[384, "pydicom-uid-mammographycadsrstorage"]], "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage": [[386, "pydicom-uid-microscopybulksimpleannotationsstorage"]], "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage": [[387, "pydicom-uid-multiframegrayscalebytesecondarycaptureimagestorage"]], "pydicom.uid.NuclearMedicineImageStorage": [[393, "pydicom-uid-nuclearmedicineimagestorage"]], "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage": [[390, "pydicom-uid-multiframetruecolorsecondarycaptureimagestorage"]], "pydicom.uid.MultichannelRespiratoryWaveformStorage": [[391, "pydicom-uid-multichannelrespiratorywaveformstorage"]], "pydicom.uid.OphthalmicPhotography16BitImageStorage": [[397, "pydicom-uid-ophthalmicphotography16bitimagestorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage": [[396, "pydicom-uid-ophthalmicopticalcoherencetomographyenfaceimagestorage"]], "pydicom.uid.PerformedImagingAgentAdministrationSRStorage": [[406, "pydicom-uid-performedimagingagentadministrationsrstorage"]], "pydicom.uid.ParametricMapStorage": [[404, "pydicom-uid-parametricmapstorage"]], "pydicom.uid.PhotoacousticImageStorage": [[407, "pydicom-uid-photoacousticimagestorage"]], "pydicom.uid.PatientRadiationDoseSRStorage": [[405, "pydicom-uid-patientradiationdosesrstorage"]], "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage": [[401, "pydicom-uid-ophthalmicvisualfieldstaticperimetrymeasurementsstorage"]], "pydicom.uid.PYDICOM_ROOT_UID": [[403, "pydicom-uid-pydicom-root-uid"]], "pydicom.uid.PYDICOM_IMPLEMENTATION_UID": [[402, "pydicom-uid-pydicom-implementation-uid"]], "pydicom.uid.OphthalmicTomographyImageStorage": [[400, "pydicom-uid-ophthalmictomographyimagestorage"]], "pydicom.uid.OphthalmicThicknessMapStorage": [[399, "pydicom-uid-ophthalmicthicknessmapstorage"]], "pydicom.uid.OphthalmicPhotography8BitImageStorage": [[398, "pydicom-uid-ophthalmicphotography8bitimagestorage"]], "pydicom.uid.RTBeamsTreatmentRecordStorage": [[419, "pydicom-uid-rtbeamstreatmentrecordstorage"]], "pydicom.uid.RE_VALID_UID": [[414, "pydicom-uid-re-valid-uid"]], "pydicom.uid.RTBeamsDeliveryInstructionStorage": [[418, "pydicom-uid-rtbeamsdeliveryinstructionstorage"]], "pydicom.uid.RLETransferSyntaxes": [[417, "pydicom-uid-rletransfersyntaxes"]], "pydicom.uid.RLELossless": [[416, "pydicom-uid-rlelossless"]], "pydicom.uid.PrivateTransferSyntaxes": [[410, "pydicom-uid-privatetransfersyntaxes"]], "pydicom.uid.RE_VALID_UID_PREFIX": [[415, "pydicom-uid-re-valid-uid-prefix"]], "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage": [[413, "pydicom-uid-pseudocolorsoftcopypresentationstatestorage"]], "pydicom.uid.ProcedureLogStorage": [[411, "pydicom-uid-procedurelogstorage"]], "pydicom.uid.PositronEmissionTomographyImageStorage": [[409, "pydicom-uid-positronemissiontomographyimagestorage"]], "pydicom.uid.ProtocolApprovalStorage": [[412, "pydicom-uid-protocolapprovalstorage"]], "pydicom.uid.PlannedImagingAgentAdministrationSRStorage": [[408, "pydicom-uid-plannedimagingagentadministrationsrstorage"]], "pydicom.uid.RTBrachyTreatmentRecordStorage": [[421, "pydicom-uid-rtbrachytreatmentrecordstorage"]], "pydicom.uid.RTRadiationRecordSetStorage": [[429, "pydicom-uid-rtradiationrecordsetstorage"]], "pydicom.uid.RTIonPlanStorage": [[425, "pydicom-uid-rtionplanstorage"]], "pydicom.uid.RTDoseStorage": [[422, "pydicom-uid-rtdosestorage"]], "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage": [[426, "pydicom-uid-rtpatientpositionacquisitioninstructionstorage"]], "pydicom.uid.RTPhysicianIntentStorage": [[427, "pydicom-uid-rtphysicianintentstorage"]], "pydicom.uid.RTPlanStorage": [[428, "pydicom-uid-rtplanstorage"]], "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage": [[420, "pydicom-uid-rtbrachyapplicationsetupdeliveryinstructionstorage"]], "pydicom.uid.RTRadiationSalvageRecordStorage": [[430, "pydicom-uid-rtradiationsalvagerecordstorage"]], "pydicom.uid.RTImageStorage": [[423, "pydicom-uid-rtimagestorage"]], "pydicom.uid.RTIonBeamsTreatmentRecordStorage": [[424, "pydicom-uid-rtionbeamstreatmentrecordstorage"]], "pydicom.uid.RTRadiationSetDeliveryInstructionStorage": [[431, "pydicom-uid-rtradiationsetdeliveryinstructionstorage"]], "Structured Reporting": [[567, "structured-reporting"]], "Waveforms": [[568, "waveforms"]], "Waveforms in DICOM": [[568, "waveforms-in-dicom"]], "Decoding Waveform Data": [[568, "decoding-waveform-data"]], "Encoding Waveform Data": [[568, "encoding-waveform-data"]], "Tutorials": [[564, "tutorials"]], "How to install pydicom": [[565, "how-to-install-pydicom"]], "Install the official release": [[565, "install-the-official-release"]], "Install using pip": [[565, "install-using-pip"]], "Install using conda": [[565, "install-using-conda"]], "Downloading example/test DICOM files": [[565, "downloading-example-test-dicom-files"]], "Install the optional libraries": [[565, "install-the-optional-libraries"]], "Installing Pillow": [[565, "installing-pillow"]], "Installing pyjpegls": [[565, "installing-pyjpegls"]], "Installing GDCM": [[565, "installing-gdcm"]], "Installing pylibjpeg": [[565, "installing-pylibjpeg"]], "Install the development version": [[565, "install-the-development-version"]], "Encapsulating data compressed by third-party packages": [[566, "encapsulating-data-compressed-by-third-party-packages"]], "Version 3.0.0": [[556, "version-3-0-0"], [535, "version-3-0-0"]], "Changes": [[556, "changes"], [555, "changes"], [553, "changes"], [554, "changes"], [547, "changes"], [549, "changes"], [551, "changes"], [546, "changes"], [548, "changes"], [535, "changes"], [535, "id1"], [535, "id5"], [535, "id8"], [535, "id13"], [535, "id18"], [535, "id21"], [535, "id22"], [535, "id25"]], "Removals": [[556, "removals"], [535, "removals"]], "Enhancements": [[556, "enhancements"], [555, "enhancements"], [553, "enhancements"], [554, "enhancements"], [545, "enhancements"], [547, "enhancements"], [550, "enhancements"], [543, "enhancements"], [542, "enhancements"], [551, "enhancements"], [546, "enhancements"], [548, "enhancements"], [535, "enhancements"], [535, "id2"], [535, "id6"], [535, "id9"], [535, "id12"], [535, "id15"], [535, "id20"], [535, "id23"], [535, "id26"], [535, "id28"], [535, "id31"], [535, "id33"]], "Fixes": [[556, "fixes"], [555, "fixes"], [553, "fixes"], [552, "fixes"], [554, "fixes"], [544, "fixes"], [545, "fixes"], [547, "fixes"], [550, "fixes"], [549, "fixes"], [551, "fixes"], [546, "fixes"], [548, "fixes"], [535, "fixes"], [535, "id3"], [535, "id7"], [535, "id10"], [535, "id11"], [535, "id14"], [535, "id16"], [535, "id17"], [535, "id19"], [535, "id24"], [535, "id27"], [535, "id29"], [535, "id30"]], "Deprecations": [[556, "deprecations"], [535, "deprecations"]], "Pydicom Internals": [[556, "pydicom-internals"], [555, "pydicom-internals"], [535, "pydicom-internals"], [535, "id4"]], "Version 2.4.0": [[555, "version-2-4-0"], [535, "version-2-4-0"]], "Introduction to JSON support": [[562, "introduction-to-json-support"]], "Converting a dataset into JSON format": [[562, "converting-a-dataset-into-json-format"]], "Creating a dataset from JSON": [[562, "creating-a-dataset-from-json"]], "Working with large binary data": [[562, "working-with-large-binary-data"]], "Version 2.2.0": [[553, "version-2-2-0"], [535, "version-2-2-0"]], "Contributing a documentation change": [[560, "contributing-a-documentation-change"]], "Download the documentation": [[560, "download-the-documentation"]], "Build and preview the documentation": [[560, "build-and-preview-the-documentation"]], "Create a new branch": [[560, "create-a-new-branch"], [559, "create-a-new-branch"]], "Make a change to the documentation": [[560, "make-a-change-to-the-documentation"]], "Commit your changes and make a pull request": [[560, "commit-your-changes-and-make-a-pull-request"], [559, "commit-your-changes-and-make-a-pull-request"]], "What happens next?": [[560, "what-happens-next"], [559, "what-happens-next"]], "Contributing to pydicom": [[558, "contributing-to-pydicom"]], "Version 2.1.1": [[552, "version-2-1-1"], [535, "version-2-1-1"]], "Dataset basics: read, access, modify, write": [[561, "dataset-basics-read-access-modify-write"]], "Getting the path to the example dataset": [[561, "getting-the-path-to-the-example-dataset"]], "Reading": [[561, "reading"]], "Viewing and accessing": [[561, "viewing-and-accessing"]], "Elements": [[561, "elements"]], "Sequences": [[561, "sequences"], [561, "id1"]], "file_meta": [[561, "file-meta"]], "Modifying": [[561, "modifying"]], "Modifying elements": [[561, "modifying-elements"]], "Adding elements": [[561, "adding-elements"]], "Any category": [[561, "any-category"]], "Standard elements": [[561, "standard-elements"]], "Deleting elements": [[561, "deleting-elements"]], "Writing": [[561, "writing"]], "Next steps": [[561, "next-steps"]], "DICOM File-sets and DICOMDIR": [[563, "dicom-file-sets-and-dicomdir"]], "The DICOM File-set": [[563, "the-dicom-file-set"]], "The DICOMDIR file": [[563, "the-dicomdir-file"]], "FileSet": [[563, "fileset"]], "Loading existing File-sets": [[563, "loading-existing-file-sets"]], "Creating a new File-set": [[563, "creating-a-new-file-set"]], "Modifying a File-set": [[563, "modifying-a-file-set"]], "FileSet and staging": [[563, "fileset-and-staging"]], "Adding SOP instances": [[563, "adding-sop-instances"]], "Removing instances": [[563, "removing-instances"]], "Applying the changes": [[563, "applying-the-changes"]], "Conclusion": [[563, "conclusion"]], "Contributing a source code change": [[559, "contributing-a-source-code-change"]], "Download the current source code": [[559, "download-the-current-source-code"]], "(Optional) Install required libraries": [[559, "optional-install-required-libraries"]], "Install pytest and run the test suite": [[559, "install-pytest-and-run-the-test-suite"]], "Write tests for your changes": [[559, "write-tests-for-your-changes"]], "Make a code change and document it": [[559, "make-a-code-change-and-document-it"]], "Preview your changes": [[559, "preview-your-changes"]], "Version 2.3.0": [[554, "version-2-3-0"], [535, "version-2-3-0"]], "Version 1.0.0": [[544, "version-1-0-0"], [535, "version-1-0-0"]], "Major changes": [[544, "major-changes"], [540, "major-changes"], [542, "major-changes"], [541, "major-changes"], [536, "major-changes"], [537, "major-changes"], [535, "major-changes"], [535, "id32"], [535, "id35"], [535, "id38"], [535, "id42"], [535, "id46"]], "Other enhancements": [[544, "other-enhancements"], [535, "other-enhancements"]], "Infrastructure": [[544, "infrastructure"], [535, "infrastructure"]], "Version 1.1.0": [[545, "version-1-1-0"], [535, "version-1-1-0"]], "Other": [[545, "other"], [540, "other"], [536, "other"], [539, "other"], [537, "other"], [535, "other"], [535, "id40"], [535, "id41"], [535, "id45"], [535, "id49"]], "Version 1.3.0": [[547, "version-1-3-0"], [535, "version-1-3-0"]], "Documentation": [[547, "documentation"], [535, "documentation"]], "Version 2.0.0": [[550, "version-2-0-0"], [535, "version-2-0-0"]], "Changelog": [[550, "changelog"], [535, "changelog"]], "Version 1.4.1": [[549, "version-1-4-1"], [535, "version-1-4-1"]], "Version 0.9.6": [[540, "version-0-9-6"], [535, "version-0-9-6"]], "Bug fixes": [[540, "bug-fixes"], [542, "bug-fixes"], [541, "bug-fixes"], [535, "bug-fixes"], [535, "id36"], [535, "id39"]], "Version 0.9.9": [[543, "version-0-9-9"], [535, "version-0-9-9"]], "Contrib file changes": [[543, "contrib-file-changes"], [542, "contrib-file-changes"], [535, "contrib-file-changes"], [535, "id34"]], "Other Contributors": [[543, "other-contributors"], [535, "other-contributors"]], "Version 0.9.8": [[542, "version-0-9-8"], [535, "version-0-9-8"]], "Version 0.9.7": [[541, "version-0-9-7"], [535, "version-0-9-7"]], "Other Enhancements": [[541, "other-enhancements"], [536, "other-enhancements"], [537, "other-enhancements"], [535, "id37"], [535, "id43"], [535, "id47"]], "Version 2.1.0": [[551, "version-2-1-0"], [535, "version-2-1-0"]], "Version 1.2.0": [[546, "version-1-2-0"], [535, "version-1-2-0"]], "Version 1.4.0": [[548, "version-1-4-0"], [535, "version-1-4-0"]], "Version 0.9.4": [[538, "version-0-9-4"], [535, "version-0-9-4"]], "Major changes/additions in this version": [[538, "major-changes-additions-in-this-version"], [535, "major-changes-additions-in-this-version"]], "Other changes and bug fixes": [[538, "other-changes-and-bug-fixes"], [535, "other-changes-and-bug-fixes"]], "Waveform Data Handlers (pydicom.waveforms)": [[534, "waveform-data-handlers-pydicom-waveforms"]], "Miscellaneous (pydicom.misc)": [[528, "miscellaneous-pydicom-misc"]], "Pixel Data Encoders (pydicom.pixels.encoders)": [[532, "pixel-data-encoders-pydicom-pixels-encoders"]], "Pixel Data Decoders (pydicom.pixels.decoders)": [[531, "pixel-data-decoders-pydicom-pixels-decoders"]], "Pixel Data (pydicom.pixels)": [[530, "pixel-data-pydicom-pixels"]], "Pixel Data Utilities": [[530, "pixel-data-utilities"], [525, "pixel-data-utilities"]], "Overlay Data Handling (pydicom.overlays)": [[529, "overlay-data-handling-pydicom-overlays"]], "Version 0.9.2": [[536, "version-0-9-2"], [535, "version-0-9-2"]], "Bug Fixes": [[536, "bug-fixes"], [537, "bug-fixes"], [535, "id44"], [535, "id48"]], "Version 0.9.5": [[539, "version-0-9-5"], [535, "version-0-9-5"]], "Major fixes in this release": [[539, "major-fixes-in-this-release"], [535, "major-fixes-in-this-release"]], "Other fixes in this release": [[539, "other-fixes-in-this-release"], [535, "other-fixes-in-this-release"]], "New \u2018Contrib\u2019 files": [[539, "new-contrib-files"], [535, "new-contrib-files"]], "UID Definitions and Utilities (pydicom.uid)": [[533, "uid-definitions-and-utilities-pydicom-uid"]], "Transfer Syntax UIDs": [[533, "transfer-syntax-uids"]], "Transfer Syntax Lists": [[533, "transfer-syntax-lists"]], "UID Utilities": [[533, "uid-utilities"]], "Storage SOP Class UIDs": [[533, "storage-sop-class-uids"]], "Version 0.9.3": [[537, "version-0-9-3"], [535, "version-0-9-3"]], "Release notes": [[535, "release-notes"]], "pydicom.values.convert_text": [[521, "pydicom-values-convert-text"]], "Bulk Data Handlers": [[525, "bulk-data-handlers"]], "pydicom.values.convert_value": [[522, "pydicom-values-convert-value"]], "Pixel Data Handlers (pydicom.pixel_data_handlers)": [[526, "pixel-data-handlers-pydicom-pixel-data-handlers"]], "pydicom.values.multi_string": [[523, "pydicom-values-multi-string"]], "pydicom.values.convert_UR_string": [[516, "pydicom-values-convert-ur-string"]], "pydicom.values.convert_string": [[519, "pydicom-values-convert-string"]], "pydicom.values.convert_single_string": [[518, "pydicom-values-convert-single-string"]], "pydicom.values.convert_tag": [[520, "pydicom-values-convert-tag"]], "pydicom.waveforms.numpy_handler": [[524, "module-pydicom.waveforms.numpy_handler"]], "pydicom.values.convert_numbers": [[517, "pydicom-values-convert-numbers"]], "pydicom.values.convert_SQ": [[512, "pydicom-values-convert-sq"]], "pydicom.values.convert_PN": [[511, "pydicom-values-convert-pn"]], "pydicom.values.convert_DT_string": [[507, "pydicom-values-convert-dt-string"]], "pydicom.values.convert_DA_string": [[505, "pydicom-values-convert-da-string"]], "pydicom.values.convert_UN": [[515, "pydicom-values-convert-un"]], "pydicom.values.convert_IS_string": [[508, "pydicom-values-convert-is-string"]], "pydicom.values.convert_TM_string": [[513, "pydicom-values-convert-tm-string"]], "pydicom.values.convert_OWvalue": [[510, "pydicom-values-convert-owvalue"]], "pydicom.values.convert_DS_string": [[506, "pydicom-values-convert-ds-string"]], "pydicom.values.convert_UI": [[514, "pydicom-values-convert-ui"]], "pydicom.values.convert_ATvalue": [[504, "pydicom-values-convert-atvalue"]], "pydicom.values.convert_OBvalue": [[509, "pydicom-values-convert-obvalue"]], "pydicom.valuerep.VR": [[500, "pydicom-valuerep-vr"]], "pydicom.valuerep.DSdecimal": [[493, "pydicom-valuerep-dsdecimal"]], "pydicom.valuerep.IS": [[496, "pydicom-valuerep-is"]], "pydicom.valuerep.DS": [[492, "pydicom-valuerep-ds"]], "pydicom.valuerep.is_valid_ds": [[502, "pydicom-valuerep-is-valid-ds"]], "pydicom.values.convert_AE_string": [[503, "pydicom-values-convert-ae-string"]], "pydicom.valuerep.TM": [[499, "pydicom-valuerep-tm"]], "pydicom.valuerep.DSfloat": [[494, "pydicom-valuerep-dsfloat"]], "pydicom.valuerep.PersonName": [[498, "pydicom-valuerep-personname"]], "pydicom.valuerep.ISfloat": [[497, "pydicom-valuerep-isfloat"]], "pydicom.valuerep.format_number_as_ds": [[501, "pydicom-valuerep-format-number-as-ds"]], "pydicom.valuerep.DT": [[495, "pydicom-valuerep-dt"]], "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage": [[480, "pydicom-uid-widefieldophthalmicphotographystereographicprojectionimagestorage"]], "pydicom.uid.XRayRadiofluoroscopicImageStorage": [[488, "pydicom-uid-xrayradiofluoroscopicimagestorage"]], "pydicom.uid.XADefinedProcedureProtocolStorage": [[481, "pydicom-uid-xadefinedprocedureprotocolstorage"]], "pydicom.valuerep.DA": [[491, "pydicom-valuerep-da"]], "pydicom.uid.register_transfer_syntax": [[490, "pydicom-uid-register-transfer-syntax"]], "pydicom.uid.XRayAngiographicImageStorage": [[486, "pydicom-uid-xrayangiographicimagestorage"]], "pydicom.uid.XRay3DAngiographicImageStorage": [[484, "pydicom-uid-xray3dangiographicimagestorage"]], "pydicom.uid.XRayRadiationDoseSRStorage": [[487, "pydicom-uid-xrayradiationdosesrstorage"]], "pydicom.uid.generate_uid": [[489, "pydicom-uid-generate-uid"]], "pydicom.uid.XRay3DCraniofacialImageStorage": [[485, "pydicom-uid-xray3dcraniofacialimagestorage"]], "pydicom.uid.XAPerformedProcedureProtocolStorage": [[482, "pydicom-uid-xaperformedprocedureprotocolstorage"]], "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage": [[483, "pydicom-uid-xaxrfgrayscalesoftcopypresentationstatestorage"]], "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage": [[471, "pydicom-uid-vlslidecoordinatesmicroscopicimagestorage"]], "pydicom.uid.VideoPhotographicImageStorage": [[476, "pydicom-uid-videophotographicimagestorage"]], "pydicom.uid.VLEndoscopicImageStorage": [[468, "pydicom-uid-vlendoscopicimagestorage"]], "pydicom.uid.VLPhotographicImageStorage": [[470, "pydicom-uid-vlphotographicimagestorage"]], "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage": [[473, "pydicom-uid-variablemodalitylutsoftcopypresentationstatestorage"]], "pydicom.uid.VideoEndoscopicImageStorage": [[474, "pydicom-uid-videoendoscopicimagestorage"]], "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage": [[478, "pydicom-uid-volumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.VideoMicroscopicImageStorage": [[475, "pydicom-uid-videomicroscopicimagestorage"]], "pydicom.uid.VisualAcuityMeasurementsStorage": [[477, "pydicom-uid-visualacuitymeasurementsstorage"]], "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage": [[479, "pydicom-uid-widefieldophthalmicphotography3dcoordinatesimagestorage"]], "pydicom.uid.VLMicroscopicImageStorage": [[469, "pydicom-uid-vlmicroscopicimagestorage"]], "pydicom.uid.VLWholeSlideMicroscopyImageStorage": [[472, "pydicom-uid-vlwholeslidemicroscopyimagestorage"]], "pydicom.uid.UID": [[464, "pydicom-uid-uid"]], "pydicom.uid.SurfaceScanPointCloudStorage": [[458, "pydicom-uid-surfacescanpointcloudstorage"]], "pydicom.uid.UltrasoundMultiFrameImageStorage": [[466, "pydicom-uid-ultrasoundmultiframeimagestorage"]], "pydicom.uid.UncompressedTransferSyntaxes": [[467, "pydicom-uid-uncompressedtransfersyntaxes"]], "pydicom.uid.TomotherapeuticRadiationStorage": [[461, "pydicom-uid-tomotherapeuticradiationstorage"]], "pydicom.uid.SurfaceScanMeshStorage": [[457, "pydicom-uid-surfacescanmeshstorage"]], "pydicom.uid.UltrasoundImageStorage": [[465, "pydicom-uid-ultrasoundimagestorage"]], "pydicom.uid.TomotherapeuticRadiationRecordStorage": [[460, "pydicom-uid-tomotherapeuticradiationrecordstorage"]], "pydicom.uid.SurfaceSegmentationStorage": [[459, "pydicom-uid-surfacesegmentationstorage"]], "pydicom.uid.TractographyResultsStorage": [[462, "pydicom-uid-tractographyresultsstorage"]], "pydicom.uid.SubjectiveRefractionMeasurementsStorage": [[456, "pydicom-uid-subjectiverefractionmeasurementsstorage"]], "pydicom.uid.TwelveLeadECGWaveformStorage": [[463, "pydicom-uid-twelveleadecgwaveformstorage"]], "pydicom.uid.SpatialRegistrationStorage": [[453, "pydicom-uid-spatialregistrationstorage"]], "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo": [[444, "pydicom-uid-smptest211020uncompressedinterlacedactivevideo"]], "pydicom.uid.SpatialFiducialsStorage": [[452, "pydicom-uid-spatialfiducialsstorage"]], "pydicom.uid.SecondaryCaptureImageStorage": [[447, "pydicom-uid-secondarycaptureimagestorage"]], "pydicom.uid.SimplifiedAdultEchoSRStorage": [[450, "pydicom-uid-simplifiedadultechosrstorage"]], "pydicom.uid.SegmentationStorage": [[448, "pydicom-uid-segmentationstorage"]], "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage": [[449, "pydicom-uid-segmentedvolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.SleepElectroencephalogramWaveformStorage": [[451, "pydicom-uid-sleepelectroencephalogramwaveformstorage"]], "pydicom.uid.SMPTEST211030PCMDigitalAudio": [[446, "pydicom-uid-smptest211030pcmdigitalaudio"]], "pydicom.uid.StereometricRelationshipStorage": [[455, "pydicom-uid-stereometricrelationshipstorage"]], "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo": [[445, "pydicom-uid-smptest211020uncompressedprogressiveactivevideo"]], "pydicom.uid.SpectaclePrescriptionReportStorage": [[454, "pydicom-uid-spectacleprescriptionreportstorage"]], "pydicom.uid.RTTreatmentPreparationStorage": [[435, "pydicom-uid-rttreatmentpreparationstorage"]], "pydicom.uid.RTTreatmentSummaryRecordStorage": [[436, "pydicom-uid-rttreatmentsummaryrecordstorage"]], "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage": [[437, "pydicom-uid-radiopharmaceuticalradiationdosesrstorage"]], "pydicom.uid.RoboticArmRadiationStorage": [[441, "pydicom-uid-roboticarmradiationstorage"]], "pydicom.uid.RawDataStorage": [[438, "pydicom-uid-rawdatastorage"]], "pydicom.uid.RTSegmentAnnotationStorage": [[433, "pydicom-uid-rtsegmentannotationstorage"]], "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage": [[443, "pydicom-uid-routinescalpelectroencephalogramwaveformstorage"]], "pydicom.uid.RealWorldValueMappingStorage": [[439, "pydicom-uid-realworldvaluemappingstorage"]], "pydicom.uid.RoboticRadiationRecordStorage": [[442, "pydicom-uid-roboticradiationrecordstorage"]], "pydicom.uid.RTStructureSetStorage": [[434, "pydicom-uid-rtstructuresetstorage"]], "pydicom.uid.RespiratoryWaveformStorage": [[440, "pydicom-uid-respiratorywaveformstorage"]], "pydicom.uid.RTRadiationSetStorage": [[432, "pydicom-uid-rtradiationsetstorage"]]}, "indexentries": {"settings (class in pydicom.config)": [[56, "pydicom.config.Settings"]], "infer_sq_for_un_vr (pydicom.config.settings property)": [[56, "pydicom.config.Settings.infer_sq_for_un_vr"]], "reading_validation_mode (pydicom.config.settings property)": [[56, "pydicom.config.Settings.reading_validation_mode"]], "writing_validation_mode (pydicom.config.settings property)": [[56, "pydicom.config.Settings.writing_validation_mode"]], "convert_encodings() (in module pydicom.charset)": [[76, "pydicom.charset.convert_encodings"]], "decode_bytes() (in module pydicom.charset)": [[77, "pydicom.charset.decode_bytes"]], "decode_element() (in module pydicom.charset)": [[78, "pydicom.charset.decode_element"]], "encode_string() (in module pydicom.charset)": [[79, "pydicom.charset.encode_string"]], "apply_j2k_corrections (in module pydicom.config)": [[80, "pydicom.config.APPLY_J2K_CORRECTIONS"]], "ds_decimal() (in module pydicom.config)": [[81, "pydicom.config.DS_decimal"]], "ds_numpy() (in module pydicom.config)": [[82, "pydicom.config.DS_numpy"]], "ignore (in module pydicom.config)": [[83, "pydicom.config.IGNORE"]], "invalid_keyword_behavior (in module pydicom.config)": [[84, "pydicom.config.INVALID_KEYWORD_BEHAVIOR"]], "invalid_key_behavior (in module pydicom.config)": [[85, "pydicom.config.INVALID_KEY_BEHAVIOR"]], "raise (in module pydicom.config)": [[86, "pydicom.config.RAISE"]], "warn (in module pydicom.config)": [[87, "pydicom.config.WARN"]], "allow_ds_float (in module pydicom.config)": [[88, "pydicom.config.allow_DS_float"]], "assume_implicit_vr_switch (in module pydicom.config)": [[89, "pydicom.config.assume_implicit_vr_switch"]], "convert_wrong_length_to_un (in module pydicom.config)": [[90, "pydicom.config.convert_wrong_length_to_UN"]], "data_element_callback (in module pydicom.config)": [[91, "pydicom.config.data_element_callback"]], "data_element_callback_kwargs (in module pydicom.config)": [[92, "pydicom.config.data_element_callback_kwargs"]], "datetime_conversion (in module pydicom.config)": [[93, "pydicom.config.datetime_conversion"]], "debug() (in module pydicom.config)": [[94, "pydicom.config.debug"]], "enforce_valid_values (in module pydicom.config)": [[95, "pydicom.config.enforce_valid_values"]], "future_behavior() (in module pydicom.config)": [[96, "pydicom.config.future_behavior"]], "pixel_data_handlers (in module pydicom.config)": [[97, "pydicom.config.pixel_data_handlers"]], "reset_data_element_callback() (in module pydicom.config)": [[98, "pydicom.config.reset_data_element_callback"]], "settings (in module pydicom.config)": [[99, "pydicom.config.settings"]], "show_file_meta (in module pydicom.config)": [[100, "pydicom.config.show_file_meta"]], "use_ds_decimal (in module pydicom.config)": [[101, "pydicom.config.use_DS_decimal"]], "use_ds_numpy (in module pydicom.config)": [[102, "pydicom.config.use_DS_numpy"]], "use_is_numpy (in module pydicom.config)": [[103, "pydicom.config.use_IS_numpy"]], "get_charset_files() (in module pydicom.data)": [[104, "pydicom.data.get_charset_files"]], "get_palette_files() (in module pydicom.data)": [[105, "pydicom.data.get_palette_files"]], "get_testdata_file() (in module pydicom.data)": [[106, "pydicom.data.get_testdata_file"]], "get_testdata_files() (in module pydicom.data)": [[107, "pydicom.data.get_testdata_files"]], "add_dict_entries() (in module pydicom.datadict)": [[108, "pydicom.datadict.add_dict_entries"]], "add_dict_entry() (in module pydicom.datadict)": [[109, "pydicom.datadict.add_dict_entry"]], "add_private_dict_entries() (in module pydicom.datadict)": [[110, "pydicom.datadict.add_private_dict_entries"]], "add_private_dict_entry() (in module pydicom.datadict)": [[111, "pydicom.datadict.add_private_dict_entry"]], "dictionary_vm() (in module pydicom.datadict)": [[112, "pydicom.datadict.dictionary_VM"]], "dictionary_vr() (in module pydicom.datadict)": [[113, "pydicom.datadict.dictionary_VR"]], "dictionary_description() (in module pydicom.datadict)": [[114, "pydicom.datadict.dictionary_description"]], "dictionary_has_tag() (in module pydicom.datadict)": [[115, "pydicom.datadict.dictionary_has_tag"]], "dictionary_is_retired() (in module pydicom.datadict)": [[116, "pydicom.datadict.dictionary_is_retired"]], "dictionary_keyword() (in module pydicom.datadict)": [[117, "pydicom.datadict.dictionary_keyword"]], "get_entry() (in module pydicom.datadict)": [[118, "pydicom.datadict.get_entry"]], "get_private_entry() (in module pydicom.datadict)": [[119, "pydicom.datadict.get_private_entry"]], "keyword_for_tag() (in module pydicom.datadict)": [[120, "pydicom.datadict.keyword_for_tag"]], "mask_match() (in module pydicom.datadict)": [[121, "pydicom.datadict.mask_match"]], "private_dictionary_vm() (in module pydicom.datadict)": [[122, "pydicom.datadict.private_dictionary_VM"]], "private_dictionary_vr() (in module pydicom.datadict)": [[123, "pydicom.datadict.private_dictionary_VR"]], "private_dictionary_description() (in module pydicom.datadict)": [[124, "pydicom.datadict.private_dictionary_description"]], "repeater_has_keyword() (in module pydicom.datadict)": [[125, "pydicom.datadict.repeater_has_keyword"]], "repeater_has_tag() (in module pydicom.datadict)": [[126, "pydicom.datadict.repeater_has_tag"]], "tag_for_keyword() (in module pydicom.datadict)": [[127, "pydicom.datadict.tag_for_keyword"]], "dataelement (class in pydicom.dataelem)": [[128, "pydicom.dataelem.DataElement"]], "vm (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.VM"]], "vr (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.VR"]], "__init__() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.__init__"]], "clear() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.clear"]], "descripwidth (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.descripWidth"]], "empty_value (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.empty_value"]], "from_json() (pydicom.dataelem.dataelement class method)": [[128, "pydicom.dataelem.DataElement.from_json"]], "is_empty (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.is_empty"]], "is_private (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.is_private"]], "is_retired (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.is_retired"]], "is_undefined_length (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.is_undefined_length"]], "keyword (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.keyword"]], "maxbytestodisplay (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.maxBytesToDisplay"]], "name (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.name"]], "repval (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.repval"]], "showvr (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.showVR"]], "tag (pydicom.dataelem.dataelement attribute)": [[128, "pydicom.dataelem.DataElement.tag"]], "to_json() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.to_json"]], "to_json_dict() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.to_json_dict"]], "validate() (pydicom.dataelem.dataelement method)": [[128, "pydicom.dataelem.DataElement.validate"]], "value (pydicom.dataelem.dataelement property)": [[128, "pydicom.dataelem.DataElement.value"]], "dataelement_from_raw() (in module pydicom.dataelem)": [[129, "pydicom.dataelem.DataElement_from_raw"]], "rawdataelement (class in pydicom.dataelem)": [[130, "pydicom.dataelem.RawDataElement"]], "vr (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.VR"]], "__init__() (pydicom.dataelem.rawdataelement method)": [[130, "pydicom.dataelem.RawDataElement.__init__"]], "count() (pydicom.dataelem.rawdataelement method)": [[130, "pydicom.dataelem.RawDataElement.count"]], "index() (pydicom.dataelem.rawdataelement method)": [[130, "pydicom.dataelem.RawDataElement.index"]], "is_implicit_vr (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.is_implicit_VR"]], "is_little_endian (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.is_little_endian"]], "is_raw (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.is_raw"]], "length (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.length"]], "tag (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.tag"]], "value (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.value"]], "value_tell (pydicom.dataelem.rawdataelement attribute)": [[130, "pydicom.dataelem.RawDataElement.value_tell"]], "dataset (class in pydicom.dataset)": [[131, "pydicom.dataset.Dataset"]], "__init__() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.__init__"]], "add() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.add"]], "add_new() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.add_new"]], "add_new_private() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.add_new_private"]], "clear() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.clear"]], "compress() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.compress"]], "convert_pixel_data() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.convert_pixel_data"]], "copy() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.copy"]], "data_element() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.data_element"]], "decode() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.decode"]], "decompress() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.decompress"]], "default_element_format (pydicom.dataset.dataset attribute)": [[131, "pydicom.dataset.Dataset.default_element_format"]], "default_sequence_element_format (pydicom.dataset.dataset attribute)": [[131, "pydicom.dataset.Dataset.default_sequence_element_format"]], "dir() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.dir"]], "elements() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.elements"]], "ensure_file_meta() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.ensure_file_meta"]], "formatted_lines() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.formatted_lines"]], "from_json() (pydicom.dataset.dataset class method)": [[131, "pydicom.dataset.Dataset.from_json"]], "get() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.get"]], "get_item() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.get_item"]], "get_private_item() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.get_private_item"]], "group_dataset() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.group_dataset"]], "indent_chars (pydicom.dataset.dataset attribute)": [[131, "pydicom.dataset.Dataset.indent_chars"]], "is_implicit_vr (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.is_little_endian"]], "is_original_encoding (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.is_original_encoding"]], "items() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.items"]], "iterall() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.iterall"]], "keys() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.keys"]], "original_character_set (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.original_character_set"]], "original_encoding (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.original_encoding"]], "overlay_array() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.overlay_array"]], "pixel_array (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.pixel_array"]], "pop() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.pop"]], "popitem() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.popitem"]], "private_block() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.private_block"]], "private_creators() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.private_creators"]], "read_encoding (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.read_encoding"]], "read_implicit_vr (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.read_implicit_vr"]], "read_little_endian (pydicom.dataset.dataset property)": [[131, "pydicom.dataset.Dataset.read_little_endian"]], "remove_private_tags() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.remove_private_tags"]], "save_as() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.save_as"]], "set_original_encoding() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.set_original_encoding"]], "setdefault() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.setdefault"]], "to_json() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.to_json"]], "to_json_dict() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.to_json_dict"]], "top() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.top"]], "trait_names() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.trait_names"]], "update() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.update"]], "values() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.values"]], "walk() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.walk"]], "waveform_array() (pydicom.dataset.dataset method)": [[131, "pydicom.dataset.Dataset.waveform_array"]], "filedataset (class in pydicom.dataset)": [[132, "pydicom.dataset.FileDataset"]], "__init__() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.__init__"]], "add() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.add"]], "add_new() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.add_new"]], "add_new_private() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.add_new_private"]], "clear() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.clear"]], "compress() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.compress"]], "convert_pixel_data() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.convert_pixel_data"]], "copy() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.copy"]], "data_element() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.data_element"]], "decode() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.decode"]], "decompress() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.decompress"]], "dir() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.dir"]], "elements() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.elements"]], "ensure_file_meta() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.ensure_file_meta"]], "file_meta (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.file_meta"]], "filename (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.filename"]], "fileobj_type (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.fileobj_type"]], "formatted_lines() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.formatted_lines"]], "from_json() (pydicom.dataset.filedataset class method)": [[132, "pydicom.dataset.FileDataset.from_json"]], "get() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.get"]], "get_item() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.get_item"]], "get_private_item() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.get_private_item"]], "group_dataset() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.group_dataset"]], "is_implicit_vr (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.is_little_endian"]], "is_original_encoding (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.is_original_encoding"]], "items() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.items"]], "iterall() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.iterall"]], "keys() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.keys"]], "original_character_set (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.original_character_set"]], "original_encoding (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.original_encoding"]], "overlay_array() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.overlay_array"]], "pixel_array (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.pixel_array"]], "pop() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.pop"]], "popitem() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.popitem"]], "preamble (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.preamble"]], "private_block() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.private_block"]], "private_creators() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.private_creators"]], "read_encoding (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.read_encoding"]], "read_implicit_vr (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.read_implicit_vr"]], "read_little_endian (pydicom.dataset.filedataset property)": [[132, "pydicom.dataset.FileDataset.read_little_endian"]], "remove_private_tags() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.remove_private_tags"]], "save_as() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.save_as"]], "set_original_encoding() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.set_original_encoding"]], "setdefault() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.setdefault"]], "timestamp (pydicom.dataset.filedataset attribute)": [[132, "pydicom.dataset.FileDataset.timestamp"]], "to_json() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.to_json"]], "to_json_dict() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.to_json_dict"]], "top() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.top"]], "trait_names() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.trait_names"]], "update() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.update"]], "values() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.values"]], "walk() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.walk"]], "waveform_array() (pydicom.dataset.filedataset method)": [[132, "pydicom.dataset.FileDataset.waveform_array"]], "filemetadataset (class in pydicom.dataset)": [[133, "pydicom.dataset.FileMetaDataset"]], "__init__() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.__init__"]], "add() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.add"]], "add_new() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.add_new"]], "add_new_private() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.add_new_private"]], "clear() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.clear"]], "compress() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.compress"]], "convert_pixel_data() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.convert_pixel_data"]], "copy() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.copy"]], "data_element() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.data_element"]], "decode() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.decode"]], "decompress() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.decompress"]], "dir() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.dir"]], "elements() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.elements"]], "ensure_file_meta() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.ensure_file_meta"]], "formatted_lines() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.formatted_lines"]], "from_json() (pydicom.dataset.filemetadataset class method)": [[133, "pydicom.dataset.FileMetaDataset.from_json"]], "get() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.get"]], "get_item() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.get_item"]], "get_private_item() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.get_private_item"]], "group_dataset() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.group_dataset"]], "is_implicit_vr (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.is_little_endian"]], "is_original_encoding (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.is_original_encoding"]], "items() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.items"]], "iterall() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.iterall"]], "keys() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.keys"]], "original_character_set (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.original_character_set"]], "original_encoding (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.original_encoding"]], "overlay_array() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.overlay_array"]], "pixel_array (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.pixel_array"]], "pop() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.pop"]], "popitem() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.popitem"]], "private_block() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.private_block"]], "private_creators() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.private_creators"]], "read_encoding (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.read_encoding"]], "read_implicit_vr (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.read_implicit_vr"]], "read_little_endian (pydicom.dataset.filemetadataset property)": [[133, "pydicom.dataset.FileMetaDataset.read_little_endian"]], "remove_private_tags() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.remove_private_tags"]], "save_as() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.save_as"]], "set_original_encoding() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.set_original_encoding"]], "setdefault() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.setdefault"]], "to_json() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.to_json"]], "to_json_dict() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.to_json_dict"]], "top() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.top"]], "trait_names() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.trait_names"]], "update() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.update"]], "validate() (pydicom.dataset.filemetadataset static method)": [[133, "pydicom.dataset.FileMetaDataset.validate"]], "values() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.values"]], "walk() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.walk"]], "waveform_array() (pydicom.dataset.filemetadataset method)": [[133, "pydicom.dataset.FileMetaDataset.waveform_array"]], "privateblock (class in pydicom.dataset)": [[134, "pydicom.dataset.PrivateBlock"]], "__init__() (pydicom.dataset.privateblock method)": [[134, "pydicom.dataset.PrivateBlock.__init__"]], "add_new() (pydicom.dataset.privateblock method)": [[134, "pydicom.dataset.PrivateBlock.add_new"]], "block_start (pydicom.dataset.privateblock attribute)": [[134, "pydicom.dataset.PrivateBlock.block_start"]], "dataset (pydicom.dataset.privateblock attribute)": [[134, "pydicom.dataset.PrivateBlock.dataset"]], "get_tag() (pydicom.dataset.privateblock method)": [[134, "pydicom.dataset.PrivateBlock.get_tag"]], "group (pydicom.dataset.privateblock attribute)": [[134, "pydicom.dataset.PrivateBlock.group"]], "private_creator (pydicom.dataset.privateblock attribute)": [[134, "pydicom.dataset.PrivateBlock.private_creator"]], "validate_file_meta() (in module pydicom.dataset)": [[135, "pydicom.dataset.validate_file_meta"]], "decode_data_sequence() (in module pydicom.encaps)": [[136, "pydicom.encaps.decode_data_sequence"]], "defragment_data() (in module pydicom.encaps)": [[137, "pydicom.encaps.defragment_data"]], "encapsulate() (in module pydicom.encaps)": [[138, "pydicom.encaps.encapsulate"]], "encapsulate_extended() (in module pydicom.encaps)": [[139, "pydicom.encaps.encapsulate_extended"]], "fragment_frame() (in module pydicom.encaps)": [[140, "pydicom.encaps.fragment_frame"]], "generate_fragmented_frames() (in module pydicom.encaps)": [[141, "pydicom.encaps.generate_fragmented_frames"]], "generate_fragments() (in module pydicom.encaps)": [[142, "pydicom.encaps.generate_fragments"]], "generate_frames() (in module pydicom.encaps)": [[143, "pydicom.encaps.generate_frames"]], "generate_pixel_data() (in module pydicom.encaps)": [[144, "pydicom.encaps.generate_pixel_data"]], "generate_pixel_data_fragment() (in module pydicom.encaps)": [[145, "pydicom.encaps.generate_pixel_data_fragment"]], "generate_pixel_data_frame() (in module pydicom.encaps)": [[146, "pydicom.encaps.generate_pixel_data_frame"]], "get_frame() (in module pydicom.encaps)": [[147, "pydicom.encaps.get_frame"]], "get_frame_offsets() (in module pydicom.encaps)": [[148, "pydicom.encaps.get_frame_offsets"]], "itemize_fragment() (in module pydicom.encaps)": [[149, "pydicom.encaps.itemize_fragment"]], "itemize_frame() (in module pydicom.encaps)": [[150, "pydicom.encaps.itemize_frame"]], "parse_basic_offsets() (in module pydicom.encaps)": [[151, "pydicom.encaps.parse_basic_offsets"]], "parse_fragments() (in module pydicom.encaps)": [[152, "pydicom.encaps.parse_fragments"]], "read_item() (in module pydicom.encaps)": [[153, "pydicom.encaps.read_item"]], "invaliddicomerror": [[154, "pydicom.errors.InvalidDicomError"]], "with_traceback() (pydicom.errors.invaliddicomerror method)": [[154, "pydicom.errors.InvalidDicomError.with_traceback"]], "dicombytesio (class in pydicom.filebase)": [[155, "pydicom.filebase.DicomBytesIO"]], "__init__() (pydicom.filebase.dicombytesio method)": [[155, "pydicom.filebase.DicomBytesIO.__init__"]], "close() (pydicom.filebase.dicombytesio method)": [[155, "pydicom.filebase.DicomBytesIO.close"]], "is_implicit_vr (pydicom.filebase.dicombytesio property)": [[155, "pydicom.filebase.DicomBytesIO.is_implicit_VR"]], "is_little_endian (pydicom.filebase.dicombytesio property)": [[155, "pydicom.filebase.DicomBytesIO.is_little_endian"]], "name (pydicom.filebase.dicombytesio property)": [[155, "pydicom.filebase.DicomBytesIO.name"]], "parent (pydicom.filebase.dicombytesio property)": [[155, "pydicom.filebase.DicomBytesIO.parent"]], "read() (pydicom.filebase.dicombytesio method)": [[155, "pydicom.filebase.DicomBytesIO.read"]], "read_ul() (pydicom.filebase.dicombytesio method)": [[155, "pydicom.filebase.DicomBytesIO.read_UL"]], "read_us() (pydicom.filebase.dicombytesio method)": [[155, "pydicom.filebase.DicomBytesIO.read_US"]], "read_exact() (pydicom.filebase.dicombytesio method)": [[155, "pydicom.filebase.DicomBytesIO.read_exact"]], "read_tag() (pydicom.filebase.dicombytesio method)": [[155, "pydicom.filebase.DicomBytesIO.read_tag"]], "seek() (pydicom.filebase.dicombytesio method)": [[155, "pydicom.filebase.DicomBytesIO.seek"]], "tell() (pydicom.filebase.dicombytesio method)": [[155, "pydicom.filebase.DicomBytesIO.tell"]], "write() (pydicom.filebase.dicombytesio method)": [[155, "pydicom.filebase.DicomBytesIO.write"]], "write_ul() (pydicom.filebase.dicombytesio method)": [[155, "pydicom.filebase.DicomBytesIO.write_UL"]], "write_us() (pydicom.filebase.dicombytesio method)": [[155, "pydicom.filebase.DicomBytesIO.write_US"]], "write_tag() (pydicom.filebase.dicombytesio method)": [[155, "pydicom.filebase.DicomBytesIO.write_tag"]], "dicomfile() (in module pydicom.filebase)": [[156, "pydicom.filebase.DicomFile"]], "dicomfilelike (class in pydicom.filebase)": [[157, "pydicom.filebase.DicomFileLike"]], "__init__() (pydicom.filebase.dicomfilelike method)": [[157, "pydicom.filebase.DicomFileLike.__init__"]], "close() (pydicom.filebase.dicomfilelike method)": [[157, "pydicom.filebase.DicomFileLike.close"]], "is_implicit_vr (pydicom.filebase.dicomfilelike property)": [[157, "pydicom.filebase.DicomFileLike.is_implicit_VR"]], "is_little_endian (pydicom.filebase.dicomfilelike property)": [[157, "pydicom.filebase.DicomFileLike.is_little_endian"]], "name (pydicom.filebase.dicomfilelike property)": [[157, "pydicom.filebase.DicomFileLike.name"]], "parent (pydicom.filebase.dicomfilelike property)": [[157, "pydicom.filebase.DicomFileLike.parent"]], "read() (pydicom.filebase.dicomfilelike method)": [[157, "pydicom.filebase.DicomFileLike.read"]], "read_ul() (pydicom.filebase.dicomfilelike method)": [[157, "pydicom.filebase.DicomFileLike.read_UL"]], "read_us() (pydicom.filebase.dicomfilelike method)": [[157, "pydicom.filebase.DicomFileLike.read_US"]], "read_exact() (pydicom.filebase.dicomfilelike method)": [[157, "pydicom.filebase.DicomFileLike.read_exact"]], "read_tag() (pydicom.filebase.dicomfilelike method)": [[157, "pydicom.filebase.DicomFileLike.read_tag"]], "seek() (pydicom.filebase.dicomfilelike method)": [[157, "pydicom.filebase.DicomFileLike.seek"]], "tell() (pydicom.filebase.dicomfilelike method)": [[157, "pydicom.filebase.DicomFileLike.tell"]], "write() (pydicom.filebase.dicomfilelike method)": [[157, "pydicom.filebase.DicomFileLike.write"]], "write_ul() (pydicom.filebase.dicomfilelike method)": [[157, "pydicom.filebase.DicomFileLike.write_UL"]], "write_us() (pydicom.filebase.dicomfilelike method)": [[157, "pydicom.filebase.DicomFileLike.write_US"]], "write_tag() (pydicom.filebase.dicomfilelike method)": [[157, "pydicom.filebase.DicomFileLike.write_tag"]], "dicomio (class in pydicom.filebase)": [[158, "pydicom.filebase.DicomIO"]], "__init__() (pydicom.filebase.dicomio method)": [[158, "pydicom.filebase.DicomIO.__init__"]], "close() (pydicom.filebase.dicomio method)": [[158, "pydicom.filebase.DicomIO.close"]], "is_implicit_vr (pydicom.filebase.dicomio property)": [[158, "pydicom.filebase.DicomIO.is_implicit_VR"]], "is_little_endian (pydicom.filebase.dicomio property)": [[158, "pydicom.filebase.DicomIO.is_little_endian"]], "name (pydicom.filebase.dicomio property)": [[158, "pydicom.filebase.DicomIO.name"]], "parent (pydicom.filebase.dicomio property)": [[158, "pydicom.filebase.DicomIO.parent"]], "read() (pydicom.filebase.dicomio method)": [[158, "pydicom.filebase.DicomIO.read"]], "read_ul() (pydicom.filebase.dicomio method)": [[158, "pydicom.filebase.DicomIO.read_UL"]], "read_us() (pydicom.filebase.dicomio method)": [[158, "pydicom.filebase.DicomIO.read_US"]], "read_exact() (pydicom.filebase.dicomio method)": [[158, "pydicom.filebase.DicomIO.read_exact"]], "read_tag() (pydicom.filebase.dicomio method)": [[158, "pydicom.filebase.DicomIO.read_tag"]], "seek() (pydicom.filebase.dicomio method)": [[158, "pydicom.filebase.DicomIO.seek"]], "tell() (pydicom.filebase.dicomio method)": [[158, "pydicom.filebase.DicomIO.tell"]], "write() (pydicom.filebase.dicomio method)": [[158, "pydicom.filebase.DicomIO.write"]], "write_ul() (pydicom.filebase.dicomio method)": [[158, "pydicom.filebase.DicomIO.write_UL"]], "write_us() (pydicom.filebase.dicomio method)": [[158, "pydicom.filebase.DicomIO.write_US"]], "write_tag() (pydicom.filebase.dicomio method)": [[158, "pydicom.filebase.DicomIO.write_tag"]], "data_element_generator() (in module pydicom.filereader)": [[159, "pydicom.filereader.data_element_generator"]], "data_element_offset_to_value() (in module pydicom.filereader)": [[160, "pydicom.filereader.data_element_offset_to_value"]], "dcmread() (in module pydicom.filereader)": [[161, "pydicom.filereader.dcmread"]], "read_dataset() (in module pydicom.filereader)": [[162, "pydicom.filereader.read_dataset"]], "read_deferred_data_element() (in module pydicom.filereader)": [[163, "pydicom.filereader.read_deferred_data_element"]], "read_file_meta_info() (in module pydicom.filereader)": [[164, "pydicom.filereader.read_file_meta_info"]], "read_partial() (in module pydicom.filereader)": [[165, "pydicom.filereader.read_partial"]], "read_preamble() (in module pydicom.filereader)": [[166, "pydicom.filereader.read_preamble"]], "read_sequence() (in module pydicom.filereader)": [[167, "pydicom.filereader.read_sequence"]], "read_sequence_item() (in module pydicom.filereader)": [[168, "pydicom.filereader.read_sequence_item"]], "directory_recorders (in module pydicom.fileset)": [[169, "pydicom.fileset.DIRECTORY_RECORDERS"]], "fileid (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.FileID"]], "fileinstance (class in pydicom.fileset)": [[170, "pydicom.fileset.FileInstance"]], "sopclassuid (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.SOPClassUID"]], "sopinstanceuid (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.SOPInstanceUID"]], "transfersyntaxuid (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.TransferSyntaxUID"]], "__init__() (pydicom.fileset.fileinstance method)": [[170, "pydicom.fileset.FileInstance.__init__"]], "file_set (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.file_set"]], "for_addition (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.for_addition"]], "for_moving (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.for_moving"]], "for_removal (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.for_removal"]], "is_private (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.is_private"]], "is_staged (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.is_staged"]], "load() (pydicom.fileset.fileinstance method)": [[170, "pydicom.fileset.FileInstance.load"]], "node (pydicom.fileset.fileinstance attribute)": [[170, "pydicom.fileset.FileInstance.node"]], "path (pydicom.fileset.fileinstance property)": [[170, "pydicom.fileset.FileInstance.path"]], "fileset (class in pydicom.fileset)": [[171, "pydicom.fileset.FileSet"]], "id (pydicom.fileset.fileset property)": [[171, "pydicom.fileset.FileSet.ID"]], "uid (pydicom.fileset.fileset property)": [[171, "pydicom.fileset.FileSet.UID"]], "__init__() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.__init__"]], "add() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.add"]], "add_custom() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.add_custom"]], "clear() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.clear"]], "copy() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.copy"]], "descriptor_character_set (pydicom.fileset.fileset property)": [[171, "pydicom.fileset.FileSet.descriptor_character_set"]], "descriptor_file_id (pydicom.fileset.fileset property)": [[171, "pydicom.fileset.FileSet.descriptor_file_id"]], "find() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.find"]], "find_values() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.find_values"]], "is_staged (pydicom.fileset.fileset property)": [[171, "pydicom.fileset.FileSet.is_staged"]], "load() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.load"]], "path (pydicom.fileset.fileset property)": [[171, "pydicom.fileset.FileSet.path"]], "remove() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.remove"]], "write() (pydicom.fileset.fileset method)": [[171, "pydicom.fileset.FileSet.write"]], "recordnode (class in pydicom.fileset)": [[172, "pydicom.fileset.RecordNode"]], "__init__() (pydicom.fileset.recordnode method)": [[172, "pydicom.fileset.RecordNode.__init__"]], "add() (pydicom.fileset.recordnode method)": [[172, "pydicom.fileset.RecordNode.add"]], "ancestors (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.ancestors"]], "children (pydicom.fileset.recordnode attribute)": [[172, "pydicom.fileset.RecordNode.children"]], "component (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.component"]], "depth (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.depth"]], "file_set (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.file_set"]], "has_instance (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.has_instance"]], "index (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.index"]], "instance (pydicom.fileset.recordnode attribute)": [[172, "pydicom.fileset.RecordNode.instance"]], "is_root (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.is_root"]], "key (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.key"]], "next (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.next"]], "parent (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.parent"]], "prettify() (pydicom.fileset.recordnode method)": [[172, "pydicom.fileset.RecordNode.prettify"]], "previous (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.previous"]], "record_type (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.record_type"]], "remove() (pydicom.fileset.recordnode method)": [[172, "pydicom.fileset.RecordNode.remove"]], "reverse() (pydicom.fileset.recordnode method)": [[172, "pydicom.fileset.RecordNode.reverse"]], "root (pydicom.fileset.recordnode property)": [[172, "pydicom.fileset.RecordNode.root"]], "generate_filename() (in module pydicom.fileset)": [[173, "pydicom.fileset.generate_filename"]], "is_conformant_file_id() (in module pydicom.fileset)": [[174, "pydicom.fileset.is_conformant_file_id"]], "absorb_delimiter_item() (in module pydicom.fileutil)": [[175, "pydicom.fileutil.absorb_delimiter_item"]], "find_bytes() (in module pydicom.fileutil)": [[176, "pydicom.fileutil.find_bytes"]], "find_delimiter() (in module pydicom.fileutil)": [[177, "pydicom.fileutil.find_delimiter"]], "length_of_undefined_length() (in module pydicom.fileutil)": [[178, "pydicom.fileutil.length_of_undefined_length"]], "read_undefined_length_value() (in module pydicom.fileutil)": [[179, "pydicom.fileutil.read_undefined_length_value"]], "correct_ambiguous_vr() (in module pydicom.filewriter)": [[180, "pydicom.filewriter.correct_ambiguous_vr"]], "correct_ambiguous_vr_element() (in module pydicom.filewriter)": [[181, "pydicom.filewriter.correct_ambiguous_vr_element"]], "dcmwrite() (in module pydicom.filewriter)": [[182, "pydicom.filewriter.dcmwrite"]], "multi_string() (in module pydicom.filewriter)": [[183, "pydicom.filewriter.multi_string"]], "write_atvalue() (in module pydicom.filewriter)": [[184, "pydicom.filewriter.write_ATvalue"]], "write_da() (in module pydicom.filewriter)": [[185, "pydicom.filewriter.write_DA"]], "write_dt() (in module pydicom.filewriter)": [[186, "pydicom.filewriter.write_DT"]], "write_obvalue() (in module pydicom.filewriter)": [[187, "pydicom.filewriter.write_OBvalue"]], "write_owvalue() (in module pydicom.filewriter)": [[188, "pydicom.filewriter.write_OWvalue"]], "write_pn() (in module pydicom.filewriter)": [[189, "pydicom.filewriter.write_PN"]], "write_tm() (in module pydicom.filewriter)": [[190, "pydicom.filewriter.write_TM"]], "write_ui() (in module pydicom.filewriter)": [[191, "pydicom.filewriter.write_UI"]], "write_un() (in module pydicom.filewriter)": [[192, "pydicom.filewriter.write_UN"]], "write_data_element() (in module pydicom.filewriter)": [[193, "pydicom.filewriter.write_data_element"]], "write_dataset() (in module pydicom.filewriter)": [[194, "pydicom.filewriter.write_dataset"]], "write_file_meta_info() (in module pydicom.filewriter)": [[195, "pydicom.filewriter.write_file_meta_info"]], "write_number_string() (in module pydicom.filewriter)": [[196, "pydicom.filewriter.write_number_string"]], "write_numbers() (in module pydicom.filewriter)": [[197, "pydicom.filewriter.write_numbers"]], "write_sequence() (in module pydicom.filewriter)": [[198, "pydicom.filewriter.write_sequence"]], "write_sequence_item() (in module pydicom.filewriter)": [[199, "pydicom.filewriter.write_sequence_item"]], "write_string() (in module pydicom.filewriter)": [[200, "pydicom.filewriter.write_string"]], "write_text() (in module pydicom.filewriter)": [[201, "pydicom.filewriter.write_text"]], "is_dicom() (in module pydicom.misc)": [[202, "pydicom.misc.is_dicom"]], "size_in_bytes() (in module pydicom.misc)": [[203, "pydicom.misc.size_in_bytes"]], "multivalue (class in pydicom.multival)": [[204, "pydicom.multival.MultiValue"]], "__init__() (pydicom.multival.multivalue method)": [[204, "pydicom.multival.MultiValue.__init__"]], "append() (pydicom.multival.multivalue method)": [[204, "pydicom.multival.MultiValue.append"]], "clear() (pydicom.multival.multivalue method)": [[204, "pydicom.multival.MultiValue.clear"]], "count() (pydicom.multival.multivalue method)": [[204, "pydicom.multival.MultiValue.count"]], "extend() (pydicom.multival.multivalue method)": [[204, "pydicom.multival.MultiValue.extend"]], "index() (pydicom.multival.multivalue method)": [[204, "pydicom.multival.MultiValue.index"]], "insert() (pydicom.multival.multivalue method)": [[204, "pydicom.multival.MultiValue.insert"]], "pop() (pydicom.multival.multivalue method)": [[204, "pydicom.multival.MultiValue.pop"]], "remove() (pydicom.multival.multivalue method)": [[204, "pydicom.multival.MultiValue.remove"]], "reverse() (pydicom.multival.multivalue method)": [[204, "pydicom.multival.MultiValue.reverse"]], "get_expected_length() (in module pydicom.overlays.numpy_handler)": [[205, "pydicom.overlays.numpy_handler.get_expected_length"]], "get_overlay_array() (in module pydicom.overlays.numpy_handler)": [[205, "pydicom.overlays.numpy_handler.get_overlay_array"]], "is_available() (in module pydicom.overlays.numpy_handler)": [[205, "pydicom.overlays.numpy_handler.is_available"]], "module": [[205, "module-pydicom.overlays.numpy_handler"], [213, "module-pydicom.pixel_data_handlers.gdcm_handler"], [214, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"], [215, "module-pydicom.pixel_data_handlers.numpy_handler"], [216, "module-pydicom.pixel_data_handlers.pillow_handler"], [217, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"], [218, "module-pydicom.pixel_data_handlers.rle_handler"], [219, "module-pydicom.pixel_data_handlers.util"], [524, "module-pydicom.waveforms.numpy_handler"], [526, "module-pydicom.pixel_data_handlers"], [527, "module-pydicom"], [529, "module-pydicom.overlays"], [534, "module-pydicom.waveforms"]], "pydicom.overlays.numpy_handler": [[205, "module-pydicom.overlays.numpy_handler"]], "reshape_overlay_array() (in module pydicom.overlays.numpy_handler)": [[205, "pydicom.overlays.numpy_handler.reshape_overlay_array"]], "apply_color_lut() (in module pydicom.pixel_data_handlers)": [[206, "pydicom.pixel_data_handlers.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers)": [[207, "pydicom.pixel_data_handlers.apply_modality_lut"]], "apply_rescale() (in module pydicom.pixel_data_handlers)": [[208, "pydicom.pixel_data_handlers.apply_rescale"]], "apply_voi() (in module pydicom.pixel_data_handlers)": [[209, "pydicom.pixel_data_handlers.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers)": [[210, "pydicom.pixel_data_handlers.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers)": [[211, "pydicom.pixel_data_handlers.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers)": [[212, "pydicom.pixel_data_handlers.convert_color_space"]], "create_data_element() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[213, "pydicom.pixel_data_handlers.gdcm_handler.create_data_element"]], "create_image() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[213, "pydicom.pixel_data_handlers.gdcm_handler.create_image"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[213, "pydicom.pixel_data_handlers.gdcm_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[213, "pydicom.pixel_data_handlers.gdcm_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[213, "pydicom.pixel_data_handlers.gdcm_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.gdcm_handler": [[213, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[213, "pydicom.pixel_data_handlers.gdcm_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[213, "pydicom.pixel_data_handlers.gdcm_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[214, "pydicom.pixel_data_handlers.jpeg_ls_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[214, "pydicom.pixel_data_handlers.jpeg_ls_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[214, "pydicom.pixel_data_handlers.jpeg_ls_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[214, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[214, "pydicom.pixel_data_handlers.jpeg_ls_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[214, "pydicom.pixel_data_handlers.jpeg_ls_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.numpy_handler)": [[215, "pydicom.pixel_data_handlers.numpy_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.numpy_handler)": [[215, "pydicom.pixel_data_handlers.numpy_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[215, "pydicom.pixel_data_handlers.numpy_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.numpy_handler": [[215, "module-pydicom.pixel_data_handlers.numpy_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[215, "pydicom.pixel_data_handlers.numpy_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.numpy_handler)": [[215, "pydicom.pixel_data_handlers.numpy_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pillow_handler)": [[216, "pydicom.pixel_data_handlers.pillow_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pillow_handler)": [[216, "pydicom.pixel_data_handlers.pillow_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[216, "pydicom.pixel_data_handlers.pillow_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pillow_handler": [[216, "module-pydicom.pixel_data_handlers.pillow_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[216, "pydicom.pixel_data_handlers.pillow_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pillow_handler)": [[216, "pydicom.pixel_data_handlers.pillow_handler.supports_transfer_syntax"]], "as_array() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[217, "pydicom.pixel_data_handlers.pylibjpeg_handler.as_array"]], "generate_frames() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[217, "pydicom.pixel_data_handlers.pylibjpeg_handler.generate_frames"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[217, "pydicom.pixel_data_handlers.pylibjpeg_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[217, "pydicom.pixel_data_handlers.pylibjpeg_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[217, "pydicom.pixel_data_handlers.pylibjpeg_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[217, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[217, "pydicom.pixel_data_handlers.pylibjpeg_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[217, "pydicom.pixel_data_handlers.pylibjpeg_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.rle_handler)": [[218, "pydicom.pixel_data_handlers.rle_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.rle_handler)": [[218, "pydicom.pixel_data_handlers.rle_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[218, "pydicom.pixel_data_handlers.rle_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.rle_handler": [[218, "module-pydicom.pixel_data_handlers.rle_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[218, "pydicom.pixel_data_handlers.rle_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.rle_handler)": [[218, "pydicom.pixel_data_handlers.rle_handler.supports_transfer_syntax"]], "apply_color_lut() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.apply_modality_lut"]], "apply_voi() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.convert_color_space"]], "dtype_corrected_for_endianness() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.dtype_corrected_for_endianness"]], "expand_ybr422() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.expand_ybr422"]], "get_expected_length() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.get_expected_length"]], "get_image_pixel_ids() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.get_image_pixel_ids"]], "get_j2k_parameters() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.get_j2k_parameters"]], "get_nr_frames() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.get_nr_frames"]], "pack_bits() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.pack_bits"]], "pixel_dtype() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.pixel_dtype"]], "pydicom.pixel_data_handlers.util": [[219, "module-pydicom.pixel_data_handlers.util"]], "reshape_pixel_array() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.reshape_pixel_array"]], "unpack_bits() (in module pydicom.pixel_data_handlers.util)": [[219, "pydicom.pixel_data_handlers.util.unpack_bits"]], "as_pixel_options() (in module pydicom.pixels)": [[220, "pydicom.pixels.as_pixel_options"]], "decoderunner (class in pydicom.pixels.decoders.base)": [[221, "pydicom.pixels.decoders.base.DecodeRunner"]], "__init__() (pydicom.pixels.decoders.base.decoderunner method)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.__init__"]], "bits_allocated (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.bits_allocated"]], "bits_stored (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.bits_stored"]], "columns (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.columns"]], "decode() (pydicom.pixels.decoders.base.decoderunner method)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.decode"]], "del_option() (pydicom.pixels.decoders.base.decoderunner method)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.del_option"]], "extended_offsets (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.extended_offsets"]], "frame_length() (pydicom.pixels.decoders.base.decoderunner method)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.frame_length"]], "get_data() (pydicom.pixels.decoders.base.decoderunner method)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.get_data"]], "get_option() (pydicom.pixels.decoders.base.decoderunner method)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.get_option"]], "is_array (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.is_array"]], "is_binary (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.is_binary"]], "is_buffer (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.is_buffer"]], "is_dataset (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.is_dataset"]], "iter_decode() (pydicom.pixels.decoders.base.decoderunner method)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.iter_decode"]], "number_of_frames (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.number_of_frames"]], "options (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.options"]], "photometric_interpretation (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.photometric_interpretation"]], "pixel_dtype (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.pixel_dtype"]], "pixel_keyword (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.pixel_keyword"]], "pixel_representation (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.pixel_representation"]], "planar_configuration (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.planar_configuration"]], "process() (pydicom.pixels.decoders.base.decoderunner method)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.process"]], "reshape() (pydicom.pixels.decoders.base.decoderunner method)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.reshape"]], "rows (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.rows"]], "samples_per_pixel (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.samples_per_pixel"]], "set_decoders() (pydicom.pixels.decoders.base.decoderunner method)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.set_decoders"]], "set_option() (pydicom.pixels.decoders.base.decoderunner method)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.set_option"]], "set_options() (pydicom.pixels.decoders.base.decoderunner method)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.set_options"]], "set_source() (pydicom.pixels.decoders.base.decoderunner method)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.set_source"]], "src (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.src"]], "transfer_syntax (pydicom.pixels.decoders.base.decoderunner property)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.transfer_syntax"]], "validate() (pydicom.pixels.decoders.base.decoderunner method)": [[221, "pydicom.pixels.decoders.base.DecodeRunner.validate"]], "decoder (class in pydicom.pixels.decoders.base)": [[222, "pydicom.pixels.decoders.base.Decoder"]], "uid (pydicom.pixels.decoders.base.decoder property)": [[222, "pydicom.pixels.decoders.base.Decoder.UID"]], "__init__() (pydicom.pixels.decoders.base.decoder method)": [[222, "pydicom.pixels.decoders.base.Decoder.__init__"]], "add_plugin() (pydicom.pixels.decoders.base.decoder method)": [[222, "pydicom.pixels.decoders.base.Decoder.add_plugin"]], "add_plugins() (pydicom.pixels.decoders.base.decoder method)": [[222, "pydicom.pixels.decoders.base.Decoder.add_plugins"]], "as_array() (pydicom.pixels.decoders.base.decoder method)": [[222, "pydicom.pixels.decoders.base.Decoder.as_array"]], "as_buffer() (pydicom.pixels.decoders.base.decoder method)": [[222, "pydicom.pixels.decoders.base.Decoder.as_buffer"]], "is_available (pydicom.pixels.decoders.base.decoder property)": [[222, "pydicom.pixels.decoders.base.Decoder.is_available"]], "is_encapsulated (pydicom.pixels.decoders.base.decoder property)": [[222, "pydicom.pixels.decoders.base.Decoder.is_encapsulated"]], "is_native (pydicom.pixels.decoders.base.decoder property)": [[222, "pydicom.pixels.decoders.base.Decoder.is_native"]], "iter_array() (pydicom.pixels.decoders.base.decoder method)": [[222, "pydicom.pixels.decoders.base.Decoder.iter_array"]], "iter_buffer() (pydicom.pixels.decoders.base.decoder method)": [[222, "pydicom.pixels.decoders.base.Decoder.iter_buffer"]], "missing_dependencies (pydicom.pixels.decoders.base.decoder property)": [[222, "pydicom.pixels.decoders.base.Decoder.missing_dependencies"]], "remove_plugin() (pydicom.pixels.decoders.base.decoder method)": [[222, "pydicom.pixels.decoders.base.Decoder.remove_plugin"]], "deflatedexplicitvrlittleendiandecoder (in module pydicom.pixels.decoders.base)": [[223, "pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder"]], "explicitvrbigendiandecoder (in module pydicom.pixels.decoders.base)": [[224, "pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder"]], "explicitvrlittleendiandecoder (in module pydicom.pixels.decoders.base)": [[225, "pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder"]], "htj2kdecoder (in module pydicom.pixels.decoders.base)": [[226, "pydicom.pixels.decoders.base.HTJ2KDecoder"]], "htj2klosslessdecoder (in module pydicom.pixels.decoders.base)": [[227, "pydicom.pixels.decoders.base.HTJ2KLosslessDecoder"]], "htj2klosslessrpcldecoder (in module pydicom.pixels.decoders.base)": [[228, "pydicom.pixels.decoders.base.HTJ2KLosslessRPCLDecoder"]], "implicitvrlittleendiandecoder (in module pydicom.pixels.decoders.base)": [[229, "pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder"]], "jpeg2000decoder (in module pydicom.pixels.decoders.base)": [[230, "pydicom.pixels.decoders.base.JPEG2000Decoder"]], "jpeg2000losslessdecoder (in module pydicom.pixels.decoders.base)": [[231, "pydicom.pixels.decoders.base.JPEG2000LosslessDecoder"]], "jpegbaseline8bitdecoder (in module pydicom.pixels.decoders.base)": [[232, "pydicom.pixels.decoders.base.JPEGBaseline8BitDecoder"]], "jpegextended12bitdecoder (in module pydicom.pixels.decoders.base)": [[233, "pydicom.pixels.decoders.base.JPEGExtended12BitDecoder"]], "jpeglslosslessdecoder (in module pydicom.pixels.decoders.base)": [[234, "pydicom.pixels.decoders.base.JPEGLSLosslessDecoder"]], "jpeglsnearlosslessdecoder (in module pydicom.pixels.decoders.base)": [[235, "pydicom.pixels.decoders.base.JPEGLSNearLosslessDecoder"]], "jpeglosslessdecoder (in module pydicom.pixels.decoders.base)": [[236, "pydicom.pixels.decoders.base.JPEGLosslessDecoder"]], "jpeglosslesssv1decoder (in module pydicom.pixels.decoders.base)": [[237, "pydicom.pixels.decoders.base.JPEGLosslessSV1Decoder"]], "rlelosslessdecoder (in module pydicom.pixels.decoders.base)": [[238, "pydicom.pixels.decoders.base.RLELosslessDecoder"]], "encoderunner (class in pydicom.pixels.encoders.base)": [[239, "pydicom.pixels.encoders.base.EncodeRunner"]], "__init__() (pydicom.pixels.encoders.base.encoderunner method)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.__init__"]], "bits_allocated (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.bits_allocated"]], "bits_stored (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.bits_stored"]], "columns (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.columns"]], "del_option() (pydicom.pixels.encoders.base.encoderunner method)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.del_option"]], "encode() (pydicom.pixels.encoders.base.encoderunner method)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.encode"]], "extended_offsets (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.extended_offsets"]], "frame_length() (pydicom.pixels.encoders.base.encoderunner method)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.frame_length"]], "get_frame() (pydicom.pixels.encoders.base.encoderunner method)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.get_frame"]], "get_option() (pydicom.pixels.encoders.base.encoderunner method)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.get_option"]], "is_array (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.is_array"]], "is_binary (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.is_binary"]], "is_buffer (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.is_buffer"]], "is_dataset (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.is_dataset"]], "number_of_frames (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.number_of_frames"]], "options (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.options"]], "photometric_interpretation (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.photometric_interpretation"]], "pixel_keyword (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.pixel_keyword"]], "pixel_representation (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.pixel_representation"]], "planar_configuration (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.planar_configuration"]], "rows (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.rows"]], "samples_per_pixel (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.samples_per_pixel"]], "set_encoders() (pydicom.pixels.encoders.base.encoderunner method)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.set_encoders"]], "set_option() (pydicom.pixels.encoders.base.encoderunner method)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.set_option"]], "set_options() (pydicom.pixels.encoders.base.encoderunner method)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.set_options"]], "set_source() (pydicom.pixels.encoders.base.encoderunner method)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.set_source"]], "src (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.src"]], "transfer_syntax (pydicom.pixels.encoders.base.encoderunner property)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.transfer_syntax"]], "validate() (pydicom.pixels.encoders.base.encoderunner method)": [[239, "pydicom.pixels.encoders.base.EncodeRunner.validate"]], "encoder (class in pydicom.pixels.encoders.base)": [[240, "pydicom.pixels.encoders.base.Encoder"]], "uid (pydicom.pixels.encoders.base.encoder property)": [[240, "pydicom.pixels.encoders.base.Encoder.UID"]], "__init__() (pydicom.pixels.encoders.base.encoder method)": [[240, "pydicom.pixels.encoders.base.Encoder.__init__"]], "add_plugin() (pydicom.pixels.encoders.base.encoder method)": [[240, "pydicom.pixels.encoders.base.Encoder.add_plugin"]], "add_plugins() (pydicom.pixels.encoders.base.encoder method)": [[240, "pydicom.pixels.encoders.base.Encoder.add_plugins"]], "encode() (pydicom.pixels.encoders.base.encoder method)": [[240, "pydicom.pixels.encoders.base.Encoder.encode"]], "is_available (pydicom.pixels.encoders.base.encoder property)": [[240, "pydicom.pixels.encoders.base.Encoder.is_available"]], "is_encapsulated (pydicom.pixels.encoders.base.encoder property)": [[240, "pydicom.pixels.encoders.base.Encoder.is_encapsulated"]], "is_native (pydicom.pixels.encoders.base.encoder property)": [[240, "pydicom.pixels.encoders.base.Encoder.is_native"]], "iter_encode() (pydicom.pixels.encoders.base.encoder method)": [[240, "pydicom.pixels.encoders.base.Encoder.iter_encode"]], "missing_dependencies (pydicom.pixels.encoders.base.encoder property)": [[240, "pydicom.pixels.encoders.base.Encoder.missing_dependencies"]], "remove_plugin() (pydicom.pixels.encoders.base.encoder method)": [[240, "pydicom.pixels.encoders.base.Encoder.remove_plugin"]], "jpeglslosslessencoder (in module pydicom.pixels.encoders.base)": [[241, "pydicom.pixels.encoders.base.JPEGLSLosslessEncoder"]], "jpeglsnearlosslessencoder (in module pydicom.pixels.encoders.base)": [[242, "pydicom.pixels.encoders.base.JPEGLSNearLosslessEncoder"]], "rlelosslessencoder (in module pydicom.pixels.encoders.base)": [[243, "pydicom.pixels.encoders.base.RLELosslessEncoder"]], "get_decoder() (in module pydicom.pixels)": [[244, "pydicom.pixels.get_decoder"]], "get_encoder() (in module pydicom.pixels)": [[245, "pydicom.pixels.get_encoder"]], "iter_pixels() (in module pydicom.pixels)": [[246, "pydicom.pixels.iter_pixels"]], "pixel_array() (in module pydicom.pixels)": [[247, "pydicom.pixels.pixel_array"]], "sequence (class in pydicom.sequence)": [[248, "pydicom.sequence.Sequence"]], "__init__() (pydicom.sequence.sequence method)": [[248, "pydicom.sequence.Sequence.__init__"]], "append() (pydicom.sequence.sequence method)": [[248, "pydicom.sequence.Sequence.append"]], "clear() (pydicom.sequence.sequence method)": [[248, "pydicom.sequence.Sequence.clear"]], "count() (pydicom.sequence.sequence method)": [[248, "pydicom.sequence.Sequence.count"]], "extend() (pydicom.sequence.sequence method)": [[248, "pydicom.sequence.Sequence.extend"]], "index() (pydicom.sequence.sequence method)": [[248, "pydicom.sequence.Sequence.index"]], "insert() (pydicom.sequence.sequence method)": [[248, "pydicom.sequence.Sequence.insert"]], "pop() (pydicom.sequence.sequence method)": [[248, "pydicom.sequence.Sequence.pop"]], "remove() (pydicom.sequence.sequence method)": [[248, "pydicom.sequence.Sequence.remove"]], "reverse() (pydicom.sequence.sequence method)": [[248, "pydicom.sequence.Sequence.reverse"]], "basetag (class in pydicom.tag)": [[249, "pydicom.tag.BaseTag"]], "__init__() (pydicom.tag.basetag method)": [[249, "pydicom.tag.BaseTag.__init__"]], "as_integer_ratio() (pydicom.tag.basetag method)": [[249, "pydicom.tag.BaseTag.as_integer_ratio"]], "bit_count() (pydicom.tag.basetag method)": [[249, "pydicom.tag.BaseTag.bit_count"]], "bit_length() (pydicom.tag.basetag method)": [[249, "pydicom.tag.BaseTag.bit_length"]], "conjugate() (pydicom.tag.basetag method)": [[249, "pydicom.tag.BaseTag.conjugate"]], "denominator (pydicom.tag.basetag attribute)": [[249, "pydicom.tag.BaseTag.denominator"]], "elem (pydicom.tag.basetag property)": [[249, "pydicom.tag.BaseTag.elem"]], "element (pydicom.tag.basetag property)": [[249, "pydicom.tag.BaseTag.element"]], "from_bytes() (pydicom.tag.basetag method)": [[249, "pydicom.tag.BaseTag.from_bytes"]], "group (pydicom.tag.basetag property)": [[249, "pydicom.tag.BaseTag.group"]], "imag (pydicom.tag.basetag attribute)": [[249, "pydicom.tag.BaseTag.imag"]], "is_private (pydicom.tag.basetag property)": [[249, "pydicom.tag.BaseTag.is_private"]], "is_private_creator (pydicom.tag.basetag property)": [[249, "pydicom.tag.BaseTag.is_private_creator"]], "json_key (pydicom.tag.basetag property)": [[249, "pydicom.tag.BaseTag.json_key"]], "numerator (pydicom.tag.basetag attribute)": [[249, "pydicom.tag.BaseTag.numerator"]], "private_creator (pydicom.tag.basetag property)": [[249, "pydicom.tag.BaseTag.private_creator"]], "real (pydicom.tag.basetag attribute)": [[249, "pydicom.tag.BaseTag.real"]], "to_bytes() (pydicom.tag.basetag method)": [[249, "pydicom.tag.BaseTag.to_bytes"]], "tag() (in module pydicom.tag)": [[250, "pydicom.tag.Tag"]], "tupletag() (in module pydicom.tag)": [[251, "pydicom.tag.TupleTag"]], "tag_in_exception() (in module pydicom.tag)": [[252, "pydicom.tag.tag_in_exception"]], "acquisitioncontextsrstorage (in module pydicom.uid)": [[253, "pydicom.uid.AcquisitionContextSRStorage"]], "advancedblendingpresentationstatestorage (in module pydicom.uid)": [[254, "pydicom.uid.AdvancedBlendingPresentationStateStorage"]], "alltransfersyntaxes (in module pydicom.uid)": [[255, "pydicom.uid.AllTransferSyntaxes"]], "ambulatoryecgwaveformstorage (in module pydicom.uid)": [[256, "pydicom.uid.AmbulatoryECGWaveformStorage"]], "arterialpulsewaveformstorage (in module pydicom.uid)": [[257, "pydicom.uid.ArterialPulseWaveformStorage"]], "autorefractionmeasurementsstorage (in module pydicom.uid)": [[258, "pydicom.uid.AutorefractionMeasurementsStorage"]], "basicstructureddisplaystorage (in module pydicom.uid)": [[259, "pydicom.uid.BasicStructuredDisplayStorage"]], "basictextsrstorage (in module pydicom.uid)": [[260, "pydicom.uid.BasicTextSRStorage"]], "basicvoiceaudiowaveformstorage (in module pydicom.uid)": [[261, "pydicom.uid.BasicVoiceAudioWaveformStorage"]], "blendingsoftcopypresentationstatestorage (in module pydicom.uid)": [[262, "pydicom.uid.BlendingSoftcopyPresentationStateStorage"]], "bodypositionwaveformstorage (in module pydicom.uid)": [[263, "pydicom.uid.BodyPositionWaveformStorage"]], "breastprojectionxrayimagestorageforpresentation (in module pydicom.uid)": [[264, "pydicom.uid.BreastProjectionXRayImageStorageForPresentation"]], "breastprojectionxrayimagestorageforprocessing (in module pydicom.uid)": [[265, "pydicom.uid.BreastProjectionXRayImageStorageForProcessing"]], "breasttomosynthesisimagestorage (in module pydicom.uid)": [[266, "pydicom.uid.BreastTomosynthesisImageStorage"]], "carmphotonelectronradiationrecordstorage (in module pydicom.uid)": [[267, "pydicom.uid.CArmPhotonElectronRadiationRecordStorage"]], "carmphotonelectronradiationstorage (in module pydicom.uid)": [[268, "pydicom.uid.CArmPhotonElectronRadiationStorage"]], "ctdefinedprocedureprotocolstorage (in module pydicom.uid)": [[269, "pydicom.uid.CTDefinedProcedureProtocolStorage"]], "ctimagestorage (in module pydicom.uid)": [[270, "pydicom.uid.CTImageStorage"]], "ctperformedprocedureprotocolstorage (in module pydicom.uid)": [[271, "pydicom.uid.CTPerformedProcedureProtocolStorage"]], "cardiacelectrophysiologywaveformstorage (in module pydicom.uid)": [[272, "pydicom.uid.CardiacElectrophysiologyWaveformStorage"]], "chestcadsrstorage (in module pydicom.uid)": [[273, "pydicom.uid.ChestCADSRStorage"]], "coloncadsrstorage (in module pydicom.uid)": [[274, "pydicom.uid.ColonCADSRStorage"]], "colorpalettestorage (in module pydicom.uid)": [[275, "pydicom.uid.ColorPaletteStorage"]], "colorsoftcopypresentationstatestorage (in module pydicom.uid)": [[276, "pydicom.uid.ColorSoftcopyPresentationStateStorage"]], "compositingplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[277, "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage"]], "comprehensive3dsrstorage (in module pydicom.uid)": [[278, "pydicom.uid.Comprehensive3DSRStorage"]], "comprehensivesrstorage (in module pydicom.uid)": [[279, "pydicom.uid.ComprehensiveSRStorage"]], "computedradiographyimagestorage (in module pydicom.uid)": [[280, "pydicom.uid.ComputedRadiographyImageStorage"]], "confocalmicroscopyimagestorage (in module pydicom.uid)": [[281, "pydicom.uid.ConfocalMicroscopyImageStorage"]], "confocalmicroscopytiledpyramidalimagestorage (in module pydicom.uid)": [[282, "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage"]], "contentassessmentresultsstorage (in module pydicom.uid)": [[283, "pydicom.uid.ContentAssessmentResultsStorage"]], "cornealtopographymapstorage (in module pydicom.uid)": [[284, "pydicom.uid.CornealTopographyMapStorage"]], "dicos2daitstorage (in module pydicom.uid)": [[285, "pydicom.uid.DICOS2DAITStorage"]], "dicos3daitstorage (in module pydicom.uid)": [[286, "pydicom.uid.DICOS3DAITStorage"]], "dicosctimagestorage (in module pydicom.uid)": [[287, "pydicom.uid.DICOSCTImageStorage"]], "dicosdigitalxrayimagestorageforpresentation (in module pydicom.uid)": [[288, "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation"]], "dicosdigitalxrayimagestorageforprocessing (in module pydicom.uid)": [[289, "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing"]], "dicosquadrupoleresonancestorage (in module pydicom.uid)": [[290, "pydicom.uid.DICOSQuadrupoleResonanceStorage"]], "dicosthreatdetectionreportstorage (in module pydicom.uid)": [[291, "pydicom.uid.DICOSThreatDetectionReportStorage"]], "deflatedexplicitvrlittleendian (in module pydicom.uid)": [[292, "pydicom.uid.DeflatedExplicitVRLittleEndian"]], "deformablespatialregistrationstorage (in module pydicom.uid)": [[293, "pydicom.uid.DeformableSpatialRegistrationStorage"]], "dermoscopicphotographyimagestorage (in module pydicom.uid)": [[294, "pydicom.uid.DermoscopicPhotographyImageStorage"]], "digitalintraoralxrayimagestorageforpresentation (in module pydicom.uid)": [[295, "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation"]], "digitalintraoralxrayimagestorageforprocessing (in module pydicom.uid)": [[296, "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing"]], "digitalmammographyxrayimagestorageforpresentation (in module pydicom.uid)": [[297, "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation"]], "digitalmammographyxrayimagestorageforprocessing (in module pydicom.uid)": [[298, "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing"]], "digitalxrayimagestorageforpresentation (in module pydicom.uid)": [[299, "pydicom.uid.DigitalXRayImageStorageForPresentation"]], "digitalxrayimagestorageforprocessing (in module pydicom.uid)": [[300, "pydicom.uid.DigitalXRayImageStorageForProcessing"]], "eddycurrentimagestorage (in module pydicom.uid)": [[301, "pydicom.uid.EddyCurrentImageStorage"]], "eddycurrentmultiframeimagestorage (in module pydicom.uid)": [[302, "pydicom.uid.EddyCurrentMultiFrameImageStorage"]], "electromyogramwaveformstorage (in module pydicom.uid)": [[303, "pydicom.uid.ElectromyogramWaveformStorage"]], "electrooculogramwaveformstorage (in module pydicom.uid)": [[304, "pydicom.uid.ElectrooculogramWaveformStorage"]], "encapsulatedcdastorage (in module pydicom.uid)": [[305, "pydicom.uid.EncapsulatedCDAStorage"]], "encapsulatedmtlstorage (in module pydicom.uid)": [[306, "pydicom.uid.EncapsulatedMTLStorage"]], "encapsulatedobjstorage (in module pydicom.uid)": [[307, "pydicom.uid.EncapsulatedOBJStorage"]], "encapsulatedpdfstorage (in module pydicom.uid)": [[308, "pydicom.uid.EncapsulatedPDFStorage"]], "encapsulatedstlstorage (in module pydicom.uid)": [[309, "pydicom.uid.EncapsulatedSTLStorage"]], "enhancedctimagestorage (in module pydicom.uid)": [[310, "pydicom.uid.EnhancedCTImageStorage"]], "enhancedcontinuousrtimagestorage (in module pydicom.uid)": [[311, "pydicom.uid.EnhancedContinuousRTImageStorage"]], "enhancedmrcolorimagestorage (in module pydicom.uid)": [[312, "pydicom.uid.EnhancedMRColorImageStorage"]], "enhancedmrimagestorage (in module pydicom.uid)": [[313, "pydicom.uid.EnhancedMRImageStorage"]], "enhancedpetimagestorage (in module pydicom.uid)": [[314, "pydicom.uid.EnhancedPETImageStorage"]], "enhancedrtimagestorage (in module pydicom.uid)": [[315, "pydicom.uid.EnhancedRTImageStorage"]], "enhancedsrstorage (in module pydicom.uid)": [[316, "pydicom.uid.EnhancedSRStorage"]], "enhancedusvolumestorage (in module pydicom.uid)": [[317, "pydicom.uid.EnhancedUSVolumeStorage"]], "enhancedxaimagestorage (in module pydicom.uid)": [[318, "pydicom.uid.EnhancedXAImageStorage"]], "enhancedxrfimagestorage (in module pydicom.uid)": [[319, "pydicom.uid.EnhancedXRFImageStorage"]], "enhancedxrayradiationdosesrstorage (in module pydicom.uid)": [[320, "pydicom.uid.EnhancedXRayRadiationDoseSRStorage"]], "explicitvrbigendian (in module pydicom.uid)": [[321, "pydicom.uid.ExplicitVRBigEndian"]], "explicitvrlittleendian (in module pydicom.uid)": [[322, "pydicom.uid.ExplicitVRLittleEndian"]], "extensiblesrstorage (in module pydicom.uid)": [[323, "pydicom.uid.ExtensibleSRStorage"]], "general32bitecgwaveformstorage (in module pydicom.uid)": [[324, "pydicom.uid.General32bitECGWaveformStorage"]], "generalaudiowaveformstorage (in module pydicom.uid)": [[325, "pydicom.uid.GeneralAudioWaveformStorage"]], "generalecgwaveformstorage (in module pydicom.uid)": [[326, "pydicom.uid.GeneralECGWaveformStorage"]], "genericimplanttemplatestorage (in module pydicom.uid)": [[327, "pydicom.uid.GenericImplantTemplateStorage"]], "grayscaleplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[328, "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage"]], "grayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[329, "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage"]], "hevcm10p51 (in module pydicom.uid)": [[330, "pydicom.uid.HEVCM10P51"]], "hevcmp51 (in module pydicom.uid)": [[331, "pydicom.uid.HEVCMP51"]], "htj2k (in module pydicom.uid)": [[332, "pydicom.uid.HTJ2K"]], "htj2klossless (in module pydicom.uid)": [[333, "pydicom.uid.HTJ2KLossless"]], "htj2klosslessrpcl (in module pydicom.uid)": [[334, "pydicom.uid.HTJ2KLosslessRPCL"]], "hangingprotocolstorage (in module pydicom.uid)": [[335, "pydicom.uid.HangingProtocolStorage"]], "hemodynamicwaveformstorage (in module pydicom.uid)": [[336, "pydicom.uid.HemodynamicWaveformStorage"]], "implantassemblytemplatestorage (in module pydicom.uid)": [[337, "pydicom.uid.ImplantAssemblyTemplateStorage"]], "implanttemplategroupstorage (in module pydicom.uid)": [[338, "pydicom.uid.ImplantTemplateGroupStorage"]], "implantationplansrstorage (in module pydicom.uid)": [[339, "pydicom.uid.ImplantationPlanSRStorage"]], "implicitvrlittleendian (in module pydicom.uid)": [[340, "pydicom.uid.ImplicitVRLittleEndian"]], "intraocularlenscalculationsstorage (in module pydicom.uid)": [[341, "pydicom.uid.IntraocularLensCalculationsStorage"]], "intravascularopticalcoherencetomographyimagestorageforpresentation (in module pydicom.uid)": [[342, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation"]], "intravascularopticalcoherencetomographyimagestorageforprocessing (in module pydicom.uid)": [[343, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing"]], "inventorystorage (in module pydicom.uid)": [[344, "pydicom.uid.InventoryStorage"]], "jpeg2000 (in module pydicom.uid)": [[345, "pydicom.uid.JPEG2000"]], "jpeg2000lossless (in module pydicom.uid)": [[346, "pydicom.uid.JPEG2000Lossless"]], "jpeg2000mc (in module pydicom.uid)": [[347, "pydicom.uid.JPEG2000MC"]], "jpeg2000mclossless (in module pydicom.uid)": [[348, "pydicom.uid.JPEG2000MCLossless"]], "jpeg2000transfersyntaxes (in module pydicom.uid)": [[349, "pydicom.uid.JPEG2000TransferSyntaxes"]], "jpegbaseline8bit (in module pydicom.uid)": [[350, "pydicom.uid.JPEGBaseline8Bit"]], "jpegextended12bit (in module pydicom.uid)": [[351, "pydicom.uid.JPEGExtended12Bit"]], "jpeglslossless (in module pydicom.uid)": [[352, "pydicom.uid.JPEGLSLossless"]], "jpeglsnearlossless (in module pydicom.uid)": [[353, "pydicom.uid.JPEGLSNearLossless"]], "jpeglstransfersyntaxes (in module pydicom.uid)": [[354, "pydicom.uid.JPEGLSTransferSyntaxes"]], "jpeglossless (in module pydicom.uid)": [[355, "pydicom.uid.JPEGLossless"]], "jpeglosslesssv1 (in module pydicom.uid)": [[356, "pydicom.uid.JPEGLosslessSV1"]], "jpegtransfersyntaxes (in module pydicom.uid)": [[357, "pydicom.uid.JPEGTransferSyntaxes"]], "jpiphtj2kreferenced (in module pydicom.uid)": [[358, "pydicom.uid.JPIPHTJ2KReferenced"]], "jpiphtj2kreferenceddeflate (in module pydicom.uid)": [[359, "pydicom.uid.JPIPHTJ2KReferencedDeflate"]], "keratometrymeasurementsstorage (in module pydicom.uid)": [[360, "pydicom.uid.KeratometryMeasurementsStorage"]], "keyobjectselectiondocumentstorage (in module pydicom.uid)": [[361, "pydicom.uid.KeyObjectSelectionDocumentStorage"]], "legacyconvertedenhancedctimagestorage (in module pydicom.uid)": [[362, "pydicom.uid.LegacyConvertedEnhancedCTImageStorage"]], "legacyconvertedenhancedmrimagestorage (in module pydicom.uid)": [[363, "pydicom.uid.LegacyConvertedEnhancedMRImageStorage"]], "legacyconvertedenhancedpetimagestorage (in module pydicom.uid)": [[364, "pydicom.uid.LegacyConvertedEnhancedPETImageStorage"]], "lensometrymeasurementsstorage (in module pydicom.uid)": [[365, "pydicom.uid.LensometryMeasurementsStorage"]], "mpeg2mphl (in module pydicom.uid)": [[366, "pydicom.uid.MPEG2MPHL"]], "mpeg2mphlf (in module pydicom.uid)": [[367, "pydicom.uid.MPEG2MPHLF"]], "mpeg2mpml (in module pydicom.uid)": [[368, "pydicom.uid.MPEG2MPML"]], "mpeg2mpmlf (in module pydicom.uid)": [[369, "pydicom.uid.MPEG2MPMLF"]], "mpeg4hp41 (in module pydicom.uid)": [[370, "pydicom.uid.MPEG4HP41"]], "mpeg4hp41bd (in module pydicom.uid)": [[371, "pydicom.uid.MPEG4HP41BD"]], "mpeg4hp41bdf (in module pydicom.uid)": [[372, "pydicom.uid.MPEG4HP41BDF"]], "mpeg4hp41f (in module pydicom.uid)": [[373, "pydicom.uid.MPEG4HP41F"]], "mpeg4hp422d (in module pydicom.uid)": [[374, "pydicom.uid.MPEG4HP422D"]], "mpeg4hp422df (in module pydicom.uid)": [[375, "pydicom.uid.MPEG4HP422DF"]], "mpeg4hp423d (in module pydicom.uid)": [[376, "pydicom.uid.MPEG4HP423D"]], "mpeg4hp423df (in module pydicom.uid)": [[377, "pydicom.uid.MPEG4HP423DF"]], "mpeg4hp42stereo (in module pydicom.uid)": [[378, "pydicom.uid.MPEG4HP42STEREO"]], "mpeg4hp42stereof (in module pydicom.uid)": [[379, "pydicom.uid.MPEG4HP42STEREOF"]], "mpegtransfersyntaxes (in module pydicom.uid)": [[380, "pydicom.uid.MPEGTransferSyntaxes"]], "mrimagestorage (in module pydicom.uid)": [[381, "pydicom.uid.MRImageStorage"]], "mrspectroscopystorage (in module pydicom.uid)": [[382, "pydicom.uid.MRSpectroscopyStorage"]], "maculargridthicknessandvolumereportstorage (in module pydicom.uid)": [[383, "pydicom.uid.MacularGridThicknessAndVolumeReportStorage"]], "mammographycadsrstorage (in module pydicom.uid)": [[384, "pydicom.uid.MammographyCADSRStorage"]], "mediastoragedirectorystorage (in module pydicom.uid)": [[385, "pydicom.uid.MediaStorageDirectoryStorage"]], "microscopybulksimpleannotationsstorage (in module pydicom.uid)": [[386, "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage"]], "multiframegrayscalebytesecondarycaptureimagestorage (in module pydicom.uid)": [[387, "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage"]], "multiframegrayscalewordsecondarycaptureimagestorage (in module pydicom.uid)": [[388, "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage"]], "multiframesinglebitsecondarycaptureimagestorage (in module pydicom.uid)": [[389, "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage"]], "multiframetruecolorsecondarycaptureimagestorage (in module pydicom.uid)": [[390, "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage"]], "multichannelrespiratorywaveformstorage (in module pydicom.uid)": [[391, "pydicom.uid.MultichannelRespiratoryWaveformStorage"]], "multiplevolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[392, "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage"]], "nuclearmedicineimagestorage (in module pydicom.uid)": [[393, "pydicom.uid.NuclearMedicineImageStorage"]], "ophthalmicaxialmeasurementsstorage (in module pydicom.uid)": [[394, "pydicom.uid.OphthalmicAxialMeasurementsStorage"]], "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage (in module pydicom.uid)": [[395, "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"]], "ophthalmicopticalcoherencetomographyenfaceimagestorage (in module pydicom.uid)": [[396, "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"]], "ophthalmicphotography16bitimagestorage (in module pydicom.uid)": [[397, "pydicom.uid.OphthalmicPhotography16BitImageStorage"]], "ophthalmicphotography8bitimagestorage (in module pydicom.uid)": [[398, "pydicom.uid.OphthalmicPhotography8BitImageStorage"]], "ophthalmicthicknessmapstorage (in module pydicom.uid)": [[399, "pydicom.uid.OphthalmicThicknessMapStorage"]], "ophthalmictomographyimagestorage (in module pydicom.uid)": [[400, "pydicom.uid.OphthalmicTomographyImageStorage"]], "ophthalmicvisualfieldstaticperimetrymeasurementsstorage (in module pydicom.uid)": [[401, "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"]], "pydicom_implementation_uid (in module pydicom.uid)": [[402, "pydicom.uid.PYDICOM_IMPLEMENTATION_UID"]], "pydicom_root_uid (in module pydicom.uid)": [[403, "pydicom.uid.PYDICOM_ROOT_UID"]], "parametricmapstorage (in module pydicom.uid)": [[404, "pydicom.uid.ParametricMapStorage"]], "patientradiationdosesrstorage (in module pydicom.uid)": [[405, "pydicom.uid.PatientRadiationDoseSRStorage"]], "performedimagingagentadministrationsrstorage (in module pydicom.uid)": [[406, "pydicom.uid.PerformedImagingAgentAdministrationSRStorage"]], "photoacousticimagestorage (in module pydicom.uid)": [[407, "pydicom.uid.PhotoacousticImageStorage"]], "plannedimagingagentadministrationsrstorage (in module pydicom.uid)": [[408, "pydicom.uid.PlannedImagingAgentAdministrationSRStorage"]], "positronemissiontomographyimagestorage (in module pydicom.uid)": [[409, "pydicom.uid.PositronEmissionTomographyImageStorage"]], "privatetransfersyntaxes (in module pydicom.uid)": [[410, "pydicom.uid.PrivateTransferSyntaxes"]], "procedurelogstorage (in module pydicom.uid)": [[411, "pydicom.uid.ProcedureLogStorage"]], "protocolapprovalstorage (in module pydicom.uid)": [[412, "pydicom.uid.ProtocolApprovalStorage"]], "pseudocolorsoftcopypresentationstatestorage (in module pydicom.uid)": [[413, "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage"]], "re_valid_uid (in module pydicom.uid)": [[414, "pydicom.uid.RE_VALID_UID"]], "re_valid_uid_prefix (in module pydicom.uid)": [[415, "pydicom.uid.RE_VALID_UID_PREFIX"]], "rlelossless (in module pydicom.uid)": [[416, "pydicom.uid.RLELossless"]], "rletransfersyntaxes (in module pydicom.uid)": [[417, "pydicom.uid.RLETransferSyntaxes"]], "rtbeamsdeliveryinstructionstorage (in module pydicom.uid)": [[418, "pydicom.uid.RTBeamsDeliveryInstructionStorage"]], "rtbeamstreatmentrecordstorage (in module pydicom.uid)": [[419, "pydicom.uid.RTBeamsTreatmentRecordStorage"]], "rtbrachyapplicationsetupdeliveryinstructionstorage (in module pydicom.uid)": [[420, "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage"]], "rtbrachytreatmentrecordstorage (in module pydicom.uid)": [[421, "pydicom.uid.RTBrachyTreatmentRecordStorage"]], "rtdosestorage (in module pydicom.uid)": [[422, "pydicom.uid.RTDoseStorage"]], "rtimagestorage (in module pydicom.uid)": [[423, "pydicom.uid.RTImageStorage"]], "rtionbeamstreatmentrecordstorage (in module pydicom.uid)": [[424, "pydicom.uid.RTIonBeamsTreatmentRecordStorage"]], "rtionplanstorage (in module pydicom.uid)": [[425, "pydicom.uid.RTIonPlanStorage"]], "rtpatientpositionacquisitioninstructionstorage (in module pydicom.uid)": [[426, "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage"]], "rtphysicianintentstorage (in module pydicom.uid)": [[427, "pydicom.uid.RTPhysicianIntentStorage"]], "rtplanstorage (in module pydicom.uid)": [[428, "pydicom.uid.RTPlanStorage"]], "rtradiationrecordsetstorage (in module pydicom.uid)": [[429, "pydicom.uid.RTRadiationRecordSetStorage"]], "rtradiationsalvagerecordstorage (in module pydicom.uid)": [[430, "pydicom.uid.RTRadiationSalvageRecordStorage"]], "rtradiationsetdeliveryinstructionstorage (in module pydicom.uid)": [[431, "pydicom.uid.RTRadiationSetDeliveryInstructionStorage"]], "rtradiationsetstorage (in module pydicom.uid)": [[432, "pydicom.uid.RTRadiationSetStorage"]], "rtsegmentannotationstorage (in module pydicom.uid)": [[433, "pydicom.uid.RTSegmentAnnotationStorage"]], "rtstructuresetstorage (in module pydicom.uid)": [[434, "pydicom.uid.RTStructureSetStorage"]], "rttreatmentpreparationstorage (in module pydicom.uid)": [[435, "pydicom.uid.RTTreatmentPreparationStorage"]], "rttreatmentsummaryrecordstorage (in module pydicom.uid)": [[436, "pydicom.uid.RTTreatmentSummaryRecordStorage"]], "radiopharmaceuticalradiationdosesrstorage (in module pydicom.uid)": [[437, "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage"]], "rawdatastorage (in module pydicom.uid)": [[438, "pydicom.uid.RawDataStorage"]], "realworldvaluemappingstorage (in module pydicom.uid)": [[439, "pydicom.uid.RealWorldValueMappingStorage"]], "respiratorywaveformstorage (in module pydicom.uid)": [[440, "pydicom.uid.RespiratoryWaveformStorage"]], "roboticarmradiationstorage (in module pydicom.uid)": [[441, "pydicom.uid.RoboticArmRadiationStorage"]], "roboticradiationrecordstorage (in module pydicom.uid)": [[442, "pydicom.uid.RoboticRadiationRecordStorage"]], "routinescalpelectroencephalogramwaveformstorage (in module pydicom.uid)": [[443, "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage"]], "smptest211020uncompressedinterlacedactivevideo (in module pydicom.uid)": [[444, "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo"]], "smptest211020uncompressedprogressiveactivevideo (in module pydicom.uid)": [[445, "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo"]], "smptest211030pcmdigitalaudio (in module pydicom.uid)": [[446, "pydicom.uid.SMPTEST211030PCMDigitalAudio"]], "secondarycaptureimagestorage (in module pydicom.uid)": [[447, "pydicom.uid.SecondaryCaptureImageStorage"]], "segmentationstorage (in module pydicom.uid)": [[448, "pydicom.uid.SegmentationStorage"]], "segmentedvolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[449, "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage"]], "simplifiedadultechosrstorage (in module pydicom.uid)": [[450, "pydicom.uid.SimplifiedAdultEchoSRStorage"]], "sleepelectroencephalogramwaveformstorage (in module pydicom.uid)": [[451, "pydicom.uid.SleepElectroencephalogramWaveformStorage"]], "spatialfiducialsstorage (in module pydicom.uid)": [[452, "pydicom.uid.SpatialFiducialsStorage"]], "spatialregistrationstorage (in module pydicom.uid)": [[453, "pydicom.uid.SpatialRegistrationStorage"]], "spectacleprescriptionreportstorage (in module pydicom.uid)": [[454, "pydicom.uid.SpectaclePrescriptionReportStorage"]], "stereometricrelationshipstorage (in module pydicom.uid)": [[455, "pydicom.uid.StereometricRelationshipStorage"]], "subjectiverefractionmeasurementsstorage (in module pydicom.uid)": [[456, "pydicom.uid.SubjectiveRefractionMeasurementsStorage"]], "surfacescanmeshstorage (in module pydicom.uid)": [[457, "pydicom.uid.SurfaceScanMeshStorage"]], "surfacescanpointcloudstorage (in module pydicom.uid)": [[458, "pydicom.uid.SurfaceScanPointCloudStorage"]], "surfacesegmentationstorage (in module pydicom.uid)": [[459, "pydicom.uid.SurfaceSegmentationStorage"]], "tomotherapeuticradiationrecordstorage (in module pydicom.uid)": [[460, "pydicom.uid.TomotherapeuticRadiationRecordStorage"]], "tomotherapeuticradiationstorage (in module pydicom.uid)": [[461, "pydicom.uid.TomotherapeuticRadiationStorage"]], "tractographyresultsstorage (in module pydicom.uid)": [[462, "pydicom.uid.TractographyResultsStorage"]], "twelveleadecgwaveformstorage (in module pydicom.uid)": [[463, "pydicom.uid.TwelveLeadECGWaveformStorage"]], "uid (class in pydicom.uid)": [[464, "pydicom.uid.UID"]], "__init__() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.__init__"]], "capitalize() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.capitalize"]], "casefold() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.casefold"]], "center() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.center"]], "count() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.count"]], "encode() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.encode"]], "endswith() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.endswith"]], "expandtabs() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.expandtabs"]], "find() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.find"]], "format() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.format"]], "format_map() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.format_map"]], "index() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.index"]], "info (pydicom.uid.uid property)": [[464, "pydicom.uid.UID.info"]], "is_compressed (pydicom.uid.uid property)": [[464, "pydicom.uid.UID.is_compressed"]], "is_deflated (pydicom.uid.uid property)": [[464, "pydicom.uid.UID.is_deflated"]], "is_encapsulated (pydicom.uid.uid property)": [[464, "pydicom.uid.UID.is_encapsulated"]], "is_implicit_vr (pydicom.uid.uid property)": [[464, "pydicom.uid.UID.is_implicit_VR"]], "is_little_endian (pydicom.uid.uid property)": [[464, "pydicom.uid.UID.is_little_endian"]], "is_private (pydicom.uid.uid property)": [[464, "pydicom.uid.UID.is_private"]], "is_retired (pydicom.uid.uid property)": [[464, "pydicom.uid.UID.is_retired"]], "is_transfer_syntax (pydicom.uid.uid property)": [[464, "pydicom.uid.UID.is_transfer_syntax"]], "is_valid (pydicom.uid.uid property)": [[464, "pydicom.uid.UID.is_valid"]], "isalnum() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.isalnum"]], "isalpha() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.isalpha"]], "isascii() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.isascii"]], "isdecimal() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.isdecimal"]], "isdigit() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.isdigit"]], "isidentifier() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.isidentifier"]], "islower() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.islower"]], "isnumeric() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.isnumeric"]], "isprintable() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.isprintable"]], "isspace() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.isspace"]], "istitle() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.istitle"]], "isupper() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.isupper"]], "join() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.join"]], "keyword (pydicom.uid.uid property)": [[464, "pydicom.uid.UID.keyword"]], "ljust() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.ljust"]], "lower() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.lower"]], "lstrip() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.lstrip"]], "maketrans() (pydicom.uid.uid static method)": [[464, "pydicom.uid.UID.maketrans"]], "name (pydicom.uid.uid property)": [[464, "pydicom.uid.UID.name"]], "partition() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.partition"]], "removeprefix() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.removeprefix"]], "removesuffix() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.removesuffix"]], "replace() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.replace"]], "rfind() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.rfind"]], "rindex() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.rindex"]], "rjust() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.rjust"]], "rpartition() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.rpartition"]], "rsplit() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.rsplit"]], "rstrip() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.rstrip"]], "set_private_encoding() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.set_private_encoding"]], "split() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.split"]], "splitlines() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.splitlines"]], "startswith() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.startswith"]], "strip() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.strip"]], "swapcase() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.swapcase"]], "title() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.title"]], "translate() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.translate"]], "type (pydicom.uid.uid property)": [[464, "pydicom.uid.UID.type"]], "upper() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.upper"]], "zfill() (pydicom.uid.uid method)": [[464, "pydicom.uid.UID.zfill"]], "ultrasoundimagestorage (in module pydicom.uid)": [[465, "pydicom.uid.UltrasoundImageStorage"]], "ultrasoundmultiframeimagestorage (in module pydicom.uid)": [[466, "pydicom.uid.UltrasoundMultiFrameImageStorage"]], "uncompressedtransfersyntaxes (in module pydicom.uid)": [[467, "pydicom.uid.UncompressedTransferSyntaxes"]], "vlendoscopicimagestorage (in module pydicom.uid)": [[468, "pydicom.uid.VLEndoscopicImageStorage"]], "vlmicroscopicimagestorage (in module pydicom.uid)": [[469, "pydicom.uid.VLMicroscopicImageStorage"]], "vlphotographicimagestorage (in module pydicom.uid)": [[470, "pydicom.uid.VLPhotographicImageStorage"]], "vlslidecoordinatesmicroscopicimagestorage (in module pydicom.uid)": [[471, "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage"]], "vlwholeslidemicroscopyimagestorage (in module pydicom.uid)": [[472, "pydicom.uid.VLWholeSlideMicroscopyImageStorage"]], "variablemodalitylutsoftcopypresentationstatestorage (in module pydicom.uid)": [[473, "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage"]], "videoendoscopicimagestorage (in module pydicom.uid)": [[474, "pydicom.uid.VideoEndoscopicImageStorage"]], "videomicroscopicimagestorage (in module pydicom.uid)": [[475, "pydicom.uid.VideoMicroscopicImageStorage"]], "videophotographicimagestorage (in module pydicom.uid)": [[476, "pydicom.uid.VideoPhotographicImageStorage"]], "visualacuitymeasurementsstorage (in module pydicom.uid)": [[477, "pydicom.uid.VisualAcuityMeasurementsStorage"]], "volumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[478, "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage"]], "widefieldophthalmicphotography3dcoordinatesimagestorage (in module pydicom.uid)": [[479, "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage"]], "widefieldophthalmicphotographystereographicprojectionimagestorage (in module pydicom.uid)": [[480, "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"]], "xadefinedprocedureprotocolstorage (in module pydicom.uid)": [[481, "pydicom.uid.XADefinedProcedureProtocolStorage"]], "xaperformedprocedureprotocolstorage (in module pydicom.uid)": [[482, "pydicom.uid.XAPerformedProcedureProtocolStorage"]], "xaxrfgrayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[483, "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage"]], "xray3dangiographicimagestorage (in module pydicom.uid)": [[484, "pydicom.uid.XRay3DAngiographicImageStorage"]], "xray3dcraniofacialimagestorage (in module pydicom.uid)": [[485, "pydicom.uid.XRay3DCraniofacialImageStorage"]], "xrayangiographicimagestorage (in module pydicom.uid)": [[486, "pydicom.uid.XRayAngiographicImageStorage"]], "xrayradiationdosesrstorage (in module pydicom.uid)": [[487, "pydicom.uid.XRayRadiationDoseSRStorage"]], "xrayradiofluoroscopicimagestorage (in module pydicom.uid)": [[488, "pydicom.uid.XRayRadiofluoroscopicImageStorage"]], "generate_uid() (in module pydicom.uid)": [[489, "pydicom.uid.generate_uid"]], "register_transfer_syntax() (in module pydicom.uid)": [[490, "pydicom.uid.register_transfer_syntax"]], "da (class in pydicom.valuerep)": [[491, "pydicom.valuerep.DA"]], "__init__() (pydicom.valuerep.da method)": [[491, "pydicom.valuerep.DA.__init__"]], "ctime() (pydicom.valuerep.da method)": [[491, "pydicom.valuerep.DA.ctime"]], "fromisocalendar() (pydicom.valuerep.da method)": [[491, "pydicom.valuerep.DA.fromisocalendar"]], "fromisoformat() (pydicom.valuerep.da method)": [[491, "pydicom.valuerep.DA.fromisoformat"]], "fromordinal() (pydicom.valuerep.da method)": [[491, "pydicom.valuerep.DA.fromordinal"]], "fromtimestamp() (pydicom.valuerep.da method)": [[491, "pydicom.valuerep.DA.fromtimestamp"]], "isocalendar() (pydicom.valuerep.da method)": [[491, "pydicom.valuerep.DA.isocalendar"]], "isoformat() (pydicom.valuerep.da method)": [[491, "pydicom.valuerep.DA.isoformat"]], "isoweekday() (pydicom.valuerep.da method)": [[491, "pydicom.valuerep.DA.isoweekday"]], "replace() (pydicom.valuerep.da method)": [[491, "pydicom.valuerep.DA.replace"]], "strftime() (pydicom.valuerep.da method)": [[491, "pydicom.valuerep.DA.strftime"]], "timetuple() (pydicom.valuerep.da method)": [[491, "pydicom.valuerep.DA.timetuple"]], "today() (pydicom.valuerep.da method)": [[491, "pydicom.valuerep.DA.today"]], "toordinal() (pydicom.valuerep.da method)": [[491, "pydicom.valuerep.DA.toordinal"]], "weekday() (pydicom.valuerep.da method)": [[491, "pydicom.valuerep.DA.weekday"]], "ds() (in module pydicom.valuerep)": [[492, "pydicom.valuerep.DS"]], "dsdecimal (class in pydicom.valuerep)": [[493, "pydicom.valuerep.DSdecimal"]], "__init__() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.__init__"]], "adjusted() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.adjusted"]], "as_integer_ratio() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.as_integer_ratio"]], "as_tuple() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.as_tuple"]], "canonical() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.canonical"]], "compare() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.compare"]], "compare_signal() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.compare_signal"]], "compare_total() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.compare_total"]], "compare_total_mag() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.compare_total_mag"]], "conjugate() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.conjugate"]], "copy_abs() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.copy_abs"]], "copy_negate() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.copy_negate"]], "copy_sign() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.copy_sign"]], "exp() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.exp"]], "fma() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.fma"]], "from_float() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.from_float"]], "is_canonical() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.is_canonical"]], "is_finite() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.is_finite"]], "is_infinite() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.is_infinite"]], "is_nan() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.is_nan"]], "is_normal() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.is_normal"]], "is_qnan() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.is_qnan"]], "is_signed() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.is_signed"]], "is_snan() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.is_snan"]], "is_subnormal() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.is_subnormal"]], "is_zero() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.is_zero"]], "ln() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.ln"]], "log10() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.log10"]], "logb() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.logb"]], "logical_and() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.logical_and"]], "logical_invert() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.logical_invert"]], "logical_or() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.logical_or"]], "logical_xor() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.logical_xor"]], "max() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.max"]], "max_mag() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.max_mag"]], "min() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.min"]], "min_mag() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.min_mag"]], "next_minus() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.next_minus"]], "next_plus() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.next_plus"]], "next_toward() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.next_toward"]], "normalize() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.normalize"]], "number_class() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.number_class"]], "quantize() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.quantize"]], "radix() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.radix"]], "remainder_near() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.remainder_near"]], "rotate() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.rotate"]], "same_quantum() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.same_quantum"]], "scaleb() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.scaleb"]], "shift() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.shift"]], "sqrt() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.sqrt"]], "to_eng_string() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.to_eng_string"]], "to_integral() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.to_integral"]], "to_integral_exact() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.to_integral_exact"]], "to_integral_value() (pydicom.valuerep.dsdecimal method)": [[493, "pydicom.valuerep.DSdecimal.to_integral_value"]], "dsfloat (class in pydicom.valuerep)": [[494, "pydicom.valuerep.DSfloat"]], "__init__() (pydicom.valuerep.dsfloat method)": [[494, "pydicom.valuerep.DSfloat.__init__"]], "as_integer_ratio() (pydicom.valuerep.dsfloat method)": [[494, "pydicom.valuerep.DSfloat.as_integer_ratio"]], "conjugate() (pydicom.valuerep.dsfloat method)": [[494, "pydicom.valuerep.DSfloat.conjugate"]], "fromhex() (pydicom.valuerep.dsfloat method)": [[494, "pydicom.valuerep.DSfloat.fromhex"]], "hex() (pydicom.valuerep.dsfloat method)": [[494, "pydicom.valuerep.DSfloat.hex"]], "imag (pydicom.valuerep.dsfloat attribute)": [[494, "pydicom.valuerep.DSfloat.imag"]], "is_integer() (pydicom.valuerep.dsfloat method)": [[494, "pydicom.valuerep.DSfloat.is_integer"]], "real (pydicom.valuerep.dsfloat attribute)": [[494, "pydicom.valuerep.DSfloat.real"]], "dt (class in pydicom.valuerep)": [[495, "pydicom.valuerep.DT"]], "__init__() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.__init__"]], "astimezone() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.astimezone"]], "combine() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.combine"]], "ctime() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.ctime"]], "date() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.date"]], "dst() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.dst"]], "fromisocalendar() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.fromisocalendar"]], "fromisoformat() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.fromisoformat"]], "fromordinal() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.fromordinal"]], "fromtimestamp() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.fromtimestamp"]], "isocalendar() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.isocalendar"]], "isoformat() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.isoformat"]], "isoweekday() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.isoweekday"]], "now() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.now"]], "replace() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.replace"]], "strftime() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.strftime"]], "strptime() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.strptime"]], "time() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.time"]], "timestamp() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.timestamp"]], "timetuple() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.timetuple"]], "timetz() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.timetz"]], "today() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.today"]], "toordinal() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.toordinal"]], "tzname() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.tzname"]], "utcfromtimestamp() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.utcfromtimestamp"]], "utcnow() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.utcnow"]], "utcoffset() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.utcoffset"]], "utctimetuple() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.utctimetuple"]], "weekday() (pydicom.valuerep.dt method)": [[495, "pydicom.valuerep.DT.weekday"]], "is (class in pydicom.valuerep)": [[496, "pydicom.valuerep.IS"]], "__init__() (pydicom.valuerep.is method)": [[496, "pydicom.valuerep.IS.__init__"]], "as_integer_ratio() (pydicom.valuerep.is method)": [[496, "pydicom.valuerep.IS.as_integer_ratio"]], "bit_count() (pydicom.valuerep.is method)": [[496, "pydicom.valuerep.IS.bit_count"]], "bit_length() (pydicom.valuerep.is method)": [[496, "pydicom.valuerep.IS.bit_length"]], "conjugate() (pydicom.valuerep.is method)": [[496, "pydicom.valuerep.IS.conjugate"]], "denominator (pydicom.valuerep.is attribute)": [[496, "pydicom.valuerep.IS.denominator"]], "from_bytes() (pydicom.valuerep.is method)": [[496, "pydicom.valuerep.IS.from_bytes"]], "imag (pydicom.valuerep.is attribute)": [[496, "pydicom.valuerep.IS.imag"]], "numerator (pydicom.valuerep.is attribute)": [[496, "pydicom.valuerep.IS.numerator"]], "real (pydicom.valuerep.is attribute)": [[496, "pydicom.valuerep.IS.real"]], "to_bytes() (pydicom.valuerep.is method)": [[496, "pydicom.valuerep.IS.to_bytes"]], "isfloat (class in pydicom.valuerep)": [[497, "pydicom.valuerep.ISfloat"]], "__init__() (pydicom.valuerep.isfloat method)": [[497, "pydicom.valuerep.ISfloat.__init__"]], "as_integer_ratio() (pydicom.valuerep.isfloat method)": [[497, "pydicom.valuerep.ISfloat.as_integer_ratio"]], "conjugate() (pydicom.valuerep.isfloat method)": [[497, "pydicom.valuerep.ISfloat.conjugate"]], "fromhex() (pydicom.valuerep.isfloat method)": [[497, "pydicom.valuerep.ISfloat.fromhex"]], "hex() (pydicom.valuerep.isfloat method)": [[497, "pydicom.valuerep.ISfloat.hex"]], "imag (pydicom.valuerep.isfloat attribute)": [[497, "pydicom.valuerep.ISfloat.imag"]], "is_integer() (pydicom.valuerep.isfloat method)": [[497, "pydicom.valuerep.ISfloat.is_integer"]], "real (pydicom.valuerep.isfloat attribute)": [[497, "pydicom.valuerep.ISfloat.real"]], "personname (class in pydicom.valuerep)": [[498, "pydicom.valuerep.PersonName"]], "__init__() (pydicom.valuerep.personname method)": [[498, "pydicom.valuerep.PersonName.__init__"]], "alphabetic (pydicom.valuerep.personname property)": [[498, "pydicom.valuerep.PersonName.alphabetic"]], "components (pydicom.valuerep.personname property)": [[498, "pydicom.valuerep.PersonName.components"]], "decode() (pydicom.valuerep.personname method)": [[498, "pydicom.valuerep.PersonName.decode"]], "encode() (pydicom.valuerep.personname method)": [[498, "pydicom.valuerep.PersonName.encode"]], "family_comma_given() (pydicom.valuerep.personname method)": [[498, "pydicom.valuerep.PersonName.family_comma_given"]], "family_name (pydicom.valuerep.personname property)": [[498, "pydicom.valuerep.PersonName.family_name"]], "formatted() (pydicom.valuerep.personname method)": [[498, "pydicom.valuerep.PersonName.formatted"]], "from_named_components() (pydicom.valuerep.personname class method)": [[498, "pydicom.valuerep.PersonName.from_named_components"]], "from_named_components_veterinary() (pydicom.valuerep.personname class method)": [[498, "pydicom.valuerep.PersonName.from_named_components_veterinary"]], "given_name (pydicom.valuerep.personname property)": [[498, "pydicom.valuerep.PersonName.given_name"]], "ideographic (pydicom.valuerep.personname property)": [[498, "pydicom.valuerep.PersonName.ideographic"]], "middle_name (pydicom.valuerep.personname property)": [[498, "pydicom.valuerep.PersonName.middle_name"]], "name_prefix (pydicom.valuerep.personname property)": [[498, "pydicom.valuerep.PersonName.name_prefix"]], "name_suffix (pydicom.valuerep.personname property)": [[498, "pydicom.valuerep.PersonName.name_suffix"]], "phonetic (pydicom.valuerep.personname property)": [[498, "pydicom.valuerep.PersonName.phonetic"]], "tm (class in pydicom.valuerep)": [[499, "pydicom.valuerep.TM"]], "__init__() (pydicom.valuerep.tm method)": [[499, "pydicom.valuerep.TM.__init__"]], "dst() (pydicom.valuerep.tm method)": [[499, "pydicom.valuerep.TM.dst"]], "fromisoformat() (pydicom.valuerep.tm method)": [[499, "pydicom.valuerep.TM.fromisoformat"]], "isoformat() (pydicom.valuerep.tm method)": [[499, "pydicom.valuerep.TM.isoformat"]], "replace() (pydicom.valuerep.tm method)": [[499, "pydicom.valuerep.TM.replace"]], "strftime() (pydicom.valuerep.tm method)": [[499, "pydicom.valuerep.TM.strftime"]], "tzname() (pydicom.valuerep.tm method)": [[499, "pydicom.valuerep.TM.tzname"]], "utcoffset() (pydicom.valuerep.tm method)": [[499, "pydicom.valuerep.TM.utcoffset"]], "vr (class in pydicom.valuerep)": [[500, "pydicom.valuerep.VR"]], "__init__() (pydicom.valuerep.vr method)": [[500, "pydicom.valuerep.VR.__init__"]], "format_number_as_ds() (in module pydicom.valuerep)": [[501, "pydicom.valuerep.format_number_as_ds"]], "is_valid_ds() (in module pydicom.valuerep)": [[502, "pydicom.valuerep.is_valid_ds"]], "convert_ae_string() (in module pydicom.values)": [[503, "pydicom.values.convert_AE_string"]], "convert_atvalue() (in module pydicom.values)": [[504, "pydicom.values.convert_ATvalue"]], "convert_da_string() (in module pydicom.values)": [[505, "pydicom.values.convert_DA_string"]], "convert_ds_string() (in module pydicom.values)": [[506, "pydicom.values.convert_DS_string"]], "convert_dt_string() (in module pydicom.values)": [[507, "pydicom.values.convert_DT_string"]], "convert_is_string() (in module pydicom.values)": [[508, "pydicom.values.convert_IS_string"]], "convert_obvalue() (in module pydicom.values)": [[509, "pydicom.values.convert_OBvalue"]], "convert_owvalue() (in module pydicom.values)": [[510, "pydicom.values.convert_OWvalue"]], "convert_pn() (in module pydicom.values)": [[511, "pydicom.values.convert_PN"]], "convert_sq() (in module pydicom.values)": [[512, "pydicom.values.convert_SQ"]], "convert_tm_string() (in module pydicom.values)": [[513, "pydicom.values.convert_TM_string"]], "convert_ui() (in module pydicom.values)": [[514, "pydicom.values.convert_UI"]], "convert_un() (in module pydicom.values)": [[515, "pydicom.values.convert_UN"]], "convert_ur_string() (in module pydicom.values)": [[516, "pydicom.values.convert_UR_string"]], "convert_numbers() (in module pydicom.values)": [[517, "pydicom.values.convert_numbers"]], "convert_single_string() (in module pydicom.values)": [[518, "pydicom.values.convert_single_string"]], "convert_string() (in module pydicom.values)": [[519, "pydicom.values.convert_string"]], "convert_tag() (in module pydicom.values)": [[520, "pydicom.values.convert_tag"]], "convert_text() (in module pydicom.values)": [[521, "pydicom.values.convert_text"]], "convert_value() (in module pydicom.values)": [[522, "pydicom.values.convert_value"]], "multi_string() (in module pydicom.values)": [[523, "pydicom.values.multi_string"]], "generate_multiplex() (in module pydicom.waveforms.numpy_handler)": [[524, "pydicom.waveforms.numpy_handler.generate_multiplex"]], "is_available() (in module pydicom.waveforms.numpy_handler)": [[524, "pydicom.waveforms.numpy_handler.is_available"]], "multiplex_array() (in module pydicom.waveforms.numpy_handler)": [[524, "pydicom.waveforms.numpy_handler.multiplex_array"]], "pydicom.waveforms.numpy_handler": [[524, "module-pydicom.waveforms.numpy_handler"]], "pydicom.pixel_data_handlers": [[526, "module-pydicom.pixel_data_handlers"]], "pydicom": [[527, "module-pydicom"]], "pydicom.overlays": [[529, "module-pydicom.overlays"]], "pydicom.waveforms": [[534, "module-pydicom.waveforms"]]}})