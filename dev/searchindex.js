Search.setIndex({"docnames": ["auto_examples/dicomtree", "auto_examples/image_processing/index", "auto_examples/image_processing/plot_downsize_image", "auto_examples/image_processing/plot_waveforms", "auto_examples/image_processing/reslice", "auto_examples/image_processing/sg_execution_times", "auto_examples/index", "auto_examples/input_output/index", "auto_examples/input_output/plot_printing_dataset", "auto_examples/input_output/plot_read_dicom", "auto_examples/input_output/plot_read_fileset", "auto_examples/input_output/plot_read_rtplan", "auto_examples/input_output/plot_write_dicom", "auto_examples/input_output/sg_execution_times", "auto_examples/memory_dataset", "auto_examples/metadata_processing/index", "auto_examples/metadata_processing/plot_add_dict_entries", "auto_examples/metadata_processing/plot_anonymize", "auto_examples/metadata_processing/plot_sequences", "auto_examples/metadata_processing/sg_execution_times", "auto_examples/plot_dicom_difference", "auto_examples/sg_execution_times", "auto_examples/show_charset_name", "faq/index", "guides/cli/cli_codify", "guides/cli/cli_dev", "guides/cli/cli_guide", "guides/cli/cli_intro", "guides/cli/cli_show", "guides/decoding/decoder_options", "guides/decoding/decoder_plugins", "guides/decoding/index", "guides/element_value_types", "guides/encoding/encoder_plugin_options", "guides/encoding/encoder_plugins", "guides/encoding/index", "guides/encoding/jpeg_2k", "guides/encoding/jpeg_ls", "guides/encoding/rle_lossless", "guides/glossary", "guides/index", "guides/writing_documentation", "index", "old/base_element", "old/best_practices", "old/getting_started", "old/image_data_compression", "old/image_data_handlers", "old/private_data_elements", "old/pydicom_user_guide", "old/ref_guide", "old/viewing_images", "old/working_with_overlays", "old/working_with_pixel_data", "old/working_with_waveforms", "old/writing_files", "reference/charset", "reference/config", "reference/data", "reference/datadict", "reference/dataset", "reference/elem", "reference/elem.dataelem", "reference/elem.multival", "reference/elem.sequence", "reference/elem.tag", "reference/elem.valuerep", "reference/elem.values", "reference/encaps", "reference/errors", "reference/examples", "reference/fileio", "reference/fileio.base", "reference/fileio.read", "reference/fileio.util", "reference/fileio.write", "reference/fileset", "reference/generated/pydicom.charset.convert_encodings", "reference/generated/pydicom.charset.decode_bytes", "reference/generated/pydicom.charset.decode_element", "reference/generated/pydicom.charset.encode_string", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS", "reference/generated/pydicom.config.DS_decimal", "reference/generated/pydicom.config.DS_numpy", "reference/generated/pydicom.config.IGNORE", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR", "reference/generated/pydicom.config.RAISE", "reference/generated/pydicom.config.WARN", "reference/generated/pydicom.config.allow_DS_float", "reference/generated/pydicom.config.assume_implicit_vr_switch", "reference/generated/pydicom.config.convert_wrong_length_to_UN", "reference/generated/pydicom.config.data_element_callback", "reference/generated/pydicom.config.data_element_callback_kwargs", "reference/generated/pydicom.config.datetime_conversion", "reference/generated/pydicom.config.debug", "reference/generated/pydicom.config.enforce_valid_values", "reference/generated/pydicom.config.future_behavior", "reference/generated/pydicom.config.pixel_data_handlers", "reference/generated/pydicom.config.reset_data_element_callback", "reference/generated/pydicom.config.settings", "reference/generated/pydicom.config.show_file_meta", "reference/generated/pydicom.config.use_DS_decimal", "reference/generated/pydicom.config.use_DS_numpy", "reference/generated/pydicom.config.use_IS_numpy", "reference/generated/pydicom.data.get_charset_files", "reference/generated/pydicom.data.get_palette_files", "reference/generated/pydicom.data.get_testdata_file", "reference/generated/pydicom.data.get_testdata_files", "reference/generated/pydicom.datadict.add_dict_entries", "reference/generated/pydicom.datadict.add_dict_entry", "reference/generated/pydicom.datadict.add_private_dict_entries", "reference/generated/pydicom.datadict.add_private_dict_entry", "reference/generated/pydicom.datadict.dictionary_VM", "reference/generated/pydicom.datadict.dictionary_VR", "reference/generated/pydicom.datadict.dictionary_description", "reference/generated/pydicom.datadict.dictionary_has_tag", "reference/generated/pydicom.datadict.dictionary_is_retired", "reference/generated/pydicom.datadict.dictionary_keyword", "reference/generated/pydicom.datadict.get_entry", "reference/generated/pydicom.datadict.get_private_entry", "reference/generated/pydicom.datadict.keyword_for_tag", "reference/generated/pydicom.datadict.mask_match", "reference/generated/pydicom.datadict.private_dictionary_VM", "reference/generated/pydicom.datadict.private_dictionary_VR", "reference/generated/pydicom.datadict.private_dictionary_description", "reference/generated/pydicom.datadict.repeater_has_keyword", "reference/generated/pydicom.datadict.repeater_has_tag", "reference/generated/pydicom.datadict.tag_for_keyword", "reference/generated/pydicom.dataelem.DataElement", "reference/generated/pydicom.dataelem.DataElement_from_raw", "reference/generated/pydicom.dataelem.RawDataElement", "reference/generated/pydicom.dataset.Dataset", "reference/generated/pydicom.dataset.FileDataset", "reference/generated/pydicom.dataset.FileMetaDataset", "reference/generated/pydicom.dataset.PrivateBlock", "reference/generated/pydicom.dataset.validate_file_meta", "reference/generated/pydicom.encaps.decode_data_sequence", "reference/generated/pydicom.encaps.defragment_data", "reference/generated/pydicom.encaps.encapsulate", "reference/generated/pydicom.encaps.encapsulate_extended", "reference/generated/pydicom.encaps.fragment_frame", "reference/generated/pydicom.encaps.generate_fragmented_frames", "reference/generated/pydicom.encaps.generate_fragments", "reference/generated/pydicom.encaps.generate_frames", "reference/generated/pydicom.encaps.generate_pixel_data", "reference/generated/pydicom.encaps.generate_pixel_data_fragment", "reference/generated/pydicom.encaps.generate_pixel_data_frame", "reference/generated/pydicom.encaps.get_frame", "reference/generated/pydicom.encaps.get_frame_offsets", "reference/generated/pydicom.encaps.itemize_fragment", "reference/generated/pydicom.encaps.itemize_frame", "reference/generated/pydicom.encaps.parse_basic_offsets", "reference/generated/pydicom.encaps.parse_fragments", "reference/generated/pydicom.encaps.read_item", "reference/generated/pydicom.errors.InvalidDicomError", "reference/generated/pydicom.filebase.DicomBytesIO", "reference/generated/pydicom.filebase.DicomFile", "reference/generated/pydicom.filebase.DicomFileLike", "reference/generated/pydicom.filebase.DicomIO", "reference/generated/pydicom.filereader.data_element_generator", "reference/generated/pydicom.filereader.data_element_offset_to_value", "reference/generated/pydicom.filereader.dcmread", "reference/generated/pydicom.filereader.read_dataset", "reference/generated/pydicom.filereader.read_deferred_data_element", "reference/generated/pydicom.filereader.read_file_meta_info", "reference/generated/pydicom.filereader.read_partial", "reference/generated/pydicom.filereader.read_preamble", "reference/generated/pydicom.filereader.read_sequence", "reference/generated/pydicom.filereader.read_sequence_item", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS", "reference/generated/pydicom.fileset.FileInstance", "reference/generated/pydicom.fileset.FileSet", "reference/generated/pydicom.fileset.RecordNode", "reference/generated/pydicom.fileset.generate_filename", "reference/generated/pydicom.fileset.is_conformant_file_id", "reference/generated/pydicom.fileutil.absorb_delimiter_item", "reference/generated/pydicom.fileutil.find_bytes", "reference/generated/pydicom.fileutil.find_delimiter", "reference/generated/pydicom.fileutil.length_of_undefined_length", "reference/generated/pydicom.fileutil.read_undefined_length_value", "reference/generated/pydicom.filewriter.correct_ambiguous_vr", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element", "reference/generated/pydicom.filewriter.dcmwrite", "reference/generated/pydicom.filewriter.multi_string", "reference/generated/pydicom.filewriter.write_ATvalue", "reference/generated/pydicom.filewriter.write_DA", "reference/generated/pydicom.filewriter.write_DT", "reference/generated/pydicom.filewriter.write_OBvalue", "reference/generated/pydicom.filewriter.write_OWvalue", "reference/generated/pydicom.filewriter.write_PN", "reference/generated/pydicom.filewriter.write_TM", "reference/generated/pydicom.filewriter.write_UI", "reference/generated/pydicom.filewriter.write_UN", "reference/generated/pydicom.filewriter.write_data_element", "reference/generated/pydicom.filewriter.write_dataset", "reference/generated/pydicom.filewriter.write_file_meta_info", "reference/generated/pydicom.filewriter.write_number_string", "reference/generated/pydicom.filewriter.write_numbers", "reference/generated/pydicom.filewriter.write_sequence", "reference/generated/pydicom.filewriter.write_sequence_item", "reference/generated/pydicom.filewriter.write_string", "reference/generated/pydicom.filewriter.write_text", "reference/generated/pydicom.misc.is_dicom", "reference/generated/pydicom.misc.size_in_bytes", "reference/generated/pydicom.multival.MultiValue", "reference/generated/pydicom.overlays.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut", "reference/generated/pydicom.pixel_data_handlers.apply_rescale", "reference/generated/pydicom.pixel_data_handlers.apply_voi", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut", "reference/generated/pydicom.pixel_data_handlers.apply_windowing", "reference/generated/pydicom.pixel_data_handlers.convert_color_space", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler", "reference/generated/pydicom.pixel_data_handlers.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.pillow_handler", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler", "reference/generated/pydicom.pixel_data_handlers.rle_handler", "reference/generated/pydicom.pixel_data_handlers.util", "reference/generated/pydicom.pixels.as_pixel_options", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner", "reference/generated/pydicom.pixels.decoders.base.Decoder", "reference/generated/pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder", "reference/generated/pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.base.HTJ2KDecoder", "reference/generated/pydicom.pixels.decoders.base.HTJ2KLosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.HTJ2KLosslessRPCLDecoder", "reference/generated/pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEG2000Decoder", "reference/generated/pydicom.pixels.decoders.base.JPEG2000LosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGBaseline8BitDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGExtended12BitDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGLSLosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGLSNearLosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGLosslessDecoder", "reference/generated/pydicom.pixels.decoders.base.JPEGLosslessSV1Decoder", "reference/generated/pydicom.pixels.decoders.base.RLELosslessDecoder", "reference/generated/pydicom.pixels.encoders.base.EncodeRunner", "reference/generated/pydicom.pixels.encoders.base.Encoder", "reference/generated/pydicom.pixels.encoders.base.JPEG2000Encoder", "reference/generated/pydicom.pixels.encoders.base.JPEG2000LosslessEncoder", "reference/generated/pydicom.pixels.encoders.base.JPEGLSLosslessEncoder", "reference/generated/pydicom.pixels.encoders.base.JPEGLSNearLosslessEncoder", "reference/generated/pydicom.pixels.encoders.base.RLELosslessEncoder", "reference/generated/pydicom.pixels.get_decoder", "reference/generated/pydicom.pixels.get_encoder", "reference/generated/pydicom.pixels.iter_pixels", "reference/generated/pydicom.pixels.pixel_array", "reference/generated/pydicom.sequence.Sequence", "reference/generated/pydicom.tag.BaseTag", "reference/generated/pydicom.tag.Tag", "reference/generated/pydicom.tag.TupleTag", "reference/generated/pydicom.tag.tag_in_exception", "reference/generated/pydicom.uid.AcquisitionContextSRStorage", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage", "reference/generated/pydicom.uid.AllTransferSyntaxes", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage", "reference/generated/pydicom.uid.BasicTextSRStorage", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.BodyPositionWaveformStorage", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.CTImageStorage", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage", "reference/generated/pydicom.uid.ChestCADSRStorage", "reference/generated/pydicom.uid.ColonCADSRStorage", "reference/generated/pydicom.uid.ColorPaletteStorage", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.Comprehensive3DSRStorage", "reference/generated/pydicom.uid.ComprehensiveSRStorage", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage", "reference/generated/pydicom.uid.CornealTopographyMapStorage", "reference/generated/pydicom.uid.DICOS2DAITStorage", "reference/generated/pydicom.uid.DICOS3DAITStorage", "reference/generated/pydicom.uid.DICOSCTImageStorage", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.EddyCurrentImageStorage", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage", "reference/generated/pydicom.uid.EncapsulatedCDAStorage", "reference/generated/pydicom.uid.EncapsulatedMTLStorage", "reference/generated/pydicom.uid.EncapsulatedOBJStorage", "reference/generated/pydicom.uid.EncapsulatedPDFStorage", "reference/generated/pydicom.uid.EncapsulatedSTLStorage", "reference/generated/pydicom.uid.EnhancedCTImageStorage", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage", "reference/generated/pydicom.uid.EnhancedMRImageStorage", "reference/generated/pydicom.uid.EnhancedPETImageStorage", "reference/generated/pydicom.uid.EnhancedRTImageStorage", "reference/generated/pydicom.uid.EnhancedSRStorage", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage", "reference/generated/pydicom.uid.EnhancedXAImageStorage", "reference/generated/pydicom.uid.EnhancedXRFImageStorage", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.ExplicitVRBigEndian", "reference/generated/pydicom.uid.ExplicitVRLittleEndian", "reference/generated/pydicom.uid.ExtensibleSRStorage", "reference/generated/pydicom.uid.General32bitECGWaveformStorage", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage", "reference/generated/pydicom.uid.GeneralECGWaveformStorage", "reference/generated/pydicom.uid.GenericImplantTemplateStorage", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.HEVCM10P51", "reference/generated/pydicom.uid.HEVCMP51", "reference/generated/pydicom.uid.HTJ2K", "reference/generated/pydicom.uid.HTJ2KLossless", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL", "reference/generated/pydicom.uid.HangingProtocolStorage", "reference/generated/pydicom.uid.HemodynamicWaveformStorage", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage", "reference/generated/pydicom.uid.ImplantationPlanSRStorage", "reference/generated/pydicom.uid.ImplicitVRLittleEndian", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pydicom.uid.InventoryStorage", "reference/generated/pydicom.uid.JPEG2000", "reference/generated/pydicom.uid.JPEG2000Lossless", "reference/generated/pydicom.uid.JPEG2000MC", "reference/generated/pydicom.uid.JPEG2000MCLossless", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes", "reference/generated/pydicom.uid.JPEGBaseline8Bit", "reference/generated/pydicom.uid.JPEGExtended12Bit", "reference/generated/pydicom.uid.JPEGLSLossless", "reference/generated/pydicom.uid.JPEGLSNearLossless", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes", "reference/generated/pydicom.uid.JPEGLossless", "reference/generated/pydicom.uid.JPEGLosslessSV1", "reference/generated/pydicom.uid.JPEGTransferSyntaxes", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pydicom.uid.LensometryMeasurementsStorage", "reference/generated/pydicom.uid.MPEG2MPHL", "reference/generated/pydicom.uid.MPEG2MPHLF", "reference/generated/pydicom.uid.MPEG2MPML", "reference/generated/pydicom.uid.MPEG2MPMLF", "reference/generated/pydicom.uid.MPEG4HP41", "reference/generated/pydicom.uid.MPEG4HP41BD", "reference/generated/pydicom.uid.MPEG4HP41BDF", "reference/generated/pydicom.uid.MPEG4HP41F", "reference/generated/pydicom.uid.MPEG4HP422D", "reference/generated/pydicom.uid.MPEG4HP422DF", "reference/generated/pydicom.uid.MPEG4HP423D", "reference/generated/pydicom.uid.MPEG4HP423DF", "reference/generated/pydicom.uid.MPEG4HP42STEREO", "reference/generated/pydicom.uid.MPEG4HP42STEREOF", "reference/generated/pydicom.uid.MPEGTransferSyntaxes", "reference/generated/pydicom.uid.MRImageStorage", "reference/generated/pydicom.uid.MRSpectroscopyStorage", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pydicom.uid.MammographyCADSRStorage", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.NuclearMedicineImageStorage", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID", "reference/generated/pydicom.uid.ParametricMapStorage", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PhotoacousticImageStorage", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage", "reference/generated/pydicom.uid.PrivateTransferSyntaxes", "reference/generated/pydicom.uid.ProcedureLogStorage", "reference/generated/pydicom.uid.ProtocolApprovalStorage", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.RE_VALID_UID", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX", "reference/generated/pydicom.uid.RLELossless", "reference/generated/pydicom.uid.RLETransferSyntaxes", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage", "reference/generated/pydicom.uid.RTDoseStorage", "reference/generated/pydicom.uid.RTImageStorage", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTIonPlanStorage", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "reference/generated/pydicom.uid.RTPhysicianIntentStorage", "reference/generated/pydicom.uid.RTPlanStorage", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTRadiationSetStorage", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage", "reference/generated/pydicom.uid.RTStructureSetStorage", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pydicom.uid.RawDataStorage", "reference/generated/pydicom.uid.RealWorldValueMappingStorage", "reference/generated/pydicom.uid.RespiratoryWaveformStorage", "reference/generated/pydicom.uid.RoboticArmRadiationStorage", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage", "reference/generated/pydicom.uid.SegmentationStorage", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SpatialFiducialsStorage", "reference/generated/pydicom.uid.SpatialRegistrationStorage", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage", "reference/generated/pydicom.uid.StereometricRelationshipStorage", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage", "reference/generated/pydicom.uid.SurfaceScanMeshStorage", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage", "reference/generated/pydicom.uid.SurfaceSegmentationStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage", "reference/generated/pydicom.uid.TractographyResultsStorage", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage", "reference/generated/pydicom.uid.UID", "reference/generated/pydicom.uid.UltrasoundImageStorage", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes", "reference/generated/pydicom.uid.VLEndoscopicImageStorage", "reference/generated/pydicom.uid.VLMicroscopicImageStorage", "reference/generated/pydicom.uid.VLPhotographicImageStorage", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage", "reference/generated/pydicom.uid.VideoPhotographicImageStorage", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage", "reference/generated/pydicom.uid.XRayAngiographicImageStorage", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage", "reference/generated/pydicom.uid.generate_uid", "reference/generated/pydicom.uid.register_transfer_syntax", "reference/generated/pydicom.valuerep.DA", "reference/generated/pydicom.valuerep.DS", "reference/generated/pydicom.valuerep.DSdecimal", "reference/generated/pydicom.valuerep.DSfloat", "reference/generated/pydicom.valuerep.DT", "reference/generated/pydicom.valuerep.IS", "reference/generated/pydicom.valuerep.ISfloat", "reference/generated/pydicom.valuerep.PersonName", "reference/generated/pydicom.valuerep.TM", "reference/generated/pydicom.valuerep.VR", "reference/generated/pydicom.valuerep.format_number_as_ds", "reference/generated/pydicom.valuerep.is_valid_ds", "reference/generated/pydicom.values.convert_AE_string", "reference/generated/pydicom.values.convert_ATvalue", "reference/generated/pydicom.values.convert_DA_string", "reference/generated/pydicom.values.convert_DS_string", "reference/generated/pydicom.values.convert_DT_string", "reference/generated/pydicom.values.convert_IS_string", "reference/generated/pydicom.values.convert_OBvalue", "reference/generated/pydicom.values.convert_OWvalue", "reference/generated/pydicom.values.convert_PN", "reference/generated/pydicom.values.convert_SQ", "reference/generated/pydicom.values.convert_TM_string", "reference/generated/pydicom.values.convert_UI", "reference/generated/pydicom.values.convert_UN", "reference/generated/pydicom.values.convert_UR_string", "reference/generated/pydicom.values.convert_numbers", "reference/generated/pydicom.values.convert_single_string", "reference/generated/pydicom.values.convert_string", "reference/generated/pydicom.values.convert_tag", "reference/generated/pydicom.values.convert_text", "reference/generated/pydicom.values.convert_value", "reference/generated/pydicom.values.multi_string", "reference/generated/pydicom.waveforms.numpy_handler", "reference/handlers", "reference/handlers.pixel_data", "reference/index", "reference/misc", "reference/overlays", "reference/pixels", "reference/pixels.decoders", "reference/pixels.encoders", "reference/uid", "reference/waveforms", "release_notes/index", "release_notes/v0.9.2", "release_notes/v0.9.3", "release_notes/v0.9.4", "release_notes/v0.9.5", "release_notes/v0.9.6", "release_notes/v0.9.7", "release_notes/v0.9.8", "release_notes/v0.9.9", "release_notes/v1.0.0", "release_notes/v1.1.0", "release_notes/v1.2.0", "release_notes/v1.3.0", "release_notes/v1.4.0", "release_notes/v1.4.1", "release_notes/v2.0.0", "release_notes/v2.1.0", "release_notes/v2.1.1", "release_notes/v2.2.0", "release_notes/v2.3.0", "release_notes/v2.4.0", "release_notes/v3.0.0", "sg_execution_times", "tutorials/contributing", "tutorials/contributing_code", "tutorials/contributing_docs", "tutorials/dataset_basics", "tutorials/dicom_json", "tutorials/filesets", "tutorials/index", "tutorials/installation", "tutorials/pixel_data/compressing", "tutorials/sr_basics", "tutorials/waveforms"], "filenames": ["auto_examples/dicomtree.rst", "auto_examples/image_processing/index.rst", "auto_examples/image_processing/plot_downsize_image.rst", "auto_examples/image_processing/plot_waveforms.rst", "auto_examples/image_processing/reslice.rst", "auto_examples/image_processing/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/input_output/index.rst", "auto_examples/input_output/plot_printing_dataset.rst", "auto_examples/input_output/plot_read_dicom.rst", "auto_examples/input_output/plot_read_fileset.rst", "auto_examples/input_output/plot_read_rtplan.rst", "auto_examples/input_output/plot_write_dicom.rst", "auto_examples/input_output/sg_execution_times.rst", "auto_examples/memory_dataset.rst", "auto_examples/metadata_processing/index.rst", "auto_examples/metadata_processing/plot_add_dict_entries.rst", "auto_examples/metadata_processing/plot_anonymize.rst", "auto_examples/metadata_processing/plot_sequences.rst", "auto_examples/metadata_processing/sg_execution_times.rst", "auto_examples/plot_dicom_difference.rst", "auto_examples/sg_execution_times.rst", "auto_examples/show_charset_name.rst", "faq/index.rst", "guides/cli/cli_codify.rst", "guides/cli/cli_dev.rst", "guides/cli/cli_guide.rst", "guides/cli/cli_intro.rst", "guides/cli/cli_show.rst", "guides/decoding/decoder_options.rst", "guides/decoding/decoder_plugins.rst", "guides/decoding/index.rst", "guides/element_value_types.rst", "guides/encoding/encoder_plugin_options.rst", "guides/encoding/encoder_plugins.rst", "guides/encoding/index.rst", "guides/encoding/jpeg_2k.rst", "guides/encoding/jpeg_ls.rst", "guides/encoding/rle_lossless.rst", "guides/glossary.rst", "guides/index.rst", "guides/writing_documentation.rst", "index.rst", "old/base_element.rst", "old/best_practices.rst", "old/getting_started.rst", "old/image_data_compression.rst", "old/image_data_handlers.rst", "old/private_data_elements.rst", "old/pydicom_user_guide.rst", "old/ref_guide.rst", "old/viewing_images.rst", "old/working_with_overlays.rst", "old/working_with_pixel_data.rst", "old/working_with_waveforms.rst", "old/writing_files.rst", "reference/charset.rst", "reference/config.rst", "reference/data.rst", "reference/datadict.rst", "reference/dataset.rst", "reference/elem.rst", "reference/elem.dataelem.rst", "reference/elem.multival.rst", "reference/elem.sequence.rst", "reference/elem.tag.rst", "reference/elem.valuerep.rst", "reference/elem.values.rst", "reference/encaps.rst", "reference/errors.rst", "reference/examples.rst", "reference/fileio.rst", "reference/fileio.base.rst", "reference/fileio.read.rst", "reference/fileio.util.rst", "reference/fileio.write.rst", "reference/fileset.rst", "reference/generated/pydicom.charset.convert_encodings.rst", "reference/generated/pydicom.charset.decode_bytes.rst", "reference/generated/pydicom.charset.decode_element.rst", "reference/generated/pydicom.charset.encode_string.rst", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS.rst", "reference/generated/pydicom.config.DS_decimal.rst", "reference/generated/pydicom.config.DS_numpy.rst", "reference/generated/pydicom.config.IGNORE.rst", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR.rst", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR.rst", "reference/generated/pydicom.config.RAISE.rst", "reference/generated/pydicom.config.WARN.rst", "reference/generated/pydicom.config.allow_DS_float.rst", "reference/generated/pydicom.config.assume_implicit_vr_switch.rst", "reference/generated/pydicom.config.convert_wrong_length_to_UN.rst", "reference/generated/pydicom.config.data_element_callback.rst", "reference/generated/pydicom.config.data_element_callback_kwargs.rst", "reference/generated/pydicom.config.datetime_conversion.rst", "reference/generated/pydicom.config.debug.rst", "reference/generated/pydicom.config.enforce_valid_values.rst", "reference/generated/pydicom.config.future_behavior.rst", "reference/generated/pydicom.config.pixel_data_handlers.rst", "reference/generated/pydicom.config.reset_data_element_callback.rst", "reference/generated/pydicom.config.settings.rst", "reference/generated/pydicom.config.show_file_meta.rst", "reference/generated/pydicom.config.use_DS_decimal.rst", "reference/generated/pydicom.config.use_DS_numpy.rst", "reference/generated/pydicom.config.use_IS_numpy.rst", "reference/generated/pydicom.data.get_charset_files.rst", "reference/generated/pydicom.data.get_palette_files.rst", "reference/generated/pydicom.data.get_testdata_file.rst", "reference/generated/pydicom.data.get_testdata_files.rst", "reference/generated/pydicom.datadict.add_dict_entries.rst", "reference/generated/pydicom.datadict.add_dict_entry.rst", "reference/generated/pydicom.datadict.add_private_dict_entries.rst", "reference/generated/pydicom.datadict.add_private_dict_entry.rst", "reference/generated/pydicom.datadict.dictionary_VM.rst", "reference/generated/pydicom.datadict.dictionary_VR.rst", "reference/generated/pydicom.datadict.dictionary_description.rst", "reference/generated/pydicom.datadict.dictionary_has_tag.rst", "reference/generated/pydicom.datadict.dictionary_is_retired.rst", "reference/generated/pydicom.datadict.dictionary_keyword.rst", "reference/generated/pydicom.datadict.get_entry.rst", "reference/generated/pydicom.datadict.get_private_entry.rst", "reference/generated/pydicom.datadict.keyword_for_tag.rst", "reference/generated/pydicom.datadict.mask_match.rst", "reference/generated/pydicom.datadict.private_dictionary_VM.rst", "reference/generated/pydicom.datadict.private_dictionary_VR.rst", "reference/generated/pydicom.datadict.private_dictionary_description.rst", "reference/generated/pydicom.datadict.repeater_has_keyword.rst", "reference/generated/pydicom.datadict.repeater_has_tag.rst", "reference/generated/pydicom.datadict.tag_for_keyword.rst", "reference/generated/pydicom.dataelem.DataElement.rst", "reference/generated/pydicom.dataelem.DataElement_from_raw.rst", "reference/generated/pydicom.dataelem.RawDataElement.rst", "reference/generated/pydicom.dataset.Dataset.rst", "reference/generated/pydicom.dataset.FileDataset.rst", "reference/generated/pydicom.dataset.FileMetaDataset.rst", "reference/generated/pydicom.dataset.PrivateBlock.rst", "reference/generated/pydicom.dataset.validate_file_meta.rst", "reference/generated/pydicom.encaps.decode_data_sequence.rst", "reference/generated/pydicom.encaps.defragment_data.rst", "reference/generated/pydicom.encaps.encapsulate.rst", "reference/generated/pydicom.encaps.encapsulate_extended.rst", "reference/generated/pydicom.encaps.fragment_frame.rst", "reference/generated/pydicom.encaps.generate_fragmented_frames.rst", "reference/generated/pydicom.encaps.generate_fragments.rst", "reference/generated/pydicom.encaps.generate_frames.rst", "reference/generated/pydicom.encaps.generate_pixel_data.rst", "reference/generated/pydicom.encaps.generate_pixel_data_fragment.rst", "reference/generated/pydicom.encaps.generate_pixel_data_frame.rst", "reference/generated/pydicom.encaps.get_frame.rst", "reference/generated/pydicom.encaps.get_frame_offsets.rst", "reference/generated/pydicom.encaps.itemize_fragment.rst", "reference/generated/pydicom.encaps.itemize_frame.rst", "reference/generated/pydicom.encaps.parse_basic_offsets.rst", "reference/generated/pydicom.encaps.parse_fragments.rst", "reference/generated/pydicom.encaps.read_item.rst", "reference/generated/pydicom.errors.InvalidDicomError.rst", "reference/generated/pydicom.filebase.DicomBytesIO.rst", "reference/generated/pydicom.filebase.DicomFile.rst", "reference/generated/pydicom.filebase.DicomFileLike.rst", "reference/generated/pydicom.filebase.DicomIO.rst", "reference/generated/pydicom.filereader.data_element_generator.rst", "reference/generated/pydicom.filereader.data_element_offset_to_value.rst", "reference/generated/pydicom.filereader.dcmread.rst", "reference/generated/pydicom.filereader.read_dataset.rst", "reference/generated/pydicom.filereader.read_deferred_data_element.rst", "reference/generated/pydicom.filereader.read_file_meta_info.rst", "reference/generated/pydicom.filereader.read_partial.rst", "reference/generated/pydicom.filereader.read_preamble.rst", "reference/generated/pydicom.filereader.read_sequence.rst", "reference/generated/pydicom.filereader.read_sequence_item.rst", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS.rst", "reference/generated/pydicom.fileset.FileInstance.rst", "reference/generated/pydicom.fileset.FileSet.rst", "reference/generated/pydicom.fileset.RecordNode.rst", "reference/generated/pydicom.fileset.generate_filename.rst", "reference/generated/pydicom.fileset.is_conformant_file_id.rst", "reference/generated/pydicom.fileutil.absorb_delimiter_item.rst", "reference/generated/pydicom.fileutil.find_bytes.rst", "reference/generated/pydicom.fileutil.find_delimiter.rst", "reference/generated/pydicom.fileutil.length_of_undefined_length.rst", "reference/generated/pydicom.fileutil.read_undefined_length_value.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element.rst", "reference/generated/pydicom.filewriter.dcmwrite.rst", "reference/generated/pydicom.filewriter.multi_string.rst", "reference/generated/pydicom.filewriter.write_ATvalue.rst", "reference/generated/pydicom.filewriter.write_DA.rst", "reference/generated/pydicom.filewriter.write_DT.rst", "reference/generated/pydicom.filewriter.write_OBvalue.rst", "reference/generated/pydicom.filewriter.write_OWvalue.rst", "reference/generated/pydicom.filewriter.write_PN.rst", "reference/generated/pydicom.filewriter.write_TM.rst", "reference/generated/pydicom.filewriter.write_UI.rst", "reference/generated/pydicom.filewriter.write_UN.rst", "reference/generated/pydicom.filewriter.write_data_element.rst", "reference/generated/pydicom.filewriter.write_dataset.rst", "reference/generated/pydicom.filewriter.write_file_meta_info.rst", "reference/generated/pydicom.filewriter.write_number_string.rst", "reference/generated/pydicom.filewriter.write_numbers.rst", "reference/generated/pydicom.filewriter.write_sequence.rst", "reference/generated/pydicom.filewriter.write_sequence_item.rst", "reference/generated/pydicom.filewriter.write_string.rst", "reference/generated/pydicom.filewriter.write_text.rst", "reference/generated/pydicom.misc.is_dicom.rst", "reference/generated/pydicom.misc.size_in_bytes.rst", "reference/generated/pydicom.multival.MultiValue.rst", "reference/generated/pydicom.overlays.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_rescale.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_windowing.rst", "reference/generated/pydicom.pixel_data_handlers.convert_color_space.rst", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler.rst", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler.rst", "reference/generated/pydicom.pixel_data_handlers.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pillow_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler.rst", "reference/generated/pydicom.pixel_data_handlers.rle_handler.rst", "reference/generated/pydicom.pixel_data_handlers.util.rst", "reference/generated/pydicom.pixels.as_pixel_options.rst", "reference/generated/pydicom.pixels.decoders.base.DecodeRunner.rst", "reference/generated/pydicom.pixels.decoders.base.Decoder.rst", "reference/generated/pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.HTJ2KDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.HTJ2KLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.HTJ2KLosslessRPCLDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEG2000Decoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEG2000LosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGBaseline8BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGExtended12BitDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGLSLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGLSNearLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGLosslessDecoder.rst", "reference/generated/pydicom.pixels.decoders.base.JPEGLosslessSV1Decoder.rst", "reference/generated/pydicom.pixels.decoders.base.RLELosslessDecoder.rst", "reference/generated/pydicom.pixels.encoders.base.EncodeRunner.rst", "reference/generated/pydicom.pixels.encoders.base.Encoder.rst", "reference/generated/pydicom.pixels.encoders.base.JPEG2000Encoder.rst", "reference/generated/pydicom.pixels.encoders.base.JPEG2000LosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.base.JPEGLSLosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.base.JPEGLSNearLosslessEncoder.rst", "reference/generated/pydicom.pixels.encoders.base.RLELosslessEncoder.rst", "reference/generated/pydicom.pixels.get_decoder.rst", "reference/generated/pydicom.pixels.get_encoder.rst", "reference/generated/pydicom.pixels.iter_pixels.rst", "reference/generated/pydicom.pixels.pixel_array.rst", "reference/generated/pydicom.sequence.Sequence.rst", "reference/generated/pydicom.tag.BaseTag.rst", "reference/generated/pydicom.tag.Tag.rst", "reference/generated/pydicom.tag.TupleTag.rst", "reference/generated/pydicom.tag.tag_in_exception.rst", "reference/generated/pydicom.uid.AcquisitionContextSRStorage.rst", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pydicom.uid.AllTransferSyntaxes.rst", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage.rst", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage.rst", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage.rst", "reference/generated/pydicom.uid.BasicTextSRStorage.rst", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.BodyPositionWaveformStorage.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CTImageStorage.rst", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pydicom.uid.ChestCADSRStorage.rst", "reference/generated/pydicom.uid.ColonCADSRStorage.rst", "reference/generated/pydicom.uid.ColorPaletteStorage.rst", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.Comprehensive3DSRStorage.rst", "reference/generated/pydicom.uid.ComprehensiveSRStorage.rst", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage.rst", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage.rst", "reference/generated/pydicom.uid.CornealTopographyMapStorage.rst", "reference/generated/pydicom.uid.DICOS2DAITStorage.rst", "reference/generated/pydicom.uid.DICOS3DAITStorage.rst", "reference/generated/pydicom.uid.DICOSCTImageStorage.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage.rst", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage.rst", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.EddyCurrentImageStorage.rst", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage.rst", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage.rst", "reference/generated/pydicom.uid.EncapsulatedCDAStorage.rst", "reference/generated/pydicom.uid.EncapsulatedMTLStorage.rst", "reference/generated/pydicom.uid.EncapsulatedOBJStorage.rst", "reference/generated/pydicom.uid.EncapsulatedPDFStorage.rst", "reference/generated/pydicom.uid.EncapsulatedSTLStorage.rst", "reference/generated/pydicom.uid.EnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.EnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.EnhancedRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedSRStorage.rst", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage.rst", "reference/generated/pydicom.uid.EnhancedXAImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRFImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.ExplicitVRBigEndian.rst", "reference/generated/pydicom.uid.ExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.ExtensibleSRStorage.rst", "reference/generated/pydicom.uid.General32bitECGWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralECGWaveformStorage.rst", "reference/generated/pydicom.uid.GenericImplantTemplateStorage.rst", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.HEVCM10P51.rst", "reference/generated/pydicom.uid.HEVCMP51.rst", "reference/generated/pydicom.uid.HTJ2K.rst", "reference/generated/pydicom.uid.HTJ2KLossless.rst", "reference/generated/pydicom.uid.HTJ2KLosslessRPCL.rst", "reference/generated/pydicom.uid.HangingProtocolStorage.rst", "reference/generated/pydicom.uid.HemodynamicWaveformStorage.rst", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage.rst", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage.rst", "reference/generated/pydicom.uid.ImplantationPlanSRStorage.rst", "reference/generated/pydicom.uid.ImplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pydicom.uid.InventoryStorage.rst", "reference/generated/pydicom.uid.JPEG2000.rst", "reference/generated/pydicom.uid.JPEG2000Lossless.rst", "reference/generated/pydicom.uid.JPEG2000MC.rst", "reference/generated/pydicom.uid.JPEG2000MCLossless.rst", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGBaseline8Bit.rst", "reference/generated/pydicom.uid.JPEGExtended12Bit.rst", "reference/generated/pydicom.uid.JPEGLSLossless.rst", "reference/generated/pydicom.uid.JPEGLSNearLossless.rst", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGLossless.rst", "reference/generated/pydicom.uid.JPEGLosslessSV1.rst", "reference/generated/pydicom.uid.JPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferenced.rst", "reference/generated/pydicom.uid.JPIPHTJ2KReferencedDeflate.rst", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.LensometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.MPEG2MPHL.rst", "reference/generated/pydicom.uid.MPEG2MPHLF.rst", "reference/generated/pydicom.uid.MPEG2MPML.rst", "reference/generated/pydicom.uid.MPEG2MPMLF.rst", "reference/generated/pydicom.uid.MPEG4HP41.rst", "reference/generated/pydicom.uid.MPEG4HP41BD.rst", "reference/generated/pydicom.uid.MPEG4HP41BDF.rst", "reference/generated/pydicom.uid.MPEG4HP41F.rst", "reference/generated/pydicom.uid.MPEG4HP422D.rst", "reference/generated/pydicom.uid.MPEG4HP422DF.rst", "reference/generated/pydicom.uid.MPEG4HP423D.rst", "reference/generated/pydicom.uid.MPEG4HP423DF.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREO.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREOF.rst", "reference/generated/pydicom.uid.MPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.MRImageStorage.rst", "reference/generated/pydicom.uid.MRSpectroscopyStorage.rst", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pydicom.uid.MammographyCADSRStorage.rst", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage.rst", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.NuclearMedicineImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage.rst", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID.rst", "reference/generated/pydicom.uid.ParametricMapStorage.rst", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PhotoacousticImageStorage.rst", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage.rst", "reference/generated/pydicom.uid.PrivateTransferSyntaxes.rst", "reference/generated/pydicom.uid.ProcedureLogStorage.rst", "reference/generated/pydicom.uid.ProtocolApprovalStorage.rst", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.RE_VALID_UID.rst", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX.rst", "reference/generated/pydicom.uid.RLELossless.rst", "reference/generated/pydicom.uid.RLETransferSyntaxes.rst", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTDoseStorage.rst", "reference/generated/pydicom.uid.RTImageStorage.rst", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTIonPlanStorage.rst", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage.rst", "reference/generated/pydicom.uid.RTPhysicianIntentStorage.rst", "reference/generated/pydicom.uid.RTPlanStorage.rst", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage.rst", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetStorage.rst", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage.rst", "reference/generated/pydicom.uid.RTStructureSetStorage.rst", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage.rst", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.RawDataStorage.rst", "reference/generated/pydicom.uid.RealWorldValueMappingStorage.rst", "reference/generated/pydicom.uid.RespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.RoboticArmRadiationStorage.rst", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio.rst", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.SegmentationStorage.rst", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SpatialFiducialsStorage.rst", "reference/generated/pydicom.uid.SpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage.rst", "reference/generated/pydicom.uid.StereometricRelationshipStorage.rst", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.SurfaceScanMeshStorage.rst", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage.rst", "reference/generated/pydicom.uid.SurfaceSegmentationStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage.rst", "reference/generated/pydicom.uid.TractographyResultsStorage.rst", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage.rst", "reference/generated/pydicom.uid.UID.rst", "reference/generated/pydicom.uid.UltrasoundImageStorage.rst", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes.rst", "reference/generated/pydicom.uid.VLEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VLMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage.rst", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage.rst", "reference/generated/pydicom.uid.XRayAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pydicom.uid.generate_uid.rst", "reference/generated/pydicom.uid.register_transfer_syntax.rst", "reference/generated/pydicom.valuerep.DA.rst", "reference/generated/pydicom.valuerep.DS.rst", "reference/generated/pydicom.valuerep.DSdecimal.rst", "reference/generated/pydicom.valuerep.DSfloat.rst", "reference/generated/pydicom.valuerep.DT.rst", "reference/generated/pydicom.valuerep.IS.rst", "reference/generated/pydicom.valuerep.ISfloat.rst", "reference/generated/pydicom.valuerep.PersonName.rst", "reference/generated/pydicom.valuerep.TM.rst", "reference/generated/pydicom.valuerep.VR.rst", "reference/generated/pydicom.valuerep.format_number_as_ds.rst", "reference/generated/pydicom.valuerep.is_valid_ds.rst", "reference/generated/pydicom.values.convert_AE_string.rst", "reference/generated/pydicom.values.convert_ATvalue.rst", "reference/generated/pydicom.values.convert_DA_string.rst", "reference/generated/pydicom.values.convert_DS_string.rst", "reference/generated/pydicom.values.convert_DT_string.rst", "reference/generated/pydicom.values.convert_IS_string.rst", "reference/generated/pydicom.values.convert_OBvalue.rst", "reference/generated/pydicom.values.convert_OWvalue.rst", "reference/generated/pydicom.values.convert_PN.rst", "reference/generated/pydicom.values.convert_SQ.rst", "reference/generated/pydicom.values.convert_TM_string.rst", "reference/generated/pydicom.values.convert_UI.rst", "reference/generated/pydicom.values.convert_UN.rst", "reference/generated/pydicom.values.convert_UR_string.rst", "reference/generated/pydicom.values.convert_numbers.rst", "reference/generated/pydicom.values.convert_single_string.rst", "reference/generated/pydicom.values.convert_string.rst", "reference/generated/pydicom.values.convert_tag.rst", "reference/generated/pydicom.values.convert_text.rst", "reference/generated/pydicom.values.convert_value.rst", "reference/generated/pydicom.values.multi_string.rst", "reference/generated/pydicom.waveforms.numpy_handler.rst", "reference/handlers.rst", "reference/handlers.pixel_data.rst", "reference/index.rst", "reference/misc.rst", "reference/overlays.rst", "reference/pixels.rst", "reference/pixels.decoders.rst", "reference/pixels.encoders.rst", "reference/uid.rst", "reference/waveforms.rst", "release_notes/index.rst", "release_notes/v0.9.2.rst", "release_notes/v0.9.3.rst", "release_notes/v0.9.4.rst", "release_notes/v0.9.5.rst", "release_notes/v0.9.6.rst", "release_notes/v0.9.7.rst", "release_notes/v0.9.8.rst", "release_notes/v0.9.9.rst", "release_notes/v1.0.0.rst", "release_notes/v1.1.0.rst", "release_notes/v1.2.0.rst", "release_notes/v1.3.0.rst", "release_notes/v1.4.0.rst", "release_notes/v1.4.1.rst", "release_notes/v2.0.0.rst", "release_notes/v2.1.0.rst", "release_notes/v2.1.1.rst", "release_notes/v2.2.0.rst", "release_notes/v2.3.0.rst", "release_notes/v2.4.0.rst", "release_notes/v3.0.0.rst", "sg_execution_times.rst", "tutorials/contributing.rst", "tutorials/contributing_code.rst", "tutorials/contributing_docs.rst", "tutorials/dataset_basics.rst", "tutorials/dicom_json.rst", "tutorials/filesets.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/pixel_data/compressing.rst", "tutorials/sr_basics.rst", "tutorials/waveforms.rst"], "titles": ["Show a dicom file using hierarchical tree", "Image processing", "Downsize MRI image using pydicom", "Decode and plot Waveform Data", "Load CT slices and plot axial, sagittal and coronal images", "Computation times", "General examples", "Input-output", "Format the output of the data set printing", "Read a Dataset and plot Pixel Data", "Read a DICOM File-set", "Read RTPLAN DICOM and list information", "Write DICOM data", "Computation times", "Show working with memory-based dataset", "Metadata processing", "Add items to the private DICOM dictionary", "Anonymize DICOM data", "Working with sequences", "Computation times", "Analyse differences between DICOM files", "Computation times", "Display unicode person names", "Frequently asked questions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">codify</span></code> command", "Extending the CLI", "Command-line Interface Guide", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">show</span></code> command", "Pixel Data Decoder Options", "Pixel Data Decoder Plugins", "Pixel Data Decoding", "Element VRs and Python types", "Encoder Plugins Options", "Pixel Data Encoder Plugins", "Pixel Data Encoding", "JPEG 2000 Encoding", "JPEG-LS Encoding", "RLE Lossless Encoding", "Glossary", "Guides", "Writing documentation", "pydicom documentation", "Core elements in pydicom", "Best Practices", "Introduction to pydicom", "Compressing <em>Pixel Data</em>", "Handling of compressed pixel data", "Private Data Elements", "pydicom User Guide", "Reading and writing DICOM files", "Viewing Images", "Working with Overlay Data", "Working with Pixel Data", "Working with Waveform Data", "Writing DICOM Files", "Character Encoding and Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.charset</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.config</span></code>)", "Getting Included Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.data</span></code>)", "Data Dictionary Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.datadict</span></code>)", "Representation of Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataset</span></code>)", "Representation of Data Elements", "Data Elements (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataelem</span></code>)", "Element Multi-value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.multival</span></code>)", "Sequence Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sequence</span></code>)", "Element Tags (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.tag</span></code>)", "Specialized Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.valuerep</span></code>)", "Element Value Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.values</span></code>)", "Bulk Data Encapsulation Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encaps</span></code>)", "Exceptions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.errors</span></code>)", "Example Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.examples</span></code>)", "Dataset IO", "IO Base Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filebase</span></code>)", "Dataset Reading (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filereader</span></code>)", "IO Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileutil</span></code>)", "Dataset Writing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filewriter</span></code>)", "DICOM File-sets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileset</span></code>)", "pydicom.charset.convert_encodings", "pydicom.charset.decode_bytes", "pydicom.charset.decode_element", "pydicom.charset.encode_string", "pydicom.config.APPLY_J2K_CORRECTIONS", "pydicom.config.DS_decimal", "pydicom.config.DS_numpy", "pydicom.config.IGNORE", "pydicom.config.INVALID_KEYWORD_BEHAVIOR", "pydicom.config.INVALID_KEY_BEHAVIOR", "pydicom.config.RAISE", "pydicom.config.WARN", "pydicom.config.allow_DS_float", "pydicom.config.assume_implicit_vr_switch", "pydicom.config.convert_wrong_length_to_UN", "pydicom.config.data_element_callback", "pydicom.config.data_element_callback_kwargs", "pydicom.config.datetime_conversion", "pydicom.config.debug", "pydicom.config.enforce_valid_values", "pydicom.config.future_behavior", "pydicom.config.pixel_data_handlers", "pydicom.config.reset_data_element_callback", "pydicom.config.settings", "pydicom.config.show_file_meta", "pydicom.config.use_DS_decimal", "pydicom.config.use_DS_numpy", "pydicom.config.use_IS_numpy", "pydicom.data.get_charset_files", "pydicom.data.get_palette_files", "pydicom.data.get_testdata_file", "pydicom.data.get_testdata_files", "pydicom.datadict.add_dict_entries", "pydicom.datadict.add_dict_entry", "pydicom.datadict.add_private_dict_entries", "pydicom.datadict.add_private_dict_entry", "pydicom.datadict.dictionary_VM", "pydicom.datadict.dictionary_VR", "pydicom.datadict.dictionary_description", "pydicom.datadict.dictionary_has_tag", "pydicom.datadict.dictionary_is_retired", "pydicom.datadict.dictionary_keyword", "pydicom.datadict.get_entry", "pydicom.datadict.get_private_entry", "pydicom.datadict.keyword_for_tag", "pydicom.datadict.mask_match", "pydicom.datadict.private_dictionary_VM", "pydicom.datadict.private_dictionary_VR", "pydicom.datadict.private_dictionary_description", "pydicom.datadict.repeater_has_keyword", "pydicom.datadict.repeater_has_tag", "pydicom.datadict.tag_for_keyword", "pydicom.dataelem.DataElement", "pydicom.dataelem.DataElement_from_raw", "pydicom.dataelem.RawDataElement", "pydicom.dataset.Dataset", "pydicom.dataset.FileDataset", "pydicom.dataset.FileMetaDataset", "pydicom.dataset.PrivateBlock", "pydicom.dataset.validate_file_meta", "pydicom.encaps.decode_data_sequence", "pydicom.encaps.defragment_data", "pydicom.encaps.encapsulate", "pydicom.encaps.encapsulate_extended", "pydicom.encaps.fragment_frame", "pydicom.encaps.generate_fragmented_frames", "pydicom.encaps.generate_fragments", "pydicom.encaps.generate_frames", "pydicom.encaps.generate_pixel_data", "pydicom.encaps.generate_pixel_data_fragment", "pydicom.encaps.generate_pixel_data_frame", "pydicom.encaps.get_frame", "pydicom.encaps.get_frame_offsets", "pydicom.encaps.itemize_fragment", "pydicom.encaps.itemize_frame", "pydicom.encaps.parse_basic_offsets", "pydicom.encaps.parse_fragments", "pydicom.encaps.read_item", "pydicom.errors.InvalidDicomError", "pydicom.filebase.DicomBytesIO", "pydicom.filebase.DicomFile", "pydicom.filebase.DicomFileLike", "pydicom.filebase.DicomIO", "pydicom.filereader.data_element_generator", "pydicom.filereader.data_element_offset_to_value", "pydicom.filereader.dcmread", "pydicom.filereader.read_dataset", "pydicom.filereader.read_deferred_data_element", "pydicom.filereader.read_file_meta_info", "pydicom.filereader.read_partial", "pydicom.filereader.read_preamble", "pydicom.filereader.read_sequence", "pydicom.filereader.read_sequence_item", "pydicom.fileset.DIRECTORY_RECORDERS", "pydicom.fileset.FileInstance", "pydicom.fileset.FileSet", "pydicom.fileset.RecordNode", "pydicom.fileset.generate_filename", "pydicom.fileset.is_conformant_file_id", "pydicom.fileutil.absorb_delimiter_item", "pydicom.fileutil.find_bytes", "pydicom.fileutil.find_delimiter", "pydicom.fileutil.length_of_undefined_length", "pydicom.fileutil.read_undefined_length_value", "pydicom.filewriter.correct_ambiguous_vr", "pydicom.filewriter.correct_ambiguous_vr_element", "pydicom.filewriter.dcmwrite", "pydicom.filewriter.multi_string", "pydicom.filewriter.write_ATvalue", "pydicom.filewriter.write_DA", "pydicom.filewriter.write_DT", "pydicom.filewriter.write_OBvalue", "pydicom.filewriter.write_OWvalue", "pydicom.filewriter.write_PN", "pydicom.filewriter.write_TM", "pydicom.filewriter.write_UI", "pydicom.filewriter.write_UN", "pydicom.filewriter.write_data_element", "pydicom.filewriter.write_dataset", "pydicom.filewriter.write_file_meta_info", "pydicom.filewriter.write_number_string", "pydicom.filewriter.write_numbers", "pydicom.filewriter.write_sequence", "pydicom.filewriter.write_sequence_item", "pydicom.filewriter.write_string", "pydicom.filewriter.write_text", "pydicom.misc.is_dicom", "pydicom.misc.size_in_bytes", "pydicom.multival.MultiValue", "pydicom.overlays.numpy_handler", "pydicom.pixel_data_handlers.apply_color_lut", "pydicom.pixel_data_handlers.apply_modality_lut", "pydicom.pixel_data_handlers.apply_rescale", "pydicom.pixel_data_handlers.apply_voi", "pydicom.pixel_data_handlers.apply_voi_lut", "pydicom.pixel_data_handlers.apply_windowing", "pydicom.pixel_data_handlers.convert_color_space", "pydicom.pixel_data_handlers.gdcm_handler", "pydicom.pixel_data_handlers.jpeg_ls_handler", "pydicom.pixel_data_handlers.numpy_handler", "pydicom.pixel_data_handlers.pillow_handler", "pydicom.pixel_data_handlers.pylibjpeg_handler", "pydicom.pixel_data_handlers.rle_handler", "pydicom.pixel_data_handlers.util", "pydicom.pixels.as_pixel_options", "pydicom.pixels.decoders.base.DecodeRunner", "pydicom.pixels.decoders.base.Decoder", "pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder", "pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.base.HTJ2KDecoder", "pydicom.pixels.decoders.base.HTJ2KLosslessDecoder", "pydicom.pixels.decoders.base.HTJ2KLosslessRPCLDecoder", "pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder", "pydicom.pixels.decoders.base.JPEG2000Decoder", "pydicom.pixels.decoders.base.JPEG2000LosslessDecoder", "pydicom.pixels.decoders.base.JPEGBaseline8BitDecoder", "pydicom.pixels.decoders.base.JPEGExtended12BitDecoder", "pydicom.pixels.decoders.base.JPEGLSLosslessDecoder", "pydicom.pixels.decoders.base.JPEGLSNearLosslessDecoder", "pydicom.pixels.decoders.base.JPEGLosslessDecoder", "pydicom.pixels.decoders.base.JPEGLosslessSV1Decoder", "pydicom.pixels.decoders.base.RLELosslessDecoder", "pydicom.pixels.encoders.base.EncodeRunner", "pydicom.pixels.encoders.base.Encoder", "pydicom.pixels.encoders.base.JPEG2000Encoder", "pydicom.pixels.encoders.base.JPEG2000LosslessEncoder", "pydicom.pixels.encoders.base.JPEGLSLosslessEncoder", "pydicom.pixels.encoders.base.JPEGLSNearLosslessEncoder", "pydicom.pixels.encoders.base.RLELosslessEncoder", "pydicom.pixels.get_decoder", "pydicom.pixels.get_encoder", "pydicom.pixels.iter_pixels", "pydicom.pixels.pixel_array", "pydicom.sequence.Sequence", "pydicom.tag.BaseTag", "pydicom.tag.Tag", "pydicom.tag.TupleTag", "pydicom.tag.tag_in_exception", "pydicom.uid.AcquisitionContextSRStorage", "pydicom.uid.AdvancedBlendingPresentationStateStorage", "pydicom.uid.AllTransferSyntaxes", "pydicom.uid.AmbulatoryECGWaveformStorage", "pydicom.uid.ArterialPulseWaveformStorage", "pydicom.uid.AutorefractionMeasurementsStorage", "pydicom.uid.BasicStructuredDisplayStorage", "pydicom.uid.BasicTextSRStorage", "pydicom.uid.BasicVoiceAudioWaveformStorage", "pydicom.uid.BlendingSoftcopyPresentationStateStorage", "pydicom.uid.BodyPositionWaveformStorage", "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "pydicom.uid.BreastTomosynthesisImageStorage", "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "pydicom.uid.CArmPhotonElectronRadiationStorage", "pydicom.uid.CTDefinedProcedureProtocolStorage", "pydicom.uid.CTImageStorage", "pydicom.uid.CTPerformedProcedureProtocolStorage", "pydicom.uid.CardiacElectrophysiologyWaveformStorage", "pydicom.uid.ChestCADSRStorage", "pydicom.uid.ColonCADSRStorage", "pydicom.uid.ColorPaletteStorage", "pydicom.uid.ColorSoftcopyPresentationStateStorage", "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.Comprehensive3DSRStorage", "pydicom.uid.ComprehensiveSRStorage", "pydicom.uid.ComputedRadiographyImageStorage", "pydicom.uid.ConfocalMicroscopyImageStorage", "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage", "pydicom.uid.ContentAssessmentResultsStorage", "pydicom.uid.CornealTopographyMapStorage", "pydicom.uid.DICOS2DAITStorage", "pydicom.uid.DICOS3DAITStorage", "pydicom.uid.DICOSCTImageStorage", "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "pydicom.uid.DICOSQuadrupoleResonanceStorage", "pydicom.uid.DICOSThreatDetectionReportStorage", "pydicom.uid.DeflatedExplicitVRLittleEndian", "pydicom.uid.DeformableSpatialRegistrationStorage", "pydicom.uid.DermoscopicPhotographyImageStorage", "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "pydicom.uid.DigitalXRayImageStorageForPresentation", "pydicom.uid.DigitalXRayImageStorageForProcessing", "pydicom.uid.EddyCurrentImageStorage", "pydicom.uid.EddyCurrentMultiFrameImageStorage", "pydicom.uid.ElectromyogramWaveformStorage", "pydicom.uid.ElectrooculogramWaveformStorage", "pydicom.uid.EncapsulatedCDAStorage", "pydicom.uid.EncapsulatedMTLStorage", "pydicom.uid.EncapsulatedOBJStorage", "pydicom.uid.EncapsulatedPDFStorage", "pydicom.uid.EncapsulatedSTLStorage", "pydicom.uid.EnhancedCTImageStorage", "pydicom.uid.EnhancedContinuousRTImageStorage", "pydicom.uid.EnhancedMRColorImageStorage", "pydicom.uid.EnhancedMRImageStorage", "pydicom.uid.EnhancedPETImageStorage", "pydicom.uid.EnhancedRTImageStorage", "pydicom.uid.EnhancedSRStorage", "pydicom.uid.EnhancedUSVolumeStorage", "pydicom.uid.EnhancedXAImageStorage", "pydicom.uid.EnhancedXRFImageStorage", "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "pydicom.uid.ExplicitVRBigEndian", "pydicom.uid.ExplicitVRLittleEndian", "pydicom.uid.ExtensibleSRStorage", "pydicom.uid.General32bitECGWaveformStorage", "pydicom.uid.GeneralAudioWaveformStorage", "pydicom.uid.GeneralECGWaveformStorage", "pydicom.uid.GenericImplantTemplateStorage", "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.HEVCM10P51", "pydicom.uid.HEVCMP51", "pydicom.uid.HTJ2K", "pydicom.uid.HTJ2KLossless", "pydicom.uid.HTJ2KLosslessRPCL", "pydicom.uid.HangingProtocolStorage", "pydicom.uid.HemodynamicWaveformStorage", "pydicom.uid.ImplantAssemblyTemplateStorage", "pydicom.uid.ImplantTemplateGroupStorage", "pydicom.uid.ImplantationPlanSRStorage", "pydicom.uid.ImplicitVRLittleEndian", "pydicom.uid.IntraocularLensCalculationsStorage", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pydicom.uid.InventoryStorage", "pydicom.uid.JPEG2000", "pydicom.uid.JPEG2000Lossless", "pydicom.uid.JPEG2000MC", "pydicom.uid.JPEG2000MCLossless", "pydicom.uid.JPEG2000TransferSyntaxes", "pydicom.uid.JPEGBaseline8Bit", "pydicom.uid.JPEGExtended12Bit", "pydicom.uid.JPEGLSLossless", "pydicom.uid.JPEGLSNearLossless", "pydicom.uid.JPEGLSTransferSyntaxes", "pydicom.uid.JPEGLossless", "pydicom.uid.JPEGLosslessSV1", "pydicom.uid.JPEGTransferSyntaxes", "pydicom.uid.JPIPHTJ2KReferenced", "pydicom.uid.JPIPHTJ2KReferencedDeflate", "pydicom.uid.KeratometryMeasurementsStorage", "pydicom.uid.KeyObjectSelectionDocumentStorage", "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "pydicom.uid.LensometryMeasurementsStorage", "pydicom.uid.MPEG2MPHL", "pydicom.uid.MPEG2MPHLF", "pydicom.uid.MPEG2MPML", "pydicom.uid.MPEG2MPMLF", "pydicom.uid.MPEG4HP41", "pydicom.uid.MPEG4HP41BD", "pydicom.uid.MPEG4HP41BDF", "pydicom.uid.MPEG4HP41F", "pydicom.uid.MPEG4HP422D", "pydicom.uid.MPEG4HP422DF", "pydicom.uid.MPEG4HP423D", "pydicom.uid.MPEG4HP423DF", "pydicom.uid.MPEG4HP42STEREO", "pydicom.uid.MPEG4HP42STEREOF", "pydicom.uid.MPEGTransferSyntaxes", "pydicom.uid.MRImageStorage", "pydicom.uid.MRSpectroscopyStorage", "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "pydicom.uid.MammographyCADSRStorage", "pydicom.uid.MediaStorageDirectoryStorage", "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "pydicom.uid.MultichannelRespiratoryWaveformStorage", "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.NuclearMedicineImageStorage", "pydicom.uid.OphthalmicAxialMeasurementsStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pydicom.uid.OphthalmicPhotography16BitImageStorage", "pydicom.uid.OphthalmicPhotography8BitImageStorage", "pydicom.uid.OphthalmicThicknessMapStorage", "pydicom.uid.OphthalmicTomographyImageStorage", "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "pydicom.uid.PYDICOM_ROOT_UID", "pydicom.uid.ParametricMapStorage", "pydicom.uid.PatientRadiationDoseSRStorage", "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "pydicom.uid.PhotoacousticImageStorage", "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "pydicom.uid.PositronEmissionTomographyImageStorage", "pydicom.uid.PrivateTransferSyntaxes", "pydicom.uid.ProcedureLogStorage", "pydicom.uid.ProtocolApprovalStorage", "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "pydicom.uid.RE_VALID_UID", "pydicom.uid.RE_VALID_UID_PREFIX", "pydicom.uid.RLELossless", "pydicom.uid.RLETransferSyntaxes", "pydicom.uid.RTBeamsDeliveryInstructionStorage", "pydicom.uid.RTBeamsTreatmentRecordStorage", "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "pydicom.uid.RTBrachyTreatmentRecordStorage", "pydicom.uid.RTDoseStorage", "pydicom.uid.RTImageStorage", "pydicom.uid.RTIonBeamsTreatmentRecordStorage", "pydicom.uid.RTIonPlanStorage", "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "pydicom.uid.RTPhysicianIntentStorage", "pydicom.uid.RTPlanStorage", "pydicom.uid.RTRadiationRecordSetStorage", "pydicom.uid.RTRadiationSalvageRecordStorage", "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "pydicom.uid.RTRadiationSetStorage", "pydicom.uid.RTSegmentAnnotationStorage", "pydicom.uid.RTStructureSetStorage", "pydicom.uid.RTTreatmentPreparationStorage", "pydicom.uid.RTTreatmentSummaryRecordStorage", "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "pydicom.uid.RawDataStorage", "pydicom.uid.RealWorldValueMappingStorage", "pydicom.uid.RespiratoryWaveformStorage", "pydicom.uid.RoboticArmRadiationStorage", "pydicom.uid.RoboticRadiationRecordStorage", "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "pydicom.uid.SMPTEST211030PCMDigitalAudio", "pydicom.uid.SecondaryCaptureImageStorage", "pydicom.uid.SegmentationStorage", "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.SimplifiedAdultEchoSRStorage", "pydicom.uid.SleepElectroencephalogramWaveformStorage", "pydicom.uid.SpatialFiducialsStorage", "pydicom.uid.SpatialRegistrationStorage", "pydicom.uid.SpectaclePrescriptionReportStorage", "pydicom.uid.StereometricRelationshipStorage", "pydicom.uid.SubjectiveRefractionMeasurementsStorage", "pydicom.uid.SurfaceScanMeshStorage", "pydicom.uid.SurfaceScanPointCloudStorage", "pydicom.uid.SurfaceSegmentationStorage", "pydicom.uid.TomotherapeuticRadiationRecordStorage", "pydicom.uid.TomotherapeuticRadiationStorage", "pydicom.uid.TractographyResultsStorage", "pydicom.uid.TwelveLeadECGWaveformStorage", "pydicom.uid.UID", "pydicom.uid.UltrasoundImageStorage", "pydicom.uid.UltrasoundMultiFrameImageStorage", "pydicom.uid.UncompressedTransferSyntaxes", "pydicom.uid.VLEndoscopicImageStorage", "pydicom.uid.VLMicroscopicImageStorage", "pydicom.uid.VLPhotographicImageStorage", "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "pydicom.uid.VLWholeSlideMicroscopyImageStorage", "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "pydicom.uid.VideoEndoscopicImageStorage", "pydicom.uid.VideoMicroscopicImageStorage", "pydicom.uid.VideoPhotographicImageStorage", "pydicom.uid.VisualAcuityMeasurementsStorage", "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pydicom.uid.XADefinedProcedureProtocolStorage", "pydicom.uid.XAPerformedProcedureProtocolStorage", "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.XRay3DAngiographicImageStorage", "pydicom.uid.XRay3DCraniofacialImageStorage", "pydicom.uid.XRayAngiographicImageStorage", "pydicom.uid.XRayRadiationDoseSRStorage", "pydicom.uid.XRayRadiofluoroscopicImageStorage", "pydicom.uid.generate_uid", "pydicom.uid.register_transfer_syntax", "pydicom.valuerep.DA", "pydicom.valuerep.DS", "pydicom.valuerep.DSdecimal", "pydicom.valuerep.DSfloat", "pydicom.valuerep.DT", "pydicom.valuerep.IS", "pydicom.valuerep.ISfloat", "pydicom.valuerep.PersonName", "pydicom.valuerep.TM", "pydicom.valuerep.VR", "pydicom.valuerep.format_number_as_ds", "pydicom.valuerep.is_valid_ds", "pydicom.values.convert_AE_string", "pydicom.values.convert_ATvalue", "pydicom.values.convert_DA_string", "pydicom.values.convert_DS_string", "pydicom.values.convert_DT_string", "pydicom.values.convert_IS_string", "pydicom.values.convert_OBvalue", "pydicom.values.convert_OWvalue", "pydicom.values.convert_PN", "pydicom.values.convert_SQ", "pydicom.values.convert_TM_string", "pydicom.values.convert_UI", "pydicom.values.convert_UN", "pydicom.values.convert_UR_string", "pydicom.values.convert_numbers", "pydicom.values.convert_single_string", "pydicom.values.convert_string", "pydicom.values.convert_tag", "pydicom.values.convert_text", "pydicom.values.convert_value", "pydicom.values.multi_string", "pydicom.waveforms.numpy_handler", "Bulk Data Handlers", "Pixel Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixel_data_handlers</span></code>)", "API Reference", "Miscellaneous (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.misc</span></code>)", "Overlay Data Handling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.overlays</span></code>)", "Pixel Data (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels</span></code>)", "Pixel Data Decoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.decoders</span></code>)", "Pixel Data Encoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixels.encoders</span></code>)", "UID Definitions and Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.uid</span></code>)", "Waveform Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.waveforms</span></code>)", "Release notes", "Version 0.9.2", "Version 0.9.3", "Version 0.9.4", "Version 0.9.5", "Version 0.9.6", "Version 0.9.7", "Version 0.9.8", "Version 0.9.9", "Version 1.0.0", "Version 1.1.0", "Version 1.2.0", "Version 1.3.0", "Version 1.4.0", "Version 1.4.1", "Version 2.0.0", "Version 2.1.0", "Version 2.1.1", "Version 2.2.0", "Version 2.3.0", "Version 2.4.0", "Version 3.0.0", "Computation times", "Contributing to pydicom", "Contributing a source code change", "Contributing a documentation change", "Dataset basics: read, access, modify, write", "Introduction to JSON support", "DICOM File-sets and DICOMDIR", "Tutorials", "How to install pydicom", "Compressing <em>Pixel Data</em>", "Structured Reporting", "Waveforms"], "terms": {"go": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 55, 165, 562, 563, 564, 566, 568], "end": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 141, 143, 152, 153, 163, 178, 180, 220, 222, 223, 252, 467, 499, 538, 544, 551], "download": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 107, 538, 554, 556, 557, 558], "full": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 37, 48, 107, 133, 162, 222, 496, 538, 547, 548, 549, 554, 566, 569], "exampl": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 30, 34, 39, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 85, 86, 109, 110, 111, 129, 132, 133, 134, 140, 162, 170, 172, 221, 241, 249, 250, 252, 467, 492, 496, 499, 501, 530, 538, 539, 540, 541, 543, 544, 546, 550, 554, 556, 559, 560, 561, 562, 563, 565, 566, 569, 571], "code": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 32, 36, 43, 45, 48, 49, 50, 55, 78, 79, 97, 132, 133, 134, 160, 162, 165, 467, 538, 539, 541, 545, 546, 547, 549, 551, 554, 556, 559, 561, 563, 567, 568, 570, 571], "graphic": [0, 51, 53], "window": [0, 2, 8, 20, 26, 27, 44, 49, 211, 212, 220, 538, 539, 547, 551, 557, 562, 563, 564, 568], "from": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 70, 73, 77, 78, 80, 82, 85, 86, 92, 98, 109, 110, 119, 120, 129, 130, 131, 132, 133, 134, 136, 137, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 164, 167, 170, 171, 172, 173, 174, 181, 182, 183, 195, 196, 198, 205, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 240, 249, 250, 251, 467, 492, 494, 496, 497, 498, 500, 501, 502, 505, 523, 538, 541, 542, 543, 544, 545, 546, 549, 550, 553, 554, 555, 556, 559, 560, 562, 563, 564, 566, 568, 569, 570, 571], "pathlib": [0, 10, 12, 175, 566], "import": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 30, 34, 36, 37, 38, 39, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 70, 85, 86, 109, 110, 129, 132, 133, 134, 140, 170, 172, 223, 241, 467, 492, 538, 544, 547, 559, 562, 563, 564, 565, 566, 568, 569, 570, 571], "path": [0, 9, 10, 11, 12, 17, 24, 26, 27, 28, 30, 34, 41, 43, 45, 47, 50, 53, 105, 106, 107, 108, 132, 133, 134, 162, 171, 172, 175, 183, 203, 223, 241, 249, 250, 538, 554, 559, 563, 566], "sy": [0, 4, 14, 252, 499, 571], "tkinter": [0, 22, 49, 538, 539, 541], "tk": [0, 22], "ttk": 0, "pydicom": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 25, 29, 30, 32, 34, 36, 37, 38, 40, 41, 47, 50, 52, 53, 54, 55, 61, 71, 528, 530, 539, 541, 542, 543, 544, 545, 546, 547, 548, 551, 553, 554, 556, 560, 562, 563, 564, 565, 566, 567, 570, 571], "print": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 36, 37, 43, 45, 52, 110, 112, 132, 133, 134, 249, 538, 540, 551, 560, 563, 564, 566, 571], "__doc__": [0, 2, 8, 11, 14, 16, 20, 22], "def": [0, 8, 11, 14, 17, 25, 26, 30, 34, 98, 132, 133, 134, 170, 467, 562, 565], "build_tre": 0, "treeview": 0, "d": [0, 2, 3, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 61, 66, 70, 82, 83, 85, 86, 98, 102, 103, 109, 110, 111, 129, 132, 133, 134, 139, 140, 162, 170, 172, 181, 182, 197, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 496, 497, 501, 504, 509, 527, 538, 544, 545, 553, 556, 558, 562, 563, 564, 565, 566, 569, 571], "dataset": [0, 2, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 32, 37, 38, 39, 41, 44, 45, 47, 48, 49, 50, 51, 55, 74, 81, 85, 86, 92, 98, 101, 107, 108, 109, 110, 129, 130, 137, 139, 140, 145, 147, 156, 158, 159, 162, 163, 166, 168, 169, 170, 171, 172, 173, 181, 182, 183, 195, 196, 200, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 240, 241, 249, 250, 251, 467, 493, 527, 530, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 563, 566, 567, 568, 569, 571], "parent": [0, 26, 27, 135, 156, 158, 159, 172, 173, 538, 548, 559, 566], "str": [0, 11, 14, 20, 29, 30, 32, 34, 43, 77, 78, 79, 80, 89, 93, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 142, 143, 144, 148, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 183, 184, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 206, 207, 213, 219, 220, 221, 222, 223, 240, 241, 247, 248, 249, 250, 252, 253, 467, 492, 493, 494, 495, 496, 497, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 538, 548, 553, 556, 564], "none": [0, 2, 8, 10, 14, 20, 32, 33, 41, 77, 79, 82, 83, 92, 95, 97, 98, 99, 107, 109, 110, 111, 112, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 142, 144, 145, 147, 148, 154, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 220, 222, 223, 240, 241, 249, 250, 251, 253, 255, 467, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 524, 525, 526, 527, 538, 547, 550, 551, 554, 562, 564, 568, 570], "build": [0, 4, 181, 182, 538, 547, 558, 562], "out": [0, 51, 53, 55, 140, 172, 205, 220, 251, 496, 497, 538, 554, 561, 562, 563, 564, 566, 571], "paramet": [0, 10, 20, 24, 26, 41, 53, 54, 55, 77, 78, 79, 80, 82, 83, 95, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 195, 196, 198, 199, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 240, 241, 249, 250, 251, 253, 255, 467, 492, 493, 496, 497, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 538, 544, 546, 548, 554, 556, 557, 564, 566, 569], "The": [0, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 70, 77, 78, 79, 80, 98, 100, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 162, 164, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 195, 196, 198, 199, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 240, 241, 249, 250, 252, 253, 255, 467, 492, 493, 494, 496, 498, 499, 501, 502, 504, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 538, 541, 548, 549, 554, 559, 562, 563, 564, 565, 568, 569, 570, 571], "object": [0, 10, 14, 30, 34, 41, 43, 45, 48, 51, 86, 100, 104, 129, 132, 133, 134, 135, 142, 143, 144, 148, 152, 153, 156, 158, 159, 162, 163, 164, 166, 167, 170, 172, 183, 205, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 498, 499, 501, 530, 538, 540, 541, 550, 551, 553, 556, 557, 559, 564, 566, 571], "add": [0, 2, 6, 10, 12, 15, 18, 19, 20, 25, 26, 27, 30, 34, 41, 43, 44, 48, 52, 109, 111, 112, 129, 132, 133, 134, 135, 139, 140, 170, 172, 173, 183, 220, 223, 241, 496, 538, 547, 550, 556, 558, 559, 560, 562, 563, 564, 566, 569, 571], "item": [0, 6, 8, 9, 15, 19, 20, 24, 26, 27, 28, 32, 41, 43, 54, 55, 129, 132, 133, 134, 139, 140, 141, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 169, 176, 200, 205, 251, 538, 539, 540, 541, 544, 547, 550, 551, 556, 557, 560, 564, 566, 571], "id": [0, 2, 8, 9, 10, 12, 17, 20, 48, 132, 133, 134, 135, 171, 172, 173, 174, 175, 220, 538, 540, 557, 564, 566], "ani": [0, 10, 24, 26, 27, 29, 30, 32, 34, 36, 37, 39, 43, 44, 51, 52, 54, 80, 93, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 132, 133, 134, 136, 139, 140, 141, 155, 156, 157, 158, 159, 164, 172, 173, 183, 196, 205, 206, 211, 212, 220, 221, 222, 223, 240, 241, 249, 250, 252, 253, 467, 494, 496, 497, 498, 499, 500, 501, 502, 515, 519, 525, 526, 538, 540, 541, 550, 556, 559, 562, 563, 566, 568, 569], "default": [0, 9, 24, 26, 29, 32, 33, 34, 44, 47, 51, 52, 53, 57, 77, 81, 82, 83, 85, 86, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 129, 132, 133, 134, 136, 139, 141, 142, 143, 144, 148, 151, 152, 153, 156, 158, 159, 160, 162, 163, 172, 174, 181, 182, 183, 195, 196, 205, 206, 210, 211, 212, 213, 216, 218, 219, 220, 222, 223, 240, 241, 249, 250, 251, 467, 492, 496, 498, 501, 509, 511, 515, 526, 527, 538, 542, 544, 545, 547, 549, 550, 551, 552, 553, 554, 556, 559, 563, 564, 565, 566, 569], "For": [0, 17, 24, 26, 27, 30, 34, 36, 37, 38, 39, 41, 43, 44, 48, 52, 53, 55, 121, 129, 132, 133, 134, 139, 145, 146, 149, 170, 172, 206, 220, 221, 222, 223, 240, 241, 249, 250, 496, 501, 538, 544, 554, 559, 562, 563, 564, 566, 568, 569], "each": [0, 3, 10, 20, 29, 30, 33, 34, 36, 37, 38, 39, 42, 43, 46, 52, 53, 54, 70, 78, 132, 133, 134, 139, 140, 145, 146, 149, 150, 151, 152, 153, 173, 174, 205, 213, 219, 220, 222, 223, 240, 241, 249, 250, 467, 496, 501, 527, 538, 553, 556, 562, 564, 566, 569, 571], "datael": [0, 41, 48, 49, 52, 61, 79, 130, 132, 133, 134, 160, 163, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 201, 202, 214, 538, 539, 547, 548, 549, 550, 553, 557, 559, 564], "current": [0, 20, 24, 26, 28, 39, 41, 44, 46, 97, 129, 132, 133, 134, 156, 158, 159, 172, 173, 181, 182, 189, 207, 213, 220, 494, 496, 498, 501, 538, 556, 563, 566, 568, 569], "idx": 0, "elem": [0, 8, 17, 41, 43, 52, 79, 129, 132, 133, 134, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 201, 202, 206, 252, 254, 538, 541, 564], "enumer": [0, 4, 571], "tree_item": 0, "insert": [0, 205, 251, 467, 563, 564], "text": [0, 20, 22, 32, 43, 48, 129, 162, 199, 200, 202, 467, 515, 521, 522, 524, 525, 538, 540, 549, 562, 563, 564], "move": [0, 94, 100, 171, 172, 538, 544, 545, 559, 563, 566], "vr": [0, 2, 8, 12, 16, 17, 20, 26, 27, 28, 39, 40, 42, 43, 46, 47, 48, 57, 61, 66, 83, 90, 91, 94, 102, 103, 109, 110, 111, 112, 114, 119, 120, 124, 129, 130, 131, 132, 133, 134, 135, 141, 156, 158, 159, 160, 161, 163, 164, 172, 181, 182, 183, 188, 189, 192, 196, 197, 216, 223, 224, 225, 226, 230, 247, 258, 467, 493, 494, 496, 497, 498, 499, 500, 501, 502, 506, 515, 517, 519, 520, 521, 522, 524, 525, 538, 539, 540, 541, 542, 544, 545, 547, 548, 549, 550, 551, 553, 554, 556, 557, 558, 559, 564, 565, 569], "sq": [0, 8, 32, 57, 129, 132, 133, 134, 160, 515, 538, 544, 554, 557, 559, 564], "i": [0, 2, 3, 4, 10, 17, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 61, 66, 70, 72, 74, 77, 78, 80, 82, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 97, 98, 104, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 195, 196, 197, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 240, 241, 249, 250, 251, 252, 255, 467, 492, 494, 496, 497, 498, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 515, 516, 517, 519, 520, 522, 523, 538, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571], "sequenc": [0, 2, 3, 6, 8, 15, 19, 20, 24, 26, 27, 28, 32, 41, 49, 54, 55, 61, 78, 80, 90, 132, 133, 134, 141, 145, 146, 147, 163, 168, 169, 173, 176, 177, 199, 200, 208, 209, 210, 211, 220, 501, 515, 527, 530, 538, 539, 540, 544, 545, 548, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 566, 571], "contain": [0, 10, 24, 26, 29, 30, 32, 34, 39, 40, 41, 42, 43, 44, 48, 52, 53, 54, 55, 57, 70, 77, 79, 129, 131, 132, 133, 134, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 162, 163, 170, 177, 181, 182, 183, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 240, 241, 249, 250, 251, 253, 467, 494, 498, 501, 505, 509, 511, 527, 538, 546, 549, 556, 559, 562, 564, 566, 571], "0": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 33, 34, 36, 37, 38, 39, 43, 44, 45, 46, 48, 52, 53, 54, 82, 83, 84, 101, 103, 104, 129, 131, 132, 133, 134, 135, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 156, 158, 159, 168, 169, 170, 174, 175, 181, 182, 183, 206, 210, 211, 212, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 252, 405, 406, 417, 418, 467, 492, 494, 496, 497, 498, 499, 500, 509, 511, 515, 523, 527, 530, 555, 560, 563, 564, 566, 568, 569, 571], "more": [0, 24, 26, 27, 32, 34, 36, 37, 39, 41, 43, 44, 45, 46, 47, 48, 52, 53, 54, 100, 129, 132, 133, 134, 139, 141, 142, 144, 145, 146, 149, 163, 166, 172, 175, 180, 183, 184, 198, 220, 222, 223, 241, 249, 250, 467, 496, 501, 504, 538, 539, 540, 541, 543, 544, 551, 559, 562, 563, 564, 565, 566, 568, 569, 571], "seq_idx": 0, "seq_item": 0, "valu": [0, 2, 8, 9, 10, 12, 17, 20, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 43, 44, 46, 48, 52, 53, 55, 57, 61, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 94, 97, 104, 110, 112, 113, 114, 123, 124, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 156, 158, 159, 161, 162, 164, 170, 172, 180, 181, 182, 183, 184, 193, 198, 199, 200, 205, 206, 207, 208, 209, 210, 211, 213, 216, 218, 219, 220, 221, 222, 223, 238, 240, 241, 251, 252, 467, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 527, 530, 538, 539, 540, 543, 544, 545, 547, 548, 549, 550, 551, 553, 554, 556, 557, 558, 559, 562, 563, 564, 565, 566, 568, 569, 570, 571], "tree_seq_item": 0, "f": [0, 2, 3, 4, 8, 9, 10, 11, 12, 18, 20, 129, 132, 133, 134, 170, 172, 249, 250, 467, 562, 566, 569, 571], "name": [0, 2, 6, 8, 9, 10, 11, 12, 14, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 41, 43, 44, 45, 46, 47, 48, 55, 107, 110, 112, 119, 120, 123, 124, 125, 129, 132, 133, 134, 136, 156, 158, 159, 162, 196, 207, 220, 222, 223, 240, 241, 247, 248, 249, 250, 467, 494, 496, 498, 501, 538, 539, 540, 541, 544, 547, 548, 549, 554, 556, 557, 558, 559, 560, 562, 563, 564, 566, 569, 570, 571], "1": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 52, 53, 54, 63, 81, 85, 86, 88, 97, 107, 109, 110, 111, 112, 129, 131, 132, 133, 134, 135, 136, 139, 140, 141, 145, 149, 150, 151, 156, 158, 159, 162, 174, 183, 196, 206, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 496, 497, 498, 499, 500, 501, 527, 539, 542, 545, 553, 556, 559, 562, 563, 564, 565, 566, 568, 569, 570, 571], "recurs": [0, 4, 48, 132, 133, 134, 538, 540, 542], "": [0, 2, 3, 4, 8, 9, 10, 12, 16, 17, 20, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 41, 42, 43, 46, 48, 50, 51, 52, 53, 55, 85, 94, 95, 98, 111, 117, 121, 128, 129, 132, 133, 134, 139, 142, 145, 148, 149, 152, 154, 156, 158, 159, 162, 172, 173, 181, 182, 183, 205, 213, 220, 222, 223, 240, 241, 249, 250, 251, 252, 253, 405, 406, 467, 496, 498, 499, 503, 504, 505, 507, 514, 515, 522, 524, 525, 538, 540, 541, 543, 548, 549, 551, 554, 556, 561, 562, 563, 564, 566, 568, 569, 571], "__name__": [0, 14, 25, 26], "__main__": [0, 14, 25, 26], "len": [0, 3, 4, 8, 10, 14, 36, 37, 38, 467, 564, 566, 571], "argv": [0, 4, 14], "2": [0, 2, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 32, 33, 34, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 53, 54, 57, 81, 83, 85, 86, 87, 90, 97, 100, 101, 103, 104, 107, 109, 110, 111, 112, 129, 131, 132, 133, 134, 135, 136, 139, 140, 141, 145, 146, 149, 150, 151, 162, 170, 196, 206, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 496, 501, 509, 511, 527, 541, 542, 544, 545, 547, 548, 550, 551, 559, 562, 564, 566, 568, 569, 571], "pleas": [0, 14, 25, 26, 28, 43, 45, 132, 133, 134, 137, 138, 145, 146, 147, 149, 154, 183, 223, 249, 250, 538, 545, 556, 562, 563], "suppli": [0, 14, 51, 55, 80, 142, 144, 148, 162, 172, 207, 220, 223, 241, 492, 501, 564, 566], "python": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 40, 41, 42, 43, 44, 45, 48, 49, 55, 77, 78, 80, 95, 132, 133, 134, 214, 215, 217, 467, 538, 539, 541, 542, 544, 545, 546, 547, 548, 549, 550, 553, 554, 555, 556, 558, 559, 562, 563, 564, 565, 568, 569, 571], "dicomtre": [0, 21, 538, 539, 560], "py": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 43, 51, 55, 85, 86, 98, 538, 539, 542, 543, 544, 545, 546, 547, 555, 560, 562, 564, 566, 569], "exit": [0, 14, 24, 26, 27, 28], "read": [0, 2, 6, 7, 8, 13, 14, 16, 17, 18, 20, 24, 26, 27, 28, 29, 42, 43, 44, 45, 48, 52, 53, 55, 57, 71, 77, 83, 90, 95, 107, 132, 133, 134, 137, 138, 142, 143, 144, 146, 148, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 176, 177, 179, 180, 203, 214, 216, 222, 223, 249, 250, 493, 499, 500, 530, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 550, 551, 553, 554, 556, 557, 558, 559, 560, 563, 565, 566, 567, 570], "resolv": [0, 130, 181, 538, 544, 550], "strict": [0, 44, 467, 500, 538, 551, 558], "true": [0, 10, 12, 16, 29, 30, 32, 33, 34, 41, 43, 44, 46, 48, 54, 57, 70, 81, 82, 83, 89, 90, 94, 95, 97, 98, 101, 107, 116, 117, 126, 127, 129, 131, 132, 133, 134, 136, 139, 146, 149, 155, 156, 158, 159, 160, 162, 163, 167, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 196, 203, 206, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 240, 241, 249, 250, 252, 467, 493, 496, 497, 500, 505, 506, 507, 508, 509, 510, 511, 515, 516, 517, 519, 520, 522, 523, 527, 538, 542, 544, 554, 556, 558, 559, 564, 566, 571], "dcmread": [0, 4, 9, 10, 11, 12, 14, 16, 43, 45, 47, 50, 53, 71, 92, 107, 133, 155, 158, 159, 160, 163, 166, 180, 204, 493, 538, 547, 553, 554, 556, 559, 563, 564, 566, 571], "creat": [0, 4, 12, 14, 16, 18, 24, 25, 26, 27, 43, 44, 48, 51, 55, 89, 129, 130, 132, 133, 134, 156, 158, 159, 160, 170, 171, 172, 173, 183, 205, 222, 223, 240, 241, 253, 467, 492, 494, 495, 497, 498, 500, 501, 530, 538, 541, 543, 556, 558, 559, 564, 568, 569, 570, 571], "root": [0, 9, 10, 22, 26, 27, 98, 172, 173, 175, 406, 492, 496, 564, 566], "widget": [0, 51], "geometri": 0, "1200x900": 0, "titl": [0, 2, 20, 26, 28, 41, 48, 196, 467, 501, 562, 563, 564], "viewer": [0, 51], "rowconfigur": 0, "weight": [0, 2, 8, 20], "columnconfigur": 0, "monospac": 0, "font": 0, "style": [0, 23, 494, 498, 502, 538, 540, 543], "theme_us": 0, "clam": 0, "configur": [0, 29, 36, 39, 44, 100, 129, 132, 133, 134, 220, 222, 240, 530, 538, 549, 556, 557], "courier": 0, "12": [0, 30, 34, 39, 54, 70, 216, 241, 247, 321, 322, 435, 476, 489, 491, 496, 566, 571], "popul": [0, 12, 55, 252, 499, 570], "grid": 0, "row": [0, 2, 8, 9, 20, 26, 28, 29, 30, 34, 37, 39, 52, 53, 132, 133, 134, 206, 213, 216, 218, 219, 220, 221, 222, 223, 240, 241, 249, 250, 569], "column": [0, 2, 8, 9, 20, 26, 28, 29, 30, 34, 37, 39, 52, 53, 132, 133, 134, 206, 213, 216, 218, 219, 220, 221, 222, 223, 240, 241, 249, 250, 569], "sticki": 0, "nsew": 0, "start": [0, 6, 17, 18, 20, 24, 26, 27, 28, 37, 45, 52, 55, 129, 131, 135, 143, 144, 146, 148, 149, 152, 153, 161, 167, 173, 174, 179, 181, 182, 205, 222, 223, 250, 251, 467, 492, 515, 523, 538, 548, 558, 562, 563, 564, 565, 570], "mainloop": [0, 22], "jupyt": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "notebook": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "ipynb": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "sourc": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 23, 26, 28, 29, 30, 34, 48, 55, 57, 77, 78, 79, 80, 82, 83, 95, 97, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 538, 546, 554, 556, 559, 561, 564, 567, 568, 571], "galleri": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 560], "gener": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 25, 26, 27, 34, 38, 43, 44, 47, 55, 137, 138, 145, 151, 160, 166, 174, 251, 253, 467, 492, 500, 527, 538, 540, 541, 545, 547, 559, 563, 569], "sphinx": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 41, 538, 542, 563], "These": [1, 6, 7, 15, 40, 43, 44, 538, 554, 559, 564], "illustr": [1, 3, 4, 6, 7, 8, 9, 15, 16, 18, 20, 36, 37, 42, 43, 569], "avail": [1, 6, 10, 15, 24, 26, 27, 28, 30, 33, 34, 43, 48, 51, 53, 54, 55, 107, 132, 133, 134, 139, 140, 142, 144, 148, 156, 158, 159, 172, 214, 215, 217, 220, 223, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 249, 250, 501, 509, 511, 538, 540, 541, 545, 547, 548, 549, 551, 554, 566, 568, 569, 570, 571], "which": [1, 6, 20, 23, 24, 25, 26, 30, 34, 36, 37, 39, 41, 43, 45, 46, 48, 51, 53, 54, 55, 78, 79, 85, 110, 129, 132, 133, 134, 160, 163, 165, 170, 172, 183, 196, 219, 220, 221, 223, 241, 250, 467, 492, 493, 495, 496, 538, 539, 542, 544, 546, 554, 559, 562, 563, 564, 565, 566, 568, 569, 571], "can": [1, 6, 10, 14, 17, 24, 25, 26, 27, 28, 30, 32, 34, 37, 39, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 97, 132, 133, 134, 139, 140, 158, 159, 162, 163, 170, 172, 183, 198, 205, 223, 241, 467, 493, 495, 496, 500, 526, 538, 539, 540, 541, 544, 553, 554, 557, 559, 562, 563, 564, 565, 566, 568, 569, 570, 571], "appli": [1, 6, 10, 16, 29, 36, 39, 53, 54, 68, 79, 81, 132, 133, 134, 172, 207, 208, 209, 210, 211, 212, 220, 222, 223, 249, 250, 538, 551, 554, 563, 568, 571], "dicom": [1, 2, 4, 6, 7, 9, 13, 14, 15, 19, 21, 22, 23, 27, 28, 30, 32, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 51, 52, 53, 54, 57, 60, 62, 70, 71, 73, 75, 77, 78, 79, 85, 90, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 162, 163, 165, 166, 167, 172, 183, 194, 196, 198, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 220, 223, 241, 249, 250, 252, 253, 467, 492, 496, 497, 500, 501, 503, 504, 520, 530, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 556, 557, 558, 559, 560, 563, 564, 565, 567, 569, 570], "downsiz": [1, 5, 6, 53, 560], "mri": [1, 5, 6, 53, 560], "us": [1, 3, 5, 6, 7, 9, 10, 12, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 52, 53, 54, 78, 79, 80, 81, 85, 86, 89, 95, 96, 97, 98, 102, 103, 107, 110, 112, 129, 130, 132, 133, 134, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 162, 163, 165, 166, 170, 172, 173, 174, 180, 181, 182, 183, 195, 198, 199, 200, 205, 206, 207, 208, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 240, 241, 249, 250, 251, 252, 255, 413, 467, 492, 493, 496, 498, 499, 500, 501, 504, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 527, 534, 535, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 570, 571], "decod": [1, 5, 6, 37, 39, 40, 42, 61, 78, 79, 129, 132, 133, 134, 142, 144, 148, 149, 156, 158, 159, 162, 195, 214, 215, 217, 218, 219, 241, 247, 249, 250, 501, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 530, 538, 542, 549, 550, 551, 554, 556, 557, 559, 560, 566, 568], "plot": [1, 5, 6, 7, 13, 538, 550, 560, 571], "waveform": [1, 5, 6, 42, 49, 70, 132, 133, 134, 170, 530, 538, 554, 558, 560, 567], "data": [1, 2, 5, 6, 7, 10, 11, 13, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 51, 55, 57, 63, 64, 65, 66, 78, 79, 80, 81, 83, 85, 98, 101, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 164, 166, 170, 172, 179, 195, 198, 199, 200, 206, 207, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 467, 492, 503, 520, 527, 530, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567, 568], "load": [1, 5, 6, 10, 12, 14, 16, 163, 171, 172, 180, 538, 550, 554, 555, 556, 560], "ct": [1, 5, 6, 9, 10, 12, 20, 26, 28, 36, 37, 38, 43, 46, 48, 51, 53, 70, 132, 133, 134, 172, 538, 550, 560, 564, 565, 566, 569], "slice": [1, 2, 5, 6, 8, 9, 20, 26, 28, 132, 133, 134, 467, 538, 547, 548, 550, 560], "axial": [1, 5, 6, 20, 26, 28, 48, 538, 550, 560, 564], "sagitt": [1, 5, 6, 538, 550, 560], "coron": [1, 5, 6, 538, 550, 560], "thi": [2, 3, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 57, 70, 77, 82, 83, 84, 87, 88, 90, 97, 98, 110, 129, 132, 133, 134, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 154, 160, 162, 165, 171, 172, 183, 189, 200, 203, 205, 207, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 240, 241, 249, 250, 252, 467, 494, 495, 496, 497, 498, 500, 501, 504, 505, 530, 545, 547, 550, 551, 556, 559, 562, 563, 564, 565, 566, 568, 569, 570, 571], "show": [2, 3, 4, 6, 9, 10, 12, 17, 21, 24, 25, 27, 41, 48, 51, 55, 110, 129, 538, 539, 543, 545, 556, 558, 560, 563, 564, 571], "how": [2, 3, 8, 9, 10, 12, 14, 16, 17, 18, 20, 24, 26, 30, 34, 39, 41, 42, 45, 46, 47, 48, 51, 52, 53, 54, 55, 110, 129, 142, 143, 172, 538, 539, 543, 562, 563, 564, 565, 566, 567, 571], "an": [2, 10, 11, 16, 23, 24, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 55, 57, 77, 78, 79, 85, 86, 87, 90, 98, 107, 108, 110, 116, 119, 120, 126, 129, 130, 132, 133, 134, 135, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 162, 163, 172, 173, 182, 183, 193, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 240, 241, 250, 251, 252, 255, 467, 494, 496, 497, 498, 499, 500, 501, 502, 504, 520, 527, 538, 541, 542, 548, 550, 551, 553, 554, 556, 557, 559, 562, 563, 564, 566, 568, 569, 570, 571], "mr": [2, 8, 10, 17, 20, 70, 501, 566], "512": [2, 20, 162, 206, 538, 548], "im": 2, "64": [2, 8, 20, 32, 34, 36, 39, 53, 216, 220, 221, 492, 527, 538, 541, 571], "perform": [2, 30, 34, 36, 37, 39, 44, 46, 84, 113, 114, 115, 117, 118, 128, 132, 133, 134, 136, 172, 218, 223, 241, 249, 250, 496, 513, 538, 545, 548, 549, 568, 569, 571], "take": [2, 24, 25, 26, 30, 34, 39, 41, 51, 55, 132, 133, 134, 160, 170, 205, 538, 545, 562, 563, 564, 566], "central": 2, "section": [2, 24, 25, 26, 27, 36, 37, 38, 39, 41, 43, 46, 48, 53, 55, 57, 101, 129, 132, 133, 134, 135, 139, 141, 151, 196, 200, 206, 213, 220, 223, 249, 250, 501, 562, 563], "instead": [2, 34, 37, 43, 45, 53, 54, 55, 96, 132, 133, 134, 145, 146, 147, 149, 154, 160, 170, 172, 183, 223, 467, 500, 501, 538, 541, 544, 548, 549, 550, 553, 554, 556, 557, 559, 562, 563, 564, 565, 566, 568, 569, 571], "averagin": 2, "pixel": [2, 4, 6, 7, 8, 13, 20, 23, 24, 26, 28, 33, 40, 41, 42, 43, 45, 49, 51, 52, 55, 68, 81, 98, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 162, 166, 206, 207, 208, 209, 214, 215, 216, 217, 218, 219, 220, 530, 538, 539, 541, 542, 547, 548, 549, 550, 551, 553, 554, 556, 557, 559, 560, 562, 564, 567, 568], "final": [2, 17, 45, 107, 139, 142, 143, 144, 183, 564, 571], "store": [2, 8, 10, 17, 20, 29, 32, 34, 37, 38, 39, 43, 48, 53, 107, 129, 132, 133, 134, 162, 197, 208, 209, 220, 222, 240, 241, 494, 496, 497, 498, 499, 500, 502, 538, 541, 556, 559, 564, 565, 566, 571], "requir": [2, 10, 12, 20, 26, 27, 29, 36, 37, 38, 39, 43, 44, 46, 48, 52, 53, 54, 55, 129, 132, 133, 134, 139, 141, 142, 144, 145, 146, 147, 148, 162, 172, 181, 183, 196, 205, 206, 207, 211, 212, 214, 215, 216, 218, 219, 220, 223, 241, 249, 250, 253, 493, 504, 538, 541, 545, 549, 553, 554, 559, 563, 564, 566, 568, 569, 571], "numpi": [2, 3, 4, 23, 29, 30, 34, 36, 37, 38, 41, 43, 46, 47, 52, 53, 54, 83, 98, 103, 104, 132, 133, 134, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 240, 241, 249, 250, 509, 511, 527, 538, 539, 547, 549, 550, 551, 553, 557, 559, 562, 568, 569, 571], "librari": [2, 23, 25, 26, 43, 44, 49, 53, 220, 538, 541, 544, 563, 569], "manipul": [2, 23, 45, 129, 528, 568], "ha": [2, 10, 14, 20, 24, 25, 26, 27, 30, 34, 36, 37, 38, 39, 41, 44, 45, 46, 48, 53, 55, 83, 90, 92, 129, 132, 133, 134, 141, 142, 144, 146, 148, 149, 163, 164, 171, 172, 173, 183, 184, 195, 205, 206, 214, 215, 216, 217, 218, 219, 220, 240, 252, 467, 492, 493, 495, 496, 527, 538, 540, 541, 543, 548, 549, 551, 552, 553, 558, 559, 562, 563, 564, 565, 566, 569, 571], "x": [2, 3, 8, 9, 20, 26, 27, 28, 36, 41, 467, 492, 496, 538, 550, 562, 564, 569, 571], "voxel": 2, "downsampl": [2, 38], "8": [2, 8, 11, 20, 22, 23, 26, 27, 30, 34, 36, 37, 38, 39, 43, 47, 53, 82, 135, 174, 175, 206, 210, 211, 212, 216, 218, 219, 220, 223, 241, 247, 257, 266, 284, 344, 398, 405, 406, 428, 467, 485, 492, 527, 540, 543, 547, 549, 551, 554, 557, 558, 559, 571], "inform": [2, 6, 7, 8, 9, 12, 13, 20, 24, 26, 27, 28, 31, 35, 40, 41, 43, 46, 48, 51, 53, 55, 81, 101, 129, 132, 133, 134, 136, 162, 165, 167, 183, 196, 223, 241, 249, 250, 501, 538, 539, 541, 544, 547, 551, 553, 554, 559, 560, 562, 563, 564, 569, 571], "set": [2, 6, 7, 12, 13, 18, 20, 25, 26, 27, 28, 32, 36, 39, 42, 43, 44, 46, 47, 49, 52, 53, 55, 57, 70, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 92, 93, 94, 96, 97, 102, 103, 104, 110, 129, 130, 132, 133, 134, 146, 149, 155, 156, 158, 159, 162, 163, 164, 170, 171, 172, 174, 175, 180, 183, 195, 222, 240, 467, 493, 496, 500, 501, 504, 505, 530, 538, 539, 544, 547, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 564, 565, 567, 568, 569, 571], "after": [2, 8, 20, 26, 27, 28, 29, 30, 34, 37, 41, 48, 51, 141, 143, 146, 152, 153, 167, 173, 178, 179, 180, 183, 196, 222, 223, 249, 250, 467, 496, 538, 553, 556, 559, 562, 563, 564, 566, 568, 569], "file_meta": [2, 12, 20, 26, 27, 28, 43, 46, 47, 48, 132, 133, 134, 136, 183, 196, 538, 541, 553, 559, 566, 569], "0002": [2, 12, 20, 26, 27, 28, 29, 39, 43, 48, 53, 132, 133, 134, 136, 142, 144, 148, 183, 196, 216, 218, 219, 220, 405, 564, 568], "0000": [2, 8, 12, 20, 26, 27, 28, 43, 48, 196, 467, 538, 559, 564], "file": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 21, 25, 27, 28, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 70, 73, 75, 86, 90, 95, 101, 105, 106, 107, 108, 110, 132, 133, 134, 136, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 183, 185, 194, 195, 196, 198, 199, 200, 203, 222, 223, 249, 250, 530, 539, 540, 541, 543, 544, 547, 550, 551, 553, 554, 556, 557, 558, 559, 560, 562, 563, 564, 567, 569], "meta": [2, 8, 12, 20, 26, 27, 28, 43, 48, 55, 101, 132, 133, 134, 136, 162, 165, 183, 196, 249, 250, 538, 541, 544, 547, 553, 564], "group": [2, 12, 17, 20, 26, 27, 28, 39, 43, 45, 48, 52, 54, 119, 121, 129, 132, 133, 134, 135, 136, 162, 170, 172, 183, 196, 206, 222, 240, 249, 250, 252, 253, 254, 501, 527, 538, 541, 544, 548, 553, 554, 561, 562, 564, 571], "length": [2, 8, 12, 20, 26, 27, 28, 43, 44, 46, 48, 54, 57, 91, 121, 129, 131, 132, 133, 134, 139, 140, 141, 142, 144, 146, 148, 149, 150, 151, 156, 158, 159, 160, 176, 179, 196, 206, 216, 219, 220, 222, 240, 252, 467, 492, 496, 499, 538, 543, 544, 548, 550, 554, 556, 557, 558, 559, 564], "ul": [2, 12, 16, 20, 26, 27, 28, 32, 43, 48, 109, 110, 111, 156, 158, 159, 196, 527, 564, 566], "190": [2, 20, 43], "0001": [2, 12, 20, 26, 27, 28, 43, 48, 132, 133, 134, 136, 142, 144, 148, 196, 564], "version": [2, 8, 12, 20, 24, 26, 27, 28, 39, 41, 43, 45, 48, 49, 57, 81, 83, 85, 86, 90, 97, 100, 101, 103, 104, 107, 129, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 174, 181, 182, 183, 196, 203, 210, 211, 212, 213, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 467, 492, 496, 509, 511, 527, 562, 563, 564, 565, 570], "ob": [2, 12, 20, 26, 27, 28, 32, 43, 46, 48, 141, 188, 196, 512, 538, 542, 557, 564, 565], "b": [2, 8, 12, 16, 20, 22, 26, 27, 28, 37, 39, 43, 48, 52, 53, 129, 132, 133, 134, 156, 158, 159, 183, 492, 496, 501, 562, 563, 564], "x00": [2, 8, 12, 16, 20, 26, 27, 28, 37, 43, 48, 52, 564], "x01": [2, 8, 12, 20, 26, 27, 28, 43, 48, 53, 564], "media": [2, 12, 20, 26, 27, 28, 43, 48, 70, 136, 194, 196, 564, 566], "storag": [2, 9, 12, 14, 20, 26, 27, 28, 43, 48, 53, 70, 136, 194, 196, 530, 538, 541, 542, 547, 557, 564, 566, 571], "sop": [2, 8, 9, 10, 12, 20, 26, 27, 28, 38, 43, 48, 53, 54, 70, 136, 165, 170, 171, 172, 173, 183, 196, 207, 220, 530, 538, 547, 548, 554, 557, 558, 564, 569], "class": [2, 8, 9, 12, 14, 20, 26, 27, 28, 29, 30, 34, 41, 42, 43, 48, 53, 54, 57, 70, 71, 82, 129, 131, 132, 133, 134, 135, 136, 156, 158, 159, 162, 171, 172, 173, 183, 196, 205, 222, 223, 240, 241, 251, 252, 405, 467, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 530, 534, 535, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 551, 553, 554, 557, 558, 559, 563, 564, 566, 569, 570], "uid": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 35, 36, 37, 38, 39, 43, 46, 47, 48, 53, 55, 98, 132, 133, 134, 136, 139, 140, 171, 172, 183, 196, 207, 214, 215, 216, 217, 218, 219, 220, 222, 223, 240, 241, 247, 248, 517, 526, 530, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 553, 554, 556, 557, 558, 559, 562, 564, 566, 568, 569], "ui": [2, 12, 16, 20, 26, 27, 28, 32, 43, 48, 192, 196, 517, 538, 541, 551, 564], "0003": [2, 12, 20, 26, 27, 28, 43, 48, 136, 196, 564], "instanc": [2, 8, 10, 12, 20, 26, 27, 28, 30, 32, 34, 38, 43, 45, 48, 50, 51, 53, 70, 79, 89, 132, 133, 134, 136, 156, 158, 159, 162, 163, 170, 171, 172, 173, 183, 196, 205, 207, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 251, 467, 495, 496, 497, 534, 535, 538, 550, 556, 559, 564, 569, 570], "3": [2, 4, 5, 8, 10, 12, 16, 17, 19, 20, 22, 23, 26, 28, 30, 32, 34, 36, 37, 38, 39, 43, 44, 47, 48, 53, 54, 57, 100, 107, 109, 110, 111, 129, 131, 132, 133, 134, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 156, 158, 159, 170, 174, 181, 182, 183, 196, 206, 208, 209, 210, 211, 212, 213, 216, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 252, 258, 259, 269, 275, 294, 296, 298, 299, 307, 312, 315, 363, 388, 391, 410, 415, 416, 437, 449, 458, 467, 469, 474, 492, 496, 497, 499, 500, 530, 541, 542, 544, 545, 546, 547, 548, 549, 553, 554, 555, 558, 562, 563, 564, 565, 566, 569, 571], "6": [2, 8, 10, 20, 23, 26, 28, 32, 36, 39, 47, 48, 53, 57, 79, 129, 131, 132, 133, 134, 141, 213, 216, 220, 252, 293, 320, 331, 394, 410, 424, 443, 457, 465, 468, 475, 482, 494, 498, 499, 501, 539, 544, 545, 547, 554, 555, 558, 559, 563, 564, 571], "4": [2, 8, 9, 10, 12, 16, 20, 21, 23, 24, 26, 28, 34, 36, 37, 38, 39, 41, 43, 46, 47, 48, 53, 131, 132, 133, 134, 139, 141, 145, 146, 149, 150, 151, 152, 178, 179, 183, 196, 208, 209, 210, 211, 212, 220, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 247, 248, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 414, 415, 416, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 497, 500, 523, 544, 549, 550, 553, 554, 556, 559, 562, 564, 566, 570, 571], "5962": [2, 8, 10, 20, 26, 28, 48, 564], "20040826185059": [2, 8, 20], "5457": [2, 8, 20], "0010": [2, 12, 16, 17, 20, 26, 27, 28, 29, 39, 41, 43, 48, 52, 53, 68, 98, 132, 133, 134, 136, 145, 146, 147, 162, 196, 206, 216, 217, 218, 219, 220, 527, 528, 533, 534, 535, 538, 547, 559, 563, 564, 566, 568], "transfer": [2, 12, 16, 20, 26, 27, 28, 29, 30, 34, 35, 37, 39, 43, 48, 49, 98, 132, 133, 134, 136, 139, 140, 145, 146, 163, 171, 172, 180, 183, 196, 214, 215, 216, 217, 218, 219, 220, 222, 223, 240, 241, 247, 248, 249, 250, 258, 352, 357, 360, 383, 413, 420, 467, 470, 493, 530, 538, 542, 547, 549, 550, 551, 553, 554, 558, 559, 564, 568, 569, 571], "syntax": [2, 12, 16, 20, 24, 26, 27, 28, 29, 30, 34, 35, 37, 39, 43, 48, 49, 55, 98, 132, 133, 134, 136, 139, 140, 145, 146, 163, 171, 172, 180, 183, 196, 214, 215, 216, 217, 218, 219, 220, 222, 223, 240, 241, 247, 248, 249, 250, 258, 352, 357, 360, 383, 413, 420, 467, 470, 493, 530, 538, 541, 542, 547, 549, 550, 551, 553, 554, 558, 559, 564, 568, 569, 571], "explicit": [2, 12, 20, 26, 28, 39, 46, 47, 48, 57, 90, 132, 133, 134, 146, 156, 158, 159, 163, 183, 196, 216, 223, 224, 225, 226, 247, 258, 467, 493, 501, 538, 541, 542, 550, 551, 553, 556, 559, 564], "littl": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 39, 43, 46, 47, 48, 132, 133, 134, 142, 143, 144, 146, 148, 150, 151, 152, 153, 156, 158, 159, 160, 163, 172, 178, 179, 180, 183, 196, 216, 219, 224, 226, 230, 241, 247, 252, 467, 493, 499, 506, 507, 508, 509, 510, 511, 515, 516, 517, 519, 520, 522, 523, 538, 541, 553, 559, 564, 569, 571], "endian": [2, 12, 16, 20, 26, 27, 28, 29, 33, 34, 39, 43, 46, 47, 48, 132, 133, 134, 142, 143, 144, 146, 148, 150, 151, 152, 153, 156, 158, 159, 160, 163, 172, 177, 178, 179, 180, 183, 189, 196, 216, 219, 220, 223, 224, 225, 226, 230, 241, 247, 258, 467, 493, 506, 507, 508, 509, 510, 511, 515, 516, 517, 519, 520, 522, 523, 538, 541, 549, 553, 558, 559, 564, 569, 571], "0012": [2, 12, 20, 26, 27, 28, 43, 48, 136, 196, 405, 564], "implement": [2, 12, 20, 26, 27, 28, 30, 34, 43, 48, 55, 136, 158, 159, 196, 405, 467, 538, 554, 564], "0013": [2, 12, 20, 26, 27, 28, 43, 48, 136, 196, 564, 566], "sh": [2, 12, 16, 20, 26, 28, 32, 43, 48, 196, 524, 564], "dctool100": [2, 20, 26, 28, 48, 564], "0016": [2, 20, 26, 27, 28, 43, 48, 196, 564], "applic": [2, 20, 26, 27, 28, 32, 44, 46, 48, 196, 564, 569], "entiti": [2, 20, 26, 28, 32, 48, 172, 196, 564], "ae": [2, 20, 26, 28, 32, 48, 196, 506, 522, 538, 547, 559, 564], "clunie1": [2, 20, 26, 28, 48, 564], "0008": [2, 12, 20, 26, 27, 28, 29, 39, 43, 48, 53, 77, 78, 79, 80, 132, 133, 134, 142, 144, 145, 147, 148, 162, 163, 207, 216, 218, 219, 220, 533, 534, 538, 539, 551, 564, 565, 566], "type": [2, 3, 8, 17, 18, 20, 25, 26, 27, 28, 29, 30, 34, 39, 40, 42, 43, 46, 48, 53, 70, 77, 78, 80, 83, 100, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 148, 149, 150, 152, 153, 154, 156, 158, 159, 162, 163, 164, 166, 167, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 195, 196, 198, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 240, 241, 250, 253, 467, 492, 493, 496, 501, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 519, 521, 522, 523, 524, 525, 526, 527, 538, 541, 542, 544, 555, 556, 558, 559, 563, 564, 566, 569, 571], "c": [2, 10, 18, 20, 22, 24, 26, 27, 28, 32, 39, 43, 45, 48, 53, 54, 94, 132, 133, 134, 206, 208, 209, 210, 211, 212, 213, 216, 220, 496, 522, 538, 545, 564, 565, 566, 568, 569, 571], "deriv": [2, 8, 20, 43, 50, 82, 98, 129, 134, 538, 544, 564], "secondari": [2, 8, 20], "other": [2, 8, 17, 20, 24, 30, 32, 34, 39, 44, 46, 47, 48, 51, 52, 53, 55, 166, 183, 188, 189, 196, 220, 467, 496, 501, 559, 562, 564, 566, 569], "creation": [2, 8, 12, 20, 26, 27, 28, 43, 170, 538, 550, 564, 566], "date": [2, 8, 9, 12, 17, 20, 23, 26, 27, 28, 32, 43, 44, 48, 94, 172, 494, 498, 530, 538, 547, 548, 550, 556, 564, 568], "da": [2, 12, 17, 20, 26, 27, 28, 32, 43, 48, 61, 66, 94, 132, 508, 522, 538, 547, 556, 564], "20040826": [2, 8, 20], "time": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 26, 27, 28, 32, 43, 44, 48, 55, 70, 92, 94, 110, 133, 144, 164, 177, 180, 220, 494, 495, 498, 502, 538, 541, 547, 556, 561, 562, 563, 564, 566, 571], "tm": [2, 12, 20, 26, 27, 28, 32, 43, 61, 66, 94, 516, 522, 538, 547, 556, 564], "185434": [2, 8, 20], "0014": [2, 20, 26, 27, 28, 564], "creator": [2, 8, 16, 20, 26, 28, 48, 111, 112, 120, 123, 124, 125, 132, 133, 134, 135, 196, 252, 538, 548, 553, 558, 564, 566], "0018": [2, 20, 26, 27, 28, 43, 45, 196, 207, 220], "0020": [2, 12, 17, 20, 26, 27, 28, 43, 564, 566], "studi": [2, 8, 9, 10, 20, 26, 27, 28, 43, 170, 172, 566], "0021": [2, 20], "seri": [2, 8, 10, 20, 41, 165, 170, 172, 538, 542, 563, 566, 569], "0022": [2, 20, 564], "acquisit": [2, 8, 20], "0030": [2, 17, 20, 43], "185059": [2, 8, 20], "0031": [2, 20], "0032": [2, 20], "0050": [2, 20, 26, 27, 43, 52], "access": [2, 8, 20, 23, 26, 27, 30, 34, 36, 37, 42, 43, 48, 52, 57, 70, 83, 100, 132, 133, 134, 162, 538, 540, 547, 553, 554, 558, 559, 563, 565, 566, 567, 570], "number": [2, 8, 11, 18, 20, 24, 26, 27, 28, 29, 30, 34, 39, 41, 43, 45, 48, 52, 110, 112, 129, 131, 132, 133, 134, 135, 139, 141, 142, 144, 145, 146, 147, 148, 151, 153, 156, 158, 159, 161, 162, 163, 172, 173, 174, 177, 180, 195, 197, 198, 204, 205, 206, 220, 222, 223, 240, 241, 251, 252, 253, 467, 492, 494, 496, 497, 498, 499, 500, 502, 504, 538, 539, 543, 546, 550, 556, 557, 559, 563, 564, 566, 568, 570, 571], "0060": [2, 20, 26, 27, 43], "modal": [2, 8, 9, 10, 20, 26, 28, 43, 49, 208, 209, 211, 212, 220, 538, 551, 566, 570], "0070": [2, 20, 26, 27], "manufactur": [2, 8, 20, 132], "lo": [2, 12, 16, 17, 18, 20, 26, 27, 32, 48, 132, 524, 564, 566], "toshiba_mec": [2, 8, 20], "0080": [2, 20, 26, 27, 28], "institut": [2, 8, 20], "toshiba": [2, 8, 20], "0090": [2, 20], "refer": [2, 8, 20, 26, 27, 39, 41, 43, 53, 94, 139, 141, 144, 145, 146, 147, 148, 149, 151, 152, 171, 206, 207, 208, 209, 210, 211, 212, 213, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 492, 538, 541, 562, 566, 569, 571], "physician": [2, 8, 20], "pn": [2, 12, 17, 20, 32, 43, 66, 129, 132, 133, 134, 501, 514, 538, 551, 556, 563, 564, 566], "0201": [2, 20, 538, 550], "timezon": [2, 8, 20, 498], "offset": [2, 8, 20, 46, 48, 52, 129, 132, 133, 134, 135, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 156, 158, 159, 167, 168, 169, 172, 178, 179, 222, 223, 240, 515, 523, 538, 551, 554, 557, 559, 566, 569], "utc": [2, 8, 20, 498], "0400": [2, 8, 20], "1010": [2, 20, 54, 571], "station": [2, 8, 20], "000000000": [2, 8, 20], "1060": [2, 20], "1070": [2, 20], "oper": [2, 8, 20, 36, 37, 38, 43, 44, 48, 49, 86, 132, 133, 134, 156, 158, 159, 208, 209, 211, 212, 220, 222, 223, 249, 250, 467, 496, 538, 541, 549, 551, 554, 564, 568], "1090": [2, 20], "model": [2, 8, 20, 24, 26, 43, 55, 129, 132, 133, 134, 565, 571], "mrt50h1": [2, 8, 20], "patient": [2, 8, 9, 10, 12, 17, 20, 26, 27, 28, 45, 132, 133, 134, 170, 172, 501, 538, 540, 547, 557, 563, 564, 566], "compressedsampl": [2, 8, 9, 20, 26, 28, 70, 563, 564], "mr1": [2, 8, 20], "4mr1": [2, 8, 17, 20], "birth": [2, 8, 17, 20], "0040": [2, 20], "sex": [2, 8, 20], "1020": [2, 20], "size": [2, 8, 9, 20, 24, 26, 34, 36, 53, 55, 98, 129, 156, 158, 159, 163, 180, 214, 215, 467, 538, 548, 554, 558, 568, 569], "1030": [2, 20, 538, 552], "80": [2, 8, 20, 36, 41, 46, 47, 54, 132, 133, 134, 145, 220, 235, 244, 247, 248, 258, 355, 357, 404, 571], "contrast": [2, 8, 10, 20, 566], "bolu": [2, 8, 20], "agent": [2, 8, 20], "scan": [2, 8, 20, 26, 28, 170, 569], "se": [2, 8, 20], "variant": [2, 8, 20], "option": [2, 8, 17, 20, 25, 27, 28, 30, 31, 32, 34, 35, 44, 47, 51, 82, 83, 95, 105, 106, 107, 108, 110, 112, 129, 130, 132, 133, 134, 136, 139, 141, 142, 143, 144, 145, 147, 148, 151, 152, 153, 156, 158, 159, 160, 162, 163, 166, 172, 173, 174, 180, 183, 195, 205, 206, 207, 210, 211, 212, 213, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 249, 250, 251, 253, 467, 492, 493, 498, 501, 502, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 519, 521, 522, 523, 524, 525, 526, 527, 530, 538, 540, 541, 547, 551, 554, 556, 559, 566, 571], "0023": [2, 12, 20, 26, 27], "3d": [2, 4, 8, 20, 220, 538, 554], "thick": [2, 8, 20], "repetit": [2, 8, 20, 55], "4000": [2, 8, 20], "0081": [2, 20], "echo": [2, 8, 20], "240": [2, 8, 20], "0083": [2, 20], "averag": [2, 8, 20], "0084": [2, 20, 26, 27, 28], "frequenc": [2, 8, 20, 54, 571], "63": [2, 8, 20, 564], "924339": [2, 8, 20], "0085": [2, 20], "nucleu": [2, 8, 20], "h": [2, 8, 12, 20, 22, 24, 26, 27, 28], "0086": [2, 20, 26, 27, 28], "0091": [2, 20], "train": [2, 8, 20], "1000": [2, 20, 54, 571], "devic": [2, 8, 20, 26, 27, 570], "serial": [2, 8, 20, 129, 132, 133, 134, 565], "0000200": [2, 8, 20], "softwar": [2, 8, 20, 44, 568], "v3": [2, 8, 20, 36, 37, 538, 554, 556, 557, 559, 571], "51": [2, 8, 20, 47, 145, 234, 247, 258, 354, 360], "p25": [2, 8, 20], "1314": [2, 20], "flip": [2, 8, 20], "angl": [2, 8, 20], "90": [2, 8, 20, 46, 47, 54, 132, 133, 134, 145, 220, 232, 243, 247, 248, 258, 286, 349, 352, 538, 551], "5100": [2, 20, 45], "posit": [2, 8, 20, 24, 26, 27, 28, 45, 142, 143, 144, 146, 148, 149, 152, 153, 155, 156, 158, 159, 167, 177, 178, 179, 196, 205, 222, 223, 251, 252, 467, 496, 497, 499, 500], "hf": [2, 8, 20, 45], "000d": [2, 20], "000e": [2, 20], "0011": [2, 20, 29, 39, 52, 132, 133, 134, 206, 216, 218, 219, 220], "83": [2, 8, 20], "9063": [2, 8, 20], "91": [2, 8, 20, 46, 47, 132, 133, 134, 145, 220, 231, 242, 247, 248, 258, 348, 352, 389, 538, 543, 551], "2000": [2, 8, 20, 29, 35, 39, 46, 81, 132, 133, 134, 145, 220, 223, 227, 228, 229, 231, 232, 242, 243, 248, 249, 250, 352, 538, 551, 554, 559, 568, 569], "6406": [2, 8, 20], "0037": [2, 20], "orient": [2, 8, 20], "0052": [2, 20], "frame": [2, 8, 20, 29, 30, 34, 37, 39, 46, 53, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 206, 213, 218, 220, 222, 223, 240, 241, 249, 250, 538, 547, 549, 551, 556, 559, 569], "later": [2, 8, 20, 30, 100, 496, 497, 538, 545, 562, 564], "1040": [2, 20], "indic": [2, 8, 20, 39, 48, 52, 98, 129, 132, 133, 134, 156, 158, 159, 223, 249, 252, 496, 499, 538, 545, 562, 563, 564], "1041": [2, 20], "locat": [2, 4, 8, 9, 20, 95, 132, 133, 134, 135, 145, 171, 178, 563, 566], "comment": [2, 8, 20, 562], "lt": [2, 20, 32], "uncompress": [2, 8, 20, 29, 34, 36, 37, 38, 45, 46, 47, 53, 132, 133, 134, 220, 240, 241, 470, 538, 549, 551, 556, 557, 569], "0028": [2, 20, 29, 39, 47, 53, 132, 133, 134, 142, 144, 145, 147, 148, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 241, 538, 551, 553, 564], "sampl": [2, 8, 20, 29, 30, 34, 36, 37, 38, 39, 53, 54, 132, 133, 134, 220, 222, 223, 240, 241, 249, 250, 527, 569, 571], "per": [2, 8, 20, 29, 30, 34, 36, 37, 38, 39, 43, 53, 57, 132, 133, 134, 139, 140, 145, 175, 216, 220, 222, 240, 241, 538, 544, 551, 554, 564, 569], "u": [2, 20, 26, 28, 32, 70, 111, 156, 158, 159, 181, 182, 467, 527, 538, 540, 565, 566, 568, 569, 571], "0004": [2, 10, 20, 26, 27, 28, 29, 39, 53, 132, 133, 134, 170, 172, 213, 216, 218, 220, 538, 551, 566], "photometr": [2, 8, 20, 29, 38, 39, 46, 47, 53, 132, 133, 134, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 240, 249, 250, 538, 551, 569], "interpret": [2, 8, 20, 29, 38, 39, 46, 47, 52, 53, 132, 133, 134, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 240, 249, 250, 467, 494, 538, 551, 569, 571], "monochrome2": [2, 8, 20, 36, 37, 38, 39, 216, 218, 566], "space": [2, 8, 9, 20, 29, 30, 34, 36, 37, 38, 39, 41, 46, 49, 110, 213, 220, 241, 467, 501, 506, 517, 519, 521, 538, 547, 559, 564, 566], "3125": [2, 8, 20], "0100": [2, 20, 29, 39, 47, 54, 132, 133, 134, 196, 206, 216, 218, 219, 220, 527, 571], "bit": [2, 8, 20, 29, 30, 32, 34, 37, 38, 39, 41, 47, 51, 52, 53, 132, 133, 134, 135, 149, 208, 209, 216, 219, 220, 222, 223, 240, 241, 247, 249, 250, 252, 499, 538, 548, 549, 551, 556, 557, 558, 559, 562, 563, 569, 571], "alloc": [2, 8, 20, 29, 36, 37, 38, 39, 41, 47, 132, 133, 134, 216, 219, 220, 222, 223, 240, 249, 250, 538, 558, 559, 571], "16": [2, 8, 20, 26, 28, 30, 34, 36, 37, 38, 39, 47, 57, 129, 132, 133, 134, 135, 216, 218, 219, 220, 432, 504, 505, 527, 538, 551, 559, 569, 571], "0101": [2, 20, 29, 39, 132, 133, 134, 208, 209, 216, 218, 220], "0102": [2, 20, 39, 196, 206], "high": [2, 8, 20, 37, 38, 39, 41, 112, 227, 228, 229, 538, 551], "15": [2, 8, 20, 444, 560, 564, 571], "0103": [2, 20, 29, 39, 132, 133, 134, 208, 209, 216, 218, 219, 220, 241], "represent": [2, 8, 20, 26, 28, 29, 32, 36, 38, 39, 43, 62, 65, 76, 110, 112, 114, 124, 129, 132, 133, 134, 135, 141, 171, 172, 173, 208, 209, 220, 222, 223, 240, 249, 250, 252, 496, 497, 499, 500, 501, 503, 504, 521, 524, 530, 538, 554, 556, 559, 564, 565, 571], "0106": [2, 20], "smallest": [2, 8, 20, 496], "ss": [2, 4, 20, 26, 28, 32, 181, 182, 498, 502, 527, 538, 540, 571], "0107": [2, 20], "largest": [2, 8, 20, 496], "1050": [2, 20, 211, 212, 220, 564], "center": [2, 8, 20, 211, 212, 220, 467, 564], "600": [2, 8, 20], "1051": [2, 20, 211, 212, 220, 538, 556, 564], "width": [2, 8, 20, 129, 211, 212, 220, 467, 564], "1600": [2, 8, 20], "7fe0": [2, 20, 26, 28, 41, 43, 53, 68, 98, 132, 133, 134, 142, 144, 145, 146, 147, 148, 162, 216, 217, 218, 219, 220, 528, 533, 534, 535, 538, 547, 551, 559, 564], "ow": [2, 20, 26, 28, 32, 52, 54, 183, 189, 223, 513, 538, 542, 553, 558, 564], "arrai": [2, 4, 14, 20, 26, 28, 29, 37, 41, 43, 52, 53, 54, 55, 83, 98, 103, 129, 132, 133, 134, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 240, 249, 250, 252, 495, 499, 538, 539, 549, 550, 553, 554, 559, 564], "128": [2, 9, 12, 20, 26, 28, 37, 133, 155, 167, 177, 178, 179, 183, 196, 367, 412, 564, 569], "element": [2, 10, 12, 16, 17, 18, 20, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 40, 41, 42, 45, 46, 49, 51, 52, 53, 54, 55, 57, 68, 78, 79, 81, 83, 85, 86, 94, 95, 98, 101, 102, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 139, 140, 145, 146, 147, 160, 161, 162, 163, 164, 172, 179, 180, 181, 182, 183, 196, 198, 199, 206, 214, 216, 218, 219, 220, 221, 222, 223, 240, 249, 250, 252, 253, 494, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 527, 528, 530, 533, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 550, 551, 553, 554, 556, 557, 558, 559, 563, 566, 569, 571], "fffc": [2, 20, 26, 28, 564], "trail": [2, 8, 20, 26, 28, 141, 206, 220, 222, 240, 467, 496, 506, 517, 519, 521, 538, 547, 564], "pad": [2, 3, 8, 20, 26, 28, 139, 141, 146, 201, 206, 220, 222, 240, 467, 496, 538, 548, 550, 551, 554, 556, 557, 564], "126": [2, 20, 26, 28, 564, 571], "author": [2, 8, 9, 11, 12, 16, 17, 20, 22], "guillaum": [2, 8, 9, 11, 12, 17, 20, 22], "lemaitr": [2, 8, 9, 11, 12, 17, 20, 22], "g": [2, 8, 9, 11, 12, 17, 20, 22, 24, 26, 27, 30, 34, 38, 39, 41, 43, 44, 45, 52, 53, 57, 86, 129, 132, 133, 134, 135, 162, 205, 206, 220, 223, 241, 251, 494, 496, 501, 526, 538, 541, 548, 550, 554, 559, 564], "lemaitre58": [2, 8, 9, 11, 12, 17, 20, 22], "gmail": [2, 8, 9, 11, 12, 17, 20, 22], "com": [2, 8, 9, 11, 12, 17, 20, 22, 23, 562, 563, 568], "licens": [2, 8, 9, 11, 12, 16, 17, 20, 22, 538, 540, 541, 563], "mit": [2, 8, 9, 11, 12, 16, 17, 20, 22, 45, 538, 540, 541], "fixm": 2, "test": [2, 12, 16, 24, 26, 27, 28, 43, 45, 90, 109, 110, 111, 132, 133, 134, 467, 496, 505, 538, 539, 545, 547, 551, 554, 556, 558], "get": [2, 9, 10, 14, 26, 27, 32, 41, 43, 44, 45, 47, 48, 51, 52, 53, 54, 94, 98, 132, 133, 134, 156, 158, 159, 170, 220, 530, 538, 541, 542, 550, 554, 556, 562, 563, 567, 568, 569], "arr": [2, 3, 37, 41, 43, 46, 52, 53, 54, 132, 133, 134, 206, 207, 208, 209, 210, 211, 212, 213, 220, 222, 249, 250, 569, 571], "pixel_arrai": [2, 4, 9, 29, 37, 38, 41, 43, 46, 47, 49, 51, 132, 133, 134, 538, 540, 551, 559], "shape": [2, 4, 37, 52, 53, 54, 132, 133, 134, 206, 213, 214, 215, 218, 220, 223, 241, 249, 250, 527, 569, 571], "arr_downsampl": 2, "copi": [2, 10, 47, 55, 132, 133, 134, 172, 467, 496, 538, 544, 554, 557, 562, 563, 566, 568], "back": [2, 14, 16, 20, 38, 41, 45, 52, 53, 55, 562, 563, 564, 566], "origin": [2, 10, 20, 24, 26, 28, 29, 39, 46, 47, 48, 52, 55, 90, 132, 133, 134, 164, 172, 216, 222, 223, 252, 467, 492, 496, 497, 499, 500, 501, 538, 559, 562, 563, 564, 569, 571], "pixeldata": [2, 29, 30, 36, 37, 38, 43, 46, 53, 55, 137, 139, 140, 220, 222, 240, 538, 550, 551, 569], "tobyt": [2, 53, 571], "updat": [2, 10, 18, 20, 26, 27, 37, 38, 52, 109, 110, 111, 112, 132, 133, 134, 170, 172, 181, 182, 196, 249, 250, 538, 540, 541, 543, 544, 546, 547, 548, 549, 551, 553, 554, 556, 557, 558, 559, 562, 563, 566, 568, 569], "regard": 2, "given": [2, 11, 24, 26, 27, 28, 29, 32, 36, 37, 47, 53, 54, 78, 80, 129, 130, 132, 133, 134, 135, 136, 142, 144, 156, 158, 159, 162, 164, 170, 172, 206, 216, 218, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 252, 467, 496, 497, 499, 501, 520, 527, 538, 553, 556, 564, 566, 568, 569, 571], "n": [2, 8, 11, 14, 20, 26, 28, 196, 206, 208, 209, 210, 211, 212, 216, 218, 219, 220, 467, 496, 527, 566], "total": [2, 3, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 37, 139, 140, 206, 220, 222, 240, 496, 560, 569], "run": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 43, 44, 45, 55, 110, 132, 133, 134, 501, 538, 541, 544, 554, 559, 563, 564, 567, 568], "script": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 55, 538, 548, 559, 561], "minut": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 498, 502], "005": [2, 5, 8, 13, 560], "second": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 36, 37, 39, 44, 50, 496, 498, 501, 502, 571], "plot_downsize_imag": [2, 5, 560], "matplotlib": [3, 4, 9, 49, 571], "np": [3, 4, 37, 206, 207, 208, 209, 210, 211, 212, 216, 218, 219, 220, 222, 223, 249, 527, 569, 571], "pyplot": [3, 4, 9, 51, 571], "plt": [3, 4, 9, 51, 571], "generate_multiplex": [3, 132, 133, 134, 527, 538, 554, 571], "first": [3, 20, 26, 28, 36, 37, 38, 39, 41, 43, 44, 45, 48, 50, 53, 55, 77, 78, 80, 98, 107, 131, 132, 133, 134, 142, 143, 144, 145, 146, 148, 149, 152, 153, 167, 172, 180, 205, 220, 223, 238, 249, 250, 251, 467, 496, 501, 538, 549, 550, 551, 561, 562, 563, 566, 571], "channel": [3, 20, 37, 39, 53, 54, 132, 133, 134, 216, 527, 571], "multiplex": [3, 54, 132, 133, 134, 527, 538, 554, 571], "ch_idx": 3, "we": [3, 10, 16, 17, 18, 24, 26, 28, 37, 38, 45, 47, 94, 132, 133, 134, 561, 562, 563, 564, 566, 568, 569, 571], "could": [3, 24, 25, 26, 43, 53, 55, 77, 78, 80, 205, 214, 538, 541, 542, 556, 562, 563], "also": [3, 17, 26, 27, 28, 29, 30, 32, 34, 37, 39, 41, 43, 45, 48, 50, 51, 53, 55, 79, 119, 132, 133, 134, 167, 196, 223, 241, 249, 250, 252, 467, 496, 499, 501, 538, 539, 540, 541, 542, 545, 546, 549, 550, 554, 559, 562, 563, 564, 565, 566, 568, 569, 570, 571], "waveform_arrai": [3, 49, 132, 133, 134, 538, 554, 571], "fig": [3, 571], "ax": 3, "subplot": [3, 4, 571], "waveformsequ": [3, 54, 571], "as_raw": [3, 54, 527, 538, 558, 571], "fals": [3, 4, 10, 14, 29, 30, 32, 34, 41, 44, 48, 57, 70, 81, 82, 83, 86, 89, 91, 94, 95, 96, 97, 98, 102, 103, 104, 107, 116, 117, 126, 127, 129, 132, 133, 134, 136, 139, 140, 156, 158, 159, 160, 162, 166, 167, 172, 174, 175, 178, 179, 180, 183, 196, 203, 213, 216, 218, 220, 222, 223, 241, 249, 250, 252, 467, 493, 495, 496, 497, 499, 505, 506, 507, 508, 509, 510, 511, 515, 516, 517, 519, 520, 522, 523, 527, 538, 544, 548, 553, 556, 558, 564, 566, 571], "mplx": 3, "zip": [3, 6, 538, 550, 571], "nr_channel": 3, "numberofwaveformchannel": [3, 54, 527, 571], "nr_sampl": 3, "numberofwaveformsampl": [3, 527, 571], "sampling_fq": 3, "samplingfrequ": [3, 54, 571], "hz": [3, 54, 571], "mplx_label": 3, "multiplexgrouplabel": [3, 571], "ch_item": 3, "channeldefinitionsequ": [3, 571], "arang": [3, 571], "x_unit": 3, "channelsensitivityunitssequ": [3, 571], "1c": [3, 183, 196, 216, 218, 219, 220, 571], "so": [3, 16, 26, 27, 30, 32, 34, 37, 39, 41, 43, 44, 46, 52, 53, 55, 94, 132, 133, 134, 172, 174, 183, 203, 493, 495, 496, 538, 539, 542, 559, 562, 564, 565, 566, 569, 571], "check": [3, 12, 43, 44, 116, 117, 119, 120, 122, 126, 127, 132, 133, 134, 136, 175, 183, 196, 495, 505, 538, 544, 547, 549, 550, 553, 554, 556, 559, 562, 563, 568, 571], "y_unit": 3, "codemean": [3, 571], "els": [3, 4, 8, 36, 37, 38, 132, 163, 177, 180, 495, 496, 564], "unitless": [3, 53, 527, 571], "descript": [3, 16, 20, 25, 26, 27, 29, 33, 39, 42, 43, 45, 48, 109, 110, 111, 112, 115, 125, 129, 135, 538, 539, 540, 553, 557, 559], "ch_sourc": 3, "channelsourcesequ": [3, 571], "set_titl": 3, "set_xlabel": 3, "set_ylabel": [3, 571], "tight_layout": 3, "266": [3, 5, 560], "plot_waveform": [3, 5, 560], "multipl": [4, 30, 32, 34, 36, 39, 43, 48, 52, 53, 79, 110, 112, 113, 123, 129, 132, 133, 134, 142, 144, 145, 147, 148, 149, 210, 211, 212, 213, 220, 222, 223, 240, 241, 251, 496, 501, 520, 538, 551, 557, 559, 564], "sort": [4, 10, 132, 133, 134, 566], "them": [4, 8, 24, 26, 27, 28, 30, 34, 41, 42, 43, 47, 48, 52, 55, 132, 133, 134, 156, 158, 159, 509, 511, 538, 546, 550, 554, 563, 564, 566], "reslic": [4, 5, 560], "differ": [4, 6, 17, 21, 25, 26, 28, 32, 37, 38, 42, 48, 53, 132, 133, 134, 496, 538, 541, 553, 560, 562, 563, 564, 565, 566], "plane": [4, 20, 30, 33, 37, 39, 53, 206, 220, 222, 223, 241, 249, 250], "glob": [4, 10, 105, 106, 108, 566], "fname": 4, "append": [4, 11, 18, 20, 43, 141, 205, 251, 492, 564, 571], "count": [4, 131, 205, 251, 252, 467, 499], "skip": [4, 18, 538, 557, 562], "sliceloc": [4, 9, 26, 28], "eg": 4, "scout": [4, 20], "view": [4, 10, 20, 29, 38, 43, 45, 49, 53, 210, 211, 212, 220, 222, 538, 539, 541, 559, 563, 566, 571], "skipcount": 4, "hasattr": 4, "ensur": [4, 32, 36, 37, 38, 44, 46, 48, 97, 132, 133, 134, 136, 162, 172, 183, 205, 220, 496, 497, 538, 544, 547, 556, 558, 559, 562], "thei": [4, 29, 36, 41, 43, 48, 52, 53, 77, 89, 98, 132, 133, 134, 136, 183, 196, 467, 538, 556, 559, 562, 563, 564, 566, 568, 569], "ar": [4, 10, 18, 24, 26, 27, 28, 29, 36, 37, 38, 39, 43, 44, 45, 47, 48, 50, 51, 52, 53, 55, 57, 70, 77, 78, 82, 83, 86, 95, 98, 102, 103, 109, 111, 112, 129, 132, 133, 134, 135, 136, 139, 140, 142, 144, 145, 146, 147, 148, 149, 156, 158, 159, 162, 167, 170, 172, 175, 181, 182, 183, 196, 205, 207, 208, 209, 211, 212, 214, 215, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 249, 250, 252, 467, 496, 498, 499, 501, 502, 504, 519, 522, 524, 526, 538, 544, 549, 550, 551, 553, 554, 556, 557, 559, 561, 562, 563, 564, 566, 568, 569, 570, 571], "correct": [4, 16, 20, 24, 26, 36, 37, 38, 39, 44, 46, 47, 52, 54, 77, 81, 98, 132, 133, 134, 162, 177, 181, 182, 205, 218, 220, 538, 548, 549, 551, 556, 557, 559, 562, 564, 569, 571], "order": [4, 29, 30, 33, 34, 36, 37, 39, 53, 98, 132, 133, 134, 135, 145, 173, 177, 181, 182, 183, 195, 219, 220, 238, 241, 252, 467, 496, 499, 538, 539, 546, 549, 551, 562, 571], "kei": [4, 33, 43, 86, 129, 132, 133, 134, 135, 170, 173, 206, 221, 252, 467, 538, 554, 562], "lambda": 4, "aspect": 4, "assum": [4, 25, 26, 37, 46, 53, 90, 146, 467, 538, 547, 566, 569, 571], "all": [4, 6, 8, 10, 12, 17, 20, 24, 26, 27, 28, 37, 39, 42, 43, 44, 46, 49, 55, 70, 98, 111, 129, 132, 133, 134, 137, 138, 139, 141, 146, 149, 156, 158, 159, 162, 172, 174, 181, 182, 183, 205, 223, 241, 249, 250, 251, 258, 467, 496, 534, 535, 538, 539, 540, 541, 544, 546, 549, 551, 554, 556, 557, 558, 559, 560, 562, 563, 564, 568, 569], "same": [4, 30, 34, 43, 44, 45, 52, 110, 132, 133, 134, 158, 159, 172, 205, 223, 467, 494, 496, 497, 498, 538, 542, 544, 563, 564, 566], "p": [4, 10, 22, 24, 26, 57, 501, 538, 544, 566], "pixelspac": [4, 9], "slicethick": 4, "ax_aspect": 4, "sag_aspect": 4, "cor_aspect": 4, "img_shap": 4, "list": [4, 6, 7, 8, 10, 13, 20, 26, 28, 30, 32, 33, 34, 36, 37, 38, 39, 43, 45, 46, 77, 78, 79, 80, 98, 105, 106, 108, 129, 130, 132, 133, 134, 137, 139, 140, 142, 144, 148, 149, 152, 153, 160, 162, 163, 166, 168, 172, 173, 181, 182, 190, 194, 195, 199, 200, 202, 205, 206, 222, 223, 240, 241, 249, 250, 251, 467, 492, 501, 508, 509, 510, 511, 514, 515, 516, 517, 520, 521, 524, 525, 530, 538, 541, 544, 545, 551, 554, 556, 557, 559, 560, 563, 564, 566, 568, 569], "img3d": 4, "zero": [4, 20, 32, 53, 132, 133, 134, 180, 222, 467, 496, 538, 558, 564, 569], "fill": [4, 467, 562, 563], "img2d": 4, "orthogon": 4, "a1": 4, "imshow": [4, 9, 51], "set_aspect": 4, "a2": 4, "a3": 4, "t": [4, 8, 10, 18, 20, 26, 27, 28, 29, 32, 36, 37, 39, 41, 43, 48, 52, 55, 85, 132, 133, 134, 142, 144, 145, 148, 163, 172, 183, 205, 206, 213, 216, 219, 220, 223, 241, 249, 250, 251, 467, 492, 498, 538, 550, 553, 554, 559, 562, 563, 564, 565, 566, 569], "00": [5, 13, 19, 21, 149, 560], "271": 5, "execut": [5, 13, 19, 21, 501, 560], "auto_exampl": [5, 13, 19, 21], "image_process": [5, 560], "mem": [5, 13, 19, 21, 560], "mb": [5, 13, 19, 21, 162, 527, 560], "imag": [5, 8, 9, 10, 12, 17, 20, 26, 28, 30, 33, 34, 45, 46, 48, 49, 52, 53, 70, 132, 133, 134, 140, 141, 145, 146, 149, 170, 172, 207, 213, 214, 216, 217, 218, 219, 220, 221, 223, 227, 228, 229, 231, 232, 235, 236, 240, 242, 243, 244, 245, 249, 250, 252, 497, 499, 500, 538, 541, 548, 550, 554, 556, 559, 560, 564, 566, 568, 569], "000": [5, 21, 496, 560, 571], "somewher": [6, 45], "analys": [6, 21, 560], "between": [6, 21, 37, 38, 41, 52, 53, 110, 206, 467, 538, 559, 560, 562, 563, 564, 569], "displai": [6, 20, 21, 26, 27, 28, 36, 37, 38, 43, 49, 51, 101, 129, 132, 538, 539, 545, 550, 556, 560, 562, 571], "unicod": [6, 21, 32, 78, 80, 467, 501, 538, 539, 541, 542, 558, 560], "person": [6, 17, 21, 32, 41, 501, 538, 549, 556, 560, 570], "hierarch": [6, 21, 145, 220, 237, 238, 538, 551, 560], "tree": [6, 21, 43, 173, 538, 545, 560, 564], "work": [6, 15, 19, 21, 25, 26, 27, 30, 34, 37, 41, 43, 44, 45, 47, 48, 49, 55, 172, 467, 538, 539, 541, 542, 544, 545, 546, 548, 550, 554, 559, 560, 562, 563, 564, 568, 569, 570, 571], "memori": [6, 16, 21, 30, 162, 163, 164, 180, 213, 216, 220, 249, 250, 538, 541, 549, 550, 551, 559, 560, 566], "base": [6, 21, 36, 37, 38, 39, 45, 71, 82, 132, 133, 134, 494, 496, 498, 502, 530, 534, 535, 538, 541, 547, 551, 554, 560, 562, 563, 566, 569, 571], "rtplan": [6, 7, 13, 24, 26, 27, 28, 43, 45, 70, 162, 560], "format": [6, 7, 12, 13, 20, 24, 26, 27, 28, 32, 34, 43, 44, 45, 47, 129, 132, 133, 134, 139, 140, 141, 146, 162, 183, 198, 216, 219, 467, 494, 496, 497, 498, 501, 502, 520, 538, 539, 540, 541, 547, 550, 556, 557, 559, 560, 564, 566, 568], "write": [6, 7, 10, 13, 14, 16, 17, 24, 26, 40, 42, 44, 48, 49, 57, 71, 95, 132, 133, 134, 156, 158, 159, 172, 183, 185, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 496, 497, 530, 538, 540, 542, 547, 548, 550, 552, 553, 554, 556, 557, 559, 560, 563, 565, 566, 567], "modifi": [6, 15, 30, 34, 42, 45, 52, 53, 55, 107, 132, 133, 134, 172, 538, 551, 554, 559, 567], "anonym": [6, 15, 19, 43, 48, 538, 539, 540, 550, 560], "privat": [6, 15, 17, 19, 20, 24, 26, 27, 28, 39, 43, 49, 55, 109, 110, 111, 112, 119, 120, 123, 124, 125, 127, 129, 130, 132, 133, 134, 135, 170, 171, 172, 196, 252, 413, 467, 493, 530, 538, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 553, 554, 556, 557, 558, 559, 560, 564, 566], "dictionari": [6, 15, 19, 43, 49, 85, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 163, 221, 222, 240, 467, 530, 538, 540, 541, 543, 546, 547, 548, 549, 550, 551, 554, 556, 557, 559, 560, 565, 570], "auto_examples_python": 6, "auto_examples_jupyt": 6, "your": [8, 10, 14, 23, 25, 26, 27, 30, 34, 36, 37, 38, 39, 43, 45, 48, 49, 55, 97, 139, 140, 172, 561, 564, 565, 566, 568, 571], "own": [8, 24, 25, 26, 27, 43, 45, 48, 55, 132, 133, 134, 172, 183, 538, 548, 558, 564, 566, 569, 571], "840": [8, 9, 12, 24, 26, 46, 47, 53, 132, 133, 134, 145, 216, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 538, 548, 549, 551, 553, 554, 559, 562, 564], "10008": [8, 9, 12, 24, 26, 46, 47, 53, 132, 133, 134, 145, 216, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 538, 548, 549, 551, 553, 554, 559, 562, 564], "5": [8, 9, 10, 12, 13, 16, 20, 22, 23, 24, 26, 32, 36, 37, 38, 39, 43, 46, 47, 53, 54, 57, 129, 131, 132, 133, 134, 135, 139, 141, 144, 145, 146, 147, 148, 149, 151, 152, 200, 206, 210, 211, 212, 213, 219, 220, 239, 246, 247, 248, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 338, 339, 340, 341, 342, 344, 345, 346, 347, 363, 364, 365, 366, 367, 368, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 496, 501, 553, 554, 562, 563, 564, 566, 569, 571], "don": [8, 10, 18, 26, 27, 28, 36, 43, 48, 55, 562, 563, 565, 566, 569], "xfe": 8, "x04": [8, 53], "myprint": [8, 538, 539], "indent": [8, 132, 133, 134, 173, 564], "through": [8, 17, 30, 34, 41, 43, 45, 48, 53, 132, 133, 134, 165, 179, 181, 182, 223, 249, 496, 538, 539, 540, 559, 562, 563, 564, 568, 570], "custom": [8, 26, 28, 170, 172, 538, 539, 540, 547, 550, 554], "_pretty_str": [8, 564], "dont_print": 8, "indent_str": 8, "next_indent_str": 8, "sequence_item": 8, "repr_valu": 8, "repr": [8, 43, 101, 467, 538, 553], "50": [8, 47, 53, 54, 145, 220, 233, 247, 258, 353, 360, 387, 467], "plot_printing_dataset": [8, 13, 560], "open": [9, 23, 25, 26, 157, 163, 249, 250, 538, 541, 562, 563, 564], "some": [9, 14, 16, 17, 26, 28, 41, 43, 44, 48, 51, 52, 53, 54, 55, 57, 77, 90, 100, 132, 133, 166, 183, 496, 497, 504, 538, 539, 540, 542, 544, 547, 548, 558, 563, 564, 565, 566, 568, 570], "project": [9, 10, 20, 98, 561, 562, 563, 568], "src": [9, 10, 29, 30, 33, 34, 37, 98, 220, 222, 223, 240, 241, 249, 250, 566, 569], "test_fil": [9, 10, 24, 26, 43, 45, 563, 564, 566], "ct_small": [9, 26, 28, 70, 162, 563, 564], "dcm": [9, 11, 12, 24, 26, 27, 28, 41, 43, 45, 46, 52, 53, 70, 132, 133, 134, 162, 170, 249, 250, 538, 554, 563, 564, 569, 570, 571], "ct1": [9, 20, 26, 28, 70, 563, 564], "1ct1": [9, 20, 26, 28, 566], "20040119": [9, 20, 26, 28, 564], "661468": [9, 20], "77": [9, 20, 24, 26, 27, 28, 43, 284, 285, 297, 398, 399, 400, 401, 403, 458, 471, 472, 473, 474, 475, 477, 478, 479, 482, 483], "2040634155": [9, 20, 26, 28], "get_testdata_fil": [9, 10, 11, 43, 45, 53, 530, 538, 554, 556, 557, 559, 563, 564, 566], "normal": [9, 16, 20, 25, 26, 27, 43, 70, 496, 538, 559], "mode": [9, 20, 26, 28, 33, 37, 84, 87, 88, 133, 156, 158, 159, 249, 250, 496, 538, 551, 562, 568], "sopclassuid": [9, 24, 26, 28, 171, 564, 571], "pat_nam": 9, "patientnam": [9, 10, 12, 14, 26, 28, 43, 45, 70, 85, 86, 129, 132, 162, 170, 172, 253, 538, 550, 563, 564, 566], "family_comma_given": [9, 501], "patientid": [9, 10, 12, 14, 17, 26, 28, 43, 132, 170, 172, 564, 566], "studyd": [9, 10, 24, 26, 27, 28, 566], "sure": [9, 37, 47, 55, 562, 564, 568], "exist": [9, 16, 30, 34, 38, 41, 43, 44, 55, 110, 132, 133, 134, 164, 172, 183, 196, 538, 558, 559, 561, 562, 563, 569], "want": [9, 10, 14, 24, 25, 26, 37, 44, 55, 174, 562, 563, 564, 565, 566, 568], "miss": [9, 34, 107, 132, 133, 134, 136, 162, 167, 181, 183, 196, 206, 207, 216, 218, 219, 220, 223, 241, 538, 546, 547, 550, 551, 557, 559, 562, 564, 566, 568], "cmap": [9, 51], "cm": [9, 11, 51], "grai": 9, "104": [9, 13, 22, 258, 308, 309, 310, 311, 312, 377, 378, 383, 560], "plot_read_dicom": [9, 13, 560], "interact": [10, 43, 45, 48, 132, 133, 134, 566], "directori": [10, 45, 170, 171, 172, 173, 175, 538, 539, 557, 559, 562, 563, 566, 568], "dicomdirtest": [10, 566], "pydicom_test": [10, 566], "276": [10, 566], "7230010": [10, 566], "31906": [10, 566], "1359940846": [10, 566], "78187": [10, 566], "descriptor": [10, 48, 172, 207, 208, 209, 210, 211, 220, 538, 551, 553, 566], "charact": [10, 20, 26, 28, 32, 41, 44, 48, 57, 77, 78, 79, 80, 90, 129, 130, 132, 133, 134, 135, 162, 163, 172, 173, 174, 175, 195, 198, 199, 200, 467, 492, 501, 504, 505, 509, 511, 514, 515, 521, 524, 525, 530, 538, 539, 540, 547, 549, 550, 553, 554, 556, 557, 558, 559, 562, 564, 565, 566], "chang": [10, 12, 25, 26, 27, 30, 34, 38, 41, 44, 45, 46, 47, 52, 53, 57, 83, 97, 107, 129, 132, 133, 134, 149, 156, 158, 159, 172, 174, 181, 182, 183, 211, 213, 214, 215, 216, 217, 218, 219, 220, 492, 496, 509, 511, 553, 561, 564, 565, 567, 568, 569, 570], "stage": [10, 171, 172, 562, 563], "dicomdir": [10, 42, 70, 170, 172, 173, 538, 546, 550, 551, 554, 557, 558, 559, 567], "structur": [10, 26, 27, 43, 45, 70, 170, 172, 173, 538, 551, 558, 559, 564, 566, 567], "manag": [10, 30, 34, 48, 159, 162, 172, 222, 240, 538, 547, 554, 564, 566], "77654033": [10, 566], "doe": [10, 12, 37, 48, 52, 53, 55, 90, 98, 110, 132, 133, 134, 155, 164, 183, 189, 214, 496, 504, 538, 554, 566], "archibald": [10, 566], "20010101": [10, 132, 566], "studytim": [10, 24, 26, 28, 566], "000000": [10, 20, 566], "studydescript": [10, 26, 28, 172, 566], "xr": [10, 566], "spine": [10, 566], "comp": [10, 20, 26, 28, 566], "min": [10, 37, 208, 209, 220, 496, 566], "cr": [10, 220, 566], "seriesnumb": [10, 43, 566], "19950903": [10, 566], "173032": [10, 566], "head": [10, 41, 45, 566], "brain": [10, 566], "wo": [10, 566], "98890234": [10, 566], "peter": [10, 566], "20030505": [10, 566], "050743": [10, 566], "carotid": [10, 566], "025109": [10, 566], "045357": [10, 566], "mra": [10, 566], "700": [10, 538, 549, 566], "7": [10, 20, 23, 24, 26, 27, 36, 39, 43, 53, 131, 135, 139, 151, 172, 196, 200, 213, 216, 220, 258, 280, 297, 306, 307, 390, 391, 392, 393, 397, 399, 421, 439, 446, 447, 448, 449, 450, 454, 484, 494, 498, 545, 549, 558, 559, 563, 566, 571], "found": [10, 45, 48, 52, 53, 54, 107, 132, 133, 134, 162, 167, 172, 177, 180, 223, 241, 467, 564, 566, 569], "seriesinstanceuid": 10, "1196533885": 10, "18148": 10, "118": 10, "fileset": [10, 530, 538, 554, 556, 557, 559], "1479": 10, "userwarn": [10, 85], "record": [10, 20, 170, 171, 172, 173, 538, 551, 557, 566], "queri": [10, 94, 172, 566], "consid": [10, 25, 26, 55, 132, 133, 134, 220, 467, 562, 563, 565], "expand": [10, 26, 28, 220, 467, 538, 557, 563, 566], "search": [10, 107, 145, 172, 177, 178, 179, 467, 538, 556, 559, 564, 566], "correspond": [10, 17, 29, 30, 34, 36, 37, 38, 41, 43, 46, 52, 53, 54, 77, 107, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 132, 133, 134, 135, 139, 140, 164, 171, 172, 173, 183, 206, 207, 220, 222, 223, 240, 241, 247, 248, 253, 467, 493, 494, 498, 527, 538, 556, 559, 562, 563, 566, 569, 571], "warn_and_log": 10, "photometricinterpret": [10, 36, 37, 38, 46, 216, 218, 220, 566, 569], "monochrome1": [10, 36, 37, 38, 39, 216, 218, 566], "without": [10, 36, 43, 47, 48, 54, 107, 132, 133, 134, 155, 165, 178, 220, 496, 506, 517, 519, 520, 538, 540, 548, 550, 554, 557, 558, 559, 564, 566, 568, 569], "still": [10, 46, 48, 538, 544, 545, 547, 548, 549, 551, 562, 564, 565, 566, 569], "tmp": [10, 12, 566], "tmpixja5_xq": 10, "follow": [10, 25, 26, 27, 28, 29, 30, 34, 36, 39, 41, 43, 44, 46, 47, 53, 70, 129, 132, 133, 134, 136, 145, 146, 149, 172, 180, 183, 196, 221, 223, 241, 249, 250, 467, 496, 501, 538, 551, 554, 556, 559, 562, 563, 564, 566, 570, 571], "pt000000": [10, 566], "st000000": [10, 566], "se000000": [10, 566], "im000000": [10, 566], "se000001": [10, 566], "se000002": [10, 566], "st000001": [10, 566], "im000001": [10, 566], "im000002": [10, 566], "im000003": [10, 566], "pt000001": [10, 566], "im000004": 10, "st000002": 10, "st000003": 10, "im000005": 10, "im000006": 10, "pt000002": [10, 566], "pt000003": 10, "tempfil": [10, 12, 17, 566], "temporarydirectori": [10, 566], "generate_uid": [10, 38, 172, 538, 550, 559], "A": [10, 20, 28, 30, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 55, 77, 78, 90, 105, 106, 108, 132, 133, 134, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 158, 159, 160, 162, 163, 170, 172, 173, 174, 175, 181, 182, 183, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 467, 492, 493, 496, 501, 514, 521, 524, 525, 538, 548, 556, 559, 562, 564, 566, 569], "its": [10, 24, 25, 26, 27, 30, 32, 34, 36, 37, 38, 39, 43, 44, 83, 129, 132, 133, 134, 149, 172, 173, 180, 205, 206, 214, 215, 216, 217, 218, 219, 467, 496, 527, 538, 549, 554, 559, 564, 566], "itself": [10, 38, 41, 43, 48, 107, 158, 159, 181, 182, 467, 538, 554, 562, 563, 566], "summari": [10, 25, 26, 562], "content": [10, 12, 14, 20, 43, 57, 132, 133, 134, 142, 145, 206, 216, 217, 218, 219, 220, 221, 563, 564, 566, 569], "seen": [10, 25, 26, 90, 563, 571], "when": [10, 16, 23, 24, 25, 26, 27, 29, 30, 32, 34, 36, 37, 38, 39, 41, 43, 46, 48, 50, 52, 53, 55, 81, 85, 86, 90, 94, 95, 98, 132, 133, 134, 139, 140, 142, 144, 145, 147, 148, 149, 155, 156, 158, 159, 166, 172, 174, 181, 182, 183, 208, 209, 210, 211, 212, 219, 220, 223, 241, 249, 250, 253, 255, 467, 492, 493, 501, 538, 540, 541, 542, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 566, 568, 569, 571], "iter": [10, 17, 43, 132, 133, 134, 141, 142, 143, 144, 145, 146, 147, 151, 160, 173, 174, 181, 184, 205, 218, 222, 223, 241, 249, 251, 252, 255, 467, 499, 538, 540, 548, 559, 566], "over": [10, 20, 26, 27, 50, 52, 538, 559, 564, 566], "yield": [10, 43, 132, 133, 134, 141, 142, 143, 144, 145, 146, 147, 151, 160, 173, 174, 218, 222, 223, 241, 249, 527, 538, 559, 564, 566, 571], "fileinst": [10, 172, 173, 530, 538, 559, 566], "do": [10, 14, 25, 26, 30, 34, 42, 44, 46, 47, 48, 50, 51, 52, 53, 55, 94, 132, 133, 134, 172, 183, 189, 538, 544, 550, 556, 559, 562, 563, 564, 566, 569, 570, 571], "someth": [10, 14, 23, 25, 26, 30, 34, 41, 52, 132, 538, 559, 562], "patient_id": 10, "find_valu": [10, 172, 566], "return": [10, 11, 14, 29, 30, 34, 39, 41, 43, 45, 48, 52, 53, 54, 70, 77, 78, 80, 81, 91, 92, 98, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 195, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 240, 241, 247, 248, 250, 251, 252, 253, 467, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 538, 539, 540, 541, 542, 548, 549, 550, 551, 553, 554, 556, 557, 559, 564, 565, 566, 571], "where": [10, 30, 34, 36, 37, 39, 43, 44, 52, 53, 54, 57, 109, 111, 132, 133, 134, 135, 139, 164, 170, 172, 177, 178, 208, 209, 220, 222, 223, 240, 241, 467, 496, 538, 540, 549, 550, 551, 559, 562, 563, 564, 566], "one": [10, 24, 26, 30, 34, 36, 39, 43, 45, 47, 53, 54, 55, 84, 87, 88, 109, 111, 129, 132, 133, 134, 138, 139, 140, 141, 144, 145, 146, 149, 164, 165, 170, 172, 173, 174, 180, 184, 198, 207, 213, 220, 223, 240, 241, 249, 250, 467, 496, 497, 538, 544, 547, 557, 559, 562, 564, 566, 568, 569, 570, 571], "repres": [10, 34, 43, 53, 102, 129, 132, 133, 134, 146, 162, 183, 252, 494, 498, 499, 500, 501, 504, 562, 571], "match": [10, 29, 39, 46, 47, 53, 85, 94, 105, 106, 107, 108, 132, 133, 134, 164, 170, 172, 206, 214, 216, 219, 223, 249, 250, 501, 538, 544, 547, 554, 559, 566, 569, 571], "result": [10, 17, 24, 25, 26, 27, 36, 37, 38, 44, 46, 55, 78, 80, 132, 133, 134, 183, 223, 249, 250, 252, 467, 492, 496, 538, 556, 559, 562, 563, 569], "find": [10, 17, 20, 23, 25, 26, 46, 94, 132, 133, 134, 165, 172, 177, 178, 179, 181, 182, 467, 562, 563, 564, 566, 570, 571], "study_uid": 10, "studyinstanceuid": 10, "series_uid": 10, "plural": 10, "Of": 10, "cours": [10, 569], "you": [10, 12, 14, 16, 18, 23, 24, 25, 26, 27, 28, 30, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 94, 139, 140, 162, 166, 170, 172, 174, 220, 467, 538, 551, 554, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571], "just": [10, 12, 14, 25, 26, 27, 28, 43, 48, 55, 90, 129, 132, 133, 134, 160, 538, 550, 554, 562, 563, 564, 566], "directli": [10, 30, 34, 37, 43, 55, 129, 222, 223, 240, 241, 495, 538, 559, 565, 566, 570], "know": [10, 39, 43, 48, 564, 565, 566], "what": [10, 32, 39, 42, 48, 52, 172, 564, 566, 569], "nfound": 10, "actual": [10, 20, 25, 26, 29, 30, 34, 37, 39, 43, 46, 52, 129, 132, 133, 134, 172, 183, 206, 216, 219, 223, 241, 562, 566, 569], "onli": [10, 24, 26, 27, 28, 29, 30, 34, 36, 37, 39, 41, 43, 44, 45, 47, 52, 53, 55, 57, 81, 98, 110, 112, 113, 114, 115, 117, 118, 119, 120, 128, 132, 133, 134, 136, 145, 149, 162, 165, 172, 174, 181, 182, 183, 196, 216, 220, 222, 223, 228, 229, 232, 240, 241, 243, 249, 250, 253, 467, 500, 505, 538, 544, 546, 547, 548, 549, 550, 551, 553, 554, 556, 559, 562, 564, 565, 566, 569], "limit": [10, 26, 27, 37, 38, 45, 49, 53, 172, 467, 504, 505, 538, 544, 550, 554, 570], "subset": [10, 24, 26], "howev": [10, 25, 26, 32, 36, 37, 38, 39, 43, 46, 132, 133, 134, 145, 146, 149, 205, 500, 562, 563, 564, 566, 569], "less": [10, 37, 38, 39, 156, 158, 159, 496, 538, 559, 571], "effici": [10, 160, 172, 220, 504, 571], "result_load": 10, "remov": [10, 12, 17, 43, 44, 49, 132, 133, 134, 137, 138, 146, 147, 149, 154, 171, 172, 173, 183, 205, 220, 223, 241, 249, 250, 251, 467, 547, 548, 549, 550, 553, 554, 555, 556, 557, 558, 562, 564], "To": [10, 24, 26, 28, 36, 37, 38, 43, 44, 45, 47, 52, 54, 55, 155, 160, 223, 252, 499, 538, 544, 549, 554, 562, 563, 564, 566, 568, 571], "edit": [10, 55, 538, 548, 549, 551, 562, 563, 568], "identif": 10, "modul": [10, 25, 26, 30, 34, 36, 37, 38, 44, 50, 51, 53, 54, 70, 86, 95, 98, 132, 133, 134, 198, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 223, 241, 249, 250, 467, 493, 527, 530, 538, 539, 545, 546, 549, 554, 556, 557, 559, 564, 566, 569, 571], "part": [10, 27, 28, 32, 36, 37, 38, 39, 41, 44, 48, 50, 53, 54, 112, 129, 132, 133, 134, 135, 139, 141, 144, 145, 146, 147, 148, 149, 151, 152, 162, 175, 181, 182, 183, 196, 200, 206, 208, 209, 210, 211, 212, 213, 216, 220, 252, 467, 492, 497, 499, 500, 501, 538, 541, 544, 556, 562, 563, 564, 565, 566, 569, 571], "annex": [10, 36, 37, 38, 39, 53, 54, 129, 132, 133, 134, 139, 141, 144, 145, 146, 147, 148, 149, 151, 152, 170, 208, 209, 210, 211, 212, 213, 216, 220, 492, 566], "properti": [10, 14, 30, 34, 43, 57, 129, 132, 133, 134, 156, 158, 159, 171, 172, 173, 222, 223, 240, 241, 252, 467, 501, 538, 539, 541, 544, 547, 548, 554, 559, 566], "1130": [10, 20], "my": [10, 48, 132, 133, 134, 172, 565], "1141": 10, "descriptor_file_id": [10, 172, 566], "readm": 10, "1142": 10, "specif": [10, 20, 24, 26, 27, 28, 29, 34, 35, 41, 43, 46, 48, 52, 53, 55, 77, 78, 79, 80, 132, 133, 134, 162, 163, 172, 177, 200, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 467, 496, 526, 538, 539, 541, 547, 549, 550, 553, 554, 559, 562, 563, 564, 565, 566, 569], "descriptor_character_set": [10, 172, 566], "iso_ir": [10, 20, 26, 28, 48, 79, 564, 565, 566], "100": [10, 20, 21, 24, 26, 28, 36, 48, 54, 258, 371, 372, 383, 496, 560, 564, 565, 566, 571], "until": [10, 156, 158, 159, 162, 163, 166, 177, 180, 538, 539, 544, 556, 566], "call": [10, 25, 26, 39, 43, 44, 46, 50, 52, 55, 82, 86, 92, 132, 133, 134, 146, 156, 158, 159, 160, 172, 179, 183, 205, 467, 495, 538, 541, 544, 548, 554, 559, 564, 566, 569], "meet": [10, 34, 141, 241, 538, 544], "semant": [10, 41, 172, 501, 566], "re": [10, 16, 42, 52, 136, 417, 418, 561, 562, 563, 564, 566, 568, 569, 571], "here": [10, 24, 26, 28, 30, 34, 42, 48, 51, 100, 179, 223, 241, 563, 564, 565, 566, 570], "becaus": [10, 24, 26, 37, 38, 39, 41, 43, 45, 52, 53, 55, 70, 155, 172, 562, 563, 564], "would": [10, 24, 25, 26, 27, 38, 44, 55, 57, 496, 562, 563, 566, 571], "overwrit": [10, 526], "altern": [10, 23, 43, 132, 210, 211, 212, 220, 562, 564, 566], "new": [10, 16, 17, 18, 26, 27, 38, 41, 42, 45, 49, 57, 70, 81, 83, 85, 86, 90, 97, 100, 101, 103, 104, 109, 110, 111, 112, 129, 132, 133, 134, 139, 141, 142, 143, 144, 148, 150, 151, 152, 153, 156, 158, 159, 171, 172, 173, 205, 210, 212, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 467, 494, 498, 501, 502, 527, 539, 540, 541, 544, 545, 546, 549, 550, 551, 553, 554, 556, 559, 561, 564, 567, 571], "while": [10, 26, 27, 37, 38, 39, 53, 57, 129, 132, 133, 134, 183, 219, 223, 241, 249, 250, 504, 538, 550, 551, 556, 559, 562, 566, 568], "leav": [10, 16, 26, 27, 110, 564], "unchang": [10, 77, 181, 182, 208, 209, 210, 211, 212, 220, 496, 569], "tdir": 10, "new_fileset": 10, "norigin": 10, "note": [10, 18, 24, 26, 27, 28, 29, 41, 44, 46, 47, 48, 51, 83, 94, 110, 112, 132, 133, 134, 135, 141, 145, 150, 151, 162, 166, 167, 179, 189, 205, 208, 209, 211, 212, 220, 467, 494, 496, 497, 498, 500, 501, 502, 504, 541, 563, 564, 565, 569, 570, 571], "layout": [10, 172], "been": [10, 25, 26, 39, 46, 47, 48, 53, 83, 90, 92, 132, 133, 134, 139, 140, 142, 143, 144, 145, 146, 148, 164, 171, 172, 174, 183, 195, 196, 220, 222, 223, 240, 467, 495, 496, 538, 541, 548, 553, 556, 557, 559, 562, 563, 564, 565], "is_fil": [10, 566], "relative_to": 10, "226": [10, 13, 560], "plot_read_fileset": [10, 13, 560], "basic": [11, 26, 27, 28, 42, 45, 46, 51, 54, 55, 72, 132, 133, 134, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 538, 551, 559, 566, 567, 569, 571], "info": [11, 20, 160, 163, 166, 178, 179, 180, 467, 538, 541, 542, 544, 546], "beam": [11, 18, 24, 26, 27, 28, 538, 544], "gantri": [11, 20, 26, 28], "ssd": 11, "field": [11, 20, 26, 28, 43, 91, 129, 131, 146, 467, 494, 498, 502, 538, 556], "89": 11, "darci": [11, 12, 16, 17], "mason": [11, 12, 16, 17, 23], "list_beam": 11, "summar": [11, 566], "line": [11, 20, 23, 24, 25, 27, 28, 40, 44, 45, 48, 52, 55, 86, 132, 133, 134, 172, 467, 538, 545, 556, 562, 563, 564, 566, 569], "13": [11, 252, 267, 268, 269, 271, 487, 488, 499], "11": [11, 20, 23, 208, 209, 210, 211, 212, 220, 257, 263, 265, 279, 280, 331, 332, 395, 416, 436, 452, 476, 481, 486, 496, 538, 558, 559, 571], "beamsequ": [11, 18, 24, 26, 27, 28, 43, 132, 538, 544], "cp0": 11, "controlpointsequ": 11, "float": [11, 32, 33, 36, 41, 43, 53, 82, 89, 129, 132, 133, 134, 160, 162, 163, 164, 166, 180, 204, 216, 220, 495, 496, 497, 498, 499, 500, 504, 520, 533, 534, 538, 544, 545, 551, 554, 556, 558, 564], "sourcetosurfacedist": 11, "10": [11, 20, 23, 26, 28, 39, 52, 54, 149, 174, 196, 249, 252, 388, 423, 430, 452, 496, 497, 499, 500, 538, 545, 549, 559, 564, 566, 571], "beamnam": [11, 18, 43], "beamnumb": [11, 24, 26, 27, 28], "8d": 11, "gantryangl": 11, "1f": 11, "join": [11, 45, 467], "003": [11, 13, 16, 19, 560], "plot_read_rtplan": [11, 13, 560], "scratch": [12, 18, 49, 132, 133, 134, 183, 538, 542, 543, 556, 562, 569], "produc": [12, 24, 26, 41, 53, 55, 252, 496, 499, 538, 546, 551, 556, 559], "standard": [12, 20, 22, 32, 36, 37, 38, 39, 41, 44, 46, 48, 53, 54, 57, 129, 132, 133, 134, 135, 139, 141, 144, 145, 146, 147, 148, 149, 151, 152, 172, 183, 196, 200, 206, 207, 208, 209, 210, 211, 212, 213, 216, 220, 253, 492, 496, 497, 500, 501, 538, 540, 543, 544, 546, 547, 554, 556, 565, 566, 569, 571], "compliant": [12, 55, 538, 547], "written": [12, 24, 26, 32, 44, 45, 50, 52, 53, 132, 133, 134, 156, 158, 159, 172, 183, 195, 196, 538, 550, 551, 559, 562, 564, 566], "have": [12, 14, 25, 26, 27, 28, 32, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 52, 55, 98, 129, 132, 133, 134, 136, 139, 140, 142, 143, 146, 149, 162, 165, 172, 174, 183, 196, 206, 216, 218, 219, 220, 221, 222, 223, 240, 241, 249, 250, 467, 493, 496, 506, 517, 527, 538, 544, 547, 549, 550, 553, 557, 559, 561, 562, 563, 564, 565, 566, 568, 569, 571], "valid": [12, 49, 55, 57, 84, 87, 88, 90, 125, 129, 132, 133, 134, 136, 162, 175, 183, 196, 213, 220, 222, 223, 240, 241, 417, 418, 467, 498, 502, 504, 505, 509, 511, 520, 521, 524, 538, 556, 557, 558, 569], "tmpmkhheoiq": 12, "20240331": 12, "0033": [12, 20], "231835": 12, "526343": 12, "firstnam": 12, "123456": 12, "delet": [12, 17, 55, 132, 133, 134, 222, 240, 467, 538, 553, 562, 563], "datetim": [12, 94, 494, 498, 502], "filemetadataset": [12, 24, 26, 133, 136, 165, 183, 196, 530, 538, 553, 564], "explicitvrlittleendian": 12, "dt": [12, 32, 61, 66, 94, 510, 522, 538, 547, 556], "now": [12, 20, 129, 132, 133, 134, 492, 498, 538, 540, 541, 544, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 562, 563, 564, 566, 571], "contentd": 12, "strftime": [12, 494, 498, 502], "y": [12, 41, 220, 467, 496], "m": [12, 22, 501, 562, 563, 566, 568, 569, 571], "contenttim": 12, "long": [12, 32, 37, 179, 183, 523, 538, 558, 564], "micro": 12, "mediastoragesopclassuid": [12, 566], "mediastoragesopinstanceuid": 12, "implementationclassuid": 12, "transfersyntaxuid": [12, 46, 47, 132, 133, 134, 171, 538, 540, 547, 564, 569], "namedtemporaryfil": [12, 17], "suffix": [12, 174, 467, 492, 501, 538, 559], "save_a": [12, 16, 17, 24, 26, 45, 46, 50, 52, 53, 132, 133, 134, 183, 538, 540, 553, 559, 564, 569, 571], "enforce_file_format": [12, 132, 133, 134, 183, 538, 559, 564], "reopen": 12, "unlink": 12, "004": [12, 13, 560], "plot_write_dicom": [12, 13, 560], "342": 13, "input_output": [13, 560], "output": [13, 16, 20, 24, 26, 27, 41, 47, 53, 55, 208, 209, 220, 223, 249, 250, 494, 498, 502, 538, 551, 553, 560, 562, 563, 564, 566], "byte": [14, 24, 26, 30, 32, 33, 34, 37, 39, 43, 46, 52, 53, 54, 55, 78, 79, 80, 90, 91, 112, 129, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 161, 162, 163, 164, 165, 167, 177, 178, 179, 180, 181, 182, 183, 188, 189, 193, 195, 196, 204, 206, 220, 222, 223, 240, 241, 252, 467, 499, 501, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 538, 549, 550, 551, 556, 559, 564, 566, 569, 571], "help": [14, 24, 25, 26, 27, 28, 44, 46, 48, 163, 538, 541, 549, 556, 558, 561, 562, 563, 569], "save": [14, 16, 24, 26, 45, 46, 52, 53, 538, 541, 544, 563, 564, 565, 569, 571], "blob": 14, "databas": 14, "io": [14, 16, 133, 156, 158, 159, 530, 538, 559, 564], "bytesio": [14, 16, 133, 156, 538, 559, 564], "dcmwrite": [14, 50, 71, 132, 133, 134, 158, 159, 538, 547, 553, 554, 556, 559, 564], "filebas": [14, 71, 146, 149, 154, 195, 530], "dicomfilelik": [14, 71, 156, 157, 538, 540], "usag": [14, 24, 26, 27, 28, 30, 38, 43, 49, 213, 220, 249, 250, 467, 501, 530, 538, 551, 559, 566], "memory_dataset": [14, 21, 560], "dicom_filenam": 14, "write_dataset_to_byt": 14, "buffer": [14, 29, 132, 133, 134, 142, 143, 144, 147, 148, 152, 153, 156, 158, 159, 162, 183, 195, 216, 222, 223, 240, 252, 499, 538, 559], "rewind": [14, 167, 177, 178, 179, 538, 545], "seek": [14, 132, 133, 134, 142, 143, 144, 148, 152, 153, 156, 158, 159, 162, 183, 538, 540, 550, 559], "adapt_dataset_from_byt": 14, "interest": [14, 52, 561, 564], "stuff": 14, "is_little_endian": [14, 16, 46, 131, 132, 133, 134, 146, 149, 156, 158, 159, 160, 163, 168, 169, 176, 178, 179, 180, 181, 182, 183, 195, 220, 467, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 522, 523, 538, 559], "bond": 14, "jame": 14, "007": [14, 17, 19, 560], "dummydatabas": 14, "__init__": [14, 129, 131, 132, 133, 134, 135, 156, 158, 159, 171, 172, 173, 205, 222, 223, 240, 241, 251, 252, 467, 494, 496, 497, 498, 499, 500, 501, 502, 503], "self": [14, 155, 252, 467, 494, 496, 497, 498, 499, 500, 502, 564, 569], "_blob": 14, "dict": [14, 30, 34, 43, 93, 109, 111, 129, 132, 133, 134, 170, 172, 206, 220, 221, 222, 240, 538, 541, 556, 558], "file_path": [14, 203], "db": [14, 36, 132, 133, 134], "convert": [14, 29, 30, 34, 36, 37, 38, 39, 47, 53, 77, 78, 80, 86, 89, 91, 94, 98, 130, 132, 133, 134, 172, 183, 205, 206, 213, 214, 215, 216, 217, 218, 219, 220, 223, 241, 249, 250, 252, 467, 496, 498, 499, 527, 538, 541, 544, 547, 550, 551, 554, 555, 556, 559, 563, 564, 571], "ds_byte": 14, "read_byt": 14, "read_dataset": [14, 71, 166], "_new": 14, "dynam": [16, 20], "allow": [16, 17, 24, 26, 27, 36, 37, 39, 43, 44, 48, 52, 57, 89, 132, 133, 134, 170, 172, 220, 500, 538, 540, 541, 550, 553, 554, 556, 557, 558, 559, 568], "tag": [16, 17, 26, 28, 29, 32, 45, 48, 49, 52, 53, 57, 61, 86, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 143, 146, 149, 150, 151, 152, 153, 156, 158, 159, 160, 162, 164, 172, 180, 181, 185, 200, 206, 216, 218, 219, 220, 249, 250, 523, 527, 530, 538, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 553, 554, 556, 557, 559, 564, 565], "present": [16, 26, 28, 39, 52, 80, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 131, 132, 133, 134, 136, 145, 146, 147, 149, 155, 162, 167, 170, 172, 173, 183, 196, 205, 207, 208, 209, 210, 211, 212, 220, 221, 241, 251, 467, 538, 540, 548, 550, 551, 564, 571], "unknown": [16, 20, 32, 48, 86, 129, 130, 132, 133, 134, 146, 193, 538, 543, 548, 550, 554, 556, 564, 570], "1001": [16, 20, 48, 132], "acm": [16, 48, 111], "un": [16, 32, 57, 91, 160, 183, 193, 518, 538, 539, 551, 553, 556, 557, 564], "1002": [16, 20, 48, 564], "hello": [16, 564], "world": [16, 564], "1003": [16, 20], "regist": [16, 25, 26, 48, 129, 467, 493, 538, 554, 559, 564], "One": [16, 29, 41, 45, 48, 52, 55, 109, 110, 111, 129, 132, 133, 134, 207, 213, 220, 222, 240, 562, 563], "42": [16, 538, 541], "two": [16, 20, 25, 26, 28, 39, 41, 43, 44, 47, 48, 50, 90, 109, 110, 111, 132, 133, 134, 141, 172, 220, 252, 467, 496, 499, 501, 538, 545, 559, 564, 565, 571], "three": [16, 30, 34, 37, 41, 111, 467, 501, 564, 566], "contributor": 16, "datadict": [16, 48, 530, 538, 547, 550, 564], "add_private_dict_entri": [16, 43, 48, 538, 550], "valuerep": [16, 22, 61, 508, 510, 514, 516, 530], "demonstr": [16, 51, 538, 539], "implicit": [16, 26, 27, 39, 43, 47, 90, 132, 133, 134, 156, 158, 159, 160, 163, 172, 183, 216, 230, 247, 467, 493, 515, 538, 541, 548, 550, 556, 559, 569], "is_implicit_vr": [16, 46, 131, 132, 133, 134, 156, 158, 159, 160, 161, 163, 168, 169, 183, 195, 467, 515, 538, 550, 559], "block": [16, 18, 20, 26, 27, 28, 36, 48, 132, 133, 134, 135, 538, 553, 563], "private_block": [16, 48, 132, 133, 134], "0x1001": 16, "add_new": [16, 48, 132, 133, 134, 135, 564], "0x01": [16, 48, 132], "0x02": [16, 48], "0x03": 16, "simul": [16, 132, 133, 134], "fp": [16, 146, 149, 154, 160, 162, 163, 167, 168, 169, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "forc": [16, 29, 132, 133, 134, 155, 162, 166, 167, 172, 183, 538, 542, 544, 546, 564], "defin": [16, 17, 20, 25, 26, 36, 37, 38, 39, 48, 52, 57, 129, 132, 133, 134, 135, 171, 172, 207, 220, 467, 496, 538, 544, 562, 564, 566, 571], "vm": [16, 32, 43, 63, 109, 110, 111, 112, 113, 119, 120, 123, 129, 538, 542, 550, 553, 559, 564], "is_retir": [16, 109, 110, 111, 119, 120, 129, 467, 538, 547], "flag": [16, 20, 44, 97, 132, 133, 134, 167, 172, 177, 178, 179, 496, 538, 553, 556, 566], "blank": [16, 17, 110, 205, 495, 538, 540, 564], "new_dict_item": [16, 109, 111], "0x10011001": 16, "0x10011002": 16, "0x10011003": 16, "entri": [16, 25, 26, 27, 43, 49, 53, 109, 110, 111, 112, 119, 120, 538, 540, 557, 562, 563], "string": [16, 17, 20, 25, 26, 32, 43, 57, 78, 79, 80, 110, 129, 132, 133, 134, 135, 162, 173, 184, 193, 195, 197, 201, 202, 205, 223, 241, 252, 467, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 509, 511, 520, 521, 522, 526, 538, 541, 543, 544, 548, 549, 554, 556, 565], "private_cr": [16, 48, 111, 112, 120, 123, 124, 125, 132, 133, 134, 135, 252], "new_entries_dict": [16, 109, 111], "noutput": 16, "plot_add_dict_entri": [16, 19, 560], "point": [17, 24, 25, 26, 27, 28, 32, 51, 55, 180, 216, 220, 467, 496, 497, 500, 504, 538, 540, 545, 556, 562, 564, 570], "It": [17, 26, 27, 30, 34, 42, 43, 44, 45, 46, 48, 50, 51, 53, 55, 132, 133, 134, 146, 172, 183, 538, 544, 545, 562, 563, 564, 565, 566, 568, 569, 571], "replac": [17, 77, 78, 80, 110, 467, 494, 498, 502, 538, 550, 557], "curv": [17, 571], "keyword": [17, 26, 27, 28, 29, 41, 43, 48, 53, 54, 85, 86, 93, 107, 109, 110, 118, 119, 121, 126, 128, 129, 132, 133, 134, 162, 172, 181, 182, 183, 206, 211, 213, 216, 218, 219, 220, 222, 223, 240, 241, 249, 250, 253, 467, 527, 538, 542, 544, 547, 549, 550, 554, 558, 559, 563, 564, 566, 569, 570], "patientbirthd": [17, 43], "data_el": [17, 132, 133, 134, 185, 188, 189, 192, 194, 199, 200, 214, 564, 565], "callback": [17, 25, 26, 132, 133, 134, 538, 547], "function": [17, 20, 25, 26, 27, 29, 30, 34, 36, 37, 41, 42, 43, 44, 45, 48, 50, 53, 54, 55, 56, 59, 60, 68, 71, 73, 75, 82, 92, 99, 103, 110, 111, 129, 132, 133, 134, 137, 138, 146, 147, 149, 154, 160, 163, 165, 166, 170, 172, 181, 182, 183, 203, 205, 206, 207, 214, 215, 216, 217, 218, 219, 220, 222, 223, 240, 241, 249, 250, 253, 413, 494, 495, 496, 498, 504, 527, 528, 530, 531, 533, 538, 539, 540, 541, 546, 547, 549, 550, 551, 554, 556, 559, 563, 564, 565, 566, 569, 571], "insid": [17, 538, 540], "person_names_callback": 17, "curves_callback": 17, "0xff00": 17, "0x5000": 17, "del": [17, 18, 43, 48, 132, 564], "etc": [17, 18, 41, 43, 45, 51, 53, 129, 132, 133, 134, 206, 538, 539, 545, 556, 562, 566, 569], "walk": [17, 132, 133, 134], "remove_private_tag": [17, 48, 132, 133, 134], "method": [17, 23, 29, 30, 34, 36, 37, 39, 43, 46, 47, 48, 50, 51, 52, 54, 98, 101, 129, 131, 132, 133, 134, 135, 139, 140, 142, 143, 144, 148, 152, 153, 156, 158, 159, 162, 170, 171, 172, 173, 183, 205, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 251, 252, 467, 494, 496, 497, 498, 499, 500, 501, 502, 538, 541, 544, 547, 549, 556, 558, 559, 564, 565, 566, 569, 570], "easili": [17, 538, 539, 541], "delattr": 17, "otherpatientid": [17, 538, 540], "otherpatientidssequ": [17, 564], "possibl": [17, 30, 37, 39, 43, 44, 53, 94, 129, 132, 133, 134, 148, 156, 158, 159, 170, 181, 182, 183, 219, 220, 467, 504, 538, 547, 549, 550, 551, 556, 559, 565, 566, 570], "assign": [17, 43, 70, 129, 538, 544, 551, 557], "19000101": 17, "plot_anonym": [17, 19, 560], "300a": [18, 26, 27, 28, 45], "00f8": 18, "apertur": 18, "00fe": 18, "block1": 18, "block2": 18, "toi": 18, "block_ds1": 18, "blocktyp": 18, "blocknam": 18, "block_ds2": 18, "should": [18, 25, 26, 27, 30, 32, 34, 36, 37, 38, 39, 41, 43, 44, 45, 48, 52, 53, 55, 129, 132, 133, 134, 142, 144, 145, 146, 147, 148, 149, 162, 167, 170, 172, 174, 181, 182, 196, 205, 213, 214, 215, 216, 217, 218, 219, 220, 223, 241, 492, 520, 538, 540, 541, 548, 549, 554, 562, 563, 564, 566, 567, 569, 571], "like": [18, 25, 26, 29, 37, 43, 44, 48, 52, 55, 73, 75, 86, 112, 132, 133, 134, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 177, 179, 180, 183, 195, 196, 198, 199, 200, 222, 223, 240, 249, 250, 498, 538, 541, 551, 554, 557, 559, 563, 564, 565, 566], "plan_d": 18, "sinc": [18, 39, 48, 132, 133, 134, 137, 138, 145, 146, 147, 149, 154, 183, 496, 538, 558, 562, 566, 571], "did": [18, 538, 539, 559], "blocksequ": 18, "numberofblock": 18, "beam0": 18, "block_ds3": 18, "abov": [18, 24, 25, 26, 27, 28, 43, 48, 52, 55, 129, 132, 133, 134, 206, 223, 249, 250, 538, 548, 563, 566], "forget": [18, 55], "001": [18, 19, 48, 560], "plot_sequ": [18, 19, 560], "012": 19, "metadata_process": [19, 560], "192": [20, 26, 28, 48, 564], "20040119072730": [20, 26, 28, 48, 564], "12322": [20, 26, 28, 48, 564], "0005": [20, 26, 28, 48, 77, 78, 79, 80, 132, 133, 134, 162, 163, 527, 538, 539, 564, 565, 566], "primari": [20, 26, 28, 48, 564], "072731": [20, 26, 28, 564], "19970430": 20, "072730": [20, 26, 28], "112749": 20, "112936": 20, "113008": 20, "ge": 20, "medic": [20, 41, 45, 47, 566], "system": [20, 24, 26, 27, 28, 44, 51, 156, 158, 159, 172, 220, 252, 499, 538, 559, 564, 566, 568, 571], "jfk": 20, "0500": 20, "ct01_oc0": 20, "e": [20, 24, 26, 27, 28, 30, 34, 41, 43, 44, 45, 52, 53, 57, 86, 129, 132, 133, 134, 135, 162, 168, 169, 172, 173, 174, 205, 206, 220, 223, 241, 251, 494, 496, 501, 526, 538, 541, 548, 550, 554, 559, 562, 563, 564, 568], "rhapsod": 20, "0009": [20, 48, 53, 132, 133, 134, 216, 220, 533, 534, 538, 551], "gems_iden_01": [20, 48], "fidel": [20, 48], "ge_genesis_ff": [20, 48], "suit": [20, 48, 538, 558], "ct01": [20, 48], "1004": [20, 527, 538, 551], "product": [20, 496], "hispe": 20, "1027": 20, "sl": [20, 26, 28, 32, 527], "862399669": 20, "servic": [20, 566], "1031": 20, "mobil": 20, "10e6": 20, "genesi": 20, "05": [20, 563], "10e7": 20, "exam": 20, "checksum": 20, "973283917": 20, "10e9": 20, "stamp": 20, "o": [20, 22, 72, 74, 249, 250], "abcd1234": [20, 564], "1234abcd": [20, 564], "ag": [20, 32], "AS": [20, 32, 522], "000y": 20, "21b0": 20, "addit": [20, 26, 27, 28, 30, 34, 39, 77, 132, 133, 134, 171, 172, 223, 241, 249, 250, 498, 501, 502, 546, 554, 556, 559, 565, 566, 568, 569], "histori": 20, "gems_pati_01": 20, "statu": [20, 117, 129], "isovue300": 20, "helic": 20, "kvp": 20, "120": [20, 54], "0088": 20, "collect": [20, 48, 57, 134, 163, 566], "diamet": 20, "480": 20, "rout": 20, "iv": 20, "1100": 20, "reconstruct": [20, 36], "338": 20, "6716": 20, "1110": 20, "distanc": 20, "detector": 20, "1099": 20, "3100585938": 20, "1111": 20, "630": 20, "1120": 20, "tilt": 20, "tabl": [20, 23, 32, 36, 37, 38, 46, 53, 129, 132, 133, 134, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 183, 196, 206, 207, 208, 209, 210, 211, 216, 218, 219, 220, 222, 240, 467, 527, 538, 551, 554, 559, 563, 564, 566, 568, 569], "height": 20, "133": [20, 167], "699997": 20, "1150": 20, "exposur": 20, "1601": 20, "1151": 20, "rai": [20, 26, 28, 564], "tube": 20, "170": 20, "1152": 20, "1160": 20, "filter": [20, 26, 27, 132, 133, 134], "larg": [20, 46, 48, 55, 132, 133, 134, 135, 139, 140, 163, 180, 495, 538, 540, 541, 548, 550, 551, 554, 556, 569, 571], "bowti": 20, "fil": 20, "1190": [20, 538, 554], "focal": 20, "spot": 20, "1210": 20, "convolut": 20, "kernel": 20, "ff": [20, 149], "0019": 20, "gems_acqu_01": 20, "912": [20, 538, 551], "cell": 20, "theta": 20, "373": [20, 22], "75": [20, 26, 27, 54, 409], "0166": 20, "100f": 20, "horiz": 20, "ref": 20, "955": [20, 43], "799988": 20, "1011": 20, "1013": [20, 538, 551], "baselin": [20, 39, 46, 47, 53, 145, 220, 233, 247, 467, 538, 558, 571], "1014": [20, 538, 554], "1015": 20, "enhanc": [20, 207, 220, 541], "1016": [20, 538, 551], "1017": 20, "1018": 20, "ra": 20, "1019": [20, 53], "79187": 20, "101a": 20, "last": [20, 26, 28, 41, 43, 45, 48, 86, 98, 141, 146, 205, 251, 538, 544, 557, 564, 566, 569], "101b": 20, "loc": 20, "320": [20, 53], "197968": 20, "101e": 20, "1023": 20, "speed": [20, 538, 541, 545, 549, 556, 558], "mm": [20, 23, 494, 498, 502], "rotat": [20, 496], "1024": [20, 129, 132, 133, 134, 538, 552, 565, 569], "mid": [20, 26, 28, 43, 45], "sec": 20, "17": [20, 54, 433], "784578": 20, "1025": 20, "1026": 20, "azimuth": 20, "degre": 20, "msec": 20, "102a": 20, "On": [20, 39, 180, 501, 565], "178": 20, "079926": 20, "102b": 20, "off": [20, 26, 27, 44, 95, 163, 538, 545, 553, 563], "3994": 20, "299316": 20, "102c": 20, "trigger": [20, 26, 28], "10431": 20, "102e": 20, "718": 20, "079956": 20, "102f": 20, "984": 20, "1039": [20, 566], "sfov": 20, "stat": [20, 164], "recon": 20, "comput": 20, "1042": [20, 538, 553], "segment": [20, 29, 207, 219, 220, 538, 549, 556], "1043": 20, "1044": 20, "interscan": 20, "delai": [20, 26, 28], "1047": [20, 538, 553], "compress": [20, 23, 29, 30, 33, 34, 36, 37, 38, 39, 42, 45, 49, 53, 132, 133, 134, 139, 140, 145, 146, 220, 222, 223, 227, 228, 229, 231, 232, 235, 236, 240, 242, 243, 244, 245, 249, 250, 467, 534, 535, 538, 547, 549, 551, 556, 557, 559, 567, 568], "factor": [20, 54, 538, 545, 569, 571], "104a": 20, "104b": [20, 26, 28], "1052": [20, 208, 209, 220], "post": [20, 538, 553], "proc": 20, "1057": 20, "water": [20, 501], "95": [20, 538, 544, 547], "1058": 20, "bone": [20, 51], "105e": 20, "763": 20, "105f": 20, "increment": [20, 174], "1969": 20, "1061": 20, "1576": 20, "1062": 20, "106a": 20, "depend": [20, 30, 34, 39, 46, 47, 53, 55, 98, 129, 132, 133, 134, 142, 143, 144, 172, 183, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 223, 241, 522, 527, 538, 549, 550, 557, 563, 565, 566, 568, 571], "process": [20, 25, 26, 30, 34, 36, 37, 39, 47, 132, 133, 134, 145, 213, 220, 222, 223, 233, 234, 237, 238, 240, 249, 250, 467, 495, 538, 541, 553, 556, 558, 562, 563, 571], "106b": 20, "852": [20, 538, 550], "button": 20, "1071": 20, "fatq": 20, "estim": 20, "were": [20, 26, 28, 132, 133, 134, 538, 544, 546, 562, 563, 571], "1072": 20, "z": [20, 90, 174, 175, 538, 559], "chan": 20, "avg": 20, "1073": [20, 538, 553], "left": [20, 36, 52, 132, 133, 134, 467, 496, 563], "1074": [20, 497, 500], "max": [20, 37, 208, 209, 220, 496], "1075": [20, 538, 553], "right": [20, 36, 132, 133, 134, 467, 496], "1076": 20, "10da": 20, "10db": 20, "projector": 20, "coeffici": [20, 26, 27, 496], "10dc": 20, "10dd": 20, "overrang": 20, "10de": 20, "alpha": [20, 207, 220, 467, 538, 550, 551, 570], "158": 20, "135803": 20, "179": 20, "035797": 20, "sn": 20, "gems_rela_01": 20, "prescrib": 20, "1005": 20, "1007": 20, "1605775145": 20, "24078": 20, "acq": 20, "750675506": 20, "1037": 20, "screen": [20, 24, 26], "anatom": 20, "7400": 20, "1091": 20, "biopsi": 20, "1092": 20, "fl": [20, 26, 28, 32, 564], "1093": [20, 538, 554], "gems_stdy_01": 20, "fd": [20, 32], "862399761": 20, "111079": 20, "No": [20, 36, 175, 513, 561], "header": [20, 36, 155, 162, 167, 538, 540, 564], "107d": 20, "complet": [20, 24, 26, 34, 55, 132, 133, 134, 144, 147, 180, 538, 539, 562, 566, 568], "0025": 20, "gems_sers_01": 20, "1006": [20, 527, 538, 551], "puls": 20, "44": [20, 340], "landmark": 20, "counter": 20, "archiv": 20, "receiv": [20, 196], "host": [20, 252, 499], "0027": 20, "gems_imag_01": 20, "101c": 20, "vma": 20, "mamp": 20, "150": [20, 54], "101d": 20, "phase": 20, "mod": 20, "24": [20, 36, 314], "101f": 20, "clip": [20, 37], "129": [20, 569], "smart": 20, "ON": 20, "foreign": [20, 538, 539], "revis": [20, 538, 542, 544, 545], "1035": 20, "letter": [20, 43, 132, 133, 134], "20406341552734": 20, "r": [20, 39, 129, 132, 133, 134, 467, 565], "coord": 20, "199999809265137": 20, "9": [20, 23, 26, 27, 36, 37, 38, 43, 53, 54, 82, 174, 175, 206, 259, 260, 264, 266, 275, 285, 306, 307, 327, 328, 329, 339, 394, 417, 418, 427, 443, 446, 454, 466, 481, 492, 548, 551, 554, 559, 571], "699999809265137": 20, "69999694824219": 20, "1045": 20, "1046": 20, "1048": 20, "top": [20, 26, 27, 28, 41, 52, 132, 133, 134, 163, 172, 538, 559, 563, 564], "corner": 20, "180": [20, 43], "53579711914062": 20, "1049": [20, 538, 553], "03579711914062": 20, "bottom": [20, 41, 562, 563], "104c": [20, 26, 28], "159": [20, 538, 551], "63580322265625": 20, "104d": [20, 26, 28], "19999694824219": 20, "116": [20, 26, 27, 28, 54], "20304870605469": 20, "side": 20, "l": [20, 23, 29, 35, 46, 47, 132, 133, 134, 145, 220, 223, 235, 236, 244, 245, 247, 248, 249, 250, 357, 538, 549, 559, 568, 569], "1053": [20, 208, 209, 220, 538, 553], "anterior": 20, "posterior": 20, "1054": 20, "1055": 20, "0120": 20, "rescal": [20, 37, 49, 208, 209, 211, 212, 220], "intercept": [20, 43, 208, 209, 220], "slope": [20, 208, 209, 220], "0029": 20, "gems_imps_01": 20, "lower": [20, 132, 133, 134, 135, 172, 467, 496, 538, 559, 566, 570], "rang": [20, 30, 34, 37, 39, 52, 94, 205, 208, 209, 220, 241, 249, 251, 467, 496, 538, 549, 551, 564], "pixels1": 20, "87": [20, 37], "1008": 20, "1009": 20, "100a": 20, "764": 20, "hdr": 20, "struct": [20, 198, 520], "1034": 20, "advantag": [20, 538, 545], "overflow": 20, "underflow": [20, 496], "0043": [20, 26, 28, 564], "gems_parm_01": 20, "400": [20, 53], "input": [20, 24, 26, 53, 205, 213, 220, 222, 501, 538, 554], "1012": 20, "chain": 20, "14": [20, 47, 145, 237, 238, 345, 346, 464, 538, 553], "decon": 20, "107": [20, 258, 334, 383, 538, 545], "21": [20, 54, 434], "20": [20, 36, 54, 132, 133, 134, 220, 396, 445, 538, 556], "calibr": 20, "ibh": 20, "scale": 20, "095": 20, "bbh": 20, "085000": 20, "102000": 20, "095000": 20, "blend": 20, "350": 20, "ppscan": 20, "integr": 20, "level": [20, 26, 27, 28, 36, 40, 41, 132, 133, 134, 163, 172, 173, 538, 544, 556, 559, 563, 564, 565, 566], "40": [20, 36, 54, 414, 538, 556], "delta": 20, "1021": 20, "glow": 20, "term": [20, 53, 206, 220, 222, 240, 252, 496, 498, 499, 502], "748": 20, "749": 20, "750": 20, "pitch": 20, "ratio": [20, 33, 36, 37, 38, 132, 133, 134, 252, 496, 497, 499, 500], "1028": 20, "uniqu": [20, 30, 32, 34, 39, 48, 172, 173, 174, 192, 223, 241, 538, 547, 558, 564, 566], "iden": 20, "1029": [20, 538, 552], "histogram": 20, "2068": 20, "user": [20, 30, 34, 43, 45, 50, 51, 80, 89, 132, 133, 134, 160, 165, 183, 538, 541, 544, 550, 551, 554, 559, 562, 564, 566], "coordin": [20, 26, 27, 43], "200000": 20, "700000": 20, "07992553710938": 20, "3816": 20, "219482421875": 20, "fpa": 20, "gain": 20, "ad": [20, 25, 26, 27, 36, 37, 38, 41, 43, 49, 92, 107, 132, 133, 134, 135, 136, 170, 172, 173, 181, 182, 183, 196, 205, 211, 213, 218, 220, 223, 241, 247, 248, 249, 250, 413, 509, 511, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 556, 557, 558, 559, 561, 562, 565, 570], "cal": 20, "reg": 20, "xm": [20, 26, 28], "auto": [20, 132, 133, 134, 498, 502, 538, 539], "pattern": [20, 26, 28, 105, 106, 108, 538, 559], "tggc": [20, 26, 28], "104e": [20, 26, 28, 564], "durat": [20, 26, 28, 564], "60060977935791": [20, 26, 28, 564], "8192": [20, 180], "32768": [20, 26, 28, 36, 37, 564], "difflib": 20, "compar": [20, 57, 467, 496, 538, 545, 548, 556, 559, 562, 563], "termin": [20, 26, 27, 28, 44, 146, 163, 176], "newlin": 20, "massag": 20, "form": [20, 39, 52, 53, 54, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 132, 133, 134, 223, 249, 250, 253, 492, 501], "rep": 20, "split": [20, 467, 526, 538, 539, 540], "diff": [20, 562], "plot_dicom_differ": [20, 21, 560], "show_charset_nam": [21, 22, 560], "veri": [22, 32, 37, 538, 541, 562, 566, 569], "simpl": [22, 43, 45, 51, 538, 539], "app": 22, "personnam": [22, 32, 61, 129, 514, 538, 539, 550, 553, 554, 556, 559], "default_encod": [22, 501], "iso8859": [22, 132, 133, 134, 160, 163, 195, 515], "person_nam": 22, "2008": [22, 501, 538, 559], "ps3": [22, 501], "p98": 22, "yamada": 22, "tarou": 22, "033": 22, "3ed": 22, "bb": 22, "iso2022_jp": 22, "j": 22, "105": [22, 54, 258, 379, 380, 383], "wang": 22, "xiaodong": 22, "xcd": 22, "xf5": 22, "x5e": 22, "xd0": 22, "xa1": 22, "xb6": 22, "xab": 22, "gb18030": 22, "xe7": 22, "x8e": 22, "x8b": 22, "xe5": 22, "xb0": 22, "x8f": 22, "xe6": 22, "x9d": 22, "xb1": 22, "utf": [22, 467], "101": [22, 258, 369, 370, 383], "hong": [22, 501], "gildong": [22, 501], "363": 22, "321": 22, "316": 22, "324": [22, 497, 500], "327": 22, "310": 22, "253": 22, "261": 22, "346": [22, 538, 547], "265": 22, "277": [22, 538, 551], "euc_kr": [22, 501], "label": [22, 26, 28, 30, 34, 51, 223, 241], "pack": [22, 39, 52, 220, 223, 249, 250, 538, 548, 549, 554, 557], "easiest": [23, 569], "probabl": [23, 55, 566], "zenodo": 23, "doi": 23, "enter": 23, "citat": 23, "box": [23, 41], "along": [23, 172], "et": 23, "al": 23, "http": [23, 41, 51, 562, 563, 565, 568], "github": [23, 538, 547, 561, 562, 563, 568], "onlin": 23, "yyyi": [23, 494, 498], "dd": [23, 494], "recommend": [23, 25, 26, 30, 36, 37, 43, 44, 46, 94, 132, 133, 134, 139, 140, 172, 205, 220, 251, 564, 566, 568, 569], "deal": [23, 44, 52, 219, 538, 540, 549, 564], "jpeg": [23, 29, 35, 39, 45, 46, 47, 53, 81, 132, 133, 134, 139, 140, 145, 214, 215, 216, 217, 218, 219, 220, 223, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 245, 247, 248, 249, 250, 352, 357, 360, 467, 538, 549, 551, 553, 554, 556, 559, 568, 569], "see": [23, 24, 26, 27, 28, 34, 36, 37, 38, 43, 44, 45, 46, 53, 55, 57, 129, 132, 133, 134, 135, 160, 163, 166, 170, 178, 179, 180, 183, 196, 200, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 249, 250, 496, 500, 501, 538, 541, 551, 552, 553, 556, 559, 562, 563, 564, 566, 568, 569, 570], "releas": [23, 48, 530, 547, 551, 554], "march": 23, "2018": [23, 563], "june": 23, "octob": 23, "juli": 23, "2019": 23, "januari": [23, 494, 498], "2020": 23, "mai": [23, 24, 26, 27, 29, 30, 33, 34, 36, 37, 39, 44, 47, 48, 51, 52, 53, 55, 79, 97, 100, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 156, 158, 159, 172, 183, 196, 219, 221, 222, 223, 241, 249, 250, 467, 493, 496, 501, 517, 519, 538, 551, 559, 562, 563, 564, 566, 568, 569, 571], "novemb": 23, "august": 23, "2021": [23, 538, 558], "2022": 23, "2023": 23, "jan": [23, 85, 564], "2024": [23, 530], "recreat": [24, 26, 538, 546], "within": [24, 26, 27, 28, 30, 34, 37, 81, 90, 132, 133, 134, 162, 163, 171, 172, 183, 255, 467, 515, 538, 554, 566, 568, 571], "detail": [24, 26, 39, 43, 44, 45, 53, 55, 95, 129, 132, 133, 134, 163, 255, 496, 500, 530, 538, 556, 559, 562, 563], "review": [24, 26, 561, 562, 563], "than": [24, 25, 26, 27, 28, 32, 37, 38, 39, 41, 46, 47, 52, 55, 57, 129, 132, 133, 134, 141, 142, 143, 144, 145, 146, 148, 149, 156, 158, 159, 162, 166, 172, 175, 184, 198, 205, 220, 221, 492, 496, 538, 539, 540, 541, 546, 547, 548, 551, 553, 556, 559, 564, 565, 569], "export": [24, 26, 44, 538, 556], "includ": [24, 25, 26, 29, 44, 52, 55, 129, 132, 133, 134, 139, 170, 172, 183, 206, 220, 222, 240, 255, 467, 496, 498, 502, 530, 538, 540, 542, 544, 546, 547, 559, 562, 563, 564, 566, 569, 571], "health": [24, 26, 55], "sensit": [24, 26, 54, 55, 132, 133, 134, 527, 571], "git": [24, 26, 27, 562, 563, 568], "util": [24, 26, 53, 55, 64, 65, 66, 71, 530, 538, 539, 546, 547, 559], "main": [24, 25, 26, 42, 43, 50, 55, 119, 538, 541, 562, 563, 564, 568], "instancecreationd": [24, 26], "20030903": [24, 26, 27, 43], "instancecreationtim": [24, 26], "150031": [24, 26, 27, 43], "481": [24, 26, 270, 271, 314, 318, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 444, 445, 463, 464], "sopinstanceuid": [24, 26, 38, 171], "777": [24, 26, 27, 43], "7777": [24, 26, 27, 43], "20030903150023": [24, 26, 27, 43], "20030716": [24, 26, 27, 28, 43], "153557": [24, 26, 28, 43], "prefix": [24, 26, 27, 28, 41, 155, 162, 167, 174, 183, 196, 418, 467, 492, 501, 538, 550, 559, 562, 563, 564, 570], "rather": [24, 26, 27, 28, 52, 55, 129, 132, 133, 134, 172, 205, 221, 496, 538, 539, 540, 547, 551, 553, 556, 559, 564], "In": [24, 25, 26, 27, 30, 34, 37, 39, 41, 43, 45, 46, 48, 53, 55, 77, 172, 467, 496, 538, 546, 552, 554, 558, 559, 562, 563, 564, 566, 569], "wa": [24, 25, 26, 39, 41, 129, 132, 133, 134, 148, 172, 177, 181, 182, 509, 511, 538, 541, 548, 551, 556, 559, 562, 563, 566, 569], "direct": [24, 26, 43, 220, 496, 563, 565, 566], "specifi": [24, 25, 26, 27, 28, 36, 37, 39, 43, 110, 112, 129, 132, 133, 134, 148, 162, 163, 183, 195, 223, 241, 249, 250, 467, 494, 496, 498, 501, 502, 527, 538, 551, 556, 564, 566, 568, 569], "exclude_s": [24, 26], "filespec": [24, 25, 26, 27, 28], "outfil": [24, 26, 564], "argument": [24, 25, 26, 27, 28, 41, 43, 46, 93, 132, 133, 134, 181, 182, 183, 204, 205, 251, 252, 467, 496, 498, 499, 502, 538, 540, 541, 549, 550, 551, 552, 553, 554, 559, 565, 566, 569], "filenam": [24, 26, 27, 28, 105, 106, 107, 108, 132, 133, 134, 156, 158, 159, 164, 165, 172, 174, 183, 538, 553, 562, 566], "If": [24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46, 50, 53, 54, 55, 57, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 95, 98, 101, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 139, 142, 143, 144, 145, 146, 148, 149, 152, 153, 156, 158, 159, 160, 162, 163, 164, 167, 171, 172, 173, 174, 180, 181, 182, 183, 195, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 240, 241, 249, 250, 251, 252, 253, 467, 492, 493, 496, 497, 498, 499, 501, 504, 508, 509, 510, 511, 516, 520, 523, 527, 538, 544, 556, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571], "your_fil": [24, 26, 27, 28], "yourplan": [24, 26, 27, 28], "stdout": [24, 26], "messag": [24, 26, 27, 28, 95, 255, 538, 541, 550, 558, 559, 562, 564, 566], "exclud": [24, 26, 27, 28, 55, 132, 206, 220, 222, 240], "binari": [24, 26, 129, 132, 133, 134, 220, 252, 496, 499, 538, 542, 550, 551], "larger": [24, 26, 162, 496, 568, 569], "save_filenam": [24, 26], "otherwis": [24, 26, 30, 34, 39, 43, 89, 98, 116, 117, 121, 122, 126, 127, 128, 129, 132, 133, 134, 139, 142, 143, 144, 148, 152, 153, 160, 172, 174, 175, 178, 179, 183, 203, 210, 211, 212, 220, 222, 223, 240, 241, 249, 250, 467, 493, 496, 501, 505, 506, 507, 508, 509, 510, 511, 515, 516, 517, 519, 520, 522, 523], "_from_codifi": [24, 26], "dummi": [24, 26], "error": [24, 26, 33, 37, 55, 57, 77, 87, 88, 97, 129, 132, 133, 134, 467, 496, 504, 530, 538, 541, 542, 545, 547, 548, 549, 550, 551, 553, 554, 558, 559, 562, 564, 569], "savenam": [24, 26], "dicomfil": [24, 26, 71], "pythoncod": [24, 26], "By": [24, 26, 53, 170, 172, 500, 538, 542, 564], "translat": [24, 26, 43, 467, 538, 547], "whole": [24, 26, 160, 206, 220, 222, 240, 538, 559, 569], "fractiongroupsequ": [24, 26, 27, 28], "non": [24, 26, 32, 43, 44, 109, 110, 111, 112, 127, 129, 130, 132, 133, 134, 136, 145, 170, 172, 183, 196, 219, 220, 237, 238, 249, 250, 258, 467, 496, 500, 504, 506, 509, 511, 517, 519, 538, 542, 543, 547, 548, 549, 550, 551, 554, 558, 564], "fractiongroupnumb": [24, 26], "numberoffractionsplan": [24, 26], "30": [24, 26, 27, 28, 54, 55, 407, 563], "numberofbeam": [24, 26], "numberofbrachyapplicationsetup": [24, 26], "referenc": [24, 26, 27, 28, 41, 43, 165, 171, 172, 566], "refd_beam_sequ": [24, 26], "referencedbeamsequ": [24, 26], "refd_beam1": [24, 26], "beamdosespecificationpoint": [24, 26], "239": [24, 26, 27, 28, 43], "531250000000": [24, 26, 27, 28], "751": [24, 26, 27, 28], "87000000000": [24, 26, 27, 28], "accept": [24, 26, 32, 44, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 132, 133, 134, 149, 538, 553, 554, 556, 558, 562], "issu": [24, 26, 28, 30, 34, 37, 45, 55, 57, 77, 78, 80, 88, 220, 538, 541, 542, 543, 544, 545, 550, 559, 561, 562], "toward": [24, 26], "loop": [24, 26, 55], "develop": [25, 26, 27, 44, 538, 547], "subcommand": [25, 26, 27, 538, 556], "command": [25, 27, 40, 45, 55, 132, 133, 134, 183, 538, 546, 556, 558, 559, 562, 563, 568], "packag": [25, 26, 27, 45, 47, 49, 50, 51, 206, 214, 215, 216, 217, 218, 219, 223, 241, 527, 538, 539, 542, 547, 554, 556, 566, 568], "setup": [25, 26, 27, 28, 45, 538, 545, 546, 558], "command1": [25, 26], "command2": [25, 26], "setuptool": [25, 26, 538, 539, 546, 556], "yourpackag": [25, 26], "variou": [25, 26, 48, 538, 539], "entry_point": [25, 26], "pydicom_subcommand": [25, 26], "command1modul": [25, 26], "add_subpars": [25, 26], "command2modul": [25, 26], "liter": [25, 26], "must": [25, 26, 30, 34, 36, 37, 38, 39, 43, 44, 46, 52, 53, 86, 89, 132, 133, 134, 135, 139, 140, 149, 162, 170, 172, 175, 177, 179, 183, 205, 206, 207, 211, 212, 220, 252, 467, 496, 499, 505, 523, 538, 556, 564, 565, 566, 569, 571], "wish": [25, 26, 36, 44, 220], "usual": [25, 26, 27, 28, 38, 43, 48, 53, 110, 133, 143, 155, 160, 538, 541, 562, 564, 568, 569], "convent": [25, 26, 43, 501], "singl": [25, 26, 30, 32, 34, 36, 37, 38, 39, 41, 79, 109, 111, 129, 132, 133, 134, 139, 141, 146, 148, 149, 154, 169, 170, 172, 201, 202, 205, 206, 218, 220, 222, 223, 240, 241, 249, 250, 511, 520, 538, 539, 549, 557, 562, 565, 566], "subpars": [25, 26], "do_command": [25, 26], "filespec_help": [25, 26], "filespec_pars": [25, 26], "sub": [25, 26, 36, 223, 249, 250, 467], "parser": [25, 26], "add_pars": [25, 26], "subcommandnam": [25, 26], "add_argu": [25, 26], "set_default": [25, 26], "func": [25, 26, 563], "And": [25, 26, 27, 28, 30, 538, 554, 562, 563, 564, 571], "arg": [25, 26, 132, 133, 134, 155, 156, 157, 158, 159, 253, 467, 494, 498, 501, 502, 538, 542], "element_v": [25, 26], "yourarg": [25, 26], "need": [25, 26, 27, 30, 34, 37, 38, 39, 41, 43, 44, 46, 47, 48, 50, 54, 55, 78, 80, 94, 98, 132, 133, 134, 160, 166, 223, 521, 524, 538, 541, 556, 559, 562, 563, 564, 565, 566, 568, 569, 571], "argpars": [25, 26], "snippet": [25, 26, 48], "element_valu": [25, 26], "pair": [25, 26, 134, 172, 221, 252, 496, 497, 499, 500], "codifi": [25, 27, 49, 538, 546, 548, 556, 558, 559], "filetyp": [25, 26], "yourself": [25, 26, 52, 53], "shown": [25, 26, 28, 43, 48, 55, 57, 220, 538, 539, 540, 553, 564, 566], "relat": [25, 26, 27, 37, 39, 44, 52, 54, 60, 132, 133, 134, 135, 183, 206, 216, 218, 219, 527, 538, 539, 562, 566, 571], "think": [25, 26], "contribut": [25, 26, 538, 541, 544, 545, 567], "case": [25, 26, 37, 43, 44, 45, 46, 48, 55, 57, 77, 79, 85, 132, 133, 134, 163, 223, 467, 496, 501, 538, 550, 554, 559, 564, 565, 569, 571], "under": [25, 26, 43, 139, 140, 538, 539, 541, 547, 562, 563, 568], "pull": [25, 26, 28, 561, 568], "request": [25, 26, 28, 43, 252, 499, 538, 554, 556, 561], "v2": [26, 27, 38, 538, 554, 568, 571], "offer": [26, 27, 53, 132, 133, 134], "explor": [26, 27, 48], "156": [26, 27, 43], "rt": [26, 27, 28, 43, 70, 170, 172, 566], "plan": [26, 27, 28, 43, 45, 70, 170], "999": [26, 27, 43, 538, 551], "99": [26, 27, 43, 47, 216, 224, 247, 258, 295, 470], "9999": [26, 27, 43, 563], "888": [26, 27, 43], "88": [26, 27, 43, 256, 263, 276, 277, 281, 282, 319, 323, 326, 342, 364, 387, 408, 409, 411, 414, 440, 453, 490, 538, 542], "replic": [26, 27], "exactli": [26, 27, 52, 54, 252, 496, 497, 499, 500, 564], "notat": [26, 27, 28, 467, 496, 504, 564], "0071": [26, 27, 28], "fraction": [26, 27, 28], "0078": [26, 27, 28], "00a0": [26, 27, 28], "brachi": [26, 27, 28], "300c": [26, 27, 28], "0082": [26, 27, 28], "dose": [26, 27, 28, 70, 170, 172, 538, 544, 566], "0275401": [26, 27, 28], "meterset": [26, 27, 28], "0036697": [26, 27, 28], "0006": [26, 27, 28, 29, 39, 132, 133, 134, 216, 218, 219, 220], "simpli": [26, 27, 43, 52], "particular": [26, 27, 43, 46, 52, 53, 90, 165, 538, 541, 551, 564, 570], "q": [26, 27, 28, 562], "quiet": [26, 27, 28, 496], "automat": [26, 27, 41, 43, 46, 48, 52, 53, 55, 98, 129, 132, 133, 134, 172, 181, 182, 183, 496, 497, 538, 547, 551, 553, 556, 562, 563, 564], "pip": [26, 27, 562, 563, 569, 571], "environ": [26, 27, 44, 538, 539, 554, 568], "variabl": [26, 27, 41, 42, 43, 44, 70, 538, 550, 554, 558], "clone": [26, 27, 562, 563, 568], "repositori": [26, 27, 51, 107, 538, 559, 568], "repeat": [26, 27, 52, 119, 122, 126, 127, 172, 538, 549, 558, 564], "reinstal": [26, 27], "similar": [26, 27, 41, 133, 200, 496, 538, 540, 544, 565, 570], "program": [26, 27, 43, 45, 51, 538, 539, 544], "pipe": [26, 27], "grep": [26, 27], "either": [26, 27, 30, 34, 36, 37, 39, 43, 44, 48, 50, 98, 129, 132, 133, 134, 142, 144, 148, 167, 172, 206, 220, 222, 240, 252, 253, 496, 499, 501, 508, 516, 538, 554, 559, 563, 564, 566, 568, 569], "iso": [26, 27, 36, 37, 39, 46, 213, 220, 352, 357, 360, 492, 494, 498, 502, 538, 551], "741": [26, 27], "organ_at_risk": [26, 27], "deliveri": [26, 27], "maximum": [26, 27, 36, 37, 39, 55, 129, 139, 140, 174, 241, 467, 492, 496, 538, 558, 559], "002c": [26, 27], "organ": [26, 27, 501], "risk": [26, 27], "ptv": [26, 27], "target": [26, 27, 41], "0026": [26, 27], "prescript": [26, 27], "826203": [26, 27], "00b0": [26, 27], "00b6": [26, 27], "0111": [26, 27], "control": [26, 27, 29, 36, 37, 50, 85, 86, 102, 103, 223, 249, 250, 538, 544, 566, 569], "0115": [26, 27], "rate": [26, 27], "650": [26, 27], "011a": [26, 27], "010c": [26, 27], "cumul": [26, 27], "0051": [26, 27], "9990268": [26, 27], "0180": [26, 27], "regular": [26, 27, 43, 467, 538, 558], "express": [26, 27, 467], "abil": [26, 27, 53, 538, 546, 547, 554, 559], "alreadi": [26, 28, 36, 37, 38, 40, 41, 46, 53, 77, 110, 132, 133, 134, 136, 146, 173, 177, 196, 205, 220, 495, 538, 546, 564, 566, 569, 571], "nest": [26, 28, 43, 132, 538, 545, 558], "minim": [26, 28, 30, 183, 196, 223, 249, 250, 496, 538, 559], "below": [26, 28, 32, 36, 37, 38, 43, 45, 46, 48, 173, 183, 206, 216, 218, 219, 220, 527, 538, 541, 566, 569, 570], "studyid": [26, 28], "bitsstor": [26, 28, 36, 37, 216, 218, 220], "pre": [26, 28, 43, 45, 538, 559, 562], "id00001": [26, 28], "study1": [26, 28], "plan1": [26, 28], "02754010000000": [26, 28], "003669700000": [26, 28], "treatment": [26, 28], "static": [26, 28, 134, 467], "photon": [26, 28], "energi": [26, 28], "00000000000000": [26, 28], "coll": [26, 28], "couch": [26, 28], "wedg": [26, 28], "boli": [26, 28], "alwai": [26, 28, 47, 48, 53, 121, 129, 135, 162, 216, 220, 221, 223, 249, 250, 496, 538, 550, 554, 556, 559], "those": [26, 28, 30, 34, 40, 44, 48, 538, 541, 544, 554, 564, 566, 569], "extra": [26, 28, 43, 223, 538, 559], "submit": [26, 28, 45, 538, 544, 561, 562, 563], "interfac": [27, 40, 538, 556, 568], "introduct": [28, 34, 42, 49, 562, 563, 566, 567, 571], "backend": [29, 538, 559], "iter_pixel": [29, 538, 559], "well": [29, 48, 53, 55, 172, 207, 220, 467, 538, 541, 542, 544, 551, 562, 564, 568], "as_arrai": [29, 218, 220, 223], "as_buff": [29, 223], "iter_arrai": [29, 223], "iter_buff": [29, 223], "describ": [29, 39, 43, 47, 55, 109, 111, 129, 132, 133, 134, 496, 501, 565, 566], "encod": [29, 30, 32, 39, 40, 42, 46, 47, 53, 54, 57, 77, 78, 79, 80, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 156, 158, 159, 160, 163, 168, 169, 172, 183, 190, 194, 195, 196, 198, 199, 200, 202, 219, 222, 223, 248, 249, 250, 467, 493, 496, 501, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 530, 538, 544, 547, 548, 549, 550, 551, 556, 557, 558, 559, 564, 565, 569], "overrid": [29, 134, 170, 221, 495, 538, 549, 566], "int": [29, 30, 32, 33, 34, 43, 57, 78, 86, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 139, 141, 142, 144, 145, 147, 148, 149, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 166, 168, 169, 172, 173, 174, 177, 178, 179, 180, 195, 204, 205, 206, 210, 211, 212, 220, 222, 223, 240, 241, 249, 250, 251, 252, 253, 254, 467, 494, 495, 496, 497, 498, 499, 500, 501, 515, 520, 523, 527, 564], "number_of_fram": [29, 30, 34, 142, 144, 148, 221, 222, 240, 241], "samples_per_pixel": [29, 30, 34, 221, 222, 240, 241], "bits_alloc": [29, 30, 34, 220, 221, 222, 240, 241], "bits_stor": [29, 30, 34, 221, 222, 240, 241], "photometric_interpret": [29, 30, 34, 221, 222, 240, 241], "color": [29, 30, 33, 34, 36, 37, 38, 39, 46, 49, 207, 213, 220, 241, 538, 551, 553, 569], "pixel_represent": [29, 30, 34, 221, 222, 240, 241], "pixel_keyword": [29, 30, 222, 240], "whether": [29, 39, 43, 83, 103, 129, 132, 133, 134, 149, 252, 467, 496, 499, 505, 538, 541, 544, 549, 551, 556, 561, 562, 568], "sign": [29, 30, 32, 34, 36, 37, 39, 53, 81, 241, 252, 496, 499, 538, 554, 562, 563, 571], "unsign": [29, 30, 32, 34, 36, 37, 39, 53, 149, 241, 538, 554, 571], "planar_configur": [29, 30, 221, 222, 240], "planar": [29, 36, 39, 53, 132, 133, 134, 220, 222, 240, 538, 549], "nativ": [29, 39, 46, 223, 241, 249, 250, 252, 470, 499, 534, 569], "floatpixeldata": [29, 30, 53, 220, 222, 240, 538, 556], "doublefloatpixeldata": [29, 30, 53, 220, 222, 240, 538, 556], "ndarrai": [29, 37, 41, 43, 47, 52, 53, 54, 81, 83, 98, 104, 132, 133, 134, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 240, 241, 249, 250, 509, 511, 527, 538, 547, 551, 554, 559, 569, 571], "as_rgb": 29, "bool": [29, 30, 33, 34, 57, 82, 83, 95, 97, 102, 107, 116, 117, 126, 127, 129, 131, 132, 133, 134, 136, 139, 149, 156, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 196, 203, 206, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 240, 241, 249, 250, 252, 467, 493, 495, 496, 497, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 522, 523, 527], "ycbcr": [29, 36, 37, 38, 39, 214, 215, 216, 217, 218, 219, 223, 249, 250], "ybr_full_422": [29, 39, 53, 213, 216, 218, 220, 223, 249, 250, 538, 551, 557], "rgb": [29, 30, 33, 34, 36, 37, 38, 39, 46, 53, 98, 207, 213, 214, 215, 216, 217, 218, 219, 220, 223, 249, 250, 538, 548, 551, 556, 559, 569], "force_rgb": 29, "convers": [29, 30, 34, 36, 37, 38, 39, 94, 129, 206, 216, 218, 219, 527, 538, 540, 550, 551, 553, 565, 571], "force_ybr": 29, "view_onli": [29, 223, 249, 250], "make": [29, 30, 34, 36, 37, 39, 43, 44, 45, 48, 55, 132, 133, 134, 467, 492, 504, 538, 541, 550, 556, 559, 564, 566, 568, 569], "best": [29, 49, 70], "effort": 29, "attempt": [29, 30, 34, 145, 182, 183, 527, 538, 547, 556, 559, 564], "immut": [29, 223, 494, 498, 502, 538, 550], "encapsul": [29, 39, 46, 53, 132, 133, 134, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 223, 241, 530, 538, 539, 549, 554, 559], "apply_jls_sign_correct": 29, "raw": [29, 30, 34, 37, 43, 52, 53, 54, 130, 131, 132, 133, 134, 142, 144, 148, 154, 160, 164, 170, 223, 241, 249, 250, 527, 538, 544, 550, 553, 571], "integ": [29, 30, 32, 34, 37, 39, 53, 149, 205, 220, 251, 252, 467, 492, 496, 497, 499, 500, 538, 542, 544, 554, 571], "apply_j2k_sign_correct": 29, "doesn": [29, 39, 52, 85, 132, 133, 134, 206, 216, 219, 223, 249, 250, 538, 553, 562], "signed": [29, 37, 223, 249, 250], "codestream": [29, 220], "rle_segment_ord": [29, 219], "big": [29, 33, 34, 39, 47, 132, 133, 134, 142, 143, 144, 148, 152, 153, 156, 158, 159, 183, 216, 219, 223, 225, 247, 252, 258, 467, 493, 499, 538, 558, 559, 571], "pylibjpeg": [29, 38, 46, 47, 132, 133, 134, 218, 223, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 246, 538, 554, 556, 559, 569], "byteord": [29, 33, 34, 252, 499, 571], "guid": [30, 34, 41, 45, 46, 132, 133, 134, 530, 538, 550, 556, 559, 563, 564, 569], "intend": [30, 34, 38, 39, 132, 133, 134, 222, 240, 241, 562], "advanc": [30, 34, 41], "who": [30, 34, 538, 544, 545], "support": [30, 34, 36, 44, 49, 71, 72, 81, 98, 132, 133, 134, 158, 159, 172, 205, 206, 207, 214, 215, 216, 217, 218, 219, 220, 223, 241, 247, 251, 252, 499, 527, 538, 539, 547, 548, 549, 550, 551, 553, 554, 556, 557, 558, 559, 566, 567, 568, 569, 570], "provid": [30, 34, 39, 42, 43, 48, 53, 98, 129, 132, 133, 134, 142, 144, 148, 206, 216, 218, 219, 223, 241, 527, 538, 545, 565, 568, 569, 570], "cover": [30, 34, 564, 566, 569, 571], "mechan": [30, 34, 223, 241], "unencod": [30, 34, 241], "least": [30, 34, 36, 39, 132, 133, 134, 250, 467, 523, 566], "is_avail": [30, 34, 98, 206, 214, 215, 216, 217, 218, 219, 223, 241, 527, 538, 549], "signatur": [30, 34, 158, 159, 538, 554], "met": [30, 34, 166, 206, 214, 215, 216, 217, 218, 219, 527, 538, 549], "decoder_depend": 30, "tupl": [30, 34, 43, 46, 48, 86, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 132, 133, 134, 135, 140, 142, 144, 145, 148, 149, 153, 156, 158, 159, 162, 205, 222, 223, 240, 241, 251, 253, 254, 467, 494, 496, 498, 501, 538, 541, 550, 569], "rlelossless": [30, 34, 38, 46, 132, 133, 134, 562, 569], "jpeg2000": [30, 34, 36, 47, 145, 247, 538, 549, 551], "pillow": [30, 34, 47, 51, 132, 133, 134, 217, 231, 232, 233, 234, 538, 547, 549, 551, 553, 556, 559, 562], "imagecodec": [30, 34], "gdcm": [30, 34, 38, 46, 47, 132, 133, 134, 214, 231, 232, 233, 234, 235, 236, 237, 238, 246, 538, 541, 547, 550, 554, 556, 557, 559, 569], "runner": [30, 34, 222, 240, 569], "decoderunn": 30, "bytearrai": [30, 34, 132, 133, 134, 142, 143, 144, 148, 152, 153, 156, 158, 159, 220, 222, 223, 240, 252, 499], "worth": [30, 222, 240], "indirectli": [30, 34], "get_opt": [30, 34, 222, 240], "At": [30, 34, 562, 570], "minimum": [30, 34, 36, 37, 38, 132, 133, 134, 196, 496], "transfer_syntax_uid": [30, 34, 132, 133, 134], "grayscal": [30, 34, 36, 37, 38, 39, 53], "4095": [30, 34, 39, 241], "65535": [30, 34, 39, 241, 566], "ybr_full": [30, 34, 36, 37, 38, 39, 53, 213, 216, 218, 220, 223, 241, 249, 250, 538, 551, 557], "condition": [30, 571], "signal": [30, 33, 34, 36, 132, 133, 134, 496], "done": [30, 34, 46, 467, 496, 562, 563, 564, 569], "set_opt": [30, 34, 222, 240], "successfulli": [30, 34, 148], "fail": [30, 34, 98, 538, 541, 542, 547, 562, 563, 566], "caus": [30, 34, 504, 538, 540, 566], "awar": [30, 34, 55, 566], "affect": [30, 34, 214, 215, 216, 217, 218, 219, 220, 496, 562, 563], "add_plugin": [30, 34, 223, 241], "plugin_label": [30, 34], "my_decoder_func": 30, "my_packag": [30, 34], "rlelosslessdecod": 30, "my_decod": 30, "plugin": [31, 35, 46, 47, 132, 133, 134, 218, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 249, 250, 538, 556, 557, 561, 568, 569], "anyth": [32, 48, 52, 53, 220], "ascii": [32, 175, 201, 467, 538, 550], "decim": [32, 82, 102, 467, 495, 496, 497, 499, 500, 504, 505, 538, 544, 545, 556], "depth": [32, 37, 42, 51, 53, 173, 538, 551, 568], "even": [32, 37, 48, 52, 139, 141, 146, 162, 167, 220, 223, 249, 496, 538, 554, 564, 566, 569], "correctli": [32, 48, 55, 98, 172, 214, 215, 496, 538, 541, 544, 547, 548, 550, 551, 554, 556, 557, 558, 559, 562], "empti": [32, 129, 132, 133, 134, 136, 142, 144, 145, 147, 148, 149, 156, 205, 220, 251, 467, 496, 497, 501, 520, 538, 539, 547, 550, 551, 552, 553, 554, 556, 559, 564, 566, 571], "multivalu": [32, 61, 83, 201, 202, 507, 508, 509, 510, 511, 514, 522, 525, 526, 538, 544], "accord": [32, 55, 162, 194, 564, 566], "od": [32, 183, 538, 547, 548, 556], "OF": [32, 183, 538, 553], "ol": [32, 183, 538, 547, 548, 556], "st": [32, 45], "ur": [32, 519], "ut": 32, "never": [32, 82, 132, 133, 134, 467, 496, 562], "greater": [32, 39, 132, 133, 134, 141, 146, 220, 492, 496, 538, 547, 565], "hint": 32, "union": 32, "mutablesequ": [32, 77, 130, 132, 133, 134, 160, 163, 168, 169, 506, 507, 508, 509, 510, 511, 514, 516, 517, 520, 522, 524, 525, 526], "AT": [32, 507, 538, 551, 556, 558], "attribut": [32, 39, 48, 70, 85, 129, 131, 132, 133, 134, 156, 158, 159, 171, 172, 173, 183, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 252, 467, 494, 496, 497, 498, 499, 500, 501, 502, 503, 538, 539, 549, 554, 557, 558, 559, 564, 566], "basetag": [32, 43, 61, 86, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 129, 131, 132, 133, 134, 135, 160, 162, 163, 166, 172, 176, 178, 179, 180, 249, 250, 253, 254, 255, 507, 523, 538, 541, 556], "dsfloat": [32, 61, 495, 509, 538, 556], "dsdecim": [32, 61, 89, 495, 509, 538, 556], "doubl": [32, 41, 53, 132, 133, 134, 216, 220, 533, 534, 538, 551], "ov": [32, 183, 538, 551, 556], "word": [32, 41, 55, 110, 189, 467, 501, 564], "short": [32, 523, 562, 564], "sv": [32, 527, 538, 551], "uc": [32, 524, 538, 547], "unlimit": 32, "identifi": [32, 39, 44, 48, 55, 192, 467], "uri": [32, 132, 133, 134, 538, 554, 565], "url": [32, 41], "uv": [32, 527, 538, 551], "config": [32, 44, 500, 522, 530, 538, 544, 549, 550, 551, 553, 554, 556, 559], "datetime_convers": [32, 508, 510, 516, 530], "use_ds_decim": [32, 83, 509, 530, 538, 553], "rlelosslessencod": [33, 34, 38, 538, 556, 559], "jpeg2000losslessencod": [33, 36], "use_mct": 33, "enabl": [33, 44, 94, 132, 133, 134], "mct": [33, 36], "jpeg2000encod": [33, 36], "compression_ratio": 33, "qualiti": [33, 36, 37, 132, 133, 134, 569], "layer": [33, 36, 132, 133, 134], "signal_to_noise_ratio": 33, "peak": [33, 36, 132, 133, 134], "nois": [33, 36, 132, 133, 134], "jpeglslosslessencod": [33, 37], "interleave_mod": 33, "interleav": [33, 37, 571], "jpeglsnearlosslessencod": [33, 37], "lossy_error": 33, "absolut": [33, 37, 105, 106, 107, 108, 132, 133, 134, 153, 156, 158, 159, 171, 172, 252, 496, 499, 538, 559, 569], "intens": [33, 36, 37, 38, 39, 569], "unit": [33, 37, 53, 132, 133, 134, 162, 206, 220, 222, 240, 527, 562, 569, 571], "tutori": [34, 41, 45, 538, 551, 561, 562, 563, 564, 566, 569, 571], "foo": 34, "encoderunn": 34, "multi": [34, 39, 47, 53, 61, 83, 129, 132, 133, 134, 139, 142, 144, 145, 146, 147, 148, 149, 172, 205, 206, 220, 222, 223, 241, 249, 250, 519, 530, 538, 547, 549, 551, 553, 564, 571], "32": [34, 36, 39, 132, 133, 134, 135, 140, 149, 216, 219, 220, 496, 527, 538, 548, 556, 559, 571], "complement": [34, 39, 42, 241, 252, 499], "encoder_depend": 34, "my_encoder_func": 34, "my_encod": 34, "rle": [35, 39, 46, 47, 53, 132, 133, 134, 139, 140, 145, 218, 219, 220, 239, 241, 246, 247, 248, 420, 538, 549, 550, 556, 557, 559, 568, 569], "lossless": [35, 39, 46, 47, 53, 132, 133, 134, 139, 140, 145, 218, 219, 220, 228, 229, 232, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 538, 553, 556, 557, 559, 569], "scheme": [36, 37, 38, 160, 467, 514, 515, 521, 524, 525, 570, 571], "iec": [36, 37, 39, 46, 213, 220, 352, 357, 360, 492], "15444": [36, 220, 352], "itu": [36, 37, 213, 220, 492], "800": 36, "link": [36, 37, 41, 563], "free": [36, 37, 132, 133, 134], "revers": [36, 173, 205, 251, 538, 551], "dwt": 36, "wavelet": 36, "irrevers": 36, "decomposit": 36, "tile": 36, "lrcp": 36, "progress": [36, 538, 558, 563], "jp2": 36, "explan": [36, 37, 38], "relationship": [36, 37, 38, 172, 563], "glossari": [36, 37, 38, 40], "absent": [36, 37, 501, 571], "38": [36, 338], "palett": [36, 37, 38, 39, 49, 106, 170, 172, 207, 220, 538, 551, 553], "ybr_rct": [36, 39, 46, 218, 569], "ybr_ict": [36, 39, 218], "white": [36, 37, 38, 538, 546], "black": [36, 37, 38, 538, 559], "index": [36, 37, 38, 43, 53, 54, 131, 132, 133, 134, 148, 172, 173, 174, 205, 210, 211, 212, 220, 222, 223, 240, 241, 250, 251, 467, 527, 538, 554, 559, 563, 571], "red": [36, 37, 38, 39, 207, 220, 538, 553, 562, 563], "green": [36, 37, 38, 39, 538, 553], "blue": [36, 37, 38, 39, 538, 553], "lookup": [36, 37, 38, 53, 113, 114, 115, 117, 118, 128, 207, 208, 209, 210, 211, 220, 467, 538, 554, 564], "noth": [36, 37, 38, 566], "lossi": [36, 37, 38, 46, 47, 145, 220, 236, 245, 569], "compon": [36, 39, 47, 81, 145, 173, 175, 218, 220, 501, 538, 539, 541, 556], "transform": [36, 39, 53], "dure": [36, 37, 43, 48, 110, 538, 557, 559, 562, 563], "higher": [36, 38, 40, 132, 133, 134, 148, 496, 538, 541, 565], "keep": [36, 37, 38, 172, 566, 568], "losslessli": [36, 37], "place": [36, 37, 38, 39, 46, 47, 132, 133, 134, 205, 251, 496, 538, 547, 564, 566], "jpe2000lossless": 36, "rgb_color": [36, 37, 38, 70], "assert": [36, 37, 562, 565], "samplesperpixel": [36, 37, 38, 216, 218, 219, 220, 538, 544, 549, 569], "bitsalloc": [36, 37, 38, 47, 129, 216, 218, 219, 220, 538, 549], "pixelrepresent": [36, 37, 38, 216, 218, 219, 220, 538, 550], "921600": [36, 37, 38], "334412": 36, "152342": 36, "greyscal": [36, 37], "13656": 36, "purpos": [36, 37, 47, 569], "resolut": 36, "pass": [36, 37, 41, 43, 46, 52, 53, 93, 105, 106, 108, 134, 139, 140, 205, 538, 541, 562, 563, 566, 569], "j2k_cr": [36, 132, 133, 134], "j2k_psnr": [36, 132, 133, 134], "There": [36, 44, 50, 51, 53, 132, 133, 134, 538, 549, 562, 563, 564, 565, 571], "decreas": [36, 132, 133, 134], "increas": [36, 132, 133, 134, 538, 541, 558], "200": [36, 272, 274, 415, 484, 485], "46100": 36, "46076": 36, "1582": 36, "openjpeg": [36, 46, 47, 568], "14495": [37, 357], "practic": [37, 49, 70, 172], "complic": [37, 566], "wai": [37, 43, 44, 45, 50, 52, 53, 55, 132, 133, 134, 538, 544, 559, 561, 564, 565, 566, 568, 570], "track": 37, "constraint": [37, 39, 496, 497, 504], "NEAR": 37, "jls_error": [37, 132, 133, 134, 569], "though": [37, 566], "up": [37, 46, 52, 53, 132, 133, 134, 156, 158, 159, 172, 173, 180, 183, 218, 492, 496, 501, 526, 538, 541, 545, 547, 562, 563, 564, 567, 568, 569], "0b10000000": 37, "127": 37, "0b01111111": 37, "ok": [37, 85, 86, 172, 562], "255": 37, "much": [37, 43, 504, 538, 541, 544, 545, 553], "therefor": [37, 205, 220], "restrict": [37, 39], "both": [37, 38, 44, 45, 77, 82, 83, 98, 149, 172, 211, 220, 496, 538, 540, 547, 550, 553, 559, 565], "equal": [37, 38, 39, 141, 146, 252, 467, 496, 497, 499, 500, 538, 548, 549, 550], "mind": [37, 38], "inclus": [37, 38, 39], "downscal": [37, 38], "accordingli": [37, 38, 132, 133, 134], "better": [37, 41, 538, 542, 544, 548], "downstream": 37, "expect": [37, 43, 142, 144, 148, 206, 214, 216, 219, 220, 222, 223, 240, 249, 250, 538, 548, 550, 554, 558, 562, 569], "common": [37, 48, 50, 54, 55, 77, 538, 549, 566, 571], "being": [37, 39, 104, 113, 114, 115, 117, 118, 121, 123, 124, 125, 128, 132, 133, 134, 146, 156, 158, 159, 219, 241, 538, 539, 549, 556, 557, 559, 566, 568, 569], "separ": [37, 46, 101, 129, 132, 133, 134, 139, 140, 467, 498, 501, 538, 541, 542, 569], "concaten": [37, 138, 149, 467], "px": 37, "third": [37, 49, 467, 496, 501, 568], "xff": 37, "With": [37, 241, 467], "ch": [37, 571], "jpeglslossless": 37, "261792": 37, "14180": 37, "jpeglsnearlossless": [37, 538, 554, 559, 569], "149188": 37, "our": [37, 562, 563, 564, 566, 571], "page": [37, 538, 547, 550, 561, 562, 563, 568], "isn": [37, 132, 133, 134, 142, 144, 148, 163, 183, 220, 467, 492, 538, 550, 554, 559, 563, 564], "necessari": [37, 43, 44, 51, 141, 146, 252, 496, 499, 501, 566, 571], "8508": 37, "pyjpegl": [37, 46, 132, 133, 134, 215, 235, 236, 244, 245, 538, 559, 569], "underli": 38, "algorithm": [38, 492], "packbit": 38, "made": [38, 132, 133, 134, 141, 145, 172, 183, 538, 540, 541, 553, 562, 563, 566], "might": [38, 48, 241, 571], "ask": [38, 45, 561, 562, 563], "why": [38, 569], "vice": [38, 183, 207, 220], "versa": [38, 183, 207, 220], "answer": [38, 561, 564, 569], "befor": [38, 47, 48, 92, 129, 132, 133, 134, 162, 173, 180, 211, 212, 220, 222, 223, 467, 538, 541, 544, 545, 547, 550, 562, 563, 564, 566, 569, 571], "decis": 38, "known": [38, 39, 43, 44, 48, 53, 57, 85, 97, 129, 130, 132, 133, 134, 207, 220, 252, 254, 499, 538, 548, 551, 553, 554, 556, 564, 570], "20x": [38, 46, 132, 133, 134, 538, 556], "slower": [38, 46, 220], "424152": 38, "pixel_data_handl": [38, 52, 53, 132, 133, 134, 528, 530, 538, 549, 556, 559], "convert_color_spac": [38, 53, 220, 530, 538, 556], "ybr": [38, 53, 538, 556], "187460": 38, "retir": [39, 110, 117, 129, 132, 133, 134, 181, 182, 249, 250, 258, 467, 538, 554], "techniqu": [39, 45], "10918": [39, 46, 213, 220, 360, 538, 556], "unencapsul": 39, "henc": [39, 183], "public": [39, 132, 133, 134, 183], "previous": [39, 164, 538, 549, 553, 556], "constrain": 39, "iod": [39, 183, 220, 566, 571], "remain": [39, 146, 172, 467, 538, 544, 563], "hand": [39, 55, 496, 538, 554], "prior": [39, 46, 146, 183, 223, 241, 538, 559, 569], "taken": [39, 132, 133, 134, 142, 144, 148, 220, 221], "account": 39, "especi": [39, 55, 562], "determin": [39, 43, 52, 129, 132, 172, 208, 209, 220, 252, 496, 499, 538, 559, 566, 571], "invers": [39, 494, 496, 498], "ybr_partial_420": 39, "further": [39, 566, 570], "r1": 39, "g1": 39, "b1": 39, "r2": 39, "g2": 39, "b2": 39, "rn": 39, "gn": 39, "bn": 39, "contigu": 39, "typic": [39, 97, 137, 569], "mean": [39, 47, 219, 467, 492, 562, 564, 566, 569, 570], "chapter": [39, 492], "mani": [39, 44, 51, 53, 139, 140, 142, 143, 538, 540, 544, 545, 559, 561], "most": [39, 43, 44, 47, 51, 55, 86, 223, 249, 250, 252, 499, 538, 541, 544, 545, 564, 566, 569, 570], "signific": [39, 44, 252, 499, 506, 517, 519, 538, 541], "past": [39, 146, 167, 196], "familiar": [40, 41, 564, 566, 569, 571], "document": [40, 44, 132, 133, 134, 170, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 249, 250, 542, 547, 548, 559, 561, 567], "reader": 41, "unfamiliar": 41, "step": [41, 538, 545, 556, 566, 570, 571], "achiev": [41, 141], "understand": [41, 43, 562, 569, 571], "aim": [41, 538, 554], "explain": 41, "subject": [41, 565, 570], "fairli": 41, "technic": [41, 42], "api": [41, 223, 241, 249, 250, 538, 548, 562, 565, 569, 570], "learn": [41, 45, 562, 566], "remind": 41, "about": [41, 43, 44, 45, 51, 53, 55, 95, 220, 564, 566, 569, 571], "italic": 41, "lowercas": [41, 467], "uppercas": [41, 129, 467], "capit": [41, 467, 496, 538, 544], "american": 41, "english": 41, "spell": [41, 77, 538, 549], "hex": [41, 52, 129, 132, 133, 134, 135, 497, 500, 538, 541], "comma": 41, "ital": 41, "seq": [41, 564], "try": [41, 98, 181, 182, 222, 467, 538, 542, 550, 564, 566], "gender": 41, "neutral": 41, "pronoun": 41, "hypothet": 41, "tick": 41, "markup": [41, 563], "0xb4": 41, "built": [41, 252, 499, 568], "fragments_per_fram": [41, 139], "haven": [41, 562, 564], "docstr": [41, 562], "initi": [41, 45, 133, 134, 135, 178, 179, 205, 220, 251, 501, 562], "proper": [41, 538, 541], "noun": 41, "wrap": [41, 43, 156, 158, 159, 183], "unless": [41, 166, 173, 467, 496, 538, 542, 553, 566], "good": [41, 55, 562, 563], "reason": [41, 563], "attr": 41, "dtype": [41, 43, 52, 53, 54, 132, 133, 134, 218, 220, 222, 241, 569], "chtml": 41, "part05": [41, 46, 563], "sect_6": 41, "html": [41, 46, 563], "nema": 41, "org": [41, 51, 565], "four": [41, 98, 172, 180], "five": [41, 501], "warn": [41, 44, 55, 57, 77, 78, 80, 85, 86, 220, 530, 538, 540, 544, 548, 549, 550, 551, 553, 556, 557, 559, 562, 563], "sparingli": 41, "featur": [41, 44, 538, 546, 561, 562], "versionad": 41, "versionchang": 41, "handler": [41, 46, 47, 53, 81, 95, 98, 132, 133, 134, 206, 214, 215, 216, 217, 218, 219, 220, 527, 530, 538, 547, 549, 551, 552, 553, 554, 556, 557, 559, 562, 565, 569], "instal": [42, 44, 47, 51, 98, 218, 223, 241, 538, 539, 546, 556, 563, 564, 567, 569, 571], "intermedi": [42, 43, 496], "core": [42, 49], "mostli": [43, 131], "behav": [43, 44, 112, 205, 538, 548, 550, 566], "via": [43, 46, 57, 129, 132, 133, 134, 218, 467, 494, 538, 547, 549, 554, 556, 557, 559, 565, 566, 569], "entir": [43, 132, 162, 165, 214, 218, 223, 249, 250, 562, 564, 569], "collaps": [43, 52], "dcm_qt_tree": [43, 538, 545, 546], "0x10": [43, 129, 132, 133, 134, 253], "squar": [43, 48, 496, 564], "bracket": [43, 48, 564], "around": [43, 538, 559, 562], "conveni": [43, 48, 53, 129, 538, 554, 559, 565], "cannot": [43, 47, 86, 132, 133, 134, 172, 183, 205, 496, 500, 504, 538, 556, 562, 566], "retriev": [43, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 128, 129, 132, 133, 134, 538, 551, 559, 564, 565], "12345": [43, 132], "member": [43, 496], "numer": [43, 172, 174, 252, 467, 496, 499, 520, 538, 542, 551, 556, 558], "begin": [43, 101, 139, 152, 167, 252, 467, 499], "Or": [43, 568], "beam1": 43, "thing": [43, 52, 563, 564], "harder": 43, "realli": [43, 538, 541, 550], "0x300a": 43, "0xb0": 43, "0xc2": 43, "rememb": [43, 48, 52], "exact": [43, 496, 497, 499, 500], "handi": 43, "dir": [43, 45, 132, 133, 134, 538, 544, 557, 563, 570], "session": [43, 44, 45, 48, 132, 133, 134, 563], "prompt": 43, "pat": 43, "patientsetupsequ": [43, 45], "patientsex": [43, 132, 133, 134], "anywher": [43, 564], "insensit": [43, 132, 133, 134], "_dicom_dict": 43, "add_dict_entri": [43, 48, 112, 538, 547, 550], "similarli": [43, 495, 564, 569], "hood": 43, "offici": [43, 113, 114, 115, 116, 117, 118, 119, 126, 127, 128, 129, 467, 538, 544, 545, 564, 571], "reload": 43, "0x0010": [43, 132, 133, 134, 253, 564], "softwarevers": 43, "0x0018": 43, "0x1020": 43, "pixel_byt": 43, "175": 43, "166": 43, "203": [43, 227, 247, 258, 335, 352], "207": 43, "216": 43, "186": 43, "183": 43, "157": 43, "181": 43, "184": 43, "171": 43, "152": 43, "164": 43, "235": 43, "906": 43, "910": 43, "923": 43, "922": 43, "929": 43, "927": 43, "914": 43, "954": 43, "938": 43, "942": [43, 538, 551], "925": 43, "905": [43, 53], "959": 43, "916": [43, 538, 541], "911": 43, "904": 43, "909": 43, "int16": [43, 53, 54, 571], "extens": [43, 79, 133, 538, 549, 556], "effect": [43, 146, 492], "behavior": [43, 44, 57, 85, 86, 97, 132, 133, 134, 538, 545, 549, 553, 554], "enforc": [43, 49, 205, 538, 544], "t1": 43, "0x00100010": [43, 129, 132, 133, 134], "equival": [43, 132, 133, 134, 142, 144, 148, 220, 222, 240, 496, 538, 548], "t2": 43, "t3": 43, "t4": 43, "portion": 43, "is_priv": [43, 129, 171, 252, 467, 538, 547], "odd": [43, 132, 133, 134, 135, 206, 220, 222, 223, 240, 252, 538, 548, 557, 559, 564], "prettier": 43, "select": [43, 132, 133, 134, 145, 238], "against": [44, 129, 172, 538, 543, 554], "turn": [44, 95, 163, 538, 554], "reading_validation_mod": [44, 57, 77, 78, 80, 96, 130, 132, 133, 134, 538, 557], "writing_validation_mod": [44, 57, 80, 538, 557], "newli": [44, 132, 133, 134, 538, 553], "ignor": [44, 57, 77, 85, 86, 112, 129, 132, 133, 134, 176, 467, 496, 521, 530, 538, 552, 556, 559, 563], "rais": [44, 57, 77, 78, 80, 82, 83, 85, 86, 98, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 130, 131, 132, 133, 134, 135, 136, 146, 149, 155, 156, 158, 159, 162, 164, 167, 172, 180, 181, 183, 196, 205, 206, 214, 215, 216, 217, 218, 219, 220, 223, 241, 251, 252, 255, 467, 492, 496, 497, 499, 500, 504, 509, 511, 523, 530, 538, 542, 543, 548, 550, 551, 554, 556, 557, 559, 564, 566, 569], "As": [44, 47, 48, 496, 564, 570], "suggest": [44, 561, 562, 563], "except": [44, 48, 52, 53, 57, 77, 85, 86, 87, 98, 132, 133, 134, 155, 170, 172, 183, 196, 205, 223, 241, 255, 496, 530, 538, 541, 543, 546, 547, 550, 551, 554, 556, 557, 559, 562, 564, 566, 569], "special": [44, 61, 530, 538, 545], "avoid": [44, 104, 163, 180, 495, 538, 550, 551, 554, 566], "invalid": [44, 57, 77, 78, 86, 90, 91, 136, 220, 492, 538, 550, 554, 556, 558, 559], "legaci": 44, "strictli": [44, 51], "adher": 44, "guarante": [44, 47, 48, 496], "predefin": 44, "That": [44, 48], "local": [44, 70, 107, 494, 498, 538, 557, 562, 563, 564, 568], "balanc": 44, "evolut": 44, "break": [44, 467, 538, 554, 566], "sometim": [44, 48, 538, 549, 559], "improv": [44, 538, 545, 548, 549, 556, 558, 561], "protect": 44, "upcom": [44, 97], "compat": [44, 46, 494, 496, 498, 538, 541, 542, 544, 545, 546, 547, 559, 568], "next": [44, 48, 97, 132, 133, 134, 163, 172, 173, 538, 541, 554, 566, 571], "simplest": [44, 566, 568], "pydicom_futur": [44, 538, 554], "temporarili": 44, "linux": [44, 538, 547, 563, 568], "future_behavior": [44, 530, 538, 554], "again": [44, 45, 55, 562, 566], "anoth": [44, 213, 220, 538, 554, 564, 569], "txt": [44, 564], "virtual": [44, 568], "brief": 45, "overview": [45, 566], "pure": 45, "report": [45, 538, 551, 561, 567], "radiotherapi": [45, 170], "easi": [45, 53], "complex": [45, 53, 252, 497, 499, 500], "natur": [45, 467, 496], "helper": [45, 135], "filedataset": [45, 50, 70, 107, 162, 166, 183, 530, 538, 541, 543, 556, 557, 559, 564, 566], "supin": 45, "prone": 45, "hfp": 45, "rtplan2": 45, "fetch": [45, 46, 53, 569], "0182": 45, "01b2": 45, "patientposit": 45, "thorough": 45, "server": [45, 563], "pynetdicom": 45, "primarili": [45, 538, 542], "design": [45, 55, 570], "let": [45, 46, 538, 551, 562, 563, 564, 566, 569], "wherev": 45, "alter": [45, 55], "intellig": 45, "decompress": [45, 46, 47, 132, 133, 134, 217, 223, 538, 547, 551, 568, 569], "onc": [45, 46, 48, 83, 110, 112, 562, 563, 569, 570], "kind": [45, 48], "discuss": [45, 562, 566], "question": [45, 561], "give": [45, 496, 504, 538, 540, 541, 564, 569], "feedback": [45, 538, 545], "bug": [45, 542, 546, 550, 553, 556, 561, 562, 568], "tracker": [45, 561, 562], "major": [45, 49, 97, 554], "fix": [45, 163, 546, 561, 562, 564], "announc": [45, 98], "Near": [46, 132, 133, 134, 145, 236, 245, 247, 248, 538, 559, 569], "81": [46, 47, 54, 132, 133, 134, 145, 220, 236, 245, 247, 248, 258, 356, 357, 402, 538, 542], "ct_rle_lossless": [46, 132, 133, 134, 569], "encoding_plugin": [46, 132, 133, 134, 241, 569], "Will": [46, 110], "implicitli": [46, 569], "explicitli": [46, 52, 53, 89, 538, 549, 556, 566, 569], "jpeg2k": [46, 70, 538, 549, 569], "us1_rl": 46, "j2k": [46, 538, 559], "sect_8": 46, "ll": [46, 562, 563, 564, 569, 571], "ve": [46, 538, 546, 562, 563, 566, 569, 571], "amount": [46, 132, 133, 134, 214, 222, 496, 569, 571], "too": [46, 132, 133, 134, 135, 467, 523, 538, 548, 550, 551, 561], "extend": [46, 47, 132, 133, 134, 139, 140, 142, 144, 148, 205, 222, 234, 240, 247, 251, 538, 554, 559, 569], "relev": [46, 181, 182, 183, 562], "encap": [46, 170, 530, 538, 547, 549, 559, 569], "encapsulate_extend": [46, 139, 538, 554, 559, 569], "jpegbaseline8bit": [46, 467, 538, 554, 559], "third_party_compression_func": [46, 569], "appropri": [46, 52, 53, 132, 133, 134, 167, 205, 218, 496, 525, 569], "undefin": [46, 57, 129, 146, 160, 176, 538, 543, 554, 557], "is_undefined_length": [46, 129, 132, 133, 134, 538, 551], "ct_compressed_bas": [46, 569], "extendedoffsett": [46, 140, 569], "extendedoffsettablelength": [46, 140, 569], "ct_compressed_ext": [46, 569], "abl": [47, 48, 538, 553, 559, 565, 566, 569, 571], "ideal": 47, "jpeg_l": [47, 132, 133, 134, 215, 538, 547, 559], "libjpeg": [47, 538, 559, 568], "reli": [47, 81], "capac": 47, "mention": [47, 564], "Be": 47, "verifi": [47, 538, 544], "far": [47, 129], "deflat": [47, 216, 224, 247, 467, 538, 553], "57": [47, 145, 220, 237, 247, 258, 358, 360, 538, 549, 554, 559], "sv1": [47, 220, 247, 538, 553], "70": [47, 145, 220, 238, 247, 258, 342, 359, 360, 538, 553, 554, 559], "92": [47, 145, 258, 351, 352, 538, 548, 549], "93": [47, 54, 145, 258, 350, 352, 538, 543, 549], "jpegimageplugin": 47, "jpeg2kimageplugin": 47, "5x": [47, 132, 133, 134, 538, 556], "faster": [47, 538, 541, 553, 556], "adapt": [47, 538, 549], "v1": [48, 538, 548, 549, 550, 571], "easier": [48, 133, 538, 559, 563], "outlin": 48, "preced": [48, 538, 559], "reserv": [48, 467], "thu": [48, 538, 539], "necessarili": [48, 52, 538, 559], "enclos": 48, "clear": [48, 129, 132, 133, 134, 172, 205, 251, 538, 559], "0x00091001": 48, "privateblock": [48, 132, 133, 134, 530], "0x0009": [48, 132, 133, 134], "compani": 48, "accomplish": 48, "0x000b": 48, "000b": 48, "add_new_priv": [48, 132, 133, 134, 538, 559], "latest": [48, 568], "encount": [48, 90], "newer": 48, "handl": [48, 49, 53, 55, 77, 98, 129, 132, 133, 134, 179, 197, 467, 528, 530, 533, 538, 539, 542, 544, 546, 547, 548, 549, 550, 551, 553, 554, 556, 557, 558, 559, 564, 565, 568], "0x888800001": 48, "somenewtag": 48, "analog": [48, 132, 133, 134], "0x004100001": 48, "lut": [49, 51, 207, 208, 209, 210, 211, 212, 220, 538, 551, 553, 554, 556], "voi": [49, 210, 211, 212, 220, 538, 551, 554], "overlai": [49, 53, 70, 132, 133, 134, 220, 530, 538, 551, 554, 559, 564], "overlay_arrai": [49, 132, 133, 134, 538, 551], "precondit": 49, "parti": [49, 501, 568], "pil": [49, 538, 541, 549], "wxpython": [49, 538, 541], "futur": [49, 97, 132, 133, 134, 538, 544, 554, 570], "proof": [49, 97], "fileread": [50, 71, 203, 530, 563, 564], "fine": 50, "read_parti": [50, 71, 162, 203, 564], "preexist": 50, "mainli": [51, 132, 133, 134, 467, 538, 545], "concern": 51, "often": [51, 53, 110, 565], "desir": [51, 205, 213, 220], "sever": [51, 57, 538, 545, 547], "stdlib": 51, "2d": [51, 538, 554], "axesimag": 51, "thank": [51, 538, 541, 544], "roi": 51, "key": 51, "pydicom_tkint": 51, "contrib": [51, 541, 561], "come": 51, "photoimag": 51, "pydicom_pil": 51, "imview": 51, "60xx": [52, 206, 220, 538, 551, 564], "3000": [52, 132, 133, 134, 206, 208, 209, 220, 538, 551, 564], "6000": 52, "6002": 52, "601e": 52, "0x6000": [52, 206, 564], "0x3000": 52, "29282": 52, "tend": [52, 568], "lazi": 52, "unpack": [52, 220, 223, 249, 250, 520, 538, 549, 557], "uint8": [52, 207, 208, 209, 210, 211, 220], "484": 52, "align": 52, "pack_bit": [52, 220, 538, 549, 554], "numpy_handl": [52, 98, 530, 538, 556], "packed_byt": 52, "temp": [52, 53], "reduc": [52, 53, 174, 213, 220, 538, 549, 554, 559, 566, 569], "512x512": [52, 53], "256x256": [52, 53], "bulk": [53, 129, 132, 133, 134, 530, 533, 538, 551, 552, 555, 565], "although": [53, 172, 566], "almost": 53, "parametr": [53, 562], "map": [53, 129, 132, 170, 467, 538, 559, 563], "interchang": [53, 566], "mr_small": [53, 70], "x89": 53, "x03": 53, "xfb": 53, "xcb": 53, "xeb": 53, "xf9": 53, "x02": 53, "x94": 53, "x7f": 53, "immedi": 53, "varieti": 53, "broken": 53, "fragment": [53, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 538, 551, 559], "1227": 53, "302": 53, "304": [53, 569], "328": 53, "628": 53, "770": 53, "907": 53, "298": 53, "331": 53, "355": 53, "498": [53, 405, 406, 492, 538, 548], "566": 53, "706": 53, "280": 53, "285": 53, "334": 53, "431": 53, "1094": 53, "1068": 53, "1083": 53, "339": 53, "377": 53, "413": 53, "1318": 53, "1346": 53, "1336": 53, "378": 53, "374": 53, "422": 53, "1369": 53, "1129": 53, "862": 53, "straightforward": 53, "particularli": [53, 55], "300": [53, 132, 133, 134], "shrunk": 53, "apply_color_lut": [53, 220, 530, 538, 551], "palette_color": [53, 70], "pet": [53, 207, 220], "possibli": [53, 132, 133, 134, 223], "physic": [53, 566], "quantiti": [53, 527, 571], "hounsfield": 53, "apply_modality_lut": [53, 210, 211, 212, 220, 530, 538, 551, 553], "hu": 53, "apply_voi_lut": [53, 220, 530, 538, 551, 553, 554], "voic": 54, "audio": [54, 571], "lead": [54, 57, 70, 467, 496, 497, 506, 538, 542, 547, 558, 571], "ecg": [54, 70, 571], "5400": [54, 132, 133, 134, 527, 571], "consist": [54, 133, 183, 538, 544, 563, 569, 571], "synchronis": [54, 571], "003a": [54, 132, 133, 134, 527, 571], "001a": 54, "waveformdata": [54, 571], "240000": [54, 571], "multiplex_1": 54, "112": 54, "25": [54, 429, 492, 497, 500], "68": [54, 440, 460, 461], "106": [54, 258, 381, 382, 383], "62": 54, "37": [54, 252, 499], "131": [54, 262], "137": 54, "10000": [54, 571], "multiplex_2": 54, "1200": [54, 538, 554, 571], "multiplex_arrai": [54, 132, 133, 134, 527, 538, 554, 571], "55": [54, 538, 541], "65": [54, 276], "85": 54, "60": [54, 538, 545, 556], "110": [54, 538, 544], "coupl": [55, 566], "truli": 55, "certain": [55, 132, 133, 134, 220, 563, 564], "tool": [55, 538, 559], "look": [55, 181, 182, 562, 563, 564], "approxim": 55, "tricki": 55, "de": 55, "xxx": 55, "524288": 55, "bigger": [55, 538, 553], "potenti": 55, "disadvantag": 55, "sai": [55, 562, 564], "wrote": 55, "quit": [55, 538, 541, 562], "switch": [55, 90, 538, 542, 544, 546, 551, 553, 556, 558, 562, 563], "individu": [55, 213, 220, 501, 538, 544, 554, 556], "code_fil": 55, "previou": [55, 173, 174, 538, 544, 547, 553, 554, 559], "certainli": 55, "difficult": [55, 562], "singleton": 57, "infer_sq_for_un_vr": [57, 538, 557], "conform": [57, 129, 132, 133, 134, 172, 175, 183, 196, 203, 219, 538, 547, 549, 550, 564, 566, 569], "failur": [57, 467, 538, 553, 559, 562], "longer": [57, 83, 129, 216, 538, 548, 549, 551, 554, 556, 559, 566], "bypass": 57, "dataelem": [61, 79, 132, 133, 134, 164, 182, 198, 199, 525, 530, 538, 550, 553, 564], "dataelement_from_raw": [61, 564], "rawdatael": [61, 92, 130, 132, 133, 134, 160, 164, 194, 525], "tag_in_except": 61, "tupletag": [61, 538, 541], "convert_ae_str": 61, "convert_atvalu": 61, "convert_da_str": 61, "convert_ds_str": 61, "convert_dt_str": 61, "convert_is_str": 61, "convert_numb": [61, 181, 182], "convert_obvalu": 61, "convert_owvalu": 61, "convert_pn": 61, "convert_single_str": 61, "convert_sq": 61, "convert_str": 61, "convert_tag": 61, "convert_text": 61, "convert_tm_str": 61, "convert_ui": 61, "convert_un": 61, "convert_ur_str": 61, "convert_valu": 61, "multi_str": [61, 71], "multiv": [61, 530, 564], "is_valid_d": [61, 538, 556], "format_number_as_d": [61, 538, 556], "isfloat": [61, 538, 558], "rt_plan": 70, "rt_dose": [70, 566], "rtdose": 70, "rt_ss": 70, "rtstruct": 70, "siemen": 70, "withoverlai": 70, "waveform_ecg": 70, "us1_uncr": 70, "obxxxx1a": 70, "us1_j2kr": 70, "data_element_gener": [71, 163], "data_element_offset_to_valu": 71, "read_deferred_data_el": 71, "read_file_meta_info": [71, 133], "read_preambl": [71, 203, 564], "read_sequ": 71, "read_sequence_item": 71, "filewrit": [71, 132, 133, 134, 530, 564], "correct_ambiguous_vr": 71, "correct_ambiguous_vr_el": 71, "write_atvalu": 71, "write_da": 71, "write_dataset": [71, 538, 559], "write_data_el": 71, "write_dt": 71, "write_file_meta_info": [71, 183], "write_numb": 71, "write_number_str": 71, "write_obvalu": 71, "write_owvalu": 71, "write_pn": [71, 538, 548], "write_sequ": 71, "write_sequence_item": 71, "write_str": 71, "write_text": 71, "write_tm": 71, "write_ui": 71, "write_un": 71, "dicombytesio": [71, 158, 538, 559], "dicomio": [71, 146, 149, 154, 156, 158, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 538, 559], "fileutil": [71, 530], "absorb_delimiter_item": 71, "find_byt": [71, 178, 179, 538, 545], "find_delimit": [71, 179], "length_of_undefined_length": 71, "read_undefined_length_valu": 71, "mistak": 77, "stand": 77, "alon": 77, "respect": [77, 94, 538, 548], "lookuperror": [77, 78, 467], "delimit": [78, 145, 146, 147, 176, 178, 179, 180, 184, 467, 526, 538, 554, 556], "reset": [78, 97, 99, 132, 133, 134, 148, 153], "loss": [78, 80, 496, 497, 504, 538, 554], "unicodedecodeerror": 78, "dicom_character_set": 79, "unicodeencodeerror": [80, 467], "precis": [81, 89, 220, 496, 497, 501, 504, 538, 556], "use_decimal_boolean": 82, "valueerror": [82, 83, 85, 86, 107, 108, 109, 110, 111, 112, 131, 132, 133, 134, 135, 136, 146, 149, 164, 172, 183, 196, 205, 206, 216, 219, 220, 251, 467, 492, 496, 497, 500, 504, 509, 511, 523, 538, 559, 566, 569], "use_ds_numpi": [82, 509, 530, 538, 553], "use_numpi": 83, "__setattr__": 85, "camel": [85, 538, 554], "neither": [85, 86, 172, 208, 209, 211, 220, 496], "nor": [85, 86], "citizen": [85, 129, 132, 564], "patientsnam": [85, 86], "1895": 85, "__contains__": [86, 538, 554], "0x100100010": 86, "traceback": [86, 255, 564, 566, 569], "recent": [86, 562, 563, 564, 566, 569], "stdin": [86, 564, 566, 569], "494": 86, "msg": [86, 564], "exc": 86, "occur": [87, 88, 496, 538, 551, 562, 566], "digit": [89, 135, 197, 467, 496, 571], "round": [89, 220, 496], "writer": 90, "elementcallback": 92, "callabl": [92, 129, 132, 133, 134, 160, 163, 166, 170, 205, 222, 240, 526], "everi": [92, 220, 223, 241, 566, 571], "data_element_callback": [93, 99, 530], "anymor": 94, "manual": [94, 183], "debug_on": 95, "default_handl": 95, "log": [95, 132, 133, 134, 538, 544, 557, 562], "logger": [95, 538, 545, 559], "streamhandl": 95, "deprec": [96, 97, 132, 133, 134, 137, 138, 145, 146, 147, 149, 154, 183, 543, 544, 548, 549, 550, 553, 554, 556, 557, 558], "enable_futur": 97, "imit": 97, "becom": [97, 538, 544, 554, 562, 563, 566], "emul": [97, 132, 133, 134], "invalid_keyword_behavior": [97, 530, 538, 554], "invalid_key_behavior": [97, 530, 538, 554], "gdcm_handler": 98, "pillow_handl": [98, 562], "jpeg_ls_handl": 98, "pylibjpeg_handl": 98, "rle_handl": [98, 538, 557, 559], "convert_pixel_data": [98, 132, 133, 134], "extract": 98, "shall": [98, 132, 133, 134, 141, 145, 146, 149, 150, 151, 160, 183, 196], "supports_transfer_syntax": [98, 214, 215, 216, 217, 218, 219], "transfer_syntax": [98, 214, 215, 216, 217, 219, 222, 240], "get_pixeldata": [98, 214, 215, 216, 217, 218, 219], "1d": [98, 206, 216, 217, 218, 219, 220, 222], "reshap": [98, 206, 218, 220, 222, 223, 249, 250], "dimens": [98, 218, 223, 249, 250], "needs_to_convert_to_rgb": [98, 214, 215, 216, 217, 218, 219], "colourspac": [98, 538, 556], "refus": 98, "fact": [98, 564], "notimplementederror": [98, 132, 133, 134, 215, 216, 217, 219, 220], "global": [100, 538, 557], "ds_decim": [102, 530, 538, 553], "ds_numpi": [103, 530], "charset": [105, 530, 538, 558], "extern": [107, 538, 554, 556], "datastor": 107, "0x10021001": [109, 110], "teston": [109, 110], "0x10021002": [109, 110], "testtwo": [109, 110], "perman": 110, "0x00410001": 111, "0x00410002": 111, "ltd": 111, "whose": [113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 223, 249, 250, 252, 467, 496, 497, 499, 500, 501, 504, 562], "keyerror": [113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 130, 132, 133, 134, 538, 559, 564], "get_private_entri": 119, "get_entri": 120, "grouplength": 121, "mask": 122, "file_value_tel": 129, "already_convert": 129, "validation_mod": [129, 467, 495, 496, 497, 499, 500, 501], "joan": [129, 132], "Its": 129, "descripwidth": 129, "35": [129, 132, 133, 134, 174, 326], "0xffffffffl": 129, "ie": 129, "maxbytestodisplai": [129, 538, 550], "showvr": 129, "backslash": [129, 132, 133, 134, 501, 521, 538, 539, 540, 556], "intern": [129, 132, 133, 134, 160, 545], "0xffffffff": 129, "empty_value_for_vr": 129, "empty_valu": 129, "classmethod": [129, 132, 133, 134, 501], "from_json": [129, 132, 133, 134, 538, 551, 554, 565], "dataset_class": 129, "value_kei": 129, "bulk_data_uri_handl": [129, 132, 133, 134, 538, 554, 565], "json": [129, 132, 133, 134, 252, 538, 550, 551, 555, 556, 567], "inlinebinari": [129, 132, 133, 134], "bulkdatauri": [129, 132, 133, 134, 565], "dicomweb": [129, 132, 133, 134, 565], "wado": [129, 132, 133, 134, 565], "is_empti": 129, "ret": 129, "repval": [129, 132, 133, 134], "to_json": [129, 132, 133, 134, 538, 552, 565], "bulk_data_threshold": [129, 132, 133, 134, 538, 552, 565], "bulk_data_element_handl": [129, 132, 133, 134, 565], "dump_handl": [129, 132, 133, 134], "base64": [129, 132, 133, 134, 565], "dump": [129, 132, 133, 134], "to_json_dict": [129, 132, 133, 134, 538, 552, 558, 565], "18": [129, 132, 133, 134, 463, 538, 547, 565], "validate_valu": 129, "raw_data_el": [130, 525], "belong": [130, 132, 133, 134, 171, 172], "value_tel": 131, "is_raw": 131, "undecod": 131, "alia": [131, 538, 554], "occurr": [131, 205, 251, 467], "stop": [131, 162, 166, 205, 251, 467, 538, 541], "9223372036854775807": 131, "mutablemap": [132, 133, 134], "kwarg": [132, 133, 134, 156, 157, 158, 159, 172, 183, 221, 222, 223, 240, 241, 249, 250, 467, 494, 498, 501, 502], "mutabl": 132, "0x00100020": 132, "0x0030": 132, "0x00100030": 132, "linac": 132, "co": [132, 571], "son": 132, "daughter": 132, "0x0041": [132, 133, 134], "john": [132, 501], "0041": 132, "get_private_item": [132, 133, 134], "iteral": [132, 133, 134, 538, 540], "jsonmodel": 132, "ds2": 132, "default_element_format": 132, "default_sequence_element_format": 132, "indent_char": [132, 173], "element_offset": [132, 133, 134, 135], "0xffff": [132, 133, 134, 170, 538, 548], "0x00": [132, 133, 134, 139, 141, 183, 517], "0xff": [132, 133, 134], "decoding_plugin": [132, 133, 134, 223, 249, 250], "encapsulate_ext": [132, 133, 134], "tri": [132, 133, 134, 156, 158, 159, 223, 241, 249, 250, 538, 559], "placehold": [132, 133, 134], "psnr": [132, 133, 134], "handler_nam": [132, 133, 134], "unabl": [132, 133, 134, 156, 158, 159, 183, 220, 564, 566], "runtimeerror": [132, 133, 134, 218], "shallow": [132, 133, 134], "state": [132, 133, 134, 189, 538, 559, 565], "alphabet": [132, 133, 134, 467, 501, 538, 558], "__getitem__": [132, 133, 134, 467, 564], "unconvert": [132, 133, 134], "ensure_file_meta": [132, 133, 134], "formatted_lin": [132, 133, 134, 538, 540], "element_format": [132, 133, 134], "sequence_element_format": [132, 133, 134], "indent_format": [132, 133, 134], "json_dataset": [132, 133, 134], "obj": [132, 133, 134], "get_item": [132, 133, 134, 538, 559], "keep_def": [132, 133, 134, 538, 559], "defer": [132, 133, 134, 164, 538, 540, 544, 551, 557, 564], "group_dataset": [132, 133, 134], "v4": [132, 133, 134, 137, 138, 146, 147, 149, 154, 183, 538, 559, 571], "implicit_vr": [132, 133, 134, 183, 467, 493, 538, 559], "little_endian": [132, 133, 134, 183, 467, 493, 538, 559], "is_original_encod": [132, 133, 134], "dict_item": [132, 133, 134], "unlik": [132, 133, 134, 496], "flatten": [132, 133, 134], "dict_kei": [132, 133, 134], "original_character_set": [132, 133, 134, 538, 559], "original_encod": [132, 133, 134, 183, 195, 538, 559], "pop": [132, 133, 134, 205, 251, 538, 550], "tagtyp": [132, 133, 134], "combin": [132, 133, 134, 253, 498, 564, 571], "popitem": [132, 133, 134], "unrealist": [132, 133, 134], "associ": [132, 133, 134, 222, 240], "read_encod": [132, 133, 134, 538, 559], "read_implicit_vr": [132, 133, 134, 538, 559], "read_little_endian": [132, 133, 134, 538, 559], "pathlik": [132, 133, 134, 162, 164, 165, 172, 183, 249, 250, 538, 553], "binaryio": [132, 133, 134, 160, 162, 163, 164, 166, 167, 168, 169, 176, 177, 178, 179, 180, 183, 222, 223, 240, 249, 250, 538, 559], "writeablebuff": [132, 133, 134, 156, 158, 159, 183], "_dataset__write_like_origin": [132, 133, 134], "2006": [132, 133, 134], "write_like_origin": [132, 133, 134, 183, 538, 559], "writeabl": [132, 133, 134, 183, 216, 223, 249, 250, 538, 559], "tell": [132, 133, 134, 142, 143, 144, 148, 152, 153, 156, 158, 159, 162, 183, 538, 540, 559, 563, 566], "preserv": [132, 133, 134, 183, 538, 546, 553], "preambl": [132, 133, 134, 162, 167, 183, 196, 203, 538, 547, 564], "set_original_encod": [132, 133, 134], "character_encod": [132, 133, 134], "optim": [132, 133, 134], "setdefault": [132, 133, 134, 538, 550, 554], "0x00100040": [132, 133, 134], "suppress_invalid_tag": [132, 133, 134, 538, 558], "threshold": [132, 133, 134], "inlin": [132, 133, 134, 565], "drop": [132, 133, 134, 538, 553, 554], "bubbl": [132, 133, 134], "my_json_dump": [132, 133, 134], "sort_kei": [132, 133, 134], "trait_nam": [132, 133, 134], "ipython": [132, 133, 134, 538, 539], "autocomplet": [132, 133, 134], "valuesview": [132, 133, 134], "visit": [132, 133, 134, 562, 563], "0210": [132, 133, 134, 527, 571], "0211": [132, 133, 134], "filename_or_obj": [133, 164], "readablebuff": [133, 142, 143, 144, 148, 152, 153, 156, 158, 159, 162], "prepend": 133, "0x0002": [133, 183, 249, 250, 564], "fileobj_typ": [133, 164], "timestamp": [133, 164, 494, 498], "modif": [133, 562, 564, 566], "readabl": [133, 142, 143, 144, 148, 152, 153, 162, 538, 559], "rb": [133, 249, 250, 564], "super": 134, "typeerror": [134, 162, 205, 214, 215, 538, 548, 554, 564], "init_valu": 134, "private_creator_el": 135, "block_start": 135, "low": [135, 565], "get_tag": 135, "enforce_standard": [136, 196, 564], "generate_fram": [137, 138, 147, 218, 538, 559], "generate_frag": [137, 138, 146, 154, 538, 559], "continu": [138, 538, 539, 556], "togeth": [138, 139, 184], "has_bot": [139, 140], "frame1": 139, "frame2": 139, "exce": [139, 140], "31": [139, 530], "circumst": [139, 140], "strongli": [139, 172, 566], "nr_fragment": [141, 151], "marker": [141, 145, 167, 180, 538, 551, 556], "null": [141, 206, 220, 222, 240, 517], "extended_offset": [142, 144, 148, 222, 240], "suffici": [142, 144, 148, 241], "excess": [142, 144, 148, 538, 550, 559], "latter": [142, 143, 144, 148, 152, 153], "bytestream": [145, 147], "nr_frame": [145, 147], "generate_fragmented_fram": [145, 538, 559], "span": 145, "predict": [145, 238], "boundari": [145, 467, 538, 559], "eoi": [145, 538, 551], "eoc": [145, 538, 551], "0xffd9": 145, "hasn": [145, 562, 563], "incorrect": [145, 223, 241, 538, 542, 548, 550, 551, 559], "stream": [146, 154, 156, 158, 159, 538, 559, 562], "fffe": [146, 149, 150, 151], "e000": [146, 149, 150, 151], "e0dd": 146, "0x00000000": [146, 149], "presenc": [146, 207, 220, 564], "absenc": 146, "parse_basic_offset": [149, 538, 559], "fe": 149, "e0": 149, "08": 149, "measur": [149, 152, 170], "bot": 149, "ffee": 149, "itemis": 151, "afterward": [153, 562], "appear": [155, 566], "dicm": [155, 167, 183, 196, 203, 564], "mayb": 155, "with_traceback": 155, "tb": 155, "__traceback__": 155, "initial_byt": 156, "memoryview": [156, 158, 159, 222, 223, 240], "wrapper": [156, 158, 159, 538, 553], "simplifi": [156, 158, 538, 540, 544], "close": [156, 158, 159, 162, 166, 538, 540, 541], "unspecifi": [156, 158, 159], "eof": [156, 158, 159, 180], "fewer": [156, 158, 159, 222, 505], "read_ul": [156, 158, 159], "read_u": [156, 158, 159], "read_exact": [156, 158, 159], "nr_retri": [156, 158, 159], "eoferror": [156, 158, 159, 180], "read_tag": [156, 158, 159], "whenc": [156, 158, 159], "rel": [156, 158, 159, 175, 538, 559], "write_ul": [156, 158, 159], "val": [156, 158, 159, 184, 205, 251, 467, 495, 496, 497, 499, 500, 501, 504, 526, 564], "write_u": [156, 158, 159], "write_tag": [156, 158, 159], "iobas": [158, 159], "rawiobas": [158, 159], "destin": [158, 159], "stop_when": [160, 163, 166], "defer_s": [160, 162, 163, 166, 180, 204, 538, 540], "specific_tag": [160, 162, 163, 166, 249, 250, 564], "read_data_el": 160, "stop_before_pixel": [162, 538, 541], "pars": [162, 166, 220, 498, 530, 538, 539, 551, 553, 554, 559], "context": [162, 255, 496, 538, 547, 564], "caller": [162, 538, 541], "respons": [162, 501, 565], "kb": 162, "subsequ": 162, "invaliddicomerror": [162, 167, 530, 538, 542, 564], "unsupport": [162, 214, 215, 216, 219], "condit": [162, 166, 496, 538, 547], "bytelength": [163, 168], "parent_encod": [163, 195], "at_top_level": 163, "itemdelimitertag": 163, "call_back": 163, "heurist": [163, 538, 547], "raw_data_elem": 164, "persist": 164, "st_mtime": 164, "oserror": 164, "meant": [165, 203], "quickli": [165, 566], "fileobj": [166, 564], "reach": [166, 178, 180, 222], "assess": 170, "_define_assess": 170, "doc": [170, 563], "_define_encap_doc": 170, "fiduci": 170, "_define_generic_content_id": 170, "hang": 170, "protocol": [170, 252, 499], "_define_hanging_protocol": 170, "_define_imag": 170, "implant": [170, 172], "_define_impl": 170, "assi": 170, "_define_implant_assi": 170, "_define_implant_group": 170, "_define_key_object_doc": 170, "_define_palett": 170, "_define_pati": 170, "_define_empti": 170, "_define_present": 170, "_define_radiotherapi": 170, "_define_generic_cont": 170, "registr": 170, "_define_rt_dos": [170, 566], "_define_rt_plan": 170, "_define_rt_structure_set": 170, "treat": [170, 222, 566], "_define_rt_treatment_record": 170, "_define_seri": 170, "spectroscopi": 170, "_define_spectroscopi": 170, "sr": [170, 501, 538, 556, 570], "_define_sr_docu": 170, "stereometr": 170, "_define_studi": 170, "surfac": 170, "_define_surface_scan": 170, "tract": 170, "1430": [170, 566], "my_record": 170, "offsetofthenextdirectoryrecord": 170, "recordinuseflag": 170, "offsetofreferencedlowerleveldirectoryent": 170, "directoryrecordtyp": [170, 172], "specificcharacterset": 170, "my_inst": 170, "add_custom": [170, 172, 566], "node": [171, 172, 173, 564], "recordnod": [171, 172, 530], "leaf": [171, 172, 173], "fileid": 171, "file_set": [171, 173], "for_addit": [171, 566], "for_mov": 171, "for_remov": 171, "is_stag": [171, 172, 566], "temporari": [171, 538, 559, 566], "ds_or_path": 172, "cancel": 172, "directory_record": [172, 530, 566], "definit": [172, 183, 530, 538, 547, 571], "aren": [172, 223, 241, 538, 559, 564, 566], "suitabl": [172, 207, 220, 222, 467, 568], "1400": [172, 566], "1410": [172, 566], "1420": [172, 566], "1500": [172, 538, 557], "1510": 172, "1511": [172, 538, 557], "1512": 172, "hierarchi": [172, 566], "privaterecorduid": 172, "leaf_nod": 172, "top_nod": 172, "ancestor": [172, 173, 181, 182], "due": [172, 538, 545, 556, 558, 562, 566], "force_implicit": 172, "1234567": 172, "7654321": 172, "include_orphan": 172, "raise_orphan": 172, "attach": 172, "imposs": 172, "orphan": 172, "use_exist": [172, 566], "backup": 172, "ptxxxxxx": 172, "stxxxxxx": 172, "sexxxxxx": 172, "imxxxxxx": 172, "xxxxxx": 172, "alphanumer": [172, 174, 538, 559], "paxxxxxx": 172, "p0xxxxxx": 172, "p1xxxxxx": 172, "p2xxxxxx": 172, "everyth": [172, 562, 566], "children": 173, "child": 173, "nearest": [173, 496], "furthest": [173, 181, 182], "has_inst": 173, "amongst": 173, "sibl": 173, "is_root": 173, "prettifi": 173, "pretti": [173, 562], "record_typ": [173, 566], "k": [174, 538, 559], "00010": 174, "00000000": 174, "00000001": 174, "00000002": 174, "_": [175, 563], "bytes_to_find": 177, "read_siz": [177, 178, 179, 180], "found_at": 177, "routin": 179, "delimiter_tag": 180, "ambigu": [181, 182, 538, 547, 549, 550, 554], "dicond": [181, 182], "closest": [181, 182, 496], "attributeerror": [181, 206, 214, 216, 218, 219, 223, 241, 538, 541, 557, 559, 564], "__write_like_origin": 183, "force_encod": [183, 538, 559], "bytestr": [183, 220], "eeee": [183, 538, 559], "independ": 183, "prioriti": [183, 195, 538, 559], "0x0000": 183, "put": 184, "swap": [189, 223, 513], "rule": 194, "0017": 196, "send": [196, 562, 563], "struct_format": [198, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 522], "pare": 203, "down": [203, 562, 566], "fast": [203, 254], "conserv": 203, "approach": 203, "expr": 204, "type_constructor": [205, 564], "hold": [205, 251, 252, 499], "constructor": 205, "nice": [205, 223, 241, 562], "factori": [205, 223, 241, 254, 495, 538, 541, 556, 559], "indexerror": [205, 251], "IN": [205, 251], "overlayrow": 206, "overlaycolumn": 206, "0015": 206, "numberofframesinoverlai": 206, "overlaybitsalloc": 206, "overlaybitposit": 206, "get_expected_length": [206, 220], "NOT": [206, 220, 222, 240], "get_overlay_arrai": 206, "0x6010": 206, "0x60ff": 206, "reshape_overlay_arrai": 206, "1201": [207, 220], "1203": [207, 220], "1221": [207, 220], "1223": [207, 220], "1204": [207, 220], "1224": [207, 220], "supplement": [207, 220], "hot_iron": [207, 220], "hot_metal_blu": [207, 220], "pet_20_step": [207, 220], "spring": [207, 220], "summer": [207, 220], "fall": [207, 220], "winter": [207, 220], "rgba": [207, 220], "uint16": [207, 208, 209, 210, 211, 220, 241], "3rd": [207, 208, 209, 210, 211, 220, 250], "colour": [207, 220], "3002": [208, 209, 210, 211, 220, 538, 551], "float64": [208, 209, 211, 212, 220, 509], "3010": [210, 211, 220], "apply_window": [210, 211, 220, 530, 538, 554], "prefer_lut": [211, 220, 538, 554], "apply_voi": [211, 212, 220, 530, 538, 554], "per_fram": [213, 220, 538, 556], "2012": [213, 220], "871": [213, 220], "create_data_el": 214, "create_imag": 214, "volum": 214, "importerror": [214, 215, 217, 509, 511, 538, 555, 562], "should_change_photometricinterpretation_to_rgb": [214, 215, 216, 217, 218, 219], "planarconfigur": [216, 218, 219, 220, 538, 547], "numberoffram": [216, 218, 219, 220, 538, 559], "read_onli": 216, "resampl": 216, "tsyntax": [218, 222, 240], "suppos": 219, "msb": 219, "lsb": 219, "dtype_corrected_for_endian": 220, "numpy_dtyp": 220, "expand_ybr422": [220, 538, 557], "subsampl": 220, "horizont": 220, "halv": 220, "cb": 220, "get_image_pixel_id": 220, "get_j2k_paramet": 220, "is_sign": [220, 496], "get_nr_fram": 220, "conjunct": 220, "uint": 220, "sake": 220, "pixel_dtyp": [220, 222], "as_float": 220, "reshape_pixel_arrai": 220, "unpack_bit": [220, 538, 557], "whatev": 221, "del_opt": [222, 240], "frame_length": [222, 240], "get_data": 222, "is_arrai": [222, 240], "is_binari": [222, 240], "is_buff": [222, 240], "is_dataset": [222, 240], "iter_decod": 222, "decodeopt": [222, 223, 240], "encodeopt": [222, 240], "as_fram": 222, "set_decod": 222, "decodefunct": 222, "set_sourc": [222, 240], "0x0028": [222, 240, 249, 250, 564], "import_path": [223, 241], "thread": [223, 241, 496], "safe": [223, 241, 254], "encode_pixel_data": [223, 241], "decode_pixel_data": [223, 241], "modulenotfounderror": [223, 241], "unavail": [223, 241], "commonli": [223, 249, 250, 566, 569], "whatsoev": 223, "success": [223, 249, 250, 563], "facilit": 223, "is_encapsul": [223, 241, 467], "is_n": [223, 241], "missing_depend": [223, 241], "remove_plugin": [223, 241], "throughput": [227, 228, 229], "201": [228, 247, 258, 336, 347, 352], "rpcl": [229, 247], "202": [229, 247, 258, 337, 352], "get_fram": [240, 538, 559], "set_encod": 240, "encodefunct": 240, "whichev": 241, "iter_encod": [241, 569], "p14": 247, "htj2k": [247, 538, 559], "ds_out": [249, 250], "as_integer_ratio": [252, 496, 497, 499, 500], "denomin": [252, 496, 497, 499, 500], "bit_count": [252, 499], "ones": [252, 467, 499, 561, 564, 566], "bin": [252, 499, 562, 563], "0b1101": [252, 499], "bit_length": [252, 499], "0b100101": [252, 499], "conjug": [252, 496, 497, 499, 500], "ration": [252, 499], "lowest": [252, 467, 496, 499], "from_byt": [252, 499], "imaginari": [252, 497, 499, 500], "is_private_cr": 252, "json_kei": [252, 538, 558], "ggggeeee": 252, "meaningless": 252, "real": [252, 497, 499, 500, 562, 563, 571], "to_byt": [252, 499], "overflowerror": [252, 496, 497, 499, 500], "neg": [252, 496, 499], "arg2": [253, 538, 541], "0x00100015": 253, "0x50": 253, "0x0015": 253, "group_elem": 254, "71": 256, "102": [258, 373, 376, 383, 538, 544], "103": [258, 374, 375, 383, 538, 544], "108": [258, 333, 383, 501], "204": [258, 361], "205": [258, 362, 538, 551], "78": [261, 344, 363, 368, 397, 457, 459, 480, 538, 542], "19": 270, "69": 277, "39": 278, "34": [281, 421, 423], "33": 282, "82": [287, 538, 542], "501": [288, 289, 290, 291, 292, 293, 294], "66": [296, 441, 451, 455, 456, 462, 465], "601": [304, 305], "130": 317, "23": [318, 538, 559], "22": [319, 438], "76": 323, "43": [330, 538, 541], "45": 341, "59": 364, "mpeg": [383, 538, 554], "79": [386, 538, 542], "826": [405, 406, 492, 538, 551], "3680043": [405, 406, 492], "73": [408, 538, 541], "74": 411, "register_transfer_syntax": [413, 538, 559], "compil": [417, 418], "regex": [417, 418], "67": [442, 490], "72": [453, 538, 541], "human": [467, 501, 564], "friendli": [467, 564, 566], "subclass": [467, 538, 548], "set_private_encod": [467, 493, 538, 559], "is_transfer_syntax": 467, "upper": [467, 496, 538, 559], "rest": [467, 538, 557, 563], "casefold": 467, "caseless": 467, "comparison": [467, 496, 538, 543, 548], "fillchar": 467, "overlap": 467, "substr": 467, "codec": 467, "xmlcharrefreplac": 467, "register_error": 467, "endswith": 467, "expandtab": 467, "tabsiz": 467, "tab": [467, 563], "substitut": 467, "brace": 467, "format_map": 467, "is_compress": 467, "is_defl": 467, "encasul": 467, "is_valid": 467, "isalnum": 467, "isalpha": 467, "isascii": 467, "007f": 467, "isdecim": 467, "isdigit": 467, "isidentifi": 467, "iskeyword": 467, "islow": 467, "isnumer": 467, "isprint": 467, "printabl": 467, "isspac": 467, "whitespac": 467, "istitl": 467, "uncas": 467, "isupp": 467, "ab": [467, 527], "pq": 467, "ljust": 467, "justifi": 467, "lstrip": 467, "char": 467, "maketran": 467, "usabl": 467, "ordin": [467, 494, 498], "partit": 467, "sep": [467, 498], "removeprefix": 467, "removesuffix": 467, "old": [467, 538, 539, 540, 544, 547, 553], "rfind": 467, "highest": [467, 538, 556], "rindex": 467, "rjust": 467, "rpartit": 467, "rsplit": 467, "maxsplit": 467, "discard": 467, "front": [467, 562], "rstrip": 467, "intention": 467, "punctuat": 467, "splitlin": 467, "keepend": 467, "startswith": 467, "strip": [467, 496], "swapcas": 467, "titlecas": 467, "untouch": 467, "zfill": 467, "truncat": [467, 504, 538, 540], "entropy_src": [492, 538, 559], "randbelow": [492, 538, 559], "54": [492, 538, 559], "uuid": 492, "uuid4": 492, "sha512": 492, "hash": [492, 538, 550, 556], "determinist": 492, "unrecover": 492, "random": [492, 538, 559], "secret": 492, "22463838056059845879389038257786771680": 492, "167161297070865690102504091919570542144": 492, "lorem": 492, "ipsum": 492, "87507166259346337659265156363895084463": 492, "9834": 492, "667": 492, "had": [493, 538, 549, 556, 562], "ctime": [494, 498], "fromisocalendar": [494, 498], "construct": [494, 496, 497, 498, 501, 538, 544, 545, 556], "year": [494, 498], "week": [494, 498], "weekdai": [494, 498], "isocalendar": [494, 498], "fromisoformat": [494, 498, 502], "isoformat": [494, 498, 502], "fromordin": [494, 498], "prolept": [494, 498], "gregorian": [494, 498], "fromtimestamp": [494, 498], "posix": [494, 498], "8601": [494, 498, 502], "isoweekdai": [494, 498], "dai": [494, 498], "mondai": [494, 498], "sundai": [494, 498], "timetupl": [494, 498], "localtim": [494, 498], "todai": [494, 498], "__class__": [494, 498], "toordin": [494, 498], "auto_format": [495, 496, 497, 538, 556], "__new__": 495, "carri": [495, 496, 538, 546], "penalti": 495, "clean": [495, 538, 547, 562, 563], "satisfi": [496, 497, 504], "23e2": 496, "123": [496, 565], "adjust": 496, "expon": 496, "exp": 496, "infin": [496, 497, 500], "nan": [496, 497, 500, 504], "as_tupl": 496, "canon": 496, "compare_sign": 496, "ident": [496, 538, 544], "compare_tot": 496, "operand": [496, 538, 556], "abstract": [496, 566], "unequ": 496, "unaffect": 496, "invalidoper": 496, "compare_total_mag": 496, "copy_ab": 496, "copy_neg": 496, "negat": 496, "copy_sign": 496, "exponenti": 496, "round_half_even": 496, "fma": [496, 570], "fuse": 496, "multipli": 496, "from_float": 496, "1000000000000000055511151231257827021181583404541015625": 496, "inf": [496, 504], "is_canon": 496, "is_finit": 496, "finit": [496, 504], "infinit": 496, "is_infinit": 496, "is_nan": 496, "is_norm": 496, "emin": 496, "subnorm": 496, "is_qnan": 496, "is_snan": 496, "is_subnorm": 496, "is_zero": 496, "ln": [496, 570], "logarithm": 496, "log10": 496, "ten": 496, "logb": 496, "divisionbyzero": 496, "logical_and": 496, "wise": 496, "logic": [496, 538, 541], "logical_invert": 496, "logical_or": 496, "logical_xor": 496, "exclus": 496, "max_mag": 496, "min_mag": 496, "next_minu": 496, "smaller": [496, 565], "next_plu": 496, "next_toward": 496, "rightmost": 496, "0e0": 496, "321000e": 496, "number_class": 496, "Not": [496, 506, 507, 508, 509, 510, 511, 516, 517, 519, 522], "snan": 496, "quantiz": 496, "41421356": 496, "414": 496, "inexact": 496, "radix": 496, "arithmet": 496, "remainder_near": 496, "remaind": 496, "divid": 496, "chosen": [496, 571], "same_quantum": 496, "scaleb": 496, "shift": 496, "sqrt": 496, "to_eng_str": 496, "engin": 496, "123e": 496, "23e": 496, "to_integr": 496, "to_integral_valu": 496, "kept": [496, 538, 540, 568], "older": [496, 568], "to_integral_exact": 496, "fromhex": [497, 500], "hexadecim": [497, 500, 564], "0x1": [497, 500], "ffffp10": [497, 500], "2047": [497, 500], "984375": [497, 500], "0x1p": [497, 500], "5e": [497, 500], "999999999999ap": [497, 500], "14159": [497, 500], "921f9f01b866ep": [497, 500], "is_integ": [497, 500], "astimezon": 498, "tz": 498, "month": 498, "dst": [498, 502, 566], "tzinfo": [498, 502], "ddt": 498, "hh": [498, 502], "mmm": [498, 502], "uuu": [498, 502], "timespec": [498, 502], "hour": [498, 502], "millisecond": [498, 502], "microsecond": [498, 502], "strptime": 498, "timetz": 498, "tzname": [498, 502], "utcfromtimestamp": 498, "naiv": 498, "utcnow": 498, "utcoffset": [498, 502], "utctimetupl": 498, "rewrit": [499, 500], "uncommon": 500, "original_str": [501, 538, 549], "from_named_compon": [501, 538, 556], "from_named_components_veterinari": [501, 538, 556], "ideograph": 501, "phonet": 501, "demand": 501, "famili": 501, "family_nam": [501, 538, 556], "format_str": 501, "given_nam": [501, 538, 556], "middle_nam": 501, "name_prefix": 501, "name_suffix": 501, "family_name_ideograph": 501, "given_name_ideograph": 501, "middle_name_ideograph": 501, "name_prefix_ideograph": 501, "name_suffix_ideograph": 501, "family_name_phonet": 501, "given_name_phonet": 501, "middle_name_phonet": 501, "name_prefix_phonet": 501, "name_suffix_phonet": 501, "middl": 501, "addition": 501, "sect": 501, "adam": 501, "robert": 501, "quinci": 501, "rev": 501, "div": 501, "korean": [501, 538, 544], "\u6d2a": 501, "\u5409\u6d1e": 501, "\ud64d": 501, "\uae38\ub3d9": 501, "dr": 501, "chief": 501, "offic": 501, "responsible_party_nam": 501, "patient_nam": 501, "responsible_party_name_ideograph": 501, "patient_name_ideograph": 501, "responsible_party_name_phonet": 501, "patient_name_phonet": 501, "veterinari": 501, "OR": 501, "hors": 501, "abc": 501, "farm": 501, "fourth": 501, "fifth": 501, "retain": [504, 538, 556], "scientif": 504, "incur": 504, "furthermor": 504, "byte_str": [506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524], "int64": 511, "use_is_numpi": [511, 530, 538, 553], "valtyp": 526, "_t": 526, "waveformbitsalloc": [527, 571], "waveformsampleinterpret": [527, 571], "sb": 527, "ub": 527, "dev0": 530, "mar": 530, "convert_encod": 530, "decode_el": 530, "decode_byt": 530, "encode_str": 530, "allow_ds_float": [530, 538, 544], "assume_implicit_vr_switch": [530, 538, 556], "convert_wrong_length_to_un": [530, 538, 556], "data_element_callback_kwarg": 530, "debug": [530, 538, 544, 546], "enforce_valid_valu": [530, 538, 544, 550, 551, 554, 556, 557], "reset_data_element_callback": 530, "show_file_meta": [530, 538, 553], "apply_j2k_correct": [530, 538, 559], "get_charset_fil": 530, "get_palette_fil": [530, 538, 551], "validate_file_meta": [530, 538, 559, 564], "generate_filenam": [530, 538, 559], "is_conformant_file_id": 530, "apply_rescal": [530, 538, 554], "miscellan": 530, "misc": [530, 538, 547], "is_dicom": [530, 538, 547], "size_in_byt": 530, "gracefulli": [538, 554, 559], "1844": [538, 559], "jpeglossless": [538, 554, 559], "jpeglosslesssv1": [538, 554, 559], "theoret": [538, 559], "1838265625": [538, 559], "1743": [538, 559], "1773": [538, 559], "1481": [538, 559], "2023d": [538, 559], "decid": [538, 559], "initialis": [538, 559], "inherit": [538, 556, 559], "read_fil": [538, 540, 541, 542, 547, 556, 559], "write_fil": [538, 547, 556, 559], "constant": [538, 554, 559, 571], "jpegbaselin": [538, 549, 554, 559], "jpegextend": [538, 549, 554, 559], "jpegextended12bit": [538, 554, 559], "jpeglslossi": [538, 554, 559], "jpeg2000multicomponentlossless": [538, 549, 554, 559, 562], "jpeg2000mclossless": [538, 554, 559], "jpeg2000multicompon": [538, 549, 554, 559, 562], "jpeg2000mc": [538, 554, 559], "jpeglossycompressedpixeltransfersyntax": [538, 554, 559], "jpegtransfersyntax": [538, 554, 559], "jpeglssupportedcompressedpixeltransfersyntax": [538, 554, 559], "jpeglstransfersyntax": [538, 554, 559], "jpeg2000compressedpixeltransfersyntax": [538, 554, 559], "jpeg2000transfersyntax": [538, 554, 559], "rlecompressedlosslesssyntax": [538, 554, 559], "rletransfersyntax": [538, 554, 559], "uncompressedpixeltransfersyntax": [538, 554, 559], "uncompressedtransfersyntax": [538, 554, 559], "pilsupportedcompressedpixeltransfersyntax": [538, 554, 559], "personnameunicod": [538, 553, 559], "rle_encode_fram": [538, 556, 559], "_storage_sopclass_uid": [538, 554, 559], "parent_seq": [538, 559], "parent_dataset": [538, 559], "overlay_data_handl": [538, 554, 559], "fix_meta_info": [538, 549, 559], "1752": [538, 559], "mpeg2mpmlf": [538, 559], "mpeg2mphlf": [538, 559], "mpeg4hp41f": [538, 559], "mpeg4hp41bdf": [538, 559], "mpeg4hp422df": [538, 559], "mpeg4hp423df": [538, 559], "mpeg4hp42stereof": [538, 559], "htj2klossless": [538, 559], "htj2klosslessrpcl": [538, 559], "jpiphtj2kreferenc": [538, 559], "jpiphtj2kreferenceddefl": [538, 559], "smptest211020uncompressedprogressiveactivevideo": [538, 559], "smptest211020uncompressedinterlacedactivevideo": [538, 559], "smptest211030pcmdigitalaudio": [538, 559], "confus": [538, 559], "sent": [538, 559], "1529": [538, 559], "parse_frag": [538, 559], "mmap": [538, 559], "1873": [538, 559], "flexibl": [538, 559], "746": [538, 559], "1263": [538, 559], "1243": [538, 559], "1781": [538, 559], "1133": [538, 559], "1666": [538, 559], "1848": [538, 559], "1997": [538, 559], "disagre": [538, 559], "1689": [538, 559], "enum": [538, 557, 559], "1874": [538, 559], "1907": [538, 559], "secur": [538, 559], "escap": [538, 559], "1922": [538, 559], "deepcopi": [538, 556, 559], "1816": [538, 559], "1968": [538, 559], "1943": [538, 559], "spread": [538, 559], "across": [538, 544, 559], "1774": [538, 559], "mitig": [538, 559], "rare": [538, 559], "1983": [538, 559], "scheme_design": [538, 559, 570], "srt": [538, 559], "sct": [538, 559, 570], "1994": [538, 559], "2009": [538, 559], "2010": [538, 559], "2013": [538, 559], "get_frame_offset": [538, 551, 559], "generate_pixel_data_frag": [538, 559], "generate_pixel_data_fram": [538, 559], "generate_pixel_data": [538, 551, 559], "decode_data_sequ": [538, 559], "defragment_data": [538, 559], "read_item": [538, 559], "folder": [538, 541, 559], "refactor": [538, 559], "renam": [538, 539, 547, 553, 558, 559], "ci": [538, 559], "dependabot": [538, 559], "commit": [538, 559], "ruff": [538, 559], "hotfix": [538, 559], "1965": [538, 559], "eol": [538, 558], "decemb": [538, 558], "1634": [538, 558], "1648": [538, 558], "1414": [538, 558], "cli": [538, 558], "1674": [538, 558], "1658": [538, 558], "1661": [538, 558], "highli": [538, 558], "1728": [538, 558], "1734": [538, 558], "pyproject": [538, 558], "toml": [538, 558], "1792": [538, 558], "2023b": [538, 558], "1803": [538, 558], "1632": [538, 558], "bar": [538, 558], "1611": [538, 558], "crash": [538, 548, 557, 558], "1638": [538, 558], "extrem": [538, 558], "byteslengthexcept": [538, 558], "1683": [538, 558], "1670": [538, 558], "1693": [538, 558], "1680": [538, 558], "1702": [538, 558], "wrong": [538, 549, 550, 554, 558], "calcul": [538, 556, 558], "1667": [538, 558], "lutdata": [538, 558], "1747": [538, 558], "1738": [538, 558], "teardown": [538, 558], "pytest": [538, 558], "fork": [538, 558, 562, 563, 568], "charpyl": [538, 558, 568], "1788": [538, 558], "favor": [538, 543, 557], "1617": [538, 557], "1498": [538, 557], "resort": [538, 557], "slowest": [538, 557], "1487": [538, 557], "mitra": [538, 557], "1588": [538, 557], "pr": [538, 557, 562, 563], "1594": [538, 557], "1593": [538, 557], "introduc": [538, 557, 562], "2022a": [538, 557], "holog": [538, 557], "0019xx43": [538, 557], "1565": [538, 557], "deep": [538, 557], "1571": [538, 557], "1581": [538, 557], "maco": [538, 557, 568], "1599": [538, 557], "bad": [538, 547, 557], "1596": [538, 557], "1606": [538, 557], "1609": [538, 557], "__eq__": [538, 548, 556], "1327": [538, 556], "__str__": [538, 548, 556, 564], "1262": [538, 556], "metadata": [538, 556], "2021b": [538, 556], "silent": [538, 556], "init": [538, 556], "urllib": [538, 556], "1340": [538, 556], "1348": [538, 556], "optimis": [538, 556], "1361": [538, 556], "1372": [538, 556], "1438": [538, 556], "suppress": [538, 556], "1332": [538, 556], "1428": [538, 556], "1434": [538, 556], "pickl": [538, 547, 551, 556], "1278": [538, 556], "1312": [538, 556], "problem": [538, 556, 564], "workflow": [538, 556, 562, 563], "1341": [538, 556], "1338": [538, 556], "878": [538, 556], "1147": [538, 556], "1412": [538, 556], "expans": [538, 556], "linear": [538, 556], "1415": [538, 556], "1449": [538, 556], "rbg": [538, 556], "jpg": [538, 556], "app14": [538, 556], "1444": [538, 556], "1457": [538, 556], "1251": [538, 555], "1253": [538, 555], "1254": [538, 555], "distribut": [538, 542, 554, 568], "fly": [538, 554], "whenev": [538, 554], "disk": [538, 554], "rg1_unci": [538, 554], "1127": [538, 554], "1234": [538, 554], "1237": [538, 554], "1156": [538, 554], "__next__": [538, 554], "__iter__": [538, 539, 554, 564], "1103": [538, 551, 554], "1155": [538, 554], "1149": [538, 554], "2020d": [538, 554], "243": [538, 554], "alltransfersyntax": [538, 554], "commun": [538, 554], "1240": [538, 554], "1178": [538, 554], "1161": [538, 554], "multifram": [538, 554], "dicosquadrupoleresonanceqrstorag": [538, 554], "dicosquadrupoleresonancestorag": [538, 554], "1211": [538, 554], "1181": [538, 554], "1146": [538, 554], "optimist": [538, 554], "embed": [538, 554], "1140": [538, 554], "network": [538, 554], "connect": [538, 554], "1153": [538, 554], "1193": [538, 554], "1215": [538, 554], "restor": [538, 553], "personname3": [538, 545, 550, 553], "alias": [538, 540, 553], "ismultivalu": [538, 550, 553], "1086": [538, 553], "replace_un_with_known_vr": [538, 553], "1067": [538, 553], "623": [538, 553], "regress": [538, 552, 553, 562], "1038": [538, 553], "improp": [538, 551, 553], "3006": [538, 553], "1078": [538, 553], "1082": [538, 553], "1097": [538, 553], "915": [538, 551], "887": [538, 551, 564], "prevent": [538, 551], "894": [538, 551], "892": [538, 551], "truthi": [538, 551], "891": [538, 551], "899": [538, 551], "968": [538, 551], "896": [538, 551], "unpickl": [538, 551], "947": [538, 551], "951": [538, 551], "1101": [538, 551], "ir": [538, 551], "917": [538, 551], "propag": [538, 551], "971": [538, 551], "822": [538, 551], "263": [538, 551], "273": [538, 551], "994": [538, 551], "685": [538, 551], "693": [538, 551], "932": [538, 551], "toler": [538, 540, 551], "940": [538, 551], "unexpect": [538, 551], "848": [538, 551], "981": [538, 551], "537": [538, 551], "452": [538, 551], "2019e": [538, 551], "timelin": [538, 550], "789": [538, 550], "image_handl": [538, 549, 550], "deferreddatael": [538, 549, 550], "760": [538, 550], "isstringorstringlist": [538, 550], "isstr": [538, 550], "666": [538, 550], "799": [538, 550], "gzip": [538, 544, 550], "753": [538, 550], "730": [538, 550], "v": [538, 550], "820": [538, 550], "864": [538, 550], "819": [538, 550], "850": [538, 550], "838": [538, 550], "757": [538, 550], "785": [538, 550], "788": [538, 550], "810": [538, 550], "815": [538, 550], "804": [538, 550], "mix": [538, 550], "835": [538, 550], "791": [538, 550], "ji": [538, 550], "856": [538, 550], "fallback": [538, 549], "722": [538, 549], "jpegbaselinelossy8bit": [538, 549], "726": [538, 549], "jpegbaselinelossy12bit": [538, 549], "jpeg2000lossi": [538, 549], "inequ": [538, 548, 549], "matter": [538, 549, 564], "291": [538, 549], "numpypi": [538, 549], "pypi": [538, 547, 549, 568], "2018c": [538, 549], "677": [538, 549], "624": [538, 549], "696": [538, 549], "584": [538, 549], "715": [538, 549], "716": [538, 549], "695": [538, 549], "737": [538, 549], "jpeglosslessp14": [538, 549], "713": [538, 549], "small": [538, 541, 547, 549, 561, 568], "729": [538, 549], "unus": [538, 549], "660": [538, 549], "682": [538, 549], "689": [538, 549], "663": [538, 549], "728": [538, 549], "704": [538, 549], "707": [538, 549], "consumpt": [538, 549], "717": [538, 549], "740": [538, 549], "464": [538, 548], "605": [538, 548], "292": [538, 548], "2018b": [538, 548], "649": [538, 548], "256": [538, 548], "0x0006": [538, 548], "489": [538, 548], "599": [538, 548], "unneed": [538, 548], "597": [538, 548], "620": [538, 548], "625": [538, 548], "fit": [538, 548], "640": [538, 548], "__ne__": [538, 548], "verif": [538, 548], "backward": [538, 541, 547], "incompat": [538, 541, 547], "2017c": [538, 547], "fixer": [538, 547], "thrown": [538, 547], "143": [538, 547], "197": [538, 547], "212": [538, 547], "dictionary_is_retir": [538, 547], "thai": [538, 547], "japanes": [538, 539, 544, 547], "chines": [538, 539, 547], "353": [538, 547], "172": [538, 547], "clariti": [538, 547], "travisci": [538, 547], "appveyor": [538, 547], "coverag": [538, 547, 562], "pep": [538, 540, 543, 547], "151": [538, 547], "125": [538, 547], "show_dicomdir": [538, 546, 547], "258": [538, 547], "latin5": [538, 547], "turkish": [538, 547], "lot": [538, 547, 564], "read_dicomdir": [538, 546], "subdirectori": [538, 546], "ez_setup": [538, 546], "aid": [538, 546], "pydicom_seri": [538, 542, 545, 546], "nil": [538, 546], "goyett": [538, 546], "ordereddict": [538, 546], "padraig": [538, 545, 546], "loonei": [538, 545, 546], "jonathan": [538, 545, 546], "myself": [538, 546], "rickard": [538, 546], "holmberg": [538, 546], "julien": [538, 546], "lami": [538, 546], "yaroslav": [538, 546], "halchenko": [538, 546], "mark": [538, 546], "matthew": [538, 546], "brett": [538, 546], "dimitri": [538, 546], "papadopoulo": [538, 546], "videan42": [538, 546], "sorri": [538, 546], "anyon": [538, 546], "consolid": [538, 545], "revert": [538, 545], "prepar": [538, 545], "experiment": [538, 545], "unoffici": [538, 545], "uncom": [538, 545], "114": [538, 545], "slow": [538, 545], "approx": [538, 541, 545], "r78ba350a3eb8": [538, 545], "streamlin": [538, 545], "modern": [538, 545], "decor": [538, 545], "duplic": [538, 545], "gunnar": [538, 545], "schaefer": [538, 545], "774b7a55db33": [538, 545], "6b949a5b925b": [538, 545], "113": [538, 545], "84af4b240add": [538, 545], "f\u00e9lix": [538, 545], "morenc": [538, 545], "0197b5846bb5": [538, 545], "3678b1be6aca": [538, 545], "f1ae573d9de5": [538, 545], "0411bab7c985": [538, 545], "9b92b336e7d4": [538, 545], "e830f30b6781": [538, 545], "pysid": [538, 545], "qt": [538, 545], "acknowledg": [538, 545], "suever": [538, 545], "2011": [538, 543, 544], "4ed698a7bfb": [538, 544], "c313d2befb08": [538, 544], "encourag": [538, 544], "promot": [538, 544], "languag": [538, 539, 544], "b6b3658f3b14": [538, 544], "98": [538, 544], "52": [538, 544], "111": [538, 544], "__dir__": [538, 544], "file_metadata": [538, 543], "96": [538, 543], "catch": [538, 541, 543], "97": [538, 543], "write_new": [538, 543], "fc790f01f5": [538, 542], "84": [538, 542], "dicomit": [538, 542], "statement": [538, 542], "1c32791bf0": [538, 542], "e3ee934bbc": [538, 542], "dicom_dao": [538, 542], "mike": [538, 542], "wallac": [538, 542], "couchdb": [538, 542], "almar": [538, 542], "klein": [538, 542], "distinct": [538, 542], "preliminari": [538, 539, 542], "reorgan": [538, 539, 541], "substanti": [538, 541], "partial": [538, 541], "plain": [538, 541], "bullet": [538, 541], "ness": [538, 541], "sens": [538, 541], "daniel": [538, 541], "nanz": [538, 541], "dave": [538, 541], "witten": [538, 541], "adit": [538, 541], "panchal": [538, 541], "cp805": [538, 541], "supp": [538, 541], "117": [538, 541], "119": [538, 541], "122": [538, 541], "patch": [538, 541, 561, 562], "nikitathespid": [538, 541], "58": [538, 541], "pierr": [538, 541], "raybaut": [538, 541], "47": [538, 541], "r102": [538, 540], "r103": [538, 540], "issue36": [538, 540], "r97": [538, 540], "r110": [538, 540], "readfil": [538, 540], "savea": [538, 540], "pixelarrai": [538, 539, 540], "r105": [538, 540], "r91": [538, 540], "r113": [538, 540], "r95": [538, 540], "issue38": [538, 540], "collis": [538, 540], "r96": [538, 540], "issue40": [538, 540], "notimplementerror": [538, 540], "r100": [538, 540], "issue41": [538, 540], "r104": [538, 540], "r109": [538, 540], "r111": [538, 540], "patientsbirthd": [538, 540], "r98": [538, 540], "deprecationwarn": [538, 539], "issue22": [538, 539], "r72": [538, 539], "r73": [538, 539], "greek": [538, 539], "gui": [538, 539], "r64": [538, 539], "r65": [538, 539], "r69": [538, 539], "r70": [538, 539], "data_elem": [538, 539, 564], "r68": [538, 539], "tix": [538, 539], "r55": [538, 539], "uid_dictionari": [538, 539], "r51": [538, 539], "synonym": [538, 539], "issue27": [538, 539], "incorrectli": [538, 539], "read_ow": [538, 539], "undefinedlength": [538, 539], "r50": [538, 539], "dicominfo": [538, 539], "issue33": [538, 539], "issue18": [538, 539], "r45": [538, 539], "r67": [538, 539], "r46": [538, 539], "pixeldataarrai": [538, 539], "distutil": [538, 539], "724": 560, "typo": 561, "materi": 561, "stackoverflow": 561, "googl": 561, "django": [562, 563, 565], "cd": [562, 563, 566], "live": [562, 563], "yourusernam": [562, 563], "accident": [562, 566], "area": 562, "dot": [562, 564], "choos": [562, 563], "won": [562, 563, 564, 566], "checkout": [562, 563], "reproduc": 562, "seem": 562, "daunt": 562, "resourc": 562, "captur": 562, "dive": 562, "Into": 562, "unittest": 562, "troubl": 562, "500": [562, 564], "test_uid": 562, "test_new_uid": 562, "newdefineduid": 562, "380": 562, "editor": [562, 563], "236": 562, "rst": [562, 563], "properli": 562, "happi": [562, 563], "idea": [562, 563], "cach": [562, 568], "scroll": 562, "push": [562, 563], "click": [562, 563], "wip": [562, 563], "instruct": [562, 563, 564], "mrg": [562, 563], "readi": [562, 563], "merg": [562, 563], "clarif": [562, 563], "approv": [562, 563], "lastli": [562, 563], "remot": [562, 563], "icon": [562, 563], "restructuredtext": 563, "navig": 563, "occasion": [563, 564, 566], "_build": 563, "web": 563, "browser": 563, "localhost": 563, "tut": 563, "toctre": 563, "visibl": 563, "got": 563, "maxdepth": 563, "virtualenv": 563, "contributing_cod": 563, "contributing_doc": 563, "rebuild": 563, "gone": 563, "reachabl": 563, "task": 563, "chapter_7": 563, "apr": 563, "46": 563, "gcc": 563, "copyright": 563, "credit": 563, "accessionnumb": 563, "acquisitiondata": 563, "xraytubecurr": 563, "primer": 563, "am": 563, "circleci": 563, "artifact": 563, "yet": [564, 570], "vari": 564, "infil": 564, "no_meta_path": 564, "no_meta": 564, "678": [564, 569], "631": 564, "caution": 564, "not_dicom": 564, "w": 564, "1703": 564, "1436": 564, "1079": 564, "833": 564, "character_set": 564, "581": 564, "6854": 564, "7369": 564, "iso_ir_100": 564, "0x6002": 564, "0x6004": 564, "0x601e": 564, "gggg": 564, "surround": 564, "0x0008": 564, "0x0016": 564, "private_elem": 564, "0x0043": 564, "0x104e": 564, "lack": 564, "stick": 564, "simpler": 564, "imagetyp": 564, "act": 564, "branch": [564, 568], "manner": [564, 569], "0x1002": 564, "earlier": 564, "saw": 564, "ii": [564, 571], "x00t": 564, "x18": 564, "x08": 564, "chanc": 564, "But": 564, "snip": 564, "_list": 564, "validate_dataset": 564, "dictionary_vr": 564, "0x1050": 564, "windowwidth": 564, "notic": [564, 566], "typeofpatientid": 564, "windowcent": 564, "prefer": 564, "wb": 564, "2452": 564, "1311": 564, "3204": 564, "habit": 564, "congratul": 564, "beta": 565, "deseri": 565, "00080005": 565, "00080008": 565, "symmetr": 565, "ds_json": 565, "ds1": 565, "bulk_data_handl": 565, "store_data_and_return_uri": 565, "bulk_data_read": 565, "bulk_data_uri": 565, "data_retrieved_via_uri": 565, "json_data": 565, "00091002": 565, "data_retrieved_for_tag_and_vr_via_uri": 565, "share": 566, "peopl": 566, "frequent": 566, "dvd": 566, "procedur": 566, "ultrasound": 566, "despit": 566, "usb": 566, "pc": 566, "minor": 566, "recalcul": 566, "1220": 566, "briefli": 566, "directoryrecordsequ": 566, "3126": 566, "di": 566, "510": 566, "home": 566, "env": 566, "lib": 566, "python3": 566, "site": 566, "flat": 566, "awai": 566, "dig": 566, "cost": 566, "importantli": 566, "tmp0aalrzir": 566, "86e6b75b": 566, "b764": 566, "46af": 566, "bec3": 566, "51698a8366f2": 566, "1858": 566, "_recordifi": 566, "2338": 566, "_check_dataset": 566, "instancenumb": 566, "dosesummationtyp": 566, "2281": 566, "record_gen": 566, "1860": 566, "tmpsqz8rhgb": 566, "rd000000": 566, "shutil": 566, "copytre": 566, "copyfil": 566, "98892001": 566, "98892003": 566, "tmpu068kdwp": 566, "cr1": 566, "6154": 566, "cr2": 566, "6247": 566, "cr3": 566, "6278": 566, "ct2": 566, "17106": 566, "17136": 566, "17166": 566, "17196": 566, "Then": [567, 568], "isol": 568, "admin": 568, "privileg": 568, "offlin": 568, "whl": 568, "py3": 568, "forg": [568, 569, 571], "fetch_data_fil": 568, "popular": 568, "beforehand": 568, "charl": 568, "cython": 568, "wheel": 568, "framework": 568, "snapshot": 568, "activ": 568, "stabl": 568, "undocu": 568, "prerequisit": [569, 571], "conda": [569, 571], "hundr": 569, "megabyt": 569, "slide": 569, "microscopi": 569, "gigabyt": 569, "territori": 569, "Being": 569, "significantli": 569, "jpeg2000lossless": 569, "i2": 569, "1957": 569, "frame_iter": 569, "_validate_arrai": 569, "333": 569, "mismatch": 569, "recompress": 569, "began": 570, "foundat": 570, "codedict": 570, "cid": 570, "incorrectmodalityworklistentri": 570, "mixedmodality3dcammodel": 570, "modalitytoread": 570, "othermod": 570, "128002": 570, "scheme_vers": 570, "underscor": 570, "_1sigmalowervalueofpopul": 570, "371919006": 570, "sigma": 570, "cid270": 570, "121006": 570, "cid_for_nam": 570, "observ": 570, "observationsubjectclass": 570, "observertyp": 570, "echofindingobservationtyp": 570, "270": 570, "mdc": 570, "uml": 570, "bari": 570, "ncit": 570, "neu": 570, "ucum": 570, "radlex": 570, "ndc": 570, "itis_tsn": 570, "pubchem_cid": 570, "msh": 570, "capabl": 570, "explanatori": 571, "respiratori": 571, "interv": 571, "rhythm": 571, "khz": 571, "0200": 571, "channelsensit": 571, "einthoven": 571, "microvolt": 571, "iii": 571, "avr": 571, "avl": 571, "avf": 571, "v5": 571, "v6": 571, "ax1": 571, "ax2": 571, "\u03bcv": 571, "cosin": 571, "sine": 571, "pi": 571, "ch1": 571, "astyp": 571, "ch2": 571, "sin": 571, "waveformorigin": 571, "opt": 571, "obvious": 571, "chdef_seq": 571, "chdef": 571, "curve_typ": 571, "channelsampleskew": 571, "waveformbitsstor": 571, "codevalu": 571, "codingschemedesign": 571, "codingschemevers": 571, "stack": 571, "axi": 571, "my_waveform": 571}, "objects": {"": [[530, 0, 0, "-", "pydicom"]], "pydicom.charset": [[77, 1, 1, "", "convert_encodings"], [78, 1, 1, "", "decode_bytes"], [79, 1, 1, "", "decode_element"], [80, 1, 1, "", "encode_string"]], "pydicom.config": [[81, 2, 1, "", "APPLY_J2K_CORRECTIONS"], [82, 1, 1, "", "DS_decimal"], [83, 1, 1, "", "DS_numpy"], [84, 2, 1, "", "IGNORE"], [85, 2, 1, "", "INVALID_KEYWORD_BEHAVIOR"], [86, 2, 1, "", "INVALID_KEY_BEHAVIOR"], [87, 2, 1, "", "RAISE"], [57, 3, 1, "", "Settings"], [88, 2, 1, "", "WARN"], [89, 2, 1, "", "allow_DS_float"], [90, 2, 1, "", "assume_implicit_vr_switch"], [91, 2, 1, "", "convert_wrong_length_to_UN"], [92, 2, 1, "", "data_element_callback"], [93, 2, 1, "", "data_element_callback_kwargs"], [94, 2, 1, "", "datetime_conversion"], [95, 1, 1, "", "debug"], [96, 2, 1, "", "enforce_valid_values"], [97, 1, 1, "", "future_behavior"], [98, 2, 1, "", "pixel_data_handlers"], [99, 1, 1, "", "reset_data_element_callback"], [100, 2, 1, "", "settings"], [101, 2, 1, "", "show_file_meta"], [102, 2, 1, "", "use_DS_decimal"], [103, 2, 1, "", "use_DS_numpy"], [104, 2, 1, "", "use_IS_numpy"]], "pydicom.config.Settings": [[57, 4, 1, "", "infer_sq_for_un_vr"], [57, 4, 1, "", "reading_validation_mode"], [57, 4, 1, "", "writing_validation_mode"]], "pydicom.data": [[105, 1, 1, "", "get_charset_files"], [106, 1, 1, "", "get_palette_files"], [107, 1, 1, "", "get_testdata_file"], [108, 1, 1, "", "get_testdata_files"]], "pydicom.datadict": [[109, 1, 1, "", "add_dict_entries"], [110, 1, 1, "", "add_dict_entry"], [111, 1, 1, "", "add_private_dict_entries"], [112, 1, 1, "", "add_private_dict_entry"], [113, 1, 1, "", "dictionary_VM"], [114, 1, 1, "", "dictionary_VR"], [115, 1, 1, "", "dictionary_description"], [116, 1, 1, "", "dictionary_has_tag"], [117, 1, 1, "", "dictionary_is_retired"], [118, 1, 1, "", "dictionary_keyword"], [119, 1, 1, "", "get_entry"], [120, 1, 1, "", "get_private_entry"], [121, 1, 1, "", "keyword_for_tag"], [122, 1, 1, "", "mask_match"], [123, 1, 1, "", "private_dictionary_VM"], [124, 1, 1, "", "private_dictionary_VR"], [125, 1, 1, "", "private_dictionary_description"], [126, 1, 1, "", "repeater_has_keyword"], [127, 1, 1, "", "repeater_has_tag"], [128, 1, 1, "", "tag_for_keyword"]], "pydicom.dataelem": [[129, 3, 1, "", "DataElement"], [130, 1, 1, "", "DataElement_from_raw"], [131, 3, 1, "", "RawDataElement"]], "pydicom.dataelem.DataElement": [[129, 4, 1, "", "VM"], [129, 5, 1, "", "VR"], [129, 6, 1, "", "__init__"], [129, 6, 1, "", "clear"], [129, 5, 1, "", "descripWidth"], [129, 4, 1, "", "empty_value"], [129, 6, 1, "", "from_json"], [129, 4, 1, "", "is_empty"], [129, 4, 1, "", "is_private"], [129, 4, 1, "", "is_retired"], [129, 5, 1, "", "is_undefined_length"], [129, 4, 1, "", "keyword"], [129, 5, 1, "", "maxBytesToDisplay"], [129, 4, 1, "", "name"], [129, 4, 1, "", "repval"], [129, 5, 1, "", "showVR"], [129, 5, 1, "", "tag"], [129, 6, 1, "", "to_json"], [129, 6, 1, "", "to_json_dict"], [129, 6, 1, "", "validate"], [129, 4, 1, "", "value"]], "pydicom.dataelem.RawDataElement": [[131, 5, 1, "", "VR"], [131, 6, 1, "", "__init__"], [131, 6, 1, "", "count"], [131, 6, 1, "", "index"], [131, 5, 1, "", "is_implicit_VR"], [131, 5, 1, "", "is_little_endian"], [131, 5, 1, "", "is_raw"], [131, 5, 1, "", "length"], [131, 5, 1, "", "tag"], [131, 5, 1, "", "value"], [131, 5, 1, "", "value_tell"]], "pydicom.dataset": [[132, 3, 1, "", "Dataset"], [133, 3, 1, "", "FileDataset"], [134, 3, 1, "", "FileMetaDataset"], [135, 3, 1, "", "PrivateBlock"], [136, 1, 1, "", "validate_file_meta"]], "pydicom.dataset.Dataset": [[132, 6, 1, "", "__init__"], [132, 6, 1, "", "add"], [132, 6, 1, "", "add_new"], [132, 6, 1, "", "add_new_private"], [132, 6, 1, "", "clear"], [132, 6, 1, "", "compress"], [132, 6, 1, "", "convert_pixel_data"], [132, 6, 1, "", "copy"], [132, 6, 1, "", "data_element"], [132, 6, 1, "", "decode"], [132, 6, 1, "", "decompress"], [132, 5, 1, "", "default_element_format"], [132, 5, 1, "", "default_sequence_element_format"], [132, 6, 1, "", "dir"], [132, 6, 1, "", "elements"], [132, 6, 1, "", "ensure_file_meta"], [132, 6, 1, "", "formatted_lines"], [132, 6, 1, "", "from_json"], [132, 6, 1, "", "get"], [132, 6, 1, "", "get_item"], [132, 6, 1, "", "get_private_item"], [132, 6, 1, "", "group_dataset"], [132, 5, 1, "", "indent_chars"], [132, 4, 1, "", "is_implicit_VR"], [132, 4, 1, "", "is_little_endian"], [132, 4, 1, "", "is_original_encoding"], [132, 6, 1, "", "items"], [132, 6, 1, "", "iterall"], [132, 6, 1, "", "keys"], [132, 4, 1, "", "original_character_set"], [132, 4, 1, "", "original_encoding"], [132, 6, 1, "", "overlay_array"], [132, 4, 1, "", "pixel_array"], [132, 6, 1, "", "pop"], [132, 6, 1, "", "popitem"], [132, 6, 1, "", "private_block"], [132, 6, 1, "", "private_creators"], [132, 4, 1, "", "read_encoding"], [132, 4, 1, "", "read_implicit_vr"], [132, 4, 1, "", "read_little_endian"], [132, 6, 1, "", "remove_private_tags"], [132, 6, 1, "", "save_as"], [132, 6, 1, "", "set_original_encoding"], [132, 6, 1, "", "setdefault"], [132, 6, 1, "", "to_json"], [132, 6, 1, "", "to_json_dict"], [132, 6, 1, "", "top"], [132, 6, 1, "", "trait_names"], [132, 6, 1, "", "update"], [132, 6, 1, "", "values"], [132, 6, 1, "", "walk"], [132, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileDataset": [[133, 6, 1, "", "__init__"], [133, 6, 1, "", "add"], [133, 6, 1, "", "add_new"], [133, 6, 1, "", "add_new_private"], [133, 6, 1, "", "clear"], [133, 6, 1, "", "compress"], [133, 6, 1, "", "convert_pixel_data"], [133, 6, 1, "", "copy"], [133, 6, 1, "", "data_element"], [133, 6, 1, "", "decode"], [133, 6, 1, "", "decompress"], [133, 6, 1, "", "dir"], [133, 6, 1, "", "elements"], [133, 6, 1, "", "ensure_file_meta"], [133, 5, 1, "", "file_meta"], [133, 5, 1, "", "filename"], [133, 5, 1, "", "fileobj_type"], [133, 6, 1, "", "formatted_lines"], [133, 6, 1, "", "from_json"], [133, 6, 1, "", "get"], [133, 6, 1, "", "get_item"], [133, 6, 1, "", "get_private_item"], [133, 6, 1, "", "group_dataset"], [133, 4, 1, "", "is_implicit_VR"], [133, 4, 1, "", "is_little_endian"], [133, 4, 1, "", "is_original_encoding"], [133, 6, 1, "", "items"], [133, 6, 1, "", "iterall"], [133, 6, 1, "", "keys"], [133, 4, 1, "", "original_character_set"], [133, 4, 1, "", "original_encoding"], [133, 6, 1, "", "overlay_array"], [133, 4, 1, "", "pixel_array"], [133, 6, 1, "", "pop"], [133, 6, 1, "", "popitem"], [133, 5, 1, "", "preamble"], [133, 6, 1, "", "private_block"], [133, 6, 1, "", "private_creators"], [133, 4, 1, "", "read_encoding"], [133, 4, 1, "", "read_implicit_vr"], [133, 4, 1, "", "read_little_endian"], [133, 6, 1, "", "remove_private_tags"], [133, 6, 1, "", "save_as"], [133, 6, 1, "", "set_original_encoding"], [133, 6, 1, "", "setdefault"], [133, 5, 1, "", "timestamp"], [133, 6, 1, "", "to_json"], [133, 6, 1, "", "to_json_dict"], [133, 6, 1, "", "top"], [133, 6, 1, "", "trait_names"], [133, 6, 1, "", "update"], [133, 6, 1, "", "values"], [133, 6, 1, "", "walk"], [133, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileMetaDataset": [[134, 6, 1, "", "__init__"], [134, 6, 1, "", "add"], [134, 6, 1, "", "add_new"], [134, 6, 1, "", "add_new_private"], [134, 6, 1, "", "clear"], [134, 6, 1, "", "compress"], [134, 6, 1, "", "convert_pixel_data"], [134, 6, 1, "", "copy"], [134, 6, 1, "", "data_element"], [134, 6, 1, "", "decode"], [134, 6, 1, "", "decompress"], [134, 6, 1, "", "dir"], [134, 6, 1, "", "elements"], [134, 6, 1, "", "ensure_file_meta"], [134, 6, 1, "", "formatted_lines"], [134, 6, 1, "", "from_json"], [134, 6, 1, "", "get"], [134, 6, 1, "", "get_item"], [134, 6, 1, "", "get_private_item"], [134, 6, 1, "", "group_dataset"], [134, 4, 1, "", "is_implicit_VR"], [134, 4, 1, "", "is_little_endian"], [134, 4, 1, "", "is_original_encoding"], [134, 6, 1, "", "items"], [134, 6, 1, "", "iterall"], [134, 6, 1, "", "keys"], [134, 4, 1, "", "original_character_set"], [134, 4, 1, "", "original_encoding"], [134, 6, 1, "", "overlay_array"], [134, 4, 1, "", "pixel_array"], [134, 6, 1, "", "pop"], [134, 6, 1, "", "popitem"], [134, 6, 1, "", "private_block"], [134, 6, 1, "", "private_creators"], [134, 4, 1, "", "read_encoding"], [134, 4, 1, "", "read_implicit_vr"], [134, 4, 1, "", "read_little_endian"], [134, 6, 1, "", "remove_private_tags"], [134, 6, 1, "", "save_as"], [134, 6, 1, "", "set_original_encoding"], [134, 6, 1, "", "setdefault"], [134, 6, 1, "", "to_json"], [134, 6, 1, "", "to_json_dict"], [134, 6, 1, "", "top"], [134, 6, 1, "", "trait_names"], [134, 6, 1, "", "update"], [134, 6, 1, "", "validate"], [134, 6, 1, "", "values"], [134, 6, 1, "", "walk"], [134, 6, 1, "", "waveform_array"]], "pydicom.dataset.PrivateBlock": [[135, 6, 1, "", "__init__"], [135, 6, 1, "", "add_new"], [135, 5, 1, "", "block_start"], [135, 5, 1, "", "dataset"], [135, 6, 1, "", "get_tag"], [135, 5, 1, "", "group"], [135, 5, 1, "", "private_creator"]], "pydicom.encaps": [[137, 1, 1, "", "decode_data_sequence"], [138, 1, 1, "", "defragment_data"], [139, 1, 1, "", "encapsulate"], [140, 1, 1, "", "encapsulate_extended"], [141, 1, 1, "", "fragment_frame"], [142, 1, 1, "", "generate_fragmented_frames"], [143, 1, 1, "", "generate_fragments"], [144, 1, 1, "", "generate_frames"], [145, 1, 1, "", "generate_pixel_data"], [146, 1, 1, "", "generate_pixel_data_fragment"], [147, 1, 1, "", "generate_pixel_data_frame"], [148, 1, 1, "", "get_frame"], [149, 1, 1, "", "get_frame_offsets"], [150, 1, 1, "", "itemize_fragment"], [151, 1, 1, "", "itemize_frame"], [152, 1, 1, "", "parse_basic_offsets"], [153, 1, 1, "", "parse_fragments"], [154, 1, 1, "", "read_item"]], "pydicom.errors": [[155, 7, 1, "", "InvalidDicomError"]], "pydicom.errors.InvalidDicomError": [[155, 6, 1, "", "with_traceback"]], "pydicom.filebase": [[156, 3, 1, "", "DicomBytesIO"], [157, 1, 1, "", "DicomFile"], [158, 3, 1, "", "DicomFileLike"], [159, 3, 1, "", "DicomIO"]], "pydicom.filebase.DicomBytesIO": [[156, 6, 1, "", "__init__"], [156, 6, 1, "", "close"], [156, 4, 1, "", "is_implicit_VR"], [156, 4, 1, "", "is_little_endian"], [156, 4, 1, "", "name"], [156, 4, 1, "", "parent"], [156, 6, 1, "", "read"], [156, 6, 1, "", "read_UL"], [156, 6, 1, "", "read_US"], [156, 6, 1, "", "read_exact"], [156, 6, 1, "", "read_tag"], [156, 6, 1, "", "seek"], [156, 6, 1, "", "tell"], [156, 6, 1, "", "write"], [156, 6, 1, "", "write_UL"], [156, 6, 1, "", "write_US"], [156, 6, 1, "", "write_tag"]], "pydicom.filebase.DicomFileLike": [[158, 6, 1, "", "__init__"], [158, 6, 1, "", "close"], [158, 4, 1, "", "is_implicit_VR"], [158, 4, 1, "", "is_little_endian"], [158, 4, 1, "", "name"], [158, 4, 1, "", "parent"], [158, 6, 1, "", "read"], [158, 6, 1, "", "read_UL"], [158, 6, 1, "", "read_US"], [158, 6, 1, "", "read_exact"], [158, 6, 1, "", "read_tag"], [158, 6, 1, "", "seek"], [158, 6, 1, "", "tell"], [158, 6, 1, "", "write"], [158, 6, 1, "", "write_UL"], [158, 6, 1, "", "write_US"], [158, 6, 1, "", "write_tag"]], "pydicom.filebase.DicomIO": [[159, 6, 1, "", "__init__"], [159, 6, 1, "", "close"], [159, 4, 1, "", "is_implicit_VR"], [159, 4, 1, "", "is_little_endian"], [159, 4, 1, "", "name"], [159, 4, 1, "", "parent"], [159, 6, 1, "", "read"], [159, 6, 1, "", "read_UL"], [159, 6, 1, "", "read_US"], [159, 6, 1, "", "read_exact"], [159, 6, 1, "", "read_tag"], [159, 6, 1, "", "seek"], [159, 6, 1, "", "tell"], [159, 6, 1, "", "write"], [159, 6, 1, "", "write_UL"], [159, 6, 1, "", "write_US"], [159, 6, 1, "", "write_tag"]], "pydicom.filereader": [[160, 1, 1, "", "data_element_generator"], [161, 1, 1, "", "data_element_offset_to_value"], [162, 1, 1, "", "dcmread"], [163, 1, 1, "", "read_dataset"], [164, 1, 1, "", "read_deferred_data_element"], [165, 1, 1, "", "read_file_meta_info"], [166, 1, 1, "", "read_partial"], [167, 1, 1, "", "read_preamble"], [168, 1, 1, "", "read_sequence"], [169, 1, 1, "", "read_sequence_item"]], "pydicom.fileset": [[170, 2, 1, "", "DIRECTORY_RECORDERS"], [171, 3, 1, "", "FileInstance"], [172, 3, 1, "", "FileSet"], [173, 3, 1, "", "RecordNode"], [174, 1, 1, "", "generate_filename"], [175, 1, 1, "", "is_conformant_file_id"]], "pydicom.fileset.FileInstance": [[171, 4, 1, "", "FileID"], [171, 4, 1, "", "SOPClassUID"], [171, 4, 1, "", "SOPInstanceUID"], [171, 4, 1, "", "TransferSyntaxUID"], [171, 6, 1, "", "__init__"], [171, 4, 1, "", "file_set"], [171, 4, 1, "", "for_addition"], [171, 4, 1, "", "for_moving"], [171, 4, 1, "", "for_removal"], [171, 4, 1, "", "is_private"], [171, 4, 1, "", "is_staged"], [171, 6, 1, "", "load"], [171, 5, 1, "", "node"], [171, 4, 1, "", "path"]], "pydicom.fileset.FileSet": [[172, 4, 1, "", "ID"], [172, 4, 1, "", "UID"], [172, 6, 1, "", "__init__"], [172, 6, 1, "", "add"], [172, 6, 1, "", "add_custom"], [172, 6, 1, "", "clear"], [172, 6, 1, "", "copy"], [172, 4, 1, "", "descriptor_character_set"], [172, 4, 1, "", "descriptor_file_id"], [172, 6, 1, "", "find"], [172, 6, 1, "", "find_values"], [172, 4, 1, "", "is_staged"], [172, 6, 1, "", "load"], [172, 4, 1, "", "path"], [172, 6, 1, "", "remove"], [172, 6, 1, "", "write"]], "pydicom.fileset.RecordNode": [[173, 6, 1, "", "__init__"], [173, 6, 1, "", "add"], [173, 4, 1, "", "ancestors"], [173, 5, 1, "", "children"], [173, 4, 1, "", "component"], [173, 4, 1, "", "depth"], [173, 4, 1, "", "file_set"], [173, 4, 1, "", "has_instance"], [173, 4, 1, "", "index"], [173, 5, 1, "", "instance"], [173, 4, 1, "", "is_root"], [173, 4, 1, "", "key"], [173, 4, 1, "", "next"], [173, 4, 1, "", "parent"], [173, 6, 1, "", "prettify"], [173, 4, 1, "", "previous"], [173, 4, 1, "", "record_type"], [173, 6, 1, "", "remove"], [173, 6, 1, "", "reverse"], [173, 4, 1, "", "root"]], "pydicom.fileutil": [[176, 1, 1, "", "absorb_delimiter_item"], [177, 1, 1, "", "find_bytes"], [178, 1, 1, "", "find_delimiter"], [179, 1, 1, "", "length_of_undefined_length"], [180, 1, 1, "", "read_undefined_length_value"]], "pydicom.filewriter": [[181, 1, 1, "", "correct_ambiguous_vr"], [182, 1, 1, "", "correct_ambiguous_vr_element"], [183, 1, 1, "", "dcmwrite"], [184, 1, 1, "", "multi_string"], [185, 1, 1, "", "write_ATvalue"], [186, 1, 1, "", "write_DA"], [187, 1, 1, "", "write_DT"], [188, 1, 1, "", "write_OBvalue"], [189, 1, 1, "", "write_OWvalue"], [190, 1, 1, "", "write_PN"], [191, 1, 1, "", "write_TM"], [192, 1, 1, "", "write_UI"], [193, 1, 1, "", "write_UN"], [194, 1, 1, "", "write_data_element"], [195, 1, 1, "", "write_dataset"], [196, 1, 1, "", "write_file_meta_info"], [197, 1, 1, "", "write_number_string"], [198, 1, 1, "", "write_numbers"], [199, 1, 1, "", "write_sequence"], [200, 1, 1, "", "write_sequence_item"], [201, 1, 1, "", "write_string"], [202, 1, 1, "", "write_text"]], "pydicom.misc": [[203, 1, 1, "", "is_dicom"], [204, 1, 1, "", "size_in_bytes"]], "pydicom.multival": [[205, 3, 1, "", "MultiValue"]], "pydicom.multival.MultiValue": [[205, 6, 1, "", "__init__"], [205, 6, 1, "", "append"], [205, 6, 1, "", "clear"], [205, 6, 1, "", "count"], [205, 6, 1, "", "extend"], [205, 6, 1, "", "index"], [205, 6, 1, "", "insert"], [205, 6, 1, "", "pop"], [205, 6, 1, "", "remove"], [205, 6, 1, "", "reverse"]], "pydicom": [[532, 0, 0, "-", "overlays"], [529, 0, 0, "-", "pixel_data_handlers"], [537, 0, 0, "-", "waveforms"]], "pydicom.overlays": [[206, 0, 0, "-", "numpy_handler"]], "pydicom.overlays.numpy_handler": [[206, 1, 1, "", "get_expected_length"], [206, 1, 1, "", "get_overlay_array"], [206, 1, 1, "", "is_available"], [206, 1, 1, "", "reshape_overlay_array"]], "pydicom.pixel_data_handlers": [[207, 1, 1, "", "apply_color_lut"], [208, 1, 1, "", "apply_modality_lut"], [209, 1, 1, "", "apply_rescale"], [210, 1, 1, "", "apply_voi"], [211, 1, 1, "", "apply_voi_lut"], [212, 1, 1, "", "apply_windowing"], [213, 1, 1, "", "convert_color_space"], [214, 0, 0, "-", "gdcm_handler"], [215, 0, 0, "-", "jpeg_ls_handler"], [216, 0, 0, "-", "numpy_handler"], [217, 0, 0, "-", "pillow_handler"], [218, 0, 0, "-", "pylibjpeg_handler"], [219, 0, 0, "-", "rle_handler"], [220, 0, 0, "-", "util"]], "pydicom.pixel_data_handlers.gdcm_handler": [[214, 1, 1, "", "create_data_element"], [214, 1, 1, "", "create_image"], [214, 1, 1, "", "get_pixeldata"], [214, 1, 1, "", "is_available"], [214, 1, 1, "", "needs_to_convert_to_RGB"], [214, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [214, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[215, 1, 1, "", "get_pixeldata"], [215, 1, 1, "", "is_available"], [215, 1, 1, "", "needs_to_convert_to_RGB"], [215, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [215, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.numpy_handler": [[216, 1, 1, "", "get_pixeldata"], [216, 1, 1, "", "is_available"], [216, 1, 1, "", "needs_to_convert_to_RGB"], [216, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [216, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pillow_handler": [[217, 1, 1, "", "get_pixeldata"], [217, 1, 1, "", "is_available"], [217, 1, 1, "", "needs_to_convert_to_RGB"], [217, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [217, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[218, 1, 1, "", "as_array"], [218, 1, 1, "", "generate_frames"], [218, 1, 1, "", "get_pixeldata"], [218, 1, 1, "", "is_available"], [218, 1, 1, "", "needs_to_convert_to_RGB"], [218, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [218, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.rle_handler": [[219, 1, 1, "", "get_pixeldata"], [219, 1, 1, "", "is_available"], [219, 1, 1, "", "needs_to_convert_to_RGB"], [219, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [219, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.util": [[220, 1, 1, "", "apply_color_lut"], [220, 1, 1, "", "apply_modality_lut"], [220, 1, 1, "", "apply_voi"], [220, 1, 1, "", "apply_voi_lut"], [220, 1, 1, "", "apply_windowing"], [220, 1, 1, "", "convert_color_space"], [220, 1, 1, "", "dtype_corrected_for_endianness"], [220, 1, 1, "", "expand_ybr422"], [220, 1, 1, "", "get_expected_length"], [220, 1, 1, "", "get_image_pixel_ids"], [220, 1, 1, "", "get_j2k_parameters"], [220, 1, 1, "", "get_nr_frames"], [220, 1, 1, "", "pack_bits"], [220, 1, 1, "", "pixel_dtype"], [220, 1, 1, "", "reshape_pixel_array"], [220, 1, 1, "", "unpack_bits"]], "pydicom.pixels": [[221, 1, 1, "", "as_pixel_options"], [247, 1, 1, "", "get_decoder"], [248, 1, 1, "", "get_encoder"], [249, 1, 1, "", "iter_pixels"], [250, 1, 1, "", "pixel_array"]], "pydicom.pixels.decoders.base": [[222, 3, 1, "", "DecodeRunner"], [223, 3, 1, "", "Decoder"], [224, 2, 1, "", "DeflatedExplicitVRLittleEndianDecoder"], [225, 2, 1, "", "ExplicitVRBigEndianDecoder"], [226, 2, 1, "", "ExplicitVRLittleEndianDecoder"], [227, 2, 1, "", "HTJ2KDecoder"], [228, 2, 1, "", "HTJ2KLosslessDecoder"], [229, 2, 1, "", "HTJ2KLosslessRPCLDecoder"], [230, 2, 1, "", "ImplicitVRLittleEndianDecoder"], [231, 2, 1, "", "JPEG2000Decoder"], [232, 2, 1, "", "JPEG2000LosslessDecoder"], [233, 2, 1, "", "JPEGBaseline8BitDecoder"], [234, 2, 1, "", "JPEGExtended12BitDecoder"], [235, 2, 1, "", "JPEGLSLosslessDecoder"], [236, 2, 1, "", "JPEGLSNearLosslessDecoder"], [237, 2, 1, "", "JPEGLosslessDecoder"], [238, 2, 1, "", "JPEGLosslessSV1Decoder"], [239, 2, 1, "", "RLELosslessDecoder"]], "pydicom.pixels.decoders.base.DecodeRunner": [[222, 6, 1, "", "__init__"], [222, 4, 1, "", "bits_allocated"], [222, 4, 1, "", "bits_stored"], [222, 4, 1, "", "columns"], [222, 6, 1, "", "decode"], [222, 6, 1, "", "del_option"], [222, 4, 1, "", "extended_offsets"], [222, 6, 1, "", "frame_length"], [222, 6, 1, "", "get_data"], [222, 6, 1, "", "get_option"], [222, 4, 1, "", "is_array"], [222, 4, 1, "", "is_binary"], [222, 4, 1, "", "is_buffer"], [222, 4, 1, "", "is_dataset"], [222, 6, 1, "", "iter_decode"], [222, 4, 1, "", "number_of_frames"], [222, 4, 1, "", "options"], [222, 4, 1, "", "photometric_interpretation"], [222, 4, 1, "", "pixel_dtype"], [222, 4, 1, "", "pixel_keyword"], [222, 4, 1, "", "pixel_representation"], [222, 4, 1, "", "planar_configuration"], [222, 6, 1, "", "process"], [222, 6, 1, "", "reshape"], [222, 4, 1, "", "rows"], [222, 4, 1, "", "samples_per_pixel"], [222, 6, 1, "", "set_decoders"], [222, 6, 1, "", "set_option"], [222, 6, 1, "", "set_options"], [222, 6, 1, "", "set_source"], [222, 4, 1, "", "src"], [222, 4, 1, "", "transfer_syntax"], [222, 6, 1, "", "validate"]], "pydicom.pixels.decoders.base.Decoder": [[223, 4, 1, "", "UID"], [223, 6, 1, "", "__init__"], [223, 6, 1, "", "add_plugin"], [223, 6, 1, "", "add_plugins"], [223, 6, 1, "", "as_array"], [223, 6, 1, "", "as_buffer"], [223, 4, 1, "", "is_available"], [223, 4, 1, "", "is_encapsulated"], [223, 4, 1, "", "is_native"], [223, 6, 1, "", "iter_array"], [223, 6, 1, "", "iter_buffer"], [223, 4, 1, "", "missing_dependencies"], [223, 6, 1, "", "remove_plugin"]], "pydicom.pixels.encoders.base": [[240, 3, 1, "", "EncodeRunner"], [241, 3, 1, "", "Encoder"], [242, 2, 1, "", "JPEG2000Encoder"], [243, 2, 1, "", "JPEG2000LosslessEncoder"], [244, 2, 1, "", "JPEGLSLosslessEncoder"], [245, 2, 1, "", "JPEGLSNearLosslessEncoder"], [246, 2, 1, "", "RLELosslessEncoder"]], "pydicom.pixels.encoders.base.EncodeRunner": [[240, 6, 1, "", "__init__"], [240, 4, 1, "", "bits_allocated"], [240, 4, 1, "", "bits_stored"], [240, 4, 1, "", "columns"], [240, 6, 1, "", "del_option"], [240, 6, 1, "", "encode"], [240, 4, 1, "", "extended_offsets"], [240, 6, 1, "", "frame_length"], [240, 6, 1, "", "get_frame"], [240, 6, 1, "", "get_option"], [240, 4, 1, "", "is_array"], [240, 4, 1, "", "is_binary"], [240, 4, 1, "", "is_buffer"], [240, 4, 1, "", "is_dataset"], [240, 4, 1, "", "number_of_frames"], [240, 4, 1, "", "options"], [240, 4, 1, "", "photometric_interpretation"], [240, 4, 1, "", "pixel_keyword"], [240, 4, 1, "", "pixel_representation"], [240, 4, 1, "", "planar_configuration"], [240, 4, 1, "", "rows"], [240, 4, 1, "", "samples_per_pixel"], [240, 6, 1, "", "set_encoders"], [240, 6, 1, "", "set_option"], [240, 6, 1, "", "set_options"], [240, 6, 1, "", "set_source"], [240, 4, 1, "", "src"], [240, 4, 1, "", "transfer_syntax"], [240, 6, 1, "", "validate"]], "pydicom.pixels.encoders.base.Encoder": [[241, 4, 1, "", "UID"], [241, 6, 1, "", "__init__"], [241, 6, 1, "", "add_plugin"], [241, 6, 1, "", "add_plugins"], [241, 6, 1, "", "encode"], [241, 4, 1, "", "is_available"], [241, 4, 1, "", "is_encapsulated"], [241, 4, 1, "", "is_native"], [241, 6, 1, "", "iter_encode"], [241, 4, 1, "", "missing_dependencies"], [241, 6, 1, "", "remove_plugin"]], "pydicom.sequence": [[251, 3, 1, "", "Sequence"]], "pydicom.sequence.Sequence": [[251, 6, 1, "", "__init__"], [251, 6, 1, "", "append"], [251, 6, 1, "", "clear"], [251, 6, 1, "", "count"], [251, 6, 1, "", "extend"], [251, 6, 1, "", "index"], [251, 6, 1, "", "insert"], [251, 6, 1, "", "pop"], [251, 6, 1, "", "remove"], [251, 6, 1, "", "reverse"]], "pydicom.tag": [[252, 3, 1, "", "BaseTag"], [253, 1, 1, "", "Tag"], [254, 1, 1, "", "TupleTag"], [255, 1, 1, "", "tag_in_exception"]], "pydicom.tag.BaseTag": [[252, 6, 1, "", "__init__"], [252, 6, 1, "", "as_integer_ratio"], [252, 6, 1, "", "bit_count"], [252, 6, 1, "", "bit_length"], [252, 6, 1, "", "conjugate"], [252, 5, 1, "", "denominator"], [252, 4, 1, "", "elem"], [252, 4, 1, "", "element"], [252, 6, 1, "", "from_bytes"], [252, 4, 1, "", "group"], [252, 5, 1, "", "imag"], [252, 4, 1, "", "is_private"], [252, 4, 1, "", "is_private_creator"], [252, 4, 1, "", "json_key"], [252, 5, 1, "", "numerator"], [252, 4, 1, "", "private_creator"], [252, 5, 1, "", "real"], [252, 6, 1, "", "to_bytes"]], "pydicom.uid": [[256, 2, 1, "", "AcquisitionContextSRStorage"], [257, 2, 1, "", "AdvancedBlendingPresentationStateStorage"], [258, 2, 1, "", "AllTransferSyntaxes"], [259, 2, 1, "", "AmbulatoryECGWaveformStorage"], [260, 2, 1, "", "ArterialPulseWaveformStorage"], [261, 2, 1, "", "AutorefractionMeasurementsStorage"], [262, 2, 1, "", "BasicStructuredDisplayStorage"], [263, 2, 1, "", "BasicTextSRStorage"], [264, 2, 1, "", "BasicVoiceAudioWaveformStorage"], [265, 2, 1, "", "BlendingSoftcopyPresentationStateStorage"], [266, 2, 1, "", "BodyPositionWaveformStorage"], [267, 2, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [268, 2, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [269, 2, 1, "", "BreastTomosynthesisImageStorage"], [270, 2, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [271, 2, 1, "", "CArmPhotonElectronRadiationStorage"], [272, 2, 1, "", "CTDefinedProcedureProtocolStorage"], [273, 2, 1, "", "CTImageStorage"], [274, 2, 1, "", "CTPerformedProcedureProtocolStorage"], [275, 2, 1, "", "CardiacElectrophysiologyWaveformStorage"], [276, 2, 1, "", "ChestCADSRStorage"], [277, 2, 1, "", "ColonCADSRStorage"], [278, 2, 1, "", "ColorPaletteStorage"], [279, 2, 1, "", "ColorSoftcopyPresentationStateStorage"], [280, 2, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [281, 2, 1, "", "Comprehensive3DSRStorage"], [282, 2, 1, "", "ComprehensiveSRStorage"], [283, 2, 1, "", "ComputedRadiographyImageStorage"], [284, 2, 1, "", "ConfocalMicroscopyImageStorage"], [285, 2, 1, "", "ConfocalMicroscopyTiledPyramidalImageStorage"], [286, 2, 1, "", "ContentAssessmentResultsStorage"], [287, 2, 1, "", "CornealTopographyMapStorage"], [288, 2, 1, "", "DICOS2DAITStorage"], [289, 2, 1, "", "DICOS3DAITStorage"], [290, 2, 1, "", "DICOSCTImageStorage"], [291, 2, 1, "", "DICOSDigitalXRayImageStorageForPresentation"], [292, 2, 1, "", "DICOSDigitalXRayImageStorageForProcessing"], [293, 2, 1, "", "DICOSQuadrupoleResonanceStorage"], [294, 2, 1, "", "DICOSThreatDetectionReportStorage"], [295, 2, 1, "", "DeflatedExplicitVRLittleEndian"], [296, 2, 1, "", "DeformableSpatialRegistrationStorage"], [297, 2, 1, "", "DermoscopicPhotographyImageStorage"], [298, 2, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [299, 2, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [300, 2, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [301, 2, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [302, 2, 1, "", "DigitalXRayImageStorageForPresentation"], [303, 2, 1, "", "DigitalXRayImageStorageForProcessing"], [304, 2, 1, "", "EddyCurrentImageStorage"], [305, 2, 1, "", "EddyCurrentMultiFrameImageStorage"], [306, 2, 1, "", "ElectromyogramWaveformStorage"], [307, 2, 1, "", "ElectrooculogramWaveformStorage"], [308, 2, 1, "", "EncapsulatedCDAStorage"], [309, 2, 1, "", "EncapsulatedMTLStorage"], [310, 2, 1, "", "EncapsulatedOBJStorage"], [311, 2, 1, "", "EncapsulatedPDFStorage"], [312, 2, 1, "", "EncapsulatedSTLStorage"], [313, 2, 1, "", "EnhancedCTImageStorage"], [314, 2, 1, "", "EnhancedContinuousRTImageStorage"], [315, 2, 1, "", "EnhancedMRColorImageStorage"], [316, 2, 1, "", "EnhancedMRImageStorage"], [317, 2, 1, "", "EnhancedPETImageStorage"], [318, 2, 1, "", "EnhancedRTImageStorage"], [319, 2, 1, "", "EnhancedSRStorage"], [320, 2, 1, "", "EnhancedUSVolumeStorage"], [321, 2, 1, "", "EnhancedXAImageStorage"], [322, 2, 1, "", "EnhancedXRFImageStorage"], [323, 2, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [324, 2, 1, "", "ExplicitVRBigEndian"], [325, 2, 1, "", "ExplicitVRLittleEndian"], [326, 2, 1, "", "ExtensibleSRStorage"], [327, 2, 1, "", "General32bitECGWaveformStorage"], [328, 2, 1, "", "GeneralAudioWaveformStorage"], [329, 2, 1, "", "GeneralECGWaveformStorage"], [330, 2, 1, "", "GenericImplantTemplateStorage"], [331, 2, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [332, 2, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [333, 2, 1, "", "HEVCM10P51"], [334, 2, 1, "", "HEVCMP51"], [335, 2, 1, "", "HTJ2K"], [336, 2, 1, "", "HTJ2KLossless"], [337, 2, 1, "", "HTJ2KLosslessRPCL"], [338, 2, 1, "", "HangingProtocolStorage"], [339, 2, 1, "", "HemodynamicWaveformStorage"], [340, 2, 1, "", "ImplantAssemblyTemplateStorage"], [341, 2, 1, "", "ImplantTemplateGroupStorage"], [342, 2, 1, "", "ImplantationPlanSRStorage"], [343, 2, 1, "", "ImplicitVRLittleEndian"], [344, 2, 1, "", "IntraocularLensCalculationsStorage"], [345, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [346, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [347, 2, 1, "", "InventoryStorage"], [348, 2, 1, "", "JPEG2000"], [349, 2, 1, "", "JPEG2000Lossless"], [350, 2, 1, "", "JPEG2000MC"], [351, 2, 1, "", "JPEG2000MCLossless"], [352, 2, 1, "", "JPEG2000TransferSyntaxes"], [353, 2, 1, "", "JPEGBaseline8Bit"], [354, 2, 1, "", "JPEGExtended12Bit"], [355, 2, 1, "", "JPEGLSLossless"], [356, 2, 1, "", "JPEGLSNearLossless"], [357, 2, 1, "", "JPEGLSTransferSyntaxes"], [358, 2, 1, "", "JPEGLossless"], [359, 2, 1, "", "JPEGLosslessSV1"], [360, 2, 1, "", "JPEGTransferSyntaxes"], [361, 2, 1, "", "JPIPHTJ2KReferenced"], [362, 2, 1, "", "JPIPHTJ2KReferencedDeflate"], [363, 2, 1, "", "KeratometryMeasurementsStorage"], [364, 2, 1, "", "KeyObjectSelectionDocumentStorage"], [365, 2, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [366, 2, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [367, 2, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [368, 2, 1, "", "LensometryMeasurementsStorage"], [369, 2, 1, "", "MPEG2MPHL"], [370, 2, 1, "", "MPEG2MPHLF"], [371, 2, 1, "", "MPEG2MPML"], [372, 2, 1, "", "MPEG2MPMLF"], [373, 2, 1, "", "MPEG4HP41"], [374, 2, 1, "", "MPEG4HP41BD"], [375, 2, 1, "", "MPEG4HP41BDF"], [376, 2, 1, "", "MPEG4HP41F"], [377, 2, 1, "", "MPEG4HP422D"], [378, 2, 1, "", "MPEG4HP422DF"], [379, 2, 1, "", "MPEG4HP423D"], [380, 2, 1, "", "MPEG4HP423DF"], [381, 2, 1, "", "MPEG4HP42STEREO"], [382, 2, 1, "", "MPEG4HP42STEREOF"], [383, 2, 1, "", "MPEGTransferSyntaxes"], [384, 2, 1, "", "MRImageStorage"], [385, 2, 1, "", "MRSpectroscopyStorage"], [386, 2, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [387, 2, 1, "", "MammographyCADSRStorage"], [388, 2, 1, "", "MediaStorageDirectoryStorage"], [389, 2, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [390, 2, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [391, 2, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [392, 2, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [393, 2, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [394, 2, 1, "", "MultichannelRespiratoryWaveformStorage"], [395, 2, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [396, 2, 1, "", "NuclearMedicineImageStorage"], [397, 2, 1, "", "OphthalmicAxialMeasurementsStorage"], [398, 2, 1, "", "OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [399, 2, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [400, 2, 1, "", "OphthalmicPhotography16BitImageStorage"], [401, 2, 1, "", "OphthalmicPhotography8BitImageStorage"], [402, 2, 1, "", "OphthalmicThicknessMapStorage"], [403, 2, 1, "", "OphthalmicTomographyImageStorage"], [404, 2, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [405, 2, 1, "", "PYDICOM_IMPLEMENTATION_UID"], [406, 2, 1, "", "PYDICOM_ROOT_UID"], [407, 2, 1, "", "ParametricMapStorage"], [408, 2, 1, "", "PatientRadiationDoseSRStorage"], [409, 2, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [410, 2, 1, "", "PhotoacousticImageStorage"], [411, 2, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [412, 2, 1, "", "PositronEmissionTomographyImageStorage"], [413, 2, 1, "", "PrivateTransferSyntaxes"], [414, 2, 1, "", "ProcedureLogStorage"], [415, 2, 1, "", "ProtocolApprovalStorage"], [416, 2, 1, "", "PseudoColorSoftcopyPresentationStateStorage"], [417, 2, 1, "", "RE_VALID_UID"], [418, 2, 1, "", "RE_VALID_UID_PREFIX"], [419, 2, 1, "", "RLELossless"], [420, 2, 1, "", "RLETransferSyntaxes"], [421, 2, 1, "", "RTBeamsDeliveryInstructionStorage"], [422, 2, 1, "", "RTBeamsTreatmentRecordStorage"], [423, 2, 1, "", "RTBrachyApplicationSetupDeliveryInstructionStorage"], [424, 2, 1, "", "RTBrachyTreatmentRecordStorage"], [425, 2, 1, "", "RTDoseStorage"], [426, 2, 1, "", "RTImageStorage"], [427, 2, 1, "", "RTIonBeamsTreatmentRecordStorage"], [428, 2, 1, "", "RTIonPlanStorage"], [429, 2, 1, "", "RTPatientPositionAcquisitionInstructionStorage"], [430, 2, 1, "", "RTPhysicianIntentStorage"], [431, 2, 1, "", "RTPlanStorage"], [432, 2, 1, "", "RTRadiationRecordSetStorage"], [433, 2, 1, "", "RTRadiationSalvageRecordStorage"], [434, 2, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [435, 2, 1, "", "RTRadiationSetStorage"], [436, 2, 1, "", "RTSegmentAnnotationStorage"], [437, 2, 1, "", "RTStructureSetStorage"], [438, 2, 1, "", "RTTreatmentPreparationStorage"], [439, 2, 1, "", "RTTreatmentSummaryRecordStorage"], [440, 2, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [441, 2, 1, "", "RawDataStorage"], [442, 2, 1, "", "RealWorldValueMappingStorage"], [443, 2, 1, "", "RespiratoryWaveformStorage"], [444, 2, 1, "", "RoboticArmRadiationStorage"], [445, 2, 1, "", "RoboticRadiationRecordStorage"], [446, 2, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [447, 2, 1, "", "SMPTEST211020UncompressedInterlacedActiveVideo"], [448, 2, 1, "", "SMPTEST211020UncompressedProgressiveActiveVideo"], [449, 2, 1, "", "SMPTEST211030PCMDigitalAudio"], [450, 2, 1, "", "SecondaryCaptureImageStorage"], [451, 2, 1, "", "SegmentationStorage"], [452, 2, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [453, 2, 1, "", "SimplifiedAdultEchoSRStorage"], [454, 2, 1, "", "SleepElectroencephalogramWaveformStorage"], [455, 2, 1, "", "SpatialFiducialsStorage"], [456, 2, 1, "", "SpatialRegistrationStorage"], [457, 2, 1, "", "SpectaclePrescriptionReportStorage"], [458, 2, 1, "", "StereometricRelationshipStorage"], [459, 2, 1, "", "SubjectiveRefractionMeasurementsStorage"], [460, 2, 1, "", "SurfaceScanMeshStorage"], [461, 2, 1, "", "SurfaceScanPointCloudStorage"], [462, 2, 1, "", "SurfaceSegmentationStorage"], [463, 2, 1, "", "TomotherapeuticRadiationRecordStorage"], [464, 2, 1, "", "TomotherapeuticRadiationStorage"], [465, 2, 1, "", "TractographyResultsStorage"], [466, 2, 1, "", "TwelveLeadECGWaveformStorage"], [467, 3, 1, "", "UID"], [468, 2, 1, "", "UltrasoundImageStorage"], [469, 2, 1, "", "UltrasoundMultiFrameImageStorage"], [470, 2, 1, "", "UncompressedTransferSyntaxes"], [471, 2, 1, "", "VLEndoscopicImageStorage"], [472, 2, 1, "", "VLMicroscopicImageStorage"], [473, 2, 1, "", "VLPhotographicImageStorage"], [474, 2, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [475, 2, 1, "", "VLWholeSlideMicroscopyImageStorage"], [476, 2, 1, "", "VariableModalityLUTSoftcopyPresentationStateStorage"], [477, 2, 1, "", "VideoEndoscopicImageStorage"], [478, 2, 1, "", "VideoMicroscopicImageStorage"], [479, 2, 1, "", "VideoPhotographicImageStorage"], [480, 2, 1, "", "VisualAcuityMeasurementsStorage"], [481, 2, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [482, 2, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [483, 2, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [484, 2, 1, "", "XADefinedProcedureProtocolStorage"], [485, 2, 1, "", "XAPerformedProcedureProtocolStorage"], [486, 2, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [487, 2, 1, "", "XRay3DAngiographicImageStorage"], [488, 2, 1, "", "XRay3DCraniofacialImageStorage"], [489, 2, 1, "", "XRayAngiographicImageStorage"], [490, 2, 1, "", "XRayRadiationDoseSRStorage"], [491, 2, 1, "", "XRayRadiofluoroscopicImageStorage"], [492, 1, 1, "", "generate_uid"], [493, 1, 1, "", "register_transfer_syntax"]], "pydicom.uid.UID": [[467, 6, 1, "", "__init__"], [467, 6, 1, "", "capitalize"], [467, 6, 1, "", "casefold"], [467, 6, 1, "", "center"], [467, 6, 1, "", "count"], [467, 6, 1, "", "encode"], [467, 6, 1, "", "endswith"], [467, 6, 1, "", "expandtabs"], [467, 6, 1, "", "find"], [467, 6, 1, "", "format"], [467, 6, 1, "", "format_map"], [467, 6, 1, "", "index"], [467, 4, 1, "", "info"], [467, 4, 1, "", "is_compressed"], [467, 4, 1, "", "is_deflated"], [467, 4, 1, "", "is_encapsulated"], [467, 4, 1, "", "is_implicit_VR"], [467, 4, 1, "", "is_little_endian"], [467, 4, 1, "", "is_private"], [467, 4, 1, "", "is_retired"], [467, 4, 1, "", "is_transfer_syntax"], [467, 4, 1, "", "is_valid"], [467, 6, 1, "", "isalnum"], [467, 6, 1, "", "isalpha"], [467, 6, 1, "", "isascii"], [467, 6, 1, "", "isdecimal"], [467, 6, 1, "", "isdigit"], [467, 6, 1, "", "isidentifier"], [467, 6, 1, "", "islower"], [467, 6, 1, "", "isnumeric"], [467, 6, 1, "", "isprintable"], [467, 6, 1, "", "isspace"], [467, 6, 1, "", "istitle"], [467, 6, 1, "", "isupper"], [467, 6, 1, "", "join"], [467, 4, 1, "", "keyword"], [467, 6, 1, "", "ljust"], [467, 6, 1, "", "lower"], [467, 6, 1, "", "lstrip"], [467, 6, 1, "", "maketrans"], [467, 4, 1, "", "name"], [467, 6, 1, "", "partition"], [467, 6, 1, "", "removeprefix"], [467, 6, 1, "", "removesuffix"], [467, 6, 1, "", "replace"], [467, 6, 1, "", "rfind"], [467, 6, 1, "", "rindex"], [467, 6, 1, "", "rjust"], [467, 6, 1, "", "rpartition"], [467, 6, 1, "", "rsplit"], [467, 6, 1, "", "rstrip"], [467, 6, 1, "", "set_private_encoding"], [467, 6, 1, "", "split"], [467, 6, 1, "", "splitlines"], [467, 6, 1, "", "startswith"], [467, 6, 1, "", "strip"], [467, 6, 1, "", "swapcase"], [467, 6, 1, "", "title"], [467, 6, 1, "", "translate"], [467, 4, 1, "", "type"], [467, 6, 1, "", "upper"], [467, 6, 1, "", "zfill"]], "pydicom.valuerep": [[494, 3, 1, "", "DA"], [495, 1, 1, "", "DS"], [496, 3, 1, "", "DSdecimal"], [497, 3, 1, "", "DSfloat"], [498, 3, 1, "", "DT"], [499, 3, 1, "", "IS"], [500, 3, 1, "", "ISfloat"], [501, 3, 1, "", "PersonName"], [502, 3, 1, "", "TM"], [503, 3, 1, "", "VR"], [504, 1, 1, "", "format_number_as_ds"], [505, 1, 1, "", "is_valid_ds"]], "pydicom.valuerep.DA": [[494, 6, 1, "", "__init__"], [494, 6, 1, "", "ctime"], [494, 6, 1, "", "fromisocalendar"], [494, 6, 1, "", "fromisoformat"], [494, 6, 1, "", "fromordinal"], [494, 6, 1, "", "fromtimestamp"], [494, 6, 1, "", "isocalendar"], [494, 6, 1, "", "isoformat"], [494, 6, 1, "", "isoweekday"], [494, 6, 1, "", "replace"], [494, 6, 1, "", "strftime"], [494, 6, 1, "", "timetuple"], [494, 6, 1, "", "today"], [494, 6, 1, "", "toordinal"], [494, 6, 1, "", "weekday"]], "pydicom.valuerep.DSdecimal": [[496, 6, 1, "", "__init__"], [496, 6, 1, "", "adjusted"], [496, 6, 1, "", "as_integer_ratio"], [496, 6, 1, "", "as_tuple"], [496, 6, 1, "", "canonical"], [496, 6, 1, "", "compare"], [496, 6, 1, "", "compare_signal"], [496, 6, 1, "", "compare_total"], [496, 6, 1, "", "compare_total_mag"], [496, 6, 1, "", "conjugate"], [496, 6, 1, "", "copy_abs"], [496, 6, 1, "", "copy_negate"], [496, 6, 1, "", "copy_sign"], [496, 6, 1, "", "exp"], [496, 6, 1, "", "fma"], [496, 6, 1, "", "from_float"], [496, 6, 1, "", "is_canonical"], [496, 6, 1, "", "is_finite"], [496, 6, 1, "", "is_infinite"], [496, 6, 1, "", "is_nan"], [496, 6, 1, "", "is_normal"], [496, 6, 1, "", "is_qnan"], [496, 6, 1, "", "is_signed"], [496, 6, 1, "", "is_snan"], [496, 6, 1, "", "is_subnormal"], [496, 6, 1, "", "is_zero"], [496, 6, 1, "", "ln"], [496, 6, 1, "", "log10"], [496, 6, 1, "", "logb"], [496, 6, 1, "", "logical_and"], [496, 6, 1, "", "logical_invert"], [496, 6, 1, "", "logical_or"], [496, 6, 1, "", "logical_xor"], [496, 6, 1, "", "max"], [496, 6, 1, "", "max_mag"], [496, 6, 1, "", "min"], [496, 6, 1, "", "min_mag"], [496, 6, 1, "", "next_minus"], [496, 6, 1, "", "next_plus"], [496, 6, 1, "", "next_toward"], [496, 6, 1, "", "normalize"], [496, 6, 1, "", "number_class"], [496, 6, 1, "", "quantize"], [496, 6, 1, "", "radix"], [496, 6, 1, "", "remainder_near"], [496, 6, 1, "", "rotate"], [496, 6, 1, "", "same_quantum"], [496, 6, 1, "", "scaleb"], [496, 6, 1, "", "shift"], [496, 6, 1, "", "sqrt"], [496, 6, 1, "", "to_eng_string"], [496, 6, 1, "", "to_integral"], [496, 6, 1, "", "to_integral_exact"], [496, 6, 1, "", "to_integral_value"]], "pydicom.valuerep.DSfloat": [[497, 6, 1, "", "__init__"], [497, 6, 1, "", "as_integer_ratio"], [497, 6, 1, "", "conjugate"], [497, 6, 1, "", "fromhex"], [497, 6, 1, "", "hex"], [497, 5, 1, "", "imag"], [497, 6, 1, "", "is_integer"], [497, 5, 1, "", "real"]], "pydicom.valuerep.DT": [[498, 6, 1, "", "__init__"], [498, 6, 1, "", "astimezone"], [498, 6, 1, "", "combine"], [498, 6, 1, "", "ctime"], [498, 6, 1, "", "date"], [498, 6, 1, "", "dst"], [498, 6, 1, "", "fromisocalendar"], [498, 6, 1, "", "fromisoformat"], [498, 6, 1, "", "fromordinal"], [498, 6, 1, "", "fromtimestamp"], [498, 6, 1, "", "isocalendar"], [498, 6, 1, "", "isoformat"], [498, 6, 1, "", "isoweekday"], [498, 6, 1, "", "now"], [498, 6, 1, "", "replace"], [498, 6, 1, "", "strftime"], [498, 6, 1, "", "strptime"], [498, 6, 1, "", "time"], [498, 6, 1, "", "timestamp"], [498, 6, 1, "", "timetuple"], [498, 6, 1, "", "timetz"], [498, 6, 1, "", "today"], [498, 6, 1, "", "toordinal"], [498, 6, 1, "", "tzname"], [498, 6, 1, "", "utcfromtimestamp"], [498, 6, 1, "", "utcnow"], [498, 6, 1, "", "utcoffset"], [498, 6, 1, "", "utctimetuple"], [498, 6, 1, "", "weekday"]], "pydicom.valuerep.IS": [[499, 6, 1, "", "__init__"], [499, 6, 1, "", "as_integer_ratio"], [499, 6, 1, "", "bit_count"], [499, 6, 1, "", "bit_length"], [499, 6, 1, "", "conjugate"], [499, 5, 1, "", "denominator"], [499, 6, 1, "", "from_bytes"], [499, 5, 1, "", "imag"], [499, 5, 1, "", "numerator"], [499, 5, 1, "", "real"], [499, 6, 1, "", "to_bytes"]], "pydicom.valuerep.ISfloat": [[500, 6, 1, "", "__init__"], [500, 6, 1, "", "as_integer_ratio"], [500, 6, 1, "", "conjugate"], [500, 6, 1, "", "fromhex"], [500, 6, 1, "", "hex"], [500, 5, 1, "", "imag"], [500, 6, 1, "", "is_integer"], [500, 5, 1, "", "real"]], "pydicom.valuerep.PersonName": [[501, 6, 1, "", "__init__"], [501, 4, 1, "", "alphabetic"], [501, 4, 1, "", "components"], [501, 6, 1, "", "decode"], [501, 6, 1, "", "encode"], [501, 6, 1, "", "family_comma_given"], [501, 4, 1, "", "family_name"], [501, 6, 1, "", "formatted"], [501, 6, 1, "", "from_named_components"], [501, 6, 1, "", "from_named_components_veterinary"], [501, 4, 1, "", "given_name"], [501, 4, 1, "", "ideographic"], [501, 4, 1, "", "middle_name"], [501, 4, 1, "", "name_prefix"], [501, 4, 1, "", "name_suffix"], [501, 4, 1, "", "phonetic"]], "pydicom.valuerep.TM": [[502, 6, 1, "", "__init__"], [502, 6, 1, "", "dst"], [502, 6, 1, "", "fromisoformat"], [502, 6, 1, "", "isoformat"], [502, 6, 1, "", "replace"], [502, 6, 1, "", "strftime"], [502, 6, 1, "", "tzname"], [502, 6, 1, "", "utcoffset"]], "pydicom.valuerep.VR": [[503, 6, 1, "", "__init__"]], "pydicom.values": [[506, 1, 1, "", "convert_AE_string"], [507, 1, 1, "", "convert_ATvalue"], [508, 1, 1, "", "convert_DA_string"], [509, 1, 1, "", "convert_DS_string"], [510, 1, 1, "", "convert_DT_string"], [511, 1, 1, "", "convert_IS_string"], [512, 1, 1, "", "convert_OBvalue"], [513, 1, 1, "", "convert_OWvalue"], [514, 1, 1, "", "convert_PN"], [515, 1, 1, "", "convert_SQ"], [516, 1, 1, "", "convert_TM_string"], [517, 1, 1, "", "convert_UI"], [518, 1, 1, "", "convert_UN"], [519, 1, 1, "", "convert_UR_string"], [520, 1, 1, "", "convert_numbers"], [521, 1, 1, "", "convert_single_string"], [522, 1, 1, "", "convert_string"], [523, 1, 1, "", "convert_tag"], [524, 1, 1, "", "convert_text"], [525, 1, 1, "", "convert_value"], [526, 1, 1, "", "multi_string"]], "pydicom.waveforms": [[527, 0, 0, "-", "numpy_handler"]], "pydicom.waveforms.numpy_handler": [[527, 1, 1, "", "generate_multiplex"], [527, 1, 1, "", "is_available"], [527, 1, 1, "", "multiplex_array"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:method", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"show": [0, 14, 26, 28], "dicom": [0, 10, 11, 12, 16, 17, 20, 24, 26, 44, 48, 50, 55, 59, 76, 566, 568, 571], "file": [0, 10, 17, 20, 24, 26, 39, 50, 55, 76, 538, 542, 545, 546, 566, 568], "us": [0, 2, 23, 45, 46, 51, 55, 568, 569], "hierarch": 0, "tree": 0, "imag": [1, 2, 4, 6, 29, 36, 37, 38, 39, 51], "process": [1, 6, 15, 29], "downsiz": 2, "mri": 2, "pydicom": [2, 23, 24, 26, 27, 28, 33, 42, 43, 44, 45, 46, 48, 49, 51, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 531, 532, 533, 534, 535, 536, 537, 538, 558, 559, 561, 568, 569], "decod": [3, 29, 30, 31, 56, 67, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 533, 534, 571], "plot": [3, 4, 9], "waveform": [3, 54, 527, 537, 571], "data": [3, 8, 9, 12, 17, 29, 30, 31, 34, 35, 46, 47, 48, 52, 53, 54, 58, 59, 61, 62, 68, 105, 106, 107, 108, 528, 529, 532, 533, 534, 535, 537, 565, 569, 571], "load": [4, 566], "ct": 4, "slice": 4, "axial": 4, "sagitt": 4, "coron": 4, "comput": [5, 13, 19, 21, 560], "time": [5, 13, 19, 21, 560], "gener": [6, 23, 41], "exampl": [6, 24, 26, 36, 37, 38, 42, 70, 564, 568], "input": [6, 7], "output": [6, 7, 8], "metadata": [6, 15], "format": [8, 565], "set": [8, 10, 48, 76, 100, 566], "print": 8, "read": [9, 10, 11, 50, 73, 564], "dataset": [9, 14, 43, 46, 52, 53, 54, 58, 60, 70, 71, 73, 75, 132, 133, 134, 135, 136, 564, 565], "pixel": [9, 29, 30, 31, 34, 35, 36, 37, 38, 39, 46, 47, 53, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 528, 529, 533, 534, 535, 569], "rtplan": 11, "list": [11, 536], "inform": [11, 39], "write": [12, 41, 50, 55, 75, 562, 564], "work": [14, 18, 52, 53, 54, 565], "memori": 14, "base": [14, 72, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246], "add": 16, "item": 16, "privat": [16, 48, 59], "dictionari": [16, 48, 59], "anonym": 17, "singl": 17, "sequenc": [18, 43, 64, 251, 564], "analys": 20, "differ": 20, "between": 20, "displai": [22, 48], "unicod": 22, "person": 22, "name": 22, "frequent": 23, "ask": 23, "question": 23, "how": [23, 568], "do": 23, "i": [23, 499], "cite": 23, "instal": [23, 26, 27, 45, 562, 568], "what": [23, 562, 563], "ar": 23, "": 23, "prerequisit": 23, "requir": [23, 30, 34, 562], "option": [23, 24, 26, 29, 33, 57, 562, 568], "version": [23, 44, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 568], "python": [23, 32, 51], "can": 23, "codifi": [24, 26, 55], "command": [24, 26, 28], "A": [24, 26], "simpl": [24, 26], "part": [24, 26], "extend": [25, 26], "cli": [25, 26, 27], "line": 26, "interfac": 26, "guid": [26, 40, 42, 49], "introduct": [26, 27, 44, 45, 48, 51, 52, 53, 54, 55, 565, 569], "combin": [26, 27], "other": [26, 27, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548], "miscellan": [29, 531], "plugin": [29, 30, 33, 34, 36, 37, 38], "rle": [29, 38], "lossless": [29, 36, 37, 38], "ad": [30, 34, 48, 564, 566], "element": [32, 43, 48, 61, 62, 63, 64, 65, 66, 67, 564], "vr": [32, 503], "type": [32, 41], "encod": [33, 34, 35, 36, 37, 38, 56, 240, 241, 242, 243, 244, 245, 246, 533, 535, 571], "gdcm": [33, 568], "pylibjpeg": [33, 36, 568], "pyjpegl": [33, 568], "an": 34, "jpeg": [36, 37], "2000": 36, "valid": [36, 37, 38, 44], "paramet": [36, 37, 38], "photometr": [36, 37], "interpret": [36, 37], "bit": 36, "store": 36, "avail": [36, 37, 38], "l": 37, "represent": [37, 60, 61, 63, 64, 66], "planar": 37, "configur": [37, 57], "Near": 37, "glossari": 39, "meta": 39, "modul": 39, "document": [41, 42, 538, 550, 562, 563], "style": 41, "guidelin": 41, "restructuredtext": 41, "get": [42, 58, 564], "start": 42, "user": [42, 49], "api": [42, 530], "refer": [42, 530], "core": 43, "datael": [43, 129], "tag": [43, 65, 252, 253, 254, 255], "best": 44, "practic": 44, "enforc": 44, "futur": 44, "proof": 44, "your": [44, 562, 563], "code": [44, 562], "limit": 44, "major": [44, 538, 539, 540, 541, 542, 543, 544, 545, 547], "packag": [44, 46, 569], "licens": 45, "support": [45, 46, 47, 565], "next": [45, 562, 563, 564], "step": [45, 564], "compress": [46, 47, 569], "transfer": [46, 47, 536], "syntax": [46, 47, 536], "third": [46, 569], "parti": [46, 569], "handl": [47, 532], "precondit": 47, "usag": [47, 70], "remov": [48, 538, 559, 566], "all": 48, "new": [48, 538, 542, 562, 563, 566], "entri": 48, "pars": [50, 68], "view": [51, 564], "matplotlib": 51, "tkinter": 51, "librari": [51, 562, 568], "pil": 51, "wxpython": 51, "overlai": [52, 206, 532], "overlay_arrai": 52, "pixel_arrai": [53, 250], "color": 53, "space": 53, "palett": 53, "modal": 53, "lut": 53, "rescal": 53, "oper": 53, "voi": 53, "window": 53, "waveform_arrai": 54, "from": [55, 565], "scratch": 55, "charact": 56, "charset": [56, 77, 78, 79, 80], "config": [57, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "includ": 58, "util": [59, 68, 74, 220, 528, 533, 536], "datadict": [59, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "dataelem": [62, 129, 130, 131], "multi": 63, "valu": [63, 64, 66, 67, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "multiv": [63, 205], "special": 66, "valuerep": [66, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505], "bulk": [68, 528], "encapsul": [68, 139, 569], "encap": [68, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "creat": [68, 562, 563, 565, 566], "except": 69, "error": [69, 155], "io": [71, 72, 74], "class": [72, 536], "filebas": [72, 156, 157, 158, 159], "fileread": [73, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "fileutil": [74, 176, 177, 178, 179, 180], "filewrit": [75, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "fileset": [76, 170, 171, 172, 173, 174, 175, 566], "convert_encod": 77, "decode_byt": 78, "decode_el": 79, "encode_str": 80, "apply_j2k_correct": 81, "ds_decim": 82, "ds_numpi": 83, "ignor": 84, "invalid_keyword_behavior": 85, "invalid_key_behavior": 86, "rais": 87, "warn": 88, "allow_ds_float": 89, "assume_implicit_vr_switch": 90, "convert_wrong_length_to_un": 91, "data_element_callback": 92, "data_element_callback_kwarg": 93, "datetime_convers": 94, "debug": 95, "enforce_valid_valu": 96, "future_behavior": 97, "pixel_data_handl": [98, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 529], "reset_data_element_callback": 99, "show_file_meta": 101, "use_ds_decim": 102, "use_ds_numpi": 103, "use_is_numpi": 104, "get_charset_fil": 105, "get_palette_fil": 106, "get_testdata_fil": [107, 108], "add_dict_entri": [109, 110], "add_private_dict_entri": [111, 112], "dictionary_vm": 113, "dictionary_vr": 114, "dictionary_descript": 115, "dictionary_has_tag": 116, "dictionary_is_retir": 117, "dictionary_keyword": 118, "get_entri": 119, "get_private_entri": 120, "keyword_for_tag": 121, "mask_match": 122, "private_dictionary_vm": 123, "private_dictionary_vr": 124, "private_dictionary_descript": 125, "repeater_has_keyword": 126, "repeater_has_tag": 127, "tag_for_keyword": 128, "dataelement_from_raw": 130, "rawdatael": 131, "filedataset": 133, "filemetadataset": 134, "privateblock": 135, "validate_file_meta": 136, "decode_data_sequ": 137, "defragment_data": 138, "encapsulate_extend": 140, "fragment_fram": 141, "generate_fragmented_fram": 142, "generate_frag": 143, "generate_fram": 144, "generate_pixel_data": 145, "generate_pixel_data_frag": 146, "generate_pixel_data_fram": 147, "get_fram": 148, "get_frame_offset": 149, "itemize_frag": 150, "itemize_fram": 151, "parse_basic_offset": 152, "parse_frag": 153, "read_item": 154, "invaliddicomerror": 155, "dicombytesio": 156, "dicomfil": 157, "dicomfilelik": 158, "dicomio": 159, "data_element_gener": 160, "data_element_offset_to_valu": 161, "dcmread": 162, "read_dataset": 163, "read_deferred_data_el": 164, "read_file_meta_info": 165, "read_parti": 166, "read_preambl": 167, "read_sequ": 168, "read_sequence_item": 169, "directory_record": 170, "fileinst": 171, "recordnod": 173, "generate_filenam": 174, "is_conformant_file_id": 175, "absorb_delimiter_item": 176, "find_byt": 177, "find_delimit": 178, "length_of_undefined_length": 179, "read_undefined_length_valu": 180, "correct_ambiguous_vr": 181, "correct_ambiguous_vr_el": 182, "dcmwrite": 183, "multi_str": [184, 526], "write_atvalu": 185, "write_da": 186, "write_dt": 187, "write_obvalu": 188, "write_owvalu": 189, "write_pn": 190, "write_tm": 191, "write_ui": 192, "write_un": 193, "write_data_el": 194, "write_dataset": 195, "write_file_meta_info": 196, "write_number_str": 197, "write_numb": 198, "write_sequ": 199, "write_sequence_item": 200, "write_str": 201, "write_text": 202, "misc": [203, 204, 531], "is_dicom": 203, "size_in_byt": 204, "multivalu": 205, "numpy_handl": [206, 216, 527], "apply_color_lut": 207, "apply_modality_lut": 208, "apply_rescal": 209, "apply_voi": 210, "apply_voi_lut": 211, "apply_window": 212, "convert_color_spac": 213, "gdcm_handler": 214, "jpeg_ls_handl": 215, "pillow_handl": 217, "pylibjpeg_handl": 218, "rle_handl": 219, "as_pixel_opt": 221, "decoderunn": 222, "deflatedexplicitvrlittleendiandecod": 224, "explicitvrbigendiandecod": 225, "explicitvrlittleendiandecod": 226, "htj2kdecod": 227, "htj2klosslessdecod": 228, "htj2klosslessrpcldecod": 229, "implicitvrlittleendiandecod": 230, "jpeg2000decod": 231, "jpeg2000losslessdecod": 232, "jpegbaseline8bitdecod": 233, "jpegextended12bitdecod": 234, "jpeglslosslessdecod": 235, "jpeglsnearlosslessdecod": 236, "jpeglosslessdecod": 237, "jpeglosslesssv1decod": 238, "rlelosslessdecod": 239, "encoderunn": 240, "jpeg2000encod": 242, "jpeg2000losslessencod": 243, "jpeglslosslessencod": 244, "jpeglsnearlosslessencod": 245, "rlelosslessencod": 246, "get_decod": 247, "get_encod": 248, "iter_pixel": 249, "basetag": 252, "tupletag": 254, "tag_in_except": 255, "uid": [256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 536], "acquisitioncontextsrstorag": 256, "advancedblendingpresentationstatestorag": 257, "alltransfersyntax": 258, "ambulatoryecgwaveformstorag": 259, "arterialpulsewaveformstorag": 260, "autorefractionmeasurementsstorag": 261, "basicstructureddisplaystorag": 262, "basictextsrstorag": 263, "basicvoiceaudiowaveformstorag": 264, "blendingsoftcopypresentationstatestorag": 265, "bodypositionwaveformstorag": 266, "breastprojectionxrayimagestorageforpresent": 267, "breastprojectionxrayimagestorageforprocess": 268, "breasttomosynthesisimagestorag": 269, "carmphotonelectronradiationrecordstorag": 270, "carmphotonelectronradiationstorag": 271, "ctdefinedprocedureprotocolstorag": 272, "ctimagestorag": 273, "ctperformedprocedureprotocolstorag": 274, "cardiacelectrophysiologywaveformstorag": 275, "chestcadsrstorag": 276, "coloncadsrstorag": 277, "colorpalettestorag": 278, "colorsoftcopypresentationstatestorag": 279, "compositingplanarmprvolumetricpresentationstatestorag": 280, "comprehensive3dsrstorag": 281, "comprehensivesrstorag": 282, "computedradiographyimagestorag": 283, "confocalmicroscopyimagestorag": 284, "confocalmicroscopytiledpyramidalimagestorag": 285, "contentassessmentresultsstorag": 286, "cornealtopographymapstorag": 287, "dicos2daitstorag": 288, "dicos3daitstorag": 289, "dicosctimagestorag": 290, "dicosdigitalxrayimagestorageforpresent": 291, "dicosdigitalxrayimagestorageforprocess": 292, "dicosquadrupoleresonancestorag": 293, "dicosthreatdetectionreportstorag": 294, "deflatedexplicitvrlittleendian": 295, "deformablespatialregistrationstorag": 296, "dermoscopicphotographyimagestorag": 297, "digitalintraoralxrayimagestorageforpresent": 298, "digitalintraoralxrayimagestorageforprocess": 299, "digitalmammographyxrayimagestorageforpresent": 300, "digitalmammographyxrayimagestorageforprocess": 301, "digitalxrayimagestorageforpresent": 302, "digitalxrayimagestorageforprocess": 303, "eddycurrentimagestorag": 304, "eddycurrentmultiframeimagestorag": 305, "electromyogramwaveformstorag": 306, "electrooculogramwaveformstorag": 307, "encapsulatedcdastorag": 308, "encapsulatedmtlstorag": 309, "encapsulatedobjstorag": 310, "encapsulatedpdfstorag": 311, "encapsulatedstlstorag": 312, "enhancedctimagestorag": 313, "enhancedcontinuousrtimagestorag": 314, "enhancedmrcolorimagestorag": 315, "enhancedmrimagestorag": 316, "enhancedpetimagestorag": 317, "enhancedrtimagestorag": 318, "enhancedsrstorag": 319, "enhancedusvolumestorag": 320, "enhancedxaimagestorag": 321, "enhancedxrfimagestorag": 322, "enhancedxrayradiationdosesrstorag": 323, "explicitvrbigendian": 324, "explicitvrlittleendian": 325, "extensiblesrstorag": 326, "general32bitecgwaveformstorag": 327, "generalaudiowaveformstorag": 328, "generalecgwaveformstorag": 329, "genericimplanttemplatestorag": 330, "grayscaleplanarmprvolumetricpresentationstatestorag": 331, "grayscalesoftcopypresentationstatestorag": 332, "hevcm10p51": 333, "hevcmp51": 334, "htj2k": 335, "htj2klossless": 336, "htj2klosslessrpcl": 337, "hangingprotocolstorag": 338, "hemodynamicwaveformstorag": 339, "implantassemblytemplatestorag": 340, "implanttemplategroupstorag": 341, "implantationplansrstorag": 342, "implicitvrlittleendian": 343, "intraocularlenscalculationsstorag": 344, "intravascularopticalcoherencetomographyimagestorageforpresent": 345, "intravascularopticalcoherencetomographyimagestorageforprocess": 346, "inventorystorag": 347, "jpeg2000": 348, "jpeg2000lossless": 349, "jpeg2000mc": 350, "jpeg2000mclossless": 351, "jpeg2000transfersyntax": 352, "jpegbaseline8bit": 353, "jpegextended12bit": 354, "jpeglslossless": 355, "jpeglsnearlossless": 356, "jpeglstransfersyntax": 357, "jpeglossless": 358, "jpeglosslesssv1": 359, "jpegtransfersyntax": 360, "jpiphtj2kreferenc": 361, "jpiphtj2kreferenceddefl": 362, "keratometrymeasurementsstorag": 363, "keyobjectselectiondocumentstorag": 364, "legacyconvertedenhancedctimagestorag": 365, "legacyconvertedenhancedmrimagestorag": 366, "legacyconvertedenhancedpetimagestorag": 367, "lensometrymeasurementsstorag": 368, "mpeg2mphl": 369, "mpeg2mphlf": 370, "mpeg2mpml": 371, "mpeg2mpmlf": 372, "mpeg4hp41": 373, "mpeg4hp41bd": 374, "mpeg4hp41bdf": 375, "mpeg4hp41f": 376, "mpeg4hp422d": 377, "mpeg4hp422df": 378, "mpeg4hp423d": 379, "mpeg4hp423df": 380, "mpeg4hp42stereo": 381, "mpeg4hp42stereof": 382, "mpegtransfersyntax": 383, "mrimagestorag": 384, "mrspectroscopystorag": 385, "maculargridthicknessandvolumereportstorag": 386, "mammographycadsrstorag": 387, "mediastoragedirectorystorag": 388, "microscopybulksimpleannotationsstorag": 389, "multiframegrayscalebytesecondarycaptureimagestorag": 390, "multiframegrayscalewordsecondarycaptureimagestorag": 391, "multiframesinglebitsecondarycaptureimagestorag": 392, "multiframetruecolorsecondarycaptureimagestorag": 393, "multichannelrespiratorywaveformstorag": 394, "multiplevolumerenderingvolumetricpresentationstatestorag": 395, "nuclearmedicineimagestorag": 396, "ophthalmicaxialmeasurementsstorag": 397, "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorag": 398, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 399, "ophthalmicphotography16bitimagestorag": 400, "ophthalmicphotography8bitimagestorag": 401, "ophthalmicthicknessmapstorag": 402, "ophthalmictomographyimagestorag": 403, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 404, "pydicom_implementation_uid": 405, "pydicom_root_uid": 406, "parametricmapstorag": 407, "patientradiationdosesrstorag": 408, "performedimagingagentadministrationsrstorag": 409, "photoacousticimagestorag": 410, "plannedimagingagentadministrationsrstorag": 411, "positronemissiontomographyimagestorag": 412, "privatetransfersyntax": 413, "procedurelogstorag": 414, "protocolapprovalstorag": 415, "pseudocolorsoftcopypresentationstatestorag": 416, "re_valid_uid": 417, "re_valid_uid_prefix": 418, "rlelossless": 419, "rletransfersyntax": 420, "rtbeamsdeliveryinstructionstorag": 421, "rtbeamstreatmentrecordstorag": 422, "rtbrachyapplicationsetupdeliveryinstructionstorag": 423, "rtbrachytreatmentrecordstorag": 424, "rtdosestorag": 425, "rtimagestorag": 426, "rtionbeamstreatmentrecordstorag": 427, "rtionplanstorag": 428, "rtpatientpositionacquisitioninstructionstorag": 429, "rtphysicianintentstorag": 430, "rtplanstorag": 431, "rtradiationrecordsetstorag": 432, "rtradiationsalvagerecordstorag": 433, "rtradiationsetdeliveryinstructionstorag": 434, "rtradiationsetstorag": 435, "rtsegmentannotationstorag": 436, "rtstructuresetstorag": 437, "rttreatmentpreparationstorag": 438, "rttreatmentsummaryrecordstorag": 439, "radiopharmaceuticalradiationdosesrstorag": 440, "rawdatastorag": 441, "realworldvaluemappingstorag": 442, "respiratorywaveformstorag": 443, "roboticarmradiationstorag": 444, "roboticradiationrecordstorag": 445, "routinescalpelectroencephalogramwaveformstorag": 446, "smptest211020uncompressedinterlacedactivevideo": 447, "smptest211020uncompressedprogressiveactivevideo": 448, "smptest211030pcmdigitalaudio": 449, "secondarycaptureimagestorag": 450, "segmentationstorag": 451, "segmentedvolumerenderingvolumetricpresentationstatestorag": 452, "simplifiedadultechosrstorag": 453, "sleepelectroencephalogramwaveformstorag": 454, "spatialfiducialsstorag": 455, "spatialregistrationstorag": 456, "spectacleprescriptionreportstorag": 457, "stereometricrelationshipstorag": 458, "subjectiverefractionmeasurementsstorag": 459, "surfacescanmeshstorag": 460, "surfacescanpointcloudstorag": 461, "surfacesegmentationstorag": 462, "tomotherapeuticradiationrecordstorag": 463, "tomotherapeuticradiationstorag": 464, "tractographyresultsstorag": 465, "twelveleadecgwaveformstorag": 466, "ultrasoundimagestorag": 468, "ultrasoundmultiframeimagestorag": 469, "uncompressedtransfersyntax": 470, "vlendoscopicimagestorag": 471, "vlmicroscopicimagestorag": 472, "vlphotographicimagestorag": 473, "vlslidecoordinatesmicroscopicimagestorag": 474, "vlwholeslidemicroscopyimagestorag": 475, "variablemodalitylutsoftcopypresentationstatestorag": 476, "videoendoscopicimagestorag": 477, "videomicroscopicimagestorag": 478, "videophotographicimagestorag": 479, "visualacuitymeasurementsstorag": 480, "volumerenderingvolumetricpresentationstatestorag": 481, "widefieldophthalmicphotography3dcoordinatesimagestorag": 482, "widefieldophthalmicphotographystereographicprojectionimagestorag": 483, "xadefinedprocedureprotocolstorag": 484, "xaperformedprocedureprotocolstorag": 485, "xaxrfgrayscalesoftcopypresentationstatestorag": 486, "xray3dangiographicimagestorag": 487, "xray3dcraniofacialimagestorag": 488, "xrayangiographicimagestorag": 489, "xrayradiationdosesrstorag": 490, "xrayradiofluoroscopicimagestorag": 491, "generate_uid": 492, "register_transfer_syntax": 493, "da": 494, "d": 495, "dsdecim": 496, "dsfloat": 497, "dt": 498, "isfloat": 500, "personnam": 501, "tm": 502, "format_number_as_d": 504, "is_valid_d": 505, "convert_ae_str": 506, "convert_atvalu": 507, "convert_da_str": 508, "convert_ds_str": 509, "convert_dt_str": 510, "convert_is_str": 511, "convert_obvalu": 512, "convert_owvalu": 513, "convert_pn": 514, "convert_sq": 515, "convert_tm_str": 516, "convert_ui": 517, "convert_un": 518, "convert_ur_str": 519, "convert_numb": 520, "convert_single_str": 521, "convert_str": 522, "convert_tag": 523, "convert_text": 524, "convert_valu": 525, "handler": [528, 529, 537], "definit": 536, "storag": 536, "sop": [536, 566], "releas": [538, 542, 568], "note": 538, "3": [538, 540, 550, 557, 559], "0": [538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 556, 557, 558, 559], "chang": [538, 539, 540, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 554, 556, 557, 558, 559, 562, 563, 566], "enhanc": [538, 539, 540, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 556, 557, 558, 559], "fix": [538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559], "deprec": [538, 559], "intern": [538, 558, 559], "2": [538, 539, 549, 553, 554, 555, 556, 557, 558], "4": [538, 541, 551, 552, 558], "1": [538, 547, 548, 549, 550, 551, 552, 554, 555], "changelog": [538, 553], "infrastructur": [538, 547], "9": [538, 539, 540, 541, 542, 543, 544, 545, 546], "contrib": [538, 542, 545, 546], "contributor": [538, 546], "8": [538, 545], "bug": [538, 539, 540, 541, 543, 544, 545], "7": [538, 544], "6": [538, 543], "5": [538, 542], "thi": [538, 541, 542], "addit": [538, 541], "contribut": [561, 562, 563], "sourc": 562, "download": [562, 563, 568], "current": 562, "pytest": 562, "run": 562, "test": [562, 568], "suit": 562, "branch": [562, 563], "make": [562, 563], "preview": [562, 563], "commit": [562, 563], "pull": [562, 563], "request": [562, 563], "happen": [562, 563], "build": 563, "basic": 564, "access": 564, "modifi": [564, 566], "path": 564, "file_meta": 564, "ani": 564, "categori": 564, "standard": 564, "delet": 564, "json": 565, "convert": 565, "larg": 565, "binari": 565, "dicomdir": 566, "The": 566, "exist": 566, "stage": 566, "instanc": 566, "appli": 566, "conclus": 566, "tutori": 567, "offici": 568, "pip": 568, "conda": 568, "pillow": 568, "develop": 568, "structur": 570, "report": 570}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Computation times": [[19, "computation-times"], [21, "computation-times"], [13, "computation-times"], [5, "computation-times"], [560, "computation-times"]], "Show working with memory-based dataset": [[14, "show-working-with-memory-based-dataset"]], "Analyse differences between DICOM files": [[20, "analyse-differences-between-dicom-files"]], "Frequently asked questions": [[23, "frequently-asked-questions"]], "General": [[23, "general"]], "How do I cite pydicom?": [[23, "how-do-i-cite-pydicom"]], "Installation": [[23, "installation"]], "What are pydicom\u2019s prerequisites?": [[23, "what-are-pydicom-s-prerequisites"]], "Required": [[23, "required"]], "Optional": [[23, "optional"]], "What version of Python can I use?": [[23, "what-version-of-python-can-i-use"]], "Add items to the private DICOM dictionary": [[16, "add-items-to-the-private-dicom-dictionary"]], "Write DICOM data": [[12, "write-dicom-data"]], "Working with sequences": [[18, "working-with-sequences"]], "Display unicode person names": [[22, "display-unicode-person-names"]], "Metadata processing": [[15, "metadata-processing"], [6, "metadata-processing"]], "Anonymize DICOM data": [[17, "anonymize-dicom-data"]], "Anonymize a single file": [[17, "anonymize-a-single-file"]], "Decode and plot Waveform Data": [[3, "decode-and-plot-waveform-data"]], "Read RTPLAN DICOM and list information": [[11, "read-rtplan-dicom-and-list-information"]], "Format the output of the data set printing": [[8, "format-the-output-of-the-data-set-printing"]], "General examples": [[6, "general-examples"]], "Image processing": [[6, "image-processing"], [1, "image-processing"]], "Input-output": [[6, "input-output"], [7, "input-output"]], "Read a DICOM File-set": [[10, "read-a-dicom-file-set"]], "Read a Dataset and plot Pixel Data": [[9, "read-a-dataset-and-plot-pixel-data"]], "Downsize MRI image using pydicom": [[2, "downsize-mri-image-using-pydicom"]], "Show a dicom file using hierarchical tree": [[0, "show-a-dicom-file-using-hierarchical-tree"]], "Load CT slices and plot axial, sagittal and coronal images": [[4, "load-ct-slices-and-plot-axial-sagittal-and-coronal-images"]], "pydicom.config.INVALID_KEY_BEHAVIOR": [[86, "pydicom-config-invalid-key-behavior"]], "pydicom.config.INVALID_KEYWORD_BEHAVIOR": [[85, "pydicom-config-invalid-keyword-behavior"]], "pydicom.config.convert_wrong_length_to_UN": [[91, "pydicom-config-convert-wrong-length-to-un"]], "pydicom.config.debug": [[95, "pydicom-config-debug"]], "pydicom.config.allow_DS_float": [[89, "pydicom-config-allow-ds-float"]], "pydicom.config.assume_implicit_vr_switch": [[90, "pydicom-config-assume-implicit-vr-switch"]], "pydicom.config.datetime_conversion": [[94, "pydicom-config-datetime-conversion"]], "pydicom.config.data_element_callback": [[92, "pydicom-config-data-element-callback"]], "pydicom.config.RAISE": [[87, "pydicom-config-raise"]], "pydicom.config.IGNORE": [[84, "pydicom-config-ignore"]], "pydicom.config.data_element_callback_kwargs": [[93, "pydicom-config-data-element-callback-kwargs"]], "pydicom.config.WARN": [[88, "pydicom-config-warn"]], "pydicom.config.show_file_meta": [[101, "pydicom-config-show-file-meta"]], "pydicom.data.get_charset_files": [[105, "pydicom-data-get-charset-files"]], "pydicom.config.enforce_valid_values": [[96, "pydicom-config-enforce-valid-values"]], "pydicom.data.get_palette_files": [[106, "pydicom-data-get-palette-files"]], "pydicom.config.use_IS_numpy": [[104, "pydicom-config-use-is-numpy"]], "pydicom.data.get_testdata_file": [[107, "pydicom-data-get-testdata-file"]], "pydicom.config.pixel_data_handlers": [[98, "pydicom-config-pixel-data-handlers"]], "pydicom.config.use_DS_numpy": [[103, "pydicom-config-use-ds-numpy"]], "pydicom.config.settings": [[100, "pydicom-config-settings"]], "pydicom.config.reset_data_element_callback": [[99, "pydicom-config-reset-data-element-callback"]], "pydicom.config.use_DS_decimal": [[102, "pydicom-config-use-ds-decimal"]], "pydicom.config.future_behavior": [[97, "pydicom-config-future-behavior"]], "Extending the CLI": [[25, "extending-the-cli"], [26, "extending-the-cli"]], "Command-line Interface Guide": [[26, "command-line-interface-guide"]], "Introduction": [[26, "introduction"], [27, "introduction"], [44, "introduction"], [45, "introduction"], [53, "introduction"], [54, "introduction"], [55, "introduction"], [52, "introduction"], [51, "introduction"], [48, "introduction"], [569, "introduction"]], "Installing the pydicom CLI": [[26, "installing-the-pydicom-cli"], [27, "installing-the-pydicom-cli"]], "Combining with other CLIs": [[26, "combining-with-other-clis"], [27, "combining-with-other-clis"]], "pydicom show command": [[26, "pydicom-show-command"], [28, "pydicom-show-command"]], "pydicom codify command": [[26, "pydicom-codify-command"], [24, "pydicom-codify-command"]], "A simple example": [[26, "a-simple-example"], [24, "a-simple-example"]], "Command options": [[26, "command-options"], [24, "command-options"]], "Codifying a part of a DICOM file": [[26, "codifying-a-part-of-a-dicom-file"], [24, "codifying-a-part-of-a-dicom-file"]], "Element VRs and Python types": [[32, "element-vrs-and-python-types"]], "Pixel Data Encoding": [[35, "pixel-data-encoding"], [533, "pixel-data-encoding"]], "Encoder Plugins Options": [[33, "encoder-plugins-options"]], "pydicom": [[33, "pydicom"]], "gdcm": [[33, "gdcm"]], "pylibjpeg": [[33, "pylibjpeg"], [36, "pylibjpeg"]], "pyjpegls": [[33, "pyjpegls"]], "Pixel Data Decoder Plugins": [[30, "pixel-data-decoder-plugins"]], "Plugin Requirements": [[30, "plugin-requirements"], [34, "plugin-requirements"]], "Adding Plugins to a Decoder": [[30, "adding-plugins-to-a-decoder"]], "Pixel Data Decoder Options": [[29, "pixel-data-decoder-options"]], "Image Pixel Options": [[29, "image-pixel-options"]], "Image Processing Options": [[29, "image-processing-options"]], "Miscellaneous Options": [[29, "miscellaneous-options"]], "Decoding Plugin Options": [[29, "decoding-plugin-options"]], "RLE Lossless": [[29, "rle-lossless"]], "Pixel Data Encoder Plugins": [[34, "pixel-data-encoder-plugins"]], "Adding Plugins to an Encoder": [[34, "adding-plugins-to-an-encoder"]], "Pixel Data Decoding": [[31, "pixel-data-decoding"], [533, "pixel-data-decoding"]], "Handling of compressed pixel data": [[47, "handling-of-compressed-pixel-data"]], "Preconditions": [[47, "preconditions"]], "Supported Transfer Syntaxes": [[47, "supported-transfer-syntaxes"], [46, "supported-transfer-syntaxes"]], "Usage": [[47, "usage"], [70, "usage"]], "Guides": [[40, "guides"]], "pydicom documentation": [[42, "pydicom-documentation"]], "Getting Started": [[42, "getting-started"]], "User Guide": [[42, "user-guide"]], "Examples": [[42, "examples"], [36, "examples"], [38, "examples"], [37, "examples"]], "API Reference": [[42, "api-reference"], [530, "api-reference"]], "Compressing Pixel Data": [[46, "compressing-pixel-data"], [569, "compressing-pixel-data"]], "Compressing using pydicom": [[46, "compressing-using-pydicom"], [569, "compressing-using-pydicom"]], "Compressing with Dataset.compress()": [[46, "compressing-with-dataset-compress"]], "Compressing using third-party packages": [[46, "compressing-using-third-party-packages"]], "JPEG 2000 Encoding": [[36, "jpeg-2000-encoding"]], "Valid Image Pixel Parameters": [[36, "valid-image-pixel-parameters"], [38, "valid-image-pixel-parameters"], [37, "valid-image-pixel-parameters"]], "Photometric Interpretation": [[36, "photometric-interpretation"], [37, "photometric-interpretation"]], "Bits Stored": [[36, "bits-stored"]], "JPEG 2000 Lossless": [[36, "jpeg-2000-lossless"]], "JPEG 2000": [[36, "jpeg-2000"]], "Available Plugins": [[36, "available-plugins"], [38, "available-plugins"], [37, "available-plugins"]], "Writing documentation": [[41, "writing-documentation"]], "Types of documentation": [[41, "types-of-documentation"]], "General style guidelines": [[41, "general-style-guidelines"]], "Guidelines for reStructuredText": [[41, "guidelines-for-restructuredtext"]], "Best Practices": [[44, "best-practices"]], "Enforcing Valid DICOM": [[44, "enforcing-valid-dicom"]], "Future-proofing your code": [[44, "future-proofing-your-code"]], "Limiting the pydicom major version in your package": [[44, "limiting-the-pydicom-major-version-in-your-package"]], "Glossary": [[39, "glossary"]], "File Meta Information": [[39, "file-meta-information"]], "Image Pixel Module": [[39, "image-pixel-module"]], "Introduction to pydicom": [[45, "introduction-to-pydicom"]], "License": [[45, "license"]], "Installing": [[45, "installing"]], "Using pydicom": [[45, "using-pydicom"]], "Support": [[45, "support"]], "Next Steps": [[45, "next-steps"]], "Core elements in pydicom": [[43, "core-elements-in-pydicom"]], "Dataset": [[43, "dataset"]], "DataElement": [[43, "dataelement"]], "Tag": [[43, "tag"]], "Sequence": [[43, "sequence"]], "RLE Lossless Encoding": [[38, "rle-lossless-encoding"]], "JPEG-LS Encoding": [[37, "jpeg-ls-encoding"]], "Pixel Representation": [[37, "pixel-representation"]], "Planar Configuration": [[37, "planar-configuration"]], "JPEG-LS Lossless": [[37, "jpeg-ls-lossless"]], "JPEG-LS Near-lossless": [[37, "jpeg-ls-near-lossless"]], "Working with Pixel Data": [[53, "working-with-pixel-data"]], "Dataset.pixel_array": [[53, "dataset-pixel-array"]], "Color space": [[53, "color-space"]], "Palette Color": [[53, "palette-color"]], "Modality LUT or Rescale Operation": [[53, "modality-lut-or-rescale-operation"]], "VOI LUT or Windowing Operation": [[53, "voi-lut-or-windowing-operation"]], "Working with Waveform Data": [[54, "working-with-waveform-data"]], "Dataset.waveform_array()": [[54, "dataset-waveform-array"]], "Reading and writing DICOM files": [[50, "reading-and-writing-dicom-files"]], "File Reading/Parsing": [[50, "file-reading-parsing"]], "File Writing": [[50, "file-writing"]], "Writing DICOM Files": [[55, "writing-dicom-files"]], "Using Codify": [[55, "using-codify"]], "Writing a file from Scratch": [[55, "writing-a-file-from-scratch"]], "Working with Overlay Data": [[52, "working-with-overlay-data"]], "Dataset.overlay_array()": [[52, "dataset-overlay-array"]], "pydicom User Guide": [[49, "pydicom-user-guide"]], "Character Encoding and Decoding (pydicom.charset)": [[56, "character-encoding-and-decoding-pydicom-charset"]], "Viewing Images": [[51, "viewing-images"]], "Using pydicom with matplotlib": [[51, "using-pydicom-with-matplotlib"]], "Using pydicom with Tkinter": [[51, "using-pydicom-with-tkinter"]], "Using pydicom with Python Imaging Library (PIL)": [[51, "using-pydicom-with-python-imaging-library-pil"]], "Using pydicom with wxPython": [[51, "using-pydicom-with-wxpython"]], "Private Data Elements": [[48, "private-data-elements"]], "Displaying Private Data Elements in pydicom": [[48, "displaying-private-data-elements-in-pydicom"]], "Setting Private Data Elements with pydicom": [[48, "setting-private-data-elements-with-pydicom"]], "Removing All Private Data Elements": [[48, "removing-all-private-data-elements"]], "Adding new entries to the DICOM dictionary": [[48, "adding-new-entries-to-the-dicom-dictionary"]], "Getting Included Datasets (pydicom.data)": [[58, "getting-included-datasets-pydicom-data"]], "Configuration Options (pydicom.config)": [[57, "configuration-options-pydicom-config"]], "Data Dictionary Utilities (pydicom.datadict)": [[59, "data-dictionary-utilities-pydicom-datadict"]], "DICOM Data Dictionary": [[59, "dicom-data-dictionary"]], "Private Data Dictionary": [[59, "private-data-dictionary"]], "Data Elements (pydicom.dataelem)": [[62, "data-elements-pydicom-dataelem"]], "Example Datasets (pydicom.examples)": [[70, "example-datasets-pydicom-examples"]], "Element Multi-value Representation (pydicom.multival)": [[63, "element-multi-value-representation-pydicom-multival"]], "Sequence Element Value Representation (pydicom.sequence)": [[64, "sequence-element-value-representation-pydicom-sequence"]], "Element Tags (pydicom.tag)": [[65, "element-tags-pydicom-tag"]], "Element Value Decoding (pydicom.values)": [[67, "element-value-decoding-pydicom-values"]], "Exceptions (pydicom.errors)": [[69, "exceptions-pydicom-errors"]], "Representation of Data Elements": [[61, "representation-of-data-elements"]], "Bulk Data Encapsulation Utilities (pydicom.encaps)": [[68, "bulk-data-encapsulation-utilities-pydicom-encaps"]], "Parsing Encapsulated Data": [[68, "parsing-encapsulated-data"]], "Creating Encapsulated Data": [[68, "creating-encapsulated-data"]], "Dataset IO": [[71, "dataset-io"]], "Representation of Datasets (pydicom.dataset)": [[60, "representation-of-datasets-pydicom-dataset"]], "Specialized Element Value Representation (pydicom.valuerep)": [[66, "specialized-element-value-representation-pydicom-valuerep"]], "IO Base Classes (pydicom.filebase)": [[72, "io-base-classes-pydicom-filebase"]], "DICOM File-sets (pydicom.fileset)": [[76, "dicom-file-sets-pydicom-fileset"]], "pydicom.config.APPLY_J2K_CORRECTIONS": [[81, "pydicom-config-apply-j2k-corrections"]], "pydicom.charset.encode_string": [[80, "pydicom-charset-encode-string"]], "pydicom.charset.convert_encodings": [[77, "pydicom-charset-convert-encodings"]], "pydicom.config.DS_numpy": [[83, "pydicom-config-ds-numpy"]], "IO Utilities (pydicom.fileutil)": [[74, "io-utilities-pydicom-fileutil"]], "Dataset Writing (pydicom.filewriter)": [[75, "dataset-writing-pydicom-filewriter"]], "pydicom.config.DS_decimal": [[82, "pydicom-config-ds-decimal"]], "pydicom.charset.decode_bytes": [[78, "pydicom-charset-decode-bytes"]], "pydicom.charset.decode_element": [[79, "pydicom-charset-decode-element"]], "Dataset Reading (pydicom.filereader)": [[73, "dataset-reading-pydicom-filereader"]], "pydicom.datadict.dictionary_has_tag": [[116, "pydicom-datadict-dictionary-has-tag"]], "pydicom.datadict.dictionary_VM": [[113, "pydicom-datadict-dictionary-vm"]], "pydicom.data.get_testdata_files": [[108, "pydicom-data-get-testdata-files"]], "pydicom.datadict.add_dict_entries": [[109, "pydicom-datadict-add-dict-entries"]], "pydicom.datadict.add_dict_entry": [[110, "pydicom-datadict-add-dict-entry"]], "pydicom.datadict.add_private_dict_entries": [[111, "pydicom-datadict-add-private-dict-entries"]], "pydicom.datadict.add_private_dict_entry": [[112, "pydicom-datadict-add-private-dict-entry"]], "pydicom.datadict.dictionary_VR": [[114, "pydicom-datadict-dictionary-vr"]], "pydicom.datadict.get_entry": [[119, "pydicom-datadict-get-entry"]], "pydicom.datadict.dictionary_is_retired": [[117, "pydicom-datadict-dictionary-is-retired"]], "pydicom.datadict.dictionary_keyword": [[118, "pydicom-datadict-dictionary-keyword"]], "pydicom.datadict.dictionary_description": [[115, "pydicom-datadict-dictionary-description"]], "pydicom.dataelem.DataElement": [[129, "pydicom-dataelem-dataelement"]], "pydicom.datadict.mask_match": [[122, "pydicom-datadict-mask-match"]], "pydicom.datadict.repeater_has_keyword": [[126, "pydicom-datadict-repeater-has-keyword"]], "pydicom.datadict.tag_for_keyword": [[128, "pydicom-datadict-tag-for-keyword"]], "pydicom.dataelem.RawDataElement": [[131, "pydicom-dataelem-rawdataelement"]], "pydicom.datadict.keyword_for_tag": [[121, "pydicom-datadict-keyword-for-tag"]], "pydicom.datadict.get_private_entry": [[120, "pydicom-datadict-get-private-entry"]], "pydicom.datadict.repeater_has_tag": [[127, "pydicom-datadict-repeater-has-tag"]], "pydicom.dataelem.DataElement_from_raw": [[130, "pydicom-dataelem-dataelement-from-raw"]], "pydicom.datadict.private_dictionary_description": [[125, "pydicom-datadict-private-dictionary-description"]], "pydicom.datadict.private_dictionary_VR": [[124, "pydicom-datadict-private-dictionary-vr"]], "pydicom.datadict.private_dictionary_VM": [[123, "pydicom-datadict-private-dictionary-vm"]], "pydicom.encaps.get_frame_offsets": [[149, "pydicom-encaps-get-frame-offsets"]], "pydicom.encaps.generate_frames": [[144, "pydicom-encaps-generate-frames"]], "pydicom.encaps.parse_basic_offsets": [[152, "pydicom-encaps-parse-basic-offsets"]], "pydicom.encaps.read_item": [[154, "pydicom-encaps-read-item"]], "pydicom.encaps.generate_pixel_data": [[145, "pydicom-encaps-generate-pixel-data"]], "pydicom.encaps.itemize_fragment": [[150, "pydicom-encaps-itemize-fragment"]], "pydicom.encaps.itemize_frame": [[151, "pydicom-encaps-itemize-frame"]], "pydicom.errors.InvalidDicomError": [[155, "pydicom-errors-invaliddicomerror"]], "pydicom.encaps.generate_pixel_data_fragment": [[146, "pydicom-encaps-generate-pixel-data-fragment"]], "pydicom.encaps.generate_pixel_data_frame": [[147, "pydicom-encaps-generate-pixel-data-frame"]], "pydicom.encaps.parse_fragments": [[153, "pydicom-encaps-parse-fragments"]], "pydicom.encaps.get_frame": [[148, "pydicom-encaps-get-frame"]], "pydicom.filereader.data_element_offset_to_value": [[161, "pydicom-filereader-data-element-offset-to-value"]], "pydicom.filereader.read_file_meta_info": [[165, "pydicom-filereader-read-file-meta-info"]], "pydicom.filereader.read_preamble": [[167, "pydicom-filereader-read-preamble"]], "pydicom.filereader.read_deferred_data_element": [[164, "pydicom-filereader-read-deferred-data-element"]], "pydicom.filereader.data_element_generator": [[160, "pydicom-filereader-data-element-generator"]], "pydicom.filebase.DicomBytesIO": [[156, "pydicom-filebase-dicombytesio"]], "pydicom.filereader.read_dataset": [[163, "pydicom-filereader-read-dataset"]], "pydicom.filereader.read_partial": [[166, "pydicom-filereader-read-partial"]], "pydicom.filebase.DicomFile": [[157, "pydicom-filebase-dicomfile"]], "pydicom.filebase.DicomIO": [[159, "pydicom-filebase-dicomio"]], "pydicom.filebase.DicomFileLike": [[158, "pydicom-filebase-dicomfilelike"]], "pydicom.filereader.dcmread": [[162, "pydicom-filereader-dcmread"]], "pydicom.fileutil.find_bytes": [[177, "pydicom-fileutil-find-bytes"]], "pydicom.fileutil.find_delimiter": [[178, "pydicom-fileutil-find-delimiter"]], "pydicom.fileset.FileSet": [[172, "pydicom-fileset-fileset"]], "pydicom.fileset.is_conformant_file_id": [[175, "pydicom-fileset-is-conformant-file-id"]], "pydicom.fileutil.length_of_undefined_length": [[179, "pydicom-fileutil-length-of-undefined-length"]], "pydicom.fileutil.absorb_delimiter_item": [[176, "pydicom-fileutil-absorb-delimiter-item"]], "pydicom.fileset.DIRECTORY_RECORDERS": [[170, "pydicom-fileset-directory-recorders"]], "pydicom.fileset.generate_filename": [[174, "pydicom-fileset-generate-filename"]], "pydicom.filereader.read_sequence": [[168, "pydicom-filereader-read-sequence"]], "pydicom.fileset.RecordNode": [[173, "pydicom-fileset-recordnode"]], "pydicom.fileset.FileInstance": [[171, "pydicom-fileset-fileinstance"]], "pydicom.filereader.read_sequence_item": [[169, "pydicom-filereader-read-sequence-item"]], "pydicom.filewriter.write_ATvalue": [[185, "pydicom-filewriter-write-atvalue"]], "pydicom.filewriter.write_OBvalue": [[188, "pydicom-filewriter-write-obvalue"]], "pydicom.filewriter.write_TM": [[191, "pydicom-filewriter-write-tm"]], "pydicom.filewriter.dcmwrite": [[183, "pydicom-filewriter-dcmwrite"]], "pydicom.filewriter.write_DT": [[187, "pydicom-filewriter-write-dt"]], "pydicom.filewriter.write_OWvalue": [[189, "pydicom-filewriter-write-owvalue"]], "pydicom.filewriter.write_PN": [[190, "pydicom-filewriter-write-pn"]], "pydicom.fileutil.read_undefined_length_value": [[180, "pydicom-fileutil-read-undefined-length-value"]], "pydicom.filewriter.write_DA": [[186, "pydicom-filewriter-write-da"]], "pydicom.filewriter.multi_string": [[184, "pydicom-filewriter-multi-string"]], "pydicom.filewriter.correct_ambiguous_vr": [[181, "pydicom-filewriter-correct-ambiguous-vr"]], "pydicom.filewriter.correct_ambiguous_vr_element": [[182, "pydicom-filewriter-correct-ambiguous-vr-element"]], "pydicom.filewriter.write_UN": [[193, "pydicom-filewriter-write-un"]], "pydicom.filewriter.write_sequence": [[199, "pydicom-filewriter-write-sequence"]], "pydicom.filewriter.write_string": [[201, "pydicom-filewriter-write-string"]], "pydicom.filewriter.write_number_string": [[197, "pydicom-filewriter-write-number-string"]], "pydicom.filewriter.write_data_element": [[194, "pydicom-filewriter-write-data-element"]], "pydicom.filewriter.write_numbers": [[198, "pydicom-filewriter-write-numbers"]], "pydicom.filewriter.write_dataset": [[195, "pydicom-filewriter-write-dataset"]], "pydicom.filewriter.write_file_meta_info": [[196, "pydicom-filewriter-write-file-meta-info"]], "pydicom.misc.is_dicom": [[203, "pydicom-misc-is-dicom"]], "pydicom.filewriter.write_text": [[202, "pydicom-filewriter-write-text"]], "pydicom.filewriter.write_UI": [[192, "pydicom-filewriter-write-ui"]], "pydicom.filewriter.write_sequence_item": [[200, "pydicom-filewriter-write-sequence-item"]], "pydicom.pixel_data_handlers.convert_color_space": [[213, "pydicom-pixel-data-handlers-convert-color-space"]], "pydicom.pixel_data_handlers.apply_color_lut": [[207, "pydicom-pixel-data-handlers-apply-color-lut"]], "pydicom.pixel_data_handlers.gdcm_handler": [[214, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[215, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "pydicom.pixel_data_handlers.apply_modality_lut": [[208, "pydicom-pixel-data-handlers-apply-modality-lut"]], "pydicom.pixel_data_handlers.apply_voi_lut": [[211, "pydicom-pixel-data-handlers-apply-voi-lut"]], "pydicom.pixel_data_handlers.apply_voi": [[210, "pydicom-pixel-data-handlers-apply-voi"]], "pydicom.pixel_data_handlers.apply_rescale": [[209, "pydicom-pixel-data-handlers-apply-rescale"]], "pydicom.overlays.numpy_handler": [[206, "module-pydicom.overlays.numpy_handler"]], "pydicom.pixel_data_handlers.apply_windowing": [[212, "pydicom-pixel-data-handlers-apply-windowing"]], "pydicom.misc.size_in_bytes": [[204, "pydicom-misc-size-in-bytes"]], "pydicom.multival.MultiValue": [[205, "pydicom-multival-multivalue"]], "pydicom.pixels.decoders.base.JPEGLosslessDecoder": [[237, "pydicom-pixels-decoders-base-jpeglosslessdecoder"]], "pydicom.pixels.decoders.base.JPEGLSLosslessDecoder": [[235, "pydicom-pixels-decoders-base-jpeglslosslessdecoder"]], "pydicom.pixels.decoders.base.JPEG2000LosslessDecoder": [[232, "pydicom-pixels-decoders-base-jpeg2000losslessdecoder"]], "pydicom.pixels.decoders.base.HTJ2KLosslessRPCLDecoder": [[229, "pydicom-pixels-decoders-base-htj2klosslessrpcldecoder"]], "pydicom.pixels.decoders.base.JPEGLSNearLosslessDecoder": [[236, "pydicom-pixels-decoders-base-jpeglsnearlosslessdecoder"]], "pydicom.pixels.decoders.base.JPEG2000Decoder": [[231, "pydicom-pixels-decoders-base-jpeg2000decoder"]], "pydicom.pixels.decoders.base.JPEGBaseline8BitDecoder": [[233, "pydicom-pixels-decoders-base-jpegbaseline8bitdecoder"]], "pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder": [[230, "pydicom-pixels-decoders-base-implicitvrlittleendiandecoder"]], "pydicom.pixels.decoders.base.JPEGExtended12BitDecoder": [[234, "pydicom-pixels-decoders-base-jpegextended12bitdecoder"]], "pydicom.pixels.decoders.base.RLELosslessDecoder": [[239, "pydicom-pixels-decoders-base-rlelosslessdecoder"]], "pydicom.pixels.decoders.base.JPEGLosslessSV1Decoder": [[238, "pydicom-pixels-decoders-base-jpeglosslesssv1decoder"]], "pydicom.pixels.decoders.base.HTJ2KLosslessDecoder": [[228, "pydicom-pixels-decoders-base-htj2klosslessdecoder"]], "pydicom.pixels.encoders.base.JPEG2000Encoder": [[242, "pydicom-pixels-encoders-base-jpeg2000encoder"]], "pydicom.pixels.encoders.base.JPEGLSLosslessEncoder": [[244, "pydicom-pixels-encoders-base-jpeglslosslessencoder"]], "pydicom.pixels.encoders.base.EncodeRunner": [[240, "pydicom-pixels-encoders-base-encoderunner"]], "pydicom.sequence.Sequence": [[251, "pydicom-sequence-sequence"]], "pydicom.pixels.pixel_array": [[250, "pydicom-pixels-pixel-array"]], "pydicom.pixels.iter_pixels": [[249, "pydicom-pixels-iter-pixels"]], "pydicom.pixels.encoders.base.Encoder": [[241, "pydicom-pixels-encoders-base-encoder"]], "pydicom.pixels.encoders.base.JPEGLSNearLosslessEncoder": [[245, "pydicom-pixels-encoders-base-jpeglsnearlosslessencoder"]], "pydicom.pixels.encoders.base.RLELosslessEncoder": [[246, "pydicom-pixels-encoders-base-rlelosslessencoder"]], "pydicom.pixels.get_decoder": [[247, "pydicom-pixels-get-decoder"]], "pydicom.pixels.get_encoder": [[248, "pydicom-pixels-get-encoder"]], "pydicom.pixels.encoders.base.JPEG2000LosslessEncoder": [[243, "pydicom-pixels-encoders-base-jpeg2000losslessencoder"]], "pydicom.uid.BasicStructuredDisplayStorage": [[262, "pydicom-uid-basicstructureddisplaystorage"]], "pydicom.uid.BasicTextSRStorage": [[263, "pydicom-uid-basictextsrstorage"]], "pydicom.tag.TupleTag": [[254, "pydicom-tag-tupletag"]], "pydicom.uid.AmbulatoryECGWaveformStorage": [[259, "pydicom-uid-ambulatoryecgwaveformstorage"]], "pydicom.uid.AllTransferSyntaxes": [[258, "pydicom-uid-alltransfersyntaxes"]], "pydicom.uid.AcquisitionContextSRStorage": [[256, "pydicom-uid-acquisitioncontextsrstorage"]], "pydicom.uid.AdvancedBlendingPresentationStateStorage": [[257, "pydicom-uid-advancedblendingpresentationstatestorage"]], "pydicom.uid.ArterialPulseWaveformStorage": [[260, "pydicom-uid-arterialpulsewaveformstorage"]], "pydicom.tag.BaseTag": [[252, "pydicom-tag-basetag"]], "pydicom.tag.Tag": [[253, "pydicom-tag-tag"]], "pydicom.uid.AutorefractionMeasurementsStorage": [[261, "pydicom-uid-autorefractionmeasurementsstorage"]], "pydicom.tag.tag_in_exception": [[255, "pydicom-tag-tag-in-exception"]], "pydicom.uid.BasicVoiceAudioWaveformStorage": [[264, "pydicom-uid-basicvoiceaudiowaveformstorage"]], "pydicom.uid.CTPerformedProcedureProtocolStorage": [[274, "pydicom-uid-ctperformedprocedureprotocolstorage"]], "pydicom.uid.CArmPhotonElectronRadiationStorage": [[271, "pydicom-uid-carmphotonelectronradiationstorage"]], "pydicom.uid.BodyPositionWaveformStorage": [[266, "pydicom-uid-bodypositionwaveformstorage"]], "pydicom.uid.CArmPhotonElectronRadiationRecordStorage": [[270, "pydicom-uid-carmphotonelectronradiationrecordstorage"]], "pydicom.uid.BreastProjectionXRayImageStorageForProcessing": [[268, "pydicom-uid-breastprojectionxrayimagestorageforprocessing"]], "pydicom.uid.CardiacElectrophysiologyWaveformStorage": [[275, "pydicom-uid-cardiacelectrophysiologywaveformstorage"]], "pydicom.uid.BlendingSoftcopyPresentationStateStorage": [[265, "pydicom-uid-blendingsoftcopypresentationstatestorage"]], "pydicom.uid.BreastTomosynthesisImageStorage": [[269, "pydicom-uid-breasttomosynthesisimagestorage"]], "pydicom.uid.CTDefinedProcedureProtocolStorage": [[272, "pydicom-uid-ctdefinedprocedureprotocolstorage"]], "pydicom.uid.BreastProjectionXRayImageStorageForPresentation": [[267, "pydicom-uid-breastprojectionxrayimagestorageforpresentation"]], "pydicom.uid.CTImageStorage": [[273, "pydicom-uid-ctimagestorage"]], "pydicom.uid.CornealTopographyMapStorage": [[287, "pydicom-uid-cornealtopographymapstorage"]], "pydicom.uid.ConfocalMicroscopyImageStorage": [[284, "pydicom-uid-confocalmicroscopyimagestorage"]], "pydicom.uid.ColonCADSRStorage": [[277, "pydicom-uid-coloncadsrstorage"]], "pydicom.uid.ComprehensiveSRStorage": [[282, "pydicom-uid-comprehensivesrstorage"]], "pydicom.uid.ChestCADSRStorage": [[276, "pydicom-uid-chestcadsrstorage"]], "pydicom.uid.ColorSoftcopyPresentationStateStorage": [[279, "pydicom-uid-colorsoftcopypresentationstatestorage"]], "pydicom.uid.ColorPaletteStorage": [[278, "pydicom-uid-colorpalettestorage"]], "pydicom.uid.ComputedRadiographyImageStorage": [[283, "pydicom-uid-computedradiographyimagestorage"]], "pydicom.uid.ContentAssessmentResultsStorage": [[286, "pydicom-uid-contentassessmentresultsstorage"]], "pydicom.uid.Comprehensive3DSRStorage": [[281, "pydicom-uid-comprehensive3dsrstorage"]], "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage": [[285, "pydicom-uid-confocalmicroscopytiledpyramidalimagestorage"]], "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage": [[280, "pydicom-uid-compositingplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing": [[292, "pydicom-uid-dicosdigitalxrayimagestorageforprocessing"]], "pydicom.uid.DICOS3DAITStorage": [[289, "pydicom-uid-dicos3daitstorage"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing": [[299, "pydicom-uid-digitalintraoralxrayimagestorageforprocessing"]], "pydicom.uid.DeformableSpatialRegistrationStorage": [[296, "pydicom-uid-deformablespatialregistrationstorage"]], "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation": [[291, "pydicom-uid-dicosdigitalxrayimagestorageforpresentation"]], "pydicom.uid.DICOSCTImageStorage": [[290, "pydicom-uid-dicosctimagestorage"]], "pydicom.uid.DICOSQuadrupoleResonanceStorage": [[293, "pydicom-uid-dicosquadrupoleresonancestorage"]], "pydicom.uid.DICOSThreatDetectionReportStorage": [[294, "pydicom-uid-dicosthreatdetectionreportstorage"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation": [[298, "pydicom-uid-digitalintraoralxrayimagestorageforpresentation"]], "pydicom.uid.DICOS2DAITStorage": [[288, "pydicom-uid-dicos2daitstorage"]], "pydicom.uid.DermoscopicPhotographyImageStorage": [[297, "pydicom-uid-dermoscopicphotographyimagestorage"]], "pydicom.uid.DeflatedExplicitVRLittleEndian": [[295, "pydicom-uid-deflatedexplicitvrlittleendian"]], "pydicom.uid.EddyCurrentImageStorage": [[304, "pydicom-uid-eddycurrentimagestorage"]], "pydicom.uid.DigitalXRayImageStorageForProcessing": [[303, "pydicom-uid-digitalxrayimagestorageforprocessing"]], "pydicom.uid.EncapsulatedCDAStorage": [[308, "pydicom-uid-encapsulatedcdastorage"]], "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation": [[300, "pydicom-uid-digitalmammographyxrayimagestorageforpresentation"]], "pydicom.uid.EncapsulatedMTLStorage": [[309, "pydicom-uid-encapsulatedmtlstorage"]], "pydicom.uid.ElectromyogramWaveformStorage": [[306, "pydicom-uid-electromyogramwaveformstorage"]], "pydicom.uid.DigitalXRayImageStorageForPresentation": [[302, "pydicom-uid-digitalxrayimagestorageforpresentation"]], "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing": [[301, "pydicom-uid-digitalmammographyxrayimagestorageforprocessing"]], "pydicom.uid.EncapsulatedOBJStorage": [[310, "pydicom-uid-encapsulatedobjstorage"]], "pydicom.uid.ElectrooculogramWaveformStorage": [[307, "pydicom-uid-electrooculogramwaveformstorage"]], "pydicom.uid.EncapsulatedPDFStorage": [[311, "pydicom-uid-encapsulatedpdfstorage"]], "pydicom.uid.EddyCurrentMultiFrameImageStorage": [[305, "pydicom-uid-eddycurrentmultiframeimagestorage"]], "pydicom.pixel_data_handlers.pillow_handler": [[217, "module-pydicom.pixel_data_handlers.pillow_handler"]], "pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder": [[226, "pydicom-pixels-decoders-base-explicitvrlittleendiandecoder"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[218, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder": [[224, "pydicom-pixels-decoders-base-deflatedexplicitvrlittleendiandecoder"]], "pydicom.pixels.as_pixel_options": [[221, "pydicom-pixels-as-pixel-options"]], "pydicom.pixel_data_handlers.rle_handler": [[219, "module-pydicom.pixel_data_handlers.rle_handler"]], "pydicom.pixel_data_handlers.util": [[220, "module-pydicom.pixel_data_handlers.util"]], "pydicom.pixels.decoders.base.DecodeRunner": [[222, "pydicom-pixels-decoders-base-decoderunner"]], "pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder": [[225, "pydicom-pixels-decoders-base-explicitvrbigendiandecoder"]], "pydicom.pixel_data_handlers.numpy_handler": [[216, "module-pydicom.pixel_data_handlers.numpy_handler"]], "pydicom.pixels.decoders.base.Decoder": [[223, "pydicom-pixels-decoders-base-decoder"]], "pydicom.pixels.decoders.base.HTJ2KDecoder": [[227, "pydicom-pixels-decoders-base-htj2kdecoder"]], "pydicom.uid.EnhancedContinuousRTImageStorage": [[314, "pydicom-uid-enhancedcontinuousrtimagestorage"]], "pydicom.uid.EncapsulatedSTLStorage": [[312, "pydicom-uid-encapsulatedstlstorage"]], "pydicom.uid.EnhancedRTImageStorage": [[318, "pydicom-uid-enhancedrtimagestorage"]], "pydicom.uid.EnhancedCTImageStorage": [[313, "pydicom-uid-enhancedctimagestorage"]], "pydicom.uid.EnhancedMRImageStorage": [[316, "pydicom-uid-enhancedmrimagestorage"]], "pydicom.uid.EnhancedSRStorage": [[319, "pydicom-uid-enhancedsrstorage"]], "pydicom.uid.EnhancedUSVolumeStorage": [[320, "pydicom-uid-enhancedusvolumestorage"]], "pydicom.uid.EnhancedMRColorImageStorage": [[315, "pydicom-uid-enhancedmrcolorimagestorage"]], "pydicom.uid.EnhancedXAImageStorage": [[321, "pydicom-uid-enhancedxaimagestorage"]], "pydicom.uid.EnhancedPETImageStorage": [[317, "pydicom-uid-enhancedpetimagestorage"]], "pydicom.uid.EnhancedXRFImageStorage": [[322, "pydicom-uid-enhancedxrfimagestorage"]], "pydicom.uid.EnhancedXRayRadiationDoseSRStorage": [[323, "pydicom-uid-enhancedxrayradiationdosesrstorage"]], "pydicom.uid.HTJ2K": [[335, "pydicom-uid-htj2k"]], "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage": [[331, "pydicom-uid-grayscaleplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage": [[332, "pydicom-uid-grayscalesoftcopypresentationstatestorage"]], "pydicom.uid.General32bitECGWaveformStorage": [[327, "pydicom-uid-general32bitecgwaveformstorage"]], "pydicom.uid.ExplicitVRLittleEndian": [[325, "pydicom-uid-explicitvrlittleendian"]], "pydicom.uid.GeneralECGWaveformStorage": [[329, "pydicom-uid-generalecgwaveformstorage"]], "pydicom.uid.HEVCMP51": [[334, "pydicom-uid-hevcmp51"]], "pydicom.uid.HEVCM10P51": [[333, "pydicom-uid-hevcm10p51"]], "pydicom.uid.ExtensibleSRStorage": [[326, "pydicom-uid-extensiblesrstorage"]], "pydicom.uid.GeneralAudioWaveformStorage": [[328, "pydicom-uid-generalaudiowaveformstorage"]], "pydicom.uid.ExplicitVRBigEndian": [[324, "pydicom-uid-explicitvrbigendian"]], "pydicom.uid.GenericImplantTemplateStorage": [[330, "pydicom-uid-genericimplanttemplatestorage"]], "pydicom.uid.HangingProtocolStorage": [[338, "pydicom-uid-hangingprotocolstorage"]], "pydicom.uid.ImplicitVRLittleEndian": [[343, "pydicom-uid-implicitvrlittleendian"]], "pydicom.uid.ImplantTemplateGroupStorage": [[341, "pydicom-uid-implanttemplategroupstorage"]], "pydicom.uid.HTJ2KLossless": [[336, "pydicom-uid-htj2klossless"]], "pydicom.uid.IntraocularLensCalculationsStorage": [[344, "pydicom-uid-intraocularlenscalculationsstorage"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing": [[346, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforprocessing"]], "pydicom.uid.ImplantationPlanSRStorage": [[342, "pydicom-uid-implantationplansrstorage"]], "pydicom.uid.InventoryStorage": [[347, "pydicom-uid-inventorystorage"]], "pydicom.uid.ImplantAssemblyTemplateStorage": [[340, "pydicom-uid-implantassemblytemplatestorage"]], "pydicom.uid.HemodynamicWaveformStorage": [[339, "pydicom-uid-hemodynamicwaveformstorage"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation": [[345, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforpresentation"]], "pydicom.uid.HTJ2KLosslessRPCL": [[337, "pydicom-uid-htj2klosslessrpcl"]], "pydicom.uid.JPEGBaseline8Bit": [[353, "pydicom-uid-jpegbaseline8bit"]], "pydicom.uid.JPEGLSTransferSyntaxes": [[357, "pydicom-uid-jpeglstransfersyntaxes"]], "pydicom.uid.JPEGLossless": [[358, "pydicom-uid-jpeglossless"]], "pydicom.uid.JPEG2000TransferSyntaxes": [[352, "pydicom-uid-jpeg2000transfersyntaxes"]], "pydicom.uid.JPEG2000MCLossless": [[351, "pydicom-uid-jpeg2000mclossless"]], "pydicom.uid.JPEGExtended12Bit": [[354, "pydicom-uid-jpegextended12bit"]], "pydicom.uid.JPEGLSLossless": [[355, "pydicom-uid-jpeglslossless"]], "pydicom.uid.JPEG2000MC": [[350, "pydicom-uid-jpeg2000mc"]], "pydicom.uid.JPEG2000": [[348, "pydicom-uid-jpeg2000"]], "pydicom.uid.JPEG2000Lossless": [[349, "pydicom-uid-jpeg2000lossless"]], "pydicom.uid.JPEGLSNearLossless": [[356, "pydicom-uid-jpeglsnearlossless"]], "pydicom.uid.JPEGLosslessSV1": [[359, "pydicom-uid-jpeglosslesssv1"]], "pydicom.uid.MPEG2MPML": [[371, "pydicom-uid-mpeg2mpml"]], "pydicom.uid.MPEG2MPHL": [[369, "pydicom-uid-mpeg2mphl"]], "pydicom.uid.JPEGTransferSyntaxes": [[360, "pydicom-uid-jpegtransfersyntaxes"]], "pydicom.uid.LegacyConvertedEnhancedMRImageStorage": [[366, "pydicom-uid-legacyconvertedenhancedmrimagestorage"]], "pydicom.uid.JPIPHTJ2KReferencedDeflate": [[362, "pydicom-uid-jpiphtj2kreferenceddeflate"]], "pydicom.uid.LegacyConvertedEnhancedPETImageStorage": [[367, "pydicom-uid-legacyconvertedenhancedpetimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedCTImageStorage": [[365, "pydicom-uid-legacyconvertedenhancedctimagestorage"]], "pydicom.uid.LensometryMeasurementsStorage": [[368, "pydicom-uid-lensometrymeasurementsstorage"]], "pydicom.uid.KeyObjectSelectionDocumentStorage": [[364, "pydicom-uid-keyobjectselectiondocumentstorage"]], "pydicom.uid.MPEG2MPHLF": [[370, "pydicom-uid-mpeg2mphlf"]], "pydicom.uid.KeratometryMeasurementsStorage": [[363, "pydicom-uid-keratometrymeasurementsstorage"]], "pydicom.uid.JPIPHTJ2KReferenced": [[361, "pydicom-uid-jpiphtj2kreferenced"]], "pydicom.uid.MPEG4HP422DF": [[378, "pydicom-uid-mpeg4hp422df"]], "pydicom.uid.MPEG4HP41F": [[376, "pydicom-uid-mpeg4hp41f"]], "pydicom.uid.MPEG4HP41BDF": [[375, "pydicom-uid-mpeg4hp41bdf"]], "pydicom.uid.MPEGTransferSyntaxes": [[383, "pydicom-uid-mpegtransfersyntaxes"]], "pydicom.uid.MPEG4HP42STEREOF": [[382, "pydicom-uid-mpeg4hp42stereof"]], "pydicom.uid.MPEG4HP423DF": [[380, "pydicom-uid-mpeg4hp423df"]], "pydicom.uid.MPEG4HP423D": [[379, "pydicom-uid-mpeg4hp423d"]], "pydicom.uid.MPEG2MPMLF": [[372, "pydicom-uid-mpeg2mpmlf"]], "pydicom.uid.MPEG4HP42STEREO": [[381, "pydicom-uid-mpeg4hp42stereo"]], "pydicom.uid.MPEG4HP41": [[373, "pydicom-uid-mpeg4hp41"]], "pydicom.uid.MPEG4HP422D": [[377, "pydicom-uid-mpeg4hp422d"]], "pydicom.uid.MPEG4HP41BD": [[374, "pydicom-uid-mpeg4hp41bd"]], "pydicom.uid.MRImageStorage": [[384, "pydicom-uid-mrimagestorage"]], "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage": [[395, "pydicom-uid-multiplevolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.MammographyCADSRStorage": [[387, "pydicom-uid-mammographycadsrstorage"]], "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage": [[392, "pydicom-uid-multiframesinglebitsecondarycaptureimagestorage"]], "pydicom.uid.MacularGridThicknessAndVolumeReportStorage": [[386, "pydicom-uid-maculargridthicknessandvolumereportstorage"]], "pydicom.uid.MRSpectroscopyStorage": [[385, "pydicom-uid-mrspectroscopystorage"]], "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage": [[389, "pydicom-uid-microscopybulksimpleannotationsstorage"]], "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage": [[390, "pydicom-uid-multiframegrayscalebytesecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage": [[393, "pydicom-uid-multiframetruecolorsecondarycaptureimagestorage"]], "pydicom.uid.MultichannelRespiratoryWaveformStorage": [[394, "pydicom-uid-multichannelrespiratorywaveformstorage"]], "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage": [[391, "pydicom-uid-multiframegrayscalewordsecondarycaptureimagestorage"]], "pydicom.uid.MediaStorageDirectoryStorage": [[388, "pydicom-uid-mediastoragedirectorystorage"]], "pydicom.uid.ParametricMapStorage": [[407, "pydicom-uid-parametricmapstorage"]], "pydicom.uid.PYDICOM_IMPLEMENTATION_UID": [[405, "pydicom-uid-pydicom-implementation-uid"]], "pydicom.uid.OphthalmicTomographyImageStorage": [[403, "pydicom-uid-ophthalmictomographyimagestorage"]], "pydicom.uid.OphthalmicPhotography16BitImageStorage": [[400, "pydicom-uid-ophthalmicphotography16bitimagestorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage": [[398, "pydicom-uid-ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage"]], "pydicom.uid.PYDICOM_ROOT_UID": [[406, "pydicom-uid-pydicom-root-uid"]], "pydicom.uid.OphthalmicAxialMeasurementsStorage": [[397, "pydicom-uid-ophthalmicaxialmeasurementsstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage": [[399, "pydicom-uid-ophthalmicopticalcoherencetomographyenfaceimagestorage"]], "pydicom.uid.OphthalmicPhotography8BitImageStorage": [[401, "pydicom-uid-ophthalmicphotography8bitimagestorage"]], "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage": [[404, "pydicom-uid-ophthalmicvisualfieldstaticperimetrymeasurementsstorage"]], "pydicom.uid.NuclearMedicineImageStorage": [[396, "pydicom-uid-nuclearmedicineimagestorage"]], "pydicom.uid.OphthalmicThicknessMapStorage": [[402, "pydicom-uid-ophthalmicthicknessmapstorage"]], "pydicom.uid.ProcedureLogStorage": [[414, "pydicom-uid-procedurelogstorage"]], "pydicom.uid.PatientRadiationDoseSRStorage": [[408, "pydicom-uid-patientradiationdosesrstorage"]], "pydicom.uid.RLELossless": [[419, "pydicom-uid-rlelossless"]], "pydicom.uid.PlannedImagingAgentAdministrationSRStorage": [[411, "pydicom-uid-plannedimagingagentadministrationsrstorage"]], "pydicom.uid.ProtocolApprovalStorage": [[415, "pydicom-uid-protocolapprovalstorage"]], "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage": [[416, "pydicom-uid-pseudocolorsoftcopypresentationstatestorage"]], "pydicom.uid.PerformedImagingAgentAdministrationSRStorage": [[409, "pydicom-uid-performedimagingagentadministrationsrstorage"]], "pydicom.uid.RE_VALID_UID": [[417, "pydicom-uid-re-valid-uid"]], "pydicom.uid.PrivateTransferSyntaxes": [[413, "pydicom-uid-privatetransfersyntaxes"]], "pydicom.uid.PositronEmissionTomographyImageStorage": [[412, "pydicom-uid-positronemissiontomographyimagestorage"]], "pydicom.uid.PhotoacousticImageStorage": [[410, "pydicom-uid-photoacousticimagestorage"]], "pydicom.uid.RE_VALID_UID_PREFIX": [[418, "pydicom-uid-re-valid-uid-prefix"]], "pydicom.uid.RTDoseStorage": [[425, "pydicom-uid-rtdosestorage"]], "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage": [[423, "pydicom-uid-rtbrachyapplicationsetupdeliveryinstructionstorage"]], "pydicom.uid.RTImageStorage": [[426, "pydicom-uid-rtimagestorage"]], "pydicom.uid.RTPhysicianIntentStorage": [[430, "pydicom-uid-rtphysicianintentstorage"]], "pydicom.uid.RTIonBeamsTreatmentRecordStorage": [[427, "pydicom-uid-rtionbeamstreatmentrecordstorage"]], "pydicom.uid.RTBrachyTreatmentRecordStorage": [[424, "pydicom-uid-rtbrachytreatmentrecordstorage"]], "pydicom.uid.RTBeamsDeliveryInstructionStorage": [[421, "pydicom-uid-rtbeamsdeliveryinstructionstorage"]], "pydicom.uid.RLETransferSyntaxes": [[420, "pydicom-uid-rletransfersyntaxes"]], "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage": [[429, "pydicom-uid-rtpatientpositionacquisitioninstructionstorage"]], "pydicom.uid.RTIonPlanStorage": [[428, "pydicom-uid-rtionplanstorage"]], "pydicom.uid.RTPlanStorage": [[431, "pydicom-uid-rtplanstorage"]], "pydicom.uid.RTBeamsTreatmentRecordStorage": [[422, "pydicom-uid-rtbeamstreatmentrecordstorage"]], "Dataset basics: read, access, modify, write": [[564, "dataset-basics-read-access-modify-write"]], "Getting the path to the example dataset": [[564, "getting-the-path-to-the-example-dataset"]], "Reading": [[564, "reading"]], "Viewing and accessing": [[564, "viewing-and-accessing"]], "Elements": [[564, "elements"]], "Sequences": [[564, "sequences"], [564, "id1"]], "file_meta": [[564, "file-meta"]], "Modifying": [[564, "modifying"]], "Modifying elements": [[564, "modifying-elements"]], "Adding elements": [[564, "adding-elements"]], "Any category": [[564, "any-category"]], "Standard elements": [[564, "standard-elements"]], "Deleting elements": [[564, "deleting-elements"]], "Writing": [[564, "writing"]], "Next steps": [[564, "next-steps"]], "Tutorials": [[567, "tutorials"]], "Encapsulating data compressed by third-party packages": [[569, "encapsulating-data-compressed-by-third-party-packages"]], "Waveforms": [[571, "waveforms"]], "Waveforms in DICOM": [[571, "waveforms-in-dicom"]], "Decoding Waveform Data": [[571, "decoding-waveform-data"]], "Encoding Waveform Data": [[571, "encoding-waveform-data"]], "Introduction to JSON support": [[565, "introduction-to-json-support"]], "Converting a dataset into JSON format": [[565, "converting-a-dataset-into-json-format"]], "Creating a dataset from JSON": [[565, "creating-a-dataset-from-json"]], "Working with large binary data": [[565, "working-with-large-binary-data"]], "How to install pydicom": [[568, "how-to-install-pydicom"]], "Install the official release": [[568, "install-the-official-release"]], "Install using pip": [[568, "install-using-pip"]], "Install using conda": [[568, "install-using-conda"]], "Downloading example/test DICOM files": [[568, "downloading-example-test-dicom-files"]], "Install the optional libraries": [[568, "install-the-optional-libraries"]], "Installing Pillow": [[568, "installing-pillow"]], "Installing pyjpegls": [[568, "installing-pyjpegls"]], "Installing GDCM": [[568, "installing-gdcm"]], "Installing pylibjpeg": [[568, "installing-pylibjpeg"]], "Install the development version": [[568, "install-the-development-version"]], "Structured Reporting": [[570, "structured-reporting"]], "DICOM File-sets and DICOMDIR": [[566, "dicom-file-sets-and-dicomdir"]], "The DICOM File-set": [[566, "the-dicom-file-set"]], "The DICOMDIR file": [[566, "the-dicomdir-file"]], "FileSet": [[566, "fileset"]], "Loading existing File-sets": [[566, "loading-existing-file-sets"]], "Creating a new File-set": [[566, "creating-a-new-file-set"]], "Modifying a File-set": [[566, "modifying-a-file-set"]], "FileSet and staging": [[566, "fileset-and-staging"]], "Adding SOP instances": [[566, "adding-sop-instances"]], "Removing instances": [[566, "removing-instances"]], "Applying the changes": [[566, "applying-the-changes"]], "Conclusion": [[566, "conclusion"]], "Version 2.2.0": [[556, "version-2-2-0"], [538, "version-2-2-0"]], "Changes": [[556, "changes"], [554, "changes"], [557, "changes"], [559, "changes"], [552, "changes"], [558, "changes"], [550, "changes"], [551, "changes"], [549, "changes"], [538, "changes"], [538, "id1"], [538, "id5"], [538, "id8"], [538, "id13"], [538, "id18"], [538, "id21"], [538, "id22"], [538, "id25"]], "Enhancements": [[556, "enhancements"], [554, "enhancements"], [553, "enhancements"], [557, "enhancements"], [559, "enhancements"], [558, "enhancements"], [550, "enhancements"], [551, "enhancements"], [548, "enhancements"], [549, "enhancements"], [546, "enhancements"], [545, "enhancements"], [538, "enhancements"], [538, "id2"], [538, "id6"], [538, "id9"], [538, "id12"], [538, "id15"], [538, "id20"], [538, "id23"], [538, "id26"], [538, "id28"], [538, "id31"], [538, "id33"]], "Fixes": [[556, "fixes"], [555, "fixes"], [554, "fixes"], [553, "fixes"], [557, "fixes"], [559, "fixes"], [552, "fixes"], [558, "fixes"], [550, "fixes"], [551, "fixes"], [548, "fixes"], [549, "fixes"], [547, "fixes"], [538, "fixes"], [538, "id3"], [538, "id7"], [538, "id10"], [538, "id11"], [538, "id14"], [538, "id16"], [538, "id17"], [538, "id19"], [538, "id24"], [538, "id27"], [538, "id29"], [538, "id30"]], "Version 2.1.1": [[555, "version-2-1-1"], [538, "version-2-1-1"]], "Version 2.1.0": [[554, "version-2-1-0"], [538, "version-2-1-0"]], "Contributing a documentation change": [[563, "contributing-a-documentation-change"]], "Download the documentation": [[563, "download-the-documentation"]], "Build and preview the documentation": [[563, "build-and-preview-the-documentation"]], "Create a new branch": [[563, "create-a-new-branch"], [562, "create-a-new-branch"]], "Make a change to the documentation": [[563, "make-a-change-to-the-documentation"]], "Commit your changes and make a pull request": [[563, "commit-your-changes-and-make-a-pull-request"], [562, "commit-your-changes-and-make-a-pull-request"]], "What happens next?": [[563, "what-happens-next"], [562, "what-happens-next"]], "Version 2.0.0": [[553, "version-2-0-0"], [538, "version-2-0-0"]], "Changelog": [[553, "changelog"], [538, "changelog"]], "Contributing a source code change": [[562, "contributing-a-source-code-change"]], "Download the current source code": [[562, "download-the-current-source-code"]], "(Optional) Install required libraries": [[562, "optional-install-required-libraries"]], "Install pytest and run the test suite": [[562, "install-pytest-and-run-the-test-suite"]], "Write tests for your changes": [[562, "write-tests-for-your-changes"]], "Make a code change and document it": [[562, "make-a-code-change-and-document-it"]], "Preview your changes": [[562, "preview-your-changes"]], "Contributing to pydicom": [[561, "contributing-to-pydicom"]], "Version 2.3.0": [[557, "version-2-3-0"], [538, "version-2-3-0"]], "Version 3.0.0": [[559, "version-3-0-0"], [538, "version-3-0-0"]], "Removals": [[559, "removals"], [538, "removals"]], "Deprecations": [[559, "deprecations"], [538, "deprecations"]], "Pydicom Internals": [[559, "pydicom-internals"], [558, "pydicom-internals"], [538, "pydicom-internals"], [538, "id4"]], "Version 1.4.1": [[552, "version-1-4-1"], [538, "version-1-4-1"]], "Version 2.4.0": [[558, "version-2-4-0"], [538, "version-2-4-0"]], "Version 1.3.0": [[550, "version-1-3-0"], [538, "version-1-3-0"]], "Documentation": [[550, "documentation"], [538, "documentation"]], "Version 1.4.0": [[551, "version-1-4-0"], [538, "version-1-4-0"]], "Version 1.1.0": [[548, "version-1-1-0"], [538, "version-1-1-0"]], "Other": [[548, "other"], [542, "other"], [540, "other"], [543, "other"], [539, "other"], [538, "other"], [538, "id40"], [538, "id41"], [538, "id45"], [538, "id49"]], "Version 1.2.0": [[549, "version-1-2-0"], [538, "version-1-2-0"]], "Version 0.9.9": [[546, "version-0-9-9"], [538, "version-0-9-9"]], "Contrib file changes": [[546, "contrib-file-changes"], [545, "contrib-file-changes"], [538, "contrib-file-changes"], [538, "id34"]], "Other Contributors": [[546, "other-contributors"], [538, "other-contributors"]], "Version 0.9.8": [[545, "version-0-9-8"], [538, "version-0-9-8"]], "Major changes": [[545, "major-changes"], [544, "major-changes"], [547, "major-changes"], [540, "major-changes"], [543, "major-changes"], [539, "major-changes"], [538, "major-changes"], [538, "id32"], [538, "id35"], [538, "id38"], [538, "id42"], [538, "id46"]], "Bug fixes": [[545, "bug-fixes"], [544, "bug-fixes"], [543, "bug-fixes"], [538, "bug-fixes"], [538, "id36"], [538, "id39"]], "Version 0.9.5": [[542, "version-0-9-5"], [538, "version-0-9-5"]], "Major fixes in this release": [[542, "major-fixes-in-this-release"], [538, "major-fixes-in-this-release"]], "Other fixes in this release": [[542, "other-fixes-in-this-release"], [538, "other-fixes-in-this-release"]], "New \u2018Contrib\u2019 files": [[542, "new-contrib-files"], [538, "new-contrib-files"]], "Version 0.9.7": [[544, "version-0-9-7"], [538, "version-0-9-7"]], "Other Enhancements": [[544, "other-enhancements"], [540, "other-enhancements"], [539, "other-enhancements"], [538, "id37"], [538, "id43"], [538, "id47"]], "Version 1.0.0": [[547, "version-1-0-0"], [538, "version-1-0-0"]], "Other enhancements": [[547, "other-enhancements"], [538, "other-enhancements"]], "Infrastructure": [[547, "infrastructure"], [538, "infrastructure"]], "Version 0.9.3": [[540, "version-0-9-3"], [538, "version-0-9-3"]], "Bug Fixes": [[540, "bug-fixes"], [539, "bug-fixes"], [538, "id44"], [538, "id48"]], "Version 0.9.6": [[543, "version-0-9-6"], [538, "version-0-9-6"]], "Version 0.9.4": [[541, "version-0-9-4"], [538, "version-0-9-4"]], "Major changes/additions in this version": [[541, "major-changes-additions-in-this-version"], [538, "major-changes-additions-in-this-version"]], "Other changes and bug fixes": [[541, "other-changes-and-bug-fixes"], [538, "other-changes-and-bug-fixes"]], "Miscellaneous (pydicom.misc)": [[531, "miscellaneous-pydicom-misc"]], "Version 0.9.2": [[539, "version-0-9-2"], [538, "version-0-9-2"]], "Pixel Data Decoders (pydicom.pixels.decoders)": [[534, "pixel-data-decoders-pydicom-pixels-decoders"]], "Overlay Data Handling (pydicom.overlays)": [[532, "overlay-data-handling-pydicom-overlays"]], "Pixel Data (pydicom.pixels)": [[533, "pixel-data-pydicom-pixels"]], "Pixel Data Utilities": [[533, "pixel-data-utilities"], [528, "pixel-data-utilities"]], "UID Definitions and Utilities (pydicom.uid)": [[536, "uid-definitions-and-utilities-pydicom-uid"]], "Transfer Syntax UIDs": [[536, "transfer-syntax-uids"]], "Transfer Syntax Lists": [[536, "transfer-syntax-lists"]], "UID Utilities": [[536, "uid-utilities"]], "Storage SOP Class UIDs": [[536, "storage-sop-class-uids"]], "Pixel Data Encoders (pydicom.pixels.encoders)": [[535, "pixel-data-encoders-pydicom-pixels-encoders"]], "Bulk Data Handlers": [[528, "bulk-data-handlers"]], "Release notes": [[538, "release-notes"]], "Waveform Data Handlers (pydicom.waveforms)": [[537, "waveform-data-handlers-pydicom-waveforms"]], "Pixel Data Handlers (pydicom.pixel_data_handlers)": [[529, "pixel-data-handlers-pydicom-pixel-data-handlers"]], "pydicom.values.convert_UR_string": [[519, "pydicom-values-convert-ur-string"]], "pydicom.values.multi_string": [[526, "pydicom-values-multi-string"]], "pydicom.values.convert_single_string": [[521, "pydicom-values-convert-single-string"]], "pydicom.values.convert_text": [[524, "pydicom-values-convert-text"]], "pydicom.values.convert_string": [[522, "pydicom-values-convert-string"]], "pydicom.values.convert_value": [[525, "pydicom-values-convert-value"]], "pydicom.waveforms.numpy_handler": [[527, "module-pydicom.waveforms.numpy_handler"]], "pydicom.values.convert_UN": [[518, "pydicom-values-convert-un"]], "pydicom.values.convert_numbers": [[520, "pydicom-values-convert-numbers"]], "pydicom.values.convert_UI": [[517, "pydicom-values-convert-ui"]], "pydicom.values.convert_TM_string": [[516, "pydicom-values-convert-tm-string"]], "pydicom.values.convert_tag": [[523, "pydicom-values-convert-tag"]], "pydicom.valuerep.format_number_as_ds": [[504, "pydicom-valuerep-format-number-as-ds"]], "pydicom.values.convert_SQ": [[515, "pydicom-values-convert-sq"]], "pydicom.values.convert_DT_string": [[510, "pydicom-values-convert-dt-string"]], "pydicom.values.convert_ATvalue": [[507, "pydicom-values-convert-atvalue"]], "pydicom.valuerep.is_valid_ds": [[505, "pydicom-valuerep-is-valid-ds"]], "pydicom.values.convert_DA_string": [[508, "pydicom-values-convert-da-string"]], "pydicom.values.convert_DS_string": [[509, "pydicom-values-convert-ds-string"]], "pydicom.values.convert_PN": [[514, "pydicom-values-convert-pn"]], "pydicom.values.convert_OWvalue": [[513, "pydicom-values-convert-owvalue"]], "pydicom.values.convert_IS_string": [[511, "pydicom-values-convert-is-string"]], "pydicom.values.convert_AE_string": [[506, "pydicom-values-convert-ae-string"]], "pydicom.values.convert_OBvalue": [[512, "pydicom-values-convert-obvalue"]], "pydicom.valuerep.DSfloat": [[497, "pydicom-valuerep-dsfloat"]], "pydicom.uid.generate_uid": [[492, "pydicom-uid-generate-uid"]], "pydicom.valuerep.ISfloat": [[500, "pydicom-valuerep-isfloat"]], "pydicom.valuerep.TM": [[502, "pydicom-valuerep-tm"]], "pydicom.valuerep.DT": [[498, "pydicom-valuerep-dt"]], "pydicom.uid.register_transfer_syntax": [[493, "pydicom-uid-register-transfer-syntax"]], "pydicom.valuerep.DSdecimal": [[496, "pydicom-valuerep-dsdecimal"]], "pydicom.valuerep.PersonName": [[501, "pydicom-valuerep-personname"]], "pydicom.valuerep.DS": [[495, "pydicom-valuerep-ds"]], "pydicom.valuerep.DA": [[494, "pydicom-valuerep-da"]], "pydicom.valuerep.IS": [[499, "pydicom-valuerep-is"]], "pydicom.valuerep.VR": [[503, "pydicom-valuerep-vr"]], "pydicom.uid.XRayAngiographicImageStorage": [[489, "pydicom-uid-xrayangiographicimagestorage"]], "pydicom.uid.XAPerformedProcedureProtocolStorage": [[485, "pydicom-uid-xaperformedprocedureprotocolstorage"]], "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage": [[486, "pydicom-uid-xaxrfgrayscalesoftcopypresentationstatestorage"]], "pydicom.uid.XRay3DCraniofacialImageStorage": [[488, "pydicom-uid-xray3dcraniofacialimagestorage"]], "pydicom.uid.XRayRadiationDoseSRStorage": [[490, "pydicom-uid-xrayradiationdosesrstorage"]], "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage": [[482, "pydicom-uid-widefieldophthalmicphotography3dcoordinatesimagestorage"]], "pydicom.uid.XADefinedProcedureProtocolStorage": [[484, "pydicom-uid-xadefinedprocedureprotocolstorage"]], "pydicom.uid.XRay3DAngiographicImageStorage": [[487, "pydicom-uid-xray3dangiographicimagestorage"]], "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage": [[481, "pydicom-uid-volumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage": [[483, "pydicom-uid-widefieldophthalmicphotographystereographicprojectionimagestorage"]], "pydicom.uid.XRayRadiofluoroscopicImageStorage": [[491, "pydicom-uid-xrayradiofluoroscopicimagestorage"]], "pydicom.uid.VisualAcuityMeasurementsStorage": [[480, "pydicom-uid-visualacuitymeasurementsstorage"]], "pydicom.encaps.generate_fragmented_frames": [[142, "pydicom-encaps-generate-fragmented-frames"]], "pydicom.encaps.defragment_data": [[138, "pydicom-encaps-defragment-data"]], "pydicom.encaps.encapsulate": [[139, "pydicom-encaps-encapsulate"]], "pydicom.dataset.FileMetaDataset": [[134, "pydicom-dataset-filemetadataset"]], "pydicom.encaps.encapsulate_extended": [[140, "pydicom-encaps-encapsulate-extended"]], "pydicom.dataset.FileDataset": [[133, "pydicom-dataset-filedataset"]], "pydicom.encaps.fragment_frame": [[141, "pydicom-encaps-fragment-frame"]], "pydicom.encaps.decode_data_sequence": [[137, "pydicom-encaps-decode-data-sequence"]], "pydicom.dataset.validate_file_meta": [[136, "pydicom-dataset-validate-file-meta"]], "pydicom.encaps.generate_fragments": [[143, "pydicom-encaps-generate-fragments"]], "pydicom.dataset.PrivateBlock": [[135, "pydicom-dataset-privateblock"]], "pydicom.dataset.Dataset": [[132, "pydicom-dataset-dataset"]], "pydicom.uid.VLPhotographicImageStorage": [[473, "pydicom-uid-vlphotographicimagestorage"]], "pydicom.uid.VLEndoscopicImageStorage": [[471, "pydicom-uid-vlendoscopicimagestorage"]], "pydicom.uid.UltrasoundImageStorage": [[468, "pydicom-uid-ultrasoundimagestorage"]], "pydicom.uid.VLWholeSlideMicroscopyImageStorage": [[475, "pydicom-uid-vlwholeslidemicroscopyimagestorage"]], "pydicom.uid.VideoMicroscopicImageStorage": [[478, "pydicom-uid-videomicroscopicimagestorage"]], "pydicom.uid.VideoPhotographicImageStorage": [[479, "pydicom-uid-videophotographicimagestorage"]], "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage": [[474, "pydicom-uid-vlslidecoordinatesmicroscopicimagestorage"]], "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage": [[476, "pydicom-uid-variablemodalitylutsoftcopypresentationstatestorage"]], "pydicom.uid.VideoEndoscopicImageStorage": [[477, "pydicom-uid-videoendoscopicimagestorage"]], "pydicom.uid.VLMicroscopicImageStorage": [[472, "pydicom-uid-vlmicroscopicimagestorage"]], "pydicom.uid.UncompressedTransferSyntaxes": [[470, "pydicom-uid-uncompressedtransfersyntaxes"]], "pydicom.uid.UltrasoundMultiFrameImageStorage": [[469, "pydicom-uid-ultrasoundmultiframeimagestorage"]], "pydicom.uid.SubjectiveRefractionMeasurementsStorage": [[459, "pydicom-uid-subjectiverefractionmeasurementsstorage"]], "pydicom.uid.SpectaclePrescriptionReportStorage": [[457, "pydicom-uid-spectacleprescriptionreportstorage"]], "pydicom.uid.TractographyResultsStorage": [[465, "pydicom-uid-tractographyresultsstorage"]], "pydicom.uid.UID": [[467, "pydicom-uid-uid"]], "pydicom.uid.SurfaceScanMeshStorage": [[460, "pydicom-uid-surfacescanmeshstorage"]], "pydicom.uid.SurfaceScanPointCloudStorage": [[461, "pydicom-uid-surfacescanpointcloudstorage"]], "pydicom.uid.TwelveLeadECGWaveformStorage": [[466, "pydicom-uid-twelveleadecgwaveformstorage"]], "pydicom.uid.TomotherapeuticRadiationStorage": [[464, "pydicom-uid-tomotherapeuticradiationstorage"]], "pydicom.uid.SpatialRegistrationStorage": [[456, "pydicom-uid-spatialregistrationstorage"]], "pydicom.uid.SurfaceSegmentationStorage": [[462, "pydicom-uid-surfacesegmentationstorage"]], "pydicom.uid.StereometricRelationshipStorage": [[458, "pydicom-uid-stereometricrelationshipstorage"]], "pydicom.uid.TomotherapeuticRadiationRecordStorage": [[463, "pydicom-uid-tomotherapeuticradiationrecordstorage"]], "pydicom.uid.SpatialFiducialsStorage": [[455, "pydicom-uid-spatialfiducialsstorage"]], "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo": [[448, "pydicom-uid-smptest211020uncompressedprogressiveactivevideo"]], "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage": [[452, "pydicom-uid-segmentedvolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.SecondaryCaptureImageStorage": [[450, "pydicom-uid-secondarycaptureimagestorage"]], "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo": [[447, "pydicom-uid-smptest211020uncompressedinterlacedactivevideo"]], "pydicom.uid.SleepElectroencephalogramWaveformStorage": [[454, "pydicom-uid-sleepelectroencephalogramwaveformstorage"]], "pydicom.uid.SegmentationStorage": [[451, "pydicom-uid-segmentationstorage"]], "pydicom.uid.SimplifiedAdultEchoSRStorage": [[453, "pydicom-uid-simplifiedadultechosrstorage"]], "pydicom.uid.RoboticRadiationRecordStorage": [[445, "pydicom-uid-roboticradiationrecordstorage"]], "pydicom.uid.SMPTEST211030PCMDigitalAudio": [[449, "pydicom-uid-smptest211030pcmdigitalaudio"]], "pydicom.uid.RoboticArmRadiationStorage": [[444, "pydicom-uid-roboticarmradiationstorage"]], "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage": [[446, "pydicom-uid-routinescalpelectroencephalogramwaveformstorage"]], "pydicom.uid.RTRadiationRecordSetStorage": [[432, "pydicom-uid-rtradiationrecordsetstorage"]], "pydicom.uid.RTRadiationSetStorage": [[435, "pydicom-uid-rtradiationsetstorage"]], "pydicom.uid.RespiratoryWaveformStorage": [[443, "pydicom-uid-respiratorywaveformstorage"]], "pydicom.uid.RTRadiationSetDeliveryInstructionStorage": [[434, "pydicom-uid-rtradiationsetdeliveryinstructionstorage"]], "pydicom.uid.RTTreatmentPreparationStorage": [[438, "pydicom-uid-rttreatmentpreparationstorage"]], "pydicom.uid.RTRadiationSalvageRecordStorage": [[433, "pydicom-uid-rtradiationsalvagerecordstorage"]], "pydicom.uid.RealWorldValueMappingStorage": [[442, "pydicom-uid-realworldvaluemappingstorage"]], "pydicom.uid.RawDataStorage": [[441, "pydicom-uid-rawdatastorage"]], "pydicom.uid.RTSegmentAnnotationStorage": [[436, "pydicom-uid-rtsegmentannotationstorage"]], "pydicom.uid.RTTreatmentSummaryRecordStorage": [[439, "pydicom-uid-rttreatmentsummaryrecordstorage"]], "pydicom.uid.RTStructureSetStorage": [[437, "pydicom-uid-rtstructuresetstorage"]], "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage": [[440, "pydicom-uid-radiopharmaceuticalradiationdosesrstorage"]]}, "indexentries": {"settings (class in pydicom.config)": [[57, "pydicom.config.Settings"]], "infer_sq_for_un_vr (pydicom.config.settings property)": [[57, "pydicom.config.Settings.infer_sq_for_un_vr"]], "reading_validation_mode (pydicom.config.settings property)": [[57, "pydicom.config.Settings.reading_validation_mode"]], "writing_validation_mode (pydicom.config.settings property)": [[57, "pydicom.config.Settings.writing_validation_mode"]], "convert_encodings() (in module pydicom.charset)": [[77, "pydicom.charset.convert_encodings"]], "decode_bytes() (in module pydicom.charset)": [[78, "pydicom.charset.decode_bytes"]], "decode_element() (in module pydicom.charset)": [[79, "pydicom.charset.decode_element"]], "encode_string() (in module pydicom.charset)": [[80, "pydicom.charset.encode_string"]], "apply_j2k_corrections (in module pydicom.config)": [[81, "pydicom.config.APPLY_J2K_CORRECTIONS"]], "ds_decimal() (in module pydicom.config)": [[82, "pydicom.config.DS_decimal"]], "ds_numpy() (in module pydicom.config)": [[83, "pydicom.config.DS_numpy"]], "ignore (in module pydicom.config)": [[84, "pydicom.config.IGNORE"]], "invalid_keyword_behavior (in module pydicom.config)": [[85, "pydicom.config.INVALID_KEYWORD_BEHAVIOR"]], "invalid_key_behavior (in module pydicom.config)": [[86, "pydicom.config.INVALID_KEY_BEHAVIOR"]], "raise (in module pydicom.config)": [[87, "pydicom.config.RAISE"]], "warn (in module pydicom.config)": [[88, "pydicom.config.WARN"]], "allow_ds_float (in module pydicom.config)": [[89, "pydicom.config.allow_DS_float"]], "assume_implicit_vr_switch (in module pydicom.config)": [[90, "pydicom.config.assume_implicit_vr_switch"]], "convert_wrong_length_to_un (in module pydicom.config)": [[91, "pydicom.config.convert_wrong_length_to_UN"]], "data_element_callback (in module pydicom.config)": [[92, "pydicom.config.data_element_callback"]], "data_element_callback_kwargs (in module pydicom.config)": [[93, "pydicom.config.data_element_callback_kwargs"]], "datetime_conversion (in module pydicom.config)": [[94, "pydicom.config.datetime_conversion"]], "debug() (in module pydicom.config)": [[95, "pydicom.config.debug"]], "enforce_valid_values (in module pydicom.config)": [[96, "pydicom.config.enforce_valid_values"]], "future_behavior() (in module pydicom.config)": [[97, "pydicom.config.future_behavior"]], "pixel_data_handlers (in module pydicom.config)": [[98, "pydicom.config.pixel_data_handlers"]], "reset_data_element_callback() (in module pydicom.config)": [[99, "pydicom.config.reset_data_element_callback"]], "settings (in module pydicom.config)": [[100, "pydicom.config.settings"]], "show_file_meta (in module pydicom.config)": [[101, "pydicom.config.show_file_meta"]], "use_ds_decimal (in module pydicom.config)": [[102, "pydicom.config.use_DS_decimal"]], "use_ds_numpy (in module pydicom.config)": [[103, "pydicom.config.use_DS_numpy"]], "use_is_numpy (in module pydicom.config)": [[104, "pydicom.config.use_IS_numpy"]], "get_charset_files() (in module pydicom.data)": [[105, "pydicom.data.get_charset_files"]], "get_palette_files() (in module pydicom.data)": [[106, "pydicom.data.get_palette_files"]], "get_testdata_file() (in module pydicom.data)": [[107, "pydicom.data.get_testdata_file"]], "get_testdata_files() (in module pydicom.data)": [[108, "pydicom.data.get_testdata_files"]], "add_dict_entries() (in module pydicom.datadict)": [[109, "pydicom.datadict.add_dict_entries"]], "add_dict_entry() (in module pydicom.datadict)": [[110, "pydicom.datadict.add_dict_entry"]], "add_private_dict_entries() (in module pydicom.datadict)": [[111, "pydicom.datadict.add_private_dict_entries"]], "add_private_dict_entry() (in module pydicom.datadict)": [[112, "pydicom.datadict.add_private_dict_entry"]], "dictionary_vm() (in module pydicom.datadict)": [[113, "pydicom.datadict.dictionary_VM"]], "dictionary_vr() (in module pydicom.datadict)": [[114, "pydicom.datadict.dictionary_VR"]], "dictionary_description() (in module pydicom.datadict)": [[115, "pydicom.datadict.dictionary_description"]], "dictionary_has_tag() (in module pydicom.datadict)": [[116, "pydicom.datadict.dictionary_has_tag"]], "dictionary_is_retired() (in module pydicom.datadict)": [[117, "pydicom.datadict.dictionary_is_retired"]], "dictionary_keyword() (in module pydicom.datadict)": [[118, "pydicom.datadict.dictionary_keyword"]], "get_entry() (in module pydicom.datadict)": [[119, "pydicom.datadict.get_entry"]], "get_private_entry() (in module pydicom.datadict)": [[120, "pydicom.datadict.get_private_entry"]], "keyword_for_tag() (in module pydicom.datadict)": [[121, "pydicom.datadict.keyword_for_tag"]], "mask_match() (in module pydicom.datadict)": [[122, "pydicom.datadict.mask_match"]], "private_dictionary_vm() (in module pydicom.datadict)": [[123, "pydicom.datadict.private_dictionary_VM"]], "private_dictionary_vr() (in module pydicom.datadict)": [[124, "pydicom.datadict.private_dictionary_VR"]], "private_dictionary_description() (in module pydicom.datadict)": [[125, "pydicom.datadict.private_dictionary_description"]], "repeater_has_keyword() (in module pydicom.datadict)": [[126, "pydicom.datadict.repeater_has_keyword"]], "repeater_has_tag() (in module pydicom.datadict)": [[127, "pydicom.datadict.repeater_has_tag"]], "tag_for_keyword() (in module pydicom.datadict)": [[128, "pydicom.datadict.tag_for_keyword"]], "dataelement (class in pydicom.dataelem)": [[129, "pydicom.dataelem.DataElement"]], "vm (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.VM"]], "vr (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.VR"]], "__init__() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.__init__"]], "clear() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.clear"]], "descripwidth (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.descripWidth"]], "empty_value (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.empty_value"]], "from_json() (pydicom.dataelem.dataelement class method)": [[129, "pydicom.dataelem.DataElement.from_json"]], "is_empty (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.is_empty"]], "is_private (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.is_private"]], "is_retired (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.is_retired"]], "is_undefined_length (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.is_undefined_length"]], "keyword (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.keyword"]], "maxbytestodisplay (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.maxBytesToDisplay"]], "name (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.name"]], "repval (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.repval"]], "showvr (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.showVR"]], "tag (pydicom.dataelem.dataelement attribute)": [[129, "pydicom.dataelem.DataElement.tag"]], "to_json() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.to_json"]], "to_json_dict() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.to_json_dict"]], "validate() (pydicom.dataelem.dataelement method)": [[129, "pydicom.dataelem.DataElement.validate"]], "value (pydicom.dataelem.dataelement property)": [[129, "pydicom.dataelem.DataElement.value"]], "dataelement_from_raw() (in module pydicom.dataelem)": [[130, "pydicom.dataelem.DataElement_from_raw"]], "rawdataelement (class in pydicom.dataelem)": [[131, "pydicom.dataelem.RawDataElement"]], "vr (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.VR"]], "__init__() (pydicom.dataelem.rawdataelement method)": [[131, "pydicom.dataelem.RawDataElement.__init__"]], "count() (pydicom.dataelem.rawdataelement method)": [[131, "pydicom.dataelem.RawDataElement.count"]], "index() (pydicom.dataelem.rawdataelement method)": [[131, "pydicom.dataelem.RawDataElement.index"]], "is_implicit_vr (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.is_implicit_VR"]], "is_little_endian (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.is_little_endian"]], "is_raw (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.is_raw"]], "length (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.length"]], "tag (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.tag"]], "value (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.value"]], "value_tell (pydicom.dataelem.rawdataelement attribute)": [[131, "pydicom.dataelem.RawDataElement.value_tell"]], "dataset (class in pydicom.dataset)": [[132, "pydicom.dataset.Dataset"]], "__init__() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.__init__"]], "add() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.add"]], "add_new() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.add_new"]], "add_new_private() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.add_new_private"]], "clear() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.clear"]], "compress() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.compress"]], "convert_pixel_data() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.convert_pixel_data"]], "copy() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.copy"]], "data_element() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.data_element"]], "decode() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.decode"]], "decompress() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.decompress"]], "default_element_format (pydicom.dataset.dataset attribute)": [[132, "pydicom.dataset.Dataset.default_element_format"]], "default_sequence_element_format (pydicom.dataset.dataset attribute)": [[132, "pydicom.dataset.Dataset.default_sequence_element_format"]], "dir() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.dir"]], "elements() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.elements"]], "ensure_file_meta() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.ensure_file_meta"]], "formatted_lines() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.formatted_lines"]], "from_json() (pydicom.dataset.dataset class method)": [[132, "pydicom.dataset.Dataset.from_json"]], "get() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.get"]], "get_item() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.get_item"]], "get_private_item() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.get_private_item"]], "group_dataset() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.group_dataset"]], "indent_chars (pydicom.dataset.dataset attribute)": [[132, "pydicom.dataset.Dataset.indent_chars"]], "is_implicit_vr (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.is_little_endian"]], "is_original_encoding (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.is_original_encoding"]], "items() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.items"]], "iterall() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.iterall"]], "keys() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.keys"]], "original_character_set (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.original_character_set"]], "original_encoding (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.original_encoding"]], "overlay_array() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.overlay_array"]], "pixel_array (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.pixel_array"]], "pop() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.pop"]], "popitem() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.popitem"]], "private_block() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.private_block"]], "private_creators() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.private_creators"]], "read_encoding (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.read_encoding"]], "read_implicit_vr (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.read_implicit_vr"]], "read_little_endian (pydicom.dataset.dataset property)": [[132, "pydicom.dataset.Dataset.read_little_endian"]], "remove_private_tags() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.remove_private_tags"]], "save_as() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.save_as"]], "set_original_encoding() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.set_original_encoding"]], "setdefault() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.setdefault"]], "to_json() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.to_json"]], "to_json_dict() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.to_json_dict"]], "top() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.top"]], "trait_names() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.trait_names"]], "update() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.update"]], "values() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.values"]], "walk() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.walk"]], "waveform_array() (pydicom.dataset.dataset method)": [[132, "pydicom.dataset.Dataset.waveform_array"]], "filedataset (class in pydicom.dataset)": [[133, "pydicom.dataset.FileDataset"]], "__init__() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.__init__"]], "add() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.add"]], "add_new() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.add_new"]], "add_new_private() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.add_new_private"]], "clear() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.clear"]], "compress() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.compress"]], "convert_pixel_data() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.convert_pixel_data"]], "copy() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.copy"]], "data_element() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.data_element"]], "decode() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.decode"]], "decompress() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.decompress"]], "dir() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.dir"]], "elements() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.elements"]], "ensure_file_meta() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.ensure_file_meta"]], "file_meta (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.file_meta"]], "filename (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.filename"]], "fileobj_type (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.fileobj_type"]], "formatted_lines() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.formatted_lines"]], "from_json() (pydicom.dataset.filedataset class method)": [[133, "pydicom.dataset.FileDataset.from_json"]], "get() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.get"]], "get_item() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.get_item"]], "get_private_item() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.get_private_item"]], "group_dataset() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.group_dataset"]], "is_implicit_vr (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.is_little_endian"]], "is_original_encoding (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.is_original_encoding"]], "items() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.items"]], "iterall() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.iterall"]], "keys() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.keys"]], "original_character_set (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.original_character_set"]], "original_encoding (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.original_encoding"]], "overlay_array() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.overlay_array"]], "pixel_array (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.pixel_array"]], "pop() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.pop"]], "popitem() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.popitem"]], "preamble (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.preamble"]], "private_block() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.private_block"]], "private_creators() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.private_creators"]], "read_encoding (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.read_encoding"]], "read_implicit_vr (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.read_implicit_vr"]], "read_little_endian (pydicom.dataset.filedataset property)": [[133, "pydicom.dataset.FileDataset.read_little_endian"]], "remove_private_tags() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.remove_private_tags"]], "save_as() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.save_as"]], "set_original_encoding() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.set_original_encoding"]], "setdefault() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.setdefault"]], "timestamp (pydicom.dataset.filedataset attribute)": [[133, "pydicom.dataset.FileDataset.timestamp"]], "to_json() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.to_json"]], "to_json_dict() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.to_json_dict"]], "top() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.top"]], "trait_names() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.trait_names"]], "update() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.update"]], "values() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.values"]], "walk() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.walk"]], "waveform_array() (pydicom.dataset.filedataset method)": [[133, "pydicom.dataset.FileDataset.waveform_array"]], "filemetadataset (class in pydicom.dataset)": [[134, "pydicom.dataset.FileMetaDataset"]], "__init__() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.__init__"]], "add() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.add"]], "add_new() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.add_new"]], "add_new_private() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.add_new_private"]], "clear() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.clear"]], "compress() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.compress"]], "convert_pixel_data() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.convert_pixel_data"]], "copy() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.copy"]], "data_element() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.data_element"]], "decode() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.decode"]], "decompress() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.decompress"]], "dir() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.dir"]], "elements() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.elements"]], "ensure_file_meta() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.ensure_file_meta"]], "formatted_lines() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.formatted_lines"]], "from_json() (pydicom.dataset.filemetadataset class method)": [[134, "pydicom.dataset.FileMetaDataset.from_json"]], "get() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.get"]], "get_item() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.get_item"]], "get_private_item() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.get_private_item"]], "group_dataset() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.group_dataset"]], "is_implicit_vr (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.is_little_endian"]], "is_original_encoding (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.is_original_encoding"]], "items() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.items"]], "iterall() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.iterall"]], "keys() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.keys"]], "original_character_set (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.original_character_set"]], "original_encoding (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.original_encoding"]], "overlay_array() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.overlay_array"]], "pixel_array (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.pixel_array"]], "pop() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.pop"]], "popitem() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.popitem"]], "private_block() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.private_block"]], "private_creators() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.private_creators"]], "read_encoding (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.read_encoding"]], "read_implicit_vr (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.read_implicit_vr"]], "read_little_endian (pydicom.dataset.filemetadataset property)": [[134, "pydicom.dataset.FileMetaDataset.read_little_endian"]], "remove_private_tags() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.remove_private_tags"]], "save_as() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.save_as"]], "set_original_encoding() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.set_original_encoding"]], "setdefault() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.setdefault"]], "to_json() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.to_json"]], "to_json_dict() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.to_json_dict"]], "top() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.top"]], "trait_names() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.trait_names"]], "update() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.update"]], "validate() (pydicom.dataset.filemetadataset static method)": [[134, "pydicom.dataset.FileMetaDataset.validate"]], "values() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.values"]], "walk() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.walk"]], "waveform_array() (pydicom.dataset.filemetadataset method)": [[134, "pydicom.dataset.FileMetaDataset.waveform_array"]], "privateblock (class in pydicom.dataset)": [[135, "pydicom.dataset.PrivateBlock"]], "__init__() (pydicom.dataset.privateblock method)": [[135, "pydicom.dataset.PrivateBlock.__init__"]], "add_new() (pydicom.dataset.privateblock method)": [[135, "pydicom.dataset.PrivateBlock.add_new"]], "block_start (pydicom.dataset.privateblock attribute)": [[135, "pydicom.dataset.PrivateBlock.block_start"]], "dataset (pydicom.dataset.privateblock attribute)": [[135, "pydicom.dataset.PrivateBlock.dataset"]], "get_tag() (pydicom.dataset.privateblock method)": [[135, "pydicom.dataset.PrivateBlock.get_tag"]], "group (pydicom.dataset.privateblock attribute)": [[135, "pydicom.dataset.PrivateBlock.group"]], "private_creator (pydicom.dataset.privateblock attribute)": [[135, "pydicom.dataset.PrivateBlock.private_creator"]], "validate_file_meta() (in module pydicom.dataset)": [[136, "pydicom.dataset.validate_file_meta"]], "decode_data_sequence() (in module pydicom.encaps)": [[137, "pydicom.encaps.decode_data_sequence"]], "defragment_data() (in module pydicom.encaps)": [[138, "pydicom.encaps.defragment_data"]], "encapsulate() (in module pydicom.encaps)": [[139, "pydicom.encaps.encapsulate"]], "encapsulate_extended() (in module pydicom.encaps)": [[140, "pydicom.encaps.encapsulate_extended"]], "fragment_frame() (in module pydicom.encaps)": [[141, "pydicom.encaps.fragment_frame"]], "generate_fragmented_frames() (in module pydicom.encaps)": [[142, "pydicom.encaps.generate_fragmented_frames"]], "generate_fragments() (in module pydicom.encaps)": [[143, "pydicom.encaps.generate_fragments"]], "generate_frames() (in module pydicom.encaps)": [[144, "pydicom.encaps.generate_frames"]], "generate_pixel_data() (in module pydicom.encaps)": [[145, "pydicom.encaps.generate_pixel_data"]], "generate_pixel_data_fragment() (in module pydicom.encaps)": [[146, "pydicom.encaps.generate_pixel_data_fragment"]], "generate_pixel_data_frame() (in module pydicom.encaps)": [[147, "pydicom.encaps.generate_pixel_data_frame"]], "get_frame() (in module pydicom.encaps)": [[148, "pydicom.encaps.get_frame"]], "get_frame_offsets() (in module pydicom.encaps)": [[149, "pydicom.encaps.get_frame_offsets"]], "itemize_fragment() (in module pydicom.encaps)": [[150, "pydicom.encaps.itemize_fragment"]], "itemize_frame() (in module pydicom.encaps)": [[151, "pydicom.encaps.itemize_frame"]], "parse_basic_offsets() (in module pydicom.encaps)": [[152, "pydicom.encaps.parse_basic_offsets"]], "parse_fragments() (in module pydicom.encaps)": [[153, "pydicom.encaps.parse_fragments"]], "read_item() (in module pydicom.encaps)": [[154, "pydicom.encaps.read_item"]], "invaliddicomerror": [[155, "pydicom.errors.InvalidDicomError"]], "with_traceback() (pydicom.errors.invaliddicomerror method)": [[155, "pydicom.errors.InvalidDicomError.with_traceback"]], "dicombytesio (class in pydicom.filebase)": [[156, "pydicom.filebase.DicomBytesIO"]], "__init__() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.__init__"]], "close() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.close"]], "is_implicit_vr (pydicom.filebase.dicombytesio property)": [[156, "pydicom.filebase.DicomBytesIO.is_implicit_VR"]], "is_little_endian (pydicom.filebase.dicombytesio property)": [[156, "pydicom.filebase.DicomBytesIO.is_little_endian"]], "name (pydicom.filebase.dicombytesio property)": [[156, "pydicom.filebase.DicomBytesIO.name"]], "parent (pydicom.filebase.dicombytesio property)": [[156, "pydicom.filebase.DicomBytesIO.parent"]], "read() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.read"]], "read_ul() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.read_UL"]], "read_us() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.read_US"]], "read_exact() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.read_exact"]], "read_tag() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.read_tag"]], "seek() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.seek"]], "tell() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.tell"]], "write() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.write"]], "write_ul() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.write_UL"]], "write_us() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.write_US"]], "write_tag() (pydicom.filebase.dicombytesio method)": [[156, "pydicom.filebase.DicomBytesIO.write_tag"]], "dicomfile() (in module pydicom.filebase)": [[157, "pydicom.filebase.DicomFile"]], "dicomfilelike (class in pydicom.filebase)": [[158, "pydicom.filebase.DicomFileLike"]], "__init__() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.__init__"]], "close() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.close"]], "is_implicit_vr (pydicom.filebase.dicomfilelike property)": [[158, "pydicom.filebase.DicomFileLike.is_implicit_VR"]], "is_little_endian (pydicom.filebase.dicomfilelike property)": [[158, "pydicom.filebase.DicomFileLike.is_little_endian"]], "name (pydicom.filebase.dicomfilelike property)": [[158, "pydicom.filebase.DicomFileLike.name"]], "parent (pydicom.filebase.dicomfilelike property)": [[158, "pydicom.filebase.DicomFileLike.parent"]], "read() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.read"]], "read_ul() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.read_UL"]], "read_us() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.read_US"]], "read_exact() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.read_exact"]], "read_tag() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.read_tag"]], "seek() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.seek"]], "tell() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.tell"]], "write() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.write"]], "write_ul() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.write_UL"]], "write_us() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.write_US"]], "write_tag() (pydicom.filebase.dicomfilelike method)": [[158, "pydicom.filebase.DicomFileLike.write_tag"]], "dicomio (class in pydicom.filebase)": [[159, "pydicom.filebase.DicomIO"]], "__init__() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.__init__"]], "close() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.close"]], "is_implicit_vr (pydicom.filebase.dicomio property)": [[159, "pydicom.filebase.DicomIO.is_implicit_VR"]], "is_little_endian (pydicom.filebase.dicomio property)": [[159, "pydicom.filebase.DicomIO.is_little_endian"]], "name (pydicom.filebase.dicomio property)": [[159, "pydicom.filebase.DicomIO.name"]], "parent (pydicom.filebase.dicomio property)": [[159, "pydicom.filebase.DicomIO.parent"]], "read() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.read"]], "read_ul() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.read_UL"]], "read_us() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.read_US"]], "read_exact() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.read_exact"]], "read_tag() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.read_tag"]], "seek() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.seek"]], "tell() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.tell"]], "write() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.write"]], "write_ul() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.write_UL"]], "write_us() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.write_US"]], "write_tag() (pydicom.filebase.dicomio method)": [[159, "pydicom.filebase.DicomIO.write_tag"]], "data_element_generator() (in module pydicom.filereader)": [[160, "pydicom.filereader.data_element_generator"]], "data_element_offset_to_value() (in module pydicom.filereader)": [[161, "pydicom.filereader.data_element_offset_to_value"]], "dcmread() (in module pydicom.filereader)": [[162, "pydicom.filereader.dcmread"]], "read_dataset() (in module pydicom.filereader)": [[163, "pydicom.filereader.read_dataset"]], "read_deferred_data_element() (in module pydicom.filereader)": [[164, "pydicom.filereader.read_deferred_data_element"]], "read_file_meta_info() (in module pydicom.filereader)": [[165, "pydicom.filereader.read_file_meta_info"]], "read_partial() (in module pydicom.filereader)": [[166, "pydicom.filereader.read_partial"]], "read_preamble() (in module pydicom.filereader)": [[167, "pydicom.filereader.read_preamble"]], "read_sequence() (in module pydicom.filereader)": [[168, "pydicom.filereader.read_sequence"]], "read_sequence_item() (in module pydicom.filereader)": [[169, "pydicom.filereader.read_sequence_item"]], "directory_recorders (in module pydicom.fileset)": [[170, "pydicom.fileset.DIRECTORY_RECORDERS"]], "fileid (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.FileID"]], "fileinstance (class in pydicom.fileset)": [[171, "pydicom.fileset.FileInstance"]], "sopclassuid (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.SOPClassUID"]], "sopinstanceuid (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.SOPInstanceUID"]], "transfersyntaxuid (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.TransferSyntaxUID"]], "__init__() (pydicom.fileset.fileinstance method)": [[171, "pydicom.fileset.FileInstance.__init__"]], "file_set (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.file_set"]], "for_addition (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.for_addition"]], "for_moving (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.for_moving"]], "for_removal (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.for_removal"]], "is_private (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.is_private"]], "is_staged (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.is_staged"]], "load() (pydicom.fileset.fileinstance method)": [[171, "pydicom.fileset.FileInstance.load"]], "node (pydicom.fileset.fileinstance attribute)": [[171, "pydicom.fileset.FileInstance.node"]], "path (pydicom.fileset.fileinstance property)": [[171, "pydicom.fileset.FileInstance.path"]], "fileset (class in pydicom.fileset)": [[172, "pydicom.fileset.FileSet"]], "id (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.ID"]], "uid (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.UID"]], "__init__() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.__init__"]], "add() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.add"]], "add_custom() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.add_custom"]], "clear() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.clear"]], "copy() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.copy"]], "descriptor_character_set (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.descriptor_character_set"]], "descriptor_file_id (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.descriptor_file_id"]], "find() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.find"]], "find_values() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.find_values"]], "is_staged (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.is_staged"]], "load() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.load"]], "path (pydicom.fileset.fileset property)": [[172, "pydicom.fileset.FileSet.path"]], "remove() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.remove"]], "write() (pydicom.fileset.fileset method)": [[172, "pydicom.fileset.FileSet.write"]], "recordnode (class in pydicom.fileset)": [[173, "pydicom.fileset.RecordNode"]], "__init__() (pydicom.fileset.recordnode method)": [[173, "pydicom.fileset.RecordNode.__init__"]], "add() (pydicom.fileset.recordnode method)": [[173, "pydicom.fileset.RecordNode.add"]], "ancestors (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.ancestors"]], "children (pydicom.fileset.recordnode attribute)": [[173, "pydicom.fileset.RecordNode.children"]], "component (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.component"]], "depth (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.depth"]], "file_set (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.file_set"]], "has_instance (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.has_instance"]], "index (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.index"]], "instance (pydicom.fileset.recordnode attribute)": [[173, "pydicom.fileset.RecordNode.instance"]], "is_root (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.is_root"]], "key (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.key"]], "next (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.next"]], "parent (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.parent"]], "prettify() (pydicom.fileset.recordnode method)": [[173, "pydicom.fileset.RecordNode.prettify"]], "previous (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.previous"]], "record_type (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.record_type"]], "remove() (pydicom.fileset.recordnode method)": [[173, "pydicom.fileset.RecordNode.remove"]], "reverse() (pydicom.fileset.recordnode method)": [[173, "pydicom.fileset.RecordNode.reverse"]], "root (pydicom.fileset.recordnode property)": [[173, "pydicom.fileset.RecordNode.root"]], "generate_filename() (in module pydicom.fileset)": [[174, "pydicom.fileset.generate_filename"]], "is_conformant_file_id() (in module pydicom.fileset)": [[175, "pydicom.fileset.is_conformant_file_id"]], "absorb_delimiter_item() (in module pydicom.fileutil)": [[176, "pydicom.fileutil.absorb_delimiter_item"]], "find_bytes() (in module pydicom.fileutil)": [[177, "pydicom.fileutil.find_bytes"]], "find_delimiter() (in module pydicom.fileutil)": [[178, "pydicom.fileutil.find_delimiter"]], "length_of_undefined_length() (in module pydicom.fileutil)": [[179, "pydicom.fileutil.length_of_undefined_length"]], "read_undefined_length_value() (in module pydicom.fileutil)": [[180, "pydicom.fileutil.read_undefined_length_value"]], "correct_ambiguous_vr() (in module pydicom.filewriter)": [[181, "pydicom.filewriter.correct_ambiguous_vr"]], "correct_ambiguous_vr_element() (in module pydicom.filewriter)": [[182, "pydicom.filewriter.correct_ambiguous_vr_element"]], "dcmwrite() (in module pydicom.filewriter)": [[183, "pydicom.filewriter.dcmwrite"]], "multi_string() (in module pydicom.filewriter)": [[184, "pydicom.filewriter.multi_string"]], "write_atvalue() (in module pydicom.filewriter)": [[185, "pydicom.filewriter.write_ATvalue"]], "write_da() (in module pydicom.filewriter)": [[186, "pydicom.filewriter.write_DA"]], "write_dt() (in module pydicom.filewriter)": [[187, "pydicom.filewriter.write_DT"]], "write_obvalue() (in module pydicom.filewriter)": [[188, "pydicom.filewriter.write_OBvalue"]], "write_owvalue() (in module pydicom.filewriter)": [[189, "pydicom.filewriter.write_OWvalue"]], "write_pn() (in module pydicom.filewriter)": [[190, "pydicom.filewriter.write_PN"]], "write_tm() (in module pydicom.filewriter)": [[191, "pydicom.filewriter.write_TM"]], "write_ui() (in module pydicom.filewriter)": [[192, "pydicom.filewriter.write_UI"]], "write_un() (in module pydicom.filewriter)": [[193, "pydicom.filewriter.write_UN"]], "write_data_element() (in module pydicom.filewriter)": [[194, "pydicom.filewriter.write_data_element"]], "write_dataset() (in module pydicom.filewriter)": [[195, "pydicom.filewriter.write_dataset"]], "write_file_meta_info() (in module pydicom.filewriter)": [[196, "pydicom.filewriter.write_file_meta_info"]], "write_number_string() (in module pydicom.filewriter)": [[197, "pydicom.filewriter.write_number_string"]], "write_numbers() (in module pydicom.filewriter)": [[198, "pydicom.filewriter.write_numbers"]], "write_sequence() (in module pydicom.filewriter)": [[199, "pydicom.filewriter.write_sequence"]], "write_sequence_item() (in module pydicom.filewriter)": [[200, "pydicom.filewriter.write_sequence_item"]], "write_string() (in module pydicom.filewriter)": [[201, "pydicom.filewriter.write_string"]], "write_text() (in module pydicom.filewriter)": [[202, "pydicom.filewriter.write_text"]], "is_dicom() (in module pydicom.misc)": [[203, "pydicom.misc.is_dicom"]], "size_in_bytes() (in module pydicom.misc)": [[204, "pydicom.misc.size_in_bytes"]], "multivalue (class in pydicom.multival)": [[205, "pydicom.multival.MultiValue"]], "__init__() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.__init__"]], "append() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.append"]], "clear() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.clear"]], "count() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.count"]], "extend() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.extend"]], "index() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.index"]], "insert() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.insert"]], "pop() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.pop"]], "remove() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.remove"]], "reverse() (pydicom.multival.multivalue method)": [[205, "pydicom.multival.MultiValue.reverse"]], "get_expected_length() (in module pydicom.overlays.numpy_handler)": [[206, "pydicom.overlays.numpy_handler.get_expected_length"]], "get_overlay_array() (in module pydicom.overlays.numpy_handler)": [[206, "pydicom.overlays.numpy_handler.get_overlay_array"]], "is_available() (in module pydicom.overlays.numpy_handler)": [[206, "pydicom.overlays.numpy_handler.is_available"]], "module": [[206, "module-pydicom.overlays.numpy_handler"], [214, "module-pydicom.pixel_data_handlers.gdcm_handler"], [215, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"], [216, "module-pydicom.pixel_data_handlers.numpy_handler"], [217, "module-pydicom.pixel_data_handlers.pillow_handler"], [218, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"], [219, "module-pydicom.pixel_data_handlers.rle_handler"], [220, "module-pydicom.pixel_data_handlers.util"], [527, "module-pydicom.waveforms.numpy_handler"], [529, "module-pydicom.pixel_data_handlers"], [530, "module-pydicom"], [532, "module-pydicom.overlays"], [537, "module-pydicom.waveforms"]], "pydicom.overlays.numpy_handler": [[206, "module-pydicom.overlays.numpy_handler"]], "reshape_overlay_array() (in module pydicom.overlays.numpy_handler)": [[206, "pydicom.overlays.numpy_handler.reshape_overlay_array"]], "apply_color_lut() (in module pydicom.pixel_data_handlers)": [[207, "pydicom.pixel_data_handlers.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers)": [[208, "pydicom.pixel_data_handlers.apply_modality_lut"]], "apply_rescale() (in module pydicom.pixel_data_handlers)": [[209, "pydicom.pixel_data_handlers.apply_rescale"]], "apply_voi() (in module pydicom.pixel_data_handlers)": [[210, "pydicom.pixel_data_handlers.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers)": [[211, "pydicom.pixel_data_handlers.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers)": [[212, "pydicom.pixel_data_handlers.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers)": [[213, "pydicom.pixel_data_handlers.convert_color_space"]], "create_data_element() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[214, "pydicom.pixel_data_handlers.gdcm_handler.create_data_element"]], "create_image() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[214, "pydicom.pixel_data_handlers.gdcm_handler.create_image"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[214, "pydicom.pixel_data_handlers.gdcm_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[214, "pydicom.pixel_data_handlers.gdcm_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[214, "pydicom.pixel_data_handlers.gdcm_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.gdcm_handler": [[214, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[214, "pydicom.pixel_data_handlers.gdcm_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[214, "pydicom.pixel_data_handlers.gdcm_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[215, "pydicom.pixel_data_handlers.jpeg_ls_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[215, "pydicom.pixel_data_handlers.jpeg_ls_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[215, "pydicom.pixel_data_handlers.jpeg_ls_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[215, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[215, "pydicom.pixel_data_handlers.jpeg_ls_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[215, "pydicom.pixel_data_handlers.jpeg_ls_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.numpy_handler)": [[216, "pydicom.pixel_data_handlers.numpy_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.numpy_handler)": [[216, "pydicom.pixel_data_handlers.numpy_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[216, "pydicom.pixel_data_handlers.numpy_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.numpy_handler": [[216, "module-pydicom.pixel_data_handlers.numpy_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[216, "pydicom.pixel_data_handlers.numpy_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.numpy_handler)": [[216, "pydicom.pixel_data_handlers.numpy_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pillow_handler)": [[217, "pydicom.pixel_data_handlers.pillow_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pillow_handler)": [[217, "pydicom.pixel_data_handlers.pillow_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[217, "pydicom.pixel_data_handlers.pillow_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pillow_handler": [[217, "module-pydicom.pixel_data_handlers.pillow_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[217, "pydicom.pixel_data_handlers.pillow_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pillow_handler)": [[217, "pydicom.pixel_data_handlers.pillow_handler.supports_transfer_syntax"]], "as_array() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[218, "pydicom.pixel_data_handlers.pylibjpeg_handler.as_array"]], "generate_frames() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[218, "pydicom.pixel_data_handlers.pylibjpeg_handler.generate_frames"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[218, "pydicom.pixel_data_handlers.pylibjpeg_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[218, "pydicom.pixel_data_handlers.pylibjpeg_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[218, "pydicom.pixel_data_handlers.pylibjpeg_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[218, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[218, "pydicom.pixel_data_handlers.pylibjpeg_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[218, "pydicom.pixel_data_handlers.pylibjpeg_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.rle_handler)": [[219, "pydicom.pixel_data_handlers.rle_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.rle_handler)": [[219, "pydicom.pixel_data_handlers.rle_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[219, "pydicom.pixel_data_handlers.rle_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.rle_handler": [[219, "module-pydicom.pixel_data_handlers.rle_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[219, "pydicom.pixel_data_handlers.rle_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.rle_handler)": [[219, "pydicom.pixel_data_handlers.rle_handler.supports_transfer_syntax"]], "apply_color_lut() (in module pydicom.pixel_data_handlers.util)": [[220, "pydicom.pixel_data_handlers.util.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers.util)": [[220, "pydicom.pixel_data_handlers.util.apply_modality_lut"]], "apply_voi() (in module pydicom.pixel_data_handlers.util)": [[220, "pydicom.pixel_data_handlers.util.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers.util)": [[220, "pydicom.pixel_data_handlers.util.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers.util)": [[220, "pydicom.pixel_data_handlers.util.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers.util)": [[220, "pydicom.pixel_data_handlers.util.convert_color_space"]], "dtype_corrected_for_endianness() (in module pydicom.pixel_data_handlers.util)": [[220, "pydicom.pixel_data_handlers.util.dtype_corrected_for_endianness"]], "expand_ybr422() (in module pydicom.pixel_data_handlers.util)": [[220, "pydicom.pixel_data_handlers.util.expand_ybr422"]], "get_expected_length() (in module pydicom.pixel_data_handlers.util)": [[220, "pydicom.pixel_data_handlers.util.get_expected_length"]], "get_image_pixel_ids() (in module pydicom.pixel_data_handlers.util)": [[220, "pydicom.pixel_data_handlers.util.get_image_pixel_ids"]], "get_j2k_parameters() (in module pydicom.pixel_data_handlers.util)": [[220, "pydicom.pixel_data_handlers.util.get_j2k_parameters"]], "get_nr_frames() (in module pydicom.pixel_data_handlers.util)": [[220, "pydicom.pixel_data_handlers.util.get_nr_frames"]], "pack_bits() (in module pydicom.pixel_data_handlers.util)": [[220, "pydicom.pixel_data_handlers.util.pack_bits"]], "pixel_dtype() (in module pydicom.pixel_data_handlers.util)": [[220, "pydicom.pixel_data_handlers.util.pixel_dtype"]], "pydicom.pixel_data_handlers.util": [[220, "module-pydicom.pixel_data_handlers.util"]], "reshape_pixel_array() (in module pydicom.pixel_data_handlers.util)": [[220, "pydicom.pixel_data_handlers.util.reshape_pixel_array"]], "unpack_bits() (in module pydicom.pixel_data_handlers.util)": [[220, "pydicom.pixel_data_handlers.util.unpack_bits"]], "as_pixel_options() (in module pydicom.pixels)": [[221, "pydicom.pixels.as_pixel_options"]], "decoderunner (class in pydicom.pixels.decoders.base)": [[222, "pydicom.pixels.decoders.base.DecodeRunner"]], "__init__() (pydicom.pixels.decoders.base.decoderunner method)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.__init__"]], "bits_allocated (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.bits_allocated"]], "bits_stored (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.bits_stored"]], "columns (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.columns"]], "decode() (pydicom.pixels.decoders.base.decoderunner method)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.decode"]], "del_option() (pydicom.pixels.decoders.base.decoderunner method)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.del_option"]], "extended_offsets (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.extended_offsets"]], "frame_length() (pydicom.pixels.decoders.base.decoderunner method)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.frame_length"]], "get_data() (pydicom.pixels.decoders.base.decoderunner method)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.get_data"]], "get_option() (pydicom.pixels.decoders.base.decoderunner method)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.get_option"]], "is_array (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.is_array"]], "is_binary (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.is_binary"]], "is_buffer (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.is_buffer"]], "is_dataset (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.is_dataset"]], "iter_decode() (pydicom.pixels.decoders.base.decoderunner method)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.iter_decode"]], "number_of_frames (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.number_of_frames"]], "options (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.options"]], "photometric_interpretation (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.photometric_interpretation"]], "pixel_dtype (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.pixel_dtype"]], "pixel_keyword (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.pixel_keyword"]], "pixel_representation (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.pixel_representation"]], "planar_configuration (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.planar_configuration"]], "process() (pydicom.pixels.decoders.base.decoderunner method)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.process"]], "reshape() (pydicom.pixels.decoders.base.decoderunner method)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.reshape"]], "rows (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.rows"]], "samples_per_pixel (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.samples_per_pixel"]], "set_decoders() (pydicom.pixels.decoders.base.decoderunner method)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.set_decoders"]], "set_option() (pydicom.pixels.decoders.base.decoderunner method)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.set_option"]], "set_options() (pydicom.pixels.decoders.base.decoderunner method)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.set_options"]], "set_source() (pydicom.pixels.decoders.base.decoderunner method)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.set_source"]], "src (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.src"]], "transfer_syntax (pydicom.pixels.decoders.base.decoderunner property)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.transfer_syntax"]], "validate() (pydicom.pixels.decoders.base.decoderunner method)": [[222, "pydicom.pixels.decoders.base.DecodeRunner.validate"]], "decoder (class in pydicom.pixels.decoders.base)": [[223, "pydicom.pixels.decoders.base.Decoder"]], "uid (pydicom.pixels.decoders.base.decoder property)": [[223, "pydicom.pixels.decoders.base.Decoder.UID"]], "__init__() (pydicom.pixels.decoders.base.decoder method)": [[223, "pydicom.pixels.decoders.base.Decoder.__init__"]], "add_plugin() (pydicom.pixels.decoders.base.decoder method)": [[223, "pydicom.pixels.decoders.base.Decoder.add_plugin"]], "add_plugins() (pydicom.pixels.decoders.base.decoder method)": [[223, "pydicom.pixels.decoders.base.Decoder.add_plugins"]], "as_array() (pydicom.pixels.decoders.base.decoder method)": [[223, "pydicom.pixels.decoders.base.Decoder.as_array"]], "as_buffer() (pydicom.pixels.decoders.base.decoder method)": [[223, "pydicom.pixels.decoders.base.Decoder.as_buffer"]], "is_available (pydicom.pixels.decoders.base.decoder property)": [[223, "pydicom.pixels.decoders.base.Decoder.is_available"]], "is_encapsulated (pydicom.pixels.decoders.base.decoder property)": [[223, "pydicom.pixels.decoders.base.Decoder.is_encapsulated"]], "is_native (pydicom.pixels.decoders.base.decoder property)": [[223, "pydicom.pixels.decoders.base.Decoder.is_native"]], "iter_array() (pydicom.pixels.decoders.base.decoder method)": [[223, "pydicom.pixels.decoders.base.Decoder.iter_array"]], "iter_buffer() (pydicom.pixels.decoders.base.decoder method)": [[223, "pydicom.pixels.decoders.base.Decoder.iter_buffer"]], "missing_dependencies (pydicom.pixels.decoders.base.decoder property)": [[223, "pydicom.pixels.decoders.base.Decoder.missing_dependencies"]], "remove_plugin() (pydicom.pixels.decoders.base.decoder method)": [[223, "pydicom.pixels.decoders.base.Decoder.remove_plugin"]], "deflatedexplicitvrlittleendiandecoder (in module pydicom.pixels.decoders.base)": [[224, "pydicom.pixels.decoders.base.DeflatedExplicitVRLittleEndianDecoder"]], "explicitvrbigendiandecoder (in module pydicom.pixels.decoders.base)": [[225, "pydicom.pixels.decoders.base.ExplicitVRBigEndianDecoder"]], "explicitvrlittleendiandecoder (in module pydicom.pixels.decoders.base)": [[226, "pydicom.pixels.decoders.base.ExplicitVRLittleEndianDecoder"]], "htj2kdecoder (in module pydicom.pixels.decoders.base)": [[227, "pydicom.pixels.decoders.base.HTJ2KDecoder"]], "htj2klosslessdecoder (in module pydicom.pixels.decoders.base)": [[228, "pydicom.pixels.decoders.base.HTJ2KLosslessDecoder"]], "htj2klosslessrpcldecoder (in module pydicom.pixels.decoders.base)": [[229, "pydicom.pixels.decoders.base.HTJ2KLosslessRPCLDecoder"]], "implicitvrlittleendiandecoder (in module pydicom.pixels.decoders.base)": [[230, "pydicom.pixels.decoders.base.ImplicitVRLittleEndianDecoder"]], "jpeg2000decoder (in module pydicom.pixels.decoders.base)": [[231, "pydicom.pixels.decoders.base.JPEG2000Decoder"]], "jpeg2000losslessdecoder (in module pydicom.pixels.decoders.base)": [[232, "pydicom.pixels.decoders.base.JPEG2000LosslessDecoder"]], "jpegbaseline8bitdecoder (in module pydicom.pixels.decoders.base)": [[233, "pydicom.pixels.decoders.base.JPEGBaseline8BitDecoder"]], "jpegextended12bitdecoder (in module pydicom.pixels.decoders.base)": [[234, "pydicom.pixels.decoders.base.JPEGExtended12BitDecoder"]], "jpeglslosslessdecoder (in module pydicom.pixels.decoders.base)": [[235, "pydicom.pixels.decoders.base.JPEGLSLosslessDecoder"]], "jpeglsnearlosslessdecoder (in module pydicom.pixels.decoders.base)": [[236, "pydicom.pixels.decoders.base.JPEGLSNearLosslessDecoder"]], "jpeglosslessdecoder (in module pydicom.pixels.decoders.base)": [[237, "pydicom.pixels.decoders.base.JPEGLosslessDecoder"]], "jpeglosslesssv1decoder (in module pydicom.pixels.decoders.base)": [[238, "pydicom.pixels.decoders.base.JPEGLosslessSV1Decoder"]], "rlelosslessdecoder (in module pydicom.pixels.decoders.base)": [[239, "pydicom.pixels.decoders.base.RLELosslessDecoder"]], "encoderunner (class in pydicom.pixels.encoders.base)": [[240, "pydicom.pixels.encoders.base.EncodeRunner"]], "__init__() (pydicom.pixels.encoders.base.encoderunner method)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.__init__"]], "bits_allocated (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.bits_allocated"]], "bits_stored (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.bits_stored"]], "columns (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.columns"]], "del_option() (pydicom.pixels.encoders.base.encoderunner method)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.del_option"]], "encode() (pydicom.pixels.encoders.base.encoderunner method)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.encode"]], "extended_offsets (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.extended_offsets"]], "frame_length() (pydicom.pixels.encoders.base.encoderunner method)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.frame_length"]], "get_frame() (pydicom.pixels.encoders.base.encoderunner method)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.get_frame"]], "get_option() (pydicom.pixels.encoders.base.encoderunner method)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.get_option"]], "is_array (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.is_array"]], "is_binary (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.is_binary"]], "is_buffer (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.is_buffer"]], "is_dataset (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.is_dataset"]], "number_of_frames (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.number_of_frames"]], "options (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.options"]], "photometric_interpretation (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.photometric_interpretation"]], "pixel_keyword (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.pixel_keyword"]], "pixel_representation (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.pixel_representation"]], "planar_configuration (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.planar_configuration"]], "rows (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.rows"]], "samples_per_pixel (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.samples_per_pixel"]], "set_encoders() (pydicom.pixels.encoders.base.encoderunner method)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.set_encoders"]], "set_option() (pydicom.pixels.encoders.base.encoderunner method)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.set_option"]], "set_options() (pydicom.pixels.encoders.base.encoderunner method)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.set_options"]], "set_source() (pydicom.pixels.encoders.base.encoderunner method)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.set_source"]], "src (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.src"]], "transfer_syntax (pydicom.pixels.encoders.base.encoderunner property)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.transfer_syntax"]], "validate() (pydicom.pixels.encoders.base.encoderunner method)": [[240, "pydicom.pixels.encoders.base.EncodeRunner.validate"]], "encoder (class in pydicom.pixels.encoders.base)": [[241, "pydicom.pixels.encoders.base.Encoder"]], "uid (pydicom.pixels.encoders.base.encoder property)": [[241, "pydicom.pixels.encoders.base.Encoder.UID"]], "__init__() (pydicom.pixels.encoders.base.encoder method)": [[241, "pydicom.pixels.encoders.base.Encoder.__init__"]], "add_plugin() (pydicom.pixels.encoders.base.encoder method)": [[241, "pydicom.pixels.encoders.base.Encoder.add_plugin"]], "add_plugins() (pydicom.pixels.encoders.base.encoder method)": [[241, "pydicom.pixels.encoders.base.Encoder.add_plugins"]], "encode() (pydicom.pixels.encoders.base.encoder method)": [[241, "pydicom.pixels.encoders.base.Encoder.encode"]], "is_available (pydicom.pixels.encoders.base.encoder property)": [[241, "pydicom.pixels.encoders.base.Encoder.is_available"]], "is_encapsulated (pydicom.pixels.encoders.base.encoder property)": [[241, "pydicom.pixels.encoders.base.Encoder.is_encapsulated"]], "is_native (pydicom.pixels.encoders.base.encoder property)": [[241, "pydicom.pixels.encoders.base.Encoder.is_native"]], "iter_encode() (pydicom.pixels.encoders.base.encoder method)": [[241, "pydicom.pixels.encoders.base.Encoder.iter_encode"]], "missing_dependencies (pydicom.pixels.encoders.base.encoder property)": [[241, "pydicom.pixels.encoders.base.Encoder.missing_dependencies"]], "remove_plugin() (pydicom.pixels.encoders.base.encoder method)": [[241, "pydicom.pixels.encoders.base.Encoder.remove_plugin"]], "jpeg2000encoder (in module pydicom.pixels.encoders.base)": [[242, "pydicom.pixels.encoders.base.JPEG2000Encoder"]], "jpeg2000losslessencoder (in module pydicom.pixels.encoders.base)": [[243, "pydicom.pixels.encoders.base.JPEG2000LosslessEncoder"]], "jpeglslosslessencoder (in module pydicom.pixels.encoders.base)": [[244, "pydicom.pixels.encoders.base.JPEGLSLosslessEncoder"]], "jpeglsnearlosslessencoder (in module pydicom.pixels.encoders.base)": [[245, "pydicom.pixels.encoders.base.JPEGLSNearLosslessEncoder"]], "rlelosslessencoder (in module pydicom.pixels.encoders.base)": [[246, "pydicom.pixels.encoders.base.RLELosslessEncoder"]], "get_decoder() (in module pydicom.pixels)": [[247, "pydicom.pixels.get_decoder"]], "get_encoder() (in module pydicom.pixels)": [[248, "pydicom.pixels.get_encoder"]], "iter_pixels() (in module pydicom.pixels)": [[249, "pydicom.pixels.iter_pixels"]], "pixel_array() (in module pydicom.pixels)": [[250, "pydicom.pixels.pixel_array"]], "sequence (class in pydicom.sequence)": [[251, "pydicom.sequence.Sequence"]], "__init__() (pydicom.sequence.sequence method)": [[251, "pydicom.sequence.Sequence.__init__"]], "append() (pydicom.sequence.sequence method)": [[251, "pydicom.sequence.Sequence.append"]], "clear() (pydicom.sequence.sequence method)": [[251, "pydicom.sequence.Sequence.clear"]], "count() (pydicom.sequence.sequence method)": [[251, "pydicom.sequence.Sequence.count"]], "extend() (pydicom.sequence.sequence method)": [[251, "pydicom.sequence.Sequence.extend"]], "index() (pydicom.sequence.sequence method)": [[251, "pydicom.sequence.Sequence.index"]], "insert() (pydicom.sequence.sequence method)": [[251, "pydicom.sequence.Sequence.insert"]], "pop() (pydicom.sequence.sequence method)": [[251, "pydicom.sequence.Sequence.pop"]], "remove() (pydicom.sequence.sequence method)": [[251, "pydicom.sequence.Sequence.remove"]], "reverse() (pydicom.sequence.sequence method)": [[251, "pydicom.sequence.Sequence.reverse"]], "basetag (class in pydicom.tag)": [[252, "pydicom.tag.BaseTag"]], "__init__() (pydicom.tag.basetag method)": [[252, "pydicom.tag.BaseTag.__init__"]], "as_integer_ratio() (pydicom.tag.basetag method)": [[252, "pydicom.tag.BaseTag.as_integer_ratio"]], "bit_count() (pydicom.tag.basetag method)": [[252, "pydicom.tag.BaseTag.bit_count"]], "bit_length() (pydicom.tag.basetag method)": [[252, "pydicom.tag.BaseTag.bit_length"]], "conjugate() (pydicom.tag.basetag method)": [[252, "pydicom.tag.BaseTag.conjugate"]], "denominator (pydicom.tag.basetag attribute)": [[252, "pydicom.tag.BaseTag.denominator"]], "elem (pydicom.tag.basetag property)": [[252, "pydicom.tag.BaseTag.elem"]], "element (pydicom.tag.basetag property)": [[252, "pydicom.tag.BaseTag.element"]], "from_bytes() (pydicom.tag.basetag method)": [[252, "pydicom.tag.BaseTag.from_bytes"]], "group (pydicom.tag.basetag property)": [[252, "pydicom.tag.BaseTag.group"]], "imag (pydicom.tag.basetag attribute)": [[252, "pydicom.tag.BaseTag.imag"]], "is_private (pydicom.tag.basetag property)": [[252, "pydicom.tag.BaseTag.is_private"]], "is_private_creator (pydicom.tag.basetag property)": [[252, "pydicom.tag.BaseTag.is_private_creator"]], "json_key (pydicom.tag.basetag property)": [[252, "pydicom.tag.BaseTag.json_key"]], "numerator (pydicom.tag.basetag attribute)": [[252, "pydicom.tag.BaseTag.numerator"]], "private_creator (pydicom.tag.basetag property)": [[252, "pydicom.tag.BaseTag.private_creator"]], "real (pydicom.tag.basetag attribute)": [[252, "pydicom.tag.BaseTag.real"]], "to_bytes() (pydicom.tag.basetag method)": [[252, "pydicom.tag.BaseTag.to_bytes"]], "tag() (in module pydicom.tag)": [[253, "pydicom.tag.Tag"]], "tupletag() (in module pydicom.tag)": [[254, "pydicom.tag.TupleTag"]], "tag_in_exception() (in module pydicom.tag)": [[255, "pydicom.tag.tag_in_exception"]], "acquisitioncontextsrstorage (in module pydicom.uid)": [[256, "pydicom.uid.AcquisitionContextSRStorage"]], "advancedblendingpresentationstatestorage (in module pydicom.uid)": [[257, "pydicom.uid.AdvancedBlendingPresentationStateStorage"]], "alltransfersyntaxes (in module pydicom.uid)": [[258, "pydicom.uid.AllTransferSyntaxes"]], "ambulatoryecgwaveformstorage (in module pydicom.uid)": [[259, "pydicom.uid.AmbulatoryECGWaveformStorage"]], "arterialpulsewaveformstorage (in module pydicom.uid)": [[260, "pydicom.uid.ArterialPulseWaveformStorage"]], "autorefractionmeasurementsstorage (in module pydicom.uid)": [[261, "pydicom.uid.AutorefractionMeasurementsStorage"]], "basicstructureddisplaystorage (in module pydicom.uid)": [[262, "pydicom.uid.BasicStructuredDisplayStorage"]], "basictextsrstorage (in module pydicom.uid)": [[263, "pydicom.uid.BasicTextSRStorage"]], "basicvoiceaudiowaveformstorage (in module pydicom.uid)": [[264, "pydicom.uid.BasicVoiceAudioWaveformStorage"]], "blendingsoftcopypresentationstatestorage (in module pydicom.uid)": [[265, "pydicom.uid.BlendingSoftcopyPresentationStateStorage"]], "bodypositionwaveformstorage (in module pydicom.uid)": [[266, "pydicom.uid.BodyPositionWaveformStorage"]], "breastprojectionxrayimagestorageforpresentation (in module pydicom.uid)": [[267, "pydicom.uid.BreastProjectionXRayImageStorageForPresentation"]], "breastprojectionxrayimagestorageforprocessing (in module pydicom.uid)": [[268, "pydicom.uid.BreastProjectionXRayImageStorageForProcessing"]], "breasttomosynthesisimagestorage (in module pydicom.uid)": [[269, "pydicom.uid.BreastTomosynthesisImageStorage"]], "carmphotonelectronradiationrecordstorage (in module pydicom.uid)": [[270, "pydicom.uid.CArmPhotonElectronRadiationRecordStorage"]], "carmphotonelectronradiationstorage (in module pydicom.uid)": [[271, "pydicom.uid.CArmPhotonElectronRadiationStorage"]], "ctdefinedprocedureprotocolstorage (in module pydicom.uid)": [[272, "pydicom.uid.CTDefinedProcedureProtocolStorage"]], "ctimagestorage (in module pydicom.uid)": [[273, "pydicom.uid.CTImageStorage"]], "ctperformedprocedureprotocolstorage (in module pydicom.uid)": [[274, "pydicom.uid.CTPerformedProcedureProtocolStorage"]], "cardiacelectrophysiologywaveformstorage (in module pydicom.uid)": [[275, "pydicom.uid.CardiacElectrophysiologyWaveformStorage"]], "chestcadsrstorage (in module pydicom.uid)": [[276, "pydicom.uid.ChestCADSRStorage"]], "coloncadsrstorage (in module pydicom.uid)": [[277, "pydicom.uid.ColonCADSRStorage"]], "colorpalettestorage (in module pydicom.uid)": [[278, "pydicom.uid.ColorPaletteStorage"]], "colorsoftcopypresentationstatestorage (in module pydicom.uid)": [[279, "pydicom.uid.ColorSoftcopyPresentationStateStorage"]], "compositingplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[280, "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage"]], "comprehensive3dsrstorage (in module pydicom.uid)": [[281, "pydicom.uid.Comprehensive3DSRStorage"]], "comprehensivesrstorage (in module pydicom.uid)": [[282, "pydicom.uid.ComprehensiveSRStorage"]], "computedradiographyimagestorage (in module pydicom.uid)": [[283, "pydicom.uid.ComputedRadiographyImageStorage"]], "confocalmicroscopyimagestorage (in module pydicom.uid)": [[284, "pydicom.uid.ConfocalMicroscopyImageStorage"]], "confocalmicroscopytiledpyramidalimagestorage (in module pydicom.uid)": [[285, "pydicom.uid.ConfocalMicroscopyTiledPyramidalImageStorage"]], "contentassessmentresultsstorage (in module pydicom.uid)": [[286, "pydicom.uid.ContentAssessmentResultsStorage"]], "cornealtopographymapstorage (in module pydicom.uid)": [[287, "pydicom.uid.CornealTopographyMapStorage"]], "dicos2daitstorage (in module pydicom.uid)": [[288, "pydicom.uid.DICOS2DAITStorage"]], "dicos3daitstorage (in module pydicom.uid)": [[289, "pydicom.uid.DICOS3DAITStorage"]], "dicosctimagestorage (in module pydicom.uid)": [[290, "pydicom.uid.DICOSCTImageStorage"]], "dicosdigitalxrayimagestorageforpresentation (in module pydicom.uid)": [[291, "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation"]], "dicosdigitalxrayimagestorageforprocessing (in module pydicom.uid)": [[292, "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing"]], "dicosquadrupoleresonancestorage (in module pydicom.uid)": [[293, "pydicom.uid.DICOSQuadrupoleResonanceStorage"]], "dicosthreatdetectionreportstorage (in module pydicom.uid)": [[294, "pydicom.uid.DICOSThreatDetectionReportStorage"]], "deflatedexplicitvrlittleendian (in module pydicom.uid)": [[295, "pydicom.uid.DeflatedExplicitVRLittleEndian"]], "deformablespatialregistrationstorage (in module pydicom.uid)": [[296, "pydicom.uid.DeformableSpatialRegistrationStorage"]], "dermoscopicphotographyimagestorage (in module pydicom.uid)": [[297, "pydicom.uid.DermoscopicPhotographyImageStorage"]], "digitalintraoralxrayimagestorageforpresentation (in module pydicom.uid)": [[298, "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation"]], "digitalintraoralxrayimagestorageforprocessing (in module pydicom.uid)": [[299, "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing"]], "digitalmammographyxrayimagestorageforpresentation (in module pydicom.uid)": [[300, "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation"]], "digitalmammographyxrayimagestorageforprocessing (in module pydicom.uid)": [[301, "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing"]], "digitalxrayimagestorageforpresentation (in module pydicom.uid)": [[302, "pydicom.uid.DigitalXRayImageStorageForPresentation"]], "digitalxrayimagestorageforprocessing (in module pydicom.uid)": [[303, "pydicom.uid.DigitalXRayImageStorageForProcessing"]], "eddycurrentimagestorage (in module pydicom.uid)": [[304, "pydicom.uid.EddyCurrentImageStorage"]], "eddycurrentmultiframeimagestorage (in module pydicom.uid)": [[305, "pydicom.uid.EddyCurrentMultiFrameImageStorage"]], "electromyogramwaveformstorage (in module pydicom.uid)": [[306, "pydicom.uid.ElectromyogramWaveformStorage"]], "electrooculogramwaveformstorage (in module pydicom.uid)": [[307, "pydicom.uid.ElectrooculogramWaveformStorage"]], "encapsulatedcdastorage (in module pydicom.uid)": [[308, "pydicom.uid.EncapsulatedCDAStorage"]], "encapsulatedmtlstorage (in module pydicom.uid)": [[309, "pydicom.uid.EncapsulatedMTLStorage"]], "encapsulatedobjstorage (in module pydicom.uid)": [[310, "pydicom.uid.EncapsulatedOBJStorage"]], "encapsulatedpdfstorage (in module pydicom.uid)": [[311, "pydicom.uid.EncapsulatedPDFStorage"]], "encapsulatedstlstorage (in module pydicom.uid)": [[312, "pydicom.uid.EncapsulatedSTLStorage"]], "enhancedctimagestorage (in module pydicom.uid)": [[313, "pydicom.uid.EnhancedCTImageStorage"]], "enhancedcontinuousrtimagestorage (in module pydicom.uid)": [[314, "pydicom.uid.EnhancedContinuousRTImageStorage"]], "enhancedmrcolorimagestorage (in module pydicom.uid)": [[315, "pydicom.uid.EnhancedMRColorImageStorage"]], "enhancedmrimagestorage (in module pydicom.uid)": [[316, "pydicom.uid.EnhancedMRImageStorage"]], "enhancedpetimagestorage (in module pydicom.uid)": [[317, "pydicom.uid.EnhancedPETImageStorage"]], "enhancedrtimagestorage (in module pydicom.uid)": [[318, "pydicom.uid.EnhancedRTImageStorage"]], "enhancedsrstorage (in module pydicom.uid)": [[319, "pydicom.uid.EnhancedSRStorage"]], "enhancedusvolumestorage (in module pydicom.uid)": [[320, "pydicom.uid.EnhancedUSVolumeStorage"]], "enhancedxaimagestorage (in module pydicom.uid)": [[321, "pydicom.uid.EnhancedXAImageStorage"]], "enhancedxrfimagestorage (in module pydicom.uid)": [[322, "pydicom.uid.EnhancedXRFImageStorage"]], "enhancedxrayradiationdosesrstorage (in module pydicom.uid)": [[323, "pydicom.uid.EnhancedXRayRadiationDoseSRStorage"]], "explicitvrbigendian (in module pydicom.uid)": [[324, "pydicom.uid.ExplicitVRBigEndian"]], "explicitvrlittleendian (in module pydicom.uid)": [[325, "pydicom.uid.ExplicitVRLittleEndian"]], "extensiblesrstorage (in module pydicom.uid)": [[326, "pydicom.uid.ExtensibleSRStorage"]], "general32bitecgwaveformstorage (in module pydicom.uid)": [[327, "pydicom.uid.General32bitECGWaveformStorage"]], "generalaudiowaveformstorage (in module pydicom.uid)": [[328, "pydicom.uid.GeneralAudioWaveformStorage"]], "generalecgwaveformstorage (in module pydicom.uid)": [[329, "pydicom.uid.GeneralECGWaveformStorage"]], "genericimplanttemplatestorage (in module pydicom.uid)": [[330, "pydicom.uid.GenericImplantTemplateStorage"]], "grayscaleplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[331, "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage"]], "grayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[332, "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage"]], "hevcm10p51 (in module pydicom.uid)": [[333, "pydicom.uid.HEVCM10P51"]], "hevcmp51 (in module pydicom.uid)": [[334, "pydicom.uid.HEVCMP51"]], "htj2k (in module pydicom.uid)": [[335, "pydicom.uid.HTJ2K"]], "htj2klossless (in module pydicom.uid)": [[336, "pydicom.uid.HTJ2KLossless"]], "htj2klosslessrpcl (in module pydicom.uid)": [[337, "pydicom.uid.HTJ2KLosslessRPCL"]], "hangingprotocolstorage (in module pydicom.uid)": [[338, "pydicom.uid.HangingProtocolStorage"]], "hemodynamicwaveformstorage (in module pydicom.uid)": [[339, "pydicom.uid.HemodynamicWaveformStorage"]], "implantassemblytemplatestorage (in module pydicom.uid)": [[340, "pydicom.uid.ImplantAssemblyTemplateStorage"]], "implanttemplategroupstorage (in module pydicom.uid)": [[341, "pydicom.uid.ImplantTemplateGroupStorage"]], "implantationplansrstorage (in module pydicom.uid)": [[342, "pydicom.uid.ImplantationPlanSRStorage"]], "implicitvrlittleendian (in module pydicom.uid)": [[343, "pydicom.uid.ImplicitVRLittleEndian"]], "intraocularlenscalculationsstorage (in module pydicom.uid)": [[344, "pydicom.uid.IntraocularLensCalculationsStorage"]], "intravascularopticalcoherencetomographyimagestorageforpresentation (in module pydicom.uid)": [[345, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation"]], "intravascularopticalcoherencetomographyimagestorageforprocessing (in module pydicom.uid)": [[346, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing"]], "inventorystorage (in module pydicom.uid)": [[347, "pydicom.uid.InventoryStorage"]], "jpeg2000 (in module pydicom.uid)": [[348, "pydicom.uid.JPEG2000"]], "jpeg2000lossless (in module pydicom.uid)": [[349, "pydicom.uid.JPEG2000Lossless"]], "jpeg2000mc (in module pydicom.uid)": [[350, "pydicom.uid.JPEG2000MC"]], "jpeg2000mclossless (in module pydicom.uid)": [[351, "pydicom.uid.JPEG2000MCLossless"]], "jpeg2000transfersyntaxes (in module pydicom.uid)": [[352, "pydicom.uid.JPEG2000TransferSyntaxes"]], "jpegbaseline8bit (in module pydicom.uid)": [[353, "pydicom.uid.JPEGBaseline8Bit"]], "jpegextended12bit (in module pydicom.uid)": [[354, "pydicom.uid.JPEGExtended12Bit"]], "jpeglslossless (in module pydicom.uid)": [[355, "pydicom.uid.JPEGLSLossless"]], "jpeglsnearlossless (in module pydicom.uid)": [[356, "pydicom.uid.JPEGLSNearLossless"]], "jpeglstransfersyntaxes (in module pydicom.uid)": [[357, "pydicom.uid.JPEGLSTransferSyntaxes"]], "jpeglossless (in module pydicom.uid)": [[358, "pydicom.uid.JPEGLossless"]], "jpeglosslesssv1 (in module pydicom.uid)": [[359, "pydicom.uid.JPEGLosslessSV1"]], "jpegtransfersyntaxes (in module pydicom.uid)": [[360, "pydicom.uid.JPEGTransferSyntaxes"]], "jpiphtj2kreferenced (in module pydicom.uid)": [[361, "pydicom.uid.JPIPHTJ2KReferenced"]], "jpiphtj2kreferenceddeflate (in module pydicom.uid)": [[362, "pydicom.uid.JPIPHTJ2KReferencedDeflate"]], "keratometrymeasurementsstorage (in module pydicom.uid)": [[363, "pydicom.uid.KeratometryMeasurementsStorage"]], "keyobjectselectiondocumentstorage (in module pydicom.uid)": [[364, "pydicom.uid.KeyObjectSelectionDocumentStorage"]], "legacyconvertedenhancedctimagestorage (in module pydicom.uid)": [[365, "pydicom.uid.LegacyConvertedEnhancedCTImageStorage"]], "legacyconvertedenhancedmrimagestorage (in module pydicom.uid)": [[366, "pydicom.uid.LegacyConvertedEnhancedMRImageStorage"]], "legacyconvertedenhancedpetimagestorage (in module pydicom.uid)": [[367, "pydicom.uid.LegacyConvertedEnhancedPETImageStorage"]], "lensometrymeasurementsstorage (in module pydicom.uid)": [[368, "pydicom.uid.LensometryMeasurementsStorage"]], "mpeg2mphl (in module pydicom.uid)": [[369, "pydicom.uid.MPEG2MPHL"]], "mpeg2mphlf (in module pydicom.uid)": [[370, "pydicom.uid.MPEG2MPHLF"]], "mpeg2mpml (in module pydicom.uid)": [[371, "pydicom.uid.MPEG2MPML"]], "mpeg2mpmlf (in module pydicom.uid)": [[372, "pydicom.uid.MPEG2MPMLF"]], "mpeg4hp41 (in module pydicom.uid)": [[373, "pydicom.uid.MPEG4HP41"]], "mpeg4hp41bd (in module pydicom.uid)": [[374, "pydicom.uid.MPEG4HP41BD"]], "mpeg4hp41bdf (in module pydicom.uid)": [[375, "pydicom.uid.MPEG4HP41BDF"]], "mpeg4hp41f (in module pydicom.uid)": [[376, "pydicom.uid.MPEG4HP41F"]], "mpeg4hp422d (in module pydicom.uid)": [[377, "pydicom.uid.MPEG4HP422D"]], "mpeg4hp422df (in module pydicom.uid)": [[378, "pydicom.uid.MPEG4HP422DF"]], "mpeg4hp423d (in module pydicom.uid)": [[379, "pydicom.uid.MPEG4HP423D"]], "mpeg4hp423df (in module pydicom.uid)": [[380, "pydicom.uid.MPEG4HP423DF"]], "mpeg4hp42stereo (in module pydicom.uid)": [[381, "pydicom.uid.MPEG4HP42STEREO"]], "mpeg4hp42stereof (in module pydicom.uid)": [[382, "pydicom.uid.MPEG4HP42STEREOF"]], "mpegtransfersyntaxes (in module pydicom.uid)": [[383, "pydicom.uid.MPEGTransferSyntaxes"]], "mrimagestorage (in module pydicom.uid)": [[384, "pydicom.uid.MRImageStorage"]], "mrspectroscopystorage (in module pydicom.uid)": [[385, "pydicom.uid.MRSpectroscopyStorage"]], "maculargridthicknessandvolumereportstorage (in module pydicom.uid)": [[386, "pydicom.uid.MacularGridThicknessAndVolumeReportStorage"]], "mammographycadsrstorage (in module pydicom.uid)": [[387, "pydicom.uid.MammographyCADSRStorage"]], "mediastoragedirectorystorage (in module pydicom.uid)": [[388, "pydicom.uid.MediaStorageDirectoryStorage"]], "microscopybulksimpleannotationsstorage (in module pydicom.uid)": [[389, "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage"]], "multiframegrayscalebytesecondarycaptureimagestorage (in module pydicom.uid)": [[390, "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage"]], "multiframegrayscalewordsecondarycaptureimagestorage (in module pydicom.uid)": [[391, "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage"]], "multiframesinglebitsecondarycaptureimagestorage (in module pydicom.uid)": [[392, "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage"]], "multiframetruecolorsecondarycaptureimagestorage (in module pydicom.uid)": [[393, "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage"]], "multichannelrespiratorywaveformstorage (in module pydicom.uid)": [[394, "pydicom.uid.MultichannelRespiratoryWaveformStorage"]], "multiplevolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[395, "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage"]], "nuclearmedicineimagestorage (in module pydicom.uid)": [[396, "pydicom.uid.NuclearMedicineImageStorage"]], "ophthalmicaxialmeasurementsstorage (in module pydicom.uid)": [[397, "pydicom.uid.OphthalmicAxialMeasurementsStorage"]], "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage (in module pydicom.uid)": [[398, "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"]], "ophthalmicopticalcoherencetomographyenfaceimagestorage (in module pydicom.uid)": [[399, "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"]], "ophthalmicphotography16bitimagestorage (in module pydicom.uid)": [[400, "pydicom.uid.OphthalmicPhotography16BitImageStorage"]], "ophthalmicphotography8bitimagestorage (in module pydicom.uid)": [[401, "pydicom.uid.OphthalmicPhotography8BitImageStorage"]], "ophthalmicthicknessmapstorage (in module pydicom.uid)": [[402, "pydicom.uid.OphthalmicThicknessMapStorage"]], "ophthalmictomographyimagestorage (in module pydicom.uid)": [[403, "pydicom.uid.OphthalmicTomographyImageStorage"]], "ophthalmicvisualfieldstaticperimetrymeasurementsstorage (in module pydicom.uid)": [[404, "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"]], "pydicom_implementation_uid (in module pydicom.uid)": [[405, "pydicom.uid.PYDICOM_IMPLEMENTATION_UID"]], "pydicom_root_uid (in module pydicom.uid)": [[406, "pydicom.uid.PYDICOM_ROOT_UID"]], "parametricmapstorage (in module pydicom.uid)": [[407, "pydicom.uid.ParametricMapStorage"]], "patientradiationdosesrstorage (in module pydicom.uid)": [[408, "pydicom.uid.PatientRadiationDoseSRStorage"]], "performedimagingagentadministrationsrstorage (in module pydicom.uid)": [[409, "pydicom.uid.PerformedImagingAgentAdministrationSRStorage"]], "photoacousticimagestorage (in module pydicom.uid)": [[410, "pydicom.uid.PhotoacousticImageStorage"]], "plannedimagingagentadministrationsrstorage (in module pydicom.uid)": [[411, "pydicom.uid.PlannedImagingAgentAdministrationSRStorage"]], "positronemissiontomographyimagestorage (in module pydicom.uid)": [[412, "pydicom.uid.PositronEmissionTomographyImageStorage"]], "privatetransfersyntaxes (in module pydicom.uid)": [[413, "pydicom.uid.PrivateTransferSyntaxes"]], "procedurelogstorage (in module pydicom.uid)": [[414, "pydicom.uid.ProcedureLogStorage"]], "protocolapprovalstorage (in module pydicom.uid)": [[415, "pydicom.uid.ProtocolApprovalStorage"]], "pseudocolorsoftcopypresentationstatestorage (in module pydicom.uid)": [[416, "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage"]], "re_valid_uid (in module pydicom.uid)": [[417, "pydicom.uid.RE_VALID_UID"]], "re_valid_uid_prefix (in module pydicom.uid)": [[418, "pydicom.uid.RE_VALID_UID_PREFIX"]], "rlelossless (in module pydicom.uid)": [[419, "pydicom.uid.RLELossless"]], "rletransfersyntaxes (in module pydicom.uid)": [[420, "pydicom.uid.RLETransferSyntaxes"]], "rtbeamsdeliveryinstructionstorage (in module pydicom.uid)": [[421, "pydicom.uid.RTBeamsDeliveryInstructionStorage"]], "rtbeamstreatmentrecordstorage (in module pydicom.uid)": [[422, "pydicom.uid.RTBeamsTreatmentRecordStorage"]], "rtbrachyapplicationsetupdeliveryinstructionstorage (in module pydicom.uid)": [[423, "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage"]], "rtbrachytreatmentrecordstorage (in module pydicom.uid)": [[424, "pydicom.uid.RTBrachyTreatmentRecordStorage"]], "rtdosestorage (in module pydicom.uid)": [[425, "pydicom.uid.RTDoseStorage"]], "rtimagestorage (in module pydicom.uid)": [[426, "pydicom.uid.RTImageStorage"]], "rtionbeamstreatmentrecordstorage (in module pydicom.uid)": [[427, "pydicom.uid.RTIonBeamsTreatmentRecordStorage"]], "rtionplanstorage (in module pydicom.uid)": [[428, "pydicom.uid.RTIonPlanStorage"]], "rtpatientpositionacquisitioninstructionstorage (in module pydicom.uid)": [[429, "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage"]], "rtphysicianintentstorage (in module pydicom.uid)": [[430, "pydicom.uid.RTPhysicianIntentStorage"]], "rtplanstorage (in module pydicom.uid)": [[431, "pydicom.uid.RTPlanStorage"]], "rtradiationrecordsetstorage (in module pydicom.uid)": [[432, "pydicom.uid.RTRadiationRecordSetStorage"]], "rtradiationsalvagerecordstorage (in module pydicom.uid)": [[433, "pydicom.uid.RTRadiationSalvageRecordStorage"]], "rtradiationsetdeliveryinstructionstorage (in module pydicom.uid)": [[434, "pydicom.uid.RTRadiationSetDeliveryInstructionStorage"]], "rtradiationsetstorage (in module pydicom.uid)": [[435, "pydicom.uid.RTRadiationSetStorage"]], "rtsegmentannotationstorage (in module pydicom.uid)": [[436, "pydicom.uid.RTSegmentAnnotationStorage"]], "rtstructuresetstorage (in module pydicom.uid)": [[437, "pydicom.uid.RTStructureSetStorage"]], "rttreatmentpreparationstorage (in module pydicom.uid)": [[438, "pydicom.uid.RTTreatmentPreparationStorage"]], "rttreatmentsummaryrecordstorage (in module pydicom.uid)": [[439, "pydicom.uid.RTTreatmentSummaryRecordStorage"]], "radiopharmaceuticalradiationdosesrstorage (in module pydicom.uid)": [[440, "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage"]], "rawdatastorage (in module pydicom.uid)": [[441, "pydicom.uid.RawDataStorage"]], "realworldvaluemappingstorage (in module pydicom.uid)": [[442, "pydicom.uid.RealWorldValueMappingStorage"]], "respiratorywaveformstorage (in module pydicom.uid)": [[443, "pydicom.uid.RespiratoryWaveformStorage"]], "roboticarmradiationstorage (in module pydicom.uid)": [[444, "pydicom.uid.RoboticArmRadiationStorage"]], "roboticradiationrecordstorage (in module pydicom.uid)": [[445, "pydicom.uid.RoboticRadiationRecordStorage"]], "routinescalpelectroencephalogramwaveformstorage (in module pydicom.uid)": [[446, "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage"]], "smptest211020uncompressedinterlacedactivevideo (in module pydicom.uid)": [[447, "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo"]], "smptest211020uncompressedprogressiveactivevideo (in module pydicom.uid)": [[448, "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo"]], "smptest211030pcmdigitalaudio (in module pydicom.uid)": [[449, "pydicom.uid.SMPTEST211030PCMDigitalAudio"]], "secondarycaptureimagestorage (in module pydicom.uid)": [[450, "pydicom.uid.SecondaryCaptureImageStorage"]], "segmentationstorage (in module pydicom.uid)": [[451, "pydicom.uid.SegmentationStorage"]], "segmentedvolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[452, "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage"]], "simplifiedadultechosrstorage (in module pydicom.uid)": [[453, "pydicom.uid.SimplifiedAdultEchoSRStorage"]], "sleepelectroencephalogramwaveformstorage (in module pydicom.uid)": [[454, "pydicom.uid.SleepElectroencephalogramWaveformStorage"]], "spatialfiducialsstorage (in module pydicom.uid)": [[455, "pydicom.uid.SpatialFiducialsStorage"]], "spatialregistrationstorage (in module pydicom.uid)": [[456, "pydicom.uid.SpatialRegistrationStorage"]], "spectacleprescriptionreportstorage (in module pydicom.uid)": [[457, "pydicom.uid.SpectaclePrescriptionReportStorage"]], "stereometricrelationshipstorage (in module pydicom.uid)": [[458, "pydicom.uid.StereometricRelationshipStorage"]], "subjectiverefractionmeasurementsstorage (in module pydicom.uid)": [[459, "pydicom.uid.SubjectiveRefractionMeasurementsStorage"]], "surfacescanmeshstorage (in module pydicom.uid)": [[460, "pydicom.uid.SurfaceScanMeshStorage"]], "surfacescanpointcloudstorage (in module pydicom.uid)": [[461, "pydicom.uid.SurfaceScanPointCloudStorage"]], "surfacesegmentationstorage (in module pydicom.uid)": [[462, "pydicom.uid.SurfaceSegmentationStorage"]], "tomotherapeuticradiationrecordstorage (in module pydicom.uid)": [[463, "pydicom.uid.TomotherapeuticRadiationRecordStorage"]], "tomotherapeuticradiationstorage (in module pydicom.uid)": [[464, "pydicom.uid.TomotherapeuticRadiationStorage"]], "tractographyresultsstorage (in module pydicom.uid)": [[465, "pydicom.uid.TractographyResultsStorage"]], "twelveleadecgwaveformstorage (in module pydicom.uid)": [[466, "pydicom.uid.TwelveLeadECGWaveformStorage"]], "uid (class in pydicom.uid)": [[467, "pydicom.uid.UID"]], "__init__() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.__init__"]], "capitalize() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.capitalize"]], "casefold() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.casefold"]], "center() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.center"]], "count() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.count"]], "encode() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.encode"]], "endswith() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.endswith"]], "expandtabs() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.expandtabs"]], "find() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.find"]], "format() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.format"]], "format_map() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.format_map"]], "index() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.index"]], "info (pydicom.uid.uid property)": [[467, "pydicom.uid.UID.info"]], "is_compressed (pydicom.uid.uid property)": [[467, "pydicom.uid.UID.is_compressed"]], "is_deflated (pydicom.uid.uid property)": [[467, "pydicom.uid.UID.is_deflated"]], "is_encapsulated (pydicom.uid.uid property)": [[467, "pydicom.uid.UID.is_encapsulated"]], "is_implicit_vr (pydicom.uid.uid property)": [[467, "pydicom.uid.UID.is_implicit_VR"]], "is_little_endian (pydicom.uid.uid property)": [[467, "pydicom.uid.UID.is_little_endian"]], "is_private (pydicom.uid.uid property)": [[467, "pydicom.uid.UID.is_private"]], "is_retired (pydicom.uid.uid property)": [[467, "pydicom.uid.UID.is_retired"]], "is_transfer_syntax (pydicom.uid.uid property)": [[467, "pydicom.uid.UID.is_transfer_syntax"]], "is_valid (pydicom.uid.uid property)": [[467, "pydicom.uid.UID.is_valid"]], "isalnum() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.isalnum"]], "isalpha() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.isalpha"]], "isascii() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.isascii"]], "isdecimal() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.isdecimal"]], "isdigit() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.isdigit"]], "isidentifier() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.isidentifier"]], "islower() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.islower"]], "isnumeric() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.isnumeric"]], "isprintable() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.isprintable"]], "isspace() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.isspace"]], "istitle() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.istitle"]], "isupper() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.isupper"]], "join() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.join"]], "keyword (pydicom.uid.uid property)": [[467, "pydicom.uid.UID.keyword"]], "ljust() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.ljust"]], "lower() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.lower"]], "lstrip() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.lstrip"]], "maketrans() (pydicom.uid.uid static method)": [[467, "pydicom.uid.UID.maketrans"]], "name (pydicom.uid.uid property)": [[467, "pydicom.uid.UID.name"]], "partition() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.partition"]], "removeprefix() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.removeprefix"]], "removesuffix() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.removesuffix"]], "replace() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.replace"]], "rfind() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.rfind"]], "rindex() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.rindex"]], "rjust() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.rjust"]], "rpartition() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.rpartition"]], "rsplit() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.rsplit"]], "rstrip() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.rstrip"]], "set_private_encoding() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.set_private_encoding"]], "split() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.split"]], "splitlines() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.splitlines"]], "startswith() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.startswith"]], "strip() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.strip"]], "swapcase() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.swapcase"]], "title() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.title"]], "translate() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.translate"]], "type (pydicom.uid.uid property)": [[467, "pydicom.uid.UID.type"]], "upper() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.upper"]], "zfill() (pydicom.uid.uid method)": [[467, "pydicom.uid.UID.zfill"]], "ultrasoundimagestorage (in module pydicom.uid)": [[468, "pydicom.uid.UltrasoundImageStorage"]], "ultrasoundmultiframeimagestorage (in module pydicom.uid)": [[469, "pydicom.uid.UltrasoundMultiFrameImageStorage"]], "uncompressedtransfersyntaxes (in module pydicom.uid)": [[470, "pydicom.uid.UncompressedTransferSyntaxes"]], "vlendoscopicimagestorage (in module pydicom.uid)": [[471, "pydicom.uid.VLEndoscopicImageStorage"]], "vlmicroscopicimagestorage (in module pydicom.uid)": [[472, "pydicom.uid.VLMicroscopicImageStorage"]], "vlphotographicimagestorage (in module pydicom.uid)": [[473, "pydicom.uid.VLPhotographicImageStorage"]], "vlslidecoordinatesmicroscopicimagestorage (in module pydicom.uid)": [[474, "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage"]], "vlwholeslidemicroscopyimagestorage (in module pydicom.uid)": [[475, "pydicom.uid.VLWholeSlideMicroscopyImageStorage"]], "variablemodalitylutsoftcopypresentationstatestorage (in module pydicom.uid)": [[476, "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage"]], "videoendoscopicimagestorage (in module pydicom.uid)": [[477, "pydicom.uid.VideoEndoscopicImageStorage"]], "videomicroscopicimagestorage (in module pydicom.uid)": [[478, "pydicom.uid.VideoMicroscopicImageStorage"]], "videophotographicimagestorage (in module pydicom.uid)": [[479, "pydicom.uid.VideoPhotographicImageStorage"]], "visualacuitymeasurementsstorage (in module pydicom.uid)": [[480, "pydicom.uid.VisualAcuityMeasurementsStorage"]], "volumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[481, "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage"]], "widefieldophthalmicphotography3dcoordinatesimagestorage (in module pydicom.uid)": [[482, "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage"]], "widefieldophthalmicphotographystereographicprojectionimagestorage (in module pydicom.uid)": [[483, "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"]], "xadefinedprocedureprotocolstorage (in module pydicom.uid)": [[484, "pydicom.uid.XADefinedProcedureProtocolStorage"]], "xaperformedprocedureprotocolstorage (in module pydicom.uid)": [[485, "pydicom.uid.XAPerformedProcedureProtocolStorage"]], "xaxrfgrayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[486, "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage"]], "xray3dangiographicimagestorage (in module pydicom.uid)": [[487, "pydicom.uid.XRay3DAngiographicImageStorage"]], "xray3dcraniofacialimagestorage (in module pydicom.uid)": [[488, "pydicom.uid.XRay3DCraniofacialImageStorage"]], "xrayangiographicimagestorage (in module pydicom.uid)": [[489, "pydicom.uid.XRayAngiographicImageStorage"]], "xrayradiationdosesrstorage (in module pydicom.uid)": [[490, "pydicom.uid.XRayRadiationDoseSRStorage"]], "xrayradiofluoroscopicimagestorage (in module pydicom.uid)": [[491, "pydicom.uid.XRayRadiofluoroscopicImageStorage"]], "generate_uid() (in module pydicom.uid)": [[492, "pydicom.uid.generate_uid"]], "register_transfer_syntax() (in module pydicom.uid)": [[493, "pydicom.uid.register_transfer_syntax"]], "da (class in pydicom.valuerep)": [[494, "pydicom.valuerep.DA"]], "__init__() (pydicom.valuerep.da method)": [[494, "pydicom.valuerep.DA.__init__"]], "ctime() (pydicom.valuerep.da method)": [[494, "pydicom.valuerep.DA.ctime"]], "fromisocalendar() (pydicom.valuerep.da method)": [[494, "pydicom.valuerep.DA.fromisocalendar"]], "fromisoformat() (pydicom.valuerep.da method)": [[494, "pydicom.valuerep.DA.fromisoformat"]], "fromordinal() (pydicom.valuerep.da method)": [[494, "pydicom.valuerep.DA.fromordinal"]], "fromtimestamp() (pydicom.valuerep.da method)": [[494, "pydicom.valuerep.DA.fromtimestamp"]], "isocalendar() (pydicom.valuerep.da method)": [[494, "pydicom.valuerep.DA.isocalendar"]], "isoformat() (pydicom.valuerep.da method)": [[494, "pydicom.valuerep.DA.isoformat"]], "isoweekday() (pydicom.valuerep.da method)": [[494, "pydicom.valuerep.DA.isoweekday"]], "replace() (pydicom.valuerep.da method)": [[494, "pydicom.valuerep.DA.replace"]], "strftime() (pydicom.valuerep.da method)": [[494, "pydicom.valuerep.DA.strftime"]], "timetuple() (pydicom.valuerep.da method)": [[494, "pydicom.valuerep.DA.timetuple"]], "today() (pydicom.valuerep.da method)": [[494, "pydicom.valuerep.DA.today"]], "toordinal() (pydicom.valuerep.da method)": [[494, "pydicom.valuerep.DA.toordinal"]], "weekday() (pydicom.valuerep.da method)": [[494, "pydicom.valuerep.DA.weekday"]], "ds() (in module pydicom.valuerep)": [[495, "pydicom.valuerep.DS"]], "dsdecimal (class in pydicom.valuerep)": [[496, "pydicom.valuerep.DSdecimal"]], "__init__() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.__init__"]], "adjusted() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.adjusted"]], "as_integer_ratio() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.as_integer_ratio"]], "as_tuple() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.as_tuple"]], "canonical() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.canonical"]], "compare() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.compare"]], "compare_signal() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.compare_signal"]], "compare_total() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.compare_total"]], "compare_total_mag() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.compare_total_mag"]], "conjugate() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.conjugate"]], "copy_abs() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.copy_abs"]], "copy_negate() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.copy_negate"]], "copy_sign() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.copy_sign"]], "exp() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.exp"]], "fma() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.fma"]], "from_float() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.from_float"]], "is_canonical() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.is_canonical"]], "is_finite() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.is_finite"]], "is_infinite() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.is_infinite"]], "is_nan() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.is_nan"]], "is_normal() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.is_normal"]], "is_qnan() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.is_qnan"]], "is_signed() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.is_signed"]], "is_snan() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.is_snan"]], "is_subnormal() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.is_subnormal"]], "is_zero() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.is_zero"]], "ln() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.ln"]], "log10() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.log10"]], "logb() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.logb"]], "logical_and() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.logical_and"]], "logical_invert() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.logical_invert"]], "logical_or() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.logical_or"]], "logical_xor() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.logical_xor"]], "max() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.max"]], "max_mag() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.max_mag"]], "min() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.min"]], "min_mag() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.min_mag"]], "next_minus() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.next_minus"]], "next_plus() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.next_plus"]], "next_toward() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.next_toward"]], "normalize() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.normalize"]], "number_class() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.number_class"]], "quantize() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.quantize"]], "radix() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.radix"]], "remainder_near() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.remainder_near"]], "rotate() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.rotate"]], "same_quantum() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.same_quantum"]], "scaleb() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.scaleb"]], "shift() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.shift"]], "sqrt() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.sqrt"]], "to_eng_string() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.to_eng_string"]], "to_integral() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.to_integral"]], "to_integral_exact() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.to_integral_exact"]], "to_integral_value() (pydicom.valuerep.dsdecimal method)": [[496, "pydicom.valuerep.DSdecimal.to_integral_value"]], "dsfloat (class in pydicom.valuerep)": [[497, "pydicom.valuerep.DSfloat"]], "__init__() (pydicom.valuerep.dsfloat method)": [[497, "pydicom.valuerep.DSfloat.__init__"]], "as_integer_ratio() (pydicom.valuerep.dsfloat method)": [[497, "pydicom.valuerep.DSfloat.as_integer_ratio"]], "conjugate() (pydicom.valuerep.dsfloat method)": [[497, "pydicom.valuerep.DSfloat.conjugate"]], "fromhex() (pydicom.valuerep.dsfloat method)": [[497, "pydicom.valuerep.DSfloat.fromhex"]], "hex() (pydicom.valuerep.dsfloat method)": [[497, "pydicom.valuerep.DSfloat.hex"]], "imag (pydicom.valuerep.dsfloat attribute)": [[497, "pydicom.valuerep.DSfloat.imag"]], "is_integer() (pydicom.valuerep.dsfloat method)": [[497, "pydicom.valuerep.DSfloat.is_integer"]], "real (pydicom.valuerep.dsfloat attribute)": [[497, "pydicom.valuerep.DSfloat.real"]], "dt (class in pydicom.valuerep)": [[498, "pydicom.valuerep.DT"]], "__init__() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.__init__"]], "astimezone() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.astimezone"]], "combine() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.combine"]], "ctime() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.ctime"]], "date() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.date"]], "dst() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.dst"]], "fromisocalendar() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.fromisocalendar"]], "fromisoformat() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.fromisoformat"]], "fromordinal() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.fromordinal"]], "fromtimestamp() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.fromtimestamp"]], "isocalendar() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.isocalendar"]], "isoformat() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.isoformat"]], "isoweekday() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.isoweekday"]], "now() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.now"]], "replace() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.replace"]], "strftime() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.strftime"]], "strptime() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.strptime"]], "time() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.time"]], "timestamp() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.timestamp"]], "timetuple() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.timetuple"]], "timetz() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.timetz"]], "today() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.today"]], "toordinal() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.toordinal"]], "tzname() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.tzname"]], "utcfromtimestamp() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.utcfromtimestamp"]], "utcnow() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.utcnow"]], "utcoffset() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.utcoffset"]], "utctimetuple() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.utctimetuple"]], "weekday() (pydicom.valuerep.dt method)": [[498, "pydicom.valuerep.DT.weekday"]], "is (class in pydicom.valuerep)": [[499, "pydicom.valuerep.IS"]], "__init__() (pydicom.valuerep.is method)": [[499, "pydicom.valuerep.IS.__init__"]], "as_integer_ratio() (pydicom.valuerep.is method)": [[499, "pydicom.valuerep.IS.as_integer_ratio"]], "bit_count() (pydicom.valuerep.is method)": [[499, "pydicom.valuerep.IS.bit_count"]], "bit_length() (pydicom.valuerep.is method)": [[499, "pydicom.valuerep.IS.bit_length"]], "conjugate() (pydicom.valuerep.is method)": [[499, "pydicom.valuerep.IS.conjugate"]], "denominator (pydicom.valuerep.is attribute)": [[499, "pydicom.valuerep.IS.denominator"]], "from_bytes() (pydicom.valuerep.is method)": [[499, "pydicom.valuerep.IS.from_bytes"]], "imag (pydicom.valuerep.is attribute)": [[499, "pydicom.valuerep.IS.imag"]], "numerator (pydicom.valuerep.is attribute)": [[499, "pydicom.valuerep.IS.numerator"]], "real (pydicom.valuerep.is attribute)": [[499, "pydicom.valuerep.IS.real"]], "to_bytes() (pydicom.valuerep.is method)": [[499, "pydicom.valuerep.IS.to_bytes"]], "isfloat (class in pydicom.valuerep)": [[500, "pydicom.valuerep.ISfloat"]], "__init__() (pydicom.valuerep.isfloat method)": [[500, "pydicom.valuerep.ISfloat.__init__"]], "as_integer_ratio() (pydicom.valuerep.isfloat method)": [[500, "pydicom.valuerep.ISfloat.as_integer_ratio"]], "conjugate() (pydicom.valuerep.isfloat method)": [[500, "pydicom.valuerep.ISfloat.conjugate"]], "fromhex() (pydicom.valuerep.isfloat method)": [[500, "pydicom.valuerep.ISfloat.fromhex"]], "hex() (pydicom.valuerep.isfloat method)": [[500, "pydicom.valuerep.ISfloat.hex"]], "imag (pydicom.valuerep.isfloat attribute)": [[500, "pydicom.valuerep.ISfloat.imag"]], "is_integer() (pydicom.valuerep.isfloat method)": [[500, "pydicom.valuerep.ISfloat.is_integer"]], "real (pydicom.valuerep.isfloat attribute)": [[500, "pydicom.valuerep.ISfloat.real"]], "personname (class in pydicom.valuerep)": [[501, "pydicom.valuerep.PersonName"]], "__init__() (pydicom.valuerep.personname method)": [[501, "pydicom.valuerep.PersonName.__init__"]], "alphabetic (pydicom.valuerep.personname property)": [[501, "pydicom.valuerep.PersonName.alphabetic"]], "components (pydicom.valuerep.personname property)": [[501, "pydicom.valuerep.PersonName.components"]], "decode() (pydicom.valuerep.personname method)": [[501, "pydicom.valuerep.PersonName.decode"]], "encode() (pydicom.valuerep.personname method)": [[501, "pydicom.valuerep.PersonName.encode"]], "family_comma_given() (pydicom.valuerep.personname method)": [[501, "pydicom.valuerep.PersonName.family_comma_given"]], "family_name (pydicom.valuerep.personname property)": [[501, "pydicom.valuerep.PersonName.family_name"]], "formatted() (pydicom.valuerep.personname method)": [[501, "pydicom.valuerep.PersonName.formatted"]], "from_named_components() (pydicom.valuerep.personname class method)": [[501, "pydicom.valuerep.PersonName.from_named_components"]], "from_named_components_veterinary() (pydicom.valuerep.personname class method)": [[501, "pydicom.valuerep.PersonName.from_named_components_veterinary"]], "given_name (pydicom.valuerep.personname property)": [[501, "pydicom.valuerep.PersonName.given_name"]], "ideographic (pydicom.valuerep.personname property)": [[501, "pydicom.valuerep.PersonName.ideographic"]], "middle_name (pydicom.valuerep.personname property)": [[501, "pydicom.valuerep.PersonName.middle_name"]], "name_prefix (pydicom.valuerep.personname property)": [[501, "pydicom.valuerep.PersonName.name_prefix"]], "name_suffix (pydicom.valuerep.personname property)": [[501, "pydicom.valuerep.PersonName.name_suffix"]], "phonetic (pydicom.valuerep.personname property)": [[501, "pydicom.valuerep.PersonName.phonetic"]], "tm (class in pydicom.valuerep)": [[502, "pydicom.valuerep.TM"]], "__init__() (pydicom.valuerep.tm method)": [[502, "pydicom.valuerep.TM.__init__"]], "dst() (pydicom.valuerep.tm method)": [[502, "pydicom.valuerep.TM.dst"]], "fromisoformat() (pydicom.valuerep.tm method)": [[502, "pydicom.valuerep.TM.fromisoformat"]], "isoformat() (pydicom.valuerep.tm method)": [[502, "pydicom.valuerep.TM.isoformat"]], "replace() (pydicom.valuerep.tm method)": [[502, "pydicom.valuerep.TM.replace"]], "strftime() (pydicom.valuerep.tm method)": [[502, "pydicom.valuerep.TM.strftime"]], "tzname() (pydicom.valuerep.tm method)": [[502, "pydicom.valuerep.TM.tzname"]], "utcoffset() (pydicom.valuerep.tm method)": [[502, "pydicom.valuerep.TM.utcoffset"]], "vr (class in pydicom.valuerep)": [[503, "pydicom.valuerep.VR"]], "__init__() (pydicom.valuerep.vr method)": [[503, "pydicom.valuerep.VR.__init__"]], "format_number_as_ds() (in module pydicom.valuerep)": [[504, "pydicom.valuerep.format_number_as_ds"]], "is_valid_ds() (in module pydicom.valuerep)": [[505, "pydicom.valuerep.is_valid_ds"]], "convert_ae_string() (in module pydicom.values)": [[506, "pydicom.values.convert_AE_string"]], "convert_atvalue() (in module pydicom.values)": [[507, "pydicom.values.convert_ATvalue"]], "convert_da_string() (in module pydicom.values)": [[508, "pydicom.values.convert_DA_string"]], "convert_ds_string() (in module pydicom.values)": [[509, "pydicom.values.convert_DS_string"]], "convert_dt_string() (in module pydicom.values)": [[510, "pydicom.values.convert_DT_string"]], "convert_is_string() (in module pydicom.values)": [[511, "pydicom.values.convert_IS_string"]], "convert_obvalue() (in module pydicom.values)": [[512, "pydicom.values.convert_OBvalue"]], "convert_owvalue() (in module pydicom.values)": [[513, "pydicom.values.convert_OWvalue"]], "convert_pn() (in module pydicom.values)": [[514, "pydicom.values.convert_PN"]], "convert_sq() (in module pydicom.values)": [[515, "pydicom.values.convert_SQ"]], "convert_tm_string() (in module pydicom.values)": [[516, "pydicom.values.convert_TM_string"]], "convert_ui() (in module pydicom.values)": [[517, "pydicom.values.convert_UI"]], "convert_un() (in module pydicom.values)": [[518, "pydicom.values.convert_UN"]], "convert_ur_string() (in module pydicom.values)": [[519, "pydicom.values.convert_UR_string"]], "convert_numbers() (in module pydicom.values)": [[520, "pydicom.values.convert_numbers"]], "convert_single_string() (in module pydicom.values)": [[521, "pydicom.values.convert_single_string"]], "convert_string() (in module pydicom.values)": [[522, "pydicom.values.convert_string"]], "convert_tag() (in module pydicom.values)": [[523, "pydicom.values.convert_tag"]], "convert_text() (in module pydicom.values)": [[524, "pydicom.values.convert_text"]], "convert_value() (in module pydicom.values)": [[525, "pydicom.values.convert_value"]], "multi_string() (in module pydicom.values)": [[526, "pydicom.values.multi_string"]], "generate_multiplex() (in module pydicom.waveforms.numpy_handler)": [[527, "pydicom.waveforms.numpy_handler.generate_multiplex"]], "is_available() (in module pydicom.waveforms.numpy_handler)": [[527, "pydicom.waveforms.numpy_handler.is_available"]], "multiplex_array() (in module pydicom.waveforms.numpy_handler)": [[527, "pydicom.waveforms.numpy_handler.multiplex_array"]], "pydicom.waveforms.numpy_handler": [[527, "module-pydicom.waveforms.numpy_handler"]], "pydicom.pixel_data_handlers": [[529, "module-pydicom.pixel_data_handlers"]], "pydicom": [[530, "module-pydicom"]], "pydicom.overlays": [[532, "module-pydicom.overlays"]], "pydicom.waveforms": [[537, "module-pydicom.waveforms"]]}})