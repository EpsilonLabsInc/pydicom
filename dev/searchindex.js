Search.setIndex({"docnames": ["auto_examples/dicomtree", "auto_examples/image_processing/index", "auto_examples/image_processing/plot_downsize_image", "auto_examples/image_processing/plot_waveforms", "auto_examples/image_processing/reslice", "auto_examples/image_processing/sg_execution_times", "auto_examples/index", "auto_examples/input_output/index", "auto_examples/input_output/plot_printing_dataset", "auto_examples/input_output/plot_read_dicom", "auto_examples/input_output/plot_read_fileset", "auto_examples/input_output/plot_read_rtplan", "auto_examples/input_output/plot_write_dicom", "auto_examples/input_output/sg_execution_times", "auto_examples/memory_dataset", "auto_examples/metadata_processing/index", "auto_examples/metadata_processing/plot_add_dict_entries", "auto_examples/metadata_processing/plot_anonymize", "auto_examples/metadata_processing/plot_sequences", "auto_examples/metadata_processing/sg_execution_times", "auto_examples/plot_dicom_difference", "auto_examples/sg_execution_times", "auto_examples/show_charset_name", "faq/index", "guides/cli/cli_codify", "guides/cli/cli_dev", "guides/cli/cli_guide", "guides/cli/cli_intro", "guides/cli/cli_show", "guides/element_value_types", "guides/encoding/encoder_plugin_options", "guides/encoding/encoder_plugins", "guides/encoding/index", "guides/encoding/rle_lossless", "guides/glossary", "guides/index", "guides/writing_documentation", "index", "old/base_element", "old/best_practices", "old/getting_started", "old/image_data_compression", "old/image_data_handlers", "old/private_data_elements", "old/pydicom_user_guide", "old/ref_guide", "old/viewing_images", "old/working_with_overlays", "old/working_with_pixel_data", "old/working_with_waveforms", "old/writing_files", "reference/charset", "reference/config", "reference/data", "reference/datadict", "reference/dataset", "reference/elem", "reference/elem.dataelem", "reference/elem.multival", "reference/elem.sequence", "reference/elem.tag", "reference/elem.valuerep", "reference/elem.values", "reference/encaps", "reference/encoders", "reference/errors", "reference/examples", "reference/fileio", "reference/fileio.base", "reference/fileio.read", "reference/fileio.util", "reference/fileio.write", "reference/fileset", "reference/generated/pydicom.charset.convert_encodings", "reference/generated/pydicom.charset.decode_bytes", "reference/generated/pydicom.charset.decode_element", "reference/generated/pydicom.charset.encode_string", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS", "reference/generated/pydicom.config.DS_decimal", "reference/generated/pydicom.config.DS_numpy", "reference/generated/pydicom.config.IGNORE", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR", "reference/generated/pydicom.config.RAISE", "reference/generated/pydicom.config.WARN", "reference/generated/pydicom.config.allow_DS_float", "reference/generated/pydicom.config.assume_implicit_vr_switch", "reference/generated/pydicom.config.convert_wrong_length_to_UN", "reference/generated/pydicom.config.data_element_callback", "reference/generated/pydicom.config.data_element_callback_kwargs", "reference/generated/pydicom.config.datetime_conversion", "reference/generated/pydicom.config.debug", "reference/generated/pydicom.config.enforce_valid_values", "reference/generated/pydicom.config.future_behavior", "reference/generated/pydicom.config.overlay_data_handlers", "reference/generated/pydicom.config.pixel_data_handlers", "reference/generated/pydicom.config.reset_data_element_callback", "reference/generated/pydicom.config.settings", "reference/generated/pydicom.config.show_file_meta", "reference/generated/pydicom.config.use_DS_decimal", "reference/generated/pydicom.config.use_DS_numpy", "reference/generated/pydicom.config.use_IS_numpy", "reference/generated/pydicom.data.get_charset_files", "reference/generated/pydicom.data.get_palette_files", "reference/generated/pydicom.data.get_testdata_file", "reference/generated/pydicom.data.get_testdata_files", "reference/generated/pydicom.datadict.add_dict_entries", "reference/generated/pydicom.datadict.add_dict_entry", "reference/generated/pydicom.datadict.add_private_dict_entries", "reference/generated/pydicom.datadict.add_private_dict_entry", "reference/generated/pydicom.datadict.dictionary_VM", "reference/generated/pydicom.datadict.dictionary_VR", "reference/generated/pydicom.datadict.dictionary_description", "reference/generated/pydicom.datadict.dictionary_has_tag", "reference/generated/pydicom.datadict.dictionary_is_retired", "reference/generated/pydicom.datadict.dictionary_keyword", "reference/generated/pydicom.datadict.get_entry", "reference/generated/pydicom.datadict.get_private_entry", "reference/generated/pydicom.datadict.keyword_for_tag", "reference/generated/pydicom.datadict.mask_match", "reference/generated/pydicom.datadict.private_dictionary_VM", "reference/generated/pydicom.datadict.private_dictionary_VR", "reference/generated/pydicom.datadict.private_dictionary_description", "reference/generated/pydicom.datadict.repeater_has_keyword", "reference/generated/pydicom.datadict.repeater_has_tag", "reference/generated/pydicom.datadict.tag_for_keyword", "reference/generated/pydicom.dataelem.DataElement", "reference/generated/pydicom.dataelem.DataElement_from_raw", "reference/generated/pydicom.dataelem.RawDataElement", "reference/generated/pydicom.dataset.Dataset", "reference/generated/pydicom.dataset.FileDataset", "reference/generated/pydicom.dataset.FileMetaDataset", "reference/generated/pydicom.dataset.PrivateBlock", "reference/generated/pydicom.dataset.validate_file_meta", "reference/generated/pydicom.encaps.decode_data_sequence", "reference/generated/pydicom.encaps.defragment_data", "reference/generated/pydicom.encaps.encapsulate", "reference/generated/pydicom.encaps.encapsulate_extended", "reference/generated/pydicom.encaps.fragment_frame", "reference/generated/pydicom.encaps.generate_pixel_data", "reference/generated/pydicom.encaps.generate_pixel_data_fragment", "reference/generated/pydicom.encaps.generate_pixel_data_frame", "reference/generated/pydicom.encaps.get_frame_offsets", "reference/generated/pydicom.encaps.itemize_fragment", "reference/generated/pydicom.encaps.itemize_frame", "reference/generated/pydicom.encaps.read_item", "reference/generated/pydicom.encoders.RLELosslessEncoder", "reference/generated/pydicom.encoders.base.Encoder", "reference/generated/pydicom.encoders.get_encoder", "reference/generated/pydicom.errors.InvalidDicomError", "reference/generated/pydicom.filebase.DicomBytesIO", "reference/generated/pydicom.filebase.DicomFile", "reference/generated/pydicom.filebase.DicomFileLike", "reference/generated/pydicom.filebase.DicomIO", "reference/generated/pydicom.filereader.data_element_generator", "reference/generated/pydicom.filereader.data_element_offset_to_value", "reference/generated/pydicom.filereader.dcmread", "reference/generated/pydicom.filereader.read_dataset", "reference/generated/pydicom.filereader.read_deferred_data_element", "reference/generated/pydicom.filereader.read_file_meta_info", "reference/generated/pydicom.filereader.read_partial", "reference/generated/pydicom.filereader.read_preamble", "reference/generated/pydicom.filereader.read_sequence", "reference/generated/pydicom.filereader.read_sequence_item", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS", "reference/generated/pydicom.fileset.FileInstance", "reference/generated/pydicom.fileset.FileSet", "reference/generated/pydicom.fileset.RecordNode", "reference/generated/pydicom.fileset.generate_filename", "reference/generated/pydicom.fileset.is_conformant_file_id", "reference/generated/pydicom.fileutil.absorb_delimiter_item", "reference/generated/pydicom.fileutil.find_bytes", "reference/generated/pydicom.fileutil.find_delimiter", "reference/generated/pydicom.fileutil.length_of_undefined_length", "reference/generated/pydicom.fileutil.read_undefined_length_value", "reference/generated/pydicom.filewriter.correct_ambiguous_vr", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element", "reference/generated/pydicom.filewriter.dcmwrite", "reference/generated/pydicom.filewriter.multi_string", "reference/generated/pydicom.filewriter.write_ATvalue", "reference/generated/pydicom.filewriter.write_DA", "reference/generated/pydicom.filewriter.write_DT", "reference/generated/pydicom.filewriter.write_OBvalue", "reference/generated/pydicom.filewriter.write_OWvalue", "reference/generated/pydicom.filewriter.write_PN", "reference/generated/pydicom.filewriter.write_TM", "reference/generated/pydicom.filewriter.write_UI", "reference/generated/pydicom.filewriter.write_UN", "reference/generated/pydicom.filewriter.write_data_element", "reference/generated/pydicom.filewriter.write_dataset", "reference/generated/pydicom.filewriter.write_file_meta_info", "reference/generated/pydicom.filewriter.write_number_string", "reference/generated/pydicom.filewriter.write_numbers", "reference/generated/pydicom.filewriter.write_sequence", "reference/generated/pydicom.filewriter.write_sequence_item", "reference/generated/pydicom.filewriter.write_string", "reference/generated/pydicom.filewriter.write_text", "reference/generated/pydicom.misc.is_dicom", "reference/generated/pydicom.misc.size_in_bytes", "reference/generated/pydicom.multival.MultiValue", "reference/generated/pydicom.overlays.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut", "reference/generated/pydicom.pixel_data_handlers.apply_rescale", "reference/generated/pydicom.pixel_data_handlers.apply_voi", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut", "reference/generated/pydicom.pixel_data_handlers.apply_windowing", "reference/generated/pydicom.pixel_data_handlers.convert_color_space", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler", "reference/generated/pydicom.pixel_data_handlers.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.pillow_handler", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler", "reference/generated/pydicom.pixel_data_handlers.rle_handler", "reference/generated/pydicom.pixel_data_handlers.util", "reference/generated/pydicom.sequence.Sequence", "reference/generated/pydicom.tag.BaseTag", "reference/generated/pydicom.tag.Tag", "reference/generated/pydicom.tag.TupleTag", "reference/generated/pydicom.tag.tag_in_exception", "reference/generated/pydicom.uid.AcquisitionContextSRStorage", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage", "reference/generated/pydicom.uid.AllTransferSyntaxes", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage", "reference/generated/pydicom.uid.BasicTextSRStorage", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.BodyPositionWaveformStorage", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.CTImageStorage", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage", "reference/generated/pydicom.uid.ChestCADSRStorage", "reference/generated/pydicom.uid.ColonCADSRStorage", "reference/generated/pydicom.uid.ColorPaletteStorage", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.Comprehensive3DSRStorage", "reference/generated/pydicom.uid.ComprehensiveSRStorage", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage", "reference/generated/pydicom.uid.CornealTopographyMapStorage", "reference/generated/pydicom.uid.DICOS2DAITStorage", "reference/generated/pydicom.uid.DICOS3DAITStorage", "reference/generated/pydicom.uid.DICOSCTImageStorage", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.EddyCurrentImageStorage", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage", "reference/generated/pydicom.uid.EncapsulatedCDAStorage", "reference/generated/pydicom.uid.EncapsulatedMTLStorage", "reference/generated/pydicom.uid.EncapsulatedOBJStorage", "reference/generated/pydicom.uid.EncapsulatedPDFStorage", "reference/generated/pydicom.uid.EncapsulatedSTLStorage", "reference/generated/pydicom.uid.EnhancedCTImageStorage", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage", "reference/generated/pydicom.uid.EnhancedMRImageStorage", "reference/generated/pydicom.uid.EnhancedPETImageStorage", "reference/generated/pydicom.uid.EnhancedRTImageStorage", "reference/generated/pydicom.uid.EnhancedSRStorage", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage", "reference/generated/pydicom.uid.EnhancedXAImageStorage", "reference/generated/pydicom.uid.EnhancedXRFImageStorage", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.ExplicitVRBigEndian", "reference/generated/pydicom.uid.ExplicitVRLittleEndian", "reference/generated/pydicom.uid.ExtensibleSRStorage", "reference/generated/pydicom.uid.General32bitECGWaveformStorage", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage", "reference/generated/pydicom.uid.GeneralECGWaveformStorage", "reference/generated/pydicom.uid.GenericImplantTemplateStorage", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.HEVCM10P51", "reference/generated/pydicom.uid.HEVCMP51", "reference/generated/pydicom.uid.HangingProtocolStorage", "reference/generated/pydicom.uid.HemodynamicWaveformStorage", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage", "reference/generated/pydicom.uid.ImplantationPlanSRStorage", "reference/generated/pydicom.uid.ImplicitVRLittleEndian", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pydicom.uid.InventoryStorage", "reference/generated/pydicom.uid.JPEG2000", "reference/generated/pydicom.uid.JPEG2000Lossless", "reference/generated/pydicom.uid.JPEG2000MC", "reference/generated/pydicom.uid.JPEG2000MCLossless", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes", "reference/generated/pydicom.uid.JPEGBaseline8Bit", "reference/generated/pydicom.uid.JPEGExtended12Bit", "reference/generated/pydicom.uid.JPEGLSLossless", "reference/generated/pydicom.uid.JPEGLSNearLossless", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes", "reference/generated/pydicom.uid.JPEGLossless", "reference/generated/pydicom.uid.JPEGLosslessSV1", "reference/generated/pydicom.uid.JPEGTransferSyntaxes", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pydicom.uid.LensometryMeasurementsStorage", "reference/generated/pydicom.uid.MPEG2MPHL", "reference/generated/pydicom.uid.MPEG2MPHLF", "reference/generated/pydicom.uid.MPEG2MPML", "reference/generated/pydicom.uid.MPEG2MPMLF", "reference/generated/pydicom.uid.MPEG4HP41", "reference/generated/pydicom.uid.MPEG4HP41BD", "reference/generated/pydicom.uid.MPEG4HP41BDF", "reference/generated/pydicom.uid.MPEG4HP41F", "reference/generated/pydicom.uid.MPEG4HP422D", "reference/generated/pydicom.uid.MPEG4HP422DF", "reference/generated/pydicom.uid.MPEG4HP423D", "reference/generated/pydicom.uid.MPEG4HP423DF", "reference/generated/pydicom.uid.MPEG4HP42STEREO", "reference/generated/pydicom.uid.MPEG4HP42STEREOF", "reference/generated/pydicom.uid.MPEGTransferSyntaxes", "reference/generated/pydicom.uid.MRImageStorage", "reference/generated/pydicom.uid.MRSpectroscopyStorage", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pydicom.uid.MammographyCADSRStorage", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.NuclearMedicineImageStorage", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID", "reference/generated/pydicom.uid.ParametricMapStorage", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PhotoacousticImageStorage", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage", "reference/generated/pydicom.uid.ProcedureLogStorage", "reference/generated/pydicom.uid.ProtocolApprovalStorage", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.RE_VALID_UID", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX", "reference/generated/pydicom.uid.RLELossless", "reference/generated/pydicom.uid.RLETransferSyntaxes", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage", "reference/generated/pydicom.uid.RTDoseStorage", "reference/generated/pydicom.uid.RTImageStorage", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTIonPlanStorage", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "reference/generated/pydicom.uid.RTPhysicianIntentStorage", "reference/generated/pydicom.uid.RTPlanStorage", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTRadiationSetStorage", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage", "reference/generated/pydicom.uid.RTStructureSetStorage", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pydicom.uid.RawDataStorage", "reference/generated/pydicom.uid.RealWorldValueMappingStorage", "reference/generated/pydicom.uid.RespiratoryWaveformStorage", "reference/generated/pydicom.uid.RoboticArmRadiationStorage", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage", "reference/generated/pydicom.uid.SegmentationStorage", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SpatialFiducialsStorage", "reference/generated/pydicom.uid.SpatialRegistrationStorage", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage", "reference/generated/pydicom.uid.StereometricRelationshipStorage", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage", "reference/generated/pydicom.uid.SurfaceScanMeshStorage", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage", "reference/generated/pydicom.uid.SurfaceSegmentationStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage", "reference/generated/pydicom.uid.TractographyResultsStorage", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage", "reference/generated/pydicom.uid.UID", "reference/generated/pydicom.uid.UltrasoundImageStorage", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes", "reference/generated/pydicom.uid.VLEndoscopicImageStorage", "reference/generated/pydicom.uid.VLMicroscopicImageStorage", "reference/generated/pydicom.uid.VLPhotographicImageStorage", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage", "reference/generated/pydicom.uid.VideoPhotographicImageStorage", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage", "reference/generated/pydicom.uid.XRayAngiographicImageStorage", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage", "reference/generated/pydicom.uid.generate_uid", "reference/generated/pydicom.valuerep.DA", "reference/generated/pydicom.valuerep.DS", "reference/generated/pydicom.valuerep.DSdecimal", "reference/generated/pydicom.valuerep.DSfloat", "reference/generated/pydicom.valuerep.DT", "reference/generated/pydicom.valuerep.IS", "reference/generated/pydicom.valuerep.ISfloat", "reference/generated/pydicom.valuerep.PersonName", "reference/generated/pydicom.valuerep.TM", "reference/generated/pydicom.valuerep.VR", "reference/generated/pydicom.valuerep.format_number_as_ds", "reference/generated/pydicom.valuerep.is_valid_ds", "reference/generated/pydicom.values.convert_AE_string", "reference/generated/pydicom.values.convert_ATvalue", "reference/generated/pydicom.values.convert_DA_string", "reference/generated/pydicom.values.convert_DS_string", "reference/generated/pydicom.values.convert_DT_string", "reference/generated/pydicom.values.convert_IS_string", "reference/generated/pydicom.values.convert_OBvalue", "reference/generated/pydicom.values.convert_OWvalue", "reference/generated/pydicom.values.convert_PN", "reference/generated/pydicom.values.convert_SQ", "reference/generated/pydicom.values.convert_TM_string", "reference/generated/pydicom.values.convert_UI", "reference/generated/pydicom.values.convert_UN", "reference/generated/pydicom.values.convert_UR_string", "reference/generated/pydicom.values.convert_numbers", "reference/generated/pydicom.values.convert_single_string", "reference/generated/pydicom.values.convert_string", "reference/generated/pydicom.values.convert_tag", "reference/generated/pydicom.values.convert_text", "reference/generated/pydicom.values.convert_value", "reference/generated/pydicom.waveforms.numpy_handler", "reference/handlers", "reference/handlers.overlay_data", "reference/handlers.pixel_data", "reference/handlers.waveform_data", "reference/index", "reference/misc", "reference/uid", "release_notes/index", "release_notes/v0.9.2", "release_notes/v0.9.3", "release_notes/v0.9.4", "release_notes/v0.9.5", "release_notes/v0.9.6", "release_notes/v0.9.7", "release_notes/v0.9.8", "release_notes/v0.9.9", "release_notes/v1.0.0", "release_notes/v1.1.0", "release_notes/v1.2.0", "release_notes/v1.3.0", "release_notes/v1.4.0", "release_notes/v1.4.1", "release_notes/v2.0.0", "release_notes/v2.1.0", "release_notes/v2.1.1", "release_notes/v2.2.0", "release_notes/v2.3.0", "release_notes/v2.4.0", "release_notes/v3.0.0", "sg_execution_times", "tutorials/contributing", "tutorials/contributing_code", "tutorials/contributing_docs", "tutorials/dataset_basics", "tutorials/dicom_json", "tutorials/filesets", "tutorials/index", "tutorials/installation", "tutorials/pixel_data/compressing", "tutorials/sr_basics", "tutorials/waveforms"], "filenames": ["auto_examples/dicomtree.rst", "auto_examples/image_processing/index.rst", "auto_examples/image_processing/plot_downsize_image.rst", "auto_examples/image_processing/plot_waveforms.rst", "auto_examples/image_processing/reslice.rst", "auto_examples/image_processing/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/input_output/index.rst", "auto_examples/input_output/plot_printing_dataset.rst", "auto_examples/input_output/plot_read_dicom.rst", "auto_examples/input_output/plot_read_fileset.rst", "auto_examples/input_output/plot_read_rtplan.rst", "auto_examples/input_output/plot_write_dicom.rst", "auto_examples/input_output/sg_execution_times.rst", "auto_examples/memory_dataset.rst", "auto_examples/metadata_processing/index.rst", "auto_examples/metadata_processing/plot_add_dict_entries.rst", "auto_examples/metadata_processing/plot_anonymize.rst", "auto_examples/metadata_processing/plot_sequences.rst", "auto_examples/metadata_processing/sg_execution_times.rst", "auto_examples/plot_dicom_difference.rst", "auto_examples/sg_execution_times.rst", "auto_examples/show_charset_name.rst", "faq/index.rst", "guides/cli/cli_codify.rst", "guides/cli/cli_dev.rst", "guides/cli/cli_guide.rst", "guides/cli/cli_intro.rst", "guides/cli/cli_show.rst", "guides/element_value_types.rst", "guides/encoding/encoder_plugin_options.rst", "guides/encoding/encoder_plugins.rst", "guides/encoding/index.rst", "guides/encoding/rle_lossless.rst", "guides/glossary.rst", "guides/index.rst", "guides/writing_documentation.rst", "index.rst", "old/base_element.rst", "old/best_practices.rst", "old/getting_started.rst", "old/image_data_compression.rst", "old/image_data_handlers.rst", "old/private_data_elements.rst", "old/pydicom_user_guide.rst", "old/ref_guide.rst", "old/viewing_images.rst", "old/working_with_overlays.rst", "old/working_with_pixel_data.rst", "old/working_with_waveforms.rst", "old/writing_files.rst", "reference/charset.rst", "reference/config.rst", "reference/data.rst", "reference/datadict.rst", "reference/dataset.rst", "reference/elem.rst", "reference/elem.dataelem.rst", "reference/elem.multival.rst", "reference/elem.sequence.rst", "reference/elem.tag.rst", "reference/elem.valuerep.rst", "reference/elem.values.rst", "reference/encaps.rst", "reference/encoders.rst", "reference/errors.rst", "reference/examples.rst", "reference/fileio.rst", "reference/fileio.base.rst", "reference/fileio.read.rst", "reference/fileio.util.rst", "reference/fileio.write.rst", "reference/fileset.rst", "reference/generated/pydicom.charset.convert_encodings.rst", "reference/generated/pydicom.charset.decode_bytes.rst", "reference/generated/pydicom.charset.decode_element.rst", "reference/generated/pydicom.charset.encode_string.rst", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS.rst", "reference/generated/pydicom.config.DS_decimal.rst", "reference/generated/pydicom.config.DS_numpy.rst", "reference/generated/pydicom.config.IGNORE.rst", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR.rst", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR.rst", "reference/generated/pydicom.config.RAISE.rst", "reference/generated/pydicom.config.WARN.rst", "reference/generated/pydicom.config.allow_DS_float.rst", "reference/generated/pydicom.config.assume_implicit_vr_switch.rst", "reference/generated/pydicom.config.convert_wrong_length_to_UN.rst", "reference/generated/pydicom.config.data_element_callback.rst", "reference/generated/pydicom.config.data_element_callback_kwargs.rst", "reference/generated/pydicom.config.datetime_conversion.rst", "reference/generated/pydicom.config.debug.rst", "reference/generated/pydicom.config.enforce_valid_values.rst", "reference/generated/pydicom.config.future_behavior.rst", "reference/generated/pydicom.config.overlay_data_handlers.rst", "reference/generated/pydicom.config.pixel_data_handlers.rst", "reference/generated/pydicom.config.reset_data_element_callback.rst", "reference/generated/pydicom.config.settings.rst", "reference/generated/pydicom.config.show_file_meta.rst", "reference/generated/pydicom.config.use_DS_decimal.rst", "reference/generated/pydicom.config.use_DS_numpy.rst", "reference/generated/pydicom.config.use_IS_numpy.rst", "reference/generated/pydicom.data.get_charset_files.rst", "reference/generated/pydicom.data.get_palette_files.rst", "reference/generated/pydicom.data.get_testdata_file.rst", "reference/generated/pydicom.data.get_testdata_files.rst", "reference/generated/pydicom.datadict.add_dict_entries.rst", "reference/generated/pydicom.datadict.add_dict_entry.rst", "reference/generated/pydicom.datadict.add_private_dict_entries.rst", "reference/generated/pydicom.datadict.add_private_dict_entry.rst", "reference/generated/pydicom.datadict.dictionary_VM.rst", "reference/generated/pydicom.datadict.dictionary_VR.rst", "reference/generated/pydicom.datadict.dictionary_description.rst", "reference/generated/pydicom.datadict.dictionary_has_tag.rst", "reference/generated/pydicom.datadict.dictionary_is_retired.rst", "reference/generated/pydicom.datadict.dictionary_keyword.rst", "reference/generated/pydicom.datadict.get_entry.rst", "reference/generated/pydicom.datadict.get_private_entry.rst", "reference/generated/pydicom.datadict.keyword_for_tag.rst", "reference/generated/pydicom.datadict.mask_match.rst", "reference/generated/pydicom.datadict.private_dictionary_VM.rst", "reference/generated/pydicom.datadict.private_dictionary_VR.rst", "reference/generated/pydicom.datadict.private_dictionary_description.rst", "reference/generated/pydicom.datadict.repeater_has_keyword.rst", "reference/generated/pydicom.datadict.repeater_has_tag.rst", "reference/generated/pydicom.datadict.tag_for_keyword.rst", "reference/generated/pydicom.dataelem.DataElement.rst", "reference/generated/pydicom.dataelem.DataElement_from_raw.rst", "reference/generated/pydicom.dataelem.RawDataElement.rst", "reference/generated/pydicom.dataset.Dataset.rst", "reference/generated/pydicom.dataset.FileDataset.rst", "reference/generated/pydicom.dataset.FileMetaDataset.rst", "reference/generated/pydicom.dataset.PrivateBlock.rst", "reference/generated/pydicom.dataset.validate_file_meta.rst", "reference/generated/pydicom.encaps.decode_data_sequence.rst", "reference/generated/pydicom.encaps.defragment_data.rst", "reference/generated/pydicom.encaps.encapsulate.rst", "reference/generated/pydicom.encaps.encapsulate_extended.rst", "reference/generated/pydicom.encaps.fragment_frame.rst", "reference/generated/pydicom.encaps.generate_pixel_data.rst", "reference/generated/pydicom.encaps.generate_pixel_data_fragment.rst", "reference/generated/pydicom.encaps.generate_pixel_data_frame.rst", "reference/generated/pydicom.encaps.get_frame_offsets.rst", "reference/generated/pydicom.encaps.itemize_fragment.rst", "reference/generated/pydicom.encaps.itemize_frame.rst", "reference/generated/pydicom.encaps.read_item.rst", "reference/generated/pydicom.encoders.RLELosslessEncoder.rst", "reference/generated/pydicom.encoders.base.Encoder.rst", "reference/generated/pydicom.encoders.get_encoder.rst", "reference/generated/pydicom.errors.InvalidDicomError.rst", "reference/generated/pydicom.filebase.DicomBytesIO.rst", "reference/generated/pydicom.filebase.DicomFile.rst", "reference/generated/pydicom.filebase.DicomFileLike.rst", "reference/generated/pydicom.filebase.DicomIO.rst", "reference/generated/pydicom.filereader.data_element_generator.rst", "reference/generated/pydicom.filereader.data_element_offset_to_value.rst", "reference/generated/pydicom.filereader.dcmread.rst", "reference/generated/pydicom.filereader.read_dataset.rst", "reference/generated/pydicom.filereader.read_deferred_data_element.rst", "reference/generated/pydicom.filereader.read_file_meta_info.rst", "reference/generated/pydicom.filereader.read_partial.rst", "reference/generated/pydicom.filereader.read_preamble.rst", "reference/generated/pydicom.filereader.read_sequence.rst", "reference/generated/pydicom.filereader.read_sequence_item.rst", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS.rst", "reference/generated/pydicom.fileset.FileInstance.rst", "reference/generated/pydicom.fileset.FileSet.rst", "reference/generated/pydicom.fileset.RecordNode.rst", "reference/generated/pydicom.fileset.generate_filename.rst", "reference/generated/pydicom.fileset.is_conformant_file_id.rst", "reference/generated/pydicom.fileutil.absorb_delimiter_item.rst", "reference/generated/pydicom.fileutil.find_bytes.rst", "reference/generated/pydicom.fileutil.find_delimiter.rst", "reference/generated/pydicom.fileutil.length_of_undefined_length.rst", "reference/generated/pydicom.fileutil.read_undefined_length_value.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element.rst", "reference/generated/pydicom.filewriter.dcmwrite.rst", "reference/generated/pydicom.filewriter.multi_string.rst", "reference/generated/pydicom.filewriter.write_ATvalue.rst", "reference/generated/pydicom.filewriter.write_DA.rst", "reference/generated/pydicom.filewriter.write_DT.rst", "reference/generated/pydicom.filewriter.write_OBvalue.rst", "reference/generated/pydicom.filewriter.write_OWvalue.rst", "reference/generated/pydicom.filewriter.write_PN.rst", "reference/generated/pydicom.filewriter.write_TM.rst", "reference/generated/pydicom.filewriter.write_UI.rst", "reference/generated/pydicom.filewriter.write_UN.rst", "reference/generated/pydicom.filewriter.write_data_element.rst", "reference/generated/pydicom.filewriter.write_dataset.rst", "reference/generated/pydicom.filewriter.write_file_meta_info.rst", "reference/generated/pydicom.filewriter.write_number_string.rst", "reference/generated/pydicom.filewriter.write_numbers.rst", "reference/generated/pydicom.filewriter.write_sequence.rst", "reference/generated/pydicom.filewriter.write_sequence_item.rst", "reference/generated/pydicom.filewriter.write_string.rst", "reference/generated/pydicom.filewriter.write_text.rst", "reference/generated/pydicom.misc.is_dicom.rst", "reference/generated/pydicom.misc.size_in_bytes.rst", "reference/generated/pydicom.multival.MultiValue.rst", "reference/generated/pydicom.overlays.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_rescale.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_windowing.rst", "reference/generated/pydicom.pixel_data_handlers.convert_color_space.rst", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler.rst", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler.rst", "reference/generated/pydicom.pixel_data_handlers.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pillow_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler.rst", "reference/generated/pydicom.pixel_data_handlers.rle_handler.rst", "reference/generated/pydicom.pixel_data_handlers.util.rst", "reference/generated/pydicom.sequence.Sequence.rst", "reference/generated/pydicom.tag.BaseTag.rst", "reference/generated/pydicom.tag.Tag.rst", "reference/generated/pydicom.tag.TupleTag.rst", "reference/generated/pydicom.tag.tag_in_exception.rst", "reference/generated/pydicom.uid.AcquisitionContextSRStorage.rst", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pydicom.uid.AllTransferSyntaxes.rst", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage.rst", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage.rst", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage.rst", "reference/generated/pydicom.uid.BasicTextSRStorage.rst", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.BodyPositionWaveformStorage.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CTImageStorage.rst", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pydicom.uid.ChestCADSRStorage.rst", "reference/generated/pydicom.uid.ColonCADSRStorage.rst", "reference/generated/pydicom.uid.ColorPaletteStorage.rst", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.Comprehensive3DSRStorage.rst", "reference/generated/pydicom.uid.ComprehensiveSRStorage.rst", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage.rst", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage.rst", "reference/generated/pydicom.uid.CornealTopographyMapStorage.rst", "reference/generated/pydicom.uid.DICOS2DAITStorage.rst", "reference/generated/pydicom.uid.DICOS3DAITStorage.rst", "reference/generated/pydicom.uid.DICOSCTImageStorage.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage.rst", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage.rst", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.EddyCurrentImageStorage.rst", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage.rst", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage.rst", "reference/generated/pydicom.uid.EncapsulatedCDAStorage.rst", "reference/generated/pydicom.uid.EncapsulatedMTLStorage.rst", "reference/generated/pydicom.uid.EncapsulatedOBJStorage.rst", "reference/generated/pydicom.uid.EncapsulatedPDFStorage.rst", "reference/generated/pydicom.uid.EncapsulatedSTLStorage.rst", "reference/generated/pydicom.uid.EnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedContinuousRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.EnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.EnhancedRTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedSRStorage.rst", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage.rst", "reference/generated/pydicom.uid.EnhancedXAImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRFImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.ExplicitVRBigEndian.rst", "reference/generated/pydicom.uid.ExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.ExtensibleSRStorage.rst", "reference/generated/pydicom.uid.General32bitECGWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralECGWaveformStorage.rst", "reference/generated/pydicom.uid.GenericImplantTemplateStorage.rst", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.HEVCM10P51.rst", "reference/generated/pydicom.uid.HEVCMP51.rst", "reference/generated/pydicom.uid.HangingProtocolStorage.rst", "reference/generated/pydicom.uid.HemodynamicWaveformStorage.rst", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage.rst", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage.rst", "reference/generated/pydicom.uid.ImplantationPlanSRStorage.rst", "reference/generated/pydicom.uid.ImplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pydicom.uid.InventoryStorage.rst", "reference/generated/pydicom.uid.JPEG2000.rst", "reference/generated/pydicom.uid.JPEG2000Lossless.rst", "reference/generated/pydicom.uid.JPEG2000MC.rst", "reference/generated/pydicom.uid.JPEG2000MCLossless.rst", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGBaseline8Bit.rst", "reference/generated/pydicom.uid.JPEGExtended12Bit.rst", "reference/generated/pydicom.uid.JPEGLSLossless.rst", "reference/generated/pydicom.uid.JPEGLSNearLossless.rst", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGLossless.rst", "reference/generated/pydicom.uid.JPEGLosslessSV1.rst", "reference/generated/pydicom.uid.JPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.LensometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.MPEG2MPHL.rst", "reference/generated/pydicom.uid.MPEG2MPHLF.rst", "reference/generated/pydicom.uid.MPEG2MPML.rst", "reference/generated/pydicom.uid.MPEG2MPMLF.rst", "reference/generated/pydicom.uid.MPEG4HP41.rst", "reference/generated/pydicom.uid.MPEG4HP41BD.rst", "reference/generated/pydicom.uid.MPEG4HP41BDF.rst", "reference/generated/pydicom.uid.MPEG4HP41F.rst", "reference/generated/pydicom.uid.MPEG4HP422D.rst", "reference/generated/pydicom.uid.MPEG4HP422DF.rst", "reference/generated/pydicom.uid.MPEG4HP423D.rst", "reference/generated/pydicom.uid.MPEG4HP423DF.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREO.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREOF.rst", "reference/generated/pydicom.uid.MPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.MRImageStorage.rst", "reference/generated/pydicom.uid.MRSpectroscopyStorage.rst", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pydicom.uid.MammographyCADSRStorage.rst", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage.rst", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.NuclearMedicineImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage.rst", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID.rst", "reference/generated/pydicom.uid.ParametricMapStorage.rst", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PhotoacousticImageStorage.rst", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage.rst", "reference/generated/pydicom.uid.ProcedureLogStorage.rst", "reference/generated/pydicom.uid.ProtocolApprovalStorage.rst", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.RE_VALID_UID.rst", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX.rst", "reference/generated/pydicom.uid.RLELossless.rst", "reference/generated/pydicom.uid.RLETransferSyntaxes.rst", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTDoseStorage.rst", "reference/generated/pydicom.uid.RTImageStorage.rst", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTIonPlanStorage.rst", "reference/generated/pydicom.uid.RTPatientPositionAcquisitionInstructionStorage.rst", "reference/generated/pydicom.uid.RTPhysicianIntentStorage.rst", "reference/generated/pydicom.uid.RTPlanStorage.rst", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage.rst", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetStorage.rst", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage.rst", "reference/generated/pydicom.uid.RTStructureSetStorage.rst", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage.rst", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.RawDataStorage.rst", "reference/generated/pydicom.uid.RealWorldValueMappingStorage.rst", "reference/generated/pydicom.uid.RespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.RoboticArmRadiationStorage.rst", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo.rst", "reference/generated/pydicom.uid.SMPTEST211030PCMDigitalAudio.rst", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.SegmentationStorage.rst", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SpatialFiducialsStorage.rst", "reference/generated/pydicom.uid.SpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage.rst", "reference/generated/pydicom.uid.StereometricRelationshipStorage.rst", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.SurfaceScanMeshStorage.rst", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage.rst", "reference/generated/pydicom.uid.SurfaceSegmentationStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage.rst", "reference/generated/pydicom.uid.TractographyResultsStorage.rst", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage.rst", "reference/generated/pydicom.uid.UID.rst", "reference/generated/pydicom.uid.UltrasoundImageStorage.rst", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes.rst", "reference/generated/pydicom.uid.VLEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VLMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage.rst", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage.rst", "reference/generated/pydicom.uid.XRayAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pydicom.uid.generate_uid.rst", "reference/generated/pydicom.valuerep.DA.rst", "reference/generated/pydicom.valuerep.DS.rst", "reference/generated/pydicom.valuerep.DSdecimal.rst", "reference/generated/pydicom.valuerep.DSfloat.rst", "reference/generated/pydicom.valuerep.DT.rst", "reference/generated/pydicom.valuerep.IS.rst", "reference/generated/pydicom.valuerep.ISfloat.rst", "reference/generated/pydicom.valuerep.PersonName.rst", "reference/generated/pydicom.valuerep.TM.rst", "reference/generated/pydicom.valuerep.VR.rst", "reference/generated/pydicom.valuerep.format_number_as_ds.rst", "reference/generated/pydicom.valuerep.is_valid_ds.rst", "reference/generated/pydicom.values.convert_AE_string.rst", "reference/generated/pydicom.values.convert_ATvalue.rst", "reference/generated/pydicom.values.convert_DA_string.rst", "reference/generated/pydicom.values.convert_DS_string.rst", "reference/generated/pydicom.values.convert_DT_string.rst", "reference/generated/pydicom.values.convert_IS_string.rst", "reference/generated/pydicom.values.convert_OBvalue.rst", "reference/generated/pydicom.values.convert_OWvalue.rst", "reference/generated/pydicom.values.convert_PN.rst", "reference/generated/pydicom.values.convert_SQ.rst", "reference/generated/pydicom.values.convert_TM_string.rst", "reference/generated/pydicom.values.convert_UI.rst", "reference/generated/pydicom.values.convert_UN.rst", "reference/generated/pydicom.values.convert_UR_string.rst", "reference/generated/pydicom.values.convert_numbers.rst", "reference/generated/pydicom.values.convert_single_string.rst", "reference/generated/pydicom.values.convert_string.rst", "reference/generated/pydicom.values.convert_tag.rst", "reference/generated/pydicom.values.convert_text.rst", "reference/generated/pydicom.values.convert_value.rst", "reference/generated/pydicom.waveforms.numpy_handler.rst", "reference/handlers.rst", "reference/handlers.overlay_data.rst", "reference/handlers.pixel_data.rst", "reference/handlers.waveform_data.rst", "reference/index.rst", "reference/misc.rst", "reference/uid.rst", "release_notes/index.rst", "release_notes/v0.9.2.rst", "release_notes/v0.9.3.rst", "release_notes/v0.9.4.rst", "release_notes/v0.9.5.rst", "release_notes/v0.9.6.rst", "release_notes/v0.9.7.rst", "release_notes/v0.9.8.rst", "release_notes/v0.9.9.rst", "release_notes/v1.0.0.rst", "release_notes/v1.1.0.rst", "release_notes/v1.2.0.rst", "release_notes/v1.3.0.rst", "release_notes/v1.4.0.rst", "release_notes/v1.4.1.rst", "release_notes/v2.0.0.rst", "release_notes/v2.1.0.rst", "release_notes/v2.1.1.rst", "release_notes/v2.2.0.rst", "release_notes/v2.3.0.rst", "release_notes/v2.4.0.rst", "release_notes/v3.0.0.rst", "sg_execution_times.rst", "tutorials/contributing.rst", "tutorials/contributing_code.rst", "tutorials/contributing_docs.rst", "tutorials/dataset_basics.rst", "tutorials/dicom_json.rst", "tutorials/filesets.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/pixel_data/compressing.rst", "tutorials/sr_basics.rst", "tutorials/waveforms.rst"], "titles": ["Show a dicom file using hierarchical tree", "Image processing", "Downsize MRI image using pydicom", "Decode and plot Waveform Data", "Load CT slices and plot axial, sagittal and coronal images", "Computation times", "General examples", "Input-output", "Format the output of the data set printing", "Read a Dataset and plot Pixel Data", "Read a DICOM File-set", "Read RTPLAN DICOM and list information", "Write DICOM data", "Computation times", "Show working with memory-based dataset", "Metadata processing", "Add items to the private DICOM dictionary", "Anonymize DICOM data", "Working with sequences", "Computation times", "Analyse differences between DICOM files", "Computation times", "Display unicode person names", "Frequently asked questions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">codify</span></code> command", "Extending the CLI", "Command-line Interface Guide", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">show</span></code> command", "Element VRs and Python types", "Encoder Plugins Options", "Pixel Data Encoder Plugins", "Pixel Data Encoding", "RLE Lossless Encoding", "Glossary", "Guides", "Writing documentation", "pydicom documentation", "Core elements in pydicom", "Best Practices", "Introduction to pydicom", "Compressing <em>Pixel Data</em>", "Handling of compressed pixel data", "Private Data Elements", "pydicom User Guide", "Reading and writing DICOM files", "Viewing Images", "Working with Overlay Data", "Working with Pixel Data", "Working with Waveform Data", "Writing DICOM Files", "Character Encoding and Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.charset</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.config</span></code>)", "Getting Included Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.data</span></code>)", "Data Dictionary Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.datadict</span></code>)", "Representation of Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataset</span></code>)", "Representation of Data Elements", "Data Elements (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataelem</span></code>)", "Element Multi-value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.multival</span></code>)", "Sequence Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sequence</span></code>)", "Element Tags (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.tag</span></code>)", "Specialized Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.valuerep</span></code>)", "Element Value Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.values</span></code>)", "Bulk Data Encapsulation Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encaps</span></code>)", "Pixel Data Encoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encoders</span></code>)", "Exceptions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.errors</span></code>)", "Example Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.examples</span></code>)", "Dataset IO", "IO Base Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filebase</span></code>)", "Dataset Reading (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filereader</span></code>)", "IO Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileutil</span></code>)", "Dataset Writing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filewriter</span></code>)", "DICOM File-sets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileset</span></code>)", "pydicom.charset.convert_encodings", "pydicom.charset.decode_bytes", "pydicom.charset.decode_element", "pydicom.charset.encode_string", "pydicom.config.APPLY_J2K_CORRECTIONS", "pydicom.config.DS_decimal", "pydicom.config.DS_numpy", "pydicom.config.IGNORE", "pydicom.config.INVALID_KEYWORD_BEHAVIOR", "pydicom.config.INVALID_KEY_BEHAVIOR", "pydicom.config.RAISE", "pydicom.config.WARN", "pydicom.config.allow_DS_float", "pydicom.config.assume_implicit_vr_switch", "pydicom.config.convert_wrong_length_to_UN", "pydicom.config.data_element_callback", "pydicom.config.data_element_callback_kwargs", "pydicom.config.datetime_conversion", "pydicom.config.debug", "pydicom.config.enforce_valid_values", "pydicom.config.future_behavior", "pydicom.config.overlay_data_handlers", "pydicom.config.pixel_data_handlers", "pydicom.config.reset_data_element_callback", "pydicom.config.settings", "pydicom.config.show_file_meta", "pydicom.config.use_DS_decimal", "pydicom.config.use_DS_numpy", "pydicom.config.use_IS_numpy", "pydicom.data.get_charset_files", "pydicom.data.get_palette_files", "pydicom.data.get_testdata_file", "pydicom.data.get_testdata_files", "pydicom.datadict.add_dict_entries", "pydicom.datadict.add_dict_entry", "pydicom.datadict.add_private_dict_entries", "pydicom.datadict.add_private_dict_entry", "pydicom.datadict.dictionary_VM", "pydicom.datadict.dictionary_VR", "pydicom.datadict.dictionary_description", "pydicom.datadict.dictionary_has_tag", "pydicom.datadict.dictionary_is_retired", "pydicom.datadict.dictionary_keyword", "pydicom.datadict.get_entry", "pydicom.datadict.get_private_entry", "pydicom.datadict.keyword_for_tag", "pydicom.datadict.mask_match", "pydicom.datadict.private_dictionary_VM", "pydicom.datadict.private_dictionary_VR", "pydicom.datadict.private_dictionary_description", "pydicom.datadict.repeater_has_keyword", "pydicom.datadict.repeater_has_tag", "pydicom.datadict.tag_for_keyword", "pydicom.dataelem.DataElement", "pydicom.dataelem.DataElement_from_raw", "pydicom.dataelem.RawDataElement", "pydicom.dataset.Dataset", "pydicom.dataset.FileDataset", "pydicom.dataset.FileMetaDataset", "pydicom.dataset.PrivateBlock", "pydicom.dataset.validate_file_meta", "pydicom.encaps.decode_data_sequence", "pydicom.encaps.defragment_data", "pydicom.encaps.encapsulate", "pydicom.encaps.encapsulate_extended", "pydicom.encaps.fragment_frame", "pydicom.encaps.generate_pixel_data", "pydicom.encaps.generate_pixel_data_fragment", "pydicom.encaps.generate_pixel_data_frame", "pydicom.encaps.get_frame_offsets", "pydicom.encaps.itemize_fragment", "pydicom.encaps.itemize_frame", "pydicom.encaps.read_item", "pydicom.encoders.RLELosslessEncoder", "pydicom.encoders.base.Encoder", "pydicom.encoders.get_encoder", "pydicom.errors.InvalidDicomError", "pydicom.filebase.DicomBytesIO", "pydicom.filebase.DicomFile", "pydicom.filebase.DicomFileLike", "pydicom.filebase.DicomIO", "pydicom.filereader.data_element_generator", "pydicom.filereader.data_element_offset_to_value", "pydicom.filereader.dcmread", "pydicom.filereader.read_dataset", "pydicom.filereader.read_deferred_data_element", "pydicom.filereader.read_file_meta_info", "pydicom.filereader.read_partial", "pydicom.filereader.read_preamble", "pydicom.filereader.read_sequence", "pydicom.filereader.read_sequence_item", "pydicom.fileset.DIRECTORY_RECORDERS", "pydicom.fileset.FileInstance", "pydicom.fileset.FileSet", "pydicom.fileset.RecordNode", "pydicom.fileset.generate_filename", "pydicom.fileset.is_conformant_file_id", "pydicom.fileutil.absorb_delimiter_item", "pydicom.fileutil.find_bytes", "pydicom.fileutil.find_delimiter", "pydicom.fileutil.length_of_undefined_length", "pydicom.fileutil.read_undefined_length_value", "pydicom.filewriter.correct_ambiguous_vr", "pydicom.filewriter.correct_ambiguous_vr_element", "pydicom.filewriter.dcmwrite", "pydicom.filewriter.multi_string", "pydicom.filewriter.write_ATvalue", "pydicom.filewriter.write_DA", "pydicom.filewriter.write_DT", "pydicom.filewriter.write_OBvalue", "pydicom.filewriter.write_OWvalue", "pydicom.filewriter.write_PN", "pydicom.filewriter.write_TM", "pydicom.filewriter.write_UI", "pydicom.filewriter.write_UN", "pydicom.filewriter.write_data_element", "pydicom.filewriter.write_dataset", "pydicom.filewriter.write_file_meta_info", "pydicom.filewriter.write_number_string", "pydicom.filewriter.write_numbers", "pydicom.filewriter.write_sequence", "pydicom.filewriter.write_sequence_item", "pydicom.filewriter.write_string", "pydicom.filewriter.write_text", "pydicom.misc.is_dicom", "pydicom.misc.size_in_bytes", "pydicom.multival.MultiValue", "pydicom.overlays.numpy_handler", "pydicom.pixel_data_handlers.apply_color_lut", "pydicom.pixel_data_handlers.apply_modality_lut", "pydicom.pixel_data_handlers.apply_rescale", "pydicom.pixel_data_handlers.apply_voi", "pydicom.pixel_data_handlers.apply_voi_lut", "pydicom.pixel_data_handlers.apply_windowing", "pydicom.pixel_data_handlers.convert_color_space", "pydicom.pixel_data_handlers.gdcm_handler", "pydicom.pixel_data_handlers.jpeg_ls_handler", "pydicom.pixel_data_handlers.numpy_handler", "pydicom.pixel_data_handlers.pillow_handler", "pydicom.pixel_data_handlers.pylibjpeg_handler", "pydicom.pixel_data_handlers.rle_handler", "pydicom.pixel_data_handlers.util", "pydicom.sequence.Sequence", "pydicom.tag.BaseTag", "pydicom.tag.Tag", "pydicom.tag.TupleTag", "pydicom.tag.tag_in_exception", "pydicom.uid.AcquisitionContextSRStorage", "pydicom.uid.AdvancedBlendingPresentationStateStorage", "pydicom.uid.AllTransferSyntaxes", "pydicom.uid.AmbulatoryECGWaveformStorage", "pydicom.uid.ArterialPulseWaveformStorage", "pydicom.uid.AutorefractionMeasurementsStorage", "pydicom.uid.BasicStructuredDisplayStorage", "pydicom.uid.BasicTextSRStorage", "pydicom.uid.BasicVoiceAudioWaveformStorage", "pydicom.uid.BlendingSoftcopyPresentationStateStorage", "pydicom.uid.BodyPositionWaveformStorage", "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "pydicom.uid.BreastTomosynthesisImageStorage", "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "pydicom.uid.CArmPhotonElectronRadiationStorage", "pydicom.uid.CTDefinedProcedureProtocolStorage", "pydicom.uid.CTImageStorage", "pydicom.uid.CTPerformedProcedureProtocolStorage", "pydicom.uid.CardiacElectrophysiologyWaveformStorage", "pydicom.uid.ChestCADSRStorage", "pydicom.uid.ColonCADSRStorage", "pydicom.uid.ColorPaletteStorage", "pydicom.uid.ColorSoftcopyPresentationStateStorage", "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.Comprehensive3DSRStorage", "pydicom.uid.ComprehensiveSRStorage", "pydicom.uid.ComputedRadiographyImageStorage", "pydicom.uid.ContentAssessmentResultsStorage", "pydicom.uid.CornealTopographyMapStorage", "pydicom.uid.DICOS2DAITStorage", "pydicom.uid.DICOS3DAITStorage", "pydicom.uid.DICOSCTImageStorage", "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "pydicom.uid.DICOSQuadrupoleResonanceStorage", "pydicom.uid.DICOSThreatDetectionReportStorage", "pydicom.uid.DeflatedExplicitVRLittleEndian", "pydicom.uid.DeformableSpatialRegistrationStorage", "pydicom.uid.DermoscopicPhotographyImageStorage", "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "pydicom.uid.DigitalXRayImageStorageForPresentation", "pydicom.uid.DigitalXRayImageStorageForProcessing", "pydicom.uid.EddyCurrentImageStorage", "pydicom.uid.EddyCurrentMultiFrameImageStorage", "pydicom.uid.ElectromyogramWaveformStorage", "pydicom.uid.ElectrooculogramWaveformStorage", "pydicom.uid.EncapsulatedCDAStorage", "pydicom.uid.EncapsulatedMTLStorage", "pydicom.uid.EncapsulatedOBJStorage", "pydicom.uid.EncapsulatedPDFStorage", "pydicom.uid.EncapsulatedSTLStorage", "pydicom.uid.EnhancedCTImageStorage", "pydicom.uid.EnhancedContinuousRTImageStorage", "pydicom.uid.EnhancedMRColorImageStorage", "pydicom.uid.EnhancedMRImageStorage", "pydicom.uid.EnhancedPETImageStorage", "pydicom.uid.EnhancedRTImageStorage", "pydicom.uid.EnhancedSRStorage", "pydicom.uid.EnhancedUSVolumeStorage", "pydicom.uid.EnhancedXAImageStorage", "pydicom.uid.EnhancedXRFImageStorage", "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "pydicom.uid.ExplicitVRBigEndian", "pydicom.uid.ExplicitVRLittleEndian", "pydicom.uid.ExtensibleSRStorage", "pydicom.uid.General32bitECGWaveformStorage", "pydicom.uid.GeneralAudioWaveformStorage", "pydicom.uid.GeneralECGWaveformStorage", "pydicom.uid.GenericImplantTemplateStorage", "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.HEVCM10P51", "pydicom.uid.HEVCMP51", "pydicom.uid.HangingProtocolStorage", "pydicom.uid.HemodynamicWaveformStorage", "pydicom.uid.ImplantAssemblyTemplateStorage", "pydicom.uid.ImplantTemplateGroupStorage", "pydicom.uid.ImplantationPlanSRStorage", "pydicom.uid.ImplicitVRLittleEndian", "pydicom.uid.IntraocularLensCalculationsStorage", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pydicom.uid.InventoryStorage", "pydicom.uid.JPEG2000", "pydicom.uid.JPEG2000Lossless", "pydicom.uid.JPEG2000MC", "pydicom.uid.JPEG2000MCLossless", "pydicom.uid.JPEG2000TransferSyntaxes", "pydicom.uid.JPEGBaseline8Bit", "pydicom.uid.JPEGExtended12Bit", "pydicom.uid.JPEGLSLossless", "pydicom.uid.JPEGLSNearLossless", "pydicom.uid.JPEGLSTransferSyntaxes", "pydicom.uid.JPEGLossless", "pydicom.uid.JPEGLosslessSV1", "pydicom.uid.JPEGTransferSyntaxes", "pydicom.uid.KeratometryMeasurementsStorage", "pydicom.uid.KeyObjectSelectionDocumentStorage", "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "pydicom.uid.LensometryMeasurementsStorage", "pydicom.uid.MPEG2MPHL", "pydicom.uid.MPEG2MPHLF", "pydicom.uid.MPEG2MPML", "pydicom.uid.MPEG2MPMLF", "pydicom.uid.MPEG4HP41", "pydicom.uid.MPEG4HP41BD", "pydicom.uid.MPEG4HP41BDF", "pydicom.uid.MPEG4HP41F", "pydicom.uid.MPEG4HP422D", "pydicom.uid.MPEG4HP422DF", "pydicom.uid.MPEG4HP423D", "pydicom.uid.MPEG4HP423DF", "pydicom.uid.MPEG4HP42STEREO", "pydicom.uid.MPEG4HP42STEREOF", "pydicom.uid.MPEGTransferSyntaxes", "pydicom.uid.MRImageStorage", "pydicom.uid.MRSpectroscopyStorage", "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "pydicom.uid.MammographyCADSRStorage", "pydicom.uid.MediaStorageDirectoryStorage", "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "pydicom.uid.MultichannelRespiratoryWaveformStorage", "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.NuclearMedicineImageStorage", "pydicom.uid.OphthalmicAxialMeasurementsStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pydicom.uid.OphthalmicPhotography16BitImageStorage", "pydicom.uid.OphthalmicPhotography8BitImageStorage", "pydicom.uid.OphthalmicThicknessMapStorage", "pydicom.uid.OphthalmicTomographyImageStorage", "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "pydicom.uid.PYDICOM_ROOT_UID", "pydicom.uid.ParametricMapStorage", "pydicom.uid.PatientRadiationDoseSRStorage", "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "pydicom.uid.PhotoacousticImageStorage", "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "pydicom.uid.PositronEmissionTomographyImageStorage", "pydicom.uid.ProcedureLogStorage", "pydicom.uid.ProtocolApprovalStorage", "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "pydicom.uid.RE_VALID_UID", "pydicom.uid.RE_VALID_UID_PREFIX", "pydicom.uid.RLELossless", "pydicom.uid.RLETransferSyntaxes", "pydicom.uid.RTBeamsDeliveryInstructionStorage", "pydicom.uid.RTBeamsTreatmentRecordStorage", "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "pydicom.uid.RTBrachyTreatmentRecordStorage", "pydicom.uid.RTDoseStorage", "pydicom.uid.RTImageStorage", "pydicom.uid.RTIonBeamsTreatmentRecordStorage", "pydicom.uid.RTIonPlanStorage", "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage", "pydicom.uid.RTPhysicianIntentStorage", "pydicom.uid.RTPlanStorage", "pydicom.uid.RTRadiationRecordSetStorage", "pydicom.uid.RTRadiationSalvageRecordStorage", "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "pydicom.uid.RTRadiationSetStorage", "pydicom.uid.RTSegmentAnnotationStorage", "pydicom.uid.RTStructureSetStorage", "pydicom.uid.RTTreatmentPreparationStorage", "pydicom.uid.RTTreatmentSummaryRecordStorage", "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "pydicom.uid.RawDataStorage", "pydicom.uid.RealWorldValueMappingStorage", "pydicom.uid.RespiratoryWaveformStorage", "pydicom.uid.RoboticArmRadiationStorage", "pydicom.uid.RoboticRadiationRecordStorage", "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo", "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo", "pydicom.uid.SMPTEST211030PCMDigitalAudio", "pydicom.uid.SecondaryCaptureImageStorage", "pydicom.uid.SegmentationStorage", "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.SimplifiedAdultEchoSRStorage", "pydicom.uid.SleepElectroencephalogramWaveformStorage", "pydicom.uid.SpatialFiducialsStorage", "pydicom.uid.SpatialRegistrationStorage", "pydicom.uid.SpectaclePrescriptionReportStorage", "pydicom.uid.StereometricRelationshipStorage", "pydicom.uid.SubjectiveRefractionMeasurementsStorage", "pydicom.uid.SurfaceScanMeshStorage", "pydicom.uid.SurfaceScanPointCloudStorage", "pydicom.uid.SurfaceSegmentationStorage", "pydicom.uid.TomotherapeuticRadiationRecordStorage", "pydicom.uid.TomotherapeuticRadiationStorage", "pydicom.uid.TractographyResultsStorage", "pydicom.uid.TwelveLeadECGWaveformStorage", "pydicom.uid.UID", "pydicom.uid.UltrasoundImageStorage", "pydicom.uid.UltrasoundMultiFrameImageStorage", "pydicom.uid.UncompressedTransferSyntaxes", "pydicom.uid.VLEndoscopicImageStorage", "pydicom.uid.VLMicroscopicImageStorage", "pydicom.uid.VLPhotographicImageStorage", "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "pydicom.uid.VLWholeSlideMicroscopyImageStorage", "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage", "pydicom.uid.VideoEndoscopicImageStorage", "pydicom.uid.VideoMicroscopicImageStorage", "pydicom.uid.VideoPhotographicImageStorage", "pydicom.uid.VisualAcuityMeasurementsStorage", "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pydicom.uid.XADefinedProcedureProtocolStorage", "pydicom.uid.XAPerformedProcedureProtocolStorage", "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.XRay3DAngiographicImageStorage", "pydicom.uid.XRay3DCraniofacialImageStorage", "pydicom.uid.XRayAngiographicImageStorage", "pydicom.uid.XRayRadiationDoseSRStorage", "pydicom.uid.XRayRadiofluoroscopicImageStorage", "pydicom.uid.generate_uid", "pydicom.valuerep.DA", "pydicom.valuerep.DS", "pydicom.valuerep.DSdecimal", "pydicom.valuerep.DSfloat", "pydicom.valuerep.DT", "pydicom.valuerep.IS", "pydicom.valuerep.ISfloat", "pydicom.valuerep.PersonName", "pydicom.valuerep.TM", "pydicom.valuerep.VR", "pydicom.valuerep.format_number_as_ds", "pydicom.valuerep.is_valid_ds", "pydicom.values.convert_AE_string", "pydicom.values.convert_ATvalue", "pydicom.values.convert_DA_string", "pydicom.values.convert_DS_string", "pydicom.values.convert_DT_string", "pydicom.values.convert_IS_string", "pydicom.values.convert_OBvalue", "pydicom.values.convert_OWvalue", "pydicom.values.convert_PN", "pydicom.values.convert_SQ", "pydicom.values.convert_TM_string", "pydicom.values.convert_UI", "pydicom.values.convert_UN", "pydicom.values.convert_UR_string", "pydicom.values.convert_numbers", "pydicom.values.convert_single_string", "pydicom.values.convert_string", "pydicom.values.convert_tag", "pydicom.values.convert_text", "pydicom.values.convert_value", "pydicom.waveforms.numpy_handler", "Bulk Data Handlers", "Overlay Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.overlays</span></code>)", "Pixel Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixel_data_handlers</span></code>)", "Waveform Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.waveforms</span></code>)", "API Reference", "Miscellaneous (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.misc</span></code>)", "UID Definitions and Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.uid</span></code>)", "Release notes", "Version 0.9.2", "Version 0.9.3", "Version 0.9.4", "Version 0.9.5", "Version 0.9.6", "Version 0.9.7", "Version 0.9.8", "Version 0.9.9", "Version 1.0.0", "Version 1.1.0", "Version 1.2.0", "Version 1.3.0", "Version 1.4.0", "Version 1.4.1", "Version 2.0.0", "Version 2.1.0", "Version 2.1.1", "Version 2.2.0", "Version 2.3.0", "Version 2.4.0", "Version 3.0.0", "Computation times", "Contributing to pydicom", "Contributing a source code change", "Contributing a documentation change", "Dataset basics: read, access, modify, write", "Introduction to JSON support", "DICOM File-sets and DICOMDIR", "Tutorials", "How to install pydicom", "Compressing <em>Pixel Data</em>", "Structured Reporting", "Waveforms"], "terms": {"go": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 50, 159, 513, 514, 515, 517, 519], "end": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 138, 157, 172, 174, 214, 489, 495, 502], "download": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 104, 489, 505, 507, 508, 509], "full": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 26, 43, 104, 130, 156, 489, 498, 499, 500, 505, 517, 520], "exampl": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 31, 34, 36, 38, 39, 40, 41, 43, 46, 47, 48, 49, 50, 81, 82, 106, 107, 108, 126, 129, 137, 147, 156, 164, 166, 177, 423, 448, 456, 486, 489, 490, 491, 492, 494, 495, 497, 501, 505, 507, 510, 511, 512, 513, 514, 516, 517, 520, 522], "code": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 29, 38, 40, 43, 44, 45, 50, 74, 75, 93, 129, 154, 156, 159, 489, 490, 492, 496, 497, 498, 500, 502, 505, 507, 512, 514, 518, 519, 521, 522], "graphic": [0, 46, 48], "window": [0, 2, 8, 20, 26, 27, 39, 44, 205, 206, 214, 489, 490, 498, 502, 508, 513, 514, 515, 519], "from": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 66, 69, 73, 74, 76, 78, 81, 82, 88, 94, 95, 106, 107, 116, 117, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138, 139, 141, 142, 144, 145, 147, 153, 154, 155, 158, 161, 164, 165, 166, 167, 168, 175, 176, 177, 190, 192, 199, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 423, 448, 451, 452, 456, 460, 478, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 506, 507, 510, 511, 513, 514, 515, 517, 519, 520, 521, 522], "pathlib": [0, 10, 169, 517], "import": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 31, 33, 34, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 66, 81, 82, 106, 107, 126, 129, 137, 147, 164, 166, 423, 448, 489, 495, 498, 510, 513, 514, 515, 516, 517, 519, 520, 521, 522], "path": [0, 9, 10, 11, 17, 24, 26, 27, 28, 31, 36, 38, 40, 42, 45, 48, 102, 103, 104, 105, 130, 147, 156, 165, 166, 169, 197, 489, 505, 510, 514, 517], "sy": [0, 4, 14, 522], "tkinter": [0, 22, 44, 489, 490, 492], "tk": [0, 22], "ttk": 0, "pydicom": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 25, 29, 31, 33, 35, 36, 42, 45, 47, 48, 49, 50, 56, 67, 482, 486, 490, 492, 493, 494, 495, 496, 497, 498, 499, 502, 504, 505, 507, 511, 513, 514, 515, 516, 517, 518, 521, 522], "print": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 38, 40, 47, 107, 109, 129, 489, 491, 502, 511, 514, 515, 517, 522], "__doc__": [0, 2, 8, 11, 14, 16, 20, 22], "def": [0, 8, 11, 14, 17, 25, 26, 31, 94, 95, 129, 164, 513, 516], "build_tre": 0, "treeview": 0, "d": [0, 2, 3, 8, 9, 10, 11, 12, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 38, 40, 41, 42, 43, 46, 47, 48, 49, 50, 52, 56, 61, 66, 78, 79, 81, 82, 94, 95, 99, 100, 106, 107, 108, 126, 129, 136, 137, 147, 156, 164, 166, 175, 176, 191, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 451, 452, 456, 459, 464, 481, 489, 495, 496, 504, 507, 509, 513, 514, 515, 516, 517, 520, 522], "dataset": [0, 2, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 33, 34, 36, 39, 40, 42, 43, 44, 45, 46, 50, 70, 77, 81, 82, 88, 94, 95, 98, 104, 105, 106, 107, 126, 127, 134, 136, 137, 139, 141, 147, 156, 157, 160, 162, 163, 164, 165, 166, 167, 175, 176, 177, 189, 190, 194, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 481, 486, 489, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 514, 517, 518, 519, 520, 522], "parent": [0, 26, 27, 132, 166, 167, 489, 499, 510, 517], "str": [0, 11, 14, 20, 29, 31, 38, 73, 74, 75, 76, 85, 89, 94, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 177, 178, 184, 188, 189, 192, 193, 194, 195, 196, 197, 198, 200, 201, 207, 213, 214, 216, 217, 423, 448, 450, 451, 452, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 489, 499, 504, 507, 515], "none": [0, 2, 8, 10, 14, 20, 29, 30, 36, 73, 75, 78, 79, 88, 91, 93, 95, 96, 104, 106, 107, 108, 109, 119, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 141, 144, 145, 147, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201, 214, 215, 217, 219, 423, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 489, 498, 501, 502, 505, 513, 515, 519, 521], "build": [0, 4, 175, 176, 489, 498, 509, 513], "out": [0, 46, 48, 50, 137, 166, 214, 451, 452, 489, 505, 512, 513, 514, 515, 517, 522], "paramet": [0, 10, 20, 24, 26, 31, 36, 48, 49, 50, 73, 74, 75, 76, 78, 79, 91, 93, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 154, 156, 157, 158, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 190, 192, 193, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 448, 451, 452, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 489, 495, 497, 499, 505, 507, 508, 515, 517], "The": [0, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 66, 73, 74, 75, 76, 94, 95, 97, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 154, 156, 158, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 190, 192, 193, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 448, 456, 459, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 489, 492, 499, 500, 505, 510, 513, 514, 515, 516, 519, 520, 521, 522], "object": [0, 10, 14, 31, 36, 38, 40, 43, 46, 82, 97, 101, 126, 129, 130, 132, 146, 152, 153, 156, 157, 158, 160, 161, 164, 166, 177, 199, 214, 215, 218, 456, 486, 489, 491, 492, 501, 502, 504, 507, 508, 515, 517, 522], "add": [0, 2, 6, 10, 12, 15, 18, 19, 20, 25, 26, 27, 31, 36, 38, 39, 41, 43, 47, 106, 108, 109, 126, 129, 132, 136, 137, 147, 164, 166, 167, 214, 489, 498, 501, 507, 509, 510, 511, 513, 514, 515, 517, 520, 522], "item": [0, 6, 8, 9, 15, 19, 20, 24, 26, 27, 28, 29, 36, 38, 49, 50, 126, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 163, 170, 194, 199, 489, 490, 491, 492, 495, 498, 501, 502, 507, 508, 511, 515, 517, 522], "id": [0, 2, 8, 9, 10, 12, 17, 20, 43, 129, 132, 165, 166, 167, 168, 169, 214, 489, 491, 508, 515, 517], "ani": [0, 10, 24, 26, 27, 29, 31, 34, 38, 39, 46, 47, 49, 76, 89, 104, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 126, 129, 131, 133, 136, 137, 138, 147, 149, 150, 151, 152, 153, 158, 166, 167, 177, 190, 199, 200, 205, 206, 214, 217, 449, 453, 456, 457, 470, 474, 480, 489, 491, 492, 501, 507, 513, 514, 517, 519, 520], "default": [0, 9, 24, 26, 29, 31, 39, 42, 46, 47, 48, 52, 73, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 91, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 126, 129, 130, 133, 136, 138, 144, 147, 154, 156, 157, 166, 168, 175, 176, 177, 190, 200, 204, 205, 206, 207, 210, 212, 213, 214, 448, 456, 464, 466, 470, 481, 489, 493, 495, 496, 498, 500, 501, 502, 503, 504, 505, 507, 514, 515, 516, 517, 520], "For": [0, 17, 24, 26, 27, 31, 33, 34, 36, 38, 39, 41, 43, 47, 48, 50, 118, 126, 129, 136, 139, 140, 142, 147, 164, 166, 177, 200, 214, 456, 489, 495, 505, 510, 513, 514, 515, 517, 519, 520], "each": [0, 3, 10, 20, 31, 33, 34, 37, 38, 41, 47, 48, 49, 66, 74, 129, 136, 137, 139, 140, 142, 143, 144, 147, 167, 168, 199, 207, 213, 214, 456, 481, 489, 504, 507, 513, 515, 517, 520, 522], "datael": [0, 36, 43, 44, 47, 56, 75, 127, 129, 130, 131, 154, 157, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 208, 489, 490, 498, 499, 500, 501, 504, 508, 510, 515], "current": [0, 20, 24, 26, 28, 34, 36, 39, 41, 93, 126, 129, 166, 167, 175, 176, 183, 201, 207, 214, 456, 489, 507, 514, 517, 519, 520], "idx": [0, 147, 520], "elem": [0, 8, 17, 36, 38, 47, 75, 126, 129, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 200, 216, 218, 489, 492, 515], "enumer": [0, 4, 522], "tree_item": 0, "insert": [0, 514, 515], "text": [0, 20, 22, 29, 38, 43, 126, 156, 193, 194, 196, 470, 476, 477, 479, 480, 489, 491, 500, 513, 514, 515], "move": [0, 90, 97, 133, 165, 166, 489, 495, 496, 510, 514, 517], "vr": [0, 2, 8, 12, 16, 17, 20, 26, 27, 28, 35, 37, 38, 41, 42, 43, 52, 56, 61, 79, 86, 87, 90, 99, 100, 106, 107, 108, 109, 111, 116, 117, 121, 126, 127, 128, 129, 130, 132, 138, 154, 155, 157, 158, 166, 175, 176, 177, 182, 183, 186, 190, 191, 210, 222, 423, 449, 451, 452, 453, 454, 455, 456, 457, 461, 470, 472, 474, 475, 476, 477, 479, 480, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 502, 504, 505, 507, 508, 509, 510, 515, 516, 520], "sq": [0, 8, 29, 52, 126, 129, 154, 470, 489, 495, 505, 508, 510, 515], "i": [0, 2, 3, 4, 10, 17, 20, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 56, 61, 66, 68, 70, 73, 74, 76, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 93, 94, 95, 101, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 147, 149, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 190, 191, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 423, 448, 449, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 470, 471, 472, 474, 475, 477, 478, 489, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522], "sequenc": [0, 2, 3, 6, 8, 15, 19, 20, 24, 26, 27, 28, 29, 36, 44, 49, 50, 56, 74, 76, 86, 129, 138, 139, 140, 141, 157, 162, 163, 167, 170, 171, 177, 193, 194, 202, 203, 204, 205, 214, 456, 470, 481, 486, 489, 490, 491, 495, 496, 499, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 517, 522], "contain": [0, 10, 24, 26, 29, 31, 34, 35, 36, 37, 38, 39, 43, 47, 48, 49, 50, 52, 66, 73, 75, 94, 126, 128, 129, 131, 138, 139, 140, 141, 142, 147, 156, 157, 164, 171, 175, 176, 177, 190, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 456, 460, 464, 466, 481, 489, 497, 500, 507, 513, 515, 517, 522], "0": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 31, 33, 34, 38, 39, 40, 41, 43, 47, 48, 49, 78, 79, 80, 98, 100, 101, 126, 128, 129, 131, 132, 137, 147, 152, 162, 163, 164, 168, 169, 175, 176, 200, 204, 205, 206, 210, 212, 213, 214, 362, 363, 373, 374, 448, 464, 466, 470, 478, 481, 486, 506, 511, 514, 515, 517, 519, 520, 522], "more": [0, 24, 26, 27, 29, 31, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49, 97, 126, 129, 136, 138, 139, 140, 142, 147, 157, 160, 166, 169, 174, 177, 178, 192, 214, 456, 459, 489, 490, 491, 492, 494, 495, 502, 513, 514, 515, 516, 517, 519, 520, 522], "seq_idx": 0, "seq_item": 0, "valu": [0, 2, 8, 9, 10, 12, 17, 20, 26, 28, 29, 30, 31, 33, 34, 36, 38, 39, 41, 43, 47, 48, 50, 52, 56, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 90, 93, 101, 107, 109, 110, 111, 120, 121, 126, 128, 129, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 147, 155, 156, 158, 164, 166, 174, 175, 176, 177, 178, 187, 192, 193, 194, 199, 200, 201, 202, 203, 204, 205, 207, 210, 212, 213, 214, 216, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 481, 486, 489, 490, 491, 494, 495, 496, 498, 499, 500, 501, 502, 504, 505, 507, 508, 509, 510, 513, 514, 515, 516, 517, 519, 520, 521, 522], "tree_seq_item": 0, "f": [0, 2, 3, 4, 8, 9, 10, 11, 12, 18, 20, 126, 129, 164, 166, 513, 517, 520, 522], "name": [0, 2, 6, 8, 9, 10, 11, 12, 14, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 31, 33, 36, 38, 39, 40, 41, 42, 43, 50, 94, 104, 107, 109, 116, 117, 120, 121, 122, 126, 129, 133, 147, 148, 156, 177, 190, 201, 214, 423, 456, 489, 490, 491, 492, 495, 498, 499, 500, 505, 507, 508, 509, 510, 511, 513, 514, 515, 517, 520, 521, 522], "1": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 38, 40, 41, 42, 43, 47, 48, 49, 58, 74, 76, 77, 81, 82, 84, 93, 94, 95, 103, 104, 106, 107, 108, 109, 126, 128, 129, 132, 133, 136, 137, 138, 139, 142, 143, 144, 146, 147, 148, 152, 156, 168, 177, 190, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 213, 214, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 456, 481, 490, 493, 496, 504, 507, 510, 513, 514, 515, 516, 517, 519, 520, 521, 522], "recurs": [0, 4, 43, 129, 489, 491, 493], "": [0, 2, 3, 4, 8, 9, 10, 12, 16, 17, 20, 24, 25, 26, 27, 28, 31, 34, 36, 37, 38, 41, 43, 45, 46, 47, 48, 50, 81, 90, 91, 94, 95, 108, 114, 118, 125, 126, 129, 130, 136, 139, 142, 145, 147, 156, 166, 167, 175, 176, 177, 207, 214, 216, 217, 362, 363, 458, 459, 460, 462, 469, 470, 477, 479, 480, 489, 491, 492, 494, 499, 500, 502, 505, 507, 512, 513, 514, 515, 517, 519, 520, 522], "__name__": [0, 14, 25, 26], "__main__": [0, 14, 25, 26], "len": [0, 3, 4, 8, 10, 14, 33, 515, 517, 522], "argv": [0, 4, 14], "2": [0, 2, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 38, 39, 41, 42, 43, 48, 49, 52, 74, 76, 77, 79, 81, 82, 83, 86, 93, 94, 95, 97, 98, 100, 101, 104, 106, 107, 108, 109, 126, 128, 129, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 156, 164, 177, 190, 200, 202, 203, 204, 205, 206, 207, 210, 212, 213, 214, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 456, 464, 466, 481, 492, 493, 495, 496, 498, 499, 501, 502, 510, 513, 515, 517, 519, 520, 522], "pleas": [0, 14, 25, 26, 28, 38, 40, 489, 496, 507, 513, 514], "suppli": [0, 12, 14, 46, 50, 76, 156, 166, 201, 214, 448, 456, 515, 517], "python": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 43, 44, 50, 73, 74, 76, 91, 129, 208, 209, 211, 423, 489, 490, 492, 493, 495, 496, 497, 498, 499, 500, 501, 504, 505, 506, 507, 509, 510, 513, 514, 515, 516, 519, 520, 522], "dicomtre": [0, 21, 489, 490, 511], "py": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 38, 46, 50, 81, 82, 94, 95, 489, 490, 493, 494, 495, 496, 497, 498, 506, 511, 513, 515, 517, 520], "exit": [0, 14, 24, 26, 27, 28], "read": [0, 2, 6, 7, 8, 13, 14, 16, 17, 18, 20, 24, 26, 27, 28, 37, 38, 39, 40, 43, 47, 48, 50, 52, 67, 73, 79, 86, 91, 104, 129, 130, 134, 135, 140, 145, 149, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 170, 171, 173, 174, 177, 197, 208, 210, 454, 455, 486, 489, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 504, 505, 507, 508, 509, 510, 511, 514, 516, 517, 518, 521], "resolv": [0, 127, 175, 489, 495, 501], "strict": [0, 39, 455, 489, 502, 509], "true": [0, 10, 12, 16, 29, 31, 36, 38, 39, 41, 43, 49, 52, 66, 77, 78, 79, 85, 86, 90, 91, 93, 94, 95, 98, 104, 113, 114, 123, 124, 126, 128, 129, 130, 133, 136, 140, 142, 147, 149, 154, 156, 157, 161, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 190, 197, 200, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 423, 451, 452, 460, 461, 462, 463, 464, 465, 466, 470, 471, 472, 474, 475, 477, 478, 481, 489, 493, 495, 505, 507, 509, 510, 515, 517, 522], "dcmread": [0, 4, 9, 10, 11, 12, 14, 16, 38, 40, 42, 45, 48, 67, 88, 104, 130, 149, 154, 157, 160, 174, 177, 198, 489, 498, 504, 505, 507, 510, 514, 515, 517, 522], "creat": [0, 4, 12, 14, 16, 18, 24, 25, 26, 27, 38, 39, 43, 46, 50, 85, 126, 127, 129, 147, 154, 164, 165, 166, 167, 199, 217, 448, 449, 450, 453, 455, 456, 486, 489, 492, 494, 507, 509, 515, 519, 520, 521, 522], "root": [0, 9, 10, 22, 26, 27, 94, 95, 166, 167, 169, 363, 448, 515, 517], "widget": [0, 46], "geometri": 0, "1200x900": 0, "titl": [0, 2, 20, 26, 28, 36, 43, 190, 456, 513, 514, 515], "viewer": [0, 46], "rowconfigur": 0, "weight": [0, 2, 8, 20], "columnconfigur": 0, "monospac": 0, "font": 0, "style": [0, 23, 489, 491, 494], "theme_us": 0, "clam": 0, "configur": [0, 34, 39, 97, 126, 129, 214, 486, 489, 500, 507, 508], "courier": 0, "12": [0, 31, 34, 49, 66, 147, 210, 283, 284, 391, 432, 445, 447, 517, 522], "popul": [0, 12, 50, 521], "grid": 0, "row": [0, 2, 8, 9, 20, 26, 28, 31, 47, 48, 129, 147, 200, 207, 210, 212, 213, 214, 520], "column": [0, 2, 8, 9, 20, 26, 28, 31, 47, 48, 129, 147, 200, 207, 210, 212, 213, 214, 520], "sticki": 0, "nsew": 0, "start": [0, 6, 17, 18, 20, 24, 26, 27, 28, 40, 47, 50, 126, 132, 140, 142, 155, 161, 167, 168, 173, 175, 176, 448, 470, 478, 489, 499, 509, 513, 514, 515, 516, 521], "mainloop": [0, 22], "jupyt": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "notebook": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "ipynb": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22], "sourc": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 23, 26, 28, 31, 43, 50, 52, 73, 74, 75, 76, 78, 79, 91, 93, 96, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 489, 497, 505, 507, 510, 512, 515, 518, 519, 522], "galleri": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 511], "gener": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 25, 26, 27, 31, 33, 38, 39, 42, 50, 138, 139, 140, 141, 144, 154, 160, 168, 215, 217, 448, 455, 481, 489, 491, 492, 496, 498, 510, 514, 520], "sphinx": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 36, 489, 493, 514], "These": [1, 6, 7, 15, 35, 38, 39, 489, 505, 515], "illustr": [1, 3, 4, 6, 7, 8, 9, 15, 16, 18, 20, 37, 38], "avail": [1, 6, 10, 15, 24, 26, 27, 28, 30, 31, 38, 43, 46, 48, 49, 50, 104, 129, 130, 136, 137, 147, 152, 166, 177, 208, 209, 211, 214, 456, 464, 466, 489, 491, 492, 496, 498, 499, 500, 502, 505, 517, 519, 520, 521, 522], "which": [1, 6, 20, 23, 24, 25, 26, 31, 34, 36, 38, 40, 41, 43, 46, 48, 49, 50, 74, 75, 81, 107, 126, 129, 153, 154, 157, 159, 164, 166, 177, 190, 213, 214, 448, 450, 489, 490, 493, 495, 497, 505, 513, 514, 515, 516, 517, 519, 520, 522], "can": [1, 6, 10, 14, 17, 24, 25, 26, 27, 28, 29, 31, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 93, 129, 136, 137, 147, 156, 157, 164, 166, 192, 199, 450, 455, 489, 490, 491, 492, 495, 504, 505, 508, 513, 514, 515, 516, 517, 519, 520, 521, 522], "appli": [1, 6, 10, 16, 34, 48, 49, 63, 75, 77, 129, 166, 201, 202, 203, 204, 205, 206, 214, 489, 502, 505, 514, 519, 522], "dicom": [1, 2, 4, 6, 7, 9, 13, 14, 15, 19, 21, 22, 23, 27, 28, 29, 31, 33, 34, 36, 37, 38, 40, 41, 42, 44, 46, 47, 48, 49, 52, 55, 57, 66, 67, 69, 71, 73, 74, 75, 81, 86, 91, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 129, 130, 131, 132, 136, 138, 139, 140, 141, 142, 143, 144, 147, 149, 153, 154, 156, 157, 159, 160, 161, 166, 177, 188, 190, 192, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 214, 216, 217, 423, 448, 451, 452, 455, 456, 458, 459, 475, 486, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 507, 508, 509, 510, 511, 514, 515, 516, 518, 520, 521], "downsiz": [1, 5, 6, 48, 511], "mri": [1, 5, 6, 48, 511], "us": [1, 3, 5, 6, 7, 9, 10, 12, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 47, 48, 49, 64, 74, 75, 76, 77, 81, 82, 85, 91, 92, 93, 94, 95, 99, 100, 104, 107, 109, 126, 127, 129, 130, 136, 137, 139, 147, 149, 152, 154, 156, 157, 159, 160, 164, 166, 167, 168, 174, 175, 176, 177, 192, 193, 194, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 448, 451, 455, 456, 459, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 521, 522], "decod": [1, 5, 6, 34, 37, 56, 74, 75, 126, 129, 142, 147, 156, 208, 209, 211, 212, 213, 456, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 486, 489, 493, 500, 501, 502, 505, 507, 508, 511, 517, 519], "plot": [1, 5, 6, 7, 13, 489, 501, 511, 522], "waveform": [1, 5, 6, 37, 44, 66, 129, 164, 482, 486, 489, 505, 509, 511, 518], "data": [1, 2, 5, 6, 7, 10, 11, 13, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 44, 46, 50, 52, 58, 59, 60, 61, 74, 75, 76, 77, 79, 81, 94, 95, 98, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 154, 155, 156, 158, 160, 164, 166, 173, 177, 192, 193, 194, 200, 201, 208, 209, 210, 211, 212, 213, 214, 448, 458, 475, 481, 486, 489, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 517, 518, 519], "load": [1, 5, 6, 10, 12, 14, 16, 157, 165, 166, 174, 489, 501, 505, 506, 507, 511], "ct": [1, 5, 6, 9, 10, 12, 20, 26, 28, 33, 38, 41, 43, 46, 48, 66, 129, 166, 489, 501, 511, 515, 516, 517, 520], "slice": [1, 2, 5, 6, 8, 9, 20, 26, 28, 129, 489, 498, 499, 501, 511], "axial": [1, 5, 6, 20, 26, 28, 43, 489, 501, 511, 515], "sagitt": [1, 5, 6, 489, 501, 511], "coron": [1, 5, 6, 489, 501, 511], "thi": [2, 3, 4, 8, 9, 10, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 52, 66, 73, 78, 79, 80, 83, 84, 86, 93, 94, 95, 107, 126, 129, 131, 136, 139, 140, 141, 147, 154, 156, 159, 165, 166, 183, 194, 197, 199, 201, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 450, 451, 452, 455, 456, 459, 460, 486, 496, 498, 501, 502, 507, 513, 514, 515, 516, 517, 519, 520, 521, 522], "show": [2, 3, 4, 6, 9, 10, 12, 17, 21, 24, 25, 27, 36, 43, 46, 50, 107, 126, 489, 490, 494, 496, 507, 509, 511, 514, 515, 522], "how": [2, 3, 8, 9, 10, 12, 14, 16, 17, 18, 20, 24, 26, 31, 36, 37, 40, 41, 42, 43, 46, 47, 48, 49, 50, 107, 126, 166, 489, 490, 494, 513, 514, 515, 516, 517, 518, 522], "an": [2, 10, 11, 16, 23, 24, 26, 27, 28, 29, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 50, 52, 73, 74, 75, 81, 82, 83, 86, 94, 95, 104, 105, 107, 113, 116, 117, 123, 126, 127, 129, 130, 132, 138, 139, 140, 141, 142, 143, 144, 147, 153, 156, 157, 166, 167, 176, 177, 187, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 219, 423, 449, 451, 452, 453, 454, 455, 456, 457, 459, 475, 481, 489, 492, 493, 499, 501, 502, 504, 505, 507, 508, 510, 513, 514, 515, 517, 519, 520, 521, 522], "mr": [2, 8, 10, 17, 20, 66, 456, 517], "512": [2, 20, 156, 200, 489, 499], "im": 2, "64": [2, 8, 20, 29, 34, 48, 210, 214, 448, 481, 489, 492, 522], "perform": [2, 31, 34, 39, 41, 80, 110, 111, 112, 114, 115, 125, 129, 133, 166, 212, 468, 489, 496, 499, 500, 519, 522], "take": [2, 24, 25, 26, 31, 34, 36, 41, 46, 50, 129, 154, 164, 199, 489, 496, 513, 514, 515, 517], "central": 2, "section": [2, 24, 25, 26, 27, 33, 36, 38, 41, 43, 48, 50, 52, 98, 126, 129, 132, 136, 138, 144, 177, 190, 194, 200, 207, 214, 456, 513, 514], "instead": [2, 31, 38, 40, 48, 49, 50, 92, 129, 154, 164, 166, 177, 448, 455, 456, 489, 492, 495, 499, 500, 501, 504, 505, 507, 508, 510, 513, 514, 515, 516, 517, 519, 520, 522], "averagin": 2, "pixel": [2, 4, 6, 7, 8, 13, 20, 23, 24, 26, 28, 35, 36, 37, 38, 40, 44, 46, 47, 50, 63, 77, 95, 129, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 156, 160, 177, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 486, 489, 490, 492, 493, 498, 499, 500, 501, 502, 504, 505, 507, 508, 510, 511, 513, 515, 518, 519], "final": [2, 17, 40, 104, 136, 515, 522], "store": [2, 8, 10, 17, 20, 29, 33, 34, 38, 43, 48, 104, 126, 129, 156, 177, 191, 202, 203, 214, 449, 451, 452, 453, 454, 455, 457, 489, 492, 507, 515, 516, 517, 522], "requir": [2, 10, 12, 20, 26, 27, 33, 34, 38, 39, 41, 43, 47, 48, 49, 50, 94, 126, 129, 136, 138, 139, 140, 141, 147, 153, 156, 166, 175, 177, 190, 199, 200, 201, 205, 206, 208, 209, 210, 212, 213, 214, 217, 459, 489, 492, 496, 500, 504, 505, 510, 514, 515, 517, 519, 520, 522], "numpi": [2, 3, 4, 23, 31, 33, 36, 38, 41, 42, 47, 48, 49, 79, 94, 95, 100, 101, 129, 147, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 464, 466, 481, 489, 490, 498, 500, 501, 502, 504, 508, 513, 519, 520, 522], "librari": [2, 23, 25, 26, 38, 39, 44, 48, 214, 489, 492, 495, 514, 520], "manipul": [2, 23, 40, 126, 482, 519], "ha": [2, 10, 14, 20, 24, 25, 26, 27, 31, 33, 34, 36, 39, 40, 41, 43, 48, 50, 79, 86, 88, 126, 129, 138, 140, 142, 147, 157, 158, 165, 166, 167, 177, 178, 199, 200, 208, 209, 210, 211, 212, 213, 214, 216, 448, 450, 481, 489, 491, 492, 494, 499, 500, 502, 503, 504, 509, 510, 513, 514, 515, 516, 517, 520, 522], "x": [2, 3, 8, 9, 20, 26, 27, 28, 36, 448, 489, 501, 513, 515, 520, 522], "voxel": 2, "downsampl": [2, 33], "8": [2, 8, 11, 20, 22, 23, 26, 27, 31, 33, 34, 38, 42, 48, 78, 132, 147, 168, 169, 200, 204, 205, 206, 210, 212, 213, 214, 221, 230, 303, 355, 362, 363, 384, 441, 448, 481, 491, 494, 498, 500, 502, 505, 508, 509, 522], "inform": [2, 6, 7, 8, 9, 12, 13, 20, 24, 26, 27, 28, 32, 34, 35, 36, 38, 41, 43, 46, 48, 50, 77, 98, 126, 129, 130, 131, 133, 147, 156, 159, 161, 177, 190, 456, 489, 490, 492, 495, 498, 502, 504, 505, 510, 511, 513, 514, 515, 520, 522], "set": [2, 6, 7, 12, 13, 18, 20, 25, 26, 27, 28, 29, 34, 37, 38, 39, 41, 42, 44, 47, 48, 50, 52, 66, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 92, 93, 99, 100, 101, 107, 126, 127, 129, 140, 142, 156, 157, 158, 164, 165, 166, 168, 169, 174, 177, 451, 455, 456, 459, 460, 486, 489, 490, 495, 498, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 515, 516, 518, 519, 520, 522], "after": [2, 8, 20, 26, 27, 28, 36, 43, 46, 138, 140, 161, 167, 172, 173, 174, 177, 190, 489, 504, 507, 510, 513, 514, 515, 517, 519, 520], "file_meta": [2, 12, 20, 26, 27, 28, 38, 41, 42, 43, 129, 130, 131, 133, 177, 190, 489, 492, 504, 517, 520], "0002": [2, 12, 20, 26, 27, 28, 34, 38, 43, 48, 129, 133, 177, 190, 210, 212, 213, 214, 362, 515, 519], "0000": [2, 8, 20, 26, 27, 28, 38, 43, 177, 190, 515], "file": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 21, 25, 27, 28, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 66, 69, 71, 82, 86, 91, 98, 102, 103, 104, 105, 107, 129, 130, 131, 133, 145, 149, 152, 153, 154, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 179, 188, 189, 190, 192, 193, 194, 197, 486, 490, 491, 492, 494, 495, 498, 501, 502, 504, 505, 507, 508, 509, 510, 511, 513, 514, 515, 518, 520], "meta": [2, 8, 12, 20, 26, 27, 28, 38, 43, 50, 98, 129, 130, 131, 133, 156, 159, 177, 190, 489, 492, 495, 498, 504, 515], "group": [2, 17, 20, 26, 27, 28, 38, 40, 43, 47, 49, 94, 116, 118, 126, 129, 130, 131, 132, 133, 156, 164, 166, 177, 190, 200, 216, 217, 218, 456, 481, 489, 492, 495, 499, 504, 505, 512, 513, 515, 522], "length": [2, 8, 20, 26, 27, 28, 38, 39, 43, 49, 52, 87, 118, 126, 128, 129, 136, 137, 138, 140, 142, 143, 144, 153, 154, 170, 173, 177, 189, 190, 200, 210, 213, 214, 448, 489, 494, 495, 499, 501, 505, 507, 508, 509, 510, 515], "ul": [2, 16, 20, 26, 27, 28, 29, 38, 43, 106, 107, 108, 190, 481, 515, 517], "190": [2, 20, 38], "0001": [2, 20, 26, 27, 28, 38, 43, 129, 133, 190, 515], "version": [2, 8, 20, 24, 26, 27, 28, 34, 36, 38, 40, 43, 44, 52, 74, 76, 77, 79, 81, 82, 86, 93, 94, 95, 97, 98, 100, 101, 103, 104, 108, 109, 126, 129, 131, 132, 133, 136, 138, 142, 143, 144, 146, 147, 148, 168, 175, 176, 190, 197, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 214, 216, 217, 448, 456, 464, 466, 481, 513, 514, 515, 516, 521], "ob": [2, 20, 26, 27, 28, 29, 38, 43, 138, 182, 190, 467, 489, 493, 508, 515, 516], "b": [2, 8, 12, 16, 20, 22, 26, 27, 28, 34, 38, 43, 47, 48, 126, 129, 177, 448, 456, 513, 514, 515], "x00": [2, 8, 16, 20, 26, 27, 28, 38, 43, 47, 515], "x01": [2, 8, 20, 26, 27, 28, 38, 43, 48, 515], "media": [2, 12, 20, 26, 27, 28, 38, 43, 66, 129, 133, 188, 190, 515, 517], "storag": [2, 9, 12, 14, 20, 26, 27, 28, 38, 43, 48, 66, 129, 133, 188, 190, 486, 489, 492, 493, 498, 508, 515, 517, 522], "sop": [2, 8, 9, 10, 12, 20, 26, 27, 28, 33, 38, 43, 48, 49, 66, 133, 159, 164, 165, 166, 167, 177, 190, 201, 214, 486, 489, 498, 499, 505, 508, 509, 515, 520], "class": [2, 8, 9, 12, 14, 20, 26, 27, 28, 36, 37, 38, 43, 48, 49, 52, 64, 66, 67, 78, 126, 128, 129, 130, 131, 132, 133, 147, 150, 152, 153, 156, 165, 166, 167, 177, 190, 199, 215, 216, 362, 423, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 486, 489, 490, 491, 492, 495, 496, 497, 498, 499, 500, 502, 504, 505, 508, 509, 510, 514, 515, 517, 520, 521], "uid": [2, 8, 10, 12, 20, 26, 27, 28, 29, 31, 32, 33, 34, 38, 41, 42, 43, 48, 50, 95, 129, 133, 136, 137, 147, 148, 165, 166, 177, 190, 201, 208, 209, 210, 211, 212, 213, 214, 472, 486, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 507, 508, 509, 510, 513, 515, 517, 519, 520], "ui": [2, 12, 16, 20, 26, 27, 28, 29, 38, 43, 186, 190, 472, 489, 492, 502, 515], "0003": [2, 12, 20, 26, 27, 28, 38, 43, 133, 190, 515], "instanc": [2, 8, 10, 12, 20, 26, 27, 28, 29, 31, 33, 38, 40, 43, 45, 46, 48, 64, 66, 75, 85, 129, 133, 146, 147, 156, 157, 164, 165, 166, 167, 177, 190, 199, 201, 214, 215, 450, 451, 452, 489, 501, 507, 510, 515, 520, 521], "3": [2, 4, 5, 8, 10, 12, 16, 17, 19, 20, 22, 23, 26, 28, 29, 31, 33, 34, 38, 39, 42, 43, 48, 49, 52, 97, 104, 106, 107, 108, 109, 126, 128, 129, 132, 147, 164, 168, 175, 176, 177, 190, 200, 202, 203, 204, 205, 206, 207, 210, 212, 214, 217, 222, 223, 233, 239, 256, 258, 260, 261, 269, 274, 277, 320, 345, 348, 367, 371, 372, 393, 405, 414, 425, 430, 448, 486, 492, 493, 495, 496, 497, 498, 499, 500, 504, 505, 506, 509, 513, 514, 515, 516, 517, 520, 522], "6": [2, 8, 10, 20, 23, 26, 28, 29, 34, 42, 43, 48, 52, 75, 126, 128, 129, 138, 207, 210, 214, 255, 282, 293, 351, 367, 380, 399, 413, 421, 424, 431, 438, 456, 490, 495, 496, 498, 505, 506, 509, 514, 515, 522], "4": [2, 8, 9, 10, 12, 16, 20, 21, 23, 24, 26, 28, 33, 34, 36, 38, 42, 43, 48, 94, 103, 104, 126, 128, 129, 136, 138, 139, 140, 142, 143, 144, 172, 173, 177, 190, 200, 201, 202, 203, 204, 205, 206, 207, 210, 214, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 478, 495, 500, 501, 504, 505, 507, 510, 513, 515, 517, 521, 522], "5962": [2, 8, 10, 20, 26, 28, 43, 515], "20040826185059": [2, 8, 20], "5457": [2, 8, 20], "0010": [2, 12, 16, 17, 20, 26, 27, 28, 36, 38, 43, 47, 48, 63, 64, 95, 129, 133, 139, 140, 141, 156, 177, 190, 200, 210, 211, 212, 213, 214, 481, 482, 489, 498, 510, 514, 515, 517, 519], "transfer": [2, 12, 16, 20, 26, 27, 28, 31, 32, 34, 38, 43, 44, 94, 95, 129, 130, 133, 136, 137, 139, 140, 147, 148, 153, 157, 165, 166, 174, 177, 190, 208, 209, 210, 211, 212, 213, 214, 222, 311, 316, 319, 340, 376, 423, 426, 486, 489, 493, 498, 500, 501, 502, 504, 505, 509, 515, 519, 520, 522], "syntax": [2, 12, 16, 20, 24, 26, 27, 28, 31, 32, 34, 38, 43, 44, 50, 94, 95, 129, 130, 133, 136, 137, 139, 140, 147, 148, 153, 157, 165, 166, 174, 177, 190, 208, 209, 210, 211, 212, 213, 214, 222, 311, 316, 319, 340, 376, 423, 426, 486, 489, 492, 493, 498, 500, 501, 502, 504, 505, 509, 515, 519, 520, 522], "explicit": [2, 12, 20, 26, 28, 41, 42, 43, 52, 86, 129, 130, 140, 157, 177, 190, 210, 222, 456, 489, 492, 493, 501, 502, 504, 507, 515], "littl": [2, 16, 20, 26, 27, 28, 30, 31, 38, 41, 42, 43, 129, 130, 140, 143, 144, 147, 153, 154, 157, 166, 172, 173, 174, 177, 190, 210, 213, 423, 461, 462, 463, 464, 465, 466, 470, 471, 472, 474, 475, 477, 478, 489, 492, 504, 515, 520, 522], "endian": [2, 12, 16, 20, 26, 27, 28, 30, 31, 38, 41, 42, 43, 129, 130, 140, 143, 144, 147, 153, 154, 157, 166, 171, 172, 173, 174, 177, 183, 190, 210, 213, 214, 222, 423, 461, 462, 463, 464, 465, 466, 470, 471, 472, 474, 475, 477, 478, 489, 492, 500, 504, 509, 515, 520, 522], "0012": [2, 12, 20, 26, 27, 28, 38, 43, 133, 190, 362, 515], "implement": [2, 12, 20, 26, 27, 28, 31, 38, 43, 50, 133, 177, 190, 362, 489, 505, 515], "0013": [2, 20, 26, 27, 28, 38, 43, 133, 190, 515, 517], "sh": [2, 16, 20, 26, 28, 29, 38, 43, 190, 479, 515], "dctool100": [2, 20, 26, 28, 43, 515], "0016": [2, 20, 26, 27, 28, 38, 43, 190, 515], "applic": [2, 20, 26, 27, 28, 29, 39, 43, 177, 190, 515, 520], "entiti": [2, 20, 26, 28, 29, 43, 166, 190, 515], "ae": [2, 20, 26, 28, 29, 43, 190, 461, 477, 489, 498, 510, 515], "clunie1": [2, 20, 26, 28, 43, 515], "0008": [2, 12, 20, 26, 27, 28, 38, 43, 48, 73, 74, 75, 76, 129, 139, 141, 156, 157, 201, 210, 212, 213, 214, 489, 490, 502, 515, 516, 517], "type": [2, 3, 8, 17, 18, 20, 25, 26, 27, 28, 31, 34, 35, 37, 38, 41, 43, 48, 66, 73, 74, 76, 79, 97, 102, 103, 104, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 142, 143, 145, 147, 156, 157, 158, 160, 161, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 190, 192, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 423, 448, 456, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 474, 476, 477, 478, 479, 480, 481, 489, 492, 493, 495, 506, 507, 509, 514, 515, 517, 520, 522], "c": [2, 10, 18, 20, 22, 24, 26, 27, 28, 29, 34, 38, 40, 43, 48, 49, 90, 129, 200, 202, 203, 204, 205, 206, 207, 210, 214, 477, 489, 496, 515, 516, 517, 519, 520, 522], "deriv": [2, 8, 20, 38, 45, 78, 94, 95, 126, 131, 489, 495, 515], "secondari": [2, 8, 20], "other": [2, 8, 17, 20, 24, 29, 34, 39, 41, 42, 43, 46, 47, 48, 50, 160, 177, 182, 183, 190, 214, 456, 513, 515, 517, 520], "creation": [2, 8, 12, 20, 26, 27, 28, 38, 164, 489, 501, 515, 517], "date": [2, 8, 9, 12, 17, 20, 23, 26, 27, 28, 29, 38, 39, 43, 90, 166, 449, 486, 489, 498, 499, 501, 507, 515, 519], "da": [2, 12, 17, 20, 26, 27, 28, 29, 38, 43, 56, 61, 90, 129, 463, 477, 489, 498, 507, 515], "20040826": [2, 8, 20], "time": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 26, 27, 28, 29, 38, 39, 43, 50, 66, 88, 90, 107, 130, 158, 171, 174, 214, 450, 457, 489, 492, 498, 507, 512, 513, 514, 515, 517, 522], "tm": [2, 12, 20, 26, 27, 28, 29, 38, 56, 61, 90, 471, 477, 489, 498, 507, 515], "185434": [2, 8, 20], "0014": [2, 20, 26, 27, 28, 515], "creator": [2, 8, 16, 20, 26, 28, 43, 108, 109, 117, 120, 121, 122, 129, 132, 190, 216, 489, 499, 504, 509, 515, 517], "0018": [2, 20, 26, 27, 28, 38, 40, 190, 201, 214], "0020": [2, 12, 17, 20, 26, 27, 28, 38, 515, 517], "studi": [2, 8, 9, 10, 20, 26, 27, 28, 38, 164, 166, 517], "0021": [2, 20], "seri": [2, 8, 10, 20, 36, 159, 164, 166, 489, 493, 514, 517, 520], "0022": [2, 20, 515], "acquisit": [2, 8, 20], "0030": [2, 17, 20, 38], "185059": [2, 8, 20], "0031": [2, 20], "0032": [2, 20], "0050": [2, 20, 26, 27, 38, 47], "access": [2, 8, 20, 23, 26, 27, 37, 38, 43, 47, 52, 66, 79, 97, 129, 156, 489, 491, 498, 504, 505, 509, 514, 516, 517, 518, 521], "number": [2, 8, 11, 18, 20, 24, 26, 27, 28, 31, 34, 36, 38, 40, 43, 47, 107, 109, 126, 128, 129, 132, 136, 138, 139, 140, 141, 144, 147, 155, 156, 157, 166, 167, 168, 171, 174, 191, 192, 198, 200, 214, 216, 217, 448, 451, 452, 459, 489, 490, 494, 497, 501, 507, 508, 510, 514, 515, 517, 519, 521, 522], "0060": [2, 20, 26, 27, 38], "modal": [2, 8, 9, 10, 20, 26, 28, 38, 44, 202, 203, 205, 206, 214, 489, 502, 517, 521], "0070": [2, 20, 26, 27], "manufactur": [2, 8, 20, 129], "lo": [2, 12, 16, 17, 18, 20, 26, 27, 29, 43, 129, 479, 515, 517], "toshiba_mec": [2, 8, 20], "0080": [2, 20, 26, 27, 28], "institut": [2, 8, 20], "toshiba": [2, 8, 20], "0090": [2, 20], "refer": [2, 8, 20, 26, 27, 34, 36, 38, 48, 90, 136, 138, 139, 140, 141, 142, 144, 146, 165, 200, 201, 202, 203, 204, 205, 206, 207, 214, 448, 489, 492, 513, 517, 520, 522], "physician": [2, 8, 20], "pn": [2, 12, 17, 20, 29, 38, 61, 126, 129, 456, 469, 489, 502, 507, 514, 515, 517], "0201": [2, 20, 489, 501], "timezon": [2, 8, 20], "offset": [2, 8, 20, 41, 43, 47, 126, 129, 132, 136, 137, 139, 140, 141, 142, 152, 161, 162, 163, 166, 172, 173, 470, 478, 489, 502, 505, 508, 517, 520], "utc": [2, 8, 20], "0400": [2, 8, 20], "1010": [2, 20, 49, 522], "station": [2, 8, 20], "000000000": [2, 8, 20], "1060": [2, 20], "1070": [2, 20], "oper": [2, 8, 20, 33, 38, 39, 43, 44, 82, 129, 202, 203, 205, 206, 214, 489, 492, 500, 502, 505, 515, 519], "1090": [2, 20], "model": [2, 8, 20, 24, 26, 38, 50, 126, 129, 516, 522], "mrt50h1": [2, 8, 20], "patient": [2, 8, 9, 10, 12, 17, 20, 26, 27, 28, 40, 129, 164, 166, 456, 489, 491, 498, 508, 514, 515, 517], "compressedsampl": [2, 8, 9, 20, 26, 28, 66, 514, 515], "mr1": [2, 8, 20], "4mr1": [2, 8, 17, 20], "birth": [2, 8, 17, 20], "0040": [2, 20], "sex": [2, 8, 20], "1020": [2, 20], "size": [2, 8, 9, 20, 24, 26, 48, 50, 94, 95, 126, 152, 157, 174, 208, 209, 489, 499, 505, 509, 519, 520], "1030": [2, 20, 489, 503], "80": [2, 8, 20, 36, 42, 49, 139, 214, 222, 314, 316, 361, 522], "contrast": [2, 8, 10, 20, 517], "bolu": [2, 8, 20], "agent": [2, 8, 20], "scan": [2, 8, 20, 26, 28, 164, 520], "se": [2, 8, 20], "variant": [2, 8, 20], "option": [2, 8, 17, 20, 25, 27, 28, 29, 31, 32, 39, 42, 46, 78, 79, 91, 102, 103, 104, 105, 107, 109, 126, 127, 129, 130, 133, 136, 138, 139, 141, 144, 147, 154, 156, 157, 160, 166, 167, 168, 174, 177, 200, 201, 204, 205, 206, 207, 210, 212, 213, 214, 217, 448, 456, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 474, 476, 477, 478, 479, 480, 481, 486, 489, 491, 492, 498, 502, 505, 507, 510, 517, 522], "0023": [2, 12, 20, 26, 27], "3d": [2, 4, 8, 20, 214, 489, 505], "thick": [2, 8, 20], "repetit": [2, 8, 20, 50], "4000": [2, 8, 20], "0081": [2, 20], "echo": [2, 8, 20], "240": [2, 8, 20], "0083": [2, 20], "averag": [2, 8, 20], "0084": [2, 20, 26, 27, 28], "frequenc": [2, 8, 20, 49, 522], "63": [2, 8, 20, 515], "924339": [2, 8, 20], "0085": [2, 20], "nucleu": [2, 8, 20], "h": [2, 8, 12, 20, 22, 24, 26, 27, 28], "0086": [2, 20, 26, 27, 28], "0091": [2, 20], "train": [2, 8, 20], "1000": [2, 20, 49, 522], "devic": [2, 8, 20, 26, 27, 521], "serial": [2, 8, 20, 126, 129, 516], "0000200": [2, 8, 20], "softwar": [2, 8, 20, 39, 519], "v3": [2, 8, 20, 489, 505, 507, 508, 522], "51": [2, 8, 20, 42, 139, 222, 313, 319], "p25": [2, 8, 20], "1314": [2, 20], "flip": [2, 8, 20], "angl": [2, 8, 20], "90": [2, 8, 20, 42, 49, 139, 214, 222, 248, 308, 311, 489, 502], "5100": [2, 20, 40], "posit": [2, 8, 20, 24, 26, 27, 28, 40, 140, 142, 149, 161, 171, 172, 173, 190], "hf": [2, 8, 20, 40], "000d": [2, 20], "000e": [2, 20], "0011": [2, 20, 47, 129, 200, 210, 212, 213, 214], "83": [2, 8, 20], "9063": [2, 8, 20], "91": [2, 8, 20, 42, 139, 214, 222, 307, 311, 346, 489, 494, 502], "2000": [2, 8, 20, 34, 41, 77, 139, 214, 311, 489, 502, 505, 519, 520], "6406": [2, 8, 20], "0037": [2, 20], "orient": [2, 8, 20], "0052": [2, 20], "frame": [2, 8, 20, 31, 41, 48, 129, 136, 137, 138, 139, 140, 141, 142, 144, 147, 200, 207, 212, 214, 489, 498, 500, 502, 507, 510, 520], "later": [2, 8, 20, 97, 451, 452, 489, 496, 513, 515], "1040": [2, 20], "indic": [2, 8, 20, 34, 43, 47, 95, 126, 129, 489, 496, 513, 514, 515], "1041": [2, 20], "locat": [2, 4, 8, 9, 20, 91, 129, 132, 139, 165, 172, 514, 517], "comment": [2, 8, 20, 513], "lt": [2, 20, 29], "uncompress": [2, 8, 20, 31, 33, 40, 41, 42, 48, 129, 147, 210, 214, 426, 489, 500, 502, 507, 508, 520], "0028": [2, 20, 34, 42, 48, 129, 139, 141, 201, 202, 203, 204, 205, 206, 207, 210, 212, 213, 214, 489, 502, 504, 515], "sampl": [2, 8, 20, 31, 33, 34, 41, 48, 49, 129, 147, 214, 481, 520, 522], "per": [2, 8, 20, 31, 33, 34, 38, 41, 48, 52, 129, 131, 136, 137, 139, 147, 169, 210, 214, 489, 495, 502, 505, 515, 520], "u": [2, 20, 26, 28, 29, 66, 108, 175, 176, 481, 489, 491, 516, 517, 519, 520, 522], "0004": [2, 10, 20, 26, 27, 28, 34, 48, 129, 164, 166, 207, 210, 212, 214, 489, 502, 517], "photometr": [2, 8, 20, 33, 34, 41, 42, 48, 129, 207, 208, 209, 210, 211, 212, 213, 214, 489, 502, 520], "interpret": [2, 8, 20, 33, 34, 41, 42, 47, 48, 129, 207, 208, 209, 210, 211, 212, 213, 214, 489, 502, 520, 522], "monochrome2": [2, 8, 20, 33, 34, 210, 212, 517], "space": [2, 8, 9, 20, 31, 33, 34, 36, 41, 44, 107, 147, 207, 214, 456, 461, 472, 474, 476, 489, 498, 510, 515, 517], "3125": [2, 8, 20], "0100": [2, 20, 34, 42, 49, 129, 190, 200, 210, 212, 213, 214, 481, 522], "bit": [2, 8, 20, 29, 31, 33, 34, 36, 42, 46, 47, 48, 129, 132, 142, 147, 202, 203, 210, 213, 214, 489, 499, 500, 502, 507, 508, 509, 510, 513, 514, 520, 522], "alloc": [2, 8, 20, 33, 34, 36, 42, 129, 210, 213, 214, 489, 509, 522], "16": [2, 8, 20, 26, 28, 31, 33, 34, 42, 52, 126, 129, 132, 210, 212, 213, 214, 388, 459, 460, 481, 489, 502, 520, 522], "0101": [2, 20, 34, 129, 202, 203, 210, 212, 214], "0102": [2, 20, 34, 190, 200], "high": [2, 8, 20, 33, 34, 36, 109, 489, 502], "15": [2, 8, 20, 400, 511, 515, 522], "0103": [2, 20, 34, 129, 202, 203, 210, 212, 213, 214], "represent": [2, 8, 20, 26, 28, 29, 33, 34, 38, 57, 60, 72, 107, 109, 111, 121, 126, 129, 132, 138, 165, 166, 167, 202, 203, 214, 451, 452, 456, 458, 459, 476, 479, 486, 489, 505, 507, 510, 515, 516, 522], "0106": [2, 20], "smallest": [2, 8, 20], "ss": [2, 4, 20, 26, 28, 29, 175, 176, 481, 489, 491, 522], "0107": [2, 20], "largest": [2, 8, 20], "1050": [2, 20, 205, 206, 214, 515], "center": [2, 8, 20, 205, 206, 214, 515], "600": [2, 8, 20], "1051": [2, 20, 205, 206, 214, 489, 507, 515], "width": [2, 8, 20, 126, 205, 206, 214, 515], "1600": [2, 8, 20], "7fe0": [2, 20, 26, 28, 36, 38, 48, 63, 64, 95, 129, 139, 140, 141, 156, 210, 211, 212, 213, 214, 482, 489, 498, 502, 510, 515], "ow": [2, 20, 26, 28, 29, 47, 49, 183, 468, 489, 493, 504, 509, 515], "arrai": [2, 4, 14, 20, 26, 28, 36, 38, 47, 48, 49, 50, 79, 94, 95, 100, 126, 129, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 450, 489, 490, 500, 501, 504, 505, 515], "128": [2, 9, 12, 20, 26, 28, 130, 149, 161, 171, 172, 173, 177, 190, 324, 369, 515, 520], "element": [2, 10, 12, 16, 17, 18, 20, 24, 25, 26, 27, 28, 33, 35, 36, 37, 40, 44, 46, 47, 48, 49, 50, 52, 63, 74, 75, 77, 79, 81, 82, 90, 91, 94, 95, 98, 99, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 147, 154, 155, 156, 157, 158, 166, 173, 174, 175, 176, 177, 190, 192, 193, 200, 208, 210, 212, 213, 214, 216, 217, 449, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 486, 489, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 504, 505, 507, 508, 509, 510, 514, 517, 520, 522], "fffc": [2, 20, 26, 28, 515], "trail": [2, 8, 20, 26, 28, 138, 200, 214, 461, 472, 474, 476, 489, 498, 515], "pad": [2, 3, 8, 20, 26, 28, 136, 138, 140, 195, 200, 214, 489, 499, 501, 502, 505, 507, 508, 515], "126": [2, 20, 26, 28, 515, 522], "author": [2, 8, 9, 11, 12, 16, 17, 20, 22], "guillaum": [2, 8, 9, 11, 12, 17, 20, 22], "lemaitr": [2, 8, 9, 11, 12, 17, 20, 22], "g": [2, 8, 9, 11, 12, 17, 20, 22, 24, 26, 27, 31, 33, 34, 36, 38, 39, 40, 47, 48, 52, 82, 94, 126, 129, 132, 147, 156, 177, 199, 200, 214, 215, 451, 456, 489, 492, 499, 501, 505, 510, 515], "lemaitre58": [2, 8, 9, 11, 12, 17, 20, 22], "gmail": [2, 8, 9, 11, 12, 17, 20, 22], "com": [2, 8, 9, 11, 12, 17, 20, 22, 23, 94, 513, 514, 519], "licens": [2, 8, 9, 11, 12, 16, 17, 20, 22, 489, 491, 492, 514], "mit": [2, 8, 9, 11, 12, 16, 17, 20, 22, 40, 489, 491, 492], "fixm": 2, "test": [2, 12, 16, 24, 26, 27, 28, 38, 40, 86, 106, 107, 108, 129, 460, 489, 490, 496, 498, 502, 505, 507, 509], "get": [2, 9, 10, 14, 26, 27, 29, 36, 38, 39, 40, 42, 43, 46, 47, 48, 49, 90, 95, 129, 153, 164, 214, 486, 489, 492, 493, 501, 505, 507, 513, 514, 518, 519, 520], "arr": [2, 3, 36, 38, 41, 47, 48, 49, 129, 200, 201, 202, 203, 204, 205, 206, 207, 214, 520, 522], "pixel_arrai": [2, 4, 9, 33, 36, 38, 41, 42, 44, 46, 129, 489, 491, 502], "shape": [2, 4, 47, 48, 49, 94, 129, 147, 200, 207, 208, 209, 212, 214, 481, 520, 522], "arr_downsampl": 2, "copi": [2, 10, 42, 50, 129, 166, 489, 495, 505, 508, 513, 514, 517, 519], "back": [2, 14, 16, 20, 33, 36, 40, 47, 48, 50, 513, 514, 515, 517], "origin": [2, 10, 20, 24, 26, 28, 34, 41, 42, 43, 47, 50, 86, 129, 158, 166, 177, 210, 448, 451, 452, 454, 455, 456, 513, 514, 515, 520, 522], "pixeldata": [2, 33, 38, 41, 48, 50, 134, 136, 137, 214, 489, 501, 502, 520], "tobyt": [2, 48, 522], "updat": [2, 10, 18, 20, 26, 27, 33, 47, 106, 107, 108, 109, 129, 164, 166, 175, 176, 177, 190, 489, 491, 492, 494, 495, 497, 498, 499, 500, 502, 504, 505, 507, 508, 509, 510, 513, 514, 517, 519, 520], "regard": 2, "given": [2, 11, 24, 26, 27, 28, 29, 42, 48, 49, 74, 76, 126, 127, 129, 132, 156, 158, 164, 166, 177, 200, 210, 212, 213, 214, 216, 451, 452, 456, 475, 481, 489, 504, 507, 515, 517, 519, 520, 522], "n": [2, 8, 11, 14, 20, 26, 28, 190, 200, 202, 203, 204, 205, 206, 210, 212, 213, 214, 481, 517], "total": [2, 3, 5, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 136, 137, 189, 200, 214, 511, 520], "run": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 38, 39, 40, 50, 107, 129, 456, 489, 492, 495, 505, 510, 514, 515, 518, 519], "script": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 24, 25, 26, 50, 489, 499, 512], "minut": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20], "005": [2, 5, 8, 12, 13, 511], "second": [2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 34, 39, 45, 456, 522], "plot_downsize_imag": [2, 5, 511], "matplotlib": [3, 4, 9, 44, 522], "np": [3, 4, 200, 201, 202, 203, 204, 205, 206, 210, 212, 213, 214, 481, 520, 522], "pyplot": [3, 4, 9, 46, 522], "plt": [3, 4, 9, 46, 522], "generate_multiplex": [3, 129, 481, 489, 505, 522], "first": [3, 20, 26, 28, 33, 34, 36, 38, 39, 40, 43, 45, 48, 50, 73, 74, 76, 94, 95, 104, 129, 139, 140, 142, 161, 166, 174, 214, 456, 489, 500, 501, 502, 512, 513, 514, 517, 522], "channel": [3, 20, 34, 48, 49, 129, 210, 481, 522], "multiplex": [3, 49, 129, 481, 489, 505, 522], "ch_idx": 3, "we": [3, 10, 16, 17, 18, 24, 26, 28, 33, 40, 42, 90, 129, 153, 512, 513, 514, 515, 517, 519, 520, 522], "could": [3, 24, 25, 26, 38, 48, 50, 73, 74, 76, 199, 208, 489, 492, 493, 507, 513, 514], "also": [3, 17, 26, 27, 28, 29, 31, 36, 38, 40, 43, 45, 46, 48, 50, 75, 116, 129, 147, 161, 190, 456, 489, 490, 491, 492, 493, 496, 497, 500, 501, 505, 513, 514, 515, 516, 517, 519, 520, 521, 522], "waveform_arrai": [3, 44, 129, 489, 505, 522], "fig": [3, 522], "ax": 3, "subplot": [3, 4, 522], "waveformsequ": [3, 49, 522], "as_raw": [3, 49, 481, 489, 509, 522], "fals": [3, 4, 10, 12, 14, 29, 31, 36, 39, 41, 43, 52, 66, 77, 78, 79, 82, 85, 87, 90, 91, 92, 93, 94, 95, 99, 100, 101, 104, 113, 114, 123, 124, 126, 129, 130, 133, 136, 137, 147, 153, 154, 156, 160, 161, 166, 168, 169, 172, 173, 174, 177, 190, 197, 207, 210, 212, 214, 423, 450, 451, 452, 460, 461, 462, 463, 464, 465, 466, 470, 471, 472, 474, 475, 477, 478, 481, 489, 495, 499, 504, 507, 509, 515, 517, 522], "mplx": 3, "zip": [3, 6, 489, 501, 522], "nr_channel": 3, "numberofwaveformchannel": [3, 49, 481, 522], "nr_sampl": 3, "numberofwaveformsampl": [3, 481, 522], "sampling_fq": 3, "samplingfrequ": [3, 49, 522], "hz": [3, 49, 522], "mplx_label": 3, "multiplexgrouplabel": [3, 522], "ch_item": 3, "channeldefinitionsequ": [3, 522], "arang": [3, 522], "x_unit": 3, "channelsensitivityunitssequ": [3, 522], "1c": [3, 177, 190, 210, 212, 213, 214, 522], "so": [3, 16, 26, 27, 29, 31, 36, 38, 39, 47, 48, 50, 90, 129, 166, 168, 177, 197, 450, 489, 490, 493, 513, 515, 516, 517, 520, 522], "check": [3, 12, 38, 39, 113, 114, 116, 117, 119, 123, 124, 129, 131, 133, 147, 169, 177, 190, 450, 460, 489, 495, 498, 500, 501, 504, 505, 507, 513, 514, 519, 522], "y_unit": 3, "codemean": [3, 522], "els": [3, 4, 8, 33, 129, 153, 157, 171, 174, 450, 515], "unitless": [3, 48, 481, 522], "descript": [3, 16, 20, 25, 26, 27, 30, 37, 38, 40, 43, 106, 107, 108, 109, 112, 122, 126, 132, 489, 490, 491, 504, 508, 510], "ch_sourc": 3, "channelsourcesequ": [3, 522], "set_titl": 3, "set_xlabel": 3, "set_ylabel": [3, 522], "tight_layout": 3, "205": [3, 5, 489, 502, 511], "plot_waveform": [3, 5, 511], "multipl": [4, 29, 31, 34, 38, 43, 47, 48, 75, 107, 109, 110, 120, 126, 129, 139, 141, 142, 147, 204, 205, 206, 207, 214, 215, 456, 475, 489, 502, 508, 515], "sort": [4, 10, 129, 517], "them": [4, 8, 24, 26, 27, 28, 31, 36, 37, 38, 42, 43, 47, 50, 129, 177, 464, 466, 489, 497, 501, 505, 514, 515, 517], "reslic": [4, 5, 511], "differ": [4, 6, 12, 17, 21, 25, 26, 28, 29, 33, 37, 43, 48, 489, 492, 504, 511, 513, 514, 515, 516, 517], "plane": [4, 20, 34, 48, 200, 214], "glob": [4, 10, 102, 103, 105, 517], "fname": 4, "append": [4, 11, 18, 20, 38, 138, 448, 515, 522], "count": 4, "skip": [4, 18, 489, 508, 513], "sliceloc": [4, 9, 26, 28], "eg": 4, "scout": [4, 20], "view": [4, 10, 20, 33, 38, 40, 44, 48, 204, 205, 206, 214, 489, 490, 492, 514, 517, 522], "skipcount": 4, "hasattr": 4, "ensur": [4, 29, 33, 39, 41, 43, 93, 129, 156, 166, 177, 199, 214, 451, 452, 489, 495, 498, 507, 509, 510, 513], "thei": [4, 36, 38, 43, 47, 48, 73, 85, 95, 177, 190, 489, 507, 513, 514, 515, 517, 519, 520], "ar": [4, 10, 18, 24, 26, 27, 28, 33, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 52, 66, 73, 74, 78, 79, 82, 91, 94, 95, 99, 100, 106, 108, 109, 126, 129, 131, 132, 133, 136, 137, 139, 140, 141, 142, 147, 156, 161, 164, 166, 169, 175, 176, 177, 190, 199, 201, 202, 203, 205, 206, 208, 209, 213, 214, 216, 456, 459, 474, 477, 479, 489, 495, 500, 501, 502, 504, 505, 507, 508, 510, 512, 513, 514, 515, 517, 519, 520, 521, 522], "correct": [4, 16, 20, 24, 26, 33, 34, 39, 41, 42, 47, 49, 73, 77, 95, 129, 156, 171, 175, 176, 199, 212, 214, 489, 499, 500, 502, 507, 508, 513, 515, 520, 522], "order": [4, 30, 31, 34, 48, 94, 95, 129, 130, 132, 139, 147, 153, 167, 171, 175, 176, 213, 214, 489, 490, 497, 500, 502, 513, 522], "kei": [4, 30, 31, 38, 82, 126, 129, 132, 147, 164, 167, 200, 216, 489, 505, 513], "lambda": 4, "aspect": 4, "assum": [4, 25, 26, 41, 48, 86, 140, 489, 498, 517, 520, 522], "all": [4, 6, 8, 10, 12, 17, 20, 24, 26, 27, 28, 34, 37, 38, 39, 41, 44, 50, 64, 66, 94, 95, 108, 126, 129, 131, 134, 135, 136, 138, 140, 142, 147, 153, 156, 166, 168, 175, 176, 177, 199, 222, 489, 490, 491, 492, 495, 497, 500, 502, 505, 507, 508, 509, 510, 511, 513, 514, 515, 519, 520], "same": [4, 31, 38, 39, 40, 47, 107, 129, 166, 199, 451, 452, 489, 493, 495, 514, 515, 517], "p": [4, 10, 22, 24, 26, 52, 456, 489, 495, 517], "pixelspac": [4, 9], "slicethick": 4, "ax_aspect": 4, "sag_aspect": 4, "cor_aspect": 4, "img_shap": 4, "list": [4, 6, 7, 8, 10, 13, 20, 26, 28, 29, 31, 33, 38, 40, 41, 73, 74, 75, 76, 94, 95, 102, 103, 105, 126, 127, 129, 134, 136, 137, 142, 147, 154, 156, 157, 160, 162, 166, 167, 175, 176, 184, 188, 189, 193, 194, 196, 199, 200, 215, 448, 456, 463, 464, 465, 466, 469, 470, 471, 472, 475, 476, 479, 480, 486, 489, 492, 495, 496, 502, 505, 507, 508, 510, 511, 514, 515, 517, 519, 520], "img3d": 4, "zero": [4, 20, 29, 48, 129, 174, 489, 509, 515, 520], "fill": [4, 513, 514], "img2d": 4, "orthogon": 4, "a1": 4, "imshow": [4, 9, 46], "set_aspect": 4, "a2": 4, "a3": 4, "t": [4, 8, 10, 12, 18, 20, 26, 27, 28, 29, 34, 36, 38, 43, 47, 50, 81, 129, 139, 147, 157, 166, 199, 200, 207, 210, 213, 214, 423, 448, 489, 501, 504, 505, 510, 513, 514, 515, 516, 517, 520], "00": [5, 13, 19, 21, 142, 511], "210": 5, "execut": [5, 13, 19, 21, 456, 511], "auto_exampl": [5, 13, 19, 21], "image_process": [5, 511], "mem": [5, 13, 19, 21, 511], "mb": [5, 13, 19, 21, 156, 481, 511], "imag": [5, 8, 9, 10, 12, 17, 20, 26, 28, 31, 40, 41, 43, 44, 47, 48, 66, 129, 137, 138, 139, 140, 142, 164, 166, 201, 207, 208, 210, 211, 212, 213, 214, 489, 492, 499, 501, 505, 507, 511, 515, 517, 519, 520], "000": [5, 21, 511, 522], "somewher": [6, 40], "analys": [6, 21, 511], "between": [6, 21, 33, 36, 47, 48, 107, 200, 511, 513, 514, 515], "displai": [6, 20, 21, 26, 27, 28, 33, 38, 44, 46, 98, 126, 129, 489, 490, 496, 501, 507, 511, 513, 522], "unicod": [6, 21, 29, 74, 76, 456, 489, 490, 492, 493, 509, 511], "person": [6, 17, 21, 29, 36, 456, 489, 500, 507, 511, 521], "hierarch": [6, 21, 139, 214, 489, 502, 511], "tree": [6, 21, 38, 167, 489, 496, 511, 515], "work": [6, 15, 19, 21, 25, 26, 27, 31, 36, 38, 39, 40, 42, 43, 44, 50, 166, 489, 490, 492, 493, 495, 496, 497, 499, 501, 505, 510, 511, 513, 514, 515, 519, 521, 522], "memori": [6, 16, 21, 130, 156, 157, 158, 174, 207, 210, 214, 489, 492, 500, 501, 502, 511, 517], "base": [6, 21, 33, 34, 40, 64, 67, 78, 129, 146, 449, 453, 457, 486, 489, 492, 498, 502, 505, 511, 513, 514, 517, 520, 522], "rtplan": [6, 7, 13, 24, 26, 27, 28, 38, 40, 66, 156, 511], "format": [6, 7, 12, 13, 20, 24, 26, 27, 28, 29, 31, 38, 39, 40, 42, 126, 129, 136, 137, 138, 140, 156, 177, 192, 210, 213, 451, 452, 456, 475, 489, 490, 491, 492, 498, 501, 507, 508, 510, 511, 515, 517, 519], "write": [6, 7, 10, 13, 14, 16, 17, 24, 26, 35, 37, 39, 43, 44, 52, 67, 91, 129, 130, 152, 153, 166, 177, 179, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 451, 452, 486, 489, 491, 493, 498, 499, 501, 503, 504, 505, 507, 508, 511, 514, 516, 517, 518], "modifi": [6, 15, 37, 40, 47, 48, 50, 104, 129, 166, 489, 502, 505, 518], "anonym": [6, 15, 19, 38, 43, 489, 490, 491, 501, 511], "privat": [6, 15, 17, 19, 20, 24, 26, 27, 28, 38, 44, 50, 106, 107, 108, 109, 116, 117, 120, 121, 122, 124, 126, 127, 129, 132, 164, 165, 166, 190, 216, 423, 486, 489, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 504, 505, 507, 508, 509, 510, 511, 515, 517], "dictionari": [6, 15, 19, 38, 44, 81, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 157, 189, 423, 486, 489, 491, 492, 494, 497, 498, 499, 500, 501, 502, 505, 507, 508, 510, 511, 516, 521], "auto_examples_python": 6, "auto_examples_jupyt": 6, "your": [8, 10, 14, 23, 25, 26, 27, 31, 33, 34, 38, 40, 43, 44, 50, 93, 136, 137, 166, 512, 515, 516, 517, 519, 522], "own": [8, 24, 25, 26, 27, 38, 40, 43, 50, 129, 166, 177, 489, 499, 509, 515, 517, 520, 522], "840": [8, 9, 12, 24, 26, 41, 42, 48, 129, 139, 146, 148, 177, 210, 213, 214, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 489, 499, 500, 502, 504, 505, 510, 513, 515], "10008": [8, 9, 12, 24, 26, 41, 42, 48, 129, 139, 146, 148, 177, 210, 213, 214, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 489, 499, 500, 502, 504, 505, 510, 513, 515], "5": [8, 9, 10, 12, 13, 16, 20, 22, 23, 24, 26, 29, 33, 34, 38, 41, 42, 48, 49, 52, 126, 128, 129, 132, 136, 138, 139, 140, 141, 142, 144, 146, 148, 177, 194, 200, 204, 205, 206, 207, 213, 214, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 303, 304, 305, 306, 320, 321, 322, 323, 324, 325, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 456, 504, 505, 513, 514, 515, 517, 520, 522], "don": [8, 10, 18, 26, 27, 28, 38, 43, 50, 513, 514, 516, 517, 520], "xfe": 8, "x04": [8, 48], "myprint": [8, 489, 490], "indent": [8, 129, 167, 515], "through": [8, 17, 36, 38, 40, 43, 48, 129, 159, 173, 175, 176, 489, 490, 491, 513, 514, 515, 519, 521], "custom": [8, 26, 28, 31, 164, 166, 489, 490, 491, 498, 501, 505], "_pretty_str": [8, 515], "dont_print": 8, "indent_str": 8, "next_indent_str": 8, "sequence_item": 8, "repr_valu": 8, "repr": [8, 38, 98, 489, 504], "50": [8, 42, 48, 49, 139, 214, 222, 312, 319, 344, 423], "plot_printing_dataset": [8, 13, 511], "open": [9, 23, 25, 26, 157, 489, 492, 513, 514, 515], "some": [9, 12, 14, 16, 17, 26, 28, 36, 38, 39, 43, 46, 47, 48, 49, 50, 52, 73, 86, 97, 129, 130, 147, 160, 177, 451, 452, 459, 489, 490, 491, 493, 495, 498, 499, 509, 514, 515, 516, 517, 519, 521], "project": [9, 10, 20, 94, 95, 512, 513, 514, 519], "src": [9, 10, 30, 31, 94, 95, 147, 214, 517, 520], "test_fil": [9, 10, 24, 26, 38, 40, 514, 515, 517], "ct_small": [9, 26, 28, 66, 156, 514, 515], "dcm": [9, 11, 12, 24, 26, 27, 28, 36, 38, 40, 41, 47, 48, 66, 129, 156, 164, 489, 505, 514, 515, 520, 521, 522], "ct1": [9, 20, 26, 28, 66, 514, 515], "1ct1": [9, 20, 26, 28, 517], "20040119": [9, 20, 26, 28, 515], "661468": [9, 20], "77": [9, 20, 24, 26, 27, 28, 38, 259, 355, 356, 357, 358, 360, 414, 427, 428, 429, 430, 431, 433, 434, 435, 438, 439], "2040634155": [9, 20, 26, 28], "get_testdata_fil": [9, 10, 11, 38, 40, 48, 486, 489, 505, 507, 508, 510, 514, 515, 517], "normal": [9, 16, 20, 25, 26, 27, 38, 66, 489, 510], "mode": [9, 20, 26, 28, 80, 83, 84, 489, 502, 513, 519], "sopclassuid": [9, 24, 26, 28, 165, 515, 522], "pat_nam": 9, "patientnam": [9, 10, 12, 14, 26, 28, 38, 40, 66, 81, 82, 126, 129, 156, 164, 166, 217, 489, 501, 514, 515, 517], "family_comma_given": [9, 456], "patientid": [9, 10, 12, 14, 17, 26, 28, 38, 129, 164, 166, 515, 517], "studyd": [9, 10, 24, 26, 27, 28, 517], "sure": [9, 42, 50, 513, 515, 519], "exist": [9, 16, 31, 33, 36, 38, 39, 50, 107, 129, 158, 166, 177, 190, 489, 509, 510, 512, 513, 514, 520], "want": [9, 10, 14, 24, 25, 26, 39, 50, 168, 513, 514, 515, 516, 517, 519], "miss": [9, 31, 104, 129, 133, 147, 156, 161, 175, 177, 190, 200, 201, 210, 212, 213, 214, 489, 497, 498, 501, 502, 508, 510, 513, 515, 517, 519], "cmap": [9, 46], "cm": [9, 11, 46], "grai": 9, "088": [9, 13, 511], "plot_read_dicom": [9, 13, 511], "interact": [10, 38, 40, 43, 129, 517], "directori": [10, 40, 164, 165, 166, 167, 169, 489, 490, 508, 510, 513, 514, 517, 519], "dicomdirtest": [10, 517], "pydicom_test": [10, 517], "276": [10, 517], "7230010": [10, 517], "31906": [10, 517], "1359940846": [10, 517], "78187": [10, 517], "descriptor": [10, 43, 166, 201, 202, 203, 204, 205, 214, 489, 502, 504, 517], "charact": [10, 20, 26, 28, 29, 36, 39, 43, 52, 73, 74, 75, 76, 86, 126, 127, 129, 132, 156, 157, 166, 167, 168, 169, 177, 192, 193, 194, 448, 456, 459, 460, 464, 466, 469, 470, 476, 479, 480, 486, 489, 490, 491, 498, 500, 501, 504, 505, 507, 508, 509, 510, 513, 515, 516, 517], "chang": [10, 12, 25, 26, 27, 33, 36, 39, 40, 41, 42, 47, 48, 52, 79, 93, 104, 126, 129, 133, 142, 166, 168, 175, 176, 205, 207, 208, 209, 210, 211, 212, 213, 214, 217, 448, 464, 466, 504, 512, 515, 516, 518, 519, 520, 521], "stage": [10, 165, 166, 513, 514], "dicomdir": [10, 37, 66, 164, 166, 167, 489, 497, 501, 502, 505, 508, 509, 510, 518], "structur": [10, 26, 27, 38, 40, 66, 164, 166, 167, 489, 502, 509, 510, 515, 517, 518], "manag": [10, 31, 43, 156, 166, 489, 498, 505, 515, 517], "77654033": [10, 517], "doe": [10, 12, 43, 47, 48, 50, 86, 94, 95, 107, 129, 149, 158, 183, 208, 459, 489, 505, 517], "archibald": [10, 517], "20010101": [10, 129, 517], "studytim": [10, 24, 26, 28, 517], "000000": [10, 20, 517], "studydescript": [10, 26, 28, 166, 517], "xr": [10, 517], "spine": [10, 517], "comp": [10, 20, 26, 28, 517], "min": [10, 202, 203, 214, 517], "cr": [10, 214, 517], "seriesnumb": [10, 38, 517], "19950903": [10, 517], "173032": [10, 517], "head": [10, 36, 40, 517], "brain": [10, 517], "wo": [10, 517], "98890234": [10, 517], "peter": [10, 517], "20030505": [10, 517], "050743": [10, 517], "carotid": [10, 517], "025109": [10, 517], "045357": [10, 517], "mra": [10, 517], "700": [10, 489, 500, 517], "7": [10, 20, 23, 24, 26, 27, 34, 38, 48, 128, 132, 136, 144, 166, 190, 194, 207, 210, 214, 222, 244, 259, 268, 269, 347, 348, 349, 350, 354, 356, 377, 395, 402, 403, 404, 405, 406, 410, 440, 496, 500, 509, 514, 517, 522], "found": [10, 40, 43, 47, 48, 49, 104, 129, 147, 156, 161, 166, 171, 174, 515, 517, 520], "seriesinstanceuid": 10, "1196533885": 10, "18148": 10, "118": 10, "fileset": [10, 486, 489, 505, 507, 508, 510], "1477": 10, "userwarn": [10, 81], "record": [10, 20, 164, 165, 166, 167, 489, 502, 508, 517], "queri": [10, 90, 166, 517], "consid": [10, 25, 26, 50, 129, 214, 513, 514, 516], "expand": [10, 26, 28, 214, 489, 508, 514, 517], "search": [10, 104, 139, 166, 171, 172, 173, 489, 507, 515, 517], "correspond": [10, 17, 31, 33, 36, 38, 47, 48, 49, 73, 104, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 132, 136, 137, 147, 148, 158, 165, 166, 167, 200, 201, 214, 217, 481, 489, 507, 513, 514, 517, 520, 522], "warn": [10, 36, 39, 50, 52, 73, 74, 76, 81, 82, 214, 486, 489, 491, 495, 499, 500, 501, 502, 504, 507, 508, 510, 513, 514], "photometricinterpret": [10, 33, 41, 210, 212, 214, 517, 520], "monochrome1": [10, 33, 34, 210, 212, 517], "without": [10, 38, 42, 43, 49, 104, 129, 149, 159, 172, 214, 461, 472, 474, 475, 489, 491, 499, 501, 505, 508, 509, 515, 517, 519], "still": [10, 41, 43, 489, 495, 496, 498, 499, 500, 502, 513, 515, 516, 517, 520], "tmp": [10, 12, 517], "tmpckae7hm": 10, "follow": [10, 25, 26, 27, 28, 31, 34, 36, 38, 39, 41, 42, 48, 66, 126, 129, 133, 139, 140, 142, 147, 166, 174, 177, 190, 456, 489, 502, 505, 507, 510, 513, 514, 515, 517, 521, 522], "pt000000": [10, 517], "st000000": [10, 517], "se000000": [10, 517], "im000000": [10, 517], "se000001": [10, 517], "se000002": [10, 517], "st000001": [10, 517], "im000001": [10, 517], "im000002": [10, 517], "im000003": [10, 517], "pt000001": [10, 517], "im000004": 10, "st000002": 10, "st000003": 10, "im000005": 10, "im000006": 10, "pt000002": [10, 517], "pt000003": 10, "tempfil": [10, 12, 17, 517], "temporarydirectori": [10, 517], "generate_uid": [10, 33, 166, 489, 501, 510], "A": [10, 20, 28, 31, 33, 34, 36, 37, 38, 40, 41, 50, 73, 74, 86, 94, 102, 103, 105, 129, 136, 138, 139, 140, 141, 142, 144, 146, 147, 154, 157, 164, 166, 167, 168, 169, 175, 176, 177, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 448, 456, 469, 476, 479, 480, 489, 499, 507, 510, 513, 515, 517, 520], "its": [10, 24, 25, 26, 27, 29, 31, 33, 34, 38, 39, 79, 126, 129, 142, 166, 167, 174, 177, 199, 200, 208, 209, 210, 211, 212, 213, 481, 489, 500, 505, 510, 515, 517], "itself": [10, 33, 36, 38, 43, 104, 175, 176, 489, 505, 513, 514, 517], "summari": [10, 25, 26, 513], "content": [10, 12, 14, 20, 38, 52, 129, 139, 200, 210, 211, 212, 213, 214, 514, 515, 517, 520], "seen": [10, 25, 26, 86, 514, 522], "when": [10, 16, 23, 24, 25, 26, 27, 29, 31, 33, 34, 36, 38, 41, 43, 45, 47, 48, 50, 77, 81, 82, 86, 90, 91, 95, 129, 136, 137, 139, 141, 142, 147, 149, 160, 166, 168, 175, 176, 202, 203, 204, 205, 206, 213, 214, 217, 219, 448, 456, 489, 491, 492, 493, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 517, 519, 520, 522], "iter": [10, 17, 38, 129, 147, 154, 167, 168, 175, 178, 199, 212, 215, 219, 489, 491, 499, 517], "over": [10, 20, 26, 27, 45, 47, 515, 517], "yield": [10, 38, 129, 138, 139, 140, 141, 144, 147, 154, 167, 168, 212, 481, 515, 517, 520, 522], "fileinst": [10, 166, 167, 486, 489, 510, 517], "do": [10, 14, 25, 26, 31, 37, 39, 42, 43, 45, 46, 47, 48, 50, 90, 129, 166, 177, 183, 489, 495, 501, 507, 513, 514, 515, 517, 520, 521, 522], "someth": [10, 14, 23, 25, 26, 36, 47, 129, 513], "patient_id": 10, "find_valu": [10, 166, 517], "return": [10, 11, 14, 31, 34, 36, 38, 40, 43, 47, 48, 49, 66, 73, 74, 76, 77, 87, 88, 94, 95, 100, 101, 102, 103, 104, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 140, 142, 143, 145, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 189, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 423, 448, 450, 451, 452, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 489, 490, 491, 492, 493, 499, 500, 501, 502, 504, 505, 507, 508, 510, 515, 516, 517, 522], "where": [10, 31, 34, 38, 39, 47, 48, 49, 52, 106, 108, 129, 132, 136, 152, 158, 164, 166, 171, 172, 202, 203, 214, 489, 491, 500, 501, 502, 513, 514, 515, 517], "one": [10, 24, 26, 31, 34, 38, 40, 42, 48, 49, 50, 80, 83, 84, 106, 108, 126, 129, 130, 135, 136, 137, 138, 139, 140, 142, 147, 158, 159, 164, 166, 167, 168, 174, 178, 192, 201, 207, 214, 451, 452, 489, 495, 498, 508, 513, 515, 517, 519, 521, 522], "repres": [10, 31, 38, 48, 99, 126, 129, 140, 156, 177, 216, 455, 456, 459, 513, 522], "match": [10, 41, 42, 48, 81, 90, 102, 103, 104, 105, 129, 158, 164, 166, 200, 208, 210, 213, 456, 489, 495, 498, 505, 510, 517, 520, 522], "result": [10, 17, 24, 25, 26, 27, 33, 39, 41, 50, 74, 76, 129, 177, 216, 448, 489, 507, 513, 514, 520], "find": [10, 17, 20, 23, 25, 26, 90, 129, 159, 166, 171, 172, 173, 175, 176, 513, 514, 515, 517, 521, 522], "study_uid": 10, "studyinstanceuid": 10, "series_uid": 10, "plural": 10, "Of": 10, "cours": [10, 520], "you": [10, 12, 14, 16, 18, 23, 24, 25, 26, 27, 28, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 90, 136, 137, 156, 160, 164, 166, 168, 214, 489, 502, 505, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522], "just": [10, 12, 14, 25, 26, 27, 28, 38, 43, 50, 86, 126, 129, 154, 489, 501, 505, 513, 514, 515, 517], "directli": [10, 31, 38, 50, 126, 147, 450, 516, 517, 521], "know": [10, 34, 38, 43, 515, 516, 517], "what": [10, 29, 34, 37, 43, 47, 166, 177, 515, 517, 520], "nfound": 10, "actual": [10, 20, 25, 26, 31, 34, 38, 41, 47, 126, 129, 147, 166, 177, 200, 210, 213, 513, 517], "onli": [10, 24, 26, 27, 28, 36, 38, 39, 40, 42, 47, 48, 50, 52, 77, 94, 95, 107, 109, 110, 111, 112, 114, 115, 116, 117, 125, 129, 131, 133, 139, 142, 147, 156, 159, 166, 168, 175, 176, 177, 190, 210, 214, 217, 455, 460, 489, 495, 497, 498, 499, 500, 501, 502, 504, 505, 507, 513, 515, 516, 517, 520], "limit": [10, 26, 27, 33, 40, 41, 44, 48, 166, 459, 460, 489, 495, 501, 505, 521], "subset": [10, 24, 26], "howev": [10, 25, 26, 29, 31, 33, 34, 38, 41, 139, 140, 142, 199, 455, 513, 514, 515, 517, 520], "less": [10, 33, 34, 153, 489, 510, 522], "effici": [10, 154, 166, 214, 459, 522], "result_load": 10, "remov": [10, 12, 17, 38, 39, 44, 129, 147, 165, 166, 167, 214, 489, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 513, 515], "To": [10, 24, 26, 28, 33, 38, 39, 40, 42, 47, 49, 50, 149, 154, 177, 489, 495, 500, 505, 513, 514, 515, 517, 519, 522], "edit": [10, 50, 489, 499, 500, 502, 513, 514, 519], "identif": 10, "modul": [10, 25, 26, 31, 33, 39, 45, 46, 48, 49, 66, 82, 91, 94, 95, 129, 147, 192, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 481, 486, 489, 490, 496, 497, 500, 505, 507, 508, 510, 515, 517, 520, 522], "part": [10, 27, 28, 29, 33, 34, 36, 39, 43, 45, 48, 49, 109, 126, 129, 132, 136, 138, 139, 140, 141, 142, 144, 156, 169, 175, 176, 177, 190, 194, 200, 202, 203, 204, 205, 206, 207, 210, 214, 448, 456, 489, 492, 495, 507, 513, 514, 515, 516, 517, 520, 522], "annex": [10, 33, 34, 48, 49, 126, 129, 136, 138, 139, 140, 141, 142, 144, 164, 202, 203, 204, 205, 206, 207, 210, 214, 448, 517], "properti": [10, 14, 38, 52, 126, 129, 147, 165, 166, 167, 216, 423, 456, 489, 490, 492, 495, 498, 499, 505, 510, 517], "1130": [10, 20], "my": [10, 43, 129, 166, 516], "1141": 10, "descriptor_file_id": [10, 166, 517], "readm": 10, "1142": 10, "specif": [10, 20, 24, 26, 27, 28, 31, 32, 36, 38, 41, 43, 47, 48, 50, 73, 74, 75, 76, 129, 156, 157, 166, 171, 177, 194, 489, 490, 492, 498, 500, 501, 504, 505, 513, 514, 515, 516, 517, 520], "descriptor_character_set": [10, 166, 517], "iso_ir": [10, 20, 26, 28, 43, 75, 515, 516, 517], "100": [10, 20, 24, 26, 28, 43, 49, 222, 328, 329, 340, 515, 516, 517, 522], "until": [10, 156, 157, 160, 171, 174, 489, 490, 495, 507, 517], "call": [10, 25, 26, 38, 39, 41, 45, 47, 50, 78, 82, 88, 129, 140, 154, 166, 173, 199, 450, 489, 492, 495, 499, 505, 510, 515, 517, 520], "meet": [10, 31, 138, 147, 489, 495], "semant": [10, 36, 166, 456, 517], "re": [10, 16, 37, 47, 373, 374, 512, 513, 514, 515, 517, 519, 520, 522], "here": [10, 12, 24, 26, 28, 31, 37, 43, 46, 97, 147, 173, 514, 515, 516, 517, 521], "becaus": [10, 24, 26, 33, 36, 38, 40, 41, 47, 48, 50, 66, 149, 166, 513, 514, 515], "would": [10, 24, 25, 26, 27, 33, 39, 50, 52, 451, 513, 514, 517, 522], "overwrit": 10, "altern": [10, 23, 38, 129, 204, 205, 206, 214, 513, 515, 517], "new": [10, 16, 17, 18, 26, 27, 33, 36, 37, 40, 44, 52, 66, 74, 76, 77, 79, 81, 82, 86, 93, 94, 95, 97, 98, 100, 101, 103, 104, 106, 107, 108, 109, 126, 129, 131, 132, 136, 138, 143, 144, 146, 147, 148, 165, 166, 167, 177, 199, 200, 201, 202, 203, 204, 205, 206, 212, 214, 216, 449, 453, 456, 481, 490, 491, 492, 495, 496, 497, 500, 501, 502, 504, 505, 507, 510, 512, 515, 516, 518, 521, 522], "while": [10, 26, 27, 33, 34, 48, 52, 126, 129, 177, 213, 459, 489, 501, 502, 507, 513, 517, 519], "leav": [10, 16, 26, 27, 107, 515], "unchang": [10, 41, 73, 175, 176, 202, 203, 204, 205, 206, 214, 520], "tdir": 10, "new_fileset": 10, "norigin": 10, "note": [10, 18, 24, 26, 27, 28, 36, 39, 41, 42, 43, 46, 79, 90, 107, 109, 129, 132, 138, 139, 143, 144, 156, 160, 161, 173, 183, 199, 202, 203, 205, 206, 214, 449, 451, 452, 453, 455, 456, 457, 459, 492, 514, 515, 516, 520, 521, 522], "layout": [10, 166], "been": [10, 25, 26, 34, 41, 42, 43, 48, 79, 86, 88, 129, 136, 137, 139, 140, 158, 165, 166, 168, 177, 190, 214, 450, 489, 492, 499, 504, 507, 508, 510, 513, 514, 515, 516], "is_fil": [10, 517], "relative_to": 10, "199": [10, 13, 511], "plot_read_fileset": [10, 13, 511], "basic": [11, 26, 27, 28, 37, 40, 41, 46, 49, 50, 68, 129, 136, 137, 139, 140, 141, 142, 489, 502, 517, 518, 520, 522], "info": [11, 20, 129, 153, 154, 157, 160, 172, 173, 174, 423, 489, 492, 493, 495, 497], "beam": [11, 18, 24, 26, 27, 28, 489, 495], "gantri": [11, 20, 26, 28], "ssd": 11, "field": [11, 20, 26, 28, 38, 87, 126, 128, 140, 489, 507], "89": 11, "darci": [11, 12, 16, 17], "mason": [11, 12, 16, 17, 23], "list_beam": 11, "summar": [11, 517], "line": [11, 20, 23, 24, 25, 27, 28, 35, 39, 40, 43, 47, 50, 82, 129, 166, 489, 496, 507, 513, 514, 515, 517, 520], "13": [11, 231, 232, 233, 235, 443, 444], "11": [11, 20, 23, 202, 203, 204, 205, 206, 214, 221, 227, 229, 243, 244, 293, 294, 352, 372, 392, 408, 432, 437, 442, 489, 509, 510, 522], "beamsequ": [11, 18, 24, 26, 27, 28, 38, 129, 489, 495], "cp0": 11, "controlpointsequ": 11, "float": [11, 29, 36, 38, 48, 78, 85, 126, 129, 130, 154, 156, 157, 158, 160, 174, 198, 210, 214, 450, 451, 452, 454, 455, 459, 475, 489, 495, 496, 502, 505, 507, 509, 515], "sourcetosurfacedist": 11, "10": [11, 20, 23, 26, 28, 47, 49, 142, 168, 177, 190, 345, 379, 386, 408, 489, 496, 500, 510, 515, 517, 522], "beamnam": [11, 18, 38], "beamnumb": [11, 24, 26, 27, 28], "8d": 11, "gantryangl": 11, "1f": 11, "join": [11, 40], "003": [11, 13, 16, 19, 511], "plot_read_rtplan": [11, 13, 511], "scratch": [12, 18, 44, 489, 493, 494, 507, 513, 520], "produc": [12, 24, 26, 36, 48, 50, 177, 489, 497, 502, 507], "standard": [12, 20, 22, 29, 33, 34, 36, 39, 41, 43, 48, 49, 52, 126, 129, 132, 136, 138, 139, 140, 141, 142, 144, 166, 177, 190, 194, 200, 201, 202, 203, 204, 205, 206, 207, 210, 214, 217, 448, 451, 452, 455, 456, 489, 491, 494, 495, 497, 498, 505, 507, 516, 517, 520, 522], "compliant": [12, 50, 489, 498], "written": [12, 24, 26, 29, 39, 40, 45, 47, 48, 129, 166, 177, 189, 190, 489, 501, 502, 513, 515, 517], "have": [12, 14, 25, 26, 27, 28, 29, 33, 34, 36, 38, 39, 41, 42, 43, 47, 50, 94, 95, 126, 129, 136, 137, 140, 142, 147, 156, 159, 166, 168, 177, 190, 200, 210, 212, 213, 214, 461, 472, 481, 489, 495, 498, 500, 501, 504, 508, 510, 512, 513, 514, 515, 516, 517, 519, 520, 522], "valid": [12, 44, 50, 52, 80, 83, 84, 86, 122, 126, 129, 131, 133, 147, 156, 169, 177, 190, 207, 214, 373, 374, 423, 459, 460, 464, 466, 475, 476, 479, 489, 507, 508, 509], "tmp0iy4789w": 12, "save": [12, 14, 16, 24, 26, 40, 41, 47, 48, 489, 492, 495, 514, 515, 516, 520, 522], "big": [12, 30, 31, 42, 129, 130, 153, 210, 213, 222, 489, 509, 522], "tmprw6ev8_8": 12, "20231125": 12, "0033": [12, 20], "230608": 12, "132850": 12, "firstnam": 12, "123456": 12, "datetim": [12, 90, 449, 453, 457], "o": [12, 20, 22, 68, 70], "filedataset": [12, 40, 45, 66, 104, 129, 156, 160, 177, 486, 489, 492, 494, 507, 508, 510, 515, 517], "filemetadataset": [12, 24, 26, 130, 133, 159, 190, 486, 489, 504, 515], "temporari": [12, 165, 489, 510, 517], "filenam": [12, 24, 26, 27, 28, 102, 103, 104, 105, 129, 130, 158, 159, 166, 168, 177, 489, 504, 513, 515, 517], "suffix": [12, 168, 448, 456, 489, 510], "filename_little_endian": 12, "namedtemporaryfil": [12, 17], "filename_big_endian": 12, "mediastoragesopclassuid": [12, 517], "mediastoragesopinstanceuid": 12, "implementationclassuid": 12, "initi": [12, 36, 40, 130, 131, 132, 172, 173, 199, 214, 215, 456, 513], "preambl": [12, 130, 156, 161, 177, 190, 197, 489, 498, 515], "try": [12, 36, 94, 95, 175, 176, 489, 493, 501, 515, 517], "is_little_endian": [12, 14, 16, 41, 128, 129, 130, 140, 142, 154, 157, 162, 163, 170, 172, 173, 174, 175, 176, 177, 214, 423, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 477, 478], "is_implicit_vr": [12, 16, 41, 128, 129, 130, 154, 155, 157, 162, 163, 177, 423, 470, 489, 501], "dt": [12, 29, 56, 61, 90, 465, 477, 489, 498, 507], "now": [12, 20, 126, 177, 448, 489, 491, 492, 495, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 513, 514, 515, 517, 522], "contentd": 12, "strftime": 12, "y": [12, 36, 214], "m": [12, 22, 456, 513, 514, 517, 519, 520, 522], "timestr": 12, "long": [12, 29, 153, 173, 177, 478, 489, 509, 515], "micro": 12, "contenttim": 12, "save_a": [12, 16, 17, 24, 26, 40, 41, 45, 47, 48, 129, 177, 489, 491, 504, 515, 520, 522], "xxx": [12, 50], "shouldn": 12, "need": [12, 25, 26, 27, 33, 34, 36, 38, 39, 42, 43, 45, 49, 50, 74, 76, 90, 95, 129, 153, 154, 160, 476, 479, 489, 492, 507, 513, 514, 515, 516, 517, 519, 520, 522], "9": [12, 20, 23, 26, 27, 33, 38, 48, 49, 78, 168, 169, 200, 223, 224, 228, 230, 239, 268, 269, 289, 290, 291, 298, 351, 373, 374, 383, 399, 402, 410, 422, 437, 448, 499, 502, 505, 510, 522], "bug": [12, 40, 493, 497, 501, 504, 507, 512, 513, 519], "recogn": 12, "transfersyntaxuid": [12, 41, 42, 129, 165, 177, 489, 491, 498, 515, 520], "explicitvrbigendian": 12, "reopen": 12, "plot_write_dicom": [12, 13, 511], "299": 13, "input_output": [13, 511], "output": [13, 16, 20, 24, 26, 27, 36, 42, 48, 50, 202, 203, 214, 489, 502, 504, 511, 513, 514, 515, 517], "byte": [14, 24, 26, 29, 30, 31, 38, 41, 47, 48, 49, 50, 74, 75, 76, 86, 87, 109, 126, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 152, 153, 155, 156, 157, 158, 159, 161, 171, 172, 173, 174, 175, 176, 177, 182, 183, 187, 190, 198, 200, 214, 456, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 489, 500, 501, 502, 507, 510, 515, 517, 520, 522], "help": [14, 24, 25, 26, 27, 28, 39, 43, 157, 489, 492, 500, 507, 509, 512, 513, 514], "blob": 14, "databas": 14, "io": [14, 16, 130, 486, 515], "bytesio": [14, 16, 130, 152, 515], "dcmwrite": [14, 45, 67, 129, 489, 498, 504, 505, 507, 510, 515], "filebas": [14, 67, 140, 142, 145, 486], "dicomfilelik": [14, 67, 130, 140, 142, 145, 151, 156, 177, 489, 491], "usag": [14, 24, 26, 27, 28, 33, 38, 44, 207, 214, 456, 486, 489, 502, 517], "memory_dataset": [14, 21, 511], "dicom_filenam": 14, "write_dataset_to_byt": 14, "buffer": [14, 130, 210], "rewind": [14, 161, 171, 172, 173, 489, 496], "seek": [14, 152, 156, 489, 491, 501], "adapt_dataset_from_byt": 14, "interest": [14, 47, 512, 515], "stuff": 14, "bond": 14, "jame": 14, "007": [14, 17, 19, 511], "dummydatabas": 14, "__init__": [14, 126, 128, 129, 130, 131, 132, 147, 150, 152, 153, 165, 166, 167, 199, 215, 216, 423, 449, 451, 452, 453, 454, 455, 456, 457, 458], "self": [14, 423, 515, 520], "_blob": 14, "dict": [14, 31, 38, 89, 94, 106, 108, 126, 129, 130, 131, 147, 164, 166, 200, 214, 489, 492, 507, 509], "file_path": [14, 197], "db": 14, "convert": [14, 31, 33, 34, 42, 48, 73, 74, 76, 82, 85, 87, 90, 94, 95, 127, 129, 147, 166, 199, 200, 207, 208, 209, 210, 211, 212, 213, 214, 481, 489, 492, 495, 498, 501, 502, 505, 506, 507, 514, 515, 522], "ds_byte": 14, "read_byt": 14, "read_dataset": [14, 67, 160], "_new": 14, "dynam": [16, 20], "allow": [16, 17, 24, 26, 27, 31, 34, 38, 39, 43, 47, 52, 85, 129, 131, 164, 166, 214, 455, 489, 491, 492, 501, 504, 505, 507, 508, 509, 510, 519], "tag": [16, 17, 26, 28, 29, 40, 43, 44, 47, 48, 52, 56, 82, 94, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 140, 142, 143, 144, 153, 154, 156, 158, 166, 174, 175, 179, 194, 200, 210, 212, 213, 214, 478, 481, 486, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 505, 507, 508, 510, 515, 516], "present": [16, 26, 28, 47, 76, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 129, 130, 133, 139, 140, 141, 142, 147, 149, 156, 161, 164, 166, 167, 177, 190, 201, 202, 203, 204, 205, 206, 214, 489, 491, 499, 501, 502, 515, 522], "unknown": [16, 20, 29, 43, 82, 126, 127, 129, 140, 187, 489, 494, 499, 501, 505, 507, 515, 521], "1001": [16, 20, 43, 129], "acm": [16, 43, 108], "un": [16, 29, 52, 87, 154, 187, 473, 489, 490, 502, 504, 507, 508, 515], "1002": [16, 20, 43, 515], "hello": [16, 515], "world": [16, 515], "1003": [16, 20], "regist": [16, 25, 26, 43, 126, 423, 489, 505, 515], "One": [16, 36, 40, 43, 47, 50, 106, 107, 108, 126, 129, 201, 207, 214, 513, 514], "42": [16, 489, 492], "two": [16, 20, 25, 26, 28, 36, 38, 39, 42, 43, 45, 86, 94, 106, 107, 108, 129, 138, 153, 166, 214, 456, 489, 496, 515, 516, 522], "three": [16, 31, 36, 108, 456, 515, 517], "contributor": 16, "datadict": [16, 43, 486, 489, 498, 501, 515], "add_private_dict_entri": [16, 38, 43, 489, 501], "valuerep": [16, 22, 56, 463, 465, 469, 471, 486, 489, 510], "demonstr": [16, 46, 489, 490], "implicit": [16, 26, 27, 38, 42, 86, 129, 130, 154, 157, 166, 177, 210, 423, 470, 489, 492, 499, 501, 507, 520], "block": [16, 18, 20, 26, 27, 28, 43, 129, 132, 489, 504, 514], "private_block": [16, 43, 129], "0x1001": 16, "add_new": [16, 43, 129, 132, 515], "0x01": [16, 43, 129], "0x02": [16, 43], "0x03": 16, "simul": [16, 129], "fp": [16, 140, 142, 145, 154, 156, 157, 161, 162, 163, 170, 171, 172, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "forc": [16, 129, 149, 156, 160, 161, 166, 489, 493, 495, 497, 515], "defin": [16, 17, 20, 25, 26, 33, 34, 43, 47, 52, 126, 129, 132, 165, 166, 177, 201, 214, 489, 495, 513, 515, 517, 522], "vm": [16, 29, 38, 58, 106, 107, 108, 109, 110, 116, 117, 120, 126, 489, 493, 501, 504, 510, 515], "is_retir": [16, 106, 107, 108, 116, 117, 126, 423, 489, 498], "flag": [16, 20, 39, 93, 129, 161, 166, 171, 172, 173, 489, 504, 507, 517], "blank": [16, 17, 107, 199, 450, 489, 491, 515], "new_dict_item": [16, 106, 108], "0x10011001": 16, "0x10011002": 16, "0x10011003": 16, "entri": [16, 25, 26, 27, 38, 44, 48, 106, 107, 108, 109, 116, 117, 489, 491, 508, 513, 514], "string": [16, 17, 20, 25, 26, 29, 38, 52, 74, 75, 76, 107, 126, 129, 132, 147, 156, 167, 178, 187, 191, 195, 196, 199, 216, 450, 451, 452, 454, 455, 456, 459, 460, 464, 466, 475, 476, 477, 489, 492, 494, 495, 499, 500, 505, 507, 516], "private_cr": [16, 43, 108, 109, 117, 120, 121, 122, 129, 132, 216], "new_entries_dict": [16, 106, 108], "noutput": 16, "plot_add_dict_entri": [16, 19, 511], "point": [17, 24, 25, 26, 27, 28, 29, 46, 50, 174, 210, 214, 459, 489, 491, 496, 507, 513, 515, 521], "It": [17, 26, 27, 37, 38, 39, 40, 41, 43, 45, 46, 48, 50, 129, 140, 166, 177, 489, 495, 496, 513, 514, 515, 516, 517, 519, 520, 522], "replac": [17, 73, 74, 76, 107, 489, 501, 508], "curv": [17, 522], "keyword": [17, 26, 27, 28, 36, 38, 43, 48, 49, 81, 82, 89, 104, 106, 107, 115, 116, 118, 123, 125, 126, 129, 147, 156, 166, 175, 176, 200, 205, 207, 210, 212, 213, 214, 217, 423, 481, 489, 493, 495, 498, 500, 501, 505, 509, 510, 514, 515, 517, 521], "patientbirthd": [17, 38], "data_el": [17, 129, 179, 182, 183, 186, 188, 193, 194, 208, 515, 516], "callback": [17, 25, 26, 129, 489, 498], "function": [17, 20, 25, 26, 27, 31, 36, 37, 38, 39, 40, 43, 45, 48, 49, 50, 51, 54, 55, 63, 67, 69, 71, 78, 88, 96, 100, 107, 108, 126, 129, 140, 147, 154, 157, 159, 160, 164, 166, 175, 176, 197, 199, 200, 201, 208, 209, 210, 211, 212, 213, 214, 217, 450, 459, 481, 482, 486, 487, 489, 490, 491, 492, 497, 498, 500, 501, 502, 505, 507, 510, 514, 515, 516, 517, 520, 522], "insid": [17, 489, 491], "person_names_callback": 17, "curves_callback": 17, "0xff00": 17, "0x5000": 17, "del": [17, 18, 38, 43, 129, 515], "etc": [17, 18, 36, 38, 40, 46, 48, 126, 129, 200, 489, 490, 496, 507, 513, 517, 520], "walk": [17, 129], "remove_private_tag": [17, 43, 129], "method": [17, 23, 31, 34, 38, 41, 42, 43, 45, 46, 47, 49, 94, 95, 98, 126, 128, 129, 130, 131, 132, 136, 137, 146, 147, 150, 152, 153, 156, 164, 165, 166, 167, 199, 215, 216, 423, 449, 451, 452, 453, 454, 455, 456, 457, 489, 492, 495, 498, 500, 507, 509, 510, 515, 516, 517, 520, 521], "easili": [17, 489, 490, 492], "delet": [17, 50, 129, 489, 504, 513, 514], "delattr": 17, "otherpatientid": [17, 489, 491], "otherpatientidssequ": [17, 515], "possibl": [17, 34, 38, 39, 48, 90, 126, 129, 164, 175, 176, 213, 214, 459, 489, 498, 500, 501, 502, 507, 510, 516, 517, 521], "assign": [17, 38, 66, 126, 489, 495, 502, 508], "19000101": 17, "plot_anonym": [17, 19, 511], "300a": [18, 26, 27, 28, 40], "00f8": 18, "apertur": 18, "00fe": 18, "block1": 18, "block2": 18, "toi": 18, "block_ds1": 18, "blocktyp": 18, "blocknam": 18, "block_ds2": 18, "should": [18, 25, 26, 27, 29, 31, 33, 34, 36, 38, 39, 40, 43, 47, 48, 50, 126, 129, 139, 140, 141, 142, 147, 156, 161, 164, 166, 168, 175, 176, 177, 190, 199, 207, 208, 209, 210, 211, 212, 213, 214, 448, 475, 489, 491, 492, 499, 500, 505, 513, 514, 515, 517, 518, 520, 522], "like": [18, 25, 26, 38, 39, 43, 47, 50, 69, 71, 82, 109, 130, 145, 152, 154, 156, 157, 158, 160, 161, 171, 173, 174, 177, 190, 192, 193, 194, 489, 492, 502, 505, 508, 514, 515, 516, 517], "plan_d": 18, "sinc": [18, 34, 43, 94, 489, 509, 513, 517, 522], "did": [18, 489, 490, 510], "blocksequ": 18, "numberofblock": 18, "beam0": 18, "block_ds3": 18, "abov": [18, 24, 25, 26, 27, 28, 38, 43, 47, 50, 126, 129, 200, 489, 499, 514, 517], "forget": [18, 50], "001": [18, 19, 43, 511], "plot_sequ": [18, 19, 511], "011": 19, "metadata_process": [19, 511], "192": [20, 26, 28, 43, 515], "20040119072730": [20, 26, 28, 43, 515], "12322": [20, 26, 28, 43, 515], "0005": [20, 26, 28, 43, 73, 74, 75, 76, 129, 156, 157, 481, 489, 490, 515, 516, 517], "primari": [20, 26, 28, 43, 515], "072731": [20, 26, 28, 515], "19970430": 20, "072730": [20, 26, 28], "112749": 20, "112936": 20, "113008": 20, "ge": 20, "medic": [20, 36, 40, 42, 517], "system": [20, 24, 26, 27, 28, 39, 46, 166, 214, 489, 510, 515, 517, 519, 522], "jfk": 20, "0500": 20, "ct01_oc0": 20, "e": [20, 24, 26, 27, 28, 31, 36, 38, 39, 40, 47, 48, 52, 82, 94, 126, 129, 132, 147, 156, 162, 163, 166, 167, 168, 177, 199, 200, 214, 215, 451, 456, 489, 492, 499, 501, 505, 510, 513, 514, 515, 519], "rhapsod": 20, "0009": [20, 43, 48, 129, 210, 214, 489, 502], "gems_iden_01": [20, 43], "fidel": [20, 43], "ge_genesis_ff": [20, 43], "suit": [20, 43, 489, 509], "ct01": [20, 43], "1004": [20, 481, 489, 502], "product": 20, "hispe": 20, "1027": 20, "sl": [20, 26, 28, 29, 481], "862399669": 20, "servic": [20, 517], "1031": 20, "mobil": 20, "10e6": 20, "genesi": 20, "05": [20, 514], "10e7": 20, "exam": 20, "checksum": 20, "973283917": 20, "10e9": 20, "stamp": 20, "abcd1234": [20, 515], "1234abcd": [20, 515], "ag": [20, 29], "AS": [20, 29, 477], "000y": 20, "21b0": 20, "addit": [20, 26, 27, 28, 31, 73, 129, 165, 166, 456, 497, 505, 507, 516, 517, 519, 520], "histori": 20, "gems_pati_01": 20, "statu": [20, 114, 126], "isovue300": 20, "helic": 20, "kvp": 20, "120": [20, 49], "0088": 20, "collect": [20, 43, 52, 131, 157, 517], "diamet": 20, "480": 20, "rout": 20, "iv": 20, "1100": 20, "reconstruct": 20, "338": 20, "6716": 20, "1110": 20, "distanc": 20, "detector": 20, "1099": 20, "3100585938": 20, "1111": 20, "630": 20, "1120": 20, "tilt": 20, "tabl": [20, 23, 29, 33, 41, 48, 126, 129, 136, 137, 139, 140, 141, 142, 177, 190, 200, 201, 202, 203, 204, 205, 210, 212, 213, 214, 481, 489, 502, 505, 514, 515, 517, 519, 520], "height": 20, "133": [20, 161], "699997": 20, "1150": 20, "exposur": 20, "1601": 20, "1151": 20, "rai": [20, 26, 28, 515], "tube": 20, "170": 20, "1152": 20, "1160": 20, "filter": [20, 26, 27, 129], "larg": [20, 41, 43, 50, 129, 132, 136, 137, 157, 174, 450, 489, 491, 492, 499, 501, 502, 505, 507, 520, 522], "bowti": 20, "fil": 20, "1190": [20, 489, 505], "focal": 20, "spot": 20, "1210": 20, "convolut": 20, "kernel": 20, "ff": [20, 142], "0019": 20, "gems_acqu_01": 20, "912": [20, 489, 502], "cell": 20, "theta": 20, "373": [20, 22], "75": [20, 26, 27, 49, 366], "0166": 20, "100f": 20, "horiz": 20, "ref": 20, "955": [20, 38], "799988": 20, "1011": 20, "1013": [20, 489, 502], "baselin": [20, 42, 48, 139, 214, 423, 489, 509, 522], "1014": [20, 489, 505], "1015": 20, "enhanc": [20, 201, 214, 492], "1016": [20, 489, 502], "1017": 20, "1018": 20, "ra": 20, "1019": [20, 48], "79187": 20, "101a": 20, "last": [20, 26, 28, 36, 38, 40, 43, 82, 94, 95, 138, 140, 489, 495, 508, 515, 517, 520], "101b": 20, "loc": 20, "320": [20, 48], "197968": 20, "101e": 20, "1023": 20, "speed": [20, 489, 492, 496, 500, 507, 509], "mm": [20, 23], "rotat": 20, "1024": [20, 126, 129, 489, 503, 516, 520], "mid": [20, 26, 28, 38, 40], "sec": 20, "17": [20, 49, 389], "784578": 20, "1025": 20, "1026": 20, "azimuth": 20, "degre": 20, "msec": 20, "102a": 20, "On": [20, 34, 174, 456, 516], "178": 20, "079926": 20, "102b": 20, "off": [20, 26, 27, 39, 91, 157, 489, 496, 504, 514], "3994": 20, "299316": 20, "102c": 20, "trigger": [20, 26, 28], "10431": 20, "102e": 20, "718": 20, "079956": 20, "102f": 20, "984": 20, "1039": [20, 517], "sfov": 20, "stat": [20, 158], "recon": 20, "comput": 20, "1042": [20, 489, 504], "segment": [20, 201, 213, 214, 489, 500, 507], "1043": 20, "1044": 20, "interscan": 20, "delai": [20, 26, 28], "1047": [20, 489, 504], "compress": [20, 23, 31, 33, 34, 37, 40, 44, 48, 64, 129, 136, 137, 139, 140, 147, 177, 214, 423, 489, 498, 500, 502, 507, 508, 510, 518, 519], "factor": [20, 49, 489, 496, 520, 522], "104a": 20, "104b": [20, 26, 28], "1052": [20, 202, 203, 214], "post": [20, 489, 504], "proc": 20, "1057": 20, "water": [20, 456], "95": [20, 489, 495, 498], "1058": 20, "bone": [20, 46], "105e": 20, "763": 20, "105f": 20, "increment": [20, 168], "1969": 20, "1061": 20, "1576": 20, "1062": 20, "106a": 20, "depend": [20, 31, 34, 41, 42, 48, 50, 94, 95, 126, 129, 147, 166, 177, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 477, 481, 489, 500, 501, 508, 514, 516, 517, 519, 522], "process": [20, 25, 26, 31, 42, 139, 207, 214, 423, 450, 489, 492, 504, 507, 509, 513, 514, 522], "106b": 20, "852": [20, 489, 501], "button": 20, "1071": 20, "fatq": 20, "estim": 20, "were": [20, 26, 28, 129, 489, 495, 497, 513, 514, 522], "1072": 20, "z": [20, 86, 168, 169, 489, 510], "chan": 20, "avg": 20, "1073": [20, 489, 504], "left": [20, 47, 514], "1074": 20, "max": [20, 202, 203, 214], "1075": [20, 489, 504], "right": 20, "1076": 20, "10da": 20, "10db": 20, "projector": 20, "coeffici": [20, 26, 27], "10dc": 20, "10dd": 20, "overrang": 20, "10de": 20, "alpha": [20, 201, 214, 489, 501, 502, 521], "158": 20, "135803": 20, "179": 20, "035797": 20, "sn": 20, "gems_rela_01": 20, "prescrib": 20, "1005": 20, "1007": 20, "1605775145": 20, "24078": 20, "acq": 20, "750675506": 20, "1037": 20, "screen": [20, 24, 26], "anatom": 20, "7400": 20, "1091": 20, "biopsi": 20, "1092": 20, "fl": [20, 26, 28, 29, 515], "1093": [20, 489, 505], "gems_stdy_01": 20, "fd": [20, 29], "862399761": 20, "111079": 20, "No": [20, 169, 468, 512], "header": [20, 149, 156, 161, 489, 491, 515], "107d": 20, "complet": [20, 24, 26, 31, 50, 129, 174, 489, 490, 513, 517, 519], "0025": 20, "gems_sers_01": 20, "1006": [20, 481, 489, 502], "puls": 20, "44": [20, 299], "landmark": 20, "counter": 20, "archiv": 20, "receiv": [20, 190], "host": 20, "0027": 20, "gems_imag_01": 20, "101c": 20, "vma": 20, "mamp": 20, "150": [20, 49], "101d": 20, "phase": 20, "mod": 20, "24": [20, 276], "101f": 20, "clip": 20, "129": [20, 520], "smart": 20, "ON": 20, "foreign": [20, 489, 490], "revis": [20, 489, 493, 495, 496], "1035": 20, "letter": [20, 38, 129], "20406341552734": 20, "r": [20, 34, 126, 129, 516], "coord": 20, "199999809265137": 20, "699999809265137": 20, "69999694824219": 20, "1045": 20, "1046": 20, "1048": 20, "top": [20, 26, 27, 28, 36, 47, 129, 157, 166, 489, 510, 514, 515], "corner": 20, "180": [20, 38], "53579711914062": 20, "1049": [20, 489, 504], "03579711914062": 20, "bottom": [20, 36, 513, 514], "104c": [20, 26, 28], "159": [20, 489, 502], "63580322265625": 20, "104d": [20, 26, 28], "19999694824219": 20, "116": [20, 26, 27, 28, 49], "20304870605469": 20, "side": 20, "l": [20, 23, 42, 139, 214, 316, 489, 500, 519], "1053": [20, 202, 203, 214, 489, 504], "anterior": 20, "posterior": 20, "1054": 20, "1055": 20, "0120": 20, "rescal": [20, 44, 202, 203, 205, 206, 214], "intercept": [20, 38, 202, 203, 214], "slope": [20, 202, 203, 214], "0029": 20, "gems_imps_01": 20, "lower": [20, 129, 132, 166, 517, 521], "rang": [20, 31, 34, 47, 90, 147, 202, 203, 214, 489, 500, 502, 515], "pixels1": 20, "87": 20, "1008": 20, "1009": 20, "100a": 20, "764": 20, "hdr": 20, "struct": [20, 192, 475], "1034": 20, "advantag": [20, 489, 496], "overflow": 20, "underflow": 20, "0043": [20, 26, 28, 515], "gems_parm_01": 20, "400": [20, 48], "input": [20, 24, 26, 48, 199, 207, 214, 456, 489, 505], "1012": 20, "chain": 20, "14": [20, 42, 139, 304, 305, 420, 489, 504], "decon": 20, "107": [20, 222, 296, 340, 489, 496], "21": [20, 49, 390], "20": [20, 49, 214, 353, 401, 489, 507], "calibr": 20, "ibh": 20, "scale": 20, "095": 20, "bbh": 20, "085000": 20, "102000": 20, "095000": 20, "blend": 20, "350": 20, "ppscan": 20, "integr": 20, "level": [20, 26, 27, 28, 35, 36, 129, 157, 166, 167, 489, 495, 507, 510, 514, 515, 516, 517], "40": [20, 49, 370, 489, 507], "delta": 20, "1021": 20, "glow": 20, "term": [20, 48, 200, 214], "748": 20, "749": 20, "750": 20, "pitch": 20, "ratio": [20, 33], "1028": 20, "uniqu": [20, 29, 31, 43, 147, 166, 167, 168, 186, 489, 498, 509, 515, 517], "iden": 20, "1029": [20, 489, 503], "histogram": 20, "2068": 20, "user": [20, 31, 38, 40, 45, 46, 76, 85, 129, 147, 154, 159, 177, 489, 492, 495, 501, 502, 505, 510, 513, 515, 517], "coordin": [20, 26, 27, 38], "200000": 20, "700000": 20, "07992553710938": 20, "3816": 20, "219482421875": 20, "fpa": 20, "gain": 20, "ad": [20, 25, 26, 27, 33, 36, 38, 44, 88, 104, 129, 132, 133, 148, 164, 166, 167, 175, 176, 177, 190, 199, 205, 207, 210, 212, 214, 217, 464, 466, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 507, 508, 509, 510, 512, 513, 516, 521], "cal": 20, "reg": 20, "xm": [20, 26, 28], "auto": [20, 129, 489, 490], "pattern": [20, 26, 28, 102, 103, 105, 489, 510], "tggc": [20, 26, 28], "104e": [20, 26, 28, 515], "durat": [20, 26, 28, 515], "60060977935791": [20, 26, 28, 515], "8192": [20, 174], "32768": [20, 26, 28, 515], "difflib": 20, "compar": [20, 52, 489, 496, 499, 507, 513, 514], "termin": [20, 26, 27, 28, 39, 140, 157, 170], "newlin": [20, 515], "massag": 20, "form": [20, 34, 47, 48, 49, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 126, 129, 130, 217, 448, 456], "rep": 20, "split": [20, 489, 490, 491], "diff": [20, 513], "102": [20, 21, 222, 330, 333, 340, 489, 495, 511], "plot_dicom_differ": [20, 21, 511], "show_charset_nam": [21, 22, 511], "veri": [22, 29, 489, 492, 513, 517, 520], "simpl": [22, 38, 40, 46, 489, 490], "app": 22, "personnam": [22, 29, 56, 126, 469, 489, 490, 501, 504, 505, 507, 510], "default_encod": [22, 456], "iso8859": [22, 154, 157, 189, 470], "person_nam": 22, "2008": [22, 456], "ps3": [22, 456], "p98": 22, "yamada": 22, "tarou": 22, "033": 22, "3ed": 22, "bb": 22, "iso2022_jp": 22, "j": 22, "105": [22, 49, 222, 336, 337, 340], "wang": 22, "xiaodong": 22, "xcd": 22, "xf5": 22, "x5e": 22, "xd0": 22, "xa1": 22, "xb6": 22, "xab": 22, "gb18030": 22, "104": [22, 222, 270, 271, 272, 273, 274, 334, 335, 340], "xe7": 22, "x8e": 22, "x8b": 22, "xe5": 22, "xb0": 22, "x8f": 22, "xe6": 22, "x9d": 22, "xb1": 22, "utf": 22, "101": [22, 222, 326, 327, 340], "hong": [22, 456], "gildong": [22, 456], "363": 22, "321": 22, "316": 22, "324": 22, "327": 22, "310": 22, "253": 22, "261": 22, "346": [22, 489, 498], "265": 22, "277": [22, 489, 502], "euc_kr": [22, 456], "label": [22, 26, 28, 31, 46, 147], "pack": [22, 34, 47, 214, 489, 499, 500, 505, 508], "easiest": [23, 520], "probabl": [23, 50, 517], "zenodo": 23, "doi": 23, "enter": 23, "citat": 23, "box": [23, 36], "along": [23, 166], "et": 23, "al": 23, "http": [23, 36, 46, 94, 513, 514, 516, 519], "github": [23, 489, 498, 512, 513, 514, 519], "onlin": 23, "yyyi": 23, "dd": 23, "recommend": [23, 25, 26, 38, 39, 41, 90, 136, 137, 147, 166, 214, 515, 517, 519, 520], "deal": [23, 39, 47, 213, 489, 491, 500, 515], "jpeg": [23, 34, 40, 41, 42, 48, 77, 136, 137, 139, 208, 209, 210, 211, 212, 213, 214, 311, 316, 319, 423, 489, 500, 502, 504, 505, 507, 519, 520], "see": [23, 24, 26, 27, 28, 31, 33, 38, 39, 40, 41, 48, 50, 52, 126, 129, 132, 146, 147, 154, 157, 160, 164, 172, 173, 174, 177, 190, 194, 455, 456, 489, 492, 502, 503, 504, 507, 513, 514, 515, 517, 519, 520, 521], "releas": [23, 43, 486, 498, 502, 505], "march": 23, "2018": [23, 514], "june": 23, "octob": 23, "juli": 23, "2019": 23, "januari": 23, "2020": 23, "mai": [23, 24, 26, 27, 30, 31, 34, 39, 42, 43, 46, 47, 48, 50, 75, 93, 97, 129, 136, 137, 138, 139, 140, 141, 142, 147, 166, 177, 190, 213, 456, 472, 474, 489, 502, 513, 514, 515, 517, 519, 520, 522], "novemb": 23, "august": 23, "2021": [23, 489, 509], "2022": 23, "2023": [23, 486], "jan": [23, 81, 515], "2024": 23, "recreat": [24, 26, 489, 497], "within": [24, 26, 27, 28, 31, 77, 86, 129, 156, 157, 165, 166, 177, 219, 470, 489, 505, 517, 519, 522], "detail": [24, 26, 34, 38, 39, 40, 48, 50, 91, 126, 129, 157, 219, 455, 486, 489, 507, 510, 513, 514], "review": [24, 26, 512, 513, 514], "than": [24, 25, 26, 27, 28, 29, 33, 34, 36, 41, 42, 47, 50, 52, 126, 129, 138, 139, 140, 142, 156, 160, 166, 169, 177, 178, 192, 199, 214, 448, 489, 490, 491, 492, 497, 498, 499, 502, 504, 507, 510, 515, 516], "export": [24, 26, 39, 489, 507], "includ": [24, 25, 26, 39, 47, 50, 126, 129, 136, 164, 166, 177, 200, 214, 219, 486, 489, 491, 493, 495, 497, 498, 513, 514, 515, 517, 520, 522], "health": [24, 26, 50], "sensit": [24, 26, 49, 50, 129, 481, 522], "git": [24, 26, 27, 513, 514, 519], "util": [24, 26, 48, 50, 59, 60, 61, 64, 67, 486, 489, 490, 497, 498, 510], "main": [24, 25, 26, 37, 38, 45, 50, 116, 489, 492, 513, 514, 515, 519], "instancecreationd": [24, 26], "20030903": [24, 26, 27, 38], "instancecreationtim": [24, 26], "150031": [24, 26, 27, 38], "481": [24, 26, 234, 235, 276, 280, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 401, 419, 420], "sopinstanceuid": [24, 26, 33, 165], "777": [24, 26, 27, 38], "7777": [24, 26, 27, 38], "20030903150023": [24, 26, 27, 38], "20030716": [24, 26, 27, 28, 38], "153557": [24, 26, 28, 38], "prefix": [24, 26, 27, 28, 36, 149, 156, 161, 168, 177, 190, 374, 448, 456, 489, 501, 510, 513, 514, 515, 521], "rather": [24, 26, 27, 28, 47, 50, 126, 129, 166, 177, 199, 489, 490, 491, 498, 502, 504, 507, 510, 515], "In": [24, 25, 26, 27, 31, 36, 38, 40, 41, 43, 48, 50, 73, 166, 489, 497, 503, 505, 509, 513, 514, 515, 517, 520], "wa": [24, 25, 26, 34, 36, 126, 129, 130, 166, 171, 175, 176, 177, 464, 466, 489, 492, 499, 502, 507, 513, 514, 517, 520], "direct": [24, 26, 38, 214, 514, 516, 517], "specifi": [24, 25, 26, 27, 28, 38, 107, 109, 126, 129, 147, 156, 157, 177, 456, 481, 489, 502, 507, 515, 517, 519], "exclude_s": [24, 26], "filespec": [24, 25, 26, 27, 28], "outfil": [24, 26, 515], "argument": [24, 25, 26, 27, 28, 36, 38, 41, 89, 129, 131, 175, 176, 198, 489, 491, 492, 500, 501, 502, 503, 504, 505, 510, 516, 517, 520], "If": [24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 45, 48, 49, 50, 52, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 91, 94, 95, 98, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 129, 131, 132, 133, 136, 139, 140, 142, 147, 153, 154, 156, 157, 158, 161, 165, 166, 167, 168, 174, 175, 176, 177, 190, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 448, 451, 452, 456, 459, 463, 464, 465, 466, 471, 475, 478, 481, 489, 495, 507, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522], "your_fil": [24, 26, 27, 28], "yourplan": [24, 26, 27, 28], "stdout": [24, 26], "messag": [24, 26, 27, 28, 91, 219, 489, 492, 501, 509, 513, 515, 517], "exclud": [24, 26, 27, 28, 50, 129, 200, 214], "binari": [24, 26, 126, 129, 214, 489, 493, 501, 502], "larger": [24, 26, 156, 519, 520], "save_filenam": [24, 26], "otherwis": [24, 26, 31, 34, 38, 85, 94, 95, 113, 114, 118, 119, 123, 124, 125, 126, 129, 130, 136, 147, 154, 166, 168, 169, 172, 173, 197, 204, 205, 206, 214, 423, 456, 460, 461, 462, 463, 464, 465, 466, 470, 471, 472, 474, 475, 477, 478], "_from_codifi": [24, 26], "dummi": [24, 26], "error": [24, 26, 50, 52, 73, 83, 84, 93, 126, 129, 131, 459, 486, 489, 492, 493, 496, 498, 499, 500, 501, 502, 504, 505, 509, 510, 513, 515], "savenam": [24, 26], "dicomfil": [24, 26, 67], "pythoncod": [24, 26], "By": [24, 26, 48, 164, 166, 455, 489, 493, 515], "translat": [24, 26, 38, 489, 498], "whole": [24, 26, 154, 200, 214, 520], "fractiongroupsequ": [24, 26, 27, 28], "non": [24, 26, 29, 38, 39, 106, 107, 108, 109, 124, 126, 127, 129, 133, 139, 164, 166, 177, 190, 213, 214, 222, 455, 459, 461, 464, 466, 472, 474, 489, 493, 494, 498, 499, 500, 501, 502, 505, 509, 515], "fractiongroupnumb": [24, 26], "numberoffractionsplan": [24, 26], "30": [24, 26, 27, 28, 49, 50, 364, 514], "numberofbeam": [24, 26], "numberofbrachyapplicationsetup": [24, 26], "referenc": [24, 26, 27, 28, 36, 38, 159, 165, 166, 517], "refd_beam_sequ": [24, 26], "referencedbeamsequ": [24, 26], "refd_beam1": [24, 26], "beamdosespecificationpoint": [24, 26], "239": [24, 26, 27, 28, 38], "531250000000": [24, 26, 27, 28], "751": [24, 26, 27, 28], "87000000000": [24, 26, 27, 28], "accept": [24, 26, 29, 39, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 126, 129, 131, 142, 489, 504, 505, 507, 509, 510, 513], "issu": [24, 26, 28, 40, 50, 52, 73, 74, 76, 84, 214, 489, 492, 493, 494, 495, 496, 501, 510, 512, 513], "toward": [24, 26], "loop": [24, 26, 50], "develop": [25, 26, 27, 39, 489, 498], "subcommand": [25, 26, 27, 489, 507], "command": [25, 27, 35, 40, 50, 129, 489, 497, 507, 509, 513, 514, 519], "packag": [25, 26, 27, 40, 42, 44, 45, 46, 94, 200, 208, 209, 210, 211, 212, 213, 481, 489, 490, 493, 498, 505, 507, 517, 519], "setup": [25, 26, 27, 28, 40, 489, 496, 497, 509], "command1": [25, 26], "command2": [25, 26], "setuptool": [25, 26, 489, 490, 497, 507], "yourpackag": [25, 26], "variou": [25, 26, 43, 489, 490], "entry_point": [25, 26], "pydicom_subcommand": [25, 26], "command1modul": [25, 26], "add_subpars": [25, 26], "command2modul": [25, 26], "liter": [25, 26], "must": [25, 26, 31, 33, 34, 38, 39, 41, 47, 48, 82, 85, 129, 132, 136, 137, 142, 156, 164, 166, 169, 171, 173, 177, 199, 200, 201, 205, 206, 214, 460, 478, 489, 507, 515, 516, 517, 520, 522], "wish": [25, 26, 39, 214], "usual": [25, 26, 27, 28, 33, 38, 43, 48, 107, 130, 149, 154, 489, 492, 513, 515, 519, 520], "convent": [25, 26, 38, 456], "singl": [25, 26, 29, 31, 33, 36, 75, 106, 108, 126, 129, 136, 138, 140, 142, 145, 147, 163, 164, 166, 195, 196, 199, 200, 212, 214, 466, 475, 489, 490, 500, 508, 513, 516, 517], "subpars": [25, 26], "do_command": [25, 26], "filespec_help": [25, 26], "filespec_pars": [25, 26], "sub": [25, 26], "parser": [25, 26], "add_pars": [25, 26], "subcommandnam": [25, 26], "add_argu": [25, 26], "set_default": [25, 26], "func": [25, 26, 514], "And": [25, 26, 27, 28, 94, 489, 505, 513, 514, 515, 522], "arg": [25, 26, 129, 131, 149, 150, 151, 152, 153, 217, 449, 453, 456, 457, 489, 493], "element_v": [25, 26], "yourarg": [25, 26], "argpars": [25, 26], "snippet": [25, 26, 43], "element_valu": [25, 26], "pair": [25, 26, 131, 166], "codifi": [25, 27, 44, 489, 497, 499, 507, 509, 510], "filetyp": [25, 26], "yourself": [25, 26, 47, 48], "shown": [25, 26, 28, 38, 43, 50, 52, 214, 489, 490, 491, 504, 515, 517], "relat": [25, 26, 27, 34, 39, 47, 49, 55, 129, 132, 177, 200, 210, 212, 213, 481, 489, 490, 513, 517, 522], "think": [25, 26], "contribut": [25, 26, 489, 492, 495, 496, 518], "case": [25, 26, 38, 39, 40, 41, 43, 50, 52, 73, 75, 81, 129, 157, 456, 489, 501, 505, 510, 515, 516, 520, 522], "under": [25, 26, 38, 136, 137, 489, 490, 492, 498, 513, 514, 519], "pull": [25, 26, 28, 512, 519], "request": [25, 26, 28, 38, 489, 505, 507, 512], "v2": [26, 27, 33, 489, 505, 519, 522], "offer": [26, 27, 41, 48, 129, 520], "explor": [26, 27, 43], "156": [26, 27, 38], "rt": [26, 27, 28, 38, 66, 164, 166, 517], "plan": [26, 27, 28, 38, 40, 66, 164], "999": [26, 27, 38, 489, 502], "99": [26, 27, 38, 42, 210, 222, 257, 426], "9999": [26, 27, 38, 514], "888": [26, 27, 38], "88": [26, 27, 38, 220, 227, 240, 241, 245, 246, 281, 285, 288, 301, 321, 344, 365, 366, 368, 370, 396, 409, 446, 489, 493], "replic": [26, 27], "exactli": [26, 27, 47, 49, 515], "notat": [26, 27, 28, 459, 515], "0071": [26, 27, 28], "fraction": [26, 27, 28], "0078": [26, 27, 28], "00a0": [26, 27, 28], "brachi": [26, 27, 28], "300c": [26, 27, 28], "0082": [26, 27, 28], "dose": [26, 27, 28, 66, 164, 166, 489, 495, 517], "0275401": [26, 27, 28], "meterset": [26, 27, 28], "0036697": [26, 27, 28], "0006": [26, 27, 28, 34, 129, 210, 212, 213, 214], "simpli": [26, 27, 38, 47], "particular": [26, 27, 38, 41, 47, 48, 86, 159, 489, 492, 502, 515, 521], "q": [26, 27, 28, 513], "quiet": [26, 27, 28], "automat": [26, 27, 36, 38, 41, 43, 47, 48, 50, 95, 126, 166, 175, 176, 451, 452, 489, 498, 502, 504, 507, 513, 514, 515], "pip": [26, 27, 513, 514, 520, 522], "environ": [26, 27, 39, 489, 490, 505, 519], "variabl": [26, 27, 36, 37, 38, 39, 66, 489, 501, 505, 509], "clone": [26, 27, 513, 514, 519], "repositori": [26, 27, 46, 104, 489, 510, 519], "repeat": [26, 27, 47, 116, 119, 123, 124, 166, 489, 500, 509, 515], "reinstal": [26, 27], "similar": [26, 27, 36, 130, 194, 489, 491, 495, 516, 521], "program": [26, 27, 38, 40, 46, 489, 490, 495], "pipe": [26, 27], "grep": [26, 27], "either": [26, 27, 34, 38, 39, 43, 45, 95, 126, 129, 156, 161, 166, 177, 200, 214, 217, 456, 463, 471, 489, 505, 514, 515, 517, 519, 520], "iso": [26, 27, 207, 214, 311, 316, 319, 448, 489, 502], "741": [26, 27], "organ_at_risk": [26, 27], "deliveri": [26, 27], "maximum": [26, 27, 34, 50, 126, 136, 137, 147, 168, 448, 489, 509, 510], "002c": [26, 27], "organ": [26, 27, 456], "risk": [26, 27], "ptv": [26, 27], "target": [26, 27, 36], "0026": [26, 27], "prescript": [26, 27], "826203": [26, 27], "00b0": [26, 27], "00b6": [26, 27], "0111": [26, 27], "control": [26, 27, 45, 81, 82, 99, 100, 489, 495, 517], "0115": [26, 27], "rate": [26, 27], "650": [26, 27], "011a": [26, 27], "010c": [26, 27], "cumul": [26, 27], "0051": [26, 27], "9990268": [26, 27], "0180": [26, 27], "regular": [26, 27, 38, 489, 509], "express": [26, 27], "abil": [26, 27, 48, 489, 497, 498, 505], "alreadi": [26, 28, 33, 35, 36, 41, 48, 73, 107, 129, 133, 140, 167, 171, 190, 199, 214, 450, 489, 497, 515, 517, 520, 522], "nest": [26, 28, 38, 129, 489, 496, 509], "minim": [26, 28, 177, 190], "below": [26, 28, 29, 33, 38, 40, 41, 43, 167, 177, 200, 210, 212, 213, 214, 481, 489, 492, 517, 520, 521], "studyid": [26, 28], "bitsstor": [26, 28, 210, 212, 214], "pre": [26, 28, 38, 40, 489, 510, 513], "id00001": [26, 28], "study1": [26, 28], "plan1": [26, 28], "02754010000000": [26, 28], "003669700000": [26, 28], "treatment": [26, 28], "static": [26, 28, 131, 147], "photon": [26, 28], "energi": [26, 28], "00000000000000": [26, 28], "coll": [26, 28], "couch": [26, 28], "wedg": [26, 28], "boli": [26, 28], "alwai": [26, 28, 42, 43, 48, 118, 126, 132, 156, 210, 214, 489, 501, 505, 507, 510], "those": [26, 28, 31, 35, 39, 43, 489, 492, 495, 505, 515, 517], "extra": [26, 28, 38, 489, 510], "submit": [26, 28, 40, 489, 495, 512, 513, 514], "interfac": [27, 35, 489, 507, 519], "introduct": [28, 31, 37, 44, 513, 514, 517, 518, 522], "anyth": [29, 43, 47, 48, 153, 214], "ascii": [29, 169, 195, 489, 501], "decim": [29, 78, 99, 450, 451, 452, 454, 455, 459, 460, 489, 495, 496, 507], "sign": [29, 31, 34, 48, 77, 147, 489, 505, 513, 514, 522], "unsign": [29, 31, 34, 48, 142, 147, 153, 489, 505, 522], "integ": [29, 31, 34, 48, 142, 214, 448, 454, 455, 489, 493, 495, 505, 522], "depth": [29, 37, 46, 48, 167, 489, 502, 519], "even": [29, 43, 47, 136, 138, 140, 156, 161, 214, 489, 505, 515, 517, 520], "encod": [29, 34, 35, 37, 41, 42, 48, 49, 52, 73, 74, 75, 76, 126, 127, 129, 130, 136, 137, 138, 139, 140, 143, 144, 154, 157, 162, 163, 166, 177, 184, 188, 190, 192, 193, 194, 196, 213, 456, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 486, 489, 495, 498, 499, 500, 501, 502, 507, 508, 509, 515, 516, 520], "correctli": [29, 43, 50, 94, 95, 166, 177, 208, 209, 489, 492, 495, 498, 499, 501, 502, 505, 507, 508, 509, 513], "empti": [29, 126, 129, 130, 139, 141, 142, 214, 215, 451, 452, 456, 475, 489, 490, 498, 501, 502, 503, 504, 505, 507, 515, 517, 522], "multivalu": [29, 56, 79, 195, 196, 462, 463, 464, 465, 466, 469, 477, 480, 489, 495, 510], "accord": [29, 50, 156, 188, 515, 517], "od": [29, 489, 498, 499, 507], "OF": [29, 489, 504], "ol": [29, 489, 498, 499, 507], "st": [29, 40], "ur": [29, 474], "ut": 29, "never": [29, 78, 129, 513], "greater": [29, 34, 129, 138, 140, 214, 448, 489, 498, 516], "hint": 29, "union": 29, "mutablesequ": [29, 73, 127, 129, 154, 157, 162, 163, 461, 462, 463, 464, 465, 466, 469, 471, 472, 475, 477, 479, 480], "AT": [29, 462, 489, 502, 507, 509], "attribut": [29, 43, 66, 81, 94, 126, 128, 129, 130, 131, 146, 147, 150, 152, 153, 165, 166, 167, 177, 216, 423, 449, 451, 452, 453, 454, 455, 456, 457, 458, 489, 490, 500, 505, 508, 509, 510, 515, 517], "basetag": [29, 38, 56, 82, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 126, 128, 129, 130, 131, 132, 153, 154, 156, 157, 160, 166, 170, 172, 173, 174, 217, 218, 219, 462, 478, 489, 492, 507], "int": [29, 31, 38, 52, 74, 82, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 132, 136, 138, 139, 141, 142, 144, 147, 152, 153, 154, 155, 156, 157, 160, 162, 163, 166, 167, 168, 171, 172, 173, 174, 189, 198, 200, 204, 205, 206, 214, 216, 217, 218, 423, 450, 451, 452, 454, 455, 456, 470, 475, 478, 481, 515], "dsfloat": [29, 56, 450, 464, 489, 507], "dsdecim": [29, 56, 85, 450, 464, 489, 507], "doubl": [29, 36, 48, 129, 210, 214, 489, 502], "ov": [29, 489, 502, 507], "word": [29, 36, 50, 107, 183, 456, 515], "short": [29, 153, 478, 513, 515], "sv": [29, 481, 489, 502], "uc": [29, 479, 489, 498], "unlimit": 29, "identifi": [29, 39, 43, 50, 186], "uri": [29, 129, 489, 505, 516], "url": [29, 36, 94], "uv": [29, 481, 489, 502], "config": [29, 39, 455, 477, 486, 489, 495, 500, 501, 502, 504, 505, 507], "datetime_convers": [29, 463, 465, 471, 486], "use_ds_decim": [29, 79, 464, 486, 489, 504], "rlelosslessencod": [30, 31, 33, 486, 489, 507, 510], "byteord": [30, 31, 522], "guid": [31, 36, 40, 129, 486, 489, 501, 507, 514, 515, 520], "cover": [31, 515, 517, 520, 522], "tutori": [31, 36, 40, 489, 502, 512, 513, 514, 515, 517, 520, 522], "intend": [31, 33, 34, 129, 147, 513], "provid": [31, 37, 38, 43, 48, 94, 95, 126, 129, 147, 200, 210, 212, 213, 481, 489, 496, 516, 519, 520, 521], "mechan": [31, 147], "raw": [31, 38, 47, 48, 49, 127, 128, 129, 145, 147, 154, 158, 164, 481, 489, 495, 501, 504, 522], "unencod": [31, 147], "least": [31, 34, 478, 517], "convers": [31, 33, 34, 90, 126, 200, 210, 212, 213, 481, 489, 491, 501, 502, 504, 516, 522], "signatur": [31, 489, 505], "foo": 31, "kwarg": [31, 129, 131, 147, 150, 151, 152, 153, 166, 449, 453, 456, 457, 520], "multi": [31, 42, 48, 56, 79, 126, 129, 136, 139, 140, 141, 142, 147, 166, 199, 200, 214, 474, 486, 489, 498, 500, 502, 504, 515, 522], "support": [31, 39, 44, 67, 68, 77, 94, 95, 129, 147, 166, 200, 201, 207, 208, 209, 210, 211, 212, 213, 214, 217, 481, 489, 490, 498, 499, 500, 501, 502, 504, 505, 507, 508, 509, 510, 517, 518, 519, 520, 521], "minimum": [31, 33, 190], "transfer_syntax_uid": [31, 129], "samples_per_pixel": [31, 147], "grayscal": [31, 33, 34, 48], "rgb": [31, 33, 34, 41, 48, 95, 201, 207, 208, 209, 210, 211, 212, 213, 214, 489, 499, 502, 507, 520], "number_of_fram": [31, 147], "bits_alloc": [31, 147, 214], "bits_stor": [31, 147], "4095": [31, 34, 147], "65535": [31, 147, 517], "pixel_represent": [31, 147], "complement": [31, 34, 37, 147], "photometric_interpret": [31, 147], "color": [31, 33, 34, 41, 44, 147, 201, 207, 214, 489, 502, 504, 520], "ybr_full": [31, 33, 34, 48, 147, 207, 210, 212, 214, 489, 502, 508], "At": [31, 513, 521], "is_avail": [31, 94, 95, 147, 200, 208, 209, 210, 211, 212, 213, 481, 489, 500], "bool": [31, 52, 78, 79, 91, 93, 99, 104, 113, 114, 123, 124, 126, 128, 129, 130, 133, 136, 142, 147, 153, 154, 155, 156, 157, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 190, 197, 200, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 423, 450, 451, 452, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 477, 478, 481], "met": [31, 160, 200, 208, 209, 210, 211, 212, 213, 481, 489, 500], "encoder_depend": [31, 147], "tupl": [31, 38, 41, 43, 82, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 126, 129, 132, 137, 139, 142, 147, 153, 156, 199, 215, 217, 218, 456, 489, 492, 501, 520], "rlelossless": [31, 33, 41, 129, 513, 520], "jpeg2000": [31, 42, 139, 489, 500, 502], "pillow": [31, 42, 46, 129, 211, 489, 498, 500, 502, 504, 507, 510, 513], "imagecodec": 31, "gdcm": [31, 33, 41, 42, 129, 146, 208, 489, 492, 498, 501, 505, 507, 508, 510, 520], "add_plugin": [31, 147], "plugin_label": 31, "my_encoder_func": 31, "my_packag": 31, "my_encod": 31, "rle": [32, 34, 41, 42, 48, 129, 136, 137, 139, 146, 148, 212, 213, 214, 376, 489, 500, 501, 507, 508, 519, 520], "lossless": [32, 34, 41, 42, 48, 129, 136, 137, 139, 146, 148, 212, 213, 214, 489, 504, 507, 508, 520], "plugin": [32, 41, 42, 129, 146, 147, 212, 489, 507, 508, 512, 519, 520], "underli": 33, "algorithm": [33, 448], "packbit": 33, "scheme": [33, 154, 469, 470, 476, 479, 480, 521, 522], "explan": 33, "relationship": [33, 166, 514], "glossari": [33, 35], "palett": [33, 34, 44, 103, 164, 166, 201, 214, 489, 502, 504], "intens": [33, 34], "white": [33, 489, 497], "black": [33, 489, 510], "index": [33, 38, 48, 49, 129, 147, 166, 167, 168, 204, 205, 206, 214, 481, 489, 505, 514, 522], "red": [33, 34, 201, 214, 489, 504, 513, 514], "green": [33, 34, 489, 504], "blue": [33, 34, 489, 504], "lookup": [33, 48, 110, 111, 112, 114, 115, 125, 201, 202, 203, 204, 205, 214, 489, 505, 515], "noth": [33, 517], "equal": [33, 34, 138, 140, 489, 499, 500, 501], "ycbcr": [33, 34, 208, 209, 210, 211, 212, 213], "keep": [33, 166, 517, 519], "mind": 33, "lossi": [33, 42, 139, 214], "inclus": [33, 34], "downscal": 33, "accordingli": [33, 129], "both": [33, 39, 40, 73, 78, 79, 94, 95, 142, 166, 177, 205, 214, 489, 491, 498, 501, 504, 516], "made": [33, 129, 138, 139, 166, 489, 491, 492, 504, 513, 514, 517], "might": [33, 43, 147, 522], "ask": [33, 40, 512, 513, 514], "why": [33, 520], "vice": [33, 201, 214], "versa": [33, 201, 214], "answer": [33, 512, 515, 520], "higher": [33, 35, 129, 489, 492, 516], "befor": [33, 42, 43, 88, 126, 129, 156, 167, 174, 205, 206, 214, 489, 492, 495, 496, 498, 501, 513, 514, 515, 517, 520, 522], "decis": 33, "known": [33, 34, 38, 39, 43, 48, 52, 81, 93, 126, 127, 129, 201, 214, 218, 489, 499, 502, 504, 505, 507, 515, 521], "20x": [33, 41, 489, 507], "slower": [33, 41, 214], "pylibjpeg": [33, 41, 42, 129, 146, 147, 212, 489, 505, 507, 510, 520], "place": [33, 34, 41, 42, 129, 177, 489, 498, 515, 517], "samplesperpixel": [33, 210, 212, 213, 214, 489, 495, 500, 520], "bitsalloc": [33, 42, 126, 210, 212, 213, 214, 489, 500], "pixelrepresent": [33, 210, 212, 213, 214, 489, 501], "rgb_color": [33, 66], "921600": 33, "424152": 33, "pixel_data_handl": [33, 47, 48, 129, 482, 486, 489, 500, 507, 510], "convert_color_spac": [33, 48, 214, 486, 489, 507], "ybr": [33, 48, 489, 507], "187460": 33, "compon": [34, 42, 77, 139, 167, 169, 212, 214, 456, 489, 490, 492, 507], "previous": [34, 158, 489, 500, 504, 507], "constrain": 34, "iod": [34, 214, 517, 522], "remain": [34, 140, 166, 489, 495, 514], "hand": [34, 50, 489, 505], "ybr_rct": [34, 41, 212, 520], "whether": [34, 38, 79, 100, 126, 129, 142, 460, 489, 492, 495, 500, 502, 507, 512, 513, 519], "transform": [34, 48], "prior": [34, 41, 140, 520], "taken": [34, 129, 214], "account": 34, "doesn": [34, 47, 81, 129, 200, 210, 213, 489, 504, 513, 520], "make": [34, 38, 39, 40, 43, 50, 129, 130, 448, 459, 489, 492, 501, 507, 510, 515, 517, 519], "determin": [34, 38, 47, 126, 129, 166, 202, 203, 214, 517, 522], "invers": 34, "ybr_full_422": [34, 48, 207, 210, 212, 214, 489, 502, 508], "ybr_partial_420": 34, "ybr_ict": [34, 212], "restrict": 34, "further": [34, 517, 521], "constraint": [34, 451, 452, 459], "planar": [34, 48, 129, 214, 489, 500], "r1": 34, "g1": 34, "b1": 34, "r2": 34, "g2": 34, "b2": 34, "rn": 34, "gn": 34, "bn": 34, "contigu": 34, "typic": [34, 93, 134, 520], "32": [34, 129, 132, 137, 142, 210, 213, 214, 481, 489, 499, 507, 510, 522], "being": [34, 101, 110, 111, 112, 114, 115, 118, 120, 121, 122, 125, 129, 140, 147, 213, 489, 490, 500, 507, 508, 510, 517, 519, 520], "mean": [34, 42, 213, 448, 513, 515, 517, 520, 521], "chapter": [34, 448], "mani": [34, 39, 46, 48, 136, 137, 489, 491, 495, 496, 512], "most": [34, 38, 39, 42, 46, 50, 82, 489, 492, 495, 496, 515, 517, 520, 521], "signific": [34, 39, 461, 472, 474, 489, 492], "past": [34, 140, 161, 190], "describ": [34, 38, 42, 50, 106, 108, 126, 129, 456, 516, 517], "familiar": [35, 36, 515, 517, 520, 522], "document": [35, 39, 129, 147, 164, 493, 498, 499, 510, 512, 518], "reader": 36, "unfamiliar": 36, "step": [36, 489, 496, 507, 517, 521, 522], "achiev": [36, 138], "advanc": [36, 147], "understand": [36, 38, 513, 522], "aim": [36, 489, 505], "explain": 36, "subject": [36, 516, 521], "fairli": 36, "technic": [36, 37], "api": [36, 147, 489, 499, 513, 516, 520, 521], "learn": [36, 40, 513, 517], "remind": 36, "about": [36, 38, 39, 40, 46, 48, 50, 91, 214, 515, 517, 520, 522], "italic": 36, "lowercas": 36, "uppercas": [36, 126], "capit": [36, 489, 495], "american": 36, "english": 36, "spell": [36, 73, 489, 500], "hex": [36, 47, 126, 129, 132, 489, 492], "comma": 36, "ital": 36, "seq": [36, 177, 515], "gender": 36, "neutral": 36, "pronoun": 36, "hypothet": 36, "tick": 36, "markup": [36, 514], "0xb4": 36, "built": [36, 519], "pass": [36, 38, 41, 47, 48, 89, 102, 103, 105, 129, 131, 136, 137, 199, 489, 492, 513, 514, 517, 520], "fragments_per_fram": [36, 136], "haven": [36, 513, 515], "docstr": [36, 513], "proper": [36, 489, 492], "noun": 36, "wrap": [36, 38, 177], "unless": [36, 160, 167, 489, 493, 504, 517], "good": [36, 50, 513, 514], "reason": [36, 514], "link": [36, 514], "better": [36, 489, 493, 495, 499], "attr": 36, "ndarrai": [36, 38, 42, 47, 48, 49, 77, 79, 94, 95, 101, 129, 147, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 464, 466, 481, 489, 498, 502, 505, 520, 522], "dtype": [36, 38, 47, 48, 49, 129, 147, 212, 214, 520], "chtml": 36, "part05": [36, 514], "sect_6": 36, "html": [36, 514], "nema": 36, "org": [36, 46, 516], "four": [36, 95, 166, 174], "five": [36, 456], "sparingli": 36, "featur": [36, 39, 489, 497, 512, 513], "versionad": 36, "versionchang": 36, "handler": [36, 41, 42, 48, 77, 91, 94, 95, 129, 147, 200, 208, 209, 210, 211, 212, 213, 214, 481, 486, 489, 498, 500, 502, 503, 504, 505, 507, 508, 510, 513, 516, 520], "instal": [37, 39, 42, 46, 94, 95, 212, 489, 490, 497, 507, 514, 515, 518, 520, 522], "intermedi": [37, 38], "core": [37, 44], "mostli": [38, 128], "behav": [38, 39, 109, 199, 489, 499, 501, 517], "via": [38, 41, 52, 126, 129, 212, 489, 498, 500, 505, 507, 508, 516, 517, 520], "entir": [38, 129, 156, 159, 208, 212, 513, 515, 520], "collaps": [38, 47], "dcm_qt_tree": [38, 489, 496, 497], "0x10": [38, 126, 129, 217], "squar": [38, 43, 515], "bracket": [38, 43, 515], "around": [38, 513], "conveni": [38, 43, 48, 126, 489, 505, 510, 516], "cannot": [38, 42, 82, 166, 199, 455, 459, 489, 507, 513, 517], "retriev": [38, 110, 111, 112, 115, 116, 117, 118, 120, 121, 122, 125, 126, 129, 489, 502, 515, 516], "12345": [38, 129], "member": 38, "numer": [38, 166, 168, 475, 489, 493, 502, 507, 509], "begin": [38, 98, 136, 161], "Or": [38, 519], "beam1": 38, "wai": [38, 39, 40, 45, 47, 48, 50, 129, 489, 495, 512, 515, 516, 517, 519, 521], "thing": [38, 47, 514, 515], "much": [38, 459, 489, 492, 495, 496, 504], "harder": 38, "realli": [38, 489, 492, 501], "0x300a": 38, "0xb0": 38, "0xc2": 38, "rememb": [38, 43, 47], "exact": [38, 451, 452, 454, 455], "handi": 38, "dir": [38, 40, 129, 489, 495, 508, 514, 521], "dure": [38, 43, 107, 489, 508, 513, 514], "session": [38, 39, 40, 43, 129, 514], "prompt": 38, "pat": 38, "patientsetupsequ": [38, 40], "patientsex": [38, 129], "anywher": [38, 515], "insensit": [38, 129], "_dicom_dict": 38, "necessari": [38, 39, 46, 138, 140, 456, 517, 522], "add_dict_entri": [38, 43, 109, 489, 498, 501], "similarli": [38, 450, 515], "hood": 38, "offici": [38, 110, 111, 112, 113, 114, 115, 116, 123, 124, 125, 126, 423, 489, 495, 496, 515, 522], "reload": 38, "0x0010": [38, 129, 217, 515], "softwarevers": 38, "0x0018": 38, "0x1020": 38, "pixel_byt": 38, "175": 38, "166": 38, "203": 38, "207": 38, "216": 38, "186": 38, "183": 38, "157": 38, "181": 38, "184": 38, "171": 38, "152": 38, "164": 38, "235": 38, "906": 38, "910": 38, "923": 38, "922": 38, "929": 38, "927": 38, "914": 38, "954": 38, "938": 38, "942": [38, 489, 502], "925": [38, 515], "905": [38, 48], "959": 38, "916": [38, 489, 492], "911": 38, "904": 38, "909": 38, "int16": [38, 48, 49, 522], "extens": [38, 75, 130, 489, 500, 507], "effect": [38, 140, 448], "behavior": [38, 39, 52, 81, 82, 93, 129, 489, 496, 500, 504, 505], "enforc": [38, 44, 199, 489, 495], "expect": [38, 200, 208, 210, 213, 214, 489, 499, 501, 505, 509, 513], "t1": 38, "0x00100010": [38, 126, 129], "equival": [38, 129, 214, 489, 499], "t2": 38, "t3": 38, "t4": 38, "portion": 38, "is_priv": [38, 126, 165, 216, 423, 489, 498], "odd": [38, 129, 132, 200, 214, 216, 489, 499, 508, 515], "prettier": 38, "select": [38, 129, 139], "There": [39, 45, 46, 48, 489, 500, 513, 514, 515, 516, 522], "against": [39, 126, 166, 489, 494, 505], "turn": [39, 91, 157, 489, 505], "enabl": [39, 90, 129], "reading_validation_mod": [39, 52, 73, 74, 76, 92, 127, 129, 489, 508], "writing_validation_mod": [39, 52, 76, 489, 508], "newli": [39, 129, 489, 504], "ignor": [39, 52, 73, 81, 82, 109, 126, 129, 170, 476, 486, 489, 503, 507, 510, 514], "rais": [39, 52, 73, 74, 76, 78, 79, 81, 82, 94, 95, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 127, 129, 131, 132, 133, 140, 142, 147, 149, 156, 158, 161, 166, 174, 175, 177, 190, 199, 200, 208, 209, 210, 211, 212, 213, 214, 219, 448, 459, 464, 466, 478, 486, 489, 493, 494, 499, 501, 502, 505, 507, 508, 510, 515, 517, 520], "As": [39, 42, 43, 515, 521], "suggest": [39, 512, 513, 514], "except": [39, 43, 47, 48, 52, 73, 81, 82, 83, 94, 95, 149, 164, 166, 190, 199, 219, 486, 489, 492, 494, 497, 498, 501, 502, 505, 507, 508, 513, 515, 517, 520], "special": [39, 56, 486, 489, 496], "avoid": [39, 101, 157, 174, 450, 489, 501, 502, 505, 517], "invalid": [39, 52, 73, 74, 82, 86, 87, 133, 214, 448, 489, 501, 505, 507, 509, 510], "legaci": 39, "strictli": [39, 46], "adher": 39, "guarante": [39, 42, 43], "predefin": 39, "That": [39, 43], "local": [39, 66, 104, 489, 508, 513, 514, 515, 519], "balanc": 39, "evolut": 39, "break": [39, 489, 505, 517], "sometim": [39, 43, 489, 500, 510], "improv": [39, 489, 496, 499, 500, 507, 509, 512], "protect": 39, "upcom": [39, 93], "compat": [39, 41, 177, 489, 492, 493, 495, 496, 497, 498, 510, 519], "next": [39, 43, 93, 129, 157, 166, 167, 489, 492, 505, 517, 522], "simplest": [39, 517, 519], "pydicom_futur": [39, 489, 505], "temporarili": 39, "linux": [39, 489, 498, 514, 519], "future_behavior": [39, 486, 489, 505], "again": [39, 40, 50, 513, 517], "anoth": [39, 207, 214, 489, 505, 515, 520], "txt": [39, 515], "virtual": [39, 519], "brief": 40, "overview": [40, 517], "pure": 40, "report": [40, 489, 502, 512, 518], "radiotherapi": [40, 164], "easi": [40, 48], "complex": [40, 48], "natur": 40, "helper": [40, 132], "supin": 40, "prone": 40, "hfp": 40, "rtplan2": 40, "fetch": [40, 41, 48, 520], "0182": 40, "01b2": 40, "techniqu": 40, "patientposit": 40, "thorough": 40, "server": [40, 514], "pynetdicom": 40, "primarili": [40, 489, 493], "design": [40, 50, 521], "let": [40, 41, 489, 502, 513, 514, 515, 517, 520], "wherev": 40, "alter": [40, 50], "intellig": 40, "decompress": [40, 41, 42, 129, 211, 489, 498, 502, 519, 520], "onc": [40, 41, 43, 79, 107, 109, 513, 514, 520, 521], "kind": [40, 43], "discuss": [40, 513, 517], "question": [40, 512], "give": [40, 459, 489, 491, 492, 515, 520], "feedback": [40, 489, 496], "tracker": [40, 512, 513], "major": [40, 44, 93, 505], "fix": [40, 157, 497, 512, 513, 515], "announc": [40, 94, 95], "ll": [41, 513, 514, 515, 520, 522], "reli": [41, 42, 77], "separ": [41, 98, 126, 129, 136, 137, 456, 489, 492, 493, 520], "encapsul": [41, 48, 129, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 486, 489, 490, 500, 505], "amount": [41, 129, 208, 520, 522], "too": [41, 129, 132, 177, 478, 489, 499, 501, 502, 512], "extend": [41, 42, 129, 136, 137, 215, 489, 505, 520], "relev": [41, 175, 176, 177, 513], "encap": [41, 164, 486, 489, 498, 500, 520], "encapsulate_extend": [41, 136, 489, 505, 520], "jpeg2000lossless": [41, 520], "third_party_compression_func": [41, 520], "appropri": [41, 47, 48, 129, 161, 177, 199, 212, 480, 520], "ct_compressed_bas": [41, 520], "extendedoffsett": [41, 137, 520], "extendedoffsettablelength": [41, 137, 520], "ct_compressed_ext": [41, 520], "nativ": [41, 426, 520], "ct_rle_lossless": [41, 129, 520], "encoding_plugin": [41, 129, 147, 520], "Will": [41, 107], "implicitli": [41, 520], "done": [41, 513, 514, 515, 520], "explicitli": [41, 47, 48, 85, 489, 500, 507, 517, 520], "jpeg2k": [41, 66, 489, 500, 520], "us1_rl": 41, "j2k": [41, 489, 510], "up": [41, 47, 48, 129, 166, 167, 174, 177, 212, 448, 456, 489, 492, 496, 498, 513, 514, 515, 518, 519, 520], "abl": [42, 43, 489, 504, 510, 516, 517, 520, 522], "ideal": 42, "jpeg_l": [42, 129, 209, 489, 498], "libjpeg": [42, 519], "openjpeg": [42, 519], "capac": 42, "mention": [42, 515], "Be": 42, "verifi": [42, 489, 495], "purpos": 42, "far": [42, 126], "deflat": [42, 210, 423, 489, 504], "57": [42, 139, 214, 222, 317, 319, 489, 500, 505, 510], "sv1": [42, 214, 489, 504], "70": [42, 139, 214, 222, 301, 318, 319, 489, 504, 505, 510], "81": [42, 49, 139, 214, 222, 315, 316, 359, 489, 493], "92": [42, 139, 222, 310, 311, 489, 499, 500], "93": [42, 49, 139, 222, 309, 311, 489, 494, 500], "jpegimageplugin": 42, "jpeg2kimageplugin": 42, "5x": [42, 489, 507], "faster": [42, 489, 492, 504, 507], "adapt": [42, 489, 500], "well": [43, 48, 50, 166, 177, 201, 214, 489, 492, 493, 495, 502, 513, 515, 519], "v1": [43, 489, 499, 500, 501, 522], "easier": [43, 130, 489, 510, 514], "outlin": 43, "preced": 43, "reserv": 43, "thu": [43, 489, 490], "necessarili": [43, 47], "enclos": 43, "clear": [43, 126, 129, 166], "0x00091001": 43, "privateblock": [43, 129, 486], "0x0009": [43, 129], "compani": 43, "accomplish": 43, "0x000b": 43, "000b": 43, "add_new_priv": [43, 129, 489, 510], "latest": [43, 519], "encount": [43, 86], "newer": 43, "common": [43, 45, 49, 50, 73, 489, 500, 517, 522], "handl": [43, 44, 48, 50, 73, 95, 126, 129, 173, 191, 482, 489, 490, 493, 495, 497, 498, 499, 500, 501, 502, 504, 505, 507, 508, 509, 510, 515, 516, 519], "0x888800001": 43, "somenewtag": 43, "analog": [43, 129], "0x004100001": 43, "lut": [44, 46, 201, 202, 203, 204, 205, 206, 214, 489, 502, 504, 505, 507], "voi": [44, 204, 205, 206, 214, 489, 502, 505], "overlai": [44, 48, 66, 94, 129, 214, 482, 486, 489, 502, 505, 510, 515], "overlay_arrai": [44, 94, 129, 489, 502], "precondit": 44, "third": [44, 456, 519], "parti": [44, 456, 519], "pil": [44, 489, 492, 500], "wxpython": [44, 489, 492], "best": [44, 66], "practic": [44, 66, 166], "futur": [44, 93, 129, 147, 489, 495, 505, 521], "proof": [44, 93], "fileread": [45, 67, 197, 486, 514, 515], "fine": 45, "read_parti": [45, 67, 156, 197, 515], "preexist": 45, "mainli": [46, 129, 489, 496], "concern": 46, "often": [46, 48, 107, 516], "desir": [46, 199, 207, 214], "sever": [46, 52, 489, 496, 498], "stdlib": 46, "2d": [46, 489, 505], "axesimag": 46, "thank": [46, 489, 492, 495], "roi": 46, "key": 46, "pydicom_tkint": 46, "contrib": [46, 492, 512], "come": 46, "photoimag": 46, "pydicom_pil": 46, "imview": 46, "60xx": [47, 94, 200, 214, 482, 489, 502, 515], "3000": [47, 94, 129, 200, 202, 203, 214, 482, 489, 502, 515], "6000": 47, "6002": 47, "601e": 47, "0x6000": [47, 200, 515], "0x3000": 47, "29282": 47, "tend": [47, 519], "lazi": 47, "unpack": [47, 214, 475, 489, 500, 508], "uint8": [47, 201, 202, 203, 204, 205, 214], "484": 47, "align": 47, "pack_bit": [47, 214, 489, 500, 505], "numpy_handl": [47, 94, 95, 489, 507], "packed_byt": 47, "temp": [47, 48], "reduc": [47, 48, 168, 207, 214, 489, 500, 505, 510, 517, 520], "512x512": [47, 48], "256x256": [47, 48], "bulk": [48, 126, 129, 486, 489, 502, 503, 506, 516], "although": [48, 166, 517], "almost": 48, "parametr": [48, 513], "map": [48, 126, 129, 164, 514], "floatpixeldata": [48, 214, 489, 507], "doublefloatpixeldata": [48, 214, 489, 507], "interchang": [48, 517], "mr_small": [48, 66], "x89": 48, "x03": 48, "xfb": 48, "xcb": 48, "xeb": 48, "xf9": 48, "x02": 48, "x94": 48, "x7f": 48, "immedi": 48, "varieti": 48, "broken": 48, "fragment": [48, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 489, 502], "1227": 48, "302": 48, "304": 48, "328": 48, "628": 48, "770": 48, "907": 48, "298": 48, "331": 48, "355": 48, "498": [48, 362, 363, 448, 489, 499], "566": 48, "706": 48, "280": 48, "285": 48, "334": 48, "431": 48, "1094": 48, "1068": 48, "1083": 48, "339": 48, "377": 48, "413": 48, "1318": 48, "1346": 48, "1336": 48, "378": 48, "374": 48, "422": 48, "1369": 48, "1129": 48, "862": 48, "straightforward": 48, "particularli": [48, 50], "300": 48, "shrunk": 48, "apply_color_lut": [48, 214, 486, 489, 502], "palette_color": [48, 66], "pet": [48, 201, 214], "possibli": [48, 129], "physic": [48, 517], "quantiti": [48, 481, 522], "hounsfield": 48, "unit": [48, 129, 156, 200, 214, 481, 513, 522], "apply_modality_lut": [48, 204, 205, 206, 214, 486, 489, 502, 504], "hu": 48, "apply_voi_lut": [48, 214, 486, 489, 502, 504, 505], "voic": 49, "audio": [49, 522], "lead": [49, 52, 66, 451, 452, 461, 489, 493, 498, 509, 522], "ecg": [49, 66, 522], "5400": [49, 129, 481, 522], "consist": [49, 130, 177, 489, 495, 514, 520, 522], "synchronis": [49, 522], "003a": [49, 129, 481, 522], "001a": 49, "waveformdata": [49, 522], "240000": [49, 522], "multiplex_1": 49, "112": 49, "25": [49, 385, 448, 486], "68": [49, 396, 416, 417], "106": [49, 222, 338, 339, 340], "62": 49, "37": 49, "131": [49, 226], "137": 49, "10000": [49, 522], "multiplex_2": 49, "1200": [49, 489, 505, 522], "multiplex_arrai": [49, 129, 481, 489, 505, 522], "55": [49, 489, 492], "65": [49, 240], "85": 49, "60": [49, 489, 496, 507], "110": [49, 489, 495], "coupl": [50, 517], "truli": 50, "certain": [50, 129, 214, 514, 515], "tool": [50, 489, 510], "look": [50, 175, 176, 513, 514, 515], "approxim": 50, "especi": [50, 513], "tricki": 50, "de": 50, "awar": [50, 517], "524288": 50, "bigger": [50, 489, 504], "potenti": 50, "disadvantag": 50, "sai": [50, 513, 515], "wrote": 50, "quit": [50, 489, 492, 513], "switch": [50, 86, 489, 493, 495, 497, 502, 504, 507, 509, 513, 514], "individu": [50, 207, 214, 456, 489, 495, 505, 507], "code_fil": 50, "previou": [50, 167, 168, 489, 495, 498, 504, 505], "certainli": 50, "difficult": [50, 513], "singleton": 52, "infer_sq_for_un_vr": [52, 489, 508], "undefin": [52, 126, 140, 154, 170, 177, 489, 494, 505, 508], "conform": [52, 126, 129, 166, 169, 177, 190, 197, 213, 448, 489, 498, 500, 501, 515, 517, 520], "failur": [52, 489, 504, 513], "longer": [52, 79, 126, 210, 489, 499, 500, 502, 505, 507, 510, 517], "bypass": [52, 147], "dataelem": [56, 75, 129, 158, 176, 192, 193, 480, 486, 489, 501, 504, 515], "dataelement_from_raw": [56, 515], "rawdatael": [56, 88, 127, 129, 130, 131, 154, 158, 188, 480], "tag_in_except": 56, "tupletag": [56, 489, 492], "convert_ae_str": 56, "convert_atvalu": 56, "convert_da_str": 56, "convert_ds_str": 56, "convert_dt_str": 56, "convert_is_str": 56, "convert_numb": [56, 175, 176], "convert_obvalu": 56, "convert_owvalu": 56, "convert_pn": 56, "convert_single_str": 56, "convert_sq": 56, "convert_str": 56, "convert_tag": 56, "convert_text": 56, "convert_tm_str": 56, "convert_ui": 56, "convert_un": 56, "convert_ur_str": 56, "convert_valu": 56, "multiv": [56, 486, 515], "is_valid_d": [56, 489, 507], "format_number_as_d": [56, 489, 507], "isfloat": [56, 489, 509], "rt_plan": 66, "rt_dose": [66, 517], "rtdose": 66, "rt_ss": 66, "rtstruct": 66, "siemen": 66, "withoverlai": 66, "waveform_ecg": 66, "us1_uncr": 66, "obxxxx1a": 66, "us1_j2kr": 66, "data_element_gener": [67, 157], "data_element_offset_to_valu": 67, "read_deferred_data_el": 67, "read_file_meta_info": [67, 130], "read_preambl": [67, 197, 515], "read_sequ": 67, "read_sequence_item": 67, "filewrit": [67, 129, 133, 486, 515], "correct_ambiguous_vr": 67, "correct_ambiguous_vr_el": 67, "multi_str": [67, 489, 510], "write_atvalu": 67, "write_da": 67, "write_dataset": 67, "write_data_el": 67, "write_dt": 67, "write_file_meta_info": [67, 177, 515], "write_numb": 67, "write_number_str": 67, "write_obvalu": 67, "write_owvalu": 67, "write_pn": [67, 489, 499], "write_sequ": 67, "write_sequence_item": 67, "write_str": 67, "write_text": 67, "write_tm": 67, "write_ui": 67, "write_un": 67, "dicombytesio": 67, "dicomio": [67, 145, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "fileutil": [67, 486], "absorb_delimiter_item": 67, "find_byt": [67, 172, 173, 489, 496], "find_delimit": [67, 173], "length_of_undefined_length": 67, "read_undefined_length_valu": 67, "mistak": 73, "stand": 73, "alon": 73, "respect": [73, 90, 489, 499], "lookuperror": [73, 74], "delimit": [74, 139, 140, 141, 170, 172, 173, 174, 177, 178, 489, 505, 507], "reset": [74, 93, 96], "loss": [74, 76, 451, 452, 459, 489, 505], "unicodedecodeerror": 74, "dicom_character_set": 75, "unicodeencodeerror": 76, "precis": [77, 85, 214, 451, 452, 456, 459, 489, 507], "use_decimal_boolean": 78, "valueerror": [78, 79, 81, 82, 104, 105, 106, 107, 108, 109, 129, 131, 132, 133, 140, 142, 158, 166, 177, 190, 200, 210, 213, 214, 448, 459, 464, 466, 478, 489, 510, 515, 517, 520], "use_ds_numpi": [78, 464, 486, 489, 504], "use_numpi": 79, "__setattr__": 81, "camel": [81, 489, 505], "neither": [81, 82, 166, 202, 203, 205, 214], "nor": [81, 82], "citizen": [81, 126, 129, 515], "ok": [81, 82, 166, 513], "patientsnam": [81, 82], "1895": 81, "__contains__": [82, 489, 505], "0x100100010": 82, "traceback": [82, 219, 515, 517, 520], "recent": [82, 513, 514, 515, 517, 520], "stdin": [82, 515, 517, 520], "494": 82, "msg": [82, 515], "exc": 82, "occur": [83, 84, 489, 502, 513, 517], "digit": [85, 132, 191, 522], "round": [85, 214], "writer": 86, "elementcallback": 88, "callabl": [88, 126, 129, 154, 157, 160, 164, 199], "everi": [88, 147, 214, 517, 522], "data_element_callback": [89, 96, 486], "anymor": 90, "manual": 90, "debug_on": 91, "default_handl": 91, "log": [91, 129, 489, 495, 508, 513], "logger": [91, 489, 496], "streamhandl": 91, "deprec": [92, 93, 94, 489, 494, 495, 499, 500, 501, 504, 505, 507, 508, 509], "enable_futur": 93, "imit": 93, "becom": [93, 489, 495, 505, 513, 514, 517], "emul": [93, 129], "invalid_keyword_behavior": [93, 486, 489, 505], "invalid_key_behavior": [93, 486, 489, 505], "extract": [94, 95], "get_overlay_arrai": [94, 200], "package_import_nam": 94, "handler_nam": [94, 129], "fail": [94, 95, 489, 492, 493, 498, 513, 514, 517], "gdcm_handler": 95, "pillow_handl": [95, 513], "jpeg_ls_handl": 95, "pylibjpeg_handl": 95, "rle_handl": [95, 489, 508, 510], "convert_pixel_data": [95, 129], "shall": [95, 129, 138, 139, 140, 142, 143, 144, 154, 177, 190], "supports_transfer_syntax": [95, 208, 209, 210, 211, 212, 213], "transfer_syntax": [95, 208, 209, 210, 211, 213], "get_pixeldata": [95, 208, 209, 210, 211, 212, 213], "1d": [95, 200, 210, 211, 212, 213, 214], "reshap": [95, 200, 212, 214], "dimens": [95, 212], "needs_to_convert_to_rgb": [95, 208, 209, 210, 211, 212, 213], "colourspac": [95, 489, 507], "refus": 95, "fact": [95, 515], "notimplementederror": [95, 129, 209, 210, 211, 213, 214], "global": [97, 489, 508], "ds_decim": [99, 486, 489, 504], "ds_numpi": [100, 486], "absolut": [102, 103, 104, 105, 165, 166, 489, 510], "charset": [102, 486, 489, 509], "extern": [104, 489, 505, 507], "datastor": 104, "0x10021001": [106, 107], "teston": [106, 107], "0x10021002": [106, 107], "testtwo": [106, 107], "retir": [107, 114, 126, 175, 176, 222, 423, 489, 505], "perman": 107, "0x00410001": 108, "0x00410002": 108, "ltd": 108, "whose": [110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 125, 456, 459, 513], "keyerror": [110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 127, 129, 515], "get_private_entri": 116, "get_entri": 117, "grouplength": 118, "mask": 119, "file_value_tel": 126, "is_undefined_length": [126, 129, 177, 489, 502], "already_convert": 126, "validation_mod": [126, 423, 450, 451, 452, 454, 455, 456, 489, 510], "joan": [126, 129], "Its": 126, "descripwidth": 126, "35": [126, 129, 168, 288], "0xffffffffl": 126, "ie": 126, "maxbytestodisplai": [126, 489, 501], "showvr": 126, "backslash": [126, 129, 456, 476, 489, 490, 491, 507], "intern": [126, 129, 154, 496], "0xffffffff": 126, "empty_value_for_vr": 126, "empty_valu": 126, "classmethod": [126, 129, 456], "from_json": [126, 129, 489, 502, 505, 516], "dataset_class": 126, "value_kei": 126, "bulk_data_uri_handl": [126, 129, 489, 505, 516], "json": [126, 129, 216, 489, 501, 502, 506, 507, 518], "inlinebinari": [126, 129], "bulkdatauri": [126, 129, 516], "dicomweb": [126, 129, 516], "wado": [126, 129, 516], "is_empti": 126, "ret": 126, "repval": [126, 129], "to_json": [126, 129, 489, 503, 516], "bulk_data_threshold": [126, 129, 489, 503, 516], "bulk_data_element_handl": [126, 129, 516], "dump_handl": [126, 129], "base64": [126, 129, 516], "dump": [126, 129], "to_json_dict": [126, 129, 489, 503, 509, 516], "18": [126, 129, 419, 489, 498, 516], "validate_valu": 126, "raw_data_el": [127, 480], "belong": [127, 129, 165, 166, 177], "value_tel": 128, "is_raw": 128, "undecod": 128, "alia": [128, 489, 505], "mutablemap": [129, 130, 131], "mutabl": 129, "0x00100020": 129, "0x0030": 129, "0x00100030": 129, "linac": 129, "co": [129, 522], "son": 129, "daughter": 129, "0x0041": 129, "john": [129, 456], "0041": 129, "get_private_item": 129, "iteral": [129, 489, 491], "jsonmodel": 129, "ds2": 129, "default_element_format": 129, "default_sequence_element_format": 129, "indent_char": [129, 167], "write_like_origin": [129, 177, 515], "element_offset": [129, 132], "0xffff": [129, 164, 489, 499], "0x00": [129, 136, 138, 177, 472], "0xff": 129, "decoding_plugin": [129, 147], "encapsulate_ext": 129, "tri": [129, 147], "placehold": [129, 147], "unabl": [129, 214, 515, 517, 520], "runtimeerror": [129, 212], "shallow": 129, "state": [129, 183, 516], "alphabet": [129, 456, 489, 509], "__getitem__": [129, 515], "unconvert": 129, "increas": [129, 489, 492, 509], "ensure_file_meta": 129, "fix_meta_info": [129, 489, 500], "enforce_standard": [129, 133, 190, 515], "ambigu": [129, 175, 176, 489, 498, 500, 501, 505], "therefor": [129, 199, 214], "incorrect": [129, 139, 147, 489, 493, 499, 501, 502, 510], "validate_file_meta": [129, 486, 515], "formatted_lin": [129, 489, 491], "element_format": 129, "sequence_element_format": 129, "indent_format": 129, "json_dataset": 129, "bytearrai": [129, 214], "obj": 129, "get_item": 129, "defer": [129, 158, 489, 491, 495, 502, 508, 515], "group_dataset": 129, "is_original_encod": 129, "dict_item": 129, "unlik": 129, "flatten": 129, "dict_kei": 129, "pop": [129, 489, 501], "tagtyp": 129, "combin": [129, 217, 515, 522], "popitem": 129, "unrealist": 129, "free": 129, "associ": 129, "pathlik": [129, 130, 156, 158, 159, 166, 177, 489, 504], "binaryio": [129, 130, 152, 154, 156, 157, 158, 160, 161, 162, 163, 170, 171, 172, 173, 174, 177], "wrapper": [129, 489, 504], "set_original_encod": 129, "character_encod": 129, "optim": 129, "setdefault": [129, 489, 501, 505], "0x00100040": 129, "suppress_invalid_tag": [129, 489, 509], "threshold": 129, "inlin": [129, 516], "drop": [129, 489, 504, 505], "bubbl": 129, "my_json_dump": 129, "sort_kei": 129, "trait_nam": 129, "ipython": [129, 489, 490], "autocomplet": 129, "valuesview": 129, "visit": [129, 513, 514], "0210": [129, 481, 522], "0211": 129, "filename_or_obj": [130, 158], "prepend": 130, "0x0002": [130, 515], "fileobj_typ": [130, 158], "timestamp": [130, 158], "modif": [130, 513, 515, 517], "overrid": [131, 164, 450, 489, 500, 517], "super": 131, "typeerror": [131, 156, 199, 208, 209, 489, 499, 505, 515], "init_valu": 131, "private_creator_el": 132, "block_start": 132, "low": [132, 516], "get_tag": 132, "continu": [135, 489, 490, 507], "concaten": [135, 142], "togeth": [135, 136, 178], "has_bot": [136, 137], "frame1": 136, "frame2": 136, "exce": [136, 137], "31": 136, "circumst": [136, 137], "strongli": [136, 166, 517], "nr_fragment": [138, 144], "marker": [138, 139, 161, 174, 489, 502, 507], "null": [138, 200, 214, 472], "bytestream": [139, 141], "nr_frame": [139, 141], "span": 139, "predict": 139, "Near": 139, "attempt": [139, 176, 481, 489, 498, 507, 515], "boundari": 139, "eoi": [139, 489, 502], "eoc": [139, 489, 502], "0xffd9": 139, "hasn": [139, 513, 514], "stream": [140, 145, 177, 489, 510, 513], "fffe": [140, 142, 143, 144], "e000": [140, 142, 143, 144], "e0dd": 140, "0x00000000": [140, 142], "presenc": [140, 201, 214, 515], "absenc": 140, "fe": 142, "e0": 142, "08": 142, "measur": [142, 164], "bot": 142, "ffee": 142, "itemis": 144, "factori": [147, 199, 218, 450, 489, 492, 507], "import_path": 147, "encode_pixel_data": 147, "modulenotfounderror": 147, "unavail": 147, "attributeerror": [147, 175, 177, 200, 208, 210, 212, 213, 489, 492, 508, 510], "aren": [147, 166, 515, 517], "uint16": [147, 201, 202, 203, 204, 205, 214], "iter_encod": [147, 520], "kwargs_from_d": 147, "missing_depend": 147, "nice": [147, 199, 513], "remove_plugin": 147, "appear": [149, 517], "dicm": [149, 161, 177, 190, 197, 515], "mayb": 149, "file_like_obj": 152, "textio": 152, "no_read": 152, "no_seek": 152, "whenc": 152, "no_writ": 152, "bytes_read": 152, "hold": [153, 177, 199, 215], "need_exact_length": 153, "eoferror": [153, 174], "read_beul": 153, "read_beu": 153, "read_be_tag": 153, "read_leul": 153, "read_leu": 153, "read_le_tag": 153, "write_ul": 153, "val": [153, 178, 215, 423, 450, 451, 452, 454, 455, 456, 459, 515], "write_u": 153, "write_beul": 153, "write_beu": 153, "write_leul": 153, "write_leu": 153, "write_tag": 153, "stop_when": [154, 157, 160], "defer_s": [154, 156, 157, 160, 174, 198, 489, 491], "specific_tag": [154, 156, 157, 160, 515], "read_data_el": 154, "stop_before_pixel": [156, 489, 492], "pars": [156, 160, 214, 486, 489, 490, 502, 504, 505], "context": [156, 219, 489, 498, 515], "tell": [156, 489, 491, 514, 517], "caller": [156, 489, 492], "respons": [156, 456, 516], "close": [156, 160, 489, 491, 492], "kb": 156, "stop": [156, 160, 489, 492], "subsequ": 156, "invaliddicomerror": [156, 161, 486, 489, 493, 515], "unsupport": [156, 208, 209, 210, 213], "condit": [156, 160, 489, 498], "bytelength": [157, 162], "parent_encod": [157, 189], "at_top_level": 157, "itemdelitertag": 157, "call_back": 157, "isn": [157, 214, 423, 448, 489, 501, 505, 510, 514, 515], "heurist": [157, 489, 498], "raw_data_elem": 158, "persist": 158, "st_mtime": 158, "oserror": 158, "meant": [159, 197], "quickli": [159, 517], "fileobj": [160, 515], "reach": [160, 172, 174], "assess": 164, "_define_assess": 164, "doc": [164, 514], "_define_encap_doc": 164, "fiduci": 164, "_define_generic_content_id": 164, "hang": 164, "protocol": 164, "_define_hanging_protocol": 164, "_define_imag": 164, "implant": [164, 166], "_define_impl": 164, "assi": 164, "_define_implant_assi": 164, "_define_implant_group": 164, "_define_key_object_doc": 164, "_define_palett": 164, "_define_pati": 164, "_define_empti": 164, "_define_present": 164, "_define_radiotherapi": 164, "_define_generic_cont": 164, "registr": 164, "_define_rt_dos": [164, 517], "_define_rt_plan": 164, "_define_rt_structure_set": 164, "treat": [164, 517], "_define_rt_treatment_record": 164, "_define_seri": 164, "spectroscopi": 164, "_define_spectroscopi": 164, "sr": [164, 456, 489, 507, 521], "_define_sr_docu": 164, "stereometr": 164, "_define_studi": 164, "surfac": 164, "_define_surface_scan": 164, "tract": 164, "1430": [164, 517], "my_record": 164, "offsetofthenextdirectoryrecord": 164, "recordinuseflag": 164, "offsetofreferencedlowerleveldirectoryent": 164, "directoryrecordtyp": [164, 166], "specificcharacterset": 164, "my_inst": 164, "add_custom": [164, 166, 517], "node": [165, 166, 167, 515], "recordnod": [165, 166, 486], "leaf": [165, 166, 167], "fileid": 165, "file_set": [165, 167], "for_addit": [165, 517], "for_mov": 165, "for_remov": 165, "is_stag": [165, 166, 517], "ds_or_path": 166, "cancel": 166, "directory_record": [166, 486, 517], "definit": [166, 177, 486, 489, 498, 522], "suitabl": [166, 201, 214, 519], "1400": [166, 517], "1410": [166, 517], "1420": [166, 517], "1500": [166, 489, 508], "1510": 166, "1511": [166, 489, 508], "1512": 166, "hierarchi": [166, 517], "privaterecorduid": 166, "leaf_nod": 166, "top_nod": 166, "ancestor": [166, 167, 175, 176], "due": [166, 489, 496, 507, 509, 513, 517], "force_implicit": 166, "1234567": 166, "7654321": 166, "include_orphan": 166, "raise_orphan": 166, "attach": 166, "imposs": 166, "orphan": 166, "use_exist": [166, 517], "backup": 166, "ptxxxxxx": 166, "stxxxxxx": 166, "sexxxxxx": 166, "imxxxxxx": 166, "xxxxxx": 166, "alphanumer": [166, 168, 489, 510], "paxxxxxx": 166, "p0xxxxxx": 166, "p1xxxxxx": 166, "p2xxxxxx": 166, "everyth": [166, 513, 517], "children": 167, "child": 167, "nearest": 167, "furthest": [167, 175, 176], "has_inst": 167, "amongst": 167, "sibl": 167, "is_root": 167, "prettifi": 167, "pretti": [167, 513], "record_typ": [167, 517], "revers": [167, 489, 502], "k": [168, 489, 510], "00010": 168, "00000000": 168, "00000001": 168, "00000002": 168, "_": [169, 514], "rel": [169, 489, 510], "bytes_to_find": 171, "read_siz": [171, 172, 173, 174], "found_at": 171, "routin": 173, "delimiter_tag": 174, "eof": 174, "dicond": [175, 176], "closest": [175, 176], "henc": 177, "profil": 177, "bytestr": [177, 214], "eeee": 177, "independ": 177, "preserv": [177, 489, 497, 504], "had": [177, 489, 500, 507, 513], "sensibl": 177, "is_undefined_length_sequence_item": 177, "put": 178, "swap": [183, 468], "rule": 188, "0017": 190, "send": [190, 513, 514], "struct_format": [192, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 477], "pare": 197, "down": [197, 513, 517], "fast": [197, 218], "conserv": 197, "approach": 197, "expr": 198, "type_constructor": [199, 515], "constructor": 199, "overlayrow": 200, "overlaycolumn": 200, "0015": 200, "numberofframesinoverlai": 200, "overlaybitsalloc": 200, "overlaybitposit": 200, "get_expected_length": [200, 214], "NOT": [200, 214], "0x6010": 200, "0x60ff": 200, "reshape_overlay_arrai": 200, "1201": [201, 214], "1203": [201, 214], "1221": [201, 214], "1223": [201, 214], "1204": [201, 214], "1224": [201, 214], "supplement": [201, 214], "hot_iron": [201, 214], "hot_metal_blu": [201, 214], "pet_20_step": [201, 214], "spring": [201, 214], "summer": [201, 214], "fall": [201, 214], "winter": [201, 214], "rgba": [201, 214], "3rd": [201, 202, 203, 204, 205, 214], "colour": [201, 214], "3002": [202, 203, 204, 205, 214, 489, 502], "float64": [202, 203, 205, 206, 214, 464], "3010": [204, 205, 214], "apply_window": [204, 205, 214, 486, 489, 505], "prefer_lut": [205, 214, 489, 505], "apply_voi": [205, 206, 214, 486, 489, 505], "per_fram": [207, 214, 489, 507], "iec": [207, 214, 311, 316, 319, 448], "10918": [207, 214, 319, 489, 507], "2012": [207, 214], "itu": [207, 214, 448], "871": [207, 214], "create_data_el": 208, "create_imag": 208, "volum": 208, "importerror": [208, 209, 211, 464, 466, 489, 506, 513], "affect": [208, 209, 210, 211, 212, 213, 214, 513, 514], "should_change_photometricinterpretation_to_rgb": [208, 209, 210, 211, 212, 213], "pyjpegl": 209, "planarconfigur": [210, 212, 213, 214, 489, 498], "numberoffram": [210, 212, 213, 214, 489, 510], "read_onli": 210, "resampl": 210, "writeabl": 210, "as_arrai": [212, 214], "generate_fram": 212, "tsyntax": 212, "rle_segment_ord": 213, "suppos": 213, "msb": 213, "lsb": 213, "dtype_corrected_for_endian": 214, "numpy_dtyp": 214, "expand_ybr422": [214, 489, 508], "subsampl": 214, "horizont": 214, "halv": 214, "cb": 214, "get_image_pixel_id": 214, "get_j2k_paramet": 214, "codestream": 214, "15444": [214, 311], "is_sign": 214, "get_nr_fram": 214, "conjunct": 214, "uint": 214, "sake": 214, "pixel_dtyp": 214, "as_float": 214, "reshape_pixel_arrai": 214, "unpack_bit": [214, 489, 508], "is_private_cr": 216, "json_kei": [216, 489, 509], "ggggeeee": 216, "meaningless": 216, "arg2": [217, 489, 492], "0x00100015": 217, "0x50": 217, "0x0015": 217, "group_elem": 218, "safe": 218, "71": 220, "103": [222, 331, 332, 340, 489, 495], "108": [222, 295, 340, 456], "78": [225, 303, 320, 325, 354, 413, 415, 436, 489, 493], "19": 234, "200": [236, 238, 371, 440, 441], "69": 241, "39": [242, 448], "34": [245, 377, 379], "33": 246, "82": [249, 489, 493], "501": [250, 251, 252, 253, 254, 255, 256], "66": [258, 397, 407, 411, 412, 418, 421], "601": [266, 267], "130": 279, "23": 280, "22": [281, 394], "76": 285, "43": [292, 489, 492], "38": 297, "45": 300, "201": 306, "14495": 316, "59": 321, "mpeg": [340, 489, 505], "79": [343, 489, 493], "826": [362, 363, 448, 489, 502], "3680043": [362, 363, 448], "73": [365, 489, 492], "74": 368, "compil": [373, 374], "regex": [373, 374], "67": [398, 446], "72": [409, 489, 492], "human": [423, 456, 515], "friendli": [423, 515, 517], "subclass": [423, 489, 499, 510], "is_transfer_syntax": 423, "is_compress": 423, "is_defl": 423, "is_encapsul": 423, "encasul": 423, "is_valid": 423, "entropy_src": [448, 489, 510], "uuid": 448, "hash": [448, 489, 501, 507], "randbelow": [448, 489, 510], "54": [448, 489, 510], "uuid4": 448, "sha512": 448, "determinist": 448, "unrecover": 448, "random": [448, 489, 510], "secret": 448, "22463838056059845879389038257786771680": 448, "167161297070865690102504091919570542144": 448, "lorem": 448, "ipsum": 448, "87507166259346337659265156363895084463": 448, "9834": 448, "667": 448, "immut": [449, 453, 457, 489, 501], "auto_format": [450, 451, 452, 489, 507], "__new__": 450, "carri": [450, 489, 497], "penalti": 450, "clean": [450, 489, 498, 513, 514], "satisfi": [451, 452, 459], "construct": [451, 452, 456, 489, 495, 496, 507], "23e2": 451, "123": [451, 516], "rewrit": [454, 455], "uncommon": 455, "original_str": [456, 489, 500], "from_named_compon": [456, 489, 507], "from_named_components_veterinari": [456, 489, 507], "ideograph": 456, "phonet": 456, "absent": [456, 522], "demand": 456, "famili": 456, "family_nam": [456, 489, 507], "format_str": 456, "given_nam": [456, 489, 507], "middle_nam": 456, "name_prefix": 456, "name_suffix": 456, "family_name_ideograph": 456, "given_name_ideograph": 456, "middle_name_ideograph": 456, "name_prefix_ideograph": 456, "name_suffix_ideograph": 456, "family_name_phonet": 456, "given_name_phonet": 456, "middle_name_phonet": 456, "name_prefix_phonet": 456, "name_suffix_phonet": 456, "middl": 456, "addition": 456, "sect": 456, "adam": 456, "robert": 456, "quinci": 456, "rev": 456, "div": 456, "korean": [456, 489, 495], "\u6d2a": 456, "\u5409\u6d1e": 456, "\ud64d": 456, "\uae38\ub3d9": 456, "dr": 456, "chief": 456, "offic": 456, "responsible_party_nam": 456, "patient_nam": 456, "responsible_party_name_ideograph": 456, "patient_name_ideograph": 456, "responsible_party_name_phonet": 456, "patient_name_phonet": 456, "veterinari": 456, "OR": 456, "hors": 456, "abc": 456, "farm": 456, "fourth": 456, "fifth": 456, "truncat": [459, 489, 491], "retain": [459, 489, 507], "scientif": 459, "incur": 459, "furthermor": 459, "finit": 459, "inf": 459, "nan": 459, "caus": [459, 489, 491, 517], "fewer": 460, "byte_str": [461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "Not": [461, 462, 463, 464, 465, 466, 471, 472, 474, 477], "int64": 466, "use_is_numpi": [466, 486, 489, 504], "waveformbitsalloc": [481, 522], "waveformsampleinterpret": [481, 522], "sb": 481, "ub": 481, "ab": 481, "dev0": 486, "nov": 486, "convert_encod": 486, "decode_el": 486, "decode_byt": 486, "encode_str": 486, "allow_ds_float": [486, 489, 495], "assume_implicit_vr_switch": [486, 489, 507], "convert_wrong_length_to_un": [486, 489, 507], "data_element_callback_kwarg": 486, "debug": [486, 489, 495, 497], "enforce_valid_valu": [486, 489, 495, 501, 502, 505, 507, 508], "overlay_data_handl": [486, 489, 505, 510], "reset_data_element_callback": 486, "show_file_meta": [486, 489, 504], "apply_j2k_correct": [486, 489, 510], "get_charset_fil": 486, "get_palette_fil": [486, 489, 502], "apply_rescal": [486, 489, 505], "get_encod": 486, "generate_filenam": [486, 489, 510], "is_conformant_file_id": 486, "miscellan": 486, "misc": [486, 489, 498], "is_dicom": [486, 489, 498], "size_in_byt": 486, "upper": [489, 510], "gracefulli": [489, 505, 510], "1844": [489, 510], "read_fil": [489, 491, 492, 493, 498, 507, 510], "write_fil": [489, 498, 507, 510], "jpeglossless": [489, 505, 510], "jpeglosslesssv1": [489, 505, 510], "constant": [489, 505, 510, 522], "jpegbaselin": [489, 500, 505, 510], "jpegbaseline8bit": [489, 505, 510], "jpegextend": [489, 500, 505, 510], "jpegextended12bit": [489, 505, 510], "jpeglslossi": [489, 505, 510], "jpeglsnearlossless": [489, 505, 510], "jpeg2000multicomponentlossless": [489, 500, 505, 510, 513], "jpeg2000mclossless": [489, 505, 510], "jpeg2000multicompon": [489, 500, 505, 510, 513], "jpeg2000mc": [489, 505, 510], "jpeglossycompressedpixeltransfersyntax": [489, 505, 510], "jpegtransfersyntax": [489, 505, 510], "jpeglssupportedcompressedpixeltransfersyntax": [489, 505, 510], "jpeglstransfersyntax": [489, 505, 510], "jpeg2000compressedpixeltransfersyntax": [489, 505, 510], "jpeg2000transfersyntax": [489, 505, 510], "rlecompressedlosslesssyntax": [489, 505, 510], "rletransfersyntax": [489, 505, 510], "uncompressedpixeltransfersyntax": [489, 505, 510], "uncompressedtransfersyntax": [489, 505, 510], "pilsupportedcompressedpixeltransfersyntax": [489, 505, 510], "personnameunicod": [489, 504, 510], "rle_encode_fram": [489, 507, 510], "_storage_sopclass_uid": [489, 505, 510], "theoret": [489, 510], "1838265625": [489, 510], "1743": [489, 510], "parent_seq": [489, 510], "parent_dataset": [489, 510], "1773": [489, 510], "1481": [489, 510], "2023d": [489, 510], "1395": [489, 510], "multistr": [489, 510], "renam": [489, 490, 498, 504, 509, 510], "1752": [489, 510], "mpeg2mpmlf": [489, 510], "mpeg2mphlf": [489, 510], "mpeg4hp41f": [489, 510], "mpeg4hp41bdf": [489, 510], "mpeg4hp422df": [489, 510], "mpeg4hp423df": [489, 510], "mpeg4hp42stereof": [489, 510], "smptest211020uncompressedprogressiveactivevideo": [489, 510], "smptest211020uncompressedinterlacedactivevideo": [489, 510], "smptest211030pcmdigitalaudio": [489, 510], "confus": [489, 510], "disagre": [489, 510], "1689": [489, 510], "enum": [489, 508, 510], "1874": [489, 510], "1907": [489, 510], "secur": [489, 510], "escap": [489, 510], "1922": [489, 510], "deepcopi": [489, 507, 510], "1816": [489, 510], "folder": [489, 492, 510], "refactor": [489, 510], "ci": [489, 510], "dependabot": [489, 510], "commit": [489, 510], "ruff": [489, 510], "eol": [489, 509], "decemb": [489, 509], "1634": [489, 509], "1648": [489, 509], "1414": [489, 509], "cli": [489, 509], "1674": [489, 509], "1658": [489, 509], "1661": [489, 509], "highli": [489, 509], "1728": [489, 509], "1734": [489, 509], "pyproject": [489, 509], "toml": [489, 509], "1792": [489, 509], "2023b": [489, 509], "1803": [489, 509], "1632": [489, 509], "progress": [489, 509, 514], "bar": [489, 509], "1611": [489, 509], "crash": [489, 499, 508, 509], "1638": [489, 509], "extrem": [489, 509], "byteslengthexcept": [489, 509], "1683": [489, 509], "1670": [489, 509], "1693": [489, 509], "1680": [489, 509], "1702": [489, 509], "wrong": [489, 500, 501, 505, 509], "calcul": [489, 507, 509], "1667": [489, 509], "lutdata": [489, 509], "1747": [489, 509], "1738": [489, 509], "teardown": [489, 509], "pytest": [489, 509], "fork": [489, 509, 513, 514, 519], "charpyl": [489, 509, 519], "1788": [489, 509], "favor": [489, 494, 508], "1617": [489, 508], "1498": [489, 508], "resort": [489, 508], "slowest": [489, 508], "1487": [489, 508], "mitra": [489, 508], "1588": [489, 508], "pr": [489, 508, 513, 514], "1594": [489, 508], "1593": [489, 508], "introduc": [489, 508, 513], "2022a": [489, 508], "holog": [489, 508], "0019xx43": [489, 508], "rest": [489, 508, 514], "1565": [489, 508], "deep": [489, 508], "1571": [489, 508], "1581": [489, 508], "maco": [489, 508, 519], "1599": [489, 508], "bad": [489, 498, 508], "1596": [489, 508], "1606": [489, 508], "1609": [489, 508], "__eq__": [489, 499, 507], "operand": [489, 507], "1327": [489, 507], "__str__": [489, 499, 507, 515], "1262": [489, 507], "metadata": [489, 507], "2021b": [489, 507], "inherit": [489, 507], "silent": [489, 507], "highest": [489, 507], "init": [489, 507], "urllib": [489, 507], "1340": [489, 507], "1348": [489, 507], "optimis": [489, 507], "1361": [489, 507], "1372": [489, 507], "1438": [489, 507], "suppress": [489, 507], "1332": [489, 507], "1428": [489, 507], "1434": [489, 507], "pickl": [489, 498, 502, 507], "1278": [489, 507], "1312": [489, 507], "problem": [489, 507, 515], "workflow": [489, 507, 513, 514], "1341": [489, 507], "1338": [489, 507], "878": [489, 507], "1147": [489, 507], "1412": [489, 507], "expans": [489, 507], "linear": [489, 507], "1415": [489, 507], "1449": [489, 507], "rbg": [489, 507], "jpg": [489, 507], "app14": [489, 507], "1444": [489, 507], "1457": [489, 507], "1251": [489, 506], "1253": [489, 506], "1254": [489, 506], "distribut": [489, 493, 505, 519], "fly": [489, 505], "whenev": [489, 505], "disk": [489, 505], "rg1_unci": [489, 505], "1127": [489, 505], "1234": [489, 505], "1237": [489, 505], "1156": [489, 505], "__next__": [489, 505], "__iter__": [489, 490, 505, 515], "1103": [489, 502, 505], "1155": [489, 505], "1149": [489, 505], "2020d": [489, 505], "243": [489, 505], "alltransfersyntax": [489, 505], "commun": [489, 505], "1240": [489, 505], "1178": [489, 505], "1161": [489, 505], "multifram": [489, 505], "dicosquadrupoleresonanceqrstorag": [489, 505], "dicosquadrupoleresonancestorag": [489, 505], "1211": [489, 505], "1181": [489, 505], "1146": [489, 505], "optimist": [489, 505], "embed": [489, 505], "1140": [489, 505], "network": [489, 505], "connect": [489, 505], "1153": [489, 505], "1193": [489, 505], "1215": [489, 505], "restor": [489, 504], "old": [489, 490, 491, 495, 498, 504], "personname3": [489, 496, 501, 504], "alias": [489, 491, 504], "ismultivalu": [489, 501, 504], "1086": [489, 504], "replace_un_with_known_vr": [489, 504], "1067": [489, 504], "623": [489, 504, 511], "regress": [489, 503, 504, 513], "1038": [489, 504], "improp": [489, 502, 504], "3006": [489, 504], "1078": [489, 504], "1082": [489, 504], "1097": [489, 504], "915": [489, 502], "887": [489, 502, 515], "prevent": [489, 502], "894": [489, 502], "892": [489, 502], "truthi": [489, 502], "891": [489, 502], "899": [489, 502], "968": [489, 502], "896": [489, 502], "unpickl": [489, 502], "947": [489, 502], "951": [489, 502], "1101": [489, 502], "ir": [489, 502], "917": [489, 502], "propag": [489, 502], "971": [489, 502], "822": [489, 502], "263": [489, 502], "273": [489, 502], "994": [489, 502], "generate_pixel_data": [489, 502], "685": [489, 502], "693": [489, 502], "932": [489, 502], "toler": [489, 491, 502], "940": [489, 502], "unexpect": [489, 502], "848": [489, 502], "981": [489, 502], "537": [489, 502], "452": [489, 502], "2019e": [489, 502], "get_frame_offset": [489, 502], "page": [489, 498, 501, 512, 513, 514, 519], "timelin": [489, 501], "789": [489, 501], "image_handl": [489, 500, 501], "deferreddatael": [489, 500, 501], "760": [489, 501], "isstringorstringlist": [489, 501], "isstr": [489, 501], "666": [489, 501], "799": [489, 501], "gzip": [489, 495, 501], "753": [489, 501], "730": [489, 501], "v": [489, 501], "820": [489, 501], "864": [489, 501], "819": [489, 501], "850": [489, 501], "838": [489, 501], "757": [489, 501], "785": [489, 501], "788": [489, 501], "810": [489, 501], "815": [489, 501], "804": [489, 501], "mix": [489, 501], "835": [489, 501], "excess": [489, 501], "791": [489, 501], "ji": [489, 501], "856": [489, 501], "fallback": [489, 500], "722": [489, 500], "jpegbaselinelossy8bit": [489, 500], "726": [489, 500], "jpegbaselinelossy12bit": [489, 500], "jpeg2000lossi": [489, 500], "inequ": [489, 499, 500], "matter": [489, 500, 515], "291": [489, 500], "numpypi": [489, 500], "pypi": [489, 498, 500, 519], "2018c": [489, 500], "677": [489, 500], "624": [489, 500], "696": [489, 500], "584": [489, 500], "715": [489, 500], "716": [489, 500], "695": [489, 500], "737": [489, 500], "jpeglosslessp14": [489, 500], "713": [489, 500], "small": [489, 492, 498, 500, 512, 519], "729": [489, 500], "unus": [489, 500], "660": [489, 500], "682": [489, 500], "689": [489, 500], "663": [489, 500], "728": [489, 500], "704": [489, 500], "707": [489, 500], "consumpt": [489, 500], "717": [489, 500], "740": [489, 500], "464": [489, 499], "605": [489, 499], "292": [489, 499], "2018b": [489, 499], "649": [489, 499], "256": [489, 499], "0x0006": [489, 499], "489": [489, 499], "599": [489, 499], "unneed": [489, 499], "597": [489, 499], "620": [489, 499], "625": [489, 499], "fit": [489, 499], "640": [489, 499], "__ne__": [489, 499], "comparison": [489, 494, 499], "verif": [489, 499], "backward": [489, 492, 498], "incompat": [489, 492, 498], "2017c": [489, 498], "fixer": [489, 498], "thrown": [489, 498], "143": [489, 498], "197": [489, 498], "212": [489, 498], "dictionary_is_retir": [489, 498], "thai": [489, 498], "japanes": [489, 490, 495, 498], "chines": [489, 490, 498], "353": [489, 498], "172": [489, 498], "clariti": [489, 498], "travisci": [489, 498], "appveyor": [489, 498], "coverag": [489, 498, 513], "pep": [489, 491, 494, 498], "151": [489, 498], "125": [489, 498], "show_dicomdir": [489, 497, 498], "258": [489, 498], "latin5": [489, 498], "turkish": [489, 498], "lot": [489, 498, 515], "read_dicomdir": [489, 497], "subdirectori": [489, 497], "ez_setup": [489, 497], "aid": [489, 497], "pydicom_seri": [489, 493, 496, 497], "nil": [489, 497], "goyett": [489, 497], "ordereddict": [489, 497], "padraig": [489, 496, 497], "loonei": [489, 496, 497], "jonathan": [489, 496, 497], "myself": [489, 497], "rickard": [489, 497], "holmberg": [489, 497], "julien": [489, 497], "lami": [489, 497], "yaroslav": [489, 497], "halchenko": [489, 497], "mark": [489, 497], "matthew": [489, 497], "brett": [489, 497], "dimitri": [489, 497], "papadopoulo": [489, 497], "videan42": [489, 497], "sorri": [489, 497], "ve": [489, 497, 513, 514, 517, 520, 522], "anyon": [489, 497], "consolid": [489, 496], "revert": [489, 496], "prepar": [489, 496], "experiment": [489, 496], "unoffici": [489, 496], "uncom": [489, 496], "114": [489, 496], "slow": [489, 496], "approx": [489, 492, 496], "r78ba350a3eb8": [489, 496], "streamlin": [489, 496], "modern": [489, 496], "decor": [489, 496], "duplic": [489, 496], "gunnar": [489, 496], "schaefer": [489, 496], "774b7a55db33": [489, 496], "6b949a5b925b": [489, 496], "113": [489, 496], "84af4b240add": [489, 496], "f\u00e9lix": [489, 496], "morenc": [489, 496], "0197b5846bb5": [489, 496], "3678b1be6aca": [489, 496], "f1ae573d9de5": [489, 496], "0411bab7c985": [489, 496], "9b92b336e7d4": [489, 496], "e830f30b6781": [489, 496], "pysid": [489, 496], "qt": [489, 496], "acknowledg": [489, 496], "suever": [489, 496], "who": [489, 495, 496], "2011": [489, 494, 495], "ident": [489, 495], "4ed698a7bfb": [489, 495], "c313d2befb08": [489, 495], "encourag": [489, 495], "promot": [489, 495], "across": [489, 495], "languag": [489, 490, 495], "b6b3658f3b14": [489, 495], "98": [489, 495], "52": [489, 495], "111": [489, 495], "__dir__": [489, 495], "simplifi": [489, 491, 495], "file_metadata": [489, 494], "96": [489, 494], "catch": [489, 492, 494], "97": [489, 494], "write_new": [489, 494], "fc790f01f5": [489, 493], "84": [489, 493], "dicomit": [489, 493], "statement": [489, 493], "1c32791bf0": [489, 493], "e3ee934bbc": [489, 493], "dicom_dao": [489, 493], "mike": [489, 493], "wallac": [489, 493], "couchdb": [489, 493], "almar": [489, 493], "klein": [489, 493], "distinct": [489, 493], "preliminari": [489, 490, 493], "reorgan": [489, 490, 492], "substanti": [489, 492], "partial": [489, 492], "plain": [489, 492], "bullet": [489, 492], "ness": [489, 492], "logic": [489, 492], "sens": [489, 492], "daniel": [489, 492], "nanz": [489, 492], "dave": [489, 492], "witten": [489, 492], "adit": [489, 492], "panchal": [489, 492], "cp805": [489, 492], "supp": [489, 492], "117": [489, 492], "119": [489, 492], "122": [489, 492], "patch": [489, 492, 512, 513], "nikitathespid": [489, 492], "58": [489, 492], "pierr": [489, 492], "raybaut": [489, 492], "47": [489, 492], "r102": [489, 491], "r103": [489, 491], "issue36": [489, 491], "r97": [489, 491], "r110": [489, 491], "readfil": [489, 491], "savea": [489, 491], "pixelarrai": [489, 490, 491], "kept": [489, 491, 519], "r105": [489, 491], "r91": [489, 491], "r113": [489, 491], "r95": [489, 491], "issue38": [489, 491], "collis": [489, 491], "r96": [489, 491], "issue40": [489, 491], "notimplementerror": [489, 491], "r100": [489, 491], "issue41": [489, 491], "r104": [489, 491], "r109": [489, 491], "r111": [489, 491], "patientsbirthd": [489, 491], "r98": [489, 491], "deprecationwarn": [489, 490], "issue22": [489, 490], "r72": [489, 490], "r73": [489, 490], "greek": [489, 490], "gui": [489, 490], "r64": [489, 490], "r65": [489, 490], "r69": [489, 490], "r70": [489, 490], "data_elem": [489, 490, 515], "r68": [489, 490], "tix": [489, 490], "r55": [489, 490], "uid_dictionari": [489, 490], "r51": [489, 490], "synonym": [489, 490], "issue27": [489, 490], "incorrectli": [489, 490], "read_ow": [489, 490], "undefinedlength": [489, 490], "r50": [489, 490], "dicominfo": [489, 490], "issue33": [489, 490], "issue18": [489, 490], "r45": [489, 490], "r67": [489, 490], "r46": [489, 490], "pixeldataarrai": [489, 490], "distutil": [489, 490], "ones": [512, 515, 517], "typo": 512, "materi": 512, "stackoverflow": 512, "googl": 512, "django": [513, 514, 516], "cd": [513, 514, 517], "live": [513, 514], "yourusernam": [513, 514], "accident": [513, 517], "area": 513, "afterward": 513, "our": [513, 514, 515, 517, 522], "dot": [513, 515], "choos": [513, 514], "won": [513, 514, 515, 517], "checkout": [513, 514], "reproduc": 513, "seem": 513, "daunt": 513, "resourc": 513, "captur": 513, "dive": 513, "Into": 513, "unittest": 513, "troubl": 513, "500": [513, 515], "test_uid": 513, "test_new_uid": 513, "newdefineduid": 513, "assert": [513, 516], "380": 513, "editor": [513, 514], "236": 513, "rst": [513, 514], "properli": 513, "happi": [513, 514], "idea": [513, 514], "cach": [513, 519], "scroll": 513, "front": 513, "push": [513, 514], "click": [513, 514], "wip": [513, 514], "instruct": [513, 514, 515], "real": [513, 514, 522], "mrg": [513, 514], "readi": [513, 514], "merg": [513, 514], "clarif": [513, 514], "approv": [513, 514], "lastli": [513, 514], "remot": [513, 514], "bin": [513, 514], "icon": [513, 514], "restructuredtext": 514, "navig": 514, "occasion": [514, 515, 517], "_build": 514, "web": 514, "browser": 514, "localhost": 514, "tut": 514, "toctre": 514, "visibl": 514, "got": 514, "maxdepth": 514, "virtualenv": 514, "contributing_cod": 514, "contributing_doc": 514, "rebuild": 514, "gone": 514, "reachabl": 514, "task": 514, "chapter_7": 514, "apr": 514, "46": 514, "gcc": 514, "copyright": 514, "credit": 514, "accessionnumb": 514, "acquisitiondata": 514, "xraytubecurr": 514, "primer": 514, "am": 514, "circleci": 514, "success": 514, "artifact": 514, "tab": 514, "yet": [515, 521], "vari": 515, "rb": 515, "infil": 515, "no_meta_path": 515, "no_meta": 515, "678": 515, "631": 515, "caution": 515, "not_dicom": 515, "w": 515, "1703": 515, "1436": 515, "1079": 515, "833": 515, "character_set": 515, "581": 515, "6854": 515, "7369": 515, "hexadecim": 515, "iso_ir_100": 515, "0x6002": 515, "0x6004": 515, "0x601e": 515, "gggg": 515, "surround": 515, "0x0008": 515, "0x0016": 515, "private_elem": 515, "0x0043": 515, "0x104e": 515, "lack": 515, "stick": 515, "simpler": 515, "imagetyp": 515, "act": 515, "branch": [515, 519], "manner": [515, 520], "0x1002": 515, "earlier": 515, "saw": 515, "ii": [515, 522], "x00t": 515, "x18": 515, "x08": 515, "chanc": 515, "But": 515, "snip": 515, "_list": 515, "validate_dataset": 515, "dictionary_vr": 515, "0x0028": 515, "0x1050": 515, "windowwidth": 515, "notic": [515, 517], "typeofpatientid": 515, "windowcent": 515, "prefer": 515, "wb": 515, "1794": 515, "712": 515, "2372": 515, "habit": 515, "congratul": 515, "beta": 516, "deseri": 516, "00080005": 516, "00080008": 516, "symmetr": 516, "ds_json": 516, "ds1": 516, "smaller": 516, "bulk_data_handl": 516, "store_data_and_return_uri": 516, "bulk_data_read": 516, "bulk_data_uri": 516, "data_retrieved_via_uri": 516, "json_data": 516, "00091002": 516, "data_retrieved_for_tag_and_vr_via_uri": 516, "share": 517, "peopl": 517, "frequent": 517, "dvd": 517, "procedur": 517, "ultrasound": 517, "despit": 517, "commonli": [517, 520], "usb": 517, "pc": 517, "minor": 517, "recalcul": 517, "1220": 517, "briefli": 517, "directoryrecordsequ": 517, "3126": 517, "di": 517, "510": 517, "complic": 517, "home": 517, "env": 517, "lib": 517, "python3": 517, "site": 517, "flat": 517, "abstract": 517, "awai": 517, "dig": 517, "cost": 517, "importantli": 517, "though": 517, "tmp0aalrzir": 517, "86e6b75b": 517, "b764": 517, "46af": 517, "bec3": 517, "51698a8366f2": 517, "1858": 517, "_recordifi": 517, "2338": 517, "_check_dataset": 517, "instancenumb": 517, "dosesummationtyp": 517, "2281": 517, "record_gen": 517, "1860": 517, "tmpsqz8rhgb": 517, "rd000000": 517, "shutil": 517, "copytre": 517, "copyfil": 517, "dst": 517, "98892001": 517, "98892003": 517, "tmpu068kdwp": 517, "cr1": 517, "6154": 517, "cr2": 517, "6247": 517, "cr3": 517, "6278": 517, "ct2": 517, "17106": 517, "17136": 517, "17166": 517, "17196": 517, "Then": [518, 519], "isol": 519, "admin": 519, "privileg": 519, "offlin": 519, "whl": 519, "py3": 519, "forg": [519, 520, 522], "fetch_data_fil": 519, "popular": 519, "beforehand": 519, "charl": 519, "cython": 519, "wheel": 519, "older": 519, "framework": 519, "snapshot": 519, "activ": 519, "stabl": 519, "undocu": 519, "prerequisit": [520, 522], "conda": [520, 522], "hundr": 520, "megabyt": 520, "slide": 520, "microscopi": 520, "gigabyt": 520, "territori": 520, "Being": 520, "significantli": 520, "i2": 520, "1697": 520, "frame_iter": 520, "listcomp": 520, "382": 520, "_encode_arrai": 520, "209": 520, "_preprocess": 520, "533": 520, "recompress": 520, "began": 521, "foundat": 521, "codedict": 521, "cid": 521, "incorrectmodalityworklistentri": 521, "mixedmodality3dcammodel": 521, "modalitytoread": 521, "othermod": 521, "128002": 521, "scheme_design": 521, "scheme_vers": 521, "underscor": 521, "sct": 521, "_1sigmalowervalueofpopul": 521, "371919006": 521, "sigma": 521, "cid270": 521, "121006": 521, "cid_for_nam": 521, "observ": 521, "observationsubjectclass": 521, "observertyp": 521, "echofindingobservationtyp": 521, "270": 521, "ln": 521, "fma": 521, "mdc": 521, "uml": 521, "bari": 521, "ncit": 521, "neu": 521, "ucum": 521, "radlex": 521, "ndc": 521, "itis_tsn": 521, "pubchem_cid": 521, "msh": 521, "capabl": 521, "explanatori": 522, "respiratori": 522, "interv": 522, "rhythm": 522, "khz": 522, "0200": 522, "channelsensit": 522, "einthoven": 522, "microvolt": 522, "iii": 522, "avr": 522, "avl": 522, "avf": 522, "v4": 522, "v5": 522, "v6": 522, "interleav": 522, "ch": 522, "ax1": 522, "ax2": 522, "\u03bcv": 522, "cosin": 522, "sine": 522, "chosen": 522, "pi": 522, "ch1": 522, "astyp": 522, "ch2": 522, "sin": 522, "waveformorigin": 522, "condition": 522, "opt": 522, "obvious": 522, "chdef_seq": 522, "chdef": 522, "curve_typ": 522, "channelsampleskew": 522, "waveformbitsstor": 522, "codevalu": 522, "codingschemedesign": 522, "codingschemevers": 522, "stack": 522, "axi": 522, "my_waveform": 522}, "objects": {"": [[486, 0, 0, "-", "pydicom"]], "pydicom.charset": [[73, 1, 1, "", "convert_encodings"], [74, 1, 1, "", "decode_bytes"], [75, 1, 1, "", "decode_element"], [76, 1, 1, "", "encode_string"]], "pydicom.config": [[77, 2, 1, "", "APPLY_J2K_CORRECTIONS"], [78, 1, 1, "", "DS_decimal"], [79, 1, 1, "", "DS_numpy"], [80, 2, 1, "", "IGNORE"], [81, 2, 1, "", "INVALID_KEYWORD_BEHAVIOR"], [82, 2, 1, "", "INVALID_KEY_BEHAVIOR"], [83, 2, 1, "", "RAISE"], [52, 3, 1, "", "Settings"], [84, 2, 1, "", "WARN"], [85, 2, 1, "", "allow_DS_float"], [86, 2, 1, "", "assume_implicit_vr_switch"], [87, 2, 1, "", "convert_wrong_length_to_UN"], [88, 2, 1, "", "data_element_callback"], [89, 2, 1, "", "data_element_callback_kwargs"], [90, 2, 1, "", "datetime_conversion"], [91, 1, 1, "", "debug"], [92, 2, 1, "", "enforce_valid_values"], [93, 1, 1, "", "future_behavior"], [94, 2, 1, "", "overlay_data_handlers"], [95, 2, 1, "", "pixel_data_handlers"], [96, 1, 1, "", "reset_data_element_callback"], [97, 2, 1, "", "settings"], [98, 2, 1, "", "show_file_meta"], [99, 2, 1, "", "use_DS_decimal"], [100, 2, 1, "", "use_DS_numpy"], [101, 2, 1, "", "use_IS_numpy"]], "pydicom.config.Settings": [[52, 4, 1, "", "infer_sq_for_un_vr"], [52, 4, 1, "", "reading_validation_mode"], [52, 4, 1, "", "writing_validation_mode"]], "pydicom.data": [[102, 1, 1, "", "get_charset_files"], [103, 1, 1, "", "get_palette_files"], [104, 1, 1, "", "get_testdata_file"], [105, 1, 1, "", "get_testdata_files"]], "pydicom.datadict": [[106, 1, 1, "", "add_dict_entries"], [107, 1, 1, "", "add_dict_entry"], [108, 1, 1, "", "add_private_dict_entries"], [109, 1, 1, "", "add_private_dict_entry"], [110, 1, 1, "", "dictionary_VM"], [111, 1, 1, "", "dictionary_VR"], [112, 1, 1, "", "dictionary_description"], [113, 1, 1, "", "dictionary_has_tag"], [114, 1, 1, "", "dictionary_is_retired"], [115, 1, 1, "", "dictionary_keyword"], [116, 1, 1, "", "get_entry"], [117, 1, 1, "", "get_private_entry"], [118, 1, 1, "", "keyword_for_tag"], [119, 1, 1, "", "mask_match"], [120, 1, 1, "", "private_dictionary_VM"], [121, 1, 1, "", "private_dictionary_VR"], [122, 1, 1, "", "private_dictionary_description"], [123, 1, 1, "", "repeater_has_keyword"], [124, 1, 1, "", "repeater_has_tag"], [125, 1, 1, "", "tag_for_keyword"]], "pydicom.dataelem": [[126, 3, 1, "", "DataElement"], [127, 1, 1, "", "DataElement_from_raw"], [128, 3, 1, "", "RawDataElement"]], "pydicom.dataelem.DataElement": [[126, 4, 1, "", "VM"], [126, 5, 1, "", "VR"], [126, 6, 1, "", "__init__"], [126, 6, 1, "", "clear"], [126, 5, 1, "", "descripWidth"], [126, 4, 1, "", "empty_value"], [126, 6, 1, "", "from_json"], [126, 4, 1, "", "is_empty"], [126, 4, 1, "", "is_private"], [126, 4, 1, "", "is_retired"], [126, 5, 1, "", "is_undefined_length"], [126, 4, 1, "", "keyword"], [126, 5, 1, "", "maxBytesToDisplay"], [126, 4, 1, "", "name"], [126, 4, 1, "", "repval"], [126, 5, 1, "", "showVR"], [126, 5, 1, "", "tag"], [126, 6, 1, "", "to_json"], [126, 6, 1, "", "to_json_dict"], [126, 6, 1, "", "validate"], [126, 4, 1, "", "value"]], "pydicom.dataelem.RawDataElement": [[128, 5, 1, "", "VR"], [128, 6, 1, "", "__init__"], [128, 5, 1, "", "is_implicit_VR"], [128, 5, 1, "", "is_little_endian"], [128, 5, 1, "", "is_raw"], [128, 5, 1, "", "length"], [128, 5, 1, "", "tag"], [128, 5, 1, "", "value"], [128, 5, 1, "", "value_tell"]], "pydicom.dataset": [[129, 3, 1, "", "Dataset"], [130, 3, 1, "", "FileDataset"], [131, 3, 1, "", "FileMetaDataset"], [132, 3, 1, "", "PrivateBlock"], [133, 1, 1, "", "validate_file_meta"]], "pydicom.dataset.Dataset": [[129, 6, 1, "", "__init__"], [129, 6, 1, "", "add"], [129, 6, 1, "", "add_new"], [129, 6, 1, "", "add_new_private"], [129, 6, 1, "", "clear"], [129, 6, 1, "", "compress"], [129, 6, 1, "", "convert_pixel_data"], [129, 6, 1, "", "copy"], [129, 6, 1, "", "data_element"], [129, 6, 1, "", "decode"], [129, 6, 1, "", "decompress"], [129, 5, 1, "", "default_element_format"], [129, 5, 1, "", "default_sequence_element_format"], [129, 6, 1, "", "dir"], [129, 6, 1, "", "elements"], [129, 6, 1, "", "ensure_file_meta"], [129, 6, 1, "", "fix_meta_info"], [129, 6, 1, "", "formatted_lines"], [129, 6, 1, "", "from_json"], [129, 6, 1, "", "get"], [129, 6, 1, "", "get_item"], [129, 6, 1, "", "get_private_item"], [129, 6, 1, "", "group_dataset"], [129, 5, 1, "", "indent_chars"], [129, 5, 1, "", "is_implicit_VR"], [129, 5, 1, "", "is_little_endian"], [129, 4, 1, "", "is_original_encoding"], [129, 6, 1, "", "items"], [129, 6, 1, "", "iterall"], [129, 6, 1, "", "keys"], [129, 6, 1, "", "overlay_array"], [129, 4, 1, "", "pixel_array"], [129, 6, 1, "", "pop"], [129, 6, 1, "", "popitem"], [129, 6, 1, "", "private_block"], [129, 6, 1, "", "private_creators"], [129, 6, 1, "", "remove_private_tags"], [129, 6, 1, "", "save_as"], [129, 6, 1, "", "set_original_encoding"], [129, 6, 1, "", "setdefault"], [129, 6, 1, "", "to_json"], [129, 6, 1, "", "to_json_dict"], [129, 6, 1, "", "top"], [129, 6, 1, "", "trait_names"], [129, 6, 1, "", "update"], [129, 6, 1, "", "values"], [129, 6, 1, "", "walk"], [129, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileDataset": [[130, 6, 1, "", "__init__"], [130, 5, 1, "", "file_meta"], [130, 5, 1, "", "filename"], [130, 5, 1, "", "fileobj_type"], [130, 5, 1, "", "is_implicit_VR"], [130, 5, 1, "", "is_little_endian"], [130, 5, 1, "", "preamble"], [130, 5, 1, "", "timestamp"]], "pydicom.dataset.FileMetaDataset": [[131, 6, 1, "", "__init__"], [131, 6, 1, "", "validate"]], "pydicom.dataset.PrivateBlock": [[132, 6, 1, "", "__init__"], [132, 6, 1, "", "add_new"], [132, 5, 1, "", "block_start"], [132, 5, 1, "", "dataset"], [132, 6, 1, "", "get_tag"], [132, 5, 1, "", "group"], [132, 5, 1, "", "private_creator"]], "pydicom.encaps": [[134, 1, 1, "", "decode_data_sequence"], [135, 1, 1, "", "defragment_data"], [136, 1, 1, "", "encapsulate"], [137, 1, 1, "", "encapsulate_extended"], [138, 1, 1, "", "fragment_frame"], [139, 1, 1, "", "generate_pixel_data"], [140, 1, 1, "", "generate_pixel_data_fragment"], [141, 1, 1, "", "generate_pixel_data_frame"], [142, 1, 1, "", "get_frame_offsets"], [143, 1, 1, "", "itemize_fragment"], [144, 1, 1, "", "itemize_frame"], [145, 1, 1, "", "read_item"]], "pydicom": [[64, 0, 0, "-", "encoders"], [483, 0, 0, "-", "overlays"], [484, 0, 0, "-", "pixel_data_handlers"], [485, 0, 0, "-", "waveforms"]], "pydicom.encoders": [[146, 2, 1, "", "RLELosslessEncoder"], [148, 1, 1, "", "get_encoder"]], "pydicom.encoders.base": [[147, 3, 1, "", "Encoder"]], "pydicom.encoders.base.Encoder": [[147, 4, 1, "", "UID"], [147, 6, 1, "", "__init__"], [147, 6, 1, "", "add_plugin"], [147, 6, 1, "", "encode"], [147, 4, 1, "", "is_available"], [147, 6, 1, "", "iter_encode"], [147, 6, 1, "", "kwargs_from_ds"], [147, 4, 1, "", "missing_dependencies"], [147, 4, 1, "", "name"], [147, 6, 1, "", "remove_plugin"]], "pydicom.errors": [[149, 7, 1, "", "InvalidDicomError"]], "pydicom.filebase": [[150, 3, 1, "", "DicomBytesIO"], [151, 1, 1, "", "DicomFile"], [152, 3, 1, "", "DicomFileLike"], [153, 3, 1, "", "DicomIO"]], "pydicom.filebase.DicomBytesIO": [[150, 6, 1, "", "__init__"]], "pydicom.filebase.DicomFileLike": [[152, 6, 1, "", "__init__"], [152, 6, 1, "", "no_read"], [152, 6, 1, "", "no_seek"], [152, 6, 1, "", "no_write"]], "pydicom.filebase.DicomIO": [[153, 6, 1, "", "__init__"], [153, 6, 1, "", "read"], [153, 6, 1, "", "read_beUL"], [153, 6, 1, "", "read_beUS"], [153, 6, 1, "", "read_be_tag"], [153, 6, 1, "", "read_leUL"], [153, 6, 1, "", "read_leUS"], [153, 6, 1, "", "read_le_tag"], [153, 6, 1, "", "write_UL"], [153, 6, 1, "", "write_US"], [153, 6, 1, "", "write_beUL"], [153, 6, 1, "", "write_beUS"], [153, 6, 1, "", "write_leUL"], [153, 6, 1, "", "write_leUS"], [153, 6, 1, "", "write_tag"]], "pydicom.filereader": [[154, 1, 1, "", "data_element_generator"], [155, 1, 1, "", "data_element_offset_to_value"], [156, 1, 1, "", "dcmread"], [157, 1, 1, "", "read_dataset"], [158, 1, 1, "", "read_deferred_data_element"], [159, 1, 1, "", "read_file_meta_info"], [160, 1, 1, "", "read_partial"], [161, 1, 1, "", "read_preamble"], [162, 1, 1, "", "read_sequence"], [163, 1, 1, "", "read_sequence_item"]], "pydicom.fileset": [[164, 2, 1, "", "DIRECTORY_RECORDERS"], [165, 3, 1, "", "FileInstance"], [166, 3, 1, "", "FileSet"], [167, 3, 1, "", "RecordNode"], [168, 1, 1, "", "generate_filename"], [169, 1, 1, "", "is_conformant_file_id"]], "pydicom.fileset.FileInstance": [[165, 4, 1, "", "FileID"], [165, 4, 1, "", "SOPClassUID"], [165, 4, 1, "", "SOPInstanceUID"], [165, 4, 1, "", "TransferSyntaxUID"], [165, 6, 1, "", "__init__"], [165, 4, 1, "", "file_set"], [165, 4, 1, "", "for_addition"], [165, 4, 1, "", "for_moving"], [165, 4, 1, "", "for_removal"], [165, 4, 1, "", "is_private"], [165, 4, 1, "", "is_staged"], [165, 6, 1, "", "load"], [165, 5, 1, "", "node"], [165, 4, 1, "", "path"]], "pydicom.fileset.FileSet": [[166, 4, 1, "", "ID"], [166, 4, 1, "", "UID"], [166, 6, 1, "", "__init__"], [166, 6, 1, "", "add"], [166, 6, 1, "", "add_custom"], [166, 6, 1, "", "clear"], [166, 6, 1, "", "copy"], [166, 4, 1, "", "descriptor_character_set"], [166, 4, 1, "", "descriptor_file_id"], [166, 6, 1, "", "find"], [166, 6, 1, "", "find_values"], [166, 4, 1, "", "is_staged"], [166, 6, 1, "", "load"], [166, 4, 1, "", "path"], [166, 6, 1, "", "remove"], [166, 6, 1, "", "write"]], "pydicom.fileset.RecordNode": [[167, 6, 1, "", "__init__"], [167, 6, 1, "", "add"], [167, 4, 1, "", "ancestors"], [167, 5, 1, "", "children"], [167, 4, 1, "", "component"], [167, 4, 1, "", "depth"], [167, 4, 1, "", "file_set"], [167, 4, 1, "", "has_instance"], [167, 4, 1, "", "index"], [167, 5, 1, "", "instance"], [167, 4, 1, "", "is_root"], [167, 4, 1, "", "key"], [167, 4, 1, "", "next"], [167, 4, 1, "", "parent"], [167, 6, 1, "", "prettify"], [167, 4, 1, "", "previous"], [167, 4, 1, "", "record_type"], [167, 6, 1, "", "remove"], [167, 6, 1, "", "reverse"], [167, 4, 1, "", "root"]], "pydicom.fileutil": [[170, 1, 1, "", "absorb_delimiter_item"], [171, 1, 1, "", "find_bytes"], [172, 1, 1, "", "find_delimiter"], [173, 1, 1, "", "length_of_undefined_length"], [174, 1, 1, "", "read_undefined_length_value"]], "pydicom.filewriter": [[175, 1, 1, "", "correct_ambiguous_vr"], [176, 1, 1, "", "correct_ambiguous_vr_element"], [177, 1, 1, "", "dcmwrite"], [178, 1, 1, "", "multi_string"], [179, 1, 1, "", "write_ATvalue"], [180, 1, 1, "", "write_DA"], [181, 1, 1, "", "write_DT"], [182, 1, 1, "", "write_OBvalue"], [183, 1, 1, "", "write_OWvalue"], [184, 1, 1, "", "write_PN"], [185, 1, 1, "", "write_TM"], [186, 1, 1, "", "write_UI"], [187, 1, 1, "", "write_UN"], [188, 1, 1, "", "write_data_element"], [189, 1, 1, "", "write_dataset"], [190, 1, 1, "", "write_file_meta_info"], [191, 1, 1, "", "write_number_string"], [192, 1, 1, "", "write_numbers"], [193, 1, 1, "", "write_sequence"], [194, 1, 1, "", "write_sequence_item"], [195, 1, 1, "", "write_string"], [196, 1, 1, "", "write_text"]], "pydicom.misc": [[197, 1, 1, "", "is_dicom"], [198, 1, 1, "", "size_in_bytes"]], "pydicom.multival": [[199, 3, 1, "", "MultiValue"]], "pydicom.multival.MultiValue": [[199, 6, 1, "", "__init__"]], "pydicom.overlays": [[200, 0, 0, "-", "numpy_handler"]], "pydicom.overlays.numpy_handler": [[200, 1, 1, "", "get_expected_length"], [200, 1, 1, "", "get_overlay_array"], [200, 1, 1, "", "is_available"], [200, 1, 1, "", "reshape_overlay_array"]], "pydicom.pixel_data_handlers": [[201, 1, 1, "", "apply_color_lut"], [202, 1, 1, "", "apply_modality_lut"], [203, 1, 1, "", "apply_rescale"], [204, 1, 1, "", "apply_voi"], [205, 1, 1, "", "apply_voi_lut"], [206, 1, 1, "", "apply_windowing"], [207, 1, 1, "", "convert_color_space"], [208, 0, 0, "-", "gdcm_handler"], [209, 0, 0, "-", "jpeg_ls_handler"], [210, 0, 0, "-", "numpy_handler"], [211, 0, 0, "-", "pillow_handler"], [212, 0, 0, "-", "pylibjpeg_handler"], [213, 0, 0, "-", "rle_handler"], [214, 0, 0, "-", "util"]], "pydicom.pixel_data_handlers.gdcm_handler": [[208, 1, 1, "", "create_data_element"], [208, 1, 1, "", "create_image"], [208, 1, 1, "", "get_pixeldata"], [208, 1, 1, "", "is_available"], [208, 1, 1, "", "needs_to_convert_to_RGB"], [208, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [208, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[209, 1, 1, "", "get_pixeldata"], [209, 1, 1, "", "is_available"], [209, 1, 1, "", "needs_to_convert_to_RGB"], [209, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [209, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.numpy_handler": [[210, 1, 1, "", "get_pixeldata"], [210, 1, 1, "", "is_available"], [210, 1, 1, "", "needs_to_convert_to_RGB"], [210, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [210, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pillow_handler": [[211, 1, 1, "", "get_pixeldata"], [211, 1, 1, "", "is_available"], [211, 1, 1, "", "needs_to_convert_to_RGB"], [211, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [211, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[212, 1, 1, "", "as_array"], [212, 1, 1, "", "generate_frames"], [212, 1, 1, "", "get_pixeldata"], [212, 1, 1, "", "is_available"], [212, 1, 1, "", "needs_to_convert_to_RGB"], [212, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [212, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.rle_handler": [[213, 1, 1, "", "get_pixeldata"], [213, 1, 1, "", "is_available"], [213, 1, 1, "", "needs_to_convert_to_RGB"], [213, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [213, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.util": [[214, 1, 1, "", "apply_color_lut"], [214, 1, 1, "", "apply_modality_lut"], [214, 1, 1, "", "apply_voi"], [214, 1, 1, "", "apply_voi_lut"], [214, 1, 1, "", "apply_windowing"], [214, 1, 1, "", "convert_color_space"], [214, 1, 1, "", "dtype_corrected_for_endianness"], [214, 1, 1, "", "expand_ybr422"], [214, 1, 1, "", "get_expected_length"], [214, 1, 1, "", "get_image_pixel_ids"], [214, 1, 1, "", "get_j2k_parameters"], [214, 1, 1, "", "get_nr_frames"], [214, 1, 1, "", "pack_bits"], [214, 1, 1, "", "pixel_dtype"], [214, 1, 1, "", "reshape_pixel_array"], [214, 1, 1, "", "unpack_bits"]], "pydicom.sequence": [[215, 3, 1, "", "Sequence"]], "pydicom.sequence.Sequence": [[215, 6, 1, "", "__init__"], [215, 6, 1, "", "extend"]], "pydicom.tag": [[216, 3, 1, "", "BaseTag"], [217, 1, 1, "", "Tag"], [218, 1, 1, "", "TupleTag"], [219, 1, 1, "", "tag_in_exception"]], "pydicom.tag.BaseTag": [[216, 6, 1, "", "__init__"], [216, 4, 1, "", "elem"], [216, 4, 1, "", "element"], [216, 4, 1, "", "group"], [216, 4, 1, "", "is_private"], [216, 4, 1, "", "is_private_creator"], [216, 4, 1, "", "json_key"], [216, 4, 1, "", "private_creator"]], "pydicom.uid": [[220, 2, 1, "", "AcquisitionContextSRStorage"], [221, 2, 1, "", "AdvancedBlendingPresentationStateStorage"], [222, 2, 1, "", "AllTransferSyntaxes"], [223, 2, 1, "", "AmbulatoryECGWaveformStorage"], [224, 2, 1, "", "ArterialPulseWaveformStorage"], [225, 2, 1, "", "AutorefractionMeasurementsStorage"], [226, 2, 1, "", "BasicStructuredDisplayStorage"], [227, 2, 1, "", "BasicTextSRStorage"], [228, 2, 1, "", "BasicVoiceAudioWaveformStorage"], [229, 2, 1, "", "BlendingSoftcopyPresentationStateStorage"], [230, 2, 1, "", "BodyPositionWaveformStorage"], [231, 2, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [232, 2, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [233, 2, 1, "", "BreastTomosynthesisImageStorage"], [234, 2, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [235, 2, 1, "", "CArmPhotonElectronRadiationStorage"], [236, 2, 1, "", "CTDefinedProcedureProtocolStorage"], [237, 2, 1, "", "CTImageStorage"], [238, 2, 1, "", "CTPerformedProcedureProtocolStorage"], [239, 2, 1, "", "CardiacElectrophysiologyWaveformStorage"], [240, 2, 1, "", "ChestCADSRStorage"], [241, 2, 1, "", "ColonCADSRStorage"], [242, 2, 1, "", "ColorPaletteStorage"], [243, 2, 1, "", "ColorSoftcopyPresentationStateStorage"], [244, 2, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [245, 2, 1, "", "Comprehensive3DSRStorage"], [246, 2, 1, "", "ComprehensiveSRStorage"], [247, 2, 1, "", "ComputedRadiographyImageStorage"], [248, 2, 1, "", "ContentAssessmentResultsStorage"], [249, 2, 1, "", "CornealTopographyMapStorage"], [250, 2, 1, "", "DICOS2DAITStorage"], [251, 2, 1, "", "DICOS3DAITStorage"], [252, 2, 1, "", "DICOSCTImageStorage"], [253, 2, 1, "", "DICOSDigitalXRayImageStorageForPresentation"], [254, 2, 1, "", "DICOSDigitalXRayImageStorageForProcessing"], [255, 2, 1, "", "DICOSQuadrupoleResonanceStorage"], [256, 2, 1, "", "DICOSThreatDetectionReportStorage"], [257, 2, 1, "", "DeflatedExplicitVRLittleEndian"], [258, 2, 1, "", "DeformableSpatialRegistrationStorage"], [259, 2, 1, "", "DermoscopicPhotographyImageStorage"], [260, 2, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [261, 2, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [262, 2, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [263, 2, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [264, 2, 1, "", "DigitalXRayImageStorageForPresentation"], [265, 2, 1, "", "DigitalXRayImageStorageForProcessing"], [266, 2, 1, "", "EddyCurrentImageStorage"], [267, 2, 1, "", "EddyCurrentMultiFrameImageStorage"], [268, 2, 1, "", "ElectromyogramWaveformStorage"], [269, 2, 1, "", "ElectrooculogramWaveformStorage"], [270, 2, 1, "", "EncapsulatedCDAStorage"], [271, 2, 1, "", "EncapsulatedMTLStorage"], [272, 2, 1, "", "EncapsulatedOBJStorage"], [273, 2, 1, "", "EncapsulatedPDFStorage"], [274, 2, 1, "", "EncapsulatedSTLStorage"], [275, 2, 1, "", "EnhancedCTImageStorage"], [276, 2, 1, "", "EnhancedContinuousRTImageStorage"], [277, 2, 1, "", "EnhancedMRColorImageStorage"], [278, 2, 1, "", "EnhancedMRImageStorage"], [279, 2, 1, "", "EnhancedPETImageStorage"], [280, 2, 1, "", "EnhancedRTImageStorage"], [281, 2, 1, "", "EnhancedSRStorage"], [282, 2, 1, "", "EnhancedUSVolumeStorage"], [283, 2, 1, "", "EnhancedXAImageStorage"], [284, 2, 1, "", "EnhancedXRFImageStorage"], [285, 2, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [286, 2, 1, "", "ExplicitVRBigEndian"], [287, 2, 1, "", "ExplicitVRLittleEndian"], [288, 2, 1, "", "ExtensibleSRStorage"], [289, 2, 1, "", "General32bitECGWaveformStorage"], [290, 2, 1, "", "GeneralAudioWaveformStorage"], [291, 2, 1, "", "GeneralECGWaveformStorage"], [292, 2, 1, "", "GenericImplantTemplateStorage"], [293, 2, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [294, 2, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [295, 2, 1, "", "HEVCM10P51"], [296, 2, 1, "", "HEVCMP51"], [297, 2, 1, "", "HangingProtocolStorage"], [298, 2, 1, "", "HemodynamicWaveformStorage"], [299, 2, 1, "", "ImplantAssemblyTemplateStorage"], [300, 2, 1, "", "ImplantTemplateGroupStorage"], [301, 2, 1, "", "ImplantationPlanSRStorage"], [302, 2, 1, "", "ImplicitVRLittleEndian"], [303, 2, 1, "", "IntraocularLensCalculationsStorage"], [304, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [305, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [306, 2, 1, "", "InventoryStorage"], [307, 2, 1, "", "JPEG2000"], [308, 2, 1, "", "JPEG2000Lossless"], [309, 2, 1, "", "JPEG2000MC"], [310, 2, 1, "", "JPEG2000MCLossless"], [311, 2, 1, "", "JPEG2000TransferSyntaxes"], [312, 2, 1, "", "JPEGBaseline8Bit"], [313, 2, 1, "", "JPEGExtended12Bit"], [314, 2, 1, "", "JPEGLSLossless"], [315, 2, 1, "", "JPEGLSNearLossless"], [316, 2, 1, "", "JPEGLSTransferSyntaxes"], [317, 2, 1, "", "JPEGLossless"], [318, 2, 1, "", "JPEGLosslessSV1"], [319, 2, 1, "", "JPEGTransferSyntaxes"], [320, 2, 1, "", "KeratometryMeasurementsStorage"], [321, 2, 1, "", "KeyObjectSelectionDocumentStorage"], [322, 2, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [323, 2, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [324, 2, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [325, 2, 1, "", "LensometryMeasurementsStorage"], [326, 2, 1, "", "MPEG2MPHL"], [327, 2, 1, "", "MPEG2MPHLF"], [328, 2, 1, "", "MPEG2MPML"], [329, 2, 1, "", "MPEG2MPMLF"], [330, 2, 1, "", "MPEG4HP41"], [331, 2, 1, "", "MPEG4HP41BD"], [332, 2, 1, "", "MPEG4HP41BDF"], [333, 2, 1, "", "MPEG4HP41F"], [334, 2, 1, "", "MPEG4HP422D"], [335, 2, 1, "", "MPEG4HP422DF"], [336, 2, 1, "", "MPEG4HP423D"], [337, 2, 1, "", "MPEG4HP423DF"], [338, 2, 1, "", "MPEG4HP42STEREO"], [339, 2, 1, "", "MPEG4HP42STEREOF"], [340, 2, 1, "", "MPEGTransferSyntaxes"], [341, 2, 1, "", "MRImageStorage"], [342, 2, 1, "", "MRSpectroscopyStorage"], [343, 2, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [344, 2, 1, "", "MammographyCADSRStorage"], [345, 2, 1, "", "MediaStorageDirectoryStorage"], [346, 2, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [347, 2, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [348, 2, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [349, 2, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [350, 2, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [351, 2, 1, "", "MultichannelRespiratoryWaveformStorage"], [352, 2, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [353, 2, 1, "", "NuclearMedicineImageStorage"], [354, 2, 1, "", "OphthalmicAxialMeasurementsStorage"], [355, 2, 1, "", "OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [356, 2, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [357, 2, 1, "", "OphthalmicPhotography16BitImageStorage"], [358, 2, 1, "", "OphthalmicPhotography8BitImageStorage"], [359, 2, 1, "", "OphthalmicThicknessMapStorage"], [360, 2, 1, "", "OphthalmicTomographyImageStorage"], [361, 2, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [362, 2, 1, "", "PYDICOM_IMPLEMENTATION_UID"], [363, 2, 1, "", "PYDICOM_ROOT_UID"], [364, 2, 1, "", "ParametricMapStorage"], [365, 2, 1, "", "PatientRadiationDoseSRStorage"], [366, 2, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [367, 2, 1, "", "PhotoacousticImageStorage"], [368, 2, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [369, 2, 1, "", "PositronEmissionTomographyImageStorage"], [370, 2, 1, "", "ProcedureLogStorage"], [371, 2, 1, "", "ProtocolApprovalStorage"], [372, 2, 1, "", "PseudoColorSoftcopyPresentationStateStorage"], [373, 2, 1, "", "RE_VALID_UID"], [374, 2, 1, "", "RE_VALID_UID_PREFIX"], [375, 2, 1, "", "RLELossless"], [376, 2, 1, "", "RLETransferSyntaxes"], [377, 2, 1, "", "RTBeamsDeliveryInstructionStorage"], [378, 2, 1, "", "RTBeamsTreatmentRecordStorage"], [379, 2, 1, "", "RTBrachyApplicationSetupDeliveryInstructionStorage"], [380, 2, 1, "", "RTBrachyTreatmentRecordStorage"], [381, 2, 1, "", "RTDoseStorage"], [382, 2, 1, "", "RTImageStorage"], [383, 2, 1, "", "RTIonBeamsTreatmentRecordStorage"], [384, 2, 1, "", "RTIonPlanStorage"], [385, 2, 1, "", "RTPatientPositionAcquisitionInstructionStorage"], [386, 2, 1, "", "RTPhysicianIntentStorage"], [387, 2, 1, "", "RTPlanStorage"], [388, 2, 1, "", "RTRadiationRecordSetStorage"], [389, 2, 1, "", "RTRadiationSalvageRecordStorage"], [390, 2, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [391, 2, 1, "", "RTRadiationSetStorage"], [392, 2, 1, "", "RTSegmentAnnotationStorage"], [393, 2, 1, "", "RTStructureSetStorage"], [394, 2, 1, "", "RTTreatmentPreparationStorage"], [395, 2, 1, "", "RTTreatmentSummaryRecordStorage"], [396, 2, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [397, 2, 1, "", "RawDataStorage"], [398, 2, 1, "", "RealWorldValueMappingStorage"], [399, 2, 1, "", "RespiratoryWaveformStorage"], [400, 2, 1, "", "RoboticArmRadiationStorage"], [401, 2, 1, "", "RoboticRadiationRecordStorage"], [402, 2, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [403, 2, 1, "", "SMPTEST211020UncompressedInterlacedActiveVideo"], [404, 2, 1, "", "SMPTEST211020UncompressedProgressiveActiveVideo"], [405, 2, 1, "", "SMPTEST211030PCMDigitalAudio"], [406, 2, 1, "", "SecondaryCaptureImageStorage"], [407, 2, 1, "", "SegmentationStorage"], [408, 2, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [409, 2, 1, "", "SimplifiedAdultEchoSRStorage"], [410, 2, 1, "", "SleepElectroencephalogramWaveformStorage"], [411, 2, 1, "", "SpatialFiducialsStorage"], [412, 2, 1, "", "SpatialRegistrationStorage"], [413, 2, 1, "", "SpectaclePrescriptionReportStorage"], [414, 2, 1, "", "StereometricRelationshipStorage"], [415, 2, 1, "", "SubjectiveRefractionMeasurementsStorage"], [416, 2, 1, "", "SurfaceScanMeshStorage"], [417, 2, 1, "", "SurfaceScanPointCloudStorage"], [418, 2, 1, "", "SurfaceSegmentationStorage"], [419, 2, 1, "", "TomotherapeuticRadiationRecordStorage"], [420, 2, 1, "", "TomotherapeuticRadiationStorage"], [421, 2, 1, "", "TractographyResultsStorage"], [422, 2, 1, "", "TwelveLeadECGWaveformStorage"], [423, 3, 1, "", "UID"], [424, 2, 1, "", "UltrasoundImageStorage"], [425, 2, 1, "", "UltrasoundMultiFrameImageStorage"], [426, 2, 1, "", "UncompressedTransferSyntaxes"], [427, 2, 1, "", "VLEndoscopicImageStorage"], [428, 2, 1, "", "VLMicroscopicImageStorage"], [429, 2, 1, "", "VLPhotographicImageStorage"], [430, 2, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [431, 2, 1, "", "VLWholeSlideMicroscopyImageStorage"], [432, 2, 1, "", "VariableModalityLUTSoftcopyPresentationStateStorage"], [433, 2, 1, "", "VideoEndoscopicImageStorage"], [434, 2, 1, "", "VideoMicroscopicImageStorage"], [435, 2, 1, "", "VideoPhotographicImageStorage"], [436, 2, 1, "", "VisualAcuityMeasurementsStorage"], [437, 2, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [438, 2, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [439, 2, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [440, 2, 1, "", "XADefinedProcedureProtocolStorage"], [441, 2, 1, "", "XAPerformedProcedureProtocolStorage"], [442, 2, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [443, 2, 1, "", "XRay3DAngiographicImageStorage"], [444, 2, 1, "", "XRay3DCraniofacialImageStorage"], [445, 2, 1, "", "XRayAngiographicImageStorage"], [446, 2, 1, "", "XRayRadiationDoseSRStorage"], [447, 2, 1, "", "XRayRadiofluoroscopicImageStorage"], [448, 1, 1, "", "generate_uid"]], "pydicom.uid.UID": [[423, 6, 1, "", "__init__"], [423, 4, 1, "", "info"], [423, 4, 1, "", "is_compressed"], [423, 4, 1, "", "is_deflated"], [423, 4, 1, "", "is_encapsulated"], [423, 4, 1, "", "is_implicit_VR"], [423, 4, 1, "", "is_little_endian"], [423, 4, 1, "", "is_private"], [423, 4, 1, "", "is_retired"], [423, 4, 1, "", "is_transfer_syntax"], [423, 4, 1, "", "is_valid"], [423, 4, 1, "", "keyword"], [423, 4, 1, "", "name"], [423, 4, 1, "", "type"]], "pydicom.valuerep": [[449, 3, 1, "", "DA"], [450, 1, 1, "", "DS"], [451, 3, 1, "", "DSdecimal"], [452, 3, 1, "", "DSfloat"], [453, 3, 1, "", "DT"], [454, 3, 1, "", "IS"], [455, 3, 1, "", "ISfloat"], [456, 3, 1, "", "PersonName"], [457, 3, 1, "", "TM"], [458, 3, 1, "", "VR"], [459, 1, 1, "", "format_number_as_ds"], [460, 1, 1, "", "is_valid_ds"]], "pydicom.valuerep.DA": [[449, 6, 1, "", "__init__"]], "pydicom.valuerep.DSdecimal": [[451, 6, 1, "", "__init__"]], "pydicom.valuerep.DSfloat": [[452, 6, 1, "", "__init__"]], "pydicom.valuerep.DT": [[453, 6, 1, "", "__init__"]], "pydicom.valuerep.IS": [[454, 6, 1, "", "__init__"]], "pydicom.valuerep.ISfloat": [[455, 6, 1, "", "__init__"]], "pydicom.valuerep.PersonName": [[456, 6, 1, "", "__init__"], [456, 4, 1, "", "alphabetic"], [456, 4, 1, "", "components"], [456, 6, 1, "", "decode"], [456, 6, 1, "", "encode"], [456, 6, 1, "", "family_comma_given"], [456, 4, 1, "", "family_name"], [456, 6, 1, "", "formatted"], [456, 6, 1, "", "from_named_components"], [456, 6, 1, "", "from_named_components_veterinary"], [456, 4, 1, "", "given_name"], [456, 4, 1, "", "ideographic"], [456, 4, 1, "", "middle_name"], [456, 4, 1, "", "name_prefix"], [456, 4, 1, "", "name_suffix"], [456, 4, 1, "", "phonetic"]], "pydicom.valuerep.TM": [[457, 6, 1, "", "__init__"]], "pydicom.valuerep.VR": [[458, 6, 1, "", "__init__"]], "pydicom.values": [[461, 1, 1, "", "convert_AE_string"], [462, 1, 1, "", "convert_ATvalue"], [463, 1, 1, "", "convert_DA_string"], [464, 1, 1, "", "convert_DS_string"], [465, 1, 1, "", "convert_DT_string"], [466, 1, 1, "", "convert_IS_string"], [467, 1, 1, "", "convert_OBvalue"], [468, 1, 1, "", "convert_OWvalue"], [469, 1, 1, "", "convert_PN"], [470, 1, 1, "", "convert_SQ"], [471, 1, 1, "", "convert_TM_string"], [472, 1, 1, "", "convert_UI"], [473, 1, 1, "", "convert_UN"], [474, 1, 1, "", "convert_UR_string"], [475, 1, 1, "", "convert_numbers"], [476, 1, 1, "", "convert_single_string"], [477, 1, 1, "", "convert_string"], [478, 1, 1, "", "convert_tag"], [479, 1, 1, "", "convert_text"], [480, 1, 1, "", "convert_value"]], "pydicom.waveforms": [[481, 0, 0, "-", "numpy_handler"]], "pydicom.waveforms.numpy_handler": [[481, 1, 1, "", "generate_multiplex"], [481, 1, 1, "", "is_available"], [481, 1, 1, "", "multiplex_array"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:method", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"show": [0, 14, 26, 28], "dicom": [0, 10, 11, 12, 16, 17, 20, 24, 26, 39, 43, 45, 50, 54, 72, 517, 519, 522], "file": [0, 10, 17, 20, 24, 26, 45, 50, 72, 489, 493, 496, 497, 517, 519], "us": [0, 2, 23, 40, 41, 46, 50, 519, 520], "hierarch": 0, "tree": 0, "imag": [1, 2, 4, 6, 33, 34, 46], "process": [1, 6, 15], "downsiz": 2, "mri": 2, "pydicom": [2, 23, 24, 26, 27, 28, 30, 37, 38, 39, 40, 41, 43, 44, 46, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 487, 488, 489, 509, 510, 512, 519, 520], "decod": [3, 51, 62, 522], "plot": [3, 4, 9], "waveform": [3, 49, 481, 485, 522], "data": [3, 8, 9, 12, 17, 31, 32, 41, 42, 43, 47, 48, 49, 53, 54, 56, 57, 63, 64, 102, 103, 104, 105, 482, 483, 484, 485, 516, 520, 522], "load": [4, 517], "ct": 4, "slice": 4, "axial": 4, "sagitt": 4, "coron": 4, "comput": [5, 13, 19, 21, 511], "time": [5, 13, 19, 21, 511], "gener": [6, 23, 36], "exampl": [6, 24, 26, 33, 37, 66, 515, 519], "input": [6, 7], "output": [6, 7, 8], "metadata": [6, 15], "format": [8, 516], "set": [8, 10, 43, 72, 97, 517], "print": 8, "read": [9, 10, 11, 45, 69, 515], "dataset": [9, 14, 38, 41, 47, 48, 49, 53, 55, 66, 67, 69, 71, 129, 130, 131, 132, 133, 515, 516], "pixel": [9, 31, 32, 33, 34, 41, 42, 48, 64, 482, 484, 520], "rtplan": 11, "list": [11, 488], "inform": 11, "write": [12, 36, 45, 50, 71, 513, 515], "work": [14, 18, 47, 48, 49, 516], "memori": 14, "base": [14, 68, 147], "add": 16, "item": 16, "privat": [16, 43, 54], "dictionari": [16, 43, 54], "anonym": 17, "singl": 17, "sequenc": [18, 38, 59, 215, 515], "analys": 20, "differ": 20, "between": 20, "displai": [22, 43], "unicod": 22, "person": 22, "name": 22, "frequent": 23, "ask": 23, "question": 23, "how": [23, 519], "do": 23, "i": [23, 454], "cite": 23, "instal": [23, 26, 27, 40, 513, 519], "what": [23, 513, 514], "ar": 23, "": 23, "prerequisit": 23, "requir": [23, 31, 513], "option": [23, 24, 26, 30, 52, 513, 519], "version": [23, 39, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 519], "python": [23, 29, 46], "can": 23, "codifi": [24, 26, 50], "command": [24, 26, 28], "A": [24, 26], "simpl": [24, 26], "part": [24, 26], "extend": [25, 26], "cli": [25, 26, 27], "line": 26, "interfac": 26, "guid": [26, 35, 37, 44], "introduct": [26, 27, 39, 40, 43, 46, 47, 48, 49, 50, 516, 520], "combin": [26, 27], "other": [26, 27, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499], "element": [29, 38, 43, 56, 57, 58, 59, 60, 61, 62, 515], "vr": [29, 458], "type": [29, 36], "encod": [30, 31, 32, 33, 51, 64, 146, 147, 148, 522], "plugin": [30, 31, 33], "gdcm": [30, 519], "pylibjpeg": [30, 519], "ad": [31, 43, 515, 517], "an": 31, "rle": 33, "lossless": 33, "valid": [33, 39], "paramet": 33, "avail": 33, "glossari": 34, "modul": 34, "document": [36, 37, 489, 501, 513, 514], "style": 36, "guidelin": 36, "restructuredtext": 36, "get": [37, 53, 515], "start": 37, "user": [37, 44], "api": [37, 486], "refer": [37, 486], "core": 38, "datael": [38, 126], "tag": [38, 60, 216, 217, 218, 219], "best": 39, "practic": 39, "enforc": 39, "futur": 39, "proof": 39, "your": [39, 513, 514], "code": [39, 513], "limit": 39, "major": [39, 489, 490, 491, 492, 493, 494, 495, 496, 498], "packag": [39, 41, 520], "licens": 40, "support": [40, 41, 42, 516], "next": [40, 513, 514, 515], "step": [40, 515], "compress": [41, 42, 520], "third": [41, 520], "parti": [41, 520], "transfer": [41, 42, 488], "syntax": [41, 42, 488], "handl": 42, "precondit": 42, "usag": [42, 66], "remov": [43, 517], "all": 43, "new": [43, 489, 493, 513, 514, 517], "entri": 43, "pars": [45, 63], "view": [46, 515], "matplotlib": 46, "tkinter": 46, "librari": [46, 513, 519], "pil": 46, "wxpython": 46, "overlai": [47, 200, 483], "overlay_arrai": 47, "pixel_arrai": 48, "color": 48, "space": 48, "palett": 48, "modal": 48, "lut": 48, "rescal": 48, "oper": 48, "voi": 48, "window": 48, "waveform_arrai": 49, "from": [50, 516], "scratch": 50, "charact": 51, "charset": [51, 73, 74, 75, 76], "configur": 52, "config": [52, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101], "includ": 53, "util": [54, 63, 70, 214, 482, 488], "datadict": [54, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "represent": [55, 56, 58, 59, 61], "dataelem": [57, 126, 127, 128], "multi": 58, "valu": [58, 59, 61, 62, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480], "multiv": [58, 199], "special": 61, "valuerep": [61, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460], "bulk": [63, 482], "encapsul": [63, 136, 520], "encap": [63, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "creat": [63, 513, 514, 516, 517], "except": 65, "error": [65, 149], "io": [67, 68, 70], "class": [68, 488], "filebas": [68, 150, 151, 152, 153], "fileread": [69, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "fileutil": [70, 170, 171, 172, 173, 174], "filewrit": [71, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "fileset": [72, 164, 165, 166, 167, 168, 169, 517], "convert_encod": 73, "decode_byt": 74, "decode_el": 75, "encode_str": 76, "apply_j2k_correct": 77, "ds_decim": 78, "ds_numpi": 79, "ignor": 80, "invalid_keyword_behavior": 81, "invalid_key_behavior": 82, "rais": 83, "warn": 84, "allow_ds_float": 85, "assume_implicit_vr_switch": 86, "convert_wrong_length_to_un": 87, "data_element_callback": 88, "data_element_callback_kwarg": 89, "datetime_convers": 90, "debug": 91, "enforce_valid_valu": 92, "future_behavior": 93, "overlay_data_handl": 94, "pixel_data_handl": [95, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 484], "reset_data_element_callback": 96, "show_file_meta": 98, "use_ds_decim": 99, "use_ds_numpi": 100, "use_is_numpi": 101, "get_charset_fil": 102, "get_palette_fil": 103, "get_testdata_fil": [104, 105], "add_dict_entri": [106, 107], "add_private_dict_entri": [108, 109], "dictionary_vm": 110, "dictionary_vr": 111, "dictionary_descript": 112, "dictionary_has_tag": 113, "dictionary_is_retir": 114, "dictionary_keyword": 115, "get_entri": 116, "get_private_entri": 117, "keyword_for_tag": 118, "mask_match": 119, "private_dictionary_vm": 120, "private_dictionary_vr": 121, "private_dictionary_descript": 122, "repeater_has_keyword": 123, "repeater_has_tag": 124, "tag_for_keyword": 125, "dataelement_from_raw": 127, "rawdatael": 128, "filedataset": 130, "filemetadataset": 131, "privateblock": 132, "validate_file_meta": 133, "decode_data_sequ": 134, "defragment_data": 135, "encapsulate_extend": 137, "fragment_fram": 138, "generate_pixel_data": 139, "generate_pixel_data_frag": 140, "generate_pixel_data_fram": 141, "get_frame_offset": 142, "itemize_frag": 143, "itemize_fram": 144, "read_item": 145, "rlelosslessencod": 146, "get_encod": 148, "invaliddicomerror": 149, "dicombytesio": 150, "dicomfil": 151, "dicomfilelik": 152, "dicomio": 153, "data_element_gener": 154, "data_element_offset_to_valu": 155, "dcmread": 156, "read_dataset": 157, "read_deferred_data_el": 158, "read_file_meta_info": 159, "read_parti": 160, "read_preambl": 161, "read_sequ": 162, "read_sequence_item": 163, "directory_record": 164, "fileinst": 165, "recordnod": 167, "generate_filenam": 168, "is_conformant_file_id": 169, "absorb_delimiter_item": 170, "find_byt": 171, "find_delimit": 172, "length_of_undefined_length": 173, "read_undefined_length_valu": 174, "correct_ambiguous_vr": 175, "correct_ambiguous_vr_el": 176, "dcmwrite": 177, "multi_str": 178, "write_atvalu": 179, "write_da": 180, "write_dt": 181, "write_obvalu": 182, "write_owvalu": 183, "write_pn": 184, "write_tm": 185, "write_ui": 186, "write_un": 187, "write_data_el": 188, "write_dataset": 189, "write_file_meta_info": 190, "write_number_str": 191, "write_numb": 192, "write_sequ": 193, "write_sequence_item": 194, "write_str": 195, "write_text": 196, "misc": [197, 198, 487], "is_dicom": 197, "size_in_byt": 198, "multivalu": 199, "numpy_handl": [200, 210, 481], "apply_color_lut": 201, "apply_modality_lut": 202, "apply_rescal": 203, "apply_voi": 204, "apply_voi_lut": 205, "apply_window": 206, "convert_color_spac": 207, "gdcm_handler": 208, "jpeg_ls_handl": 209, "pillow_handl": 211, "pylibjpeg_handl": 212, "rle_handl": 213, "basetag": 216, "tupletag": 218, "tag_in_except": 219, "uid": [220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 488], "acquisitioncontextsrstorag": 220, "advancedblendingpresentationstatestorag": 221, "alltransfersyntax": 222, "ambulatoryecgwaveformstorag": 223, "arterialpulsewaveformstorag": 224, "autorefractionmeasurementsstorag": 225, "basicstructureddisplaystorag": 226, "basictextsrstorag": 227, "basicvoiceaudiowaveformstorag": 228, "blendingsoftcopypresentationstatestorag": 229, "bodypositionwaveformstorag": 230, "breastprojectionxrayimagestorageforpresent": 231, "breastprojectionxrayimagestorageforprocess": 232, "breasttomosynthesisimagestorag": 233, "carmphotonelectronradiationrecordstorag": 234, "carmphotonelectronradiationstorag": 235, "ctdefinedprocedureprotocolstorag": 236, "ctimagestorag": 237, "ctperformedprocedureprotocolstorag": 238, "cardiacelectrophysiologywaveformstorag": 239, "chestcadsrstorag": 240, "coloncadsrstorag": 241, "colorpalettestorag": 242, "colorsoftcopypresentationstatestorag": 243, "compositingplanarmprvolumetricpresentationstatestorag": 244, "comprehensive3dsrstorag": 245, "comprehensivesrstorag": 246, "computedradiographyimagestorag": 247, "contentassessmentresultsstorag": 248, "cornealtopographymapstorag": 249, "dicos2daitstorag": 250, "dicos3daitstorag": 251, "dicosctimagestorag": 252, "dicosdigitalxrayimagestorageforpresent": 253, "dicosdigitalxrayimagestorageforprocess": 254, "dicosquadrupoleresonancestorag": 255, "dicosthreatdetectionreportstorag": 256, "deflatedexplicitvrlittleendian": 257, "deformablespatialregistrationstorag": 258, "dermoscopicphotographyimagestorag": 259, "digitalintraoralxrayimagestorageforpresent": 260, "digitalintraoralxrayimagestorageforprocess": 261, "digitalmammographyxrayimagestorageforpresent": 262, "digitalmammographyxrayimagestorageforprocess": 263, "digitalxrayimagestorageforpresent": 264, "digitalxrayimagestorageforprocess": 265, "eddycurrentimagestorag": 266, "eddycurrentmultiframeimagestorag": 267, "electromyogramwaveformstorag": 268, "electrooculogramwaveformstorag": 269, "encapsulatedcdastorag": 270, "encapsulatedmtlstorag": 271, "encapsulatedobjstorag": 272, "encapsulatedpdfstorag": 273, "encapsulatedstlstorag": 274, "enhancedctimagestorag": 275, "enhancedcontinuousrtimagestorag": 276, "enhancedmrcolorimagestorag": 277, "enhancedmrimagestorag": 278, "enhancedpetimagestorag": 279, "enhancedrtimagestorag": 280, "enhancedsrstorag": 281, "enhancedusvolumestorag": 282, "enhancedxaimagestorag": 283, "enhancedxrfimagestorag": 284, "enhancedxrayradiationdosesrstorag": 285, "explicitvrbigendian": 286, "explicitvrlittleendian": 287, "extensiblesrstorag": 288, "general32bitecgwaveformstorag": 289, "generalaudiowaveformstorag": 290, "generalecgwaveformstorag": 291, "genericimplanttemplatestorag": 292, "grayscaleplanarmprvolumetricpresentationstatestorag": 293, "grayscalesoftcopypresentationstatestorag": 294, "hevcm10p51": 295, "hevcmp51": 296, "hangingprotocolstorag": 297, "hemodynamicwaveformstorag": 298, "implantassemblytemplatestorag": 299, "implanttemplategroupstorag": 300, "implantationplansrstorag": 301, "implicitvrlittleendian": 302, "intraocularlenscalculationsstorag": 303, "intravascularopticalcoherencetomographyimagestorageforpresent": 304, "intravascularopticalcoherencetomographyimagestorageforprocess": 305, "inventorystorag": 306, "jpeg2000": 307, "jpeg2000lossless": 308, "jpeg2000mc": 309, "jpeg2000mclossless": 310, "jpeg2000transfersyntax": 311, "jpegbaseline8bit": 312, "jpegextended12bit": 313, "jpeglslossless": 314, "jpeglsnearlossless": 315, "jpeglstransfersyntax": 316, "jpeglossless": 317, "jpeglosslesssv1": 318, "jpegtransfersyntax": 319, "keratometrymeasurementsstorag": 320, "keyobjectselectiondocumentstorag": 321, "legacyconvertedenhancedctimagestorag": 322, "legacyconvertedenhancedmrimagestorag": 323, "legacyconvertedenhancedpetimagestorag": 324, "lensometrymeasurementsstorag": 325, "mpeg2mphl": 326, "mpeg2mphlf": 327, "mpeg2mpml": 328, "mpeg2mpmlf": 329, "mpeg4hp41": 330, "mpeg4hp41bd": 331, "mpeg4hp41bdf": 332, "mpeg4hp41f": 333, "mpeg4hp422d": 334, "mpeg4hp422df": 335, "mpeg4hp423d": 336, "mpeg4hp423df": 337, "mpeg4hp42stereo": 338, "mpeg4hp42stereof": 339, "mpegtransfersyntax": 340, "mrimagestorag": 341, "mrspectroscopystorag": 342, "maculargridthicknessandvolumereportstorag": 343, "mammographycadsrstorag": 344, "mediastoragedirectorystorag": 345, "microscopybulksimpleannotationsstorag": 346, "multiframegrayscalebytesecondarycaptureimagestorag": 347, "multiframegrayscalewordsecondarycaptureimagestorag": 348, "multiframesinglebitsecondarycaptureimagestorag": 349, "multiframetruecolorsecondarycaptureimagestorag": 350, "multichannelrespiratorywaveformstorag": 351, "multiplevolumerenderingvolumetricpresentationstatestorag": 352, "nuclearmedicineimagestorag": 353, "ophthalmicaxialmeasurementsstorag": 354, "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorag": 355, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 356, "ophthalmicphotography16bitimagestorag": 357, "ophthalmicphotography8bitimagestorag": 358, "ophthalmicthicknessmapstorag": 359, "ophthalmictomographyimagestorag": 360, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 361, "pydicom_implementation_uid": 362, "pydicom_root_uid": 363, "parametricmapstorag": 364, "patientradiationdosesrstorag": 365, "performedimagingagentadministrationsrstorag": 366, "photoacousticimagestorag": 367, "plannedimagingagentadministrationsrstorag": 368, "positronemissiontomographyimagestorag": 369, "procedurelogstorag": 370, "protocolapprovalstorag": 371, "pseudocolorsoftcopypresentationstatestorag": 372, "re_valid_uid": 373, "re_valid_uid_prefix": 374, "rlelossless": 375, "rletransfersyntax": 376, "rtbeamsdeliveryinstructionstorag": 377, "rtbeamstreatmentrecordstorag": 378, "rtbrachyapplicationsetupdeliveryinstructionstorag": 379, "rtbrachytreatmentrecordstorag": 380, "rtdosestorag": 381, "rtimagestorag": 382, "rtionbeamstreatmentrecordstorag": 383, "rtionplanstorag": 384, "rtpatientpositionacquisitioninstructionstorag": 385, "rtphysicianintentstorag": 386, "rtplanstorag": 387, "rtradiationrecordsetstorag": 388, "rtradiationsalvagerecordstorag": 389, "rtradiationsetdeliveryinstructionstorag": 390, "rtradiationsetstorag": 391, "rtsegmentannotationstorag": 392, "rtstructuresetstorag": 393, "rttreatmentpreparationstorag": 394, "rttreatmentsummaryrecordstorag": 395, "radiopharmaceuticalradiationdosesrstorag": 396, "rawdatastorag": 397, "realworldvaluemappingstorag": 398, "respiratorywaveformstorag": 399, "roboticarmradiationstorag": 400, "roboticradiationrecordstorag": 401, "routinescalpelectroencephalogramwaveformstorag": 402, "smptest211020uncompressedinterlacedactivevideo": 403, "smptest211020uncompressedprogressiveactivevideo": 404, "smptest211030pcmdigitalaudio": 405, "secondarycaptureimagestorag": 406, "segmentationstorag": 407, "segmentedvolumerenderingvolumetricpresentationstatestorag": 408, "simplifiedadultechosrstorag": 409, "sleepelectroencephalogramwaveformstorag": 410, "spatialfiducialsstorag": 411, "spatialregistrationstorag": 412, "spectacleprescriptionreportstorag": 413, "stereometricrelationshipstorag": 414, "subjectiverefractionmeasurementsstorag": 415, "surfacescanmeshstorag": 416, "surfacescanpointcloudstorag": 417, "surfacesegmentationstorag": 418, "tomotherapeuticradiationrecordstorag": 419, "tomotherapeuticradiationstorag": 420, "tractographyresultsstorag": 421, "twelveleadecgwaveformstorag": 422, "ultrasoundimagestorag": 424, "ultrasoundmultiframeimagestorag": 425, "uncompressedtransfersyntax": 426, "vlendoscopicimagestorag": 427, "vlmicroscopicimagestorag": 428, "vlphotographicimagestorag": 429, "vlslidecoordinatesmicroscopicimagestorag": 430, "vlwholeslidemicroscopyimagestorag": 431, "variablemodalitylutsoftcopypresentationstatestorag": 432, "videoendoscopicimagestorag": 433, "videomicroscopicimagestorag": 434, "videophotographicimagestorag": 435, "visualacuitymeasurementsstorag": 436, "volumerenderingvolumetricpresentationstatestorag": 437, "widefieldophthalmicphotography3dcoordinatesimagestorag": 438, "widefieldophthalmicphotographystereographicprojectionimagestorag": 439, "xadefinedprocedureprotocolstorag": 440, "xaperformedprocedureprotocolstorag": 441, "xaxrfgrayscalesoftcopypresentationstatestorag": 442, "xray3dangiographicimagestorag": 443, "xray3dcraniofacialimagestorag": 444, "xrayangiographicimagestorag": 445, "xrayradiationdosesrstorag": 446, "xrayradiofluoroscopicimagestorag": 447, "generate_uid": 448, "da": 449, "d": 450, "dsdecim": 451, "dsfloat": 452, "dt": 453, "isfloat": 455, "personnam": 456, "tm": 457, "format_number_as_d": 459, "is_valid_d": 460, "convert_ae_str": 461, "convert_atvalu": 462, "convert_da_str": 463, "convert_ds_str": 464, "convert_dt_str": 465, "convert_is_str": 466, "convert_obvalu": 467, "convert_owvalu": 468, "convert_pn": 469, "convert_sq": 470, "convert_tm_str": 471, "convert_ui": 472, "convert_un": 473, "convert_ur_str": 474, "convert_numb": 475, "convert_single_str": 476, "convert_str": 477, "convert_tag": 478, "convert_text": 479, "convert_valu": 480, "handler": [482, 483, 484, 485], "miscellan": 487, "definit": 488, "storag": 488, "sop": [488, 517], "releas": [489, 493, 519], "note": 489, "3": [489, 491, 501, 508, 510], "0": [489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 507, 508, 509, 510], "chang": [489, 490, 491, 492, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 507, 508, 509, 510, 513, 514, 517], "enhanc": [489, 490, 491, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 507, 508, 509, 510], "fix": [489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], "intern": [489, 509, 510], "2": [489, 490, 500, 504, 505, 506, 507, 508, 509], "4": [489, 492, 502, 503, 509], "1": [489, 498, 499, 500, 501, 502, 503, 505, 506], "changelog": [489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505], "infrastructur": [489, 498], "9": [489, 490, 491, 492, 493, 494, 495, 496, 497], "contrib": [489, 493, 496, 497], "contributor": [489, 497], "8": [489, 496], "bug": [489, 490, 491, 492, 494, 495, 496], "7": [489, 495], "6": [489, 494], "5": [489, 493], "thi": [489, 492, 493], "addit": [489, 492], "contribut": [512, 513, 514], "sourc": 513, "download": [513, 514, 519], "current": 513, "pytest": 513, "run": 513, "test": [513, 519], "suit": 513, "branch": [513, 514], "make": [513, 514], "preview": [513, 514], "commit": [513, 514], "pull": [513, 514], "request": [513, 514], "happen": [513, 514], "build": 514, "basic": 515, "access": 515, "modifi": [515, 517], "path": 515, "file_meta": 515, "ani": 515, "categori": 515, "standard": 515, "delet": 515, "json": 516, "convert": 516, "larg": 516, "binari": 516, "dicomdir": 517, "The": 517, "exist": 517, "stage": 517, "instanc": 517, "appli": 517, "conclus": 517, "tutori": 518, "offici": 519, "pip": 519, "conda": 519, "pillow": 519, "pyjpegl": 519, "develop": 519, "structur": 521, "report": 521}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Show a dicom file using hierarchical tree": [[0, "show-a-dicom-file-using-hierarchical-tree"]], "Image processing": [[1, "image-processing"], [6, "image-processing"]], "Downsize MRI image using pydicom": [[2, "downsize-mri-image-using-pydicom"]], "Decode and plot Waveform Data": [[3, "decode-and-plot-waveform-data"]], "Load CT slices and plot axial, sagittal and coronal images": [[4, "load-ct-slices-and-plot-axial-sagittal-and-coronal-images"]], "Computation times": [[5, "computation-times"], [13, "computation-times"], [19, "computation-times"], [21, "computation-times"], [511, "computation-times"]], "General examples": [[6, "general-examples"]], "Input-output": [[6, "input-output"], [7, "input-output"]], "Metadata processing": [[6, "metadata-processing"], [15, "metadata-processing"]], "Format the output of the data set printing": [[8, "format-the-output-of-the-data-set-printing"]], "Read a Dataset and plot Pixel Data": [[9, "read-a-dataset-and-plot-pixel-data"]], "Read a DICOM File-set": [[10, "read-a-dicom-file-set"]], "Read RTPLAN DICOM and list information": [[11, "read-rtplan-dicom-and-list-information"]], "Write DICOM data": [[12, "write-dicom-data"]], "Show working with memory-based dataset": [[14, "show-working-with-memory-based-dataset"]], "Add items to the private DICOM dictionary": [[16, "add-items-to-the-private-dicom-dictionary"]], "Anonymize DICOM data": [[17, "anonymize-dicom-data"]], "Anonymize a single file": [[17, "anonymize-a-single-file"]], "Working with sequences": [[18, "working-with-sequences"]], "Analyse differences between DICOM files": [[20, "analyse-differences-between-dicom-files"]], "Display unicode person names": [[22, "display-unicode-person-names"]], "Frequently asked questions": [[23, "frequently-asked-questions"]], "General": [[23, "general"]], "How do I cite pydicom?": [[23, "how-do-i-cite-pydicom"]], "Installation": [[23, "installation"]], "What are pydicom\u2019s prerequisites?": [[23, "what-are-pydicom-s-prerequisites"]], "Required": [[23, "required"]], "Optional": [[23, "optional"]], "What version of Python can I use?": [[23, "what-version-of-python-can-i-use"]], "pydicom codify command": [[24, "pydicom-codify-command"], [26, "pydicom-codify-command"]], "A simple example": [[24, "a-simple-example"], [26, "a-simple-example"]], "Command options": [[24, "command-options"], [26, "command-options"]], "Codifying a part of a DICOM file": [[24, "codifying-a-part-of-a-dicom-file"], [26, "codifying-a-part-of-a-dicom-file"]], "Extending the CLI": [[25, "extending-the-cli"], [26, "extending-the-cli"]], "Command-line Interface Guide": [[26, "command-line-interface-guide"]], "Introduction": [[26, "introduction"], [27, "introduction"], [39, "introduction"], [40, "introduction"], [43, "introduction"], [46, "introduction"], [47, "introduction"], [48, "introduction"], [49, "introduction"], [50, "introduction"], [520, "introduction"]], "Installing the pydicom CLI": [[26, "installing-the-pydicom-cli"], [27, "installing-the-pydicom-cli"]], "Combining with other CLIs": [[26, "combining-with-other-clis"], [27, "combining-with-other-clis"]], "pydicom show command": [[26, "pydicom-show-command"], [28, "pydicom-show-command"]], "Element VRs and Python types": [[29, "element-vrs-and-python-types"]], "Encoder Plugins Options": [[30, "encoder-plugins-options"]], "pydicom": [[30, "pydicom"]], "gdcm": [[30, "gdcm"]], "pylibjpeg": [[30, "pylibjpeg"]], "Pixel Data Encoder Plugins": [[31, "pixel-data-encoder-plugins"]], "Plugin Requirements": [[31, "plugin-requirements"]], "Adding Plugins to an Encoder": [[31, "adding-plugins-to-an-encoder"]], "Pixel Data Encoding": [[32, "pixel-data-encoding"]], "RLE Lossless Encoding": [[33, "rle-lossless-encoding"]], "Valid Image Pixel Parameters": [[33, "valid-image-pixel-parameters"]], "Available Plugins": [[33, "available-plugins"]], "Examples": [[33, "examples"], [37, "examples"]], "Glossary": [[34, "glossary"]], "Image Pixel Module": [[34, "image-pixel-module"]], "Guides": [[35, "guides"]], "Writing documentation": [[36, "writing-documentation"]], "Types of documentation": [[36, "types-of-documentation"]], "General style guidelines": [[36, "general-style-guidelines"]], "Guidelines for reStructuredText": [[36, "guidelines-for-restructuredtext"]], "pydicom documentation": [[37, "pydicom-documentation"]], "Getting Started": [[37, "getting-started"]], "User Guide": [[37, "user-guide"]], "API Reference": [[37, "api-reference"], [486, "api-reference"]], "Core elements in pydicom": [[38, "core-elements-in-pydicom"]], "Dataset": [[38, "dataset"]], "DataElement": [[38, "dataelement"]], "Tag": [[38, "tag"]], "Sequence": [[38, "sequence"]], "Best Practices": [[39, "best-practices"]], "Enforcing Valid DICOM": [[39, "enforcing-valid-dicom"]], "Future-proofing your code": [[39, "future-proofing-your-code"]], "Limiting the pydicom major version in your package": [[39, "limiting-the-pydicom-major-version-in-your-package"]], "Introduction to pydicom": [[40, "introduction-to-pydicom"]], "License": [[40, "license"]], "Installing": [[40, "installing"]], "Using pydicom": [[40, "using-pydicom"]], "Support": [[40, "support"]], "Next Steps": [[40, "next-steps"]], "Compressing Pixel Data": [[41, "compressing-pixel-data"], [520, "compressing-pixel-data"]], "Compressing using third-party packages": [[41, "compressing-using-third-party-packages"]], "Compressing using pydicom": [[41, "compressing-using-pydicom"], [520, "compressing-using-pydicom"]], "Supported Transfer Syntaxes": [[41, "supported-transfer-syntaxes"], [42, "supported-transfer-syntaxes"]], "Compressing with Dataset.compress()": [[41, "compressing-with-dataset-compress"]], "Handling of compressed pixel data": [[42, "handling-of-compressed-pixel-data"]], "Preconditions": [[42, "preconditions"]], "Usage": [[42, "usage"], [66, "usage"]], "Private Data Elements": [[43, "private-data-elements"]], "Displaying Private Data Elements in pydicom": [[43, "displaying-private-data-elements-in-pydicom"]], "Setting Private Data Elements with pydicom": [[43, "setting-private-data-elements-with-pydicom"]], "Removing All Private Data Elements": [[43, "removing-all-private-data-elements"]], "Adding new entries to the DICOM dictionary": [[43, "adding-new-entries-to-the-dicom-dictionary"]], "pydicom User Guide": [[44, "pydicom-user-guide"]], "Reading and writing DICOM files": [[45, "reading-and-writing-dicom-files"]], "File Reading/Parsing": [[45, "file-reading-parsing"]], "File Writing": [[45, "file-writing"]], "Viewing Images": [[46, "viewing-images"]], "Using pydicom with matplotlib": [[46, "using-pydicom-with-matplotlib"]], "Using pydicom with Tkinter": [[46, "using-pydicom-with-tkinter"]], "Using pydicom with Python Imaging Library (PIL)": [[46, "using-pydicom-with-python-imaging-library-pil"]], "Using pydicom with wxPython": [[46, "using-pydicom-with-wxpython"]], "Working with Overlay Data": [[47, "working-with-overlay-data"]], "Dataset.overlay_array()": [[47, "dataset-overlay-array"]], "Working with Pixel Data": [[48, "working-with-pixel-data"]], "Dataset.pixel_array": [[48, "dataset-pixel-array"]], "Color space": [[48, "color-space"]], "Palette Color": [[48, "palette-color"]], "Modality LUT or Rescale Operation": [[48, "modality-lut-or-rescale-operation"]], "VOI LUT or Windowing Operation": [[48, "voi-lut-or-windowing-operation"]], "Working with Waveform Data": [[49, "working-with-waveform-data"]], "Dataset.waveform_array()": [[49, "dataset-waveform-array"]], "Writing DICOM Files": [[50, "writing-dicom-files"]], "Using Codify": [[50, "using-codify"]], "Writing a file from Scratch": [[50, "writing-a-file-from-scratch"]], "Character Encoding and Decoding (pydicom.charset)": [[51, "character-encoding-and-decoding-pydicom-charset"]], "Configuration Options (pydicom.config)": [[52, "configuration-options-pydicom-config"]], "Getting Included Datasets (pydicom.data)": [[53, "getting-included-datasets-pydicom-data"]], "Data Dictionary Utilities (pydicom.datadict)": [[54, "data-dictionary-utilities-pydicom-datadict"]], "DICOM Data Dictionary": [[54, "dicom-data-dictionary"]], "Private Data Dictionary": [[54, "private-data-dictionary"]], "Representation of Datasets (pydicom.dataset)": [[55, "representation-of-datasets-pydicom-dataset"]], "Representation of Data Elements": [[56, "representation-of-data-elements"]], "Data Elements (pydicom.dataelem)": [[57, "data-elements-pydicom-dataelem"]], "Element Multi-value Representation (pydicom.multival)": [[58, "element-multi-value-representation-pydicom-multival"]], "Sequence Element Value Representation (pydicom.sequence)": [[59, "sequence-element-value-representation-pydicom-sequence"]], "Element Tags (pydicom.tag)": [[60, "element-tags-pydicom-tag"]], "Specialized Element Value Representation (pydicom.valuerep)": [[61, "specialized-element-value-representation-pydicom-valuerep"]], "Element Value Decoding (pydicom.values)": [[62, "element-value-decoding-pydicom-values"]], "Bulk Data Encapsulation Utilities (pydicom.encaps)": [[63, "bulk-data-encapsulation-utilities-pydicom-encaps"]], "Parsing Encapsulated Data": [[63, "parsing-encapsulated-data"]], "Creating Encapsulated Data": [[63, "creating-encapsulated-data"]], "Pixel Data Encoders (pydicom.encoders)": [[64, "pixel-data-encoders-pydicom-encoders"]], "Exceptions (pydicom.errors)": [[65, "exceptions-pydicom-errors"]], "Example Datasets (pydicom.examples)": [[66, "example-datasets-pydicom-examples"]], "Dataset IO": [[67, "dataset-io"]], "IO Base Classes (pydicom.filebase)": [[68, "io-base-classes-pydicom-filebase"]], "Dataset Reading (pydicom.filereader)": [[69, "dataset-reading-pydicom-filereader"]], "IO Utilities (pydicom.fileutil)": [[70, "io-utilities-pydicom-fileutil"]], "Dataset Writing (pydicom.filewriter)": [[71, "dataset-writing-pydicom-filewriter"]], "DICOM File-sets (pydicom.fileset)": [[72, "dicom-file-sets-pydicom-fileset"]], "pydicom.charset.convert_encodings": [[73, "pydicom-charset-convert-encodings"]], "pydicom.charset.decode_bytes": [[74, "pydicom-charset-decode-bytes"]], "pydicom.charset.decode_element": [[75, "pydicom-charset-decode-element"]], "pydicom.charset.encode_string": [[76, "pydicom-charset-encode-string"]], "pydicom.config.APPLY_J2K_CORRECTIONS": [[77, "pydicom-config-apply-j2k-corrections"]], "pydicom.config.DS_decimal": [[78, "pydicom-config-ds-decimal"]], "pydicom.config.DS_numpy": [[79, "pydicom-config-ds-numpy"]], "pydicom.config.IGNORE": [[80, "pydicom-config-ignore"]], "pydicom.config.INVALID_KEYWORD_BEHAVIOR": [[81, "pydicom-config-invalid-keyword-behavior"]], "pydicom.config.INVALID_KEY_BEHAVIOR": [[82, "pydicom-config-invalid-key-behavior"]], "pydicom.config.RAISE": [[83, "pydicom-config-raise"]], "pydicom.config.WARN": [[84, "pydicom-config-warn"]], "pydicom.config.allow_DS_float": [[85, "pydicom-config-allow-ds-float"]], "pydicom.config.assume_implicit_vr_switch": [[86, "pydicom-config-assume-implicit-vr-switch"]], "pydicom.config.convert_wrong_length_to_UN": [[87, "pydicom-config-convert-wrong-length-to-un"]], "pydicom.config.data_element_callback": [[88, "pydicom-config-data-element-callback"]], "pydicom.config.data_element_callback_kwargs": [[89, "pydicom-config-data-element-callback-kwargs"]], "pydicom.config.datetime_conversion": [[90, "pydicom-config-datetime-conversion"]], "pydicom.config.debug": [[91, "pydicom-config-debug"]], "pydicom.config.enforce_valid_values": [[92, "pydicom-config-enforce-valid-values"]], "pydicom.config.future_behavior": [[93, "pydicom-config-future-behavior"]], "pydicom.config.overlay_data_handlers": [[94, "pydicom-config-overlay-data-handlers"]], "pydicom.config.pixel_data_handlers": [[95, "pydicom-config-pixel-data-handlers"]], "pydicom.config.reset_data_element_callback": [[96, "pydicom-config-reset-data-element-callback"]], "pydicom.config.settings": [[97, "pydicom-config-settings"]], "pydicom.config.show_file_meta": [[98, "pydicom-config-show-file-meta"]], "pydicom.config.use_DS_decimal": [[99, "pydicom-config-use-ds-decimal"]], "pydicom.config.use_DS_numpy": [[100, "pydicom-config-use-ds-numpy"]], "pydicom.config.use_IS_numpy": [[101, "pydicom-config-use-is-numpy"]], "pydicom.data.get_charset_files": [[102, "pydicom-data-get-charset-files"]], "pydicom.data.get_palette_files": [[103, "pydicom-data-get-palette-files"]], "pydicom.data.get_testdata_file": [[104, "pydicom-data-get-testdata-file"]], "pydicom.data.get_testdata_files": [[105, "pydicom-data-get-testdata-files"]], "pydicom.datadict.add_dict_entries": [[106, "pydicom-datadict-add-dict-entries"]], "pydicom.datadict.add_dict_entry": [[107, "pydicom-datadict-add-dict-entry"]], "pydicom.datadict.add_private_dict_entries": [[108, "pydicom-datadict-add-private-dict-entries"]], "pydicom.datadict.add_private_dict_entry": [[109, "pydicom-datadict-add-private-dict-entry"]], "pydicom.datadict.dictionary_VM": [[110, "pydicom-datadict-dictionary-vm"]], "pydicom.datadict.dictionary_VR": [[111, "pydicom-datadict-dictionary-vr"]], "pydicom.datadict.dictionary_description": [[112, "pydicom-datadict-dictionary-description"]], "pydicom.datadict.dictionary_has_tag": [[113, "pydicom-datadict-dictionary-has-tag"]], "pydicom.datadict.dictionary_is_retired": [[114, "pydicom-datadict-dictionary-is-retired"]], "pydicom.datadict.dictionary_keyword": [[115, "pydicom-datadict-dictionary-keyword"]], "pydicom.datadict.get_entry": [[116, "pydicom-datadict-get-entry"]], "pydicom.datadict.get_private_entry": [[117, "pydicom-datadict-get-private-entry"]], "pydicom.datadict.keyword_for_tag": [[118, "pydicom-datadict-keyword-for-tag"]], "pydicom.datadict.mask_match": [[119, "pydicom-datadict-mask-match"]], "pydicom.datadict.private_dictionary_VM": [[120, "pydicom-datadict-private-dictionary-vm"]], "pydicom.datadict.private_dictionary_VR": [[121, "pydicom-datadict-private-dictionary-vr"]], "pydicom.datadict.private_dictionary_description": [[122, "pydicom-datadict-private-dictionary-description"]], "pydicom.datadict.repeater_has_keyword": [[123, "pydicom-datadict-repeater-has-keyword"]], "pydicom.datadict.repeater_has_tag": [[124, "pydicom-datadict-repeater-has-tag"]], "pydicom.datadict.tag_for_keyword": [[125, "pydicom-datadict-tag-for-keyword"]], "pydicom.dataelem.DataElement": [[126, "pydicom-dataelem-dataelement"]], "pydicom.dataelem.DataElement_from_raw": [[127, "pydicom-dataelem-dataelement-from-raw"]], "pydicom.dataelem.RawDataElement": [[128, "pydicom-dataelem-rawdataelement"]], "pydicom.dataset.Dataset": [[129, "pydicom-dataset-dataset"]], "pydicom.dataset.FileDataset": [[130, "pydicom-dataset-filedataset"]], "pydicom.dataset.FileMetaDataset": [[131, "pydicom-dataset-filemetadataset"]], "pydicom.dataset.PrivateBlock": [[132, "pydicom-dataset-privateblock"]], "pydicom.dataset.validate_file_meta": [[133, "pydicom-dataset-validate-file-meta"]], "pydicom.encaps.decode_data_sequence": [[134, "pydicom-encaps-decode-data-sequence"]], "pydicom.encaps.defragment_data": [[135, "pydicom-encaps-defragment-data"]], "pydicom.encaps.encapsulate": [[136, "pydicom-encaps-encapsulate"]], "pydicom.encaps.encapsulate_extended": [[137, "pydicom-encaps-encapsulate-extended"]], "pydicom.encaps.fragment_frame": [[138, "pydicom-encaps-fragment-frame"]], "pydicom.encaps.generate_pixel_data": [[139, "pydicom-encaps-generate-pixel-data"]], "pydicom.encaps.generate_pixel_data_fragment": [[140, "pydicom-encaps-generate-pixel-data-fragment"]], "pydicom.encaps.generate_pixel_data_frame": [[141, "pydicom-encaps-generate-pixel-data-frame"]], "pydicom.encaps.get_frame_offsets": [[142, "pydicom-encaps-get-frame-offsets"]], "pydicom.encaps.itemize_fragment": [[143, "pydicom-encaps-itemize-fragment"]], "pydicom.encaps.itemize_frame": [[144, "pydicom-encaps-itemize-frame"]], "pydicom.encaps.read_item": [[145, "pydicom-encaps-read-item"]], "pydicom.encoders.RLELosslessEncoder": [[146, "pydicom-encoders-rlelosslessencoder"]], "pydicom.encoders.base.Encoder": [[147, "pydicom-encoders-base-encoder"]], "pydicom.encoders.get_encoder": [[148, "pydicom-encoders-get-encoder"]], "pydicom.errors.InvalidDicomError": [[149, "pydicom-errors-invaliddicomerror"]], "pydicom.filebase.DicomBytesIO": [[150, "pydicom-filebase-dicombytesio"]], "pydicom.filebase.DicomFile": [[151, "pydicom-filebase-dicomfile"]], "pydicom.filebase.DicomFileLike": [[152, "pydicom-filebase-dicomfilelike"]], "pydicom.filebase.DicomIO": [[153, "pydicom-filebase-dicomio"]], "pydicom.filereader.data_element_generator": [[154, "pydicom-filereader-data-element-generator"]], "pydicom.filereader.data_element_offset_to_value": [[155, "pydicom-filereader-data-element-offset-to-value"]], "pydicom.filereader.dcmread": [[156, "pydicom-filereader-dcmread"]], "pydicom.filereader.read_dataset": [[157, "pydicom-filereader-read-dataset"]], "pydicom.filereader.read_deferred_data_element": [[158, "pydicom-filereader-read-deferred-data-element"]], "pydicom.filereader.read_file_meta_info": [[159, "pydicom-filereader-read-file-meta-info"]], "pydicom.filereader.read_partial": [[160, "pydicom-filereader-read-partial"]], "pydicom.filereader.read_preamble": [[161, "pydicom-filereader-read-preamble"]], "pydicom.filereader.read_sequence": [[162, "pydicom-filereader-read-sequence"]], "pydicom.filereader.read_sequence_item": [[163, "pydicom-filereader-read-sequence-item"]], "pydicom.fileset.DIRECTORY_RECORDERS": [[164, "pydicom-fileset-directory-recorders"]], "pydicom.fileset.FileInstance": [[165, "pydicom-fileset-fileinstance"]], "pydicom.fileset.FileSet": [[166, "pydicom-fileset-fileset"]], "pydicom.fileset.RecordNode": [[167, "pydicom-fileset-recordnode"]], "pydicom.fileset.generate_filename": [[168, "pydicom-fileset-generate-filename"]], "pydicom.fileset.is_conformant_file_id": [[169, "pydicom-fileset-is-conformant-file-id"]], "pydicom.fileutil.absorb_delimiter_item": [[170, "pydicom-fileutil-absorb-delimiter-item"]], "pydicom.fileutil.find_bytes": [[171, "pydicom-fileutil-find-bytes"]], "pydicom.fileutil.find_delimiter": [[172, "pydicom-fileutil-find-delimiter"]], "pydicom.fileutil.length_of_undefined_length": [[173, "pydicom-fileutil-length-of-undefined-length"]], "pydicom.fileutil.read_undefined_length_value": [[174, "pydicom-fileutil-read-undefined-length-value"]], "pydicom.filewriter.correct_ambiguous_vr": [[175, "pydicom-filewriter-correct-ambiguous-vr"]], "pydicom.filewriter.correct_ambiguous_vr_element": [[176, "pydicom-filewriter-correct-ambiguous-vr-element"]], "pydicom.filewriter.dcmwrite": [[177, "pydicom-filewriter-dcmwrite"]], "pydicom.filewriter.multi_string": [[178, "pydicom-filewriter-multi-string"]], "pydicom.filewriter.write_ATvalue": [[179, "pydicom-filewriter-write-atvalue"]], "pydicom.filewriter.write_DA": [[180, "pydicom-filewriter-write-da"]], "pydicom.filewriter.write_DT": [[181, "pydicom-filewriter-write-dt"]], "pydicom.filewriter.write_OBvalue": [[182, "pydicom-filewriter-write-obvalue"]], "pydicom.filewriter.write_OWvalue": [[183, "pydicom-filewriter-write-owvalue"]], "pydicom.filewriter.write_PN": [[184, "pydicom-filewriter-write-pn"]], "pydicom.filewriter.write_TM": [[185, "pydicom-filewriter-write-tm"]], "pydicom.filewriter.write_UI": [[186, "pydicom-filewriter-write-ui"]], "pydicom.filewriter.write_UN": [[187, "pydicom-filewriter-write-un"]], "pydicom.filewriter.write_data_element": [[188, "pydicom-filewriter-write-data-element"]], "pydicom.filewriter.write_dataset": [[189, "pydicom-filewriter-write-dataset"]], "pydicom.filewriter.write_file_meta_info": [[190, "pydicom-filewriter-write-file-meta-info"]], "pydicom.filewriter.write_number_string": [[191, "pydicom-filewriter-write-number-string"]], "pydicom.filewriter.write_numbers": [[192, "pydicom-filewriter-write-numbers"]], "pydicom.filewriter.write_sequence": [[193, "pydicom-filewriter-write-sequence"]], "pydicom.filewriter.write_sequence_item": [[194, "pydicom-filewriter-write-sequence-item"]], "pydicom.filewriter.write_string": [[195, "pydicom-filewriter-write-string"]], "pydicom.filewriter.write_text": [[196, "pydicom-filewriter-write-text"]], "pydicom.misc.is_dicom": [[197, "pydicom-misc-is-dicom"]], "pydicom.misc.size_in_bytes": [[198, "pydicom-misc-size-in-bytes"]], "pydicom.multival.MultiValue": [[199, "pydicom-multival-multivalue"]], "pydicom.overlays.numpy_handler": [[200, "module-pydicom.overlays.numpy_handler"]], "pydicom.pixel_data_handlers.apply_color_lut": [[201, "pydicom-pixel-data-handlers-apply-color-lut"]], "pydicom.pixel_data_handlers.apply_modality_lut": [[202, "pydicom-pixel-data-handlers-apply-modality-lut"]], "pydicom.pixel_data_handlers.apply_rescale": [[203, "pydicom-pixel-data-handlers-apply-rescale"]], "pydicom.pixel_data_handlers.apply_voi": [[204, "pydicom-pixel-data-handlers-apply-voi"]], "pydicom.pixel_data_handlers.apply_voi_lut": [[205, "pydicom-pixel-data-handlers-apply-voi-lut"]], "pydicom.pixel_data_handlers.apply_windowing": [[206, "pydicom-pixel-data-handlers-apply-windowing"]], "pydicom.pixel_data_handlers.convert_color_space": [[207, "pydicom-pixel-data-handlers-convert-color-space"]], "pydicom.pixel_data_handlers.gdcm_handler": [[208, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[209, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "pydicom.pixel_data_handlers.numpy_handler": [[210, "module-pydicom.pixel_data_handlers.numpy_handler"]], "pydicom.pixel_data_handlers.pillow_handler": [[211, "module-pydicom.pixel_data_handlers.pillow_handler"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[212, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "pydicom.pixel_data_handlers.rle_handler": [[213, "module-pydicom.pixel_data_handlers.rle_handler"]], "pydicom.pixel_data_handlers.util": [[214, "module-pydicom.pixel_data_handlers.util"]], "pydicom.sequence.Sequence": [[215, "pydicom-sequence-sequence"]], "pydicom.tag.BaseTag": [[216, "pydicom-tag-basetag"]], "pydicom.tag.Tag": [[217, "pydicom-tag-tag"]], "pydicom.tag.TupleTag": [[218, "pydicom-tag-tupletag"]], "pydicom.tag.tag_in_exception": [[219, "pydicom-tag-tag-in-exception"]], "pydicom.uid.AcquisitionContextSRStorage": [[220, "pydicom-uid-acquisitioncontextsrstorage"]], "pydicom.uid.AdvancedBlendingPresentationStateStorage": [[221, "pydicom-uid-advancedblendingpresentationstatestorage"]], "pydicom.uid.AllTransferSyntaxes": [[222, "pydicom-uid-alltransfersyntaxes"]], "pydicom.uid.AmbulatoryECGWaveformStorage": [[223, "pydicom-uid-ambulatoryecgwaveformstorage"]], "pydicom.uid.ArterialPulseWaveformStorage": [[224, "pydicom-uid-arterialpulsewaveformstorage"]], "pydicom.uid.AutorefractionMeasurementsStorage": [[225, "pydicom-uid-autorefractionmeasurementsstorage"]], "pydicom.uid.BasicStructuredDisplayStorage": [[226, "pydicom-uid-basicstructureddisplaystorage"]], "pydicom.uid.BasicTextSRStorage": [[227, "pydicom-uid-basictextsrstorage"]], "pydicom.uid.BasicVoiceAudioWaveformStorage": [[228, "pydicom-uid-basicvoiceaudiowaveformstorage"]], "pydicom.uid.BlendingSoftcopyPresentationStateStorage": [[229, "pydicom-uid-blendingsoftcopypresentationstatestorage"]], "pydicom.uid.BodyPositionWaveformStorage": [[230, "pydicom-uid-bodypositionwaveformstorage"]], "pydicom.uid.BreastProjectionXRayImageStorageForPresentation": [[231, "pydicom-uid-breastprojectionxrayimagestorageforpresentation"]], "pydicom.uid.BreastProjectionXRayImageStorageForProcessing": [[232, "pydicom-uid-breastprojectionxrayimagestorageforprocessing"]], "pydicom.uid.BreastTomosynthesisImageStorage": [[233, "pydicom-uid-breasttomosynthesisimagestorage"]], "pydicom.uid.CArmPhotonElectronRadiationRecordStorage": [[234, "pydicom-uid-carmphotonelectronradiationrecordstorage"]], "pydicom.uid.CArmPhotonElectronRadiationStorage": [[235, "pydicom-uid-carmphotonelectronradiationstorage"]], "pydicom.uid.CTDefinedProcedureProtocolStorage": [[236, "pydicom-uid-ctdefinedprocedureprotocolstorage"]], "pydicom.uid.CTImageStorage": [[237, "pydicom-uid-ctimagestorage"]], "pydicom.uid.CTPerformedProcedureProtocolStorage": [[238, "pydicom-uid-ctperformedprocedureprotocolstorage"]], "pydicom.uid.CardiacElectrophysiologyWaveformStorage": [[239, "pydicom-uid-cardiacelectrophysiologywaveformstorage"]], "pydicom.uid.ChestCADSRStorage": [[240, "pydicom-uid-chestcadsrstorage"]], "pydicom.uid.ColonCADSRStorage": [[241, "pydicom-uid-coloncadsrstorage"]], "pydicom.uid.ColorPaletteStorage": [[242, "pydicom-uid-colorpalettestorage"]], "pydicom.uid.ColorSoftcopyPresentationStateStorage": [[243, "pydicom-uid-colorsoftcopypresentationstatestorage"]], "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage": [[244, "pydicom-uid-compositingplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.Comprehensive3DSRStorage": [[245, "pydicom-uid-comprehensive3dsrstorage"]], "pydicom.uid.ComprehensiveSRStorage": [[246, "pydicom-uid-comprehensivesrstorage"]], "pydicom.uid.ComputedRadiographyImageStorage": [[247, "pydicom-uid-computedradiographyimagestorage"]], "pydicom.uid.ContentAssessmentResultsStorage": [[248, "pydicom-uid-contentassessmentresultsstorage"]], "pydicom.uid.CornealTopographyMapStorage": [[249, "pydicom-uid-cornealtopographymapstorage"]], "pydicom.uid.DICOS2DAITStorage": [[250, "pydicom-uid-dicos2daitstorage"]], "pydicom.uid.DICOS3DAITStorage": [[251, "pydicom-uid-dicos3daitstorage"]], "pydicom.uid.DICOSCTImageStorage": [[252, "pydicom-uid-dicosctimagestorage"]], "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation": [[253, "pydicom-uid-dicosdigitalxrayimagestorageforpresentation"]], "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing": [[254, "pydicom-uid-dicosdigitalxrayimagestorageforprocessing"]], "pydicom.uid.DICOSQuadrupoleResonanceStorage": [[255, "pydicom-uid-dicosquadrupoleresonancestorage"]], "pydicom.uid.DICOSThreatDetectionReportStorage": [[256, "pydicom-uid-dicosthreatdetectionreportstorage"]], "pydicom.uid.DeflatedExplicitVRLittleEndian": [[257, "pydicom-uid-deflatedexplicitvrlittleendian"]], "pydicom.uid.DeformableSpatialRegistrationStorage": [[258, "pydicom-uid-deformablespatialregistrationstorage"]], "pydicom.uid.DermoscopicPhotographyImageStorage": [[259, "pydicom-uid-dermoscopicphotographyimagestorage"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation": [[260, "pydicom-uid-digitalintraoralxrayimagestorageforpresentation"]], "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing": [[261, "pydicom-uid-digitalintraoralxrayimagestorageforprocessing"]], "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation": [[262, "pydicom-uid-digitalmammographyxrayimagestorageforpresentation"]], "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing": [[263, "pydicom-uid-digitalmammographyxrayimagestorageforprocessing"]], "pydicom.uid.DigitalXRayImageStorageForPresentation": [[264, "pydicom-uid-digitalxrayimagestorageforpresentation"]], "pydicom.uid.DigitalXRayImageStorageForProcessing": [[265, "pydicom-uid-digitalxrayimagestorageforprocessing"]], "pydicom.uid.EddyCurrentImageStorage": [[266, "pydicom-uid-eddycurrentimagestorage"]], "pydicom.uid.EddyCurrentMultiFrameImageStorage": [[267, "pydicom-uid-eddycurrentmultiframeimagestorage"]], "pydicom.uid.ElectromyogramWaveformStorage": [[268, "pydicom-uid-electromyogramwaveformstorage"]], "pydicom.uid.ElectrooculogramWaveformStorage": [[269, "pydicom-uid-electrooculogramwaveformstorage"]], "pydicom.uid.EncapsulatedCDAStorage": [[270, "pydicom-uid-encapsulatedcdastorage"]], "pydicom.uid.EncapsulatedMTLStorage": [[271, "pydicom-uid-encapsulatedmtlstorage"]], "pydicom.uid.EncapsulatedOBJStorage": [[272, "pydicom-uid-encapsulatedobjstorage"]], "pydicom.uid.EncapsulatedPDFStorage": [[273, "pydicom-uid-encapsulatedpdfstorage"]], "pydicom.uid.EncapsulatedSTLStorage": [[274, "pydicom-uid-encapsulatedstlstorage"]], "pydicom.uid.EnhancedCTImageStorage": [[275, "pydicom-uid-enhancedctimagestorage"]], "pydicom.uid.EnhancedContinuousRTImageStorage": [[276, "pydicom-uid-enhancedcontinuousrtimagestorage"]], "pydicom.uid.EnhancedMRColorImageStorage": [[277, "pydicom-uid-enhancedmrcolorimagestorage"]], "pydicom.uid.EnhancedMRImageStorage": [[278, "pydicom-uid-enhancedmrimagestorage"]], "pydicom.uid.EnhancedPETImageStorage": [[279, "pydicom-uid-enhancedpetimagestorage"]], "pydicom.uid.EnhancedRTImageStorage": [[280, "pydicom-uid-enhancedrtimagestorage"]], "pydicom.uid.EnhancedSRStorage": [[281, "pydicom-uid-enhancedsrstorage"]], "pydicom.uid.EnhancedUSVolumeStorage": [[282, "pydicom-uid-enhancedusvolumestorage"]], "pydicom.uid.EnhancedXAImageStorage": [[283, "pydicom-uid-enhancedxaimagestorage"]], "pydicom.uid.EnhancedXRFImageStorage": [[284, "pydicom-uid-enhancedxrfimagestorage"]], "pydicom.uid.EnhancedXRayRadiationDoseSRStorage": [[285, "pydicom-uid-enhancedxrayradiationdosesrstorage"]], "pydicom.uid.ExplicitVRBigEndian": [[286, "pydicom-uid-explicitvrbigendian"]], "pydicom.uid.ExplicitVRLittleEndian": [[287, "pydicom-uid-explicitvrlittleendian"]], "pydicom.uid.ExtensibleSRStorage": [[288, "pydicom-uid-extensiblesrstorage"]], "pydicom.uid.General32bitECGWaveformStorage": [[289, "pydicom-uid-general32bitecgwaveformstorage"]], "pydicom.uid.GeneralAudioWaveformStorage": [[290, "pydicom-uid-generalaudiowaveformstorage"]], "pydicom.uid.GeneralECGWaveformStorage": [[291, "pydicom-uid-generalecgwaveformstorage"]], "pydicom.uid.GenericImplantTemplateStorage": [[292, "pydicom-uid-genericimplanttemplatestorage"]], "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage": [[293, "pydicom-uid-grayscaleplanarmprvolumetricpresentationstatestorage"]], "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage": [[294, "pydicom-uid-grayscalesoftcopypresentationstatestorage"]], "pydicom.uid.HEVCM10P51": [[295, "pydicom-uid-hevcm10p51"]], "pydicom.uid.HEVCMP51": [[296, "pydicom-uid-hevcmp51"]], "pydicom.uid.HangingProtocolStorage": [[297, "pydicom-uid-hangingprotocolstorage"]], "pydicom.uid.HemodynamicWaveformStorage": [[298, "pydicom-uid-hemodynamicwaveformstorage"]], "pydicom.uid.ImplantAssemblyTemplateStorage": [[299, "pydicom-uid-implantassemblytemplatestorage"]], "pydicom.uid.ImplantTemplateGroupStorage": [[300, "pydicom-uid-implanttemplategroupstorage"]], "pydicom.uid.ImplantationPlanSRStorage": [[301, "pydicom-uid-implantationplansrstorage"]], "pydicom.uid.ImplicitVRLittleEndian": [[302, "pydicom-uid-implicitvrlittleendian"]], "pydicom.uid.IntraocularLensCalculationsStorage": [[303, "pydicom-uid-intraocularlenscalculationsstorage"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation": [[304, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforpresentation"]], "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing": [[305, "pydicom-uid-intravascularopticalcoherencetomographyimagestorageforprocessing"]], "pydicom.uid.InventoryStorage": [[306, "pydicom-uid-inventorystorage"]], "pydicom.uid.JPEG2000": [[307, "pydicom-uid-jpeg2000"]], "pydicom.uid.JPEG2000Lossless": [[308, "pydicom-uid-jpeg2000lossless"]], "pydicom.uid.JPEG2000MC": [[309, "pydicom-uid-jpeg2000mc"]], "pydicom.uid.JPEG2000MCLossless": [[310, "pydicom-uid-jpeg2000mclossless"]], "pydicom.uid.JPEG2000TransferSyntaxes": [[311, "pydicom-uid-jpeg2000transfersyntaxes"]], "pydicom.uid.JPEGBaseline8Bit": [[312, "pydicom-uid-jpegbaseline8bit"]], "pydicom.uid.JPEGExtended12Bit": [[313, "pydicom-uid-jpegextended12bit"]], "pydicom.uid.JPEGLSLossless": [[314, "pydicom-uid-jpeglslossless"]], "pydicom.uid.JPEGLSNearLossless": [[315, "pydicom-uid-jpeglsnearlossless"]], "pydicom.uid.JPEGLSTransferSyntaxes": [[316, "pydicom-uid-jpeglstransfersyntaxes"]], "pydicom.uid.JPEGLossless": [[317, "pydicom-uid-jpeglossless"]], "pydicom.uid.JPEGLosslessSV1": [[318, "pydicom-uid-jpeglosslesssv1"]], "pydicom.uid.JPEGTransferSyntaxes": [[319, "pydicom-uid-jpegtransfersyntaxes"]], "pydicom.uid.KeratometryMeasurementsStorage": [[320, "pydicom-uid-keratometrymeasurementsstorage"]], "pydicom.uid.KeyObjectSelectionDocumentStorage": [[321, "pydicom-uid-keyobjectselectiondocumentstorage"]], "pydicom.uid.LegacyConvertedEnhancedCTImageStorage": [[322, "pydicom-uid-legacyconvertedenhancedctimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedMRImageStorage": [[323, "pydicom-uid-legacyconvertedenhancedmrimagestorage"]], "pydicom.uid.LegacyConvertedEnhancedPETImageStorage": [[324, "pydicom-uid-legacyconvertedenhancedpetimagestorage"]], "pydicom.uid.LensometryMeasurementsStorage": [[325, "pydicom-uid-lensometrymeasurementsstorage"]], "pydicom.uid.MPEG2MPHL": [[326, "pydicom-uid-mpeg2mphl"]], "pydicom.uid.MPEG2MPHLF": [[327, "pydicom-uid-mpeg2mphlf"]], "pydicom.uid.MPEG2MPML": [[328, "pydicom-uid-mpeg2mpml"]], "pydicom.uid.MPEG2MPMLF": [[329, "pydicom-uid-mpeg2mpmlf"]], "pydicom.uid.MPEG4HP41": [[330, "pydicom-uid-mpeg4hp41"]], "pydicom.uid.MPEG4HP41BD": [[331, "pydicom-uid-mpeg4hp41bd"]], "pydicom.uid.MPEG4HP41BDF": [[332, "pydicom-uid-mpeg4hp41bdf"]], "pydicom.uid.MPEG4HP41F": [[333, "pydicom-uid-mpeg4hp41f"]], "pydicom.uid.MPEG4HP422D": [[334, "pydicom-uid-mpeg4hp422d"]], "pydicom.uid.MPEG4HP422DF": [[335, "pydicom-uid-mpeg4hp422df"]], "pydicom.uid.MPEG4HP423D": [[336, "pydicom-uid-mpeg4hp423d"]], "pydicom.uid.MPEG4HP423DF": [[337, "pydicom-uid-mpeg4hp423df"]], "pydicom.uid.MPEG4HP42STEREO": [[338, "pydicom-uid-mpeg4hp42stereo"]], "pydicom.uid.MPEG4HP42STEREOF": [[339, "pydicom-uid-mpeg4hp42stereof"]], "pydicom.uid.MPEGTransferSyntaxes": [[340, "pydicom-uid-mpegtransfersyntaxes"]], "pydicom.uid.MRImageStorage": [[341, "pydicom-uid-mrimagestorage"]], "pydicom.uid.MRSpectroscopyStorage": [[342, "pydicom-uid-mrspectroscopystorage"]], "pydicom.uid.MacularGridThicknessAndVolumeReportStorage": [[343, "pydicom-uid-maculargridthicknessandvolumereportstorage"]], "pydicom.uid.MammographyCADSRStorage": [[344, "pydicom-uid-mammographycadsrstorage"]], "pydicom.uid.MediaStorageDirectoryStorage": [[345, "pydicom-uid-mediastoragedirectorystorage"]], "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage": [[346, "pydicom-uid-microscopybulksimpleannotationsstorage"]], "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage": [[347, "pydicom-uid-multiframegrayscalebytesecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage": [[348, "pydicom-uid-multiframegrayscalewordsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage": [[349, "pydicom-uid-multiframesinglebitsecondarycaptureimagestorage"]], "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage": [[350, "pydicom-uid-multiframetruecolorsecondarycaptureimagestorage"]], "pydicom.uid.MultichannelRespiratoryWaveformStorage": [[351, "pydicom-uid-multichannelrespiratorywaveformstorage"]], "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage": [[352, "pydicom-uid-multiplevolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.NuclearMedicineImageStorage": [[353, "pydicom-uid-nuclearmedicineimagestorage"]], "pydicom.uid.OphthalmicAxialMeasurementsStorage": [[354, "pydicom-uid-ophthalmicaxialmeasurementsstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage": [[355, "pydicom-uid-ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage"]], "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage": [[356, "pydicom-uid-ophthalmicopticalcoherencetomographyenfaceimagestorage"]], "pydicom.uid.OphthalmicPhotography16BitImageStorage": [[357, "pydicom-uid-ophthalmicphotography16bitimagestorage"]], "pydicom.uid.OphthalmicPhotography8BitImageStorage": [[358, "pydicom-uid-ophthalmicphotography8bitimagestorage"]], "pydicom.uid.OphthalmicThicknessMapStorage": [[359, "pydicom-uid-ophthalmicthicknessmapstorage"]], "pydicom.uid.OphthalmicTomographyImageStorage": [[360, "pydicom-uid-ophthalmictomographyimagestorage"]], "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage": [[361, "pydicom-uid-ophthalmicvisualfieldstaticperimetrymeasurementsstorage"]], "pydicom.uid.PYDICOM_IMPLEMENTATION_UID": [[362, "pydicom-uid-pydicom-implementation-uid"]], "pydicom.uid.PYDICOM_ROOT_UID": [[363, "pydicom-uid-pydicom-root-uid"]], "pydicom.uid.ParametricMapStorage": [[364, "pydicom-uid-parametricmapstorage"]], "pydicom.uid.PatientRadiationDoseSRStorage": [[365, "pydicom-uid-patientradiationdosesrstorage"]], "pydicom.uid.PerformedImagingAgentAdministrationSRStorage": [[366, "pydicom-uid-performedimagingagentadministrationsrstorage"]], "pydicom.uid.PhotoacousticImageStorage": [[367, "pydicom-uid-photoacousticimagestorage"]], "pydicom.uid.PlannedImagingAgentAdministrationSRStorage": [[368, "pydicom-uid-plannedimagingagentadministrationsrstorage"]], "pydicom.uid.PositronEmissionTomographyImageStorage": [[369, "pydicom-uid-positronemissiontomographyimagestorage"]], "pydicom.uid.ProcedureLogStorage": [[370, "pydicom-uid-procedurelogstorage"]], "pydicom.uid.ProtocolApprovalStorage": [[371, "pydicom-uid-protocolapprovalstorage"]], "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage": [[372, "pydicom-uid-pseudocolorsoftcopypresentationstatestorage"]], "pydicom.uid.RE_VALID_UID": [[373, "pydicom-uid-re-valid-uid"]], "pydicom.uid.RE_VALID_UID_PREFIX": [[374, "pydicom-uid-re-valid-uid-prefix"]], "pydicom.uid.RLELossless": [[375, "pydicom-uid-rlelossless"]], "pydicom.uid.RLETransferSyntaxes": [[376, "pydicom-uid-rletransfersyntaxes"]], "pydicom.uid.RTBeamsDeliveryInstructionStorage": [[377, "pydicom-uid-rtbeamsdeliveryinstructionstorage"]], "pydicom.uid.RTBeamsTreatmentRecordStorage": [[378, "pydicom-uid-rtbeamstreatmentrecordstorage"]], "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage": [[379, "pydicom-uid-rtbrachyapplicationsetupdeliveryinstructionstorage"]], "pydicom.uid.RTBrachyTreatmentRecordStorage": [[380, "pydicom-uid-rtbrachytreatmentrecordstorage"]], "pydicom.uid.RTDoseStorage": [[381, "pydicom-uid-rtdosestorage"]], "pydicom.uid.RTImageStorage": [[382, "pydicom-uid-rtimagestorage"]], "pydicom.uid.RTIonBeamsTreatmentRecordStorage": [[383, "pydicom-uid-rtionbeamstreatmentrecordstorage"]], "pydicom.uid.RTIonPlanStorage": [[384, "pydicom-uid-rtionplanstorage"]], "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage": [[385, "pydicom-uid-rtpatientpositionacquisitioninstructionstorage"]], "pydicom.uid.RTPhysicianIntentStorage": [[386, "pydicom-uid-rtphysicianintentstorage"]], "pydicom.uid.RTPlanStorage": [[387, "pydicom-uid-rtplanstorage"]], "pydicom.uid.RTRadiationRecordSetStorage": [[388, "pydicom-uid-rtradiationrecordsetstorage"]], "pydicom.uid.RTRadiationSalvageRecordStorage": [[389, "pydicom-uid-rtradiationsalvagerecordstorage"]], "pydicom.uid.RTRadiationSetDeliveryInstructionStorage": [[390, "pydicom-uid-rtradiationsetdeliveryinstructionstorage"]], "pydicom.uid.RTRadiationSetStorage": [[391, "pydicom-uid-rtradiationsetstorage"]], "pydicom.uid.RTSegmentAnnotationStorage": [[392, "pydicom-uid-rtsegmentannotationstorage"]], "pydicom.uid.RTStructureSetStorage": [[393, "pydicom-uid-rtstructuresetstorage"]], "pydicom.uid.RTTreatmentPreparationStorage": [[394, "pydicom-uid-rttreatmentpreparationstorage"]], "pydicom.uid.RTTreatmentSummaryRecordStorage": [[395, "pydicom-uid-rttreatmentsummaryrecordstorage"]], "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage": [[396, "pydicom-uid-radiopharmaceuticalradiationdosesrstorage"]], "pydicom.uid.RawDataStorage": [[397, "pydicom-uid-rawdatastorage"]], "pydicom.uid.RealWorldValueMappingStorage": [[398, "pydicom-uid-realworldvaluemappingstorage"]], "pydicom.uid.RespiratoryWaveformStorage": [[399, "pydicom-uid-respiratorywaveformstorage"]], "pydicom.uid.RoboticArmRadiationStorage": [[400, "pydicom-uid-roboticarmradiationstorage"]], "pydicom.uid.RoboticRadiationRecordStorage": [[401, "pydicom-uid-roboticradiationrecordstorage"]], "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage": [[402, "pydicom-uid-routinescalpelectroencephalogramwaveformstorage"]], "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo": [[403, "pydicom-uid-smptest211020uncompressedinterlacedactivevideo"]], "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo": [[404, "pydicom-uid-smptest211020uncompressedprogressiveactivevideo"]], "pydicom.uid.SMPTEST211030PCMDigitalAudio": [[405, "pydicom-uid-smptest211030pcmdigitalaudio"]], "pydicom.uid.SecondaryCaptureImageStorage": [[406, "pydicom-uid-secondarycaptureimagestorage"]], "pydicom.uid.SegmentationStorage": [[407, "pydicom-uid-segmentationstorage"]], "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage": [[408, "pydicom-uid-segmentedvolumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.SimplifiedAdultEchoSRStorage": [[409, "pydicom-uid-simplifiedadultechosrstorage"]], "pydicom.uid.SleepElectroencephalogramWaveformStorage": [[410, "pydicom-uid-sleepelectroencephalogramwaveformstorage"]], "pydicom.uid.SpatialFiducialsStorage": [[411, "pydicom-uid-spatialfiducialsstorage"]], "pydicom.uid.SpatialRegistrationStorage": [[412, "pydicom-uid-spatialregistrationstorage"]], "pydicom.uid.SpectaclePrescriptionReportStorage": [[413, "pydicom-uid-spectacleprescriptionreportstorage"]], "pydicom.uid.StereometricRelationshipStorage": [[414, "pydicom-uid-stereometricrelationshipstorage"]], "pydicom.uid.SubjectiveRefractionMeasurementsStorage": [[415, "pydicom-uid-subjectiverefractionmeasurementsstorage"]], "pydicom.uid.SurfaceScanMeshStorage": [[416, "pydicom-uid-surfacescanmeshstorage"]], "pydicom.uid.SurfaceScanPointCloudStorage": [[417, "pydicom-uid-surfacescanpointcloudstorage"]], "pydicom.uid.SurfaceSegmentationStorage": [[418, "pydicom-uid-surfacesegmentationstorage"]], "pydicom.uid.TomotherapeuticRadiationRecordStorage": [[419, "pydicom-uid-tomotherapeuticradiationrecordstorage"]], "pydicom.uid.TomotherapeuticRadiationStorage": [[420, "pydicom-uid-tomotherapeuticradiationstorage"]], "pydicom.uid.TractographyResultsStorage": [[421, "pydicom-uid-tractographyresultsstorage"]], "pydicom.uid.TwelveLeadECGWaveformStorage": [[422, "pydicom-uid-twelveleadecgwaveformstorage"]], "pydicom.uid.UID": [[423, "pydicom-uid-uid"]], "pydicom.uid.UltrasoundImageStorage": [[424, "pydicom-uid-ultrasoundimagestorage"]], "pydicom.uid.UltrasoundMultiFrameImageStorage": [[425, "pydicom-uid-ultrasoundmultiframeimagestorage"]], "pydicom.uid.UncompressedTransferSyntaxes": [[426, "pydicom-uid-uncompressedtransfersyntaxes"]], "pydicom.uid.VLEndoscopicImageStorage": [[427, "pydicom-uid-vlendoscopicimagestorage"]], "pydicom.uid.VLMicroscopicImageStorage": [[428, "pydicom-uid-vlmicroscopicimagestorage"]], "pydicom.uid.VLPhotographicImageStorage": [[429, "pydicom-uid-vlphotographicimagestorage"]], "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage": [[430, "pydicom-uid-vlslidecoordinatesmicroscopicimagestorage"]], "pydicom.uid.VLWholeSlideMicroscopyImageStorage": [[431, "pydicom-uid-vlwholeslidemicroscopyimagestorage"]], "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage": [[432, "pydicom-uid-variablemodalitylutsoftcopypresentationstatestorage"]], "pydicom.uid.VideoEndoscopicImageStorage": [[433, "pydicom-uid-videoendoscopicimagestorage"]], "pydicom.uid.VideoMicroscopicImageStorage": [[434, "pydicom-uid-videomicroscopicimagestorage"]], "pydicom.uid.VideoPhotographicImageStorage": [[435, "pydicom-uid-videophotographicimagestorage"]], "pydicom.uid.VisualAcuityMeasurementsStorage": [[436, "pydicom-uid-visualacuitymeasurementsstorage"]], "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage": [[437, "pydicom-uid-volumerenderingvolumetricpresentationstatestorage"]], "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage": [[438, "pydicom-uid-widefieldophthalmicphotography3dcoordinatesimagestorage"]], "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage": [[439, "pydicom-uid-widefieldophthalmicphotographystereographicprojectionimagestorage"]], "pydicom.uid.XADefinedProcedureProtocolStorage": [[440, "pydicom-uid-xadefinedprocedureprotocolstorage"]], "pydicom.uid.XAPerformedProcedureProtocolStorage": [[441, "pydicom-uid-xaperformedprocedureprotocolstorage"]], "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage": [[442, "pydicom-uid-xaxrfgrayscalesoftcopypresentationstatestorage"]], "pydicom.uid.XRay3DAngiographicImageStorage": [[443, "pydicom-uid-xray3dangiographicimagestorage"]], "pydicom.uid.XRay3DCraniofacialImageStorage": [[444, "pydicom-uid-xray3dcraniofacialimagestorage"]], "pydicom.uid.XRayAngiographicImageStorage": [[445, "pydicom-uid-xrayangiographicimagestorage"]], "pydicom.uid.XRayRadiationDoseSRStorage": [[446, "pydicom-uid-xrayradiationdosesrstorage"]], "pydicom.uid.XRayRadiofluoroscopicImageStorage": [[447, "pydicom-uid-xrayradiofluoroscopicimagestorage"]], "pydicom.uid.generate_uid": [[448, "pydicom-uid-generate-uid"]], "pydicom.valuerep.DA": [[449, "pydicom-valuerep-da"]], "pydicom.valuerep.DS": [[450, "pydicom-valuerep-ds"]], "pydicom.valuerep.DSdecimal": [[451, "pydicom-valuerep-dsdecimal"]], "pydicom.valuerep.DSfloat": [[452, "pydicom-valuerep-dsfloat"]], "pydicom.valuerep.DT": [[453, "pydicom-valuerep-dt"]], "pydicom.valuerep.IS": [[454, "pydicom-valuerep-is"]], "pydicom.valuerep.ISfloat": [[455, "pydicom-valuerep-isfloat"]], "pydicom.valuerep.PersonName": [[456, "pydicom-valuerep-personname"]], "pydicom.valuerep.TM": [[457, "pydicom-valuerep-tm"]], "pydicom.valuerep.VR": [[458, "pydicom-valuerep-vr"]], "pydicom.valuerep.format_number_as_ds": [[459, "pydicom-valuerep-format-number-as-ds"]], "pydicom.valuerep.is_valid_ds": [[460, "pydicom-valuerep-is-valid-ds"]], "pydicom.values.convert_AE_string": [[461, "pydicom-values-convert-ae-string"]], "pydicom.values.convert_ATvalue": [[462, "pydicom-values-convert-atvalue"]], "pydicom.values.convert_DA_string": [[463, "pydicom-values-convert-da-string"]], "pydicom.values.convert_DS_string": [[464, "pydicom-values-convert-ds-string"]], "pydicom.values.convert_DT_string": [[465, "pydicom-values-convert-dt-string"]], "pydicom.values.convert_IS_string": [[466, "pydicom-values-convert-is-string"]], "pydicom.values.convert_OBvalue": [[467, "pydicom-values-convert-obvalue"]], "pydicom.values.convert_OWvalue": [[468, "pydicom-values-convert-owvalue"]], "pydicom.values.convert_PN": [[469, "pydicom-values-convert-pn"]], "pydicom.values.convert_SQ": [[470, "pydicom-values-convert-sq"]], "pydicom.values.convert_TM_string": [[471, "pydicom-values-convert-tm-string"]], "pydicom.values.convert_UI": [[472, "pydicom-values-convert-ui"]], "pydicom.values.convert_UN": [[473, "pydicom-values-convert-un"]], "pydicom.values.convert_UR_string": [[474, "pydicom-values-convert-ur-string"]], "pydicom.values.convert_numbers": [[475, "pydicom-values-convert-numbers"]], "pydicom.values.convert_single_string": [[476, "pydicom-values-convert-single-string"]], "pydicom.values.convert_string": [[477, "pydicom-values-convert-string"]], "pydicom.values.convert_tag": [[478, "pydicom-values-convert-tag"]], "pydicom.values.convert_text": [[479, "pydicom-values-convert-text"]], "pydicom.values.convert_value": [[480, "pydicom-values-convert-value"]], "pydicom.waveforms.numpy_handler": [[481, "module-pydicom.waveforms.numpy_handler"]], "Bulk Data Handlers": [[482, "bulk-data-handlers"]], "Pixel Data Utilities": [[482, "pixel-data-utilities"]], "Overlay Data Handlers (pydicom.overlays)": [[483, "overlay-data-handlers-pydicom-overlays"]], "Pixel Data Handlers (pydicom.pixel_data_handlers)": [[484, "pixel-data-handlers-pydicom-pixel-data-handlers"]], "Waveform Data Handlers (pydicom.waveforms)": [[485, "waveform-data-handlers-pydicom-waveforms"]], "Miscellaneous (pydicom.misc)": [[487, "miscellaneous-pydicom-misc"]], "UID Definitions and Utilities (pydicom.uid)": [[488, "uid-definitions-and-utilities-pydicom-uid"]], "Transfer Syntax UIDs": [[488, "transfer-syntax-uids"]], "Transfer Syntax Lists": [[488, "transfer-syntax-lists"]], "UID Utilities": [[488, "uid-utilities"]], "Storage SOP Class UIDs": [[488, "storage-sop-class-uids"]], "Release notes": [[489, "release-notes"]], "Version 3.0.0": [[489, "version-3-0-0"], [510, "version-3-0-0"]], "Changes": [[489, "changes"], [489, "id1"], [489, "id5"], [489, "id8"], [489, "id13"], [489, "id20"], [489, "id24"], [489, "id26"], [489, "id30"], [500, "changes"], [501, "changes"], [502, "changes"], [503, "changes"], [505, "changes"], [507, "changes"], [508, "changes"], [509, "changes"], [510, "changes"]], "Enhancements": [[489, "enhancements"], [489, "id2"], [489, "id6"], [489, "id9"], [489, "id12"], [489, "id16"], [489, "id23"], [489, "id27"], [489, "id31"], [489, "id34"], [489, "id39"], [489, "id42"], [496, "enhancements"], [497, "enhancements"], [499, "enhancements"], [500, "enhancements"], [501, "enhancements"], [502, "enhancements"], [504, "enhancements"], [505, "enhancements"], [507, "enhancements"], [508, "enhancements"], [509, "enhancements"], [510, "enhancements"]], "Fixes": [[489, "fixes"], [489, "id3"], [489, "id7"], [489, "id10"], [489, "id11"], [489, "id14"], [489, "id17"], [489, "id19"], [489, "id22"], [489, "id28"], [489, "id32"], [489, "id35"], [489, "id37"], [498, "fixes"], [499, "fixes"], [500, "fixes"], [501, "fixes"], [502, "fixes"], [503, "fixes"], [504, "fixes"], [505, "fixes"], [506, "fixes"], [507, "fixes"], [508, "fixes"], [509, "fixes"], [510, "fixes"]], "Pydicom Internals": [[489, "pydicom-internals"], [489, "id4"], [509, "pydicom-internals"], [510, "pydicom-internals"]], "Version 2.4.0": [[489, "version-2-4-0"], [509, "version-2-4-0"]], "Version 2.3.0": [[489, "version-2-3-0"], [508, "version-2-3-0"]], "Version 2.2.0": [[489, "version-2-2-0"], [507, "version-2-2-0"]], "Version 2.1.1": [[489, "version-2-1-1"], [506, "version-2-1-1"]], "Version 2.1.0": [[489, "version-2-1-0"], [505, "version-2-1-0"]], "Changelog": [[489, "changelog"], [489, "id15"], [489, "id18"], [489, "id21"], [489, "id25"], [489, "id29"], [489, "id33"], [489, "id36"], [489, "id38"], [489, "id40"], [489, "id44"], [489, "id48"], [489, "id52"], [489, "id54"], [489, "id55"], [489, "id60"], [490, "changelog"], [491, "changelog"], [492, "changelog"], [493, "changelog"], [494, "changelog"], [495, "changelog"], [496, "changelog"], [497, "changelog"], [498, "changelog"], [499, "changelog"], [500, "changelog"], [501, "changelog"], [502, "changelog"], [503, "changelog"], [504, "changelog"], [505, "changelog"]], "Version 2.0.0": [[489, "version-2-0-0"], [504, "version-2-0-0"]], "Version 1.4.1": [[489, "version-1-4-1"], [503, "version-1-4-1"]], "Version 1.4.0": [[489, "version-1-4-0"], [502, "version-1-4-0"]], "Version 1.3.0": [[489, "version-1-3-0"], [501, "version-1-3-0"]], "Documentation": [[489, "documentation"], [501, "documentation"]], "Version 1.2.0": [[489, "version-1-2-0"], [500, "version-1-2-0"]], "Version 1.1.0": [[489, "version-1-1-0"], [499, "version-1-1-0"]], "Other": [[489, "other"], [489, "id51"], [489, "id53"], [489, "id59"], [489, "id64"], [490, "other"], [491, "other"], [493, "other"], [494, "other"], [499, "other"]], "Version 1.0.0": [[489, "version-1-0-0"], [498, "version-1-0-0"]], "Major changes": [[489, "major-changes"], [489, "id41"], [489, "id45"], [489, "id49"], [489, "id56"], [489, "id61"], [490, "major-changes"], [491, "major-changes"], [494, "major-changes"], [495, "major-changes"], [496, "major-changes"], [498, "major-changes"]], "Other enhancements": [[489, "other-enhancements"], [498, "other-enhancements"]], "Infrastructure": [[489, "infrastructure"], [498, "infrastructure"]], "Version 0.9.9": [[489, "version-0-9-9"], [497, "version-0-9-9"]], "Contrib file changes": [[489, "contrib-file-changes"], [489, "id43"], [496, "contrib-file-changes"], [497, "contrib-file-changes"]], "Other Contributors": [[489, "other-contributors"], [497, "other-contributors"]], "Version 0.9.8": [[489, "version-0-9-8"], [496, "version-0-9-8"]], "Bug fixes": [[489, "bug-fixes"], [489, "id46"], [489, "id50"], [494, "bug-fixes"], [495, "bug-fixes"], [496, "bug-fixes"]], "Version 0.9.7": [[489, "version-0-9-7"], [495, "version-0-9-7"]], "Other Enhancements": [[489, "id47"], [489, "id57"], [489, "id62"], [490, "other-enhancements"], [491, "other-enhancements"], [495, "other-enhancements"]], "Version 0.9.6": [[489, "version-0-9-6"], [494, "version-0-9-6"]], "Version 0.9.5": [[489, "version-0-9-5"], [493, "version-0-9-5"]], "Major fixes in this release": [[489, "major-fixes-in-this-release"], [493, "major-fixes-in-this-release"]], "Other fixes in this release": [[489, "other-fixes-in-this-release"], [493, "other-fixes-in-this-release"]], "New \u2018Contrib\u2019 files": [[489, "new-contrib-files"], [493, "new-contrib-files"]], "Version 0.9.4": [[489, "version-0-9-4"], [492, "version-0-9-4"]], "Major changes/additions in this version": [[489, "major-changes-additions-in-this-version"], [492, "major-changes-additions-in-this-version"]], "Other changes and bug fixes": [[489, "other-changes-and-bug-fixes"], [492, "other-changes-and-bug-fixes"]], "Version 0.9.3": [[489, "version-0-9-3"], [491, "version-0-9-3"]], "Bug Fixes": [[489, "id58"], [489, "id63"], [490, "bug-fixes"], [491, "bug-fixes"]], "Version 0.9.2": [[489, "version-0-9-2"], [490, "version-0-9-2"]], "Contributing to pydicom": [[512, "contributing-to-pydicom"]], "Contributing a source code change": [[513, "contributing-a-source-code-change"]], "Download the current source code": [[513, "download-the-current-source-code"]], "(Optional) Install required libraries": [[513, "optional-install-required-libraries"]], "Install pytest and run the test suite": [[513, "install-pytest-and-run-the-test-suite"]], "Create a new branch": [[513, "create-a-new-branch"], [514, "create-a-new-branch"]], "Write tests for your changes": [[513, "write-tests-for-your-changes"]], "Make a code change and document it": [[513, "make-a-code-change-and-document-it"]], "Preview your changes": [[513, "preview-your-changes"]], "Commit your changes and make a pull request": [[513, "commit-your-changes-and-make-a-pull-request"], [514, "commit-your-changes-and-make-a-pull-request"]], "What happens next?": [[513, "what-happens-next"], [514, "what-happens-next"]], "Contributing a documentation change": [[514, "contributing-a-documentation-change"]], "Download the documentation": [[514, "download-the-documentation"]], "Build and preview the documentation": [[514, "build-and-preview-the-documentation"]], "Make a change to the documentation": [[514, "make-a-change-to-the-documentation"]], "Dataset basics: read, access, modify, write": [[515, "dataset-basics-read-access-modify-write"]], "Getting the path to the example dataset": [[515, "getting-the-path-to-the-example-dataset"]], "Reading": [[515, "reading"]], "Viewing and accessing": [[515, "viewing-and-accessing"]], "Elements": [[515, "elements"]], "Sequences": [[515, "sequences"], [515, "id1"]], "file_meta": [[515, "file-meta"]], "Modifying": [[515, "modifying"]], "Modifying elements": [[515, "modifying-elements"]], "Adding elements": [[515, "adding-elements"]], "Any category": [[515, "any-category"]], "Standard elements": [[515, "standard-elements"]], "Deleting elements": [[515, "deleting-elements"]], "Writing": [[515, "writing"]], "Next steps": [[515, "next-steps"]], "Introduction to JSON support": [[516, "introduction-to-json-support"]], "Converting a dataset into JSON format": [[516, "converting-a-dataset-into-json-format"]], "Creating a dataset from JSON": [[516, "creating-a-dataset-from-json"]], "Working with large binary data": [[516, "working-with-large-binary-data"]], "DICOM File-sets and DICOMDIR": [[517, "dicom-file-sets-and-dicomdir"]], "The DICOM File-set": [[517, "the-dicom-file-set"]], "The DICOMDIR file": [[517, "the-dicomdir-file"]], "FileSet": [[517, "fileset"]], "Loading existing File-sets": [[517, "loading-existing-file-sets"]], "Creating a new File-set": [[517, "creating-a-new-file-set"]], "Modifying a File-set": [[517, "modifying-a-file-set"]], "FileSet and staging": [[517, "fileset-and-staging"]], "Adding SOP instances": [[517, "adding-sop-instances"]], "Removing instances": [[517, "removing-instances"]], "Applying the changes": [[517, "applying-the-changes"]], "Conclusion": [[517, "conclusion"]], "Tutorials": [[518, "tutorials"]], "How to install pydicom": [[519, "how-to-install-pydicom"]], "Install the official release": [[519, "install-the-official-release"]], "Install using pip": [[519, "install-using-pip"]], "Install using conda": [[519, "install-using-conda"]], "Downloading example/test DICOM files": [[519, "downloading-example-test-dicom-files"]], "Install the optional libraries": [[519, "install-the-optional-libraries"]], "Installing Pillow": [[519, "installing-pillow"]], "Installing pyjpegls": [[519, "installing-pyjpegls"]], "Installing GDCM": [[519, "installing-gdcm"]], "Installing pylibjpeg": [[519, "installing-pylibjpeg"]], "Install the development version": [[519, "install-the-development-version"]], "Encapsulating data compressed by third-party packages": [[520, "encapsulating-data-compressed-by-third-party-packages"]], "Structured Reporting": [[521, "structured-reporting"]], "Waveforms": [[522, "waveforms"]], "Waveforms in DICOM": [[522, "waveforms-in-dicom"]], "Decoding Waveform Data": [[522, "decoding-waveform-data"]], "Encoding Waveform Data": [[522, "encoding-waveform-data"]]}, "indexentries": {"settings (class in pydicom.config)": [[52, "pydicom.config.Settings"]], "infer_sq_for_un_vr (pydicom.config.settings property)": [[52, "pydicom.config.Settings.infer_sq_for_un_vr"]], "reading_validation_mode (pydicom.config.settings property)": [[52, "pydicom.config.Settings.reading_validation_mode"]], "writing_validation_mode (pydicom.config.settings property)": [[52, "pydicom.config.Settings.writing_validation_mode"]], "module": [[64, "module-pydicom.encoders"], [200, "module-pydicom.overlays.numpy_handler"], [208, "module-pydicom.pixel_data_handlers.gdcm_handler"], [209, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"], [210, "module-pydicom.pixel_data_handlers.numpy_handler"], [211, "module-pydicom.pixel_data_handlers.pillow_handler"], [212, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"], [213, "module-pydicom.pixel_data_handlers.rle_handler"], [214, "module-pydicom.pixel_data_handlers.util"], [481, "module-pydicom.waveforms.numpy_handler"], [483, "module-pydicom.overlays"], [484, "module-pydicom.pixel_data_handlers"], [485, "module-pydicom.waveforms"], [486, "module-pydicom"]], "pydicom.encoders": [[64, "module-pydicom.encoders"]], "convert_encodings() (in module pydicom.charset)": [[73, "pydicom.charset.convert_encodings"]], "decode_bytes() (in module pydicom.charset)": [[74, "pydicom.charset.decode_bytes"]], "decode_element() (in module pydicom.charset)": [[75, "pydicom.charset.decode_element"]], "encode_string() (in module pydicom.charset)": [[76, "pydicom.charset.encode_string"]], "apply_j2k_corrections (in module pydicom.config)": [[77, "pydicom.config.APPLY_J2K_CORRECTIONS"]], "ds_decimal() (in module pydicom.config)": [[78, "pydicom.config.DS_decimal"]], "ds_numpy() (in module pydicom.config)": [[79, "pydicom.config.DS_numpy"]], "ignore (in module pydicom.config)": [[80, "pydicom.config.IGNORE"]], "invalid_keyword_behavior (in module pydicom.config)": [[81, "pydicom.config.INVALID_KEYWORD_BEHAVIOR"]], "invalid_key_behavior (in module pydicom.config)": [[82, "pydicom.config.INVALID_KEY_BEHAVIOR"]], "raise (in module pydicom.config)": [[83, "pydicom.config.RAISE"]], "warn (in module pydicom.config)": [[84, "pydicom.config.WARN"]], "allow_ds_float (in module pydicom.config)": [[85, "pydicom.config.allow_DS_float"]], "assume_implicit_vr_switch (in module pydicom.config)": [[86, "pydicom.config.assume_implicit_vr_switch"]], "convert_wrong_length_to_un (in module pydicom.config)": [[87, "pydicom.config.convert_wrong_length_to_UN"]], "data_element_callback (in module pydicom.config)": [[88, "pydicom.config.data_element_callback"]], "data_element_callback_kwargs (in module pydicom.config)": [[89, "pydicom.config.data_element_callback_kwargs"]], "datetime_conversion (in module pydicom.config)": [[90, "pydicom.config.datetime_conversion"]], "debug() (in module pydicom.config)": [[91, "pydicom.config.debug"]], "enforce_valid_values (in module pydicom.config)": [[92, "pydicom.config.enforce_valid_values"]], "future_behavior() (in module pydicom.config)": [[93, "pydicom.config.future_behavior"]], "overlay_data_handlers (in module pydicom.config)": [[94, "pydicom.config.overlay_data_handlers"]], "pixel_data_handlers (in module pydicom.config)": [[95, "pydicom.config.pixel_data_handlers"]], "reset_data_element_callback() (in module pydicom.config)": [[96, "pydicom.config.reset_data_element_callback"]], "settings (in module pydicom.config)": [[97, "pydicom.config.settings"]], "show_file_meta (in module pydicom.config)": [[98, "pydicom.config.show_file_meta"]], "use_ds_decimal (in module pydicom.config)": [[99, "pydicom.config.use_DS_decimal"]], "use_ds_numpy (in module pydicom.config)": [[100, "pydicom.config.use_DS_numpy"]], "use_is_numpy (in module pydicom.config)": [[101, "pydicom.config.use_IS_numpy"]], "get_charset_files() (in module pydicom.data)": [[102, "pydicom.data.get_charset_files"]], "get_palette_files() (in module pydicom.data)": [[103, "pydicom.data.get_palette_files"]], "get_testdata_file() (in module pydicom.data)": [[104, "pydicom.data.get_testdata_file"]], "get_testdata_files() (in module pydicom.data)": [[105, "pydicom.data.get_testdata_files"]], "add_dict_entries() (in module pydicom.datadict)": [[106, "pydicom.datadict.add_dict_entries"]], "add_dict_entry() (in module pydicom.datadict)": [[107, "pydicom.datadict.add_dict_entry"]], "add_private_dict_entries() (in module pydicom.datadict)": [[108, "pydicom.datadict.add_private_dict_entries"]], "add_private_dict_entry() (in module pydicom.datadict)": [[109, "pydicom.datadict.add_private_dict_entry"]], "dictionary_vm() (in module pydicom.datadict)": [[110, "pydicom.datadict.dictionary_VM"]], "dictionary_vr() (in module pydicom.datadict)": [[111, "pydicom.datadict.dictionary_VR"]], "dictionary_description() (in module pydicom.datadict)": [[112, "pydicom.datadict.dictionary_description"]], "dictionary_has_tag() (in module pydicom.datadict)": [[113, "pydicom.datadict.dictionary_has_tag"]], "dictionary_is_retired() (in module pydicom.datadict)": [[114, "pydicom.datadict.dictionary_is_retired"]], "dictionary_keyword() (in module pydicom.datadict)": [[115, "pydicom.datadict.dictionary_keyword"]], "get_entry() (in module pydicom.datadict)": [[116, "pydicom.datadict.get_entry"]], "get_private_entry() (in module pydicom.datadict)": [[117, "pydicom.datadict.get_private_entry"]], "keyword_for_tag() (in module pydicom.datadict)": [[118, "pydicom.datadict.keyword_for_tag"]], "mask_match() (in module pydicom.datadict)": [[119, "pydicom.datadict.mask_match"]], "private_dictionary_vm() (in module pydicom.datadict)": [[120, "pydicom.datadict.private_dictionary_VM"]], "private_dictionary_vr() (in module pydicom.datadict)": [[121, "pydicom.datadict.private_dictionary_VR"]], "private_dictionary_description() (in module pydicom.datadict)": [[122, "pydicom.datadict.private_dictionary_description"]], "repeater_has_keyword() (in module pydicom.datadict)": [[123, "pydicom.datadict.repeater_has_keyword"]], "repeater_has_tag() (in module pydicom.datadict)": [[124, "pydicom.datadict.repeater_has_tag"]], "tag_for_keyword() (in module pydicom.datadict)": [[125, "pydicom.datadict.tag_for_keyword"]], "dataelement (class in pydicom.dataelem)": [[126, "pydicom.dataelem.DataElement"]], "vm (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.VM"]], "vr (pydicom.dataelem.dataelement attribute)": [[126, "pydicom.dataelem.DataElement.VR"]], "__init__() (pydicom.dataelem.dataelement method)": [[126, "pydicom.dataelem.DataElement.__init__"]], "clear() (pydicom.dataelem.dataelement method)": [[126, "pydicom.dataelem.DataElement.clear"]], "descripwidth (pydicom.dataelem.dataelement attribute)": [[126, "pydicom.dataelem.DataElement.descripWidth"]], "empty_value (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.empty_value"]], "from_json() (pydicom.dataelem.dataelement class method)": [[126, "pydicom.dataelem.DataElement.from_json"]], "is_empty (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.is_empty"]], "is_private (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.is_private"]], "is_retired (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.is_retired"]], "is_undefined_length (pydicom.dataelem.dataelement attribute)": [[126, "pydicom.dataelem.DataElement.is_undefined_length"]], "keyword (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.keyword"]], "maxbytestodisplay (pydicom.dataelem.dataelement attribute)": [[126, "pydicom.dataelem.DataElement.maxBytesToDisplay"]], "name (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.name"]], "repval (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.repval"]], "showvr (pydicom.dataelem.dataelement attribute)": [[126, "pydicom.dataelem.DataElement.showVR"]], "tag (pydicom.dataelem.dataelement attribute)": [[126, "pydicom.dataelem.DataElement.tag"]], "to_json() (pydicom.dataelem.dataelement method)": [[126, "pydicom.dataelem.DataElement.to_json"]], "to_json_dict() (pydicom.dataelem.dataelement method)": [[126, "pydicom.dataelem.DataElement.to_json_dict"]], "validate() (pydicom.dataelem.dataelement method)": [[126, "pydicom.dataelem.DataElement.validate"]], "value (pydicom.dataelem.dataelement property)": [[126, "pydicom.dataelem.DataElement.value"]], "dataelement_from_raw() (in module pydicom.dataelem)": [[127, "pydicom.dataelem.DataElement_from_raw"]], "rawdataelement (class in pydicom.dataelem)": [[128, "pydicom.dataelem.RawDataElement"]], "vr (pydicom.dataelem.rawdataelement attribute)": [[128, "pydicom.dataelem.RawDataElement.VR"]], "__init__() (pydicom.dataelem.rawdataelement method)": [[128, "pydicom.dataelem.RawDataElement.__init__"]], "is_implicit_vr (pydicom.dataelem.rawdataelement attribute)": [[128, "pydicom.dataelem.RawDataElement.is_implicit_VR"]], "is_little_endian (pydicom.dataelem.rawdataelement attribute)": [[128, "pydicom.dataelem.RawDataElement.is_little_endian"]], "is_raw (pydicom.dataelem.rawdataelement attribute)": [[128, "pydicom.dataelem.RawDataElement.is_raw"]], "length (pydicom.dataelem.rawdataelement attribute)": [[128, "pydicom.dataelem.RawDataElement.length"]], "tag (pydicom.dataelem.rawdataelement attribute)": [[128, "pydicom.dataelem.RawDataElement.tag"]], "value (pydicom.dataelem.rawdataelement attribute)": [[128, "pydicom.dataelem.RawDataElement.value"]], "value_tell (pydicom.dataelem.rawdataelement attribute)": [[128, "pydicom.dataelem.RawDataElement.value_tell"]], "dataset (class in pydicom.dataset)": [[129, "pydicom.dataset.Dataset"]], "__init__() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.__init__"]], "add() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.add"]], "add_new() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.add_new"]], "add_new_private() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.add_new_private"]], "clear() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.clear"]], "compress() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.compress"]], "convert_pixel_data() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.convert_pixel_data"]], "copy() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.copy"]], "data_element() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.data_element"]], "decode() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.decode"]], "decompress() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.decompress"]], "default_element_format (pydicom.dataset.dataset attribute)": [[129, "pydicom.dataset.Dataset.default_element_format"]], "default_sequence_element_format (pydicom.dataset.dataset attribute)": [[129, "pydicom.dataset.Dataset.default_sequence_element_format"]], "dir() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.dir"]], "elements() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.elements"]], "ensure_file_meta() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.ensure_file_meta"]], "fix_meta_info() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.fix_meta_info"]], "formatted_lines() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.formatted_lines"]], "from_json() (pydicom.dataset.dataset class method)": [[129, "pydicom.dataset.Dataset.from_json"]], "get() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.get"]], "get_item() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.get_item"]], "get_private_item() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.get_private_item"]], "group_dataset() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.group_dataset"]], "indent_chars (pydicom.dataset.dataset attribute)": [[129, "pydicom.dataset.Dataset.indent_chars"]], "is_implicit_vr (pydicom.dataset.dataset attribute)": [[129, "pydicom.dataset.Dataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.dataset attribute)": [[129, "pydicom.dataset.Dataset.is_little_endian"]], "is_original_encoding (pydicom.dataset.dataset property)": [[129, "pydicom.dataset.Dataset.is_original_encoding"]], "items() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.items"]], "iterall() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.iterall"]], "keys() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.keys"]], "overlay_array() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.overlay_array"]], "pixel_array (pydicom.dataset.dataset property)": [[129, "pydicom.dataset.Dataset.pixel_array"]], "pop() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.pop"]], "popitem() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.popitem"]], "private_block() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.private_block"]], "private_creators() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.private_creators"]], "remove_private_tags() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.remove_private_tags"]], "save_as() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.save_as"]], "set_original_encoding() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.set_original_encoding"]], "setdefault() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.setdefault"]], "to_json() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.to_json"]], "to_json_dict() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.to_json_dict"]], "top() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.top"]], "trait_names() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.trait_names"]], "update() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.update"]], "values() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.values"]], "walk() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.walk"]], "waveform_array() (pydicom.dataset.dataset method)": [[129, "pydicom.dataset.Dataset.waveform_array"]], "filedataset (class in pydicom.dataset)": [[130, "pydicom.dataset.FileDataset"]], "__init__() (pydicom.dataset.filedataset method)": [[130, "pydicom.dataset.FileDataset.__init__"]], "file_meta (pydicom.dataset.filedataset attribute)": [[130, "pydicom.dataset.FileDataset.file_meta"]], "filename (pydicom.dataset.filedataset attribute)": [[130, "pydicom.dataset.FileDataset.filename"]], "fileobj_type (pydicom.dataset.filedataset attribute)": [[130, "pydicom.dataset.FileDataset.fileobj_type"]], "is_implicit_vr (pydicom.dataset.filedataset attribute)": [[130, "pydicom.dataset.FileDataset.is_implicit_VR"]], "is_little_endian (pydicom.dataset.filedataset attribute)": [[130, "pydicom.dataset.FileDataset.is_little_endian"]], "preamble (pydicom.dataset.filedataset attribute)": [[130, "pydicom.dataset.FileDataset.preamble"]], "timestamp (pydicom.dataset.filedataset attribute)": [[130, "pydicom.dataset.FileDataset.timestamp"]], "filemetadataset (class in pydicom.dataset)": [[131, "pydicom.dataset.FileMetaDataset"]], "__init__() (pydicom.dataset.filemetadataset method)": [[131, "pydicom.dataset.FileMetaDataset.__init__"]], "validate() (pydicom.dataset.filemetadataset static method)": [[131, "pydicom.dataset.FileMetaDataset.validate"]], "privateblock (class in pydicom.dataset)": [[132, "pydicom.dataset.PrivateBlock"]], "__init__() (pydicom.dataset.privateblock method)": [[132, "pydicom.dataset.PrivateBlock.__init__"]], "add_new() (pydicom.dataset.privateblock method)": [[132, "pydicom.dataset.PrivateBlock.add_new"]], "block_start (pydicom.dataset.privateblock attribute)": [[132, "pydicom.dataset.PrivateBlock.block_start"]], "dataset (pydicom.dataset.privateblock attribute)": [[132, "pydicom.dataset.PrivateBlock.dataset"]], "get_tag() (pydicom.dataset.privateblock method)": [[132, "pydicom.dataset.PrivateBlock.get_tag"]], "group (pydicom.dataset.privateblock attribute)": [[132, "pydicom.dataset.PrivateBlock.group"]], "private_creator (pydicom.dataset.privateblock attribute)": [[132, "pydicom.dataset.PrivateBlock.private_creator"]], "validate_file_meta() (in module pydicom.dataset)": [[133, "pydicom.dataset.validate_file_meta"]], "decode_data_sequence() (in module pydicom.encaps)": [[134, "pydicom.encaps.decode_data_sequence"]], "defragment_data() (in module pydicom.encaps)": [[135, "pydicom.encaps.defragment_data"]], "encapsulate() (in module pydicom.encaps)": [[136, "pydicom.encaps.encapsulate"]], "encapsulate_extended() (in module pydicom.encaps)": [[137, "pydicom.encaps.encapsulate_extended"]], "fragment_frame() (in module pydicom.encaps)": [[138, "pydicom.encaps.fragment_frame"]], "generate_pixel_data() (in module pydicom.encaps)": [[139, "pydicom.encaps.generate_pixel_data"]], "generate_pixel_data_fragment() (in module pydicom.encaps)": [[140, "pydicom.encaps.generate_pixel_data_fragment"]], "generate_pixel_data_frame() (in module pydicom.encaps)": [[141, "pydicom.encaps.generate_pixel_data_frame"]], "get_frame_offsets() (in module pydicom.encaps)": [[142, "pydicom.encaps.get_frame_offsets"]], "itemize_fragment() (in module pydicom.encaps)": [[143, "pydicom.encaps.itemize_fragment"]], "itemize_frame() (in module pydicom.encaps)": [[144, "pydicom.encaps.itemize_frame"]], "read_item() (in module pydicom.encaps)": [[145, "pydicom.encaps.read_item"]], "rlelosslessencoder (in module pydicom.encoders)": [[146, "pydicom.encoders.RLELosslessEncoder"]], "encoder (class in pydicom.encoders.base)": [[147, "pydicom.encoders.base.Encoder"]], "uid (pydicom.encoders.base.encoder property)": [[147, "pydicom.encoders.base.Encoder.UID"]], "__init__() (pydicom.encoders.base.encoder method)": [[147, "pydicom.encoders.base.Encoder.__init__"]], "add_plugin() (pydicom.encoders.base.encoder method)": [[147, "pydicom.encoders.base.Encoder.add_plugin"]], "encode() (pydicom.encoders.base.encoder method)": [[147, "pydicom.encoders.base.Encoder.encode"]], "is_available (pydicom.encoders.base.encoder property)": [[147, "pydicom.encoders.base.Encoder.is_available"]], "iter_encode() (pydicom.encoders.base.encoder method)": [[147, "pydicom.encoders.base.Encoder.iter_encode"]], "kwargs_from_ds() (pydicom.encoders.base.encoder static method)": [[147, "pydicom.encoders.base.Encoder.kwargs_from_ds"]], "missing_dependencies (pydicom.encoders.base.encoder property)": [[147, "pydicom.encoders.base.Encoder.missing_dependencies"]], "name (pydicom.encoders.base.encoder property)": [[147, "pydicom.encoders.base.Encoder.name"]], "remove_plugin() (pydicom.encoders.base.encoder method)": [[147, "pydicom.encoders.base.Encoder.remove_plugin"]], "get_encoder() (in module pydicom.encoders)": [[148, "pydicom.encoders.get_encoder"]], "invaliddicomerror": [[149, "pydicom.errors.InvalidDicomError"]], "dicombytesio (class in pydicom.filebase)": [[150, "pydicom.filebase.DicomBytesIO"]], "__init__() (pydicom.filebase.dicombytesio method)": [[150, "pydicom.filebase.DicomBytesIO.__init__"]], "dicomfile() (in module pydicom.filebase)": [[151, "pydicom.filebase.DicomFile"]], "dicomfilelike (class in pydicom.filebase)": [[152, "pydicom.filebase.DicomFileLike"]], "__init__() (pydicom.filebase.dicomfilelike method)": [[152, "pydicom.filebase.DicomFileLike.__init__"]], "no_read() (pydicom.filebase.dicomfilelike method)": [[152, "pydicom.filebase.DicomFileLike.no_read"]], "no_seek() (pydicom.filebase.dicomfilelike method)": [[152, "pydicom.filebase.DicomFileLike.no_seek"]], "no_write() (pydicom.filebase.dicomfilelike method)": [[152, "pydicom.filebase.DicomFileLike.no_write"]], "dicomio (class in pydicom.filebase)": [[153, "pydicom.filebase.DicomIO"]], "__init__() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.__init__"]], "read() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.read"]], "read_beul() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.read_beUL"]], "read_beus() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.read_beUS"]], "read_be_tag() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.read_be_tag"]], "read_leul() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.read_leUL"]], "read_leus() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.read_leUS"]], "read_le_tag() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.read_le_tag"]], "write_ul() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.write_UL"]], "write_us() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.write_US"]], "write_beul() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.write_beUL"]], "write_beus() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.write_beUS"]], "write_leul() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.write_leUL"]], "write_leus() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.write_leUS"]], "write_tag() (pydicom.filebase.dicomio method)": [[153, "pydicom.filebase.DicomIO.write_tag"]], "data_element_generator() (in module pydicom.filereader)": [[154, "pydicom.filereader.data_element_generator"]], "data_element_offset_to_value() (in module pydicom.filereader)": [[155, "pydicom.filereader.data_element_offset_to_value"]], "dcmread() (in module pydicom.filereader)": [[156, "pydicom.filereader.dcmread"]], "read_dataset() (in module pydicom.filereader)": [[157, "pydicom.filereader.read_dataset"]], "read_deferred_data_element() (in module pydicom.filereader)": [[158, "pydicom.filereader.read_deferred_data_element"]], "read_file_meta_info() (in module pydicom.filereader)": [[159, "pydicom.filereader.read_file_meta_info"]], "read_partial() (in module pydicom.filereader)": [[160, "pydicom.filereader.read_partial"]], "read_preamble() (in module pydicom.filereader)": [[161, "pydicom.filereader.read_preamble"]], "read_sequence() (in module pydicom.filereader)": [[162, "pydicom.filereader.read_sequence"]], "read_sequence_item() (in module pydicom.filereader)": [[163, "pydicom.filereader.read_sequence_item"]], "directory_recorders (in module pydicom.fileset)": [[164, "pydicom.fileset.DIRECTORY_RECORDERS"]], "fileid (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.FileID"]], "fileinstance (class in pydicom.fileset)": [[165, "pydicom.fileset.FileInstance"]], "sopclassuid (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.SOPClassUID"]], "sopinstanceuid (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.SOPInstanceUID"]], "transfersyntaxuid (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.TransferSyntaxUID"]], "__init__() (pydicom.fileset.fileinstance method)": [[165, "pydicom.fileset.FileInstance.__init__"]], "file_set (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.file_set"]], "for_addition (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.for_addition"]], "for_moving (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.for_moving"]], "for_removal (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.for_removal"]], "is_private (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.is_private"]], "is_staged (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.is_staged"]], "load() (pydicom.fileset.fileinstance method)": [[165, "pydicom.fileset.FileInstance.load"]], "node (pydicom.fileset.fileinstance attribute)": [[165, "pydicom.fileset.FileInstance.node"]], "path (pydicom.fileset.fileinstance property)": [[165, "pydicom.fileset.FileInstance.path"]], "fileset (class in pydicom.fileset)": [[166, "pydicom.fileset.FileSet"]], "id (pydicom.fileset.fileset property)": [[166, "pydicom.fileset.FileSet.ID"]], "uid (pydicom.fileset.fileset property)": [[166, "pydicom.fileset.FileSet.UID"]], "__init__() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.__init__"]], "add() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.add"]], "add_custom() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.add_custom"]], "clear() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.clear"]], "copy() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.copy"]], "descriptor_character_set (pydicom.fileset.fileset property)": [[166, "pydicom.fileset.FileSet.descriptor_character_set"]], "descriptor_file_id (pydicom.fileset.fileset property)": [[166, "pydicom.fileset.FileSet.descriptor_file_id"]], "find() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.find"]], "find_values() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.find_values"]], "is_staged (pydicom.fileset.fileset property)": [[166, "pydicom.fileset.FileSet.is_staged"]], "load() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.load"]], "path (pydicom.fileset.fileset property)": [[166, "pydicom.fileset.FileSet.path"]], "remove() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.remove"]], "write() (pydicom.fileset.fileset method)": [[166, "pydicom.fileset.FileSet.write"]], "recordnode (class in pydicom.fileset)": [[167, "pydicom.fileset.RecordNode"]], "__init__() (pydicom.fileset.recordnode method)": [[167, "pydicom.fileset.RecordNode.__init__"]], "add() (pydicom.fileset.recordnode method)": [[167, "pydicom.fileset.RecordNode.add"]], "ancestors (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.ancestors"]], "children (pydicom.fileset.recordnode attribute)": [[167, "pydicom.fileset.RecordNode.children"]], "component (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.component"]], "depth (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.depth"]], "file_set (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.file_set"]], "has_instance (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.has_instance"]], "index (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.index"]], "instance (pydicom.fileset.recordnode attribute)": [[167, "pydicom.fileset.RecordNode.instance"]], "is_root (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.is_root"]], "key (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.key"]], "next (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.next"]], "parent (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.parent"]], "prettify() (pydicom.fileset.recordnode method)": [[167, "pydicom.fileset.RecordNode.prettify"]], "previous (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.previous"]], "record_type (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.record_type"]], "remove() (pydicom.fileset.recordnode method)": [[167, "pydicom.fileset.RecordNode.remove"]], "reverse() (pydicom.fileset.recordnode method)": [[167, "pydicom.fileset.RecordNode.reverse"]], "root (pydicom.fileset.recordnode property)": [[167, "pydicom.fileset.RecordNode.root"]], "generate_filename() (in module pydicom.fileset)": [[168, "pydicom.fileset.generate_filename"]], "is_conformant_file_id() (in module pydicom.fileset)": [[169, "pydicom.fileset.is_conformant_file_id"]], "absorb_delimiter_item() (in module pydicom.fileutil)": [[170, "pydicom.fileutil.absorb_delimiter_item"]], "find_bytes() (in module pydicom.fileutil)": [[171, "pydicom.fileutil.find_bytes"]], "find_delimiter() (in module pydicom.fileutil)": [[172, "pydicom.fileutil.find_delimiter"]], "length_of_undefined_length() (in module pydicom.fileutil)": [[173, "pydicom.fileutil.length_of_undefined_length"]], "read_undefined_length_value() (in module pydicom.fileutil)": [[174, "pydicom.fileutil.read_undefined_length_value"]], "correct_ambiguous_vr() (in module pydicom.filewriter)": [[175, "pydicom.filewriter.correct_ambiguous_vr"]], "correct_ambiguous_vr_element() (in module pydicom.filewriter)": [[176, "pydicom.filewriter.correct_ambiguous_vr_element"]], "dcmwrite() (in module pydicom.filewriter)": [[177, "pydicom.filewriter.dcmwrite"]], "multi_string() (in module pydicom.filewriter)": [[178, "pydicom.filewriter.multi_string"]], "write_atvalue() (in module pydicom.filewriter)": [[179, "pydicom.filewriter.write_ATvalue"]], "write_da() (in module pydicom.filewriter)": [[180, "pydicom.filewriter.write_DA"]], "write_dt() (in module pydicom.filewriter)": [[181, "pydicom.filewriter.write_DT"]], "write_obvalue() (in module pydicom.filewriter)": [[182, "pydicom.filewriter.write_OBvalue"]], "write_owvalue() (in module pydicom.filewriter)": [[183, "pydicom.filewriter.write_OWvalue"]], "write_pn() (in module pydicom.filewriter)": [[184, "pydicom.filewriter.write_PN"]], "write_tm() (in module pydicom.filewriter)": [[185, "pydicom.filewriter.write_TM"]], "write_ui() (in module pydicom.filewriter)": [[186, "pydicom.filewriter.write_UI"]], "write_un() (in module pydicom.filewriter)": [[187, "pydicom.filewriter.write_UN"]], "write_data_element() (in module pydicom.filewriter)": [[188, "pydicom.filewriter.write_data_element"]], "write_dataset() (in module pydicom.filewriter)": [[189, "pydicom.filewriter.write_dataset"]], "write_file_meta_info() (in module pydicom.filewriter)": [[190, "pydicom.filewriter.write_file_meta_info"]], "write_number_string() (in module pydicom.filewriter)": [[191, "pydicom.filewriter.write_number_string"]], "write_numbers() (in module pydicom.filewriter)": [[192, "pydicom.filewriter.write_numbers"]], "write_sequence() (in module pydicom.filewriter)": [[193, "pydicom.filewriter.write_sequence"]], "write_sequence_item() (in module pydicom.filewriter)": [[194, "pydicom.filewriter.write_sequence_item"]], "write_string() (in module pydicom.filewriter)": [[195, "pydicom.filewriter.write_string"]], "write_text() (in module pydicom.filewriter)": [[196, "pydicom.filewriter.write_text"]], "is_dicom() (in module pydicom.misc)": [[197, "pydicom.misc.is_dicom"]], "size_in_bytes() (in module pydicom.misc)": [[198, "pydicom.misc.size_in_bytes"]], "multivalue (class in pydicom.multival)": [[199, "pydicom.multival.MultiValue"]], "__init__() (pydicom.multival.multivalue method)": [[199, "pydicom.multival.MultiValue.__init__"]], "get_expected_length() (in module pydicom.overlays.numpy_handler)": [[200, "pydicom.overlays.numpy_handler.get_expected_length"]], "get_overlay_array() (in module pydicom.overlays.numpy_handler)": [[200, "pydicom.overlays.numpy_handler.get_overlay_array"]], "is_available() (in module pydicom.overlays.numpy_handler)": [[200, "pydicom.overlays.numpy_handler.is_available"]], "pydicom.overlays.numpy_handler": [[200, "module-pydicom.overlays.numpy_handler"]], "reshape_overlay_array() (in module pydicom.overlays.numpy_handler)": [[200, "pydicom.overlays.numpy_handler.reshape_overlay_array"]], "apply_color_lut() (in module pydicom.pixel_data_handlers)": [[201, "pydicom.pixel_data_handlers.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers)": [[202, "pydicom.pixel_data_handlers.apply_modality_lut"]], "apply_rescale() (in module pydicom.pixel_data_handlers)": [[203, "pydicom.pixel_data_handlers.apply_rescale"]], "apply_voi() (in module pydicom.pixel_data_handlers)": [[204, "pydicom.pixel_data_handlers.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers)": [[205, "pydicom.pixel_data_handlers.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers)": [[206, "pydicom.pixel_data_handlers.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers)": [[207, "pydicom.pixel_data_handlers.convert_color_space"]], "create_data_element() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[208, "pydicom.pixel_data_handlers.gdcm_handler.create_data_element"]], "create_image() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[208, "pydicom.pixel_data_handlers.gdcm_handler.create_image"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[208, "pydicom.pixel_data_handlers.gdcm_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[208, "pydicom.pixel_data_handlers.gdcm_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[208, "pydicom.pixel_data_handlers.gdcm_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.gdcm_handler": [[208, "module-pydicom.pixel_data_handlers.gdcm_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[208, "pydicom.pixel_data_handlers.gdcm_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.gdcm_handler)": [[208, "pydicom.pixel_data_handlers.gdcm_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[209, "pydicom.pixel_data_handlers.jpeg_ls_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[209, "pydicom.pixel_data_handlers.jpeg_ls_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[209, "pydicom.pixel_data_handlers.jpeg_ls_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[209, "module-pydicom.pixel_data_handlers.jpeg_ls_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[209, "pydicom.pixel_data_handlers.jpeg_ls_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.jpeg_ls_handler)": [[209, "pydicom.pixel_data_handlers.jpeg_ls_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.numpy_handler)": [[210, "pydicom.pixel_data_handlers.numpy_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.numpy_handler)": [[210, "pydicom.pixel_data_handlers.numpy_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[210, "pydicom.pixel_data_handlers.numpy_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.numpy_handler": [[210, "module-pydicom.pixel_data_handlers.numpy_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.numpy_handler)": [[210, "pydicom.pixel_data_handlers.numpy_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.numpy_handler)": [[210, "pydicom.pixel_data_handlers.numpy_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pillow_handler)": [[211, "pydicom.pixel_data_handlers.pillow_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pillow_handler)": [[211, "pydicom.pixel_data_handlers.pillow_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[211, "pydicom.pixel_data_handlers.pillow_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pillow_handler": [[211, "module-pydicom.pixel_data_handlers.pillow_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pillow_handler)": [[211, "pydicom.pixel_data_handlers.pillow_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pillow_handler)": [[211, "pydicom.pixel_data_handlers.pillow_handler.supports_transfer_syntax"]], "as_array() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[212, "pydicom.pixel_data_handlers.pylibjpeg_handler.as_array"]], "generate_frames() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[212, "pydicom.pixel_data_handlers.pylibjpeg_handler.generate_frames"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[212, "pydicom.pixel_data_handlers.pylibjpeg_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[212, "pydicom.pixel_data_handlers.pylibjpeg_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[212, "pydicom.pixel_data_handlers.pylibjpeg_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[212, "module-pydicom.pixel_data_handlers.pylibjpeg_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[212, "pydicom.pixel_data_handlers.pylibjpeg_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.pylibjpeg_handler)": [[212, "pydicom.pixel_data_handlers.pylibjpeg_handler.supports_transfer_syntax"]], "get_pixeldata() (in module pydicom.pixel_data_handlers.rle_handler)": [[213, "pydicom.pixel_data_handlers.rle_handler.get_pixeldata"]], "is_available() (in module pydicom.pixel_data_handlers.rle_handler)": [[213, "pydicom.pixel_data_handlers.rle_handler.is_available"]], "needs_to_convert_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[213, "pydicom.pixel_data_handlers.rle_handler.needs_to_convert_to_RGB"]], "pydicom.pixel_data_handlers.rle_handler": [[213, "module-pydicom.pixel_data_handlers.rle_handler"]], "should_change_photometricinterpretation_to_rgb() (in module pydicom.pixel_data_handlers.rle_handler)": [[213, "pydicom.pixel_data_handlers.rle_handler.should_change_PhotometricInterpretation_to_RGB"]], "supports_transfer_syntax() (in module pydicom.pixel_data_handlers.rle_handler)": [[213, "pydicom.pixel_data_handlers.rle_handler.supports_transfer_syntax"]], "apply_color_lut() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.apply_color_lut"]], "apply_modality_lut() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.apply_modality_lut"]], "apply_voi() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.apply_voi"]], "apply_voi_lut() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.apply_voi_lut"]], "apply_windowing() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.apply_windowing"]], "convert_color_space() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.convert_color_space"]], "dtype_corrected_for_endianness() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.dtype_corrected_for_endianness"]], "expand_ybr422() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.expand_ybr422"]], "get_expected_length() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.get_expected_length"]], "get_image_pixel_ids() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.get_image_pixel_ids"]], "get_j2k_parameters() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.get_j2k_parameters"]], "get_nr_frames() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.get_nr_frames"]], "pack_bits() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.pack_bits"]], "pixel_dtype() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.pixel_dtype"]], "pydicom.pixel_data_handlers.util": [[214, "module-pydicom.pixel_data_handlers.util"]], "reshape_pixel_array() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.reshape_pixel_array"]], "unpack_bits() (in module pydicom.pixel_data_handlers.util)": [[214, "pydicom.pixel_data_handlers.util.unpack_bits"]], "sequence (class in pydicom.sequence)": [[215, "pydicom.sequence.Sequence"]], "__init__() (pydicom.sequence.sequence method)": [[215, "pydicom.sequence.Sequence.__init__"]], "extend() (pydicom.sequence.sequence method)": [[215, "pydicom.sequence.Sequence.extend"]], "basetag (class in pydicom.tag)": [[216, "pydicom.tag.BaseTag"]], "__init__() (pydicom.tag.basetag method)": [[216, "pydicom.tag.BaseTag.__init__"]], "elem (pydicom.tag.basetag property)": [[216, "pydicom.tag.BaseTag.elem"]], "element (pydicom.tag.basetag property)": [[216, "pydicom.tag.BaseTag.element"]], "group (pydicom.tag.basetag property)": [[216, "pydicom.tag.BaseTag.group"]], "is_private (pydicom.tag.basetag property)": [[216, "pydicom.tag.BaseTag.is_private"]], "is_private_creator (pydicom.tag.basetag property)": [[216, "pydicom.tag.BaseTag.is_private_creator"]], "json_key (pydicom.tag.basetag property)": [[216, "pydicom.tag.BaseTag.json_key"]], "private_creator (pydicom.tag.basetag property)": [[216, "pydicom.tag.BaseTag.private_creator"]], "tag() (in module pydicom.tag)": [[217, "pydicom.tag.Tag"]], "tupletag() (in module pydicom.tag)": [[218, "pydicom.tag.TupleTag"]], "tag_in_exception() (in module pydicom.tag)": [[219, "pydicom.tag.tag_in_exception"]], "acquisitioncontextsrstorage (in module pydicom.uid)": [[220, "pydicom.uid.AcquisitionContextSRStorage"]], "advancedblendingpresentationstatestorage (in module pydicom.uid)": [[221, "pydicom.uid.AdvancedBlendingPresentationStateStorage"]], "alltransfersyntaxes (in module pydicom.uid)": [[222, "pydicom.uid.AllTransferSyntaxes"]], "ambulatoryecgwaveformstorage (in module pydicom.uid)": [[223, "pydicom.uid.AmbulatoryECGWaveformStorage"]], "arterialpulsewaveformstorage (in module pydicom.uid)": [[224, "pydicom.uid.ArterialPulseWaveformStorage"]], "autorefractionmeasurementsstorage (in module pydicom.uid)": [[225, "pydicom.uid.AutorefractionMeasurementsStorage"]], "basicstructureddisplaystorage (in module pydicom.uid)": [[226, "pydicom.uid.BasicStructuredDisplayStorage"]], "basictextsrstorage (in module pydicom.uid)": [[227, "pydicom.uid.BasicTextSRStorage"]], "basicvoiceaudiowaveformstorage (in module pydicom.uid)": [[228, "pydicom.uid.BasicVoiceAudioWaveformStorage"]], "blendingsoftcopypresentationstatestorage (in module pydicom.uid)": [[229, "pydicom.uid.BlendingSoftcopyPresentationStateStorage"]], "bodypositionwaveformstorage (in module pydicom.uid)": [[230, "pydicom.uid.BodyPositionWaveformStorage"]], "breastprojectionxrayimagestorageforpresentation (in module pydicom.uid)": [[231, "pydicom.uid.BreastProjectionXRayImageStorageForPresentation"]], "breastprojectionxrayimagestorageforprocessing (in module pydicom.uid)": [[232, "pydicom.uid.BreastProjectionXRayImageStorageForProcessing"]], "breasttomosynthesisimagestorage (in module pydicom.uid)": [[233, "pydicom.uid.BreastTomosynthesisImageStorage"]], "carmphotonelectronradiationrecordstorage (in module pydicom.uid)": [[234, "pydicom.uid.CArmPhotonElectronRadiationRecordStorage"]], "carmphotonelectronradiationstorage (in module pydicom.uid)": [[235, "pydicom.uid.CArmPhotonElectronRadiationStorage"]], "ctdefinedprocedureprotocolstorage (in module pydicom.uid)": [[236, "pydicom.uid.CTDefinedProcedureProtocolStorage"]], "ctimagestorage (in module pydicom.uid)": [[237, "pydicom.uid.CTImageStorage"]], "ctperformedprocedureprotocolstorage (in module pydicom.uid)": [[238, "pydicom.uid.CTPerformedProcedureProtocolStorage"]], "cardiacelectrophysiologywaveformstorage (in module pydicom.uid)": [[239, "pydicom.uid.CardiacElectrophysiologyWaveformStorage"]], "chestcadsrstorage (in module pydicom.uid)": [[240, "pydicom.uid.ChestCADSRStorage"]], "coloncadsrstorage (in module pydicom.uid)": [[241, "pydicom.uid.ColonCADSRStorage"]], "colorpalettestorage (in module pydicom.uid)": [[242, "pydicom.uid.ColorPaletteStorage"]], "colorsoftcopypresentationstatestorage (in module pydicom.uid)": [[243, "pydicom.uid.ColorSoftcopyPresentationStateStorage"]], "compositingplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[244, "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage"]], "comprehensive3dsrstorage (in module pydicom.uid)": [[245, "pydicom.uid.Comprehensive3DSRStorage"]], "comprehensivesrstorage (in module pydicom.uid)": [[246, "pydicom.uid.ComprehensiveSRStorage"]], "computedradiographyimagestorage (in module pydicom.uid)": [[247, "pydicom.uid.ComputedRadiographyImageStorage"]], "contentassessmentresultsstorage (in module pydicom.uid)": [[248, "pydicom.uid.ContentAssessmentResultsStorage"]], "cornealtopographymapstorage (in module pydicom.uid)": [[249, "pydicom.uid.CornealTopographyMapStorage"]], "dicos2daitstorage (in module pydicom.uid)": [[250, "pydicom.uid.DICOS2DAITStorage"]], "dicos3daitstorage (in module pydicom.uid)": [[251, "pydicom.uid.DICOS3DAITStorage"]], "dicosctimagestorage (in module pydicom.uid)": [[252, "pydicom.uid.DICOSCTImageStorage"]], "dicosdigitalxrayimagestorageforpresentation (in module pydicom.uid)": [[253, "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation"]], "dicosdigitalxrayimagestorageforprocessing (in module pydicom.uid)": [[254, "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing"]], "dicosquadrupoleresonancestorage (in module pydicom.uid)": [[255, "pydicom.uid.DICOSQuadrupoleResonanceStorage"]], "dicosthreatdetectionreportstorage (in module pydicom.uid)": [[256, "pydicom.uid.DICOSThreatDetectionReportStorage"]], "deflatedexplicitvrlittleendian (in module pydicom.uid)": [[257, "pydicom.uid.DeflatedExplicitVRLittleEndian"]], "deformablespatialregistrationstorage (in module pydicom.uid)": [[258, "pydicom.uid.DeformableSpatialRegistrationStorage"]], "dermoscopicphotographyimagestorage (in module pydicom.uid)": [[259, "pydicom.uid.DermoscopicPhotographyImageStorage"]], "digitalintraoralxrayimagestorageforpresentation (in module pydicom.uid)": [[260, "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation"]], "digitalintraoralxrayimagestorageforprocessing (in module pydicom.uid)": [[261, "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing"]], "digitalmammographyxrayimagestorageforpresentation (in module pydicom.uid)": [[262, "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation"]], "digitalmammographyxrayimagestorageforprocessing (in module pydicom.uid)": [[263, "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing"]], "digitalxrayimagestorageforpresentation (in module pydicom.uid)": [[264, "pydicom.uid.DigitalXRayImageStorageForPresentation"]], "digitalxrayimagestorageforprocessing (in module pydicom.uid)": [[265, "pydicom.uid.DigitalXRayImageStorageForProcessing"]], "eddycurrentimagestorage (in module pydicom.uid)": [[266, "pydicom.uid.EddyCurrentImageStorage"]], "eddycurrentmultiframeimagestorage (in module pydicom.uid)": [[267, "pydicom.uid.EddyCurrentMultiFrameImageStorage"]], "electromyogramwaveformstorage (in module pydicom.uid)": [[268, "pydicom.uid.ElectromyogramWaveformStorage"]], "electrooculogramwaveformstorage (in module pydicom.uid)": [[269, "pydicom.uid.ElectrooculogramWaveformStorage"]], "encapsulatedcdastorage (in module pydicom.uid)": [[270, "pydicom.uid.EncapsulatedCDAStorage"]], "encapsulatedmtlstorage (in module pydicom.uid)": [[271, "pydicom.uid.EncapsulatedMTLStorage"]], "encapsulatedobjstorage (in module pydicom.uid)": [[272, "pydicom.uid.EncapsulatedOBJStorage"]], "encapsulatedpdfstorage (in module pydicom.uid)": [[273, "pydicom.uid.EncapsulatedPDFStorage"]], "encapsulatedstlstorage (in module pydicom.uid)": [[274, "pydicom.uid.EncapsulatedSTLStorage"]], "enhancedctimagestorage (in module pydicom.uid)": [[275, "pydicom.uid.EnhancedCTImageStorage"]], "enhancedcontinuousrtimagestorage (in module pydicom.uid)": [[276, "pydicom.uid.EnhancedContinuousRTImageStorage"]], "enhancedmrcolorimagestorage (in module pydicom.uid)": [[277, "pydicom.uid.EnhancedMRColorImageStorage"]], "enhancedmrimagestorage (in module pydicom.uid)": [[278, "pydicom.uid.EnhancedMRImageStorage"]], "enhancedpetimagestorage (in module pydicom.uid)": [[279, "pydicom.uid.EnhancedPETImageStorage"]], "enhancedrtimagestorage (in module pydicom.uid)": [[280, "pydicom.uid.EnhancedRTImageStorage"]], "enhancedsrstorage (in module pydicom.uid)": [[281, "pydicom.uid.EnhancedSRStorage"]], "enhancedusvolumestorage (in module pydicom.uid)": [[282, "pydicom.uid.EnhancedUSVolumeStorage"]], "enhancedxaimagestorage (in module pydicom.uid)": [[283, "pydicom.uid.EnhancedXAImageStorage"]], "enhancedxrfimagestorage (in module pydicom.uid)": [[284, "pydicom.uid.EnhancedXRFImageStorage"]], "enhancedxrayradiationdosesrstorage (in module pydicom.uid)": [[285, "pydicom.uid.EnhancedXRayRadiationDoseSRStorage"]], "explicitvrbigendian (in module pydicom.uid)": [[286, "pydicom.uid.ExplicitVRBigEndian"]], "explicitvrlittleendian (in module pydicom.uid)": [[287, "pydicom.uid.ExplicitVRLittleEndian"]], "extensiblesrstorage (in module pydicom.uid)": [[288, "pydicom.uid.ExtensibleSRStorage"]], "general32bitecgwaveformstorage (in module pydicom.uid)": [[289, "pydicom.uid.General32bitECGWaveformStorage"]], "generalaudiowaveformstorage (in module pydicom.uid)": [[290, "pydicom.uid.GeneralAudioWaveformStorage"]], "generalecgwaveformstorage (in module pydicom.uid)": [[291, "pydicom.uid.GeneralECGWaveformStorage"]], "genericimplanttemplatestorage (in module pydicom.uid)": [[292, "pydicom.uid.GenericImplantTemplateStorage"]], "grayscaleplanarmprvolumetricpresentationstatestorage (in module pydicom.uid)": [[293, "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage"]], "grayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[294, "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage"]], "hevcm10p51 (in module pydicom.uid)": [[295, "pydicom.uid.HEVCM10P51"]], "hevcmp51 (in module pydicom.uid)": [[296, "pydicom.uid.HEVCMP51"]], "hangingprotocolstorage (in module pydicom.uid)": [[297, "pydicom.uid.HangingProtocolStorage"]], "hemodynamicwaveformstorage (in module pydicom.uid)": [[298, "pydicom.uid.HemodynamicWaveformStorage"]], "implantassemblytemplatestorage (in module pydicom.uid)": [[299, "pydicom.uid.ImplantAssemblyTemplateStorage"]], "implanttemplategroupstorage (in module pydicom.uid)": [[300, "pydicom.uid.ImplantTemplateGroupStorage"]], "implantationplansrstorage (in module pydicom.uid)": [[301, "pydicom.uid.ImplantationPlanSRStorage"]], "implicitvrlittleendian (in module pydicom.uid)": [[302, "pydicom.uid.ImplicitVRLittleEndian"]], "intraocularlenscalculationsstorage (in module pydicom.uid)": [[303, "pydicom.uid.IntraocularLensCalculationsStorage"]], "intravascularopticalcoherencetomographyimagestorageforpresentation (in module pydicom.uid)": [[304, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation"]], "intravascularopticalcoherencetomographyimagestorageforprocessing (in module pydicom.uid)": [[305, "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing"]], "inventorystorage (in module pydicom.uid)": [[306, "pydicom.uid.InventoryStorage"]], "jpeg2000 (in module pydicom.uid)": [[307, "pydicom.uid.JPEG2000"]], "jpeg2000lossless (in module pydicom.uid)": [[308, "pydicom.uid.JPEG2000Lossless"]], "jpeg2000mc (in module pydicom.uid)": [[309, "pydicom.uid.JPEG2000MC"]], "jpeg2000mclossless (in module pydicom.uid)": [[310, "pydicom.uid.JPEG2000MCLossless"]], "jpeg2000transfersyntaxes (in module pydicom.uid)": [[311, "pydicom.uid.JPEG2000TransferSyntaxes"]], "jpegbaseline8bit (in module pydicom.uid)": [[312, "pydicom.uid.JPEGBaseline8Bit"]], "jpegextended12bit (in module pydicom.uid)": [[313, "pydicom.uid.JPEGExtended12Bit"]], "jpeglslossless (in module pydicom.uid)": [[314, "pydicom.uid.JPEGLSLossless"]], "jpeglsnearlossless (in module pydicom.uid)": [[315, "pydicom.uid.JPEGLSNearLossless"]], "jpeglstransfersyntaxes (in module pydicom.uid)": [[316, "pydicom.uid.JPEGLSTransferSyntaxes"]], "jpeglossless (in module pydicom.uid)": [[317, "pydicom.uid.JPEGLossless"]], "jpeglosslesssv1 (in module pydicom.uid)": [[318, "pydicom.uid.JPEGLosslessSV1"]], "jpegtransfersyntaxes (in module pydicom.uid)": [[319, "pydicom.uid.JPEGTransferSyntaxes"]], "keratometrymeasurementsstorage (in module pydicom.uid)": [[320, "pydicom.uid.KeratometryMeasurementsStorage"]], "keyobjectselectiondocumentstorage (in module pydicom.uid)": [[321, "pydicom.uid.KeyObjectSelectionDocumentStorage"]], "legacyconvertedenhancedctimagestorage (in module pydicom.uid)": [[322, "pydicom.uid.LegacyConvertedEnhancedCTImageStorage"]], "legacyconvertedenhancedmrimagestorage (in module pydicom.uid)": [[323, "pydicom.uid.LegacyConvertedEnhancedMRImageStorage"]], "legacyconvertedenhancedpetimagestorage (in module pydicom.uid)": [[324, "pydicom.uid.LegacyConvertedEnhancedPETImageStorage"]], "lensometrymeasurementsstorage (in module pydicom.uid)": [[325, "pydicom.uid.LensometryMeasurementsStorage"]], "mpeg2mphl (in module pydicom.uid)": [[326, "pydicom.uid.MPEG2MPHL"]], "mpeg2mphlf (in module pydicom.uid)": [[327, "pydicom.uid.MPEG2MPHLF"]], "mpeg2mpml (in module pydicom.uid)": [[328, "pydicom.uid.MPEG2MPML"]], "mpeg2mpmlf (in module pydicom.uid)": [[329, "pydicom.uid.MPEG2MPMLF"]], "mpeg4hp41 (in module pydicom.uid)": [[330, "pydicom.uid.MPEG4HP41"]], "mpeg4hp41bd (in module pydicom.uid)": [[331, "pydicom.uid.MPEG4HP41BD"]], "mpeg4hp41bdf (in module pydicom.uid)": [[332, "pydicom.uid.MPEG4HP41BDF"]], "mpeg4hp41f (in module pydicom.uid)": [[333, "pydicom.uid.MPEG4HP41F"]], "mpeg4hp422d (in module pydicom.uid)": [[334, "pydicom.uid.MPEG4HP422D"]], "mpeg4hp422df (in module pydicom.uid)": [[335, "pydicom.uid.MPEG4HP422DF"]], "mpeg4hp423d (in module pydicom.uid)": [[336, "pydicom.uid.MPEG4HP423D"]], "mpeg4hp423df (in module pydicom.uid)": [[337, "pydicom.uid.MPEG4HP423DF"]], "mpeg4hp42stereo (in module pydicom.uid)": [[338, "pydicom.uid.MPEG4HP42STEREO"]], "mpeg4hp42stereof (in module pydicom.uid)": [[339, "pydicom.uid.MPEG4HP42STEREOF"]], "mpegtransfersyntaxes (in module pydicom.uid)": [[340, "pydicom.uid.MPEGTransferSyntaxes"]], "mrimagestorage (in module pydicom.uid)": [[341, "pydicom.uid.MRImageStorage"]], "mrspectroscopystorage (in module pydicom.uid)": [[342, "pydicom.uid.MRSpectroscopyStorage"]], "maculargridthicknessandvolumereportstorage (in module pydicom.uid)": [[343, "pydicom.uid.MacularGridThicknessAndVolumeReportStorage"]], "mammographycadsrstorage (in module pydicom.uid)": [[344, "pydicom.uid.MammographyCADSRStorage"]], "mediastoragedirectorystorage (in module pydicom.uid)": [[345, "pydicom.uid.MediaStorageDirectoryStorage"]], "microscopybulksimpleannotationsstorage (in module pydicom.uid)": [[346, "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage"]], "multiframegrayscalebytesecondarycaptureimagestorage (in module pydicom.uid)": [[347, "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage"]], "multiframegrayscalewordsecondarycaptureimagestorage (in module pydicom.uid)": [[348, "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage"]], "multiframesinglebitsecondarycaptureimagestorage (in module pydicom.uid)": [[349, "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage"]], "multiframetruecolorsecondarycaptureimagestorage (in module pydicom.uid)": [[350, "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage"]], "multichannelrespiratorywaveformstorage (in module pydicom.uid)": [[351, "pydicom.uid.MultichannelRespiratoryWaveformStorage"]], "multiplevolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[352, "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage"]], "nuclearmedicineimagestorage (in module pydicom.uid)": [[353, "pydicom.uid.NuclearMedicineImageStorage"]], "ophthalmicaxialmeasurementsstorage (in module pydicom.uid)": [[354, "pydicom.uid.OphthalmicAxialMeasurementsStorage"]], "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorage (in module pydicom.uid)": [[355, "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"]], "ophthalmicopticalcoherencetomographyenfaceimagestorage (in module pydicom.uid)": [[356, "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"]], "ophthalmicphotography16bitimagestorage (in module pydicom.uid)": [[357, "pydicom.uid.OphthalmicPhotography16BitImageStorage"]], "ophthalmicphotography8bitimagestorage (in module pydicom.uid)": [[358, "pydicom.uid.OphthalmicPhotography8BitImageStorage"]], "ophthalmicthicknessmapstorage (in module pydicom.uid)": [[359, "pydicom.uid.OphthalmicThicknessMapStorage"]], "ophthalmictomographyimagestorage (in module pydicom.uid)": [[360, "pydicom.uid.OphthalmicTomographyImageStorage"]], "ophthalmicvisualfieldstaticperimetrymeasurementsstorage (in module pydicom.uid)": [[361, "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"]], "pydicom_implementation_uid (in module pydicom.uid)": [[362, "pydicom.uid.PYDICOM_IMPLEMENTATION_UID"]], "pydicom_root_uid (in module pydicom.uid)": [[363, "pydicom.uid.PYDICOM_ROOT_UID"]], "parametricmapstorage (in module pydicom.uid)": [[364, "pydicom.uid.ParametricMapStorage"]], "patientradiationdosesrstorage (in module pydicom.uid)": [[365, "pydicom.uid.PatientRadiationDoseSRStorage"]], "performedimagingagentadministrationsrstorage (in module pydicom.uid)": [[366, "pydicom.uid.PerformedImagingAgentAdministrationSRStorage"]], "photoacousticimagestorage (in module pydicom.uid)": [[367, "pydicom.uid.PhotoacousticImageStorage"]], "plannedimagingagentadministrationsrstorage (in module pydicom.uid)": [[368, "pydicom.uid.PlannedImagingAgentAdministrationSRStorage"]], "positronemissiontomographyimagestorage (in module pydicom.uid)": [[369, "pydicom.uid.PositronEmissionTomographyImageStorage"]], "procedurelogstorage (in module pydicom.uid)": [[370, "pydicom.uid.ProcedureLogStorage"]], "protocolapprovalstorage (in module pydicom.uid)": [[371, "pydicom.uid.ProtocolApprovalStorage"]], "pseudocolorsoftcopypresentationstatestorage (in module pydicom.uid)": [[372, "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage"]], "re_valid_uid (in module pydicom.uid)": [[373, "pydicom.uid.RE_VALID_UID"]], "re_valid_uid_prefix (in module pydicom.uid)": [[374, "pydicom.uid.RE_VALID_UID_PREFIX"]], "rlelossless (in module pydicom.uid)": [[375, "pydicom.uid.RLELossless"]], "rletransfersyntaxes (in module pydicom.uid)": [[376, "pydicom.uid.RLETransferSyntaxes"]], "rtbeamsdeliveryinstructionstorage (in module pydicom.uid)": [[377, "pydicom.uid.RTBeamsDeliveryInstructionStorage"]], "rtbeamstreatmentrecordstorage (in module pydicom.uid)": [[378, "pydicom.uid.RTBeamsTreatmentRecordStorage"]], "rtbrachyapplicationsetupdeliveryinstructionstorage (in module pydicom.uid)": [[379, "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage"]], "rtbrachytreatmentrecordstorage (in module pydicom.uid)": [[380, "pydicom.uid.RTBrachyTreatmentRecordStorage"]], "rtdosestorage (in module pydicom.uid)": [[381, "pydicom.uid.RTDoseStorage"]], "rtimagestorage (in module pydicom.uid)": [[382, "pydicom.uid.RTImageStorage"]], "rtionbeamstreatmentrecordstorage (in module pydicom.uid)": [[383, "pydicom.uid.RTIonBeamsTreatmentRecordStorage"]], "rtionplanstorage (in module pydicom.uid)": [[384, "pydicom.uid.RTIonPlanStorage"]], "rtpatientpositionacquisitioninstructionstorage (in module pydicom.uid)": [[385, "pydicom.uid.RTPatientPositionAcquisitionInstructionStorage"]], "rtphysicianintentstorage (in module pydicom.uid)": [[386, "pydicom.uid.RTPhysicianIntentStorage"]], "rtplanstorage (in module pydicom.uid)": [[387, "pydicom.uid.RTPlanStorage"]], "rtradiationrecordsetstorage (in module pydicom.uid)": [[388, "pydicom.uid.RTRadiationRecordSetStorage"]], "rtradiationsalvagerecordstorage (in module pydicom.uid)": [[389, "pydicom.uid.RTRadiationSalvageRecordStorage"]], "rtradiationsetdeliveryinstructionstorage (in module pydicom.uid)": [[390, "pydicom.uid.RTRadiationSetDeliveryInstructionStorage"]], "rtradiationsetstorage (in module pydicom.uid)": [[391, "pydicom.uid.RTRadiationSetStorage"]], "rtsegmentannotationstorage (in module pydicom.uid)": [[392, "pydicom.uid.RTSegmentAnnotationStorage"]], "rtstructuresetstorage (in module pydicom.uid)": [[393, "pydicom.uid.RTStructureSetStorage"]], "rttreatmentpreparationstorage (in module pydicom.uid)": [[394, "pydicom.uid.RTTreatmentPreparationStorage"]], "rttreatmentsummaryrecordstorage (in module pydicom.uid)": [[395, "pydicom.uid.RTTreatmentSummaryRecordStorage"]], "radiopharmaceuticalradiationdosesrstorage (in module pydicom.uid)": [[396, "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage"]], "rawdatastorage (in module pydicom.uid)": [[397, "pydicom.uid.RawDataStorage"]], "realworldvaluemappingstorage (in module pydicom.uid)": [[398, "pydicom.uid.RealWorldValueMappingStorage"]], "respiratorywaveformstorage (in module pydicom.uid)": [[399, "pydicom.uid.RespiratoryWaveformStorage"]], "roboticarmradiationstorage (in module pydicom.uid)": [[400, "pydicom.uid.RoboticArmRadiationStorage"]], "roboticradiationrecordstorage (in module pydicom.uid)": [[401, "pydicom.uid.RoboticRadiationRecordStorage"]], "routinescalpelectroencephalogramwaveformstorage (in module pydicom.uid)": [[402, "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage"]], "smptest211020uncompressedinterlacedactivevideo (in module pydicom.uid)": [[403, "pydicom.uid.SMPTEST211020UncompressedInterlacedActiveVideo"]], "smptest211020uncompressedprogressiveactivevideo (in module pydicom.uid)": [[404, "pydicom.uid.SMPTEST211020UncompressedProgressiveActiveVideo"]], "smptest211030pcmdigitalaudio (in module pydicom.uid)": [[405, "pydicom.uid.SMPTEST211030PCMDigitalAudio"]], "secondarycaptureimagestorage (in module pydicom.uid)": [[406, "pydicom.uid.SecondaryCaptureImageStorage"]], "segmentationstorage (in module pydicom.uid)": [[407, "pydicom.uid.SegmentationStorage"]], "segmentedvolumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[408, "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage"]], "simplifiedadultechosrstorage (in module pydicom.uid)": [[409, "pydicom.uid.SimplifiedAdultEchoSRStorage"]], "sleepelectroencephalogramwaveformstorage (in module pydicom.uid)": [[410, "pydicom.uid.SleepElectroencephalogramWaveformStorage"]], "spatialfiducialsstorage (in module pydicom.uid)": [[411, "pydicom.uid.SpatialFiducialsStorage"]], "spatialregistrationstorage (in module pydicom.uid)": [[412, "pydicom.uid.SpatialRegistrationStorage"]], "spectacleprescriptionreportstorage (in module pydicom.uid)": [[413, "pydicom.uid.SpectaclePrescriptionReportStorage"]], "stereometricrelationshipstorage (in module pydicom.uid)": [[414, "pydicom.uid.StereometricRelationshipStorage"]], "subjectiverefractionmeasurementsstorage (in module pydicom.uid)": [[415, "pydicom.uid.SubjectiveRefractionMeasurementsStorage"]], "surfacescanmeshstorage (in module pydicom.uid)": [[416, "pydicom.uid.SurfaceScanMeshStorage"]], "surfacescanpointcloudstorage (in module pydicom.uid)": [[417, "pydicom.uid.SurfaceScanPointCloudStorage"]], "surfacesegmentationstorage (in module pydicom.uid)": [[418, "pydicom.uid.SurfaceSegmentationStorage"]], "tomotherapeuticradiationrecordstorage (in module pydicom.uid)": [[419, "pydicom.uid.TomotherapeuticRadiationRecordStorage"]], "tomotherapeuticradiationstorage (in module pydicom.uid)": [[420, "pydicom.uid.TomotherapeuticRadiationStorage"]], "tractographyresultsstorage (in module pydicom.uid)": [[421, "pydicom.uid.TractographyResultsStorage"]], "twelveleadecgwaveformstorage (in module pydicom.uid)": [[422, "pydicom.uid.TwelveLeadECGWaveformStorage"]], "uid (class in pydicom.uid)": [[423, "pydicom.uid.UID"]], "__init__() (pydicom.uid.uid method)": [[423, "pydicom.uid.UID.__init__"]], "info (pydicom.uid.uid property)": [[423, "pydicom.uid.UID.info"]], "is_compressed (pydicom.uid.uid property)": [[423, "pydicom.uid.UID.is_compressed"]], "is_deflated (pydicom.uid.uid property)": [[423, "pydicom.uid.UID.is_deflated"]], "is_encapsulated (pydicom.uid.uid property)": [[423, "pydicom.uid.UID.is_encapsulated"]], "is_implicit_vr (pydicom.uid.uid property)": [[423, "pydicom.uid.UID.is_implicit_VR"]], "is_little_endian (pydicom.uid.uid property)": [[423, "pydicom.uid.UID.is_little_endian"]], "is_private (pydicom.uid.uid property)": [[423, "pydicom.uid.UID.is_private"]], "is_retired (pydicom.uid.uid property)": [[423, "pydicom.uid.UID.is_retired"]], "is_transfer_syntax (pydicom.uid.uid property)": [[423, "pydicom.uid.UID.is_transfer_syntax"]], "is_valid (pydicom.uid.uid property)": [[423, "pydicom.uid.UID.is_valid"]], "keyword (pydicom.uid.uid property)": [[423, "pydicom.uid.UID.keyword"]], "name (pydicom.uid.uid property)": [[423, "pydicom.uid.UID.name"]], "type (pydicom.uid.uid property)": [[423, "pydicom.uid.UID.type"]], "ultrasoundimagestorage (in module pydicom.uid)": [[424, "pydicom.uid.UltrasoundImageStorage"]], "ultrasoundmultiframeimagestorage (in module pydicom.uid)": [[425, "pydicom.uid.UltrasoundMultiFrameImageStorage"]], "uncompressedtransfersyntaxes (in module pydicom.uid)": [[426, "pydicom.uid.UncompressedTransferSyntaxes"]], "vlendoscopicimagestorage (in module pydicom.uid)": [[427, "pydicom.uid.VLEndoscopicImageStorage"]], "vlmicroscopicimagestorage (in module pydicom.uid)": [[428, "pydicom.uid.VLMicroscopicImageStorage"]], "vlphotographicimagestorage (in module pydicom.uid)": [[429, "pydicom.uid.VLPhotographicImageStorage"]], "vlslidecoordinatesmicroscopicimagestorage (in module pydicom.uid)": [[430, "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage"]], "vlwholeslidemicroscopyimagestorage (in module pydicom.uid)": [[431, "pydicom.uid.VLWholeSlideMicroscopyImageStorage"]], "variablemodalitylutsoftcopypresentationstatestorage (in module pydicom.uid)": [[432, "pydicom.uid.VariableModalityLUTSoftcopyPresentationStateStorage"]], "videoendoscopicimagestorage (in module pydicom.uid)": [[433, "pydicom.uid.VideoEndoscopicImageStorage"]], "videomicroscopicimagestorage (in module pydicom.uid)": [[434, "pydicom.uid.VideoMicroscopicImageStorage"]], "videophotographicimagestorage (in module pydicom.uid)": [[435, "pydicom.uid.VideoPhotographicImageStorage"]], "visualacuitymeasurementsstorage (in module pydicom.uid)": [[436, "pydicom.uid.VisualAcuityMeasurementsStorage"]], "volumerenderingvolumetricpresentationstatestorage (in module pydicom.uid)": [[437, "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage"]], "widefieldophthalmicphotography3dcoordinatesimagestorage (in module pydicom.uid)": [[438, "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage"]], "widefieldophthalmicphotographystereographicprojectionimagestorage (in module pydicom.uid)": [[439, "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"]], "xadefinedprocedureprotocolstorage (in module pydicom.uid)": [[440, "pydicom.uid.XADefinedProcedureProtocolStorage"]], "xaperformedprocedureprotocolstorage (in module pydicom.uid)": [[441, "pydicom.uid.XAPerformedProcedureProtocolStorage"]], "xaxrfgrayscalesoftcopypresentationstatestorage (in module pydicom.uid)": [[442, "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage"]], "xray3dangiographicimagestorage (in module pydicom.uid)": [[443, "pydicom.uid.XRay3DAngiographicImageStorage"]], "xray3dcraniofacialimagestorage (in module pydicom.uid)": [[444, "pydicom.uid.XRay3DCraniofacialImageStorage"]], "xrayangiographicimagestorage (in module pydicom.uid)": [[445, "pydicom.uid.XRayAngiographicImageStorage"]], "xrayradiationdosesrstorage (in module pydicom.uid)": [[446, "pydicom.uid.XRayRadiationDoseSRStorage"]], "xrayradiofluoroscopicimagestorage (in module pydicom.uid)": [[447, "pydicom.uid.XRayRadiofluoroscopicImageStorage"]], "generate_uid() (in module pydicom.uid)": [[448, "pydicom.uid.generate_uid"]], "da (class in pydicom.valuerep)": [[449, "pydicom.valuerep.DA"]], "__init__() (pydicom.valuerep.da method)": [[449, "pydicom.valuerep.DA.__init__"]], "ds() (in module pydicom.valuerep)": [[450, "pydicom.valuerep.DS"]], "dsdecimal (class in pydicom.valuerep)": [[451, "pydicom.valuerep.DSdecimal"]], "__init__() (pydicom.valuerep.dsdecimal method)": [[451, "pydicom.valuerep.DSdecimal.__init__"]], "dsfloat (class in pydicom.valuerep)": [[452, "pydicom.valuerep.DSfloat"]], "__init__() (pydicom.valuerep.dsfloat method)": [[452, "pydicom.valuerep.DSfloat.__init__"]], "dt (class in pydicom.valuerep)": [[453, "pydicom.valuerep.DT"]], "__init__() (pydicom.valuerep.dt method)": [[453, "pydicom.valuerep.DT.__init__"]], "is (class in pydicom.valuerep)": [[454, "pydicom.valuerep.IS"]], "__init__() (pydicom.valuerep.is method)": [[454, "pydicom.valuerep.IS.__init__"]], "isfloat (class in pydicom.valuerep)": [[455, "pydicom.valuerep.ISfloat"]], "__init__() (pydicom.valuerep.isfloat method)": [[455, "pydicom.valuerep.ISfloat.__init__"]], "personname (class in pydicom.valuerep)": [[456, "pydicom.valuerep.PersonName"]], "__init__() (pydicom.valuerep.personname method)": [[456, "pydicom.valuerep.PersonName.__init__"]], "alphabetic (pydicom.valuerep.personname property)": [[456, "pydicom.valuerep.PersonName.alphabetic"]], "components (pydicom.valuerep.personname property)": [[456, "pydicom.valuerep.PersonName.components"]], "decode() (pydicom.valuerep.personname method)": [[456, "pydicom.valuerep.PersonName.decode"]], "encode() (pydicom.valuerep.personname method)": [[456, "pydicom.valuerep.PersonName.encode"]], "family_comma_given() (pydicom.valuerep.personname method)": [[456, "pydicom.valuerep.PersonName.family_comma_given"]], "family_name (pydicom.valuerep.personname property)": [[456, "pydicom.valuerep.PersonName.family_name"]], "formatted() (pydicom.valuerep.personname method)": [[456, "pydicom.valuerep.PersonName.formatted"]], "from_named_components() (pydicom.valuerep.personname class method)": [[456, "pydicom.valuerep.PersonName.from_named_components"]], "from_named_components_veterinary() (pydicom.valuerep.personname class method)": [[456, "pydicom.valuerep.PersonName.from_named_components_veterinary"]], "given_name (pydicom.valuerep.personname property)": [[456, "pydicom.valuerep.PersonName.given_name"]], "ideographic (pydicom.valuerep.personname property)": [[456, "pydicom.valuerep.PersonName.ideographic"]], "middle_name (pydicom.valuerep.personname property)": [[456, "pydicom.valuerep.PersonName.middle_name"]], "name_prefix (pydicom.valuerep.personname property)": [[456, "pydicom.valuerep.PersonName.name_prefix"]], "name_suffix (pydicom.valuerep.personname property)": [[456, "pydicom.valuerep.PersonName.name_suffix"]], "phonetic (pydicom.valuerep.personname property)": [[456, "pydicom.valuerep.PersonName.phonetic"]], "tm (class in pydicom.valuerep)": [[457, "pydicom.valuerep.TM"]], "__init__() (pydicom.valuerep.tm method)": [[457, "pydicom.valuerep.TM.__init__"]], "vr (class in pydicom.valuerep)": [[458, "pydicom.valuerep.VR"]], "__init__() (pydicom.valuerep.vr method)": [[458, "pydicom.valuerep.VR.__init__"]], "format_number_as_ds() (in module pydicom.valuerep)": [[459, "pydicom.valuerep.format_number_as_ds"]], "is_valid_ds() (in module pydicom.valuerep)": [[460, "pydicom.valuerep.is_valid_ds"]], "convert_ae_string() (in module pydicom.values)": [[461, "pydicom.values.convert_AE_string"]], "convert_atvalue() (in module pydicom.values)": [[462, "pydicom.values.convert_ATvalue"]], "convert_da_string() (in module pydicom.values)": [[463, "pydicom.values.convert_DA_string"]], "convert_ds_string() (in module pydicom.values)": [[464, "pydicom.values.convert_DS_string"]], "convert_dt_string() (in module pydicom.values)": [[465, "pydicom.values.convert_DT_string"]], "convert_is_string() (in module pydicom.values)": [[466, "pydicom.values.convert_IS_string"]], "convert_obvalue() (in module pydicom.values)": [[467, "pydicom.values.convert_OBvalue"]], "convert_owvalue() (in module pydicom.values)": [[468, "pydicom.values.convert_OWvalue"]], "convert_pn() (in module pydicom.values)": [[469, "pydicom.values.convert_PN"]], "convert_sq() (in module pydicom.values)": [[470, "pydicom.values.convert_SQ"]], "convert_tm_string() (in module pydicom.values)": [[471, "pydicom.values.convert_TM_string"]], "convert_ui() (in module pydicom.values)": [[472, "pydicom.values.convert_UI"]], "convert_un() (in module pydicom.values)": [[473, "pydicom.values.convert_UN"]], "convert_ur_string() (in module pydicom.values)": [[474, "pydicom.values.convert_UR_string"]], "convert_numbers() (in module pydicom.values)": [[475, "pydicom.values.convert_numbers"]], "convert_single_string() (in module pydicom.values)": [[476, "pydicom.values.convert_single_string"]], "convert_string() (in module pydicom.values)": [[477, "pydicom.values.convert_string"]], "convert_tag() (in module pydicom.values)": [[478, "pydicom.values.convert_tag"]], "convert_text() (in module pydicom.values)": [[479, "pydicom.values.convert_text"]], "convert_value() (in module pydicom.values)": [[480, "pydicom.values.convert_value"]], "generate_multiplex() (in module pydicom.waveforms.numpy_handler)": [[481, "pydicom.waveforms.numpy_handler.generate_multiplex"]], "is_available() (in module pydicom.waveforms.numpy_handler)": [[481, "pydicom.waveforms.numpy_handler.is_available"]], "multiplex_array() (in module pydicom.waveforms.numpy_handler)": [[481, "pydicom.waveforms.numpy_handler.multiplex_array"]], "pydicom.waveforms.numpy_handler": [[481, "module-pydicom.waveforms.numpy_handler"]], "pydicom.overlays": [[483, "module-pydicom.overlays"]], "pydicom.pixel_data_handlers": [[484, "module-pydicom.pixel_data_handlers"]], "pydicom.waveforms": [[485, "module-pydicom.waveforms"]], "pydicom": [[486, "module-pydicom"]]}})