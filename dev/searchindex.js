Search.setIndex({"docnames": ["auto_examples/dicomtree", "auto_examples/image_processing/plot_downsize_image", "auto_examples/image_processing/plot_waveforms", "auto_examples/image_processing/reslice", "auto_examples/image_processing/sg_execution_times", "auto_examples/index", "auto_examples/input_output/plot_printing_dataset", "auto_examples/input_output/plot_read_dicom", "auto_examples/input_output/plot_read_dicom_directory", "auto_examples/input_output/plot_read_fileset", "auto_examples/input_output/plot_read_rtplan", "auto_examples/input_output/plot_write_dicom", "auto_examples/input_output/sg_execution_times", "auto_examples/memory_dataset", "auto_examples/metadata_processing/plot_add_dict_entries", "auto_examples/metadata_processing/plot_anonymize", "auto_examples/metadata_processing/plot_sequences", "auto_examples/metadata_processing/sg_execution_times", "auto_examples/plot_dicom_difference", "auto_examples/sg_execution_times", "auto_examples/show_charset_name", "faq/index", "guides/cli/cli_codify", "guides/cli/cli_dev", "guides/cli/cli_guide", "guides/cli/cli_intro", "guides/cli/cli_show", "guides/element_value_types", "guides/encoding/encoder_plugin_options", "guides/encoding/encoder_plugins", "guides/encoding/index", "guides/encoding/rle_lossless", "guides/glossary", "guides/index", "guides/writing_documentation", "index", "old/base_element", "old/best_practices", "old/getting_started", "old/image_data_compression", "old/image_data_handlers", "old/private_data_elements", "old/pydicom_user_guide", "old/python2_support", "old/ref_guide", "old/transition_to_pydicom1", "old/viewing_images", "old/working_with_overlays", "old/working_with_pixel_data", "old/working_with_waveforms", "old/writing_files", "reference/charset", "reference/config", "reference/data", "reference/datadict", "reference/dataset", "reference/dicomdir", "reference/elem", "reference/elem.dataelem", "reference/elem.multival", "reference/elem.sequence", "reference/elem.tag", "reference/elem.valuerep", "reference/elem.values", "reference/encaps", "reference/encoders", "reference/errors", "reference/fileio", "reference/fileio.base", "reference/fileio.read", "reference/fileio.util", "reference/fileio.write", "reference/fileset", "reference/generated/pydicom.charset.convert_encodings", "reference/generated/pydicom.charset.decode_bytes", "reference/generated/pydicom.charset.decode_element", "reference/generated/pydicom.charset.encode_string", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS", "reference/generated/pydicom.config.DS_decimal", "reference/generated/pydicom.config.DS_numpy", "reference/generated/pydicom.config.IGNORE", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR", "reference/generated/pydicom.config.RAISE", "reference/generated/pydicom.config.WARN", "reference/generated/pydicom.config.allow_DS_float", "reference/generated/pydicom.config.assume_implicit_vr_switch", "reference/generated/pydicom.config.convert_wrong_length_to_UN", "reference/generated/pydicom.config.data_element_callback", "reference/generated/pydicom.config.data_element_callback_kwargs", "reference/generated/pydicom.config.datetime_conversion", "reference/generated/pydicom.config.debug", "reference/generated/pydicom.config.enforce_valid_values", "reference/generated/pydicom.config.future_behavior", "reference/generated/pydicom.config.overlay_data_handlers", "reference/generated/pydicom.config.pixel_data_handlers", "reference/generated/pydicom.config.reset_data_element_callback", "reference/generated/pydicom.config.settings", "reference/generated/pydicom.config.show_file_meta", "reference/generated/pydicom.config.use_DS_decimal", "reference/generated/pydicom.config.use_DS_numpy", "reference/generated/pydicom.config.use_IS_numpy", "reference/generated/pydicom.data.get_charset_files", "reference/generated/pydicom.data.get_palette_files", "reference/generated/pydicom.data.get_testdata_file", "reference/generated/pydicom.data.get_testdata_files", "reference/generated/pydicom.datadict.add_dict_entries", "reference/generated/pydicom.datadict.add_dict_entry", "reference/generated/pydicom.datadict.add_private_dict_entries", "reference/generated/pydicom.datadict.add_private_dict_entry", "reference/generated/pydicom.datadict.dictionary_VM", "reference/generated/pydicom.datadict.dictionary_VR", "reference/generated/pydicom.datadict.dictionary_description", "reference/generated/pydicom.datadict.dictionary_has_tag", "reference/generated/pydicom.datadict.dictionary_is_retired", "reference/generated/pydicom.datadict.dictionary_keyword", "reference/generated/pydicom.datadict.get_entry", "reference/generated/pydicom.datadict.get_private_entry", "reference/generated/pydicom.datadict.keyword_for_tag", "reference/generated/pydicom.datadict.mask_match", "reference/generated/pydicom.datadict.private_dictionary_VM", "reference/generated/pydicom.datadict.private_dictionary_VR", "reference/generated/pydicom.datadict.private_dictionary_description", "reference/generated/pydicom.datadict.repeater_has_keyword", "reference/generated/pydicom.datadict.repeater_has_tag", "reference/generated/pydicom.datadict.tag_for_keyword", "reference/generated/pydicom.dataelem.DataElement", "reference/generated/pydicom.dataelem.DataElement_from_raw", "reference/generated/pydicom.dataelem.RawDataElement", "reference/generated/pydicom.dataset.Dataset", "reference/generated/pydicom.dataset.FileDataset", "reference/generated/pydicom.dataset.FileMetaDataset", "reference/generated/pydicom.dataset.PrivateBlock", "reference/generated/pydicom.dataset.validate_file_meta", "reference/generated/pydicom.dicomdir.DicomDir", "reference/generated/pydicom.encaps.decode_data_sequence", "reference/generated/pydicom.encaps.defragment_data", "reference/generated/pydicom.encaps.encapsulate", "reference/generated/pydicom.encaps.encapsulate_extended", "reference/generated/pydicom.encaps.fragment_frame", "reference/generated/pydicom.encaps.generate_pixel_data", "reference/generated/pydicom.encaps.generate_pixel_data_fragment", "reference/generated/pydicom.encaps.generate_pixel_data_frame", "reference/generated/pydicom.encaps.get_frame_offsets", "reference/generated/pydicom.encaps.itemize_fragment", "reference/generated/pydicom.encaps.itemize_frame", "reference/generated/pydicom.encaps.read_item", "reference/generated/pydicom.encoders.RLELosslessEncoder", "reference/generated/pydicom.encoders.base.Encoder", "reference/generated/pydicom.encoders.get_encoder", "reference/generated/pydicom.errors.InvalidDicomError", "reference/generated/pydicom.filebase.DicomBytesIO", "reference/generated/pydicom.filebase.DicomFile", "reference/generated/pydicom.filebase.DicomFileLike", "reference/generated/pydicom.filebase.DicomIO", "reference/generated/pydicom.filereader.data_element_generator", "reference/generated/pydicom.filereader.data_element_offset_to_value", "reference/generated/pydicom.filereader.dcmread", "reference/generated/pydicom.filereader.read_dataset", "reference/generated/pydicom.filereader.read_deferred_data_element", "reference/generated/pydicom.filereader.read_dicomdir", "reference/generated/pydicom.filereader.read_file_meta_info", "reference/generated/pydicom.filereader.read_partial", "reference/generated/pydicom.filereader.read_preamble", "reference/generated/pydicom.filereader.read_sequence", "reference/generated/pydicom.filereader.read_sequence_item", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS", "reference/generated/pydicom.fileset.FileInstance", "reference/generated/pydicom.fileset.FileSet", "reference/generated/pydicom.fileset.RecordNode", "reference/generated/pydicom.fileset.generate_filename", "reference/generated/pydicom.fileset.is_conformant_file_id", "reference/generated/pydicom.fileutil.absorb_delimiter_item", "reference/generated/pydicom.fileutil.find_bytes", "reference/generated/pydicom.fileutil.find_delimiter", "reference/generated/pydicom.fileutil.length_of_undefined_length", "reference/generated/pydicom.fileutil.read_undefined_length_value", "reference/generated/pydicom.filewriter.correct_ambiguous_vr", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element", "reference/generated/pydicom.filewriter.dcmwrite", "reference/generated/pydicom.filewriter.multi_string", "reference/generated/pydicom.filewriter.write_ATvalue", "reference/generated/pydicom.filewriter.write_DA", "reference/generated/pydicom.filewriter.write_DT", "reference/generated/pydicom.filewriter.write_OBvalue", "reference/generated/pydicom.filewriter.write_OWvalue", "reference/generated/pydicom.filewriter.write_PN", "reference/generated/pydicom.filewriter.write_TM", "reference/generated/pydicom.filewriter.write_UI", "reference/generated/pydicom.filewriter.write_UN", "reference/generated/pydicom.filewriter.write_data_element", "reference/generated/pydicom.filewriter.write_dataset", "reference/generated/pydicom.filewriter.write_file_meta_info", "reference/generated/pydicom.filewriter.write_number_string", "reference/generated/pydicom.filewriter.write_numbers", "reference/generated/pydicom.filewriter.write_sequence", "reference/generated/pydicom.filewriter.write_sequence_item", "reference/generated/pydicom.filewriter.write_string", "reference/generated/pydicom.filewriter.write_text", "reference/generated/pydicom.misc.is_dicom", "reference/generated/pydicom.misc.size_in_bytes", "reference/generated/pydicom.multival.MultiValue", "reference/generated/pydicom.overlays.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut", "reference/generated/pydicom.pixel_data_handlers.apply_rescale", "reference/generated/pydicom.pixel_data_handlers.apply_voi", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut", "reference/generated/pydicom.pixel_data_handlers.apply_windowing", "reference/generated/pydicom.pixel_data_handlers.convert_color_space", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler", "reference/generated/pydicom.pixel_data_handlers.numpy_handler", "reference/generated/pydicom.pixel_data_handlers.pillow_handler", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler", "reference/generated/pydicom.pixel_data_handlers.rle_handler", "reference/generated/pydicom.pixel_data_handlers.util", "reference/generated/pydicom.sequence.Sequence", "reference/generated/pydicom.sequence.validate_dataset", "reference/generated/pydicom.tag.BaseTag", "reference/generated/pydicom.tag.Tag", "reference/generated/pydicom.tag.TupleTag", "reference/generated/pydicom.tag.tag_in_exception", "reference/generated/pydicom.uid.AcquisitionContextSRStorage", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage", "reference/generated/pydicom.uid.AllTransferSyntaxes", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage", "reference/generated/pydicom.uid.BasicTextSRStorage", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.BodyPositionWaveformStorage", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.CTImageStorage", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage", "reference/generated/pydicom.uid.ChestCADSRStorage", "reference/generated/pydicom.uid.ColonCADSRStorage", "reference/generated/pydicom.uid.ColorPaletteStorage", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.Comprehensive3DSRStorage", "reference/generated/pydicom.uid.ComprehensiveSRStorage", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage", "reference/generated/pydicom.uid.CornealTopographyMapStorage", "reference/generated/pydicom.uid.DICOS2DAITStorage", "reference/generated/pydicom.uid.DICOS3DAITStorage", "reference/generated/pydicom.uid.DICOSCTImageStorage", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing", "reference/generated/pydicom.uid.EddyCurrentImageStorage", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage", "reference/generated/pydicom.uid.EncapsulatedCDAStorage", "reference/generated/pydicom.uid.EncapsulatedMTLStorage", "reference/generated/pydicom.uid.EncapsulatedOBJStorage", "reference/generated/pydicom.uid.EncapsulatedPDFStorage", "reference/generated/pydicom.uid.EncapsulatedSTLStorage", "reference/generated/pydicom.uid.EnhancedCTImageStorage", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage", "reference/generated/pydicom.uid.EnhancedMRImageStorage", "reference/generated/pydicom.uid.EnhancedPETImageStorage", "reference/generated/pydicom.uid.EnhancedSRStorage", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage", "reference/generated/pydicom.uid.EnhancedXAImageStorage", "reference/generated/pydicom.uid.EnhancedXRFImageStorage", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.ExplicitVRBigEndian", "reference/generated/pydicom.uid.ExplicitVRLittleEndian", "reference/generated/pydicom.uid.ExtensibleSRStorage", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage", "reference/generated/pydicom.uid.GeneralECGWaveformStorage", "reference/generated/pydicom.uid.GenericImplantTemplateStorage", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.HEVCM10P51", "reference/generated/pydicom.uid.HEVCMP51", "reference/generated/pydicom.uid.HangingProtocolStorage", "reference/generated/pydicom.uid.HemodynamicWaveformStorage", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage", "reference/generated/pydicom.uid.ImplantationPlanSRStorage", "reference/generated/pydicom.uid.ImplicitVRLittleEndian", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "reference/generated/pydicom.uid.JPEG2000", "reference/generated/pydicom.uid.JPEG2000Lossless", "reference/generated/pydicom.uid.JPEG2000MC", "reference/generated/pydicom.uid.JPEG2000MCLossless", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes", "reference/generated/pydicom.uid.JPEGBaseline8Bit", "reference/generated/pydicom.uid.JPEGExtended12Bit", "reference/generated/pydicom.uid.JPEGLSLossless", "reference/generated/pydicom.uid.JPEGLSNearLossless", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes", "reference/generated/pydicom.uid.JPEGLosslessP14", "reference/generated/pydicom.uid.JPEGLosslessSV1", "reference/generated/pydicom.uid.JPEGTransferSyntaxes", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "reference/generated/pydicom.uid.LensometryMeasurementsStorage", "reference/generated/pydicom.uid.MPEG2MPHL", "reference/generated/pydicom.uid.MPEG2MPML", "reference/generated/pydicom.uid.MPEG4HP41", "reference/generated/pydicom.uid.MPEG4HP41BD", "reference/generated/pydicom.uid.MPEG4HP422D", "reference/generated/pydicom.uid.MPEG4HP423D", "reference/generated/pydicom.uid.MPEG4HP42STEREO", "reference/generated/pydicom.uid.MPEGTransferSyntaxes", "reference/generated/pydicom.uid.MRImageStorage", "reference/generated/pydicom.uid.MRSpectroscopyStorage", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "reference/generated/pydicom.uid.MammographyCADSRStorage", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.NuclearMedicineImageStorage", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID", "reference/generated/pydicom.uid.ParametricMapStorage", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage", "reference/generated/pydicom.uid.ProcedureLogStorage", "reference/generated/pydicom.uid.ProtocolApprovalStorage", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.RE_VALID_UID", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX", "reference/generated/pydicom.uid.RLELossless", "reference/generated/pydicom.uid.RLETransferSyntaxes", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage", "reference/generated/pydicom.uid.RTDoseStorage", "reference/generated/pydicom.uid.RTImageStorage", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage", "reference/generated/pydicom.uid.RTIonPlanStorage", "reference/generated/pydicom.uid.RTPhysicianIntentStorage", "reference/generated/pydicom.uid.RTPlanStorage", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "reference/generated/pydicom.uid.RTRadiationSetStorage", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage", "reference/generated/pydicom.uid.RTStructureSetStorage", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "reference/generated/pydicom.uid.RawDataStorage", "reference/generated/pydicom.uid.RealWorldValueMappingStorage", "reference/generated/pydicom.uid.RespiratoryWaveformStorage", "reference/generated/pydicom.uid.RoboticArmRadiationStorage", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage", "reference/generated/pydicom.uid.SegmentationStorage", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage", "reference/generated/pydicom.uid.SpatialFiducialsStorage", "reference/generated/pydicom.uid.SpatialRegistrationStorage", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage", "reference/generated/pydicom.uid.StereometricRelationshipStorage", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage", "reference/generated/pydicom.uid.SurfaceScanMeshStorage", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage", "reference/generated/pydicom.uid.SurfaceSegmentationStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage", "reference/generated/pydicom.uid.TractographyResultsStorage", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage", "reference/generated/pydicom.uid.UID", "reference/generated/pydicom.uid.UltrasoundImageStorage", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes", "reference/generated/pydicom.uid.VLEndoscopicImageStorage", "reference/generated/pydicom.uid.VLMicroscopicImageStorage", "reference/generated/pydicom.uid.VLPhotographicImageStorage", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage", "reference/generated/pydicom.uid.VideoPhotographicImageStorage", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage", "reference/generated/pydicom.uid.XRayAngiographicImageStorage", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage", "reference/generated/pydicom.uid.generate_uid", "reference/generated/pydicom.valuerep.DA", "reference/generated/pydicom.valuerep.DS", "reference/generated/pydicom.valuerep.DSdecimal", "reference/generated/pydicom.valuerep.DSfloat", "reference/generated/pydicom.valuerep.DT", "reference/generated/pydicom.valuerep.IS", "reference/generated/pydicom.valuerep.MultiString", "reference/generated/pydicom.valuerep.PersonName", "reference/generated/pydicom.valuerep.PersonNameUnicode", "reference/generated/pydicom.valuerep.TM", "reference/generated/pydicom.valuerep.VR", "reference/generated/pydicom.valuerep.format_number_as_ds", "reference/generated/pydicom.valuerep.is_valid_ds", "reference/generated/pydicom.values.convert_AE_string", "reference/generated/pydicom.values.convert_ATvalue", "reference/generated/pydicom.values.convert_DA_string", "reference/generated/pydicom.values.convert_DS_string", "reference/generated/pydicom.values.convert_DT_string", "reference/generated/pydicom.values.convert_IS_string", "reference/generated/pydicom.values.convert_OBvalue", "reference/generated/pydicom.values.convert_OWvalue", "reference/generated/pydicom.values.convert_PN", "reference/generated/pydicom.values.convert_SQ", "reference/generated/pydicom.values.convert_TM_string", "reference/generated/pydicom.values.convert_UI", "reference/generated/pydicom.values.convert_UN", "reference/generated/pydicom.values.convert_UR_string", "reference/generated/pydicom.values.convert_numbers", "reference/generated/pydicom.values.convert_single_string", "reference/generated/pydicom.values.convert_string", "reference/generated/pydicom.values.convert_tag", "reference/generated/pydicom.values.convert_text", "reference/generated/pydicom.values.convert_value", "reference/generated/pydicom.waveforms.numpy_handler", "reference/handlers", "reference/handlers.overlay_data", "reference/handlers.pixel_data", "reference/handlers.waveform_data", "reference/index", "reference/misc", "reference/uid", "release_notes/index", "release_notes/v0.9.2", "release_notes/v0.9.3", "release_notes/v0.9.4", "release_notes/v0.9.5", "release_notes/v0.9.6", "release_notes/v0.9.7", "release_notes/v0.9.8", "release_notes/v0.9.9", "release_notes/v1.0.0", "release_notes/v1.1.0", "release_notes/v1.2.0", "release_notes/v1.3.0", "release_notes/v1.4.0", "release_notes/v1.4.1", "release_notes/v2.0.0", "release_notes/v2.1.0", "release_notes/v2.1.1", "release_notes/v2.2.0", "release_notes/v2.3.0", "release_notes/v2.4.0", "tutorials/contributing", "tutorials/contributing_code", "tutorials/contributing_docs", "tutorials/dataset_basics", "tutorials/dicom_json", "tutorials/filesets", "tutorials/index", "tutorials/installation", "tutorials/pixel_data/compressing", "tutorials/sr_basics", "tutorials/virtualenvs", "tutorials/waveforms"], "filenames": ["auto_examples/dicomtree.rst", "auto_examples/image_processing/plot_downsize_image.rst", "auto_examples/image_processing/plot_waveforms.rst", "auto_examples/image_processing/reslice.rst", "auto_examples/image_processing/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/input_output/plot_printing_dataset.rst", "auto_examples/input_output/plot_read_dicom.rst", "auto_examples/input_output/plot_read_dicom_directory.rst", "auto_examples/input_output/plot_read_fileset.rst", "auto_examples/input_output/plot_read_rtplan.rst", "auto_examples/input_output/plot_write_dicom.rst", "auto_examples/input_output/sg_execution_times.rst", "auto_examples/memory_dataset.rst", "auto_examples/metadata_processing/plot_add_dict_entries.rst", "auto_examples/metadata_processing/plot_anonymize.rst", "auto_examples/metadata_processing/plot_sequences.rst", "auto_examples/metadata_processing/sg_execution_times.rst", "auto_examples/plot_dicom_difference.rst", "auto_examples/sg_execution_times.rst", "auto_examples/show_charset_name.rst", "faq/index.rst", "guides/cli/cli_codify.rst", "guides/cli/cli_dev.rst", "guides/cli/cli_guide.rst", "guides/cli/cli_intro.rst", "guides/cli/cli_show.rst", "guides/element_value_types.rst", "guides/encoding/encoder_plugin_options.rst", "guides/encoding/encoder_plugins.rst", "guides/encoding/index.rst", "guides/encoding/rle_lossless.rst", "guides/glossary.rst", "guides/index.rst", "guides/writing_documentation.rst", "index.rst", "old/base_element.rst", "old/best_practices.rst", "old/getting_started.rst", "old/image_data_compression.rst", "old/image_data_handlers.rst", "old/private_data_elements.rst", "old/pydicom_user_guide.rst", "old/python2_support.rst", "old/ref_guide.rst", "old/transition_to_pydicom1.rst", "old/viewing_images.rst", "old/working_with_overlays.rst", "old/working_with_pixel_data.rst", "old/working_with_waveforms.rst", "old/writing_files.rst", "reference/charset.rst", "reference/config.rst", "reference/data.rst", "reference/datadict.rst", "reference/dataset.rst", "reference/dicomdir.rst", "reference/elem.rst", "reference/elem.dataelem.rst", "reference/elem.multival.rst", "reference/elem.sequence.rst", "reference/elem.tag.rst", "reference/elem.valuerep.rst", "reference/elem.values.rst", "reference/encaps.rst", "reference/encoders.rst", "reference/errors.rst", "reference/fileio.rst", "reference/fileio.base.rst", "reference/fileio.read.rst", "reference/fileio.util.rst", "reference/fileio.write.rst", "reference/fileset.rst", "reference/generated/pydicom.charset.convert_encodings.rst", "reference/generated/pydicom.charset.decode_bytes.rst", "reference/generated/pydicom.charset.decode_element.rst", "reference/generated/pydicom.charset.encode_string.rst", "reference/generated/pydicom.config.APPLY_J2K_CORRECTIONS.rst", "reference/generated/pydicom.config.DS_decimal.rst", "reference/generated/pydicom.config.DS_numpy.rst", "reference/generated/pydicom.config.IGNORE.rst", "reference/generated/pydicom.config.INVALID_KEYWORD_BEHAVIOR.rst", "reference/generated/pydicom.config.INVALID_KEY_BEHAVIOR.rst", "reference/generated/pydicom.config.RAISE.rst", "reference/generated/pydicom.config.WARN.rst", "reference/generated/pydicom.config.allow_DS_float.rst", "reference/generated/pydicom.config.assume_implicit_vr_switch.rst", "reference/generated/pydicom.config.convert_wrong_length_to_UN.rst", "reference/generated/pydicom.config.data_element_callback.rst", "reference/generated/pydicom.config.data_element_callback_kwargs.rst", "reference/generated/pydicom.config.datetime_conversion.rst", "reference/generated/pydicom.config.debug.rst", "reference/generated/pydicom.config.enforce_valid_values.rst", "reference/generated/pydicom.config.future_behavior.rst", "reference/generated/pydicom.config.overlay_data_handlers.rst", "reference/generated/pydicom.config.pixel_data_handlers.rst", "reference/generated/pydicom.config.reset_data_element_callback.rst", "reference/generated/pydicom.config.settings.rst", "reference/generated/pydicom.config.show_file_meta.rst", "reference/generated/pydicom.config.use_DS_decimal.rst", "reference/generated/pydicom.config.use_DS_numpy.rst", "reference/generated/pydicom.config.use_IS_numpy.rst", "reference/generated/pydicom.data.get_charset_files.rst", "reference/generated/pydicom.data.get_palette_files.rst", "reference/generated/pydicom.data.get_testdata_file.rst", "reference/generated/pydicom.data.get_testdata_files.rst", "reference/generated/pydicom.datadict.add_dict_entries.rst", "reference/generated/pydicom.datadict.add_dict_entry.rst", "reference/generated/pydicom.datadict.add_private_dict_entries.rst", "reference/generated/pydicom.datadict.add_private_dict_entry.rst", "reference/generated/pydicom.datadict.dictionary_VM.rst", "reference/generated/pydicom.datadict.dictionary_VR.rst", "reference/generated/pydicom.datadict.dictionary_description.rst", "reference/generated/pydicom.datadict.dictionary_has_tag.rst", "reference/generated/pydicom.datadict.dictionary_is_retired.rst", "reference/generated/pydicom.datadict.dictionary_keyword.rst", "reference/generated/pydicom.datadict.get_entry.rst", "reference/generated/pydicom.datadict.get_private_entry.rst", "reference/generated/pydicom.datadict.keyword_for_tag.rst", "reference/generated/pydicom.datadict.mask_match.rst", "reference/generated/pydicom.datadict.private_dictionary_VM.rst", "reference/generated/pydicom.datadict.private_dictionary_VR.rst", "reference/generated/pydicom.datadict.private_dictionary_description.rst", "reference/generated/pydicom.datadict.repeater_has_keyword.rst", "reference/generated/pydicom.datadict.repeater_has_tag.rst", "reference/generated/pydicom.datadict.tag_for_keyword.rst", "reference/generated/pydicom.dataelem.DataElement.rst", "reference/generated/pydicom.dataelem.DataElement_from_raw.rst", "reference/generated/pydicom.dataelem.RawDataElement.rst", "reference/generated/pydicom.dataset.Dataset.rst", "reference/generated/pydicom.dataset.FileDataset.rst", "reference/generated/pydicom.dataset.FileMetaDataset.rst", "reference/generated/pydicom.dataset.PrivateBlock.rst", "reference/generated/pydicom.dataset.validate_file_meta.rst", "reference/generated/pydicom.dicomdir.DicomDir.rst", "reference/generated/pydicom.encaps.decode_data_sequence.rst", "reference/generated/pydicom.encaps.defragment_data.rst", "reference/generated/pydicom.encaps.encapsulate.rst", "reference/generated/pydicom.encaps.encapsulate_extended.rst", "reference/generated/pydicom.encaps.fragment_frame.rst", "reference/generated/pydicom.encaps.generate_pixel_data.rst", "reference/generated/pydicom.encaps.generate_pixel_data_fragment.rst", "reference/generated/pydicom.encaps.generate_pixel_data_frame.rst", "reference/generated/pydicom.encaps.get_frame_offsets.rst", "reference/generated/pydicom.encaps.itemize_fragment.rst", "reference/generated/pydicom.encaps.itemize_frame.rst", "reference/generated/pydicom.encaps.read_item.rst", "reference/generated/pydicom.encoders.RLELosslessEncoder.rst", "reference/generated/pydicom.encoders.base.Encoder.rst", "reference/generated/pydicom.encoders.get_encoder.rst", "reference/generated/pydicom.errors.InvalidDicomError.rst", "reference/generated/pydicom.filebase.DicomBytesIO.rst", "reference/generated/pydicom.filebase.DicomFile.rst", "reference/generated/pydicom.filebase.DicomFileLike.rst", "reference/generated/pydicom.filebase.DicomIO.rst", "reference/generated/pydicom.filereader.data_element_generator.rst", "reference/generated/pydicom.filereader.data_element_offset_to_value.rst", "reference/generated/pydicom.filereader.dcmread.rst", "reference/generated/pydicom.filereader.read_dataset.rst", "reference/generated/pydicom.filereader.read_deferred_data_element.rst", "reference/generated/pydicom.filereader.read_dicomdir.rst", "reference/generated/pydicom.filereader.read_file_meta_info.rst", "reference/generated/pydicom.filereader.read_partial.rst", "reference/generated/pydicom.filereader.read_preamble.rst", "reference/generated/pydicom.filereader.read_sequence.rst", "reference/generated/pydicom.filereader.read_sequence_item.rst", "reference/generated/pydicom.fileset.DIRECTORY_RECORDERS.rst", "reference/generated/pydicom.fileset.FileInstance.rst", "reference/generated/pydicom.fileset.FileSet.rst", "reference/generated/pydicom.fileset.RecordNode.rst", "reference/generated/pydicom.fileset.generate_filename.rst", "reference/generated/pydicom.fileset.is_conformant_file_id.rst", "reference/generated/pydicom.fileutil.absorb_delimiter_item.rst", "reference/generated/pydicom.fileutil.find_bytes.rst", "reference/generated/pydicom.fileutil.find_delimiter.rst", "reference/generated/pydicom.fileutil.length_of_undefined_length.rst", "reference/generated/pydicom.fileutil.read_undefined_length_value.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr.rst", "reference/generated/pydicom.filewriter.correct_ambiguous_vr_element.rst", "reference/generated/pydicom.filewriter.dcmwrite.rst", "reference/generated/pydicom.filewriter.multi_string.rst", "reference/generated/pydicom.filewriter.write_ATvalue.rst", "reference/generated/pydicom.filewriter.write_DA.rst", "reference/generated/pydicom.filewriter.write_DT.rst", "reference/generated/pydicom.filewriter.write_OBvalue.rst", "reference/generated/pydicom.filewriter.write_OWvalue.rst", "reference/generated/pydicom.filewriter.write_PN.rst", "reference/generated/pydicom.filewriter.write_TM.rst", "reference/generated/pydicom.filewriter.write_UI.rst", "reference/generated/pydicom.filewriter.write_UN.rst", "reference/generated/pydicom.filewriter.write_data_element.rst", "reference/generated/pydicom.filewriter.write_dataset.rst", "reference/generated/pydicom.filewriter.write_file_meta_info.rst", "reference/generated/pydicom.filewriter.write_number_string.rst", "reference/generated/pydicom.filewriter.write_numbers.rst", "reference/generated/pydicom.filewriter.write_sequence.rst", "reference/generated/pydicom.filewriter.write_sequence_item.rst", "reference/generated/pydicom.filewriter.write_string.rst", "reference/generated/pydicom.filewriter.write_text.rst", "reference/generated/pydicom.misc.is_dicom.rst", "reference/generated/pydicom.misc.size_in_bytes.rst", "reference/generated/pydicom.multival.MultiValue.rst", "reference/generated/pydicom.overlays.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.apply_color_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_modality_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_rescale.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi.rst", "reference/generated/pydicom.pixel_data_handlers.apply_voi_lut.rst", "reference/generated/pydicom.pixel_data_handlers.apply_windowing.rst", "reference/generated/pydicom.pixel_data_handlers.convert_color_space.rst", "reference/generated/pydicom.pixel_data_handlers.gdcm_handler.rst", "reference/generated/pydicom.pixel_data_handlers.jpeg_ls_handler.rst", "reference/generated/pydicom.pixel_data_handlers.numpy_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pillow_handler.rst", "reference/generated/pydicom.pixel_data_handlers.pylibjpeg_handler.rst", "reference/generated/pydicom.pixel_data_handlers.rle_handler.rst", "reference/generated/pydicom.pixel_data_handlers.util.rst", "reference/generated/pydicom.sequence.Sequence.rst", "reference/generated/pydicom.sequence.validate_dataset.rst", "reference/generated/pydicom.tag.BaseTag.rst", "reference/generated/pydicom.tag.Tag.rst", "reference/generated/pydicom.tag.TupleTag.rst", "reference/generated/pydicom.tag.tag_in_exception.rst", "reference/generated/pydicom.uid.AcquisitionContextSRStorage.rst", "reference/generated/pydicom.uid.AdvancedBlendingPresentationStateStorage.rst", "reference/generated/pydicom.uid.AllTransferSyntaxes.rst", "reference/generated/pydicom.uid.AmbulatoryECGWaveformStorage.rst", "reference/generated/pydicom.uid.ArterialPulseWaveformStorage.rst", "reference/generated/pydicom.uid.AutorefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.BasicStructuredDisplayStorage.rst", "reference/generated/pydicom.uid.BasicTextSRStorage.rst", "reference/generated/pydicom.uid.BasicVoiceAudioWaveformStorage.rst", "reference/generated/pydicom.uid.BlendingSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.BodyPositionWaveformStorage.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.BreastProjectionXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.BreastTomosynthesisImageStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationRecordStorage.rst", "reference/generated/pydicom.uid.CArmPhotonElectronRadiationStorage.rst", "reference/generated/pydicom.uid.CTDefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CTImageStorage.rst", "reference/generated/pydicom.uid.CTPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.CardiacElectrophysiologyWaveformStorage.rst", "reference/generated/pydicom.uid.ChestCADSRStorage.rst", "reference/generated/pydicom.uid.ColonCADSRStorage.rst", "reference/generated/pydicom.uid.ColorPaletteStorage.rst", "reference/generated/pydicom.uid.ColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.Comprehensive3DSRStorage.rst", "reference/generated/pydicom.uid.ComprehensiveSRStorage.rst", "reference/generated/pydicom.uid.ComputedRadiographyImageStorage.rst", "reference/generated/pydicom.uid.ContentAssessmentResultsStorage.rst", "reference/generated/pydicom.uid.CornealTopographyMapStorage.rst", "reference/generated/pydicom.uid.DICOS2DAITStorage.rst", "reference/generated/pydicom.uid.DICOS3DAITStorage.rst", "reference/generated/pydicom.uid.DICOSCTImageStorage.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DICOSDigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DICOSQuadrupoleResonanceStorage.rst", "reference/generated/pydicom.uid.DICOSThreatDetectionReportStorage.rst", "reference/generated/pydicom.uid.DeflatedExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.DeformableSpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.DermoscopicPhotographyImageStorage.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalMammographyXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForPresentation.rst", "reference/generated/pydicom.uid.DigitalXRayImageStorageForProcessing.rst", "reference/generated/pydicom.uid.EddyCurrentImageStorage.rst", "reference/generated/pydicom.uid.EddyCurrentMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.ElectromyogramWaveformStorage.rst", "reference/generated/pydicom.uid.ElectrooculogramWaveformStorage.rst", "reference/generated/pydicom.uid.EncapsulatedCDAStorage.rst", "reference/generated/pydicom.uid.EncapsulatedMTLStorage.rst", "reference/generated/pydicom.uid.EncapsulatedOBJStorage.rst", "reference/generated/pydicom.uid.EncapsulatedPDFStorage.rst", "reference/generated/pydicom.uid.EncapsulatedSTLStorage.rst", "reference/generated/pydicom.uid.EnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRColorImageStorage.rst", "reference/generated/pydicom.uid.EnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.EnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.EnhancedSRStorage.rst", "reference/generated/pydicom.uid.EnhancedUSVolumeStorage.rst", "reference/generated/pydicom.uid.EnhancedXAImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRFImageStorage.rst", "reference/generated/pydicom.uid.EnhancedXRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.ExplicitVRBigEndian.rst", "reference/generated/pydicom.uid.ExplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.ExtensibleSRStorage.rst", "reference/generated/pydicom.uid.GeneralAudioWaveformStorage.rst", "reference/generated/pydicom.uid.GeneralECGWaveformStorage.rst", "reference/generated/pydicom.uid.GenericImplantTemplateStorage.rst", "reference/generated/pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.GrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.HEVCM10P51.rst", "reference/generated/pydicom.uid.HEVCMP51.rst", "reference/generated/pydicom.uid.HangingProtocolStorage.rst", "reference/generated/pydicom.uid.HemodynamicWaveformStorage.rst", "reference/generated/pydicom.uid.ImplantAssemblyTemplateStorage.rst", "reference/generated/pydicom.uid.ImplantTemplateGroupStorage.rst", "reference/generated/pydicom.uid.ImplantationPlanSRStorage.rst", "reference/generated/pydicom.uid.ImplicitVRLittleEndian.rst", "reference/generated/pydicom.uid.IntraocularLensCalculationsStorage.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation.rst", "reference/generated/pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing.rst", "reference/generated/pydicom.uid.JPEG2000.rst", "reference/generated/pydicom.uid.JPEG2000Lossless.rst", "reference/generated/pydicom.uid.JPEG2000MC.rst", "reference/generated/pydicom.uid.JPEG2000MCLossless.rst", "reference/generated/pydicom.uid.JPEG2000TransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGBaseline8Bit.rst", "reference/generated/pydicom.uid.JPEGExtended12Bit.rst", "reference/generated/pydicom.uid.JPEGLSLossless.rst", "reference/generated/pydicom.uid.JPEGLSNearLossless.rst", "reference/generated/pydicom.uid.JPEGLSTransferSyntaxes.rst", "reference/generated/pydicom.uid.JPEGLosslessP14.rst", "reference/generated/pydicom.uid.JPEGLosslessSV1.rst", "reference/generated/pydicom.uid.JPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.KeratometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.KeyObjectSelectionDocumentStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedCTImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedMRImageStorage.rst", "reference/generated/pydicom.uid.LegacyConvertedEnhancedPETImageStorage.rst", "reference/generated/pydicom.uid.LensometryMeasurementsStorage.rst", "reference/generated/pydicom.uid.MPEG2MPHL.rst", "reference/generated/pydicom.uid.MPEG2MPML.rst", "reference/generated/pydicom.uid.MPEG4HP41.rst", "reference/generated/pydicom.uid.MPEG4HP41BD.rst", "reference/generated/pydicom.uid.MPEG4HP422D.rst", "reference/generated/pydicom.uid.MPEG4HP423D.rst", "reference/generated/pydicom.uid.MPEG4HP42STEREO.rst", "reference/generated/pydicom.uid.MPEGTransferSyntaxes.rst", "reference/generated/pydicom.uid.MRImageStorage.rst", "reference/generated/pydicom.uid.MRSpectroscopyStorage.rst", "reference/generated/pydicom.uid.MacularGridThicknessAndVolumeReportStorage.rst", "reference/generated/pydicom.uid.MammographyCADSRStorage.rst", "reference/generated/pydicom.uid.MediaStorageDirectoryStorage.rst", "reference/generated/pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.MultichannelRespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.NuclearMedicineImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicAxialMeasurementsStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage.rst", "reference/generated/pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography16BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicPhotography8BitImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicThicknessMapStorage.rst", "reference/generated/pydicom.uid.OphthalmicTomographyImageStorage.rst", "reference/generated/pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage.rst", "reference/generated/pydicom.uid.PYDICOM_IMPLEMENTATION_UID.rst", "reference/generated/pydicom.uid.PYDICOM_ROOT_UID.rst", "reference/generated/pydicom.uid.ParametricMapStorage.rst", "reference/generated/pydicom.uid.PatientRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.PerformedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PlannedImagingAgentAdministrationSRStorage.rst", "reference/generated/pydicom.uid.PositronEmissionTomographyImageStorage.rst", "reference/generated/pydicom.uid.ProcedureLogStorage.rst", "reference/generated/pydicom.uid.ProtocolApprovalStorage.rst", "reference/generated/pydicom.uid.PseudoColorSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.RE_VALID_UID.rst", "reference/generated/pydicom.uid.RE_VALID_UID_PREFIX.rst", "reference/generated/pydicom.uid.RLELossless.rst", "reference/generated/pydicom.uid.RLETransferSyntaxes.rst", "reference/generated/pydicom.uid.RTBeamsDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTBrachyTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTDoseStorage.rst", "reference/generated/pydicom.uid.RTImageStorage.rst", "reference/generated/pydicom.uid.RTIonBeamsTreatmentRecordStorage.rst", "reference/generated/pydicom.uid.RTIonPlanStorage.rst", "reference/generated/pydicom.uid.RTPhysicianIntentStorage.rst", "reference/generated/pydicom.uid.RTPlanStorage.rst", "reference/generated/pydicom.uid.RTRadiationRecordSetStorage.rst", "reference/generated/pydicom.uid.RTRadiationSalvageRecordStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetDeliveryInstructionStorage.rst", "reference/generated/pydicom.uid.RTRadiationSetStorage.rst", "reference/generated/pydicom.uid.RTSegmentAnnotationStorage.rst", "reference/generated/pydicom.uid.RTStructureSetStorage.rst", "reference/generated/pydicom.uid.RTTreatmentPreparationStorage.rst", "reference/generated/pydicom.uid.RTTreatmentSummaryRecordStorage.rst", "reference/generated/pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.RawDataStorage.rst", "reference/generated/pydicom.uid.RealWorldValueMappingStorage.rst", "reference/generated/pydicom.uid.RespiratoryWaveformStorage.rst", "reference/generated/pydicom.uid.RoboticArmRadiationStorage.rst", "reference/generated/pydicom.uid.RoboticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SecondaryCaptureImageStorage.rst", "reference/generated/pydicom.uid.SegmentationStorage.rst", "reference/generated/pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.SimplifiedAdultEchoSRStorage.rst", "reference/generated/pydicom.uid.SleepElectroencephalogramWaveformStorage.rst", "reference/generated/pydicom.uid.SpatialFiducialsStorage.rst", "reference/generated/pydicom.uid.SpatialRegistrationStorage.rst", "reference/generated/pydicom.uid.SpectaclePrescriptionReportStorage.rst", "reference/generated/pydicom.uid.StereometricRelationshipStorage.rst", "reference/generated/pydicom.uid.SubjectiveRefractionMeasurementsStorage.rst", "reference/generated/pydicom.uid.SurfaceScanMeshStorage.rst", "reference/generated/pydicom.uid.SurfaceScanPointCloudStorage.rst", "reference/generated/pydicom.uid.SurfaceSegmentationStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationRecordStorage.rst", "reference/generated/pydicom.uid.TomotherapeuticRadiationStorage.rst", "reference/generated/pydicom.uid.TractographyResultsStorage.rst", "reference/generated/pydicom.uid.TwelveLeadECGWaveformStorage.rst", "reference/generated/pydicom.uid.UID.rst", "reference/generated/pydicom.uid.UltrasoundImageStorage.rst", "reference/generated/pydicom.uid.UltrasoundMultiFrameImageStorage.rst", "reference/generated/pydicom.uid.UncompressedTransferSyntaxes.rst", "reference/generated/pydicom.uid.VLEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VLMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VLWholeSlideMicroscopyImageStorage.rst", "reference/generated/pydicom.uid.VideoEndoscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoMicroscopicImageStorage.rst", "reference/generated/pydicom.uid.VideoPhotographicImageStorage.rst", "reference/generated/pydicom.uid.VisualAcuityMeasurementsStorage.rst", "reference/generated/pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage.rst", "reference/generated/pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage.rst", "reference/generated/pydicom.uid.XADefinedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAPerformedProcedureProtocolStorage.rst", "reference/generated/pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage.rst", "reference/generated/pydicom.uid.XRay3DAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRay3DCraniofacialImageStorage.rst", "reference/generated/pydicom.uid.XRayAngiographicImageStorage.rst", "reference/generated/pydicom.uid.XRayRadiationDoseSRStorage.rst", "reference/generated/pydicom.uid.XRayRadiofluoroscopicImageStorage.rst", "reference/generated/pydicom.uid.generate_uid.rst", "reference/generated/pydicom.valuerep.DA.rst", "reference/generated/pydicom.valuerep.DS.rst", "reference/generated/pydicom.valuerep.DSdecimal.rst", "reference/generated/pydicom.valuerep.DSfloat.rst", "reference/generated/pydicom.valuerep.DT.rst", "reference/generated/pydicom.valuerep.IS.rst", "reference/generated/pydicom.valuerep.MultiString.rst", "reference/generated/pydicom.valuerep.PersonName.rst", "reference/generated/pydicom.valuerep.PersonNameUnicode.rst", "reference/generated/pydicom.valuerep.TM.rst", "reference/generated/pydicom.valuerep.VR.rst", "reference/generated/pydicom.valuerep.format_number_as_ds.rst", "reference/generated/pydicom.valuerep.is_valid_ds.rst", "reference/generated/pydicom.values.convert_AE_string.rst", "reference/generated/pydicom.values.convert_ATvalue.rst", "reference/generated/pydicom.values.convert_DA_string.rst", "reference/generated/pydicom.values.convert_DS_string.rst", "reference/generated/pydicom.values.convert_DT_string.rst", "reference/generated/pydicom.values.convert_IS_string.rst", "reference/generated/pydicom.values.convert_OBvalue.rst", "reference/generated/pydicom.values.convert_OWvalue.rst", "reference/generated/pydicom.values.convert_PN.rst", "reference/generated/pydicom.values.convert_SQ.rst", "reference/generated/pydicom.values.convert_TM_string.rst", "reference/generated/pydicom.values.convert_UI.rst", "reference/generated/pydicom.values.convert_UN.rst", "reference/generated/pydicom.values.convert_UR_string.rst", "reference/generated/pydicom.values.convert_numbers.rst", "reference/generated/pydicom.values.convert_single_string.rst", "reference/generated/pydicom.values.convert_string.rst", "reference/generated/pydicom.values.convert_tag.rst", "reference/generated/pydicom.values.convert_text.rst", "reference/generated/pydicom.values.convert_value.rst", "reference/generated/pydicom.waveforms.numpy_handler.rst", "reference/handlers.rst", "reference/handlers.overlay_data.rst", "reference/handlers.pixel_data.rst", "reference/handlers.waveform_data.rst", "reference/index.rst", "reference/misc.rst", "reference/uid.rst", "release_notes/index.rst", "release_notes/v0.9.2.rst", "release_notes/v0.9.3.rst", "release_notes/v0.9.4.rst", "release_notes/v0.9.5.rst", "release_notes/v0.9.6.rst", "release_notes/v0.9.7.rst", "release_notes/v0.9.8.rst", "release_notes/v0.9.9.rst", "release_notes/v1.0.0.rst", "release_notes/v1.1.0.rst", "release_notes/v1.2.0.rst", "release_notes/v1.3.0.rst", "release_notes/v1.4.0.rst", "release_notes/v1.4.1.rst", "release_notes/v2.0.0.rst", "release_notes/v2.1.0.rst", "release_notes/v2.1.1.rst", "release_notes/v2.2.0.rst", "release_notes/v2.3.0.rst", "release_notes/v2.4.0.rst", "tutorials/contributing.rst", "tutorials/contributing_code.rst", "tutorials/contributing_docs.rst", "tutorials/dataset_basics.rst", "tutorials/dicom_json.rst", "tutorials/filesets.rst", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/pixel_data/compressing.rst", "tutorials/sr_basics.rst", "tutorials/virtualenvs.rst", "tutorials/waveforms.rst"], "titles": ["Show a dicom file using hierarchical tree", "Downsize MRI image using pydicom", "Decode and plot Waveform Data", "Load CT slices and plot axial, sagittal and coronal images", "Computation times", "General examples", "Format the output of the data set printing", "Read a Dataset and plot Pixel Data", "Read a DICOMDIR dataset", "Read a DICOM File-set", "Read RTPLAN DICOM and list information", "Write DICOM data", "Computation times", "Show working with memory-based dataset", "Add dictionary items in the standard DICOM dictionary", "Anonymize DICOM data", "Working with sequences", "Computation times", "Analyse differences between DICOM files", "Computation times", "Display unicode person names", "Frequently asked questions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">codify</span></code> command", "Extending the CLI", "Command-line Interface Guide", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pydicom</span> <span class=\"pre\">show</span></code> command", "Element VRs and Python types", "Encoder Plugins Options", "Pixel Data Encoder Plugins", "Pixel Data Encoding", "RLE Lossless Encoding", "Glossary", "Guides", "Writing documentation", "pydicom documentation", "Core elements in pydicom", "Best Practices", "Introduction to pydicom", "Compressing <em>Pixel Data</em>", "Handling of compressed pixel data", "Private Data Elements", "pydicom User Guide", "Python 2 Support", "Reading and writing DICOM files", "Transition to pydicom 1.x", "Viewing Images", "Working with Overlay Data", "Working with Pixel Data", "Working with Waveform Data", "Writing DICOM Files", "Character Encoding and Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.charset</span></code>)", "Configuration Options (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.config</span></code>)", "Getting Included Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.data</span></code>)", "Data Dictionary Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.datadict</span></code>)", "Representation of Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataset</span></code>)", "DICOMDIR (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dicomdir</span></code>)", "Representation of Data Elements", "Data Elements (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.dataelem</span></code>)", "Element Multi-value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.multival</span></code>)", "Sequence Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.sequence</span></code>)", "Element Tags (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.tag</span></code>)", "Specialized Element Value Representation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.valuerep</span></code>)", "Element Value Decoding (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.values</span></code>)", "Bulk Data Encapsulation Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encaps</span></code>)", "Pixel Data Encoders (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.encoders</span></code>)", "Exceptions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.errors</span></code>)", "Dataset IO", "IO Base Classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filebase</span></code>)", "Dataset Reading (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filereader</span></code>)", "IO Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileutil</span></code>)", "Dataset Writing (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.filewriter</span></code>)", "DICOM File-sets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.fileset</span></code>)", "pydicom.charset.convert_encodings", "pydicom.charset.decode_bytes", "pydicom.charset.decode_element", "pydicom.charset.encode_string", "pydicom.config.APPLY_J2K_CORRECTIONS", "pydicom.config.DS_decimal", "pydicom.config.DS_numpy", "pydicom.config.IGNORE", "pydicom.config.INVALID_KEYWORD_BEHAVIOR", "pydicom.config.INVALID_KEY_BEHAVIOR", "pydicom.config.RAISE", "pydicom.config.WARN", "pydicom.config.allow_DS_float", "pydicom.config.assume_implicit_vr_switch", "pydicom.config.convert_wrong_length_to_UN", "pydicom.config.data_element_callback", "pydicom.config.data_element_callback_kwargs", "pydicom.config.datetime_conversion", "pydicom.config.debug", "pydicom.config.enforce_valid_values", "pydicom.config.future_behavior", "pydicom.config.overlay_data_handlers", "pydicom.config.pixel_data_handlers", "pydicom.config.reset_data_element_callback", "pydicom.config.settings", "pydicom.config.show_file_meta", "pydicom.config.use_DS_decimal", "pydicom.config.use_DS_numpy", "pydicom.config.use_IS_numpy", "pydicom.data.get_charset_files", "pydicom.data.get_palette_files", "pydicom.data.get_testdata_file", "pydicom.data.get_testdata_files", "pydicom.datadict.add_dict_entries", "pydicom.datadict.add_dict_entry", "pydicom.datadict.add_private_dict_entries", "pydicom.datadict.add_private_dict_entry", "pydicom.datadict.dictionary_VM", "pydicom.datadict.dictionary_VR", "pydicom.datadict.dictionary_description", "pydicom.datadict.dictionary_has_tag", "pydicom.datadict.dictionary_is_retired", "pydicom.datadict.dictionary_keyword", "pydicom.datadict.get_entry", "pydicom.datadict.get_private_entry", "pydicom.datadict.keyword_for_tag", "pydicom.datadict.mask_match", "pydicom.datadict.private_dictionary_VM", "pydicom.datadict.private_dictionary_VR", "pydicom.datadict.private_dictionary_description", "pydicom.datadict.repeater_has_keyword", "pydicom.datadict.repeater_has_tag", "pydicom.datadict.tag_for_keyword", "pydicom.dataelem.DataElement", "pydicom.dataelem.DataElement_from_raw", "pydicom.dataelem.RawDataElement", "pydicom.dataset.Dataset", "pydicom.dataset.FileDataset", "pydicom.dataset.FileMetaDataset", "pydicom.dataset.PrivateBlock", "pydicom.dataset.validate_file_meta", "pydicom.dicomdir.DicomDir", "pydicom.encaps.decode_data_sequence", "pydicom.encaps.defragment_data", "pydicom.encaps.encapsulate", "pydicom.encaps.encapsulate_extended", "pydicom.encaps.fragment_frame", "pydicom.encaps.generate_pixel_data", "pydicom.encaps.generate_pixel_data_fragment", "pydicom.encaps.generate_pixel_data_frame", "pydicom.encaps.get_frame_offsets", "pydicom.encaps.itemize_fragment", "pydicom.encaps.itemize_frame", "pydicom.encaps.read_item", "pydicom.encoders.RLELosslessEncoder", "pydicom.encoders.base.Encoder", "pydicom.encoders.get_encoder", "pydicom.errors.InvalidDicomError", "pydicom.filebase.DicomBytesIO", "pydicom.filebase.DicomFile", "pydicom.filebase.DicomFileLike", "pydicom.filebase.DicomIO", "pydicom.filereader.data_element_generator", "pydicom.filereader.data_element_offset_to_value", "pydicom.filereader.dcmread", "pydicom.filereader.read_dataset", "pydicom.filereader.read_deferred_data_element", "pydicom.filereader.read_dicomdir", "pydicom.filereader.read_file_meta_info", "pydicom.filereader.read_partial", "pydicom.filereader.read_preamble", "pydicom.filereader.read_sequence", "pydicom.filereader.read_sequence_item", "pydicom.fileset.DIRECTORY_RECORDERS", "pydicom.fileset.FileInstance", "pydicom.fileset.FileSet", "pydicom.fileset.RecordNode", "pydicom.fileset.generate_filename", "pydicom.fileset.is_conformant_file_id", "pydicom.fileutil.absorb_delimiter_item", "pydicom.fileutil.find_bytes", "pydicom.fileutil.find_delimiter", "pydicom.fileutil.length_of_undefined_length", "pydicom.fileutil.read_undefined_length_value", "pydicom.filewriter.correct_ambiguous_vr", "pydicom.filewriter.correct_ambiguous_vr_element", "pydicom.filewriter.dcmwrite", "pydicom.filewriter.multi_string", "pydicom.filewriter.write_ATvalue", "pydicom.filewriter.write_DA", "pydicom.filewriter.write_DT", "pydicom.filewriter.write_OBvalue", "pydicom.filewriter.write_OWvalue", "pydicom.filewriter.write_PN", "pydicom.filewriter.write_TM", "pydicom.filewriter.write_UI", "pydicom.filewriter.write_UN", "pydicom.filewriter.write_data_element", "pydicom.filewriter.write_dataset", "pydicom.filewriter.write_file_meta_info", "pydicom.filewriter.write_number_string", "pydicom.filewriter.write_numbers", "pydicom.filewriter.write_sequence", "pydicom.filewriter.write_sequence_item", "pydicom.filewriter.write_string", "pydicom.filewriter.write_text", "pydicom.misc.is_dicom", "pydicom.misc.size_in_bytes", "pydicom.multival.MultiValue", "pydicom.overlays.numpy_handler", "pydicom.pixel_data_handlers.apply_color_lut", "pydicom.pixel_data_handlers.apply_modality_lut", "pydicom.pixel_data_handlers.apply_rescale", "pydicom.pixel_data_handlers.apply_voi", "pydicom.pixel_data_handlers.apply_voi_lut", "pydicom.pixel_data_handlers.apply_windowing", "pydicom.pixel_data_handlers.convert_color_space", "pydicom.pixel_data_handlers.gdcm_handler", "pydicom.pixel_data_handlers.jpeg_ls_handler", "pydicom.pixel_data_handlers.numpy_handler", "pydicom.pixel_data_handlers.pillow_handler", "pydicom.pixel_data_handlers.pylibjpeg_handler", "pydicom.pixel_data_handlers.rle_handler", "pydicom.pixel_data_handlers.util", "pydicom.sequence.Sequence", "pydicom.sequence.validate_dataset", "pydicom.tag.BaseTag", "pydicom.tag.Tag", "pydicom.tag.TupleTag", "pydicom.tag.tag_in_exception", "pydicom.uid.AcquisitionContextSRStorage", "pydicom.uid.AdvancedBlendingPresentationStateStorage", "pydicom.uid.AllTransferSyntaxes", "pydicom.uid.AmbulatoryECGWaveformStorage", "pydicom.uid.ArterialPulseWaveformStorage", "pydicom.uid.AutorefractionMeasurementsStorage", "pydicom.uid.BasicStructuredDisplayStorage", "pydicom.uid.BasicTextSRStorage", "pydicom.uid.BasicVoiceAudioWaveformStorage", "pydicom.uid.BlendingSoftcopyPresentationStateStorage", "pydicom.uid.BodyPositionWaveformStorage", "pydicom.uid.BreastProjectionXRayImageStorageForPresentation", "pydicom.uid.BreastProjectionXRayImageStorageForProcessing", "pydicom.uid.BreastTomosynthesisImageStorage", "pydicom.uid.CArmPhotonElectronRadiationRecordStorage", "pydicom.uid.CArmPhotonElectronRadiationStorage", "pydicom.uid.CTDefinedProcedureProtocolStorage", "pydicom.uid.CTImageStorage", "pydicom.uid.CTPerformedProcedureProtocolStorage", "pydicom.uid.CardiacElectrophysiologyWaveformStorage", "pydicom.uid.ChestCADSRStorage", "pydicom.uid.ColonCADSRStorage", "pydicom.uid.ColorPaletteStorage", "pydicom.uid.ColorSoftcopyPresentationStateStorage", "pydicom.uid.CompositingPlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.Comprehensive3DSRStorage", "pydicom.uid.ComprehensiveSRStorage", "pydicom.uid.ComputedRadiographyImageStorage", "pydicom.uid.ContentAssessmentResultsStorage", "pydicom.uid.CornealTopographyMapStorage", "pydicom.uid.DICOS2DAITStorage", "pydicom.uid.DICOS3DAITStorage", "pydicom.uid.DICOSCTImageStorage", "pydicom.uid.DICOSDigitalXRayImageStorageForPresentation", "pydicom.uid.DICOSDigitalXRayImageStorageForProcessing", "pydicom.uid.DICOSQuadrupoleResonanceStorage", "pydicom.uid.DICOSThreatDetectionReportStorage", "pydicom.uid.DeflatedExplicitVRLittleEndian", "pydicom.uid.DeformableSpatialRegistrationStorage", "pydicom.uid.DermoscopicPhotographyImageStorage", "pydicom.uid.DigitalIntraOralXRayImageStorageForPresentation", "pydicom.uid.DigitalIntraOralXRayImageStorageForProcessing", "pydicom.uid.DigitalMammographyXRayImageStorageForPresentation", "pydicom.uid.DigitalMammographyXRayImageStorageForProcessing", "pydicom.uid.DigitalXRayImageStorageForPresentation", "pydicom.uid.DigitalXRayImageStorageForProcessing", "pydicom.uid.EddyCurrentImageStorage", "pydicom.uid.EddyCurrentMultiFrameImageStorage", "pydicom.uid.ElectromyogramWaveformStorage", "pydicom.uid.ElectrooculogramWaveformStorage", "pydicom.uid.EncapsulatedCDAStorage", "pydicom.uid.EncapsulatedMTLStorage", "pydicom.uid.EncapsulatedOBJStorage", "pydicom.uid.EncapsulatedPDFStorage", "pydicom.uid.EncapsulatedSTLStorage", "pydicom.uid.EnhancedCTImageStorage", "pydicom.uid.EnhancedMRColorImageStorage", "pydicom.uid.EnhancedMRImageStorage", "pydicom.uid.EnhancedPETImageStorage", "pydicom.uid.EnhancedSRStorage", "pydicom.uid.EnhancedUSVolumeStorage", "pydicom.uid.EnhancedXAImageStorage", "pydicom.uid.EnhancedXRFImageStorage", "pydicom.uid.EnhancedXRayRadiationDoseSRStorage", "pydicom.uid.ExplicitVRBigEndian", "pydicom.uid.ExplicitVRLittleEndian", "pydicom.uid.ExtensibleSRStorage", "pydicom.uid.GeneralAudioWaveformStorage", "pydicom.uid.GeneralECGWaveformStorage", "pydicom.uid.GenericImplantTemplateStorage", "pydicom.uid.GrayscalePlanarMPRVolumetricPresentationStateStorage", "pydicom.uid.GrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.HEVCM10P51", "pydicom.uid.HEVCMP51", "pydicom.uid.HangingProtocolStorage", "pydicom.uid.HemodynamicWaveformStorage", "pydicom.uid.ImplantAssemblyTemplateStorage", "pydicom.uid.ImplantTemplateGroupStorage", "pydicom.uid.ImplantationPlanSRStorage", "pydicom.uid.ImplicitVRLittleEndian", "pydicom.uid.IntraocularLensCalculationsStorage", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForPresentation", "pydicom.uid.IntravascularOpticalCoherenceTomographyImageStorageForProcessing", "pydicom.uid.JPEG2000", "pydicom.uid.JPEG2000Lossless", "pydicom.uid.JPEG2000MC", "pydicom.uid.JPEG2000MCLossless", "pydicom.uid.JPEG2000TransferSyntaxes", "pydicom.uid.JPEGBaseline8Bit", "pydicom.uid.JPEGExtended12Bit", "pydicom.uid.JPEGLSLossless", "pydicom.uid.JPEGLSNearLossless", "pydicom.uid.JPEGLSTransferSyntaxes", "pydicom.uid.JPEGLosslessP14", "pydicom.uid.JPEGLosslessSV1", "pydicom.uid.JPEGTransferSyntaxes", "pydicom.uid.KeratometryMeasurementsStorage", "pydicom.uid.KeyObjectSelectionDocumentStorage", "pydicom.uid.LegacyConvertedEnhancedCTImageStorage", "pydicom.uid.LegacyConvertedEnhancedMRImageStorage", "pydicom.uid.LegacyConvertedEnhancedPETImageStorage", "pydicom.uid.LensometryMeasurementsStorage", "pydicom.uid.MPEG2MPHL", "pydicom.uid.MPEG2MPML", "pydicom.uid.MPEG4HP41", "pydicom.uid.MPEG4HP41BD", "pydicom.uid.MPEG4HP422D", "pydicom.uid.MPEG4HP423D", "pydicom.uid.MPEG4HP42STEREO", "pydicom.uid.MPEGTransferSyntaxes", "pydicom.uid.MRImageStorage", "pydicom.uid.MRSpectroscopyStorage", "pydicom.uid.MacularGridThicknessAndVolumeReportStorage", "pydicom.uid.MammographyCADSRStorage", "pydicom.uid.MediaStorageDirectoryStorage", "pydicom.uid.MicroscopyBulkSimpleAnnotationsStorage", "pydicom.uid.MultiFrameGrayscaleByteSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameGrayscaleWordSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameSingleBitSecondaryCaptureImageStorage", "pydicom.uid.MultiFrameTrueColorSecondaryCaptureImageStorage", "pydicom.uid.MultichannelRespiratoryWaveformStorage", "pydicom.uid.MultipleVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.NuclearMedicineImageStorage", "pydicom.uid.OphthalmicAxialMeasurementsStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage", "pydicom.uid.OphthalmicOpticalCoherenceTomographyEnFaceImageStorage", "pydicom.uid.OphthalmicPhotography16BitImageStorage", "pydicom.uid.OphthalmicPhotography8BitImageStorage", "pydicom.uid.OphthalmicThicknessMapStorage", "pydicom.uid.OphthalmicTomographyImageStorage", "pydicom.uid.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage", "pydicom.uid.PYDICOM_IMPLEMENTATION_UID", "pydicom.uid.PYDICOM_ROOT_UID", "pydicom.uid.ParametricMapStorage", "pydicom.uid.PatientRadiationDoseSRStorage", "pydicom.uid.PerformedImagingAgentAdministrationSRStorage", "pydicom.uid.PlannedImagingAgentAdministrationSRStorage", "pydicom.uid.PositronEmissionTomographyImageStorage", "pydicom.uid.ProcedureLogStorage", "pydicom.uid.ProtocolApprovalStorage", "pydicom.uid.PseudoColorSoftcopyPresentationStateStorage", "pydicom.uid.RE_VALID_UID", "pydicom.uid.RE_VALID_UID_PREFIX", "pydicom.uid.RLELossless", "pydicom.uid.RLETransferSyntaxes", "pydicom.uid.RTBeamsDeliveryInstructionStorage", "pydicom.uid.RTBeamsTreatmentRecordStorage", "pydicom.uid.RTBrachyApplicationSetupDeliveryInstructionStorage", "pydicom.uid.RTBrachyTreatmentRecordStorage", "pydicom.uid.RTDoseStorage", "pydicom.uid.RTImageStorage", "pydicom.uid.RTIonBeamsTreatmentRecordStorage", "pydicom.uid.RTIonPlanStorage", "pydicom.uid.RTPhysicianIntentStorage", "pydicom.uid.RTPlanStorage", "pydicom.uid.RTRadiationRecordSetStorage", "pydicom.uid.RTRadiationSalvageRecordStorage", "pydicom.uid.RTRadiationSetDeliveryInstructionStorage", "pydicom.uid.RTRadiationSetStorage", "pydicom.uid.RTSegmentAnnotationStorage", "pydicom.uid.RTStructureSetStorage", "pydicom.uid.RTTreatmentPreparationStorage", "pydicom.uid.RTTreatmentSummaryRecordStorage", "pydicom.uid.RadiopharmaceuticalRadiationDoseSRStorage", "pydicom.uid.RawDataStorage", "pydicom.uid.RealWorldValueMappingStorage", "pydicom.uid.RespiratoryWaveformStorage", "pydicom.uid.RoboticArmRadiationStorage", "pydicom.uid.RoboticRadiationRecordStorage", "pydicom.uid.RoutineScalpElectroencephalogramWaveformStorage", "pydicom.uid.SecondaryCaptureImageStorage", "pydicom.uid.SegmentationStorage", "pydicom.uid.SegmentedVolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.SimplifiedAdultEchoSRStorage", "pydicom.uid.SleepElectroencephalogramWaveformStorage", "pydicom.uid.SpatialFiducialsStorage", "pydicom.uid.SpatialRegistrationStorage", "pydicom.uid.SpectaclePrescriptionReportStorage", "pydicom.uid.StereometricRelationshipStorage", "pydicom.uid.SubjectiveRefractionMeasurementsStorage", "pydicom.uid.SurfaceScanMeshStorage", "pydicom.uid.SurfaceScanPointCloudStorage", "pydicom.uid.SurfaceSegmentationStorage", "pydicom.uid.TomotherapeuticRadiationRecordStorage", "pydicom.uid.TomotherapeuticRadiationStorage", "pydicom.uid.TractographyResultsStorage", "pydicom.uid.TwelveLeadECGWaveformStorage", "pydicom.uid.UID", "pydicom.uid.UltrasoundImageStorage", "pydicom.uid.UltrasoundMultiFrameImageStorage", "pydicom.uid.UncompressedTransferSyntaxes", "pydicom.uid.VLEndoscopicImageStorage", "pydicom.uid.VLMicroscopicImageStorage", "pydicom.uid.VLPhotographicImageStorage", "pydicom.uid.VLSlideCoordinatesMicroscopicImageStorage", "pydicom.uid.VLWholeSlideMicroscopyImageStorage", "pydicom.uid.VideoEndoscopicImageStorage", "pydicom.uid.VideoMicroscopicImageStorage", "pydicom.uid.VideoPhotographicImageStorage", "pydicom.uid.VisualAcuityMeasurementsStorage", "pydicom.uid.VolumeRenderingVolumetricPresentationStateStorage", "pydicom.uid.WideFieldOphthalmicPhotography3DCoordinatesImageStorage", "pydicom.uid.WideFieldOphthalmicPhotographyStereographicProjectionImageStorage", "pydicom.uid.XADefinedProcedureProtocolStorage", "pydicom.uid.XAPerformedProcedureProtocolStorage", "pydicom.uid.XAXRFGrayscaleSoftcopyPresentationStateStorage", "pydicom.uid.XRay3DAngiographicImageStorage", "pydicom.uid.XRay3DCraniofacialImageStorage", "pydicom.uid.XRayAngiographicImageStorage", "pydicom.uid.XRayRadiationDoseSRStorage", "pydicom.uid.XRayRadiofluoroscopicImageStorage", "pydicom.uid.generate_uid", "pydicom.valuerep.DA", "pydicom.valuerep.DS", "pydicom.valuerep.DSdecimal", "pydicom.valuerep.DSfloat", "pydicom.valuerep.DT", "pydicom.valuerep.IS", "pydicom.valuerep.MultiString", "pydicom.valuerep.PersonName", "pydicom.valuerep.PersonNameUnicode", "pydicom.valuerep.TM", "pydicom.valuerep.VR", "pydicom.valuerep.format_number_as_ds", "pydicom.valuerep.is_valid_ds", "pydicom.values.convert_AE_string", "pydicom.values.convert_ATvalue", "pydicom.values.convert_DA_string", "pydicom.values.convert_DS_string", "pydicom.values.convert_DT_string", "pydicom.values.convert_IS_string", "pydicom.values.convert_OBvalue", "pydicom.values.convert_OWvalue", "pydicom.values.convert_PN", "pydicom.values.convert_SQ", "pydicom.values.convert_TM_string", "pydicom.values.convert_UI", "pydicom.values.convert_UN", "pydicom.values.convert_UR_string", "pydicom.values.convert_numbers", "pydicom.values.convert_single_string", "pydicom.values.convert_string", "pydicom.values.convert_tag", "pydicom.values.convert_text", "pydicom.values.convert_value", "pydicom.waveforms.numpy_handler", "Bulk Data Handlers", "Overlay Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.overlays</span></code>)", "Pixel Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.pixel_data_handlers</span></code>)", "Waveform Data Handlers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.waveforms</span></code>)", "API Reference", "Miscellaneous (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.misc</span></code>)", "UID Definitions and Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydicom.uid</span></code>)", "Release notes", "Version 0.9.2", "Version 0.9.3", "Version 0.9.4", "Version 0.9.5", "Version 0.9.6", "Version 0.9.7", "Version 0.9.8", "Version 0.9.9", "Version 1.0.0", "Version 1.1.0", "Version 1.2.0", "Version 1.3.0", "Version 1.4.0", "Version 1.4.1", "Version 2.0.0", "Version 2.1.0", "Version 2.1.1", "Version 2.2.0", "Version 2.3.0", "Version 2.4.0", "Contributing to pydicom", "Contributing a source code change", "Contributing a documentation change", "Dataset basics: read, access, modify, write", "Introduction to JSON support", "DICOM File-sets and DICOMDIR", "Tutorials", "How to install pydicom", "Compressing <em>Pixel Data</em>", "Structured Reporting", "Creating and managing virtual environments", "Waveforms"], "terms": {"click": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 498, 499], "here": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 21, 22, 24, 26, 29, 35, 38, 41, 45, 46, 97, 148, 175, 499, 500, 501, 502, 506, 507], "download": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 104, 476, 492, 494, 495, 496], "full": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 22, 24, 41, 45, 104, 130, 134, 157, 160, 476, 485, 486, 487, 492, 502, 505], "exampl": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 23, 25, 26, 29, 32, 34, 36, 37, 38, 39, 41, 45, 46, 47, 48, 50, 81, 82, 106, 107, 108, 126, 129, 138, 148, 157, 166, 168, 179, 410, 434, 442, 476, 477, 478, 479, 481, 482, 484, 488, 492, 494, 497, 498, 499, 502, 505, 508], "code": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 22, 23, 24, 25, 27, 36, 38, 42, 44, 45, 50, 74, 75, 93, 129, 155, 157, 161, 476, 477, 479, 483, 484, 485, 487, 489, 492, 494, 497, 499, 503, 504, 506, 508], "graphic": [0, 46, 48], "window": [0, 1, 6, 18, 24, 25, 37, 42, 207, 208, 216, 476, 477, 485, 489, 495, 498, 499, 500, 504], "sudo": 0, "apt": 0, "instal": [0, 35, 37, 40, 45, 46, 94, 95, 214, 476, 477, 484, 494, 499, 500, 503, 505, 508], "tix": [0, 476, 477], "dev": 0, "pip": [0, 24, 25, 45, 498, 499, 505, 508], "u": [0, 501, 504, 505, 508], "pydicom": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 23, 27, 29, 31, 33, 34, 40, 43, 44, 47, 48, 49, 50, 57, 67, 469, 473, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 489, 491, 492, 494, 498, 499, 500, 501, 502, 503, 506, 507, 508], "python3": [0, 499, 500, 502, 507], "dicomtre": [0, 19, 476, 477], "py": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 36, 46, 50, 81, 82, 94, 95, 476, 477, 480, 481, 482, 483, 484, 485, 493, 498, 500, 502, 505], "dcm": [0, 1, 2, 6, 7, 9, 10, 11, 15, 18, 22, 24, 25, 26, 31, 34, 36, 38, 39, 41, 46, 47, 48, 49, 129, 157, 166, 168, 476, 492, 499, 500, 501, 502, 505, 506, 508], "Or": [0, 36, 504], "browser": [0, 499], "right": [0, 18], "open": [0, 7, 21, 23, 24, 158, 160, 476, 479, 498, 499, 500], "custom": [0, 6, 24, 26, 29, 166, 168, 476, 477, 478, 485, 488, 492], "command": [0, 23, 25, 33, 38, 50, 129, 476, 484, 494, 498, 499, 504, 507], "import": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 22, 23, 24, 29, 31, 32, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 81, 82, 106, 107, 126, 129, 138, 148, 166, 168, 410, 434, 476, 482, 485, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508], "tkinter": [0, 20, 42, 476, 477, 479], "tkinter_tix": 0, "print": [0, 1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 36, 47, 107, 109, 129, 476, 478, 489, 499, 500, 502, 507, 508], "__doc__": [0, 1, 6, 10, 13, 14, 15, 18, 20], "usag": [0, 13, 22, 24, 25, 26, 31, 36, 42, 209, 216, 442, 476, 489, 502], "python": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 22, 23, 24, 25, 33, 34, 35, 36, 37, 38, 41, 42, 45, 50, 73, 74, 76, 91, 129, 210, 211, 213, 410, 476, 477, 479, 480, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 498, 499, 500, 501, 504, 505, 507, 508], "dicom_filenam": [0, 13], "def": [0, 6, 10, 13, 15, 23, 24, 29, 94, 95, 129, 166, 498, 501], "runtre": 0, "w": [0, 500], "filenam": [0, 1, 6, 8, 10, 11, 15, 18, 22, 24, 25, 26, 36, 38, 46, 48, 102, 103, 104, 105, 129, 130, 134, 159, 160, 161, 168, 170, 179, 476, 491, 498, 500, 501, 502], "top": [0, 14, 18, 24, 25, 26, 34, 47, 129, 158, 168, 499, 500], "frame": [0, 1, 6, 18, 29, 39, 48, 129, 137, 138, 139, 140, 141, 142, 143, 145, 148, 202, 209, 214, 215, 216, 476, 485, 487, 489, 494, 505], "relief": 0, "rais": [0, 37, 52, 73, 74, 76, 78, 79, 81, 82, 94, 95, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 127, 129, 131, 132, 133, 134, 141, 143, 148, 150, 157, 159, 160, 163, 168, 176, 177, 179, 192, 201, 202, 210, 211, 212, 213, 214, 215, 216, 222, 434, 446, 451, 453, 473, 476, 480, 481, 486, 488, 489, 492, 494, 495, 500, 502, 505], "bd": 0, "1": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 20, 21, 22, 24, 25, 26, 27, 29, 31, 32, 34, 36, 38, 39, 40, 41, 43, 47, 48, 49, 59, 74, 76, 77, 81, 82, 84, 93, 94, 95, 103, 104, 106, 107, 108, 109, 126, 128, 129, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 147, 148, 149, 153, 157, 160, 170, 179, 192, 202, 203, 204, 205, 206, 207, 208, 209, 212, 214, 215, 216, 217, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 442, 468, 477, 480, 483, 491, 494, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508], "option": [0, 1, 6, 8, 15, 18, 23, 25, 26, 27, 29, 30, 37, 40, 46, 75, 78, 79, 88, 91, 102, 103, 104, 105, 107, 109, 119, 125, 126, 127, 128, 129, 130, 133, 134, 137, 139, 140, 142, 145, 146, 148, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 168, 169, 170, 173, 174, 175, 176, 179, 186, 190, 198, 200, 201, 202, 203, 206, 207, 208, 209, 212, 214, 215, 216, 217, 220, 410, 434, 436, 437, 438, 440, 441, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 473, 476, 478, 479, 485, 489, 492, 494, 499, 507, 508], "hlist": 0, "column": [0, 1, 6, 7, 18, 24, 26, 29, 47, 48, 129, 148, 202, 209, 212, 214, 215, 216, 505], "2": [0, 1, 3, 6, 7, 8, 9, 11, 13, 14, 15, 16, 18, 20, 22, 24, 25, 26, 27, 29, 31, 32, 34, 36, 37, 39, 40, 41, 42, 48, 49, 52, 74, 76, 77, 79, 81, 82, 83, 86, 93, 94, 95, 97, 98, 100, 101, 104, 106, 107, 108, 109, 126, 128, 129, 131, 132, 133, 134, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 157, 160, 166, 179, 192, 202, 204, 205, 206, 207, 208, 209, 212, 214, 215, 216, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 442, 451, 453, 468, 473, 479, 480, 482, 483, 485, 486, 488, 489, 498, 500, 502, 504, 505, 507, 508], "pack": [0, 20, 32, 47, 216, 476, 486, 487, 492, 495], "expand": [0, 24, 26, 216, 476, 495, 499, 502], "fill": [0, 3, 498, 499], "both": [0, 31, 37, 38, 73, 78, 79, 94, 95, 143, 168, 179, 207, 216, 476, 478, 485, 488, 491, 501, 507], "padx": 0, "10": [0, 10, 18, 21, 24, 26, 47, 49, 143, 170, 179, 192, 337, 370, 376, 395, 476, 483, 487, 499, 500, 502, 508], "padi": 0, "side": [0, 18], "left": [0, 18, 47, 499], "kei": [0, 3, 28, 29, 36, 82, 126, 129, 132, 148, 166, 169, 202, 219, 476, 492, 498], "see": [0, 8, 21, 22, 24, 25, 26, 29, 31, 36, 37, 38, 39, 45, 48, 50, 52, 126, 129, 132, 147, 148, 155, 158, 162, 166, 174, 175, 176, 179, 192, 196, 442, 476, 479, 489, 490, 491, 494, 498, 499, 500, 502, 504, 505, 506, 507], "avail": [0, 5, 8, 9, 21, 22, 24, 25, 26, 28, 29, 36, 41, 45, 46, 48, 49, 50, 104, 129, 130, 134, 137, 138, 148, 153, 168, 179, 210, 211, 213, 216, 442, 451, 453, 476, 478, 479, 483, 485, 486, 487, 489, 492, 502, 504, 505, 506, 507, 508], "configur": [0, 32, 37, 97, 126, 129, 216, 473, 476, 487, 494, 495], "bg": 0, "white": [0, 31, 476, 484], "font": 0, "courier": 0, "indent": [0, 6, 129, 169, 500], "30": [0, 22, 24, 25, 26, 49, 50, 356, 499], "selectbackground": 0, "light": 0, "yellow": 0, "gap": 0, "150": [0, 18, 49], "box": [0, 21, 34], "buttonbox": 0, "orient": [0, 1, 6, 18], "horizont": [0, 216], "add": [0, 1, 5, 9, 11, 16, 17, 18, 23, 24, 25, 29, 34, 36, 37, 39, 47, 106, 108, 109, 126, 129, 132, 137, 138, 148, 166, 168, 169, 216, 476, 485, 488, 494, 496, 498, 499, 500, 502, 505, 508], "ok": [0, 81, 82, 168, 498], "text": [0, 18, 20, 27, 36, 41, 126, 157, 195, 196, 198, 457, 463, 464, 466, 467, 476, 478, 487, 498, 499, 500], "underlin": 0, "0": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 31, 32, 36, 37, 38, 39, 43, 46, 47, 48, 49, 78, 79, 80, 98, 100, 101, 126, 128, 129, 131, 132, 134, 138, 148, 153, 157, 160, 164, 165, 166, 170, 171, 202, 206, 207, 208, 212, 214, 215, 216, 354, 355, 364, 365, 434, 451, 453, 457, 465, 468, 493, 499, 500, 502, 504, 505, 507, 508], "destroi": 0, "width": [0, 1, 6, 18, 126, 207, 208, 216, 500], "6": [0, 1, 6, 9, 18, 21, 24, 26, 27, 32, 40, 41, 43, 48, 52, 75, 126, 128, 129, 139, 209, 212, 216, 258, 283, 293, 343, 371, 389, 400, 408, 411, 418, 424, 442, 477, 482, 483, 485, 492, 493, 499, 500, 502, 508], "exit": [0, 13, 22, 24, 25, 26], "bottom": [0, 18, 34, 498, 499], "x": [0, 1, 2, 6, 7, 18, 24, 25, 26, 34, 43, 476, 488, 498, 499, 500, 505, 507, 508], "http": [0, 21, 34, 46, 94, 498, 499, 501, 504], "stackoverflow": [0, 497], "com": [0, 1, 6, 7, 10, 11, 14, 15, 18, 20, 21, 94, 498, 499, 504], "question": [0, 38, 45, 497], "17355902": 0, "bind": 0, "mousewheel": 0, "scrollbar": 0, "bind_al": 0, "lambda": [0, 3], "event": 0, "wheel": [0, 504, 507], "yview_scrol": 0, "int": [0, 27, 29, 36, 52, 74, 82, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 132, 137, 139, 140, 142, 143, 145, 148, 153, 154, 155, 156, 157, 158, 162, 164, 165, 168, 169, 170, 173, 174, 175, 176, 191, 200, 201, 202, 206, 207, 208, 216, 217, 219, 220, 221, 410, 436, 437, 438, 440, 441, 442, 457, 462, 465, 468, 500], "delta": [0, 18], "120": [0, 18, 49], "unit": [0, 48, 129, 157, 202, 216, 468, 498, 508], "button": [0, 18], "4": [0, 1, 6, 7, 8, 9, 11, 14, 18, 21, 22, 24, 26, 31, 32, 34, 36, 40, 41, 43, 48, 94, 103, 104, 126, 128, 129, 137, 139, 140, 141, 143, 144, 145, 174, 175, 179, 192, 202, 203, 204, 205, 206, 207, 208, 209, 212, 216, 217, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 362, 363, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 473, 482, 487, 488, 491, 492, 494, 498, 500, 502, 506, 507, 508], "up": [0, 39, 47, 48, 129, 168, 169, 176, 179, 214, 434, 441, 442, 476, 479, 483, 485, 498, 499, 500, 503, 504, 505, 507], "linux": [0, 37, 476, 485, 499, 504], "5": [0, 6, 7, 8, 9, 11, 14, 18, 20, 21, 22, 24, 27, 31, 32, 36, 39, 40, 43, 48, 49, 52, 126, 128, 129, 132, 137, 139, 140, 141, 142, 143, 145, 147, 149, 179, 196, 202, 206, 207, 208, 209, 215, 216, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 303, 304, 305, 319, 320, 321, 322, 323, 324, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 442, 491, 492, 498, 499, 500, 502, 505, 507, 508], "down": [0, 199, 498, 502], "show_fil": 0, "root": [0, 7, 8, 9, 20, 24, 25, 94, 95, 168, 169, 171, 355, 434, 500, 502], "ds": [0, 1, 2, 6, 7, 8, 9, 11, 14, 18, 22, 23, 24, 25, 26, 27, 31, 34, 36, 38, 39, 40, 41, 46, 47, 48, 49, 50, 52, 57, 62, 78, 79, 81, 82, 94, 95, 99, 100, 106, 107, 108, 126, 129, 137, 138, 148, 157, 166, 168, 177, 178, 193, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 437, 438, 446, 451, 468, 476, 482, 483, 491, 494, 496, 499, 500, 501, 502, 505, 508], "dcmread": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 67, 88, 104, 130, 134, 150, 155, 158, 160, 162, 168, 176, 179, 200, 476, 485, 491, 492, 494, 499, 500, 501, 502, 505, 508], "sy": [0, 3, 13, 508], "argv": [0, 3, 13], "decod": [0, 4, 5, 32, 35, 57, 74, 75, 126, 129, 143, 148, 157, 210, 211, 213, 214, 215, 442, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 473, 476, 480, 487, 488, 489, 492, 494, 495, 502, 504], "chang": [0, 9, 11, 21, 23, 24, 25, 31, 34, 37, 38, 39, 40, 47, 48, 52, 79, 93, 104, 129, 133, 134, 143, 168, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 434, 451, 453, 491, 497, 500, 501, 503, 504, 505, 506, 507], "string": [0, 15, 18, 23, 24, 27, 36, 52, 74, 75, 76, 107, 126, 129, 132, 148, 157, 169, 180, 189, 193, 197, 198, 201, 219, 436, 437, 438, 440, 441, 442, 446, 447, 451, 453, 462, 463, 464, 476, 479, 481, 482, 486, 487, 492, 494, 501], "unicod": [0, 5, 19, 27, 74, 76, 442, 476, 477, 479, 480], "recurse_tre": 0, "fals": [0, 2, 3, 9, 11, 13, 27, 29, 34, 37, 39, 41, 52, 77, 78, 79, 82, 85, 87, 90, 91, 92, 93, 94, 95, 99, 100, 101, 104, 113, 114, 123, 124, 126, 129, 130, 133, 134, 137, 138, 148, 154, 155, 157, 162, 163, 168, 170, 171, 174, 175, 176, 179, 192, 199, 209, 212, 214, 216, 410, 436, 437, 438, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 461, 462, 464, 465, 468, 476, 482, 486, 491, 494, 500, 502, 508], "autosetmod": 0, "dataset": [0, 1, 5, 6, 9, 10, 11, 12, 14, 15, 16, 18, 19, 22, 23, 24, 25, 26, 27, 31, 32, 34, 37, 38, 40, 41, 42, 44, 45, 46, 50, 56, 70, 77, 81, 82, 88, 94, 95, 98, 104, 105, 106, 107, 126, 127, 134, 135, 137, 138, 140, 142, 148, 157, 158, 162, 164, 165, 166, 167, 168, 169, 177, 178, 179, 191, 192, 196, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 468, 473, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 499, 502, 503, 504, 505, 508], "parent": [0, 8, 24, 25, 132, 168, 169, 217, 476, 486, 502], "hide": 0, "order": [0, 3, 28, 29, 32, 48, 94, 95, 129, 130, 132, 140, 148, 154, 169, 173, 177, 178, 215, 216, 217, 476, 477, 484, 487, 489, 498, 507, 508], "tag": [0, 14, 15, 24, 26, 27, 38, 41, 42, 45, 47, 48, 52, 57, 82, 94, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 141, 143, 144, 145, 154, 155, 157, 159, 168, 176, 177, 181, 196, 202, 212, 214, 215, 216, 465, 468, 473, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 500, 501], "data_el": [0, 6, 15, 129, 181, 184, 185, 188, 190, 195, 196, 210, 500, 501], "node_id": 0, "hex": [0, 34, 47, 126, 129, 132, 476, 479], "id": [0, 1, 6, 7, 9, 11, 15, 18, 41, 132, 167, 168, 169, 170, 171, 216, 476, 478, 495, 500, 502], "isinst": 0, "valu": [0, 1, 6, 7, 8, 9, 11, 15, 18, 24, 26, 27, 28, 29, 31, 32, 34, 36, 37, 39, 41, 47, 48, 50, 52, 57, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 90, 93, 101, 107, 109, 110, 111, 120, 121, 126, 128, 129, 131, 132, 135, 137, 138, 139, 140, 141, 142, 143, 148, 156, 157, 159, 166, 168, 176, 177, 178, 179, 180, 189, 194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 209, 212, 214, 215, 216, 217, 219, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445, 446, 468, 473, 476, 477, 478, 481, 482, 483, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 498, 499, 500, 501, 502, 504, 505, 506, 508], "str": [0, 8, 18, 27, 29, 36, 73, 74, 75, 76, 85, 89, 94, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 148, 149, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 179, 180, 186, 190, 191, 194, 195, 196, 197, 198, 199, 200, 202, 203, 209, 215, 216, 219, 220, 410, 434, 436, 437, 438, 440, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 476, 486, 491, 494, 500], "els": [0, 2, 3, 6, 8, 31, 129, 154, 158, 173, 176, 436, 500], "hide_entri": 0, "vr": [0, 1, 6, 11, 14, 15, 18, 24, 25, 26, 33, 35, 36, 39, 40, 41, 52, 57, 62, 79, 86, 87, 90, 99, 100, 106, 107, 108, 109, 111, 116, 117, 121, 126, 127, 128, 129, 130, 132, 134, 139, 155, 156, 158, 159, 168, 177, 178, 179, 184, 185, 188, 192, 193, 212, 225, 410, 435, 437, 438, 439, 440, 442, 444, 448, 457, 459, 461, 462, 463, 464, 466, 467, 476, 477, 478, 479, 480, 482, 483, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 500, 501, 505], "sq": [0, 6, 27, 52, 126, 129, 155, 457, 476, 482, 492, 495, 500], "sequenc": [0, 1, 2, 5, 6, 17, 18, 22, 24, 25, 26, 27, 34, 42, 49, 50, 57, 74, 76, 86, 129, 139, 140, 141, 142, 158, 164, 165, 169, 172, 173, 179, 195, 196, 201, 204, 205, 206, 207, 216, 442, 457, 468, 473, 476, 477, 478, 482, 483, 486, 488, 489, 490, 492, 493, 494, 495, 502, 508], "i": [0, 3, 18, 20, 35, 36, 48, 68, 70, 126, 129, 157, 164, 165, 168, 169, 170, 216, 442, 476, 484, 498, 499, 508], "enumer": [0, 3, 508], "item_id": 0, "sq_item_descript": 0, "name": [0, 1, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 22, 23, 24, 25, 26, 27, 29, 31, 34, 36, 37, 38, 39, 40, 41, 50, 94, 104, 107, 109, 116, 117, 120, 121, 122, 126, 129, 133, 148, 149, 157, 160, 179, 192, 203, 216, 410, 442, 476, 477, 478, 479, 482, 485, 486, 487, 492, 494, 495, 498, 499, 500, 502, 505, 506, 507, 508], "replac": [0, 15, 73, 74, 76, 107, 476, 488, 495], "xxx": [0, 11, 50], "i18n": 0, "item_text": 0, "s": [0, 1, 2, 3, 6, 7, 8, 9, 11, 14, 15, 18, 22, 23, 24, 25, 26, 29, 32, 34, 35, 36, 39, 41, 44, 45, 46, 47, 48, 50, 81, 90, 91, 94, 95, 108, 114, 118, 125, 126, 129, 130, 137, 140, 143, 146, 148, 157, 168, 169, 177, 178, 179, 201, 209, 216, 219, 220, 354, 355, 445, 446, 447, 449, 456, 457, 464, 466, 467, 476, 478, 479, 481, 486, 487, 489, 492, 494, 497, 498, 499, 500, 502, 504, 505, 507, 508], "d": [0, 11, 20, 21, 29, 32, 36, 129, 216, 442, 498, 499, 502], "format": [0, 1, 3, 5, 10, 11, 12, 16, 18, 22, 24, 25, 26, 27, 29, 36, 37, 38, 40, 126, 129, 137, 138, 139, 141, 157, 179, 194, 212, 215, 437, 438, 442, 462, 476, 477, 478, 479, 485, 488, 494, 495, 500, 502, 504], "true": [0, 9, 11, 18, 27, 29, 31, 34, 36, 37, 39, 41, 49, 52, 77, 78, 79, 85, 86, 90, 91, 93, 94, 95, 98, 104, 113, 114, 123, 124, 126, 128, 129, 130, 133, 134, 137, 141, 143, 148, 150, 155, 157, 158, 163, 167, 168, 169, 171, 173, 174, 175, 176, 179, 192, 199, 202, 207, 209, 210, 211, 212, 213, 214, 215, 216, 219, 410, 437, 438, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 461, 462, 464, 465, 468, 476, 480, 482, 492, 494, 500, 502, 505, 508], "__name__": [0, 13, 23, 24], "__main__": [0, 13, 23, 24], "len": [0, 2, 3, 6, 8, 9, 13, 31, 500, 502, 508], "pleas": [0, 13, 23, 24, 26, 36, 38, 476, 483, 494, 498, 499], "suppli": [0, 11, 13, 46, 50, 76, 157, 168, 203, 216, 434, 442, 500, 502], "n": [0, 1, 6, 8, 10, 13, 18, 24, 26, 192, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 468, 502, 507], "tk": [0, 20], "geometri": [0, 20], "3": [0, 1, 3, 6, 8, 9, 11, 14, 15, 18, 20, 21, 24, 26, 27, 29, 31, 32, 36, 37, 40, 41, 43, 48, 49, 52, 97, 104, 106, 107, 108, 109, 126, 128, 129, 132, 148, 166, 179, 192, 202, 204, 205, 206, 207, 208, 209, 212, 214, 215, 216, 217, 220, 226, 236, 242, 259, 261, 263, 264, 272, 277, 279, 319, 337, 340, 362, 363, 383, 401, 412, 417, 434, 479, 480, 482, 483, 484, 485, 486, 487, 491, 492, 493, 498, 499, 500, 501, 502, 505, 507, 508], "1200": [0, 49, 476, 492, 508], "900": 0, "titl": [0, 1, 18, 24, 26, 34, 41, 192, 442, 498, 499, 500], "viewer": [0, 46], "mainloop": [0, 20], "total": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 137, 138, 191, 202, 216, 505], "run": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 36, 37, 38, 50, 107, 129, 442, 476, 479, 482, 492, 499, 500, 503, 504, 507], "time": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 24, 25, 26, 27, 36, 37, 45, 50, 88, 90, 107, 130, 159, 173, 176, 216, 436, 444, 476, 479, 485, 494, 497, 498, 499, 500, 502, 508], "script": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 22, 23, 24, 50, 476, 486, 497], "minut": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20], "000": [0, 3, 4, 13, 19, 20, 508], "second": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 32, 37, 44, 442, 508], "sourc": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 21, 24, 26, 29, 41, 50, 52, 73, 74, 75, 76, 78, 79, 91, 93, 96, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 476, 484, 492, 494, 497, 499, 500, 503, 504, 508], "jupyt": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20], "notebook": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20], "ipynb": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20], "galleri": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20], "gener": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 23, 24, 25, 29, 31, 36, 37, 40, 43, 50, 139, 140, 141, 142, 145, 155, 162, 170, 217, 220, 434, 468, 476, 478, 479, 483, 485, 499, 505], "sphinx": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 34, 476, 480, 499], "thi": [1, 2, 3, 6, 7, 8, 9, 11, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 29, 32, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 50, 52, 73, 78, 79, 80, 83, 84, 86, 93, 94, 95, 107, 126, 129, 131, 134, 137, 140, 141, 142, 148, 155, 157, 160, 161, 167, 168, 185, 196, 199, 201, 203, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 436, 437, 438, 442, 446, 447, 473, 483, 485, 488, 489, 494, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508], "show": [1, 2, 3, 5, 7, 8, 9, 11, 15, 19, 22, 23, 25, 34, 41, 46, 50, 107, 126, 476, 477, 481, 483, 494, 499, 500, 508], "how": [1, 2, 6, 7, 8, 9, 11, 13, 14, 15, 16, 18, 22, 24, 29, 34, 35, 38, 39, 40, 46, 47, 48, 49, 50, 107, 126, 168, 441, 476, 477, 481, 498, 499, 500, 501, 502, 503, 507, 508], "an": [1, 9, 10, 21, 22, 24, 25, 26, 27, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 50, 52, 73, 74, 75, 81, 82, 83, 86, 94, 95, 104, 107, 113, 116, 117, 123, 126, 127, 129, 130, 132, 134, 139, 140, 141, 142, 143, 144, 145, 148, 154, 157, 158, 168, 169, 178, 179, 189, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 219, 220, 222, 410, 435, 437, 438, 439, 440, 442, 444, 446, 462, 468, 476, 479, 480, 486, 488, 489, 491, 492, 494, 495, 498, 499, 500, 502, 504, 505, 506, 507, 508], "mr": [1, 6, 8, 9, 18, 47, 48, 442, 502], "from": [1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 69, 73, 74, 76, 78, 81, 82, 88, 94, 95, 106, 107, 116, 117, 126, 127, 128, 129, 130, 131, 133, 134, 135, 138, 139, 140, 142, 143, 145, 146, 148, 154, 155, 156, 159, 163, 166, 167, 168, 169, 170, 179, 192, 194, 201, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 410, 434, 437, 438, 442, 447, 465, 476, 479, 480, 481, 482, 483, 484, 487, 488, 491, 492, 493, 494, 498, 499, 500, 502, 504, 505, 506, 507, 508], "512": [1, 18, 157, 202, 476, 486], "im": 1, "64": [1, 6, 18, 27, 32, 48, 212, 216, 434, 468, 476, 479, 508], "The": [1, 8, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 73, 74, 75, 76, 94, 95, 97, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 155, 157, 159, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 192, 194, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 222, 434, 441, 442, 446, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 476, 479, 486, 487, 492, 498, 499, 500, 501, 504, 505, 506, 507, 508], "perform": [1, 29, 32, 37, 39, 80, 110, 111, 112, 114, 115, 125, 129, 133, 168, 214, 455, 476, 483, 486, 487, 504, 508], "take": [1, 22, 23, 24, 29, 32, 34, 39, 46, 50, 129, 155, 166, 201, 476, 483, 498, 499, 500, 502, 507], "central": 1, "section": [1, 22, 23, 24, 25, 31, 34, 36, 39, 41, 45, 48, 50, 52, 98, 126, 129, 132, 137, 139, 145, 179, 192, 196, 202, 209, 216, 442, 498, 499], "instead": [1, 29, 36, 38, 45, 48, 49, 50, 92, 126, 129, 134, 155, 157, 160, 166, 168, 179, 215, 434, 442, 476, 479, 482, 486, 487, 488, 491, 492, 494, 495, 498, 499, 500, 501, 502, 504, 505, 508], "averagin": 1, "pixel": [1, 3, 5, 6, 12, 18, 21, 22, 24, 26, 33, 34, 35, 36, 38, 42, 46, 47, 50, 64, 77, 95, 129, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 157, 162, 179, 202, 203, 204, 205, 210, 211, 212, 213, 214, 215, 216, 473, 476, 477, 479, 480, 485, 486, 487, 488, 489, 491, 492, 494, 495, 498, 500, 503, 504], "final": [1, 15, 104, 137, 500, 508], "store": [1, 6, 9, 15, 18, 27, 31, 32, 36, 41, 48, 104, 126, 129, 157, 179, 193, 204, 205, 216, 435, 437, 438, 439, 440, 444, 476, 479, 494, 500, 501, 502, 508], "dicom": [1, 3, 5, 7, 8, 12, 13, 17, 19, 20, 25, 26, 27, 29, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 52, 55, 58, 67, 69, 71, 73, 74, 75, 81, 86, 91, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 129, 130, 131, 132, 134, 137, 139, 140, 141, 142, 143, 144, 145, 148, 150, 154, 155, 157, 158, 161, 162, 163, 168, 179, 190, 192, 194, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 215, 216, 219, 220, 410, 434, 437, 438, 442, 445, 446, 462, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 499, 500, 501, 503, 505, 506], "requir": [1, 9, 11, 18, 24, 25, 31, 32, 36, 37, 39, 41, 47, 48, 49, 50, 94, 126, 129, 137, 139, 140, 141, 142, 148, 154, 157, 168, 177, 179, 192, 201, 202, 203, 207, 208, 210, 211, 212, 214, 215, 216, 220, 446, 476, 479, 483, 487, 491, 492, 499, 500, 502, 504, 505, 508], "numpi": [1, 2, 3, 21, 29, 31, 34, 36, 39, 40, 47, 48, 49, 79, 94, 95, 100, 101, 129, 148, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 451, 453, 468, 476, 477, 485, 487, 488, 489, 491, 495, 498, 504, 505, 507, 508], "librari": [1, 21, 23, 24, 36, 37, 42, 45, 48, 216, 476, 479, 482, 499, 505], "manipul": [1, 21, 38, 126, 469, 504], "data": [1, 4, 5, 8, 9, 10, 12, 14, 16, 17, 18, 21, 22, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 42, 46, 50, 52, 59, 60, 61, 62, 74, 75, 76, 77, 79, 81, 94, 95, 98, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 155, 156, 157, 159, 162, 166, 168, 175, 179, 194, 195, 196, 202, 203, 210, 211, 212, 213, 214, 215, 216, 434, 445, 462, 468, 473, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 502, 503, 504], "out": [1, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 46, 48, 50, 138, 168, 216, 437, 438, 476, 492, 497, 498, 499, 500, 502, 508], "ha": [1, 9, 13, 18, 22, 23, 24, 25, 29, 31, 32, 34, 37, 38, 39, 41, 45, 48, 50, 79, 86, 88, 126, 129, 139, 141, 143, 148, 158, 159, 167, 168, 169, 179, 180, 201, 202, 210, 211, 212, 213, 214, 215, 216, 219, 434, 436, 468, 476, 478, 479, 481, 486, 487, 489, 490, 491, 498, 499, 500, 501, 502, 505, 507, 508], "voxel": 1, "downsampl": [1, 31], "8": [1, 6, 10, 18, 20, 21, 24, 25, 29, 31, 32, 36, 40, 48, 78, 132, 148, 170, 171, 202, 206, 207, 208, 212, 214, 215, 216, 224, 233, 303, 347, 354, 355, 375, 427, 434, 468, 478, 481, 485, 487, 489, 492, 495, 508], "inform": [1, 5, 6, 7, 11, 12, 18, 21, 22, 24, 25, 26, 30, 32, 33, 34, 36, 39, 41, 45, 46, 48, 50, 77, 98, 126, 129, 130, 131, 133, 134, 148, 157, 161, 163, 179, 192, 442, 476, 477, 479, 482, 485, 489, 491, 492, 498, 499, 500, 505, 507, 508], "set": [1, 5, 8, 11, 12, 16, 18, 23, 24, 25, 26, 27, 32, 35, 36, 37, 39, 40, 42, 43, 47, 48, 50, 52, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 92, 93, 99, 100, 101, 107, 126, 127, 129, 141, 143, 157, 158, 159, 166, 167, 168, 170, 171, 176, 179, 437, 442, 446, 447, 473, 476, 477, 482, 485, 487, 488, 489, 490, 491, 492, 494, 495, 500, 501, 503, 504, 505, 507, 508], "after": [1, 6, 18, 24, 25, 26, 34, 46, 139, 141, 163, 169, 174, 175, 176, 179, 192, 476, 491, 494, 498, 499, 500, 502, 504, 505, 507], "file_meta": [1, 11, 18, 24, 25, 26, 36, 39, 40, 41, 45, 129, 130, 131, 133, 134, 179, 192, 476, 479, 491, 502, 505], "0002": [1, 11, 18, 24, 25, 26, 32, 36, 41, 48, 129, 133, 179, 192, 212, 214, 215, 216, 354, 500, 504], "0000": [1, 6, 18, 24, 25, 26, 36, 41, 179, 192, 500], "file": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 17, 19, 23, 25, 26, 35, 36, 37, 38, 40, 41, 42, 45, 46, 47, 48, 49, 69, 71, 82, 86, 91, 98, 102, 103, 104, 105, 107, 129, 130, 131, 133, 134, 146, 150, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 179, 181, 190, 191, 192, 194, 195, 196, 199, 473, 477, 478, 479, 481, 482, 485, 488, 489, 491, 492, 494, 495, 498, 499, 500, 503, 505], "meta": [1, 6, 11, 18, 24, 25, 26, 36, 41, 50, 98, 129, 130, 131, 133, 134, 157, 161, 179, 192, 476, 479, 482, 485, 491, 500], "group": [1, 15, 18, 24, 25, 26, 36, 38, 41, 47, 49, 94, 116, 118, 126, 129, 130, 131, 132, 133, 157, 166, 168, 179, 192, 202, 219, 220, 221, 442, 468, 476, 479, 482, 486, 491, 492, 497, 498, 500, 508], "length": [1, 6, 18, 24, 25, 26, 36, 37, 41, 49, 52, 87, 118, 126, 128, 129, 137, 138, 139, 141, 143, 144, 145, 154, 155, 172, 175, 179, 191, 192, 202, 212, 215, 216, 476, 481, 482, 486, 488, 492, 494, 495, 496, 500], "ul": [1, 14, 18, 24, 25, 26, 27, 36, 41, 106, 107, 108, 192, 468, 500, 502], "190": [1, 18, 36], "0001": [1, 18, 24, 25, 26, 36, 41, 129, 133, 192, 500], "version": [1, 6, 18, 22, 24, 25, 26, 32, 34, 36, 38, 41, 42, 43, 52, 74, 76, 77, 79, 81, 82, 86, 93, 94, 95, 97, 98, 100, 101, 103, 104, 108, 109, 126, 129, 131, 132, 133, 134, 137, 139, 143, 144, 145, 147, 148, 149, 157, 160, 192, 199, 202, 203, 204, 205, 206, 207, 208, 209, 212, 214, 215, 216, 217, 219, 220, 434, 442, 451, 453, 468, 498, 499, 500, 501, 506, 507], "ob": [1, 14, 18, 24, 25, 26, 27, 36, 41, 139, 184, 192, 454, 476, 480, 495, 500, 501], "b": [1, 6, 10, 11, 18, 20, 24, 25, 26, 32, 36, 41, 47, 48, 126, 129, 179, 442, 498, 499, 500, 507], "x00": [1, 6, 18, 24, 25, 26, 36, 41, 47, 500], "x01": [1, 6, 18, 24, 25, 26, 36, 41, 48, 500], "media": [1, 11, 18, 24, 25, 26, 36, 41, 129, 133, 157, 190, 192, 500, 502], "storag": [1, 7, 11, 13, 18, 24, 25, 26, 36, 41, 48, 129, 133, 157, 190, 192, 473, 476, 479, 480, 485, 495, 500, 502, 508], "sop": [1, 6, 7, 8, 9, 11, 18, 24, 25, 26, 31, 36, 41, 48, 49, 133, 161, 166, 167, 168, 169, 179, 192, 203, 216, 473, 476, 485, 486, 492, 495, 500, 505], "class": [1, 6, 7, 8, 11, 13, 18, 24, 25, 26, 34, 35, 36, 41, 45, 48, 49, 52, 65, 67, 78, 126, 128, 129, 130, 131, 132, 133, 134, 148, 151, 153, 154, 157, 167, 168, 169, 179, 192, 201, 217, 219, 354, 410, 435, 436, 437, 438, 439, 440, 442, 444, 445, 473, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 489, 491, 492, 495, 499, 500, 502, 505, 506], "uid": [1, 6, 9, 11, 18, 24, 25, 26, 27, 29, 30, 31, 32, 36, 39, 40, 41, 45, 48, 50, 95, 129, 133, 137, 138, 148, 149, 167, 168, 179, 192, 203, 210, 211, 212, 213, 214, 215, 216, 441, 459, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 498, 500, 502, 504, 505], "ui": [1, 11, 14, 18, 24, 25, 26, 27, 36, 41, 188, 192, 459, 476, 479, 489, 500], "0003": [1, 11, 18, 24, 25, 26, 36, 41, 133, 192, 500], "instanc": [1, 6, 8, 9, 11, 18, 24, 25, 26, 27, 29, 31, 36, 41, 44, 46, 48, 65, 75, 85, 129, 133, 147, 148, 157, 158, 166, 167, 168, 169, 179, 192, 201, 203, 216, 217, 218, 436, 437, 438, 476, 488, 494, 500, 505, 506], "5962": [1, 6, 9, 18, 24, 26, 41, 500, 502], "20040826185059": [1, 6, 18], "5457": [1, 6, 18], "0010": [1, 11, 15, 18, 24, 25, 26, 34, 36, 41, 47, 48, 64, 65, 95, 129, 133, 140, 141, 142, 157, 179, 192, 202, 212, 213, 214, 215, 216, 468, 469, 476, 485, 499, 500, 502, 504], "transfer": [1, 11, 18, 24, 25, 26, 29, 30, 32, 36, 41, 42, 94, 95, 129, 130, 133, 134, 137, 138, 140, 141, 148, 149, 154, 158, 167, 168, 176, 179, 192, 210, 211, 212, 213, 214, 215, 216, 225, 310, 315, 318, 332, 367, 410, 413, 473, 476, 480, 485, 487, 488, 489, 491, 492, 500, 504, 505, 508], "syntax": [1, 11, 18, 22, 24, 25, 26, 29, 30, 32, 36, 41, 42, 45, 50, 94, 95, 129, 130, 133, 134, 137, 138, 140, 141, 148, 149, 154, 158, 167, 168, 176, 179, 192, 210, 211, 212, 213, 214, 215, 216, 225, 310, 315, 318, 332, 367, 410, 413, 473, 476, 479, 480, 485, 487, 488, 489, 491, 492, 500, 504, 505, 508], "explicit": [1, 11, 18, 24, 26, 39, 40, 41, 52, 86, 129, 130, 134, 141, 158, 179, 192, 212, 225, 442, 476, 479, 480, 488, 489, 491, 494, 500], "littl": [1, 18, 24, 25, 26, 28, 29, 36, 39, 40, 41, 129, 130, 134, 141, 144, 145, 148, 154, 155, 158, 168, 174, 175, 176, 179, 192, 212, 215, 410, 448, 449, 450, 451, 452, 453, 457, 458, 459, 461, 462, 464, 465, 476, 479, 491, 500, 505, 508], "endian": [1, 11, 18, 24, 25, 26, 28, 29, 36, 39, 40, 41, 129, 130, 134, 141, 144, 145, 148, 154, 155, 158, 168, 173, 174, 175, 176, 179, 185, 192, 212, 215, 216, 225, 410, 448, 449, 450, 451, 452, 453, 457, 458, 459, 461, 462, 464, 465, 476, 479, 487, 491, 500, 505, 508], "0012": [1, 11, 18, 24, 25, 26, 36, 41, 133, 192, 354, 500], "implement": [1, 11, 18, 24, 25, 26, 29, 36, 41, 50, 133, 179, 192, 354, 476, 492, 500], "0013": [1, 18, 24, 25, 26, 36, 41, 133, 192, 500, 502], "sh": [1, 18, 24, 26, 27, 36, 41, 192, 466, 500], "dctool100": [1, 18, 24, 26, 41, 500], "0016": [1, 18, 24, 25, 26, 36, 41, 192, 500], "applic": [1, 18, 24, 25, 26, 27, 37, 41, 179, 192, 500, 505], "entiti": [1, 18, 24, 26, 27, 41, 168, 192, 500], "ae": [1, 18, 24, 26, 27, 41, 192, 448, 464, 476, 485, 500], "clunie1": [1, 18, 24, 26, 41, 500], "0008": [1, 11, 18, 24, 25, 26, 36, 41, 48, 73, 74, 75, 76, 129, 140, 142, 157, 158, 203, 212, 214, 215, 216, 476, 477, 489, 500, 501, 502], "type": [1, 2, 6, 15, 16, 18, 23, 24, 25, 26, 29, 32, 33, 35, 36, 39, 41, 45, 48, 73, 74, 76, 79, 97, 102, 103, 104, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 135, 136, 137, 138, 143, 144, 146, 148, 157, 158, 159, 160, 162, 163, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 192, 194, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 410, 434, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 476, 479, 480, 482, 493, 494, 496, 499, 500, 502, 505, 508], "cs": [1, 16, 18, 24, 25, 26, 27, 36, 38, 41, 129, 464, 500, 501, 502], "deriv": [1, 6, 18, 36, 44, 78, 94, 95, 126, 131, 134, 217, 476, 482, 500], "secondari": [1, 6, 18], "other": [1, 6, 15, 18, 22, 27, 32, 37, 39, 40, 41, 46, 47, 48, 50, 162, 179, 184, 185, 192, 216, 442, 498, 500, 502, 505, 507], "creation": [1, 6, 8, 11, 18, 24, 25, 26, 36, 166, 476, 488, 500, 502, 507], "date": [1, 6, 7, 11, 15, 18, 21, 24, 25, 26, 27, 36, 37, 43, 90, 168, 435, 473, 476, 485, 486, 488, 494, 500, 504], "da": [1, 11, 15, 18, 24, 25, 26, 27, 36, 57, 62, 90, 129, 450, 464, 476, 485, 494, 500], "20040826": [1, 6, 18], "tm": [1, 11, 18, 24, 25, 26, 27, 36, 57, 62, 90, 458, 464, 476, 485, 494, 500], "185434": [1, 6, 18], "0014": [1, 18, 24, 25, 26, 500], "creator": [1, 6, 18, 24, 26, 41, 108, 109, 117, 120, 121, 122, 129, 132, 192, 219, 476, 486, 491, 496, 500, 502], "0018": [1, 18, 24, 25, 26, 36, 38, 192, 203, 216], "0020": [1, 11, 15, 18, 24, 25, 26, 36, 500, 502], "studi": [1, 6, 7, 8, 9, 18, 24, 25, 26, 36, 134, 166, 168, 502], "0021": [1, 18], "seri": [1, 6, 8, 9, 18, 34, 134, 161, 166, 168, 476, 480, 499, 502, 505], "0022": [1, 18, 500], "acquisit": [1, 6, 18], "0030": [1, 15, 18, 36], "185059": [1, 6, 18], "0031": [1, 18], "0032": [1, 18], "0050": [1, 18, 24, 25, 36, 47], "access": [1, 6, 18, 21, 24, 25, 35, 36, 41, 47, 52, 79, 97, 129, 157, 476, 478, 485, 491, 492, 499, 501, 502, 503, 506], "number": [1, 6, 10, 16, 18, 22, 24, 25, 26, 29, 32, 34, 36, 38, 41, 45, 47, 107, 109, 126, 128, 129, 132, 137, 139, 140, 141, 142, 145, 148, 156, 157, 158, 168, 169, 170, 173, 176, 193, 194, 200, 202, 216, 219, 220, 437, 438, 446, 476, 477, 481, 484, 488, 494, 495, 499, 500, 502, 504, 506, 508], "0060": [1, 18, 24, 25, 36], "modal": [1, 6, 7, 8, 9, 18, 24, 26, 36, 42, 204, 205, 207, 208, 216, 476, 489, 502, 506], "0070": [1, 18, 24, 25], "manufactur": [1, 6, 18, 129], "lo": [1, 11, 15, 16, 18, 24, 25, 27, 41, 129, 466, 500, 502], "toshiba_mec": [1, 6, 18], "0080": [1, 18, 24, 25, 26], "institut": [1, 6, 18], "toshiba": [1, 6, 18], "0090": [1, 18], "refer": [1, 6, 18, 24, 25, 32, 34, 36, 48, 90, 137, 139, 140, 141, 142, 143, 145, 147, 167, 202, 203, 204, 205, 206, 207, 208, 209, 216, 217, 476, 479, 498, 502, 505, 507, 508], "physician": [1, 6, 18], "pn": [1, 11, 15, 18, 27, 36, 62, 126, 129, 442, 456, 476, 489, 494, 499, 500, 502], "0201": [1, 18, 476, 488], "timezon": [1, 6, 18], "offset": [1, 6, 18, 39, 47, 126, 129, 132, 137, 138, 140, 141, 142, 143, 153, 163, 164, 165, 168, 174, 175, 457, 465, 476, 489, 492, 495, 502, 505], "utc": [1, 6, 18], "0400": [1, 6, 18], "1010": [1, 18, 49, 508], "station": [1, 6, 18], "000000000": [1, 6, 18], "1060": [1, 18], "read": [1, 5, 6, 12, 13, 15, 16, 18, 22, 24, 25, 26, 31, 35, 36, 37, 38, 39, 41, 47, 48, 50, 52, 67, 73, 79, 86, 91, 104, 129, 130, 134, 135, 136, 141, 146, 150, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 172, 173, 175, 176, 179, 199, 210, 212, 440, 473, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 491, 492, 494, 495, 499, 501, 502, 503, 505, 506, 507], "1070": [1, 18], "oper": [1, 6, 18, 31, 36, 37, 41, 42, 82, 129, 204, 205, 207, 208, 216, 476, 479, 487, 489, 492, 500, 504], "1090": [1, 18], "model": [1, 6, 18, 22, 24, 36, 50, 126, 129, 501, 508], "mrt50h1": [1, 6, 18], "patient": [1, 6, 7, 8, 9, 11, 15, 18, 24, 25, 26, 38, 129, 134, 166, 168, 442, 476, 478, 485, 495, 499, 500, 502], "compressedsampl": [1, 6, 7, 18, 24, 26, 499, 500], "mr1": [1, 6, 8, 18], "4mr1": [1, 6, 15, 18], "birth": [1, 6, 15, 18], "0040": [1, 18], "sex": [1, 6, 18], "f": [1, 2, 3, 6, 7, 8, 9, 11, 18, 126, 129, 166, 498, 502, 505, 508], "1020": [1, 18], "size": [1, 6, 7, 18, 22, 24, 48, 50, 94, 95, 126, 153, 158, 176, 210, 211, 476, 486, 492, 504, 505], "none": [1, 6, 18, 27, 28, 34, 73, 75, 78, 79, 88, 91, 93, 95, 96, 104, 106, 107, 108, 109, 119, 125, 126, 127, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 145, 148, 151, 153, 154, 155, 157, 158, 159, 162, 163, 167, 168, 169, 172, 173, 174, 176, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 216, 217, 220, 222, 410, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 466, 467, 468, 476, 485, 488, 489, 492, 498, 500, 504, 506], "1030": [1, 18, 476, 490], "weight": [1, 6, 18], "80": [1, 6, 18, 34, 40, 49, 140, 216, 225, 313, 315, 353, 508], "contrast": [1, 6, 8, 9, 18, 502], "bolu": [1, 6, 18], "agent": [1, 6, 18], "scan": [1, 6, 18, 24, 26, 166, 505], "se": [1, 6, 18], "variant": [1, 6, 18], "0023": [1, 11, 18, 24, 25], "3d": [1, 3, 6, 18, 215, 216, 476, 492], "slice": [1, 4, 5, 6, 7, 18, 24, 26, 129, 476, 485, 486, 488], "thick": [1, 6, 18], "repetit": [1, 6, 18, 50], "4000": [1, 6, 18], "0081": [1, 18], "echo": [1, 6, 18], "240": [1, 6, 18], "0083": [1, 18], "averag": [1, 6, 18], "0084": [1, 18, 24, 25, 26], "frequenc": [1, 6, 18, 49, 508], "63": [1, 6, 18, 434, 500], "924339": [1, 6, 18], "0085": [1, 18], "nucleu": [1, 6, 18], "h": [1, 6, 11, 18, 20, 22, 24, 25, 26], "0086": [1, 18, 24, 25, 26], "IS": [1, 18, 24, 25, 26, 27, 38, 57, 62, 101, 193, 201, 453, 476, 482, 486, 491, 492], "0091": [1, 18], "train": [1, 6, 18], "1000": [1, 18, 49, 508], "devic": [1, 6, 18, 24, 25, 506], "serial": [1, 6, 18, 126, 129, 501], "0000200": [1, 6, 18], "softwar": [1, 6, 18, 37, 45, 504], "v3": [1, 6, 18, 126, 134, 157, 160, 476, 492, 494, 495, 508], "51": [1, 6, 18, 40, 140, 225, 312, 318], "p25": [1, 6, 18], "1314": [1, 18], "flip": [1, 6, 18], "angl": [1, 6, 18], "90": [1, 6, 18, 40, 49, 140, 216, 225, 251, 307, 310, 476, 489], "5100": [1, 18, 38], "posit": [1, 6, 18, 22, 24, 25, 26, 38, 141, 143, 150, 163, 173, 174, 175, 192, 201, 217], "hf": [1, 6, 18, 38], "000d": [1, 18], "000e": [1, 18], "0011": [1, 18, 47, 129, 202, 212, 214, 215, 216], "83": [1, 6, 18], "9063": [1, 6, 18], "91": [1, 6, 18, 40, 140, 216, 225, 306, 310, 338, 476, 481, 489], "2000": [1, 6, 18, 32, 39, 77, 140, 216, 310, 476, 489, 492, 504, 505], "6406": [1, 6, 18], "0037": [1, 18], "0052": [1, 18], "later": [1, 6, 18, 97, 437, 438, 476, 483, 498, 500], "1040": [1, 18], "indic": [1, 6, 18, 32, 41, 47, 95, 126, 129, 476, 483, 498, 499, 500], "1041": [1, 18], "locat": [1, 3, 6, 7, 18, 91, 129, 132, 140, 167, 174, 499, 502, 507], "comment": [1, 6, 18, 498], "lt": [1, 18, 27], "uncompress": [1, 6, 18, 29, 31, 38, 39, 40, 48, 129, 148, 212, 216, 413, 476, 487, 489, 494, 495, 505], "0028": [1, 18, 32, 40, 48, 129, 140, 142, 203, 204, 205, 206, 207, 208, 209, 212, 214, 215, 216, 476, 489, 491, 500], "sampl": [1, 6, 18, 29, 31, 32, 39, 48, 49, 129, 148, 215, 216, 468, 505, 508], "per": [1, 6, 18, 29, 31, 32, 36, 39, 48, 52, 129, 131, 137, 138, 140, 148, 171, 212, 215, 216, 476, 482, 489, 492, 500, 505], "0004": [1, 9, 18, 24, 25, 26, 32, 48, 129, 166, 168, 209, 212, 214, 216, 476, 489, 502], "photometr": [1, 6, 18, 31, 32, 39, 40, 48, 129, 209, 210, 211, 212, 213, 214, 215, 216, 476, 489, 505], "interpret": [1, 6, 18, 31, 32, 39, 40, 47, 48, 129, 209, 210, 211, 212, 213, 214, 215, 216, 476, 489, 505, 508], "monochrome2": [1, 6, 18, 31, 32, 212, 214, 502], "row": [1, 6, 7, 18, 24, 26, 29, 47, 48, 129, 148, 202, 209, 212, 214, 215, 216, 505], "space": [1, 6, 7, 18, 29, 31, 32, 34, 39, 42, 107, 148, 209, 216, 442, 448, 459, 461, 463, 476, 485, 500, 502], "3125": [1, 6, 18], "0100": [1, 18, 32, 40, 49, 129, 192, 202, 212, 214, 215, 216, 468, 508], "bit": [1, 6, 18, 27, 29, 31, 32, 34, 40, 46, 47, 48, 129, 132, 143, 148, 204, 205, 212, 215, 216, 476, 486, 487, 489, 494, 495, 498, 499, 505, 508], "alloc": [1, 6, 18, 31, 32, 34, 40, 129, 212, 215, 216, 508], "16": [1, 6, 18, 24, 26, 29, 31, 32, 40, 52, 126, 129, 132, 212, 214, 215, 216, 378, 446, 447, 468, 476, 489, 505, 508], "0101": [1, 18, 32, 129, 204, 205, 212, 214, 216], "0102": [1, 18, 32, 192, 202], "high": [1, 6, 18, 31, 32, 34, 109, 476, 489], "15": [1, 6, 18, 390, 500, 508], "0103": [1, 18, 32, 129, 204, 205, 212, 214, 215, 216], "represent": [1, 6, 18, 24, 26, 27, 31, 32, 36, 56, 58, 61, 72, 107, 109, 111, 121, 126, 129, 132, 139, 167, 168, 169, 204, 205, 216, 437, 438, 442, 445, 446, 463, 466, 473, 476, 492, 494, 500, 501, 508], "0106": [1, 18], "smallest": [1, 6, 18], "ss": [1, 3, 18, 24, 26, 27, 177, 178, 468, 476, 478, 508], "0107": [1, 18], "largest": [1, 6, 18], "1050": [1, 18, 207, 208, 216, 500], "center": [1, 6, 18, 207, 208, 216, 500], "600": [1, 6, 18, 20], "1051": [1, 18, 207, 208, 216, 476, 494, 500], "1600": [1, 6, 18], "7fe0": [1, 18, 24, 26, 34, 36, 48, 64, 65, 95, 129, 140, 141, 142, 157, 212, 213, 214, 215, 216, 469, 476, 485, 489, 500], "ow": [1, 18, 24, 26, 27, 47, 49, 185, 455, 476, 480, 491, 500], "arrai": [1, 3, 13, 18, 24, 26, 34, 36, 47, 48, 49, 50, 79, 94, 95, 100, 126, 129, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 436, 476, 477, 487, 488, 491, 492, 500], "128": [1, 7, 11, 18, 24, 26, 130, 134, 150, 163, 173, 174, 175, 179, 192, 323, 360, 500, 505], "element": [1, 9, 11, 14, 15, 16, 18, 22, 23, 24, 25, 26, 31, 33, 34, 35, 38, 42, 46, 47, 48, 49, 50, 52, 64, 74, 75, 77, 79, 81, 82, 90, 91, 94, 95, 98, 99, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 137, 138, 140, 141, 142, 148, 155, 156, 157, 158, 159, 168, 175, 176, 177, 178, 179, 192, 194, 195, 202, 210, 212, 214, 215, 216, 219, 220, 435, 437, 438, 439, 440, 442, 444, 445, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 473, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 491, 492, 494, 495, 499, 502, 505, 508], "fffc": [1, 18, 24, 26, 500], "trail": [1, 6, 18, 24, 26, 139, 202, 216, 448, 459, 461, 463, 476, 485, 500], "pad": [1, 2, 6, 18, 24, 26, 137, 139, 141, 197, 202, 216, 476, 486, 488, 489, 492, 494, 495, 500], "126": [1, 18, 24, 26, 500, 508], "author": [1, 6, 7, 10, 11, 14, 15, 18, 20], "guillaum": [1, 6, 7, 10, 11, 14, 15, 18, 20], "lemaitr": [1, 6, 7, 10, 11, 14, 15, 18, 20], "g": [1, 6, 7, 10, 11, 14, 15, 18, 20, 22, 24, 25, 29, 31, 32, 34, 36, 37, 38, 45, 47, 48, 52, 82, 94, 126, 129, 132, 148, 157, 179, 201, 202, 215, 216, 217, 437, 441, 442, 476, 479, 486, 488, 492, 500], "lemaitre58": [1, 6, 7, 10, 11, 14, 15, 18, 20], "gmail": [1, 6, 7, 10, 11, 14, 15, 18, 20], "licens": [1, 6, 7, 10, 11, 14, 15, 18, 20, 476, 478, 479, 499], "mit": [1, 6, 7, 10, 11, 14, 15, 18, 20, 38, 476, 478, 479], "get_testdata_fil": [1, 2, 6, 7, 8, 9, 10, 15, 18, 31, 36, 38, 39, 41, 46, 47, 48, 49, 129, 168, 473, 476, 492, 494, 495, 499, 500, 501, 502, 505, 508], "fixm": 1, "test": [1, 8, 11, 14, 22, 24, 25, 26, 36, 41, 86, 106, 107, 108, 129, 447, 476, 477, 483, 485, 489, 492, 494, 496, 507], "mr_small": [1, 6, 9, 15, 18, 48, 502], "get": [1, 7, 8, 9, 13, 14, 24, 25, 27, 34, 36, 37, 38, 40, 41, 45, 46, 47, 48, 49, 90, 95, 129, 154, 166, 216, 473, 476, 479, 480, 488, 492, 494, 498, 499, 503, 504, 505, 507], "pixel_arrai": [1, 3, 7, 31, 34, 36, 39, 40, 42, 46, 129, 476, 478, 489], "shape": [1, 3, 47, 48, 49, 94, 129, 148, 202, 209, 210, 211, 214, 216, 468, 505, 508], "data_downsampl": 1, "copi": [1, 9, 40, 50, 129, 168, 476, 482, 492, 495, 498, 499, 502, 504], "back": [1, 13, 18, 31, 34, 38, 47, 48, 50, 498, 499, 500, 502], "origin": [1, 9, 18, 22, 24, 26, 32, 39, 40, 41, 47, 50, 86, 129, 159, 168, 179, 212, 434, 437, 438, 440, 442, 498, 499, 500, 505, 508], "pixeldata": [1, 31, 36, 39, 48, 50, 135, 137, 138, 216, 476, 488, 489, 505], "tobyt": [1, 48, 508], "updat": [1, 9, 14, 16, 18, 24, 25, 31, 45, 47, 106, 107, 108, 109, 129, 166, 168, 177, 178, 179, 192, 476, 478, 479, 481, 482, 484, 485, 486, 487, 489, 491, 492, 494, 495, 498, 499, 502, 504, 505, 507], "regard": 1, "given": [1, 10, 22, 24, 25, 26, 27, 40, 48, 49, 74, 76, 126, 127, 129, 132, 134, 157, 159, 166, 168, 179, 202, 212, 214, 215, 216, 219, 437, 438, 442, 462, 468, 476, 491, 494, 500, 502, 504, 505, 507, 508], "006": [1, 4, 6, 11, 12], "plot_downsize_imag": [1, 4], "illustr": [2, 3, 5, 6, 7, 14, 16, 18, 35, 36], "us": [2, 4, 5, 7, 9, 11, 14, 15, 18, 19, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 35, 36, 37, 40, 41, 42, 44, 45, 47, 48, 49, 65, 74, 75, 76, 77, 81, 82, 85, 91, 92, 93, 94, 95, 99, 100, 104, 107, 108, 109, 126, 127, 129, 130, 134, 137, 138, 140, 148, 150, 153, 155, 157, 158, 160, 161, 162, 166, 168, 169, 170, 176, 177, 178, 179, 194, 195, 196, 201, 202, 203, 204, 205, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 434, 437, 442, 446, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 506, 508], "matplotlib": [2, 3, 7, 42, 508], "np": [2, 3, 202, 203, 204, 205, 206, 207, 208, 212, 214, 215, 216, 468, 505, 508], "pyplot": [2, 3, 7, 46, 508], "plt": [2, 3, 7, 46, 508], "generate_multiplex": [2, 129, 468, 476, 492, 508], "fpath": [2, 7, 47, 49, 499, 500, 508], "waveform_ecg": [2, 49, 508], "first": [2, 18, 24, 26, 31, 32, 34, 36, 37, 38, 41, 44, 45, 48, 50, 73, 74, 76, 94, 95, 104, 129, 140, 141, 143, 163, 168, 176, 216, 442, 476, 487, 488, 489, 497, 498, 499, 502, 507, 508], "channel": [2, 18, 32, 48, 49, 129, 212, 468, 508], "each": [2, 8, 9, 18, 29, 31, 32, 35, 36, 39, 47, 48, 49, 74, 129, 137, 138, 140, 141, 143, 144, 145, 148, 169, 170, 201, 209, 215, 216, 442, 468, 476, 491, 494, 498, 500, 502, 505, 508], "multiplex": [2, 49, 129, 468, 476, 492, 508], "ch_idx": 2, "we": [2, 9, 15, 16, 22, 24, 26, 31, 40, 43, 90, 129, 154, 497, 498, 499, 500, 502, 504, 505, 507, 508], "could": [2, 14, 22, 23, 24, 36, 48, 50, 73, 74, 76, 201, 210, 476, 479, 480, 494, 498, 499], "also": [2, 15, 24, 25, 26, 27, 29, 34, 36, 38, 41, 44, 46, 48, 50, 75, 116, 129, 148, 163, 192, 442, 476, 477, 478, 479, 480, 483, 484, 487, 488, 492, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508], "waveform_arrai": [2, 42, 129, 476, 492, 508], "fig": [2, 508], "ax": [2, 41], "subplot": [2, 3, 508], "waveformsequ": [2, 49, 508], "as_raw": [2, 49, 468, 508], "mplx": 2, "arr": [2, 34, 36, 39, 47, 48, 49, 129, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 505, 508], "zip": [2, 5, 476, 488, 508], "nr_channel": 2, "numberofwaveformchannel": [2, 49, 468, 508], "nr_sampl": 2, "numberofwaveformsampl": [2, 468, 508], "sampling_fq": 2, "samplingfrequ": [2, 49, 508], "hz": [2, 49, 508], "mplx_label": 2, "multiplexgrouplabel": [2, 508], "ch_item": 2, "channeldefinitionsequ": [2, 508], "arang": [2, 508], "x_unit": 2, "channelsensitivityunitssequ": [2, 508], "1c": [2, 179, 192, 212, 214, 215, 216, 508], "so": [2, 24, 25, 27, 29, 34, 36, 37, 45, 47, 48, 50, 90, 129, 168, 170, 179, 199, 436, 476, 477, 480, 498, 500, 501, 502, 505, 508], "check": [2, 11, 36, 37, 45, 113, 114, 116, 117, 119, 123, 124, 129, 131, 133, 148, 171, 179, 192, 218, 436, 447, 476, 482, 485, 487, 488, 491, 492, 494, 498, 499, 504, 508], "y_unit": 2, "codemean": [2, 508], "unitless": [2, 48, 468, 508], "descript": [2, 14, 18, 23, 24, 25, 28, 35, 36, 38, 41, 106, 107, 108, 109, 112, 122, 126, 132, 476, 477, 478, 491, 495], "ch_sourc": 2, "channelsourcesequ": [2, 508], "set_titl": 2, "set_xlabel": 2, "set_ylabel": [2, 508], "tight_layout": 2, "324": [2, 4, 20], "plot_waveform": [2, 4], "multipl": [3, 27, 29, 32, 36, 47, 48, 75, 107, 109, 110, 120, 126, 129, 140, 142, 143, 148, 206, 207, 208, 209, 216, 217, 442, 462, 476, 489, 495, 500], "sort": [3, 9, 129, 502], "them": [3, 6, 22, 24, 25, 26, 29, 34, 35, 36, 40, 41, 47, 50, 129, 179, 451, 453, 476, 484, 488, 492, 499, 500, 502, 507], "build": [3, 134, 476, 485, 498], "reslic": [3, 4], "differ": [3, 5, 11, 15, 19, 23, 24, 26, 27, 31, 35, 41, 45, 48, 476, 479, 491, 498, 499, 500, 501, 502, 507], "plane": [3, 18, 32, 48, 202, 216], "glob": [3, 9, 102, 103, 105, 502], "fname": [3, 48], "recurs": [3, 41, 129, 476, 478, 480], "append": [3, 10, 16, 18, 36, 139, 201, 217, 434, 500, 508], "count": 3, "skip": [3, 16, 476, 495, 498], "sliceloc": [3, 7, 24, 26], "eg": 3, "scout": [3, 18], "view": [3, 8, 9, 18, 31, 36, 38, 42, 48, 206, 207, 208, 216, 476, 477, 479, 499, 502, 508], "skipcount": 3, "hasattr": 3, "ensur": [3, 27, 31, 37, 39, 41, 45, 93, 129, 157, 168, 179, 201, 216, 437, 438, 476, 482, 485, 494, 498], "thei": [3, 34, 36, 41, 45, 47, 48, 73, 85, 95, 179, 192, 476, 494, 498, 499, 500, 502, 504, 505, 507], "ar": [3, 9, 16, 22, 24, 25, 26, 31, 32, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 50, 52, 73, 74, 78, 79, 82, 91, 94, 95, 99, 100, 106, 108, 109, 126, 129, 131, 132, 133, 134, 137, 138, 140, 141, 142, 143, 148, 157, 163, 166, 168, 171, 177, 178, 179, 192, 201, 203, 204, 205, 207, 208, 210, 211, 215, 216, 217, 219, 441, 442, 446, 461, 464, 466, 476, 482, 487, 488, 489, 491, 492, 494, 495, 497, 498, 499, 500, 502, 504, 505, 506, 507, 508], "correct": [3, 18, 22, 24, 31, 32, 37, 39, 40, 45, 47, 49, 73, 77, 95, 129, 157, 173, 177, 178, 201, 214, 216, 476, 486, 487, 489, 494, 495, 498, 500, 505, 508], "aspect": 3, "assum": [3, 23, 24, 39, 48, 86, 141, 476, 485, 502, 505, 508], "all": [3, 5, 6, 8, 11, 15, 18, 22, 24, 25, 26, 32, 35, 36, 37, 39, 42, 43, 50, 65, 94, 95, 108, 126, 129, 131, 134, 135, 136, 137, 139, 141, 143, 148, 154, 157, 168, 170, 177, 178, 179, 201, 217, 225, 476, 477, 478, 479, 482, 484, 487, 489, 492, 494, 495, 496, 498, 499, 500, 504, 505, 507], "same": [3, 29, 36, 37, 38, 45, 47, 107, 129, 168, 201, 437, 438, 476, 480, 482, 499, 500, 502, 507], "ps": [3, 52], "pixelspac": [3, 7], "slicethick": 3, "ax_aspect": 3, "sag_aspect": 3, "cor_aspect": 3, "creat": [3, 11, 13, 16, 22, 23, 24, 25, 36, 37, 41, 46, 50, 85, 126, 127, 129, 148, 155, 166, 167, 168, 169, 201, 220, 434, 435, 436, 439, 442, 473, 476, 479, 481, 494, 500, 503, 504, 505, 506, 508], "img_shap": 3, "list": [3, 5, 6, 8, 9, 12, 18, 24, 26, 27, 29, 31, 36, 38, 39, 45, 73, 74, 75, 76, 94, 95, 102, 103, 105, 126, 127, 129, 135, 137, 138, 143, 148, 155, 157, 158, 162, 164, 168, 169, 186, 190, 191, 195, 196, 198, 201, 202, 217, 434, 441, 442, 450, 451, 452, 453, 456, 457, 458, 459, 462, 463, 466, 467, 473, 476, 479, 482, 483, 489, 492, 494, 495, 499, 500, 502, 504, 505, 507], "img3d": 3, "zero": [3, 18, 27, 48, 129, 176, 476, 496, 500, 505], "img2d": 3, "orthogon": 3, "a1": 3, "imshow": [3, 7, 46], "set_aspect": 3, "a2": 3, "a3": 3, "t": [3, 6, 9, 11, 16, 18, 24, 25, 26, 27, 32, 34, 36, 45, 47, 50, 81, 129, 140, 148, 158, 168, 202, 209, 212, 215, 216, 410, 434, 476, 488, 491, 492, 498, 499, 500, 501, 502, 505], "00": [4, 12, 17, 19, 143], "331": [4, 48], "execut": [4, 12, 17, 19, 442, 498, 507], "auto_examples_image_process": 4, "plot": [4, 5, 12, 476, 488, 508], "waveform": [4, 5, 35, 42, 129, 166, 469, 473, 476, 492, 503], "mb": [4, 12, 17, 19, 157, 468], "downsiz": [4, 5, 48], "mri": [4, 5, 48], "imag": [4, 6, 7, 8, 9, 11, 15, 18, 24, 26, 29, 38, 39, 41, 42, 47, 48, 129, 134, 138, 139, 140, 141, 143, 166, 168, 203, 209, 210, 212, 213, 214, 215, 216, 476, 479, 486, 488, 492, 494, 500, 502, 504, 505], "load": [4, 5, 9, 11, 13, 158, 167, 168, 176, 476, 488, 492, 493, 494], "ct": [4, 5, 7, 8, 9, 11, 18, 24, 26, 41, 48, 476, 488, 500, 502, 505], "axial": [4, 5, 18, 24, 26, 476, 488, 500], "sagitt": [4, 5, 476, 488], "coron": [4, 5, 476, 488], "somewher": [5, 38], "start": [5, 15, 16, 18, 21, 22, 24, 25, 26, 38, 47, 50, 126, 132, 141, 143, 156, 163, 169, 170, 175, 434, 457, 465, 476, 486, 498, 499, 500, 501, 506, 507], "analys": [5, 19], "between": [5, 19, 31, 34, 45, 47, 48, 107, 202, 498, 499, 500, 507], "displai": [5, 18, 19, 24, 25, 26, 31, 36, 42, 46, 98, 126, 129, 476, 477, 483, 488, 494, 498, 508], "person": [5, 15, 19, 27, 34, 442, 476, 487, 494, 506], "work": [5, 8, 14, 17, 19, 23, 24, 25, 29, 34, 36, 37, 38, 40, 41, 42, 50, 168, 476, 477, 479, 480, 482, 483, 484, 486, 488, 492, 498, 499, 500, 504, 506, 507, 508], "memori": [5, 19, 130, 157, 158, 159, 176, 209, 212, 216, 476, 479, 487, 488, 489, 502], "base": [5, 19, 31, 32, 38, 65, 67, 78, 129, 147, 435, 439, 444, 473, 476, 479, 485, 489, 492, 498, 499, 502, 505, 507, 508], "hierarch": [5, 19, 140, 216, 476, 489], "tree": [5, 19, 36, 169, 476, 483, 500], "These": [5, 33, 36, 37, 45, 476, 492, 500], "which": [5, 18, 21, 22, 23, 24, 29, 32, 34, 36, 39, 41, 45, 46, 48, 49, 50, 74, 75, 81, 107, 126, 129, 154, 155, 157, 158, 160, 161, 166, 168, 179, 192, 215, 216, 434, 436, 476, 477, 480, 482, 484, 492, 498, 499, 500, 501, 502, 504, 505, 507, 508], "can": [5, 9, 13, 15, 22, 23, 24, 25, 26, 27, 29, 34, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 93, 129, 137, 138, 148, 157, 158, 166, 168, 194, 201, 436, 441, 476, 477, 478, 479, 482, 491, 492, 495, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508], "appli": [5, 9, 32, 48, 49, 64, 75, 77, 129, 168, 203, 204, 205, 206, 207, 208, 216, 476, 489, 492, 499, 504, 508], "rtplan": [5, 12, 22, 24, 25, 26, 36, 38, 157], "write": [5, 9, 12, 13, 15, 22, 24, 33, 35, 37, 41, 42, 52, 67, 91, 129, 130, 153, 154, 168, 179, 181, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 437, 438, 473, 476, 478, 480, 485, 486, 488, 490, 491, 492, 494, 495, 499, 501, 502, 503], "dicomdir": [5, 9, 12, 35, 157, 160, 162, 166, 168, 169, 473, 476, 484, 488, 489, 492, 495, 503], "modifi": [5, 35, 38, 47, 48, 50, 104, 129, 168, 476, 489, 492, 503], "dictionari": [5, 17, 36, 81, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 134, 158, 191, 410, 473, 476, 478, 479, 481, 484, 485, 486, 487, 488, 489, 492, 494, 495, 501, 506], "item": [5, 6, 7, 17, 18, 22, 24, 25, 26, 27, 34, 36, 49, 50, 126, 129, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 165, 172, 196, 201, 217, 476, 477, 478, 479, 482, 485, 488, 489, 494, 495, 500, 502, 508], "standard": [5, 11, 17, 18, 20, 27, 31, 32, 34, 37, 39, 41, 45, 48, 49, 52, 126, 129, 132, 137, 139, 140, 141, 142, 143, 145, 168, 179, 192, 196, 202, 203, 204, 205, 206, 207, 208, 209, 212, 215, 216, 220, 437, 438, 442, 476, 478, 481, 482, 484, 485, 492, 494, 501, 502, 505, 508], "anonym": [5, 17, 36, 41, 476, 477, 478, 488], "auto_examples_python": 5, "auto_examples_jupyt": 5, "your": [6, 9, 13, 21, 23, 24, 25, 29, 31, 32, 36, 38, 41, 42, 45, 50, 93, 137, 138, 168, 497, 500, 501, 502, 504, 507, 508], "own": [6, 22, 23, 24, 25, 36, 38, 41, 45, 50, 129, 168, 179, 476, 486, 500, 502, 505, 507, 508], "840": [6, 7, 11, 22, 24, 39, 40, 48, 129, 140, 147, 149, 179, 212, 215, 216, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 476, 486, 487, 489, 491, 492, 498, 500], "10008": [6, 7, 11, 22, 24, 39, 40, 48, 129, 140, 147, 149, 179, 212, 215, 216, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 476, 486, 487, 489, 491, 492, 498, 500], "don": [6, 9, 16, 24, 25, 26, 36, 50, 498, 499, 501, 502, 505], "xfe": 6, "x04": [6, 48], "myprint": [6, 476, 477], "go": [6, 45, 50, 161, 498, 499, 500, 502, 504, 507], "through": [6, 8, 15, 34, 36, 38, 41, 48, 129, 161, 175, 177, 476, 477, 478, 498, 499, 500, 504, 506, 507], "_pretty_str": [6, 500], "dont_print": 6, "indent_str": 6, "next_indent_str": 6, "sequence_item": 6, "repr_valu": 6, "repr": [6, 36, 98, 476, 491], "50": [6, 40, 48, 49, 140, 216, 225, 311, 318, 336, 410], "plot_printing_dataset": [6, 12], "some": [7, 11, 13, 15, 24, 26, 34, 36, 37, 41, 43, 45, 46, 47, 48, 49, 50, 52, 73, 86, 97, 129, 130, 134, 148, 162, 179, 437, 438, 446, 476, 477, 478, 480, 482, 485, 486, 499, 500, 501, 502, 504, 506, 507], "path": [7, 8, 9, 22, 24, 25, 26, 29, 34, 39, 40, 44, 102, 103, 104, 105, 130, 134, 148, 157, 160, 167, 168, 171, 199, 476, 492, 498, 499, 500, 502, 505, 507], "project": [7, 8, 9, 18, 94, 95, 497, 498, 499, 504, 507], "test_fil": [7, 8, 9, 22, 24, 499, 500, 502], "ct_small": [7, 9, 18, 24, 26, 31, 36, 39, 41, 46, 48, 129, 157, 168, 499, 500, 501, 502, 505], "ct1": [7, 18, 24, 26, 499, 500], "1ct1": [7, 18, 24, 26, 502], "20040119": [7, 18, 24, 26, 500], "661468": [7, 18], "77": [7, 18, 22, 24, 25, 26, 36, 262, 347, 348, 349, 350, 352, 401, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425], "2040634155": [7, 18, 24, 26], "normal": [7, 18, 23, 24, 25, 36, 507], "mode": [7, 18, 24, 26, 80, 83, 84, 476, 489, 498, 504], "sopclassuid": [7, 22, 24, 26, 167, 500, 508], "pat_nam": 7, "patientnam": [7, 8, 9, 11, 13, 24, 26, 36, 38, 81, 82, 126, 129, 157, 166, 168, 220, 476, 488, 499, 500, 502], "family_comma_given": [7, 442], "patientid": [7, 8, 9, 11, 13, 15, 24, 26, 36, 129, 166, 168, 500, 502], "studyd": [7, 8, 9, 22, 24, 25, 26, 502], "sure": [7, 8, 40, 50, 498, 500, 504], "exist": [7, 29, 31, 34, 36, 37, 45, 50, 107, 129, 159, 168, 179, 192, 497, 498, 499, 505], "want": [7, 9, 13, 22, 23, 24, 37, 50, 170, 498, 499, 500, 501, 502, 504, 507], "default": [7, 22, 24, 27, 29, 37, 40, 46, 47, 48, 52, 73, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 91, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 126, 129, 130, 133, 134, 137, 139, 145, 148, 155, 157, 158, 160, 168, 170, 179, 192, 202, 206, 207, 208, 209, 212, 214, 215, 216, 434, 441, 442, 451, 453, 457, 468, 476, 480, 482, 483, 485, 487, 488, 489, 490, 491, 492, 494, 499, 500, 501, 502, 505, 507], "miss": [7, 14, 29, 45, 104, 129, 133, 148, 157, 163, 177, 179, 192, 202, 203, 212, 214, 215, 216, 476, 484, 485, 488, 489, 495, 498, 500, 502, 504], "cmap": [7, 46], "cm": [7, 10, 46], "grai": 7, "102": [7, 12, 225, 327, 332, 476, 482], "plot_read_dicom": [7, 12], "fileset": [8, 9, 134, 157, 473, 476, 492, 494, 495], "much": [8, 36, 45, 446, 476, 479, 482, 483, 491], "better": [8, 34, 476, 480, 482, 486], "wai": [8, 36, 37, 38, 44, 45, 47, 48, 50, 129, 476, 482, 497, 500, 501, 502, 504, 506], "allow": [8, 15, 22, 24, 25, 29, 32, 36, 37, 41, 45, 47, 52, 85, 129, 131, 166, 168, 216, 476, 478, 479, 488, 491, 492, 494, 495, 498, 504, 507], "modif": [8, 130, 498, 500, 502], "tutori": [8, 29, 34, 476, 489, 497, 498, 499, 500, 502, 504, 505, 507, 508], "directori": [8, 9, 38, 134, 157, 166, 167, 168, 169, 171, 476, 477, 495, 498, 499, 502, 504, 507], "dicomdirtest": [8, 9, 502], "77654033": [8, 9, 502], "doe": [8, 9, 11, 41, 45, 47, 48, 50, 86, 94, 95, 107, 129, 150, 159, 185, 210, 446, 476, 492, 502], "archibald": [8, 9, 502], "studyid": [8, 24, 26], "20010101": [8, 9, 129, 502], "studydescript": [8, 9, 24, 26, 168, 502], "xr": [8, 9, 502], "c": [8, 9, 20, 22, 24, 32, 48, 49, 90, 202, 204, 205, 206, 207, 208, 209, 212, 216, 476, 483, 502, 504, 505, 507, 508], "spine": [8, 9, 502], "comp": [8, 9, 18, 24, 26, 502], "min": [8, 9, 204, 205, 216, 502], "seriesnumb": [8, 9, 36, 502], "cr": [8, 9, 216, 502], "seriesdescript": 8, "cr1": [8, 502], "6154": [8, 502], "cr2": [8, 502], "6247": [8, 502], "cr3": [8, 502], "6278": [8, 502], "19950903": [8, 9, 502], "head": [8, 9, 34, 38, 502], "brain": [8, 9, 502], "wo": [8, 9, 502], "ct2": [8, 502], "17106": [8, 502], "17136": [8, 502], "17166": [8, 502], "17196": [8, 502], "98890234": [8, 9, 502], "peter": [8, 9, 502], "98892001": [8, 502], "ct2n": 8, "6293": 8, "6924": 8, "ct5n": 8, "2062": 8, "2392": 8, "2693": 8, "3023": 8, "3353": 8, "428": 8, "20030505": [8, 9, 502], "carotid": [8, 9, 502], "98892003": [8, 502], "15820": 8, "mr2": 8, "15970": 8, "134": 8, "4919": 8, "4950": 8, "5011": 8, "4981": 8, "mra": [8, 9, 502], "5641": 8, "6935": 8, "6605": 8, "6273": 8, "700": [8, 9, 476, 487, 502], "7": [8, 9, 18, 22, 24, 25, 32, 36, 48, 128, 132, 137, 145, 168, 192, 196, 209, 212, 216, 247, 262, 271, 272, 339, 340, 341, 342, 346, 348, 368, 385, 392, 393, 397, 426, 483, 487, 498, 499, 500, 502, 507, 508], "mr700": 8, "4558": 8, "4528": 8, "4588": 8, "4467": 8, "4618": 8, "4678": 8, "4648": 8, "os": [8, 11, 129], "pathlib": [8, 9, 171, 502], "fetch": 8, "root_dir": 8, "resolv": [8, 127, 177, 476, 482, 488], "iter": [8, 9, 15, 36, 129, 148, 155, 169, 170, 177, 180, 201, 214, 217, 222, 476, 478, 486, 502], "record": [8, 9, 18, 134, 166, 167, 168, 169, 476, 489, 495, 502], "patient_record": 8, "find": [8, 9, 15, 18, 21, 23, 24, 45, 90, 129, 161, 168, 173, 174, 175, 498, 499, 500, 502, 506, 508], "ii": [8, 500, 508], "children": [8, 169], "directoryrecordtyp": [8, 166, 168], "descr": 8, "all_seri": 8, "plural": [8, 9], "getattr": 8, "absolut": [8, 102, 103, 104, 105, 167, 168], "contain": [8, 9, 22, 24, 27, 29, 32, 33, 34, 35, 36, 37, 41, 47, 48, 49, 50, 52, 73, 75, 94, 126, 128, 129, 131, 139, 140, 141, 142, 143, 148, 157, 158, 166, 173, 177, 178, 179, 192, 195, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 220, 442, 447, 451, 453, 468, 476, 484, 487, 494, 498, 500, 502, 508], "rel": [8, 171], "elem": [8, 34, 36, 47, 75, 126, 129, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 197, 198, 202, 218, 219, 221, 476, 479, 500], "referencedfileid": 8, "make": [8, 21, 32, 36, 37, 38, 41, 43, 45, 50, 129, 130, 434, 446, 476, 479, 488, 494, 500, 502, 504, 507], "alwai": [8, 24, 26, 40, 48, 118, 126, 132, 157, 212, 216, 476, 488, 492, 494], "ee": 8, "vm": [8, 14, 27, 36, 59, 106, 107, 108, 109, 110, 116, 117, 120, 126, 476, 480, 488, 491, 500], "p": [8, 9, 20, 22, 24, 442, 476, 482, 498, 502, 507], "fspath": 8, "correspond": [8, 9, 15, 29, 31, 34, 36, 47, 48, 49, 73, 104, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 132, 137, 138, 148, 149, 159, 167, 168, 169, 202, 203, 216, 220, 468, 476, 494, 498, 499, 502, 505, 508], "015": [8, 12], "plot_read_dicom_directori": [8, 12], "interact": [9, 36, 38, 41, 129, 502], "pydicom_test": [9, 502], "276": [9, 502], "7230010": [9, 502], "31906": [9, 502], "1359940846": [9, 502], "78187": [9, 502], "descriptor": [9, 41, 168, 203, 204, 205, 206, 207, 216, 476, 489, 491, 502], "charact": [9, 18, 24, 26, 27, 34, 37, 41, 52, 73, 74, 75, 76, 86, 126, 127, 129, 132, 157, 158, 168, 169, 170, 171, 179, 194, 195, 196, 434, 442, 446, 447, 451, 453, 456, 457, 463, 466, 467, 473, 476, 477, 478, 485, 487, 488, 491, 492, 494, 495, 498, 500, 501, 502], "stage": [9, 167, 168, 498, 499], "structur": [9, 24, 25, 38, 134, 166, 168, 169, 476, 489, 500, 502, 503], "manag": [9, 29, 41, 157, 168, 476, 485, 492, 500, 502, 503, 504], "studytim": [9, 22, 24, 26, 502], "000000": [9, 18, 502], "173032": [9, 502], "050743": [9, 502], "025109": [9, 502], "045357": [9, 502], "found": [9, 47, 48, 49, 104, 129, 148, 157, 163, 168, 173, 176, 500, 502, 505], "seriesinstanceuid": 9, "1196533885": 9, "18148": 9, "118": 9, "photometricinterpret": [9, 31, 39, 212, 214, 216, 502, 505], "monochrome1": [9, 31, 32, 212, 214, 502], "without": [9, 36, 40, 49, 104, 129, 150, 161, 174, 216, 448, 459, 461, 462, 476, 478, 486, 488, 492, 495, 496, 500, 502, 504, 507], "still": [9, 39, 41, 476, 482, 483, 485, 486, 487, 489, 498, 500, 501, 502, 505], "tmp": [9, 11, 502], "tmpbincx2tf": 9, "follow": [9, 23, 24, 25, 26, 29, 32, 34, 36, 37, 39, 40, 43, 45, 48, 126, 129, 133, 140, 141, 143, 148, 168, 176, 179, 192, 215, 442, 476, 489, 492, 494, 498, 499, 500, 502, 506, 507, 508], "pt000000": [9, 502], "st000000": [9, 502], "se000000": [9, 502], "im000000": [9, 502], "se000001": [9, 502], "se000002": [9, 502], "st000001": [9, 502], "im000001": [9, 502], "im000002": [9, 502], "im000003": [9, 502], "pt000001": [9, 502], "im000004": 9, "st000002": 9, "st000003": 9, "im000005": 9, "im000006": 9, "pt000002": [9, 502], "pt000003": 9, "tempfil": [9, 11, 15, 502], "temporarydirectori": [9, 502], "warn": [9, 34, 37, 50, 52, 73, 74, 76, 81, 82, 473, 476, 478, 482, 486, 487, 488, 489, 491, 494, 495, 498, 499], "generate_uid": [9, 31, 168, 476, 488], "filterwarn": 9, "ignor": [9, 37, 52, 73, 81, 82, 109, 126, 129, 172, 463, 473, 476, 490, 494, 499], "A": [9, 18, 26, 29, 31, 32, 34, 35, 36, 39, 50, 73, 74, 86, 94, 102, 103, 105, 129, 137, 139, 140, 141, 142, 143, 145, 147, 148, 155, 158, 166, 168, 169, 170, 171, 179, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 214, 215, 216, 434, 442, 456, 463, 466, 467, 476, 486, 494, 498, 500, 502, 505], "its": [9, 22, 23, 24, 25, 27, 29, 31, 32, 36, 37, 79, 126, 129, 143, 168, 169, 176, 179, 201, 202, 210, 211, 212, 213, 214, 215, 468, 476, 487, 492, 500, 502, 507], "itself": [9, 14, 31, 34, 36, 41, 104, 476, 492, 498, 499, 502], "fs": [9, 166, 168, 502], "summari": [9, 23, 24, 498], "content": [9, 11, 13, 18, 36, 52, 129, 140, 202, 212, 213, 214, 215, 216, 499, 500, 502, 505], "seen": [9, 23, 24, 86, 499, 508], "when": [9, 21, 22, 23, 24, 25, 27, 29, 31, 32, 34, 36, 39, 41, 44, 47, 48, 50, 77, 81, 82, 86, 90, 91, 95, 129, 137, 138, 140, 142, 143, 148, 150, 162, 168, 177, 178, 204, 205, 206, 207, 208, 215, 216, 217, 220, 222, 434, 442, 476, 478, 479, 480, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 498, 499, 500, 502, 504, 505, 507, 508], "over": [9, 18, 24, 25, 44, 47, 500, 502], "yield": [9, 36, 129, 139, 140, 141, 142, 145, 148, 155, 169, 170, 214, 468, 500, 502, 505, 508], "fileinst": [9, 168, 169, 473, 502], "object": [9, 13, 29, 34, 36, 38, 41, 46, 82, 97, 101, 126, 129, 130, 132, 147, 153, 154, 157, 158, 159, 162, 163, 166, 168, 179, 201, 216, 217, 218, 221, 442, 473, 476, 478, 479, 488, 489, 491, 494, 495, 500, 502, 508], "do": [9, 13, 23, 24, 29, 35, 37, 40, 44, 45, 46, 47, 48, 50, 90, 129, 168, 179, 185, 217, 476, 482, 488, 494, 498, 499, 500, 502, 505, 506, 508], "someth": [9, 13, 21, 23, 24, 34, 47, 129, 498], "search": [9, 45, 104, 140, 168, 173, 174, 175, 476, 494, 500, 502], "patient_id": 9, "find_valu": [9, 168, 502], "return": [9, 10, 13, 29, 32, 34, 36, 41, 47, 48, 49, 73, 74, 76, 77, 87, 88, 94, 95, 100, 101, 102, 103, 104, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 138, 141, 143, 144, 146, 148, 149, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 191, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 410, 434, 436, 437, 438, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 476, 477, 478, 479, 480, 486, 487, 488, 489, 491, 492, 494, 495, 500, 501, 502, 507, 508], "where": [9, 29, 32, 36, 37, 47, 48, 49, 52, 106, 108, 129, 132, 137, 153, 159, 166, 168, 173, 174, 204, 205, 216, 476, 478, 487, 488, 489, 498, 499, 500, 502, 507], "one": [9, 14, 22, 24, 29, 32, 36, 40, 48, 49, 50, 80, 83, 84, 106, 108, 126, 129, 130, 134, 136, 137, 138, 139, 140, 141, 143, 148, 159, 161, 166, 168, 169, 170, 176, 180, 194, 203, 209, 216, 437, 438, 476, 482, 485, 495, 498, 500, 502, 504, 506, 507, 508], "repres": [9, 29, 36, 48, 99, 126, 129, 141, 157, 179, 219, 442, 446, 498, 508], "match": [9, 39, 40, 45, 48, 81, 90, 102, 103, 104, 105, 129, 159, 166, 168, 202, 210, 212, 215, 442, 476, 482, 485, 492, 500, 502, 505, 508], "result": [9, 15, 22, 23, 24, 25, 31, 37, 39, 50, 74, 76, 129, 179, 219, 434, 476, 494, 498, 499, 505], "study_uid": 9, "studyinstanceuid": 9, "series_uid": 9, "Of": 9, "cours": [9, 505], "you": [9, 11, 13, 16, 21, 22, 23, 24, 25, 26, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 49, 50, 90, 137, 138, 157, 162, 166, 168, 170, 216, 476, 489, 492, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508], "just": [9, 11, 13, 23, 24, 25, 26, 36, 41, 50, 86, 126, 129, 155, 476, 488, 492, 498, 499, 500, 502, 507], "directli": [9, 29, 36, 50, 126, 148, 436, 501, 502, 506], "know": [9, 32, 36, 41, 500, 501, 502], "what": [9, 27, 32, 35, 41, 47, 168, 179, 500, 502, 505, 507], "nfound": 9, "actual": [9, 18, 23, 24, 29, 32, 36, 39, 47, 126, 129, 148, 168, 179, 202, 212, 215, 498, 502], "onli": [9, 14, 22, 24, 25, 26, 34, 36, 37, 38, 40, 43, 47, 48, 50, 52, 77, 94, 95, 107, 109, 110, 111, 112, 114, 115, 116, 117, 125, 129, 131, 133, 134, 140, 143, 148, 157, 161, 168, 170, 177, 178, 179, 192, 212, 216, 220, 447, 476, 482, 484, 485, 486, 487, 488, 489, 491, 492, 494, 498, 500, 501, 502, 505, 507], "limit": [9, 24, 25, 31, 38, 39, 42, 48, 168, 446, 447, 476, 482, 488, 492, 506], "subset": [9, 22, 24], "howev": [9, 23, 24, 27, 29, 31, 32, 36, 39, 43, 140, 141, 143, 201, 498, 499, 500, 502, 505, 507], "less": [9, 31, 32, 45, 154, 508], "effici": [9, 155, 168, 216, 446, 508], "result_load": 9, "remov": [9, 11, 15, 36, 37, 42, 126, 129, 134, 148, 157, 160, 167, 168, 169, 216, 476, 485, 486, 487, 488, 491, 492, 493, 494, 495, 498, 500, 507], "To": [9, 22, 24, 26, 31, 36, 37, 38, 40, 47, 49, 50, 150, 155, 179, 476, 482, 487, 492, 498, 499, 500, 502, 504, 507, 508], "edit": [9, 50, 476, 486, 487, 489, 498, 499, 504], "identif": 9, "modul": [9, 23, 24, 29, 31, 37, 44, 46, 48, 49, 82, 91, 94, 95, 129, 148, 194, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 468, 473, 476, 477, 483, 484, 487, 492, 494, 495, 500, 502, 505, 507, 508], "part": [9, 25, 26, 27, 31, 32, 34, 37, 41, 44, 48, 49, 109, 126, 129, 132, 137, 139, 140, 141, 142, 143, 145, 157, 171, 177, 178, 179, 192, 196, 202, 204, 205, 206, 207, 208, 209, 212, 215, 216, 442, 476, 479, 482, 494, 498, 499, 500, 501, 502, 505, 508], "annex": [9, 31, 32, 48, 49, 126, 129, 137, 139, 140, 141, 142, 143, 145, 166, 204, 205, 206, 207, 208, 209, 212, 215, 216, 502], "properti": [9, 13, 36, 45, 52, 126, 129, 148, 167, 168, 169, 217, 219, 410, 442, 476, 477, 479, 482, 485, 486, 492, 502], "1130": [9, 18], "my": [9, 41, 129, 168, 501], "1141": 9, "descriptor_file_id": [9, 168, 502], "readm": 9, "1142": 9, "specif": [9, 18, 22, 24, 25, 26, 29, 30, 34, 36, 39, 41, 47, 48, 50, 73, 74, 75, 76, 129, 134, 157, 158, 168, 173, 179, 196, 441, 476, 477, 479, 485, 487, 488, 491, 492, 498, 499, 500, 501, 502, 505], "descriptor_character_set": [9, 168, 502], "iso_ir": [9, 18, 24, 26, 41, 75, 500, 501, 502], "100": [9, 18, 22, 24, 26, 41, 49, 225, 326, 332, 500, 501, 502, 508], "until": [9, 157, 158, 162, 173, 176, 476, 477, 482, 494, 502, 507], "call": [9, 23, 24, 36, 37, 39, 44, 45, 47, 50, 78, 82, 88, 129, 141, 155, 168, 175, 201, 436, 476, 479, 482, 486, 492, 500, 502, 505], "meet": [9, 29, 139, 148, 476, 482], "semant": [9, 34, 168, 442, 502], "re": [9, 21, 35, 47, 364, 365, 497, 498, 499, 500, 502, 504, 505, 507, 508], "becaus": [9, 22, 24, 31, 34, 36, 38, 39, 47, 48, 50, 150, 168, 498, 499, 500, 507], "would": [9, 22, 23, 24, 25, 31, 37, 50, 52, 437, 498, 499, 502, 508], "overwrit": [9, 441], "altern": [9, 21, 36, 129, 206, 207, 208, 216, 498, 500, 502], "new": [9, 15, 16, 24, 25, 31, 34, 35, 38, 45, 52, 74, 76, 77, 79, 81, 82, 86, 93, 94, 95, 97, 98, 100, 101, 103, 104, 106, 107, 108, 109, 126, 129, 131, 132, 137, 139, 144, 145, 147, 148, 149, 167, 168, 169, 179, 201, 202, 203, 204, 205, 206, 207, 208, 214, 215, 216, 217, 219, 435, 439, 442, 468, 477, 478, 479, 482, 483, 484, 487, 488, 489, 491, 492, 494, 497, 500, 501, 503, 506, 508], "ani": [9, 22, 24, 25, 27, 29, 32, 36, 37, 46, 47, 49, 76, 89, 104, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 126, 129, 131, 133, 137, 138, 139, 148, 150, 151, 152, 153, 154, 159, 168, 169, 179, 192, 201, 202, 207, 208, 216, 220, 435, 439, 441, 442, 444, 457, 461, 467, 476, 478, 479, 488, 494, 498, 499, 502, 504, 505], "while": [9, 24, 25, 31, 32, 48, 52, 126, 129, 179, 215, 446, 476, 488, 489, 494, 498, 502, 504], "leav": [9, 14, 24, 25, 107, 500], "unchang": [9, 39, 73, 177, 178, 204, 205, 206, 207, 208, 216, 505], "tdir": 9, "new_fileset": 9, "norigin": 9, "note": [9, 14, 16, 22, 24, 25, 26, 34, 37, 39, 40, 46, 79, 90, 107, 109, 129, 132, 139, 140, 144, 145, 157, 162, 163, 175, 185, 201, 204, 205, 207, 208, 216, 435, 437, 438, 439, 442, 444, 446, 479, 499, 500, 501, 505, 506, 508], "layout": [9, 168], "been": [9, 23, 24, 32, 39, 40, 41, 45, 48, 79, 86, 88, 129, 137, 138, 140, 141, 159, 167, 168, 179, 192, 216, 436, 476, 479, 486, 491, 494, 495, 498, 499, 500, 501], "is_fil": [9, 502], "relative_to": 9, "270": [9, 12, 506], "plot_read_fileset": [9, 12], "basic": [10, 24, 25, 26, 35, 39, 46, 49, 50, 68, 129, 137, 138, 140, 141, 142, 143, 476, 489, 502, 503, 505, 508], "info": [10, 18, 129, 154, 155, 158, 162, 174, 175, 176, 410, 476, 479, 480, 482, 484], "beam": [10, 16, 22, 24, 25, 26, 45, 476, 482], "gantri": [10, 18, 24, 26], "ssd": 10, "field": [10, 18, 24, 26, 36, 87, 126, 128, 141, 476, 494], "89": 10, "list_beam": 10, "plan_dataset": 10, "summar": [10, 502], "line": [10, 18, 21, 22, 23, 25, 26, 33, 37, 38, 41, 45, 47, 50, 82, 129, 168, 476, 483, 494, 498, 499, 500, 502, 505], "13": [10, 234, 235, 236, 238, 429, 430], "num": 10, "8s": 10, "11": [10, 18, 204, 205, 206, 207, 208, 216, 224, 230, 232, 246, 247, 293, 294, 344, 363, 382, 395, 423, 428, 508], "beamsequ": [10, 16, 22, 24, 25, 26, 36, 45, 129, 476, 482], "cp0": 10, "controlpointsequ": 10, "float": [10, 27, 34, 36, 48, 78, 85, 126, 129, 130, 155, 157, 158, 159, 162, 176, 200, 212, 216, 436, 437, 438, 440, 446, 462, 476, 482, 483, 489, 492, 494, 500], "sourcetosurfacedist": 10, "beamnam": [10, 16, 36], "beamnumb": [10, 22, 24, 25, 26], "8d": 10, "1f": 10, "gantryangl": 10, "join": [10, 38], "003": [10, 12], "plot_read_rtplan": [10, 12], "scratch": [11, 16, 42, 476, 480, 481, 494, 498, 505], "produc": [11, 22, 24, 34, 48, 50, 179, 476, 484, 489, 494, 507], "compliant": [11, 50, 476, 485], "written": [11, 22, 24, 27, 37, 38, 44, 47, 48, 129, 168, 179, 191, 192, 476, 488, 489, 498, 500, 502], "have": [11, 13, 23, 24, 25, 26, 27, 31, 32, 34, 36, 37, 39, 40, 41, 45, 47, 50, 94, 95, 126, 129, 137, 138, 141, 143, 148, 157, 161, 168, 179, 192, 202, 212, 214, 215, 216, 448, 459, 468, 476, 482, 485, 487, 488, 491, 495, 497, 498, 499, 500, 501, 502, 504, 505, 507, 508], "valid": [11, 42, 50, 52, 80, 83, 84, 86, 122, 126, 129, 131, 133, 148, 157, 171, 179, 192, 209, 216, 217, 364, 365, 410, 441, 446, 447, 451, 453, 462, 463, 466, 476, 494, 495, 496], "tmpbgbqb6dg": 11, "save": [11, 13, 22, 24, 38, 39, 47, 48, 476, 479, 482, 499, 500, 501, 505, 508], "big": [11, 28, 29, 40, 129, 130, 134, 154, 212, 215, 225, 508], "tmpvsvccrxj": 11, "20220603": 11, "0033": [11, 18], "170306": 11, "804395": 11, "firstnam": 11, "123456": 11, "datetim": [11, 90, 435, 439, 444], "filedataset": [11, 44, 104, 129, 134, 157, 162, 179, 473, 476, 479, 481, 494, 495, 500, 502], "filemetadataset": [11, 22, 24, 130, 133, 134, 161, 192, 473, 476, 491, 500], "temporari": [11, 167, 502], "suffix": [11, 170, 434, 442], "filename_little_endian": 11, "namedtemporaryfil": [11, 15], "filename_big_endian": 11, "popul": [11, 50, 506], "mediastoragesopclassuid": [11, 502], "mediastoragesopinstanceuid": 11, "implementationclassuid": 11, "initi": [11, 34, 38, 130, 131, 132, 134, 174, 175, 201, 216, 217, 442, 498], "preambl": [11, 130, 134, 157, 163, 179, 192, 199, 476, 485, 500], "try": [11, 34, 45, 94, 95, 476, 480, 488, 500, 502], "is_little_endian": [11, 13, 39, 128, 129, 130, 134, 141, 143, 155, 158, 164, 165, 172, 174, 175, 176, 177, 178, 179, 216, 410, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 464, 465], "is_implicit_vr": [11, 39, 128, 129, 130, 134, 155, 156, 158, 164, 165, 179, 410, 457, 476, 488], "dt": [11, 27, 57, 62, 90, 452, 464, 476, 485, 494], "now": [11, 18, 45, 179, 476, 478, 479, 482, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 498, 499, 500, 502, 508], "contentd": 11, "strftime": 11, "y": [11, 34, 216, 498, 507], "m": [11, 20, 442, 498, 499, 502, 504, 505, 508], "timestr": 11, "long": [11, 27, 154, 175, 179, 500, 507], "micro": 11, "contenttim": 11, "save_a": [11, 15, 22, 24, 38, 39, 44, 45, 47, 48, 129, 179, 476, 478, 491, 500, 505, 508], "shouldn": 11, "need": [11, 23, 24, 25, 31, 32, 34, 36, 37, 40, 41, 44, 45, 49, 50, 74, 76, 90, 95, 129, 154, 155, 162, 463, 466, 476, 479, 494, 498, 499, 500, 501, 502, 504, 505, 507, 508], "9": [11, 18, 21, 24, 25, 31, 36, 45, 48, 49, 78, 170, 171, 202, 226, 227, 231, 233, 242, 271, 272, 290, 291, 298, 343, 364, 365, 374, 389, 392, 397, 409, 423, 486, 489, 492, 508], "bug": [11, 38, 480, 484, 488, 491, 494, 497, 498, 504], "recogn": 11, "transfersyntaxuid": [11, 39, 40, 45, 129, 167, 179, 476, 478, 485, 500, 505], "explicitvrbigendian": 11, "reopen": 11, "plot_write_dicom": [11, 12], "403": 12, "auto_examples_input_output": 12, "output": [12, 18, 22, 24, 25, 34, 40, 48, 50, 204, 205, 216, 476, 489, 491, 498, 499, 500, 502, 507], "byte": [13, 22, 24, 27, 28, 29, 36, 39, 47, 48, 49, 50, 74, 75, 76, 86, 87, 109, 126, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 153, 154, 156, 157, 158, 159, 160, 161, 163, 173, 174, 175, 176, 177, 178, 179, 184, 185, 189, 192, 200, 202, 215, 216, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 476, 487, 488, 489, 494, 500, 502, 505, 508], "help": [13, 22, 23, 24, 25, 26, 37, 41, 45, 158, 476, 479, 487, 494, 497, 498, 499], "blob": 13, "databas": 13, "io": [13, 130, 134, 473, 500], "bytesio": [13, 130, 134, 153, 500], "dcmwrite": [13, 44, 45, 67, 129, 476, 485, 491, 492, 494, 500], "filebas": [13, 67, 141, 143, 146, 473], "dicomfilelik": [13, 67, 130, 141, 143, 146, 152, 157, 476, 478], "memory_dataset": [13, 19], "write_dataset_to_byt": 13, "buffer": [13, 130, 212], "rewind": [13, 163, 173, 174, 175, 476, 483], "seek": [13, 153, 157, 476, 478, 488], "adapt_dataset_from_byt": 13, "interest": [13, 47, 497, 500, 507], "stuff": 13, "bond": 13, "jame": 13, "007": 13, "dummydatabas": 13, "__init__": [13, 126, 128, 129, 130, 131, 132, 134, 148, 151, 153, 154, 167, 168, 169, 201, 217, 219, 410, 435, 437, 438, 439, 440, 442, 444, 445], "self": [13, 410, 500, 505], "_blob": 13, "file_path": [13, 199], "db": 13, "convert": [13, 29, 31, 32, 40, 48, 73, 74, 76, 82, 85, 87, 90, 94, 95, 127, 129, 148, 168, 201, 202, 209, 210, 211, 212, 213, 214, 215, 216, 468, 476, 479, 482, 485, 488, 489, 492, 493, 494, 499, 500, 508], "ds_byte": 13, "read_byt": 13, "read_dataset": [13, 67, 162], "_new": 13, "dynam": [14, 18], "recommend": [14, 21, 23, 24, 36, 37, 39, 90, 137, 138, 148, 168, 216, 498, 499, 500, 502, 504, 505, 507], "solut": 14, "demonstr": [14, 46, 476, 477], "hous": 14, "program": [14, 24, 25, 36, 38, 46, 476, 477, 482], "around": [14, 36, 160, 498], "1001": [14, 18, 41, 129], "privat": [14, 15, 18, 22, 24, 25, 26, 36, 42, 50, 106, 107, 108, 109, 116, 117, 120, 121, 122, 124, 126, 127, 129, 132, 166, 167, 168, 192, 219, 410, 473, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 491, 492, 494, 495, 496, 500, 502], "42": [14, 476, 479], "1002": [14, 18, 41, 500], "12345": [14, 36, 129], "1003": [14, 18], "darci": 14, "mason": [14, 21], "datadict": [14, 45, 473, 476, 485, 488, 500], "dicomdictionari": 14, "keyword_dict": 14, "defin": [14, 15, 18, 23, 24, 31, 32, 41, 47, 52, 126, 129, 132, 167, 168, 179, 203, 216, 441, 476, 482, 498, 500, 502, 508], "is_retir": [14, 106, 107, 108, 116, 117, 126, 410, 476, 485], "flag": [14, 18, 37, 93, 129, 163, 168, 173, 174, 175, 476, 491, 494, 502, 507], "keyword": [14, 24, 25, 26, 34, 36, 45, 48, 49, 81, 82, 89, 104, 106, 107, 115, 116, 118, 123, 125, 126, 129, 148, 157, 168, 202, 207, 209, 212, 214, 215, 216, 220, 410, 468, 476, 480, 482, 485, 487, 488, 492, 499, 500, 502, 506], "blank": [14, 15, 107, 201, 436, 476, 478, 500], "new_dict_item": [14, 106, 108], "0x10011001": 14, "One": [14, 34, 38, 41, 47, 50, 106, 107, 108, 126, 129, 203, 209, 216, 498, 499], "teston": [14, 106, 107], "0x10011002": 14, "two": [14, 18, 23, 24, 26, 34, 36, 37, 40, 41, 44, 86, 94, 106, 107, 108, 129, 139, 154, 168, 216, 442, 476, 483, 500, 501, 507, 508], "testtwo": [14, 106, 107], "0x10011003": 14, "three": [14, 29, 34, 108, 442, 500, 502], "testthre": 14, "revers": [14, 169, 476, 489], "map": [14, 48, 126, 129, 166, 499], "new_names_dict": 14, "dict": [14, 29, 36, 89, 94, 106, 108, 126, 129, 130, 131, 148, 166, 168, 202, 216, 476, 479, 494], "val": [14, 154, 180, 201, 217, 410, 436, 437, 438, 440, 441, 442, 446, 500], "etc": [14, 15, 16, 34, 36, 38, 46, 48, 126, 129, 202, 476, 477, 483, 494, 498, 502, 505], "001": [14, 16, 17, 41], "plot_add_dict_entri": [14, 17], "point": [15, 22, 23, 24, 25, 26, 27, 46, 50, 176, 212, 216, 446, 476, 478, 483, 494, 498, 500, 506], "It": [15, 24, 25, 35, 36, 37, 38, 39, 44, 46, 48, 50, 129, 141, 168, 179, 476, 482, 483, 498, 499, 500, 501, 502, 505, 508], "curv": [15, 508], "patientbirthd": [15, 36], "de": [15, 50], "callback": [15, 23, 24, 129, 476, 485], "function": [15, 18, 23, 24, 25, 29, 34, 35, 36, 37, 41, 44, 48, 49, 50, 51, 54, 55, 64, 67, 69, 71, 78, 88, 96, 100, 107, 108, 126, 129, 141, 148, 155, 158, 161, 162, 166, 168, 177, 178, 199, 201, 202, 203, 210, 211, 212, 213, 214, 215, 216, 220, 436, 446, 468, 469, 473, 474, 476, 477, 478, 479, 484, 485, 487, 488, 489, 492, 494, 499, 500, 501, 502, 505, 507, 508], "insid": [15, 476, 478], "person_names_callback": 15, "curves_callback": 15, "0xff00": 15, "0x5000": 15, "del": [15, 16, 36, 41, 129, 500], "walk": [15, 129], "remove_private_tag": [15, 41, 129], "method": [15, 21, 29, 32, 36, 39, 40, 44, 46, 47, 49, 94, 95, 98, 126, 128, 129, 130, 131, 132, 134, 137, 138, 147, 148, 151, 153, 154, 157, 166, 167, 168, 169, 201, 217, 219, 410, 435, 437, 438, 439, 440, 442, 444, 476, 479, 482, 485, 487, 494, 500, 501, 502, 505, 506], "easili": [15, 476, 477, 479], "delet": [15, 50, 129, 476, 491, 498, 499], "delattr": 15, "otherpatientid": [15, 476, 478], "otherpatientidssequ": [15, 500], "For": [15, 22, 24, 25, 29, 31, 32, 34, 36, 37, 39, 47, 48, 50, 118, 126, 129, 137, 140, 141, 143, 148, 166, 168, 179, 202, 216, 442, 476, 482, 492, 498, 499, 500, 502, 504, 505], "possibl": [15, 32, 36, 37, 43, 48, 90, 126, 129, 166, 177, 178, 215, 216, 446, 476, 485, 487, 488, 489, 494, 501, 502, 506], "assign": [15, 36, 126, 476, 482, 489, 495], "19000101": 15, "output_filenam": 15, "009": [15, 17], "plot_anonym": [15, 17], "block": [16, 18, 24, 25, 26, 41, 129, 132, 476, 491, 499], "300a": [16, 24, 25, 26, 38], "00f8": 16, "apertur": 16, "00fe": 16, "block1": 16, "block2": 16, "toi": 16, "block_ds1": 16, "blocktyp": 16, "blocknam": 16, "block_ds2": 16, "should": [16, 23, 24, 25, 27, 29, 31, 32, 34, 36, 37, 38, 41, 45, 47, 48, 50, 126, 129, 140, 141, 142, 143, 148, 157, 163, 166, 168, 170, 179, 192, 201, 209, 210, 211, 212, 213, 214, 215, 216, 434, 462, 476, 478, 479, 486, 487, 492, 498, 499, 500, 502, 503, 505, 507, 508], "like": [16, 23, 24, 36, 37, 41, 45, 47, 50, 69, 71, 82, 109, 130, 134, 146, 153, 155, 157, 158, 159, 162, 163, 173, 175, 176, 179, 192, 194, 195, 196, 217, 476, 479, 489, 492, 495, 499, 500, 501, 502], "plan_d": 16, "sinc": [16, 32, 41, 94, 126, 134, 157, 160, 215, 498, 502, 508], "did": [16, 476, 477], "blocksequ": 16, "numberofblock": 16, "beam0": 16, "block_ds3": 16, "abov": [16, 22, 23, 24, 25, 26, 36, 41, 47, 50, 126, 129, 202, 476, 486, 499, 502, 507], "forget": [16, 50], "plot_sequ": [16, 17], "012": 17, "auto_examples_metadata_process": 17, "192": [18, 24, 26, 41, 500], "20040119072730": [18, 24, 26, 41, 500, 502], "12322": [18, 24, 26, 41, 500, 502], "0005": [18, 24, 26, 41, 73, 74, 75, 76, 129, 157, 158, 468, 476, 477, 500, 501, 502], "primari": [18, 24, 26, 41, 500], "072731": [18, 24, 26, 500], "19970430": 18, "072730": [18, 24, 26], "112749": 18, "112936": 18, "113008": 18, "ge": 18, "medic": [18, 34, 38, 40, 502], "system": [18, 22, 24, 25, 26, 37, 46, 168, 216, 500, 502, 504, 507, 508], "jfk": 18, "0500": 18, "ct01_oc0": 18, "e": [18, 22, 24, 25, 26, 29, 34, 36, 37, 38, 45, 47, 48, 52, 82, 94, 126, 129, 132, 148, 157, 164, 165, 168, 169, 170, 179, 201, 202, 216, 217, 437, 441, 442, 476, 479, 486, 488, 492, 498, 499, 500, 504], "rhapsod": 18, "0009": [18, 41, 48, 129, 212, 216, 476, 489], "gems_iden_01": [18, 41], "fidel": [18, 41], "ge_genesis_ff": [18, 41], "suit": [18, 41], "ct01": [18, 41], "1004": [18, 468, 476, 489], "product": 18, "hispe": 18, "1027": 18, "sl": [18, 24, 26, 27, 468], "862399669": 18, "servic": [18, 502], "1031": 18, "mobil": 18, "10e6": 18, "genesi": 18, "05": [18, 499], "10e7": 18, "exam": 18, "checksum": 18, "973283917": 18, "10e9": 18, "stamp": 18, "o": [18, 20, 68, 70], "abcd1234": [18, 500], "1234abcd": [18, 500], "ag": [18, 27], "AS": [18, 27, 464], "000y": 18, "21b0": 18, "addit": [18, 24, 25, 26, 29, 73, 129, 134, 167, 168, 442, 484, 492, 494, 501, 502, 504, 505], "histori": 18, "gems_pati_01": 18, "statu": [18, 114, 126], "isovue300": 18, "helic": 18, "kvp": 18, "0088": 18, "collect": [18, 52, 131, 158, 502], "diamet": 18, "480": 18, "rout": 18, "iv": 18, "1100": 18, "reconstruct": 18, "338": 18, "6716": 18, "1110": 18, "distanc": 18, "detector": 18, "1099": 18, "3100585938": 18, "1111": 18, "630": 18, "1120": 18, "tilt": 18, "tabl": [18, 21, 27, 31, 39, 48, 126, 129, 137, 138, 140, 141, 142, 143, 179, 192, 202, 203, 204, 205, 206, 207, 212, 214, 215, 216, 468, 476, 489, 492, 499, 500, 502, 504, 505], "height": 18, "133": [18, 163], "699997": 18, "1150": 18, "exposur": 18, "1601": 18, "1151": 18, "rai": [18, 24, 26, 500], "tube": 18, "current": [18, 22, 24, 26, 32, 34, 37, 39, 93, 126, 129, 168, 169, 177, 178, 185, 203, 209, 216, 442, 476, 494, 499, 502, 504, 505, 507], "170": 18, "1152": 18, "1160": 18, "filter": [18, 24, 25, 129], "larg": [18, 39, 41, 50, 129, 132, 137, 138, 158, 176, 436, 476, 478, 479, 486, 488, 489, 492, 494, 505, 508], "bowti": 18, "fil": 18, "1190": [18, 476, 492], "focal": 18, "spot": 18, "1210": 18, "convolut": 18, "kernel": 18, "ff": [18, 143], "0019": 18, "gems_acqu_01": 18, "912": [18, 476, 489], "cell": 18, "theta": 18, "373": [18, 20], "75": [18, 24, 25, 49, 358], "0166": 18, "100f": 18, "horiz": 18, "ref": 18, "955": [18, 36], "799988": 18, "1011": 18, "1013": [18, 476, 489], "baselin": [18, 40, 48, 140, 216, 410, 508], "1014": [18, 476, 492], "end": [18, 21, 22, 24, 139, 158, 174, 176, 201, 216, 476, 482, 489, 507], "1015": 18, "enhanc": [18, 203, 216, 479], "1016": [18, 476, 489], "1017": 18, "1018": 18, "ra": 18, "1019": [18, 48], "79187": 18, "101a": 18, "last": [18, 24, 26, 34, 36, 38, 41, 45, 82, 94, 95, 139, 141, 476, 482, 495, 500, 502, 505], "101b": 18, "loc": 18, "320": [18, 48], "197968": 18, "101e": 18, "1023": 18, "speed": [18, 476, 479, 483, 487, 494, 496], "mm": [18, 21], "rotat": 18, "1024": [18, 126, 129, 476, 490, 501, 505], "mid": [18, 24, 26, 36, 38], "sec": 18, "17": [18, 49, 379, 507], "784578": 18, "1025": 18, "1026": 18, "azimuth": 18, "degre": 18, "msec": 18, "102a": 18, "On": [18, 32, 176, 442, 501], "178": 18, "079926": 18, "102b": 18, "off": [18, 24, 25, 37, 45, 91, 158, 476, 483, 491, 499], "3994": 18, "299316": 18, "102c": 18, "trigger": [18, 24, 26], "10431": 18, "102e": 18, "718": 18, "079956": 18, "102f": 18, "984": 18, "1039": [18, 502], "sfov": 18, "stat": [18, 159], "recon": 18, "comput": 18, "1042": [18, 476, 491], "segment": [18, 203, 215, 216, 476, 487, 494], "1043": 18, "1044": 18, "interscan": 18, "delai": [18, 24, 26], "1047": [18, 476, 491], "compress": [18, 21, 29, 31, 32, 35, 38, 42, 48, 65, 129, 137, 138, 140, 141, 148, 179, 215, 216, 410, 476, 485, 487, 489, 494, 495, 503, 504], "factor": [18, 49, 476, 483, 505, 508], "104a": 18, "104b": [18, 24, 26], "1052": [18, 204, 205, 216], "post": [18, 45, 476, 491], "proc": 18, "1057": 18, "water": [18, 442], "95": [18, 476, 482, 485], "1058": 18, "bone": [18, 46], "105e": 18, "763": 18, "105f": 18, "increment": [18, 170], "1969": 18, "1061": 18, "1576": 18, "1062": 18, "106a": 18, "depend": [18, 29, 32, 39, 40, 48, 50, 94, 95, 126, 129, 148, 168, 179, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 464, 468, 476, 487, 488, 495, 499, 501, 502, 504, 507, 508], "process": [18, 23, 24, 29, 40, 140, 209, 216, 410, 436, 476, 479, 491, 494, 498, 499, 508], "106b": 18, "852": [18, 476, 488], "1071": 18, "fatq": 18, "estim": 18, "were": [18, 24, 26, 129, 476, 482, 484, 498, 499, 508], "1072": 18, "z": [18, 86, 170, 171], "chan": 18, "avg": 18, "1073": [18, 476, 491], "1074": 18, "max": [18, 204, 205, 216], "1075": [18, 476, 491], "1076": 18, "10da": 18, "10db": 18, "projector": 18, "coeffici": [18, 24, 25], "10dc": 18, "10dd": 18, "overrang": 18, "10de": 18, "alpha": [18, 203, 216, 476, 488, 489, 506], "158": 18, "135803": 18, "179": 18, "035797": 18, "sn": 18, "gems_rela_01": 18, "prescrib": 18, "1005": 18, "1007": 18, "1605775145": 18, "unknown": [18, 27, 82, 126, 127, 129, 141, 189, 476, 481, 486, 488, 492, 494, 500, 506], "24078": 18, "acq": 18, "750675506": 18, "1037": 18, "screen": [18, 22, 24], "anatom": 18, "7400": 18, "1091": 18, "biopsi": 18, "1092": 18, "fl": [18, 24, 26, 27, 500], "1093": [18, 476, 492], "gems_stdy_01": 18, "fd": [18, 27], "862399761": 18, "111079": 18, "No": [18, 45, 171, 455, 497], "header": [18, 150, 157, 163, 215, 476, 478, 500], "107d": 18, "complet": [18, 22, 24, 29, 50, 129, 176, 476, 477, 498, 502, 504], "0025": 18, "gems_sers_01": 18, "1006": [18, 468, 476, 489], "puls": 18, "44": [18, 299], "landmark": 18, "counter": 18, "archiv": 18, "receiv": [18, 192], "host": [18, 45], "0027": 18, "gems_imag_01": 18, "101c": 18, "vma": 18, "mamp": 18, "101d": 18, "phase": 18, "mod": 18, "24": 18, "101f": 18, "clip": 18, "129": [18, 505], "smart": 18, "ON": 18, "foreign": [18, 476, 477], "revis": [18, 476, 480, 482, 483], "1035": 18, "letter": [18, 36], "20406341552734": 18, "r": [18, 32], "coord": 18, "199999809265137": 18, "699999809265137": 18, "69999694824219": 18, "1045": 18, "1046": 18, "1048": 18, "corner": 18, "180": [18, 36], "53579711914062": 18, "1049": [18, 476, 491], "03579711914062": 18, "104c": [18, 24, 26], "159": [18, 476, 489], "63580322265625": 18, "104d": [18, 24, 26], "19999694824219": 18, "116": [18, 24, 25, 26, 49], "20304870605469": 18, "l": [18, 21], "1053": [18, 204, 205, 216, 476, 491], "anterior": 18, "posterior": 18, "1054": 18, "1055": 18, "0120": 18, "rescal": [18, 42, 204, 205, 207, 208, 216], "intercept": [18, 36, 204, 205, 216], "slope": [18, 204, 205, 216], "0029": 18, "gems_imps_01": 18, "lower": [18, 129, 132, 168, 502, 506], "rang": [18, 29, 32, 47, 90, 148, 204, 205, 216, 476, 487, 489, 500], "pixels1": 18, "87": 18, "1008": 18, "1009": 18, "100a": 18, "764": 18, "hdr": 18, "struct": [18, 194, 462], "1034": 18, "advantag": [18, 476, 483], "overflow": 18, "underflow": 18, "0043": [18, 24, 26, 500], "gems_parm_01": 18, "400": [18, 48], "input": [18, 22, 24, 48, 201, 209, 216, 442, 476, 492], "1012": 18, "chain": 18, "14": [18, 40, 140, 304, 305, 407, 476, 491], "decon": 18, "paramet": [18, 22, 24, 29, 34, 48, 49, 50, 73, 74, 75, 76, 78, 79, 91, 93, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 155, 157, 158, 159, 160, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 192, 194, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 434, 437, 438, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 476, 482, 484, 486, 492, 494, 495, 500, 502], "107": [18, 225, 296, 332, 476, 483], "21": [18, 49, 380], "20": [18, 49, 216, 345, 391, 476, 494], "calibr": 18, "ibh": 18, "scale": 18, "095": 18, "bbh": 18, "085000": 18, "102000": 18, "095000": 18, "blend": 18, "350": 18, "ppscan": 18, "integr": 18, "level": [18, 24, 25, 26, 33, 34, 129, 158, 168, 169, 476, 482, 494, 499, 500, 501, 502], "40": [18, 49, 361, 476, 494], "1021": 18, "glow": 18, "term": [18, 48, 202, 216], "748": 18, "749": 18, "750": 18, "pitch": 18, "ratio": [18, 31], "1028": 18, "uniqu": [18, 27, 29, 41, 148, 168, 169, 170, 188, 476, 485, 500, 502], "iden": 18, "1029": [18, 476, 490], "histogram": 18, "2068": 18, "user": [18, 29, 36, 38, 43, 44, 45, 46, 76, 85, 129, 148, 155, 161, 179, 476, 479, 482, 488, 489, 492, 498, 500, 502, 507], "coordin": [18, 24, 25, 36], "200000": 18, "700000": 18, "07992553710938": 18, "3816": 18, "219482421875": 18, "fpa": 18, "gain": 18, "ad": [18, 23, 24, 25, 31, 34, 36, 45, 88, 104, 129, 132, 133, 149, 166, 168, 169, 179, 192, 201, 207, 209, 212, 214, 216, 217, 220, 451, 453, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 497, 498, 501, 506], "cal": 18, "reg": 18, "xm": [18, 24, 26], "auto": [18, 129, 476, 477], "pattern": [18, 24, 26, 102, 103, 105], "tggc": [18, 24, 26], "104e": [18, 24, 26, 500], "durat": [18, 24, 26, 500], "60060977935791": [18, 24, 26, 500], "8192": [18, 176], "32768": [18, 24, 26, 500], "difflib": 18, "filename_mr": 18, "filename_ct": 18, "tupl": [18, 29, 36, 39, 82, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 126, 129, 132, 138, 140, 143, 148, 154, 157, 201, 217, 220, 221, 442, 476, 479, 488, 505], "forc": [18, 129, 150, 157, 162, 163, 168, 476, 480, 482, 484, 500], "compar": [18, 52, 476, 483, 486, 494, 498, 499], "termin": [18, 24, 25, 26, 37, 141, 158, 172], "newlin": [18, 500], "massag": 18, "form": [18, 32, 45, 47, 48, 49, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 126, 129, 130, 134, 220, 434, 442], "rep": 18, "split": [18, 45, 441, 476, 477, 478], "diff": [18, 498], "104": [18, 19, 20, 225, 273, 274, 275, 276, 277, 329, 332], "plot_dicom_differ": [18, 19], "auto_exampl": 19, "show_charset_nam": [19, 20], "veri": [20, 27, 43, 476, 479, 498, 502, 505], "simpl": [20, 36, 38, 46, 476, 477], "app": 20, "valuerep": [20, 57, 450, 452, 456, 458, 473], "personnameunicod": [20, 57, 476, 491], "default_encod": [20, 442], "iso8859": [20, 155, 158, 191, 457], "dx": 20, "800": 20, "person_nam": 20, "yamada": 20, "tarou": 20, "033": 20, "3ed": 20, "bb": 20, "iso2022_jp": 20, "2008": [20, 442], "ps3": [20, 442], "p98": 20, "wang": 20, "xiaodong": 20, "xcd": 20, "xf5": 20, "x5e": 20, "xd0": 20, "xa1": 20, "xb6": 20, "xab": 20, "gb18030": 20, "j": 20, "105": [20, 49, 225, 330, 332], "xe7": 20, "x8e": 20, "x8b": 20, "xe5": 20, "xb0": 20, "x8f": 20, "xe6": 20, "x9d": 20, "xb1": 20, "utf": 20, "hong": [20, 442], "gildong": [20, 442], "363": 20, "321": 20, "316": 20, "327": 20, "310": 20, "253": 20, "261": 20, "346": [20, 476, 485], "265": 20, "277": [20, 476, 489], "euc_kr": [20, 442], "101": [20, 225, 325, 332], "label": [20, 24, 26, 29, 46, 148], "If": [21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 35, 36, 37, 44, 45, 48, 49, 50, 52, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 91, 94, 95, 98, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 129, 131, 132, 133, 134, 137, 140, 141, 143, 148, 154, 155, 157, 158, 159, 163, 167, 168, 169, 170, 176, 177, 178, 179, 192, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 434, 437, 438, 442, 446, 450, 451, 452, 453, 458, 462, 468, 476, 482, 494, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508], "earlier": [21, 500], "transit": [21, 43], "guid": [21, 29, 34, 38, 45, 129, 473, 476, 488, 494, 499, 500, 505], "easiest": [21, 505], "probabl": [21, 50, 502], "zenodo": 21, "doi": 21, "enter": [21, 507], "citat": 21, "style": [21, 45, 476, 478, 481], "along": [21, 168], "et": 21, "al": 21, "github": [21, 45, 476, 485, 497, 498, 499, 504], "onlin": [21, 45], "yyyi": 21, "dd": 21, "deal": [21, 37, 45, 47, 215, 476, 478, 487, 500, 507], "jpeg": [21, 32, 38, 39, 40, 48, 77, 137, 138, 140, 210, 211, 212, 213, 214, 215, 216, 310, 315, 318, 410, 476, 487, 489, 491, 492, 494, 504, 505], "releas": [21, 45, 473, 485, 489, 492], "march": 21, "2018": [21, 499], "june": 21, "octob": 21, "juli": 21, "2019": 21, "januari": 21, "2020": [21, 43], "mai": [21, 22, 24, 25, 28, 29, 32, 37, 40, 41, 43, 45, 46, 47, 48, 50, 75, 93, 97, 129, 137, 138, 139, 140, 141, 142, 143, 148, 168, 179, 192, 215, 442, 459, 461, 476, 489, 498, 499, 500, 502, 504, 505, 507, 508], "novemb": 21, "august": 21, "2021": 21, "februari": 21, "2022": [21, 473], "reach": [21, 162, 174, 176], "life": 21, "1st": 21, "longer": [21, 45, 52, 79, 126, 212, 476, 486, 487, 489, 492, 494, 502, 507], "more": [21, 22, 24, 25, 27, 29, 32, 34, 36, 37, 38, 39, 40, 41, 47, 48, 49, 97, 126, 129, 137, 139, 140, 141, 143, 148, 158, 162, 168, 171, 176, 179, 180, 194, 216, 442, 446, 476, 477, 478, 479, 481, 482, 489, 498, 499, 500, 501, 502, 504, 505, 507, 508], "recreat": [22, 24, 476, 484], "within": [22, 24, 25, 26, 29, 45, 77, 86, 129, 157, 158, 167, 168, 179, 222, 457, 476, 492, 502, 504, 507, 508], "detail": [22, 24, 32, 36, 37, 38, 48, 50, 91, 126, 129, 158, 222, 473, 476, 494, 498, 499], "review": [22, 24, 497, 498, 499], "than": [22, 23, 24, 25, 26, 27, 31, 32, 34, 39, 40, 45, 47, 50, 52, 126, 129, 139, 140, 141, 143, 157, 162, 168, 171, 179, 180, 194, 201, 216, 434, 476, 477, 478, 479, 484, 485, 486, 489, 491, 494, 500, 501], "export": [22, 24, 37, 476, 494], "includ": [22, 23, 24, 37, 47, 50, 126, 129, 137, 166, 168, 179, 202, 215, 216, 222, 473, 476, 478, 480, 482, 484, 485, 498, 499, 500, 502, 505, 507, 508], "health": [22, 24, 50], "sensit": [22, 24, 49, 50, 129, 468, 508], "git": [22, 24, 25, 498, 499, 504], "util": [22, 24, 48, 50, 60, 61, 62, 65, 67, 473, 476, 477, 484, 485], "main": [22, 23, 24, 35, 36, 44, 45, 50, 116, 476, 479, 498, 499, 500], "instancecreationd": [22, 24], "20030903": [22, 24, 25, 36], "instancecreationtim": [22, 24], "150031": [22, 24, 25, 36], "481": [22, 24, 237, 238, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 390, 391, 406, 407], "sopinstanceuid": [22, 24, 31, 167], "777": [22, 24, 25, 36], "7777": [22, 24, 25, 36], "20030903150023": [22, 24, 25, 36], "20030716": [22, 24, 25, 26, 36], "153557": [22, 24, 26, 36], "prefix": [22, 24, 25, 26, 34, 150, 157, 163, 170, 179, 192, 365, 434, 442, 476, 488, 498, 499, 500, 506, 507], "rather": [22, 24, 25, 26, 45, 47, 50, 126, 129, 168, 179, 201, 476, 477, 478, 485, 489, 491, 494, 500], "In": [22, 23, 24, 25, 29, 34, 36, 39, 45, 48, 50, 73, 168, 217, 476, 484, 490, 492, 498, 499, 500, 502, 505, 507], "wa": [22, 23, 24, 32, 34, 45, 126, 129, 130, 168, 173, 179, 451, 453, 476, 479, 486, 489, 494, 498, 499, 502, 505], "direct": [22, 24, 36, 45, 216, 499, 501, 502], "specifi": [22, 23, 24, 25, 26, 36, 107, 109, 126, 129, 148, 157, 158, 179, 215, 442, 468, 476, 489, 494, 500, 502, 504, 507], "exclude_s": [22, 24], "filespec": [22, 23, 24, 25, 26], "outfil": [22, 24, 500], "argument": [22, 23, 24, 25, 26, 34, 36, 39, 89, 129, 131, 200, 476, 478, 479, 487, 488, 489, 490, 491, 492, 501, 502, 505], "your_fil": [22, 24, 25, 26], "yourplan": [22, 24, 25, 26], "stdout": [22, 24], "messag": [22, 24, 25, 26, 91, 222, 476, 479, 488, 498, 500, 502], "exclud": [22, 24, 25, 26, 50, 129, 202, 216], "binari": [22, 24, 126, 129, 216, 476, 480, 488, 489], "larger": [22, 24, 157, 504, 505], "save_filenam": [22, 24], "otherwis": [22, 24, 29, 32, 36, 85, 94, 95, 113, 114, 118, 119, 123, 124, 125, 126, 129, 130, 137, 148, 155, 168, 170, 171, 174, 175, 199, 206, 207, 208, 216, 410, 442, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 461, 462, 464, 465], "_from_codifi": [22, 24], "dummi": [22, 24], "error": [22, 24, 50, 52, 73, 83, 84, 93, 126, 129, 131, 441, 446, 473, 476, 479, 480, 483, 485, 486, 487, 488, 489, 491, 492, 498, 500, 507], "savenam": [22, 24], "dicomfil": [22, 24, 67], "pythoncod": [22, 24], "By": [22, 24, 48, 166, 168, 476, 480, 500, 507], "translat": [22, 24, 36, 476, 485], "whole": [22, 24, 155, 202, 216, 505], "fractiongroupsequ": [22, 24, 25, 26], "non": [22, 24, 27, 36, 37, 106, 107, 108, 109, 124, 126, 127, 129, 133, 140, 166, 168, 179, 192, 215, 216, 225, 446, 448, 451, 453, 459, 461, 476, 480, 481, 485, 486, 487, 488, 489, 492, 500], "fractiongroupnumb": [22, 24], "numberoffractionsplan": [22, 24], "numberofbeam": [22, 24], "numberofbrachyapplicationsetup": [22, 24], "referenc": [22, 24, 25, 26, 34, 36, 161, 167, 168, 502], "refd_beam_sequ": [22, 24], "referencedbeamsequ": [22, 24], "refd_beam1": [22, 24], "beamdosespecificationpoint": [22, 24], "239": [22, 24, 25, 26, 36], "531250000000": [22, 24, 25, 26], "751": [22, 24, 25, 26], "87000000000": [22, 24, 25, 26], "accept": [22, 24, 27, 37, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 126, 129, 131, 143, 476, 491, 492, 494, 498], "issu": [22, 24, 26, 38, 43, 45, 50, 52, 73, 74, 76, 84, 476, 479, 480, 481, 482, 483, 488, 497, 498, 507], "toward": [22, 24], "loop": [22, 24, 50], "develop": [23, 24, 25, 37, 476, 485, 498, 499], "subcommand": [23, 24, 25, 476, 494], "entri": [23, 24, 25, 36, 48, 106, 107, 108, 109, 116, 117, 476, 478, 495, 498, 499], "packag": [23, 24, 25, 38, 40, 42, 44, 46, 94, 202, 210, 211, 212, 213, 214, 215, 468, 476, 477, 480, 485, 492, 494, 498, 500, 502, 504], "setup": [23, 24, 25, 26, 38, 476, 483, 484], "regist": [23, 24, 126, 410, 476, 492, 500], "command1": [23, 24], "command2": [23, 24], "setuptool": [23, 24, 476, 477, 484, 494, 507], "yourpackag": [23, 24], "variou": [23, 24, 476, 477], "entry_point": [23, 24], "pydicom_subcommand": [23, 24], "command1modul": [23, 24], "add_subpars": [23, 24], "command2modul": [23, 24], "liter": [23, 24], "must": [23, 24, 29, 31, 32, 36, 37, 39, 47, 48, 82, 85, 129, 132, 137, 138, 143, 157, 166, 168, 171, 173, 175, 179, 201, 202, 203, 207, 208, 216, 447, 476, 494, 500, 501, 502, 505, 507, 508], "wish": [23, 24, 37, 216], "usual": [23, 24, 25, 26, 31, 36, 41, 48, 107, 130, 134, 150, 155, 476, 479, 498, 500, 504, 505], "convent": [23, 24, 36, 442], "singl": [23, 24, 27, 29, 31, 34, 75, 106, 108, 126, 129, 137, 139, 141, 143, 146, 148, 165, 166, 168, 197, 198, 201, 202, 214, 215, 216, 453, 462, 476, 477, 487, 495, 498, 501, 502], "subpars": [23, 24], "do_command": [23, 24], "filespec_help": [23, 24], "filespec_pars": [23, 24], "sub": [23, 24], "parser": [23, 24], "add_pars": [23, 24], "subcommandnam": [23, 24], "add_argu": [23, 24], "set_default": [23, 24], "func": [23, 24, 499], "And": [23, 24, 25, 26, 94, 476, 492, 498, 499, 500, 507, 508], "arg": [23, 24, 129, 131, 150, 151, 152, 153, 154, 220, 435, 439, 442, 444, 476, 480], "element_v": [23, 24], "yourarg": [23, 24], "argpars": [23, 24], "snippet": [23, 24], "element_valu": [23, 24], "pair": [23, 24, 131, 168], "codifi": [23, 25, 42, 476, 484, 486, 494], "filetyp": [23, 24], "yourself": [23, 24, 47, 48], "shown": [23, 24, 26, 36, 41, 50, 52, 216, 476, 477, 478, 491, 500, 502, 507], "relat": [23, 24, 25, 32, 37, 47, 49, 55, 129, 132, 179, 202, 212, 214, 215, 468, 476, 477, 498, 502, 508], "think": [23, 24], "consid": [23, 24, 43, 50, 129, 216, 498, 499, 501], "contribut": [23, 24, 476, 479, 482, 483, 503], "case": [23, 24, 36, 37, 39, 43, 45, 50, 52, 73, 75, 81, 129, 157, 158, 442, 476, 488, 492, 500, 501, 505, 507, 508], "under": [23, 24, 36, 137, 138, 476, 477, 479, 485, 498, 499, 504], "pull": [23, 24, 26, 497, 504], "request": [23, 24, 26, 36, 476, 492, 494, 497], "v2": [24, 25, 31, 43, 476, 492, 504, 508], "offer": [24, 25, 39, 48, 129, 505], "explor": [24, 25, 41], "156": [24, 25, 36], "rt": [24, 25, 26, 36, 166, 168, 502], "plan": [24, 25, 26, 36, 38, 43, 166], "999": [24, 25, 36, 476, 489], "99": [24, 25, 36, 40, 212, 225, 260, 413], "9999": [24, 25, 36, 499], "implicit": [24, 25, 36, 40, 86, 129, 130, 134, 155, 158, 168, 179, 212, 410, 457, 476, 479, 486, 488, 494, 505], "888": [24, 25, 36], "88": [24, 25, 36, 223, 230, 243, 244, 248, 249, 282, 286, 289, 301, 320, 336, 357, 358, 359, 361, 386, 396, 432, 476, 480], "replic": [24, 25], "exactli": [24, 25, 47, 49, 500], "notat": [24, 25, 26, 446, 500], "0071": [24, 25, 26], "fraction": [24, 25, 26], "0078": [24, 25, 26], "00a0": [24, 25, 26], "brachi": [24, 25, 26], "300c": [24, 25, 26], "0082": [24, 25, 26], "dose": [24, 25, 26, 166, 168, 476, 482, 502], "0275401": [24, 25, 26], "meterset": [24, 25, 26], "0036697": [24, 25, 26], "0006": [24, 25, 26, 32, 129, 212, 214, 215, 216], "simpli": [24, 25, 36, 45, 47], "particular": [24, 25, 36, 39, 47, 48, 86, 161, 476, 479, 489, 500, 506], "q": [24, 25, 26, 498], "quiet": [24, 25, 26], "automat": [24, 25, 34, 36, 39, 41, 45, 47, 48, 50, 95, 126, 168, 437, 438, 476, 485, 489, 491, 494, 498, 499, 500], "environ": [24, 25, 37, 476, 477, 492, 498, 499, 503, 504], "variabl": [24, 25, 34, 35, 36, 37, 476, 488, 492, 507], "clone": [24, 25, 498, 499, 504], "repositori": [24, 25, 46, 104, 504], "repeat": [24, 25, 47, 116, 119, 123, 124, 168, 476, 487, 500], "reinstal": [24, 25], "similar": [24, 25, 34, 130, 196, 476, 478, 482, 501, 506, 507], "pipe": [24, 25], "grep": [24, 25], "either": [24, 25, 32, 36, 37, 44, 95, 126, 129, 157, 163, 168, 179, 202, 216, 220, 442, 450, 458, 476, 492, 499, 500, 502, 504, 505, 507], "iso": [24, 25, 209, 216, 310, 315, 318, 476, 489], "741": [24, 25], "organ_at_risk": [24, 25], "deliveri": [24, 25], "maximum": [24, 25, 32, 50, 126, 137, 138, 148, 170, 476, 496], "002c": [24, 25], "organ": [24, 25, 442], "risk": [24, 25], "ptv": [24, 25], "target": [24, 25, 34, 45], "0026": [24, 25], "prescript": [24, 25], "826203": [24, 25], "00b0": [24, 25], "00b6": [24, 25], "0111": [24, 25], "control": [24, 25, 44, 81, 82, 99, 100, 476, 482, 502], "0115": [24, 25], "rate": [24, 25], "650": [24, 25], "011a": [24, 25], "010c": [24, 25], "cumul": [24, 25], "0051": [24, 25], "9990268": [24, 25], "0180": [24, 25], "regular": [24, 25, 36], "express": [24, 25], "abil": [24, 25, 48, 476, 484, 485, 492], "alreadi": [24, 26, 31, 33, 34, 39, 48, 73, 107, 129, 133, 141, 169, 173, 192, 201, 216, 436, 476, 484, 500, 502, 505, 508], "present": [24, 26, 47, 76, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 129, 130, 133, 140, 141, 142, 143, 148, 150, 157, 163, 166, 168, 169, 179, 192, 203, 204, 205, 206, 207, 208, 216, 476, 478, 486, 488, 489, 500, 508], "nest": [24, 26, 36, 129, 476, 483], "minim": [24, 26, 179, 192], "below": [24, 26, 27, 31, 36, 39, 41, 169, 179, 202, 212, 214, 215, 216, 468, 476, 479, 502, 505, 506], "bitsstor": [24, 26, 212, 214, 216], "pre": [24, 26, 36, 38, 45, 498], "id00001": [24, 26], "study1": [24, 26], "plan1": [24, 26], "02754010000000": [24, 26], "003669700000": [24, 26], "treatment": [24, 26], "static": [24, 26, 131, 148], "photon": [24, 26], "energi": [24, 26], "00000000000000": [24, 26], "coll": [24, 26], "couch": [24, 26], "wedg": [24, 26], "boli": [24, 26], "those": [24, 26, 29, 33, 37, 41, 45, 476, 479, 482, 492, 500, 502], "extra": [24, 26, 36, 507], "submit": [24, 26, 38, 476, 482, 497, 498, 499], "interfac": [25, 33, 476, 494, 504], "introduct": [26, 29, 35, 42, 498, 499, 502, 503, 508], "anyth": [27, 41, 47, 48, 154, 216], "ascii": [27, 171, 197, 476, 488], "decim": [27, 78, 99, 436, 437, 438, 440, 446, 447, 476, 482, 483, 494], "sign": [27, 29, 32, 48, 77, 148, 476, 492, 498, 499, 508], "unsign": [27, 29, 32, 48, 143, 148, 154, 476, 492, 508], "integ": [27, 29, 32, 48, 143, 216, 434, 440, 476, 480, 482, 492, 508], "depth": [27, 35, 46, 48, 169, 476, 489, 504], "even": [27, 41, 47, 137, 139, 141, 157, 163, 216, 476, 492, 500, 502, 505], "encod": [27, 32, 33, 35, 39, 40, 48, 49, 52, 73, 74, 75, 76, 126, 127, 129, 130, 137, 138, 139, 140, 141, 144, 145, 155, 158, 164, 165, 168, 179, 186, 190, 192, 194, 195, 196, 198, 215, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 473, 476, 482, 485, 486, 487, 488, 489, 494, 495, 500, 501, 505], "correctli": [27, 50, 94, 95, 134, 168, 179, 210, 211, 476, 479, 482, 485, 486, 488, 489, 492, 494, 495, 498], "empti": [27, 126, 129, 130, 134, 140, 142, 143, 216, 217, 437, 438, 442, 462, 476, 477, 485, 488, 489, 490, 491, 492, 494, 500, 502, 508], "multivalu": [27, 57, 79, 197, 198, 217, 441, 449, 450, 451, 452, 453, 456, 464, 467, 476, 482], "accord": [27, 50, 157, 190, 500], "od": [27, 476, 485, 486, 494], "OF": [27, 476, 491], "ol": [27, 476, 485, 486, 494], "st": [27, 38], "un": [27, 52, 87, 155, 189, 460, 476, 477, 489, 491, 494, 495, 500], "ur": [27, 461], "ut": 27, "never": [27, 78, 129, 498], "greater": [27, 32, 129, 139, 141, 216, 434, 476, 485, 501], "hint": 27, "union": [27, 73, 75, 104, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 126, 127, 129, 130, 131, 134, 148, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 168, 176, 179, 180, 190, 191, 199, 200, 203, 216, 220, 436, 437, 438, 440, 441, 442, 446, 448, 449, 450, 451, 452, 453, 456, 458, 459, 462, 464, 466, 467], "mutablesequ": [27, 73, 127, 129, 155, 158, 164, 165, 441, 448, 449, 450, 451, 452, 453, 456, 458, 459, 462, 464, 466, 467], "AT": [27, 449, 476, 489, 494], "attribut": [27, 41, 81, 94, 126, 128, 129, 130, 131, 134, 147, 148, 151, 153, 154, 167, 168, 169, 179, 217, 219, 410, 435, 437, 438, 439, 440, 442, 444, 445, 476, 477, 487, 492, 495, 496, 500, 502], "basetag": [27, 36, 57, 82, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 126, 128, 129, 130, 131, 132, 154, 155, 157, 158, 162, 168, 172, 174, 175, 176, 220, 221, 222, 449, 465, 476, 479, 494], "dsfloat": [27, 57, 436, 451, 476, 494], "dsdecim": [27, 57, 85, 436, 451, 476, 494], "doubl": [27, 34, 48, 129, 212, 216, 476, 489], "ov": [27, 476, 489, 494], "word": [27, 34, 50, 107, 185, 442, 500], "personnam": [27, 57, 126, 443, 456, 476, 477, 488, 491, 492, 494], "short": [27, 45, 154, 498, 500], "sv": [27, 468, 476, 489], "uc": [27, 466, 476, 485], "unlimit": 27, "identifi": [27, 37, 41, 50, 188], "uri": [27, 129, 476, 492, 501], "url": [27, 34, 94], "uv": [27, 468, 476, 489], "config": [27, 37, 464, 473, 476, 482, 487, 488, 489, 491, 492, 494], "datetime_convers": [27, 450, 452, 458, 473], "use_ds_decim": [27, 79, 451, 473, 476, 491], "rlelosslessencod": [28, 29, 31, 473, 476, 494], "byteord": [28, 29, 508], "src": [28, 29, 148, 216, 502, 505], "cover": [29, 500, 502, 505, 508], "intend": [29, 31, 32, 129, 134, 148, 498], "provid": [29, 35, 36, 41, 48, 94, 95, 126, 129, 148, 202, 212, 214, 215, 468, 476, 483, 501, 504, 505, 506], "mechan": [29, 148], "raw": [29, 36, 47, 48, 49, 127, 128, 129, 146, 148, 155, 159, 166, 468, 476, 482, 488, 491, 508], "unencod": [29, 148], "least": [29, 32, 502], "convers": [29, 31, 32, 45, 90, 126, 202, 212, 214, 215, 468, 476, 478, 488, 489, 491, 501, 508], "signatur": [29, 476, 492], "foo": 29, "kwarg": [29, 129, 131, 148, 151, 152, 153, 154, 168, 435, 439, 442, 444, 505], "multi": [29, 40, 48, 57, 79, 126, 129, 137, 140, 141, 142, 143, 148, 168, 201, 202, 216, 461, 473, 476, 485, 487, 489, 491, 500, 508], "support": [29, 37, 42, 45, 67, 68, 77, 94, 95, 129, 148, 168, 202, 203, 209, 210, 211, 212, 213, 214, 215, 216, 220, 468, 476, 477, 485, 486, 487, 488, 489, 491, 492, 494, 495, 502, 503, 504, 505, 506], "minimum": [29, 31, 192], "transfer_syntax_uid": [29, 129], "samples_per_pixel": [29, 148], "grayscal": [29, 31, 32, 48], "rgb": [29, 31, 32, 39, 48, 95, 203, 209, 210, 211, 212, 213, 214, 215, 216, 476, 486, 489, 494, 505], "number_of_fram": [29, 148], "bits_alloc": [29, 148, 216], "bits_stor": [29, 148], "12": [29, 32, 49, 148, 212, 284, 285, 381, 431, 433, 502, 508], "4095": [29, 32, 148], "65535": [29, 148, 502], "pixel_represent": [29, 148], "complement": [29, 32, 35, 148], "photometric_interpret": [29, 148], "color": [29, 31, 32, 39, 42, 148, 203, 209, 216, 476, 489, 491, 505], "ybr_full": [29, 31, 32, 48, 148, 209, 212, 214, 216, 476, 489, 495], "At": [29, 498, 506], "is_avail": [29, 94, 95, 148, 202, 210, 211, 212, 213, 214, 215, 468, 476, 487], "bool": [29, 52, 78, 79, 91, 93, 99, 104, 113, 114, 123, 124, 126, 128, 129, 130, 133, 134, 137, 143, 148, 154, 155, 156, 157, 158, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 192, 199, 202, 207, 209, 210, 211, 212, 213, 214, 215, 216, 219, 410, 436, 437, 438, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 464, 465, 468], "met": [29, 162, 202, 210, 211, 212, 213, 214, 215, 468, 476, 487], "encoder_depend": [29, 148], "rlelossless": [29, 31, 39, 129, 498, 505], "jpeg2000": [29, 40, 140, 476, 487, 489], "pillow": [29, 40, 129, 213, 476, 485, 487, 489, 491, 494, 498], "imagecodec": 29, "gdcm": [29, 31, 39, 40, 129, 147, 210, 476, 479, 485, 488, 492, 494, 495, 505], "add_plugin": [29, 148], "plugin_label": 29, "my_encoder_func": 29, "my_packag": 29, "my_encod": 29, "rle": [30, 32, 39, 40, 48, 129, 137, 138, 140, 147, 149, 214, 215, 216, 367, 476, 487, 488, 494, 495, 504, 505], "lossless": [30, 32, 39, 40, 48, 129, 137, 138, 140, 147, 149, 214, 215, 216, 476, 491, 494, 495, 505], "plugin": [30, 39, 40, 129, 147, 148, 214, 476, 494, 495, 497, 504, 505], "underli": 31, "algorithm": [31, 434], "packbit": 31, "scheme": [31, 155, 456, 457, 463, 466, 467, 506, 508], "explan": 31, "relationship": [31, 168, 499], "glossari": [31, 33], "palett": [31, 32, 42, 103, 166, 168, 203, 216, 476, 489, 491], "intens": [31, 32], "black": 31, "index": [31, 36, 48, 49, 129, 148, 168, 169, 170, 201, 206, 207, 208, 216, 468, 476, 492, 499, 508], "red": [31, 32, 203, 216, 476, 491, 498, 499], "green": [31, 32, 476, 491], "blue": [31, 32, 476, 491], "lookup": [31, 48, 110, 111, 112, 114, 115, 125, 203, 204, 205, 206, 207, 216, 476, 492, 500], "noth": [31, 502], "equal": [31, 32, 139, 141, 476, 486, 487, 488], "ycbcr": [31, 32, 210, 211, 212, 213, 214, 215], "keep": [31, 168, 502, 504], "mind": 31, "lossi": [31, 40, 140, 216], "inclus": [31, 32], "downscal": 31, "accordingli": [31, 129], "made": [31, 45, 129, 139, 140, 168, 476, 478, 479, 491, 498, 499, 502], "might": [31, 41, 148, 508], "ask": [31, 38, 497, 498, 499, 507], "why": [31, 45, 505], "vice": [31, 203, 216], "versa": [31, 203, 216], "answer": [31, 497, 500, 505], "higher": [31, 33, 476, 479, 501, 507], "befor": [31, 40, 45, 88, 126, 129, 157, 169, 176, 201, 207, 208, 216, 476, 479, 482, 483, 485, 488, 498, 499, 500, 502, 505, 507, 508], "decis": [31, 45], "known": [31, 32, 36, 37, 41, 48, 52, 81, 93, 126, 127, 129, 203, 216, 221, 476, 486, 489, 491, 492, 494, 500, 506], "20x": [31, 39, 476, 494], "slower": [31, 39, 216], "pylibjpeg": [31, 39, 40, 129, 147, 148, 214, 476, 492, 494, 505], "place": [31, 32, 39, 40, 129, 179, 476, 485, 500, 502], "samplesperpixel": [31, 212, 214, 215, 216, 476, 482, 487, 505], "bitsalloc": [31, 40, 126, 212, 214, 215, 216, 476, 487], "pixelrepresent": [31, 212, 214, 215, 216, 476, 488], "us1_uncr": 31, "921600": 31, "424152": 31, "pixel_data_handl": [31, 47, 48, 129, 469, 473, 476, 487, 494], "convert_color_spac": [31, 48, 216, 473, 476, 494], "ybr": [31, 48, 476, 494], "187460": 31, "compon": [32, 40, 77, 140, 169, 171, 214, 216, 442, 476, 477, 479, 494], "previous": [32, 159, 476, 487, 491, 494], "constrain": 32, "iod": [32, 216, 502, 508], "remain": [32, 45, 141, 168, 476, 482, 499], "hand": [32, 50, 476, 492], "ybr_rct": [32, 39, 214, 505], "whether": [32, 36, 79, 100, 126, 129, 143, 447, 476, 479, 482, 487, 489, 494, 497, 498, 504], "transform": [32, 48], "prior": [32, 39, 141, 505], "taken": [32, 45, 216], "account": 32, "doesn": [32, 47, 81, 129, 202, 212, 215, 476, 491, 498, 505], "determin": [32, 36, 47, 126, 129, 168, 204, 205, 216, 502, 508], "invers": 32, "ybr_full_422": [32, 48, 209, 212, 214, 216, 476, 489, 495], "ybr_partial_420": 32, "ybr_ict": [32, 214], "restrict": 32, "further": [32, 502, 506], "constraint": [32, 437, 438, 446], "planar": [32, 48, 129, 216, 476, 487], "r1": 32, "g1": 32, "b1": 32, "r2": 32, "g2": 32, "b2": 32, "rn": 32, "gn": 32, "bn": 32, "contigu": 32, "typic": [32, 93, 135, 505], "32": [32, 129, 132, 138, 143, 212, 215, 216, 468, 476, 486, 494, 508], "being": [32, 101, 110, 111, 112, 114, 115, 118, 120, 121, 122, 125, 129, 141, 148, 215, 476, 477, 487, 494, 495, 502, 504, 505], "mean": [32, 40, 215, 434, 498, 500, 502, 505, 506, 507], "chapter": 32, "mani": [32, 37, 46, 48, 137, 138, 476, 478, 482, 483, 497], "most": [32, 36, 37, 40, 45, 46, 50, 82, 476, 479, 482, 483, 500, 502, 505, 506], "signific": [32, 37, 448, 459, 461, 476, 479], "past": [32, 141, 163, 192], "describ": [32, 36, 40, 50, 106, 108, 126, 129, 442, 501, 502], "familiar": [33, 34, 500, 502, 505, 508], "document": [33, 37, 129, 148, 166, 480, 485, 486, 497, 503], "reader": 34, "unfamiliar": 34, "step": [34, 476, 483, 494, 502, 506, 508], "achiev": [34, 139], "advanc": [34, 148], "understand": [34, 36, 498, 508], "aim": [34, 476, 492], "explain": 34, "subject": [34, 501, 506], "fairli": 34, "technic": [34, 35], "api": [34, 148, 476, 486, 498, 501, 505, 506], "learn": [34, 38, 498, 502, 507], "remind": 34, "about": [34, 36, 37, 38, 46, 48, 50, 91, 216, 500, 502, 505, 507, 508], "italic": 34, "lowercas": 34, "uppercas": [34, 126], "capit": [34, 476, 482], "american": 34, "english": 34, "spell": [34, 73, 476, 487], "comma": 34, "ital": 34, "seq": [34, 179, 500], "datael": [34, 41, 42, 47, 57, 75, 127, 129, 130, 131, 155, 158, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 197, 198, 210, 476, 477, 485, 486, 487, 488, 491, 495, 500], "gender": 34, "neutral": 34, "pronoun": 34, "hypothet": 34, "tick": 34, "markup": [34, 499], "0xb4": 34, "built": [34, 504], "pass": [34, 36, 39, 47, 48, 89, 102, 103, 105, 129, 131, 137, 138, 201, 476, 479, 498, 499, 502, 505, 507], "fragments_per_fram": [34, 137], "haven": [34, 498, 500], "docstr": [34, 498], "proper": [34, 476, 479], "noun": 34, "wrap": [34, 36, 179], "unless": [34, 157, 162, 169, 476, 480, 491, 502], "good": [34, 45, 50, 498, 499], "reason": [34, 45, 499, 507], "link": [34, 499], "attr": 34, "ndarrai": [34, 36, 40, 47, 48, 49, 77, 79, 94, 95, 101, 129, 148, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 451, 453, 468, 476, 485, 489, 492, 505, 508], "dtype": [34, 36, 47, 48, 49, 129, 148, 214, 216, 505], "chtml": 34, "part05": [34, 499], "sect_6": 34, "html": [34, 499], "nema": 34, "org": [34, 46, 501], "four": [34, 95, 168, 176], "five": [34, 442], "sparingli": 34, "featur": [34, 37, 476, 484, 497, 498], "versionad": 34, "versionchang": 34, "handler": [34, 39, 40, 48, 77, 91, 94, 95, 129, 148, 202, 210, 211, 212, 213, 214, 215, 216, 468, 473, 476, 485, 487, 489, 490, 491, 492, 494, 495, 498, 501, 505], "intermedi": [35, 36], "core": [35, 42], "mostli": [36, 128], "behav": [36, 37, 109, 201, 476, 486, 488, 502], "via": [36, 39, 52, 126, 129, 214, 476, 485, 487, 492, 494, 495, 501, 502, 505], "entir": [36, 129, 157, 161, 210, 214, 498, 500, 505], "collaps": [36, 47], "dcm_qt_tree": [36, 476, 483, 484], "0x10": [36, 126, 129, 220], "squar": [36, 41, 500], "bracket": [36, 41, 500], "conveni": [36, 41, 48, 126, 476, 492, 501], "cannot": [36, 40, 82, 168, 201, 446, 476, 494, 498, 502, 507], "retriev": [36, 110, 111, 112, 115, 116, 117, 118, 120, 121, 122, 125, 126, 129, 476, 489, 500, 501], "member": 36, "numer": [36, 168, 170, 462, 476, 480, 489, 494, 496], "begin": [36, 98, 137, 163], "beam1": 36, "thing": [36, 45, 47, 499, 500], "harder": 36, "realli": [36, 45, 476, 479, 488], "0x300a": 36, "0xb0": 36, "0xc2": 36, "rememb": [36, 41, 47, 507], "exact": [36, 437, 438, 440], "handi": 36, "dir": [36, 38, 129, 476, 482, 495, 499, 506], "dure": [36, 41, 107, 476, 495, 498, 499], "session": [36, 37, 38, 41, 129, 499], "prompt": [36, 507], "pat": 36, "patientsetupsequ": [36, 38], "patientsex": [36, 129], "anywher": [36, 500], "insensit": [36, 129], "_dicom_dict": 36, "necessari": [36, 37, 46, 139, 141, 442, 502, 507, 508], "add_dict_entri": [36, 109, 476, 485, 488], "similarli": [36, 436, 500], "add_private_dict_entri": [36, 476, 488], "hood": 36, "offici": [36, 110, 111, 112, 113, 114, 115, 116, 123, 124, 125, 126, 410, 476, 482, 483, 500, 508], "reload": 36, "0x0010": [36, 129, 220, 500], "softwarevers": 36, "0x0018": 36, "0x1020": 36, "pixel_byt": 36, "175": 36, "166": 36, "203": 36, "207": 36, "216": 36, "186": 36, "183": 36, "157": 36, "181": 36, "184": 36, "171": 36, "152": 36, "164": 36, "235": 36, "906": 36, "910": 36, "923": 36, "922": 36, "929": 36, "927": 36, "914": 36, "954": 36, "938": 36, "942": [36, 476, 489], "925": [36, 500], "905": [36, 48], "959": 36, "916": [36, 476, 479], "911": 36, "904": 36, "909": 36, "int16": [36, 48, 49, 508], "extens": [36, 75, 130, 476, 487, 494], "effect": [36, 141, 434], "behavior": [36, 37, 52, 81, 82, 93, 129, 476, 483, 487, 491, 492], "enforc": [36, 42, 201, 217, 476, 482], "fit": [36, 476, 486], "expect": [36, 45, 202, 210, 212, 215, 216, 476, 486, 488, 492, 498], "t1": 36, "0x00100010": [36, 126, 129], "equival": [36, 129, 216, 476, 486], "t2": 36, "t3": 36, "t4": 36, "portion": 36, "is_priv": [36, 126, 167, 219, 410, 476, 485], "odd": [36, 129, 132, 202, 216, 219, 476, 486, 495, 500], "prettier": 36, "select": [36, 129, 140], "There": [37, 44, 45, 46, 48, 476, 487, 498, 499, 500, 501, 508], "strict": [37, 476, 489], "against": [37, 126, 168, 476, 481, 492], "turn": [37, 91, 158, 476, 492], "enabl": [37, 90, 129], "reading_validation_mod": [37, 52, 73, 74, 76, 92, 127, 129, 134, 476, 495], "writing_validation_mod": [37, 52, 76, 476, 495], "newli": [37, 129, 476, 491], "As": [37, 40, 45, 500, 506], "suggest": [37, 497, 498, 499], "except": [37, 41, 47, 48, 52, 73, 81, 82, 83, 94, 95, 150, 166, 168, 192, 201, 222, 473, 476, 479, 481, 484, 485, 488, 489, 492, 494, 495, 498, 500, 502, 505], "special": [37, 57, 473, 476, 483], "avoid": [37, 101, 158, 176, 436, 476, 488, 489, 492, 502], "invalid": [37, 52, 73, 74, 82, 86, 87, 133, 434, 476, 488, 492, 494, 496], "legaci": 37, "strictli": [37, 46], "adher": 37, "guarante": [37, 40, 41], "predefin": 37, "That": [37, 41], "local": [37, 104, 476, 495, 498, 499, 500, 504, 507], "balanc": 37, "evolut": 37, "break": [37, 45, 476, 492, 502], "sometim": [37, 476, 487], "improv": [37, 476, 483, 486, 487, 494, 497], "protect": 37, "upcom": [37, 93], "compat": [37, 39, 45, 179, 476, 479, 480, 482, 483, 484, 485], "next": [37, 41, 93, 129, 158, 168, 169, 476, 479, 492, 502, 508], "simplest": [37, 502, 504], "pydicom_futur": [37, 476, 492], "temporarili": 37, "future_behavior": [37, 473, 476, 492], "again": [37, 38, 50, 498, 502, 507], "anoth": [37, 209, 216, 476, 492, 500, 505, 507], "txt": [37, 45, 500], "virtual": [37, 498, 499, 503, 504], "brief": 38, "overview": [38, 502], "pure": 38, "report": [38, 476, 489, 497, 503], "radiotherapi": [38, 166], "easi": [38, 48], "complex": [38, 48], "natur": 38, "supin": 38, "prone": 38, "0182": 38, "01b2": 38, "techniqu": 38, "patientposit": 38, "hfp": 38, "rtplan2": 38, "server": [38, 499], "pynetdicom": 38, "primarili": [38, 476, 480], "design": [38, 50, 506], "let": [38, 39, 476, 489, 498, 499, 500, 502, 505, 507], "wherev": 38, "alter": [38, 50], "intellig": 38, "decompress": [38, 39, 40, 129, 213, 476, 485, 489, 504, 505], "onc": [38, 39, 79, 107, 109, 498, 499, 505, 506], "kind": [38, 41], "discuss": [38, 45, 498, 502], "give": [38, 160, 446, 476, 478, 479, 500, 505], "feedback": [38, 476, 483], "tracker": [38, 497, 498], "major": [38, 42, 45, 93, 492], "fix": [38, 43, 158, 484, 497, 498, 500], "announc": [38, 94, 95], "ll": [39, 498, 499, 500, 505, 507, 508], "reli": [39, 40, 77], "separ": [39, 98, 126, 129, 137, 138, 442, 476, 479, 480, 505, 507], "encapsul": [39, 48, 129, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 473, 476, 477, 487, 492], "amount": [39, 129, 210, 505, 508], "too": [39, 129, 132, 179, 476, 486, 488, 489, 497], "extend": [39, 40, 129, 137, 138, 201, 217, 476, 492, 505], "relev": [39, 45, 179, 498], "encap": [39, 166, 473, 476, 485, 487, 505], "encapsulate_extend": [39, 137, 476, 492, 505], "jpeg2000lossless": [39, 505], "third_party_compression_func": [39, 505], "appropri": [39, 47, 48, 129, 163, 179, 201, 214, 467, 505], "ct_small_compressed_bas": [39, 505], "extendedoffsett": [39, 138, 505], "extendedoffsettablelength": [39, 138, 505], "ct_small_compressed_ext": [39, 505], "nativ": [39, 413, 505], "ct_small_rl": [39, 129, 505], "encoding_plugin": [39, 129, 148, 505], "Will": [39, 107], "implicitli": [39, 505], "done": [39, 498, 499, 500, 505, 507], "explicitli": [39, 47, 48, 85, 476, 487, 494, 502, 505], "us1_j2kr": [39, 505], "us1_rl": 39, "j2k": 39, "abl": [40, 41, 45, 476, 491, 501, 502, 505, 508], "ideal": 40, "jpeg_l": [40, 129, 211, 476, 485], "libjpeg": [40, 504], "openjpeg": [40, 504], "capac": 40, "mention": [40, 500, 507], "Be": 40, "verifi": [40, 476, 482], "purpos": 40, "far": [40, 126], "ls": [40, 140, 216, 315, 476, 487, 504], "deflat": [40, 212, 410, 476, 491], "57": [40, 140, 216, 225, 316, 318, 476, 487, 492], "sv1": [40, 216, 476, 491], "70": [40, 140, 216, 225, 301, 317, 318, 476, 491, 492], "81": [40, 49, 140, 216, 225, 314, 315, 351, 476, 480], "92": [40, 140, 225, 309, 310, 476, 486, 487], "93": [40, 49, 140, 225, 308, 310, 476, 481, 487], "jpegimageplugin": 40, "jpeg2kimageplugin": 40, "5x": [40, 476, 494], "faster": [40, 476, 479, 491, 494], "adapt": [40, 476, 487], "well": [41, 48, 50, 168, 179, 203, 216, 476, 479, 480, 482, 489, 498, 500, 504], "v1": [41, 43, 476, 486, 487, 488, 508], "easier": [41, 45, 130, 499, 507], "outlin": 41, "ct_filenam": 41, "ial": 41, "preced": 41, "reserv": 41, "thu": [41, 476, 477], "necessarili": [41, 47], "enclos": 41, "clear": [41, 126, 129, 168], "0x00091001": 41, "privateblock": [41, 129, 473], "private_block": [41, 129], "0x0009": 41, "0x01": [41, 129], "compani": 41, "accomplish": 41, "0x000b": 41, "add_new": [41, 129, 132, 500], "000b": 41, "0x02": 41, "lut": [42, 46, 203, 204, 205, 206, 207, 208, 216, 476, 489, 491, 492, 494], "voi": [42, 206, 207, 208, 216, 476, 489, 492], "overlai": [42, 94, 129, 216, 469, 473, 476, 489, 492, 500], "overlay_arrai": [42, 94, 129, 476, 489], "handl": [42, 48, 50, 73, 95, 126, 129, 175, 193, 441, 469, 476, 477, 480, 482, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 500, 501, 504], "precondit": 42, "third": [42, 442, 504, 507], "parti": [42, 442, 504, 507], "pil": [42, 476, 479, 487], "wxpython": [42, 476, 479], "best": 42, "practic": [42, 45, 168], "futur": [42, 93, 129, 148, 476, 482, 492, 506], "proof": [42, 93], "drop": [43, 129, 476, 491, 492], "april": 43, "backport": 43, "seriou": 43, "speak": 43, "encourag": [43, 476, 482], "earli": 43, "common": [44, 49, 50, 73, 476, 487, 502, 508], "fileread": [44, 45, 67, 199, 473, 499, 500], "fine": 44, "read_parti": [44, 67, 157, 199, 500], "preexist": 44, "vs": [45, 476, 488], "often": [45, 46, 48, 107, 501], "previou": [45, 50, 169, 170, 476, 482, 485, 491, 492, 507], "sever": [45, 46, 52, 476, 483, 485], "backward": [45, 476, 479, 485, 507], "incompat": [45, 476, 479, 485, 507], "renam": [45, 476, 477, 485, 491], "caus": [45, 446, 476, 478, 502], "confus": 45, "sens": [45, 476, 479], "engin": 45, "wasn": 45, "lightli": 45, "great": 45, "leap": 45, "rest": [45, 476, 495, 499], "smooth": 45, "old": [45, 476, 477, 478, 482, 485, 491, 507], "pypi": [45, 476, 485, 487, 504], "co": [45, 129, 508], "alongsid": 45, "uninstal": [45, 507], "becom": [45, 93, 476, 482, 492, 498, 499, 502, 507], "instruct": [45, 498, 499, 500], "hope": 45, "peopl": [45, 502], "page": [45, 476, 485, 488, 497, 498, 499, 504], "welcom": 45, "hopefulli": 45, "quickli": [45, 161, 502], "importerror": [45, 210, 211, 213, 451, 453, 476, 493, 498], "traceback": [45, 82, 222, 500, 502, 505], "recent": [45, 82, 498, 499, 500, 502, 505], "stdin": [45, 82, 500, 502, 505], "choic": [45, 502], "look": [45, 50, 498, 499, 500, 507], "continu": [45, 136, 476, 477, 494, 507], "apart": 45, "dictionaryvm": 45, "dictionary_vm": 45, "dictionaryvr": 45, "dictionary_vr": [45, 500], "private_dictionaryvm": 45, "private_dictionary_vm": 45, "private_dictionaryvr": 45, "private_dictionary_vr": 45, "read_fil": [45, 476, 478, 479, 480, 485, 494], "filewrit": [45, 67, 129, 133, 473, 500], "write_fil": [45, 476, 485, 494], "tagtool": 45, "tag_in_except": [45, 57], "move": [45, 90, 97, 133, 167, 168, 476, 482, 483, 499, 502], "is_valid": [45, 410], "notcompressedpixeltransfersyntax": 45, "uncompressedpixeltransfersyntax": [45, 476, 492], "pydicom_root_uid": 45, "gone": [45, 499], "cleannam": 45, "short_nam": 45, "long_nam": 45, "all_names_for_tag": 45, "not_group2": 45, "pydicom_uid": 45, "mainli": [46, 129, 476, 483], "concern": 46, "desir": [46, 201, 209, 216], "stdlib": 46, "2d": [46, 215, 476, 492], "axesimag": 46, "thank": [46, 476, 479, 482], "roi": 46, "key": 46, "pydicom_tkint": 46, "contrib": [46, 479, 497], "come": [46, 507], "photoimag": 46, "widget": 46, "pydicom_pil": 46, "imview": 46, "60xx": [47, 94, 202, 216, 469, 476, 489, 500], "3000": [47, 94, 129, 202, 204, 205, 216, 469, 476, 489, 500], "6000": 47, "6002": 47, "601e": 47, "siemen": [47, 48], "withoverlai": [47, 48], "0x6000": [47, 202, 500], "0x3000": 47, "29282": 47, "tend": [47, 504], "lazi": 47, "unpack": [47, 216, 462, 476, 487, 495], "uint8": [47, 203, 204, 205, 206, 207, 216], "484": 47, "align": 47, "pack_bit": [47, 216, 476, 487, 492], "numpy_handl": [47, 94, 95, 476, 494], "packed_byt": 47, "temp": [47, 48], "reduc": [47, 48, 209, 216, 476, 487, 492, 502, 505], "512x512": [47, 48], "256x256": [47, 48], "bulk": [48, 126, 129, 473, 476, 489, 490, 493, 501], "although": [48, 168, 502], "almost": 48, "parametr": [48, 498], "floatpixeldata": [48, 216, 476, 494], "doublefloatpixeldata": [48, 216, 476, 494], "interchang": [48, 502], "x89": 48, "x03": 48, "xfb": 48, "xcb": 48, "xeb": 48, "xf9": 48, "x02": 48, "x94": 48, "x7f": 48, "immedi": 48, "varieti": 48, "broken": [48, 507], "fragment": [48, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 476, 489], "1227": 48, "302": 48, "304": 48, "328": 48, "628": 48, "770": 48, "907": 48, "298": 48, "355": 48, "498": [48, 354, 355, 434, 476, 486], "566": 48, "706": 48, "280": 48, "285": 48, "334": 48, "431": 48, "1094": 48, "1068": 48, "1083": 48, "339": 48, "377": 48, "413": 48, "1318": 48, "1346": 48, "1336": 48, "378": 48, "374": 48, "422": 48, "1369": 48, "1129": 48, "862": 48, "straightforward": 48, "particularli": [48, 50], "300": 48, "shrunk": 48, "apply_color_lut": [48, 216, 473, 476, 489], "obxxxx1a": 48, "pet": [48, 203, 216], "physic": [48, 502], "quantiti": [48, 468, 508], "hounsfield": 48, "apply_modality_lut": [48, 206, 207, 208, 216, 473, 476, 489, 491], "hu": 48, "apply_voi_lut": [48, 216, 473, 476, 489, 491, 492], "voic": 49, "audio": [49, 508], "lead": [49, 52, 437, 438, 448, 476, 480, 485, 496, 508], "ecg": [49, 508], "5400": [49, 129, 468, 508], "consist": [49, 130, 179, 476, 482, 499, 505, 508], "synchronis": [49, 508], "003a": [49, 129, 468, 508], "001a": 49, "waveformdata": [49, 508], "240000": [49, 508], "multiplex_1": 49, "112": 49, "25": [49, 434], "68": [49, 386, 403, 404], "106": [49, 225, 331, 332], "62": 49, "37": 49, "131": [49, 229], "137": 49, "10000": [49, 508], "multiplex_2": 49, "multiplex_arrai": [49, 129, 468, 476, 492, 508], "55": [49, 476, 479], "65": [49, 243], "85": 49, "60": [49, 476, 483, 494], "110": [49, 476, 482], "coupl": [50, 502, 507], "truli": 50, "certain": [50, 129, 216, 499, 500], "tool": 50, "approxim": 50, "especi": [50, 498], "tricki": 50, "awar": [50, 502], "524288": 50, "bigger": [50, 476, 491], "potenti": 50, "disadvantag": 50, "sai": [50, 498, 500], "wrote": 50, "quit": [50, 476, 479, 498], "switch": [50, 86, 476, 480, 482, 484, 489, 491, 494, 498, 499, 507], "individu": [50, 209, 216, 442, 476, 482, 492, 494], "code_fil": 50, "certainli": 50, "difficult": [50, 498], "singleton": 52, "infer_sq_for_un_vr": [52, 476, 495], "undefin": [52, 126, 141, 155, 172, 179, 476, 481, 492, 495], "conform": [52, 126, 129, 168, 171, 179, 192, 199, 215, 434, 476, 485, 487, 488, 500, 502, 505], "failur": [52, 476, 491, 498], "bypass": [52, 148], "dataelem": [57, 75, 129, 159, 178, 194, 195, 467, 473, 476, 488, 491, 500], "dataelement_from_raw": [57, 500], "rawdatael": [57, 88, 127, 129, 130, 131, 155, 159, 190, 467], "tupletag": [57, 476, 479], "convert_ae_str": 57, "convert_atvalu": 57, "convert_da_str": 57, "convert_ds_str": 57, "convert_dt_str": 57, "convert_is_str": 57, "convert_numb": [57, 177, 178], "convert_obvalu": 57, "convert_owvalu": 57, "convert_pn": 57, "convert_single_str": 57, "convert_sq": 57, "convert_str": 57, "convert_tag": 57, "convert_text": 57, "convert_tm_str": 57, "convert_ui": 57, "convert_un": 57, "convert_ur_str": 57, "convert_valu": 57, "multiv": [57, 473, 500], "validate_dataset": [57, 500], "is_valid_d": [57, 476, 494], "format_number_as_d": [57, 476, 494], "multistr": 57, "data_element_gener": [67, 158], "data_element_offset_to_valu": 67, "read_deferred_data_el": 67, "read_dicomdir": [67, 476, 484], "read_file_meta_info": [67, 130, 134], "read_preambl": [67, 199, 500], "read_sequ": 67, "read_sequence_item": 67, "correct_ambiguous_vr": 67, "correct_ambiguous_vr_el": 67, "multi_str": 67, "write_atvalu": 67, "write_da": 67, "write_dataset": 67, "write_data_el": 67, "write_dt": 67, "write_file_meta_info": [67, 179, 500], "write_numb": 67, "write_number_str": 67, "write_obvalu": 67, "write_owvalu": 67, "write_pn": [67, 476, 486], "write_sequ": 67, "write_sequence_item": 67, "write_str": 67, "write_text": 67, "write_tm": 67, "write_ui": 67, "write_un": 67, "dicombytesio": 67, "dicomio": [67, 146, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "fileutil": [67, 473], "absorb_delimiter_item": 67, "find_byt": [67, 174, 175, 476, 483], "find_delimit": [67, 175], "length_of_undefined_length": 67, "read_undefined_length_valu": 67, "mistak": 73, "stand": 73, "alon": 73, "respect": [73, 90, 476, 486], "lookuperror": [73, 74], "delimit": [74, 140, 141, 142, 172, 174, 175, 176, 179, 180, 441, 476, 492, 494], "reset": [74, 93, 96], "loss": [74, 76, 437, 438, 446, 476, 492], "unicodedecodeerror": 74, "dicom_character_set": 75, "unicodeencodeerror": 76, "precis": [77, 85, 216, 437, 438, 442, 446, 476, 494], "use_decimal_boolean": 78, "valueerror": [78, 79, 81, 82, 106, 107, 108, 109, 129, 131, 132, 133, 141, 143, 159, 168, 179, 192, 202, 212, 215, 216, 434, 446, 451, 453, 500, 502, 505], "use_ds_numpi": [78, 451, 473, 476, 491], "use_numpi": 79, "__setattr__": 81, "camel": [81, 476, 492], "neither": [81, 82, 168, 204, 205, 207, 216], "nor": [81, 82], "citizen": [81, 126, 129, 500], "jan": [81, 500], "patientsnam": [81, 82], "1895": 81, "userwarn": 81, "__contains__": [82, 476, 492], "0x100100010": 82, "494": 82, "msg": [82, 500], "exc": 82, "occur": [83, 84, 476, 489, 498, 502], "digit": [85, 132, 193, 508], "round": [85, 216], "encount": 86, "writer": 86, "elementcallback": 88, "callabl": [88, 126, 129, 155, 158, 162, 166, 201, 441], "everi": [88, 148, 216, 502, 507, 508], "data_element_callback": [89, 96, 473], "queri": [90, 168, 502], "anymor": 90, "manual": 90, "debug_on": 91, "default_handl": 91, "log": [91, 129, 476, 482, 495, 498], "logger": [91, 476, 483], "streamhandl": 91, "deprec": [92, 93, 94, 126, 134, 157, 160, 215, 476, 481, 482, 486, 487, 488, 491, 492, 494, 495], "enable_futur": 93, "imit": 93, "emul": [93, 129], "invalid_keyword_behavior": [93, 473, 476, 492], "invalid_key_behavior": [93, 473, 476, 492], "extract": [94, 95], "get_overlay_arrai": [94, 202], "package_import_nam": 94, "handler_nam": [94, 129], "fail": [94, 95, 476, 479, 480, 485, 498, 499, 502], "gdcm_handler": 95, "pillow_handl": [95, 498], "jpeg_ls_handl": 95, "pylibjpeg_handl": 95, "rle_handl": [95, 476, 495], "convert_pixel_data": [95, 129], "shall": [95, 129, 139, 140, 141, 143, 144, 145, 155, 179, 192], "supports_transfer_syntax": [95, 210, 211, 212, 213, 214, 215], "transfer_syntax": [95, 210, 211, 212, 213, 215], "get_pixeldata": [95, 210, 211, 212, 213, 214, 215], "1d": [95, 202, 212, 213, 214, 215, 216], "reshap": [95, 202, 214, 216], "dimens": [95, 214], "needs_to_convert_to_rgb": [95, 210, 211, 212, 213, 214, 215], "colourspac": [95, 476, 494], "refus": 95, "fact": [95, 500], "notimplementederror": [95, 129, 211, 212, 213, 215, 216], "global": [97, 476, 495], "ds_decim": [99, 473, 476, 491], "ds_numpi": [100, 473], "charset": [102, 473], "extern": [104, 476, 492, 494], "new_entries_dict": [106, 108], "0x10021001": [106, 107], "0x10021002": [106, 107], "retir": [107, 114, 126, 177, 178, 225, 410, 476, 492], "perman": 107, "private_cr": [108, 109, 117, 120, 121, 122, 129, 132, 219], "0x00410001": 108, "0x00410002": 108, "acm": 108, "ltd": 108, "whose": [110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 125, 442, 446, 498], "keyerror": [110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 127, 129, 500], "get_private_entri": 116, "get_entri": 117, "grouplength": 118, "mask": 119, "file_value_tel": 126, "is_undefined_length": [126, 129, 179, 476, 489], "already_convert": 126, "validation_mod": [126, 201, 410, 436, 437, 438, 440, 441, 442], "joan": [126, 129], "Its": 126, "descripwidth": 126, "35": [126, 129, 289], "0xffffffffl": 126, "ie": 126, "maxbytestodisplai": [126, 476, 488], "showvr": 126, "backslash": [126, 129, 442, 463, 476, 477, 478, 494], "intern": [126, 129, 155, 476, 483], "0xffffffff": 126, "empty_value_for_vr": 126, "empty_valu": 126, "classmethod": [126, 129, 442], "from_json": [126, 129, 476, 489, 492, 501], "dataset_class": 126, "value_kei": 126, "bulk_data_uri_handl": [126, 129, 476, 492, 501], "json": [126, 129, 219, 476, 488, 489, 493, 494, 503], "inlinebinari": [126, 129], "bulkdatauri": [126, 129, 501], "dicomweb": [126, 129, 501], "wado": [126, 129, 501], "rs": [126, 129, 501], "is_empti": 126, "ret": 126, "repval": [126, 129], "to_json": [126, 129, 476, 490, 501], "bulk_data_threshold": [126, 129, 476, 490, 501], "bulk_data_element_handl": [126, 129, 501], "dump_handl": [126, 129], "base64": [126, 129, 501], "dump": [126, 129], "to_json_dict": [126, 129, 476, 490, 501], "18": [126, 129, 406, 476, 485, 501], "validate_valu": 126, "raw_data_el": [127, 467], "belong": [127, 129, 167, 168, 179], "value_tel": 128, "is_raw": 128, "undecod": 128, "alia": [128, 443, 476, 492], "mutablemap": [129, 130, 131], "mutabl": 129, "0x00100020": 129, "0x0030": 129, "0x00100030": 129, "linac": 129, "son": 129, "daughter": 129, "0x0041": 129, "john": [129, 442], "0041": 129, "get_private_item": 129, "iteral": [129, 476, 478], "jsonmodel": 129, "ds2": 129, "default_element_format": 129, "default_sequence_element_format": 129, "indent_char": [129, 169], "write_like_origin": [129, 179, 500], "decoding_plugin": [129, 148], "encapsulate_ext": 129, "tri": [129, 148], "placehold": [129, 148], "unabl": [129, 216, 500, 502, 505, 507], "runtimeerror": [129, 214], "shallow": 129, "state": [129, 185, 501], "alphabet": [129, 442, 476, 496], "__getitem__": [129, 500], "unconvert": 129, "increas": [129, 476, 479, 496], "ensure_file_meta": 129, "fix_meta_info": [129, 476, 487], "enforce_standard": [129, 133, 192, 500], "ambigu": [129, 177, 178, 476, 485, 487, 488, 492], "therefor": [129, 201, 216], "incorrect": [129, 140, 148, 476, 480, 486, 488, 489], "validate_file_meta": [129, 473, 500], "formatted_lin": [129, 476, 478], "element_format": 129, "sequence_element_format": 129, "indent_format": 129, "json_dataset": 129, "bytearrai": [129, 215, 216], "simul": 129, "obj": 129, "get_item": 129, "defer": [129, 159, 476, 478, 482, 489, 495, 500], "element_offset": [129, 132], "analog": 129, "group_dataset": 129, "is_original_encod": 129, "abstractset": 129, "dict_item": 129, "unlik": 129, "flatten": 129, "dict_kei": 129, "pop": [129, 476, 488], "combin": [129, 220, 498, 500, 508], "popitem": 129, "unrealist": 129, "free": 129, "associ": 129, "pathlik": [129, 130, 134, 157, 159, 160, 161, 168, 179, 476, 491], "anystr": 129, "binaryio": [129, 130, 134, 153, 155, 157, 158, 159, 162, 163, 164, 165, 172, 173, 174, 175, 176, 179], "wrapper": [129, 160, 476, 491], "set_original_encod": 129, "character_encod": 129, "optim": 129, "setdefault": [129, 476, 488, 492], "0x00100040": 129, "suppress_invalid_tag": 129, "threshold": 129, "inlin": [129, 501], "bubbl": 129, "my_json_dump": 129, "sort_kei": 129, "trait_nam": 129, "ipython": [129, 476, 477], "autocomplet": 129, "valuesview": 129, "visit": [129, 498, 499], "0210": [129, 468, 508], "0211": 129, "filename_or_obj": [130, 134, 159], "prepend": 130, "0x0002": [130, 500], "fileobj_typ": [130, 159], "timestamp": [130, 159], "overrid": [131, 166, 436, 476, 487, 502], "super": [131, 217], "typeerror": [131, 157, 201, 210, 211, 476, 486, 492, 500], "init_valu": 131, "private_creator_el": 132, "helper": 132, "block_start": 132, "low": [132, 501], "get_tag": 132, "hold": [134, 154, 179, 201, 217], "carri": [134, 436, 476, 484], "forward": 134, "invaliddicomerror": [134, 157, 160, 163, 473, 476, 480, 500], "parse_record": 134, "hierarchi": [134, 168, 502], "reorgan": [134, 476, 477, 479], "concaten": [136, 143], "togeth": [136, 137, 180], "has_bot": [137, 138], "frame1": 137, "frame2": 137, "exce": [137, 138], "31": 137, "circumst": [137, 138], "0x00": [137, 139, 179, 459], "strongli": [137, 168, 502], "nr_fragment": [139, 145], "marker": [139, 140, 163, 176, 476, 489, 494], "null": [139, 202, 216, 459], "bytestream": [140, 142], "nr_frame": [140, 142], "span": 140, "predict": 140, "Near": 140, "attempt": [140, 178, 468, 476, 485, 494, 500], "boundari": 140, "eoi": [140, 476, 489], "eoc": [140, 476, 489], "0xffd9": 140, "hasn": [140, 498, 499], "fp": [141, 143, 146, 155, 157, 158, 163, 164, 165, 172, 173, 174, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "stream": [141, 146, 179, 498], "fffe": [141, 143, 144, 145], "e000": [141, 143, 144, 145], "e0dd": 141, "0x00000000": [141, 143], "presenc": [141, 203, 216, 500], "absenc": 141, "fe": 143, "e0": 143, "08": 143, "measur": [143, 166], "bot": 143, "ffee": 143, "itemis": 145, "factori": [148, 201, 221, 436, 476, 479, 494], "import_path": 148, "encode_pixel_data": 148, "modulenotfounderror": 148, "unavail": 148, "attributeerror": [148, 177, 179, 202, 210, 212, 214, 215, 476, 479, 495], "aren": [148, 168, 500, 502], "idx": [148, 505], "uint16": [148, 203, 204, 205, 206, 207, 216], "iter_encod": [148, 505], "kwargs_from_d": 148, "missing_depend": 148, "nice": [148, 201, 498], "remove_plugin": 148, "appear": [150, 502], "dicm": [150, 163, 179, 192, 199, 500], "mayb": 150, "file_like_obj": 153, "textio": 153, "no_read": 153, "no_seek": 153, "whenc": 153, "no_writ": 153, "bytes_read": 153, "need_exact_length": 154, "eoferror": [154, 176], "read_beul": 154, "read_beu": 154, "read_be_tag": 154, "read_leul": 154, "read_leu": 154, "read_le_tag": 154, "write_ul": 154, "write_u": 154, "write_beul": 154, "write_beu": 154, "write_leul": 154, "write_leu": 154, "write_tag": 154, "stop_when": [155, 158, 162], "defer_s": [155, 157, 158, 162, 176, 200, 476, 478], "specific_tag": [155, 157, 158, 162, 500], "read_data_el": 155, "stop_before_pixel": [157, 476, 479], "pars": [157, 162, 216, 473, 476, 477, 489, 491, 492], "context": [157, 222, 476, 485, 500], "tell": [157, 476, 478, 499, 502], "caller": [157, 476, 479], "respons": [157, 442, 501], "close": [157, 162, 476, 478, 479], "kb": 157, "stop": [157, 162, 476, 479], "subsequ": 157, "unsupport": [157, 210, 211, 212, 215], "condit": [157, 162, 476, 485], "bytelength": [158, 164], "parent_encod": [158, 191], "at_top_level": 158, "itemdelitertag": 158, "call_back": 158, "isn": [158, 216, 410, 434, 476, 488, 492, 499, 500], "heurist": [158, 476, 485], "raw_data_elem": 159, "persist": 159, "st_mtime": 159, "ioerror": 159, "meant": [161, 199], "fileobj": [162, 500], "assess": 166, "_define_assess": 166, "doc": [166, 499], "_define_encap_doc": 166, "fiduci": 166, "_define_generic_content_id": 166, "hang": 166, "protocol": 166, "_define_hanging_protocol": 166, "_define_imag": 166, "implant": [166, 168], "_define_impl": 166, "assi": 166, "_define_implant_assi": 166, "_define_implant_group": 166, "_define_key_object_doc": 166, "_define_palett": 166, "_define_pati": 166, "_define_empti": 166, "_define_present": 166, "_define_radiotherapi": 166, "_define_generic_cont": 166, "registr": 166, "_define_rt_dos": [166, 502], "_define_rt_plan": 166, "_define_rt_structure_set": 166, "treat": [166, 502], "_define_rt_treatment_record": 166, "_define_seri": 166, "spectroscopi": 166, "_define_spectroscopi": 166, "sr": [166, 442, 476, 494, 506], "_define_sr_docu": 166, "stereometr": 166, "_define_studi": 166, "surfac": 166, "_define_surface_scan": 166, "tract": 166, "1430": [166, 502], "my_record": 166, "offsetofthenextdirectoryrecord": 166, "recordinuseflag": 166, "0xffff": [166, 476, 486], "offsetofreferencedlowerleveldirectoryent": 166, "specificcharacterset": 166, "my_inst": 166, "add_custom": [166, 168, 502], "node": [167, 168, 169, 500], "recordnod": [167, 168, 473], "leaf": [167, 168, 169], "fileid": 167, "file_set": [167, 169], "for_addit": [167, 502], "for_mov": 167, "for_remov": 167, "is_stag": [167, 168, 502], "ds_or_path": 168, "cancel": 168, "directory_record": [168, 473, 502], "definit": [168, 179, 473, 476, 485, 508], "suitabl": [168, 203, 216, 504], "1400": [168, 502], "1410": [168, 502], "1420": [168, 502], "1500": [168, 476, 495], "1510": 168, "1511": [168, 476, 495], "1512": 168, "privaterecorduid": 168, "leaf_nod": 168, "top_nod": 168, "ancestor": [168, 169], "due": [168, 476, 483, 494, 496, 498, 502], "force_implicit": 168, "1234567": 168, "7654321": 168, "include_orphan": 168, "raise_orphan": 168, "attach": 168, "imposs": [168, 507], "orphan": 168, "use_exist": [168, 502], "backup": 168, "ptxxxxxx": 168, "stxxxxxx": 168, "sexxxxxx": 168, "imxxxxxx": 168, "xxxxxx": 168, "alphanumer": [168, 170], "paxxxxxx": 168, "p0xxxxxx": 168, "p1xxxxxx": 168, "p2xxxxxx": 168, "everyth": [168, 498, 502], "child": 169, "nearest": 169, "furthest": 169, "has_inst": 169, "amongst": 169, "sibl": 169, "is_root": 169, "prettifi": 169, "pretti": [169, 498], "record_typ": [169, 502], "36": 170, "00010": 170, "00000000": 170, "00000001": 170, "00000002": 170, "_": [171, 499], "bytes_to_find": 173, "read_siz": [173, 174, 175, 176], "found_at": 173, "routin": 175, "delimiter_tag": 176, "eof": 176, "dicond": [177, 178], "henc": 179, "profil": 179, "bytestr": [179, 216], "eeee": 179, "independ": 179, "preserv": [179, 476, 484, 491], "had": [179, 476, 487, 494, 498], "sensibl": 179, "is_undefined_length_sequence_item": 179, "put": 180, "swap": [185, 455], "rule": 190, "0017": 192, "send": [192, 498, 499], "struct_format": [194, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 464], "pare": 199, "fast": [199, 221], "conserv": 199, "approach": 199, "expr": 200, "type_constructor": [201, 217, 500], "_t": [201, 441], "_itemtyp": 201, "constructor": 201, "insert": [201, 217, 499, 500], "overlayrow": 202, "overlaycolumn": 202, "0015": 202, "numberofframesinoverlai": 202, "overlaybitsalloc": 202, "overlaybitposit": 202, "get_expected_length": [202, 216], "NOT": [202, 216], "0x6010": 202, "0x60ff": 202, "reshape_overlay_arrai": 202, "1201": [203, 216], "1203": [203, 216], "1221": [203, 216], "1223": [203, 216], "1204": [203, 216], "1224": [203, 216], "supplement": [203, 216], "hot_iron": [203, 216], "hot_metal_blu": [203, 216], "pet_20_step": [203, 216], "spring": [203, 216], "summer": [203, 216], "fall": [203, 216], "winter": [203, 216], "rgba": [203, 216], "3rd": [203, 204, 205, 206, 207, 216], "colour": [203, 216], "3002": [204, 205, 206, 207, 216, 476, 489], "float64": [204, 205, 207, 208, 216, 451], "3010": [206, 207, 216], "apply_window": [206, 207, 216, 473, 476, 492], "prefer_lut": [207, 216, 476, 492], "apply_voi": [207, 208, 216, 473, 476, 492], "per_fram": [209, 216, 476, 494], "iec": [209, 216, 310, 315, 318], "10918": [209, 216, 318, 476, 494], "2012": [209, 216], "itu": [209, 216], "871": [209, 216], "create_data_el": 210, "create_imag": 210, "volum": 210, "affect": [210, 211, 212, 213, 214, 215, 216, 498, 499], "should_change_photometricinterpretation_to_rgb": [210, 211, 212, 213, 214, 215], "charpyl": 211, "planarconfigur": [212, 214, 215, 216, 476, 485], "numberoffram": [212, 214, 215, 216], "read_onli": 212, "resampl": 212, "writeabl": 212, "as_arrai": [214, 216], "generate_fram": 214, "tsyntax": 214, "rle_segment_ord": 215, "suppos": 215, "msb": 215, "lsb": 215, "rle_encode_fram": [215, 476, 494], "dtype_corrected_for_endian": 216, "numpy_dtyp": 216, "expand_ybr422": [216, 476, 495], "subsampl": 216, "halv": 216, "cb": 216, "get_image_pixel_id": 216, "get_j2k_paramet": 216, "codestream": 216, "15444": [216, 310], "is_sign": 216, "get_nr_fram": 216, "conjunct": 216, "uint": 216, "sake": 216, "pixel_dtyp": 216, "as_float": 216, "reshape_pixel_arrai": 216, "unpack_bit": [216, 476, 495], "substitut": 217, "construct": [217, 437, 438, 442, 476, 482, 483, 494], "weakref": 217, "referencetyp": 217, "weak": 217, "is_private_cr": 219, "json_kei": [219, 476, 496], "ggggeeee": 219, "meaningless": 219, "arg2": [220, 476, 479], "0x00100015": 220, "0x50": 220, "0x0015": 220, "group_elem": 221, "safe": 221, "71": 223, "103": [225, 328, 332, 476, 482], "108": [225, 295, 332, 442], "78": [228, 303, 319, 324, 346, 400, 402, 422, 476, 480], "19": 237, "200": [239, 241, 362, 426, 427], "69": 244, "39": [245, 434], "34": [248, 368, 370], "33": 249, "82": [252, 476, 480], "501": [253, 254, 255, 256, 257, 258, 259], "66": [261, 387, 394, 398, 399, 405, 408], "601": [269, 270], "130": 281, "22": [282, 384], "76": 286, "43": [292, 476, 479], "38": 297, "45": 300, "14495": 315, "59": 320, "mpeg": [332, 476, 492], "79": [335, 476, 480], "826": [354, 355, 434, 476, 489], "3680043": [354, 355, 434], "73": [357, 476, 479], "74": 359, "compil": [364, 365], "regex": [364, 365], "67": [388, 432], "72": [396, 476, 479], "human": [410, 442, 500], "friendli": [410, 500, 502], "subclass": [410, 476, 486], "is_transfer_syntax": 410, "is_compress": 410, "is_defl": 410, "is_encapsul": 410, "encasul": 410, "entropy_src": 434, "uuid": 434, "hash": [434, 476, 488, 494], "uuid4": 434, "sha512": 434, "determinist": 434, "unrecover": 434, "random": 434, "22463838056059845879389038257786771680": 434, "167161297070865690102504091919570542144": 434, "lorem": 434, "ipsum": 434, "87507166259346337659265156363895084463": 434, "immut": [435, 439, 444, 476, 488], "auto_format": [436, 437, 438, 476, 494], "__new__": 436, "penalti": 436, "clean": [436, 476, 485, 498, 499, 507], "satisfi": [437, 438, 446], "23e2": 437, "123": [437, 501], "rewrit": 440, "valtyp": 441, "original_str": [442, 476, 487], "from_named_compon": [442, 476, 494], "from_named_components_veterinari": [442, 476, 494], "ideograph": 442, "phonet": 442, "absent": [442, 508], "demand": 442, "famili": 442, "family_nam": [442, 476, 494], "format_str": 442, "given_nam": [442, 476, 494], "middle_nam": 442, "name_prefix": 442, "name_suffix": 442, "family_name_ideograph": 442, "given_name_ideograph": 442, "middle_name_ideograph": 442, "name_prefix_ideograph": 442, "name_suffix_ideograph": 442, "family_name_phonet": 442, "given_name_phonet": 442, "middle_name_phonet": 442, "name_prefix_phonet": 442, "name_suffix_phonet": 442, "middl": 442, "addition": 442, "sect": 442, "adam": 442, "robert": 442, "quinci": 442, "rev": 442, "div": 442, "korean": [442, 476, 482], "\u6d2a": 442, "\u5409\u6d1e": 442, "\ud64d": 442, "\uae38\ub3d9": 442, "dr": 442, "chief": 442, "offic": 442, "responsible_party_nam": 442, "patient_nam": 442, "responsible_party_name_ideograph": 442, "patient_name_ideograph": 442, "responsible_party_name_phonet": 442, "patient_name_phonet": 442, "veterinari": 442, "OR": 442, "hors": 442, "abc": 442, "farm": 442, "fourth": 442, "fifth": 442, "truncat": [446, 476, 478], "retain": [446, 476, 494], "scientif": 446, "incur": 446, "furthermor": 446, "finit": 446, "inf": 446, "nan": 446, "fewer": 447, "byte_str": [448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "Not": [448, 449, 450, 451, 452, 453, 458, 459, 461, 464], "int64": 453, "use_is_numpi": [453, 473, 476, 491], "waveformbitsalloc": [468, 508], "waveformsampleinterpret": [468, 508], "sb": 468, "ub": 468, "ab": 468, "0dev0": 473, "jun": 473, "03": 473, "convert_encod": 473, "decode_el": 473, "decode_byt": 473, "encode_str": 473, "allow_ds_float": [473, 476, 482], "assume_implicit_vr_switch": [473, 476, 494], "convert_wrong_length_to_un": [473, 476, 494], "data_element_callback_kwarg": 473, "debug": [473, 476, 482, 484], "enforce_valid_valu": [473, 476, 482, 488, 489, 492, 494, 495], "overlay_data_handl": [473, 476, 492], "reset_data_element_callback": 473, "show_file_meta": [473, 476, 491], "apply_j2k_correct": 473, "get_charset_fil": 473, "get_palette_fil": [473, 476, 489], "apply_rescal": [473, 476, 492], "get_encod": 473, "generate_filenam": 473, "is_conformant_file_id": 473, "miscellan": 473, "misc": [473, 476, 485], "is_dicom": [473, 476, 485], "size_in_byt": 473, "1634": [476, 496], "1648": [476, 496], "1414": [476, 496], "1632": [476, 496], "progress": [476, 496, 499], "bar": [476, 496], "1611": [476, 496], "crash": [476, 486, 495, 496], "1638": [476, 496], "favor": [476, 481, 495], "1617": [476, 495], "enum": [476, 495], "1498": [476, 495], "resort": [476, 495], "slowest": [476, 495], "1487": [476, 495], "mitra": [476, 495], "1588": [476, 495], "pr": [476, 495, 498, 499], "1594": [476, 495], "1593": [476, 495], "introduc": [476, 495, 498], "2022a": [476, 495], "holog": [476, 495], "0019xx43": [476, 495], "1565": [476, 495], "deep": [476, 495], "1571": [476, 495], "1581": [476, 495], "maco": [476, 495, 504], "1599": [476, 495], "bad": [476, 485, 495], "1596": [476, 495], "1606": [476, 495], "1609": [476, 495], "__eq__": [476, 486, 494], "operand": [476, 494], "1327": [476, 494], "__str__": [476, 486, 494, 500], "1262": [476, 494], "metadata": [476, 494], "2021b": [476, 494], "inherit": [476, 494], "silent": [476, 494], "highest": [476, 494], "init": [476, 494], "urllib": [476, 494], "1340": [476, 494], "calcul": [476, 494], "1348": [476, 494], "optimis": [476, 494], "1361": [476, 494], "1372": [476, 494], "1438": [476, 494], "suppress": [476, 494], "1332": [476, 494], "1428": [476, 494], "1434": [476, 494], "pickl": [476, 485, 489, 494], "1278": [476, 494], "1312": [476, 494], "problem": [476, 494, 500, 507], "workflow": [476, 494, 498, 499], "1341": [476, 494], "1338": [476, 494], "878": [476, 494], "deepcopi": [476, 494], "1147": [476, 494], "1412": [476, 494], "expans": [476, 494], "linear": [476, 494], "1415": [476, 494], "1449": [476, 494], "rbg": [476, 494], "jpg": [476, 494], "app14": [476, 494], "1444": [476, 494], "1457": [476, 494], "1251": [476, 493], "1253": [476, 493], "1254": [476, 493], "distribut": [476, 480, 492, 504], "fly": [476, 492], "whenev": [476, 492], "disk": [476, 492], "rg1_unci": [476, 492], "1127": [476, 492], "1234": [476, 492], "1237": [476, 492], "1156": [476, 492], "__next__": [476, 492], "__iter__": [476, 477, 492, 500], "1103": [476, 489, 492], "constant": [476, 492, 508], "1155": [476, 492], "1149": [476, 492], "2020d": [476, 492], "243": [476, 492], "alltransfersyntax": [476, 492], "commun": [476, 492], "1240": [476, 492], "1178": [476, 492], "1161": [476, 492], "_storage_sopclass_uid": [476, 492], "multifram": [476, 492], "dicosquadrupoleresonanceqrstorag": [476, 492], "dicosquadrupoleresonancestorag": [476, 492], "jpegbaselin": [476, 487, 492], "jpegbaseline8bit": [476, 492], "jpegextend": [476, 487, 492], "jpegextended12bit": [476, 492], "jpeglossless": [476, 492], "jpeglosslesssv1": [476, 492], "jpeglslossi": [476, 492], "jpeglsnearlossless": [476, 492], "jpeg2000multicomponentlossless": [476, 487, 492, 498], "jpeg2000mclossless": [476, 492], "jpeg2000multicompon": [476, 487, 492, 498], "jpeg2000mc": [476, 492], "jpeglossycompressedpixeltransfersyntax": [476, 492], "jpegtransfersyntax": [476, 492], "jpeglssupportedcompressedpixeltransfersyntax": [476, 492], "jpeglstransfersyntax": [476, 492], "jpeg2000compressedpixeltransfersyntax": [476, 492], "jpeg2000transfersyntax": [476, 492], "rlecompressedlosslesssyntax": [476, 492], "rletransfersyntax": [476, 492], "uncompressedtransfersyntax": [476, 492], "pilsupportedcompressedpixeltransfersyntax": [476, 492], "1211": [476, 492], "1181": [476, 492], "1146": [476, 492], "optimist": [476, 492], "embed": [476, 492], "1140": [476, 492], "network": [476, 492], "connect": [476, 492], "1153": [476, 492], "wrong": [476, 487, 488, 492], "gracefulli": [476, 492], "1193": [476, 492], "1215": [476, 492], "restor": [476, 491], "personname3": [476, 483, 488, 491], "alias": [476, 478, 491], "ismultivalu": [476, 488, 491], "1086": [476, 491], "replace_un_with_known_vr": [476, 491], "1067": [476, 491], "623": [476, 491], "regress": [476, 490, 491, 498], "1038": [476, 491], "improp": [476, 489, 491], "3006": [476, 491], "1078": [476, 491], "1082": [476, 491], "1097": [476, 491], "915": [476, 489], "887": [476, 489, 500], "prevent": [476, 489], "894": [476, 489], "892": [476, 489], "truthi": [476, 489], "891": [476, 489], "899": [476, 489], "968": [476, 489], "896": [476, 489], "unpickl": [476, 489], "947": [476, 489], "951": [476, 489], "1101": [476, 489], "ir": [476, 489], "917": [476, 489], "propag": [476, 489], "971": [476, 489], "822": [476, 489], "263": [476, 489], "273": [476, 489], "994": [476, 489], "generate_pixel_data": [476, 489], "685": [476, 489], "693": [476, 489], "932": [476, 489], "toler": [476, 478, 489], "940": [476, 489], "205": [476, 489], "unexpect": [476, 489], "848": [476, 489], "981": [476, 489], "537": [476, 489], "452": [476, 489], "2019e": [476, 489], "get_frame_offset": [476, 489], "timelin": [476, 488], "789": [476, 488], "image_handl": [476, 487, 488], "deferreddatael": [476, 487, 488], "760": [476, 488], "isstringorstringlist": [476, 488], "isstr": [476, 488], "666": [476, 488], "799": [476, 488], "gzip": [476, 482, 488], "753": [476, 488], "730": [476, 488], "820": [476, 488], "864": [476, 488], "819": [476, 488], "850": [476, 488], "838": [476, 488], "757": [476, 488], "785": [476, 488], "788": [476, 488], "810": [476, 488], "815": [476, 488], "804": [476, 488], "mix": [476, 488], "835": [476, 488], "excess": [476, 488], "791": [476, 488], "ji": [476, 488], "856": [476, 488], "fallback": [476, 487], "722": [476, 487], "jpegbaselinelossy8bit": [476, 487], "726": [476, 487], "jpegbaselinelossy12bit": [476, 487], "jpeg2000lossi": [476, 487], "inequ": [476, 486, 487], "matter": [476, 487, 500], "291": [476, 487], "numpypi": [476, 487], "2018c": [476, 487], "677": [476, 487], "624": [476, 487], "696": [476, 487], "584": [476, 487], "715": [476, 487], "716": [476, 487], "695": [476, 487], "737": [476, 487], "jpeglosslessp14": [476, 487], "713": [476, 487], "small": [476, 479, 485, 487, 497, 504], "729": [476, 487], "unus": [476, 487], "660": [476, 487], "682": [476, 487], "689": [476, 487], "jpeg2k": [476, 487], "663": [476, 487], "728": [476, 487], "704": [476, 487], "707": [476, 487], "consumpt": [476, 487], "717": [476, 487], "740": [476, 487], "464": [476, 486], "605": [476, 486], "292": [476, 486], "2018b": [476, 486], "649": [476, 486], "256": [476, 486], "0x0006": [476, 486], "489": [476, 486], "599": [476, 486], "unneed": [476, 486], "597": [476, 486], "620": [476, 486], "625": [476, 486], "640": [476, 486], "__ne__": [476, 486], "comparison": [476, 481, 486], "verif": [476, 486], "2017c": [476, 485], "fixer": [476, 485], "thrown": [476, 485], "143": [476, 485], "197": [476, 485], "212": [476, 485], "dictionary_is_retir": [476, 485], "thai": [476, 485], "japanes": [476, 477, 482, 485], "chines": [476, 477, 485], "353": [476, 485], "172": [476, 485], "clariti": [476, 485], "travisci": [476, 485], "appveyor": [476, 485], "coverag": [476, 485, 498], "pep": [476, 478, 481, 485], "151": [476, 485], "125": [476, 485], "show_dicomdir": [476, 484, 485], "258": [476, 485], "latin5": [476, 485], "turkish": [476, 485], "lot": [476, 485, 500, 507], "subdirectori": [476, 484], "ez_setup": [476, 484], "aid": [476, 484], "pydicom_seri": [476, 480, 483, 484], "nil": [476, 484], "goyett": [476, 484], "ordereddict": [476, 484], "padraig": [476, 483, 484], "loonei": [476, 483, 484], "jonathan": [476, 483, 484], "myself": [476, 484], "rickard": [476, 484], "holmberg": [476, 484], "julien": [476, 484], "lami": [476, 484], "yaroslav": [476, 484], "halchenko": [476, 484], "mark": [476, 484], "matthew": [476, 484], "brett": [476, 484], "dimitri": [476, 484], "papadopoulo": [476, 484], "videan42": [476, 484], "sorri": [476, 484], "ve": [476, 484, 498, 499, 502, 505, 508], "anyon": [476, 484], "consolid": [476, 483], "revert": [476, 483], "prepar": [476, 483], "experiment": [476, 483], "unoffici": [476, 483], "uncom": [476, 483], "114": [476, 483], "slow": [476, 483], "approx": [476, 479, 483], "r78ba350a3eb8": [476, 483], "streamlin": [476, 483], "modern": [476, 483], "decor": [476, 483], "duplic": [476, 483], "gunnar": [476, 483], "schaefer": [476, 483], "774b7a55db33": [476, 483], "6b949a5b925b": [476, 483], "113": [476, 483], "84af4b240add": [476, 483], "f\u00e9lix": [476, 483], "morenc": [476, 483], "0197b5846bb5": [476, 483], "3678b1be6aca": [476, 483], "f1ae573d9de5": [476, 483], "0411bab7c985": [476, 483], "9b92b336e7d4": [476, 483], "e830f30b6781": [476, 483], "pysid": [476, 483], "qt": [476, 483], "acknowledg": [476, 483], "suever": [476, 483], "who": [476, 482, 483], "2011": [476, 481, 482], "ident": [476, 482], "4ed698a7bfb": [476, 482], "c313d2befb08": [476, 482], "promot": [476, 482], "across": [476, 482], "languag": [476, 477, 482], "b6b3658f3b14": [476, 482], "98": [476, 482], "52": [476, 482], "111": [476, 482], "__dir__": [476, 482], "simplifi": [476, 478, 482], "file_metadata": [476, 481], "96": [476, 481], "catch": [476, 479, 481], "97": [476, 481], "write_new": [476, 481], "fc790f01f5": [476, 480], "84": [476, 480], "dicomit": [476, 480], "statement": [476, 480], "1c32791bf0": [476, 480], "e3ee934bbc": [476, 480], "dicom_dao": [476, 480], "mike": [476, 480], "wallac": [476, 480], "couchdb": [476, 480], "almar": [476, 480], "klein": [476, 480], "distinct": [476, 480], "preliminari": [476, 477, 480], "substanti": [476, 479], "partial": [476, 479], "plain": [476, 479], "bullet": [476, 479], "ness": [476, 479], "logic": [476, 479], "daniel": [476, 479], "nanz": [476, 479], "folder": [476, 479], "dave": [476, 479], "witten": [476, 479], "adit": [476, 479], "panchal": [476, 479], "cp805": [476, 479], "supp": [476, 479], "117": [476, 479], "119": [476, 479], "122": [476, 479], "patch": [476, 479, 497, 498], "nikitathespid": [476, 479], "58": [476, 479], "pierr": [476, 479], "raybaut": [476, 479], "47": [476, 479], "r102": [476, 478], "r103": [476, 478], "issue36": [476, 478], "r97": [476, 478], "r110": [476, 478], "readfil": [476, 478], "savea": [476, 478], "pixelarrai": [476, 477, 478], "kept": [476, 478, 504], "r105": [476, 478], "r91": [476, 478], "r113": [476, 478], "r95": [476, 478], "issue38": [476, 478], "collis": [476, 478], "r96": [476, 478], "issue40": [476, 478], "notimplementerror": [476, 478], "r100": [476, 478], "issue41": [476, 478], "r104": [476, 478], "r109": [476, 478], "r111": [476, 478], "patientsbirthd": [476, 478], "r98": [476, 478], "deprecationwarn": [476, 477], "issue22": [476, 477], "r72": [476, 477], "r73": [476, 477], "greek": [476, 477], "gui": [476, 477], "r64": [476, 477], "r65": [476, 477], "r69": [476, 477], "r70": [476, 477], "data_elem": [476, 477, 500], "r68": [476, 477], "r55": [476, 477], "uid_dictionari": [476, 477], "r51": [476, 477], "synonym": [476, 477], "issue27": [476, 477], "incorrectli": [476, 477], "read_ow": [476, 477], "undefinedlength": [476, 477], "r50": [476, 477], "dicominfo": [476, 477], "issue33": [476, 477], "issue18": [476, 477], "r45": [476, 477], "r67": [476, 477], "r46": [476, 477], "pixeldataarrai": [476, 477], "distutil": [476, 477], "ones": [497, 500, 502], "typo": 497, "materi": 497, "googl": 497, "fork": [498, 499], "django": [498, 499, 501], "cd": [498, 499, 502], "live": [498, 499], "yourusernam": [498, 499], "virtualenv": [498, 499, 507], "pydx": 498, "pythonx": 498, "mkvirtualenv": [498, 507], "accident": [498, 502], "area": 498, "afterward": 498, "our": [498, 499, 502, 508], "dot": [498, 500], "choos": [498, 499], "won": [498, 499, 500, 502], "master": [498, 499, 504], "checkout": [498, 499], "reproduc": 498, "seem": 498, "daunt": 498, "resourc": 498, "captur": 498, "dive": 498, "Into": 498, "unittest": 498, "troubl": 498, "500": [498, 500], "test_uid": 498, "test_new_uid": 498, "newdefineduid": 498, "assert": [498, 501], "380": 498, "editor": [498, 499], "236": 498, "rst": [498, 499], "properli": 498, "happi": [498, 499], "idea": [498, 499], "cach": [498, 504], "scroll": 498, "front": 498, "push": [498, 499], "wip": [498, 499], "real": [498, 499, 508], "mrg": [498, 499], "readi": [498, 499, 507], "merg": [498, 499], "clarif": [498, 499], "approv": [498, 499], "lastli": [498, 499], "remot": [498, 499], "bin": [498, 499, 507], "icon": [498, 499], "pyd": [499, 500], "activ": [499, 504], "venv": [499, 507], "restructuredtext": 499, "navig": 499, "occasion": [499, 500, 502], "_build": 499, "web": 499, "localhost": 499, "tut": 499, "toctre": 499, "visibl": 499, "got": [499, 502], "maxdepth": 499, "contributing_cod": 499, "contributing_doc": 499, "rebuild": 499, "reachabl": 499, "task": 499, "chapter_7": 499, "apr": 499, "46": 499, "gcc": 499, "copyright": 499, "credit": 499, "accessionnumb": 499, "acquisitiondata": 499, "xraytubecurr": 499, "primer": 499, "am": 499, "circleci": 499, "success": 499, "artifact": 499, "tab": 499, "yet": [500, 506], "vari": 500, "home": [500, 502, 507], "env": [500, 502, 507], "lib": [500, 502], "site": [500, 502], "__version__": [500, 507], "rb": 500, "infil": 500, "no_meta": 500, "678": 500, "631": 500, "caution": 500, "not_dicom": 500, "1703": 500, "1436": 500, "1079": 500, "833": 500, "character_set": 500, "581": 500, "6854": 500, "7369": 500, "hexadecim": 500, "iso_ir_100": 500, "0x6002": 500, "0x6004": 500, "0x601e": 500, "gggg": 500, "surround": 500, "0x0008": 500, "0x0016": 500, "private_elem": 500, "0x0043": 500, "0x104e": 500, "lack": 500, "stick": 500, "simpler": 500, "imagetyp": 500, "act": 500, "branch": [500, 504], "manner": [500, 505], "0x1002": 500, "saw": 500, "x00t": 500, "x18": 500, "x08": 500, "chanc": 500, "But": 500, "snip": 500, "hello": 500, "world": 500, "_list": 500, "0x0028": 500, "0x1050": 500, "windowwidth": 500, "notic": [500, 502], "typeofpatientid": 500, "windowcent": 500, "prefer": 500, "wb": 500, "1794": 500, "712": 500, "2372": 500, "habit": 500, "congratul": 500, "beta": 501, "deseri": 501, "00080005": 501, "00080008": 501, "symmetr": 501, "ds_json": 501, "ds1": 501, "smaller": 501, "bulk_data_handl": 501, "store_data_and_return_uri": 501, "bulk_data_read": 501, "bulk_data_uri": 501, "data_retrieved_via_uri": 501, "json_data": 501, "00091002": 501, "data_retrieved_for_tag_and_vr_via_uri": 501, "share": 502, "frequent": 502, "dvd": 502, "procedur": 502, "ultrasound": 502, "despit": 502, "commonli": [502, 505], "usb": 502, "pc": 502, "minor": 502, "recalcul": 502, "1220": 502, "briefli": 502, "directoryrecordsequ": 502, "3126": 502, "di": 502, "510": 502, "complic": [502, 507], "flat": 502, "abstract": 502, "awai": 502, "dig": 502, "cost": 502, "importantli": 502, "though": 502, "tmp0aalrzir": 502, "rtdose": 502, "1858": 502, "_recordifi": 502, "2338": 502, "_check_dataset": 502, "instancenumb": 502, "dosesummationtyp": 502, "2281": 502, "record_gen": 502, "1860": 502, "tmpsqz8rhgb": 502, "rd000000": 502, "shutil": 502, "copytre": 502, "copyfil": 502, "dst": 502, "tmpu068kdwp": 502, "Then": [503, 504], "isol": [504, 507], "admin": 504, "privileg": 504, "offlin": 504, "whl": 504, "py3": 504, "forg": [504, 505, 508], "fetch_data_fil": 504, "popular": 504, "beforehand": 504, "charl": 504, "cython": 504, "who8mylunch": 504, "older": 504, "framework": 504, "snapshot": 504, "latest": 504, "stabl": 504, "undocu": 504, "prerequisit": [505, 508], "conda": [505, 508], "hundr": 505, "megabyt": 505, "slide": 505, "microscopi": 505, "gigabyt": 505, "territori": 505, "Being": 505, "significantli": 505, "i2": 505, "1697": 505, "frame_iter": 505, "listcomp": 505, "382": 505, "_encode_arrai": 505, "209": 505, "_preprocess": 505, "533": 505, "recompress": 505, "began": 506, "foundat": 506, "codedict": 506, "cid": 506, "incorrectmodalityworklistentri": 506, "mixedmodality3dcammodel": 506, "modalitytoread": 506, "othermod": 506, "128002": 506, "scheme_design": 506, "scheme_vers": 506, "underscor": 506, "sct": 506, "_1sigmalowervalueofpopul": 506, "371919006": 506, "sigma": 506, "cid270": 506, "121006": 506, "cid_for_nam": 506, "observ": 506, "observationsubjectclass": 506, "observertyp": 506, "echofindingobservationtyp": 506, "ln": 506, "fma": 506, "mdc": 506, "uml": 506, "bari": 506, "ncit": 506, "neu": 506, "ucum": 506, "radlex": 506, "ndc": 506, "itis_tsn": 506, "pubchem_cid": 506, "msh": 506, "capabl": 506, "differenti": 507, "simultan": 507, "maintain": 507, "worri": 507, "fulli": 507, "virtualenvwrapp": 507, "usr": 507, "user_script": 507, "predeactiv": 507, "postdeactiv": 507, "preactiv": 507, "postactiv": 507, "get_env_detail": 507, "workon_hom": 507, "environment": 507, "py37": 507, "rmvirtualenv": 507, "workon": 507, "antigrav": 507, "surpris": 507, "lsvirtualenv": 507, "fresh": 507, "proce": 507, "py35": 507, "condaenvironmenterror": 507, "explanatori": 508, "respiratori": 508, "interv": 508, "rhythm": 508, "khz": 508, "0200": 508, "channelsensit": 508, "einthoven": 508, "microvolt": 508, "iii": 508, "avr": 508, "avl": 508, "avf": 508, "v4": 508, "v5": 508, "v6": 508, "interleav": 508, "ch": 508, "ax1": 508, "ax2": 508, "\u03bcv": 508, "cosin": 508, "sine": 508, "chosen": 508, "pi": 508, "ch1": 508, "astyp": 508, "ch2": 508, "sin": 508, "waveformorigin": 508, "condition": 508, "opt": 508, "obvious": 508, "chdef_seq": 508, "chdef": 508, "curve_typ": 508, "channelsampleskew": 508, "waveformbitsstor": 508, "codevalu": 508, "codingschemedesign": 508, "codingschemevers": 508, "stack": 508, "axi": 508, "my_waveform": 508}, "objects": {"": [[473, 0, 0, "-", "pydicom"]], "pydicom.charset": [[73, 1, 1, "", "convert_encodings"], [74, 1, 1, "", "decode_bytes"], [75, 1, 1, "", "decode_element"], [76, 1, 1, "", "encode_string"]], "pydicom.config": [[77, 2, 1, "", "APPLY_J2K_CORRECTIONS"], [78, 1, 1, "", "DS_decimal"], [79, 1, 1, "", "DS_numpy"], [80, 2, 1, "", "IGNORE"], [81, 2, 1, "", "INVALID_KEYWORD_BEHAVIOR"], [82, 2, 1, "", "INVALID_KEY_BEHAVIOR"], [83, 2, 1, "", "RAISE"], [52, 3, 1, "", "Settings"], [84, 2, 1, "", "WARN"], [85, 2, 1, "", "allow_DS_float"], [86, 2, 1, "", "assume_implicit_vr_switch"], [87, 2, 1, "", "convert_wrong_length_to_UN"], [88, 2, 1, "", "data_element_callback"], [89, 2, 1, "", "data_element_callback_kwargs"], [90, 2, 1, "", "datetime_conversion"], [91, 1, 1, "", "debug"], [92, 2, 1, "", "enforce_valid_values"], [93, 1, 1, "", "future_behavior"], [94, 2, 1, "", "overlay_data_handlers"], [95, 2, 1, "", "pixel_data_handlers"], [96, 1, 1, "", "reset_data_element_callback"], [97, 2, 1, "", "settings"], [98, 2, 1, "", "show_file_meta"], [99, 2, 1, "", "use_DS_decimal"], [100, 2, 1, "", "use_DS_numpy"], [101, 2, 1, "", "use_IS_numpy"]], "pydicom.config.Settings": [[52, 4, 1, "", "infer_sq_for_un_vr"], [52, 4, 1, "", "reading_validation_mode"], [52, 4, 1, "", "writing_validation_mode"]], "pydicom.data": [[102, 1, 1, "", "get_charset_files"], [103, 1, 1, "", "get_palette_files"], [104, 1, 1, "", "get_testdata_file"], [105, 1, 1, "", "get_testdata_files"]], "pydicom.datadict": [[106, 1, 1, "", "add_dict_entries"], [107, 1, 1, "", "add_dict_entry"], [108, 1, 1, "", "add_private_dict_entries"], [109, 1, 1, "", "add_private_dict_entry"], [110, 1, 1, "", "dictionary_VM"], [111, 1, 1, "", "dictionary_VR"], [112, 1, 1, "", "dictionary_description"], [113, 1, 1, "", "dictionary_has_tag"], [114, 1, 1, "", "dictionary_is_retired"], [115, 1, 1, "", "dictionary_keyword"], [116, 1, 1, "", "get_entry"], [117, 1, 1, "", "get_private_entry"], [118, 1, 1, "", "keyword_for_tag"], [119, 1, 1, "", "mask_match"], [120, 1, 1, "", "private_dictionary_VM"], [121, 1, 1, "", "private_dictionary_VR"], [122, 1, 1, "", "private_dictionary_description"], [123, 1, 1, "", "repeater_has_keyword"], [124, 1, 1, "", "repeater_has_tag"], [125, 1, 1, "", "tag_for_keyword"]], "pydicom.dataelem": [[126, 3, 1, "", "DataElement"], [127, 1, 1, "", "DataElement_from_raw"], [128, 3, 1, "", "RawDataElement"]], "pydicom.dataelem.DataElement": [[126, 4, 1, "", "VM"], [126, 5, 1, "", "VR"], [126, 6, 1, "", "__init__"], [126, 6, 1, "", "clear"], [126, 5, 1, "", "descripWidth"], [126, 6, 1, "", "description"], [126, 4, 1, "", "empty_value"], [126, 6, 1, "", "from_json"], [126, 4, 1, "", "is_empty"], [126, 4, 1, "", "is_private"], [126, 4, 1, "", "is_retired"], [126, 5, 1, "", "is_undefined_length"], [126, 4, 1, "", "keyword"], [126, 5, 1, "", "maxBytesToDisplay"], [126, 4, 1, "", "name"], [126, 4, 1, "", "repval"], [126, 5, 1, "", "showVR"], [126, 5, 1, "", "tag"], [126, 6, 1, "", "to_json"], [126, 6, 1, "", "to_json_dict"], [126, 6, 1, "", "validate"], [126, 4, 1, "", "value"]], "pydicom.dataelem.RawDataElement": [[128, 5, 1, "", "VR"], [128, 6, 1, "", "__init__"], [128, 5, 1, "", "is_implicit_VR"], [128, 5, 1, "", "is_little_endian"], [128, 5, 1, "", "is_raw"], [128, 5, 1, "", "length"], [128, 5, 1, "", "tag"], [128, 5, 1, "", "value"], [128, 5, 1, "", "value_tell"]], "pydicom.dataset": [[129, 3, 1, "", "Dataset"], [130, 3, 1, "", "FileDataset"], [131, 3, 1, "", "FileMetaDataset"], [132, 3, 1, "", "PrivateBlock"], [133, 1, 1, "", "validate_file_meta"]], "pydicom.dataset.Dataset": [[129, 6, 1, "", "__init__"], [129, 6, 1, "", "add"], [129, 6, 1, "", "add_new"], [129, 6, 1, "", "clear"], [129, 6, 1, "", "compress"], [129, 6, 1, "", "convert_pixel_data"], [129, 6, 1, "", "copy"], [129, 6, 1, "", "data_element"], [129, 6, 1, "", "decode"], [129, 6, 1, "", "decompress"], [129, 5, 1, "", "default_element_format"], [129, 5, 1, "", "default_sequence_element_format"], [129, 6, 1, "", "dir"], [129, 6, 1, "", "elements"], [129, 6, 1, "", "ensure_file_meta"], [129, 6, 1, "", "fix_meta_info"], [129, 6, 1, "", "formatted_lines"], [129, 6, 1, "", "from_json"], [129, 6, 1, "", "get"], [129, 6, 1, "", "get_item"], [129, 6, 1, "", "get_private_item"], [129, 6, 1, "", "group_dataset"], [129, 5, 1, "", "indent_chars"], [129, 5, 1, "", "is_implicit_VR"], [129, 5, 1, "", "is_little_endian"], [129, 4, 1, "", "is_original_encoding"], [129, 6, 1, "", "items"], [129, 6, 1, "", "iterall"], [129, 6, 1, "", "keys"], [129, 6, 1, "", "overlay_array"], [129, 4, 1, "", "pixel_array"], [129, 6, 1, "", "pop"], [129, 6, 1, "", "popitem"], [129, 6, 1, "", "private_block"], [129, 6, 1, "", "private_creators"], [129, 6, 1, "", "remove_private_tags"], [129, 6, 1, "", "save_as"], [129, 6, 1, "", "set_original_encoding"], [129, 6, 1, "", "setdefault"], [129, 6, 1, "", "to_json"], [129, 6, 1, "", "to_json_dict"], [129, 6, 1, "", "top"], [129, 6, 1, "", "trait_names"], [129, 6, 1, "", "update"], [129, 6, 1, "", "values"], [129, 6, 1, "", "walk"], [129, 6, 1, "", "waveform_array"]], "pydicom.dataset.FileDataset": [[130, 6, 1, "", "__init__"], [130, 5, 1, "", "file_meta"], [130, 5, 1, "", "filename"], [130, 5, 1, "", "fileobj_type"], [130, 5, 1, "", "is_implicit_VR"], [130, 5, 1, "", "is_little_endian"], [130, 5, 1, "", "preamble"], [130, 5, 1, "", "timestamp"]], "pydicom.dataset.FileMetaDataset": [[131, 6, 1, "", "__init__"], [131, 6, 1, "", "validate"]], "pydicom.dataset.PrivateBlock": [[132, 6, 1, "", "__init__"], [132, 6, 1, "", "add_new"], [132, 5, 1, "", "block_start"], [132, 5, 1, "", "dataset"], [132, 6, 1, "", "get_tag"], [132, 5, 1, "", "group"], [132, 5, 1, "", "private_creator"]], "pydicom.dicomdir": [[134, 3, 1, "", "DicomDir"]], "pydicom.dicomdir.DicomDir": [[134, 6, 1, "", "__init__"], [134, 6, 1, "", "parse_records"]], "pydicom.encaps": [[135, 1, 1, "", "decode_data_sequence"], [136, 1, 1, "", "defragment_data"], [137, 1, 1, "", "encapsulate"], [138, 1, 1, "", "encapsulate_extended"], [139, 1, 1, "", "fragment_frame"], [140, 1, 1, "", "generate_pixel_data"], [141, 1, 1, "", "generate_pixel_data_fragment"], [142, 1, 1, "", "generate_pixel_data_frame"], [143, 1, 1, "", "get_frame_offsets"], [144, 1, 1, "", "itemize_fragment"], [145, 1, 1, "", "itemize_frame"], [146, 1, 1, "", "read_item"]], "pydicom": [[65, 0, 0, "-", "encoders"], [470, 0, 0, "-", "overlays"], [471, 0, 0, "-", "pixel_data_handlers"], [472, 0, 0, "-", "waveforms"]], "pydicom.encoders": [[147, 2, 1, "", "RLELosslessEncoder"], [149, 1, 1, "", "get_encoder"]], "pydicom.encoders.base": [[148, 3, 1, "", "Encoder"]], "pydicom.encoders.base.Encoder": [[148, 4, 1, "", "UID"], [148, 6, 1, "", "__init__"], [148, 6, 1, "", "add_plugin"], [148, 6, 1, "", "encode"], [148, 4, 1, "", "is_available"], [148, 6, 1, "", "iter_encode"], [148, 6, 1, "", "kwargs_from_ds"], [148, 4, 1, "", "missing_dependencies"], [148, 4, 1, "", "name"], [148, 6, 1, "", "remove_plugin"]], "pydicom.errors": [[150, 7, 1, "", "InvalidDicomError"]], "pydicom.filebase": [[151, 3, 1, "", "DicomBytesIO"], [152, 1, 1, "", "DicomFile"], [153, 3, 1, "", "DicomFileLike"], [154, 3, 1, "", "DicomIO"]], "pydicom.filebase.DicomBytesIO": [[151, 6, 1, "", "__init__"]], "pydicom.filebase.DicomFileLike": [[153, 6, 1, "", "__init__"], [153, 6, 1, "", "no_read"], [153, 6, 1, "", "no_seek"], [153, 6, 1, "", "no_write"]], "pydicom.filebase.DicomIO": [[154, 6, 1, "", "__init__"], [154, 6, 1, "", "read"], [154, 6, 1, "", "read_beUL"], [154, 6, 1, "", "read_beUS"], [154, 6, 1, "", "read_be_tag"], [154, 6, 1, "", "read_leUL"], [154, 6, 1, "", "read_leUS"], [154, 6, 1, "", "read_le_tag"], [154, 6, 1, "", "write_UL"], [154, 6, 1, "", "write_US"], [154, 6, 1, "", "write_beUL"], [154, 6, 1, "", "write_beUS"], [154, 6, 1, "", "write_leUL"], [154, 6, 1, "", "write_leUS"], [154, 6, 1, "", "write_tag"]], "pydicom.filereader": [[155, 1, 1, "", "data_element_generator"], [156, 1, 1, "", "data_element_offset_to_value"], [157, 1, 1, "", "dcmread"], [158, 1, 1, "", "read_dataset"], [159, 1, 1, "", "read_deferred_data_element"], [160, 1, 1, "", "read_dicomdir"], [161, 1, 1, "", "read_file_meta_info"], [162, 1, 1, "", "read_partial"], [163, 1, 1, "", "read_preamble"], [164, 1, 1, "", "read_sequence"], [165, 1, 1, "", "read_sequence_item"]], "pydicom.fileset": [[166, 2, 1, "", "DIRECTORY_RECORDERS"], [167, 3, 1, "", "FileInstance"], [168, 3, 1, "", "FileSet"], [169, 3, 1, "", "RecordNode"], [170, 1, 1, "", "generate_filename"], [171, 1, 1, "", "is_conformant_file_id"]], "pydicom.fileset.FileInstance": [[167, 4, 1, "", "FileID"], [167, 4, 1, "", "SOPClassUID"], [167, 4, 1, "", "SOPInstanceUID"], [167, 4, 1, "", "TransferSyntaxUID"], [167, 6, 1, "", "__init__"], [167, 4, 1, "", "file_set"], [167, 4, 1, "", "for_addition"], [167, 4, 1, "", "for_moving"], [167, 4, 1, "", "for_removal"], [167, 4, 1, "", "is_private"], [167, 4, 1, "", "is_staged"], [167, 6, 1, "", "load"], [167, 5, 1, "", "node"], [167, 4, 1, "", "path"]], "pydicom.fileset.FileSet": [[168, 4, 1, "", "ID"], [168, 4, 1, "", "UID"], [168, 6, 1, "", "__init__"], [168, 6, 1, "", "add"], [168, 6, 1, "", "add_custom"], [168, 6, 1, "", "clear"], [168, 6, 1, "", "copy"], [168, 4, 1, "", "descriptor_character_set"], [168, 4, 1, "", "descriptor_file_id"], [168, 6, 1, "", "find"], [168, 6, 1, "", "find_values"], [168, 4, 1, "", "is_staged"], [168, 6, 1, "", "load"], [168, 4, 1, "", "path"], [168, 6, 1, "", "remove"], [168, 6, 1, "", "write"]], "pydicom.fileset.RecordNode": [[169, 6, 1, "", "__init__"], [169, 6, 1, "", "add"], [169, 4, 1, "", "ancestors"], [169, 5, 1, "", "children"], [169, 4, 1, "", "component"], [169, 4, 1, "", "depth"], [169, 4, 1, "", "file_set"], [169, 4, 1, "", "has_instance"], [169, 4, 1, "", "index"], [169, 5, 1, "", "instance"], [169, 4, 1, "", "is_root"], [169, 4, 1, "", "key"], [169, 4, 1, "", "next"], [169, 4, 1, "", "parent"], [169, 6, 1, "", "prettify"], [169, 4, 1, "", "previous"], [169, 4, 1, "", "record_type"], [169, 6, 1, "", "remove"], [169, 6, 1, "", "reverse"], [169, 4, 1, "", "root"]], "pydicom.fileutil": [[172, 1, 1, "", "absorb_delimiter_item"], [173, 1, 1, "", "find_bytes"], [174, 1, 1, "", "find_delimiter"], [175, 1, 1, "", "length_of_undefined_length"], [176, 1, 1, "", "read_undefined_length_value"]], "pydicom.filewriter": [[177, 1, 1, "", "correct_ambiguous_vr"], [178, 1, 1, "", "correct_ambiguous_vr_element"], [179, 1, 1, "", "dcmwrite"], [180, 1, 1, "", "multi_string"], [181, 1, 1, "", "write_ATvalue"], [182, 1, 1, "", "write_DA"], [183, 1, 1, "", "write_DT"], [184, 1, 1, "", "write_OBvalue"], [185, 1, 1, "", "write_OWvalue"], [186, 1, 1, "", "write_PN"], [187, 1, 1, "", "write_TM"], [188, 1, 1, "", "write_UI"], [189, 1, 1, "", "write_UN"], [190, 1, 1, "", "write_data_element"], [191, 1, 1, "", "write_dataset"], [192, 1, 1, "", "write_file_meta_info"], [193, 1, 1, "", "write_number_string"], [194, 1, 1, "", "write_numbers"], [195, 1, 1, "", "write_sequence"], [196, 1, 1, "", "write_sequence_item"], [197, 1, 1, "", "write_string"], [198, 1, 1, "", "write_text"]], "pydicom.misc": [[199, 1, 1, "", "is_dicom"], [200, 1, 1, "", "size_in_bytes"]], "pydicom.multival": [[201, 3, 1, "", "MultiValue"]], "pydicom.multival.MultiValue": [[201, 6, 1, "", "__init__"], [201, 6, 1, "", "append"], [201, 6, 1, "", "extend"], [201, 6, 1, "", "insert"]], "pydicom.overlays": [[202, 0, 0, "-", "numpy_handler"]], "pydicom.overlays.numpy_handler": [[202, 1, 1, "", "get_expected_length"], [202, 1, 1, "", "get_overlay_array"], [202, 1, 1, "", "is_available"], [202, 1, 1, "", "reshape_overlay_array"]], "pydicom.pixel_data_handlers": [[203, 1, 1, "", "apply_color_lut"], [204, 1, 1, "", "apply_modality_lut"], [205, 1, 1, "", "apply_rescale"], [206, 1, 1, "", "apply_voi"], [207, 1, 1, "", "apply_voi_lut"], [208, 1, 1, "", "apply_windowing"], [209, 1, 1, "", "convert_color_space"], [210, 0, 0, "-", "gdcm_handler"], [211, 0, 0, "-", "jpeg_ls_handler"], [212, 0, 0, "-", "numpy_handler"], [213, 0, 0, "-", "pillow_handler"], [214, 0, 0, "-", "pylibjpeg_handler"], [215, 0, 0, "-", "rle_handler"], [216, 0, 0, "-", "util"]], "pydicom.pixel_data_handlers.gdcm_handler": [[210, 1, 1, "", "create_data_element"], [210, 1, 1, "", "create_image"], [210, 1, 1, "", "get_pixeldata"], [210, 1, 1, "", "is_available"], [210, 1, 1, "", "needs_to_convert_to_RGB"], [210, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [210, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.jpeg_ls_handler": [[211, 1, 1, "", "get_pixeldata"], [211, 1, 1, "", "is_available"], [211, 1, 1, "", "needs_to_convert_to_RGB"], [211, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [211, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.numpy_handler": [[212, 1, 1, "", "get_pixeldata"], [212, 1, 1, "", "is_available"], [212, 1, 1, "", "needs_to_convert_to_RGB"], [212, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [212, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pillow_handler": [[213, 1, 1, "", "get_pixeldata"], [213, 1, 1, "", "is_available"], [213, 1, 1, "", "needs_to_convert_to_RGB"], [213, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [213, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.pylibjpeg_handler": [[214, 1, 1, "", "as_array"], [214, 1, 1, "", "generate_frames"], [214, 1, 1, "", "get_pixeldata"], [214, 1, 1, "", "is_available"], [214, 1, 1, "", "needs_to_convert_to_RGB"], [214, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [214, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.rle_handler": [[215, 1, 1, "", "get_pixeldata"], [215, 1, 1, "", "is_available"], [215, 1, 1, "", "needs_to_convert_to_RGB"], [215, 1, 1, "", "rle_encode_frame"], [215, 1, 1, "", "should_change_PhotometricInterpretation_to_RGB"], [215, 1, 1, "", "supports_transfer_syntax"]], "pydicom.pixel_data_handlers.util": [[216, 1, 1, "", "apply_color_lut"], [216, 1, 1, "", "apply_modality_lut"], [216, 1, 1, "", "apply_voi"], [216, 1, 1, "", "apply_voi_lut"], [216, 1, 1, "", "apply_windowing"], [216, 1, 1, "", "convert_color_space"], [216, 1, 1, "", "dtype_corrected_for_endianness"], [216, 1, 1, "", "expand_ybr422"], [216, 1, 1, "", "get_expected_length"], [216, 1, 1, "", "get_image_pixel_ids"], [216, 1, 1, "", "get_j2k_parameters"], [216, 1, 1, "", "get_nr_frames"], [216, 1, 1, "", "pack_bits"], [216, 1, 1, "", "pixel_dtype"], [216, 1, 1, "", "reshape_pixel_array"], [216, 1, 1, "", "unpack_bits"]], "pydicom.sequence": [[217, 3, 1, "", "Sequence"], [218, 1, 1, "", "validate_dataset"]], "pydicom.sequence.Sequence": [[217, 6, 1, "", "__init__"], [217, 6, 1, "", "append"], [217, 6, 1, "", "extend"], [217, 6, 1, "", "insert"], [217, 4, 1, "", "parent"]], "pydicom.tag": [[219, 3, 1, "", "BaseTag"], [220, 1, 1, "", "Tag"], [221, 1, 1, "", "TupleTag"], [222, 1, 1, "", "tag_in_exception"]], "pydicom.tag.BaseTag": [[219, 6, 1, "", "__init__"], [219, 4, 1, "", "elem"], [219, 4, 1, "", "element"], [219, 4, 1, "", "group"], [219, 4, 1, "", "is_private"], [219, 4, 1, "", "is_private_creator"], [219, 4, 1, "", "json_key"], [219, 4, 1, "", "private_creator"]], "pydicom.uid": [[223, 2, 1, "", "AcquisitionContextSRStorage"], [224, 2, 1, "", "AdvancedBlendingPresentationStateStorage"], [225, 2, 1, "", "AllTransferSyntaxes"], [226, 2, 1, "", "AmbulatoryECGWaveformStorage"], [227, 2, 1, "", "ArterialPulseWaveformStorage"], [228, 2, 1, "", "AutorefractionMeasurementsStorage"], [229, 2, 1, "", "BasicStructuredDisplayStorage"], [230, 2, 1, "", "BasicTextSRStorage"], [231, 2, 1, "", "BasicVoiceAudioWaveformStorage"], [232, 2, 1, "", "BlendingSoftcopyPresentationStateStorage"], [233, 2, 1, "", "BodyPositionWaveformStorage"], [234, 2, 1, "", "BreastProjectionXRayImageStorageForPresentation"], [235, 2, 1, "", "BreastProjectionXRayImageStorageForProcessing"], [236, 2, 1, "", "BreastTomosynthesisImageStorage"], [237, 2, 1, "", "CArmPhotonElectronRadiationRecordStorage"], [238, 2, 1, "", "CArmPhotonElectronRadiationStorage"], [239, 2, 1, "", "CTDefinedProcedureProtocolStorage"], [240, 2, 1, "", "CTImageStorage"], [241, 2, 1, "", "CTPerformedProcedureProtocolStorage"], [242, 2, 1, "", "CardiacElectrophysiologyWaveformStorage"], [243, 2, 1, "", "ChestCADSRStorage"], [244, 2, 1, "", "ColonCADSRStorage"], [245, 2, 1, "", "ColorPaletteStorage"], [246, 2, 1, "", "ColorSoftcopyPresentationStateStorage"], [247, 2, 1, "", "CompositingPlanarMPRVolumetricPresentationStateStorage"], [248, 2, 1, "", "Comprehensive3DSRStorage"], [249, 2, 1, "", "ComprehensiveSRStorage"], [250, 2, 1, "", "ComputedRadiographyImageStorage"], [251, 2, 1, "", "ContentAssessmentResultsStorage"], [252, 2, 1, "", "CornealTopographyMapStorage"], [253, 2, 1, "", "DICOS2DAITStorage"], [254, 2, 1, "", "DICOS3DAITStorage"], [255, 2, 1, "", "DICOSCTImageStorage"], [256, 2, 1, "", "DICOSDigitalXRayImageStorageForPresentation"], [257, 2, 1, "", "DICOSDigitalXRayImageStorageForProcessing"], [258, 2, 1, "", "DICOSQuadrupoleResonanceStorage"], [259, 2, 1, "", "DICOSThreatDetectionReportStorage"], [260, 2, 1, "", "DeflatedExplicitVRLittleEndian"], [261, 2, 1, "", "DeformableSpatialRegistrationStorage"], [262, 2, 1, "", "DermoscopicPhotographyImageStorage"], [263, 2, 1, "", "DigitalIntraOralXRayImageStorageForPresentation"], [264, 2, 1, "", "DigitalIntraOralXRayImageStorageForProcessing"], [265, 2, 1, "", "DigitalMammographyXRayImageStorageForPresentation"], [266, 2, 1, "", "DigitalMammographyXRayImageStorageForProcessing"], [267, 2, 1, "", "DigitalXRayImageStorageForPresentation"], [268, 2, 1, "", "DigitalXRayImageStorageForProcessing"], [269, 2, 1, "", "EddyCurrentImageStorage"], [270, 2, 1, "", "EddyCurrentMultiFrameImageStorage"], [271, 2, 1, "", "ElectromyogramWaveformStorage"], [272, 2, 1, "", "ElectrooculogramWaveformStorage"], [273, 2, 1, "", "EncapsulatedCDAStorage"], [274, 2, 1, "", "EncapsulatedMTLStorage"], [275, 2, 1, "", "EncapsulatedOBJStorage"], [276, 2, 1, "", "EncapsulatedPDFStorage"], [277, 2, 1, "", "EncapsulatedSTLStorage"], [278, 2, 1, "", "EnhancedCTImageStorage"], [279, 2, 1, "", "EnhancedMRColorImageStorage"], [280, 2, 1, "", "EnhancedMRImageStorage"], [281, 2, 1, "", "EnhancedPETImageStorage"], [282, 2, 1, "", "EnhancedSRStorage"], [283, 2, 1, "", "EnhancedUSVolumeStorage"], [284, 2, 1, "", "EnhancedXAImageStorage"], [285, 2, 1, "", "EnhancedXRFImageStorage"], [286, 2, 1, "", "EnhancedXRayRadiationDoseSRStorage"], [287, 2, 1, "", "ExplicitVRBigEndian"], [288, 2, 1, "", "ExplicitVRLittleEndian"], [289, 2, 1, "", "ExtensibleSRStorage"], [290, 2, 1, "", "GeneralAudioWaveformStorage"], [291, 2, 1, "", "GeneralECGWaveformStorage"], [292, 2, 1, "", "GenericImplantTemplateStorage"], [293, 2, 1, "", "GrayscalePlanarMPRVolumetricPresentationStateStorage"], [294, 2, 1, "", "GrayscaleSoftcopyPresentationStateStorage"], [295, 2, 1, "", "HEVCM10P51"], [296, 2, 1, "", "HEVCMP51"], [297, 2, 1, "", "HangingProtocolStorage"], [298, 2, 1, "", "HemodynamicWaveformStorage"], [299, 2, 1, "", "ImplantAssemblyTemplateStorage"], [300, 2, 1, "", "ImplantTemplateGroupStorage"], [301, 2, 1, "", "ImplantationPlanSRStorage"], [302, 2, 1, "", "ImplicitVRLittleEndian"], [303, 2, 1, "", "IntraocularLensCalculationsStorage"], [304, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForPresentation"], [305, 2, 1, "", "IntravascularOpticalCoherenceTomographyImageStorageForProcessing"], [306, 2, 1, "", "JPEG2000"], [307, 2, 1, "", "JPEG2000Lossless"], [308, 2, 1, "", "JPEG2000MC"], [309, 2, 1, "", "JPEG2000MCLossless"], [310, 2, 1, "", "JPEG2000TransferSyntaxes"], [311, 2, 1, "", "JPEGBaseline8Bit"], [312, 2, 1, "", "JPEGExtended12Bit"], [313, 2, 1, "", "JPEGLSLossless"], [314, 2, 1, "", "JPEGLSNearLossless"], [315, 2, 1, "", "JPEGLSTransferSyntaxes"], [316, 2, 1, "", "JPEGLosslessP14"], [317, 2, 1, "", "JPEGLosslessSV1"], [318, 2, 1, "", "JPEGTransferSyntaxes"], [319, 2, 1, "", "KeratometryMeasurementsStorage"], [320, 2, 1, "", "KeyObjectSelectionDocumentStorage"], [321, 2, 1, "", "LegacyConvertedEnhancedCTImageStorage"], [322, 2, 1, "", "LegacyConvertedEnhancedMRImageStorage"], [323, 2, 1, "", "LegacyConvertedEnhancedPETImageStorage"], [324, 2, 1, "", "LensometryMeasurementsStorage"], [325, 2, 1, "", "MPEG2MPHL"], [326, 2, 1, "", "MPEG2MPML"], [327, 2, 1, "", "MPEG4HP41"], [328, 2, 1, "", "MPEG4HP41BD"], [329, 2, 1, "", "MPEG4HP422D"], [330, 2, 1, "", "MPEG4HP423D"], [331, 2, 1, "", "MPEG4HP42STEREO"], [332, 2, 1, "", "MPEGTransferSyntaxes"], [333, 2, 1, "", "MRImageStorage"], [334, 2, 1, "", "MRSpectroscopyStorage"], [335, 2, 1, "", "MacularGridThicknessAndVolumeReportStorage"], [336, 2, 1, "", "MammographyCADSRStorage"], [337, 2, 1, "", "MediaStorageDirectoryStorage"], [338, 2, 1, "", "MicroscopyBulkSimpleAnnotationsStorage"], [339, 2, 1, "", "MultiFrameGrayscaleByteSecondaryCaptureImageStorage"], [340, 2, 1, "", "MultiFrameGrayscaleWordSecondaryCaptureImageStorage"], [341, 2, 1, "", "MultiFrameSingleBitSecondaryCaptureImageStorage"], [342, 2, 1, "", "MultiFrameTrueColorSecondaryCaptureImageStorage"], [343, 2, 1, "", "MultichannelRespiratoryWaveformStorage"], [344, 2, 1, "", "MultipleVolumeRenderingVolumetricPresentationStateStorage"], [345, 2, 1, "", "NuclearMedicineImageStorage"], [346, 2, 1, "", "OphthalmicAxialMeasurementsStorage"], [347, 2, 1, "", "OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"], [348, 2, 1, "", "OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"], [349, 2, 1, "", "OphthalmicPhotography16BitImageStorage"], [350, 2, 1, "", "OphthalmicPhotography8BitImageStorage"], [351, 2, 1, "", "OphthalmicThicknessMapStorage"], [352, 2, 1, "", "OphthalmicTomographyImageStorage"], [353, 2, 1, "", "OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"], [354, 2, 1, "", "PYDICOM_IMPLEMENTATION_UID"], [355, 2, 1, "", "PYDICOM_ROOT_UID"], [356, 2, 1, "", "ParametricMapStorage"], [357, 2, 1, "", "PatientRadiationDoseSRStorage"], [358, 2, 1, "", "PerformedImagingAgentAdministrationSRStorage"], [359, 2, 1, "", "PlannedImagingAgentAdministrationSRStorage"], [360, 2, 1, "", "PositronEmissionTomographyImageStorage"], [361, 2, 1, "", "ProcedureLogStorage"], [362, 2, 1, "", "ProtocolApprovalStorage"], [363, 2, 1, "", "PseudoColorSoftcopyPresentationStateStorage"], [364, 2, 1, "", "RE_VALID_UID"], [365, 2, 1, "", "RE_VALID_UID_PREFIX"], [366, 2, 1, "", "RLELossless"], [367, 2, 1, "", "RLETransferSyntaxes"], [368, 2, 1, "", "RTBeamsDeliveryInstructionStorage"], [369, 2, 1, "", "RTBeamsTreatmentRecordStorage"], [370, 2, 1, "", "RTBrachyApplicationSetupDeliveryInstructionStorage"], [371, 2, 1, "", "RTBrachyTreatmentRecordStorage"], [372, 2, 1, "", "RTDoseStorage"], [373, 2, 1, "", "RTImageStorage"], [374, 2, 1, "", "RTIonBeamsTreatmentRecordStorage"], [375, 2, 1, "", "RTIonPlanStorage"], [376, 2, 1, "", "RTPhysicianIntentStorage"], [377, 2, 1, "", "RTPlanStorage"], [378, 2, 1, "", "RTRadiationRecordSetStorage"], [379, 2, 1, "", "RTRadiationSalvageRecordStorage"], [380, 2, 1, "", "RTRadiationSetDeliveryInstructionStorage"], [381, 2, 1, "", "RTRadiationSetStorage"], [382, 2, 1, "", "RTSegmentAnnotationStorage"], [383, 2, 1, "", "RTStructureSetStorage"], [384, 2, 1, "", "RTTreatmentPreparationStorage"], [385, 2, 1, "", "RTTreatmentSummaryRecordStorage"], [386, 2, 1, "", "RadiopharmaceuticalRadiationDoseSRStorage"], [387, 2, 1, "", "RawDataStorage"], [388, 2, 1, "", "RealWorldValueMappingStorage"], [389, 2, 1, "", "RespiratoryWaveformStorage"], [390, 2, 1, "", "RoboticArmRadiationStorage"], [391, 2, 1, "", "RoboticRadiationRecordStorage"], [392, 2, 1, "", "RoutineScalpElectroencephalogramWaveformStorage"], [393, 2, 1, "", "SecondaryCaptureImageStorage"], [394, 2, 1, "", "SegmentationStorage"], [395, 2, 1, "", "SegmentedVolumeRenderingVolumetricPresentationStateStorage"], [396, 2, 1, "", "SimplifiedAdultEchoSRStorage"], [397, 2, 1, "", "SleepElectroencephalogramWaveformStorage"], [398, 2, 1, "", "SpatialFiducialsStorage"], [399, 2, 1, "", "SpatialRegistrationStorage"], [400, 2, 1, "", "SpectaclePrescriptionReportStorage"], [401, 2, 1, "", "StereometricRelationshipStorage"], [402, 2, 1, "", "SubjectiveRefractionMeasurementsStorage"], [403, 2, 1, "", "SurfaceScanMeshStorage"], [404, 2, 1, "", "SurfaceScanPointCloudStorage"], [405, 2, 1, "", "SurfaceSegmentationStorage"], [406, 2, 1, "", "TomotherapeuticRadiationRecordStorage"], [407, 2, 1, "", "TomotherapeuticRadiationStorage"], [408, 2, 1, "", "TractographyResultsStorage"], [409, 2, 1, "", "TwelveLeadECGWaveformStorage"], [410, 3, 1, "", "UID"], [411, 2, 1, "", "UltrasoundImageStorage"], [412, 2, 1, "", "UltrasoundMultiFrameImageStorage"], [413, 2, 1, "", "UncompressedTransferSyntaxes"], [414, 2, 1, "", "VLEndoscopicImageStorage"], [415, 2, 1, "", "VLMicroscopicImageStorage"], [416, 2, 1, "", "VLPhotographicImageStorage"], [417, 2, 1, "", "VLSlideCoordinatesMicroscopicImageStorage"], [418, 2, 1, "", "VLWholeSlideMicroscopyImageStorage"], [419, 2, 1, "", "VideoEndoscopicImageStorage"], [420, 2, 1, "", "VideoMicroscopicImageStorage"], [421, 2, 1, "", "VideoPhotographicImageStorage"], [422, 2, 1, "", "VisualAcuityMeasurementsStorage"], [423, 2, 1, "", "VolumeRenderingVolumetricPresentationStateStorage"], [424, 2, 1, "", "WideFieldOphthalmicPhotography3DCoordinatesImageStorage"], [425, 2, 1, "", "WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"], [426, 2, 1, "", "XADefinedProcedureProtocolStorage"], [427, 2, 1, "", "XAPerformedProcedureProtocolStorage"], [428, 2, 1, "", "XAXRFGrayscaleSoftcopyPresentationStateStorage"], [429, 2, 1, "", "XRay3DAngiographicImageStorage"], [430, 2, 1, "", "XRay3DCraniofacialImageStorage"], [431, 2, 1, "", "XRayAngiographicImageStorage"], [432, 2, 1, "", "XRayRadiationDoseSRStorage"], [433, 2, 1, "", "XRayRadiofluoroscopicImageStorage"], [434, 1, 1, "", "generate_uid"]], "pydicom.uid.UID": [[410, 6, 1, "", "__init__"], [410, 4, 1, "", "info"], [410, 4, 1, "", "is_compressed"], [410, 4, 1, "", "is_deflated"], [410, 4, 1, "", "is_encapsulated"], [410, 4, 1, "", "is_implicit_VR"], [410, 4, 1, "", "is_little_endian"], [410, 4, 1, "", "is_private"], [410, 4, 1, "", "is_retired"], [410, 4, 1, "", "is_transfer_syntax"], [410, 4, 1, "", "is_valid"], [410, 4, 1, "", "keyword"], [410, 4, 1, "", "name"], [410, 4, 1, "", "type"]], "pydicom.valuerep": [[435, 3, 1, "", "DA"], [436, 1, 1, "", "DS"], [437, 3, 1, "", "DSdecimal"], [438, 3, 1, "", "DSfloat"], [439, 3, 1, "", "DT"], [440, 3, 1, "", "IS"], [441, 1, 1, "", "MultiString"], [442, 3, 1, "", "PersonName"], [443, 5, 1, "", "PersonNameUnicode"], [444, 3, 1, "", "TM"], [445, 3, 1, "", "VR"], [446, 1, 1, "", "format_number_as_ds"], [447, 1, 1, "", "is_valid_ds"]], "pydicom.valuerep.DA": [[435, 6, 1, "", "__init__"]], "pydicom.valuerep.DSdecimal": [[437, 6, 1, "", "__init__"]], "pydicom.valuerep.DSfloat": [[438, 6, 1, "", "__init__"]], "pydicom.valuerep.DT": [[439, 6, 1, "", "__init__"]], "pydicom.valuerep.IS": [[440, 6, 1, "", "__init__"]], "pydicom.valuerep.PersonName": [[442, 6, 1, "", "__init__"], [442, 4, 1, "", "alphabetic"], [442, 4, 1, "", "components"], [442, 6, 1, "", "decode"], [442, 6, 1, "", "encode"], [442, 6, 1, "", "family_comma_given"], [442, 4, 1, "", "family_name"], [442, 6, 1, "", "formatted"], [442, 6, 1, "", "from_named_components"], [442, 6, 1, "", "from_named_components_veterinary"], [442, 4, 1, "", "given_name"], [442, 4, 1, "", "ideographic"], [442, 4, 1, "", "middle_name"], [442, 4, 1, "", "name_prefix"], [442, 4, 1, "", "name_suffix"], [442, 4, 1, "", "phonetic"]], "pydicom.valuerep.TM": [[444, 6, 1, "", "__init__"]], "pydicom.valuerep.VR": [[445, 6, 1, "", "__init__"]], "pydicom.values": [[448, 1, 1, "", "convert_AE_string"], [449, 1, 1, "", "convert_ATvalue"], [450, 1, 1, "", "convert_DA_string"], [451, 1, 1, "", "convert_DS_string"], [452, 1, 1, "", "convert_DT_string"], [453, 1, 1, "", "convert_IS_string"], [454, 1, 1, "", "convert_OBvalue"], [455, 1, 1, "", "convert_OWvalue"], [456, 1, 1, "", "convert_PN"], [457, 1, 1, "", "convert_SQ"], [458, 1, 1, "", "convert_TM_string"], [459, 1, 1, "", "convert_UI"], [460, 1, 1, "", "convert_UN"], [461, 1, 1, "", "convert_UR_string"], [462, 1, 1, "", "convert_numbers"], [463, 1, 1, "", "convert_single_string"], [464, 1, 1, "", "convert_string"], [465, 1, 1, "", "convert_tag"], [466, 1, 1, "", "convert_text"], [467, 1, 1, "", "convert_value"]], "pydicom.waveforms": [[468, 0, 0, "-", "numpy_handler"]], "pydicom.waveforms.numpy_handler": [[468, 1, 1, "", "generate_multiplex"], [468, 1, 1, "", "is_available"], [468, 1, 1, "", "multiplex_array"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:method", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"show": [0, 13, 24, 26], "dicom": [0, 9, 10, 11, 14, 15, 18, 21, 22, 24, 37, 44, 50, 54, 72, 502, 504, 508], "file": [0, 9, 15, 18, 22, 24, 44, 50, 72, 476, 480, 483, 484, 502, 504], "us": [0, 1, 21, 38, 39, 46, 50, 504, 505, 507], "hierarch": 0, "tree": 0, "downsiz": 1, "mri": 1, "imag": [1, 3, 5, 31, 32, 46], "pydicom": [1, 21, 22, 24, 25, 26, 28, 35, 36, 37, 38, 39, 41, 42, 45, 46, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 474, 475, 497, 504, 505], "decod": [2, 51, 63, 508], "plot": [2, 3, 7], "waveform": [2, 49, 468, 472, 508], "data": [2, 6, 7, 11, 15, 29, 30, 39, 40, 41, 47, 48, 49, 53, 54, 57, 58, 64, 65, 102, 103, 104, 105, 469, 470, 471, 472, 501, 505, 508], "load": [3, 502], "ct": 3, "slice": 3, "axial": 3, "sagitt": 3, "coron": 3, "comput": [4, 12, 17, 19], "time": [4, 12, 17, 19], "gener": [5, 21, 34], "exampl": [5, 22, 24, 31, 35, 500, 504], "process": 5, "input": 5, "output": [5, 6], "metadata": 5, "format": [6, 501], "set": [6, 9, 41, 72, 97, 502], "print": 6, "read": [7, 8, 9, 10, 44, 69, 500], "dataset": [7, 8, 13, 36, 39, 47, 48, 49, 53, 55, 67, 69, 71, 129, 130, 131, 132, 133, 500, 501], "pixel": [7, 29, 30, 31, 32, 39, 40, 48, 65, 469, 471, 505], "dicomdir": [8, 56, 134, 502], "rtplan": 10, "list": [10, 475], "inform": 10, "write": [11, 34, 44, 50, 71, 498, 500], "work": [13, 16, 47, 48, 49, 501], "memori": 13, "base": [13, 68, 148], "add": 14, "dictionari": [14, 54], "item": 14, "standard": [14, 500], "anonym": 15, "singl": 15, "sequenc": [16, 36, 60, 217, 218, 500], "analys": 18, "differ": 18, "between": 18, "displai": [20, 41], "unicod": 20, "person": 20, "name": [20, 45], "frequent": 21, "ask": 21, "question": 21, "what": [21, 498, 499], "happen": [21, 498, 499], "import": 21, "how": [21, 504], "do": 21, "i": 21, "cite": 21, "instal": [21, 24, 25, 38, 498, 504, 507], "ar": 21, "s": 21, "prerequisit": 21, "requir": [21, 29, 45, 498], "option": [21, 22, 24, 28, 52, 498, 504], "version": [21, 37, 45, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 504], "python": [21, 27, 43, 46], "can": 21, "about": 21, "support": [21, 38, 39, 40, 43, 501], "2": [21, 43, 476, 477, 487, 491, 492, 493, 494, 495, 496], "7": [21, 476, 482], "codifi": [22, 24, 50], "command": [22, 24, 26], "A": [22, 24], "simpl": [22, 24], "part": [22, 24], "extend": [23, 24], "cli": [23, 24, 25], "line": 24, "interfac": 24, "guid": [24, 33, 35, 42], "introduct": [24, 25, 37, 38, 41, 45, 46, 47, 48, 49, 50, 501, 505], "combin": [24, 25], "other": [24, 25, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486], "element": [27, 36, 41, 57, 58, 59, 60, 61, 62, 63, 500], "vr": [27, 445], "type": [27, 34], "encod": [28, 29, 30, 31, 51, 65, 147, 148, 149, 508], "plugin": [28, 29, 31], "gdcm": [28, 504], "pylibjpeg": [28, 504], "ad": [29, 500, 502], "an": 29, "rle": 31, "lossless": 31, "valid": [31, 37], "paramet": 31, "avail": 31, "glossari": 32, "modul": [32, 45], "document": [34, 35, 476, 488, 498, 499], "style": 34, "guidelin": 34, "restructuredtext": 34, "get": [35, 53, 500], "start": 35, "user": [35, 42], "api": [35, 45, 473], "refer": [35, 473], "core": 36, "datael": [36, 126], "tag": [36, 61, 219, 220, 221, 222], "best": 37, "practic": 37, "enforc": 37, "futur": 37, "proof": 37, "your": [37, 498, 499], "code": [37, 498], "limit": 37, "major": [37, 476, 477, 478, 479, 480, 481, 482, 483, 485], "packag": [37, 39, 45, 505, 507], "licens": 38, "next": [38, 498, 499, 500], "step": [38, 500, 507], "compress": [39, 40, 505], "third": [39, 505], "parti": [39, 505], "transfer": [39, 40, 475], "syntax": [39, 40, 475], "handl": 40, "precondit": 40, "usag": 40, "privat": [41, 54], "remov": [41, 45, 502], "all": 41, "pars": [44, 64], "transit": 45, "1": [45, 476, 485, 486, 487, 488, 489, 490, 492, 493], "x": 45, "For": 45, "author": 45, "0": [45, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496], "error": [45, 66, 150], "messag": 45, "relat": 45, "chang": [45, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 488, 489, 490, 492, 494, 495, 498, 499, 502], "function": 45, "variabl": 45, "behavior": 45, "view": [46, 500], "matplotlib": 46, "tkinter": 46, "librari": [46, 498, 504], "pil": 46, "wxpython": 46, "overlai": [47, 202, 470], "overlay_arrai": 47, "pixel_arrai": 48, "color": 48, "space": 48, "palett": 48, "modal": 48, "lut": 48, "rescal": 48, "oper": 48, "voi": 48, "window": 48, "waveform_arrai": 49, "from": [50, 501], "scratch": 50, "charact": 51, "charset": [51, 73, 74, 75, 76], "configur": 52, "config": [52, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101], "includ": 53, "util": [54, 64, 70, 216, 469, 475], "datadict": [54, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "represent": [55, 57, 59, 60, 62], "dataelem": [58, 126, 127, 128], "multi": 59, "valu": [59, 60, 62, 63, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "multiv": [59, 201], "special": 62, "valuerep": [62, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "bulk": [64, 469], "encapsul": [64, 137, 505], "encap": [64, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "creat": [64, 498, 499, 501, 502, 507], "except": 66, "io": [67, 68, 70], "class": [68, 475], "filebas": [68, 151, 152, 153, 154], "fileread": [69, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "fileutil": [70, 172, 173, 174, 175, 176], "filewrit": [71, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "fileset": [72, 166, 167, 168, 169, 170, 171, 502], "convert_encod": 73, "decode_byt": 74, "decode_el": 75, "encode_str": 76, "apply_j2k_correct": 77, "ds_decim": 78, "ds_numpi": 79, "ignor": 80, "invalid_keyword_behavior": 81, "invalid_key_behavior": 82, "rais": 83, "warn": 84, "allow_ds_float": 85, "assume_implicit_vr_switch": 86, "convert_wrong_length_to_un": 87, "data_element_callback": 88, "data_element_callback_kwarg": 89, "datetime_convers": 90, "debug": 91, "enforce_valid_valu": 92, "future_behavior": 93, "overlay_data_handl": 94, "pixel_data_handl": [95, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 471], "reset_data_element_callback": 96, "show_file_meta": 98, "use_ds_decim": 99, "use_ds_numpi": 100, "use_is_numpi": 101, "get_charset_fil": 102, "get_palette_fil": 103, "get_testdata_fil": [104, 105], "add_dict_entri": [106, 107], "add_private_dict_entri": [108, 109], "dictionary_vm": 110, "dictionary_vr": 111, "dictionary_descript": 112, "dictionary_has_tag": 113, "dictionary_is_retir": 114, "dictionary_keyword": 115, "get_entri": 116, "get_private_entri": 117, "keyword_for_tag": 118, "mask_match": 119, "private_dictionary_vm": 120, "private_dictionary_vr": 121, "private_dictionary_descript": 122, "repeater_has_keyword": 123, "repeater_has_tag": 124, "tag_for_keyword": 125, "dataelement_from_raw": 127, "rawdatael": 128, "filedataset": 130, "filemetadataset": 131, "privateblock": 132, "validate_file_meta": 133, "decode_data_sequ": 135, "defragment_data": 136, "encapsulate_extend": 138, "fragment_fram": 139, "generate_pixel_data": 140, "generate_pixel_data_frag": 141, "generate_pixel_data_fram": 142, "get_frame_offset": 143, "itemize_frag": 144, "itemize_fram": 145, "read_item": 146, "rlelosslessencod": 147, "get_encod": 149, "invaliddicomerror": 150, "dicombytesio": 151, "dicomfil": 152, "dicomfilelik": 153, "dicomio": 154, "data_element_gener": 155, "data_element_offset_to_valu": 156, "dcmread": 157, "read_dataset": 158, "read_deferred_data_el": 159, "read_dicomdir": 160, "read_file_meta_info": 161, "read_parti": 162, "read_preambl": 163, "read_sequ": 164, "read_sequence_item": 165, "directory_record": 166, "fileinst": 167, "recordnod": 169, "generate_filenam": 170, "is_conformant_file_id": 171, "absorb_delimiter_item": 172, "find_byt": 173, "find_delimit": 174, "length_of_undefined_length": 175, "read_undefined_length_valu": 176, "correct_ambiguous_vr": 177, "correct_ambiguous_vr_el": 178, "dcmwrite": 179, "multi_str": 180, "write_atvalu": 181, "write_da": 182, "write_dt": 183, "write_obvalu": 184, "write_owvalu": 185, "write_pn": 186, "write_tm": 187, "write_ui": 188, "write_un": 189, "write_data_el": 190, "write_dataset": 191, "write_file_meta_info": 192, "write_number_str": 193, "write_numb": 194, "write_sequ": 195, "write_sequence_item": 196, "write_str": 197, "write_text": 198, "misc": [199, 200, 474], "is_dicom": 199, "size_in_byt": 200, "multivalu": 201, "numpy_handl": [202, 212, 468], "apply_color_lut": 203, "apply_modality_lut": 204, "apply_rescal": 205, "apply_voi": 206, "apply_voi_lut": 207, "apply_window": 208, "convert_color_spac": 209, "gdcm_handler": 210, "jpeg_ls_handl": 211, "pillow_handl": 213, "pylibjpeg_handl": 214, "rle_handl": 215, "validate_dataset": 218, "basetag": 219, "tupletag": 221, "tag_in_except": 222, "uid": [223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 475], "acquisitioncontextsrstorag": 223, "advancedblendingpresentationstatestorag": 224, "alltransfersyntax": 225, "ambulatoryecgwaveformstorag": 226, "arterialpulsewaveformstorag": 227, "autorefractionmeasurementsstorag": 228, "basicstructureddisplaystorag": 229, "basictextsrstorag": 230, "basicvoiceaudiowaveformstorag": 231, "blendingsoftcopypresentationstatestorag": 232, "bodypositionwaveformstorag": 233, "breastprojectionxrayimagestorageforpresent": 234, "breastprojectionxrayimagestorageforprocess": 235, "breasttomosynthesisimagestorag": 236, "carmphotonelectronradiationrecordstorag": 237, "carmphotonelectronradiationstorag": 238, "ctdefinedprocedureprotocolstorag": 239, "ctimagestorag": 240, "ctperformedprocedureprotocolstorag": 241, "cardiacelectrophysiologywaveformstorag": 242, "chestcadsrstorag": 243, "coloncadsrstorag": 244, "colorpalettestorag": 245, "colorsoftcopypresentationstatestorag": 246, "compositingplanarmprvolumetricpresentationstatestorag": 247, "comprehensive3dsrstorag": 248, "comprehensivesrstorag": 249, "computedradiographyimagestorag": 250, "contentassessmentresultsstorag": 251, "cornealtopographymapstorag": 252, "dicos2daitstorag": 253, "dicos3daitstorag": 254, "dicosctimagestorag": 255, "dicosdigitalxrayimagestorageforpresent": 256, "dicosdigitalxrayimagestorageforprocess": 257, "dicosquadrupoleresonancestorag": 258, "dicosthreatdetectionreportstorag": 259, "deflatedexplicitvrlittleendian": 260, "deformablespatialregistrationstorag": 261, "dermoscopicphotographyimagestorag": 262, "digitalintraoralxrayimagestorageforpresent": 263, "digitalintraoralxrayimagestorageforprocess": 264, "digitalmammographyxrayimagestorageforpresent": 265, "digitalmammographyxrayimagestorageforprocess": 266, "digitalxrayimagestorageforpresent": 267, "digitalxrayimagestorageforprocess": 268, "eddycurrentimagestorag": 269, "eddycurrentmultiframeimagestorag": 270, "electromyogramwaveformstorag": 271, "electrooculogramwaveformstorag": 272, "encapsulatedcdastorag": 273, "encapsulatedmtlstorag": 274, "encapsulatedobjstorag": 275, "encapsulatedpdfstorag": 276, "encapsulatedstlstorag": 277, "enhancedctimagestorag": 278, "enhancedmrcolorimagestorag": 279, "enhancedmrimagestorag": 280, "enhancedpetimagestorag": 281, "enhancedsrstorag": 282, "enhancedusvolumestorag": 283, "enhancedxaimagestorag": 284, "enhancedxrfimagestorag": 285, "enhancedxrayradiationdosesrstorag": 286, "explicitvrbigendian": 287, "explicitvrlittleendian": 288, "extensiblesrstorag": 289, "generalaudiowaveformstorag": 290, "generalecgwaveformstorag": 291, "genericimplanttemplatestorag": 292, "grayscaleplanarmprvolumetricpresentationstatestorag": 293, "grayscalesoftcopypresentationstatestorag": 294, "hevcm10p51": 295, "hevcmp51": 296, "hangingprotocolstorag": 297, "hemodynamicwaveformstorag": 298, "implantassemblytemplatestorag": 299, "implanttemplategroupstorag": 300, "implantationplansrstorag": 301, "implicitvrlittleendian": 302, "intraocularlenscalculationsstorag": 303, "intravascularopticalcoherencetomographyimagestorageforpresent": 304, "intravascularopticalcoherencetomographyimagestorageforprocess": 305, "jpeg2000": 306, "jpeg2000lossless": 307, "jpeg2000mc": 308, "jpeg2000mclossless": 309, "jpeg2000transfersyntax": 310, "jpegbaseline8bit": 311, "jpegextended12bit": 312, "jpeglslossless": 313, "jpeglsnearlossless": 314, "jpeglstransfersyntax": 315, "jpeglosslessp14": 316, "jpeglosslesssv1": 317, "jpegtransfersyntax": 318, "keratometrymeasurementsstorag": 319, "keyobjectselectiondocumentstorag": 320, "legacyconvertedenhancedctimagestorag": 321, "legacyconvertedenhancedmrimagestorag": 322, "legacyconvertedenhancedpetimagestorag": 323, "lensometrymeasurementsstorag": 324, "mpeg2mphl": 325, "mpeg2mpml": 326, "mpeg4hp41": 327, "mpeg4hp41bd": 328, "mpeg4hp422d": 329, "mpeg4hp423d": 330, "mpeg4hp42stereo": 331, "mpegtransfersyntax": 332, "mrimagestorag": 333, "mrspectroscopystorag": 334, "maculargridthicknessandvolumereportstorag": 335, "mammographycadsrstorag": 336, "mediastoragedirectorystorag": 337, "microscopybulksimpleannotationsstorag": 338, "multiframegrayscalebytesecondarycaptureimagestorag": 339, "multiframegrayscalewordsecondarycaptureimagestorag": 340, "multiframesinglebitsecondarycaptureimagestorag": 341, "multiframetruecolorsecondarycaptureimagestorag": 342, "multichannelrespiratorywaveformstorag": 343, "multiplevolumerenderingvolumetricpresentationstatestorag": 344, "nuclearmedicineimagestorag": 345, "ophthalmicaxialmeasurementsstorag": 346, "ophthalmicopticalcoherencetomographybscanvolumeanalysisstorag": 347, "ophthalmicopticalcoherencetomographyenfaceimagestorag": 348, "ophthalmicphotography16bitimagestorag": 349, "ophthalmicphotography8bitimagestorag": 350, "ophthalmicthicknessmapstorag": 351, "ophthalmictomographyimagestorag": 352, "ophthalmicvisualfieldstaticperimetrymeasurementsstorag": 353, "pydicom_implementation_uid": 354, "pydicom_root_uid": 355, "parametricmapstorag": 356, "patientradiationdosesrstorag": 357, "performedimagingagentadministrationsrstorag": 358, "plannedimagingagentadministrationsrstorag": 359, "positronemissiontomographyimagestorag": 360, "procedurelogstorag": 361, "protocolapprovalstorag": 362, "pseudocolorsoftcopypresentationstatestorag": 363, "re_valid_uid": 364, "re_valid_uid_prefix": 365, "rlelossless": 366, "rletransfersyntax": 367, "rtbeamsdeliveryinstructionstorag": 368, "rtbeamstreatmentrecordstorag": 369, "rtbrachyapplicationsetupdeliveryinstructionstorag": 370, "rtbrachytreatmentrecordstorag": 371, "rtdosestorag": 372, "rtimagestorag": 373, "rtionbeamstreatmentrecordstorag": 374, "rtionplanstorag": 375, "rtphysicianintentstorag": 376, "rtplanstorag": 377, "rtradiationrecordsetstorag": 378, "rtradiationsalvagerecordstorag": 379, "rtradiationsetdeliveryinstructionstorag": 380, "rtradiationsetstorag": 381, "rtsegmentannotationstorag": 382, "rtstructuresetstorag": 383, "rttreatmentpreparationstorag": 384, "rttreatmentsummaryrecordstorag": 385, "radiopharmaceuticalradiationdosesrstorag": 386, "rawdatastorag": 387, "realworldvaluemappingstorag": 388, "respiratorywaveformstorag": 389, "roboticarmradiationstorag": 390, "roboticradiationrecordstorag": 391, "routinescalpelectroencephalogramwaveformstorag": 392, "secondarycaptureimagestorag": 393, "segmentationstorag": 394, "segmentedvolumerenderingvolumetricpresentationstatestorag": 395, "simplifiedadultechosrstorag": 396, "sleepelectroencephalogramwaveformstorag": 397, "spatialfiducialsstorag": 398, "spatialregistrationstorag": 399, "spectacleprescriptionreportstorag": 400, "stereometricrelationshipstorag": 401, "subjectiverefractionmeasurementsstorag": 402, "surfacescanmeshstorag": 403, "surfacescanpointcloudstorag": 404, "surfacesegmentationstorag": 405, "tomotherapeuticradiationrecordstorag": 406, "tomotherapeuticradiationstorag": 407, "tractographyresultsstorag": 408, "twelveleadecgwaveformstorag": 409, "ultrasoundimagestorag": 411, "ultrasoundmultiframeimagestorag": 412, "uncompressedtransfersyntax": 413, "vlendoscopicimagestorag": 414, "vlmicroscopicimagestorag": 415, "vlphotographicimagestorag": 416, "vlslidecoordinatesmicroscopicimagestorag": 417, "vlwholeslidemicroscopyimagestorag": 418, "videoendoscopicimagestorag": 419, "videomicroscopicimagestorag": 420, "videophotographicimagestorag": 421, "visualacuitymeasurementsstorag": 422, "volumerenderingvolumetricpresentationstatestorag": 423, "widefieldophthalmicphotography3dcoordinatesimagestorag": 424, "widefieldophthalmicphotographystereographicprojectionimagestorag": 425, "xadefinedprocedureprotocolstorag": 426, "xaperformedprocedureprotocolstorag": 427, "xaxrfgrayscalesoftcopypresentationstatestorag": 428, "xray3dangiographicimagestorag": 429, "xray3dcraniofacialimagestorag": 430, "xrayangiographicimagestorag": 431, "xrayradiationdosesrstorag": 432, "xrayradiofluoroscopicimagestorag": 433, "generate_uid": 434, "da": 435, "ds": 436, "dsdecim": 437, "dsfloat": 438, "dt": 439, "IS": 440, "multistr": 441, "personnam": 442, "personnameunicod": 443, "tm": 444, "format_number_as_d": 446, "is_valid_d": 447, "convert_ae_str": 448, "convert_atvalu": 449, "convert_da_str": 450, "convert_ds_str": 451, "convert_dt_str": 452, "convert_is_str": 453, "convert_obvalu": 454, "convert_owvalu": 455, "convert_pn": 456, "convert_sq": 457, "convert_tm_str": 458, "convert_ui": 459, "convert_un": 460, "convert_ur_str": 461, "convert_numb": 462, "convert_single_str": 463, "convert_str": 464, "convert_tag": 465, "convert_text": 466, "convert_valu": 467, "handler": [469, 470, 471, 472], "miscellan": 474, "definit": 475, "storag": 475, "sop": [475, 502], "releas": [476, 480, 504], "note": 476, "4": [476, 479, 489, 490, 496], "enhanc": [476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496], "fix": [476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "3": [476, 478, 488, 495], "changelog": [476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "infrastructur": [476, 485], "9": [476, 477, 478, 479, 480, 481, 482, 483, 484], "contrib": [476, 480, 483, 484], "contributor": [476, 484], "8": [476, 483], "bug": [476, 477, 478, 479, 481, 482, 483], "6": [476, 481], "5": [476, 480], "thi": [476, 479, 480], "new": [476, 480, 498, 499, 502, 507], "addit": [476, 479], "contribut": [497, 498, 499], "sourc": 498, "download": [498, 499, 504], "current": 498, "pytest": 498, "run": 498, "test": [498, 504], "suit": 498, "branch": [498, 499], "make": [498, 499], "preview": [498, 499], "commit": [498, 499], "pull": [498, 499], "request": [498, 499], "build": 499, "basic": 500, "access": 500, "modifi": [500, 502], "our": 500, "file_meta": 500, "ani": 500, "categori": 500, "delet": [500, 507], "json": 501, "convert": 501, "larg": 501, "binari": 501, "The": 502, "exist": 502, "stage": 502, "instanc": 502, "appli": 502, "conclus": 502, "tutori": 503, "offici": 504, "pip": [504, 507], "conda": [504, 507], "pillow": 504, "charpyl": 504, "develop": 504, "structur": 506, "report": 506, "manag": 507, "virtual": 507, "environ": 507, "activ": 507, "deactiv": 507, "final": 507}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 56}})